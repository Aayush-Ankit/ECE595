I0428 20:07:57.396981 31275 caffe.cpp:218] Using GPUs 0
I0428 20:07:57.443856 31275 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:57.952656 31275 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1070.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:57.952793 31275 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1070.prototxt
I0428 20:07:57.953200 31275 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:57.953218 31275 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:57.953315 31275 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:57.953390 31275 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:57.953491 31275 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:57.953514 31275 net.cpp:86] Creating Layer mnist
I0428 20:07:57.953521 31275 net.cpp:382] mnist -> data
I0428 20:07:57.953543 31275 net.cpp:382] mnist -> label
I0428 20:07:57.954628 31275 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:57.957067 31275 net.cpp:124] Setting up mnist
I0428 20:07:57.957084 31275 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:57.957092 31275 net.cpp:131] Top shape: 64 (64)
I0428 20:07:57.957095 31275 net.cpp:139] Memory required for data: 200960
I0428 20:07:57.957103 31275 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:57.957118 31275 net.cpp:86] Creating Layer conv0
I0428 20:07:57.957139 31275 net.cpp:408] conv0 <- data
I0428 20:07:57.957150 31275 net.cpp:382] conv0 -> conv0
I0428 20:07:58.214010 31275 net.cpp:124] Setting up conv0
I0428 20:07:58.214051 31275 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:58.214054 31275 net.cpp:139] Memory required for data: 3887360
I0428 20:07:58.214069 31275 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:58.214082 31275 net.cpp:86] Creating Layer pool0
I0428 20:07:58.214085 31275 net.cpp:408] pool0 <- conv0
I0428 20:07:58.214090 31275 net.cpp:382] pool0 -> pool0
I0428 20:07:58.214134 31275 net.cpp:124] Setting up pool0
I0428 20:07:58.214140 31275 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:58.214143 31275 net.cpp:139] Memory required for data: 4808960
I0428 20:07:58.214145 31275 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:58.214155 31275 net.cpp:86] Creating Layer conv1
I0428 20:07:58.214159 31275 net.cpp:408] conv1 <- pool0
I0428 20:07:58.214164 31275 net.cpp:382] conv1 -> conv1
I0428 20:07:58.216841 31275 net.cpp:124] Setting up conv1
I0428 20:07:58.216871 31275 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:58.216876 31275 net.cpp:139] Memory required for data: 4972800
I0428 20:07:58.216884 31275 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:58.216892 31275 net.cpp:86] Creating Layer pool1
I0428 20:07:58.216895 31275 net.cpp:408] pool1 <- conv1
I0428 20:07:58.216899 31275 net.cpp:382] pool1 -> pool1
I0428 20:07:58.216939 31275 net.cpp:124] Setting up pool1
I0428 20:07:58.216944 31275 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:58.216948 31275 net.cpp:139] Memory required for data: 5013760
I0428 20:07:58.216950 31275 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:58.216959 31275 net.cpp:86] Creating Layer ip1
I0428 20:07:58.216962 31275 net.cpp:408] ip1 <- pool1
I0428 20:07:58.216967 31275 net.cpp:382] ip1 -> ip1
I0428 20:07:58.217916 31275 net.cpp:124] Setting up ip1
I0428 20:07:58.217927 31275 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:58.217947 31275 net.cpp:139] Memory required for data: 5016320
I0428 20:07:58.217954 31275 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:58.217962 31275 net.cpp:86] Creating Layer relu1
I0428 20:07:58.217965 31275 net.cpp:408] relu1 <- ip1
I0428 20:07:58.217970 31275 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:58.218158 31275 net.cpp:124] Setting up relu1
I0428 20:07:58.218166 31275 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:58.218169 31275 net.cpp:139] Memory required for data: 5018880
I0428 20:07:58.218173 31275 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:58.218179 31275 net.cpp:86] Creating Layer ip2
I0428 20:07:58.218183 31275 net.cpp:408] ip2 <- ip1
I0428 20:07:58.218186 31275 net.cpp:382] ip2 -> ip2
I0428 20:07:58.218282 31275 net.cpp:124] Setting up ip2
I0428 20:07:58.218288 31275 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:58.218291 31275 net.cpp:139] Memory required for data: 5025280
I0428 20:07:58.218297 31275 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:58.218303 31275 net.cpp:86] Creating Layer relu2
I0428 20:07:58.218307 31275 net.cpp:408] relu2 <- ip2
I0428 20:07:58.218310 31275 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:58.219077 31275 net.cpp:124] Setting up relu2
I0428 20:07:58.219105 31275 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:58.219108 31275 net.cpp:139] Memory required for data: 5031680
I0428 20:07:58.219111 31275 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:58.219118 31275 net.cpp:86] Creating Layer ip3
I0428 20:07:58.219123 31275 net.cpp:408] ip3 <- ip2
I0428 20:07:58.219130 31275 net.cpp:382] ip3 -> ip3
I0428 20:07:58.219244 31275 net.cpp:124] Setting up ip3
I0428 20:07:58.219250 31275 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:58.219254 31275 net.cpp:139] Memory required for data: 5034240
I0428 20:07:58.219261 31275 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:58.219265 31275 net.cpp:86] Creating Layer relu3
I0428 20:07:58.219269 31275 net.cpp:408] relu3 <- ip3
I0428 20:07:58.219274 31275 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:58.219451 31275 net.cpp:124] Setting up relu3
I0428 20:07:58.219460 31275 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:58.219463 31275 net.cpp:139] Memory required for data: 5036800
I0428 20:07:58.219466 31275 layer_factory.hpp:77] Creating layer loss
I0428 20:07:58.219472 31275 net.cpp:86] Creating Layer loss
I0428 20:07:58.219475 31275 net.cpp:408] loss <- ip3
I0428 20:07:58.219480 31275 net.cpp:408] loss <- label
I0428 20:07:58.219485 31275 net.cpp:382] loss -> loss
I0428 20:07:58.219497 31275 layer_factory.hpp:77] Creating layer loss
I0428 20:07:58.219777 31275 net.cpp:124] Setting up loss
I0428 20:07:58.219785 31275 net.cpp:131] Top shape: (1)
I0428 20:07:58.219789 31275 net.cpp:134]     with loss weight 1
I0428 20:07:58.219804 31275 net.cpp:139] Memory required for data: 5036804
I0428 20:07:58.219806 31275 net.cpp:200] loss needs backward computation.
I0428 20:07:58.219810 31275 net.cpp:200] relu3 needs backward computation.
I0428 20:07:58.219813 31275 net.cpp:200] ip3 needs backward computation.
I0428 20:07:58.219816 31275 net.cpp:200] relu2 needs backward computation.
I0428 20:07:58.219820 31275 net.cpp:200] ip2 needs backward computation.
I0428 20:07:58.219822 31275 net.cpp:200] relu1 needs backward computation.
I0428 20:07:58.219825 31275 net.cpp:200] ip1 needs backward computation.
I0428 20:07:58.219827 31275 net.cpp:200] pool1 needs backward computation.
I0428 20:07:58.219831 31275 net.cpp:200] conv1 needs backward computation.
I0428 20:07:58.219835 31275 net.cpp:200] pool0 needs backward computation.
I0428 20:07:58.219837 31275 net.cpp:200] conv0 needs backward computation.
I0428 20:07:58.219841 31275 net.cpp:202] mnist does not need backward computation.
I0428 20:07:58.219843 31275 net.cpp:244] This network produces output loss
I0428 20:07:58.219871 31275 net.cpp:257] Network initialization done.
I0428 20:07:58.220229 31275 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1070.prototxt
I0428 20:07:58.220270 31275 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:58.220360 31275 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:58.220438 31275 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:58.220480 31275 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:58.220492 31275 net.cpp:86] Creating Layer mnist
I0428 20:07:58.220512 31275 net.cpp:382] mnist -> data
I0428 20:07:58.220520 31275 net.cpp:382] mnist -> label
I0428 20:07:58.220621 31275 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:58.222640 31275 net.cpp:124] Setting up mnist
I0428 20:07:58.222683 31275 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:58.222688 31275 net.cpp:131] Top shape: 100 (100)
I0428 20:07:58.222692 31275 net.cpp:139] Memory required for data: 314000
I0428 20:07:58.222705 31275 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:58.222731 31275 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:58.222735 31275 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:58.222740 31275 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:58.222748 31275 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:58.222792 31275 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:58.222800 31275 net.cpp:131] Top shape: 100 (100)
I0428 20:07:58.222803 31275 net.cpp:131] Top shape: 100 (100)
I0428 20:07:58.222806 31275 net.cpp:139] Memory required for data: 314800
I0428 20:07:58.222808 31275 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:58.222817 31275 net.cpp:86] Creating Layer conv0
I0428 20:07:58.222820 31275 net.cpp:408] conv0 <- data
I0428 20:07:58.222826 31275 net.cpp:382] conv0 -> conv0
I0428 20:07:58.224551 31275 net.cpp:124] Setting up conv0
I0428 20:07:58.224581 31275 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:58.224584 31275 net.cpp:139] Memory required for data: 6074800
I0428 20:07:58.224596 31275 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:58.224603 31275 net.cpp:86] Creating Layer pool0
I0428 20:07:58.224606 31275 net.cpp:408] pool0 <- conv0
I0428 20:07:58.224611 31275 net.cpp:382] pool0 -> pool0
I0428 20:07:58.224651 31275 net.cpp:124] Setting up pool0
I0428 20:07:58.224656 31275 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:58.224659 31275 net.cpp:139] Memory required for data: 7514800
I0428 20:07:58.224663 31275 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:58.224673 31275 net.cpp:86] Creating Layer conv1
I0428 20:07:58.224675 31275 net.cpp:408] conv1 <- pool0
I0428 20:07:58.224681 31275 net.cpp:382] conv1 -> conv1
I0428 20:07:58.226898 31275 net.cpp:124] Setting up conv1
I0428 20:07:58.226927 31275 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:58.226932 31275 net.cpp:139] Memory required for data: 7770800
I0428 20:07:58.226955 31275 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:58.226963 31275 net.cpp:86] Creating Layer pool1
I0428 20:07:58.226965 31275 net.cpp:408] pool1 <- conv1
I0428 20:07:58.226971 31275 net.cpp:382] pool1 -> pool1
I0428 20:07:58.227012 31275 net.cpp:124] Setting up pool1
I0428 20:07:58.227017 31275 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:58.227020 31275 net.cpp:139] Memory required for data: 7834800
I0428 20:07:58.227025 31275 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:58.227030 31275 net.cpp:86] Creating Layer ip1
I0428 20:07:58.227035 31275 net.cpp:408] ip1 <- pool1
I0428 20:07:58.227039 31275 net.cpp:382] ip1 -> ip1
I0428 20:07:58.227164 31275 net.cpp:124] Setting up ip1
I0428 20:07:58.227174 31275 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:58.227186 31275 net.cpp:139] Memory required for data: 7838800
I0428 20:07:58.227195 31275 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:58.227200 31275 net.cpp:86] Creating Layer relu1
I0428 20:07:58.227203 31275 net.cpp:408] relu1 <- ip1
I0428 20:07:58.227207 31275 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:58.227473 31275 net.cpp:124] Setting up relu1
I0428 20:07:58.227483 31275 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:58.227486 31275 net.cpp:139] Memory required for data: 7842800
I0428 20:07:58.227490 31275 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:58.227501 31275 net.cpp:86] Creating Layer ip2
I0428 20:07:58.227504 31275 net.cpp:408] ip2 <- ip1
I0428 20:07:58.227510 31275 net.cpp:382] ip2 -> ip2
I0428 20:07:58.227618 31275 net.cpp:124] Setting up ip2
I0428 20:07:58.227625 31275 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:58.227628 31275 net.cpp:139] Memory required for data: 7852800
I0428 20:07:58.227633 31275 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:58.227638 31275 net.cpp:86] Creating Layer relu2
I0428 20:07:58.227641 31275 net.cpp:408] relu2 <- ip2
I0428 20:07:58.227646 31275 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:58.227807 31275 net.cpp:124] Setting up relu2
I0428 20:07:58.227815 31275 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:58.227818 31275 net.cpp:139] Memory required for data: 7862800
I0428 20:07:58.227821 31275 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:58.227828 31275 net.cpp:86] Creating Layer ip3
I0428 20:07:58.227830 31275 net.cpp:408] ip3 <- ip2
I0428 20:07:58.227835 31275 net.cpp:382] ip3 -> ip3
I0428 20:07:58.227936 31275 net.cpp:124] Setting up ip3
I0428 20:07:58.227942 31275 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:58.227946 31275 net.cpp:139] Memory required for data: 7866800
I0428 20:07:58.227952 31275 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:58.227957 31275 net.cpp:86] Creating Layer relu3
I0428 20:07:58.227960 31275 net.cpp:408] relu3 <- ip3
I0428 20:07:58.227965 31275 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:58.228796 31275 net.cpp:124] Setting up relu3
I0428 20:07:58.228808 31275 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:58.228832 31275 net.cpp:139] Memory required for data: 7870800
I0428 20:07:58.228852 31275 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:58.228859 31275 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:58.228863 31275 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:58.228868 31275 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:58.228874 31275 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:58.228915 31275 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:58.228921 31275 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:58.228924 31275 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:58.228929 31275 net.cpp:139] Memory required for data: 7878800
I0428 20:07:58.228932 31275 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:58.228936 31275 net.cpp:86] Creating Layer accuracy
I0428 20:07:58.228940 31275 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:58.228945 31275 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:58.228950 31275 net.cpp:382] accuracy -> accuracy
I0428 20:07:58.228957 31275 net.cpp:124] Setting up accuracy
I0428 20:07:58.228961 31275 net.cpp:131] Top shape: (1)
I0428 20:07:58.228965 31275 net.cpp:139] Memory required for data: 7878804
I0428 20:07:58.228967 31275 layer_factory.hpp:77] Creating layer loss
I0428 20:07:58.228978 31275 net.cpp:86] Creating Layer loss
I0428 20:07:58.228981 31275 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:58.228986 31275 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:58.228991 31275 net.cpp:382] loss -> loss
I0428 20:07:58.228996 31275 layer_factory.hpp:77] Creating layer loss
I0428 20:07:58.229274 31275 net.cpp:124] Setting up loss
I0428 20:07:58.229285 31275 net.cpp:131] Top shape: (1)
I0428 20:07:58.229287 31275 net.cpp:134]     with loss weight 1
I0428 20:07:58.229302 31275 net.cpp:139] Memory required for data: 7878808
I0428 20:07:58.229324 31275 net.cpp:200] loss needs backward computation.
I0428 20:07:58.229328 31275 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:58.229332 31275 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:58.229336 31275 net.cpp:200] relu3 needs backward computation.
I0428 20:07:58.229338 31275 net.cpp:200] ip3 needs backward computation.
I0428 20:07:58.229341 31275 net.cpp:200] relu2 needs backward computation.
I0428 20:07:58.229344 31275 net.cpp:200] ip2 needs backward computation.
I0428 20:07:58.229347 31275 net.cpp:200] relu1 needs backward computation.
I0428 20:07:58.229349 31275 net.cpp:200] ip1 needs backward computation.
I0428 20:07:58.229353 31275 net.cpp:200] pool1 needs backward computation.
I0428 20:07:58.229357 31275 net.cpp:200] conv1 needs backward computation.
I0428 20:07:58.229359 31275 net.cpp:200] pool0 needs backward computation.
I0428 20:07:58.229362 31275 net.cpp:200] conv0 needs backward computation.
I0428 20:07:58.229367 31275 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:58.229370 31275 net.cpp:202] mnist does not need backward computation.
I0428 20:07:58.229372 31275 net.cpp:244] This network produces output accuracy
I0428 20:07:58.229377 31275 net.cpp:244] This network produces output loss
I0428 20:07:58.229387 31275 net.cpp:257] Network initialization done.
I0428 20:07:58.229431 31275 solver.cpp:56] Solver scaffolding done.
I0428 20:07:58.229791 31275 caffe.cpp:248] Starting Optimization
I0428 20:07:58.229799 31275 solver.cpp:273] Solving LeNet
I0428 20:07:58.229800 31275 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:58.230662 31275 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:58.235076 31275 blocking_queue.cpp:49] Waiting for data
I0428 20:07:58.306104 31282 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:58.306733 31275 solver.cpp:398]     Test net output #0: accuracy = 0.0721
I0428 20:07:58.306767 31275 solver.cpp:398]     Test net output #1: loss = 2.30893 (* 1 = 2.30893 loss)
I0428 20:07:58.310449 31275 solver.cpp:219] Iteration 0 (0 iter/s, 0.0806125s/100 iters), loss = 2.31795
I0428 20:07:58.310487 31275 solver.cpp:238]     Train net output #0: loss = 2.31795 (* 1 = 2.31795 loss)
I0428 20:07:58.310498 31275 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:58.401424 31275 solver.cpp:219] Iteration 100 (1099.62 iter/s, 0.0909404s/100 iters), loss = 0.875057
I0428 20:07:58.401465 31275 solver.cpp:238]     Train net output #0: loss = 0.875057 (* 1 = 0.875057 loss)
I0428 20:07:58.401473 31275 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:58.492077 31275 solver.cpp:219] Iteration 200 (1103.72 iter/s, 0.0906025s/100 iters), loss = 0.462386
I0428 20:07:58.492105 31275 solver.cpp:238]     Train net output #0: loss = 0.462386 (* 1 = 0.462386 loss)
I0428 20:07:58.492127 31275 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:58.592063 31275 solver.cpp:219] Iteration 300 (1000.5 iter/s, 0.0999496s/100 iters), loss = 0.326604
I0428 20:07:58.592118 31275 solver.cpp:238]     Train net output #0: loss = 0.326604 (* 1 = 0.326604 loss)
I0428 20:07:58.592123 31275 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:58.685622 31275 solver.cpp:219] Iteration 400 (1069.4 iter/s, 0.0935107s/100 iters), loss = 0.208506
I0428 20:07:58.685678 31275 solver.cpp:238]     Train net output #0: loss = 0.208506 (* 1 = 0.208506 loss)
I0428 20:07:58.685684 31275 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:58.774737 31275 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:58.829771 31282 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:58.830415 31275 solver.cpp:398]     Test net output #0: accuracy = 0.9361
I0428 20:07:58.830451 31275 solver.cpp:398]     Test net output #1: loss = 0.210145 (* 1 = 0.210145 loss)
I0428 20:07:58.831405 31275 solver.cpp:219] Iteration 500 (686.197 iter/s, 0.145731s/100 iters), loss = 0.156106
I0428 20:07:58.831442 31275 solver.cpp:238]     Train net output #0: loss = 0.156106 (* 1 = 0.156106 loss)
I0428 20:07:58.831449 31275 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:58.932685 31275 solver.cpp:219] Iteration 600 (987.805 iter/s, 0.101235s/100 iters), loss = 0.127939
I0428 20:07:58.932724 31275 solver.cpp:238]     Train net output #0: loss = 0.127939 (* 1 = 0.127939 loss)
I0428 20:07:58.932749 31275 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:59.025393 31275 solver.cpp:219] Iteration 700 (1079.07 iter/s, 0.0926721s/100 iters), loss = 0.201005
I0428 20:07:59.025418 31275 solver.cpp:238]     Train net output #0: loss = 0.201005 (* 1 = 0.201005 loss)
I0428 20:07:59.025444 31275 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:59.114816 31275 solver.cpp:219] Iteration 800 (1118.7 iter/s, 0.0893891s/100 iters), loss = 0.341564
I0428 20:07:59.114841 31275 solver.cpp:238]     Train net output #0: loss = 0.341565 (* 1 = 0.341565 loss)
I0428 20:07:59.114864 31275 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:59.204519 31275 solver.cpp:219] Iteration 900 (1115.24 iter/s, 0.0896666s/100 iters), loss = 0.235137
I0428 20:07:59.204560 31275 solver.cpp:238]     Train net output #0: loss = 0.235137 (* 1 = 0.235137 loss)
I0428 20:07:59.204581 31275 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:59.234820 31281 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:59.294646 31275 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:59.295552 31275 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:59.296176 31275 solver.cpp:311] Iteration 1000, loss = 0.114452
I0428 20:07:59.296191 31275 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:59.351682 31282 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:59.352288 31275 solver.cpp:398]     Test net output #0: accuracy = 0.9667
I0428 20:07:59.352308 31275 solver.cpp:398]     Test net output #1: loss = 0.101797 (* 1 = 0.101797 loss)
I0428 20:07:59.352313 31275 solver.cpp:316] Optimization Done.
I0428 20:07:59.352315 31275 caffe.cpp:259] Optimization Done.
