I0428 20:32:45.913020  4187 caffe.cpp:218] Using GPUs 0
I0428 20:32:45.953101  4187 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:46.470599  4187 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1577.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:46.470755  4187 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1577.prototxt
I0428 20:32:46.471187  4187 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:46.471213  4187 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:46.471326  4187 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:46.471436  4187 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:46.471544  4187 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:46.471576  4187 net.cpp:86] Creating Layer mnist
I0428 20:32:46.471590  4187 net.cpp:382] mnist -> data
I0428 20:32:46.471621  4187 net.cpp:382] mnist -> label
I0428 20:32:46.472718  4187 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:46.475188  4187 net.cpp:124] Setting up mnist
I0428 20:32:46.475211  4187 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:46.475221  4187 net.cpp:131] Top shape: 64 (64)
I0428 20:32:46.475230  4187 net.cpp:139] Memory required for data: 200960
I0428 20:32:46.475242  4187 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:46.475260  4187 net.cpp:86] Creating Layer conv0
I0428 20:32:46.475278  4187 net.cpp:408] conv0 <- data
I0428 20:32:46.475291  4187 net.cpp:382] conv0 -> conv0
I0428 20:32:46.759061  4187 net.cpp:124] Setting up conv0
I0428 20:32:46.759089  4187 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:46.759093  4187 net.cpp:139] Memory required for data: 14946560
I0428 20:32:46.759107  4187 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:46.759119  4187 net.cpp:86] Creating Layer pool0
I0428 20:32:46.759124  4187 net.cpp:408] pool0 <- conv0
I0428 20:32:46.759130  4187 net.cpp:382] pool0 -> pool0
I0428 20:32:46.759176  4187 net.cpp:124] Setting up pool0
I0428 20:32:46.759183  4187 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:46.759186  4187 net.cpp:139] Memory required for data: 18632960
I0428 20:32:46.759189  4187 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:46.759201  4187 net.cpp:86] Creating Layer conv1
I0428 20:32:46.759207  4187 net.cpp:408] conv1 <- pool0
I0428 20:32:46.759212  4187 net.cpp:382] conv1 -> conv1
I0428 20:32:46.761461  4187 net.cpp:124] Setting up conv1
I0428 20:32:46.761474  4187 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:46.761478  4187 net.cpp:139] Memory required for data: 19042560
I0428 20:32:46.761487  4187 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:46.761493  4187 net.cpp:86] Creating Layer pool1
I0428 20:32:46.761497  4187 net.cpp:408] pool1 <- conv1
I0428 20:32:46.761502  4187 net.cpp:382] pool1 -> pool1
I0428 20:32:46.761538  4187 net.cpp:124] Setting up pool1
I0428 20:32:46.761546  4187 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:46.761565  4187 net.cpp:139] Memory required for data: 19144960
I0428 20:32:46.761569  4187 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:46.761575  4187 net.cpp:86] Creating Layer ip1
I0428 20:32:46.761579  4187 net.cpp:408] ip1 <- pool1
I0428 20:32:46.761584  4187 net.cpp:382] ip1 -> ip1
I0428 20:32:46.761706  4187 net.cpp:124] Setting up ip1
I0428 20:32:46.761714  4187 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:46.761718  4187 net.cpp:139] Memory required for data: 19147520
I0428 20:32:46.761724  4187 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:46.761729  4187 net.cpp:86] Creating Layer relu1
I0428 20:32:46.761734  4187 net.cpp:408] relu1 <- ip1
I0428 20:32:46.761737  4187 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:46.761926  4187 net.cpp:124] Setting up relu1
I0428 20:32:46.761935  4187 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:46.761939  4187 net.cpp:139] Memory required for data: 19150080
I0428 20:32:46.761941  4187 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:46.761947  4187 net.cpp:86] Creating Layer ip2
I0428 20:32:46.761950  4187 net.cpp:408] ip2 <- ip1
I0428 20:32:46.761955  4187 net.cpp:382] ip2 -> ip2
I0428 20:32:46.762048  4187 net.cpp:124] Setting up ip2
I0428 20:32:46.762055  4187 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:46.762058  4187 net.cpp:139] Memory required for data: 19156480
I0428 20:32:46.762064  4187 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:46.762070  4187 net.cpp:86] Creating Layer relu2
I0428 20:32:46.762073  4187 net.cpp:408] relu2 <- ip2
I0428 20:32:46.762078  4187 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:46.762831  4187 net.cpp:124] Setting up relu2
I0428 20:32:46.762843  4187 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:46.762847  4187 net.cpp:139] Memory required for data: 19162880
I0428 20:32:46.762850  4187 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:46.762857  4187 net.cpp:86] Creating Layer ip3
I0428 20:32:46.762861  4187 net.cpp:408] ip3 <- ip2
I0428 20:32:46.762866  4187 net.cpp:382] ip3 -> ip3
I0428 20:32:46.762996  4187 net.cpp:124] Setting up ip3
I0428 20:32:46.763005  4187 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:46.763008  4187 net.cpp:139] Memory required for data: 19165440
I0428 20:32:46.763016  4187 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:46.763021  4187 net.cpp:86] Creating Layer relu3
I0428 20:32:46.763025  4187 net.cpp:408] relu3 <- ip3
I0428 20:32:46.763029  4187 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:46.763202  4187 net.cpp:124] Setting up relu3
I0428 20:32:46.763211  4187 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:46.763216  4187 net.cpp:139] Memory required for data: 19168000
I0428 20:32:46.763218  4187 layer_factory.hpp:77] Creating layer loss
I0428 20:32:46.763224  4187 net.cpp:86] Creating Layer loss
I0428 20:32:46.763227  4187 net.cpp:408] loss <- ip3
I0428 20:32:46.763231  4187 net.cpp:408] loss <- label
I0428 20:32:46.763252  4187 net.cpp:382] loss -> loss
I0428 20:32:46.763281  4187 layer_factory.hpp:77] Creating layer loss
I0428 20:32:46.763494  4187 net.cpp:124] Setting up loss
I0428 20:32:46.763504  4187 net.cpp:131] Top shape: (1)
I0428 20:32:46.763506  4187 net.cpp:134]     with loss weight 1
I0428 20:32:46.763520  4187 net.cpp:139] Memory required for data: 19168004
I0428 20:32:46.763523  4187 net.cpp:200] loss needs backward computation.
I0428 20:32:46.763526  4187 net.cpp:200] relu3 needs backward computation.
I0428 20:32:46.763530  4187 net.cpp:200] ip3 needs backward computation.
I0428 20:32:46.763532  4187 net.cpp:200] relu2 needs backward computation.
I0428 20:32:46.763535  4187 net.cpp:200] ip2 needs backward computation.
I0428 20:32:46.763540  4187 net.cpp:200] relu1 needs backward computation.
I0428 20:32:46.763541  4187 net.cpp:200] ip1 needs backward computation.
I0428 20:32:46.763545  4187 net.cpp:200] pool1 needs backward computation.
I0428 20:32:46.763548  4187 net.cpp:200] conv1 needs backward computation.
I0428 20:32:46.763551  4187 net.cpp:200] pool0 needs backward computation.
I0428 20:32:46.763555  4187 net.cpp:200] conv0 needs backward computation.
I0428 20:32:46.763557  4187 net.cpp:202] mnist does not need backward computation.
I0428 20:32:46.763561  4187 net.cpp:244] This network produces output loss
I0428 20:32:46.763569  4187 net.cpp:257] Network initialization done.
I0428 20:32:46.763944  4187 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1577.prototxt
I0428 20:32:46.763988  4187 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:46.764125  4187 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:46.764209  4187 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:46.764252  4187 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:46.764266  4187 net.cpp:86] Creating Layer mnist
I0428 20:32:46.764271  4187 net.cpp:382] mnist -> data
I0428 20:32:46.764278  4187 net.cpp:382] mnist -> label
I0428 20:32:46.764379  4187 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:46.766587  4187 net.cpp:124] Setting up mnist
I0428 20:32:46.766600  4187 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:46.766623  4187 net.cpp:131] Top shape: 100 (100)
I0428 20:32:46.766625  4187 net.cpp:139] Memory required for data: 314000
I0428 20:32:46.766629  4187 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:46.766635  4187 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:46.766639  4187 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:46.766644  4187 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:46.766650  4187 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:46.766719  4187 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:46.766726  4187 net.cpp:131] Top shape: 100 (100)
I0428 20:32:46.766729  4187 net.cpp:131] Top shape: 100 (100)
I0428 20:32:46.766732  4187 net.cpp:139] Memory required for data: 314800
I0428 20:32:46.766736  4187 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:46.766746  4187 net.cpp:86] Creating Layer conv0
I0428 20:32:46.766748  4187 net.cpp:408] conv0 <- data
I0428 20:32:46.766754  4187 net.cpp:382] conv0 -> conv0
I0428 20:32:46.768474  4187 net.cpp:124] Setting up conv0
I0428 20:32:46.768503  4187 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:46.768507  4187 net.cpp:139] Memory required for data: 23354800
I0428 20:32:46.768517  4187 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:46.768524  4187 net.cpp:86] Creating Layer pool0
I0428 20:32:46.768528  4187 net.cpp:408] pool0 <- conv0
I0428 20:32:46.768532  4187 net.cpp:382] pool0 -> pool0
I0428 20:32:46.768569  4187 net.cpp:124] Setting up pool0
I0428 20:32:46.768575  4187 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:46.768579  4187 net.cpp:139] Memory required for data: 29114800
I0428 20:32:46.768581  4187 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:46.768590  4187 net.cpp:86] Creating Layer conv1
I0428 20:32:46.768594  4187 net.cpp:408] conv1 <- pool0
I0428 20:32:46.768599  4187 net.cpp:382] conv1 -> conv1
I0428 20:32:46.770719  4187 net.cpp:124] Setting up conv1
I0428 20:32:46.770747  4187 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:46.770751  4187 net.cpp:139] Memory required for data: 29754800
I0428 20:32:46.770761  4187 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:46.770768  4187 net.cpp:86] Creating Layer pool1
I0428 20:32:46.770771  4187 net.cpp:408] pool1 <- conv1
I0428 20:32:46.770778  4187 net.cpp:382] pool1 -> pool1
I0428 20:32:46.770817  4187 net.cpp:124] Setting up pool1
I0428 20:32:46.770824  4187 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:46.770828  4187 net.cpp:139] Memory required for data: 29914800
I0428 20:32:46.770830  4187 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:46.770838  4187 net.cpp:86] Creating Layer ip1
I0428 20:32:46.770841  4187 net.cpp:408] ip1 <- pool1
I0428 20:32:46.770848  4187 net.cpp:382] ip1 -> ip1
I0428 20:32:46.770987  4187 net.cpp:124] Setting up ip1
I0428 20:32:46.771006  4187 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:46.771010  4187 net.cpp:139] Memory required for data: 29918800
I0428 20:32:46.771018  4187 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:46.771023  4187 net.cpp:86] Creating Layer relu1
I0428 20:32:46.771028  4187 net.cpp:408] relu1 <- ip1
I0428 20:32:46.771035  4187 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:46.771211  4187 net.cpp:124] Setting up relu1
I0428 20:32:46.771220  4187 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:46.771224  4187 net.cpp:139] Memory required for data: 29922800
I0428 20:32:46.771234  4187 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:46.771247  4187 net.cpp:86] Creating Layer ip2
I0428 20:32:46.771250  4187 net.cpp:408] ip2 <- ip1
I0428 20:32:46.771256  4187 net.cpp:382] ip2 -> ip2
I0428 20:32:46.771353  4187 net.cpp:124] Setting up ip2
I0428 20:32:46.771361  4187 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:46.771364  4187 net.cpp:139] Memory required for data: 29932800
I0428 20:32:46.771374  4187 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:46.771379  4187 net.cpp:86] Creating Layer relu2
I0428 20:32:46.771383  4187 net.cpp:408] relu2 <- ip2
I0428 20:32:46.771389  4187 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:46.771553  4187 net.cpp:124] Setting up relu2
I0428 20:32:46.771560  4187 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:46.771564  4187 net.cpp:139] Memory required for data: 29942800
I0428 20:32:46.771566  4187 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:46.771589  4187 net.cpp:86] Creating Layer ip3
I0428 20:32:46.771591  4187 net.cpp:408] ip3 <- ip2
I0428 20:32:46.771596  4187 net.cpp:382] ip3 -> ip3
I0428 20:32:46.771728  4187 net.cpp:124] Setting up ip3
I0428 20:32:46.771735  4187 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:46.771739  4187 net.cpp:139] Memory required for data: 29946800
I0428 20:32:46.771747  4187 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:46.771754  4187 net.cpp:86] Creating Layer relu3
I0428 20:32:46.771756  4187 net.cpp:408] relu3 <- ip3
I0428 20:32:46.771760  4187 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:46.772596  4187 net.cpp:124] Setting up relu3
I0428 20:32:46.772609  4187 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:46.772613  4187 net.cpp:139] Memory required for data: 29950800
I0428 20:32:46.772616  4187 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:32:46.772621  4187 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:32:46.772625  4187 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:32:46.772630  4187 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:32:46.772636  4187 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:32:46.772675  4187 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:32:46.772680  4187 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:46.772683  4187 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:46.772686  4187 net.cpp:139] Memory required for data: 29958800
I0428 20:32:46.772688  4187 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:46.772693  4187 net.cpp:86] Creating Layer accuracy
I0428 20:32:46.772696  4187 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:32:46.772701  4187 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:46.772707  4187 net.cpp:382] accuracy -> accuracy
I0428 20:32:46.772714  4187 net.cpp:124] Setting up accuracy
I0428 20:32:46.772718  4187 net.cpp:131] Top shape: (1)
I0428 20:32:46.772722  4187 net.cpp:139] Memory required for data: 29958804
I0428 20:32:46.772724  4187 layer_factory.hpp:77] Creating layer loss
I0428 20:32:46.772729  4187 net.cpp:86] Creating Layer loss
I0428 20:32:46.772732  4187 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:32:46.772735  4187 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:46.772739  4187 net.cpp:382] loss -> loss
I0428 20:32:46.772745  4187 layer_factory.hpp:77] Creating layer loss
I0428 20:32:46.773056  4187 net.cpp:124] Setting up loss
I0428 20:32:46.773067  4187 net.cpp:131] Top shape: (1)
I0428 20:32:46.773072  4187 net.cpp:134]     with loss weight 1
I0428 20:32:46.773088  4187 net.cpp:139] Memory required for data: 29958808
I0428 20:32:46.773092  4187 net.cpp:200] loss needs backward computation.
I0428 20:32:46.773097  4187 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:46.773102  4187 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:32:46.773104  4187 net.cpp:200] relu3 needs backward computation.
I0428 20:32:46.773108  4187 net.cpp:200] ip3 needs backward computation.
I0428 20:32:46.773111  4187 net.cpp:200] relu2 needs backward computation.
I0428 20:32:46.773114  4187 net.cpp:200] ip2 needs backward computation.
I0428 20:32:46.773118  4187 net.cpp:200] relu1 needs backward computation.
I0428 20:32:46.773120  4187 net.cpp:200] ip1 needs backward computation.
I0428 20:32:46.773123  4187 net.cpp:200] pool1 needs backward computation.
I0428 20:32:46.773128  4187 net.cpp:200] conv1 needs backward computation.
I0428 20:32:46.773130  4187 net.cpp:200] pool0 needs backward computation.
I0428 20:32:46.773140  4187 net.cpp:200] conv0 needs backward computation.
I0428 20:32:46.773145  4187 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:46.773149  4187 net.cpp:202] mnist does not need backward computation.
I0428 20:32:46.773152  4187 net.cpp:244] This network produces output accuracy
I0428 20:32:46.773156  4187 net.cpp:244] This network produces output loss
I0428 20:32:46.773169  4187 net.cpp:257] Network initialization done.
I0428 20:32:46.773216  4187 solver.cpp:56] Solver scaffolding done.
I0428 20:32:46.773627  4187 caffe.cpp:248] Starting Optimization
I0428 20:32:46.773633  4187 solver.cpp:273] Solving LeNet
I0428 20:32:46.773636  4187 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:46.773942  4187 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:46.876871  4196 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:46.879310  4187 solver.cpp:398]     Test net output #0: accuracy = 0.1026
I0428 20:32:46.879348  4187 solver.cpp:398]     Test net output #1: loss = 2.3484 (* 1 = 2.3484 loss)
I0428 20:32:46.884274  4187 solver.cpp:219] Iteration 0 (0 iter/s, 0.110582s/100 iters), loss = 2.38763
I0428 20:32:46.884316  4187 solver.cpp:238]     Train net output #0: loss = 2.38763 (* 1 = 2.38763 loss)
I0428 20:32:46.884330  4187 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:47.105612  4187 solver.cpp:219] Iteration 100 (451.909 iter/s, 0.221283s/100 iters), loss = 0.984346
I0428 20:32:47.105659  4187 solver.cpp:238]     Train net output #0: loss = 0.984346 (* 1 = 0.984346 loss)
I0428 20:32:47.105669  4187 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:47.320971  4187 solver.cpp:219] Iteration 200 (464.483 iter/s, 0.215293s/100 iters), loss = 0.571169
I0428 20:32:47.321027  4187 solver.cpp:238]     Train net output #0: loss = 0.571169 (* 1 = 0.571169 loss)
I0428 20:32:47.321043  4187 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:47.536844  4187 solver.cpp:219] Iteration 300 (463.388 iter/s, 0.215802s/100 iters), loss = 0.284122
I0428 20:32:47.536891  4187 solver.cpp:238]     Train net output #0: loss = 0.284122 (* 1 = 0.284122 loss)
I0428 20:32:47.536906  4187 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:47.752619  4187 solver.cpp:219] Iteration 400 (463.573 iter/s, 0.215716s/100 iters), loss = 0.136117
I0428 20:32:47.752651  4187 solver.cpp:238]     Train net output #0: loss = 0.136117 (* 1 = 0.136117 loss)
I0428 20:32:47.752660  4187 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:47.964639  4187 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:48.001390  4187 blocking_queue.cpp:49] Waiting for data
I0428 20:32:48.072854  4196 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:48.074158  4187 solver.cpp:398]     Test net output #0: accuracy = 0.9417
I0428 20:32:48.074183  4187 solver.cpp:398]     Test net output #1: loss = 0.189372 (* 1 = 0.189372 loss)
I0428 20:32:48.076283  4187 solver.cpp:219] Iteration 500 (309.012 iter/s, 0.323612s/100 iters), loss = 0.166582
I0428 20:32:48.076329  4187 solver.cpp:238]     Train net output #0: loss = 0.166582 (* 1 = 0.166582 loss)
I0428 20:32:48.076339  4187 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:48.289075  4187 solver.cpp:219] Iteration 600 (470.077 iter/s, 0.212731s/100 iters), loss = 0.100834
I0428 20:32:48.289110  4187 solver.cpp:238]     Train net output #0: loss = 0.100834 (* 1 = 0.100834 loss)
I0428 20:32:48.289119  4187 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:48.516419  4187 solver.cpp:219] Iteration 700 (439.97 iter/s, 0.227288s/100 iters), loss = 0.368035
I0428 20:32:48.516474  4187 solver.cpp:238]     Train net output #0: loss = 0.368035 (* 1 = 0.368035 loss)
I0428 20:32:48.516487  4187 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:48.743449  4187 solver.cpp:219] Iteration 800 (440.612 iter/s, 0.226957s/100 iters), loss = 0.251654
I0428 20:32:48.743505  4187 solver.cpp:238]     Train net output #0: loss = 0.251654 (* 1 = 0.251654 loss)
I0428 20:32:48.743516  4187 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:48.969908  4187 solver.cpp:219] Iteration 900 (441.722 iter/s, 0.226387s/100 iters), loss = 0.20104
I0428 20:32:48.969954  4187 solver.cpp:238]     Train net output #0: loss = 0.20104 (* 1 = 0.20104 loss)
I0428 20:32:48.969965  4187 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:49.044042  4195 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:49.193501  4187 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:49.196418  4187 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:49.198176  4187 solver.cpp:311] Iteration 1000, loss = 0.149469
I0428 20:32:49.198200  4187 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:49.300642  4196 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:49.303270  4187 solver.cpp:398]     Test net output #0: accuracy = 0.9752
I0428 20:32:49.303295  4187 solver.cpp:398]     Test net output #1: loss = 0.083268 (* 1 = 0.083268 loss)
I0428 20:32:49.303302  4187 solver.cpp:316] Optimization Done.
I0428 20:32:49.303309  4187 caffe.cpp:259] Optimization Done.
