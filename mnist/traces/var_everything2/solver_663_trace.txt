I0428 19:52:29.224431 27527 caffe.cpp:218] Using GPUs 0
I0428 19:52:29.265409 27527 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:29.782318 27527 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test663.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:29.782454 27527 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test663.prototxt
I0428 19:52:29.782786 27527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:29.782800 27527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:29.782881 27527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:52:29.782948 27527 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:29.783046 27527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:29.783067 27527 net.cpp:86] Creating Layer mnist
I0428 19:52:29.783077 27527 net.cpp:382] mnist -> data
I0428 19:52:29.783097 27527 net.cpp:382] mnist -> label
I0428 19:52:29.784173 27527 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:29.786571 27527 net.cpp:124] Setting up mnist
I0428 19:52:29.786589 27527 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:29.786599 27527 net.cpp:131] Top shape: 64 (64)
I0428 19:52:29.786603 27527 net.cpp:139] Memory required for data: 200960
I0428 19:52:29.786609 27527 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:29.786626 27527 net.cpp:86] Creating Layer conv0
I0428 19:52:29.786633 27527 net.cpp:408] conv0 <- data
I0428 19:52:29.786646 27527 net.cpp:382] conv0 -> conv0
I0428 19:52:30.075740 27527 net.cpp:124] Setting up conv0
I0428 19:52:30.075769 27527 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:30.075773 27527 net.cpp:139] Memory required for data: 938240
I0428 19:52:30.075790 27527 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:30.075803 27527 net.cpp:86] Creating Layer pool0
I0428 19:52:30.075808 27527 net.cpp:408] pool0 <- conv0
I0428 19:52:30.075814 27527 net.cpp:382] pool0 -> pool0
I0428 19:52:30.075863 27527 net.cpp:124] Setting up pool0
I0428 19:52:30.075871 27527 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:30.075891 27527 net.cpp:139] Memory required for data: 1122560
I0428 19:52:30.075894 27527 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:30.075907 27527 net.cpp:86] Creating Layer conv1
I0428 19:52:30.075911 27527 net.cpp:408] conv1 <- pool0
I0428 19:52:30.075917 27527 net.cpp:382] conv1 -> conv1
I0428 19:52:30.078745 27527 net.cpp:124] Setting up conv1
I0428 19:52:30.078760 27527 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:30.078765 27527 net.cpp:139] Memory required for data: 1941760
I0428 19:52:30.078774 27527 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:30.078781 27527 net.cpp:86] Creating Layer pool1
I0428 19:52:30.078785 27527 net.cpp:408] pool1 <- conv1
I0428 19:52:30.078790 27527 net.cpp:382] pool1 -> pool1
I0428 19:52:30.078830 27527 net.cpp:124] Setting up pool1
I0428 19:52:30.078835 27527 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:30.078838 27527 net.cpp:139] Memory required for data: 2146560
I0428 19:52:30.078841 27527 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:30.078850 27527 net.cpp:86] Creating Layer ip1
I0428 19:52:30.078853 27527 net.cpp:408] ip1 <- pool1
I0428 19:52:30.078858 27527 net.cpp:382] ip1 -> ip1
I0428 19:52:30.079011 27527 net.cpp:124] Setting up ip1
I0428 19:52:30.079020 27527 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:30.079022 27527 net.cpp:139] Memory required for data: 2149120
I0428 19:52:30.079030 27527 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:30.079035 27527 net.cpp:86] Creating Layer relu1
I0428 19:52:30.079040 27527 net.cpp:408] relu1 <- ip1
I0428 19:52:30.079043 27527 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:30.079213 27527 net.cpp:124] Setting up relu1
I0428 19:52:30.079222 27527 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:30.079226 27527 net.cpp:139] Memory required for data: 2151680
I0428 19:52:30.079231 27527 layer_factory.hpp:77] Creating layer loss
I0428 19:52:30.079236 27527 net.cpp:86] Creating Layer loss
I0428 19:52:30.079239 27527 net.cpp:408] loss <- ip1
I0428 19:52:30.079243 27527 net.cpp:408] loss <- label
I0428 19:52:30.079249 27527 net.cpp:382] loss -> loss
I0428 19:52:30.079263 27527 layer_factory.hpp:77] Creating layer loss
I0428 19:52:30.080098 27527 net.cpp:124] Setting up loss
I0428 19:52:30.080111 27527 net.cpp:131] Top shape: (1)
I0428 19:52:30.080116 27527 net.cpp:134]     with loss weight 1
I0428 19:52:30.080129 27527 net.cpp:139] Memory required for data: 2151684
I0428 19:52:30.080133 27527 net.cpp:200] loss needs backward computation.
I0428 19:52:30.080137 27527 net.cpp:200] relu1 needs backward computation.
I0428 19:52:30.080142 27527 net.cpp:200] ip1 needs backward computation.
I0428 19:52:30.080144 27527 net.cpp:200] pool1 needs backward computation.
I0428 19:52:30.080147 27527 net.cpp:200] conv1 needs backward computation.
I0428 19:52:30.080150 27527 net.cpp:200] pool0 needs backward computation.
I0428 19:52:30.080153 27527 net.cpp:200] conv0 needs backward computation.
I0428 19:52:30.080157 27527 net.cpp:202] mnist does not need backward computation.
I0428 19:52:30.080160 27527 net.cpp:244] This network produces output loss
I0428 19:52:30.080169 27527 net.cpp:257] Network initialization done.
I0428 19:52:30.080441 27527 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test663.prototxt
I0428 19:52:30.080471 27527 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:30.080550 27527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:52:30.080624 27527 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:30.080668 27527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:30.080684 27527 net.cpp:86] Creating Layer mnist
I0428 19:52:30.080689 27527 net.cpp:382] mnist -> data
I0428 19:52:30.080698 27527 net.cpp:382] mnist -> label
I0428 19:52:30.080781 27527 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:30.082787 27527 net.cpp:124] Setting up mnist
I0428 19:52:30.082801 27527 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:30.082806 27527 net.cpp:131] Top shape: 100 (100)
I0428 19:52:30.082810 27527 net.cpp:139] Memory required for data: 314000
I0428 19:52:30.082814 27527 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:30.082821 27527 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:30.082825 27527 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:30.082830 27527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:30.082837 27527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:30.082949 27527 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:30.082958 27527 net.cpp:131] Top shape: 100 (100)
I0428 19:52:30.082962 27527 net.cpp:131] Top shape: 100 (100)
I0428 19:52:30.082965 27527 net.cpp:139] Memory required for data: 314800
I0428 19:52:30.082968 27527 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:30.082993 27527 net.cpp:86] Creating Layer conv0
I0428 19:52:30.082998 27527 net.cpp:408] conv0 <- data
I0428 19:52:30.083003 27527 net.cpp:382] conv0 -> conv0
I0428 19:52:30.083884 27527 net.cpp:124] Setting up conv0
I0428 19:52:30.083897 27527 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:30.083901 27527 net.cpp:139] Memory required for data: 1466800
I0428 19:52:30.083910 27527 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:30.083916 27527 net.cpp:86] Creating Layer pool0
I0428 19:52:30.083920 27527 net.cpp:408] pool0 <- conv0
I0428 19:52:30.083925 27527 net.cpp:382] pool0 -> pool0
I0428 19:52:30.083961 27527 net.cpp:124] Setting up pool0
I0428 19:52:30.083966 27527 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:30.083969 27527 net.cpp:139] Memory required for data: 1754800
I0428 19:52:30.083972 27527 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:30.083981 27527 net.cpp:86] Creating Layer conv1
I0428 19:52:30.083984 27527 net.cpp:408] conv1 <- pool0
I0428 19:52:30.083989 27527 net.cpp:382] conv1 -> conv1
I0428 19:52:30.085587 27527 net.cpp:124] Setting up conv1
I0428 19:52:30.085602 27527 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:30.085606 27527 net.cpp:139] Memory required for data: 3034800
I0428 19:52:30.085615 27527 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:30.085621 27527 net.cpp:86] Creating Layer pool1
I0428 19:52:30.085635 27527 net.cpp:408] pool1 <- conv1
I0428 19:52:30.085641 27527 net.cpp:382] pool1 -> pool1
I0428 19:52:30.085678 27527 net.cpp:124] Setting up pool1
I0428 19:52:30.085685 27527 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:30.085688 27527 net.cpp:139] Memory required for data: 3354800
I0428 19:52:30.085692 27527 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:30.085698 27527 net.cpp:86] Creating Layer ip1
I0428 19:52:30.085701 27527 net.cpp:408] ip1 <- pool1
I0428 19:52:30.085706 27527 net.cpp:382] ip1 -> ip1
I0428 19:52:30.085844 27527 net.cpp:124] Setting up ip1
I0428 19:52:30.085852 27527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:30.085855 27527 net.cpp:139] Memory required for data: 3358800
I0428 19:52:30.085863 27527 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:30.085868 27527 net.cpp:86] Creating Layer relu1
I0428 19:52:30.085891 27527 net.cpp:408] relu1 <- ip1
I0428 19:52:30.085896 27527 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:30.086700 27527 net.cpp:124] Setting up relu1
I0428 19:52:30.086712 27527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:30.086716 27527 net.cpp:139] Memory required for data: 3362800
I0428 19:52:30.086719 27527 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:52:30.086726 27527 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:52:30.086730 27527 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:52:30.086735 27527 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:52:30.086741 27527 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:52:30.086787 27527 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:52:30.086793 27527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:30.086797 27527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:30.086802 27527 net.cpp:139] Memory required for data: 3370800
I0428 19:52:30.086804 27527 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:30.086810 27527 net.cpp:86] Creating Layer accuracy
I0428 19:52:30.086813 27527 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:52:30.086817 27527 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:30.086822 27527 net.cpp:382] accuracy -> accuracy
I0428 19:52:30.086828 27527 net.cpp:124] Setting up accuracy
I0428 19:52:30.086833 27527 net.cpp:131] Top shape: (1)
I0428 19:52:30.086835 27527 net.cpp:139] Memory required for data: 3370804
I0428 19:52:30.086838 27527 layer_factory.hpp:77] Creating layer loss
I0428 19:52:30.086843 27527 net.cpp:86] Creating Layer loss
I0428 19:52:30.086846 27527 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:52:30.086850 27527 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:30.086855 27527 net.cpp:382] loss -> loss
I0428 19:52:30.086861 27527 layer_factory.hpp:77] Creating layer loss
I0428 19:52:30.087086 27527 net.cpp:124] Setting up loss
I0428 19:52:30.087095 27527 net.cpp:131] Top shape: (1)
I0428 19:52:30.087100 27527 net.cpp:134]     with loss weight 1
I0428 19:52:30.087105 27527 net.cpp:139] Memory required for data: 3370808
I0428 19:52:30.087110 27527 net.cpp:200] loss needs backward computation.
I0428 19:52:30.087113 27527 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:30.087117 27527 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:52:30.087121 27527 net.cpp:200] relu1 needs backward computation.
I0428 19:52:30.087123 27527 net.cpp:200] ip1 needs backward computation.
I0428 19:52:30.087127 27527 net.cpp:200] pool1 needs backward computation.
I0428 19:52:30.087131 27527 net.cpp:200] conv1 needs backward computation.
I0428 19:52:30.087133 27527 net.cpp:200] pool0 needs backward computation.
I0428 19:52:30.087136 27527 net.cpp:200] conv0 needs backward computation.
I0428 19:52:30.087141 27527 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:30.087144 27527 net.cpp:202] mnist does not need backward computation.
I0428 19:52:30.087147 27527 net.cpp:244] This network produces output accuracy
I0428 19:52:30.087152 27527 net.cpp:244] This network produces output loss
I0428 19:52:30.087178 27527 net.cpp:257] Network initialization done.
I0428 19:52:30.087213 27527 solver.cpp:56] Solver scaffolding done.
I0428 19:52:30.087417 27527 caffe.cpp:248] Starting Optimization
I0428 19:52:30.087424 27527 solver.cpp:273] Solving LeNet
I0428 19:52:30.087429 27527 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:30.087529 27527 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:30.091449 27527 blocking_queue.cpp:49] Waiting for data
I0428 19:52:30.165182 27534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:30.165637 27527 solver.cpp:398]     Test net output #0: accuracy = 0.1246
I0428 19:52:30.165659 27527 solver.cpp:398]     Test net output #1: loss = 2.3428 (* 1 = 2.3428 loss)
I0428 19:52:30.167898 27527 solver.cpp:219] Iteration 0 (0 iter/s, 0.0804454s/100 iters), loss = 2.35364
I0428 19:52:30.167948 27527 solver.cpp:238]     Train net output #0: loss = 2.35364 (* 1 = 2.35364 loss)
I0428 19:52:30.167963 27527 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:30.269572 27527 solver.cpp:219] Iteration 100 (984.106 iter/s, 0.101615s/100 iters), loss = 0.747312
I0428 19:52:30.269613 27527 solver.cpp:238]     Train net output #0: loss = 0.747312 (* 1 = 0.747312 loss)
I0428 19:52:30.269619 27527 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:30.366535 27527 solver.cpp:219] Iteration 200 (1031.88 iter/s, 0.0969103s/100 iters), loss = 0.626644
I0428 19:52:30.366592 27527 solver.cpp:238]     Train net output #0: loss = 0.626644 (* 1 = 0.626644 loss)
I0428 19:52:30.366598 27527 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:30.461282 27527 solver.cpp:219] Iteration 300 (1056.03 iter/s, 0.0946944s/100 iters), loss = 0.551666
I0428 19:52:30.461318 27527 solver.cpp:238]     Train net output #0: loss = 0.551666 (* 1 = 0.551666 loss)
I0428 19:52:30.461328 27527 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:30.561789 27527 solver.cpp:219] Iteration 400 (995.466 iter/s, 0.100455s/100 iters), loss = 0.268174
I0428 19:52:30.561838 27527 solver.cpp:238]     Train net output #0: loss = 0.268174 (* 1 = 0.268174 loss)
I0428 19:52:30.561851 27527 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:30.661818 27527 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:30.736564 27534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:30.737040 27527 solver.cpp:398]     Test net output #0: accuracy = 0.9534
I0428 19:52:30.737068 27527 solver.cpp:398]     Test net output #1: loss = 0.158364 (* 1 = 0.158364 loss)
I0428 19:52:30.738107 27527 solver.cpp:219] Iteration 500 (567.353 iter/s, 0.176257s/100 iters), loss = 0.117374
I0428 19:52:30.738137 27527 solver.cpp:238]     Train net output #0: loss = 0.117374 (* 1 = 0.117374 loss)
I0428 19:52:30.738147 27527 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:30.837460 27527 solver.cpp:219] Iteration 600 (1006.91 iter/s, 0.0993133s/100 iters), loss = 0.129322
I0428 19:52:30.837493 27527 solver.cpp:238]     Train net output #0: loss = 0.129322 (* 1 = 0.129322 loss)
I0428 19:52:30.837502 27527 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:30.940826 27527 solver.cpp:219] Iteration 700 (967.967 iter/s, 0.103309s/100 iters), loss = 0.155367
I0428 19:52:30.940871 27527 solver.cpp:238]     Train net output #0: loss = 0.155367 (* 1 = 0.155367 loss)
I0428 19:52:30.940882 27527 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:31.043262 27527 solver.cpp:219] Iteration 800 (976.758 iter/s, 0.10238s/100 iters), loss = 0.280868
I0428 19:52:31.043309 27527 solver.cpp:238]     Train net output #0: loss = 0.280868 (* 1 = 0.280868 loss)
I0428 19:52:31.043319 27527 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:31.147716 27527 solver.cpp:219] Iteration 900 (957.884 iter/s, 0.104397s/100 iters), loss = 0.164164
I0428 19:52:31.147759 27527 solver.cpp:238]     Train net output #0: loss = 0.164164 (* 1 = 0.164164 loss)
I0428 19:52:31.147770 27527 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:31.179961 27533 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:31.250104 27527 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:31.251284 27527 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:31.252163 27527 solver.cpp:311] Iteration 1000, loss = 0.144289
I0428 19:52:31.252204 27527 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:31.333657 27534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:31.334277 27527 solver.cpp:398]     Test net output #0: accuracy = 0.9729
I0428 19:52:31.334322 27527 solver.cpp:398]     Test net output #1: loss = 0.0866999 (* 1 = 0.0866999 loss)
I0428 19:52:31.334333 27527 solver.cpp:316] Optimization Done.
I0428 19:52:31.334342 27527 caffe.cpp:259] Optimization Done.
