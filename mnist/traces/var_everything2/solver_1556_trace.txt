I0428 20:31:29.671111  3964 caffe.cpp:218] Using GPUs 0
I0428 20:31:29.711930  3964 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:30.200947  3964 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1556.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:30.201105  3964 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1556.prototxt
I0428 20:31:30.201464  3964 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:30.201488  3964 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:30.201575  3964 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:30.201665  3964 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:30.201772  3964 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:30.201799  3964 net.cpp:86] Creating Layer mnist
I0428 20:31:30.201808  3964 net.cpp:382] mnist -> data
I0428 20:31:30.201835  3964 net.cpp:382] mnist -> label
I0428 20:31:30.202958  3964 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:30.205150  3964 net.cpp:124] Setting up mnist
I0428 20:31:30.205199  3964 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:30.205206  3964 net.cpp:131] Top shape: 64 (64)
I0428 20:31:30.205211  3964 net.cpp:139] Memory required for data: 200960
I0428 20:31:30.205220  3964 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:30.205240  3964 net.cpp:86] Creating Layer conv0
I0428 20:31:30.205268  3964 net.cpp:408] conv0 <- data
I0428 20:31:30.205283  3964 net.cpp:382] conv0 -> conv0
I0428 20:31:30.442096  3964 net.cpp:124] Setting up conv0
I0428 20:31:30.442126  3964 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:30.442131  3964 net.cpp:139] Memory required for data: 14946560
I0428 20:31:30.442167  3964 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:30.442183  3964 net.cpp:86] Creating Layer pool0
I0428 20:31:30.442190  3964 net.cpp:408] pool0 <- conv0
I0428 20:31:30.442199  3964 net.cpp:382] pool0 -> pool0
I0428 20:31:30.442258  3964 net.cpp:124] Setting up pool0
I0428 20:31:30.442267  3964 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:30.442272  3964 net.cpp:139] Memory required for data: 18632960
I0428 20:31:30.442277  3964 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:30.442292  3964 net.cpp:86] Creating Layer conv1
I0428 20:31:30.442298  3964 net.cpp:408] conv1 <- pool0
I0428 20:31:30.442307  3964 net.cpp:382] conv1 -> conv1
I0428 20:31:30.444475  3964 net.cpp:124] Setting up conv1
I0428 20:31:30.444491  3964 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:30.444497  3964 net.cpp:139] Memory required for data: 18796800
I0428 20:31:30.444526  3964 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:30.444540  3964 net.cpp:86] Creating Layer pool1
I0428 20:31:30.444552  3964 net.cpp:408] pool1 <- conv1
I0428 20:31:30.444561  3964 net.cpp:382] pool1 -> pool1
I0428 20:31:30.444608  3964 net.cpp:124] Setting up pool1
I0428 20:31:30.444617  3964 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:30.444622  3964 net.cpp:139] Memory required for data: 18837760
I0428 20:31:30.444628  3964 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:30.444639  3964 net.cpp:86] Creating Layer ip1
I0428 20:31:30.444644  3964 net.cpp:408] ip1 <- pool1
I0428 20:31:30.444654  3964 net.cpp:382] ip1 -> ip1
I0428 20:31:30.445722  3964 net.cpp:124] Setting up ip1
I0428 20:31:30.445737  3964 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:30.445742  3964 net.cpp:139] Memory required for data: 18850560
I0428 20:31:30.445756  3964 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:30.445765  3964 net.cpp:86] Creating Layer relu1
I0428 20:31:30.445771  3964 net.cpp:408] relu1 <- ip1
I0428 20:31:30.445782  3964 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:30.445967  3964 net.cpp:124] Setting up relu1
I0428 20:31:30.445978  3964 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:30.445983  3964 net.cpp:139] Memory required for data: 18863360
I0428 20:31:30.445988  3964 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:30.446002  3964 net.cpp:86] Creating Layer ip2
I0428 20:31:30.446007  3964 net.cpp:408] ip2 <- ip1
I0428 20:31:30.446015  3964 net.cpp:382] ip2 -> ip2
I0428 20:31:30.446143  3964 net.cpp:124] Setting up ip2
I0428 20:31:30.446153  3964 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:31:30.446158  3964 net.cpp:139] Memory required for data: 18869760
I0428 20:31:30.446167  3964 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:30.446177  3964 net.cpp:86] Creating Layer relu2
I0428 20:31:30.446187  3964 net.cpp:408] relu2 <- ip2
I0428 20:31:30.446197  3964 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:30.446988  3964 net.cpp:124] Setting up relu2
I0428 20:31:30.447002  3964 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:31:30.447007  3964 net.cpp:139] Memory required for data: 18876160
I0428 20:31:30.447013  3964 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:30.447026  3964 net.cpp:86] Creating Layer ip3
I0428 20:31:30.447032  3964 net.cpp:408] ip3 <- ip2
I0428 20:31:30.447041  3964 net.cpp:382] ip3 -> ip3
I0428 20:31:30.447160  3964 net.cpp:124] Setting up ip3
I0428 20:31:30.447180  3964 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:30.447185  3964 net.cpp:139] Memory required for data: 18878720
I0428 20:31:30.447208  3964 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:30.447232  3964 net.cpp:86] Creating Layer relu3
I0428 20:31:30.447237  3964 net.cpp:408] relu3 <- ip3
I0428 20:31:30.447244  3964 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:30.447419  3964 net.cpp:124] Setting up relu3
I0428 20:31:30.447430  3964 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:30.447437  3964 net.cpp:139] Memory required for data: 18881280
I0428 20:31:30.447441  3964 layer_factory.hpp:77] Creating layer loss
I0428 20:31:30.447451  3964 net.cpp:86] Creating Layer loss
I0428 20:31:30.447458  3964 net.cpp:408] loss <- ip3
I0428 20:31:30.447463  3964 net.cpp:408] loss <- label
I0428 20:31:30.447489  3964 net.cpp:382] loss -> loss
I0428 20:31:30.447511  3964 layer_factory.hpp:77] Creating layer loss
I0428 20:31:30.447798  3964 net.cpp:124] Setting up loss
I0428 20:31:30.447808  3964 net.cpp:131] Top shape: (1)
I0428 20:31:30.447813  3964 net.cpp:134]     with loss weight 1
I0428 20:31:30.447834  3964 net.cpp:139] Memory required for data: 18881284
I0428 20:31:30.447839  3964 net.cpp:200] loss needs backward computation.
I0428 20:31:30.447846  3964 net.cpp:200] relu3 needs backward computation.
I0428 20:31:30.447851  3964 net.cpp:200] ip3 needs backward computation.
I0428 20:31:30.447859  3964 net.cpp:200] relu2 needs backward computation.
I0428 20:31:30.447863  3964 net.cpp:200] ip2 needs backward computation.
I0428 20:31:30.447868  3964 net.cpp:200] relu1 needs backward computation.
I0428 20:31:30.447873  3964 net.cpp:200] ip1 needs backward computation.
I0428 20:31:30.447878  3964 net.cpp:200] pool1 needs backward computation.
I0428 20:31:30.447885  3964 net.cpp:200] conv1 needs backward computation.
I0428 20:31:30.447890  3964 net.cpp:200] pool0 needs backward computation.
I0428 20:31:30.447895  3964 net.cpp:200] conv0 needs backward computation.
I0428 20:31:30.447901  3964 net.cpp:202] mnist does not need backward computation.
I0428 20:31:30.447906  3964 net.cpp:244] This network produces output loss
I0428 20:31:30.447921  3964 net.cpp:257] Network initialization done.
I0428 20:31:30.448259  3964 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1556.prototxt
I0428 20:31:30.448293  3964 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:30.448395  3964 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:30.448514  3964 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:30.448571  3964 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:30.448603  3964 net.cpp:86] Creating Layer mnist
I0428 20:31:30.448613  3964 net.cpp:382] mnist -> data
I0428 20:31:30.448626  3964 net.cpp:382] mnist -> label
I0428 20:31:30.448776  3964 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:30.451103  3964 net.cpp:124] Setting up mnist
I0428 20:31:30.451118  3964 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:30.451126  3964 net.cpp:131] Top shape: 100 (100)
I0428 20:31:30.451146  3964 net.cpp:139] Memory required for data: 314000
I0428 20:31:30.451153  3964 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:30.451167  3964 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:30.451174  3964 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:30.451198  3964 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:30.451208  3964 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:30.451267  3964 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:30.451277  3964 net.cpp:131] Top shape: 100 (100)
I0428 20:31:30.451297  3964 net.cpp:131] Top shape: 100 (100)
I0428 20:31:30.451302  3964 net.cpp:139] Memory required for data: 314800
I0428 20:31:30.451306  3964 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:30.451323  3964 net.cpp:86] Creating Layer conv0
I0428 20:31:30.451329  3964 net.cpp:408] conv0 <- data
I0428 20:31:30.451339  3964 net.cpp:382] conv0 -> conv0
I0428 20:31:30.453131  3964 net.cpp:124] Setting up conv0
I0428 20:31:30.453178  3964 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:30.453184  3964 net.cpp:139] Memory required for data: 23354800
I0428 20:31:30.453200  3964 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:30.453213  3964 net.cpp:86] Creating Layer pool0
I0428 20:31:30.453219  3964 net.cpp:408] pool0 <- conv0
I0428 20:31:30.453228  3964 net.cpp:382] pool0 -> pool0
I0428 20:31:30.453275  3964 net.cpp:124] Setting up pool0
I0428 20:31:30.453285  3964 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:30.453290  3964 net.cpp:139] Memory required for data: 29114800
I0428 20:31:30.453295  3964 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:30.453311  3964 net.cpp:86] Creating Layer conv1
I0428 20:31:30.453318  3964 net.cpp:408] conv1 <- pool0
I0428 20:31:30.453330  3964 net.cpp:382] conv1 -> conv1
I0428 20:31:30.455245  3964 net.cpp:124] Setting up conv1
I0428 20:31:30.455265  3964 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:30.455291  3964 net.cpp:139] Memory required for data: 29370800
I0428 20:31:30.455307  3964 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:30.455324  3964 net.cpp:86] Creating Layer pool1
I0428 20:31:30.455332  3964 net.cpp:408] pool1 <- conv1
I0428 20:31:30.455341  3964 net.cpp:382] pool1 -> pool1
I0428 20:31:30.455404  3964 net.cpp:124] Setting up pool1
I0428 20:31:30.455413  3964 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:30.455418  3964 net.cpp:139] Memory required for data: 29434800
I0428 20:31:30.455423  3964 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:30.455435  3964 net.cpp:86] Creating Layer ip1
I0428 20:31:30.455441  3964 net.cpp:408] ip1 <- pool1
I0428 20:31:30.455453  3964 net.cpp:382] ip1 -> ip1
I0428 20:31:30.455616  3964 net.cpp:124] Setting up ip1
I0428 20:31:30.455636  3964 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:30.455641  3964 net.cpp:139] Memory required for data: 29454800
I0428 20:31:30.455654  3964 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:30.455665  3964 net.cpp:86] Creating Layer relu1
I0428 20:31:30.455672  3964 net.cpp:408] relu1 <- ip1
I0428 20:31:30.455680  3964 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:30.455868  3964 net.cpp:124] Setting up relu1
I0428 20:31:30.455878  3964 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:30.455883  3964 net.cpp:139] Memory required for data: 29474800
I0428 20:31:30.455889  3964 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:30.455902  3964 net.cpp:86] Creating Layer ip2
I0428 20:31:30.455924  3964 net.cpp:408] ip2 <- ip1
I0428 20:31:30.455934  3964 net.cpp:382] ip2 -> ip2
I0428 20:31:30.456051  3964 net.cpp:124] Setting up ip2
I0428 20:31:30.456061  3964 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:31:30.456066  3964 net.cpp:139] Memory required for data: 29484800
I0428 20:31:30.456076  3964 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:30.456084  3964 net.cpp:86] Creating Layer relu2
I0428 20:31:30.456089  3964 net.cpp:408] relu2 <- ip2
I0428 20:31:30.456096  3964 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:30.456255  3964 net.cpp:124] Setting up relu2
I0428 20:31:30.456267  3964 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:31:30.456272  3964 net.cpp:139] Memory required for data: 29494800
I0428 20:31:30.456292  3964 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:30.456302  3964 net.cpp:86] Creating Layer ip3
I0428 20:31:30.456307  3964 net.cpp:408] ip3 <- ip2
I0428 20:31:30.456326  3964 net.cpp:382] ip3 -> ip3
I0428 20:31:30.456437  3964 net.cpp:124] Setting up ip3
I0428 20:31:30.456447  3964 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:30.456451  3964 net.cpp:139] Memory required for data: 29498800
I0428 20:31:30.456487  3964 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:30.456496  3964 net.cpp:86] Creating Layer relu3
I0428 20:31:30.456502  3964 net.cpp:408] relu3 <- ip3
I0428 20:31:30.456511  3964 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:30.457434  3964 net.cpp:124] Setting up relu3
I0428 20:31:30.457448  3964 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:30.457453  3964 net.cpp:139] Memory required for data: 29502800
I0428 20:31:30.457458  3964 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:30.457466  3964 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:30.457471  3964 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:30.457481  3964 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:30.457491  3964 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:30.457597  3964 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:30.457605  3964 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:30.457612  3964 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:30.457617  3964 net.cpp:139] Memory required for data: 29510800
I0428 20:31:30.457634  3964 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:30.457655  3964 net.cpp:86] Creating Layer accuracy
I0428 20:31:30.457661  3964 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:30.457669  3964 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:30.457675  3964 net.cpp:382] accuracy -> accuracy
I0428 20:31:30.457705  3964 net.cpp:124] Setting up accuracy
I0428 20:31:30.457712  3964 net.cpp:131] Top shape: (1)
I0428 20:31:30.457717  3964 net.cpp:139] Memory required for data: 29510804
I0428 20:31:30.457723  3964 layer_factory.hpp:77] Creating layer loss
I0428 20:31:30.457741  3964 net.cpp:86] Creating Layer loss
I0428 20:31:30.457751  3964 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:30.457758  3964 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:30.457767  3964 net.cpp:382] loss -> loss
I0428 20:31:30.457792  3964 layer_factory.hpp:77] Creating layer loss
I0428 20:31:30.458101  3964 net.cpp:124] Setting up loss
I0428 20:31:30.458112  3964 net.cpp:131] Top shape: (1)
I0428 20:31:30.458117  3964 net.cpp:134]     with loss weight 1
I0428 20:31:30.458138  3964 net.cpp:139] Memory required for data: 29510808
I0428 20:31:30.458144  3964 net.cpp:200] loss needs backward computation.
I0428 20:31:30.458150  3964 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:30.458156  3964 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:30.458161  3964 net.cpp:200] relu3 needs backward computation.
I0428 20:31:30.458168  3964 net.cpp:200] ip3 needs backward computation.
I0428 20:31:30.458173  3964 net.cpp:200] relu2 needs backward computation.
I0428 20:31:30.458178  3964 net.cpp:200] ip2 needs backward computation.
I0428 20:31:30.458183  3964 net.cpp:200] relu1 needs backward computation.
I0428 20:31:30.458187  3964 net.cpp:200] ip1 needs backward computation.
I0428 20:31:30.458194  3964 net.cpp:200] pool1 needs backward computation.
I0428 20:31:30.458199  3964 net.cpp:200] conv1 needs backward computation.
I0428 20:31:30.458204  3964 net.cpp:200] pool0 needs backward computation.
I0428 20:31:30.458209  3964 net.cpp:200] conv0 needs backward computation.
I0428 20:31:30.458215  3964 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:30.458230  3964 net.cpp:202] mnist does not need backward computation.
I0428 20:31:30.458235  3964 net.cpp:244] This network produces output accuracy
I0428 20:31:30.458240  3964 net.cpp:244] This network produces output loss
I0428 20:31:30.458256  3964 net.cpp:257] Network initialization done.
I0428 20:31:30.458304  3964 solver.cpp:56] Solver scaffolding done.
I0428 20:31:30.458683  3964 caffe.cpp:248] Starting Optimization
I0428 20:31:30.458689  3964 solver.cpp:273] Solving LeNet
I0428 20:31:30.458694  3964 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:30.458928  3964 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:30.467243  3964 blocking_queue.cpp:49] Waiting for data
I0428 20:31:30.577857  3971 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:30.579505  3964 solver.cpp:398]     Test net output #0: accuracy = 0.1126
I0428 20:31:30.579537  3964 solver.cpp:398]     Test net output #1: loss = 2.30186 (* 1 = 2.30186 loss)
I0428 20:31:30.585474  3964 solver.cpp:219] Iteration 0 (0 iter/s, 0.12674s/100 iters), loss = 2.3106
I0428 20:31:30.585508  3964 solver.cpp:238]     Train net output #0: loss = 2.3106 (* 1 = 2.3106 loss)
I0428 20:31:30.585523  3964 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:30.808918  3964 solver.cpp:219] Iteration 100 (447.658 iter/s, 0.223385s/100 iters), loss = 0.435137
I0428 20:31:30.808966  3964 solver.cpp:238]     Train net output #0: loss = 0.435137 (* 1 = 0.435137 loss)
I0428 20:31:30.808979  3964 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:31.027415  3964 solver.cpp:219] Iteration 200 (457.818 iter/s, 0.218427s/100 iters), loss = 0.319492
I0428 20:31:31.027460  3964 solver.cpp:238]     Train net output #0: loss = 0.319492 (* 1 = 0.319492 loss)
I0428 20:31:31.027472  3964 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:31.245751  3964 solver.cpp:219] Iteration 300 (458.138 iter/s, 0.218275s/100 iters), loss = 0.374174
I0428 20:31:31.245796  3964 solver.cpp:238]     Train net output #0: loss = 0.374174 (* 1 = 0.374174 loss)
I0428 20:31:31.245807  3964 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:31.460672  3964 solver.cpp:219] Iteration 400 (465.415 iter/s, 0.214862s/100 iters), loss = 0.594137
I0428 20:31:31.460710  3964 solver.cpp:238]     Train net output #0: loss = 0.594137 (* 1 = 0.594137 loss)
I0428 20:31:31.460718  3964 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:31.673954  3964 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:31.778959  3971 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:31.782613  3964 solver.cpp:398]     Test net output #0: accuracy = 0.868
I0428 20:31:31.782641  3964 solver.cpp:398]     Test net output #1: loss = 0.35356 (* 1 = 0.35356 loss)
I0428 20:31:31.784626  3964 solver.cpp:219] Iteration 500 (308.742 iter/s, 0.323895s/100 iters), loss = 0.432557
I0428 20:31:31.784677  3964 solver.cpp:238]     Train net output #0: loss = 0.432557 (* 1 = 0.432557 loss)
I0428 20:31:31.784685  3964 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:32.000008  3964 solver.cpp:219] Iteration 600 (464.435 iter/s, 0.215315s/100 iters), loss = 0.163893
I0428 20:31:32.000044  3964 solver.cpp:238]     Train net output #0: loss = 0.163893 (* 1 = 0.163893 loss)
I0428 20:31:32.000054  3964 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:32.217406  3964 solver.cpp:219] Iteration 700 (460.1 iter/s, 0.217344s/100 iters), loss = 0.216729
I0428 20:31:32.217447  3964 solver.cpp:238]     Train net output #0: loss = 0.216729 (* 1 = 0.216729 loss)
I0428 20:31:32.217456  3964 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:32.440125  3964 solver.cpp:219] Iteration 800 (449.11 iter/s, 0.222663s/100 iters), loss = 0.373989
I0428 20:31:32.440166  3964 solver.cpp:238]     Train net output #0: loss = 0.37399 (* 1 = 0.37399 loss)
I0428 20:31:32.440176  3964 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:32.652384  3964 solver.cpp:219] Iteration 900 (471.252 iter/s, 0.212201s/100 iters), loss = 0.16909
I0428 20:31:32.652436  3964 solver.cpp:238]     Train net output #0: loss = 0.16909 (* 1 = 0.16909 loss)
I0428 20:31:32.652451  3964 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:32.726007  3970 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:32.865742  3964 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:32.868264  3964 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:32.869757  3964 solver.cpp:311] Iteration 1000, loss = 0.253829
I0428 20:31:32.869782  3964 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:32.969852  3971 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:32.973304  3964 solver.cpp:398]     Test net output #0: accuracy = 0.8782
I0428 20:31:32.973325  3964 solver.cpp:398]     Test net output #1: loss = 0.310197 (* 1 = 0.310197 loss)
I0428 20:31:32.973331  3964 solver.cpp:316] Optimization Done.
I0428 20:31:32.973335  3964 caffe.cpp:259] Optimization Done.
