I0428 20:18:00.086261  1033 caffe.cpp:218] Using GPUs 0
I0428 20:18:00.116475  1033 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:00.565819  1033 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1308.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:00.565973  1033 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1308.prototxt
I0428 20:18:00.566319  1033 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:00.566351  1033 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:00.566452  1033 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:00.566515  1033 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:00.566597  1033 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:00.566617  1033 net.cpp:86] Creating Layer mnist
I0428 20:18:00.566623  1033 net.cpp:382] mnist -> data
I0428 20:18:00.566642  1033 net.cpp:382] mnist -> label
I0428 20:18:00.567649  1033 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:00.570027  1033 net.cpp:124] Setting up mnist
I0428 20:18:00.570042  1033 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:00.570047  1033 net.cpp:131] Top shape: 64 (64)
I0428 20:18:00.570050  1033 net.cpp:139] Memory required for data: 200960
I0428 20:18:00.570055  1033 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:00.570070  1033 net.cpp:86] Creating Layer conv0
I0428 20:18:00.570096  1033 net.cpp:408] conv0 <- data
I0428 20:18:00.570107  1033 net.cpp:382] conv0 -> conv0
I0428 20:18:00.808264  1033 net.cpp:124] Setting up conv0
I0428 20:18:00.808323  1033 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:00.808327  1033 net.cpp:139] Memory required for data: 7573760
I0428 20:18:00.808342  1033 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:00.808373  1033 net.cpp:86] Creating Layer pool0
I0428 20:18:00.808377  1033 net.cpp:408] pool0 <- conv0
I0428 20:18:00.808382  1033 net.cpp:382] pool0 -> pool0
I0428 20:18:00.808434  1033 net.cpp:124] Setting up pool0
I0428 20:18:00.808440  1033 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:00.808444  1033 net.cpp:139] Memory required for data: 9416960
I0428 20:18:00.808447  1033 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:00.808459  1033 net.cpp:86] Creating Layer conv1
I0428 20:18:00.808465  1033 net.cpp:408] conv1 <- pool0
I0428 20:18:00.808471  1033 net.cpp:382] conv1 -> conv1
I0428 20:18:00.811286  1033 net.cpp:124] Setting up conv1
I0428 20:18:00.811317  1033 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:00.811321  1033 net.cpp:139] Memory required for data: 9580800
I0428 20:18:00.811331  1033 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:00.811337  1033 net.cpp:86] Creating Layer pool1
I0428 20:18:00.811357  1033 net.cpp:408] pool1 <- conv1
I0428 20:18:00.811362  1033 net.cpp:382] pool1 -> pool1
I0428 20:18:00.811399  1033 net.cpp:124] Setting up pool1
I0428 20:18:00.811406  1033 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:00.811410  1033 net.cpp:139] Memory required for data: 9621760
I0428 20:18:00.811414  1033 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:00.811425  1033 net.cpp:86] Creating Layer ip1
I0428 20:18:00.811430  1033 net.cpp:408] ip1 <- pool1
I0428 20:18:00.811435  1033 net.cpp:382] ip1 -> ip1
I0428 20:18:00.811558  1033 net.cpp:124] Setting up ip1
I0428 20:18:00.811580  1033 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:00.811585  1033 net.cpp:139] Memory required for data: 9628160
I0428 20:18:00.811594  1033 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:00.811599  1033 net.cpp:86] Creating Layer relu1
I0428 20:18:00.811601  1033 net.cpp:408] relu1 <- ip1
I0428 20:18:00.811606  1033 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:00.811769  1033 net.cpp:124] Setting up relu1
I0428 20:18:00.811777  1033 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:00.811780  1033 net.cpp:139] Memory required for data: 9634560
I0428 20:18:00.811784  1033 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:00.811789  1033 net.cpp:86] Creating Layer ip2
I0428 20:18:00.811792  1033 net.cpp:408] ip2 <- ip1
I0428 20:18:00.811797  1033 net.cpp:382] ip2 -> ip2
I0428 20:18:00.811888  1033 net.cpp:124] Setting up ip2
I0428 20:18:00.811895  1033 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:00.811898  1033 net.cpp:139] Memory required for data: 9637120
I0428 20:18:00.811904  1033 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:00.811909  1033 net.cpp:86] Creating Layer relu2
I0428 20:18:00.811913  1033 net.cpp:408] relu2 <- ip2
I0428 20:18:00.811916  1033 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:00.812650  1033 net.cpp:124] Setting up relu2
I0428 20:18:00.812677  1033 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:00.812697  1033 net.cpp:139] Memory required for data: 9639680
I0428 20:18:00.812701  1033 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:00.812708  1033 net.cpp:86] Creating Layer ip3
I0428 20:18:00.812712  1033 net.cpp:408] ip3 <- ip2
I0428 20:18:00.812717  1033 net.cpp:382] ip3 -> ip3
I0428 20:18:00.812820  1033 net.cpp:124] Setting up ip3
I0428 20:18:00.812829  1033 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:00.812831  1033 net.cpp:139] Memory required for data: 9642240
I0428 20:18:00.812855  1033 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:00.812862  1033 net.cpp:86] Creating Layer relu3
I0428 20:18:00.812865  1033 net.cpp:408] relu3 <- ip3
I0428 20:18:00.812870  1033 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:00.813036  1033 net.cpp:124] Setting up relu3
I0428 20:18:00.813045  1033 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:00.813048  1033 net.cpp:139] Memory required for data: 9644800
I0428 20:18:00.813051  1033 layer_factory.hpp:77] Creating layer loss
I0428 20:18:00.813057  1033 net.cpp:86] Creating Layer loss
I0428 20:18:00.813061  1033 net.cpp:408] loss <- ip3
I0428 20:18:00.813064  1033 net.cpp:408] loss <- label
I0428 20:18:00.813071  1033 net.cpp:382] loss -> loss
I0428 20:18:00.813089  1033 layer_factory.hpp:77] Creating layer loss
I0428 20:18:00.813319  1033 net.cpp:124] Setting up loss
I0428 20:18:00.813328  1033 net.cpp:131] Top shape: (1)
I0428 20:18:00.813331  1033 net.cpp:134]     with loss weight 1
I0428 20:18:00.813346  1033 net.cpp:139] Memory required for data: 9644804
I0428 20:18:00.813350  1033 net.cpp:200] loss needs backward computation.
I0428 20:18:00.813354  1033 net.cpp:200] relu3 needs backward computation.
I0428 20:18:00.813357  1033 net.cpp:200] ip3 needs backward computation.
I0428 20:18:00.813360  1033 net.cpp:200] relu2 needs backward computation.
I0428 20:18:00.813364  1033 net.cpp:200] ip2 needs backward computation.
I0428 20:18:00.813366  1033 net.cpp:200] relu1 needs backward computation.
I0428 20:18:00.813369  1033 net.cpp:200] ip1 needs backward computation.
I0428 20:18:00.813371  1033 net.cpp:200] pool1 needs backward computation.
I0428 20:18:00.813375  1033 net.cpp:200] conv1 needs backward computation.
I0428 20:18:00.813379  1033 net.cpp:200] pool0 needs backward computation.
I0428 20:18:00.813381  1033 net.cpp:200] conv0 needs backward computation.
I0428 20:18:00.813385  1033 net.cpp:202] mnist does not need backward computation.
I0428 20:18:00.813387  1033 net.cpp:244] This network produces output loss
I0428 20:18:00.813396  1033 net.cpp:257] Network initialization done.
I0428 20:18:00.813762  1033 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1308.prototxt
I0428 20:18:00.813804  1033 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:00.813894  1033 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:00.813971  1033 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:00.814015  1033 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:00.814028  1033 net.cpp:86] Creating Layer mnist
I0428 20:18:00.814033  1033 net.cpp:382] mnist -> data
I0428 20:18:00.814040  1033 net.cpp:382] mnist -> label
I0428 20:18:00.814121  1033 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:00.816064  1033 net.cpp:124] Setting up mnist
I0428 20:18:00.816078  1033 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:00.816083  1033 net.cpp:131] Top shape: 100 (100)
I0428 20:18:00.816087  1033 net.cpp:139] Memory required for data: 314000
I0428 20:18:00.816090  1033 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:00.816115  1033 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:00.816119  1033 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:00.816123  1033 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:00.816130  1033 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:00.816198  1033 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:00.816205  1033 net.cpp:131] Top shape: 100 (100)
I0428 20:18:00.816210  1033 net.cpp:131] Top shape: 100 (100)
I0428 20:18:00.816211  1033 net.cpp:139] Memory required for data: 314800
I0428 20:18:00.816215  1033 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:00.816223  1033 net.cpp:86] Creating Layer conv0
I0428 20:18:00.816226  1033 net.cpp:408] conv0 <- data
I0428 20:18:00.816231  1033 net.cpp:382] conv0 -> conv0
I0428 20:18:00.817698  1033 net.cpp:124] Setting up conv0
I0428 20:18:00.817713  1033 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:00.817716  1033 net.cpp:139] Memory required for data: 11834800
I0428 20:18:00.817740  1033 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:00.817747  1033 net.cpp:86] Creating Layer pool0
I0428 20:18:00.817751  1033 net.cpp:408] pool0 <- conv0
I0428 20:18:00.817757  1033 net.cpp:382] pool0 -> pool0
I0428 20:18:00.817829  1033 net.cpp:124] Setting up pool0
I0428 20:18:00.817852  1033 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:00.817857  1033 net.cpp:139] Memory required for data: 14714800
I0428 20:18:00.817859  1033 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:00.817869  1033 net.cpp:86] Creating Layer conv1
I0428 20:18:00.817873  1033 net.cpp:408] conv1 <- pool0
I0428 20:18:00.817878  1033 net.cpp:382] conv1 -> conv1
I0428 20:18:00.819540  1033 net.cpp:124] Setting up conv1
I0428 20:18:00.819555  1033 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:00.819557  1033 net.cpp:139] Memory required for data: 14970800
I0428 20:18:00.819582  1033 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:00.819589  1033 net.cpp:86] Creating Layer pool1
I0428 20:18:00.819592  1033 net.cpp:408] pool1 <- conv1
I0428 20:18:00.819597  1033 net.cpp:382] pool1 -> pool1
I0428 20:18:00.819631  1033 net.cpp:124] Setting up pool1
I0428 20:18:00.819638  1033 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:00.819641  1033 net.cpp:139] Memory required for data: 15034800
I0428 20:18:00.819644  1033 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:00.819650  1033 net.cpp:86] Creating Layer ip1
I0428 20:18:00.819653  1033 net.cpp:408] ip1 <- pool1
I0428 20:18:00.819658  1033 net.cpp:382] ip1 -> ip1
I0428 20:18:00.819774  1033 net.cpp:124] Setting up ip1
I0428 20:18:00.819782  1033 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:00.819795  1033 net.cpp:139] Memory required for data: 15044800
I0428 20:18:00.819803  1033 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:00.819809  1033 net.cpp:86] Creating Layer relu1
I0428 20:18:00.819813  1033 net.cpp:408] relu1 <- ip1
I0428 20:18:00.819816  1033 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:00.820062  1033 net.cpp:124] Setting up relu1
I0428 20:18:00.820070  1033 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:00.820073  1033 net.cpp:139] Memory required for data: 15054800
I0428 20:18:00.820076  1033 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:00.820083  1033 net.cpp:86] Creating Layer ip2
I0428 20:18:00.820086  1033 net.cpp:408] ip2 <- ip1
I0428 20:18:00.820092  1033 net.cpp:382] ip2 -> ip2
I0428 20:18:00.820185  1033 net.cpp:124] Setting up ip2
I0428 20:18:00.820192  1033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:00.820196  1033 net.cpp:139] Memory required for data: 15058800
I0428 20:18:00.820202  1033 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:00.820206  1033 net.cpp:86] Creating Layer relu2
I0428 20:18:00.820209  1033 net.cpp:408] relu2 <- ip2
I0428 20:18:00.820214  1033 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:00.820374  1033 net.cpp:124] Setting up relu2
I0428 20:18:00.820381  1033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:00.820384  1033 net.cpp:139] Memory required for data: 15062800
I0428 20:18:00.820387  1033 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:00.820392  1033 net.cpp:86] Creating Layer ip3
I0428 20:18:00.820395  1033 net.cpp:408] ip3 <- ip2
I0428 20:18:00.820399  1033 net.cpp:382] ip3 -> ip3
I0428 20:18:00.820487  1033 net.cpp:124] Setting up ip3
I0428 20:18:00.820494  1033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:00.820497  1033 net.cpp:139] Memory required for data: 15066800
I0428 20:18:00.820504  1033 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:00.820508  1033 net.cpp:86] Creating Layer relu3
I0428 20:18:00.820511  1033 net.cpp:408] relu3 <- ip3
I0428 20:18:00.820515  1033 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:00.821388  1033 net.cpp:124] Setting up relu3
I0428 20:18:00.821401  1033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:00.821405  1033 net.cpp:139] Memory required for data: 15070800
I0428 20:18:00.821409  1033 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:00.821415  1033 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:00.821419  1033 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:00.821425  1033 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:00.821436  1033 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:00.821488  1033 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:00.821496  1033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:00.821501  1033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:00.821502  1033 net.cpp:139] Memory required for data: 15078800
I0428 20:18:00.821511  1033 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:00.821516  1033 net.cpp:86] Creating Layer accuracy
I0428 20:18:00.821518  1033 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:00.821522  1033 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:00.821527  1033 net.cpp:382] accuracy -> accuracy
I0428 20:18:00.821534  1033 net.cpp:124] Setting up accuracy
I0428 20:18:00.821538  1033 net.cpp:131] Top shape: (1)
I0428 20:18:00.821542  1033 net.cpp:139] Memory required for data: 15078804
I0428 20:18:00.821544  1033 layer_factory.hpp:77] Creating layer loss
I0428 20:18:00.821548  1033 net.cpp:86] Creating Layer loss
I0428 20:18:00.821552  1033 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:00.821555  1033 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:00.821564  1033 net.cpp:382] loss -> loss
I0428 20:18:00.821570  1033 layer_factory.hpp:77] Creating layer loss
I0428 20:18:00.821794  1033 net.cpp:124] Setting up loss
I0428 20:18:00.821802  1033 net.cpp:131] Top shape: (1)
I0428 20:18:00.821805  1033 net.cpp:134]     with loss weight 1
I0428 20:18:00.821830  1033 net.cpp:139] Memory required for data: 15078808
I0428 20:18:00.821833  1033 net.cpp:200] loss needs backward computation.
I0428 20:18:00.821837  1033 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:00.821841  1033 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:00.821844  1033 net.cpp:200] relu3 needs backward computation.
I0428 20:18:00.821848  1033 net.cpp:200] ip3 needs backward computation.
I0428 20:18:00.821851  1033 net.cpp:200] relu2 needs backward computation.
I0428 20:18:00.821854  1033 net.cpp:200] ip2 needs backward computation.
I0428 20:18:00.821857  1033 net.cpp:200] relu1 needs backward computation.
I0428 20:18:00.821861  1033 net.cpp:200] ip1 needs backward computation.
I0428 20:18:00.821863  1033 net.cpp:200] pool1 needs backward computation.
I0428 20:18:00.821866  1033 net.cpp:200] conv1 needs backward computation.
I0428 20:18:00.821869  1033 net.cpp:200] pool0 needs backward computation.
I0428 20:18:00.821872  1033 net.cpp:200] conv0 needs backward computation.
I0428 20:18:00.821877  1033 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:00.821880  1033 net.cpp:202] mnist does not need backward computation.
I0428 20:18:00.821882  1033 net.cpp:244] This network produces output accuracy
I0428 20:18:00.821887  1033 net.cpp:244] This network produces output loss
I0428 20:18:00.821897  1033 net.cpp:257] Network initialization done.
I0428 20:18:00.821936  1033 solver.cpp:56] Solver scaffolding done.
I0428 20:18:00.822299  1033 caffe.cpp:248] Starting Optimization
I0428 20:18:00.822304  1033 solver.cpp:273] Solving LeNet
I0428 20:18:00.822307  1033 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:00.822463  1033 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:00.890619  1042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:00.892714  1033 solver.cpp:398]     Test net output #0: accuracy = 0.099
I0428 20:18:00.892734  1033 solver.cpp:398]     Test net output #1: loss = 2.29848 (* 1 = 2.29848 loss)
I0428 20:18:00.896719  1033 solver.cpp:219] Iteration 0 (-1.05588e-30 iter/s, 0.0743885s/100 iters), loss = 2.28847
I0428 20:18:00.896772  1033 solver.cpp:238]     Train net output #0: loss = 2.28847 (* 1 = 2.28847 loss)
I0428 20:18:00.896800  1033 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:01.015743  1033 solver.cpp:219] Iteration 100 (840.524 iter/s, 0.118973s/100 iters), loss = 1.08064
I0428 20:18:01.015768  1033 solver.cpp:238]     Train net output #0: loss = 1.08064 (* 1 = 1.08064 loss)
I0428 20:18:01.015789  1033 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:01.134752  1033 solver.cpp:219] Iteration 200 (840.525 iter/s, 0.118973s/100 iters), loss = 0.793576
I0428 20:18:01.134778  1033 solver.cpp:238]     Train net output #0: loss = 0.793576 (* 1 = 0.793576 loss)
I0428 20:18:01.134784  1033 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:01.255900  1033 solver.cpp:219] Iteration 300 (825.691 iter/s, 0.121111s/100 iters), loss = 0.522842
I0428 20:18:01.255926  1033 solver.cpp:238]     Train net output #0: loss = 0.522842 (* 1 = 0.522842 loss)
I0428 20:18:01.255933  1033 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:01.378828  1033 solver.cpp:219] Iteration 400 (813.734 iter/s, 0.12289s/100 iters), loss = 0.7577
I0428 20:18:01.378864  1033 solver.cpp:238]     Train net output #0: loss = 0.7577 (* 1 = 0.7577 loss)
I0428 20:18:01.378870  1033 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:01.498731  1033 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:01.564419  1042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:01.566722  1033 solver.cpp:398]     Test net output #0: accuracy = 0.8553
I0428 20:18:01.566742  1033 solver.cpp:398]     Test net output #1: loss = 0.619316 (* 1 = 0.619316 loss)
I0428 20:18:01.567894  1033 solver.cpp:219] Iteration 500 (529.024 iter/s, 0.189027s/100 iters), loss = 0.634237
I0428 20:18:01.567916  1033 solver.cpp:238]     Train net output #0: loss = 0.634237 (* 1 = 0.634237 loss)
I0428 20:18:01.567939  1033 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:01.686760  1033 solver.cpp:219] Iteration 600 (841.523 iter/s, 0.118832s/100 iters), loss = 0.427886
I0428 20:18:01.686800  1033 solver.cpp:238]     Train net output #0: loss = 0.427886 (* 1 = 0.427886 loss)
I0428 20:18:01.686806  1033 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:01.804606  1033 solver.cpp:219] Iteration 700 (848.816 iter/s, 0.117811s/100 iters), loss = 0.8501
I0428 20:18:01.804633  1033 solver.cpp:238]     Train net output #0: loss = 0.8501 (* 1 = 0.8501 loss)
I0428 20:18:01.804656  1033 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:01.923593  1033 solver.cpp:219] Iteration 800 (840.698 iter/s, 0.118949s/100 iters), loss = 0.61766
I0428 20:18:01.923619  1033 solver.cpp:238]     Train net output #0: loss = 0.61766 (* 1 = 0.61766 loss)
I0428 20:18:01.923624  1033 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:02.041098  1033 solver.cpp:219] Iteration 900 (851.287 iter/s, 0.117469s/100 iters), loss = 0.542398
I0428 20:18:02.041123  1033 solver.cpp:238]     Train net output #0: loss = 0.542398 (* 1 = 0.542398 loss)
I0428 20:18:02.041146  1033 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:02.080129  1041 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:02.157178  1033 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:02.158305  1033 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:02.159126  1033 solver.cpp:311] Iteration 1000, loss = 0.71066
I0428 20:18:02.159142  1033 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:02.224278  1042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:02.226564  1033 solver.cpp:398]     Test net output #0: accuracy = 0.8709
I0428 20:18:02.226583  1033 solver.cpp:398]     Test net output #1: loss = 0.542463 (* 1 = 0.542463 loss)
I0428 20:18:02.226588  1033 solver.cpp:316] Optimization Done.
I0428 20:18:02.226608  1033 caffe.cpp:259] Optimization Done.
