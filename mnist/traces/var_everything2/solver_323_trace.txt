I0428 19:40:03.332747 24455 caffe.cpp:218] Using GPUs 0
I0428 19:40:03.369103 24455 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:03.887625 24455 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test323.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:03.887766 24455 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test323.prototxt
I0428 19:40:03.888137 24455 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:03.888154 24455 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:03.888242 24455 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:40:03.888310 24455 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:03.888412 24455 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:03.888438 24455 net.cpp:86] Creating Layer mnist
I0428 19:40:03.888448 24455 net.cpp:382] mnist -> data
I0428 19:40:03.888471 24455 net.cpp:382] mnist -> label
I0428 19:40:03.889569 24455 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:03.892025 24455 net.cpp:124] Setting up mnist
I0428 19:40:03.892046 24455 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:03.892055 24455 net.cpp:131] Top shape: 64 (64)
I0428 19:40:03.892058 24455 net.cpp:139] Memory required for data: 200960
I0428 19:40:03.892066 24455 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:03.892082 24455 net.cpp:86] Creating Layer conv0
I0428 19:40:03.892088 24455 net.cpp:408] conv0 <- data
I0428 19:40:03.892099 24455 net.cpp:382] conv0 -> conv0
I0428 19:40:04.182344 24455 net.cpp:124] Setting up conv0
I0428 19:40:04.182376 24455 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:04.182381 24455 net.cpp:139] Memory required for data: 495872
I0428 19:40:04.182422 24455 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:04.182440 24455 net.cpp:86] Creating Layer pool0
I0428 19:40:04.182446 24455 net.cpp:408] pool0 <- conv0
I0428 19:40:04.182451 24455 net.cpp:382] pool0 -> pool0
I0428 19:40:04.182512 24455 net.cpp:124] Setting up pool0
I0428 19:40:04.182523 24455 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:04.182525 24455 net.cpp:139] Memory required for data: 569600
I0428 19:40:04.182529 24455 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:04.182546 24455 net.cpp:86] Creating Layer conv1
I0428 19:40:04.182551 24455 net.cpp:408] conv1 <- pool0
I0428 19:40:04.182557 24455 net.cpp:382] conv1 -> conv1
I0428 19:40:04.184743 24455 net.cpp:124] Setting up conv1
I0428 19:40:04.184763 24455 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:04.184767 24455 net.cpp:139] Memory required for data: 651520
I0428 19:40:04.184778 24455 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:04.184787 24455 net.cpp:86] Creating Layer pool1
I0428 19:40:04.184792 24455 net.cpp:408] pool1 <- conv1
I0428 19:40:04.184798 24455 net.cpp:382] pool1 -> pool1
I0428 19:40:04.184852 24455 net.cpp:124] Setting up pool1
I0428 19:40:04.184860 24455 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:04.184864 24455 net.cpp:139] Memory required for data: 672000
I0428 19:40:04.184867 24455 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:04.184877 24455 net.cpp:86] Creating Layer ip1
I0428 19:40:04.184881 24455 net.cpp:408] ip1 <- pool1
I0428 19:40:04.184888 24455 net.cpp:382] ip1 -> ip1
I0428 19:40:04.186004 24455 net.cpp:124] Setting up ip1
I0428 19:40:04.186020 24455 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:04.186024 24455 net.cpp:139] Memory required for data: 684800
I0428 19:40:04.186034 24455 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:04.186043 24455 net.cpp:86] Creating Layer relu1
I0428 19:40:04.186048 24455 net.cpp:408] relu1 <- ip1
I0428 19:40:04.186054 24455 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:04.186267 24455 net.cpp:124] Setting up relu1
I0428 19:40:04.186280 24455 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:04.186285 24455 net.cpp:139] Memory required for data: 697600
I0428 19:40:04.186287 24455 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:04.186295 24455 net.cpp:86] Creating Layer ip2
I0428 19:40:04.186300 24455 net.cpp:408] ip2 <- ip1
I0428 19:40:04.186306 24455 net.cpp:382] ip2 -> ip2
I0428 19:40:04.186429 24455 net.cpp:124] Setting up ip2
I0428 19:40:04.186439 24455 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:04.186442 24455 net.cpp:139] Memory required for data: 700160
I0428 19:40:04.186449 24455 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:04.186457 24455 net.cpp:86] Creating Layer relu2
I0428 19:40:04.186461 24455 net.cpp:408] relu2 <- ip2
I0428 19:40:04.186466 24455 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:04.187325 24455 net.cpp:124] Setting up relu2
I0428 19:40:04.187340 24455 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:04.187345 24455 net.cpp:139] Memory required for data: 702720
I0428 19:40:04.187348 24455 layer_factory.hpp:77] Creating layer loss
I0428 19:40:04.187356 24455 net.cpp:86] Creating Layer loss
I0428 19:40:04.187361 24455 net.cpp:408] loss <- ip2
I0428 19:40:04.187366 24455 net.cpp:408] loss <- label
I0428 19:40:04.187372 24455 net.cpp:382] loss -> loss
I0428 19:40:04.187396 24455 layer_factory.hpp:77] Creating layer loss
I0428 19:40:04.187691 24455 net.cpp:124] Setting up loss
I0428 19:40:04.187702 24455 net.cpp:131] Top shape: (1)
I0428 19:40:04.187706 24455 net.cpp:134]     with loss weight 1
I0428 19:40:04.187722 24455 net.cpp:139] Memory required for data: 702724
I0428 19:40:04.187726 24455 net.cpp:200] loss needs backward computation.
I0428 19:40:04.187731 24455 net.cpp:200] relu2 needs backward computation.
I0428 19:40:04.187734 24455 net.cpp:200] ip2 needs backward computation.
I0428 19:40:04.187738 24455 net.cpp:200] relu1 needs backward computation.
I0428 19:40:04.187741 24455 net.cpp:200] ip1 needs backward computation.
I0428 19:40:04.187746 24455 net.cpp:200] pool1 needs backward computation.
I0428 19:40:04.187760 24455 net.cpp:200] conv1 needs backward computation.
I0428 19:40:04.187764 24455 net.cpp:200] pool0 needs backward computation.
I0428 19:40:04.187767 24455 net.cpp:200] conv0 needs backward computation.
I0428 19:40:04.187772 24455 net.cpp:202] mnist does not need backward computation.
I0428 19:40:04.187774 24455 net.cpp:244] This network produces output loss
I0428 19:40:04.187784 24455 net.cpp:257] Network initialization done.
I0428 19:40:04.188138 24455 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test323.prototxt
I0428 19:40:04.188169 24455 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:04.188272 24455 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:40:04.188351 24455 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:04.188401 24455 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:04.188417 24455 net.cpp:86] Creating Layer mnist
I0428 19:40:04.188423 24455 net.cpp:382] mnist -> data
I0428 19:40:04.188432 24455 net.cpp:382] mnist -> label
I0428 19:40:04.188536 24455 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:04.190738 24455 net.cpp:124] Setting up mnist
I0428 19:40:04.190754 24455 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:04.190760 24455 net.cpp:131] Top shape: 100 (100)
I0428 19:40:04.190763 24455 net.cpp:139] Memory required for data: 314000
I0428 19:40:04.190768 24455 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:04.190781 24455 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:04.190785 24455 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:04.190791 24455 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:04.190800 24455 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:04.190881 24455 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:04.190901 24455 net.cpp:131] Top shape: 100 (100)
I0428 19:40:04.190907 24455 net.cpp:131] Top shape: 100 (100)
I0428 19:40:04.190910 24455 net.cpp:139] Memory required for data: 314800
I0428 19:40:04.190914 24455 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:04.190927 24455 net.cpp:86] Creating Layer conv0
I0428 19:40:04.190930 24455 net.cpp:408] conv0 <- data
I0428 19:40:04.190937 24455 net.cpp:382] conv0 -> conv0
I0428 19:40:04.192786 24455 net.cpp:124] Setting up conv0
I0428 19:40:04.192804 24455 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:04.192823 24455 net.cpp:139] Memory required for data: 775600
I0428 19:40:04.192834 24455 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:04.192842 24455 net.cpp:86] Creating Layer pool0
I0428 19:40:04.192847 24455 net.cpp:408] pool0 <- conv0
I0428 19:40:04.192852 24455 net.cpp:382] pool0 -> pool0
I0428 19:40:04.192898 24455 net.cpp:124] Setting up pool0
I0428 19:40:04.192906 24455 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:04.192910 24455 net.cpp:139] Memory required for data: 890800
I0428 19:40:04.192914 24455 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:04.192925 24455 net.cpp:86] Creating Layer conv1
I0428 19:40:04.192929 24455 net.cpp:408] conv1 <- pool0
I0428 19:40:04.192939 24455 net.cpp:382] conv1 -> conv1
I0428 19:40:04.194725 24455 net.cpp:124] Setting up conv1
I0428 19:40:04.194743 24455 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:04.194748 24455 net.cpp:139] Memory required for data: 1018800
I0428 19:40:04.194759 24455 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:04.194767 24455 net.cpp:86] Creating Layer pool1
I0428 19:40:04.194772 24455 net.cpp:408] pool1 <- conv1
I0428 19:40:04.194779 24455 net.cpp:382] pool1 -> pool1
I0428 19:40:04.194823 24455 net.cpp:124] Setting up pool1
I0428 19:40:04.194835 24455 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:04.194841 24455 net.cpp:139] Memory required for data: 1050800
I0428 19:40:04.194849 24455 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:04.194856 24455 net.cpp:86] Creating Layer ip1
I0428 19:40:04.194861 24455 net.cpp:408] ip1 <- pool1
I0428 19:40:04.194870 24455 net.cpp:382] ip1 -> ip1
I0428 19:40:04.195019 24455 net.cpp:124] Setting up ip1
I0428 19:40:04.195027 24455 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:04.195031 24455 net.cpp:139] Memory required for data: 1070800
I0428 19:40:04.195040 24455 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:04.195047 24455 net.cpp:86] Creating Layer relu1
I0428 19:40:04.195051 24455 net.cpp:408] relu1 <- ip1
I0428 19:40:04.195058 24455 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:04.195247 24455 net.cpp:124] Setting up relu1
I0428 19:40:04.195260 24455 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:04.195263 24455 net.cpp:139] Memory required for data: 1090800
I0428 19:40:04.195268 24455 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:04.195279 24455 net.cpp:86] Creating Layer ip2
I0428 19:40:04.195284 24455 net.cpp:408] ip2 <- ip1
I0428 19:40:04.195291 24455 net.cpp:382] ip2 -> ip2
I0428 19:40:04.195422 24455 net.cpp:124] Setting up ip2
I0428 19:40:04.195431 24455 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:04.195436 24455 net.cpp:139] Memory required for data: 1094800
I0428 19:40:04.195441 24455 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:04.195447 24455 net.cpp:86] Creating Layer relu2
I0428 19:40:04.195451 24455 net.cpp:408] relu2 <- ip2
I0428 19:40:04.195457 24455 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:04.195689 24455 net.cpp:124] Setting up relu2
I0428 19:40:04.195699 24455 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:04.195703 24455 net.cpp:139] Memory required for data: 1098800
I0428 19:40:04.195708 24455 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:40:04.195713 24455 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:40:04.195716 24455 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:40:04.195724 24455 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:40:04.195742 24455 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:40:04.195791 24455 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:40:04.195801 24455 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:04.195806 24455 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:04.195809 24455 net.cpp:139] Memory required for data: 1106800
I0428 19:40:04.195813 24455 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:04.195821 24455 net.cpp:86] Creating Layer accuracy
I0428 19:40:04.195824 24455 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:40:04.195829 24455 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:04.195842 24455 net.cpp:382] accuracy -> accuracy
I0428 19:40:04.195852 24455 net.cpp:124] Setting up accuracy
I0428 19:40:04.195858 24455 net.cpp:131] Top shape: (1)
I0428 19:40:04.195860 24455 net.cpp:139] Memory required for data: 1106804
I0428 19:40:04.195864 24455 layer_factory.hpp:77] Creating layer loss
I0428 19:40:04.195870 24455 net.cpp:86] Creating Layer loss
I0428 19:40:04.195874 24455 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:40:04.195878 24455 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:04.195883 24455 net.cpp:382] loss -> loss
I0428 19:40:04.195890 24455 layer_factory.hpp:77] Creating layer loss
I0428 19:40:04.196177 24455 net.cpp:124] Setting up loss
I0428 19:40:04.196189 24455 net.cpp:131] Top shape: (1)
I0428 19:40:04.196193 24455 net.cpp:134]     with loss weight 1
I0428 19:40:04.196202 24455 net.cpp:139] Memory required for data: 1106808
I0428 19:40:04.196205 24455 net.cpp:200] loss needs backward computation.
I0428 19:40:04.196209 24455 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:04.196214 24455 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:40:04.196218 24455 net.cpp:200] relu2 needs backward computation.
I0428 19:40:04.196221 24455 net.cpp:200] ip2 needs backward computation.
I0428 19:40:04.196225 24455 net.cpp:200] relu1 needs backward computation.
I0428 19:40:04.196228 24455 net.cpp:200] ip1 needs backward computation.
I0428 19:40:04.196233 24455 net.cpp:200] pool1 needs backward computation.
I0428 19:40:04.196235 24455 net.cpp:200] conv1 needs backward computation.
I0428 19:40:04.196239 24455 net.cpp:200] pool0 needs backward computation.
I0428 19:40:04.196244 24455 net.cpp:200] conv0 needs backward computation.
I0428 19:40:04.196247 24455 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:04.196251 24455 net.cpp:202] mnist does not need backward computation.
I0428 19:40:04.196255 24455 net.cpp:244] This network produces output accuracy
I0428 19:40:04.196259 24455 net.cpp:244] This network produces output loss
I0428 19:40:04.196270 24455 net.cpp:257] Network initialization done.
I0428 19:40:04.196315 24455 solver.cpp:56] Solver scaffolding done.
I0428 19:40:04.196635 24455 caffe.cpp:248] Starting Optimization
I0428 19:40:04.196643 24455 solver.cpp:273] Solving LeNet
I0428 19:40:04.196646 24455 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:04.197592 24455 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:04.200292 24455 blocking_queue.cpp:49] Waiting for data
I0428 19:40:04.271832 24462 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:04.272284 24455 solver.cpp:398]     Test net output #0: accuracy = 0.1091
I0428 19:40:04.272310 24455 solver.cpp:398]     Test net output #1: loss = 2.3026 (* 1 = 2.3026 loss)
I0428 19:40:04.274322 24455 solver.cpp:219] Iteration 0 (-2.22005e-34 iter/s, 0.0776397s/100 iters), loss = 2.30445
I0428 19:40:04.274353 24455 solver.cpp:238]     Train net output #0: loss = 2.30445 (* 1 = 2.30445 loss)
I0428 19:40:04.274368 24455 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:04.341827 24455 solver.cpp:219] Iteration 100 (1482.31 iter/s, 0.0674621s/100 iters), loss = 1.35663
I0428 19:40:04.341853 24455 solver.cpp:238]     Train net output #0: loss = 1.35663 (* 1 = 1.35663 loss)
I0428 19:40:04.341861 24455 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:04.404031 24455 solver.cpp:219] Iteration 200 (1608.49 iter/s, 0.0621701s/100 iters), loss = 1.60177
I0428 19:40:04.404074 24455 solver.cpp:238]     Train net output #0: loss = 1.60177 (* 1 = 1.60177 loss)
I0428 19:40:04.404081 24455 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:04.465704 24455 solver.cpp:219] Iteration 300 (1622.79 iter/s, 0.0616222s/100 iters), loss = 1.09659
I0428 19:40:04.465742 24455 solver.cpp:238]     Train net output #0: loss = 1.09659 (* 1 = 1.09659 loss)
I0428 19:40:04.465764 24455 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:04.527000 24455 solver.cpp:219] Iteration 400 (1632.26 iter/s, 0.0612649s/100 iters), loss = 1.28795
I0428 19:40:04.527024 24455 solver.cpp:238]     Train net output #0: loss = 1.28795 (* 1 = 1.28795 loss)
I0428 19:40:04.527029 24455 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:04.588815 24455 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:04.641654 24462 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:04.642107 24455 solver.cpp:398]     Test net output #0: accuracy = 0.6038
I0428 19:40:04.642143 24455 solver.cpp:398]     Test net output #1: loss = 1.16735 (* 1 = 1.16735 loss)
I0428 19:40:04.642824 24455 solver.cpp:219] Iteration 500 (863.648 iter/s, 0.115788s/100 iters), loss = 1.04185
I0428 19:40:04.642879 24455 solver.cpp:238]     Train net output #0: loss = 1.04185 (* 1 = 1.04185 loss)
I0428 19:40:04.642902 24455 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:04.705389 24455 solver.cpp:219] Iteration 600 (1599.56 iter/s, 0.0625172s/100 iters), loss = 1.20376
I0428 19:40:04.705428 24455 solver.cpp:238]     Train net output #0: loss = 1.20376 (* 1 = 1.20376 loss)
I0428 19:40:04.705435 24455 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:04.767199 24455 solver.cpp:219] Iteration 700 (1618.67 iter/s, 0.0617789s/100 iters), loss = 1.18588
I0428 19:40:04.767236 24455 solver.cpp:238]     Train net output #0: loss = 1.18588 (* 1 = 1.18588 loss)
I0428 19:40:04.767242 24455 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:04.829126 24455 solver.cpp:219] Iteration 800 (1615.59 iter/s, 0.0618967s/100 iters), loss = 1.06757
I0428 19:40:04.829164 24455 solver.cpp:238]     Train net output #0: loss = 1.06757 (* 1 = 1.06757 loss)
I0428 19:40:04.829169 24455 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:04.890661 24455 solver.cpp:219] Iteration 900 (1625.87 iter/s, 0.0615055s/100 iters), loss = 1.0272
I0428 19:40:04.890698 24455 solver.cpp:238]     Train net output #0: loss = 1.0272 (* 1 = 1.0272 loss)
I0428 19:40:04.890704 24455 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:04.911515 24461 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:04.951892 24455 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:04.952600 24455 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:04.953022 24455 solver.cpp:311] Iteration 1000, loss = 1.14966
I0428 19:40:04.953037 24455 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:04.996793 24462 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:04.997301 24455 solver.cpp:398]     Test net output #0: accuracy = 0.6538
I0428 19:40:04.997320 24455 solver.cpp:398]     Test net output #1: loss = 1.05924 (* 1 = 1.05924 loss)
I0428 19:40:04.997325 24455 solver.cpp:316] Optimization Done.
I0428 19:40:04.997328 24455 caffe.cpp:259] Optimization Done.
