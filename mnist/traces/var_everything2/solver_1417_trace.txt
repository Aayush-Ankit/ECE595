I0428 20:23:11.402354  2199 caffe.cpp:218] Using GPUs 0
I0428 20:23:11.440096  2199 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:11.966871  2199 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1417.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:11.967017  2199 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1417.prototxt
I0428 20:23:11.967437  2199 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:11.967455  2199 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:11.967561  2199 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:11.967639  2199 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:11.967739  2199 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:11.967762  2199 net.cpp:86] Creating Layer mnist
I0428 20:23:11.967772  2199 net.cpp:382] mnist -> data
I0428 20:23:11.967793  2199 net.cpp:382] mnist -> label
I0428 20:23:11.968904  2199 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:11.971374  2199 net.cpp:124] Setting up mnist
I0428 20:23:11.971391  2199 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:11.971397  2199 net.cpp:131] Top shape: 64 (64)
I0428 20:23:11.971401  2199 net.cpp:139] Memory required for data: 200960
I0428 20:23:11.971408  2199 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:11.971443  2199 net.cpp:86] Creating Layer conv0
I0428 20:23:11.971464  2199 net.cpp:408] conv0 <- data
I0428 20:23:11.971480  2199 net.cpp:382] conv0 -> conv0
I0428 20:23:12.220315  2199 net.cpp:124] Setting up conv0
I0428 20:23:12.220355  2199 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:12.220360  2199 net.cpp:139] Memory required for data: 7573760
I0428 20:23:12.220373  2199 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:12.220386  2199 net.cpp:86] Creating Layer pool0
I0428 20:23:12.220389  2199 net.cpp:408] pool0 <- conv0
I0428 20:23:12.220394  2199 net.cpp:382] pool0 -> pool0
I0428 20:23:12.220454  2199 net.cpp:124] Setting up pool0
I0428 20:23:12.220460  2199 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:12.220463  2199 net.cpp:139] Memory required for data: 9416960
I0428 20:23:12.220466  2199 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:12.220476  2199 net.cpp:86] Creating Layer conv1
I0428 20:23:12.220479  2199 net.cpp:408] conv1 <- pool0
I0428 20:23:12.220484  2199 net.cpp:382] conv1 -> conv1
I0428 20:23:12.223935  2199 net.cpp:124] Setting up conv1
I0428 20:23:12.223950  2199 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:12.223954  2199 net.cpp:139] Memory required for data: 11055360
I0428 20:23:12.223963  2199 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:12.223969  2199 net.cpp:86] Creating Layer pool1
I0428 20:23:12.223987  2199 net.cpp:408] pool1 <- conv1
I0428 20:23:12.223992  2199 net.cpp:382] pool1 -> pool1
I0428 20:23:12.224027  2199 net.cpp:124] Setting up pool1
I0428 20:23:12.224032  2199 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:12.224035  2199 net.cpp:139] Memory required for data: 11464960
I0428 20:23:12.224038  2199 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:12.224045  2199 net.cpp:86] Creating Layer ip1
I0428 20:23:12.224048  2199 net.cpp:408] ip1 <- pool1
I0428 20:23:12.224052  2199 net.cpp:382] ip1 -> ip1
I0428 20:23:12.225198  2199 net.cpp:124] Setting up ip1
I0428 20:23:12.225230  2199 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:12.225236  2199 net.cpp:139] Memory required for data: 11467520
I0428 20:23:12.225248  2199 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:12.225257  2199 net.cpp:86] Creating Layer relu1
I0428 20:23:12.225272  2199 net.cpp:408] relu1 <- ip1
I0428 20:23:12.225281  2199 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:12.225564  2199 net.cpp:124] Setting up relu1
I0428 20:23:12.225580  2199 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:12.225587  2199 net.cpp:139] Memory required for data: 11470080
I0428 20:23:12.225594  2199 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:12.225605  2199 net.cpp:86] Creating Layer ip2
I0428 20:23:12.225610  2199 net.cpp:408] ip2 <- ip1
I0428 20:23:12.225620  2199 net.cpp:382] ip2 -> ip2
I0428 20:23:12.225782  2199 net.cpp:124] Setting up ip2
I0428 20:23:12.225796  2199 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:12.225801  2199 net.cpp:139] Memory required for data: 11472640
I0428 20:23:12.225811  2199 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:12.225836  2199 net.cpp:86] Creating Layer relu2
I0428 20:23:12.225857  2199 net.cpp:408] relu2 <- ip2
I0428 20:23:12.225869  2199 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:12.226979  2199 net.cpp:124] Setting up relu2
I0428 20:23:12.227011  2199 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:12.227017  2199 net.cpp:139] Memory required for data: 11475200
I0428 20:23:12.227023  2199 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:12.227033  2199 net.cpp:86] Creating Layer ip3
I0428 20:23:12.227038  2199 net.cpp:408] ip3 <- ip2
I0428 20:23:12.227047  2199 net.cpp:382] ip3 -> ip3
I0428 20:23:12.227200  2199 net.cpp:124] Setting up ip3
I0428 20:23:12.227214  2199 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:12.227221  2199 net.cpp:139] Memory required for data: 11477760
I0428 20:23:12.227233  2199 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:12.227242  2199 net.cpp:86] Creating Layer relu3
I0428 20:23:12.227247  2199 net.cpp:408] relu3 <- ip3
I0428 20:23:12.227253  2199 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:12.227488  2199 net.cpp:124] Setting up relu3
I0428 20:23:12.227504  2199 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:12.227509  2199 net.cpp:139] Memory required for data: 11480320
I0428 20:23:12.227516  2199 layer_factory.hpp:77] Creating layer loss
I0428 20:23:12.227524  2199 net.cpp:86] Creating Layer loss
I0428 20:23:12.227530  2199 net.cpp:408] loss <- ip3
I0428 20:23:12.227551  2199 net.cpp:408] loss <- label
I0428 20:23:12.227560  2199 net.cpp:382] loss -> loss
I0428 20:23:12.227582  2199 layer_factory.hpp:77] Creating layer loss
I0428 20:23:12.227928  2199 net.cpp:124] Setting up loss
I0428 20:23:12.227959  2199 net.cpp:131] Top shape: (1)
I0428 20:23:12.227965  2199 net.cpp:134]     with loss weight 1
I0428 20:23:12.227984  2199 net.cpp:139] Memory required for data: 11480324
I0428 20:23:12.227989  2199 net.cpp:200] loss needs backward computation.
I0428 20:23:12.227994  2199 net.cpp:200] relu3 needs backward computation.
I0428 20:23:12.227999  2199 net.cpp:200] ip3 needs backward computation.
I0428 20:23:12.228003  2199 net.cpp:200] relu2 needs backward computation.
I0428 20:23:12.228008  2199 net.cpp:200] ip2 needs backward computation.
I0428 20:23:12.228013  2199 net.cpp:200] relu1 needs backward computation.
I0428 20:23:12.228031  2199 net.cpp:200] ip1 needs backward computation.
I0428 20:23:12.228036  2199 net.cpp:200] pool1 needs backward computation.
I0428 20:23:12.228041  2199 net.cpp:200] conv1 needs backward computation.
I0428 20:23:12.228046  2199 net.cpp:200] pool0 needs backward computation.
I0428 20:23:12.228051  2199 net.cpp:200] conv0 needs backward computation.
I0428 20:23:12.228055  2199 net.cpp:202] mnist does not need backward computation.
I0428 20:23:12.228057  2199 net.cpp:244] This network produces output loss
I0428 20:23:12.228067  2199 net.cpp:257] Network initialization done.
I0428 20:23:12.228461  2199 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1417.prototxt
I0428 20:23:12.228503  2199 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:12.228590  2199 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:12.228683  2199 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:12.228729  2199 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:12.228740  2199 net.cpp:86] Creating Layer mnist
I0428 20:23:12.228744  2199 net.cpp:382] mnist -> data
I0428 20:23:12.228752  2199 net.cpp:382] mnist -> label
I0428 20:23:12.228894  2199 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:12.230069  2199 net.cpp:124] Setting up mnist
I0428 20:23:12.230095  2199 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:12.230100  2199 net.cpp:131] Top shape: 100 (100)
I0428 20:23:12.230104  2199 net.cpp:139] Memory required for data: 314000
I0428 20:23:12.230108  2199 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:12.230113  2199 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:12.230116  2199 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:12.230147  2199 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:12.230155  2199 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:12.230213  2199 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:12.230218  2199 net.cpp:131] Top shape: 100 (100)
I0428 20:23:12.230222  2199 net.cpp:131] Top shape: 100 (100)
I0428 20:23:12.230240  2199 net.cpp:139] Memory required for data: 314800
I0428 20:23:12.230243  2199 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:12.230253  2199 net.cpp:86] Creating Layer conv0
I0428 20:23:12.230257  2199 net.cpp:408] conv0 <- data
I0428 20:23:12.230262  2199 net.cpp:382] conv0 -> conv0
I0428 20:23:12.232094  2199 net.cpp:124] Setting up conv0
I0428 20:23:12.232107  2199 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:12.232111  2199 net.cpp:139] Memory required for data: 11834800
I0428 20:23:12.232120  2199 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:12.232131  2199 net.cpp:86] Creating Layer pool0
I0428 20:23:12.232133  2199 net.cpp:408] pool0 <- conv0
I0428 20:23:12.232138  2199 net.cpp:382] pool0 -> pool0
I0428 20:23:12.232175  2199 net.cpp:124] Setting up pool0
I0428 20:23:12.232182  2199 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:12.232184  2199 net.cpp:139] Memory required for data: 14714800
I0428 20:23:12.232187  2199 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:12.232197  2199 net.cpp:86] Creating Layer conv1
I0428 20:23:12.232199  2199 net.cpp:408] conv1 <- pool0
I0428 20:23:12.232205  2199 net.cpp:382] conv1 -> conv1
I0428 20:23:12.235384  2199 net.cpp:124] Setting up conv1
I0428 20:23:12.235399  2199 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:12.235402  2199 net.cpp:139] Memory required for data: 17274800
I0428 20:23:12.235411  2199 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:12.235417  2199 net.cpp:86] Creating Layer pool1
I0428 20:23:12.235435  2199 net.cpp:408] pool1 <- conv1
I0428 20:23:12.235442  2199 net.cpp:382] pool1 -> pool1
I0428 20:23:12.235505  2199 net.cpp:124] Setting up pool1
I0428 20:23:12.235510  2199 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:12.235513  2199 net.cpp:139] Memory required for data: 17914800
I0428 20:23:12.235517  2199 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:12.235522  2199 net.cpp:86] Creating Layer ip1
I0428 20:23:12.235525  2199 net.cpp:408] ip1 <- pool1
I0428 20:23:12.235530  2199 net.cpp:382] ip1 -> ip1
I0428 20:23:12.235718  2199 net.cpp:124] Setting up ip1
I0428 20:23:12.235735  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.235740  2199 net.cpp:139] Memory required for data: 17918800
I0428 20:23:12.235761  2199 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:12.235767  2199 net.cpp:86] Creating Layer relu1
I0428 20:23:12.235770  2199 net.cpp:408] relu1 <- ip1
I0428 20:23:12.235788  2199 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:12.235954  2199 net.cpp:124] Setting up relu1
I0428 20:23:12.235962  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.235965  2199 net.cpp:139] Memory required for data: 17922800
I0428 20:23:12.235968  2199 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:12.235975  2199 net.cpp:86] Creating Layer ip2
I0428 20:23:12.235978  2199 net.cpp:408] ip2 <- ip1
I0428 20:23:12.235991  2199 net.cpp:382] ip2 -> ip2
I0428 20:23:12.236079  2199 net.cpp:124] Setting up ip2
I0428 20:23:12.236086  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.236088  2199 net.cpp:139] Memory required for data: 17926800
I0428 20:23:12.236093  2199 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:12.236099  2199 net.cpp:86] Creating Layer relu2
I0428 20:23:12.236101  2199 net.cpp:408] relu2 <- ip2
I0428 20:23:12.236105  2199 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:12.236245  2199 net.cpp:124] Setting up relu2
I0428 20:23:12.236253  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.236256  2199 net.cpp:139] Memory required for data: 17930800
I0428 20:23:12.236259  2199 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:12.236265  2199 net.cpp:86] Creating Layer ip3
I0428 20:23:12.236268  2199 net.cpp:408] ip3 <- ip2
I0428 20:23:12.236274  2199 net.cpp:382] ip3 -> ip3
I0428 20:23:12.236361  2199 net.cpp:124] Setting up ip3
I0428 20:23:12.236385  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.236388  2199 net.cpp:139] Memory required for data: 17934800
I0428 20:23:12.236395  2199 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:12.236399  2199 net.cpp:86] Creating Layer relu3
I0428 20:23:12.236402  2199 net.cpp:408] relu3 <- ip3
I0428 20:23:12.236405  2199 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:12.237345  2199 net.cpp:124] Setting up relu3
I0428 20:23:12.237357  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.237361  2199 net.cpp:139] Memory required for data: 17938800
I0428 20:23:12.237365  2199 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:12.237370  2199 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:12.237372  2199 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:12.237378  2199 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:12.237383  2199 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:12.237423  2199 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:12.237429  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.237432  2199 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:12.237435  2199 net.cpp:139] Memory required for data: 17946800
I0428 20:23:12.237437  2199 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:12.237442  2199 net.cpp:86] Creating Layer accuracy
I0428 20:23:12.237445  2199 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:12.237457  2199 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:12.237460  2199 net.cpp:382] accuracy -> accuracy
I0428 20:23:12.237468  2199 net.cpp:124] Setting up accuracy
I0428 20:23:12.237471  2199 net.cpp:131] Top shape: (1)
I0428 20:23:12.237474  2199 net.cpp:139] Memory required for data: 17946804
I0428 20:23:12.237476  2199 layer_factory.hpp:77] Creating layer loss
I0428 20:23:12.237493  2199 net.cpp:86] Creating Layer loss
I0428 20:23:12.237496  2199 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:12.237505  2199 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:12.237509  2199 net.cpp:382] loss -> loss
I0428 20:23:12.237515  2199 layer_factory.hpp:77] Creating layer loss
I0428 20:23:12.237740  2199 net.cpp:124] Setting up loss
I0428 20:23:12.237748  2199 net.cpp:131] Top shape: (1)
I0428 20:23:12.237769  2199 net.cpp:134]     with loss weight 1
I0428 20:23:12.237785  2199 net.cpp:139] Memory required for data: 17946808
I0428 20:23:12.237788  2199 net.cpp:200] loss needs backward computation.
I0428 20:23:12.237792  2199 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:12.237802  2199 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:12.237804  2199 net.cpp:200] relu3 needs backward computation.
I0428 20:23:12.237807  2199 net.cpp:200] ip3 needs backward computation.
I0428 20:23:12.237810  2199 net.cpp:200] relu2 needs backward computation.
I0428 20:23:12.237812  2199 net.cpp:200] ip2 needs backward computation.
I0428 20:23:12.237815  2199 net.cpp:200] relu1 needs backward computation.
I0428 20:23:12.237818  2199 net.cpp:200] ip1 needs backward computation.
I0428 20:23:12.237821  2199 net.cpp:200] pool1 needs backward computation.
I0428 20:23:12.237824  2199 net.cpp:200] conv1 needs backward computation.
I0428 20:23:12.237828  2199 net.cpp:200] pool0 needs backward computation.
I0428 20:23:12.237830  2199 net.cpp:200] conv0 needs backward computation.
I0428 20:23:12.237839  2199 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:12.237843  2199 net.cpp:202] mnist does not need backward computation.
I0428 20:23:12.237845  2199 net.cpp:244] This network produces output accuracy
I0428 20:23:12.237861  2199 net.cpp:244] This network produces output loss
I0428 20:23:12.237872  2199 net.cpp:257] Network initialization done.
I0428 20:23:12.237929  2199 solver.cpp:56] Solver scaffolding done.
I0428 20:23:12.238289  2199 caffe.cpp:248] Starting Optimization
I0428 20:23:12.238296  2199 solver.cpp:273] Solving LeNet
I0428 20:23:12.238299  2199 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:12.238462  2199 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:12.249431  2199 blocking_queue.cpp:49] Waiting for data
I0428 20:23:12.335058  2208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:12.336355  2199 solver.cpp:398]     Test net output #0: accuracy = 0.0916
I0428 20:23:12.336390  2199 solver.cpp:398]     Test net output #1: loss = 2.30737 (* 1 = 2.30737 loss)
I0428 20:23:12.342048  2199 solver.cpp:219] Iteration 0 (0 iter/s, 0.103721s/100 iters), loss = 2.27305
I0428 20:23:12.342075  2199 solver.cpp:238]     Train net output #0: loss = 2.27305 (* 1 = 2.27305 loss)
I0428 20:23:12.342088  2199 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:12.563472  2199 solver.cpp:219] Iteration 100 (451.723 iter/s, 0.221374s/100 iters), loss = 0.485894
I0428 20:23:12.563508  2199 solver.cpp:238]     Train net output #0: loss = 0.485894 (* 1 = 0.485894 loss)
I0428 20:23:12.563516  2199 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:12.780900  2199 solver.cpp:219] Iteration 200 (460.033 iter/s, 0.217376s/100 iters), loss = 0.340545
I0428 20:23:12.780928  2199 solver.cpp:238]     Train net output #0: loss = 0.340545 (* 1 = 0.340545 loss)
I0428 20:23:12.780936  2199 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:13.019660  2199 solver.cpp:219] Iteration 300 (418.912 iter/s, 0.238714s/100 iters), loss = 0.262853
I0428 20:23:13.019692  2199 solver.cpp:238]     Train net output #0: loss = 0.262853 (* 1 = 0.262853 loss)
I0428 20:23:13.019701  2199 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:13.244853  2199 solver.cpp:219] Iteration 400 (444.163 iter/s, 0.225143s/100 iters), loss = 0.125524
I0428 20:23:13.244894  2199 solver.cpp:238]     Train net output #0: loss = 0.125524 (* 1 = 0.125524 loss)
I0428 20:23:13.244904  2199 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:13.476111  2199 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:13.569034  2208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:13.570564  2199 solver.cpp:398]     Test net output #0: accuracy = 0.9527
I0428 20:23:13.570591  2199 solver.cpp:398]     Test net output #1: loss = 0.160813 (* 1 = 0.160813 loss)
I0428 20:23:13.572926  2199 solver.cpp:219] Iteration 500 (304.866 iter/s, 0.328013s/100 iters), loss = 0.11665
I0428 20:23:13.572973  2199 solver.cpp:238]     Train net output #0: loss = 0.11665 (* 1 = 0.11665 loss)
I0428 20:23:13.572983  2199 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:13.803179  2199 solver.cpp:219] Iteration 600 (434.424 iter/s, 0.23019s/100 iters), loss = 0.0921022
I0428 20:23:13.803215  2199 solver.cpp:238]     Train net output #0: loss = 0.0921022 (* 1 = 0.0921022 loss)
I0428 20:23:13.803223  2199 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:14.033984  2199 solver.cpp:219] Iteration 700 (433.365 iter/s, 0.230752s/100 iters), loss = 0.130988
I0428 20:23:14.034020  2199 solver.cpp:238]     Train net output #0: loss = 0.130988 (* 1 = 0.130988 loss)
I0428 20:23:14.034029  2199 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:14.252144  2199 solver.cpp:219] Iteration 800 (458.486 iter/s, 0.218109s/100 iters), loss = 0.305397
I0428 20:23:14.252177  2199 solver.cpp:238]     Train net output #0: loss = 0.305397 (* 1 = 0.305397 loss)
I0428 20:23:14.252203  2199 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:14.475653  2199 solver.cpp:219] Iteration 900 (447.505 iter/s, 0.223461s/100 iters), loss = 0.124088
I0428 20:23:14.475685  2199 solver.cpp:238]     Train net output #0: loss = 0.124088 (* 1 = 0.124088 loss)
I0428 20:23:14.475693  2199 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:14.546226  2205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:14.679513  2199 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:14.683797  2199 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:14.685565  2199 solver.cpp:311] Iteration 1000, loss = 0.188605
I0428 20:23:14.685582  2199 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:14.774076  2208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:14.775409  2199 solver.cpp:398]     Test net output #0: accuracy = 0.969
I0428 20:23:14.775431  2199 solver.cpp:398]     Test net output #1: loss = 0.0972987 (* 1 = 0.0972987 loss)
I0428 20:23:14.775437  2199 solver.cpp:316] Optimization Done.
I0428 20:23:14.775440  2199 caffe.cpp:259] Optimization Done.
