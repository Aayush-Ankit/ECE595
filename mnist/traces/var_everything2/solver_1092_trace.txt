I0428 20:08:46.263176 31483 caffe.cpp:218] Using GPUs 0
I0428 20:08:46.304203 31483 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:46.824867 31483 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1092.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:46.824998 31483 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1092.prototxt
I0428 20:08:46.825354 31483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:46.825371 31483 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:46.825448 31483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:08:46.825515 31483 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:46.825608 31483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:46.825633 31483 net.cpp:86] Creating Layer mnist
I0428 20:08:46.825644 31483 net.cpp:382] mnist -> data
I0428 20:08:46.825669 31483 net.cpp:382] mnist -> label
I0428 20:08:46.826725 31483 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:46.829125 31483 net.cpp:124] Setting up mnist
I0428 20:08:46.829143 31483 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:46.829149 31483 net.cpp:131] Top shape: 64 (64)
I0428 20:08:46.829151 31483 net.cpp:139] Memory required for data: 200960
I0428 20:08:46.829159 31483 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:46.829175 31483 net.cpp:86] Creating Layer conv0
I0428 20:08:46.829181 31483 net.cpp:408] conv0 <- data
I0428 20:08:46.829193 31483 net.cpp:382] conv0 -> conv0
I0428 20:08:47.114138 31483 net.cpp:124] Setting up conv0
I0428 20:08:47.114166 31483 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:47.114171 31483 net.cpp:139] Memory required for data: 3887360
I0428 20:08:47.114187 31483 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:47.114199 31483 net.cpp:86] Creating Layer pool0
I0428 20:08:47.114203 31483 net.cpp:408] pool0 <- conv0
I0428 20:08:47.114209 31483 net.cpp:382] pool0 -> pool0
I0428 20:08:47.114254 31483 net.cpp:124] Setting up pool0
I0428 20:08:47.114264 31483 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:47.114282 31483 net.cpp:139] Memory required for data: 4808960
I0428 20:08:47.114285 31483 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:47.114297 31483 net.cpp:86] Creating Layer conv1
I0428 20:08:47.114300 31483 net.cpp:408] conv1 <- pool0
I0428 20:08:47.114305 31483 net.cpp:382] conv1 -> conv1
I0428 20:08:47.117086 31483 net.cpp:124] Setting up conv1
I0428 20:08:47.117101 31483 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:08:47.117105 31483 net.cpp:139] Memory required for data: 5218560
I0428 20:08:47.117115 31483 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:47.117122 31483 net.cpp:86] Creating Layer pool1
I0428 20:08:47.117126 31483 net.cpp:408] pool1 <- conv1
I0428 20:08:47.117131 31483 net.cpp:382] pool1 -> pool1
I0428 20:08:47.117168 31483 net.cpp:124] Setting up pool1
I0428 20:08:47.117175 31483 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:08:47.117179 31483 net.cpp:139] Memory required for data: 5320960
I0428 20:08:47.117182 31483 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:47.117188 31483 net.cpp:86] Creating Layer ip1
I0428 20:08:47.117192 31483 net.cpp:408] ip1 <- pool1
I0428 20:08:47.117197 31483 net.cpp:382] ip1 -> ip1
I0428 20:08:47.118145 31483 net.cpp:124] Setting up ip1
I0428 20:08:47.118158 31483 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:47.118161 31483 net.cpp:139] Memory required for data: 5323520
I0428 20:08:47.118170 31483 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:47.118176 31483 net.cpp:86] Creating Layer relu1
I0428 20:08:47.118180 31483 net.cpp:408] relu1 <- ip1
I0428 20:08:47.118185 31483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:47.118353 31483 net.cpp:124] Setting up relu1
I0428 20:08:47.118362 31483 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:47.118366 31483 net.cpp:139] Memory required for data: 5326080
I0428 20:08:47.118368 31483 layer_factory.hpp:77] Creating layer loss
I0428 20:08:47.118374 31483 net.cpp:86] Creating Layer loss
I0428 20:08:47.118378 31483 net.cpp:408] loss <- ip1
I0428 20:08:47.118382 31483 net.cpp:408] loss <- label
I0428 20:08:47.118387 31483 net.cpp:382] loss -> loss
I0428 20:08:47.118405 31483 layer_factory.hpp:77] Creating layer loss
I0428 20:08:47.119225 31483 net.cpp:124] Setting up loss
I0428 20:08:47.119238 31483 net.cpp:131] Top shape: (1)
I0428 20:08:47.119241 31483 net.cpp:134]     with loss weight 1
I0428 20:08:47.119256 31483 net.cpp:139] Memory required for data: 5326084
I0428 20:08:47.119261 31483 net.cpp:200] loss needs backward computation.
I0428 20:08:47.119264 31483 net.cpp:200] relu1 needs backward computation.
I0428 20:08:47.119267 31483 net.cpp:200] ip1 needs backward computation.
I0428 20:08:47.119271 31483 net.cpp:200] pool1 needs backward computation.
I0428 20:08:47.119273 31483 net.cpp:200] conv1 needs backward computation.
I0428 20:08:47.119277 31483 net.cpp:200] pool0 needs backward computation.
I0428 20:08:47.119279 31483 net.cpp:200] conv0 needs backward computation.
I0428 20:08:47.119282 31483 net.cpp:202] mnist does not need backward computation.
I0428 20:08:47.119285 31483 net.cpp:244] This network produces output loss
I0428 20:08:47.119293 31483 net.cpp:257] Network initialization done.
I0428 20:08:47.119554 31483 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1092.prototxt
I0428 20:08:47.119580 31483 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:47.119655 31483 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:08:47.119726 31483 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:47.119771 31483 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:47.119782 31483 net.cpp:86] Creating Layer mnist
I0428 20:08:47.119787 31483 net.cpp:382] mnist -> data
I0428 20:08:47.119796 31483 net.cpp:382] mnist -> label
I0428 20:08:47.119879 31483 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:47.121786 31483 net.cpp:124] Setting up mnist
I0428 20:08:47.121799 31483 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:47.121804 31483 net.cpp:131] Top shape: 100 (100)
I0428 20:08:47.121807 31483 net.cpp:139] Memory required for data: 314000
I0428 20:08:47.121811 31483 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:47.121832 31483 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:47.121836 31483 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:47.121841 31483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:47.121848 31483 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:47.121886 31483 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:47.121891 31483 net.cpp:131] Top shape: 100 (100)
I0428 20:08:47.121894 31483 net.cpp:131] Top shape: 100 (100)
I0428 20:08:47.121896 31483 net.cpp:139] Memory required for data: 314800
I0428 20:08:47.121899 31483 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:47.121907 31483 net.cpp:86] Creating Layer conv0
I0428 20:08:47.121911 31483 net.cpp:408] conv0 <- data
I0428 20:08:47.121915 31483 net.cpp:382] conv0 -> conv0
I0428 20:08:47.122795 31483 net.cpp:124] Setting up conv0
I0428 20:08:47.122808 31483 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:47.122812 31483 net.cpp:139] Memory required for data: 6074800
I0428 20:08:47.122820 31483 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:47.122826 31483 net.cpp:86] Creating Layer pool0
I0428 20:08:47.122829 31483 net.cpp:408] pool0 <- conv0
I0428 20:08:47.122834 31483 net.cpp:382] pool0 -> pool0
I0428 20:08:47.122869 31483 net.cpp:124] Setting up pool0
I0428 20:08:47.122874 31483 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:47.122876 31483 net.cpp:139] Memory required for data: 7514800
I0428 20:08:47.122879 31483 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:47.122886 31483 net.cpp:86] Creating Layer conv1
I0428 20:08:47.122889 31483 net.cpp:408] conv1 <- pool0
I0428 20:08:47.122894 31483 net.cpp:382] conv1 -> conv1
I0428 20:08:47.124938 31483 net.cpp:124] Setting up conv1
I0428 20:08:47.124953 31483 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:08:47.124974 31483 net.cpp:139] Memory required for data: 8154800
I0428 20:08:47.124997 31483 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:47.125003 31483 net.cpp:86] Creating Layer pool1
I0428 20:08:47.125017 31483 net.cpp:408] pool1 <- conv1
I0428 20:08:47.125022 31483 net.cpp:382] pool1 -> pool1
I0428 20:08:47.125066 31483 net.cpp:124] Setting up pool1
I0428 20:08:47.125072 31483 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:08:47.125075 31483 net.cpp:139] Memory required for data: 8314800
I0428 20:08:47.125078 31483 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:47.125084 31483 net.cpp:86] Creating Layer ip1
I0428 20:08:47.125087 31483 net.cpp:408] ip1 <- pool1
I0428 20:08:47.125092 31483 net.cpp:382] ip1 -> ip1
I0428 20:08:47.125248 31483 net.cpp:124] Setting up ip1
I0428 20:08:47.125257 31483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:47.125260 31483 net.cpp:139] Memory required for data: 8318800
I0428 20:08:47.125267 31483 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:47.125272 31483 net.cpp:86] Creating Layer relu1
I0428 20:08:47.125277 31483 net.cpp:408] relu1 <- ip1
I0428 20:08:47.125280 31483 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:47.126008 31483 net.cpp:124] Setting up relu1
I0428 20:08:47.126019 31483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:47.126039 31483 net.cpp:139] Memory required for data: 8322800
I0428 20:08:47.126042 31483 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:08:47.126049 31483 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:08:47.126052 31483 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:08:47.126058 31483 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:08:47.126065 31483 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:08:47.126106 31483 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:08:47.126111 31483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:47.126114 31483 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:47.126117 31483 net.cpp:139] Memory required for data: 8330800
I0428 20:08:47.126121 31483 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:47.126129 31483 net.cpp:86] Creating Layer accuracy
I0428 20:08:47.126132 31483 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:08:47.126137 31483 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:47.126142 31483 net.cpp:382] accuracy -> accuracy
I0428 20:08:47.126147 31483 net.cpp:124] Setting up accuracy
I0428 20:08:47.126152 31483 net.cpp:131] Top shape: (1)
I0428 20:08:47.126154 31483 net.cpp:139] Memory required for data: 8330804
I0428 20:08:47.126157 31483 layer_factory.hpp:77] Creating layer loss
I0428 20:08:47.126161 31483 net.cpp:86] Creating Layer loss
I0428 20:08:47.126165 31483 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:08:47.126169 31483 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:47.126173 31483 net.cpp:382] loss -> loss
I0428 20:08:47.126179 31483 layer_factory.hpp:77] Creating layer loss
I0428 20:08:47.126410 31483 net.cpp:124] Setting up loss
I0428 20:08:47.126420 31483 net.cpp:131] Top shape: (1)
I0428 20:08:47.126423 31483 net.cpp:134]     with loss weight 1
I0428 20:08:47.126430 31483 net.cpp:139] Memory required for data: 8330808
I0428 20:08:47.126433 31483 net.cpp:200] loss needs backward computation.
I0428 20:08:47.126437 31483 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:47.126441 31483 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:08:47.126444 31483 net.cpp:200] relu1 needs backward computation.
I0428 20:08:47.126456 31483 net.cpp:200] ip1 needs backward computation.
I0428 20:08:47.126458 31483 net.cpp:200] pool1 needs backward computation.
I0428 20:08:47.126462 31483 net.cpp:200] conv1 needs backward computation.
I0428 20:08:47.126466 31483 net.cpp:200] pool0 needs backward computation.
I0428 20:08:47.126468 31483 net.cpp:200] conv0 needs backward computation.
I0428 20:08:47.126472 31483 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:47.126476 31483 net.cpp:202] mnist does not need backward computation.
I0428 20:08:47.126479 31483 net.cpp:244] This network produces output accuracy
I0428 20:08:47.126482 31483 net.cpp:244] This network produces output loss
I0428 20:08:47.126500 31483 net.cpp:257] Network initialization done.
I0428 20:08:47.126533 31483 solver.cpp:56] Solver scaffolding done.
I0428 20:08:47.126726 31483 caffe.cpp:248] Starting Optimization
I0428 20:08:47.126734 31483 solver.cpp:273] Solving LeNet
I0428 20:08:47.126736 31483 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:47.127418 31483 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:47.132122 31483 blocking_queue.cpp:49] Waiting for data
I0428 20:08:47.203408 31490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:47.204004 31483 solver.cpp:398]     Test net output #0: accuracy = 0.1234
I0428 20:08:47.204041 31483 solver.cpp:398]     Test net output #1: loss = 2.34233 (* 1 = 2.34233 loss)
I0428 20:08:47.207474 31483 solver.cpp:219] Iteration 0 (-4.96582e-31 iter/s, 0.0807157s/100 iters), loss = 2.38172
I0428 20:08:47.207514 31483 solver.cpp:238]     Train net output #0: loss = 2.38172 (* 1 = 2.38172 loss)
I0428 20:08:47.207525 31483 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:47.308262 31483 solver.cpp:219] Iteration 100 (992.734 iter/s, 0.100732s/100 iters), loss = 0.738597
I0428 20:08:47.308315 31483 solver.cpp:238]     Train net output #0: loss = 0.738597 (* 1 = 0.738597 loss)
I0428 20:08:47.308338 31483 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:47.405438 31483 solver.cpp:219] Iteration 200 (1029.68 iter/s, 0.0971172s/100 iters), loss = 0.486664
I0428 20:08:47.405480 31483 solver.cpp:238]     Train net output #0: loss = 0.486664 (* 1 = 0.486664 loss)
I0428 20:08:47.405488 31483 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:47.502131 31483 solver.cpp:219] Iteration 300 (1034.65 iter/s, 0.0966513s/100 iters), loss = 0.69055
I0428 20:08:47.502166 31483 solver.cpp:238]     Train net output #0: loss = 0.69055 (* 1 = 0.69055 loss)
I0428 20:08:47.502173 31483 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:47.602525 31483 solver.cpp:219] Iteration 400 (996.516 iter/s, 0.10035s/100 iters), loss = 0.54719
I0428 20:08:47.602553 31483 solver.cpp:238]     Train net output #0: loss = 0.54719 (* 1 = 0.54719 loss)
I0428 20:08:47.602563 31483 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:47.691009 31483 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:47.769345 31490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:47.770020 31483 solver.cpp:398]     Test net output #0: accuracy = 0.8487
I0428 20:08:47.770052 31483 solver.cpp:398]     Test net output #1: loss = 0.568697 (* 1 = 0.568697 loss)
I0428 20:08:47.771121 31483 solver.cpp:219] Iteration 500 (593.291 iter/s, 0.168551s/100 iters), loss = 0.444658
I0428 20:08:47.771158 31483 solver.cpp:238]     Train net output #0: loss = 0.444658 (* 1 = 0.444658 loss)
I0428 20:08:47.771175 31483 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:47.868192 31483 solver.cpp:219] Iteration 600 (1030.64 iter/s, 0.0970269s/100 iters), loss = 0.257785
I0428 20:08:47.868222 31483 solver.cpp:238]     Train net output #0: loss = 0.257785 (* 1 = 0.257785 loss)
I0428 20:08:47.868230 31483 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:47.958282 31483 solver.cpp:219] Iteration 700 (1110.49 iter/s, 0.0900506s/100 iters), loss = 0.377185
I0428 20:08:47.958312 31483 solver.cpp:238]     Train net output #0: loss = 0.377185 (* 1 = 0.377185 loss)
I0428 20:08:47.958320 31483 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:48.049038 31483 solver.cpp:219] Iteration 800 (1102.36 iter/s, 0.0907143s/100 iters), loss = 0.256181
I0428 20:08:48.049068 31483 solver.cpp:238]     Train net output #0: loss = 0.256181 (* 1 = 0.256181 loss)
I0428 20:08:48.049075 31483 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:48.136492 31483 solver.cpp:219] Iteration 900 (1143.98 iter/s, 0.0874138s/100 iters), loss = 0.148631
I0428 20:08:48.136530 31483 solver.cpp:238]     Train net output #0: loss = 0.148632 (* 1 = 0.148632 loss)
I0428 20:08:48.136536 31483 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:48.165536 31489 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:48.222798 31483 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:48.223680 31483 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:48.224288 31483 solver.cpp:311] Iteration 1000, loss = 0.0819225
I0428 20:08:48.224304 31483 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:48.290382 31490 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:48.291033 31483 solver.cpp:398]     Test net output #0: accuracy = 0.9723
I0428 20:08:48.291069 31483 solver.cpp:398]     Test net output #1: loss = 0.0875349 (* 1 = 0.0875349 loss)
I0428 20:08:48.291079 31483 solver.cpp:316] Optimization Done.
I0428 20:08:48.291090 31483 caffe.cpp:259] Optimization Done.
