I0428 20:24:03.136924  2352 caffe.cpp:218] Using GPUs 0
I0428 20:24:03.171087  2352 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:03.693562  2352 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1431.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:03.693697  2352 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1431.prototxt
I0428 20:24:03.694102  2352 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:03.694119  2352 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:03.694216  2352 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:03.694289  2352 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:03.694387  2352 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:03.694411  2352 net.cpp:86] Creating Layer mnist
I0428 20:24:03.694418  2352 net.cpp:382] mnist -> data
I0428 20:24:03.694442  2352 net.cpp:382] mnist -> label
I0428 20:24:03.695544  2352 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:03.698009  2352 net.cpp:124] Setting up mnist
I0428 20:24:03.698025  2352 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:03.698032  2352 net.cpp:131] Top shape: 64 (64)
I0428 20:24:03.698036  2352 net.cpp:139] Memory required for data: 200960
I0428 20:24:03.698043  2352 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:03.698060  2352 net.cpp:86] Creating Layer conv0
I0428 20:24:03.698081  2352 net.cpp:408] conv0 <- data
I0428 20:24:03.698092  2352 net.cpp:382] conv0 -> conv0
I0428 20:24:03.989842  2352 net.cpp:124] Setting up conv0
I0428 20:24:03.989876  2352 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:03.989881  2352 net.cpp:139] Memory required for data: 7573760
I0428 20:24:03.989898  2352 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:03.989914  2352 net.cpp:86] Creating Layer pool0
I0428 20:24:03.989919  2352 net.cpp:408] pool0 <- conv0
I0428 20:24:03.989926  2352 net.cpp:382] pool0 -> pool0
I0428 20:24:03.989982  2352 net.cpp:124] Setting up pool0
I0428 20:24:03.989991  2352 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:03.989995  2352 net.cpp:139] Memory required for data: 9416960
I0428 20:24:03.989998  2352 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:03.990011  2352 net.cpp:86] Creating Layer conv1
I0428 20:24:03.990015  2352 net.cpp:408] conv1 <- pool0
I0428 20:24:03.990021  2352 net.cpp:382] conv1 -> conv1
I0428 20:24:03.993996  2352 net.cpp:124] Setting up conv1
I0428 20:24:03.994016  2352 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:03.994020  2352 net.cpp:139] Memory required for data: 11055360
I0428 20:24:03.994031  2352 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:03.994040  2352 net.cpp:86] Creating Layer pool1
I0428 20:24:03.994046  2352 net.cpp:408] pool1 <- conv1
I0428 20:24:03.994053  2352 net.cpp:382] pool1 -> pool1
I0428 20:24:03.994099  2352 net.cpp:124] Setting up pool1
I0428 20:24:03.994108  2352 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:03.994112  2352 net.cpp:139] Memory required for data: 11464960
I0428 20:24:03.994115  2352 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:03.994124  2352 net.cpp:86] Creating Layer ip1
I0428 20:24:03.994128  2352 net.cpp:408] ip1 <- pool1
I0428 20:24:03.994134  2352 net.cpp:382] ip1 -> ip1
I0428 20:24:03.994529  2352 net.cpp:124] Setting up ip1
I0428 20:24:03.994537  2352 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:03.994541  2352 net.cpp:139] Memory required for data: 11471360
I0428 20:24:03.994550  2352 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:03.994559  2352 net.cpp:86] Creating Layer relu1
I0428 20:24:03.994562  2352 net.cpp:408] relu1 <- ip1
I0428 20:24:03.994567  2352 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:03.994774  2352 net.cpp:124] Setting up relu1
I0428 20:24:03.994786  2352 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:03.994789  2352 net.cpp:139] Memory required for data: 11477760
I0428 20:24:03.994793  2352 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:03.994802  2352 net.cpp:86] Creating Layer ip2
I0428 20:24:03.994806  2352 net.cpp:408] ip2 <- ip1
I0428 20:24:03.994812  2352 net.cpp:382] ip2 -> ip2
I0428 20:24:03.994941  2352 net.cpp:124] Setting up ip2
I0428 20:24:03.994951  2352 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:03.994954  2352 net.cpp:139] Memory required for data: 11490560
I0428 20:24:03.994961  2352 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:03.994968  2352 net.cpp:86] Creating Layer relu2
I0428 20:24:03.994971  2352 net.cpp:408] relu2 <- ip2
I0428 20:24:03.994976  2352 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:03.995831  2352 net.cpp:124] Setting up relu2
I0428 20:24:03.995846  2352 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:03.995851  2352 net.cpp:139] Memory required for data: 11503360
I0428 20:24:03.995854  2352 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:03.995867  2352 net.cpp:86] Creating Layer ip3
I0428 20:24:03.995870  2352 net.cpp:408] ip3 <- ip2
I0428 20:24:03.995878  2352 net.cpp:382] ip3 -> ip3
I0428 20:24:03.996006  2352 net.cpp:124] Setting up ip3
I0428 20:24:03.996016  2352 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:03.996019  2352 net.cpp:139] Memory required for data: 11505920
I0428 20:24:03.996028  2352 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:03.996034  2352 net.cpp:86] Creating Layer relu3
I0428 20:24:03.996038  2352 net.cpp:408] relu3 <- ip3
I0428 20:24:03.996043  2352 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:03.996254  2352 net.cpp:124] Setting up relu3
I0428 20:24:03.996265  2352 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:03.996269  2352 net.cpp:139] Memory required for data: 11508480
I0428 20:24:03.996273  2352 layer_factory.hpp:77] Creating layer loss
I0428 20:24:03.996280  2352 net.cpp:86] Creating Layer loss
I0428 20:24:03.996284  2352 net.cpp:408] loss <- ip3
I0428 20:24:03.996289  2352 net.cpp:408] loss <- label
I0428 20:24:03.996296  2352 net.cpp:382] loss -> loss
I0428 20:24:03.996316  2352 layer_factory.hpp:77] Creating layer loss
I0428 20:24:03.996598  2352 net.cpp:124] Setting up loss
I0428 20:24:03.996608  2352 net.cpp:131] Top shape: (1)
I0428 20:24:03.996613  2352 net.cpp:134]     with loss weight 1
I0428 20:24:03.996634  2352 net.cpp:139] Memory required for data: 11508484
I0428 20:24:03.996639  2352 net.cpp:200] loss needs backward computation.
I0428 20:24:03.996642  2352 net.cpp:200] relu3 needs backward computation.
I0428 20:24:03.996646  2352 net.cpp:200] ip3 needs backward computation.
I0428 20:24:03.996649  2352 net.cpp:200] relu2 needs backward computation.
I0428 20:24:03.996652  2352 net.cpp:200] ip2 needs backward computation.
I0428 20:24:03.996656  2352 net.cpp:200] relu1 needs backward computation.
I0428 20:24:03.996659  2352 net.cpp:200] ip1 needs backward computation.
I0428 20:24:03.996664  2352 net.cpp:200] pool1 needs backward computation.
I0428 20:24:03.996666  2352 net.cpp:200] conv1 needs backward computation.
I0428 20:24:03.996670  2352 net.cpp:200] pool0 needs backward computation.
I0428 20:24:03.996675  2352 net.cpp:200] conv0 needs backward computation.
I0428 20:24:03.996678  2352 net.cpp:202] mnist does not need backward computation.
I0428 20:24:03.996681  2352 net.cpp:244] This network produces output loss
I0428 20:24:03.996693  2352 net.cpp:257] Network initialization done.
I0428 20:24:03.997090  2352 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1431.prototxt
I0428 20:24:03.997123  2352 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:03.997237  2352 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:03.997337  2352 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:03.997391  2352 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:03.997406  2352 net.cpp:86] Creating Layer mnist
I0428 20:24:03.997412  2352 net.cpp:382] mnist -> data
I0428 20:24:03.997421  2352 net.cpp:382] mnist -> label
I0428 20:24:03.997525  2352 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:03.998764  2352 net.cpp:124] Setting up mnist
I0428 20:24:03.998780  2352 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:03.998786  2352 net.cpp:131] Top shape: 100 (100)
I0428 20:24:03.998790  2352 net.cpp:139] Memory required for data: 314000
I0428 20:24:03.998795  2352 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:03.998839  2352 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:03.998847  2352 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:03.998852  2352 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:03.998860  2352 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:03.998915  2352 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:03.998924  2352 net.cpp:131] Top shape: 100 (100)
I0428 20:24:03.998929  2352 net.cpp:131] Top shape: 100 (100)
I0428 20:24:03.998931  2352 net.cpp:139] Memory required for data: 314800
I0428 20:24:03.998935  2352 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:03.998946  2352 net.cpp:86] Creating Layer conv0
I0428 20:24:03.998950  2352 net.cpp:408] conv0 <- data
I0428 20:24:03.998957  2352 net.cpp:382] conv0 -> conv0
I0428 20:24:04.000931  2352 net.cpp:124] Setting up conv0
I0428 20:24:04.000948  2352 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:04.000953  2352 net.cpp:139] Memory required for data: 11834800
I0428 20:24:04.000967  2352 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:04.000974  2352 net.cpp:86] Creating Layer pool0
I0428 20:24:04.000978  2352 net.cpp:408] pool0 <- conv0
I0428 20:24:04.000983  2352 net.cpp:382] pool0 -> pool0
I0428 20:24:04.001030  2352 net.cpp:124] Setting up pool0
I0428 20:24:04.001039  2352 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:04.001044  2352 net.cpp:139] Memory required for data: 14714800
I0428 20:24:04.001046  2352 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:04.001058  2352 net.cpp:86] Creating Layer conv1
I0428 20:24:04.001062  2352 net.cpp:408] conv1 <- pool0
I0428 20:24:04.001070  2352 net.cpp:382] conv1 -> conv1
I0428 20:24:04.004648  2352 net.cpp:124] Setting up conv1
I0428 20:24:04.004665  2352 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:04.004670  2352 net.cpp:139] Memory required for data: 17274800
I0428 20:24:04.004681  2352 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:04.004689  2352 net.cpp:86] Creating Layer pool1
I0428 20:24:04.004694  2352 net.cpp:408] pool1 <- conv1
I0428 20:24:04.004703  2352 net.cpp:382] pool1 -> pool1
I0428 20:24:04.004746  2352 net.cpp:124] Setting up pool1
I0428 20:24:04.004755  2352 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:04.004758  2352 net.cpp:139] Memory required for data: 17914800
I0428 20:24:04.004762  2352 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:04.004770  2352 net.cpp:86] Creating Layer ip1
I0428 20:24:04.004775  2352 net.cpp:408] ip1 <- pool1
I0428 20:24:04.004781  2352 net.cpp:382] ip1 -> ip1
I0428 20:24:04.005208  2352 net.cpp:124] Setting up ip1
I0428 20:24:04.005230  2352 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:04.005234  2352 net.cpp:139] Memory required for data: 17924800
I0428 20:24:04.005244  2352 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:04.005249  2352 net.cpp:86] Creating Layer relu1
I0428 20:24:04.005254  2352 net.cpp:408] relu1 <- ip1
I0428 20:24:04.005261  2352 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:04.005527  2352 net.cpp:124] Setting up relu1
I0428 20:24:04.005540  2352 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:04.005544  2352 net.cpp:139] Memory required for data: 17934800
I0428 20:24:04.005548  2352 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:04.005560  2352 net.cpp:86] Creating Layer ip2
I0428 20:24:04.005565  2352 net.cpp:408] ip2 <- ip1
I0428 20:24:04.005571  2352 net.cpp:382] ip2 -> ip2
I0428 20:24:04.005705  2352 net.cpp:124] Setting up ip2
I0428 20:24:04.005713  2352 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:04.005717  2352 net.cpp:139] Memory required for data: 17954800
I0428 20:24:04.005723  2352 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:04.005729  2352 net.cpp:86] Creating Layer relu2
I0428 20:24:04.005733  2352 net.cpp:408] relu2 <- ip2
I0428 20:24:04.005739  2352 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:04.005929  2352 net.cpp:124] Setting up relu2
I0428 20:24:04.005939  2352 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:04.005944  2352 net.cpp:139] Memory required for data: 17974800
I0428 20:24:04.005947  2352 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:04.005955  2352 net.cpp:86] Creating Layer ip3
I0428 20:24:04.005959  2352 net.cpp:408] ip3 <- ip2
I0428 20:24:04.005964  2352 net.cpp:382] ip3 -> ip3
I0428 20:24:04.006085  2352 net.cpp:124] Setting up ip3
I0428 20:24:04.006093  2352 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:04.006096  2352 net.cpp:139] Memory required for data: 17978800
I0428 20:24:04.006106  2352 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:04.006114  2352 net.cpp:86] Creating Layer relu3
I0428 20:24:04.006119  2352 net.cpp:408] relu3 <- ip3
I0428 20:24:04.006124  2352 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:04.007051  2352 net.cpp:124] Setting up relu3
I0428 20:24:04.007069  2352 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:04.007074  2352 net.cpp:139] Memory required for data: 17982800
I0428 20:24:04.007078  2352 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:04.007084  2352 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:04.007089  2352 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:04.007095  2352 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:04.007102  2352 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:04.007166  2352 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:04.007174  2352 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:04.007179  2352 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:04.007182  2352 net.cpp:139] Memory required for data: 17990800
I0428 20:24:04.007187  2352 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:04.007194  2352 net.cpp:86] Creating Layer accuracy
I0428 20:24:04.007197  2352 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:04.007203  2352 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:04.007210  2352 net.cpp:382] accuracy -> accuracy
I0428 20:24:04.007218  2352 net.cpp:124] Setting up accuracy
I0428 20:24:04.007222  2352 net.cpp:131] Top shape: (1)
I0428 20:24:04.007226  2352 net.cpp:139] Memory required for data: 17990804
I0428 20:24:04.007230  2352 layer_factory.hpp:77] Creating layer loss
I0428 20:24:04.007236  2352 net.cpp:86] Creating Layer loss
I0428 20:24:04.007241  2352 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:04.007244  2352 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:04.007249  2352 net.cpp:382] loss -> loss
I0428 20:24:04.007257  2352 layer_factory.hpp:77] Creating layer loss
I0428 20:24:04.007546  2352 net.cpp:124] Setting up loss
I0428 20:24:04.007560  2352 net.cpp:131] Top shape: (1)
I0428 20:24:04.007565  2352 net.cpp:134]     with loss weight 1
I0428 20:24:04.007582  2352 net.cpp:139] Memory required for data: 17990808
I0428 20:24:04.007587  2352 net.cpp:200] loss needs backward computation.
I0428 20:24:04.007592  2352 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:04.007597  2352 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:04.007601  2352 net.cpp:200] relu3 needs backward computation.
I0428 20:24:04.007604  2352 net.cpp:200] ip3 needs backward computation.
I0428 20:24:04.007608  2352 net.cpp:200] relu2 needs backward computation.
I0428 20:24:04.007612  2352 net.cpp:200] ip2 needs backward computation.
I0428 20:24:04.007616  2352 net.cpp:200] relu1 needs backward computation.
I0428 20:24:04.007619  2352 net.cpp:200] ip1 needs backward computation.
I0428 20:24:04.007622  2352 net.cpp:200] pool1 needs backward computation.
I0428 20:24:04.007627  2352 net.cpp:200] conv1 needs backward computation.
I0428 20:24:04.007632  2352 net.cpp:200] pool0 needs backward computation.
I0428 20:24:04.007634  2352 net.cpp:200] conv0 needs backward computation.
I0428 20:24:04.007640  2352 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:04.007644  2352 net.cpp:202] mnist does not need backward computation.
I0428 20:24:04.007647  2352 net.cpp:244] This network produces output accuracy
I0428 20:24:04.007652  2352 net.cpp:244] This network produces output loss
I0428 20:24:04.007665  2352 net.cpp:257] Network initialization done.
I0428 20:24:04.007715  2352 solver.cpp:56] Solver scaffolding done.
I0428 20:24:04.008139  2352 caffe.cpp:248] Starting Optimization
I0428 20:24:04.008147  2352 solver.cpp:273] Solving LeNet
I0428 20:24:04.008149  2352 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:04.009055  2352 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:04.043432  2352 blocking_queue.cpp:49] Waiting for data
I0428 20:24:04.108216  2359 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:04.109231  2352 solver.cpp:398]     Test net output #0: accuracy = 0.0846
I0428 20:24:04.109254  2352 solver.cpp:398]     Test net output #1: loss = 2.31921 (* 1 = 2.31921 loss)
I0428 20:24:04.115591  2352 solver.cpp:219] Iteration 0 (0 iter/s, 0.107406s/100 iters), loss = 2.33574
I0428 20:24:04.115619  2352 solver.cpp:238]     Train net output #0: loss = 2.33574 (* 1 = 2.33574 loss)
I0428 20:24:04.115633  2352 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:04.350045  2352 solver.cpp:219] Iteration 100 (426.614 iter/s, 0.234404s/100 iters), loss = 0.44743
I0428 20:24:04.350078  2352 solver.cpp:238]     Train net output #0: loss = 0.44743 (* 1 = 0.44743 loss)
I0428 20:24:04.350086  2352 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:04.593183  2352 solver.cpp:219] Iteration 200 (411.383 iter/s, 0.243082s/100 iters), loss = 0.456667
I0428 20:24:04.593231  2352 solver.cpp:238]     Train net output #0: loss = 0.456667 (* 1 = 0.456667 loss)
I0428 20:24:04.593243  2352 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:04.833765  2352 solver.cpp:219] Iteration 300 (415.767 iter/s, 0.240519s/100 iters), loss = 0.401039
I0428 20:24:04.833801  2352 solver.cpp:238]     Train net output #0: loss = 0.401039 (* 1 = 0.401039 loss)
I0428 20:24:04.833811  2352 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:05.069587  2352 solver.cpp:219] Iteration 400 (424.146 iter/s, 0.235768s/100 iters), loss = 0.436076
I0428 20:24:05.069622  2352 solver.cpp:238]     Train net output #0: loss = 0.436076 (* 1 = 0.436076 loss)
I0428 20:24:05.069631  2352 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:05.300654  2352 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:05.392120  2359 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:05.394646  2352 solver.cpp:398]     Test net output #0: accuracy = 0.9481
I0428 20:24:05.394675  2352 solver.cpp:398]     Test net output #1: loss = 0.361266 (* 1 = 0.361266 loss)
I0428 20:24:05.396895  2352 solver.cpp:219] Iteration 500 (305.574 iter/s, 0.327253s/100 iters), loss = 0.317357
I0428 20:24:05.396942  2352 solver.cpp:238]     Train net output #0: loss = 0.317357 (* 1 = 0.317357 loss)
I0428 20:24:05.396951  2352 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:05.634104  2352 solver.cpp:219] Iteration 600 (421.685 iter/s, 0.237144s/100 iters), loss = 0.251813
I0428 20:24:05.634138  2352 solver.cpp:238]     Train net output #0: loss = 0.251813 (* 1 = 0.251813 loss)
I0428 20:24:05.634146  2352 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:05.869269  2352 solver.cpp:219] Iteration 700 (425.321 iter/s, 0.235117s/100 iters), loss = 0.366102
I0428 20:24:05.869314  2352 solver.cpp:238]     Train net output #0: loss = 0.366102 (* 1 = 0.366102 loss)
I0428 20:24:05.869321  2352 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:06.081681  2352 solver.cpp:219] Iteration 800 (470.918 iter/s, 0.212351s/100 iters), loss = 0.406039
I0428 20:24:06.081707  2352 solver.cpp:238]     Train net output #0: loss = 0.406039 (* 1 = 0.406039 loss)
I0428 20:24:06.081713  2352 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:06.318461  2352 solver.cpp:219] Iteration 900 (422.41 iter/s, 0.236737s/100 iters), loss = 0.295432
I0428 20:24:06.318491  2352 solver.cpp:238]     Train net output #0: loss = 0.295432 (* 1 = 0.295432 loss)
I0428 20:24:06.318500  2352 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:06.394668  2358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:06.549244  2352 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:06.554639  2352 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:06.556890  2352 solver.cpp:311] Iteration 1000, loss = 0.368704
I0428 20:24:06.556915  2352 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:06.648543  2359 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:06.650076  2352 solver.cpp:398]     Test net output #0: accuracy = 0.9709
I0428 20:24:06.650104  2352 solver.cpp:398]     Test net output #1: loss = 0.296047 (* 1 = 0.296047 loss)
I0428 20:24:06.650110  2352 solver.cpp:316] Optimization Done.
I0428 20:24:06.650113  2352 caffe.cpp:259] Optimization Done.
