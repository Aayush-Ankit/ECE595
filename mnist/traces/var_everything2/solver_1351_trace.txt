I0428 20:19:53.132290  1444 caffe.cpp:218] Using GPUs 0
I0428 20:19:53.164108  1444 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:53.684628  1444 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1351.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:53.684767  1444 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1351.prototxt
I0428 20:19:53.685194  1444 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:53.685214  1444 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:53.685317  1444 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:53.685400  1444 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:53.685493  1444 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:53.685518  1444 net.cpp:86] Creating Layer mnist
I0428 20:19:53.685524  1444 net.cpp:382] mnist -> data
I0428 20:19:53.685547  1444 net.cpp:382] mnist -> label
I0428 20:19:53.686646  1444 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:53.689102  1444 net.cpp:124] Setting up mnist
I0428 20:19:53.689119  1444 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:53.689126  1444 net.cpp:131] Top shape: 64 (64)
I0428 20:19:53.689129  1444 net.cpp:139] Memory required for data: 200960
I0428 20:19:53.689136  1444 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:53.689187  1444 net.cpp:86] Creating Layer conv0
I0428 20:19:53.689209  1444 net.cpp:408] conv0 <- data
I0428 20:19:53.689223  1444 net.cpp:382] conv0 -> conv0
I0428 20:19:53.981652  1444 net.cpp:124] Setting up conv0
I0428 20:19:53.981683  1444 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:53.981688  1444 net.cpp:139] Memory required for data: 7573760
I0428 20:19:53.981706  1444 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:53.981721  1444 net.cpp:86] Creating Layer pool0
I0428 20:19:53.981726  1444 net.cpp:408] pool0 <- conv0
I0428 20:19:53.981732  1444 net.cpp:382] pool0 -> pool0
I0428 20:19:53.981789  1444 net.cpp:124] Setting up pool0
I0428 20:19:53.981796  1444 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:53.981799  1444 net.cpp:139] Memory required for data: 9416960
I0428 20:19:53.981803  1444 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:53.981817  1444 net.cpp:86] Creating Layer conv1
I0428 20:19:53.981820  1444 net.cpp:408] conv1 <- pool0
I0428 20:19:53.981827  1444 net.cpp:382] conv1 -> conv1
I0428 20:19:53.984148  1444 net.cpp:124] Setting up conv1
I0428 20:19:53.984166  1444 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:53.984170  1444 net.cpp:139] Memory required for data: 9826560
I0428 20:19:53.984182  1444 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:53.984191  1444 net.cpp:86] Creating Layer pool1
I0428 20:19:53.984196  1444 net.cpp:408] pool1 <- conv1
I0428 20:19:53.984202  1444 net.cpp:382] pool1 -> pool1
I0428 20:19:53.984246  1444 net.cpp:124] Setting up pool1
I0428 20:19:53.984252  1444 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:53.984256  1444 net.cpp:139] Memory required for data: 9928960
I0428 20:19:53.984261  1444 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:53.984268  1444 net.cpp:86] Creating Layer ip1
I0428 20:19:53.984272  1444 net.cpp:408] ip1 <- pool1
I0428 20:19:53.984277  1444 net.cpp:382] ip1 -> ip1
I0428 20:19:53.985435  1444 net.cpp:124] Setting up ip1
I0428 20:19:53.985451  1444 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:53.985455  1444 net.cpp:139] Memory required for data: 9935360
I0428 20:19:53.985466  1444 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:53.985472  1444 net.cpp:86] Creating Layer relu1
I0428 20:19:53.985477  1444 net.cpp:408] relu1 <- ip1
I0428 20:19:53.985483  1444 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:53.985678  1444 net.cpp:124] Setting up relu1
I0428 20:19:53.985689  1444 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:53.985693  1444 net.cpp:139] Memory required for data: 9941760
I0428 20:19:53.985697  1444 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:53.985705  1444 net.cpp:86] Creating Layer ip2
I0428 20:19:53.985709  1444 net.cpp:408] ip2 <- ip1
I0428 20:19:53.985715  1444 net.cpp:382] ip2 -> ip2
I0428 20:19:53.985829  1444 net.cpp:124] Setting up ip2
I0428 20:19:53.985837  1444 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:53.985841  1444 net.cpp:139] Memory required for data: 9948160
I0428 20:19:53.985848  1444 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:53.985855  1444 net.cpp:86] Creating Layer relu2
I0428 20:19:53.985859  1444 net.cpp:408] relu2 <- ip2
I0428 20:19:53.985864  1444 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:53.986706  1444 net.cpp:124] Setting up relu2
I0428 20:19:53.986721  1444 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:53.986724  1444 net.cpp:139] Memory required for data: 9954560
I0428 20:19:53.986728  1444 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:53.986737  1444 net.cpp:86] Creating Layer ip3
I0428 20:19:53.986742  1444 net.cpp:408] ip3 <- ip2
I0428 20:19:53.986747  1444 net.cpp:382] ip3 -> ip3
I0428 20:19:53.986867  1444 net.cpp:124] Setting up ip3
I0428 20:19:53.986876  1444 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:53.986881  1444 net.cpp:139] Memory required for data: 9957120
I0428 20:19:53.986891  1444 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:53.986896  1444 net.cpp:86] Creating Layer relu3
I0428 20:19:53.986901  1444 net.cpp:408] relu3 <- ip3
I0428 20:19:53.986905  1444 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:53.987099  1444 net.cpp:124] Setting up relu3
I0428 20:19:53.987109  1444 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:53.987113  1444 net.cpp:139] Memory required for data: 9959680
I0428 20:19:53.987118  1444 layer_factory.hpp:77] Creating layer loss
I0428 20:19:53.987124  1444 net.cpp:86] Creating Layer loss
I0428 20:19:53.987128  1444 net.cpp:408] loss <- ip3
I0428 20:19:53.987133  1444 net.cpp:408] loss <- label
I0428 20:19:53.987139  1444 net.cpp:382] loss -> loss
I0428 20:19:53.987160  1444 layer_factory.hpp:77] Creating layer loss
I0428 20:19:53.987418  1444 net.cpp:124] Setting up loss
I0428 20:19:53.987429  1444 net.cpp:131] Top shape: (1)
I0428 20:19:53.987433  1444 net.cpp:134]     with loss weight 1
I0428 20:19:53.987450  1444 net.cpp:139] Memory required for data: 9959684
I0428 20:19:53.987454  1444 net.cpp:200] loss needs backward computation.
I0428 20:19:53.987458  1444 net.cpp:200] relu3 needs backward computation.
I0428 20:19:53.987462  1444 net.cpp:200] ip3 needs backward computation.
I0428 20:19:53.987467  1444 net.cpp:200] relu2 needs backward computation.
I0428 20:19:53.987469  1444 net.cpp:200] ip2 needs backward computation.
I0428 20:19:53.987473  1444 net.cpp:200] relu1 needs backward computation.
I0428 20:19:53.987476  1444 net.cpp:200] ip1 needs backward computation.
I0428 20:19:53.987480  1444 net.cpp:200] pool1 needs backward computation.
I0428 20:19:53.987484  1444 net.cpp:200] conv1 needs backward computation.
I0428 20:19:53.987488  1444 net.cpp:200] pool0 needs backward computation.
I0428 20:19:53.987493  1444 net.cpp:200] conv0 needs backward computation.
I0428 20:19:53.987496  1444 net.cpp:202] mnist does not need backward computation.
I0428 20:19:53.987499  1444 net.cpp:244] This network produces output loss
I0428 20:19:53.987510  1444 net.cpp:257] Network initialization done.
I0428 20:19:53.987893  1444 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1351.prototxt
I0428 20:19:53.987926  1444 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:53.988034  1444 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:53.988127  1444 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:53.988178  1444 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:53.988193  1444 net.cpp:86] Creating Layer mnist
I0428 20:19:53.988198  1444 net.cpp:382] mnist -> data
I0428 20:19:53.988207  1444 net.cpp:382] mnist -> label
I0428 20:19:53.988308  1444 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:53.990703  1444 net.cpp:124] Setting up mnist
I0428 20:19:53.990720  1444 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:53.990726  1444 net.cpp:131] Top shape: 100 (100)
I0428 20:19:53.990731  1444 net.cpp:139] Memory required for data: 314000
I0428 20:19:53.990734  1444 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:53.990747  1444 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:53.990751  1444 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:53.990757  1444 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:53.990766  1444 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:53.990820  1444 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:53.990828  1444 net.cpp:131] Top shape: 100 (100)
I0428 20:19:53.990831  1444 net.cpp:131] Top shape: 100 (100)
I0428 20:19:53.990835  1444 net.cpp:139] Memory required for data: 314800
I0428 20:19:53.990839  1444 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:53.990849  1444 net.cpp:86] Creating Layer conv0
I0428 20:19:53.990852  1444 net.cpp:408] conv0 <- data
I0428 20:19:53.990859  1444 net.cpp:382] conv0 -> conv0
I0428 20:19:53.992794  1444 net.cpp:124] Setting up conv0
I0428 20:19:53.992820  1444 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:53.992825  1444 net.cpp:139] Memory required for data: 11834800
I0428 20:19:53.992837  1444 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:53.992844  1444 net.cpp:86] Creating Layer pool0
I0428 20:19:53.992849  1444 net.cpp:408] pool0 <- conv0
I0428 20:19:53.992854  1444 net.cpp:382] pool0 -> pool0
I0428 20:19:53.992897  1444 net.cpp:124] Setting up pool0
I0428 20:19:53.992904  1444 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:53.992908  1444 net.cpp:139] Memory required for data: 14714800
I0428 20:19:53.992911  1444 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:53.992921  1444 net.cpp:86] Creating Layer conv1
I0428 20:19:53.992925  1444 net.cpp:408] conv1 <- pool0
I0428 20:19:53.992931  1444 net.cpp:382] conv1 -> conv1
I0428 20:19:53.994810  1444 net.cpp:124] Setting up conv1
I0428 20:19:53.994827  1444 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:53.994832  1444 net.cpp:139] Memory required for data: 15354800
I0428 20:19:53.994843  1444 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:53.994850  1444 net.cpp:86] Creating Layer pool1
I0428 20:19:53.994855  1444 net.cpp:408] pool1 <- conv1
I0428 20:19:53.994861  1444 net.cpp:382] pool1 -> pool1
I0428 20:19:53.994902  1444 net.cpp:124] Setting up pool1
I0428 20:19:53.994910  1444 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:53.994915  1444 net.cpp:139] Memory required for data: 15514800
I0428 20:19:53.994917  1444 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:53.994933  1444 net.cpp:86] Creating Layer ip1
I0428 20:19:53.994937  1444 net.cpp:408] ip1 <- pool1
I0428 20:19:53.994943  1444 net.cpp:382] ip1 -> ip1
I0428 20:19:53.995121  1444 net.cpp:124] Setting up ip1
I0428 20:19:53.995131  1444 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:53.995147  1444 net.cpp:139] Memory required for data: 15524800
I0428 20:19:53.995157  1444 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:53.995163  1444 net.cpp:86] Creating Layer relu1
I0428 20:19:53.995167  1444 net.cpp:408] relu1 <- ip1
I0428 20:19:53.995172  1444 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:53.995352  1444 net.cpp:124] Setting up relu1
I0428 20:19:53.995362  1444 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:53.995367  1444 net.cpp:139] Memory required for data: 15534800
I0428 20:19:53.995370  1444 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:53.995379  1444 net.cpp:86] Creating Layer ip2
I0428 20:19:53.995383  1444 net.cpp:408] ip2 <- ip1
I0428 20:19:53.995389  1444 net.cpp:382] ip2 -> ip2
I0428 20:19:53.995510  1444 net.cpp:124] Setting up ip2
I0428 20:19:53.995518  1444 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:53.995522  1444 net.cpp:139] Memory required for data: 15544800
I0428 20:19:53.995528  1444 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:53.995534  1444 net.cpp:86] Creating Layer relu2
I0428 20:19:53.995539  1444 net.cpp:408] relu2 <- ip2
I0428 20:19:53.995544  1444 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:53.995807  1444 net.cpp:124] Setting up relu2
I0428 20:19:53.995817  1444 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:53.995821  1444 net.cpp:139] Memory required for data: 15554800
I0428 20:19:53.995826  1444 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:53.995833  1444 net.cpp:86] Creating Layer ip3
I0428 20:19:53.995836  1444 net.cpp:408] ip3 <- ip2
I0428 20:19:53.995843  1444 net.cpp:382] ip3 -> ip3
I0428 20:19:53.995955  1444 net.cpp:124] Setting up ip3
I0428 20:19:53.995964  1444 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:53.995967  1444 net.cpp:139] Memory required for data: 15558800
I0428 20:19:53.995976  1444 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:53.995982  1444 net.cpp:86] Creating Layer relu3
I0428 20:19:53.995986  1444 net.cpp:408] relu3 <- ip3
I0428 20:19:53.995992  1444 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:53.996891  1444 net.cpp:124] Setting up relu3
I0428 20:19:53.996906  1444 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:53.996912  1444 net.cpp:139] Memory required for data: 15562800
I0428 20:19:53.996917  1444 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:53.996922  1444 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:53.996927  1444 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:53.996933  1444 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:53.996942  1444 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:53.997026  1444 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:53.997035  1444 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:53.997040  1444 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:53.997043  1444 net.cpp:139] Memory required for data: 15570800
I0428 20:19:53.997047  1444 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:53.997053  1444 net.cpp:86] Creating Layer accuracy
I0428 20:19:53.997057  1444 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:53.997062  1444 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:53.997068  1444 net.cpp:382] accuracy -> accuracy
I0428 20:19:53.997076  1444 net.cpp:124] Setting up accuracy
I0428 20:19:53.997082  1444 net.cpp:131] Top shape: (1)
I0428 20:19:53.997086  1444 net.cpp:139] Memory required for data: 15570804
I0428 20:19:53.997088  1444 layer_factory.hpp:77] Creating layer loss
I0428 20:19:53.997093  1444 net.cpp:86] Creating Layer loss
I0428 20:19:53.997097  1444 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:53.997102  1444 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:53.997107  1444 net.cpp:382] loss -> loss
I0428 20:19:53.997122  1444 layer_factory.hpp:77] Creating layer loss
I0428 20:19:53.997383  1444 net.cpp:124] Setting up loss
I0428 20:19:53.997393  1444 net.cpp:131] Top shape: (1)
I0428 20:19:53.997397  1444 net.cpp:134]     with loss weight 1
I0428 20:19:53.997418  1444 net.cpp:139] Memory required for data: 15570808
I0428 20:19:53.997431  1444 net.cpp:200] loss needs backward computation.
I0428 20:19:53.997437  1444 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:53.997442  1444 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:53.997445  1444 net.cpp:200] relu3 needs backward computation.
I0428 20:19:53.997448  1444 net.cpp:200] ip3 needs backward computation.
I0428 20:19:53.997453  1444 net.cpp:200] relu2 needs backward computation.
I0428 20:19:53.997457  1444 net.cpp:200] ip2 needs backward computation.
I0428 20:19:53.997462  1444 net.cpp:200] relu1 needs backward computation.
I0428 20:19:53.997465  1444 net.cpp:200] ip1 needs backward computation.
I0428 20:19:53.997469  1444 net.cpp:200] pool1 needs backward computation.
I0428 20:19:53.997473  1444 net.cpp:200] conv1 needs backward computation.
I0428 20:19:53.997483  1444 net.cpp:200] pool0 needs backward computation.
I0428 20:19:53.997493  1444 net.cpp:200] conv0 needs backward computation.
I0428 20:19:53.997498  1444 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:53.997503  1444 net.cpp:202] mnist does not need backward computation.
I0428 20:19:53.997506  1444 net.cpp:244] This network produces output accuracy
I0428 20:19:53.997510  1444 net.cpp:244] This network produces output loss
I0428 20:19:53.997524  1444 net.cpp:257] Network initialization done.
I0428 20:19:53.997576  1444 solver.cpp:56] Solver scaffolding done.
I0428 20:19:53.997956  1444 caffe.cpp:248] Starting Optimization
I0428 20:19:53.997964  1444 solver.cpp:273] Solving LeNet
I0428 20:19:53.997968  1444 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:53.998976  1444 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:54.006541  1444 blocking_queue.cpp:49] Waiting for data
I0428 20:19:54.089057  1451 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:54.090478  1444 solver.cpp:398]     Test net output #0: accuracy = 0.0986
I0428 20:19:54.090535  1444 solver.cpp:398]     Test net output #1: loss = 2.35171 (* 1 = 2.35171 loss)
I0428 20:19:54.096928  1444 solver.cpp:219] Iteration 0 (0 iter/s, 0.0989276s/100 iters), loss = 2.34517
I0428 20:19:54.096969  1444 solver.cpp:238]     Train net output #0: loss = 2.34517 (* 1 = 2.34517 loss)
I0428 20:19:54.096988  1444 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:54.250737  1444 solver.cpp:219] Iteration 100 (650.404 iter/s, 0.153751s/100 iters), loss = 1.23483
I0428 20:19:54.250790  1444 solver.cpp:238]     Train net output #0: loss = 1.23483 (* 1 = 1.23483 loss)
I0428 20:19:54.250803  1444 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:54.404552  1444 solver.cpp:219] Iteration 200 (650.408 iter/s, 0.15375s/100 iters), loss = 1.27076
I0428 20:19:54.404595  1444 solver.cpp:238]     Train net output #0: loss = 1.27076 (* 1 = 1.27076 loss)
I0428 20:19:54.404606  1444 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:54.552492  1444 solver.cpp:219] Iteration 300 (676.21 iter/s, 0.147883s/100 iters), loss = 1.07507
I0428 20:19:54.552533  1444 solver.cpp:238]     Train net output #0: loss = 1.07507 (* 1 = 1.07507 loss)
I0428 20:19:54.552542  1444 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:54.712486  1444 solver.cpp:219] Iteration 400 (625.252 iter/s, 0.159935s/100 iters), loss = 0.985762
I0428 20:19:54.712535  1444 solver.cpp:238]     Train net output #0: loss = 0.985762 (* 1 = 0.985762 loss)
I0428 20:19:54.712548  1444 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:54.866266  1444 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:54.941563  1451 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:54.943975  1444 solver.cpp:398]     Test net output #0: accuracy = 0.7626
I0428 20:19:54.944001  1444 solver.cpp:398]     Test net output #1: loss = 0.793113 (* 1 = 0.793113 loss)
I0428 20:19:54.945303  1444 solver.cpp:219] Iteration 500 (429.638 iter/s, 0.232754s/100 iters), loss = 0.758999
I0428 20:19:54.945353  1444 solver.cpp:238]     Train net output #0: loss = 0.758999 (* 1 = 0.758999 loss)
I0428 20:19:54.945363  1444 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:55.093948  1444 solver.cpp:219] Iteration 600 (673.032 iter/s, 0.148581s/100 iters), loss = 0.779432
I0428 20:19:55.093991  1444 solver.cpp:238]     Train net output #0: loss = 0.779432 (* 1 = 0.779432 loss)
I0428 20:19:55.094002  1444 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:55.253875  1444 solver.cpp:219] Iteration 700 (625.509 iter/s, 0.15987s/100 iters), loss = 0.567637
I0428 20:19:55.253927  1444 solver.cpp:238]     Train net output #0: loss = 0.567637 (* 1 = 0.567637 loss)
I0428 20:19:55.253940  1444 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:55.414557  1444 solver.cpp:219] Iteration 800 (622.598 iter/s, 0.160617s/100 iters), loss = 1.11658
I0428 20:19:55.414608  1444 solver.cpp:238]     Train net output #0: loss = 1.11658 (* 1 = 1.11658 loss)
I0428 20:19:55.414619  1444 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:55.570389  1444 solver.cpp:219] Iteration 900 (641.981 iter/s, 0.155768s/100 iters), loss = 1.03914
I0428 20:19:55.570436  1444 solver.cpp:238]     Train net output #0: loss = 1.03914 (* 1 = 1.03914 loss)
I0428 20:19:55.570446  1444 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:55.621292  1450 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:55.725118  1444 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:55.727097  1444 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:55.728420  1444 solver.cpp:311] Iteration 1000, loss = 0.756092
I0428 20:19:55.728447  1444 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:55.803213  1451 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:55.805771  1444 solver.cpp:398]     Test net output #0: accuracy = 0.7702
I0428 20:19:55.805796  1444 solver.cpp:398]     Test net output #1: loss = 0.782036 (* 1 = 0.782036 loss)
I0428 20:19:55.805802  1444 solver.cpp:316] Optimization Done.
I0428 20:19:55.805806  1444 caffe.cpp:259] Optimization Done.
