I0428 20:05:03.245151 30523 caffe.cpp:218] Using GPUs 0
I0428 20:05:03.281709 30523 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:03.792023 30523 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test989.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:03.792163 30523 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test989.prototxt
I0428 20:05:03.792584 30523 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:03.792606 30523 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:03.792708 30523 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:03.792789 30523 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:03.792902 30523 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:03.792928 30523 net.cpp:86] Creating Layer mnist
I0428 20:05:03.792937 30523 net.cpp:382] mnist -> data
I0428 20:05:03.792960 30523 net.cpp:382] mnist -> label
I0428 20:05:03.794047 30523 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:03.796499 30523 net.cpp:124] Setting up mnist
I0428 20:05:03.796517 30523 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:03.796524 30523 net.cpp:131] Top shape: 64 (64)
I0428 20:05:03.796526 30523 net.cpp:139] Memory required for data: 200960
I0428 20:05:03.796535 30523 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:03.796563 30523 net.cpp:86] Creating Layer conv0
I0428 20:05:03.796586 30523 net.cpp:408] conv0 <- data
I0428 20:05:03.796598 30523 net.cpp:382] conv0 -> conv0
I0428 20:05:04.072047 30523 net.cpp:124] Setting up conv0
I0428 20:05:04.072074 30523 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:04.072078 30523 net.cpp:139] Memory required for data: 3887360
I0428 20:05:04.072093 30523 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:04.072106 30523 net.cpp:86] Creating Layer pool0
I0428 20:05:04.072110 30523 net.cpp:408] pool0 <- conv0
I0428 20:05:04.072116 30523 net.cpp:382] pool0 -> pool0
I0428 20:05:04.072175 30523 net.cpp:124] Setting up pool0
I0428 20:05:04.072182 30523 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:04.072185 30523 net.cpp:139] Memory required for data: 4808960
I0428 20:05:04.072188 30523 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:04.072199 30523 net.cpp:86] Creating Layer conv1
I0428 20:05:04.072202 30523 net.cpp:408] conv1 <- pool0
I0428 20:05:04.072207 30523 net.cpp:382] conv1 -> conv1
I0428 20:05:04.074834 30523 net.cpp:124] Setting up conv1
I0428 20:05:04.074864 30523 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:04.074868 30523 net.cpp:139] Memory required for data: 4841728
I0428 20:05:04.074877 30523 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:04.074885 30523 net.cpp:86] Creating Layer pool1
I0428 20:05:04.074889 30523 net.cpp:408] pool1 <- conv1
I0428 20:05:04.074893 30523 net.cpp:382] pool1 -> pool1
I0428 20:05:04.074944 30523 net.cpp:124] Setting up pool1
I0428 20:05:04.074950 30523 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:04.074952 30523 net.cpp:139] Memory required for data: 4849920
I0428 20:05:04.074955 30523 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:04.074962 30523 net.cpp:86] Creating Layer ip1
I0428 20:05:04.074966 30523 net.cpp:408] ip1 <- pool1
I0428 20:05:04.074970 30523 net.cpp:382] ip1 -> ip1
I0428 20:05:04.075058 30523 net.cpp:124] Setting up ip1
I0428 20:05:04.075067 30523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:04.075069 30523 net.cpp:139] Memory required for data: 4852480
I0428 20:05:04.075076 30523 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:04.075083 30523 net.cpp:86] Creating Layer relu1
I0428 20:05:04.075085 30523 net.cpp:408] relu1 <- ip1
I0428 20:05:04.075089 30523 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:04.075256 30523 net.cpp:124] Setting up relu1
I0428 20:05:04.075266 30523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:04.075269 30523 net.cpp:139] Memory required for data: 4855040
I0428 20:05:04.075273 30523 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:04.075279 30523 net.cpp:86] Creating Layer ip2
I0428 20:05:04.075283 30523 net.cpp:408] ip2 <- ip1
I0428 20:05:04.075287 30523 net.cpp:382] ip2 -> ip2
I0428 20:05:04.075377 30523 net.cpp:124] Setting up ip2
I0428 20:05:04.075384 30523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:04.075387 30523 net.cpp:139] Memory required for data: 4857600
I0428 20:05:04.075392 30523 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:04.075399 30523 net.cpp:86] Creating Layer relu2
I0428 20:05:04.075403 30523 net.cpp:408] relu2 <- ip2
I0428 20:05:04.075407 30523 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:04.076125 30523 net.cpp:124] Setting up relu2
I0428 20:05:04.076138 30523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:04.076156 30523 net.cpp:139] Memory required for data: 4860160
I0428 20:05:04.076160 30523 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:04.076167 30523 net.cpp:86] Creating Layer ip3
I0428 20:05:04.076171 30523 net.cpp:408] ip3 <- ip2
I0428 20:05:04.076177 30523 net.cpp:382] ip3 -> ip3
I0428 20:05:04.076270 30523 net.cpp:124] Setting up ip3
I0428 20:05:04.076278 30523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:04.076282 30523 net.cpp:139] Memory required for data: 4862720
I0428 20:05:04.076290 30523 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:04.076295 30523 net.cpp:86] Creating Layer relu3
I0428 20:05:04.076298 30523 net.cpp:408] relu3 <- ip3
I0428 20:05:04.076303 30523 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:04.076465 30523 net.cpp:124] Setting up relu3
I0428 20:05:04.076474 30523 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:04.076478 30523 net.cpp:139] Memory required for data: 4865280
I0428 20:05:04.076480 30523 layer_factory.hpp:77] Creating layer loss
I0428 20:05:04.076486 30523 net.cpp:86] Creating Layer loss
I0428 20:05:04.076489 30523 net.cpp:408] loss <- ip3
I0428 20:05:04.076493 30523 net.cpp:408] loss <- label
I0428 20:05:04.076498 30523 net.cpp:382] loss -> loss
I0428 20:05:04.076516 30523 layer_factory.hpp:77] Creating layer loss
I0428 20:05:04.076730 30523 net.cpp:124] Setting up loss
I0428 20:05:04.076740 30523 net.cpp:131] Top shape: (1)
I0428 20:05:04.076743 30523 net.cpp:134]     with loss weight 1
I0428 20:05:04.076756 30523 net.cpp:139] Memory required for data: 4865284
I0428 20:05:04.076761 30523 net.cpp:200] loss needs backward computation.
I0428 20:05:04.076763 30523 net.cpp:200] relu3 needs backward computation.
I0428 20:05:04.076766 30523 net.cpp:200] ip3 needs backward computation.
I0428 20:05:04.076769 30523 net.cpp:200] relu2 needs backward computation.
I0428 20:05:04.076772 30523 net.cpp:200] ip2 needs backward computation.
I0428 20:05:04.076776 30523 net.cpp:200] relu1 needs backward computation.
I0428 20:05:04.076778 30523 net.cpp:200] ip1 needs backward computation.
I0428 20:05:04.076781 30523 net.cpp:200] pool1 needs backward computation.
I0428 20:05:04.076784 30523 net.cpp:200] conv1 needs backward computation.
I0428 20:05:04.076787 30523 net.cpp:200] pool0 needs backward computation.
I0428 20:05:04.076791 30523 net.cpp:200] conv0 needs backward computation.
I0428 20:05:04.076794 30523 net.cpp:202] mnist does not need backward computation.
I0428 20:05:04.076797 30523 net.cpp:244] This network produces output loss
I0428 20:05:04.076805 30523 net.cpp:257] Network initialization done.
I0428 20:05:04.077235 30523 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test989.prototxt
I0428 20:05:04.077302 30523 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:04.077390 30523 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:04.077466 30523 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:04.077512 30523 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:04.077524 30523 net.cpp:86] Creating Layer mnist
I0428 20:05:04.077528 30523 net.cpp:382] mnist -> data
I0428 20:05:04.077536 30523 net.cpp:382] mnist -> label
I0428 20:05:04.077632 30523 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:04.079677 30523 net.cpp:124] Setting up mnist
I0428 20:05:04.079706 30523 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:04.079711 30523 net.cpp:131] Top shape: 100 (100)
I0428 20:05:04.079715 30523 net.cpp:139] Memory required for data: 314000
I0428 20:05:04.079718 30523 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:04.079753 30523 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:04.079757 30523 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:04.079762 30523 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:04.079769 30523 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:04.079809 30523 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:04.079815 30523 net.cpp:131] Top shape: 100 (100)
I0428 20:05:04.079819 30523 net.cpp:131] Top shape: 100 (100)
I0428 20:05:04.079823 30523 net.cpp:139] Memory required for data: 314800
I0428 20:05:04.079825 30523 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:04.079833 30523 net.cpp:86] Creating Layer conv0
I0428 20:05:04.079836 30523 net.cpp:408] conv0 <- data
I0428 20:05:04.079841 30523 net.cpp:382] conv0 -> conv0
I0428 20:05:04.081467 30523 net.cpp:124] Setting up conv0
I0428 20:05:04.081481 30523 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:04.081485 30523 net.cpp:139] Memory required for data: 6074800
I0428 20:05:04.081495 30523 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:04.081516 30523 net.cpp:86] Creating Layer pool0
I0428 20:05:04.081521 30523 net.cpp:408] pool0 <- conv0
I0428 20:05:04.081526 30523 net.cpp:382] pool0 -> pool0
I0428 20:05:04.081562 30523 net.cpp:124] Setting up pool0
I0428 20:05:04.081568 30523 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:04.081570 30523 net.cpp:139] Memory required for data: 7514800
I0428 20:05:04.081573 30523 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:04.081581 30523 net.cpp:86] Creating Layer conv1
I0428 20:05:04.081585 30523 net.cpp:408] conv1 <- pool0
I0428 20:05:04.081590 30523 net.cpp:382] conv1 -> conv1
I0428 20:05:04.083528 30523 net.cpp:124] Setting up conv1
I0428 20:05:04.083540 30523 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:04.083544 30523 net.cpp:139] Memory required for data: 7566000
I0428 20:05:04.083554 30523 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:04.083559 30523 net.cpp:86] Creating Layer pool1
I0428 20:05:04.083564 30523 net.cpp:408] pool1 <- conv1
I0428 20:05:04.083576 30523 net.cpp:382] pool1 -> pool1
I0428 20:05:04.083614 30523 net.cpp:124] Setting up pool1
I0428 20:05:04.083621 30523 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:04.083628 30523 net.cpp:139] Memory required for data: 7578800
I0428 20:05:04.083632 30523 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:04.083637 30523 net.cpp:86] Creating Layer ip1
I0428 20:05:04.083642 30523 net.cpp:408] ip1 <- pool1
I0428 20:05:04.083647 30523 net.cpp:382] ip1 -> ip1
I0428 20:05:04.083742 30523 net.cpp:124] Setting up ip1
I0428 20:05:04.083751 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.083765 30523 net.cpp:139] Memory required for data: 7582800
I0428 20:05:04.083772 30523 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:04.083777 30523 net.cpp:86] Creating Layer relu1
I0428 20:05:04.083781 30523 net.cpp:408] relu1 <- ip1
I0428 20:05:04.083786 30523 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:04.083941 30523 net.cpp:124] Setting up relu1
I0428 20:05:04.083951 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.083968 30523 net.cpp:139] Memory required for data: 7586800
I0428 20:05:04.083972 30523 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:04.083979 30523 net.cpp:86] Creating Layer ip2
I0428 20:05:04.084004 30523 net.cpp:408] ip2 <- ip1
I0428 20:05:04.084014 30523 net.cpp:382] ip2 -> ip2
I0428 20:05:04.084116 30523 net.cpp:124] Setting up ip2
I0428 20:05:04.084123 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.084126 30523 net.cpp:139] Memory required for data: 7590800
I0428 20:05:04.084131 30523 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:04.084136 30523 net.cpp:86] Creating Layer relu2
I0428 20:05:04.084146 30523 net.cpp:408] relu2 <- ip2
I0428 20:05:04.084151 30523 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:04.084290 30523 net.cpp:124] Setting up relu2
I0428 20:05:04.084298 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.084301 30523 net.cpp:139] Memory required for data: 7594800
I0428 20:05:04.084305 30523 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:04.084311 30523 net.cpp:86] Creating Layer ip3
I0428 20:05:04.084313 30523 net.cpp:408] ip3 <- ip2
I0428 20:05:04.084317 30523 net.cpp:382] ip3 -> ip3
I0428 20:05:04.084419 30523 net.cpp:124] Setting up ip3
I0428 20:05:04.084425 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.084429 30523 net.cpp:139] Memory required for data: 7598800
I0428 20:05:04.084442 30523 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:04.084447 30523 net.cpp:86] Creating Layer relu3
I0428 20:05:04.084451 30523 net.cpp:408] relu3 <- ip3
I0428 20:05:04.084455 30523 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:04.085363 30523 net.cpp:124] Setting up relu3
I0428 20:05:04.085376 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.085379 30523 net.cpp:139] Memory required for data: 7602800
I0428 20:05:04.085382 30523 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:04.085388 30523 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:04.085391 30523 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:04.085397 30523 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:04.085403 30523 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:04.085484 30523 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:04.085501 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.085505 30523 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:04.085508 30523 net.cpp:139] Memory required for data: 7610800
I0428 20:05:04.085511 30523 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:04.085516 30523 net.cpp:86] Creating Layer accuracy
I0428 20:05:04.085520 30523 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:04.085525 30523 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:04.085528 30523 net.cpp:382] accuracy -> accuracy
I0428 20:05:04.085536 30523 net.cpp:124] Setting up accuracy
I0428 20:05:04.085539 30523 net.cpp:131] Top shape: (1)
I0428 20:05:04.085542 30523 net.cpp:139] Memory required for data: 7610804
I0428 20:05:04.085546 30523 layer_factory.hpp:77] Creating layer loss
I0428 20:05:04.085549 30523 net.cpp:86] Creating Layer loss
I0428 20:05:04.085552 30523 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:04.085556 30523 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:04.085559 30523 net.cpp:382] loss -> loss
I0428 20:05:04.085572 30523 layer_factory.hpp:77] Creating layer loss
I0428 20:05:04.085801 30523 net.cpp:124] Setting up loss
I0428 20:05:04.085811 30523 net.cpp:131] Top shape: (1)
I0428 20:05:04.085814 30523 net.cpp:134]     with loss weight 1
I0428 20:05:04.085820 30523 net.cpp:139] Memory required for data: 7610808
I0428 20:05:04.085834 30523 net.cpp:200] loss needs backward computation.
I0428 20:05:04.085837 30523 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:04.085841 30523 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:04.085844 30523 net.cpp:200] relu3 needs backward computation.
I0428 20:05:04.085846 30523 net.cpp:200] ip3 needs backward computation.
I0428 20:05:04.085856 30523 net.cpp:200] relu2 needs backward computation.
I0428 20:05:04.085875 30523 net.cpp:200] ip2 needs backward computation.
I0428 20:05:04.085888 30523 net.cpp:200] relu1 needs backward computation.
I0428 20:05:04.085891 30523 net.cpp:200] ip1 needs backward computation.
I0428 20:05:04.085894 30523 net.cpp:200] pool1 needs backward computation.
I0428 20:05:04.085897 30523 net.cpp:200] conv1 needs backward computation.
I0428 20:05:04.085906 30523 net.cpp:200] pool0 needs backward computation.
I0428 20:05:04.085909 30523 net.cpp:200] conv0 needs backward computation.
I0428 20:05:04.085913 30523 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:04.085917 30523 net.cpp:202] mnist does not need backward computation.
I0428 20:05:04.085925 30523 net.cpp:244] This network produces output accuracy
I0428 20:05:04.085939 30523 net.cpp:244] This network produces output loss
I0428 20:05:04.085949 30523 net.cpp:257] Network initialization done.
I0428 20:05:04.085989 30523 solver.cpp:56] Solver scaffolding done.
I0428 20:05:04.086294 30523 caffe.cpp:248] Starting Optimization
I0428 20:05:04.086302 30523 solver.cpp:273] Solving LeNet
I0428 20:05:04.086304 30523 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:04.087126 30523 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:04.092353 30523 blocking_queue.cpp:49] Waiting for data
I0428 20:05:04.166487 30530 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:04.167105 30523 solver.cpp:398]     Test net output #0: accuracy = 0.0963
I0428 20:05:04.167125 30523 solver.cpp:398]     Test net output #1: loss = 2.32338 (* 1 = 2.32338 loss)
I0428 20:05:04.170413 30523 solver.cpp:219] Iteration 0 (0 iter/s, 0.0840858s/100 iters), loss = 2.30179
I0428 20:05:04.170450 30523 solver.cpp:238]     Train net output #0: loss = 2.30179 (* 1 = 2.30179 loss)
I0428 20:05:04.170477 30523 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:04.259491 30523 solver.cpp:219] Iteration 100 (1123.02 iter/s, 0.0890459s/100 iters), loss = 1.78544
I0428 20:05:04.259516 30523 solver.cpp:238]     Train net output #0: loss = 1.78544 (* 1 = 1.78544 loss)
I0428 20:05:04.259536 30523 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:04.345407 30523 solver.cpp:219] Iteration 200 (1164.39 iter/s, 0.0858819s/100 iters), loss = 0.989506
I0428 20:05:04.345432 30523 solver.cpp:238]     Train net output #0: loss = 0.989506 (* 1 = 0.989506 loss)
I0428 20:05:04.345438 30523 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:04.439889 30523 solver.cpp:219] Iteration 300 (1058.79 iter/s, 0.0944477s/100 iters), loss = 0.600612
I0428 20:05:04.439929 30523 solver.cpp:238]     Train net output #0: loss = 0.600612 (* 1 = 0.600612 loss)
I0428 20:05:04.439935 30523 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:04.531152 30523 solver.cpp:219] Iteration 400 (1096.34 iter/s, 0.0912128s/100 iters), loss = 0.734915
I0428 20:05:04.531191 30523 solver.cpp:238]     Train net output #0: loss = 0.734915 (* 1 = 0.734915 loss)
I0428 20:05:04.531198 30523 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:04.616472 30523 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:04.687021 30530 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:04.687613 30523 solver.cpp:398]     Test net output #0: accuracy = 0.8851
I0428 20:05:04.687633 30523 solver.cpp:398]     Test net output #1: loss = 0.402268 (* 1 = 0.402268 loss)
I0428 20:05:04.688556 30523 solver.cpp:219] Iteration 500 (635.531 iter/s, 0.157349s/100 iters), loss = 0.439219
I0428 20:05:04.688581 30523 solver.cpp:238]     Train net output #0: loss = 0.439219 (* 1 = 0.439219 loss)
I0428 20:05:04.688603 30523 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:04.792644 30523 solver.cpp:219] Iteration 600 (961.061 iter/s, 0.104052s/100 iters), loss = 0.411975
I0428 20:05:04.792686 30523 solver.cpp:238]     Train net output #0: loss = 0.411974 (* 1 = 0.411974 loss)
I0428 20:05:04.792693 30523 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:04.888718 30523 solver.cpp:219] Iteration 700 (1041.42 iter/s, 0.0960225s/100 iters), loss = 0.406464
I0428 20:05:04.888762 30523 solver.cpp:238]     Train net output #0: loss = 0.406464 (* 1 = 0.406464 loss)
I0428 20:05:04.888770 30523 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:04.979826 30523 solver.cpp:219] Iteration 800 (1098.24 iter/s, 0.0910551s/100 iters), loss = 0.270506
I0428 20:05:04.979866 30523 solver.cpp:238]     Train net output #0: loss = 0.270506 (* 1 = 0.270506 loss)
I0428 20:05:04.979889 30523 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:05.066346 30523 solver.cpp:219] Iteration 900 (1156.27 iter/s, 0.0864852s/100 iters), loss = 0.377886
I0428 20:05:05.066370 30523 solver.cpp:238]     Train net output #0: loss = 0.377886 (* 1 = 0.377886 loss)
I0428 20:05:05.066377 30523 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:05.094774 30529 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:05.150755 30523 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:05.151494 30523 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:05.152041 30523 solver.cpp:311] Iteration 1000, loss = 0.377058
I0428 20:05:05.152055 30523 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:05.227434 30530 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:05.228022 30523 solver.cpp:398]     Test net output #0: accuracy = 0.9106
I0428 20:05:05.228042 30523 solver.cpp:398]     Test net output #1: loss = 0.311111 (* 1 = 0.311111 loss)
I0428 20:05:05.228047 30523 solver.cpp:316] Optimization Done.
I0428 20:05:05.228050 30523 caffe.cpp:259] Optimization Done.
