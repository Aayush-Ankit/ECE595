I0428 19:58:03.273711 28879 caffe.cpp:218] Using GPUs 0
I0428 19:58:03.310540 28879 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:03.762887 28879 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test807.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:03.763020 28879 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test807.prototxt
I0428 19:58:03.763358 28879 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:03.763388 28879 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:03.763485 28879 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:03.763548 28879 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:03.763628 28879 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:03.763645 28879 net.cpp:86] Creating Layer mnist
I0428 19:58:03.763653 28879 net.cpp:382] mnist -> data
I0428 19:58:03.763671 28879 net.cpp:382] mnist -> label
I0428 19:58:03.764713 28879 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:03.766854 28879 net.cpp:124] Setting up mnist
I0428 19:58:03.766868 28879 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:03.766873 28879 net.cpp:131] Top shape: 64 (64)
I0428 19:58:03.766876 28879 net.cpp:139] Memory required for data: 200960
I0428 19:58:03.766881 28879 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:03.766909 28879 net.cpp:86] Creating Layer conv0
I0428 19:58:03.766927 28879 net.cpp:408] conv0 <- data
I0428 19:58:03.766937 28879 net.cpp:382] conv0 -> conv0
I0428 19:58:04.001487 28879 net.cpp:124] Setting up conv0
I0428 19:58:04.001513 28879 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:04.001518 28879 net.cpp:139] Memory required for data: 1675520
I0428 19:58:04.001531 28879 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:04.001545 28879 net.cpp:86] Creating Layer pool0
I0428 19:58:04.001549 28879 net.cpp:408] pool0 <- conv0
I0428 19:58:04.001554 28879 net.cpp:382] pool0 -> pool0
I0428 19:58:04.001615 28879 net.cpp:124] Setting up pool0
I0428 19:58:04.001622 28879 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:04.001626 28879 net.cpp:139] Memory required for data: 2044160
I0428 19:58:04.001628 28879 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:04.001639 28879 net.cpp:86] Creating Layer conv1
I0428 19:58:04.001642 28879 net.cpp:408] conv1 <- pool0
I0428 19:58:04.001646 28879 net.cpp:382] conv1 -> conv1
I0428 19:58:04.004390 28879 net.cpp:124] Setting up conv1
I0428 19:58:04.004405 28879 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:58:04.004408 28879 net.cpp:139] Memory required for data: 2126080
I0428 19:58:04.004417 28879 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:04.004439 28879 net.cpp:86] Creating Layer pool1
I0428 19:58:04.004443 28879 net.cpp:408] pool1 <- conv1
I0428 19:58:04.004448 28879 net.cpp:382] pool1 -> pool1
I0428 19:58:04.004484 28879 net.cpp:124] Setting up pool1
I0428 19:58:04.004490 28879 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:58:04.004494 28879 net.cpp:139] Memory required for data: 2146560
I0428 19:58:04.004498 28879 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:04.004503 28879 net.cpp:86] Creating Layer ip1
I0428 19:58:04.004506 28879 net.cpp:408] ip1 <- pool1
I0428 19:58:04.004511 28879 net.cpp:382] ip1 -> ip1
I0428 19:58:04.004627 28879 net.cpp:124] Setting up ip1
I0428 19:58:04.004634 28879 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:58:04.004637 28879 net.cpp:139] Memory required for data: 2152960
I0428 19:58:04.004643 28879 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:04.004648 28879 net.cpp:86] Creating Layer relu1
I0428 19:58:04.004652 28879 net.cpp:408] relu1 <- ip1
I0428 19:58:04.004655 28879 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:04.004835 28879 net.cpp:124] Setting up relu1
I0428 19:58:04.004844 28879 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:58:04.004848 28879 net.cpp:139] Memory required for data: 2159360
I0428 19:58:04.004851 28879 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:04.004858 28879 net.cpp:86] Creating Layer ip2
I0428 19:58:04.004860 28879 net.cpp:408] ip2 <- ip1
I0428 19:58:04.004880 28879 net.cpp:382] ip2 -> ip2
I0428 19:58:04.005007 28879 net.cpp:124] Setting up ip2
I0428 19:58:04.005013 28879 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:04.005017 28879 net.cpp:139] Memory required for data: 2172160
I0428 19:58:04.005023 28879 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:04.005028 28879 net.cpp:86] Creating Layer relu2
I0428 19:58:04.005033 28879 net.cpp:408] relu2 <- ip2
I0428 19:58:04.005036 28879 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:04.005832 28879 net.cpp:124] Setting up relu2
I0428 19:58:04.005844 28879 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:58:04.005864 28879 net.cpp:139] Memory required for data: 2184960
I0428 19:58:04.005868 28879 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:04.005874 28879 net.cpp:86] Creating Layer ip3
I0428 19:58:04.005878 28879 net.cpp:408] ip3 <- ip2
I0428 19:58:04.005883 28879 net.cpp:382] ip3 -> ip3
I0428 19:58:04.005981 28879 net.cpp:124] Setting up ip3
I0428 19:58:04.005988 28879 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:04.005992 28879 net.cpp:139] Memory required for data: 2187520
I0428 19:58:04.006000 28879 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:04.006005 28879 net.cpp:86] Creating Layer relu3
I0428 19:58:04.006007 28879 net.cpp:408] relu3 <- ip3
I0428 19:58:04.006011 28879 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:04.006170 28879 net.cpp:124] Setting up relu3
I0428 19:58:04.006178 28879 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:04.006181 28879 net.cpp:139] Memory required for data: 2190080
I0428 19:58:04.006184 28879 layer_factory.hpp:77] Creating layer loss
I0428 19:58:04.006191 28879 net.cpp:86] Creating Layer loss
I0428 19:58:04.006193 28879 net.cpp:408] loss <- ip3
I0428 19:58:04.006198 28879 net.cpp:408] loss <- label
I0428 19:58:04.006203 28879 net.cpp:382] loss -> loss
I0428 19:58:04.006230 28879 layer_factory.hpp:77] Creating layer loss
I0428 19:58:04.006438 28879 net.cpp:124] Setting up loss
I0428 19:58:04.006445 28879 net.cpp:131] Top shape: (1)
I0428 19:58:04.006448 28879 net.cpp:134]     with loss weight 1
I0428 19:58:04.006464 28879 net.cpp:139] Memory required for data: 2190084
I0428 19:58:04.006466 28879 net.cpp:200] loss needs backward computation.
I0428 19:58:04.006470 28879 net.cpp:200] relu3 needs backward computation.
I0428 19:58:04.006472 28879 net.cpp:200] ip3 needs backward computation.
I0428 19:58:04.006475 28879 net.cpp:200] relu2 needs backward computation.
I0428 19:58:04.006479 28879 net.cpp:200] ip2 needs backward computation.
I0428 19:58:04.006481 28879 net.cpp:200] relu1 needs backward computation.
I0428 19:58:04.006484 28879 net.cpp:200] ip1 needs backward computation.
I0428 19:58:04.006486 28879 net.cpp:200] pool1 needs backward computation.
I0428 19:58:04.006489 28879 net.cpp:200] conv1 needs backward computation.
I0428 19:58:04.006492 28879 net.cpp:200] pool0 needs backward computation.
I0428 19:58:04.006495 28879 net.cpp:200] conv0 needs backward computation.
I0428 19:58:04.006498 28879 net.cpp:202] mnist does not need backward computation.
I0428 19:58:04.006501 28879 net.cpp:244] This network produces output loss
I0428 19:58:04.006510 28879 net.cpp:257] Network initialization done.
I0428 19:58:04.006847 28879 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test807.prototxt
I0428 19:58:04.006889 28879 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:04.006978 28879 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:04.007055 28879 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:04.007112 28879 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:04.007124 28879 net.cpp:86] Creating Layer mnist
I0428 19:58:04.007128 28879 net.cpp:382] mnist -> data
I0428 19:58:04.007135 28879 net.cpp:382] mnist -> label
I0428 19:58:04.007215 28879 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:04.009104 28879 net.cpp:124] Setting up mnist
I0428 19:58:04.009148 28879 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:04.009153 28879 net.cpp:131] Top shape: 100 (100)
I0428 19:58:04.009171 28879 net.cpp:139] Memory required for data: 314000
I0428 19:58:04.009174 28879 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:04.009181 28879 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:04.009184 28879 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:04.009189 28879 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:04.009196 28879 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:04.009234 28879 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:04.009243 28879 net.cpp:131] Top shape: 100 (100)
I0428 19:58:04.009261 28879 net.cpp:131] Top shape: 100 (100)
I0428 19:58:04.009264 28879 net.cpp:139] Memory required for data: 314800
I0428 19:58:04.009268 28879 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:04.009281 28879 net.cpp:86] Creating Layer conv0
I0428 19:58:04.009286 28879 net.cpp:408] conv0 <- data
I0428 19:58:04.009290 28879 net.cpp:382] conv0 -> conv0
I0428 19:58:04.010980 28879 net.cpp:124] Setting up conv0
I0428 19:58:04.011009 28879 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:04.011013 28879 net.cpp:139] Memory required for data: 2618800
I0428 19:58:04.011021 28879 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:04.011029 28879 net.cpp:86] Creating Layer pool0
I0428 19:58:04.011031 28879 net.cpp:408] pool0 <- conv0
I0428 19:58:04.011036 28879 net.cpp:382] pool0 -> pool0
I0428 19:58:04.011086 28879 net.cpp:124] Setting up pool0
I0428 19:58:04.011092 28879 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:04.011096 28879 net.cpp:139] Memory required for data: 3194800
I0428 19:58:04.011099 28879 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:04.011107 28879 net.cpp:86] Creating Layer conv1
I0428 19:58:04.011111 28879 net.cpp:408] conv1 <- pool0
I0428 19:58:04.011116 28879 net.cpp:382] conv1 -> conv1
I0428 19:58:04.013370 28879 net.cpp:124] Setting up conv1
I0428 19:58:04.013382 28879 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:58:04.013401 28879 net.cpp:139] Memory required for data: 3322800
I0428 19:58:04.013409 28879 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:04.013417 28879 net.cpp:86] Creating Layer pool1
I0428 19:58:04.013419 28879 net.cpp:408] pool1 <- conv1
I0428 19:58:04.013425 28879 net.cpp:382] pool1 -> pool1
I0428 19:58:04.013484 28879 net.cpp:124] Setting up pool1
I0428 19:58:04.013489 28879 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:58:04.013492 28879 net.cpp:139] Memory required for data: 3354800
I0428 19:58:04.013495 28879 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:04.013501 28879 net.cpp:86] Creating Layer ip1
I0428 19:58:04.013504 28879 net.cpp:408] ip1 <- pool1
I0428 19:58:04.013509 28879 net.cpp:382] ip1 -> ip1
I0428 19:58:04.013643 28879 net.cpp:124] Setting up ip1
I0428 19:58:04.013653 28879 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:58:04.013665 28879 net.cpp:139] Memory required for data: 3364800
I0428 19:58:04.013674 28879 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:04.013679 28879 net.cpp:86] Creating Layer relu1
I0428 19:58:04.013682 28879 net.cpp:408] relu1 <- ip1
I0428 19:58:04.013689 28879 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:04.013849 28879 net.cpp:124] Setting up relu1
I0428 19:58:04.013859 28879 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:58:04.013861 28879 net.cpp:139] Memory required for data: 3374800
I0428 19:58:04.013865 28879 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:04.013872 28879 net.cpp:86] Creating Layer ip2
I0428 19:58:04.013875 28879 net.cpp:408] ip2 <- ip1
I0428 19:58:04.013880 28879 net.cpp:382] ip2 -> ip2
I0428 19:58:04.013981 28879 net.cpp:124] Setting up ip2
I0428 19:58:04.013988 28879 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:04.013991 28879 net.cpp:139] Memory required for data: 3394800
I0428 19:58:04.013998 28879 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:04.014003 28879 net.cpp:86] Creating Layer relu2
I0428 19:58:04.014005 28879 net.cpp:408] relu2 <- ip2
I0428 19:58:04.014009 28879 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:04.014163 28879 net.cpp:124] Setting up relu2
I0428 19:58:04.014171 28879 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:58:04.014175 28879 net.cpp:139] Memory required for data: 3414800
I0428 19:58:04.014178 28879 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:04.014183 28879 net.cpp:86] Creating Layer ip3
I0428 19:58:04.014188 28879 net.cpp:408] ip3 <- ip2
I0428 19:58:04.014192 28879 net.cpp:382] ip3 -> ip3
I0428 19:58:04.014283 28879 net.cpp:124] Setting up ip3
I0428 19:58:04.014291 28879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:04.014293 28879 net.cpp:139] Memory required for data: 3418800
I0428 19:58:04.014302 28879 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:04.014307 28879 net.cpp:86] Creating Layer relu3
I0428 19:58:04.014309 28879 net.cpp:408] relu3 <- ip3
I0428 19:58:04.014313 28879 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:04.015156 28879 net.cpp:124] Setting up relu3
I0428 19:58:04.015183 28879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:04.015187 28879 net.cpp:139] Memory required for data: 3422800
I0428 19:58:04.015192 28879 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:04.015197 28879 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:04.015200 28879 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:04.015205 28879 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:04.015211 28879 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:04.015262 28879 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:04.015267 28879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:04.015271 28879 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:04.015275 28879 net.cpp:139] Memory required for data: 3430800
I0428 19:58:04.015278 28879 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:04.015283 28879 net.cpp:86] Creating Layer accuracy
I0428 19:58:04.015287 28879 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:04.015291 28879 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:04.015296 28879 net.cpp:382] accuracy -> accuracy
I0428 19:58:04.015303 28879 net.cpp:124] Setting up accuracy
I0428 19:58:04.015307 28879 net.cpp:131] Top shape: (1)
I0428 19:58:04.015310 28879 net.cpp:139] Memory required for data: 3430804
I0428 19:58:04.015313 28879 layer_factory.hpp:77] Creating layer loss
I0428 19:58:04.015317 28879 net.cpp:86] Creating Layer loss
I0428 19:58:04.015321 28879 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:04.015326 28879 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:04.015329 28879 net.cpp:382] loss -> loss
I0428 19:58:04.015336 28879 layer_factory.hpp:77] Creating layer loss
I0428 19:58:04.015554 28879 net.cpp:124] Setting up loss
I0428 19:58:04.015563 28879 net.cpp:131] Top shape: (1)
I0428 19:58:04.015568 28879 net.cpp:134]     with loss weight 1
I0428 19:58:04.015574 28879 net.cpp:139] Memory required for data: 3430808
I0428 19:58:04.015588 28879 net.cpp:200] loss needs backward computation.
I0428 19:58:04.015592 28879 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:04.015595 28879 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:04.015599 28879 net.cpp:200] relu3 needs backward computation.
I0428 19:58:04.015604 28879 net.cpp:200] ip3 needs backward computation.
I0428 19:58:04.015606 28879 net.cpp:200] relu2 needs backward computation.
I0428 19:58:04.015609 28879 net.cpp:200] ip2 needs backward computation.
I0428 19:58:04.015611 28879 net.cpp:200] relu1 needs backward computation.
I0428 19:58:04.015614 28879 net.cpp:200] ip1 needs backward computation.
I0428 19:58:04.015619 28879 net.cpp:200] pool1 needs backward computation.
I0428 19:58:04.015621 28879 net.cpp:200] conv1 needs backward computation.
I0428 19:58:04.015625 28879 net.cpp:200] pool0 needs backward computation.
I0428 19:58:04.015628 28879 net.cpp:200] conv0 needs backward computation.
I0428 19:58:04.015632 28879 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:04.015636 28879 net.cpp:202] mnist does not need backward computation.
I0428 19:58:04.015638 28879 net.cpp:244] This network produces output accuracy
I0428 19:58:04.015642 28879 net.cpp:244] This network produces output loss
I0428 19:58:04.015653 28879 net.cpp:257] Network initialization done.
I0428 19:58:04.015694 28879 solver.cpp:56] Solver scaffolding done.
I0428 19:58:04.016057 28879 caffe.cpp:248] Starting Optimization
I0428 19:58:04.016062 28879 solver.cpp:273] Solving LeNet
I0428 19:58:04.016083 28879 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:04.016973 28879 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:04.020557 28879 blocking_queue.cpp:49] Waiting for data
I0428 19:58:04.091364 28886 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:04.091922 28879 solver.cpp:398]     Test net output #0: accuracy = 0.1038
I0428 19:58:04.091955 28879 solver.cpp:398]     Test net output #1: loss = 2.33035 (* 1 = 2.33035 loss)
I0428 19:58:04.094467 28879 solver.cpp:219] Iteration 0 (-1.38085e-31 iter/s, 0.0783606s/100 iters), loss = 2.32819
I0428 19:58:04.094506 28879 solver.cpp:238]     Train net output #0: loss = 2.32819 (* 1 = 2.32819 loss)
I0428 19:58:04.094518 28879 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:04.171257 28879 solver.cpp:219] Iteration 100 (1303.07 iter/s, 0.0767416s/100 iters), loss = 1.37643
I0428 19:58:04.171283 28879 solver.cpp:238]     Train net output #0: loss = 1.37643 (* 1 = 1.37643 loss)
I0428 19:58:04.171289 28879 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:04.246551 28879 solver.cpp:219] Iteration 200 (1328.76 iter/s, 0.0752579s/100 iters), loss = 1.07464
I0428 19:58:04.246588 28879 solver.cpp:238]     Train net output #0: loss = 1.07464 (* 1 = 1.07464 loss)
I0428 19:58:04.246594 28879 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:04.321317 28879 solver.cpp:219] Iteration 300 (1338.09 iter/s, 0.0747336s/100 iters), loss = 0.99359
I0428 19:58:04.321357 28879 solver.cpp:238]     Train net output #0: loss = 0.99359 (* 1 = 0.99359 loss)
I0428 19:58:04.321363 28879 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:04.396035 28879 solver.cpp:219] Iteration 400 (1338.95 iter/s, 0.0746854s/100 iters), loss = 0.891404
I0428 19:58:04.396075 28879 solver.cpp:238]     Train net output #0: loss = 0.891404 (* 1 = 0.891404 loss)
I0428 19:58:04.396080 28879 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:04.469888 28879 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:04.522447 28886 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:04.522948 28879 solver.cpp:398]     Test net output #0: accuracy = 0.7278
I0428 19:58:04.522969 28879 solver.cpp:398]     Test net output #1: loss = 0.894682 (* 1 = 0.894682 loss)
I0428 19:58:04.523723 28879 solver.cpp:219] Iteration 500 (783.374 iter/s, 0.127653s/100 iters), loss = 0.810332
I0428 19:58:04.523777 28879 solver.cpp:238]     Train net output #0: loss = 0.810332 (* 1 = 0.810332 loss)
I0428 19:58:04.523799 28879 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:04.597678 28879 solver.cpp:219] Iteration 600 (1353.03 iter/s, 0.0739082s/100 iters), loss = 0.852959
I0428 19:58:04.597718 28879 solver.cpp:238]     Train net output #0: loss = 0.852959 (* 1 = 0.852959 loss)
I0428 19:58:04.597724 28879 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:04.672225 28879 solver.cpp:219] Iteration 700 (1342.02 iter/s, 0.0745144s/100 iters), loss = 0.924634
I0428 19:58:04.672266 28879 solver.cpp:238]     Train net output #0: loss = 0.924634 (* 1 = 0.924634 loss)
I0428 19:58:04.672271 28879 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:04.746486 28879 solver.cpp:219] Iteration 800 (1347.19 iter/s, 0.0742287s/100 iters), loss = 0.851613
I0428 19:58:04.746526 28879 solver.cpp:238]     Train net output #0: loss = 0.851613 (* 1 = 0.851613 loss)
I0428 19:58:04.746532 28879 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:04.821256 28879 solver.cpp:219] Iteration 900 (1338.03 iter/s, 0.0747366s/100 iters), loss = 0.73284
I0428 19:58:04.821280 28879 solver.cpp:238]     Train net output #0: loss = 0.73284 (* 1 = 0.73284 loss)
I0428 19:58:04.821287 28879 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:04.845672 28885 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:04.893731 28879 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:04.894474 28879 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:04.894982 28879 solver.cpp:311] Iteration 1000, loss = 0.719421
I0428 19:58:04.895012 28879 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:04.941499 28886 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:04.941985 28879 solver.cpp:398]     Test net output #0: accuracy = 0.7713
I0428 19:58:04.942003 28879 solver.cpp:398]     Test net output #1: loss = 0.58461 (* 1 = 0.58461 loss)
I0428 19:58:04.942008 28879 solver.cpp:316] Optimization Done.
I0428 19:58:04.942010 28879 caffe.cpp:259] Optimization Done.
