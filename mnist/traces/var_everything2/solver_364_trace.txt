I0428 19:41:25.159174 24821 caffe.cpp:218] Using GPUs 0
I0428 19:41:25.200004 24821 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:25.668225 24821 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test364.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:25.668395 24821 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test364.prototxt
I0428 19:41:25.668754 24821 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:25.668773 24821 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:25.668905 24821 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:25.668998 24821 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:25.669109 24821 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:25.669152 24821 net.cpp:86] Creating Layer mnist
I0428 19:41:25.669162 24821 net.cpp:382] mnist -> data
I0428 19:41:25.669214 24821 net.cpp:382] mnist -> label
I0428 19:41:25.670253 24821 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:25.672502 24821 net.cpp:124] Setting up mnist
I0428 19:41:25.672535 24821 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:25.672544 24821 net.cpp:131] Top shape: 64 (64)
I0428 19:41:25.672549 24821 net.cpp:139] Memory required for data: 200960
I0428 19:41:25.672557 24821 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:25.672576 24821 net.cpp:86] Creating Layer conv0
I0428 19:41:25.672596 24821 net.cpp:408] conv0 <- data
I0428 19:41:25.672611 24821 net.cpp:382] conv0 -> conv0
I0428 19:41:25.899757 24821 net.cpp:124] Setting up conv0
I0428 19:41:25.899786 24821 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:25.899792 24821 net.cpp:139] Memory required for data: 495872
I0428 19:41:25.899811 24821 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:25.899827 24821 net.cpp:86] Creating Layer pool0
I0428 19:41:25.899839 24821 net.cpp:408] pool0 <- conv0
I0428 19:41:25.899848 24821 net.cpp:382] pool0 -> pool0
I0428 19:41:25.899900 24821 net.cpp:124] Setting up pool0
I0428 19:41:25.899909 24821 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:25.899914 24821 net.cpp:139] Memory required for data: 569600
I0428 19:41:25.899919 24821 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:25.899933 24821 net.cpp:86] Creating Layer conv1
I0428 19:41:25.899940 24821 net.cpp:408] conv1 <- pool0
I0428 19:41:25.899948 24821 net.cpp:382] conv1 -> conv1
I0428 19:41:25.901953 24821 net.cpp:124] Setting up conv1
I0428 19:41:25.901970 24821 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:25.901976 24821 net.cpp:139] Memory required for data: 733440
I0428 19:41:25.901993 24821 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:25.902004 24821 net.cpp:86] Creating Layer pool1
I0428 19:41:25.902017 24821 net.cpp:408] pool1 <- conv1
I0428 19:41:25.902026 24821 net.cpp:382] pool1 -> pool1
I0428 19:41:25.902103 24821 net.cpp:124] Setting up pool1
I0428 19:41:25.902112 24821 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:25.902118 24821 net.cpp:139] Memory required for data: 774400
I0428 19:41:25.902123 24821 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:25.902134 24821 net.cpp:86] Creating Layer ip1
I0428 19:41:25.902145 24821 net.cpp:408] ip1 <- pool1
I0428 19:41:25.902155 24821 net.cpp:382] ip1 -> ip1
I0428 19:41:25.903126 24821 net.cpp:124] Setting up ip1
I0428 19:41:25.903141 24821 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:25.903146 24821 net.cpp:139] Memory required for data: 776960
I0428 19:41:25.903159 24821 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:25.903168 24821 net.cpp:86] Creating Layer relu1
I0428 19:41:25.903175 24821 net.cpp:408] relu1 <- ip1
I0428 19:41:25.903185 24821 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:25.903374 24821 net.cpp:124] Setting up relu1
I0428 19:41:25.903384 24821 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:25.903389 24821 net.cpp:139] Memory required for data: 779520
I0428 19:41:25.903394 24821 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:25.903405 24821 net.cpp:86] Creating Layer ip2
I0428 19:41:25.903411 24821 net.cpp:408] ip2 <- ip1
I0428 19:41:25.903419 24821 net.cpp:382] ip2 -> ip2
I0428 19:41:25.903520 24821 net.cpp:124] Setting up ip2
I0428 19:41:25.903529 24821 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:25.903534 24821 net.cpp:139] Memory required for data: 782080
I0428 19:41:25.903542 24821 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:25.903553 24821 net.cpp:86] Creating Layer relu2
I0428 19:41:25.903560 24821 net.cpp:408] relu2 <- ip2
I0428 19:41:25.903568 24821 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:25.904335 24821 net.cpp:124] Setting up relu2
I0428 19:41:25.904350 24821 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:25.904356 24821 net.cpp:139] Memory required for data: 784640
I0428 19:41:25.904361 24821 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:25.904371 24821 net.cpp:86] Creating Layer ip3
I0428 19:41:25.904376 24821 net.cpp:408] ip3 <- ip2
I0428 19:41:25.904386 24821 net.cpp:382] ip3 -> ip3
I0428 19:41:25.904489 24821 net.cpp:124] Setting up ip3
I0428 19:41:25.904498 24821 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:25.904502 24821 net.cpp:139] Memory required for data: 787200
I0428 19:41:25.904516 24821 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:25.904525 24821 net.cpp:86] Creating Layer relu3
I0428 19:41:25.904531 24821 net.cpp:408] relu3 <- ip3
I0428 19:41:25.904539 24821 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:25.904721 24821 net.cpp:124] Setting up relu3
I0428 19:41:25.904731 24821 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:25.904736 24821 net.cpp:139] Memory required for data: 789760
I0428 19:41:25.904739 24821 layer_factory.hpp:77] Creating layer loss
I0428 19:41:25.904748 24821 net.cpp:86] Creating Layer loss
I0428 19:41:25.904752 24821 net.cpp:408] loss <- ip3
I0428 19:41:25.904758 24821 net.cpp:408] loss <- label
I0428 19:41:25.904767 24821 net.cpp:382] loss -> loss
I0428 19:41:25.904788 24821 layer_factory.hpp:77] Creating layer loss
I0428 19:41:25.905084 24821 net.cpp:124] Setting up loss
I0428 19:41:25.905097 24821 net.cpp:131] Top shape: (1)
I0428 19:41:25.905102 24821 net.cpp:134]     with loss weight 1
I0428 19:41:25.905122 24821 net.cpp:139] Memory required for data: 789764
I0428 19:41:25.905128 24821 net.cpp:200] loss needs backward computation.
I0428 19:41:25.905134 24821 net.cpp:200] relu3 needs backward computation.
I0428 19:41:25.905139 24821 net.cpp:200] ip3 needs backward computation.
I0428 19:41:25.905144 24821 net.cpp:200] relu2 needs backward computation.
I0428 19:41:25.905165 24821 net.cpp:200] ip2 needs backward computation.
I0428 19:41:25.905184 24821 net.cpp:200] relu1 needs backward computation.
I0428 19:41:25.905189 24821 net.cpp:200] ip1 needs backward computation.
I0428 19:41:25.905194 24821 net.cpp:200] pool1 needs backward computation.
I0428 19:41:25.905199 24821 net.cpp:200] conv1 needs backward computation.
I0428 19:41:25.905205 24821 net.cpp:200] pool0 needs backward computation.
I0428 19:41:25.905210 24821 net.cpp:200] conv0 needs backward computation.
I0428 19:41:25.905215 24821 net.cpp:202] mnist does not need backward computation.
I0428 19:41:25.905220 24821 net.cpp:244] This network produces output loss
I0428 19:41:25.905237 24821 net.cpp:257] Network initialization done.
I0428 19:41:25.905593 24821 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test364.prototxt
I0428 19:41:25.905637 24821 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:25.905736 24821 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:25.905854 24821 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:25.905912 24821 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:25.905930 24821 net.cpp:86] Creating Layer mnist
I0428 19:41:25.905938 24821 net.cpp:382] mnist -> data
I0428 19:41:25.905949 24821 net.cpp:382] mnist -> label
I0428 19:41:25.906076 24821 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:25.908403 24821 net.cpp:124] Setting up mnist
I0428 19:41:25.908433 24821 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:25.908442 24821 net.cpp:131] Top shape: 100 (100)
I0428 19:41:25.908447 24821 net.cpp:139] Memory required for data: 314000
I0428 19:41:25.908452 24821 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:25.908488 24821 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:25.908495 24821 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:25.908502 24821 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:25.908514 24821 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:25.908607 24821 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:25.908617 24821 net.cpp:131] Top shape: 100 (100)
I0428 19:41:25.908623 24821 net.cpp:131] Top shape: 100 (100)
I0428 19:41:25.908627 24821 net.cpp:139] Memory required for data: 314800
I0428 19:41:25.908632 24821 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:25.908648 24821 net.cpp:86] Creating Layer conv0
I0428 19:41:25.908654 24821 net.cpp:408] conv0 <- data
I0428 19:41:25.908680 24821 net.cpp:382] conv0 -> conv0
I0428 19:41:25.910357 24821 net.cpp:124] Setting up conv0
I0428 19:41:25.910372 24821 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:25.910378 24821 net.cpp:139] Memory required for data: 775600
I0428 19:41:25.910394 24821 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:25.910404 24821 net.cpp:86] Creating Layer pool0
I0428 19:41:25.910410 24821 net.cpp:408] pool0 <- conv0
I0428 19:41:25.910418 24821 net.cpp:382] pool0 -> pool0
I0428 19:41:25.910461 24821 net.cpp:124] Setting up pool0
I0428 19:41:25.910470 24821 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:25.910475 24821 net.cpp:139] Memory required for data: 890800
I0428 19:41:25.910480 24821 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:25.910493 24821 net.cpp:86] Creating Layer conv1
I0428 19:41:25.910500 24821 net.cpp:408] conv1 <- pool0
I0428 19:41:25.910509 24821 net.cpp:382] conv1 -> conv1
I0428 19:41:25.912163 24821 net.cpp:124] Setting up conv1
I0428 19:41:25.912176 24821 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:25.912183 24821 net.cpp:139] Memory required for data: 1146800
I0428 19:41:25.912214 24821 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:25.912222 24821 net.cpp:86] Creating Layer pool1
I0428 19:41:25.912230 24821 net.cpp:408] pool1 <- conv1
I0428 19:41:25.912241 24821 net.cpp:382] pool1 -> pool1
I0428 19:41:25.912286 24821 net.cpp:124] Setting up pool1
I0428 19:41:25.912294 24821 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:25.912300 24821 net.cpp:139] Memory required for data: 1210800
I0428 19:41:25.912305 24821 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:25.912317 24821 net.cpp:86] Creating Layer ip1
I0428 19:41:25.912322 24821 net.cpp:408] ip1 <- pool1
I0428 19:41:25.912330 24821 net.cpp:382] ip1 -> ip1
I0428 19:41:25.912467 24821 net.cpp:124] Setting up ip1
I0428 19:41:25.912475 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.912493 24821 net.cpp:139] Memory required for data: 1214800
I0428 19:41:25.912508 24821 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:25.912518 24821 net.cpp:86] Creating Layer relu1
I0428 19:41:25.912526 24821 net.cpp:408] relu1 <- ip1
I0428 19:41:25.912535 24821 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:25.912711 24821 net.cpp:124] Setting up relu1
I0428 19:41:25.912722 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.912727 24821 net.cpp:139] Memory required for data: 1218800
I0428 19:41:25.912732 24821 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:25.912745 24821 net.cpp:86] Creating Layer ip2
I0428 19:41:25.912753 24821 net.cpp:408] ip2 <- ip1
I0428 19:41:25.912765 24821 net.cpp:382] ip2 -> ip2
I0428 19:41:25.912915 24821 net.cpp:124] Setting up ip2
I0428 19:41:25.912927 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.912932 24821 net.cpp:139] Memory required for data: 1222800
I0428 19:41:25.912942 24821 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:25.912950 24821 net.cpp:86] Creating Layer relu2
I0428 19:41:25.912971 24821 net.cpp:408] relu2 <- ip2
I0428 19:41:25.912991 24821 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:25.913305 24821 net.cpp:124] Setting up relu2
I0428 19:41:25.913316 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.913321 24821 net.cpp:139] Memory required for data: 1226800
I0428 19:41:25.913326 24821 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:25.913336 24821 net.cpp:86] Creating Layer ip3
I0428 19:41:25.913341 24821 net.cpp:408] ip3 <- ip2
I0428 19:41:25.913352 24821 net.cpp:382] ip3 -> ip3
I0428 19:41:25.913480 24821 net.cpp:124] Setting up ip3
I0428 19:41:25.913491 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.913496 24821 net.cpp:139] Memory required for data: 1230800
I0428 19:41:25.913511 24821 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:25.913521 24821 net.cpp:86] Creating Layer relu3
I0428 19:41:25.913527 24821 net.cpp:408] relu3 <- ip3
I0428 19:41:25.913537 24821 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:25.914446 24821 net.cpp:124] Setting up relu3
I0428 19:41:25.914459 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.914464 24821 net.cpp:139] Memory required for data: 1234800
I0428 19:41:25.914469 24821 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:25.914477 24821 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:25.914482 24821 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:25.914491 24821 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:25.914500 24821 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:25.914564 24821 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:25.914573 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.914579 24821 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:25.914584 24821 net.cpp:139] Memory required for data: 1242800
I0428 19:41:25.914588 24821 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:25.914600 24821 net.cpp:86] Creating Layer accuracy
I0428 19:41:25.914605 24821 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:25.914613 24821 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:25.914623 24821 net.cpp:382] accuracy -> accuracy
I0428 19:41:25.914646 24821 net.cpp:124] Setting up accuracy
I0428 19:41:25.914655 24821 net.cpp:131] Top shape: (1)
I0428 19:41:25.914661 24821 net.cpp:139] Memory required for data: 1242804
I0428 19:41:25.914666 24821 layer_factory.hpp:77] Creating layer loss
I0428 19:41:25.914674 24821 net.cpp:86] Creating Layer loss
I0428 19:41:25.914680 24821 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:25.914686 24821 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:25.914695 24821 net.cpp:382] loss -> loss
I0428 19:41:25.914703 24821 layer_factory.hpp:77] Creating layer loss
I0428 19:41:25.914983 24821 net.cpp:124] Setting up loss
I0428 19:41:25.914993 24821 net.cpp:131] Top shape: (1)
I0428 19:41:25.914997 24821 net.cpp:134]     with loss weight 1
I0428 19:41:25.915006 24821 net.cpp:139] Memory required for data: 1242808
I0428 19:41:25.915021 24821 net.cpp:200] loss needs backward computation.
I0428 19:41:25.915029 24821 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:25.915035 24821 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:25.915040 24821 net.cpp:200] relu3 needs backward computation.
I0428 19:41:25.915043 24821 net.cpp:200] ip3 needs backward computation.
I0428 19:41:25.915050 24821 net.cpp:200] relu2 needs backward computation.
I0428 19:41:25.915053 24821 net.cpp:200] ip2 needs backward computation.
I0428 19:41:25.915058 24821 net.cpp:200] relu1 needs backward computation.
I0428 19:41:25.915063 24821 net.cpp:200] ip1 needs backward computation.
I0428 19:41:25.915068 24821 net.cpp:200] pool1 needs backward computation.
I0428 19:41:25.915073 24821 net.cpp:200] conv1 needs backward computation.
I0428 19:41:25.915078 24821 net.cpp:200] pool0 needs backward computation.
I0428 19:41:25.915082 24821 net.cpp:200] conv0 needs backward computation.
I0428 19:41:25.915088 24821 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:25.915094 24821 net.cpp:202] mnist does not need backward computation.
I0428 19:41:25.915098 24821 net.cpp:244] This network produces output accuracy
I0428 19:41:25.915104 24821 net.cpp:244] This network produces output loss
I0428 19:41:25.915120 24821 net.cpp:257] Network initialization done.
I0428 19:41:25.915166 24821 solver.cpp:56] Solver scaffolding done.
I0428 19:41:25.915531 24821 caffe.cpp:248] Starting Optimization
I0428 19:41:25.915539 24821 solver.cpp:273] Solving LeNet
I0428 19:41:25.915544 24821 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:25.916405 24821 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:25.919098 24821 blocking_queue.cpp:49] Waiting for data
I0428 19:41:25.991147 24828 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:25.991679 24821 solver.cpp:398]     Test net output #0: accuracy = 0.1219
I0428 19:41:25.991710 24821 solver.cpp:398]     Test net output #1: loss = 2.30384 (* 1 = 2.30384 loss)
I0428 19:41:25.993998 24821 solver.cpp:219] Iteration 0 (0 iter/s, 0.0784159s/100 iters), loss = 2.31789
I0428 19:41:25.994037 24821 solver.cpp:238]     Train net output #0: loss = 2.31789 (* 1 = 2.31789 loss)
I0428 19:41:25.994060 24821 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:26.074597 24821 solver.cpp:219] Iteration 100 (1241.42 iter/s, 0.080553s/100 iters), loss = 1.26993
I0428 19:41:26.074630 24821 solver.cpp:238]     Train net output #0: loss = 1.26993 (* 1 = 1.26993 loss)
I0428 19:41:26.074641 24821 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:26.148855 24821 solver.cpp:219] Iteration 200 (1347.37 iter/s, 0.0742185s/100 iters), loss = 0.840945
I0428 19:41:26.148900 24821 solver.cpp:238]     Train net output #0: loss = 0.840945 (* 1 = 0.840945 loss)
I0428 19:41:26.148910 24821 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:26.225301 24821 solver.cpp:219] Iteration 300 (1308.99 iter/s, 0.0763945s/100 iters), loss = 0.486798
I0428 19:41:26.225342 24821 solver.cpp:238]     Train net output #0: loss = 0.486798 (* 1 = 0.486798 loss)
I0428 19:41:26.225366 24821 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:26.302937 24821 solver.cpp:219] Iteration 400 (1288.85 iter/s, 0.0775885s/100 iters), loss = 0.3037
I0428 19:41:26.302963 24821 solver.cpp:238]     Train net output #0: loss = 0.3037 (* 1 = 0.3037 loss)
I0428 19:41:26.302989 24821 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:26.379277 24821 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:26.432376 24828 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:26.432821 24821 solver.cpp:398]     Test net output #0: accuracy = 0.8283
I0428 19:41:26.432842 24821 solver.cpp:398]     Test net output #1: loss = 0.475727 (* 1 = 0.475727 loss)
I0428 19:41:26.433668 24821 solver.cpp:219] Iteration 500 (765.139 iter/s, 0.130695s/100 iters), loss = 0.533895
I0428 19:41:26.433717 24821 solver.cpp:238]     Train net output #0: loss = 0.533895 (* 1 = 0.533895 loss)
I0428 19:41:26.433740 24821 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:26.510480 24821 solver.cpp:219] Iteration 600 (1302.8 iter/s, 0.0767579s/100 iters), loss = 0.584179
I0428 19:41:26.510512 24821 solver.cpp:238]     Train net output #0: loss = 0.584179 (* 1 = 0.584179 loss)
I0428 19:41:26.510538 24821 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:26.586505 24821 solver.cpp:219] Iteration 700 (1316 iter/s, 0.075988s/100 iters), loss = 0.471632
I0428 19:41:26.586536 24821 solver.cpp:238]     Train net output #0: loss = 0.471632 (* 1 = 0.471632 loss)
I0428 19:41:26.586562 24821 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:26.662070 24821 solver.cpp:219] Iteration 800 (1324.04 iter/s, 0.0755261s/100 iters), loss = 0.520834
I0428 19:41:26.662098 24821 solver.cpp:238]     Train net output #0: loss = 0.520834 (* 1 = 0.520834 loss)
I0428 19:41:26.662108 24821 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:26.736109 24821 solver.cpp:219] Iteration 900 (1351.4 iter/s, 0.0739973s/100 iters), loss = 0.553266
I0428 19:41:26.736137 24821 solver.cpp:238]     Train net output #0: loss = 0.553266 (* 1 = 0.553266 loss)
I0428 19:41:26.736147 24821 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:26.761586 24827 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:26.811848 24821 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:26.812500 24821 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:26.812916 24821 solver.cpp:311] Iteration 1000, loss = 0.42823
I0428 19:41:26.812932 24821 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:26.879357 24828 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:26.879787 24821 solver.cpp:398]     Test net output #0: accuracy = 0.8356
I0428 19:41:26.879806 24821 solver.cpp:398]     Test net output #1: loss = 0.433309 (* 1 = 0.433309 loss)
I0428 19:41:26.879814 24821 solver.cpp:316] Optimization Done.
I0428 19:41:26.879818 24821 caffe.cpp:259] Optimization Done.
