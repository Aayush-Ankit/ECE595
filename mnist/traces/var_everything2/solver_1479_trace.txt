I0428 20:26:54.578692  2894 caffe.cpp:218] Using GPUs 0
I0428 20:26:54.614310  2894 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:55.124145  2894 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1479.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:55.124282  2894 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1479.prototxt
I0428 20:26:55.124699  2894 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:55.124721  2894 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:55.124831  2894 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:55.124922  2894 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:55.125023  2894 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:55.125047  2894 net.cpp:86] Creating Layer mnist
I0428 20:26:55.125056  2894 net.cpp:382] mnist -> data
I0428 20:26:55.125078  2894 net.cpp:382] mnist -> label
I0428 20:26:55.126173  2894 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:55.128640  2894 net.cpp:124] Setting up mnist
I0428 20:26:55.128659  2894 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:55.128664  2894 net.cpp:131] Top shape: 64 (64)
I0428 20:26:55.128669  2894 net.cpp:139] Memory required for data: 200960
I0428 20:26:55.128675  2894 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:55.128692  2894 net.cpp:86] Creating Layer conv0
I0428 20:26:55.128712  2894 net.cpp:408] conv0 <- data
I0428 20:26:55.128726  2894 net.cpp:382] conv0 -> conv0
I0428 20:26:55.406172  2894 net.cpp:124] Setting up conv0
I0428 20:26:55.406198  2894 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:55.406201  2894 net.cpp:139] Memory required for data: 14946560
I0428 20:26:55.406232  2894 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:55.406246  2894 net.cpp:86] Creating Layer pool0
I0428 20:26:55.406250  2894 net.cpp:408] pool0 <- conv0
I0428 20:26:55.406255  2894 net.cpp:382] pool0 -> pool0
I0428 20:26:55.406318  2894 net.cpp:124] Setting up pool0
I0428 20:26:55.406323  2894 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:55.406327  2894 net.cpp:139] Memory required for data: 18632960
I0428 20:26:55.406329  2894 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:55.406339  2894 net.cpp:86] Creating Layer conv1
I0428 20:26:55.406343  2894 net.cpp:408] conv1 <- pool0
I0428 20:26:55.406347  2894 net.cpp:382] conv1 -> conv1
I0428 20:26:55.409242  2894 net.cpp:124] Setting up conv1
I0428 20:26:55.409256  2894 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:55.409261  2894 net.cpp:139] Memory required for data: 18665728
I0428 20:26:55.409270  2894 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:55.409276  2894 net.cpp:86] Creating Layer pool1
I0428 20:26:55.409279  2894 net.cpp:408] pool1 <- conv1
I0428 20:26:55.409299  2894 net.cpp:382] pool1 -> pool1
I0428 20:26:55.409335  2894 net.cpp:124] Setting up pool1
I0428 20:26:55.409340  2894 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:55.409344  2894 net.cpp:139] Memory required for data: 18673920
I0428 20:26:55.409348  2894 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:55.409353  2894 net.cpp:86] Creating Layer ip1
I0428 20:26:55.409356  2894 net.cpp:408] ip1 <- pool1
I0428 20:26:55.409360  2894 net.cpp:382] ip1 -> ip1
I0428 20:26:55.409467  2894 net.cpp:124] Setting up ip1
I0428 20:26:55.409474  2894 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:55.409477  2894 net.cpp:139] Memory required for data: 18686720
I0428 20:26:55.409484  2894 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:55.409488  2894 net.cpp:86] Creating Layer relu1
I0428 20:26:55.409492  2894 net.cpp:408] relu1 <- ip1
I0428 20:26:55.409495  2894 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:55.409695  2894 net.cpp:124] Setting up relu1
I0428 20:26:55.409704  2894 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:55.409708  2894 net.cpp:139] Memory required for data: 18699520
I0428 20:26:55.409710  2894 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:55.409716  2894 net.cpp:86] Creating Layer ip2
I0428 20:26:55.409719  2894 net.cpp:408] ip2 <- ip1
I0428 20:26:55.409724  2894 net.cpp:382] ip2 -> ip2
I0428 20:26:55.409835  2894 net.cpp:124] Setting up ip2
I0428 20:26:55.409857  2894 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:55.409859  2894 net.cpp:139] Memory required for data: 18712320
I0428 20:26:55.409864  2894 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:55.409870  2894 net.cpp:86] Creating Layer relu2
I0428 20:26:55.409873  2894 net.cpp:408] relu2 <- ip2
I0428 20:26:55.409878  2894 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:55.410575  2894 net.cpp:124] Setting up relu2
I0428 20:26:55.410588  2894 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:55.410590  2894 net.cpp:139] Memory required for data: 18725120
I0428 20:26:55.410593  2894 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:55.410600  2894 net.cpp:86] Creating Layer ip3
I0428 20:26:55.410604  2894 net.cpp:408] ip3 <- ip2
I0428 20:26:55.410609  2894 net.cpp:382] ip3 -> ip3
I0428 20:26:55.410727  2894 net.cpp:124] Setting up ip3
I0428 20:26:55.410733  2894 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:55.410737  2894 net.cpp:139] Memory required for data: 18727680
I0428 20:26:55.410744  2894 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:55.410749  2894 net.cpp:86] Creating Layer relu3
I0428 20:26:55.410753  2894 net.cpp:408] relu3 <- ip3
I0428 20:26:55.410756  2894 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:55.410918  2894 net.cpp:124] Setting up relu3
I0428 20:26:55.410926  2894 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:55.410929  2894 net.cpp:139] Memory required for data: 18730240
I0428 20:26:55.410933  2894 layer_factory.hpp:77] Creating layer loss
I0428 20:26:55.410953  2894 net.cpp:86] Creating Layer loss
I0428 20:26:55.410955  2894 net.cpp:408] loss <- ip3
I0428 20:26:55.410959  2894 net.cpp:408] loss <- label
I0428 20:26:55.410964  2894 net.cpp:382] loss -> loss
I0428 20:26:55.410981  2894 layer_factory.hpp:77] Creating layer loss
I0428 20:26:55.411198  2894 net.cpp:124] Setting up loss
I0428 20:26:55.411207  2894 net.cpp:131] Top shape: (1)
I0428 20:26:55.411211  2894 net.cpp:134]     with loss weight 1
I0428 20:26:55.411224  2894 net.cpp:139] Memory required for data: 18730244
I0428 20:26:55.411227  2894 net.cpp:200] loss needs backward computation.
I0428 20:26:55.411231  2894 net.cpp:200] relu3 needs backward computation.
I0428 20:26:55.411233  2894 net.cpp:200] ip3 needs backward computation.
I0428 20:26:55.411237  2894 net.cpp:200] relu2 needs backward computation.
I0428 20:26:55.411239  2894 net.cpp:200] ip2 needs backward computation.
I0428 20:26:55.411242  2894 net.cpp:200] relu1 needs backward computation.
I0428 20:26:55.411244  2894 net.cpp:200] ip1 needs backward computation.
I0428 20:26:55.411247  2894 net.cpp:200] pool1 needs backward computation.
I0428 20:26:55.411250  2894 net.cpp:200] conv1 needs backward computation.
I0428 20:26:55.411253  2894 net.cpp:200] pool0 needs backward computation.
I0428 20:26:55.411257  2894 net.cpp:200] conv0 needs backward computation.
I0428 20:26:55.411259  2894 net.cpp:202] mnist does not need backward computation.
I0428 20:26:55.411262  2894 net.cpp:244] This network produces output loss
I0428 20:26:55.411270  2894 net.cpp:257] Network initialization done.
I0428 20:26:55.411597  2894 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1479.prototxt
I0428 20:26:55.411624  2894 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:55.411715  2894 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:55.411823  2894 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:55.411869  2894 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:55.411880  2894 net.cpp:86] Creating Layer mnist
I0428 20:26:55.411885  2894 net.cpp:382] mnist -> data
I0428 20:26:55.411891  2894 net.cpp:382] mnist -> label
I0428 20:26:55.411976  2894 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:55.414106  2894 net.cpp:124] Setting up mnist
I0428 20:26:55.414135  2894 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:55.414142  2894 net.cpp:131] Top shape: 100 (100)
I0428 20:26:55.414145  2894 net.cpp:139] Memory required for data: 314000
I0428 20:26:55.414149  2894 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:55.414156  2894 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:55.414160  2894 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:55.414165  2894 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:55.414171  2894 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:55.414223  2894 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:55.414235  2894 net.cpp:131] Top shape: 100 (100)
I0428 20:26:55.414253  2894 net.cpp:131] Top shape: 100 (100)
I0428 20:26:55.414258  2894 net.cpp:139] Memory required for data: 314800
I0428 20:26:55.414260  2894 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:55.414283  2894 net.cpp:86] Creating Layer conv0
I0428 20:26:55.414286  2894 net.cpp:408] conv0 <- data
I0428 20:26:55.414290  2894 net.cpp:382] conv0 -> conv0
I0428 20:26:55.415998  2894 net.cpp:124] Setting up conv0
I0428 20:26:55.416013  2894 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:55.416016  2894 net.cpp:139] Memory required for data: 23354800
I0428 20:26:55.416025  2894 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:55.416033  2894 net.cpp:86] Creating Layer pool0
I0428 20:26:55.416036  2894 net.cpp:408] pool0 <- conv0
I0428 20:26:55.416040  2894 net.cpp:382] pool0 -> pool0
I0428 20:26:55.416076  2894 net.cpp:124] Setting up pool0
I0428 20:26:55.416084  2894 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:55.416086  2894 net.cpp:139] Memory required for data: 29114800
I0428 20:26:55.416090  2894 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:55.416098  2894 net.cpp:86] Creating Layer conv1
I0428 20:26:55.416101  2894 net.cpp:408] conv1 <- pool0
I0428 20:26:55.416106  2894 net.cpp:382] conv1 -> conv1
I0428 20:26:55.417817  2894 net.cpp:124] Setting up conv1
I0428 20:26:55.417831  2894 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:55.417835  2894 net.cpp:139] Memory required for data: 29166000
I0428 20:26:55.417845  2894 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:55.417851  2894 net.cpp:86] Creating Layer pool1
I0428 20:26:55.417855  2894 net.cpp:408] pool1 <- conv1
I0428 20:26:55.417860  2894 net.cpp:382] pool1 -> pool1
I0428 20:26:55.417894  2894 net.cpp:124] Setting up pool1
I0428 20:26:55.417899  2894 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:55.417903  2894 net.cpp:139] Memory required for data: 29178800
I0428 20:26:55.417906  2894 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:55.417912  2894 net.cpp:86] Creating Layer ip1
I0428 20:26:55.417914  2894 net.cpp:408] ip1 <- pool1
I0428 20:26:55.417918  2894 net.cpp:382] ip1 -> ip1
I0428 20:26:55.418023  2894 net.cpp:124] Setting up ip1
I0428 20:26:55.418031  2894 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:55.418045  2894 net.cpp:139] Memory required for data: 29198800
I0428 20:26:55.418052  2894 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:55.418057  2894 net.cpp:86] Creating Layer relu1
I0428 20:26:55.418061  2894 net.cpp:408] relu1 <- ip1
I0428 20:26:55.418066  2894 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:55.418226  2894 net.cpp:124] Setting up relu1
I0428 20:26:55.418234  2894 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:55.418238  2894 net.cpp:139] Memory required for data: 29218800
I0428 20:26:55.418241  2894 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:55.418247  2894 net.cpp:86] Creating Layer ip2
I0428 20:26:55.418251  2894 net.cpp:408] ip2 <- ip1
I0428 20:26:55.418256  2894 net.cpp:382] ip2 -> ip2
I0428 20:26:55.418386  2894 net.cpp:124] Setting up ip2
I0428 20:26:55.418393  2894 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:55.418397  2894 net.cpp:139] Memory required for data: 29238800
I0428 20:26:55.418402  2894 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:55.418406  2894 net.cpp:86] Creating Layer relu2
I0428 20:26:55.418411  2894 net.cpp:408] relu2 <- ip2
I0428 20:26:55.418414  2894 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:55.418589  2894 net.cpp:124] Setting up relu2
I0428 20:26:55.418597  2894 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:55.418601  2894 net.cpp:139] Memory required for data: 29258800
I0428 20:26:55.418603  2894 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:55.418609  2894 net.cpp:86] Creating Layer ip3
I0428 20:26:55.418612  2894 net.cpp:408] ip3 <- ip2
I0428 20:26:55.418632  2894 net.cpp:382] ip3 -> ip3
I0428 20:26:55.418762  2894 net.cpp:124] Setting up ip3
I0428 20:26:55.418768  2894 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:55.418772  2894 net.cpp:139] Memory required for data: 29262800
I0428 20:26:55.418786  2894 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:55.418790  2894 net.cpp:86] Creating Layer relu3
I0428 20:26:55.418793  2894 net.cpp:408] relu3 <- ip3
I0428 20:26:55.418797  2894 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:55.419838  2894 net.cpp:124] Setting up relu3
I0428 20:26:55.419850  2894 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:55.419854  2894 net.cpp:139] Memory required for data: 29266800
I0428 20:26:55.419858  2894 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:55.419863  2894 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:55.419867  2894 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:55.419872  2894 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:55.419879  2894 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:55.419916  2894 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:55.419920  2894 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:55.419924  2894 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:55.419927  2894 net.cpp:139] Memory required for data: 29274800
I0428 20:26:55.419936  2894 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:55.419941  2894 net.cpp:86] Creating Layer accuracy
I0428 20:26:55.419945  2894 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:55.419948  2894 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:55.419952  2894 net.cpp:382] accuracy -> accuracy
I0428 20:26:55.419960  2894 net.cpp:124] Setting up accuracy
I0428 20:26:55.419963  2894 net.cpp:131] Top shape: (1)
I0428 20:26:55.419966  2894 net.cpp:139] Memory required for data: 29274804
I0428 20:26:55.419975  2894 layer_factory.hpp:77] Creating layer loss
I0428 20:26:55.419978  2894 net.cpp:86] Creating Layer loss
I0428 20:26:55.419981  2894 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:55.419986  2894 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:55.419989  2894 net.cpp:382] loss -> loss
I0428 20:26:55.419996  2894 layer_factory.hpp:77] Creating layer loss
I0428 20:26:55.420241  2894 net.cpp:124] Setting up loss
I0428 20:26:55.420251  2894 net.cpp:131] Top shape: (1)
I0428 20:26:55.420255  2894 net.cpp:134]     with loss weight 1
I0428 20:26:55.420271  2894 net.cpp:139] Memory required for data: 29274808
I0428 20:26:55.420275  2894 net.cpp:200] loss needs backward computation.
I0428 20:26:55.420279  2894 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:55.420284  2894 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:55.420286  2894 net.cpp:200] relu3 needs backward computation.
I0428 20:26:55.420289  2894 net.cpp:200] ip3 needs backward computation.
I0428 20:26:55.420292  2894 net.cpp:200] relu2 needs backward computation.
I0428 20:26:55.420295  2894 net.cpp:200] ip2 needs backward computation.
I0428 20:26:55.420298  2894 net.cpp:200] relu1 needs backward computation.
I0428 20:26:55.420301  2894 net.cpp:200] ip1 needs backward computation.
I0428 20:26:55.420305  2894 net.cpp:200] pool1 needs backward computation.
I0428 20:26:55.420308  2894 net.cpp:200] conv1 needs backward computation.
I0428 20:26:55.420312  2894 net.cpp:200] pool0 needs backward computation.
I0428 20:26:55.420315  2894 net.cpp:200] conv0 needs backward computation.
I0428 20:26:55.420320  2894 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:55.420323  2894 net.cpp:202] mnist does not need backward computation.
I0428 20:26:55.420325  2894 net.cpp:244] This network produces output accuracy
I0428 20:26:55.420330  2894 net.cpp:244] This network produces output loss
I0428 20:26:55.420354  2894 net.cpp:257] Network initialization done.
I0428 20:26:55.420395  2894 solver.cpp:56] Solver scaffolding done.
I0428 20:26:55.420778  2894 caffe.cpp:248] Starting Optimization
I0428 20:26:55.420784  2894 solver.cpp:273] Solving LeNet
I0428 20:26:55.420786  2894 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:55.421695  2894 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:55.516701  2901 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:55.519074  2894 solver.cpp:398]     Test net output #0: accuracy = 0.0993
I0428 20:26:55.519094  2894 solver.cpp:398]     Test net output #1: loss = 2.33467 (* 1 = 2.33467 loss)
I0428 20:26:55.523538  2894 solver.cpp:219] Iteration 0 (-4.19957e-31 iter/s, 0.102689s/100 iters), loss = 2.33438
I0428 20:26:55.523576  2894 solver.cpp:238]     Train net output #0: loss = 2.33438 (* 1 = 2.33438 loss)
I0428 20:26:55.523588  2894 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:55.722260  2894 solver.cpp:219] Iteration 100 (503.321 iter/s, 0.19868s/100 iters), loss = 1.08144
I0428 20:26:55.722308  2894 solver.cpp:238]     Train net output #0: loss = 1.08144 (* 1 = 1.08144 loss)
I0428 20:26:55.722321  2894 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:55.933826  2894 solver.cpp:219] Iteration 200 (472.806 iter/s, 0.211503s/100 iters), loss = 1.10758
I0428 20:26:55.933866  2894 solver.cpp:238]     Train net output #0: loss = 1.10758 (* 1 = 1.10758 loss)
I0428 20:26:55.933876  2894 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:56.143256  2894 solver.cpp:219] Iteration 300 (477.618 iter/s, 0.209372s/100 iters), loss = 1.24392
I0428 20:26:56.143295  2894 solver.cpp:238]     Train net output #0: loss = 1.24392 (* 1 = 1.24392 loss)
I0428 20:26:56.143303  2894 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:56.358896  2894 solver.cpp:219] Iteration 400 (463.859 iter/s, 0.215583s/100 iters), loss = 1.08584
I0428 20:26:56.358943  2894 solver.cpp:238]     Train net output #0: loss = 1.08584 (* 1 = 1.08584 loss)
I0428 20:26:56.358955  2894 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:56.572242  2894 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:56.672111  2901 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:56.674564  2894 solver.cpp:398]     Test net output #0: accuracy = 0.6379
I0428 20:26:56.674590  2894 solver.cpp:398]     Test net output #1: loss = 1.13172 (* 1 = 1.13172 loss)
I0428 20:26:56.676507  2894 solver.cpp:219] Iteration 500 (314.914 iter/s, 0.317547s/100 iters), loss = 1.06177
I0428 20:26:56.676534  2894 solver.cpp:238]     Train net output #0: loss = 1.06177 (* 1 = 1.06177 loss)
I0428 20:26:56.676558  2894 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:56.890219  2894 solver.cpp:219] Iteration 600 (468.018 iter/s, 0.213667s/100 iters), loss = 1.07498
I0428 20:26:56.890264  2894 solver.cpp:238]     Train net output #0: loss = 1.07498 (* 1 = 1.07498 loss)
I0428 20:26:56.890276  2894 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:57.104384  2894 solver.cpp:219] Iteration 700 (467.06 iter/s, 0.214105s/100 iters), loss = 1.17156
I0428 20:26:57.104423  2894 solver.cpp:238]     Train net output #0: loss = 1.17156 (* 1 = 1.17156 loss)
I0428 20:26:57.104434  2894 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:57.312742  2894 solver.cpp:219] Iteration 800 (480.067 iter/s, 0.208304s/100 iters), loss = 0.892365
I0428 20:26:57.312774  2894 solver.cpp:238]     Train net output #0: loss = 0.892365 (* 1 = 0.892365 loss)
I0428 20:26:57.312783  2894 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:57.525640  2894 solver.cpp:219] Iteration 900 (469.818 iter/s, 0.212848s/100 iters), loss = 1.00586
I0428 20:26:57.525676  2894 solver.cpp:238]     Train net output #0: loss = 1.00586 (* 1 = 1.00586 loss)
I0428 20:26:57.525686  2894 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:57.596139  2900 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:57.737329  2894 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:57.739236  2894 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:57.740535  2894 solver.cpp:311] Iteration 1000, loss = 0.952732
I0428 20:26:57.740566  2894 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:57.845791  2901 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:57.848557  2894 solver.cpp:398]     Test net output #0: accuracy = 0.7493
I0428 20:26:57.848582  2894 solver.cpp:398]     Test net output #1: loss = 0.839501 (* 1 = 0.839501 loss)
I0428 20:26:57.848587  2894 solver.cpp:316] Optimization Done.
I0428 20:26:57.848592  2894 caffe.cpp:259] Optimization Done.
