I0428 19:46:02.901612 25934 caffe.cpp:218] Using GPUs 0
I0428 19:46:02.942442 25934 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:03.463676 25934 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test484.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:03.463821 25934 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test484.prototxt
I0428 19:46:03.464241 25934 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:03.464260 25934 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:03.464363 25934 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:03.464443 25934 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:03.464541 25934 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:03.464566 25934 net.cpp:86] Creating Layer mnist
I0428 19:46:03.464574 25934 net.cpp:382] mnist -> data
I0428 19:46:03.464597 25934 net.cpp:382] mnist -> label
I0428 19:46:03.465703 25934 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:03.468173 25934 net.cpp:124] Setting up mnist
I0428 19:46:03.468191 25934 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:03.468199 25934 net.cpp:131] Top shape: 64 (64)
I0428 19:46:03.468204 25934 net.cpp:139] Memory required for data: 200960
I0428 19:46:03.468210 25934 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:03.468225 25934 net.cpp:86] Creating Layer conv0
I0428 19:46:03.468245 25934 net.cpp:408] conv0 <- data
I0428 19:46:03.468260 25934 net.cpp:382] conv0 -> conv0
I0428 19:46:03.756764 25934 net.cpp:124] Setting up conv0
I0428 19:46:03.756793 25934 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:03.756798 25934 net.cpp:139] Memory required for data: 495872
I0428 19:46:03.756819 25934 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:03.756834 25934 net.cpp:86] Creating Layer pool0
I0428 19:46:03.756839 25934 net.cpp:408] pool0 <- conv0
I0428 19:46:03.756845 25934 net.cpp:382] pool0 -> pool0
I0428 19:46:03.756896 25934 net.cpp:124] Setting up pool0
I0428 19:46:03.756902 25934 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:03.756906 25934 net.cpp:139] Memory required for data: 569600
I0428 19:46:03.756908 25934 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:03.756920 25934 net.cpp:86] Creating Layer conv1
I0428 19:46:03.756924 25934 net.cpp:408] conv1 <- pool0
I0428 19:46:03.756929 25934 net.cpp:382] conv1 -> conv1
I0428 19:46:03.759815 25934 net.cpp:124] Setting up conv1
I0428 19:46:03.759831 25934 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:03.759835 25934 net.cpp:139] Memory required for data: 2208000
I0428 19:46:03.759845 25934 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:03.759853 25934 net.cpp:86] Creating Layer pool1
I0428 19:46:03.759857 25934 net.cpp:408] pool1 <- conv1
I0428 19:46:03.759862 25934 net.cpp:382] pool1 -> pool1
I0428 19:46:03.759903 25934 net.cpp:124] Setting up pool1
I0428 19:46:03.759909 25934 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:03.759912 25934 net.cpp:139] Memory required for data: 2617600
I0428 19:46:03.759915 25934 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:03.759923 25934 net.cpp:86] Creating Layer ip1
I0428 19:46:03.759927 25934 net.cpp:408] ip1 <- pool1
I0428 19:46:03.759932 25934 net.cpp:382] ip1 -> ip1
I0428 19:46:03.760130 25934 net.cpp:124] Setting up ip1
I0428 19:46:03.760138 25934 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:03.760143 25934 net.cpp:139] Memory required for data: 2620160
I0428 19:46:03.760150 25934 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:03.760156 25934 net.cpp:86] Creating Layer relu1
I0428 19:46:03.760159 25934 net.cpp:408] relu1 <- ip1
I0428 19:46:03.760164 25934 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:03.760342 25934 net.cpp:124] Setting up relu1
I0428 19:46:03.760351 25934 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:03.760355 25934 net.cpp:139] Memory required for data: 2622720
I0428 19:46:03.760359 25934 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:03.760365 25934 net.cpp:86] Creating Layer ip2
I0428 19:46:03.760368 25934 net.cpp:408] ip2 <- ip1
I0428 19:46:03.760375 25934 net.cpp:382] ip2 -> ip2
I0428 19:46:03.760478 25934 net.cpp:124] Setting up ip2
I0428 19:46:03.760485 25934 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:03.760489 25934 net.cpp:139] Memory required for data: 2629120
I0428 19:46:03.760495 25934 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:03.760501 25934 net.cpp:86] Creating Layer relu2
I0428 19:46:03.760504 25934 net.cpp:408] relu2 <- ip2
I0428 19:46:03.760509 25934 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:03.761303 25934 net.cpp:124] Setting up relu2
I0428 19:46:03.761317 25934 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:03.761320 25934 net.cpp:139] Memory required for data: 2635520
I0428 19:46:03.761324 25934 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:03.761332 25934 net.cpp:86] Creating Layer ip3
I0428 19:46:03.761335 25934 net.cpp:408] ip3 <- ip2
I0428 19:46:03.761340 25934 net.cpp:382] ip3 -> ip3
I0428 19:46:03.761442 25934 net.cpp:124] Setting up ip3
I0428 19:46:03.761451 25934 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:03.761454 25934 net.cpp:139] Memory required for data: 2638080
I0428 19:46:03.761462 25934 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:03.761468 25934 net.cpp:86] Creating Layer relu3
I0428 19:46:03.761471 25934 net.cpp:408] relu3 <- ip3
I0428 19:46:03.761476 25934 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:03.761651 25934 net.cpp:124] Setting up relu3
I0428 19:46:03.761659 25934 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:03.761662 25934 net.cpp:139] Memory required for data: 2640640
I0428 19:46:03.761667 25934 layer_factory.hpp:77] Creating layer loss
I0428 19:46:03.761672 25934 net.cpp:86] Creating Layer loss
I0428 19:46:03.761675 25934 net.cpp:408] loss <- ip3
I0428 19:46:03.761679 25934 net.cpp:408] loss <- label
I0428 19:46:03.761684 25934 net.cpp:382] loss -> loss
I0428 19:46:03.761703 25934 layer_factory.hpp:77] Creating layer loss
I0428 19:46:03.761946 25934 net.cpp:124] Setting up loss
I0428 19:46:03.761956 25934 net.cpp:131] Top shape: (1)
I0428 19:46:03.761960 25934 net.cpp:134]     with loss weight 1
I0428 19:46:03.761975 25934 net.cpp:139] Memory required for data: 2640644
I0428 19:46:03.761978 25934 net.cpp:200] loss needs backward computation.
I0428 19:46:03.761981 25934 net.cpp:200] relu3 needs backward computation.
I0428 19:46:03.761984 25934 net.cpp:200] ip3 needs backward computation.
I0428 19:46:03.761988 25934 net.cpp:200] relu2 needs backward computation.
I0428 19:46:03.761991 25934 net.cpp:200] ip2 needs backward computation.
I0428 19:46:03.761994 25934 net.cpp:200] relu1 needs backward computation.
I0428 19:46:03.761996 25934 net.cpp:200] ip1 needs backward computation.
I0428 19:46:03.761999 25934 net.cpp:200] pool1 needs backward computation.
I0428 19:46:03.762003 25934 net.cpp:200] conv1 needs backward computation.
I0428 19:46:03.762007 25934 net.cpp:200] pool0 needs backward computation.
I0428 19:46:03.762011 25934 net.cpp:200] conv0 needs backward computation.
I0428 19:46:03.762013 25934 net.cpp:202] mnist does not need backward computation.
I0428 19:46:03.762017 25934 net.cpp:244] This network produces output loss
I0428 19:46:03.762027 25934 net.cpp:257] Network initialization done.
I0428 19:46:03.762367 25934 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test484.prototxt
I0428 19:46:03.762394 25934 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:03.762491 25934 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:03.762579 25934 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:03.762626 25934 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:03.762639 25934 net.cpp:86] Creating Layer mnist
I0428 19:46:03.762645 25934 net.cpp:382] mnist -> data
I0428 19:46:03.762652 25934 net.cpp:382] mnist -> label
I0428 19:46:03.762747 25934 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:03.764933 25934 net.cpp:124] Setting up mnist
I0428 19:46:03.764948 25934 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:03.764955 25934 net.cpp:131] Top shape: 100 (100)
I0428 19:46:03.764957 25934 net.cpp:139] Memory required for data: 314000
I0428 19:46:03.764961 25934 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:03.764968 25934 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:03.764972 25934 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:03.764976 25934 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:03.764983 25934 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:03.765027 25934 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:03.765031 25934 net.cpp:131] Top shape: 100 (100)
I0428 19:46:03.765035 25934 net.cpp:131] Top shape: 100 (100)
I0428 19:46:03.765038 25934 net.cpp:139] Memory required for data: 314800
I0428 19:46:03.765041 25934 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:03.765051 25934 net.cpp:86] Creating Layer conv0
I0428 19:46:03.765054 25934 net.cpp:408] conv0 <- data
I0428 19:46:03.765060 25934 net.cpp:382] conv0 -> conv0
I0428 19:46:03.766716 25934 net.cpp:124] Setting up conv0
I0428 19:46:03.766731 25934 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:03.766734 25934 net.cpp:139] Memory required for data: 775600
I0428 19:46:03.766744 25934 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:03.766752 25934 net.cpp:86] Creating Layer pool0
I0428 19:46:03.766755 25934 net.cpp:408] pool0 <- conv0
I0428 19:46:03.766762 25934 net.cpp:382] pool0 -> pool0
I0428 19:46:03.766800 25934 net.cpp:124] Setting up pool0
I0428 19:46:03.766806 25934 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:03.766809 25934 net.cpp:139] Memory required for data: 890800
I0428 19:46:03.766813 25934 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:03.766821 25934 net.cpp:86] Creating Layer conv1
I0428 19:46:03.766825 25934 net.cpp:408] conv1 <- pool0
I0428 19:46:03.766831 25934 net.cpp:382] conv1 -> conv1
I0428 19:46:03.768409 25934 net.cpp:124] Setting up conv1
I0428 19:46:03.768426 25934 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:03.768430 25934 net.cpp:139] Memory required for data: 3450800
I0428 19:46:03.768440 25934 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:03.768447 25934 net.cpp:86] Creating Layer pool1
I0428 19:46:03.768450 25934 net.cpp:408] pool1 <- conv1
I0428 19:46:03.768455 25934 net.cpp:382] pool1 -> pool1
I0428 19:46:03.768497 25934 net.cpp:124] Setting up pool1
I0428 19:46:03.768502 25934 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:03.768506 25934 net.cpp:139] Memory required for data: 4090800
I0428 19:46:03.768509 25934 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:03.768514 25934 net.cpp:86] Creating Layer ip1
I0428 19:46:03.768517 25934 net.cpp:408] ip1 <- pool1
I0428 19:46:03.768523 25934 net.cpp:382] ip1 -> ip1
I0428 19:46:03.768726 25934 net.cpp:124] Setting up ip1
I0428 19:46:03.768735 25934 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:03.768749 25934 net.cpp:139] Memory required for data: 4094800
I0428 19:46:03.768757 25934 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:03.768764 25934 net.cpp:86] Creating Layer relu1
I0428 19:46:03.768769 25934 net.cpp:408] relu1 <- ip1
I0428 19:46:03.768772 25934 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:03.768954 25934 net.cpp:124] Setting up relu1
I0428 19:46:03.768962 25934 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:03.768966 25934 net.cpp:139] Memory required for data: 4098800
I0428 19:46:03.768970 25934 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:03.768977 25934 net.cpp:86] Creating Layer ip2
I0428 19:46:03.768981 25934 net.cpp:408] ip2 <- ip1
I0428 19:46:03.768986 25934 net.cpp:382] ip2 -> ip2
I0428 19:46:03.769090 25934 net.cpp:124] Setting up ip2
I0428 19:46:03.769098 25934 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:03.769100 25934 net.cpp:139] Memory required for data: 4108800
I0428 19:46:03.769106 25934 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:03.769112 25934 net.cpp:86] Creating Layer relu2
I0428 19:46:03.769115 25934 net.cpp:408] relu2 <- ip2
I0428 19:46:03.769119 25934 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:03.769284 25934 net.cpp:124] Setting up relu2
I0428 19:46:03.769294 25934 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:03.769297 25934 net.cpp:139] Memory required for data: 4118800
I0428 19:46:03.769300 25934 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:03.769306 25934 net.cpp:86] Creating Layer ip3
I0428 19:46:03.769317 25934 net.cpp:408] ip3 <- ip2
I0428 19:46:03.769323 25934 net.cpp:382] ip3 -> ip3
I0428 19:46:03.769446 25934 net.cpp:124] Setting up ip3
I0428 19:46:03.769455 25934 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:03.769459 25934 net.cpp:139] Memory required for data: 4122800
I0428 19:46:03.769466 25934 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:03.769470 25934 net.cpp:86] Creating Layer relu3
I0428 19:46:03.769474 25934 net.cpp:408] relu3 <- ip3
I0428 19:46:03.769477 25934 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:03.770352 25934 net.cpp:124] Setting up relu3
I0428 19:46:03.770366 25934 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:03.770370 25934 net.cpp:139] Memory required for data: 4126800
I0428 19:46:03.770375 25934 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:03.770381 25934 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:03.770385 25934 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:03.770392 25934 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:03.770404 25934 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:03.770444 25934 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:03.770450 25934 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:03.770454 25934 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:03.770457 25934 net.cpp:139] Memory required for data: 4134800
I0428 19:46:03.770460 25934 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:03.770467 25934 net.cpp:86] Creating Layer accuracy
I0428 19:46:03.770475 25934 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:03.770479 25934 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:03.770483 25934 net.cpp:382] accuracy -> accuracy
I0428 19:46:03.770491 25934 net.cpp:124] Setting up accuracy
I0428 19:46:03.770495 25934 net.cpp:131] Top shape: (1)
I0428 19:46:03.770498 25934 net.cpp:139] Memory required for data: 4134804
I0428 19:46:03.770501 25934 layer_factory.hpp:77] Creating layer loss
I0428 19:46:03.770514 25934 net.cpp:86] Creating Layer loss
I0428 19:46:03.770516 25934 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:03.770521 25934 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:03.770526 25934 net.cpp:382] loss -> loss
I0428 19:46:03.770532 25934 layer_factory.hpp:77] Creating layer loss
I0428 19:46:03.770782 25934 net.cpp:124] Setting up loss
I0428 19:46:03.770792 25934 net.cpp:131] Top shape: (1)
I0428 19:46:03.770795 25934 net.cpp:134]     with loss weight 1
I0428 19:46:03.770802 25934 net.cpp:139] Memory required for data: 4134808
I0428 19:46:03.770815 25934 net.cpp:200] loss needs backward computation.
I0428 19:46:03.770819 25934 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:03.770823 25934 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:03.770826 25934 net.cpp:200] relu3 needs backward computation.
I0428 19:46:03.770829 25934 net.cpp:200] ip3 needs backward computation.
I0428 19:46:03.770833 25934 net.cpp:200] relu2 needs backward computation.
I0428 19:46:03.770835 25934 net.cpp:200] ip2 needs backward computation.
I0428 19:46:03.770844 25934 net.cpp:200] relu1 needs backward computation.
I0428 19:46:03.770848 25934 net.cpp:200] ip1 needs backward computation.
I0428 19:46:03.770850 25934 net.cpp:200] pool1 needs backward computation.
I0428 19:46:03.770853 25934 net.cpp:200] conv1 needs backward computation.
I0428 19:46:03.770856 25934 net.cpp:200] pool0 needs backward computation.
I0428 19:46:03.770859 25934 net.cpp:200] conv0 needs backward computation.
I0428 19:46:03.770864 25934 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:03.770867 25934 net.cpp:202] mnist does not need backward computation.
I0428 19:46:03.770869 25934 net.cpp:244] This network produces output accuracy
I0428 19:46:03.770879 25934 net.cpp:244] This network produces output loss
I0428 19:46:03.770890 25934 net.cpp:257] Network initialization done.
I0428 19:46:03.770941 25934 solver.cpp:56] Solver scaffolding done.
I0428 19:46:03.771293 25934 caffe.cpp:248] Starting Optimization
I0428 19:46:03.771301 25934 solver.cpp:273] Solving LeNet
I0428 19:46:03.771303 25934 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:03.771611 25934 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:03.776767 25934 blocking_queue.cpp:49] Waiting for data
I0428 19:46:03.843961 25941 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:03.844570 25934 solver.cpp:398]     Test net output #0: accuracy = 0.0676
I0428 19:46:03.844590 25934 solver.cpp:398]     Test net output #1: loss = 2.29958 (* 1 = 2.29958 loss)
I0428 19:46:03.848268 25934 solver.cpp:219] Iteration 0 (0 iter/s, 0.0769362s/100 iters), loss = 2.30132
I0428 19:46:03.848291 25934 solver.cpp:238]     Train net output #0: loss = 2.30132 (* 1 = 2.30132 loss)
I0428 19:46:03.848317 25934 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:03.998972 25934 solver.cpp:219] Iteration 100 (663.737 iter/s, 0.150662s/100 iters), loss = 0.674516
I0428 19:46:03.999011 25934 solver.cpp:238]     Train net output #0: loss = 0.674516 (* 1 = 0.674516 loss)
I0428 19:46:03.999028 25934 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:04.167901 25934 solver.cpp:219] Iteration 200 (592.154 iter/s, 0.168875s/100 iters), loss = 0.499394
I0428 19:46:04.167958 25934 solver.cpp:238]     Train net output #0: loss = 0.499394 (* 1 = 0.499394 loss)
I0428 19:46:04.167968 25934 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:04.339253 25934 solver.cpp:219] Iteration 300 (583.789 iter/s, 0.171295s/100 iters), loss = 0.312803
I0428 19:46:04.339310 25934 solver.cpp:238]     Train net output #0: loss = 0.312803 (* 1 = 0.312803 loss)
I0428 19:46:04.339326 25934 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:04.509188 25934 solver.cpp:219] Iteration 400 (588.66 iter/s, 0.169877s/100 iters), loss = 0.18591
I0428 19:46:04.509239 25934 solver.cpp:238]     Train net output #0: loss = 0.18591 (* 1 = 0.18591 loss)
I0428 19:46:04.509250 25934 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:04.675525 25934 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:04.732584 25941 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:04.734452 25934 solver.cpp:398]     Test net output #0: accuracy = 0.949
I0428 19:46:04.734477 25934 solver.cpp:398]     Test net output #1: loss = 0.177555 (* 1 = 0.177555 loss)
I0428 19:46:04.735971 25934 solver.cpp:219] Iteration 500 (441.059 iter/s, 0.226727s/100 iters), loss = 0.182443
I0428 19:46:04.736008 25934 solver.cpp:238]     Train net output #0: loss = 0.182443 (* 1 = 0.182443 loss)
I0428 19:46:04.736044 25934 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:04.901707 25934 solver.cpp:219] Iteration 600 (603.562 iter/s, 0.165683s/100 iters), loss = 0.175196
I0428 19:46:04.901753 25934 solver.cpp:238]     Train net output #0: loss = 0.175197 (* 1 = 0.175197 loss)
I0428 19:46:04.901764 25934 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:05.072444 25934 solver.cpp:219] Iteration 700 (585.88 iter/s, 0.170683s/100 iters), loss = 0.126864
I0428 19:46:05.072486 25934 solver.cpp:238]     Train net output #0: loss = 0.126864 (* 1 = 0.126864 loss)
I0428 19:46:05.072507 25934 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:05.243639 25934 solver.cpp:219] Iteration 800 (584.324 iter/s, 0.171138s/100 iters), loss = 0.25706
I0428 19:46:05.243683 25934 solver.cpp:238]     Train net output #0: loss = 0.25706 (* 1 = 0.25706 loss)
I0428 19:46:05.243695 25934 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:05.414669 25934 solver.cpp:219] Iteration 900 (584.894 iter/s, 0.170971s/100 iters), loss = 0.194711
I0428 19:46:05.414710 25934 solver.cpp:238]     Train net output #0: loss = 0.194711 (* 1 = 0.194711 loss)
I0428 19:46:05.414729 25934 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:05.470428 25940 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:05.582070 25934 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:05.583986 25934 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:05.584872 25934 solver.cpp:311] Iteration 1000, loss = 0.175983
I0428 19:46:05.584889 25934 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:05.635918 25941 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:05.637655 25934 solver.cpp:398]     Test net output #0: accuracy = 0.966
I0428 19:46:05.637675 25934 solver.cpp:398]     Test net output #1: loss = 0.111563 (* 1 = 0.111563 loss)
I0428 19:46:05.637689 25934 solver.cpp:316] Optimization Done.
I0428 19:46:05.637692 25934 caffe.cpp:259] Optimization Done.
