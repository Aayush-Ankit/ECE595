I0428 19:31:10.382912 22511 caffe.cpp:218] Using GPUs 0
I0428 19:31:10.423301 22511 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:10.940834 22511 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test114.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:10.940974 22511 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test114.prototxt
I0428 19:31:10.941352 22511 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:10.941370 22511 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:10.941459 22511 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:10.941536 22511 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:10.941633 22511 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:10.941656 22511 net.cpp:86] Creating Layer mnist
I0428 19:31:10.941665 22511 net.cpp:382] mnist -> data
I0428 19:31:10.941689 22511 net.cpp:382] mnist -> label
I0428 19:31:10.942786 22511 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:10.945242 22511 net.cpp:124] Setting up mnist
I0428 19:31:10.945261 22511 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:10.945266 22511 net.cpp:131] Top shape: 64 (64)
I0428 19:31:10.945271 22511 net.cpp:139] Memory required for data: 200960
I0428 19:31:10.945277 22511 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:10.945327 22511 net.cpp:86] Creating Layer conv0
I0428 19:31:10.945333 22511 net.cpp:408] conv0 <- data
I0428 19:31:10.945348 22511 net.cpp:382] conv0 -> conv0
I0428 19:31:11.237313 22511 net.cpp:124] Setting up conv0
I0428 19:31:11.237346 22511 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:11.237351 22511 net.cpp:139] Memory required for data: 938240
I0428 19:31:11.237370 22511 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:11.237385 22511 net.cpp:86] Creating Layer pool0
I0428 19:31:11.237411 22511 net.cpp:408] pool0 <- conv0
I0428 19:31:11.237421 22511 net.cpp:382] pool0 -> pool0
I0428 19:31:11.237478 22511 net.cpp:124] Setting up pool0
I0428 19:31:11.237488 22511 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:11.237490 22511 net.cpp:139] Memory required for data: 1122560
I0428 19:31:11.237494 22511 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:11.237504 22511 net.cpp:86] Creating Layer ip1
I0428 19:31:11.237507 22511 net.cpp:408] ip1 <- pool0
I0428 19:31:11.237514 22511 net.cpp:382] ip1 -> ip1
I0428 19:31:11.237887 22511 net.cpp:124] Setting up ip1
I0428 19:31:11.237896 22511 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:11.237900 22511 net.cpp:139] Memory required for data: 1135360
I0428 19:31:11.237908 22511 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:11.237916 22511 net.cpp:86] Creating Layer relu1
I0428 19:31:11.237921 22511 net.cpp:408] relu1 <- ip1
I0428 19:31:11.237926 22511 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:11.238126 22511 net.cpp:124] Setting up relu1
I0428 19:31:11.238137 22511 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:11.238142 22511 net.cpp:139] Memory required for data: 1148160
I0428 19:31:11.238145 22511 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:11.238152 22511 net.cpp:86] Creating Layer ip2
I0428 19:31:11.238157 22511 net.cpp:408] ip2 <- ip1
I0428 19:31:11.238162 22511 net.cpp:382] ip2 -> ip2
I0428 19:31:11.239270 22511 net.cpp:124] Setting up ip2
I0428 19:31:11.239284 22511 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:11.239289 22511 net.cpp:139] Memory required for data: 1160960
I0428 19:31:11.239300 22511 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:11.239306 22511 net.cpp:86] Creating Layer relu2
I0428 19:31:11.239311 22511 net.cpp:408] relu2 <- ip2
I0428 19:31:11.239316 22511 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:11.240170 22511 net.cpp:124] Setting up relu2
I0428 19:31:11.240185 22511 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:11.240190 22511 net.cpp:139] Memory required for data: 1173760
I0428 19:31:11.240195 22511 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:11.240202 22511 net.cpp:86] Creating Layer ip3
I0428 19:31:11.240206 22511 net.cpp:408] ip3 <- ip2
I0428 19:31:11.240213 22511 net.cpp:382] ip3 -> ip3
I0428 19:31:11.240335 22511 net.cpp:124] Setting up ip3
I0428 19:31:11.240345 22511 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:11.240350 22511 net.cpp:139] Memory required for data: 1176320
I0428 19:31:11.240356 22511 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:11.240363 22511 net.cpp:86] Creating Layer relu3
I0428 19:31:11.240370 22511 net.cpp:408] relu3 <- ip3
I0428 19:31:11.240375 22511 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:11.240556 22511 net.cpp:124] Setting up relu3
I0428 19:31:11.240566 22511 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:11.240569 22511 net.cpp:139] Memory required for data: 1178880
I0428 19:31:11.240574 22511 layer_factory.hpp:77] Creating layer loss
I0428 19:31:11.240581 22511 net.cpp:86] Creating Layer loss
I0428 19:31:11.240586 22511 net.cpp:408] loss <- ip3
I0428 19:31:11.240591 22511 net.cpp:408] loss <- label
I0428 19:31:11.240597 22511 net.cpp:382] loss -> loss
I0428 19:31:11.240613 22511 layer_factory.hpp:77] Creating layer loss
I0428 19:31:11.240906 22511 net.cpp:124] Setting up loss
I0428 19:31:11.240917 22511 net.cpp:131] Top shape: (1)
I0428 19:31:11.240921 22511 net.cpp:134]     with loss weight 1
I0428 19:31:11.240938 22511 net.cpp:139] Memory required for data: 1178884
I0428 19:31:11.240943 22511 net.cpp:200] loss needs backward computation.
I0428 19:31:11.240947 22511 net.cpp:200] relu3 needs backward computation.
I0428 19:31:11.240952 22511 net.cpp:200] ip3 needs backward computation.
I0428 19:31:11.240954 22511 net.cpp:200] relu2 needs backward computation.
I0428 19:31:11.240958 22511 net.cpp:200] ip2 needs backward computation.
I0428 19:31:11.240962 22511 net.cpp:200] relu1 needs backward computation.
I0428 19:31:11.240965 22511 net.cpp:200] ip1 needs backward computation.
I0428 19:31:11.240981 22511 net.cpp:200] pool0 needs backward computation.
I0428 19:31:11.240985 22511 net.cpp:200] conv0 needs backward computation.
I0428 19:31:11.240990 22511 net.cpp:202] mnist does not need backward computation.
I0428 19:31:11.240993 22511 net.cpp:244] This network produces output loss
I0428 19:31:11.241003 22511 net.cpp:257] Network initialization done.
I0428 19:31:11.241339 22511 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test114.prototxt
I0428 19:31:11.241370 22511 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:11.241466 22511 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:11.241541 22511 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:11.241593 22511 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:11.241611 22511 net.cpp:86] Creating Layer mnist
I0428 19:31:11.241616 22511 net.cpp:382] mnist -> data
I0428 19:31:11.241626 22511 net.cpp:382] mnist -> label
I0428 19:31:11.241726 22511 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:11.243914 22511 net.cpp:124] Setting up mnist
I0428 19:31:11.243930 22511 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:11.243937 22511 net.cpp:131] Top shape: 100 (100)
I0428 19:31:11.243940 22511 net.cpp:139] Memory required for data: 314000
I0428 19:31:11.243945 22511 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:11.243953 22511 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:11.243957 22511 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:11.243963 22511 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:11.243973 22511 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:11.244081 22511 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:11.244089 22511 net.cpp:131] Top shape: 100 (100)
I0428 19:31:11.244094 22511 net.cpp:131] Top shape: 100 (100)
I0428 19:31:11.244097 22511 net.cpp:139] Memory required for data: 314800
I0428 19:31:11.244112 22511 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:11.244124 22511 net.cpp:86] Creating Layer conv0
I0428 19:31:11.244129 22511 net.cpp:408] conv0 <- data
I0428 19:31:11.244137 22511 net.cpp:382] conv0 -> conv0
I0428 19:31:11.245829 22511 net.cpp:124] Setting up conv0
I0428 19:31:11.245846 22511 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:11.245851 22511 net.cpp:139] Memory required for data: 1466800
I0428 19:31:11.245862 22511 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:11.245869 22511 net.cpp:86] Creating Layer pool0
I0428 19:31:11.245874 22511 net.cpp:408] pool0 <- conv0
I0428 19:31:11.245882 22511 net.cpp:382] pool0 -> pool0
I0428 19:31:11.245925 22511 net.cpp:124] Setting up pool0
I0428 19:31:11.245934 22511 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:11.245949 22511 net.cpp:139] Memory required for data: 1754800
I0428 19:31:11.245954 22511 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:11.245961 22511 net.cpp:86] Creating Layer ip1
I0428 19:31:11.245965 22511 net.cpp:408] ip1 <- pool0
I0428 19:31:11.245972 22511 net.cpp:382] ip1 -> ip1
I0428 19:31:11.246337 22511 net.cpp:124] Setting up ip1
I0428 19:31:11.246347 22511 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:11.246351 22511 net.cpp:139] Memory required for data: 1774800
I0428 19:31:11.246361 22511 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:11.246367 22511 net.cpp:86] Creating Layer relu1
I0428 19:31:11.246371 22511 net.cpp:408] relu1 <- ip1
I0428 19:31:11.246376 22511 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:11.246567 22511 net.cpp:124] Setting up relu1
I0428 19:31:11.246577 22511 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:11.246580 22511 net.cpp:139] Memory required for data: 1794800
I0428 19:31:11.246584 22511 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:11.246592 22511 net.cpp:86] Creating Layer ip2
I0428 19:31:11.246595 22511 net.cpp:408] ip2 <- ip1
I0428 19:31:11.246601 22511 net.cpp:382] ip2 -> ip2
I0428 19:31:11.246752 22511 net.cpp:124] Setting up ip2
I0428 19:31:11.246760 22511 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:11.246763 22511 net.cpp:139] Memory required for data: 1814800
I0428 19:31:11.246773 22511 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:11.246778 22511 net.cpp:86] Creating Layer relu2
I0428 19:31:11.246783 22511 net.cpp:408] relu2 <- ip2
I0428 19:31:11.246786 22511 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:11.247723 22511 net.cpp:124] Setting up relu2
I0428 19:31:11.247738 22511 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:11.247743 22511 net.cpp:139] Memory required for data: 1834800
I0428 19:31:11.247748 22511 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:11.247758 22511 net.cpp:86] Creating Layer ip3
I0428 19:31:11.247769 22511 net.cpp:408] ip3 <- ip2
I0428 19:31:11.247776 22511 net.cpp:382] ip3 -> ip3
I0428 19:31:11.247905 22511 net.cpp:124] Setting up ip3
I0428 19:31:11.247915 22511 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:11.247918 22511 net.cpp:139] Memory required for data: 1838800
I0428 19:31:11.247925 22511 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:11.247931 22511 net.cpp:86] Creating Layer relu3
I0428 19:31:11.247936 22511 net.cpp:408] relu3 <- ip3
I0428 19:31:11.247941 22511 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:11.248121 22511 net.cpp:124] Setting up relu3
I0428 19:31:11.248133 22511 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:11.248137 22511 net.cpp:139] Memory required for data: 1842800
I0428 19:31:11.248142 22511 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:11.248147 22511 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:11.248152 22511 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:11.248157 22511 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:11.248164 22511 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:11.248205 22511 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:11.248214 22511 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:11.248219 22511 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:11.248235 22511 net.cpp:139] Memory required for data: 1850800
I0428 19:31:11.248239 22511 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:11.248245 22511 net.cpp:86] Creating Layer accuracy
I0428 19:31:11.248250 22511 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:11.248255 22511 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:11.248260 22511 net.cpp:382] accuracy -> accuracy
I0428 19:31:11.248268 22511 net.cpp:124] Setting up accuracy
I0428 19:31:11.248273 22511 net.cpp:131] Top shape: (1)
I0428 19:31:11.248276 22511 net.cpp:139] Memory required for data: 1850804
I0428 19:31:11.248281 22511 layer_factory.hpp:77] Creating layer loss
I0428 19:31:11.248286 22511 net.cpp:86] Creating Layer loss
I0428 19:31:11.248289 22511 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:11.248293 22511 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:11.248298 22511 net.cpp:382] loss -> loss
I0428 19:31:11.248306 22511 layer_factory.hpp:77] Creating layer loss
I0428 19:31:11.248668 22511 net.cpp:124] Setting up loss
I0428 19:31:11.248682 22511 net.cpp:131] Top shape: (1)
I0428 19:31:11.248687 22511 net.cpp:134]     with loss weight 1
I0428 19:31:11.248693 22511 net.cpp:139] Memory required for data: 1850808
I0428 19:31:11.248698 22511 net.cpp:200] loss needs backward computation.
I0428 19:31:11.248703 22511 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:11.248708 22511 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:11.248713 22511 net.cpp:200] relu3 needs backward computation.
I0428 19:31:11.248721 22511 net.cpp:200] ip3 needs backward computation.
I0428 19:31:11.248725 22511 net.cpp:200] relu2 needs backward computation.
I0428 19:31:11.248734 22511 net.cpp:200] ip2 needs backward computation.
I0428 19:31:11.248739 22511 net.cpp:200] relu1 needs backward computation.
I0428 19:31:11.248742 22511 net.cpp:200] ip1 needs backward computation.
I0428 19:31:11.248746 22511 net.cpp:200] pool0 needs backward computation.
I0428 19:31:11.248754 22511 net.cpp:200] conv0 needs backward computation.
I0428 19:31:11.248759 22511 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:11.248764 22511 net.cpp:202] mnist does not need backward computation.
I0428 19:31:11.248767 22511 net.cpp:244] This network produces output accuracy
I0428 19:31:11.248771 22511 net.cpp:244] This network produces output loss
I0428 19:31:11.248783 22511 net.cpp:257] Network initialization done.
I0428 19:31:11.248842 22511 solver.cpp:56] Solver scaffolding done.
I0428 19:31:11.249168 22511 caffe.cpp:248] Starting Optimization
I0428 19:31:11.249176 22511 solver.cpp:273] Solving LeNet
I0428 19:31:11.249179 22511 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:11.250685 22511 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:11.254029 22511 blocking_queue.cpp:49] Waiting for data
I0428 19:31:11.317112 22518 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:11.317560 22511 solver.cpp:398]     Test net output #0: accuracy = 0.1088
I0428 19:31:11.317582 22511 solver.cpp:398]     Test net output #1: loss = 2.32003 (* 1 = 2.32003 loss)
I0428 19:31:11.319278 22511 solver.cpp:219] Iteration 0 (-1.16028e-42 iter/s, 0.0700676s/100 iters), loss = 2.3429
I0428 19:31:11.319305 22511 solver.cpp:238]     Train net output #0: loss = 2.3429 (* 1 = 2.3429 loss)
I0428 19:31:11.319319 22511 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:11.381837 22511 solver.cpp:219] Iteration 100 (1599.39 iter/s, 0.0625239s/100 iters), loss = 0.436523
I0428 19:31:11.381875 22511 solver.cpp:238]     Train net output #0: loss = 0.436523 (* 1 = 0.436523 loss)
I0428 19:31:11.381883 22511 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:11.451871 22511 solver.cpp:219] Iteration 200 (1429.11 iter/s, 0.0699738s/100 iters), loss = 0.281716
I0428 19:31:11.451895 22511 solver.cpp:238]     Train net output #0: loss = 0.281716 (* 1 = 0.281716 loss)
I0428 19:31:11.451920 22511 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:11.513243 22511 solver.cpp:219] Iteration 300 (1630.27 iter/s, 0.0613397s/100 iters), loss = 0.239411
I0428 19:31:11.513267 22511 solver.cpp:238]     Train net output #0: loss = 0.239411 (* 1 = 0.239411 loss)
I0428 19:31:11.513273 22511 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:11.572335 22511 solver.cpp:219] Iteration 400 (1693.19 iter/s, 0.0590602s/100 iters), loss = 0.130433
I0428 19:31:11.572358 22511 solver.cpp:238]     Train net output #0: loss = 0.130433 (* 1 = 0.130433 loss)
I0428 19:31:11.572363 22511 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:11.631413 22511 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:11.684782 22518 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:11.685259 22511 solver.cpp:398]     Test net output #0: accuracy = 0.9429
I0428 19:31:11.685278 22511 solver.cpp:398]     Test net output #1: loss = 0.182382 (* 1 = 0.182382 loss)
I0428 19:31:11.685922 22511 solver.cpp:219] Iteration 500 (880.643 iter/s, 0.113553s/100 iters), loss = 0.252784
I0428 19:31:11.685961 22511 solver.cpp:238]     Train net output #0: loss = 0.252784 (* 1 = 0.252784 loss)
I0428 19:31:11.685967 22511 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:11.753702 22511 solver.cpp:219] Iteration 600 (1476.4 iter/s, 0.0677325s/100 iters), loss = 0.171955
I0428 19:31:11.753744 22511 solver.cpp:238]     Train net output #0: loss = 0.171955 (* 1 = 0.171955 loss)
I0428 19:31:11.753752 22511 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:11.814566 22511 solver.cpp:219] Iteration 700 (1644.31 iter/s, 0.0608159s/100 iters), loss = 0.298487
I0428 19:31:11.814589 22511 solver.cpp:238]     Train net output #0: loss = 0.298487 (* 1 = 0.298487 loss)
I0428 19:31:11.814613 22511 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:11.874389 22511 solver.cpp:219] Iteration 800 (1672.51 iter/s, 0.0597904s/100 iters), loss = 0.249046
I0428 19:31:11.874413 22511 solver.cpp:238]     Train net output #0: loss = 0.249046 (* 1 = 0.249046 loss)
I0428 19:31:11.874435 22511 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:11.932763 22511 solver.cpp:219] Iteration 900 (1713.99 iter/s, 0.0583434s/100 iters), loss = 0.21909
I0428 19:31:11.932786 22511 solver.cpp:238]     Train net output #0: loss = 0.21909 (* 1 = 0.21909 loss)
I0428 19:31:11.932814 22511 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:11.952303 22517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:11.990705 22511 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:11.991735 22511 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:11.992386 22511 solver.cpp:311] Iteration 1000, loss = 0.153272
I0428 19:31:11.992403 22511 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:12.067247 22518 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:12.067704 22511 solver.cpp:398]     Test net output #0: accuracy = 0.9595
I0428 19:31:12.067723 22511 solver.cpp:398]     Test net output #1: loss = 0.123503 (* 1 = 0.123503 loss)
I0428 19:31:12.067728 22511 solver.cpp:316] Optimization Done.
I0428 19:31:12.067730 22511 caffe.cpp:259] Optimization Done.
