I0428 20:26:00.992014  2726 caffe.cpp:218] Using GPUs 0
I0428 20:26:01.030457  2726 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:01.542665  2726 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1464.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:01.542812  2726 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1464.prototxt
I0428 20:26:01.543229  2726 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:01.543248  2726 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:01.543351  2726 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:01.543432  2726 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:01.543531  2726 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:01.543555  2726 net.cpp:86] Creating Layer mnist
I0428 20:26:01.543565  2726 net.cpp:382] mnist -> data
I0428 20:26:01.543586  2726 net.cpp:382] mnist -> label
I0428 20:26:01.544682  2726 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:01.547147  2726 net.cpp:124] Setting up mnist
I0428 20:26:01.547168  2726 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:01.547173  2726 net.cpp:131] Top shape: 64 (64)
I0428 20:26:01.547178  2726 net.cpp:139] Memory required for data: 200960
I0428 20:26:01.547184  2726 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:01.547200  2726 net.cpp:86] Creating Layer conv0
I0428 20:26:01.547221  2726 net.cpp:408] conv0 <- data
I0428 20:26:01.547235  2726 net.cpp:382] conv0 -> conv0
I0428 20:26:01.837293  2726 net.cpp:124] Setting up conv0
I0428 20:26:01.837322  2726 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:01.837327  2726 net.cpp:139] Memory required for data: 14946560
I0428 20:26:01.837345  2726 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:01.837359  2726 net.cpp:86] Creating Layer pool0
I0428 20:26:01.837363  2726 net.cpp:408] pool0 <- conv0
I0428 20:26:01.837370  2726 net.cpp:382] pool0 -> pool0
I0428 20:26:01.837421  2726 net.cpp:124] Setting up pool0
I0428 20:26:01.837429  2726 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:01.837431  2726 net.cpp:139] Memory required for data: 18632960
I0428 20:26:01.837435  2726 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:01.837446  2726 net.cpp:86] Creating Layer conv1
I0428 20:26:01.837450  2726 net.cpp:408] conv1 <- pool0
I0428 20:26:01.837455  2726 net.cpp:382] conv1 -> conv1
I0428 20:26:01.840344  2726 net.cpp:124] Setting up conv1
I0428 20:26:01.840360  2726 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:01.840364  2726 net.cpp:139] Memory required for data: 18665728
I0428 20:26:01.840374  2726 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:01.840382  2726 net.cpp:86] Creating Layer pool1
I0428 20:26:01.840389  2726 net.cpp:408] pool1 <- conv1
I0428 20:26:01.840394  2726 net.cpp:382] pool1 -> pool1
I0428 20:26:01.840435  2726 net.cpp:124] Setting up pool1
I0428 20:26:01.840440  2726 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:01.840443  2726 net.cpp:139] Memory required for data: 18673920
I0428 20:26:01.840447  2726 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:01.840454  2726 net.cpp:86] Creating Layer ip1
I0428 20:26:01.840458  2726 net.cpp:408] ip1 <- pool1
I0428 20:26:01.840463  2726 net.cpp:382] ip1 -> ip1
I0428 20:26:01.840570  2726 net.cpp:124] Setting up ip1
I0428 20:26:01.840579  2726 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:01.840582  2726 net.cpp:139] Memory required for data: 18680320
I0428 20:26:01.840590  2726 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:01.840596  2726 net.cpp:86] Creating Layer relu1
I0428 20:26:01.840600  2726 net.cpp:408] relu1 <- ip1
I0428 20:26:01.840605  2726 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:01.840783  2726 net.cpp:124] Setting up relu1
I0428 20:26:01.840793  2726 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:01.840796  2726 net.cpp:139] Memory required for data: 18686720
I0428 20:26:01.840801  2726 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:01.840806  2726 net.cpp:86] Creating Layer ip2
I0428 20:26:01.840818  2726 net.cpp:408] ip2 <- ip1
I0428 20:26:01.840824  2726 net.cpp:382] ip2 -> ip2
I0428 20:26:01.840929  2726 net.cpp:124] Setting up ip2
I0428 20:26:01.840937  2726 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:01.840940  2726 net.cpp:139] Memory required for data: 18689280
I0428 20:26:01.840946  2726 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:01.840953  2726 net.cpp:86] Creating Layer relu2
I0428 20:26:01.840956  2726 net.cpp:408] relu2 <- ip2
I0428 20:26:01.840961  2726 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:01.841729  2726 net.cpp:124] Setting up relu2
I0428 20:26:01.841743  2726 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:01.841747  2726 net.cpp:139] Memory required for data: 18691840
I0428 20:26:01.841751  2726 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:01.841758  2726 net.cpp:86] Creating Layer ip3
I0428 20:26:01.841761  2726 net.cpp:408] ip3 <- ip2
I0428 20:26:01.841768  2726 net.cpp:382] ip3 -> ip3
I0428 20:26:01.841871  2726 net.cpp:124] Setting up ip3
I0428 20:26:01.841878  2726 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:01.841882  2726 net.cpp:139] Memory required for data: 18694400
I0428 20:26:01.841891  2726 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:01.841897  2726 net.cpp:86] Creating Layer relu3
I0428 20:26:01.841899  2726 net.cpp:408] relu3 <- ip3
I0428 20:26:01.841903  2726 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:01.842077  2726 net.cpp:124] Setting up relu3
I0428 20:26:01.842087  2726 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:01.842090  2726 net.cpp:139] Memory required for data: 18696960
I0428 20:26:01.842093  2726 layer_factory.hpp:77] Creating layer loss
I0428 20:26:01.842099  2726 net.cpp:86] Creating Layer loss
I0428 20:26:01.842103  2726 net.cpp:408] loss <- ip3
I0428 20:26:01.842108  2726 net.cpp:408] loss <- label
I0428 20:26:01.842113  2726 net.cpp:382] loss -> loss
I0428 20:26:01.842133  2726 layer_factory.hpp:77] Creating layer loss
I0428 20:26:01.842365  2726 net.cpp:124] Setting up loss
I0428 20:26:01.842375  2726 net.cpp:131] Top shape: (1)
I0428 20:26:01.842380  2726 net.cpp:134]     with loss weight 1
I0428 20:26:01.842393  2726 net.cpp:139] Memory required for data: 18696964
I0428 20:26:01.842396  2726 net.cpp:200] loss needs backward computation.
I0428 20:26:01.842401  2726 net.cpp:200] relu3 needs backward computation.
I0428 20:26:01.842404  2726 net.cpp:200] ip3 needs backward computation.
I0428 20:26:01.842407  2726 net.cpp:200] relu2 needs backward computation.
I0428 20:26:01.842411  2726 net.cpp:200] ip2 needs backward computation.
I0428 20:26:01.842413  2726 net.cpp:200] relu1 needs backward computation.
I0428 20:26:01.842417  2726 net.cpp:200] ip1 needs backward computation.
I0428 20:26:01.842420  2726 net.cpp:200] pool1 needs backward computation.
I0428 20:26:01.842423  2726 net.cpp:200] conv1 needs backward computation.
I0428 20:26:01.842427  2726 net.cpp:200] pool0 needs backward computation.
I0428 20:26:01.842430  2726 net.cpp:200] conv0 needs backward computation.
I0428 20:26:01.842434  2726 net.cpp:202] mnist does not need backward computation.
I0428 20:26:01.842437  2726 net.cpp:244] This network produces output loss
I0428 20:26:01.842447  2726 net.cpp:257] Network initialization done.
I0428 20:26:01.842784  2726 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1464.prototxt
I0428 20:26:01.842813  2726 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:01.842908  2726 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:01.843024  2726 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:01.843070  2726 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:01.843082  2726 net.cpp:86] Creating Layer mnist
I0428 20:26:01.843087  2726 net.cpp:382] mnist -> data
I0428 20:26:01.843096  2726 net.cpp:382] mnist -> label
I0428 20:26:01.843183  2726 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:01.845156  2726 net.cpp:124] Setting up mnist
I0428 20:26:01.845170  2726 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:01.845176  2726 net.cpp:131] Top shape: 100 (100)
I0428 20:26:01.845180  2726 net.cpp:139] Memory required for data: 314000
I0428 20:26:01.845183  2726 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:01.845194  2726 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:01.845198  2726 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:01.845204  2726 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:01.845211  2726 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:01.845296  2726 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:01.845304  2726 net.cpp:131] Top shape: 100 (100)
I0428 20:26:01.845309  2726 net.cpp:131] Top shape: 100 (100)
I0428 20:26:01.845312  2726 net.cpp:139] Memory required for data: 314800
I0428 20:26:01.845315  2726 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:01.845324  2726 net.cpp:86] Creating Layer conv0
I0428 20:26:01.845327  2726 net.cpp:408] conv0 <- data
I0428 20:26:01.845332  2726 net.cpp:382] conv0 -> conv0
I0428 20:26:01.847004  2726 net.cpp:124] Setting up conv0
I0428 20:26:01.847019  2726 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:01.847023  2726 net.cpp:139] Memory required for data: 23354800
I0428 20:26:01.847033  2726 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:01.847039  2726 net.cpp:86] Creating Layer pool0
I0428 20:26:01.847043  2726 net.cpp:408] pool0 <- conv0
I0428 20:26:01.847048  2726 net.cpp:382] pool0 -> pool0
I0428 20:26:01.847085  2726 net.cpp:124] Setting up pool0
I0428 20:26:01.847091  2726 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:01.847095  2726 net.cpp:139] Memory required for data: 29114800
I0428 20:26:01.847098  2726 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:01.847106  2726 net.cpp:86] Creating Layer conv1
I0428 20:26:01.847110  2726 net.cpp:408] conv1 <- pool0
I0428 20:26:01.847115  2726 net.cpp:382] conv1 -> conv1
I0428 20:26:01.848642  2726 net.cpp:124] Setting up conv1
I0428 20:26:01.848656  2726 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:01.848660  2726 net.cpp:139] Memory required for data: 29166000
I0428 20:26:01.848670  2726 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:01.848676  2726 net.cpp:86] Creating Layer pool1
I0428 20:26:01.848680  2726 net.cpp:408] pool1 <- conv1
I0428 20:26:01.848686  2726 net.cpp:382] pool1 -> pool1
I0428 20:26:01.848723  2726 net.cpp:124] Setting up pool1
I0428 20:26:01.848729  2726 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:01.848733  2726 net.cpp:139] Memory required for data: 29178800
I0428 20:26:01.848737  2726 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:01.848742  2726 net.cpp:86] Creating Layer ip1
I0428 20:26:01.848747  2726 net.cpp:408] ip1 <- pool1
I0428 20:26:01.848752  2726 net.cpp:382] ip1 -> ip1
I0428 20:26:01.848863  2726 net.cpp:124] Setting up ip1
I0428 20:26:01.848873  2726 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:01.848887  2726 net.cpp:139] Memory required for data: 29188800
I0428 20:26:01.848896  2726 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:01.848902  2726 net.cpp:86] Creating Layer relu1
I0428 20:26:01.848906  2726 net.cpp:408] relu1 <- ip1
I0428 20:26:01.848912  2726 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:01.849076  2726 net.cpp:124] Setting up relu1
I0428 20:26:01.849084  2726 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:01.849088  2726 net.cpp:139] Memory required for data: 29198800
I0428 20:26:01.849092  2726 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:01.849099  2726 net.cpp:86] Creating Layer ip2
I0428 20:26:01.849103  2726 net.cpp:408] ip2 <- ip1
I0428 20:26:01.849108  2726 net.cpp:382] ip2 -> ip2
I0428 20:26:01.849210  2726 net.cpp:124] Setting up ip2
I0428 20:26:01.849216  2726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:01.849220  2726 net.cpp:139] Memory required for data: 29202800
I0428 20:26:01.849225  2726 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:01.849231  2726 net.cpp:86] Creating Layer relu2
I0428 20:26:01.849234  2726 net.cpp:408] relu2 <- ip2
I0428 20:26:01.849238  2726 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:01.849459  2726 net.cpp:124] Setting up relu2
I0428 20:26:01.849469  2726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:01.849473  2726 net.cpp:139] Memory required for data: 29206800
I0428 20:26:01.849476  2726 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:01.849483  2726 net.cpp:86] Creating Layer ip3
I0428 20:26:01.849485  2726 net.cpp:408] ip3 <- ip2
I0428 20:26:01.849491  2726 net.cpp:382] ip3 -> ip3
I0428 20:26:01.849620  2726 net.cpp:124] Setting up ip3
I0428 20:26:01.849627  2726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:01.849632  2726 net.cpp:139] Memory required for data: 29210800
I0428 20:26:01.849645  2726 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:01.849651  2726 net.cpp:86] Creating Layer relu3
I0428 20:26:01.849654  2726 net.cpp:408] relu3 <- ip3
I0428 20:26:01.849661  2726 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:01.850492  2726 net.cpp:124] Setting up relu3
I0428 20:26:01.850503  2726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:01.850507  2726 net.cpp:139] Memory required for data: 29214800
I0428 20:26:01.850510  2726 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:01.850517  2726 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:01.850519  2726 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:01.850525  2726 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:01.850533  2726 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:01.850585  2726 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:01.850591  2726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:01.850595  2726 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:01.850599  2726 net.cpp:139] Memory required for data: 29222800
I0428 20:26:01.850601  2726 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:01.850610  2726 net.cpp:86] Creating Layer accuracy
I0428 20:26:01.850612  2726 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:01.850617  2726 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:01.850622  2726 net.cpp:382] accuracy -> accuracy
I0428 20:26:01.850630  2726 net.cpp:124] Setting up accuracy
I0428 20:26:01.850634  2726 net.cpp:131] Top shape: (1)
I0428 20:26:01.850637  2726 net.cpp:139] Memory required for data: 29222804
I0428 20:26:01.850641  2726 layer_factory.hpp:77] Creating layer loss
I0428 20:26:01.850646  2726 net.cpp:86] Creating Layer loss
I0428 20:26:01.850651  2726 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:01.850656  2726 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:01.850659  2726 net.cpp:382] loss -> loss
I0428 20:26:01.850666  2726 layer_factory.hpp:77] Creating layer loss
I0428 20:26:01.850917  2726 net.cpp:124] Setting up loss
I0428 20:26:01.850927  2726 net.cpp:131] Top shape: (1)
I0428 20:26:01.850930  2726 net.cpp:134]     with loss weight 1
I0428 20:26:01.850947  2726 net.cpp:139] Memory required for data: 29222808
I0428 20:26:01.850951  2726 net.cpp:200] loss needs backward computation.
I0428 20:26:01.850961  2726 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:01.850965  2726 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:01.850970  2726 net.cpp:200] relu3 needs backward computation.
I0428 20:26:01.850973  2726 net.cpp:200] ip3 needs backward computation.
I0428 20:26:01.850976  2726 net.cpp:200] relu2 needs backward computation.
I0428 20:26:01.850980  2726 net.cpp:200] ip2 needs backward computation.
I0428 20:26:01.850982  2726 net.cpp:200] relu1 needs backward computation.
I0428 20:26:01.850986  2726 net.cpp:200] ip1 needs backward computation.
I0428 20:26:01.850988  2726 net.cpp:200] pool1 needs backward computation.
I0428 20:26:01.850992  2726 net.cpp:200] conv1 needs backward computation.
I0428 20:26:01.850997  2726 net.cpp:200] pool0 needs backward computation.
I0428 20:26:01.851006  2726 net.cpp:200] conv0 needs backward computation.
I0428 20:26:01.851011  2726 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:01.851014  2726 net.cpp:202] mnist does not need backward computation.
I0428 20:26:01.851017  2726 net.cpp:244] This network produces output accuracy
I0428 20:26:01.851022  2726 net.cpp:244] This network produces output loss
I0428 20:26:01.851032  2726 net.cpp:257] Network initialization done.
I0428 20:26:01.851076  2726 solver.cpp:56] Solver scaffolding done.
I0428 20:26:01.851447  2726 caffe.cpp:248] Starting Optimization
I0428 20:26:01.851454  2726 solver.cpp:273] Solving LeNet
I0428 20:26:01.851456  2726 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:01.852360  2726 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:01.946549  2733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:01.949106  2726 solver.cpp:398]     Test net output #0: accuracy = 0.115
I0428 20:26:01.949141  2726 solver.cpp:398]     Test net output #1: loss = 2.30183 (* 1 = 2.30183 loss)
I0428 20:26:01.953455  2726 solver.cpp:219] Iteration 0 (-1.16054e-30 iter/s, 0.101967s/100 iters), loss = 2.29352
I0428 20:26:01.953495  2726 solver.cpp:238]     Train net output #0: loss = 2.29352 (* 1 = 2.29352 loss)
I0428 20:26:01.953507  2726 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:02.159340  2726 solver.cpp:219] Iteration 100 (485.825 iter/s, 0.205835s/100 iters), loss = 0.965819
I0428 20:26:02.159392  2726 solver.cpp:238]     Train net output #0: loss = 0.965819 (* 1 = 0.965819 loss)
I0428 20:26:02.159406  2726 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:02.376505  2726 solver.cpp:219] Iteration 200 (460.63 iter/s, 0.217094s/100 iters), loss = 0.327473
I0428 20:26:02.376545  2726 solver.cpp:238]     Train net output #0: loss = 0.327473 (* 1 = 0.327473 loss)
I0428 20:26:02.376555  2726 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:02.593103  2726 solver.cpp:219] Iteration 300 (461.808 iter/s, 0.21654s/100 iters), loss = 0.415268
I0428 20:26:02.593149  2726 solver.cpp:238]     Train net output #0: loss = 0.415268 (* 1 = 0.415268 loss)
I0428 20:26:02.593160  2726 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:02.806746  2726 solver.cpp:219] Iteration 400 (468.212 iter/s, 0.213579s/100 iters), loss = 0.204497
I0428 20:26:02.806799  2726 solver.cpp:238]     Train net output #0: loss = 0.204497 (* 1 = 0.204497 loss)
I0428 20:26:02.806813  2726 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:03.019749  2726 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:03.045137  2726 blocking_queue.cpp:49] Waiting for data
I0428 20:26:03.120652  2733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:03.122437  2726 solver.cpp:398]     Test net output #0: accuracy = 0.9335
I0428 20:26:03.122465  2726 solver.cpp:398]     Test net output #1: loss = 0.215433 (* 1 = 0.215433 loss)
I0428 20:26:03.124497  2726 solver.cpp:219] Iteration 500 (314.78 iter/s, 0.317683s/100 iters), loss = 0.191705
I0428 20:26:03.124543  2726 solver.cpp:238]     Train net output #0: loss = 0.191705 (* 1 = 0.191705 loss)
I0428 20:26:03.124552  2726 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:03.342716  2726 solver.cpp:219] Iteration 600 (458.388 iter/s, 0.218156s/100 iters), loss = 0.186551
I0428 20:26:03.342761  2726 solver.cpp:238]     Train net output #0: loss = 0.186551 (* 1 = 0.186551 loss)
I0428 20:26:03.342772  2726 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:03.552997  2726 solver.cpp:219] Iteration 700 (475.696 iter/s, 0.210218s/100 iters), loss = 0.224256
I0428 20:26:03.553040  2726 solver.cpp:238]     Train net output #0: loss = 0.224256 (* 1 = 0.224256 loss)
I0428 20:26:03.553048  2726 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:03.768453  2726 solver.cpp:219] Iteration 800 (464.256 iter/s, 0.215398s/100 iters), loss = 0.30094
I0428 20:26:03.768491  2726 solver.cpp:238]     Train net output #0: loss = 0.30094 (* 1 = 0.30094 loss)
I0428 20:26:03.768499  2726 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:03.986724  2726 solver.cpp:219] Iteration 900 (458.263 iter/s, 0.218215s/100 iters), loss = 0.217877
I0428 20:26:03.986769  2726 solver.cpp:238]     Train net output #0: loss = 0.217877 (* 1 = 0.217877 loss)
I0428 20:26:03.986780  2726 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:04.055181  2732 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:04.200721  2726 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:04.202433  2726 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:04.203541  2726 solver.cpp:311] Iteration 1000, loss = 0.202011
I0428 20:26:04.203565  2726 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:04.305234  2733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:04.306812  2726 solver.cpp:398]     Test net output #0: accuracy = 0.9602
I0428 20:26:04.306836  2726 solver.cpp:398]     Test net output #1: loss = 0.12699 (* 1 = 0.12699 loss)
I0428 20:26:04.306843  2726 solver.cpp:316] Optimization Done.
I0428 20:26:04.306848  2726 caffe.cpp:259] Optimization Done.
