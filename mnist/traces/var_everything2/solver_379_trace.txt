I0428 19:41:56.079947 24947 caffe.cpp:218] Using GPUs 0
I0428 19:41:56.114640 24947 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:56.557721 24947 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test379.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:56.557893 24947 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test379.prototxt
I0428 19:41:56.558266 24947 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:56.558285 24947 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:56.558368 24947 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:56.558454 24947 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:56.558555 24947 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:56.558583 24947 net.cpp:86] Creating Layer mnist
I0428 19:41:56.558593 24947 net.cpp:382] mnist -> data
I0428 19:41:56.558615 24947 net.cpp:382] mnist -> label
I0428 19:41:56.559612 24947 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:56.562721 24947 net.cpp:124] Setting up mnist
I0428 19:41:56.562752 24947 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:56.562775 24947 net.cpp:131] Top shape: 64 (64)
I0428 19:41:56.562785 24947 net.cpp:139] Memory required for data: 200960
I0428 19:41:56.562800 24947 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:56.562830 24947 net.cpp:86] Creating Layer conv0
I0428 19:41:56.562866 24947 net.cpp:408] conv0 <- data
I0428 19:41:56.562891 24947 net.cpp:382] conv0 -> conv0
I0428 19:41:56.879902 24947 net.cpp:124] Setting up conv0
I0428 19:41:56.879935 24947 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:56.879940 24947 net.cpp:139] Memory required for data: 495872
I0428 19:41:56.879957 24947 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:56.879973 24947 net.cpp:86] Creating Layer pool0
I0428 19:41:56.879987 24947 net.cpp:408] pool0 <- conv0
I0428 19:41:56.879993 24947 net.cpp:382] pool0 -> pool0
I0428 19:41:56.880058 24947 net.cpp:124] Setting up pool0
I0428 19:41:56.880066 24947 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:56.880070 24947 net.cpp:139] Memory required for data: 569600
I0428 19:41:56.880074 24947 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:56.880086 24947 net.cpp:86] Creating Layer conv1
I0428 19:41:56.880091 24947 net.cpp:408] conv1 <- pool0
I0428 19:41:56.880097 24947 net.cpp:382] conv1 -> conv1
I0428 19:41:56.882226 24947 net.cpp:124] Setting up conv1
I0428 19:41:56.882243 24947 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:56.882248 24947 net.cpp:139] Memory required for data: 733440
I0428 19:41:56.882258 24947 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:56.882268 24947 net.cpp:86] Creating Layer pool1
I0428 19:41:56.882280 24947 net.cpp:408] pool1 <- conv1
I0428 19:41:56.882287 24947 net.cpp:382] pool1 -> pool1
I0428 19:41:56.882330 24947 net.cpp:124] Setting up pool1
I0428 19:41:56.882339 24947 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:56.882342 24947 net.cpp:139] Memory required for data: 774400
I0428 19:41:56.882346 24947 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:56.882354 24947 net.cpp:86] Creating Layer ip1
I0428 19:41:56.882360 24947 net.cpp:408] ip1 <- pool1
I0428 19:41:56.882366 24947 net.cpp:382] ip1 -> ip1
I0428 19:41:56.883469 24947 net.cpp:124] Setting up ip1
I0428 19:41:56.883484 24947 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:56.883488 24947 net.cpp:139] Memory required for data: 780800
I0428 19:41:56.883498 24947 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:56.883505 24947 net.cpp:86] Creating Layer relu1
I0428 19:41:56.883510 24947 net.cpp:408] relu1 <- ip1
I0428 19:41:56.883515 24947 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:56.883716 24947 net.cpp:124] Setting up relu1
I0428 19:41:56.883728 24947 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:56.883731 24947 net.cpp:139] Memory required for data: 787200
I0428 19:41:56.883735 24947 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:56.883744 24947 net.cpp:86] Creating Layer ip2
I0428 19:41:56.883749 24947 net.cpp:408] ip2 <- ip1
I0428 19:41:56.883754 24947 net.cpp:382] ip2 -> ip2
I0428 19:41:56.883875 24947 net.cpp:124] Setting up ip2
I0428 19:41:56.883883 24947 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:56.883888 24947 net.cpp:139] Memory required for data: 800000
I0428 19:41:56.883893 24947 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:56.883903 24947 net.cpp:86] Creating Layer relu2
I0428 19:41:56.883908 24947 net.cpp:408] relu2 <- ip2
I0428 19:41:56.883913 24947 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:56.884793 24947 net.cpp:124] Setting up relu2
I0428 19:41:56.884816 24947 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:56.884821 24947 net.cpp:139] Memory required for data: 812800
I0428 19:41:56.884825 24947 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:56.884835 24947 net.cpp:86] Creating Layer ip3
I0428 19:41:56.884838 24947 net.cpp:408] ip3 <- ip2
I0428 19:41:56.884845 24947 net.cpp:382] ip3 -> ip3
I0428 19:41:56.885004 24947 net.cpp:124] Setting up ip3
I0428 19:41:56.885012 24947 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:56.885016 24947 net.cpp:139] Memory required for data: 815360
I0428 19:41:56.885026 24947 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:56.885033 24947 net.cpp:86] Creating Layer relu3
I0428 19:41:56.885037 24947 net.cpp:408] relu3 <- ip3
I0428 19:41:56.885042 24947 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:56.885237 24947 net.cpp:124] Setting up relu3
I0428 19:41:56.885249 24947 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:56.885253 24947 net.cpp:139] Memory required for data: 817920
I0428 19:41:56.885265 24947 layer_factory.hpp:77] Creating layer loss
I0428 19:41:56.885272 24947 net.cpp:86] Creating Layer loss
I0428 19:41:56.885277 24947 net.cpp:408] loss <- ip3
I0428 19:41:56.885282 24947 net.cpp:408] loss <- label
I0428 19:41:56.885289 24947 net.cpp:382] loss -> loss
I0428 19:41:56.885311 24947 layer_factory.hpp:77] Creating layer loss
I0428 19:41:56.885581 24947 net.cpp:124] Setting up loss
I0428 19:41:56.885591 24947 net.cpp:131] Top shape: (1)
I0428 19:41:56.885594 24947 net.cpp:134]     with loss weight 1
I0428 19:41:56.885612 24947 net.cpp:139] Memory required for data: 817924
I0428 19:41:56.885617 24947 net.cpp:200] loss needs backward computation.
I0428 19:41:56.885622 24947 net.cpp:200] relu3 needs backward computation.
I0428 19:41:56.885624 24947 net.cpp:200] ip3 needs backward computation.
I0428 19:41:56.885628 24947 net.cpp:200] relu2 needs backward computation.
I0428 19:41:56.885632 24947 net.cpp:200] ip2 needs backward computation.
I0428 19:41:56.885635 24947 net.cpp:200] relu1 needs backward computation.
I0428 19:41:56.885638 24947 net.cpp:200] ip1 needs backward computation.
I0428 19:41:56.885643 24947 net.cpp:200] pool1 needs backward computation.
I0428 19:41:56.885646 24947 net.cpp:200] conv1 needs backward computation.
I0428 19:41:56.885650 24947 net.cpp:200] pool0 needs backward computation.
I0428 19:41:56.885654 24947 net.cpp:200] conv0 needs backward computation.
I0428 19:41:56.885658 24947 net.cpp:202] mnist does not need backward computation.
I0428 19:41:56.885663 24947 net.cpp:244] This network produces output loss
I0428 19:41:56.885673 24947 net.cpp:257] Network initialization done.
I0428 19:41:56.886054 24947 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test379.prototxt
I0428 19:41:56.886086 24947 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:56.886194 24947 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:56.886288 24947 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:56.886340 24947 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:56.886354 24947 net.cpp:86] Creating Layer mnist
I0428 19:41:56.886360 24947 net.cpp:382] mnist -> data
I0428 19:41:56.886370 24947 net.cpp:382] mnist -> label
I0428 19:41:56.886471 24947 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:56.888648 24947 net.cpp:124] Setting up mnist
I0428 19:41:56.888664 24947 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:56.888670 24947 net.cpp:131] Top shape: 100 (100)
I0428 19:41:56.888674 24947 net.cpp:139] Memory required for data: 314000
I0428 19:41:56.888679 24947 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:56.888690 24947 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:56.888695 24947 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:56.888712 24947 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:56.888720 24947 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:56.888783 24947 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:56.888792 24947 net.cpp:131] Top shape: 100 (100)
I0428 19:41:56.888797 24947 net.cpp:131] Top shape: 100 (100)
I0428 19:41:56.888799 24947 net.cpp:139] Memory required for data: 314800
I0428 19:41:56.888803 24947 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:56.888819 24947 net.cpp:86] Creating Layer conv0
I0428 19:41:56.888825 24947 net.cpp:408] conv0 <- data
I0428 19:41:56.888833 24947 net.cpp:382] conv0 -> conv0
I0428 19:41:56.890813 24947 net.cpp:124] Setting up conv0
I0428 19:41:56.890830 24947 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:56.890835 24947 net.cpp:139] Memory required for data: 775600
I0428 19:41:56.890846 24947 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:56.890854 24947 net.cpp:86] Creating Layer pool0
I0428 19:41:56.890859 24947 net.cpp:408] pool0 <- conv0
I0428 19:41:56.890864 24947 net.cpp:382] pool0 -> pool0
I0428 19:41:56.890909 24947 net.cpp:124] Setting up pool0
I0428 19:41:56.890918 24947 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:56.890920 24947 net.cpp:139] Memory required for data: 890800
I0428 19:41:56.890924 24947 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:56.890944 24947 net.cpp:86] Creating Layer conv1
I0428 19:41:56.890949 24947 net.cpp:408] conv1 <- pool0
I0428 19:41:56.890955 24947 net.cpp:382] conv1 -> conv1
I0428 19:41:56.892716 24947 net.cpp:124] Setting up conv1
I0428 19:41:56.892732 24947 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:56.892738 24947 net.cpp:139] Memory required for data: 1146800
I0428 19:41:56.892748 24947 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:56.892756 24947 net.cpp:86] Creating Layer pool1
I0428 19:41:56.892760 24947 net.cpp:408] pool1 <- conv1
I0428 19:41:56.892767 24947 net.cpp:382] pool1 -> pool1
I0428 19:41:56.892819 24947 net.cpp:124] Setting up pool1
I0428 19:41:56.892828 24947 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:56.892832 24947 net.cpp:139] Memory required for data: 1210800
I0428 19:41:56.892837 24947 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:56.892853 24947 net.cpp:86] Creating Layer ip1
I0428 19:41:56.892871 24947 net.cpp:408] ip1 <- pool1
I0428 19:41:56.892879 24947 net.cpp:382] ip1 -> ip1
I0428 19:41:56.893033 24947 net.cpp:124] Setting up ip1
I0428 19:41:56.893041 24947 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:56.893059 24947 net.cpp:139] Memory required for data: 1220800
I0428 19:41:56.893069 24947 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:56.893077 24947 net.cpp:86] Creating Layer relu1
I0428 19:41:56.893084 24947 net.cpp:408] relu1 <- ip1
I0428 19:41:56.893088 24947 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:56.893298 24947 net.cpp:124] Setting up relu1
I0428 19:41:56.893308 24947 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:56.893312 24947 net.cpp:139] Memory required for data: 1230800
I0428 19:41:56.893317 24947 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:56.893326 24947 net.cpp:86] Creating Layer ip2
I0428 19:41:56.893339 24947 net.cpp:408] ip2 <- ip1
I0428 19:41:56.893347 24947 net.cpp:382] ip2 -> ip2
I0428 19:41:56.893503 24947 net.cpp:124] Setting up ip2
I0428 19:41:56.893512 24947 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:56.893515 24947 net.cpp:139] Memory required for data: 1250800
I0428 19:41:56.893522 24947 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:56.893530 24947 net.cpp:86] Creating Layer relu2
I0428 19:41:56.893535 24947 net.cpp:408] relu2 <- ip2
I0428 19:41:56.893540 24947 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:56.893836 24947 net.cpp:124] Setting up relu2
I0428 19:41:56.893846 24947 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:56.893849 24947 net.cpp:139] Memory required for data: 1270800
I0428 19:41:56.893853 24947 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:56.893860 24947 net.cpp:86] Creating Layer ip3
I0428 19:41:56.893874 24947 net.cpp:408] ip3 <- ip2
I0428 19:41:56.893882 24947 net.cpp:382] ip3 -> ip3
I0428 19:41:56.894004 24947 net.cpp:124] Setting up ip3
I0428 19:41:56.894012 24947 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:56.894016 24947 net.cpp:139] Memory required for data: 1274800
I0428 19:41:56.894024 24947 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:56.894032 24947 net.cpp:86] Creating Layer relu3
I0428 19:41:56.894035 24947 net.cpp:408] relu3 <- ip3
I0428 19:41:56.894040 24947 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:56.894979 24947 net.cpp:124] Setting up relu3
I0428 19:41:56.894992 24947 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:56.894997 24947 net.cpp:139] Memory required for data: 1278800
I0428 19:41:56.895000 24947 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:56.895007 24947 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:56.895011 24947 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:56.895018 24947 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:56.895026 24947 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:56.895081 24947 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:56.895092 24947 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:56.895097 24947 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:56.895102 24947 net.cpp:139] Memory required for data: 1286800
I0428 19:41:56.895105 24947 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:56.895112 24947 net.cpp:86] Creating Layer accuracy
I0428 19:41:56.895117 24947 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:56.895122 24947 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:56.895134 24947 net.cpp:382] accuracy -> accuracy
I0428 19:41:56.895143 24947 net.cpp:124] Setting up accuracy
I0428 19:41:56.895148 24947 net.cpp:131] Top shape: (1)
I0428 19:41:56.895153 24947 net.cpp:139] Memory required for data: 1286804
I0428 19:41:56.895155 24947 layer_factory.hpp:77] Creating layer loss
I0428 19:41:56.895169 24947 net.cpp:86] Creating Layer loss
I0428 19:41:56.895174 24947 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:56.895179 24947 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:56.895184 24947 net.cpp:382] loss -> loss
I0428 19:41:56.895191 24947 layer_factory.hpp:77] Creating layer loss
I0428 19:41:56.895485 24947 net.cpp:124] Setting up loss
I0428 19:41:56.895496 24947 net.cpp:131] Top shape: (1)
I0428 19:41:56.895499 24947 net.cpp:134]     with loss weight 1
I0428 19:41:56.895509 24947 net.cpp:139] Memory required for data: 1286808
I0428 19:41:56.895525 24947 net.cpp:200] loss needs backward computation.
I0428 19:41:56.895530 24947 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:56.895536 24947 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:56.895539 24947 net.cpp:200] relu3 needs backward computation.
I0428 19:41:56.895543 24947 net.cpp:200] ip3 needs backward computation.
I0428 19:41:56.895546 24947 net.cpp:200] relu2 needs backward computation.
I0428 19:41:56.895550 24947 net.cpp:200] ip2 needs backward computation.
I0428 19:41:56.895553 24947 net.cpp:200] relu1 needs backward computation.
I0428 19:41:56.895557 24947 net.cpp:200] ip1 needs backward computation.
I0428 19:41:56.895560 24947 net.cpp:200] pool1 needs backward computation.
I0428 19:41:56.895565 24947 net.cpp:200] conv1 needs backward computation.
I0428 19:41:56.895567 24947 net.cpp:200] pool0 needs backward computation.
I0428 19:41:56.895571 24947 net.cpp:200] conv0 needs backward computation.
I0428 19:41:56.895576 24947 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:56.895583 24947 net.cpp:202] mnist does not need backward computation.
I0428 19:41:56.895586 24947 net.cpp:244] This network produces output accuracy
I0428 19:41:56.895591 24947 net.cpp:244] This network produces output loss
I0428 19:41:56.895604 24947 net.cpp:257] Network initialization done.
I0428 19:41:56.895656 24947 solver.cpp:56] Solver scaffolding done.
I0428 19:41:56.896106 24947 caffe.cpp:248] Starting Optimization
I0428 19:41:56.896113 24947 solver.cpp:273] Solving LeNet
I0428 19:41:56.896116 24947 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:56.897125 24947 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:56.900059 24947 blocking_queue.cpp:49] Waiting for data
I0428 19:41:56.970659 24954 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:56.971158 24947 solver.cpp:398]     Test net output #0: accuracy = 0.1046
I0428 19:41:56.971181 24947 solver.cpp:398]     Test net output #1: loss = 2.31699 (* 1 = 2.31699 loss)
I0428 19:41:56.973309 24947 solver.cpp:219] Iteration 0 (-1.05378e-42 iter/s, 0.0771564s/100 iters), loss = 2.29854
I0428 19:41:56.973340 24947 solver.cpp:238]     Train net output #0: loss = 2.29854 (* 1 = 2.29854 loss)
I0428 19:41:56.973354 24947 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:57.054136 24947 solver.cpp:219] Iteration 100 (1237.91 iter/s, 0.0807815s/100 iters), loss = 1.3864
I0428 19:41:57.054167 24947 solver.cpp:238]     Train net output #0: loss = 1.3864 (* 1 = 1.3864 loss)
I0428 19:41:57.054175 24947 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:57.134081 24947 solver.cpp:219] Iteration 200 (1251.54 iter/s, 0.0799015s/100 iters), loss = 0.8376
I0428 19:41:57.134111 24947 solver.cpp:238]     Train net output #0: loss = 0.8376 (* 1 = 0.8376 loss)
I0428 19:41:57.134119 24947 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:57.214005 24947 solver.cpp:219] Iteration 300 (1251.83 iter/s, 0.0798833s/100 iters), loss = 0.801207
I0428 19:41:57.214035 24947 solver.cpp:238]     Train net output #0: loss = 0.801207 (* 1 = 0.801207 loss)
I0428 19:41:57.214042 24947 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:57.291653 24947 solver.cpp:219] Iteration 400 (1288.49 iter/s, 0.07761s/100 iters), loss = 0.41952
I0428 19:41:57.291681 24947 solver.cpp:238]     Train net output #0: loss = 0.41952 (* 1 = 0.41952 loss)
I0428 19:41:57.291687 24947 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:57.364595 24947 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:57.417256 24954 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:57.417754 24947 solver.cpp:398]     Test net output #0: accuracy = 0.8516
I0428 19:41:57.417791 24947 solver.cpp:398]     Test net output #1: loss = 0.413057 (* 1 = 0.413057 loss)
I0428 19:41:57.418648 24947 solver.cpp:219] Iteration 500 (787.69 iter/s, 0.126953s/100 iters), loss = 0.291895
I0428 19:41:57.418673 24947 solver.cpp:238]     Train net output #0: loss = 0.291895 (* 1 = 0.291895 loss)
I0428 19:41:57.418696 24947 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:57.495436 24947 solver.cpp:219] Iteration 600 (1302.88 iter/s, 0.0767529s/100 iters), loss = 0.239002
I0428 19:41:57.495479 24947 solver.cpp:238]     Train net output #0: loss = 0.239002 (* 1 = 0.239002 loss)
I0428 19:41:57.495486 24947 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:57.571485 24947 solver.cpp:219] Iteration 700 (1315.86 iter/s, 0.0759962s/100 iters), loss = 0.223083
I0428 19:41:57.571527 24947 solver.cpp:238]     Train net output #0: loss = 0.223083 (* 1 = 0.223083 loss)
I0428 19:41:57.571533 24947 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:57.646342 24947 solver.cpp:219] Iteration 800 (1337.08 iter/s, 0.0747899s/100 iters), loss = 0.38082
I0428 19:41:57.646385 24947 solver.cpp:238]     Train net output #0: loss = 0.38082 (* 1 = 0.38082 loss)
I0428 19:41:57.646392 24947 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:57.721305 24947 solver.cpp:219] Iteration 900 (1334.98 iter/s, 0.0749076s/100 iters), loss = 0.258793
I0428 19:41:57.721348 24947 solver.cpp:238]     Train net output #0: loss = 0.258793 (* 1 = 0.258793 loss)
I0428 19:41:57.721354 24947 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:57.746527 24953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:57.796069 24947 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:57.796845 24947 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:57.797343 24947 solver.cpp:311] Iteration 1000, loss = 0.162442
I0428 19:41:57.797358 24947 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:57.871608 24954 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:57.872087 24947 solver.cpp:398]     Test net output #0: accuracy = 0.9603
I0428 19:41:57.872120 24947 solver.cpp:398]     Test net output #1: loss = 0.118477 (* 1 = 0.118477 loss)
I0428 19:41:57.872125 24947 solver.cpp:316] Optimization Done.
I0428 19:41:57.872128 24947 caffe.cpp:259] Optimization Done.
