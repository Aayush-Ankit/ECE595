I0428 19:29:14.018669 21961 caffe.cpp:218] Using GPUs 0
I0428 19:29:14.058691 21961 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:14.576469 21961 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test52.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:14.576609 21961 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test52.prototxt
I0428 19:29:14.576989 21961 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:14.577008 21961 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:14.577097 21961 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:14.577172 21961 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:14.577271 21961 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:14.577296 21961 net.cpp:86] Creating Layer mnist
I0428 19:29:14.577303 21961 net.cpp:382] mnist -> data
I0428 19:29:14.577327 21961 net.cpp:382] mnist -> label
I0428 19:29:14.578413 21961 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:14.580875 21961 net.cpp:124] Setting up mnist
I0428 19:29:14.580909 21961 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:14.580916 21961 net.cpp:131] Top shape: 64 (64)
I0428 19:29:14.580920 21961 net.cpp:139] Memory required for data: 200960
I0428 19:29:14.580929 21961 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:14.580945 21961 net.cpp:86] Creating Layer conv0
I0428 19:29:14.580950 21961 net.cpp:408] conv0 <- data
I0428 19:29:14.580961 21961 net.cpp:382] conv0 -> conv0
I0428 19:29:14.866544 21961 net.cpp:124] Setting up conv0
I0428 19:29:14.866569 21961 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:14.866575 21961 net.cpp:139] Memory required for data: 495872
I0428 19:29:14.866590 21961 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:14.866603 21961 net.cpp:86] Creating Layer pool0
I0428 19:29:14.866626 21961 net.cpp:408] pool0 <- conv0
I0428 19:29:14.866631 21961 net.cpp:382] pool0 -> pool0
I0428 19:29:14.866680 21961 net.cpp:124] Setting up pool0
I0428 19:29:14.866696 21961 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:14.866699 21961 net.cpp:139] Memory required for data: 569600
I0428 19:29:14.866703 21961 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:14.866711 21961 net.cpp:86] Creating Layer ip1
I0428 19:29:14.866714 21961 net.cpp:408] ip1 <- pool0
I0428 19:29:14.866719 21961 net.cpp:382] ip1 -> ip1
I0428 19:29:14.867671 21961 net.cpp:124] Setting up ip1
I0428 19:29:14.867684 21961 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:14.867688 21961 net.cpp:139] Memory required for data: 572160
I0428 19:29:14.867697 21961 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:14.867703 21961 net.cpp:86] Creating Layer relu1
I0428 19:29:14.867707 21961 net.cpp:408] relu1 <- ip1
I0428 19:29:14.867712 21961 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:14.867899 21961 net.cpp:124] Setting up relu1
I0428 19:29:14.867908 21961 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:14.867913 21961 net.cpp:139] Memory required for data: 574720
I0428 19:29:14.867915 21961 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:14.867923 21961 net.cpp:86] Creating Layer ip2
I0428 19:29:14.867926 21961 net.cpp:408] ip2 <- ip1
I0428 19:29:14.867931 21961 net.cpp:382] ip2 -> ip2
I0428 19:29:14.868028 21961 net.cpp:124] Setting up ip2
I0428 19:29:14.868036 21961 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:14.868038 21961 net.cpp:139] Memory required for data: 577280
I0428 19:29:14.868046 21961 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:14.868052 21961 net.cpp:86] Creating Layer relu2
I0428 19:29:14.868055 21961 net.cpp:408] relu2 <- ip2
I0428 19:29:14.868060 21961 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:14.868808 21961 net.cpp:124] Setting up relu2
I0428 19:29:14.868827 21961 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:14.868847 21961 net.cpp:139] Memory required for data: 579840
I0428 19:29:14.868851 21961 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:14.868860 21961 net.cpp:86] Creating Layer ip3
I0428 19:29:14.868862 21961 net.cpp:408] ip3 <- ip2
I0428 19:29:14.868885 21961 net.cpp:382] ip3 -> ip3
I0428 19:29:14.868990 21961 net.cpp:124] Setting up ip3
I0428 19:29:14.868999 21961 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:14.869002 21961 net.cpp:139] Memory required for data: 582400
I0428 19:29:14.869009 21961 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:14.869017 21961 net.cpp:86] Creating Layer relu3
I0428 19:29:14.869021 21961 net.cpp:408] relu3 <- ip3
I0428 19:29:14.869025 21961 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:14.869207 21961 net.cpp:124] Setting up relu3
I0428 19:29:14.869215 21961 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:14.869220 21961 net.cpp:139] Memory required for data: 584960
I0428 19:29:14.869222 21961 layer_factory.hpp:77] Creating layer loss
I0428 19:29:14.869228 21961 net.cpp:86] Creating Layer loss
I0428 19:29:14.869231 21961 net.cpp:408] loss <- ip3
I0428 19:29:14.869235 21961 net.cpp:408] loss <- label
I0428 19:29:14.869241 21961 net.cpp:382] loss -> loss
I0428 19:29:14.869256 21961 layer_factory.hpp:77] Creating layer loss
I0428 19:29:14.869499 21961 net.cpp:124] Setting up loss
I0428 19:29:14.869508 21961 net.cpp:131] Top shape: (1)
I0428 19:29:14.869511 21961 net.cpp:134]     with loss weight 1
I0428 19:29:14.869525 21961 net.cpp:139] Memory required for data: 584964
I0428 19:29:14.869529 21961 net.cpp:200] loss needs backward computation.
I0428 19:29:14.869534 21961 net.cpp:200] relu3 needs backward computation.
I0428 19:29:14.869536 21961 net.cpp:200] ip3 needs backward computation.
I0428 19:29:14.869539 21961 net.cpp:200] relu2 needs backward computation.
I0428 19:29:14.869542 21961 net.cpp:200] ip2 needs backward computation.
I0428 19:29:14.869545 21961 net.cpp:200] relu1 needs backward computation.
I0428 19:29:14.869547 21961 net.cpp:200] ip1 needs backward computation.
I0428 19:29:14.869561 21961 net.cpp:200] pool0 needs backward computation.
I0428 19:29:14.869565 21961 net.cpp:200] conv0 needs backward computation.
I0428 19:29:14.869568 21961 net.cpp:202] mnist does not need backward computation.
I0428 19:29:14.869571 21961 net.cpp:244] This network produces output loss
I0428 19:29:14.869580 21961 net.cpp:257] Network initialization done.
I0428 19:29:14.869870 21961 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test52.prototxt
I0428 19:29:14.869912 21961 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:14.869997 21961 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:14.870060 21961 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:14.870106 21961 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:14.870136 21961 net.cpp:86] Creating Layer mnist
I0428 19:29:14.870141 21961 net.cpp:382] mnist -> data
I0428 19:29:14.870148 21961 net.cpp:382] mnist -> label
I0428 19:29:14.870232 21961 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:14.872150 21961 net.cpp:124] Setting up mnist
I0428 19:29:14.872164 21961 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:14.872186 21961 net.cpp:131] Top shape: 100 (100)
I0428 19:29:14.872189 21961 net.cpp:139] Memory required for data: 314000
I0428 19:29:14.872193 21961 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:14.872200 21961 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:14.872203 21961 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:14.872208 21961 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:14.872215 21961 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:14.872258 21961 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:14.872264 21961 net.cpp:131] Top shape: 100 (100)
I0428 19:29:14.872268 21961 net.cpp:131] Top shape: 100 (100)
I0428 19:29:14.872272 21961 net.cpp:139] Memory required for data: 314800
I0428 19:29:14.872299 21961 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:14.872308 21961 net.cpp:86] Creating Layer conv0
I0428 19:29:14.872311 21961 net.cpp:408] conv0 <- data
I0428 19:29:14.872316 21961 net.cpp:382] conv0 -> conv0
I0428 19:29:14.874042 21961 net.cpp:124] Setting up conv0
I0428 19:29:14.874058 21961 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:14.874061 21961 net.cpp:139] Memory required for data: 775600
I0428 19:29:14.874070 21961 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:14.874076 21961 net.cpp:86] Creating Layer pool0
I0428 19:29:14.874079 21961 net.cpp:408] pool0 <- conv0
I0428 19:29:14.874086 21961 net.cpp:382] pool0 -> pool0
I0428 19:29:14.874121 21961 net.cpp:124] Setting up pool0
I0428 19:29:14.874127 21961 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:14.874130 21961 net.cpp:139] Memory required for data: 890800
I0428 19:29:14.874133 21961 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:14.874140 21961 net.cpp:86] Creating Layer ip1
I0428 19:29:14.874142 21961 net.cpp:408] ip1 <- pool0
I0428 19:29:14.874147 21961 net.cpp:382] ip1 -> ip1
I0428 19:29:14.874254 21961 net.cpp:124] Setting up ip1
I0428 19:29:14.874263 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.874265 21961 net.cpp:139] Memory required for data: 894800
I0428 19:29:14.874272 21961 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:14.874277 21961 net.cpp:86] Creating Layer relu1
I0428 19:29:14.874280 21961 net.cpp:408] relu1 <- ip1
I0428 19:29:14.874284 21961 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:14.874444 21961 net.cpp:124] Setting up relu1
I0428 19:29:14.874452 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.874456 21961 net.cpp:139] Memory required for data: 898800
I0428 19:29:14.874459 21961 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:14.874464 21961 net.cpp:86] Creating Layer ip2
I0428 19:29:14.874467 21961 net.cpp:408] ip2 <- ip1
I0428 19:29:14.874472 21961 net.cpp:382] ip2 -> ip2
I0428 19:29:14.874565 21961 net.cpp:124] Setting up ip2
I0428 19:29:14.874572 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.874577 21961 net.cpp:139] Memory required for data: 902800
I0428 19:29:14.874583 21961 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:14.874588 21961 net.cpp:86] Creating Layer relu2
I0428 19:29:14.874591 21961 net.cpp:408] relu2 <- ip2
I0428 19:29:14.874594 21961 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:14.875447 21961 net.cpp:124] Setting up relu2
I0428 19:29:14.875475 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.875479 21961 net.cpp:139] Memory required for data: 906800
I0428 19:29:14.875483 21961 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:14.875490 21961 net.cpp:86] Creating Layer ip3
I0428 19:29:14.875494 21961 net.cpp:408] ip3 <- ip2
I0428 19:29:14.875500 21961 net.cpp:382] ip3 -> ip3
I0428 19:29:14.875648 21961 net.cpp:124] Setting up ip3
I0428 19:29:14.875656 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.875660 21961 net.cpp:139] Memory required for data: 910800
I0428 19:29:14.875666 21961 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:14.875672 21961 net.cpp:86] Creating Layer relu3
I0428 19:29:14.875675 21961 net.cpp:408] relu3 <- ip3
I0428 19:29:14.875685 21961 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:14.875872 21961 net.cpp:124] Setting up relu3
I0428 19:29:14.875882 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.875885 21961 net.cpp:139] Memory required for data: 914800
I0428 19:29:14.875890 21961 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:14.875895 21961 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:14.875897 21961 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:14.875902 21961 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:14.875907 21961 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:14.875942 21961 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:14.875949 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.875953 21961 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:14.875967 21961 net.cpp:139] Memory required for data: 922800
I0428 19:29:14.875972 21961 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:14.875977 21961 net.cpp:86] Creating Layer accuracy
I0428 19:29:14.875980 21961 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:14.875984 21961 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:14.875989 21961 net.cpp:382] accuracy -> accuracy
I0428 19:29:14.875996 21961 net.cpp:124] Setting up accuracy
I0428 19:29:14.876000 21961 net.cpp:131] Top shape: (1)
I0428 19:29:14.876003 21961 net.cpp:139] Memory required for data: 922804
I0428 19:29:14.876006 21961 layer_factory.hpp:77] Creating layer loss
I0428 19:29:14.876010 21961 net.cpp:86] Creating Layer loss
I0428 19:29:14.876013 21961 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:14.876018 21961 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:14.876022 21961 net.cpp:382] loss -> loss
I0428 19:29:14.876029 21961 layer_factory.hpp:77] Creating layer loss
I0428 19:29:14.876273 21961 net.cpp:124] Setting up loss
I0428 19:29:14.876283 21961 net.cpp:131] Top shape: (1)
I0428 19:29:14.876287 21961 net.cpp:134]     with loss weight 1
I0428 19:29:14.876296 21961 net.cpp:139] Memory required for data: 922808
I0428 19:29:14.876298 21961 net.cpp:200] loss needs backward computation.
I0428 19:29:14.876302 21961 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:14.876307 21961 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:14.876310 21961 net.cpp:200] relu3 needs backward computation.
I0428 19:29:14.876320 21961 net.cpp:200] ip3 needs backward computation.
I0428 19:29:14.876323 21961 net.cpp:200] relu2 needs backward computation.
I0428 19:29:14.876327 21961 net.cpp:200] ip2 needs backward computation.
I0428 19:29:14.876330 21961 net.cpp:200] relu1 needs backward computation.
I0428 19:29:14.876334 21961 net.cpp:200] ip1 needs backward computation.
I0428 19:29:14.876338 21961 net.cpp:200] pool0 needs backward computation.
I0428 19:29:14.876340 21961 net.cpp:200] conv0 needs backward computation.
I0428 19:29:14.876345 21961 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:14.876349 21961 net.cpp:202] mnist does not need backward computation.
I0428 19:29:14.876353 21961 net.cpp:244] This network produces output accuracy
I0428 19:29:14.876356 21961 net.cpp:244] This network produces output loss
I0428 19:29:14.876366 21961 net.cpp:257] Network initialization done.
I0428 19:29:14.876404 21961 solver.cpp:56] Solver scaffolding done.
I0428 19:29:14.876770 21961 caffe.cpp:248] Starting Optimization
I0428 19:29:14.876775 21961 solver.cpp:273] Solving LeNet
I0428 19:29:14.876778 21961 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:14.877658 21961 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:14.879817 21961 blocking_queue.cpp:49] Waiting for data
I0428 19:29:14.951273 21972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:14.951717 21961 solver.cpp:398]     Test net output #0: accuracy = 0.0975
I0428 19:29:14.951746 21961 solver.cpp:398]     Test net output #1: loss = 2.33402 (* 1 = 2.33402 loss)
I0428 19:29:14.953447 21961 solver.cpp:219] Iteration 0 (0 iter/s, 0.0766299s/100 iters), loss = 2.35206
I0428 19:29:14.953487 21961 solver.cpp:238]     Train net output #0: loss = 2.35206 (* 1 = 2.35206 loss)
I0428 19:29:14.953500 21961 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:15.010576 21961 solver.cpp:219] Iteration 100 (1751.63 iter/s, 0.0570897s/100 iters), loss = 1.40593
I0428 19:29:15.010623 21961 solver.cpp:238]     Train net output #0: loss = 1.40593 (* 1 = 1.40593 loss)
I0428 19:29:15.010630 21961 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:15.066210 21961 solver.cpp:219] Iteration 200 (1799.22 iter/s, 0.0555798s/100 iters), loss = 1.21847
I0428 19:29:15.066263 21961 solver.cpp:238]     Train net output #0: loss = 1.21847 (* 1 = 1.21847 loss)
I0428 19:29:15.066270 21961 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:15.121762 21961 solver.cpp:219] Iteration 300 (1802.53 iter/s, 0.0554777s/100 iters), loss = 0.859866
I0428 19:29:15.121814 21961 solver.cpp:238]     Train net output #0: loss = 0.859866 (* 1 = 0.859866 loss)
I0428 19:29:15.121821 21961 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:15.177019 21961 solver.cpp:219] Iteration 400 (1811.64 iter/s, 0.0551987s/100 iters), loss = 1.23984
I0428 19:29:15.177058 21961 solver.cpp:238]     Train net output #0: loss = 1.23984 (* 1 = 1.23984 loss)
I0428 19:29:15.177064 21961 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:15.231626 21961 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:15.306293 21972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:15.306802 21961 solver.cpp:398]     Test net output #0: accuracy = 0.7162
I0428 19:29:15.306836 21961 solver.cpp:398]     Test net output #1: loss = 0.963095 (* 1 = 0.963095 loss)
I0428 19:29:15.307600 21961 solver.cpp:219] Iteration 500 (766.135 iter/s, 0.130525s/100 iters), loss = 1.21893
I0428 19:29:15.307636 21961 solver.cpp:238]     Train net output #0: loss = 1.21893 (* 1 = 1.21893 loss)
I0428 19:29:15.307646 21961 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:15.376103 21961 solver.cpp:219] Iteration 600 (1460.65 iter/s, 0.0684627s/100 iters), loss = 0.659368
I0428 19:29:15.376133 21961 solver.cpp:238]     Train net output #0: loss = 0.659368 (* 1 = 0.659368 loss)
I0428 19:29:15.376142 21961 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:15.433959 21961 solver.cpp:219] Iteration 700 (1729.59 iter/s, 0.0578171s/100 iters), loss = 1.30757
I0428 19:29:15.433984 21961 solver.cpp:238]     Train net output #0: loss = 1.30757 (* 1 = 1.30757 loss)
I0428 19:29:15.433990 21961 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:15.488858 21961 solver.cpp:219] Iteration 800 (1822.56 iter/s, 0.0548677s/100 iters), loss = 0.779558
I0428 19:29:15.488898 21961 solver.cpp:238]     Train net output #0: loss = 0.779558 (* 1 = 0.779558 loss)
I0428 19:29:15.488904 21961 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:15.543805 21961 solver.cpp:219] Iteration 900 (1821.44 iter/s, 0.0549017s/100 iters), loss = 0.741754
I0428 19:29:15.543844 21961 solver.cpp:238]     Train net output #0: loss = 0.741754 (* 1 = 0.741754 loss)
I0428 19:29:15.543851 21961 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:15.562564 21969 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:15.599257 21961 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:15.599853 21961 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:15.600235 21961 solver.cpp:311] Iteration 1000, loss = 0.814072
I0428 19:29:15.600257 21961 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:15.656081 21972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:15.656513 21961 solver.cpp:398]     Test net output #0: accuracy = 0.8034
I0428 19:29:15.656533 21961 solver.cpp:398]     Test net output #1: loss = 0.691084 (* 1 = 0.691084 loss)
I0428 19:29:15.656538 21961 solver.cpp:316] Optimization Done.
I0428 19:29:15.656540 21961 caffe.cpp:259] Optimization Done.
