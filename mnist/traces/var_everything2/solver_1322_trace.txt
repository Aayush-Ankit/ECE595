I0428 20:18:35.175268  1169 caffe.cpp:218] Using GPUs 0
I0428 20:18:35.206207  1169 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:35.656942  1169 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1322.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:35.657078  1169 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1322.prototxt
I0428 20:18:35.657635  1169 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:35.657672  1169 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:35.657810  1169 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:35.657898  1169 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:35.658037  1169 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:35.658071  1169 net.cpp:86] Creating Layer mnist
I0428 20:18:35.658082  1169 net.cpp:382] mnist -> data
I0428 20:18:35.658119  1169 net.cpp:382] mnist -> label
I0428 20:18:35.659545  1169 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:35.662127  1169 net.cpp:124] Setting up mnist
I0428 20:18:35.662158  1169 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:35.662163  1169 net.cpp:131] Top shape: 64 (64)
I0428 20:18:35.662166  1169 net.cpp:139] Memory required for data: 200960
I0428 20:18:35.662171  1169 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:35.662189  1169 net.cpp:86] Creating Layer conv0
I0428 20:18:35.662212  1169 net.cpp:408] conv0 <- data
I0428 20:18:35.662230  1169 net.cpp:382] conv0 -> conv0
I0428 20:18:35.898782  1169 net.cpp:124] Setting up conv0
I0428 20:18:35.898808  1169 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:35.898813  1169 net.cpp:139] Memory required for data: 7573760
I0428 20:18:35.898828  1169 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:35.898844  1169 net.cpp:86] Creating Layer pool0
I0428 20:18:35.898849  1169 net.cpp:408] pool0 <- conv0
I0428 20:18:35.898856  1169 net.cpp:382] pool0 -> pool0
I0428 20:18:35.898916  1169 net.cpp:124] Setting up pool0
I0428 20:18:35.898926  1169 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:35.898931  1169 net.cpp:139] Memory required for data: 9416960
I0428 20:18:35.898936  1169 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:35.898950  1169 net.cpp:86] Creating Layer conv1
I0428 20:18:35.898955  1169 net.cpp:408] conv1 <- pool0
I0428 20:18:35.898963  1169 net.cpp:382] conv1 -> conv1
I0428 20:18:35.902310  1169 net.cpp:124] Setting up conv1
I0428 20:18:35.902340  1169 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:35.902343  1169 net.cpp:139] Memory required for data: 9580800
I0428 20:18:35.902354  1169 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:35.902361  1169 net.cpp:86] Creating Layer pool1
I0428 20:18:35.902364  1169 net.cpp:408] pool1 <- conv1
I0428 20:18:35.902369  1169 net.cpp:382] pool1 -> pool1
I0428 20:18:35.902420  1169 net.cpp:124] Setting up pool1
I0428 20:18:35.902429  1169 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:35.902434  1169 net.cpp:139] Memory required for data: 9621760
I0428 20:18:35.902438  1169 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:35.902449  1169 net.cpp:86] Creating Layer ip1
I0428 20:18:35.902453  1169 net.cpp:408] ip1 <- pool1
I0428 20:18:35.902462  1169 net.cpp:382] ip1 -> ip1
I0428 20:18:35.902671  1169 net.cpp:124] Setting up ip1
I0428 20:18:35.902683  1169 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:35.902688  1169 net.cpp:139] Memory required for data: 9634560
I0428 20:18:35.902698  1169 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:35.902709  1169 net.cpp:86] Creating Layer relu1
I0428 20:18:35.902714  1169 net.cpp:408] relu1 <- ip1
I0428 20:18:35.902719  1169 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:35.902945  1169 net.cpp:124] Setting up relu1
I0428 20:18:35.902956  1169 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:35.902961  1169 net.cpp:139] Memory required for data: 9647360
I0428 20:18:35.902966  1169 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:35.902976  1169 net.cpp:86] Creating Layer ip2
I0428 20:18:35.902981  1169 net.cpp:408] ip2 <- ip1
I0428 20:18:35.902988  1169 net.cpp:382] ip2 -> ip2
I0428 20:18:35.903136  1169 net.cpp:124] Setting up ip2
I0428 20:18:35.903146  1169 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:35.903151  1169 net.cpp:139] Memory required for data: 9653760
I0428 20:18:35.903159  1169 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:35.903170  1169 net.cpp:86] Creating Layer relu2
I0428 20:18:35.903175  1169 net.cpp:408] relu2 <- ip2
I0428 20:18:35.903182  1169 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:35.904328  1169 net.cpp:124] Setting up relu2
I0428 20:18:35.904361  1169 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:35.904366  1169 net.cpp:139] Memory required for data: 9660160
I0428 20:18:35.904372  1169 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:35.904391  1169 net.cpp:86] Creating Layer ip3
I0428 20:18:35.904397  1169 net.cpp:408] ip3 <- ip2
I0428 20:18:35.904407  1169 net.cpp:382] ip3 -> ip3
I0428 20:18:35.904572  1169 net.cpp:124] Setting up ip3
I0428 20:18:35.904583  1169 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:35.904588  1169 net.cpp:139] Memory required for data: 9662720
I0428 20:18:35.904602  1169 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:35.904608  1169 net.cpp:86] Creating Layer relu3
I0428 20:18:35.904614  1169 net.cpp:408] relu3 <- ip3
I0428 20:18:35.904620  1169 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:35.904934  1169 net.cpp:124] Setting up relu3
I0428 20:18:35.904948  1169 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:35.904953  1169 net.cpp:139] Memory required for data: 9665280
I0428 20:18:35.904959  1169 layer_factory.hpp:77] Creating layer loss
I0428 20:18:35.904968  1169 net.cpp:86] Creating Layer loss
I0428 20:18:35.904974  1169 net.cpp:408] loss <- ip3
I0428 20:18:35.904981  1169 net.cpp:408] loss <- label
I0428 20:18:35.904990  1169 net.cpp:382] loss -> loss
I0428 20:18:35.905011  1169 layer_factory.hpp:77] Creating layer loss
I0428 20:18:35.905457  1169 net.cpp:124] Setting up loss
I0428 20:18:35.905470  1169 net.cpp:131] Top shape: (1)
I0428 20:18:35.905491  1169 net.cpp:134]     with loss weight 1
I0428 20:18:35.905510  1169 net.cpp:139] Memory required for data: 9665284
I0428 20:18:35.905516  1169 net.cpp:200] loss needs backward computation.
I0428 20:18:35.905522  1169 net.cpp:200] relu3 needs backward computation.
I0428 20:18:35.905527  1169 net.cpp:200] ip3 needs backward computation.
I0428 20:18:35.905532  1169 net.cpp:200] relu2 needs backward computation.
I0428 20:18:35.905537  1169 net.cpp:200] ip2 needs backward computation.
I0428 20:18:35.905542  1169 net.cpp:200] relu1 needs backward computation.
I0428 20:18:35.905547  1169 net.cpp:200] ip1 needs backward computation.
I0428 20:18:35.905566  1169 net.cpp:200] pool1 needs backward computation.
I0428 20:18:35.905571  1169 net.cpp:200] conv1 needs backward computation.
I0428 20:18:35.905576  1169 net.cpp:200] pool0 needs backward computation.
I0428 20:18:35.905581  1169 net.cpp:200] conv0 needs backward computation.
I0428 20:18:35.905587  1169 net.cpp:202] mnist does not need backward computation.
I0428 20:18:35.905591  1169 net.cpp:244] This network produces output loss
I0428 20:18:35.905607  1169 net.cpp:257] Network initialization done.
I0428 20:18:35.906158  1169 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1322.prototxt
I0428 20:18:35.906201  1169 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:35.906371  1169 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:35.906528  1169 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:35.906618  1169 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:35.906636  1169 net.cpp:86] Creating Layer mnist
I0428 20:18:35.906644  1169 net.cpp:382] mnist -> data
I0428 20:18:35.906656  1169 net.cpp:382] mnist -> label
I0428 20:18:35.906780  1169 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:35.909487  1169 net.cpp:124] Setting up mnist
I0428 20:18:35.909500  1169 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:35.909514  1169 net.cpp:131] Top shape: 100 (100)
I0428 20:18:35.909518  1169 net.cpp:139] Memory required for data: 314000
I0428 20:18:35.909521  1169 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:35.909530  1169 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:35.909536  1169 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:35.909543  1169 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:35.909554  1169 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:35.909682  1169 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:35.909694  1169 net.cpp:131] Top shape: 100 (100)
I0428 20:18:35.909700  1169 net.cpp:131] Top shape: 100 (100)
I0428 20:18:35.909706  1169 net.cpp:139] Memory required for data: 314800
I0428 20:18:35.909711  1169 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:35.909739  1169 net.cpp:86] Creating Layer conv0
I0428 20:18:35.909744  1169 net.cpp:408] conv0 <- data
I0428 20:18:35.909754  1169 net.cpp:382] conv0 -> conv0
I0428 20:18:35.911682  1169 net.cpp:124] Setting up conv0
I0428 20:18:35.911706  1169 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:35.911710  1169 net.cpp:139] Memory required for data: 11834800
I0428 20:18:35.911720  1169 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:35.911730  1169 net.cpp:86] Creating Layer pool0
I0428 20:18:35.911734  1169 net.cpp:408] pool0 <- conv0
I0428 20:18:35.911743  1169 net.cpp:382] pool0 -> pool0
I0428 20:18:35.911798  1169 net.cpp:124] Setting up pool0
I0428 20:18:35.911810  1169 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:35.911815  1169 net.cpp:139] Memory required for data: 14714800
I0428 20:18:35.911820  1169 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:35.911835  1169 net.cpp:86] Creating Layer conv1
I0428 20:18:35.911841  1169 net.cpp:408] conv1 <- pool0
I0428 20:18:35.911849  1169 net.cpp:382] conv1 -> conv1
I0428 20:18:35.914158  1169 net.cpp:124] Setting up conv1
I0428 20:18:35.914170  1169 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:35.914175  1169 net.cpp:139] Memory required for data: 14970800
I0428 20:18:35.914185  1169 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:35.914192  1169 net.cpp:86] Creating Layer pool1
I0428 20:18:35.914197  1169 net.cpp:408] pool1 <- conv1
I0428 20:18:35.914204  1169 net.cpp:382] pool1 -> pool1
I0428 20:18:35.914266  1169 net.cpp:124] Setting up pool1
I0428 20:18:35.914278  1169 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:35.914283  1169 net.cpp:139] Memory required for data: 15034800
I0428 20:18:35.914286  1169 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:35.914297  1169 net.cpp:86] Creating Layer ip1
I0428 20:18:35.914304  1169 net.cpp:408] ip1 <- pool1
I0428 20:18:35.914312  1169 net.cpp:382] ip1 -> ip1
I0428 20:18:35.914520  1169 net.cpp:124] Setting up ip1
I0428 20:18:35.914532  1169 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:35.914549  1169 net.cpp:139] Memory required for data: 15054800
I0428 20:18:35.914561  1169 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:35.914569  1169 net.cpp:86] Creating Layer relu1
I0428 20:18:35.914574  1169 net.cpp:408] relu1 <- ip1
I0428 20:18:35.914582  1169 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:35.914814  1169 net.cpp:124] Setting up relu1
I0428 20:18:35.914827  1169 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:35.914831  1169 net.cpp:139] Memory required for data: 15074800
I0428 20:18:35.914837  1169 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:35.914846  1169 net.cpp:86] Creating Layer ip2
I0428 20:18:35.914851  1169 net.cpp:408] ip2 <- ip1
I0428 20:18:35.914860  1169 net.cpp:382] ip2 -> ip2
I0428 20:18:35.915138  1169 net.cpp:124] Setting up ip2
I0428 20:18:35.915153  1169 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:35.915158  1169 net.cpp:139] Memory required for data: 15084800
I0428 20:18:35.915169  1169 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:35.915179  1169 net.cpp:86] Creating Layer relu2
I0428 20:18:35.915184  1169 net.cpp:408] relu2 <- ip2
I0428 20:18:35.915192  1169 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:35.915457  1169 net.cpp:124] Setting up relu2
I0428 20:18:35.915473  1169 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:35.915478  1169 net.cpp:139] Memory required for data: 15094800
I0428 20:18:35.915483  1169 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:35.915491  1169 net.cpp:86] Creating Layer ip3
I0428 20:18:35.915495  1169 net.cpp:408] ip3 <- ip2
I0428 20:18:35.915504  1169 net.cpp:382] ip3 -> ip3
I0428 20:18:35.915632  1169 net.cpp:124] Setting up ip3
I0428 20:18:35.915642  1169 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:35.915648  1169 net.cpp:139] Memory required for data: 15098800
I0428 20:18:35.915659  1169 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:35.915665  1169 net.cpp:86] Creating Layer relu3
I0428 20:18:35.915670  1169 net.cpp:408] relu3 <- ip3
I0428 20:18:35.915693  1169 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:35.916872  1169 net.cpp:124] Setting up relu3
I0428 20:18:35.916888  1169 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:35.916893  1169 net.cpp:139] Memory required for data: 15102800
I0428 20:18:35.916898  1169 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:35.916908  1169 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:35.916913  1169 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:35.916920  1169 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:35.916929  1169 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:35.916995  1169 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:35.917004  1169 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:35.917011  1169 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:35.917016  1169 net.cpp:139] Memory required for data: 15110800
I0428 20:18:35.917021  1169 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:35.917027  1169 net.cpp:86] Creating Layer accuracy
I0428 20:18:35.917032  1169 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:35.917038  1169 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:35.917047  1169 net.cpp:382] accuracy -> accuracy
I0428 20:18:35.917057  1169 net.cpp:124] Setting up accuracy
I0428 20:18:35.917063  1169 net.cpp:131] Top shape: (1)
I0428 20:18:35.917068  1169 net.cpp:139] Memory required for data: 15110804
I0428 20:18:35.917073  1169 layer_factory.hpp:77] Creating layer loss
I0428 20:18:35.917079  1169 net.cpp:86] Creating Layer loss
I0428 20:18:35.917084  1169 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:35.917090  1169 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:35.917098  1169 net.cpp:382] loss -> loss
I0428 20:18:35.917107  1169 layer_factory.hpp:77] Creating layer loss
I0428 20:18:35.917539  1169 net.cpp:124] Setting up loss
I0428 20:18:35.917556  1169 net.cpp:131] Top shape: (1)
I0428 20:18:35.917562  1169 net.cpp:134]     with loss weight 1
I0428 20:18:35.917587  1169 net.cpp:139] Memory required for data: 15110808
I0428 20:18:35.917594  1169 net.cpp:200] loss needs backward computation.
I0428 20:18:35.917615  1169 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:35.917623  1169 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:35.917629  1169 net.cpp:200] relu3 needs backward computation.
I0428 20:18:35.917634  1169 net.cpp:200] ip3 needs backward computation.
I0428 20:18:35.917640  1169 net.cpp:200] relu2 needs backward computation.
I0428 20:18:35.917645  1169 net.cpp:200] ip2 needs backward computation.
I0428 20:18:35.917661  1169 net.cpp:200] relu1 needs backward computation.
I0428 20:18:35.917666  1169 net.cpp:200] ip1 needs backward computation.
I0428 20:18:35.917671  1169 net.cpp:200] pool1 needs backward computation.
I0428 20:18:35.917676  1169 net.cpp:200] conv1 needs backward computation.
I0428 20:18:35.917682  1169 net.cpp:200] pool0 needs backward computation.
I0428 20:18:35.917687  1169 net.cpp:200] conv0 needs backward computation.
I0428 20:18:35.917693  1169 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:35.917699  1169 net.cpp:202] mnist does not need backward computation.
I0428 20:18:35.917704  1169 net.cpp:244] This network produces output accuracy
I0428 20:18:35.917709  1169 net.cpp:244] This network produces output loss
I0428 20:18:35.917727  1169 net.cpp:257] Network initialization done.
I0428 20:18:35.917827  1169 solver.cpp:56] Solver scaffolding done.
I0428 20:18:35.918303  1169 caffe.cpp:248] Starting Optimization
I0428 20:18:35.918313  1169 solver.cpp:273] Solving LeNet
I0428 20:18:35.918318  1169 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:35.918552  1169 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:35.925731  1169 blocking_queue.cpp:49] Waiting for data
I0428 20:18:35.996896  1178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:35.997823  1169 solver.cpp:398]     Test net output #0: accuracy = 0.1055
I0428 20:18:35.997859  1169 solver.cpp:398]     Test net output #1: loss = 2.30863 (* 1 = 2.30863 loss)
I0428 20:18:36.002717  1169 solver.cpp:219] Iteration 0 (0 iter/s, 0.0843704s/100 iters), loss = 2.29585
I0428 20:18:36.002754  1169 solver.cpp:238]     Train net output #0: loss = 2.29585 (* 1 = 2.29585 loss)
I0428 20:18:36.002765  1169 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:36.123711  1169 solver.cpp:219] Iteration 100 (826.727 iter/s, 0.120959s/100 iters), loss = 0.808305
I0428 20:18:36.123751  1169 solver.cpp:238]     Train net output #0: loss = 0.808305 (* 1 = 0.808305 loss)
I0428 20:18:36.123757  1169 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:36.242630  1169 solver.cpp:219] Iteration 200 (841.161 iter/s, 0.118883s/100 iters), loss = 0.299329
I0428 20:18:36.242668  1169 solver.cpp:238]     Train net output #0: loss = 0.299329 (* 1 = 0.299329 loss)
I0428 20:18:36.242674  1169 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:36.361033  1169 solver.cpp:219] Iteration 300 (844.821 iter/s, 0.118368s/100 iters), loss = 0.253844
I0428 20:18:36.361071  1169 solver.cpp:238]     Train net output #0: loss = 0.253844 (* 1 = 0.253844 loss)
I0428 20:18:36.361078  1169 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:36.479060  1169 solver.cpp:219] Iteration 400 (847.629 iter/s, 0.117976s/100 iters), loss = 0.172428
I0428 20:18:36.479084  1169 solver.cpp:238]     Train net output #0: loss = 0.172428 (* 1 = 0.172428 loss)
I0428 20:18:36.479091  1169 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:36.595859  1169 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:36.672308  1178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:36.673271  1169 solver.cpp:398]     Test net output #0: accuracy = 0.9596
I0428 20:18:36.673324  1169 solver.cpp:398]     Test net output #1: loss = 0.125193 (* 1 = 0.125193 loss)
I0428 20:18:36.674706  1169 solver.cpp:219] Iteration 500 (511.233 iter/s, 0.195606s/100 iters), loss = 0.0739167
I0428 20:18:36.674746  1169 solver.cpp:238]     Train net output #0: loss = 0.0739166 (* 1 = 0.0739166 loss)
I0428 20:18:36.674754  1169 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:36.794479  1169 solver.cpp:219] Iteration 600 (835.261 iter/s, 0.119723s/100 iters), loss = 0.0571951
I0428 20:18:36.794520  1169 solver.cpp:238]     Train net output #0: loss = 0.0571951 (* 1 = 0.0571951 loss)
I0428 20:18:36.794526  1169 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:36.912549  1169 solver.cpp:219] Iteration 700 (847.21 iter/s, 0.118034s/100 iters), loss = 0.276761
I0428 20:18:36.912588  1169 solver.cpp:238]     Train net output #0: loss = 0.276761 (* 1 = 0.276761 loss)
I0428 20:18:36.912595  1169 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:37.030371  1169 solver.cpp:219] Iteration 800 (848.985 iter/s, 0.117788s/100 iters), loss = 0.218553
I0428 20:18:37.030410  1169 solver.cpp:238]     Train net output #0: loss = 0.218553 (* 1 = 0.218553 loss)
I0428 20:18:37.030416  1169 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:37.149835  1169 solver.cpp:219] Iteration 900 (837.317 iter/s, 0.119429s/100 iters), loss = 0.113689
I0428 20:18:37.149876  1169 solver.cpp:238]     Train net output #0: loss = 0.113689 (* 1 = 0.113689 loss)
I0428 20:18:37.149883  1169 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:37.190743  1177 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:37.275661  1169 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:37.277163  1169 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:37.278197  1169 solver.cpp:311] Iteration 1000, loss = 0.140143
I0428 20:18:37.278218  1169 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:37.343796  1178 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:37.346385  1169 solver.cpp:398]     Test net output #0: accuracy = 0.9673
I0428 20:18:37.346436  1169 solver.cpp:398]     Test net output #1: loss = 0.0929356 (* 1 = 0.0929356 loss)
I0428 20:18:37.346441  1169 solver.cpp:316] Optimization Done.
I0428 20:18:37.346443  1169 caffe.cpp:259] Optimization Done.
