I0428 19:40:09.623802 24479 caffe.cpp:218] Using GPUs 0
I0428 19:40:09.664778 24479 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:10.127501 24479 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test326.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:10.127635 24479 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test326.prototxt
I0428 19:40:10.127971 24479 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:10.127990 24479 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:10.128089 24479 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:10.128170 24479 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:10.128271 24479 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:10.128296 24479 net.cpp:86] Creating Layer mnist
I0428 19:40:10.128305 24479 net.cpp:382] mnist -> data
I0428 19:40:10.128329 24479 net.cpp:382] mnist -> label
I0428 19:40:10.129468 24479 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:10.131674 24479 net.cpp:124] Setting up mnist
I0428 19:40:10.131705 24479 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:10.131713 24479 net.cpp:131] Top shape: 64 (64)
I0428 19:40:10.131734 24479 net.cpp:139] Memory required for data: 200960
I0428 19:40:10.131742 24479 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:10.131762 24479 net.cpp:86] Creating Layer conv0
I0428 19:40:10.131798 24479 net.cpp:408] conv0 <- data
I0428 19:40:10.131813 24479 net.cpp:382] conv0 -> conv0
I0428 19:40:10.366027 24479 net.cpp:124] Setting up conv0
I0428 19:40:10.366055 24479 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:10.366060 24479 net.cpp:139] Memory required for data: 495872
I0428 19:40:10.366111 24479 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:10.366127 24479 net.cpp:86] Creating Layer pool0
I0428 19:40:10.366140 24479 net.cpp:408] pool0 <- conv0
I0428 19:40:10.366149 24479 net.cpp:382] pool0 -> pool0
I0428 19:40:10.366206 24479 net.cpp:124] Setting up pool0
I0428 19:40:10.366215 24479 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:10.366219 24479 net.cpp:139] Memory required for data: 569600
I0428 19:40:10.366225 24479 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:10.366240 24479 net.cpp:86] Creating Layer conv1
I0428 19:40:10.366245 24479 net.cpp:408] conv1 <- pool0
I0428 19:40:10.366253 24479 net.cpp:382] conv1 -> conv1
I0428 19:40:10.368130 24479 net.cpp:124] Setting up conv1
I0428 19:40:10.368149 24479 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:10.368155 24479 net.cpp:139] Memory required for data: 651520
I0428 19:40:10.368168 24479 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:10.368181 24479 net.cpp:86] Creating Layer pool1
I0428 19:40:10.368196 24479 net.cpp:408] pool1 <- conv1
I0428 19:40:10.368204 24479 net.cpp:382] pool1 -> pool1
I0428 19:40:10.368250 24479 net.cpp:124] Setting up pool1
I0428 19:40:10.368260 24479 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:10.368266 24479 net.cpp:139] Memory required for data: 672000
I0428 19:40:10.368271 24479 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:10.368288 24479 net.cpp:86] Creating Layer ip1
I0428 19:40:10.368296 24479 net.cpp:408] ip1 <- pool1
I0428 19:40:10.368319 24479 net.cpp:382] ip1 -> ip1
I0428 19:40:10.368435 24479 net.cpp:124] Setting up ip1
I0428 19:40:10.368444 24479 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:10.368449 24479 net.cpp:139] Memory required for data: 674560
I0428 19:40:10.368475 24479 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:10.368484 24479 net.cpp:86] Creating Layer relu1
I0428 19:40:10.368490 24479 net.cpp:408] relu1 <- ip1
I0428 19:40:10.368497 24479 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:10.368654 24479 net.cpp:124] Setting up relu1
I0428 19:40:10.368664 24479 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:10.368669 24479 net.cpp:139] Memory required for data: 677120
I0428 19:40:10.368674 24479 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:10.368698 24479 net.cpp:86] Creating Layer ip2
I0428 19:40:10.368705 24479 net.cpp:408] ip2 <- ip1
I0428 19:40:10.368712 24479 net.cpp:382] ip2 -> ip2
I0428 19:40:10.368827 24479 net.cpp:124] Setting up ip2
I0428 19:40:10.368849 24479 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:10.368854 24479 net.cpp:139] Memory required for data: 679680
I0428 19:40:10.368865 24479 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:10.368875 24479 net.cpp:86] Creating Layer relu2
I0428 19:40:10.368881 24479 net.cpp:408] relu2 <- ip2
I0428 19:40:10.368890 24479 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:10.369685 24479 net.cpp:124] Setting up relu2
I0428 19:40:10.369700 24479 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:10.369705 24479 net.cpp:139] Memory required for data: 682240
I0428 19:40:10.369711 24479 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:10.369722 24479 net.cpp:86] Creating Layer ip3
I0428 19:40:10.369729 24479 net.cpp:408] ip3 <- ip2
I0428 19:40:10.369737 24479 net.cpp:382] ip3 -> ip3
I0428 19:40:10.369844 24479 net.cpp:124] Setting up ip3
I0428 19:40:10.369854 24479 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:10.369859 24479 net.cpp:139] Memory required for data: 684800
I0428 19:40:10.369874 24479 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:10.369882 24479 net.cpp:86] Creating Layer relu3
I0428 19:40:10.369889 24479 net.cpp:408] relu3 <- ip3
I0428 19:40:10.369897 24479 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:10.370088 24479 net.cpp:124] Setting up relu3
I0428 19:40:10.370098 24479 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:10.370103 24479 net.cpp:139] Memory required for data: 687360
I0428 19:40:10.370108 24479 layer_factory.hpp:77] Creating layer loss
I0428 19:40:10.370132 24479 net.cpp:86] Creating Layer loss
I0428 19:40:10.370137 24479 net.cpp:408] loss <- ip3
I0428 19:40:10.370143 24479 net.cpp:408] loss <- label
I0428 19:40:10.370152 24479 net.cpp:382] loss -> loss
I0428 19:40:10.370174 24479 layer_factory.hpp:77] Creating layer loss
I0428 19:40:10.370414 24479 net.cpp:124] Setting up loss
I0428 19:40:10.370440 24479 net.cpp:131] Top shape: (1)
I0428 19:40:10.370446 24479 net.cpp:134]     with loss weight 1
I0428 19:40:10.370466 24479 net.cpp:139] Memory required for data: 687364
I0428 19:40:10.370472 24479 net.cpp:200] loss needs backward computation.
I0428 19:40:10.370479 24479 net.cpp:200] relu3 needs backward computation.
I0428 19:40:10.370484 24479 net.cpp:200] ip3 needs backward computation.
I0428 19:40:10.370491 24479 net.cpp:200] relu2 needs backward computation.
I0428 19:40:10.370496 24479 net.cpp:200] ip2 needs backward computation.
I0428 19:40:10.370501 24479 net.cpp:200] relu1 needs backward computation.
I0428 19:40:10.370507 24479 net.cpp:200] ip1 needs backward computation.
I0428 19:40:10.370512 24479 net.cpp:200] pool1 needs backward computation.
I0428 19:40:10.370517 24479 net.cpp:200] conv1 needs backward computation.
I0428 19:40:10.370523 24479 net.cpp:200] pool0 needs backward computation.
I0428 19:40:10.370529 24479 net.cpp:200] conv0 needs backward computation.
I0428 19:40:10.370535 24479 net.cpp:202] mnist does not need backward computation.
I0428 19:40:10.370540 24479 net.cpp:244] This network produces output loss
I0428 19:40:10.370556 24479 net.cpp:257] Network initialization done.
I0428 19:40:10.370918 24479 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test326.prototxt
I0428 19:40:10.370962 24479 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:10.371057 24479 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:10.371178 24479 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:10.371235 24479 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:10.371253 24479 net.cpp:86] Creating Layer mnist
I0428 19:40:10.371259 24479 net.cpp:382] mnist -> data
I0428 19:40:10.371271 24479 net.cpp:382] mnist -> label
I0428 19:40:10.371387 24479 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:10.373556 24479 net.cpp:124] Setting up mnist
I0428 19:40:10.373574 24479 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:10.373582 24479 net.cpp:131] Top shape: 100 (100)
I0428 19:40:10.373589 24479 net.cpp:139] Memory required for data: 314000
I0428 19:40:10.373594 24479 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:10.373610 24479 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:10.373618 24479 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:10.373626 24479 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:10.373638 24479 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:10.373720 24479 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:10.373728 24479 net.cpp:131] Top shape: 100 (100)
I0428 19:40:10.373735 24479 net.cpp:131] Top shape: 100 (100)
I0428 19:40:10.373740 24479 net.cpp:139] Memory required for data: 314800
I0428 19:40:10.373745 24479 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:10.373759 24479 net.cpp:86] Creating Layer conv0
I0428 19:40:10.373764 24479 net.cpp:408] conv0 <- data
I0428 19:40:10.373773 24479 net.cpp:382] conv0 -> conv0
I0428 19:40:10.375299 24479 net.cpp:124] Setting up conv0
I0428 19:40:10.375314 24479 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:10.375320 24479 net.cpp:139] Memory required for data: 775600
I0428 19:40:10.375334 24479 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:10.375342 24479 net.cpp:86] Creating Layer pool0
I0428 19:40:10.375349 24479 net.cpp:408] pool0 <- conv0
I0428 19:40:10.375356 24479 net.cpp:382] pool0 -> pool0
I0428 19:40:10.375396 24479 net.cpp:124] Setting up pool0
I0428 19:40:10.375403 24479 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:10.375408 24479 net.cpp:139] Memory required for data: 890800
I0428 19:40:10.375413 24479 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:10.375425 24479 net.cpp:86] Creating Layer conv1
I0428 19:40:10.375432 24479 net.cpp:408] conv1 <- pool0
I0428 19:40:10.375440 24479 net.cpp:382] conv1 -> conv1
I0428 19:40:10.376986 24479 net.cpp:124] Setting up conv1
I0428 19:40:10.377007 24479 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:10.377013 24479 net.cpp:139] Memory required for data: 1018800
I0428 19:40:10.377028 24479 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:10.377040 24479 net.cpp:86] Creating Layer pool1
I0428 19:40:10.377046 24479 net.cpp:408] pool1 <- conv1
I0428 19:40:10.377055 24479 net.cpp:382] pool1 -> pool1
I0428 19:40:10.377101 24479 net.cpp:124] Setting up pool1
I0428 19:40:10.377111 24479 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:10.377117 24479 net.cpp:139] Memory required for data: 1050800
I0428 19:40:10.377135 24479 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:10.377159 24479 net.cpp:86] Creating Layer ip1
I0428 19:40:10.377164 24479 net.cpp:408] ip1 <- pool1
I0428 19:40:10.377187 24479 net.cpp:382] ip1 -> ip1
I0428 19:40:10.377305 24479 net.cpp:124] Setting up ip1
I0428 19:40:10.377313 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.377331 24479 net.cpp:139] Memory required for data: 1054800
I0428 19:40:10.377343 24479 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:10.377351 24479 net.cpp:86] Creating Layer relu1
I0428 19:40:10.377357 24479 net.cpp:408] relu1 <- ip1
I0428 19:40:10.377364 24479 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:10.377512 24479 net.cpp:124] Setting up relu1
I0428 19:40:10.377522 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.377527 24479 net.cpp:139] Memory required for data: 1058800
I0428 19:40:10.377532 24479 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:10.377543 24479 net.cpp:86] Creating Layer ip2
I0428 19:40:10.377548 24479 net.cpp:408] ip2 <- ip1
I0428 19:40:10.377557 24479 net.cpp:382] ip2 -> ip2
I0428 19:40:10.377670 24479 net.cpp:124] Setting up ip2
I0428 19:40:10.377678 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.377683 24479 net.cpp:139] Memory required for data: 1062800
I0428 19:40:10.377692 24479 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:10.377701 24479 net.cpp:86] Creating Layer relu2
I0428 19:40:10.377706 24479 net.cpp:408] relu2 <- ip2
I0428 19:40:10.377712 24479 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:10.377930 24479 net.cpp:124] Setting up relu2
I0428 19:40:10.377941 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.377946 24479 net.cpp:139] Memory required for data: 1066800
I0428 19:40:10.377954 24479 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:10.377962 24479 net.cpp:86] Creating Layer ip3
I0428 19:40:10.377969 24479 net.cpp:408] ip3 <- ip2
I0428 19:40:10.377976 24479 net.cpp:382] ip3 -> ip3
I0428 19:40:10.378095 24479 net.cpp:124] Setting up ip3
I0428 19:40:10.378104 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.378110 24479 net.cpp:139] Memory required for data: 1070800
I0428 19:40:10.378123 24479 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:10.378132 24479 net.cpp:86] Creating Layer relu3
I0428 19:40:10.378139 24479 net.cpp:408] relu3 <- ip3
I0428 19:40:10.378145 24479 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:10.378978 24479 net.cpp:124] Setting up relu3
I0428 19:40:10.378990 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.378996 24479 net.cpp:139] Memory required for data: 1074800
I0428 19:40:10.379001 24479 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:10.379009 24479 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:10.379015 24479 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:10.379024 24479 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:10.379034 24479 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:10.379082 24479 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:10.379091 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.379099 24479 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:10.379109 24479 net.cpp:139] Memory required for data: 1082800
I0428 19:40:10.379114 24479 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:10.379123 24479 net.cpp:86] Creating Layer accuracy
I0428 19:40:10.379129 24479 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:10.379150 24479 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:10.379158 24479 net.cpp:382] accuracy -> accuracy
I0428 19:40:10.379184 24479 net.cpp:124] Setting up accuracy
I0428 19:40:10.379192 24479 net.cpp:131] Top shape: (1)
I0428 19:40:10.379197 24479 net.cpp:139] Memory required for data: 1082804
I0428 19:40:10.379202 24479 layer_factory.hpp:77] Creating layer loss
I0428 19:40:10.379209 24479 net.cpp:86] Creating Layer loss
I0428 19:40:10.379215 24479 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:10.379220 24479 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:10.379227 24479 net.cpp:382] loss -> loss
I0428 19:40:10.379235 24479 layer_factory.hpp:77] Creating layer loss
I0428 19:40:10.379483 24479 net.cpp:124] Setting up loss
I0428 19:40:10.379494 24479 net.cpp:131] Top shape: (1)
I0428 19:40:10.379499 24479 net.cpp:134]     with loss weight 1
I0428 19:40:10.379508 24479 net.cpp:139] Memory required for data: 1082808
I0428 19:40:10.379525 24479 net.cpp:200] loss needs backward computation.
I0428 19:40:10.379534 24479 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:10.379539 24479 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:10.379545 24479 net.cpp:200] relu3 needs backward computation.
I0428 19:40:10.379550 24479 net.cpp:200] ip3 needs backward computation.
I0428 19:40:10.379556 24479 net.cpp:200] relu2 needs backward computation.
I0428 19:40:10.379561 24479 net.cpp:200] ip2 needs backward computation.
I0428 19:40:10.379566 24479 net.cpp:200] relu1 needs backward computation.
I0428 19:40:10.379572 24479 net.cpp:200] ip1 needs backward computation.
I0428 19:40:10.379578 24479 net.cpp:200] pool1 needs backward computation.
I0428 19:40:10.379585 24479 net.cpp:200] conv1 needs backward computation.
I0428 19:40:10.379590 24479 net.cpp:200] pool0 needs backward computation.
I0428 19:40:10.379596 24479 net.cpp:200] conv0 needs backward computation.
I0428 19:40:10.379602 24479 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:10.379609 24479 net.cpp:202] mnist does not need backward computation.
I0428 19:40:10.379616 24479 net.cpp:244] This network produces output accuracy
I0428 19:40:10.379622 24479 net.cpp:244] This network produces output loss
I0428 19:40:10.379638 24479 net.cpp:257] Network initialization done.
I0428 19:40:10.379698 24479 solver.cpp:56] Solver scaffolding done.
I0428 19:40:10.380070 24479 caffe.cpp:248] Starting Optimization
I0428 19:40:10.380079 24479 solver.cpp:273] Solving LeNet
I0428 19:40:10.380084 24479 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:10.380982 24479 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:10.383757 24479 blocking_queue.cpp:49] Waiting for data
I0428 19:40:10.455395 24486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:10.455828 24479 solver.cpp:398]     Test net output #0: accuracy = 0.0922
I0428 19:40:10.455848 24479 solver.cpp:398]     Test net output #1: loss = 2.3004 (* 1 = 2.3004 loss)
I0428 19:40:10.457681 24479 solver.cpp:219] Iteration 0 (0 iter/s, 0.0775639s/100 iters), loss = 2.30154
I0428 19:40:10.457737 24479 solver.cpp:238]     Train net output #0: loss = 2.30154 (* 1 = 2.30154 loss)
I0428 19:40:10.457762 24479 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:10.526532 24479 solver.cpp:219] Iteration 100 (1453.32 iter/s, 0.0688079s/100 iters), loss = 1.43974
I0428 19:40:10.526561 24479 solver.cpp:238]     Train net output #0: loss = 1.43974 (* 1 = 1.43974 loss)
I0428 19:40:10.526569 24479 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:10.594118 24479 solver.cpp:219] Iteration 200 (1480.34 iter/s, 0.0675523s/100 iters), loss = 1.19857
I0428 19:40:10.594146 24479 solver.cpp:238]     Train net output #0: loss = 1.19857 (* 1 = 1.19857 loss)
I0428 19:40:10.594172 24479 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:10.662586 24479 solver.cpp:219] Iteration 300 (1461.24 iter/s, 0.0684349s/100 iters), loss = 0.980779
I0428 19:40:10.662613 24479 solver.cpp:238]     Train net output #0: loss = 0.980779 (* 1 = 0.980779 loss)
I0428 19:40:10.662638 24479 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:10.731359 24479 solver.cpp:219] Iteration 400 (1454.76 iter/s, 0.06874s/100 iters), loss = 0.904662
I0428 19:40:10.731386 24479 solver.cpp:238]     Train net output #0: loss = 0.904662 (* 1 = 0.904662 loss)
I0428 19:40:10.731412 24479 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:10.799861 24479 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:10.852350 24486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:10.852771 24479 solver.cpp:398]     Test net output #0: accuracy = 0.7089
I0428 19:40:10.852792 24479 solver.cpp:398]     Test net output #1: loss = 0.809849 (* 1 = 0.809849 loss)
I0428 19:40:10.853513 24479 solver.cpp:219] Iteration 500 (818.893 iter/s, 0.122116s/100 iters), loss = 0.8719
I0428 19:40:10.853543 24479 solver.cpp:238]     Train net output #0: loss = 0.8719 (* 1 = 0.8719 loss)
I0428 19:40:10.853570 24479 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:10.920897 24479 solver.cpp:219] Iteration 600 (1484.84 iter/s, 0.0673475s/100 iters), loss = 0.944455
I0428 19:40:10.920925 24479 solver.cpp:238]     Train net output #0: loss = 0.944455 (* 1 = 0.944455 loss)
I0428 19:40:10.920951 24479 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:10.989212 24479 solver.cpp:219] Iteration 700 (1464.53 iter/s, 0.0682813s/100 iters), loss = 1.0663
I0428 19:40:10.989239 24479 solver.cpp:238]     Train net output #0: loss = 1.0663 (* 1 = 1.0663 loss)
I0428 19:40:10.989264 24479 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:11.056794 24479 solver.cpp:219] Iteration 800 (1480.38 iter/s, 0.0675502s/100 iters), loss = 0.748369
I0428 19:40:11.056859 24479 solver.cpp:238]     Train net output #0: loss = 0.748369 (* 1 = 0.748369 loss)
I0428 19:40:11.056874 24479 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:11.125341 24479 solver.cpp:219] Iteration 900 (1460.02 iter/s, 0.0684923s/100 iters), loss = 0.785733
I0428 19:40:11.125371 24479 solver.cpp:238]     Train net output #0: loss = 0.785733 (* 1 = 0.785733 loss)
I0428 19:40:11.125398 24479 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:11.151681 24485 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:11.196740 24479 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:11.197347 24479 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:11.197757 24479 solver.cpp:311] Iteration 1000, loss = 0.7294
I0428 19:40:11.197788 24479 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:11.249825 24486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:11.250243 24479 solver.cpp:398]     Test net output #0: accuracy = 0.7525
I0428 19:40:11.250265 24479 solver.cpp:398]     Test net output #1: loss = 0.678462 (* 1 = 0.678462 loss)
I0428 19:40:11.250277 24479 solver.cpp:316] Optimization Done.
I0428 19:40:11.250282 24479 caffe.cpp:259] Optimization Done.
