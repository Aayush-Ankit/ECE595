I0428 19:47:24.447057 26185 caffe.cpp:218] Using GPUs 0
I0428 19:47:24.483479 26185 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:24.995183 26185 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test514.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:24.995318 26185 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test514.prototxt
I0428 19:47:24.995689 26185 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:24.995707 26185 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:24.995795 26185 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:24.995867 26185 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:24.995960 26185 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:24.995981 26185 net.cpp:86] Creating Layer mnist
I0428 19:47:24.995990 26185 net.cpp:382] mnist -> data
I0428 19:47:24.996011 26185 net.cpp:382] mnist -> label
I0428 19:47:24.997066 26185 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:24.999459 26185 net.cpp:124] Setting up mnist
I0428 19:47:24.999475 26185 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:24.999481 26185 net.cpp:131] Top shape: 64 (64)
I0428 19:47:24.999485 26185 net.cpp:139] Memory required for data: 200960
I0428 19:47:24.999491 26185 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:24.999510 26185 net.cpp:86] Creating Layer conv0
I0428 19:47:24.999514 26185 net.cpp:408] conv0 <- data
I0428 19:47:24.999526 26185 net.cpp:382] conv0 -> conv0
I0428 19:47:25.285640 26185 net.cpp:124] Setting up conv0
I0428 19:47:25.285672 26185 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:25.285677 26185 net.cpp:139] Memory required for data: 938240
I0428 19:47:25.285717 26185 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:25.285732 26185 net.cpp:86] Creating Layer pool0
I0428 19:47:25.285737 26185 net.cpp:408] pool0 <- conv0
I0428 19:47:25.285745 26185 net.cpp:382] pool0 -> pool0
I0428 19:47:25.285804 26185 net.cpp:124] Setting up pool0
I0428 19:47:25.285814 26185 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:25.285817 26185 net.cpp:139] Memory required for data: 1122560
I0428 19:47:25.285821 26185 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:25.285835 26185 net.cpp:86] Creating Layer conv1
I0428 19:47:25.285838 26185 net.cpp:408] conv1 <- pool0
I0428 19:47:25.285845 26185 net.cpp:382] conv1 -> conv1
I0428 19:47:25.287986 26185 net.cpp:124] Setting up conv1
I0428 19:47:25.288003 26185 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:25.288008 26185 net.cpp:139] Memory required for data: 1155328
I0428 19:47:25.288018 26185 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:25.288028 26185 net.cpp:86] Creating Layer pool1
I0428 19:47:25.288033 26185 net.cpp:408] pool1 <- conv1
I0428 19:47:25.288039 26185 net.cpp:382] pool1 -> pool1
I0428 19:47:25.288082 26185 net.cpp:124] Setting up pool1
I0428 19:47:25.288089 26185 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:25.288092 26185 net.cpp:139] Memory required for data: 1163520
I0428 19:47:25.288096 26185 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:25.288105 26185 net.cpp:86] Creating Layer ip1
I0428 19:47:25.288108 26185 net.cpp:408] ip1 <- pool1
I0428 19:47:25.288113 26185 net.cpp:382] ip1 -> ip1
I0428 19:47:25.288234 26185 net.cpp:124] Setting up ip1
I0428 19:47:25.288244 26185 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:25.288247 26185 net.cpp:139] Memory required for data: 1169920
I0428 19:47:25.288255 26185 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:25.288264 26185 net.cpp:86] Creating Layer relu1
I0428 19:47:25.288269 26185 net.cpp:408] relu1 <- ip1
I0428 19:47:25.288274 26185 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:25.288470 26185 net.cpp:124] Setting up relu1
I0428 19:47:25.288481 26185 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:25.288486 26185 net.cpp:139] Memory required for data: 1176320
I0428 19:47:25.288489 26185 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:25.288496 26185 net.cpp:86] Creating Layer ip2
I0428 19:47:25.288499 26185 net.cpp:408] ip2 <- ip1
I0428 19:47:25.288506 26185 net.cpp:382] ip2 -> ip2
I0428 19:47:25.288616 26185 net.cpp:124] Setting up ip2
I0428 19:47:25.288625 26185 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:25.288628 26185 net.cpp:139] Memory required for data: 1178880
I0428 19:47:25.288635 26185 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:25.288642 26185 net.cpp:86] Creating Layer relu2
I0428 19:47:25.288646 26185 net.cpp:408] relu2 <- ip2
I0428 19:47:25.288651 26185 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:25.289506 26185 net.cpp:124] Setting up relu2
I0428 19:47:25.289521 26185 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:25.289526 26185 net.cpp:139] Memory required for data: 1181440
I0428 19:47:25.289530 26185 layer_factory.hpp:77] Creating layer loss
I0428 19:47:25.289537 26185 net.cpp:86] Creating Layer loss
I0428 19:47:25.289542 26185 net.cpp:408] loss <- ip2
I0428 19:47:25.289547 26185 net.cpp:408] loss <- label
I0428 19:47:25.289553 26185 net.cpp:382] loss -> loss
I0428 19:47:25.289577 26185 layer_factory.hpp:77] Creating layer loss
I0428 19:47:25.289852 26185 net.cpp:124] Setting up loss
I0428 19:47:25.289863 26185 net.cpp:131] Top shape: (1)
I0428 19:47:25.289867 26185 net.cpp:134]     with loss weight 1
I0428 19:47:25.289885 26185 net.cpp:139] Memory required for data: 1181444
I0428 19:47:25.289888 26185 net.cpp:200] loss needs backward computation.
I0428 19:47:25.289892 26185 net.cpp:200] relu2 needs backward computation.
I0428 19:47:25.289896 26185 net.cpp:200] ip2 needs backward computation.
I0428 19:47:25.289901 26185 net.cpp:200] relu1 needs backward computation.
I0428 19:47:25.289904 26185 net.cpp:200] ip1 needs backward computation.
I0428 19:47:25.289907 26185 net.cpp:200] pool1 needs backward computation.
I0428 19:47:25.289927 26185 net.cpp:200] conv1 needs backward computation.
I0428 19:47:25.289930 26185 net.cpp:200] pool0 needs backward computation.
I0428 19:47:25.289934 26185 net.cpp:200] conv0 needs backward computation.
I0428 19:47:25.289938 26185 net.cpp:202] mnist does not need backward computation.
I0428 19:47:25.289942 26185 net.cpp:244] This network produces output loss
I0428 19:47:25.289952 26185 net.cpp:257] Network initialization done.
I0428 19:47:25.290299 26185 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test514.prototxt
I0428 19:47:25.290329 26185 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:25.290427 26185 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:25.290500 26185 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:25.290552 26185 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:25.290570 26185 net.cpp:86] Creating Layer mnist
I0428 19:47:25.290575 26185 net.cpp:382] mnist -> data
I0428 19:47:25.290585 26185 net.cpp:382] mnist -> label
I0428 19:47:25.290683 26185 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:25.292912 26185 net.cpp:124] Setting up mnist
I0428 19:47:25.292937 26185 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:25.292943 26185 net.cpp:131] Top shape: 100 (100)
I0428 19:47:25.292954 26185 net.cpp:139] Memory required for data: 314000
I0428 19:47:25.292958 26185 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:25.292971 26185 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:25.292975 26185 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:25.292981 26185 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:25.292989 26185 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:25.293046 26185 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:25.293066 26185 net.cpp:131] Top shape: 100 (100)
I0428 19:47:25.293071 26185 net.cpp:131] Top shape: 100 (100)
I0428 19:47:25.293074 26185 net.cpp:139] Memory required for data: 314800
I0428 19:47:25.293077 26185 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:25.293087 26185 net.cpp:86] Creating Layer conv0
I0428 19:47:25.293092 26185 net.cpp:408] conv0 <- data
I0428 19:47:25.293097 26185 net.cpp:382] conv0 -> conv0
I0428 19:47:25.295001 26185 net.cpp:124] Setting up conv0
I0428 19:47:25.295018 26185 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:25.295022 26185 net.cpp:139] Memory required for data: 1466800
I0428 19:47:25.295033 26185 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:25.295042 26185 net.cpp:86] Creating Layer pool0
I0428 19:47:25.295045 26185 net.cpp:408] pool0 <- conv0
I0428 19:47:25.295052 26185 net.cpp:382] pool0 -> pool0
I0428 19:47:25.295094 26185 net.cpp:124] Setting up pool0
I0428 19:47:25.295100 26185 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:25.295104 26185 net.cpp:139] Memory required for data: 1754800
I0428 19:47:25.295107 26185 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:25.295119 26185 net.cpp:86] Creating Layer conv1
I0428 19:47:25.295122 26185 net.cpp:408] conv1 <- pool0
I0428 19:47:25.295127 26185 net.cpp:382] conv1 -> conv1
I0428 19:47:25.297415 26185 net.cpp:124] Setting up conv1
I0428 19:47:25.297435 26185 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:25.297441 26185 net.cpp:139] Memory required for data: 1806000
I0428 19:47:25.297451 26185 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:25.297461 26185 net.cpp:86] Creating Layer pool1
I0428 19:47:25.297466 26185 net.cpp:408] pool1 <- conv1
I0428 19:47:25.297472 26185 net.cpp:382] pool1 -> pool1
I0428 19:47:25.297523 26185 net.cpp:124] Setting up pool1
I0428 19:47:25.297541 26185 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:25.297545 26185 net.cpp:139] Memory required for data: 1818800
I0428 19:47:25.297549 26185 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:25.297555 26185 net.cpp:86] Creating Layer ip1
I0428 19:47:25.297559 26185 net.cpp:408] ip1 <- pool1
I0428 19:47:25.297565 26185 net.cpp:382] ip1 -> ip1
I0428 19:47:25.297708 26185 net.cpp:124] Setting up ip1
I0428 19:47:25.297719 26185 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:25.297722 26185 net.cpp:139] Memory required for data: 1828800
I0428 19:47:25.297730 26185 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:25.297736 26185 net.cpp:86] Creating Layer relu1
I0428 19:47:25.297740 26185 net.cpp:408] relu1 <- ip1
I0428 19:47:25.297745 26185 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:25.297987 26185 net.cpp:124] Setting up relu1
I0428 19:47:25.297999 26185 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:25.298003 26185 net.cpp:139] Memory required for data: 1838800
I0428 19:47:25.298007 26185 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:25.298015 26185 net.cpp:86] Creating Layer ip2
I0428 19:47:25.298020 26185 net.cpp:408] ip2 <- ip1
I0428 19:47:25.298027 26185 net.cpp:382] ip2 -> ip2
I0428 19:47:25.298157 26185 net.cpp:124] Setting up ip2
I0428 19:47:25.298167 26185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:25.298178 26185 net.cpp:139] Memory required for data: 1842800
I0428 19:47:25.298185 26185 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:25.298197 26185 net.cpp:86] Creating Layer relu2
I0428 19:47:25.298202 26185 net.cpp:408] relu2 <- ip2
I0428 19:47:25.298207 26185 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:25.298394 26185 net.cpp:124] Setting up relu2
I0428 19:47:25.298405 26185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:25.298408 26185 net.cpp:139] Memory required for data: 1846800
I0428 19:47:25.298413 26185 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:47:25.298418 26185 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:47:25.298435 26185 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:47:25.298441 26185 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:47:25.298461 26185 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:47:25.298504 26185 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:47:25.298511 26185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:25.298516 26185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:25.298519 26185 net.cpp:139] Memory required for data: 1854800
I0428 19:47:25.298523 26185 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:25.298529 26185 net.cpp:86] Creating Layer accuracy
I0428 19:47:25.298533 26185 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:47:25.298538 26185 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:25.298543 26185 net.cpp:382] accuracy -> accuracy
I0428 19:47:25.298552 26185 net.cpp:124] Setting up accuracy
I0428 19:47:25.298564 26185 net.cpp:131] Top shape: (1)
I0428 19:47:25.298568 26185 net.cpp:139] Memory required for data: 1854804
I0428 19:47:25.298571 26185 layer_factory.hpp:77] Creating layer loss
I0428 19:47:25.298576 26185 net.cpp:86] Creating Layer loss
I0428 19:47:25.298580 26185 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:47:25.298585 26185 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:25.298590 26185 net.cpp:382] loss -> loss
I0428 19:47:25.298604 26185 layer_factory.hpp:77] Creating layer loss
I0428 19:47:25.298876 26185 net.cpp:124] Setting up loss
I0428 19:47:25.298887 26185 net.cpp:131] Top shape: (1)
I0428 19:47:25.298892 26185 net.cpp:134]     with loss weight 1
I0428 19:47:25.298907 26185 net.cpp:139] Memory required for data: 1854808
I0428 19:47:25.298912 26185 net.cpp:200] loss needs backward computation.
I0428 19:47:25.298916 26185 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:25.298921 26185 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:47:25.298925 26185 net.cpp:200] relu2 needs backward computation.
I0428 19:47:25.298929 26185 net.cpp:200] ip2 needs backward computation.
I0428 19:47:25.298933 26185 net.cpp:200] relu1 needs backward computation.
I0428 19:47:25.298936 26185 net.cpp:200] ip1 needs backward computation.
I0428 19:47:25.298940 26185 net.cpp:200] pool1 needs backward computation.
I0428 19:47:25.298944 26185 net.cpp:200] conv1 needs backward computation.
I0428 19:47:25.298949 26185 net.cpp:200] pool0 needs backward computation.
I0428 19:47:25.298952 26185 net.cpp:200] conv0 needs backward computation.
I0428 19:47:25.298957 26185 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:25.298962 26185 net.cpp:202] mnist does not need backward computation.
I0428 19:47:25.298971 26185 net.cpp:244] This network produces output accuracy
I0428 19:47:25.298975 26185 net.cpp:244] This network produces output loss
I0428 19:47:25.298987 26185 net.cpp:257] Network initialization done.
I0428 19:47:25.299031 26185 solver.cpp:56] Solver scaffolding done.
I0428 19:47:25.299396 26185 caffe.cpp:248] Starting Optimization
I0428 19:47:25.299404 26185 solver.cpp:273] Solving LeNet
I0428 19:47:25.299408 26185 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:25.300299 26185 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:25.303915 26185 blocking_queue.cpp:49] Waiting for data
I0428 19:47:25.375320 26192 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:25.375826 26185 solver.cpp:398]     Test net output #0: accuracy = 0.0854
I0428 19:47:25.375850 26185 solver.cpp:398]     Test net output #1: loss = 2.32148 (* 1 = 2.32148 loss)
I0428 19:47:25.377682 26185 solver.cpp:219] Iteration 0 (-2.47692e-31 iter/s, 0.0782316s/100 iters), loss = 2.33145
I0428 19:47:25.377712 26185 solver.cpp:238]     Train net output #0: loss = 2.33145 (* 1 = 2.33145 loss)
I0428 19:47:25.377727 26185 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:25.442703 26185 solver.cpp:219] Iteration 100 (1538.89 iter/s, 0.0649818s/100 iters), loss = 1.27711
I0428 19:47:25.442728 26185 solver.cpp:238]     Train net output #0: loss = 1.27711 (* 1 = 1.27711 loss)
I0428 19:47:25.442735 26185 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:25.504163 26185 solver.cpp:219] Iteration 200 (1627.95 iter/s, 0.0614268s/100 iters), loss = 0.553214
I0428 19:47:25.504201 26185 solver.cpp:238]     Train net output #0: loss = 0.553214 (* 1 = 0.553214 loss)
I0428 19:47:25.504207 26185 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:25.565835 26185 solver.cpp:219] Iteration 300 (1622.66 iter/s, 0.0616274s/100 iters), loss = 0.383632
I0428 19:47:25.565891 26185 solver.cpp:238]     Train net output #0: loss = 0.383632 (* 1 = 0.383632 loss)
I0428 19:47:25.565913 26185 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:25.627986 26185 solver.cpp:219] Iteration 400 (1610.61 iter/s, 0.0620881s/100 iters), loss = 0.371153
I0428 19:47:25.628010 26185 solver.cpp:238]     Train net output #0: loss = 0.371153 (* 1 = 0.371153 loss)
I0428 19:47:25.628031 26185 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:25.689520 26185 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:25.764713 26192 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:25.765189 26185 solver.cpp:398]     Test net output #0: accuracy = 0.9201
I0428 19:47:25.765211 26185 solver.cpp:398]     Test net output #1: loss = 0.259023 (* 1 = 0.259023 loss)
I0428 19:47:25.765938 26185 solver.cpp:219] Iteration 500 (725.082 iter/s, 0.137915s/100 iters), loss = 0.248449
I0428 19:47:25.765960 26185 solver.cpp:238]     Train net output #0: loss = 0.248449 (* 1 = 0.248449 loss)
I0428 19:47:25.765969 26185 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:25.838723 26185 solver.cpp:219] Iteration 600 (1374.51 iter/s, 0.0727532s/100 iters), loss = 0.195471
I0428 19:47:25.838748 26185 solver.cpp:238]     Train net output #0: loss = 0.195471 (* 1 = 0.195471 loss)
I0428 19:47:25.838770 26185 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:25.910593 26185 solver.cpp:219] Iteration 700 (1392.06 iter/s, 0.0718359s/100 iters), loss = 0.443727
I0428 19:47:25.910651 26185 solver.cpp:238]     Train net output #0: loss = 0.443727 (* 1 = 0.443727 loss)
I0428 19:47:25.910661 26185 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:25.974493 26185 solver.cpp:219] Iteration 800 (1566.56 iter/s, 0.0638341s/100 iters), loss = 0.242111
I0428 19:47:25.974517 26185 solver.cpp:238]     Train net output #0: loss = 0.242111 (* 1 = 0.242111 loss)
I0428 19:47:25.974524 26185 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:26.036656 26185 solver.cpp:219] Iteration 900 (1609.5 iter/s, 0.0621312s/100 iters), loss = 0.294401
I0428 19:47:26.036680 26185 solver.cpp:238]     Train net output #0: loss = 0.294401 (* 1 = 0.294401 loss)
I0428 19:47:26.036686 26185 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:26.057469 26191 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:26.098510 26185 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:26.099100 26185 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:26.099437 26185 solver.cpp:311] Iteration 1000, loss = 0.208181
I0428 19:47:26.099452 26185 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:26.157089 26192 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:26.157727 26185 solver.cpp:398]     Test net output #0: accuracy = 0.9397
I0428 19:47:26.157759 26185 solver.cpp:398]     Test net output #1: loss = 0.191425 (* 1 = 0.191425 loss)
I0428 19:47:26.157768 26185 solver.cpp:316] Optimization Done.
I0428 19:47:26.157774 26185 caffe.cpp:259] Optimization Done.
