I0428 20:20:01.849011  1469 caffe.cpp:218] Using GPUs 0
I0428 20:20:01.886071  1469 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:02.388790  1469 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1354.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:02.388932  1469 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1354.prototxt
I0428 20:20:02.389344  1469 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:02.389364  1469 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:02.389464  1469 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:02.389541  1469 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:02.389636  1469 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:02.389659  1469 net.cpp:86] Creating Layer mnist
I0428 20:20:02.389668  1469 net.cpp:382] mnist -> data
I0428 20:20:02.389690  1469 net.cpp:382] mnist -> label
I0428 20:20:02.390746  1469 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:02.393146  1469 net.cpp:124] Setting up mnist
I0428 20:20:02.393165  1469 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:02.393172  1469 net.cpp:131] Top shape: 64 (64)
I0428 20:20:02.393175  1469 net.cpp:139] Memory required for data: 200960
I0428 20:20:02.393182  1469 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:02.393199  1469 net.cpp:86] Creating Layer conv0
I0428 20:20:02.393218  1469 net.cpp:408] conv0 <- data
I0428 20:20:02.393231  1469 net.cpp:382] conv0 -> conv0
I0428 20:20:02.674183  1469 net.cpp:124] Setting up conv0
I0428 20:20:02.674209  1469 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:02.674213  1469 net.cpp:139] Memory required for data: 7573760
I0428 20:20:02.674228  1469 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:02.674242  1469 net.cpp:86] Creating Layer pool0
I0428 20:20:02.674247  1469 net.cpp:408] pool0 <- conv0
I0428 20:20:02.674252  1469 net.cpp:382] pool0 -> pool0
I0428 20:20:02.674299  1469 net.cpp:124] Setting up pool0
I0428 20:20:02.674305  1469 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:02.674309  1469 net.cpp:139] Memory required for data: 9416960
I0428 20:20:02.674311  1469 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:02.674322  1469 net.cpp:86] Creating Layer conv1
I0428 20:20:02.674325  1469 net.cpp:408] conv1 <- pool0
I0428 20:20:02.674330  1469 net.cpp:382] conv1 -> conv1
I0428 20:20:02.676302  1469 net.cpp:124] Setting up conv1
I0428 20:20:02.676332  1469 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:02.676337  1469 net.cpp:139] Memory required for data: 9826560
I0428 20:20:02.676345  1469 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:02.676353  1469 net.cpp:86] Creating Layer pool1
I0428 20:20:02.676357  1469 net.cpp:408] pool1 <- conv1
I0428 20:20:02.676378  1469 net.cpp:382] pool1 -> pool1
I0428 20:20:02.676429  1469 net.cpp:124] Setting up pool1
I0428 20:20:02.676434  1469 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:02.676437  1469 net.cpp:139] Memory required for data: 9928960
I0428 20:20:02.676440  1469 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:02.676447  1469 net.cpp:86] Creating Layer ip1
I0428 20:20:02.676450  1469 net.cpp:408] ip1 <- pool1
I0428 20:20:02.676455  1469 net.cpp:382] ip1 -> ip1
I0428 20:20:02.677562  1469 net.cpp:124] Setting up ip1
I0428 20:20:02.677590  1469 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:02.677594  1469 net.cpp:139] Memory required for data: 9935360
I0428 20:20:02.677603  1469 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:02.677610  1469 net.cpp:86] Creating Layer relu1
I0428 20:20:02.677613  1469 net.cpp:408] relu1 <- ip1
I0428 20:20:02.677618  1469 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:02.677805  1469 net.cpp:124] Setting up relu1
I0428 20:20:02.677814  1469 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:02.677817  1469 net.cpp:139] Memory required for data: 9941760
I0428 20:20:02.677821  1469 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:02.677827  1469 net.cpp:86] Creating Layer ip2
I0428 20:20:02.677831  1469 net.cpp:408] ip2 <- ip1
I0428 20:20:02.677836  1469 net.cpp:382] ip2 -> ip2
I0428 20:20:02.677959  1469 net.cpp:124] Setting up ip2
I0428 20:20:02.677983  1469 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:02.677986  1469 net.cpp:139] Memory required for data: 9954560
I0428 20:20:02.677992  1469 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:02.677999  1469 net.cpp:86] Creating Layer relu2
I0428 20:20:02.678001  1469 net.cpp:408] relu2 <- ip2
I0428 20:20:02.678005  1469 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:02.678732  1469 net.cpp:124] Setting up relu2
I0428 20:20:02.678743  1469 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:02.678763  1469 net.cpp:139] Memory required for data: 9967360
I0428 20:20:02.678766  1469 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:02.678773  1469 net.cpp:86] Creating Layer ip3
I0428 20:20:02.678776  1469 net.cpp:408] ip3 <- ip2
I0428 20:20:02.678782  1469 net.cpp:382] ip3 -> ip3
I0428 20:20:02.678915  1469 net.cpp:124] Setting up ip3
I0428 20:20:02.678925  1469 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:02.678927  1469 net.cpp:139] Memory required for data: 9969920
I0428 20:20:02.678936  1469 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:02.678941  1469 net.cpp:86] Creating Layer relu3
I0428 20:20:02.678944  1469 net.cpp:408] relu3 <- ip3
I0428 20:20:02.678948  1469 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:02.679132  1469 net.cpp:124] Setting up relu3
I0428 20:20:02.679141  1469 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:02.679144  1469 net.cpp:139] Memory required for data: 9972480
I0428 20:20:02.679147  1469 layer_factory.hpp:77] Creating layer loss
I0428 20:20:02.679153  1469 net.cpp:86] Creating Layer loss
I0428 20:20:02.679157  1469 net.cpp:408] loss <- ip3
I0428 20:20:02.679160  1469 net.cpp:408] loss <- label
I0428 20:20:02.679167  1469 net.cpp:382] loss -> loss
I0428 20:20:02.679195  1469 layer_factory.hpp:77] Creating layer loss
I0428 20:20:02.679422  1469 net.cpp:124] Setting up loss
I0428 20:20:02.679430  1469 net.cpp:131] Top shape: (1)
I0428 20:20:02.679435  1469 net.cpp:134]     with loss weight 1
I0428 20:20:02.679447  1469 net.cpp:139] Memory required for data: 9972484
I0428 20:20:02.679450  1469 net.cpp:200] loss needs backward computation.
I0428 20:20:02.679455  1469 net.cpp:200] relu3 needs backward computation.
I0428 20:20:02.679456  1469 net.cpp:200] ip3 needs backward computation.
I0428 20:20:02.679461  1469 net.cpp:200] relu2 needs backward computation.
I0428 20:20:02.679462  1469 net.cpp:200] ip2 needs backward computation.
I0428 20:20:02.679466  1469 net.cpp:200] relu1 needs backward computation.
I0428 20:20:02.679483  1469 net.cpp:200] ip1 needs backward computation.
I0428 20:20:02.679486  1469 net.cpp:200] pool1 needs backward computation.
I0428 20:20:02.679489  1469 net.cpp:200] conv1 needs backward computation.
I0428 20:20:02.679492  1469 net.cpp:200] pool0 needs backward computation.
I0428 20:20:02.679496  1469 net.cpp:200] conv0 needs backward computation.
I0428 20:20:02.679499  1469 net.cpp:202] mnist does not need backward computation.
I0428 20:20:02.679502  1469 net.cpp:244] This network produces output loss
I0428 20:20:02.679512  1469 net.cpp:257] Network initialization done.
I0428 20:20:02.679841  1469 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1354.prototxt
I0428 20:20:02.679883  1469 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:02.680019  1469 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:02.680099  1469 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:02.680146  1469 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:02.680160  1469 net.cpp:86] Creating Layer mnist
I0428 20:20:02.680164  1469 net.cpp:382] mnist -> data
I0428 20:20:02.680172  1469 net.cpp:382] mnist -> label
I0428 20:20:02.680290  1469 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:02.682514  1469 net.cpp:124] Setting up mnist
I0428 20:20:02.682559  1469 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:02.682564  1469 net.cpp:131] Top shape: 100 (100)
I0428 20:20:02.682567  1469 net.cpp:139] Memory required for data: 314000
I0428 20:20:02.682571  1469 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:02.682579  1469 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:02.682582  1469 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:02.682587  1469 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:02.682595  1469 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:02.682644  1469 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:02.682651  1469 net.cpp:131] Top shape: 100 (100)
I0428 20:20:02.682654  1469 net.cpp:131] Top shape: 100 (100)
I0428 20:20:02.682657  1469 net.cpp:139] Memory required for data: 314800
I0428 20:20:02.682674  1469 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:02.682682  1469 net.cpp:86] Creating Layer conv0
I0428 20:20:02.682685  1469 net.cpp:408] conv0 <- data
I0428 20:20:02.682690  1469 net.cpp:382] conv0 -> conv0
I0428 20:20:02.684190  1469 net.cpp:124] Setting up conv0
I0428 20:20:02.684203  1469 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:02.684207  1469 net.cpp:139] Memory required for data: 11834800
I0428 20:20:02.684216  1469 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:02.684221  1469 net.cpp:86] Creating Layer pool0
I0428 20:20:02.684226  1469 net.cpp:408] pool0 <- conv0
I0428 20:20:02.684229  1469 net.cpp:382] pool0 -> pool0
I0428 20:20:02.684262  1469 net.cpp:124] Setting up pool0
I0428 20:20:02.684267  1469 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:02.684270  1469 net.cpp:139] Memory required for data: 14714800
I0428 20:20:02.684273  1469 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:02.684280  1469 net.cpp:86] Creating Layer conv1
I0428 20:20:02.684283  1469 net.cpp:408] conv1 <- pool0
I0428 20:20:02.684288  1469 net.cpp:382] conv1 -> conv1
I0428 20:20:02.685958  1469 net.cpp:124] Setting up conv1
I0428 20:20:02.685987  1469 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:02.685992  1469 net.cpp:139] Memory required for data: 15354800
I0428 20:20:02.686000  1469 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:02.686020  1469 net.cpp:86] Creating Layer pool1
I0428 20:20:02.686034  1469 net.cpp:408] pool1 <- conv1
I0428 20:20:02.686039  1469 net.cpp:382] pool1 -> pool1
I0428 20:20:02.686080  1469 net.cpp:124] Setting up pool1
I0428 20:20:02.686085  1469 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:02.686089  1469 net.cpp:139] Memory required for data: 15514800
I0428 20:20:02.686092  1469 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:02.686098  1469 net.cpp:86] Creating Layer ip1
I0428 20:20:02.686101  1469 net.cpp:408] ip1 <- pool1
I0428 20:20:02.686106  1469 net.cpp:382] ip1 -> ip1
I0428 20:20:02.686254  1469 net.cpp:124] Setting up ip1
I0428 20:20:02.686262  1469 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:02.686275  1469 net.cpp:139] Memory required for data: 15524800
I0428 20:20:02.686283  1469 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:02.686290  1469 net.cpp:86] Creating Layer relu1
I0428 20:20:02.686292  1469 net.cpp:408] relu1 <- ip1
I0428 20:20:02.686297  1469 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:02.686465  1469 net.cpp:124] Setting up relu1
I0428 20:20:02.686475  1469 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:02.686478  1469 net.cpp:139] Memory required for data: 15534800
I0428 20:20:02.686481  1469 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:02.686489  1469 net.cpp:86] Creating Layer ip2
I0428 20:20:02.686498  1469 net.cpp:408] ip2 <- ip1
I0428 20:20:02.686503  1469 net.cpp:382] ip2 -> ip2
I0428 20:20:02.686604  1469 net.cpp:124] Setting up ip2
I0428 20:20:02.686611  1469 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:02.686615  1469 net.cpp:139] Memory required for data: 15554800
I0428 20:20:02.686620  1469 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:02.686625  1469 net.cpp:86] Creating Layer relu2
I0428 20:20:02.686628  1469 net.cpp:408] relu2 <- ip2
I0428 20:20:02.686632  1469 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:02.686792  1469 net.cpp:124] Setting up relu2
I0428 20:20:02.686801  1469 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:02.686805  1469 net.cpp:139] Memory required for data: 15574800
I0428 20:20:02.686807  1469 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:02.686812  1469 net.cpp:86] Creating Layer ip3
I0428 20:20:02.686815  1469 net.cpp:408] ip3 <- ip2
I0428 20:20:02.686820  1469 net.cpp:382] ip3 -> ip3
I0428 20:20:02.686939  1469 net.cpp:124] Setting up ip3
I0428 20:20:02.686945  1469 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:02.686949  1469 net.cpp:139] Memory required for data: 15578800
I0428 20:20:02.686956  1469 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:02.686961  1469 net.cpp:86] Creating Layer relu3
I0428 20:20:02.686964  1469 net.cpp:408] relu3 <- ip3
I0428 20:20:02.686969  1469 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:02.687764  1469 net.cpp:124] Setting up relu3
I0428 20:20:02.687777  1469 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:02.687798  1469 net.cpp:139] Memory required for data: 15582800
I0428 20:20:02.687800  1469 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:02.687806  1469 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:02.687809  1469 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:02.687815  1469 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:02.687821  1469 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:02.687868  1469 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:02.687875  1469 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:02.687878  1469 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:02.687881  1469 net.cpp:139] Memory required for data: 15590800
I0428 20:20:02.687885  1469 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:02.687889  1469 net.cpp:86] Creating Layer accuracy
I0428 20:20:02.687892  1469 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:02.687896  1469 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:02.687901  1469 net.cpp:382] accuracy -> accuracy
I0428 20:20:02.687907  1469 net.cpp:124] Setting up accuracy
I0428 20:20:02.687911  1469 net.cpp:131] Top shape: (1)
I0428 20:20:02.687919  1469 net.cpp:139] Memory required for data: 15590804
I0428 20:20:02.687922  1469 layer_factory.hpp:77] Creating layer loss
I0428 20:20:02.687927  1469 net.cpp:86] Creating Layer loss
I0428 20:20:02.687930  1469 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:02.687934  1469 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:02.687938  1469 net.cpp:382] loss -> loss
I0428 20:20:02.687944  1469 layer_factory.hpp:77] Creating layer loss
I0428 20:20:02.688161  1469 net.cpp:124] Setting up loss
I0428 20:20:02.688170  1469 net.cpp:131] Top shape: (1)
I0428 20:20:02.688185  1469 net.cpp:134]     with loss weight 1
I0428 20:20:02.688200  1469 net.cpp:139] Memory required for data: 15590808
I0428 20:20:02.688205  1469 net.cpp:200] loss needs backward computation.
I0428 20:20:02.688208  1469 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:02.688211  1469 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:02.688215  1469 net.cpp:200] relu3 needs backward computation.
I0428 20:20:02.688218  1469 net.cpp:200] ip3 needs backward computation.
I0428 20:20:02.688221  1469 net.cpp:200] relu2 needs backward computation.
I0428 20:20:02.688225  1469 net.cpp:200] ip2 needs backward computation.
I0428 20:20:02.688227  1469 net.cpp:200] relu1 needs backward computation.
I0428 20:20:02.688230  1469 net.cpp:200] ip1 needs backward computation.
I0428 20:20:02.688233  1469 net.cpp:200] pool1 needs backward computation.
I0428 20:20:02.688236  1469 net.cpp:200] conv1 needs backward computation.
I0428 20:20:02.688241  1469 net.cpp:200] pool0 needs backward computation.
I0428 20:20:02.688243  1469 net.cpp:200] conv0 needs backward computation.
I0428 20:20:02.688247  1469 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:02.688256  1469 net.cpp:202] mnist does not need backward computation.
I0428 20:20:02.688259  1469 net.cpp:244] This network produces output accuracy
I0428 20:20:02.688263  1469 net.cpp:244] This network produces output loss
I0428 20:20:02.688273  1469 net.cpp:257] Network initialization done.
I0428 20:20:02.688313  1469 solver.cpp:56] Solver scaffolding done.
I0428 20:20:02.688688  1469 caffe.cpp:248] Starting Optimization
I0428 20:20:02.688694  1469 solver.cpp:273] Solving LeNet
I0428 20:20:02.688696  1469 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:02.689646  1469 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:02.695981  1469 blocking_queue.cpp:49] Waiting for data
I0428 20:20:02.766139  1478 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:02.766919  1469 solver.cpp:398]     Test net output #0: accuracy = 0.1265
I0428 20:20:02.766952  1469 solver.cpp:398]     Test net output #1: loss = 2.32243 (* 1 = 2.32243 loss)
I0428 20:20:02.771158  1469 solver.cpp:219] Iteration 0 (0 iter/s, 0.0824187s/100 iters), loss = 2.32013
I0428 20:20:02.771196  1469 solver.cpp:238]     Train net output #0: loss = 2.32013 (* 1 = 2.32013 loss)
I0428 20:20:02.771209  1469 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:02.904408  1469 solver.cpp:219] Iteration 100 (750.665 iter/s, 0.133215s/100 iters), loss = 0.902186
I0428 20:20:02.904448  1469 solver.cpp:238]     Train net output #0: loss = 0.902186 (* 1 = 0.902186 loss)
I0428 20:20:02.904454  1469 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:03.039837  1469 solver.cpp:219] Iteration 200 (738.584 iter/s, 0.135394s/100 iters), loss = 0.489654
I0428 20:20:03.039877  1469 solver.cpp:238]     Train net output #0: loss = 0.489654 (* 1 = 0.489654 loss)
I0428 20:20:03.039883  1469 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:03.180065  1469 solver.cpp:219] Iteration 300 (713.393 iter/s, 0.140175s/100 iters), loss = 0.631544
I0428 20:20:03.180097  1469 solver.cpp:238]     Train net output #0: loss = 0.631544 (* 1 = 0.631544 loss)
I0428 20:20:03.180104  1469 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:03.325820  1469 solver.cpp:219] Iteration 400 (686.308 iter/s, 0.145707s/100 iters), loss = 0.318565
I0428 20:20:03.325866  1469 solver.cpp:238]     Train net output #0: loss = 0.318565 (* 1 = 0.318565 loss)
I0428 20:20:03.325877  1469 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:03.473098  1469 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:03.544076  1478 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:03.546593  1469 solver.cpp:398]     Test net output #0: accuracy = 0.8678
I0428 20:20:03.546630  1469 solver.cpp:398]     Test net output #1: loss = 0.347847 (* 1 = 0.347847 loss)
I0428 20:20:03.547924  1469 solver.cpp:219] Iteration 500 (450.359 iter/s, 0.222045s/100 iters), loss = 0.323989
I0428 20:20:03.547978  1469 solver.cpp:238]     Train net output #0: loss = 0.323989 (* 1 = 0.323989 loss)
I0428 20:20:03.547987  1469 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:03.693059  1469 solver.cpp:219] Iteration 600 (689.288 iter/s, 0.145077s/100 iters), loss = 0.211812
I0428 20:20:03.693096  1469 solver.cpp:238]     Train net output #0: loss = 0.211812 (* 1 = 0.211812 loss)
I0428 20:20:03.693105  1469 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:03.844673  1469 solver.cpp:219] Iteration 700 (659.791 iter/s, 0.151563s/100 iters), loss = 0.252233
I0428 20:20:03.844717  1469 solver.cpp:238]     Train net output #0: loss = 0.252233 (* 1 = 0.252233 loss)
I0428 20:20:03.844727  1469 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:03.993674  1469 solver.cpp:219] Iteration 800 (671.394 iter/s, 0.148944s/100 iters), loss = 0.603121
I0428 20:20:03.993716  1469 solver.cpp:238]     Train net output #0: loss = 0.603121 (* 1 = 0.603121 loss)
I0428 20:20:03.993727  1469 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:04.144274  1469 solver.cpp:219] Iteration 900 (664.26 iter/s, 0.150543s/100 iters), loss = 0.430362
I0428 20:20:04.144320  1469 solver.cpp:238]     Train net output #0: loss = 0.430362 (* 1 = 0.430362 loss)
I0428 20:20:04.144331  1469 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:04.196112  1476 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:04.297960  1469 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:04.299772  1469 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:04.300961  1469 solver.cpp:311] Iteration 1000, loss = 0.252939
I0428 20:20:04.300984  1469 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:04.372108  1478 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:04.374608  1469 solver.cpp:398]     Test net output #0: accuracy = 0.8791
I0428 20:20:04.374629  1469 solver.cpp:398]     Test net output #1: loss = 0.308397 (* 1 = 0.308397 loss)
I0428 20:20:04.374644  1469 solver.cpp:316] Optimization Done.
I0428 20:20:04.374649  1469 caffe.cpp:259] Optimization Done.
