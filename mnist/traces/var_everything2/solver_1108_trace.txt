I0428 20:09:23.940874 31616 caffe.cpp:218] Using GPUs 0
I0428 20:09:23.970517 31616 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:24.411623 31616 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1108.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:24.411773 31616 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1108.prototxt
I0428 20:09:24.412117 31616 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:24.412147 31616 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:24.412240 31616 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:24.412305 31616 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:24.412385 31616 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:24.412405 31616 net.cpp:86] Creating Layer mnist
I0428 20:09:24.412412 31616 net.cpp:382] mnist -> data
I0428 20:09:24.412431 31616 net.cpp:382] mnist -> label
I0428 20:09:24.413415 31616 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:24.415663 31616 net.cpp:124] Setting up mnist
I0428 20:09:24.415694 31616 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:24.415700 31616 net.cpp:131] Top shape: 64 (64)
I0428 20:09:24.415702 31616 net.cpp:139] Memory required for data: 200960
I0428 20:09:24.415709 31616 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:24.415724 31616 net.cpp:86] Creating Layer conv0
I0428 20:09:24.415740 31616 net.cpp:408] conv0 <- data
I0428 20:09:24.415752 31616 net.cpp:382] conv0 -> conv0
I0428 20:09:24.648370 31616 net.cpp:124] Setting up conv0
I0428 20:09:24.648412 31616 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:24.648416 31616 net.cpp:139] Memory required for data: 3887360
I0428 20:09:24.648432 31616 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:24.648443 31616 net.cpp:86] Creating Layer pool0
I0428 20:09:24.648447 31616 net.cpp:408] pool0 <- conv0
I0428 20:09:24.648468 31616 net.cpp:382] pool0 -> pool0
I0428 20:09:24.648512 31616 net.cpp:124] Setting up pool0
I0428 20:09:24.648517 31616 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:24.648520 31616 net.cpp:139] Memory required for data: 4808960
I0428 20:09:24.648524 31616 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:24.648533 31616 net.cpp:86] Creating Layer conv1
I0428 20:09:24.648536 31616 net.cpp:408] conv1 <- pool0
I0428 20:09:24.648541 31616 net.cpp:382] conv1 -> conv1
I0428 20:09:24.651463 31616 net.cpp:124] Setting up conv1
I0428 20:09:24.651479 31616 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:24.651482 31616 net.cpp:139] Memory required for data: 5218560
I0428 20:09:24.651494 31616 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:24.651516 31616 net.cpp:86] Creating Layer pool1
I0428 20:09:24.651521 31616 net.cpp:408] pool1 <- conv1
I0428 20:09:24.651525 31616 net.cpp:382] pool1 -> pool1
I0428 20:09:24.651563 31616 net.cpp:124] Setting up pool1
I0428 20:09:24.651588 31616 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:24.651592 31616 net.cpp:139] Memory required for data: 5320960
I0428 20:09:24.651594 31616 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:24.651602 31616 net.cpp:86] Creating Layer ip1
I0428 20:09:24.651604 31616 net.cpp:408] ip1 <- pool1
I0428 20:09:24.651609 31616 net.cpp:382] ip1 -> ip1
I0428 20:09:24.652632 31616 net.cpp:124] Setting up ip1
I0428 20:09:24.652645 31616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:24.652649 31616 net.cpp:139] Memory required for data: 5323520
I0428 20:09:24.652658 31616 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:24.652664 31616 net.cpp:86] Creating Layer relu1
I0428 20:09:24.652667 31616 net.cpp:408] relu1 <- ip1
I0428 20:09:24.652673 31616 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:24.652910 31616 net.cpp:124] Setting up relu1
I0428 20:09:24.652921 31616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:24.652926 31616 net.cpp:139] Memory required for data: 5326080
I0428 20:09:24.652930 31616 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:24.652937 31616 net.cpp:86] Creating Layer ip2
I0428 20:09:24.652940 31616 net.cpp:408] ip2 <- ip1
I0428 20:09:24.652948 31616 net.cpp:382] ip2 -> ip2
I0428 20:09:24.653054 31616 net.cpp:124] Setting up ip2
I0428 20:09:24.653062 31616 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:24.653065 31616 net.cpp:139] Memory required for data: 5332480
I0428 20:09:24.653071 31616 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:24.653079 31616 net.cpp:86] Creating Layer relu2
I0428 20:09:24.653084 31616 net.cpp:408] relu2 <- ip2
I0428 20:09:24.653089 31616 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:24.653944 31616 net.cpp:124] Setting up relu2
I0428 20:09:24.653959 31616 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:24.653980 31616 net.cpp:139] Memory required for data: 5338880
I0428 20:09:24.653982 31616 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:24.653990 31616 net.cpp:86] Creating Layer ip3
I0428 20:09:24.653993 31616 net.cpp:408] ip3 <- ip2
I0428 20:09:24.654000 31616 net.cpp:382] ip3 -> ip3
I0428 20:09:24.654108 31616 net.cpp:124] Setting up ip3
I0428 20:09:24.654115 31616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:24.654119 31616 net.cpp:139] Memory required for data: 5341440
I0428 20:09:24.654127 31616 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:24.654132 31616 net.cpp:86] Creating Layer relu3
I0428 20:09:24.654135 31616 net.cpp:408] relu3 <- ip3
I0428 20:09:24.654140 31616 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:24.654346 31616 net.cpp:124] Setting up relu3
I0428 20:09:24.654356 31616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:24.654362 31616 net.cpp:139] Memory required for data: 5344000
I0428 20:09:24.654366 31616 layer_factory.hpp:77] Creating layer loss
I0428 20:09:24.654373 31616 net.cpp:86] Creating Layer loss
I0428 20:09:24.654376 31616 net.cpp:408] loss <- ip3
I0428 20:09:24.654381 31616 net.cpp:408] loss <- label
I0428 20:09:24.654386 31616 net.cpp:382] loss -> loss
I0428 20:09:24.654403 31616 layer_factory.hpp:77] Creating layer loss
I0428 20:09:24.654657 31616 net.cpp:124] Setting up loss
I0428 20:09:24.654670 31616 net.cpp:131] Top shape: (1)
I0428 20:09:24.654675 31616 net.cpp:134]     with loss weight 1
I0428 20:09:24.654692 31616 net.cpp:139] Memory required for data: 5344004
I0428 20:09:24.654696 31616 net.cpp:200] loss needs backward computation.
I0428 20:09:24.654700 31616 net.cpp:200] relu3 needs backward computation.
I0428 20:09:24.654702 31616 net.cpp:200] ip3 needs backward computation.
I0428 20:09:24.654706 31616 net.cpp:200] relu2 needs backward computation.
I0428 20:09:24.654708 31616 net.cpp:200] ip2 needs backward computation.
I0428 20:09:24.654711 31616 net.cpp:200] relu1 needs backward computation.
I0428 20:09:24.654713 31616 net.cpp:200] ip1 needs backward computation.
I0428 20:09:24.654716 31616 net.cpp:200] pool1 needs backward computation.
I0428 20:09:24.654719 31616 net.cpp:200] conv1 needs backward computation.
I0428 20:09:24.654723 31616 net.cpp:200] pool0 needs backward computation.
I0428 20:09:24.654726 31616 net.cpp:200] conv0 needs backward computation.
I0428 20:09:24.654729 31616 net.cpp:202] mnist does not need backward computation.
I0428 20:09:24.654731 31616 net.cpp:244] This network produces output loss
I0428 20:09:24.654758 31616 net.cpp:257] Network initialization done.
I0428 20:09:24.655105 31616 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1108.prototxt
I0428 20:09:24.655143 31616 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:24.655238 31616 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:24.655321 31616 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:24.655364 31616 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:24.655378 31616 net.cpp:86] Creating Layer mnist
I0428 20:09:24.655382 31616 net.cpp:382] mnist -> data
I0428 20:09:24.655390 31616 net.cpp:382] mnist -> label
I0428 20:09:24.655493 31616 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:24.657747 31616 net.cpp:124] Setting up mnist
I0428 20:09:24.657760 31616 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:24.657781 31616 net.cpp:131] Top shape: 100 (100)
I0428 20:09:24.657784 31616 net.cpp:139] Memory required for data: 314000
I0428 20:09:24.657804 31616 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:24.657816 31616 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:24.657820 31616 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:24.657826 31616 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:24.657835 31616 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:24.657932 31616 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:24.657941 31616 net.cpp:131] Top shape: 100 (100)
I0428 20:09:24.657945 31616 net.cpp:131] Top shape: 100 (100)
I0428 20:09:24.657948 31616 net.cpp:139] Memory required for data: 314800
I0428 20:09:24.657951 31616 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:24.657960 31616 net.cpp:86] Creating Layer conv0
I0428 20:09:24.657964 31616 net.cpp:408] conv0 <- data
I0428 20:09:24.657973 31616 net.cpp:382] conv0 -> conv0
I0428 20:09:24.659730 31616 net.cpp:124] Setting up conv0
I0428 20:09:24.659744 31616 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:24.659765 31616 net.cpp:139] Memory required for data: 6074800
I0428 20:09:24.659773 31616 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:24.659780 31616 net.cpp:86] Creating Layer pool0
I0428 20:09:24.659783 31616 net.cpp:408] pool0 <- conv0
I0428 20:09:24.659787 31616 net.cpp:382] pool0 -> pool0
I0428 20:09:24.659824 31616 net.cpp:124] Setting up pool0
I0428 20:09:24.659831 31616 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:24.659832 31616 net.cpp:139] Memory required for data: 7514800
I0428 20:09:24.659835 31616 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:24.659844 31616 net.cpp:86] Creating Layer conv1
I0428 20:09:24.659847 31616 net.cpp:408] conv1 <- pool0
I0428 20:09:24.659852 31616 net.cpp:382] conv1 -> conv1
I0428 20:09:24.662235 31616 net.cpp:124] Setting up conv1
I0428 20:09:24.662266 31616 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:24.662269 31616 net.cpp:139] Memory required for data: 8154800
I0428 20:09:24.662293 31616 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:24.662300 31616 net.cpp:86] Creating Layer pool1
I0428 20:09:24.662303 31616 net.cpp:408] pool1 <- conv1
I0428 20:09:24.662310 31616 net.cpp:382] pool1 -> pool1
I0428 20:09:24.662369 31616 net.cpp:124] Setting up pool1
I0428 20:09:24.662374 31616 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:24.662376 31616 net.cpp:139] Memory required for data: 8314800
I0428 20:09:24.662379 31616 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:24.662387 31616 net.cpp:86] Creating Layer ip1
I0428 20:09:24.662390 31616 net.cpp:408] ip1 <- pool1
I0428 20:09:24.662396 31616 net.cpp:382] ip1 -> ip1
I0428 20:09:24.662572 31616 net.cpp:124] Setting up ip1
I0428 20:09:24.662581 31616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:24.662595 31616 net.cpp:139] Memory required for data: 8318800
I0428 20:09:24.662602 31616 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:24.662607 31616 net.cpp:86] Creating Layer relu1
I0428 20:09:24.662611 31616 net.cpp:408] relu1 <- ip1
I0428 20:09:24.662616 31616 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:24.662806 31616 net.cpp:124] Setting up relu1
I0428 20:09:24.662816 31616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:24.662819 31616 net.cpp:139] Memory required for data: 8322800
I0428 20:09:24.662822 31616 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:24.662830 31616 net.cpp:86] Creating Layer ip2
I0428 20:09:24.662833 31616 net.cpp:408] ip2 <- ip1
I0428 20:09:24.662839 31616 net.cpp:382] ip2 -> ip2
I0428 20:09:24.662940 31616 net.cpp:124] Setting up ip2
I0428 20:09:24.662946 31616 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:24.662950 31616 net.cpp:139] Memory required for data: 8332800
I0428 20:09:24.662955 31616 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:24.662961 31616 net.cpp:86] Creating Layer relu2
I0428 20:09:24.662963 31616 net.cpp:408] relu2 <- ip2
I0428 20:09:24.662968 31616 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:24.663117 31616 net.cpp:124] Setting up relu2
I0428 20:09:24.663127 31616 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:24.663130 31616 net.cpp:139] Memory required for data: 8342800
I0428 20:09:24.663133 31616 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:24.663141 31616 net.cpp:86] Creating Layer ip3
I0428 20:09:24.663143 31616 net.cpp:408] ip3 <- ip2
I0428 20:09:24.663147 31616 net.cpp:382] ip3 -> ip3
I0428 20:09:24.663256 31616 net.cpp:124] Setting up ip3
I0428 20:09:24.663280 31616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:24.663283 31616 net.cpp:139] Memory required for data: 8346800
I0428 20:09:24.663295 31616 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:24.663301 31616 net.cpp:86] Creating Layer relu3
I0428 20:09:24.663305 31616 net.cpp:408] relu3 <- ip3
I0428 20:09:24.663311 31616 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:24.664151 31616 net.cpp:124] Setting up relu3
I0428 20:09:24.664178 31616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:24.664182 31616 net.cpp:139] Memory required for data: 8350800
I0428 20:09:24.664186 31616 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:24.664207 31616 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:24.664211 31616 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:24.664216 31616 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:24.664222 31616 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:24.664302 31616 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:24.664309 31616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:24.664314 31616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:24.664316 31616 net.cpp:139] Memory required for data: 8358800
I0428 20:09:24.664320 31616 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:24.664325 31616 net.cpp:86] Creating Layer accuracy
I0428 20:09:24.664328 31616 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:24.664332 31616 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:24.664338 31616 net.cpp:382] accuracy -> accuracy
I0428 20:09:24.664345 31616 net.cpp:124] Setting up accuracy
I0428 20:09:24.664350 31616 net.cpp:131] Top shape: (1)
I0428 20:09:24.664352 31616 net.cpp:139] Memory required for data: 8358804
I0428 20:09:24.664355 31616 layer_factory.hpp:77] Creating layer loss
I0428 20:09:24.664376 31616 net.cpp:86] Creating Layer loss
I0428 20:09:24.664378 31616 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:24.664382 31616 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:24.664388 31616 net.cpp:382] loss -> loss
I0428 20:09:24.664393 31616 layer_factory.hpp:77] Creating layer loss
I0428 20:09:24.664638 31616 net.cpp:124] Setting up loss
I0428 20:09:24.664649 31616 net.cpp:131] Top shape: (1)
I0428 20:09:24.664651 31616 net.cpp:134]     with loss weight 1
I0428 20:09:24.664672 31616 net.cpp:139] Memory required for data: 8358808
I0428 20:09:24.664679 31616 net.cpp:200] loss needs backward computation.
I0428 20:09:24.664700 31616 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:24.664703 31616 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:24.664706 31616 net.cpp:200] relu3 needs backward computation.
I0428 20:09:24.664710 31616 net.cpp:200] ip3 needs backward computation.
I0428 20:09:24.664712 31616 net.cpp:200] relu2 needs backward computation.
I0428 20:09:24.664716 31616 net.cpp:200] ip2 needs backward computation.
I0428 20:09:24.664718 31616 net.cpp:200] relu1 needs backward computation.
I0428 20:09:24.664721 31616 net.cpp:200] ip1 needs backward computation.
I0428 20:09:24.664724 31616 net.cpp:200] pool1 needs backward computation.
I0428 20:09:24.664727 31616 net.cpp:200] conv1 needs backward computation.
I0428 20:09:24.664731 31616 net.cpp:200] pool0 needs backward computation.
I0428 20:09:24.664733 31616 net.cpp:200] conv0 needs backward computation.
I0428 20:09:24.664737 31616 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:24.664741 31616 net.cpp:202] mnist does not need backward computation.
I0428 20:09:24.664759 31616 net.cpp:244] This network produces output accuracy
I0428 20:09:24.664763 31616 net.cpp:244] This network produces output loss
I0428 20:09:24.664775 31616 net.cpp:257] Network initialization done.
I0428 20:09:24.664863 31616 solver.cpp:56] Solver scaffolding done.
I0428 20:09:24.665277 31616 caffe.cpp:248] Starting Optimization
I0428 20:09:24.665283 31616 solver.cpp:273] Solving LeNet
I0428 20:09:24.665285 31616 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:24.666208 31616 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:24.671470 31616 blocking_queue.cpp:49] Waiting for data
I0428 20:09:24.742410 31623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:24.743050 31616 solver.cpp:398]     Test net output #0: accuracy = 0.0819
I0428 20:09:24.743082 31616 solver.cpp:398]     Test net output #1: loss = 2.29805 (* 1 = 2.29805 loss)
I0428 20:09:24.746701 31616 solver.cpp:219] Iteration 0 (-4.90851e-31 iter/s, 0.0813681s/100 iters), loss = 2.2799
I0428 20:09:24.746740 31616 solver.cpp:238]     Train net output #0: loss = 2.2799 (* 1 = 2.2799 loss)
I0428 20:09:24.746752 31616 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:24.848587 31616 solver.cpp:219] Iteration 100 (981.845 iter/s, 0.101849s/100 iters), loss = 0.864058
I0428 20:09:24.848611 31616 solver.cpp:238]     Train net output #0: loss = 0.864058 (* 1 = 0.864058 loss)
I0428 20:09:24.848618 31616 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:24.956104 31616 solver.cpp:219] Iteration 200 (930.405 iter/s, 0.10748s/100 iters), loss = 0.212158
I0428 20:09:24.956135 31616 solver.cpp:238]     Train net output #0: loss = 0.212158 (* 1 = 0.212158 loss)
I0428 20:09:24.956145 31616 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:25.057971 31616 solver.cpp:219] Iteration 300 (982.07 iter/s, 0.101826s/100 iters), loss = 0.238231
I0428 20:09:25.057996 31616 solver.cpp:238]     Train net output #0: loss = 0.238231 (* 1 = 0.238231 loss)
I0428 20:09:25.058003 31616 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:25.160651 31616 solver.cpp:219] Iteration 400 (974.254 iter/s, 0.102643s/100 iters), loss = 0.104972
I0428 20:09:25.160687 31616 solver.cpp:238]     Train net output #0: loss = 0.104972 (* 1 = 0.104972 loss)
I0428 20:09:25.160696 31616 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:25.262933 31616 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:25.319094 31623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:25.319833 31616 solver.cpp:398]     Test net output #0: accuracy = 0.9485
I0428 20:09:25.319865 31616 solver.cpp:398]     Test net output #1: loss = 0.172461 (* 1 = 0.172461 loss)
I0428 20:09:25.320807 31616 solver.cpp:219] Iteration 500 (624.569 iter/s, 0.16011s/100 iters), loss = 0.202853
I0428 20:09:25.320871 31616 solver.cpp:238]     Train net output #0: loss = 0.202853 (* 1 = 0.202853 loss)
I0428 20:09:25.320883 31616 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:25.421586 31616 solver.cpp:219] Iteration 600 (992.978 iter/s, 0.100707s/100 iters), loss = 0.114087
I0428 20:09:25.421618 31616 solver.cpp:238]     Train net output #0: loss = 0.114087 (* 1 = 0.114087 loss)
I0428 20:09:25.421625 31616 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:25.521927 31616 solver.cpp:219] Iteration 700 (997.001 iter/s, 0.100301s/100 iters), loss = 0.1243
I0428 20:09:25.521967 31616 solver.cpp:238]     Train net output #0: loss = 0.1243 (* 1 = 0.1243 loss)
I0428 20:09:25.521975 31616 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:25.634960 31616 solver.cpp:219] Iteration 800 (884.985 iter/s, 0.112996s/100 iters), loss = 0.292001
I0428 20:09:25.634997 31616 solver.cpp:238]     Train net output #0: loss = 0.292001 (* 1 = 0.292001 loss)
I0428 20:09:25.635007 31616 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:25.737013 31616 solver.cpp:219] Iteration 900 (980.316 iter/s, 0.102008s/100 iters), loss = 0.165106
I0428 20:09:25.737054 31616 solver.cpp:238]     Train net output #0: loss = 0.165106 (* 1 = 0.165106 loss)
I0428 20:09:25.737062 31616 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:25.770043 31622 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:25.842927 31616 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:25.844202 31616 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:25.845015 31616 solver.cpp:311] Iteration 1000, loss = 0.169468
I0428 20:09:25.845036 31616 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:25.903790 31623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:25.905647 31616 solver.cpp:398]     Test net output #0: accuracy = 0.9722
I0428 20:09:25.905669 31616 solver.cpp:398]     Test net output #1: loss = 0.0896827 (* 1 = 0.0896827 loss)
I0428 20:09:25.905683 31616 solver.cpp:316] Optimization Done.
I0428 20:09:25.905688 31616 caffe.cpp:259] Optimization Done.
