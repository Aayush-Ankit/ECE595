I0428 20:05:07.542304 30543 caffe.cpp:218] Using GPUs 0
I0428 20:05:07.579279 30543 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:08.031958 30543 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test991.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:08.032101 30543 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test991.prototxt
I0428 20:05:08.032444 30543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:08.032457 30543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:08.032531 30543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:08.032590 30543 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:08.032670 30543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:08.032690 30543 net.cpp:86] Creating Layer mnist
I0428 20:05:08.032696 30543 net.cpp:382] mnist -> data
I0428 20:05:08.032714 30543 net.cpp:382] mnist -> label
I0428 20:05:08.033746 30543 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:08.035883 30543 net.cpp:124] Setting up mnist
I0428 20:05:08.035912 30543 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:08.035917 30543 net.cpp:131] Top shape: 64 (64)
I0428 20:05:08.035920 30543 net.cpp:139] Memory required for data: 200960
I0428 20:05:08.035926 30543 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:08.035939 30543 net.cpp:86] Creating Layer conv0
I0428 20:05:08.035955 30543 net.cpp:408] conv0 <- data
I0428 20:05:08.035964 30543 net.cpp:382] conv0 -> conv0
I0428 20:05:08.265028 30543 net.cpp:124] Setting up conv0
I0428 20:05:08.265070 30543 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:08.265075 30543 net.cpp:139] Memory required for data: 3887360
I0428 20:05:08.265090 30543 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:08.265102 30543 net.cpp:86] Creating Layer pool0
I0428 20:05:08.265105 30543 net.cpp:408] pool0 <- conv0
I0428 20:05:08.265111 30543 net.cpp:382] pool0 -> pool0
I0428 20:05:08.265182 30543 net.cpp:124] Setting up pool0
I0428 20:05:08.265187 30543 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:08.265192 30543 net.cpp:139] Memory required for data: 4808960
I0428 20:05:08.265193 30543 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:08.265203 30543 net.cpp:86] Creating Layer conv1
I0428 20:05:08.265206 30543 net.cpp:408] conv1 <- pool0
I0428 20:05:08.265211 30543 net.cpp:382] conv1 -> conv1
I0428 20:05:08.267951 30543 net.cpp:124] Setting up conv1
I0428 20:05:08.267982 30543 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:08.267985 30543 net.cpp:139] Memory required for data: 4841728
I0428 20:05:08.267993 30543 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:08.268002 30543 net.cpp:86] Creating Layer pool1
I0428 20:05:08.268004 30543 net.cpp:408] pool1 <- conv1
I0428 20:05:08.268009 30543 net.cpp:382] pool1 -> pool1
I0428 20:05:08.268043 30543 net.cpp:124] Setting up pool1
I0428 20:05:08.268049 30543 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:08.268051 30543 net.cpp:139] Memory required for data: 4849920
I0428 20:05:08.268054 30543 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:08.268060 30543 net.cpp:86] Creating Layer ip1
I0428 20:05:08.268064 30543 net.cpp:408] ip1 <- pool1
I0428 20:05:08.268069 30543 net.cpp:382] ip1 -> ip1
I0428 20:05:08.268169 30543 net.cpp:124] Setting up ip1
I0428 20:05:08.268177 30543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:08.268179 30543 net.cpp:139] Memory required for data: 4852480
I0428 20:05:08.268185 30543 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:08.268190 30543 net.cpp:86] Creating Layer relu1
I0428 20:05:08.268193 30543 net.cpp:408] relu1 <- ip1
I0428 20:05:08.268198 30543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:08.268373 30543 net.cpp:124] Setting up relu1
I0428 20:05:08.268381 30543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:08.268384 30543 net.cpp:139] Memory required for data: 4855040
I0428 20:05:08.268388 30543 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:08.268393 30543 net.cpp:86] Creating Layer ip2
I0428 20:05:08.268396 30543 net.cpp:408] ip2 <- ip1
I0428 20:05:08.268400 30543 net.cpp:382] ip2 -> ip2
I0428 20:05:08.268489 30543 net.cpp:124] Setting up ip2
I0428 20:05:08.268496 30543 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:08.268498 30543 net.cpp:139] Memory required for data: 4861440
I0428 20:05:08.268503 30543 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:08.268509 30543 net.cpp:86] Creating Layer relu2
I0428 20:05:08.268512 30543 net.cpp:408] relu2 <- ip2
I0428 20:05:08.268515 30543 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:08.269294 30543 net.cpp:124] Setting up relu2
I0428 20:05:08.269322 30543 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:08.269326 30543 net.cpp:139] Memory required for data: 4867840
I0428 20:05:08.269330 30543 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:08.269351 30543 net.cpp:86] Creating Layer ip3
I0428 20:05:08.269356 30543 net.cpp:408] ip3 <- ip2
I0428 20:05:08.269376 30543 net.cpp:382] ip3 -> ip3
I0428 20:05:08.269470 30543 net.cpp:124] Setting up ip3
I0428 20:05:08.269479 30543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:08.269481 30543 net.cpp:139] Memory required for data: 4870400
I0428 20:05:08.269489 30543 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:08.269493 30543 net.cpp:86] Creating Layer relu3
I0428 20:05:08.269496 30543 net.cpp:408] relu3 <- ip3
I0428 20:05:08.269500 30543 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:08.269680 30543 net.cpp:124] Setting up relu3
I0428 20:05:08.269688 30543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:08.269691 30543 net.cpp:139] Memory required for data: 4872960
I0428 20:05:08.269695 30543 layer_factory.hpp:77] Creating layer loss
I0428 20:05:08.269700 30543 net.cpp:86] Creating Layer loss
I0428 20:05:08.269702 30543 net.cpp:408] loss <- ip3
I0428 20:05:08.269706 30543 net.cpp:408] loss <- label
I0428 20:05:08.269711 30543 net.cpp:382] loss -> loss
I0428 20:05:08.269726 30543 layer_factory.hpp:77] Creating layer loss
I0428 20:05:08.269948 30543 net.cpp:124] Setting up loss
I0428 20:05:08.269956 30543 net.cpp:131] Top shape: (1)
I0428 20:05:08.269959 30543 net.cpp:134]     with loss weight 1
I0428 20:05:08.269973 30543 net.cpp:139] Memory required for data: 4872964
I0428 20:05:08.269975 30543 net.cpp:200] loss needs backward computation.
I0428 20:05:08.269979 30543 net.cpp:200] relu3 needs backward computation.
I0428 20:05:08.269981 30543 net.cpp:200] ip3 needs backward computation.
I0428 20:05:08.269984 30543 net.cpp:200] relu2 needs backward computation.
I0428 20:05:08.269986 30543 net.cpp:200] ip2 needs backward computation.
I0428 20:05:08.269989 30543 net.cpp:200] relu1 needs backward computation.
I0428 20:05:08.269992 30543 net.cpp:200] ip1 needs backward computation.
I0428 20:05:08.269994 30543 net.cpp:200] pool1 needs backward computation.
I0428 20:05:08.269997 30543 net.cpp:200] conv1 needs backward computation.
I0428 20:05:08.270000 30543 net.cpp:200] pool0 needs backward computation.
I0428 20:05:08.270004 30543 net.cpp:200] conv0 needs backward computation.
I0428 20:05:08.270006 30543 net.cpp:202] mnist does not need backward computation.
I0428 20:05:08.270009 30543 net.cpp:244] This network produces output loss
I0428 20:05:08.270017 30543 net.cpp:257] Network initialization done.
I0428 20:05:08.270314 30543 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test991.prototxt
I0428 20:05:08.270340 30543 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:08.270424 30543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:08.270539 30543 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:08.270581 30543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:08.270609 30543 net.cpp:86] Creating Layer mnist
I0428 20:05:08.270614 30543 net.cpp:382] mnist -> data
I0428 20:05:08.270622 30543 net.cpp:382] mnist -> label
I0428 20:05:08.270709 30543 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:08.272843 30543 net.cpp:124] Setting up mnist
I0428 20:05:08.272872 30543 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:08.272877 30543 net.cpp:131] Top shape: 100 (100)
I0428 20:05:08.272881 30543 net.cpp:139] Memory required for data: 314000
I0428 20:05:08.272886 30543 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:08.272891 30543 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:08.272896 30543 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:08.272899 30543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:08.272907 30543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:08.272975 30543 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:08.272980 30543 net.cpp:131] Top shape: 100 (100)
I0428 20:05:08.272984 30543 net.cpp:131] Top shape: 100 (100)
I0428 20:05:08.272987 30543 net.cpp:139] Memory required for data: 314800
I0428 20:05:08.272989 30543 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:08.272997 30543 net.cpp:86] Creating Layer conv0
I0428 20:05:08.273000 30543 net.cpp:408] conv0 <- data
I0428 20:05:08.273005 30543 net.cpp:382] conv0 -> conv0
I0428 20:05:08.274755 30543 net.cpp:124] Setting up conv0
I0428 20:05:08.274767 30543 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:08.274771 30543 net.cpp:139] Memory required for data: 6074800
I0428 20:05:08.274780 30543 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:08.274785 30543 net.cpp:86] Creating Layer pool0
I0428 20:05:08.274788 30543 net.cpp:408] pool0 <- conv0
I0428 20:05:08.274808 30543 net.cpp:382] pool0 -> pool0
I0428 20:05:08.274857 30543 net.cpp:124] Setting up pool0
I0428 20:05:08.274862 30543 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:08.274864 30543 net.cpp:139] Memory required for data: 7514800
I0428 20:05:08.274868 30543 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:08.274874 30543 net.cpp:86] Creating Layer conv1
I0428 20:05:08.274878 30543 net.cpp:408] conv1 <- pool0
I0428 20:05:08.274883 30543 net.cpp:382] conv1 -> conv1
I0428 20:05:08.277030 30543 net.cpp:124] Setting up conv1
I0428 20:05:08.277045 30543 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:08.277050 30543 net.cpp:139] Memory required for data: 7566000
I0428 20:05:08.277060 30543 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:08.277066 30543 net.cpp:86] Creating Layer pool1
I0428 20:05:08.277070 30543 net.cpp:408] pool1 <- conv1
I0428 20:05:08.277076 30543 net.cpp:382] pool1 -> pool1
I0428 20:05:08.277115 30543 net.cpp:124] Setting up pool1
I0428 20:05:08.277120 30543 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:08.277123 30543 net.cpp:139] Memory required for data: 7578800
I0428 20:05:08.277127 30543 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:08.277132 30543 net.cpp:86] Creating Layer ip1
I0428 20:05:08.277137 30543 net.cpp:408] ip1 <- pool1
I0428 20:05:08.277142 30543 net.cpp:382] ip1 -> ip1
I0428 20:05:08.277281 30543 net.cpp:124] Setting up ip1
I0428 20:05:08.277288 30543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:08.277302 30543 net.cpp:139] Memory required for data: 7582800
I0428 20:05:08.277309 30543 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:08.277314 30543 net.cpp:86] Creating Layer relu1
I0428 20:05:08.277318 30543 net.cpp:408] relu1 <- ip1
I0428 20:05:08.277335 30543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:08.277572 30543 net.cpp:124] Setting up relu1
I0428 20:05:08.277580 30543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:08.277583 30543 net.cpp:139] Memory required for data: 7586800
I0428 20:05:08.277586 30543 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:08.277600 30543 net.cpp:86] Creating Layer ip2
I0428 20:05:08.277603 30543 net.cpp:408] ip2 <- ip1
I0428 20:05:08.277607 30543 net.cpp:382] ip2 -> ip2
I0428 20:05:08.277700 30543 net.cpp:124] Setting up ip2
I0428 20:05:08.277709 30543 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:08.277710 30543 net.cpp:139] Memory required for data: 7596800
I0428 20:05:08.277715 30543 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:08.277720 30543 net.cpp:86] Creating Layer relu2
I0428 20:05:08.277729 30543 net.cpp:408] relu2 <- ip2
I0428 20:05:08.277732 30543 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:08.277887 30543 net.cpp:124] Setting up relu2
I0428 20:05:08.277894 30543 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:08.277897 30543 net.cpp:139] Memory required for data: 7606800
I0428 20:05:08.277900 30543 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:08.277905 30543 net.cpp:86] Creating Layer ip3
I0428 20:05:08.277909 30543 net.cpp:408] ip3 <- ip2
I0428 20:05:08.277912 30543 net.cpp:382] ip3 -> ip3
I0428 20:05:08.277995 30543 net.cpp:124] Setting up ip3
I0428 20:05:08.278002 30543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:08.278004 30543 net.cpp:139] Memory required for data: 7610800
I0428 20:05:08.278012 30543 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:08.278028 30543 net.cpp:86] Creating Layer relu3
I0428 20:05:08.278030 30543 net.cpp:408] relu3 <- ip3
I0428 20:05:08.278033 30543 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:08.278861 30543 net.cpp:124] Setting up relu3
I0428 20:05:08.278872 30543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:08.278875 30543 net.cpp:139] Memory required for data: 7614800
I0428 20:05:08.278878 30543 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:08.278883 30543 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:08.278887 30543 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:08.278892 30543 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:08.278898 30543 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:08.278950 30543 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:08.278955 30543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:08.278959 30543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:08.278961 30543 net.cpp:139] Memory required for data: 7622800
I0428 20:05:08.278971 30543 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:08.278975 30543 net.cpp:86] Creating Layer accuracy
I0428 20:05:08.278978 30543 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:08.278982 30543 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:08.278986 30543 net.cpp:382] accuracy -> accuracy
I0428 20:05:08.278992 30543 net.cpp:124] Setting up accuracy
I0428 20:05:08.278996 30543 net.cpp:131] Top shape: (1)
I0428 20:05:08.278998 30543 net.cpp:139] Memory required for data: 7622804
I0428 20:05:08.279001 30543 layer_factory.hpp:77] Creating layer loss
I0428 20:05:08.279006 30543 net.cpp:86] Creating Layer loss
I0428 20:05:08.279008 30543 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:08.279011 30543 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:08.279016 30543 net.cpp:382] loss -> loss
I0428 20:05:08.279021 30543 layer_factory.hpp:77] Creating layer loss
I0428 20:05:08.279269 30543 net.cpp:124] Setting up loss
I0428 20:05:08.279278 30543 net.cpp:131] Top shape: (1)
I0428 20:05:08.279281 30543 net.cpp:134]     with loss weight 1
I0428 20:05:08.279286 30543 net.cpp:139] Memory required for data: 7622808
I0428 20:05:08.279300 30543 net.cpp:200] loss needs backward computation.
I0428 20:05:08.279316 30543 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:08.279320 30543 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:08.279322 30543 net.cpp:200] relu3 needs backward computation.
I0428 20:05:08.279325 30543 net.cpp:200] ip3 needs backward computation.
I0428 20:05:08.279328 30543 net.cpp:200] relu2 needs backward computation.
I0428 20:05:08.279331 30543 net.cpp:200] ip2 needs backward computation.
I0428 20:05:08.279335 30543 net.cpp:200] relu1 needs backward computation.
I0428 20:05:08.279336 30543 net.cpp:200] ip1 needs backward computation.
I0428 20:05:08.279359 30543 net.cpp:200] pool1 needs backward computation.
I0428 20:05:08.279362 30543 net.cpp:200] conv1 needs backward computation.
I0428 20:05:08.279371 30543 net.cpp:200] pool0 needs backward computation.
I0428 20:05:08.279373 30543 net.cpp:200] conv0 needs backward computation.
I0428 20:05:08.279377 30543 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:08.279381 30543 net.cpp:202] mnist does not need backward computation.
I0428 20:05:08.279383 30543 net.cpp:244] This network produces output accuracy
I0428 20:05:08.279388 30543 net.cpp:244] This network produces output loss
I0428 20:05:08.279403 30543 net.cpp:257] Network initialization done.
I0428 20:05:08.279446 30543 solver.cpp:56] Solver scaffolding done.
I0428 20:05:08.279781 30543 caffe.cpp:248] Starting Optimization
I0428 20:05:08.279788 30543 solver.cpp:273] Solving LeNet
I0428 20:05:08.279790 30543 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:08.280571 30543 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:08.285675 30543 blocking_queue.cpp:49] Waiting for data
I0428 20:05:08.357028 30550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:08.357623 30543 solver.cpp:398]     Test net output #0: accuracy = 0.0662
I0428 20:05:08.357642 30543 solver.cpp:398]     Test net output #1: loss = 2.33111 (* 1 = 2.33111 loss)
I0428 20:05:08.360807 30543 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809923s/100 iters), loss = 2.32015
I0428 20:05:08.360851 30543 solver.cpp:238]     Train net output #0: loss = 2.32015 (* 1 = 2.32015 loss)
I0428 20:05:08.360877 30543 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:08.449431 30543 solver.cpp:219] Iteration 100 (1129.05 iter/s, 0.0885699s/100 iters), loss = 1.08295
I0428 20:05:08.449455 30543 solver.cpp:238]     Train net output #0: loss = 1.08295 (* 1 = 1.08295 loss)
I0428 20:05:08.449476 30543 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:08.543678 30543 solver.cpp:219] Iteration 200 (1061.43 iter/s, 0.0942121s/100 iters), loss = 0.563007
I0428 20:05:08.543716 30543 solver.cpp:238]     Train net output #0: loss = 0.563007 (* 1 = 0.563007 loss)
I0428 20:05:08.543722 30543 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:08.632388 30543 solver.cpp:219] Iteration 300 (1127.68 iter/s, 0.0886774s/100 iters), loss = 0.397083
I0428 20:05:08.632427 30543 solver.cpp:238]     Train net output #0: loss = 0.397083 (* 1 = 0.397083 loss)
I0428 20:05:08.632434 30543 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:08.717310 30543 solver.cpp:219] Iteration 400 (1178 iter/s, 0.0848895s/100 iters), loss = 0.426799
I0428 20:05:08.717345 30543 solver.cpp:238]     Train net output #0: loss = 0.426799 (* 1 = 0.426799 loss)
I0428 20:05:08.717351 30543 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:08.802008 30543 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:08.880632 30550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:08.881224 30543 solver.cpp:398]     Test net output #0: accuracy = 0.8901
I0428 20:05:08.881245 30543 solver.cpp:398]     Test net output #1: loss = 0.339144 (* 1 = 0.339144 loss)
I0428 20:05:08.882220 30543 solver.cpp:219] Iteration 500 (606.572 iter/s, 0.164861s/100 iters), loss = 0.318406
I0428 20:05:08.882243 30543 solver.cpp:238]     Train net output #0: loss = 0.318405 (* 1 = 0.318405 loss)
I0428 20:05:08.882264 30543 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:08.976605 30543 solver.cpp:219] Iteration 600 (1059.86 iter/s, 0.0943524s/100 iters), loss = 0.17578
I0428 20:05:08.976631 30543 solver.cpp:238]     Train net output #0: loss = 0.17578 (* 1 = 0.17578 loss)
I0428 20:05:08.976637 30543 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:09.064647 30543 solver.cpp:219] Iteration 700 (1136.29 iter/s, 0.0880057s/100 iters), loss = 0.433458
I0428 20:05:09.064673 30543 solver.cpp:238]     Train net output #0: loss = 0.433458 (* 1 = 0.433458 loss)
I0428 20:05:09.064679 30543 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:09.151000 30543 solver.cpp:219] Iteration 800 (1158.49 iter/s, 0.0863191s/100 iters), loss = 0.282484
I0428 20:05:09.151041 30543 solver.cpp:238]     Train net output #0: loss = 0.282484 (* 1 = 0.282484 loss)
I0428 20:05:09.151047 30543 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:09.236474 30543 solver.cpp:219] Iteration 900 (1170.43 iter/s, 0.0854385s/100 iters), loss = 0.393148
I0428 20:05:09.236513 30543 solver.cpp:238]     Train net output #0: loss = 0.393148 (* 1 = 0.393148 loss)
I0428 20:05:09.236519 30543 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:09.264925 30549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:09.320986 30543 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:09.321691 30543 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:09.322230 30543 solver.cpp:311] Iteration 1000, loss = 0.214007
I0428 20:05:09.322245 30543 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:09.397555 30550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:09.398169 30543 solver.cpp:398]     Test net output #0: accuracy = 0.9389
I0428 20:05:09.398191 30543 solver.cpp:398]     Test net output #1: loss = 0.201572 (* 1 = 0.201572 loss)
I0428 20:05:09.398196 30543 solver.cpp:316] Optimization Done.
I0428 20:05:09.398206 30543 caffe.cpp:259] Optimization Done.
