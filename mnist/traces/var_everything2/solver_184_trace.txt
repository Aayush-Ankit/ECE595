I0428 19:33:36.805320 23142 caffe.cpp:218] Using GPUs 0
I0428 19:33:36.844877 23142 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:37.312479 23142 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test184.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:37.312616 23142 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test184.prototxt
I0428 19:33:37.313025 23142 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:37.313045 23142 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:37.313141 23142 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:37.313233 23142 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:37.313380 23142 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:37.313417 23142 net.cpp:86] Creating Layer mnist
I0428 19:33:37.313426 23142 net.cpp:382] mnist -> data
I0428 19:33:37.313480 23142 net.cpp:382] mnist -> label
I0428 19:33:37.314576 23142 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:37.317008 23142 net.cpp:124] Setting up mnist
I0428 19:33:37.317040 23142 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:37.317065 23142 net.cpp:131] Top shape: 64 (64)
I0428 19:33:37.317070 23142 net.cpp:139] Memory required for data: 200960
I0428 19:33:37.317078 23142 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:37.317096 23142 net.cpp:86] Creating Layer conv0
I0428 19:33:37.317121 23142 net.cpp:408] conv0 <- data
I0428 19:33:37.317137 23142 net.cpp:382] conv0 -> conv0
I0428 19:33:37.544414 23142 net.cpp:124] Setting up conv0
I0428 19:33:37.544443 23142 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:37.544448 23142 net.cpp:139] Memory required for data: 3887360
I0428 19:33:37.544483 23142 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:37.544515 23142 net.cpp:86] Creating Layer pool0
I0428 19:33:37.544543 23142 net.cpp:408] pool0 <- conv0
I0428 19:33:37.544554 23142 net.cpp:382] pool0 -> pool0
I0428 19:33:37.544610 23142 net.cpp:124] Setting up pool0
I0428 19:33:37.544618 23142 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:37.544623 23142 net.cpp:139] Memory required for data: 4808960
I0428 19:33:37.544628 23142 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:37.544641 23142 net.cpp:86] Creating Layer ip1
I0428 19:33:37.544648 23142 net.cpp:408] ip1 <- pool0
I0428 19:33:37.544658 23142 net.cpp:382] ip1 -> ip1
I0428 19:33:37.546205 23142 net.cpp:124] Setting up ip1
I0428 19:33:37.546219 23142 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:37.546226 23142 net.cpp:139] Memory required for data: 4815360
I0428 19:33:37.546237 23142 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:37.546249 23142 net.cpp:86] Creating Layer relu1
I0428 19:33:37.546259 23142 net.cpp:408] relu1 <- ip1
I0428 19:33:37.546269 23142 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:37.546468 23142 net.cpp:124] Setting up relu1
I0428 19:33:37.546480 23142 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:37.546486 23142 net.cpp:139] Memory required for data: 4821760
I0428 19:33:37.546491 23142 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:37.546501 23142 net.cpp:86] Creating Layer ip2
I0428 19:33:37.546506 23142 net.cpp:408] ip2 <- ip1
I0428 19:33:37.546517 23142 net.cpp:382] ip2 -> ip2
I0428 19:33:37.547528 23142 net.cpp:124] Setting up ip2
I0428 19:33:37.547556 23142 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:37.547577 23142 net.cpp:139] Memory required for data: 4834560
I0428 19:33:37.547593 23142 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:37.547605 23142 net.cpp:86] Creating Layer relu2
I0428 19:33:37.547612 23142 net.cpp:408] relu2 <- ip2
I0428 19:33:37.547621 23142 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:37.548460 23142 net.cpp:124] Setting up relu2
I0428 19:33:37.548475 23142 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:37.548480 23142 net.cpp:139] Memory required for data: 4847360
I0428 19:33:37.548486 23142 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:37.548496 23142 net.cpp:86] Creating Layer ip3
I0428 19:33:37.548502 23142 net.cpp:408] ip3 <- ip2
I0428 19:33:37.548511 23142 net.cpp:382] ip3 -> ip3
I0428 19:33:37.548629 23142 net.cpp:124] Setting up ip3
I0428 19:33:37.548638 23142 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:37.548643 23142 net.cpp:139] Memory required for data: 4849920
I0428 19:33:37.548653 23142 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:37.548665 23142 net.cpp:86] Creating Layer relu3
I0428 19:33:37.548671 23142 net.cpp:408] relu3 <- ip3
I0428 19:33:37.548677 23142 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:37.548868 23142 net.cpp:124] Setting up relu3
I0428 19:33:37.548879 23142 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:37.548885 23142 net.cpp:139] Memory required for data: 4852480
I0428 19:33:37.548904 23142 layer_factory.hpp:77] Creating layer loss
I0428 19:33:37.548914 23142 net.cpp:86] Creating Layer loss
I0428 19:33:37.548919 23142 net.cpp:408] loss <- ip3
I0428 19:33:37.548926 23142 net.cpp:408] loss <- label
I0428 19:33:37.548934 23142 net.cpp:382] loss -> loss
I0428 19:33:37.548959 23142 layer_factory.hpp:77] Creating layer loss
I0428 19:33:37.549244 23142 net.cpp:124] Setting up loss
I0428 19:33:37.549255 23142 net.cpp:131] Top shape: (1)
I0428 19:33:37.549260 23142 net.cpp:134]     with loss weight 1
I0428 19:33:37.549290 23142 net.cpp:139] Memory required for data: 4852484
I0428 19:33:37.549296 23142 net.cpp:200] loss needs backward computation.
I0428 19:33:37.549301 23142 net.cpp:200] relu3 needs backward computation.
I0428 19:33:37.549306 23142 net.cpp:200] ip3 needs backward computation.
I0428 19:33:37.549311 23142 net.cpp:200] relu2 needs backward computation.
I0428 19:33:37.549316 23142 net.cpp:200] ip2 needs backward computation.
I0428 19:33:37.549321 23142 net.cpp:200] relu1 needs backward computation.
I0428 19:33:37.549325 23142 net.cpp:200] ip1 needs backward computation.
I0428 19:33:37.549341 23142 net.cpp:200] pool0 needs backward computation.
I0428 19:33:37.549346 23142 net.cpp:200] conv0 needs backward computation.
I0428 19:33:37.549352 23142 net.cpp:202] mnist does not need backward computation.
I0428 19:33:37.549356 23142 net.cpp:244] This network produces output loss
I0428 19:33:37.549368 23142 net.cpp:257] Network initialization done.
I0428 19:33:37.549643 23142 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test184.prototxt
I0428 19:33:37.549685 23142 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:37.549801 23142 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:37.549897 23142 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:37.549957 23142 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:37.549989 23142 net.cpp:86] Creating Layer mnist
I0428 19:33:37.549998 23142 net.cpp:382] mnist -> data
I0428 19:33:37.550009 23142 net.cpp:382] mnist -> label
I0428 19:33:37.550148 23142 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:37.551455 23142 net.cpp:124] Setting up mnist
I0428 19:33:37.551470 23142 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:37.551492 23142 net.cpp:131] Top shape: 100 (100)
I0428 19:33:37.551497 23142 net.cpp:139] Memory required for data: 314000
I0428 19:33:37.551503 23142 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:37.551518 23142 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:37.551540 23142 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:37.551548 23142 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:37.551559 23142 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:37.551652 23142 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:37.551662 23142 net.cpp:131] Top shape: 100 (100)
I0428 19:33:37.551668 23142 net.cpp:131] Top shape: 100 (100)
I0428 19:33:37.551673 23142 net.cpp:139] Memory required for data: 314800
I0428 19:33:37.551690 23142 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:37.551719 23142 net.cpp:86] Creating Layer conv0
I0428 19:33:37.551725 23142 net.cpp:408] conv0 <- data
I0428 19:33:37.551734 23142 net.cpp:382] conv0 -> conv0
I0428 19:33:37.553326 23142 net.cpp:124] Setting up conv0
I0428 19:33:37.553344 23142 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:37.553364 23142 net.cpp:139] Memory required for data: 6074800
I0428 19:33:37.553392 23142 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:37.553402 23142 net.cpp:86] Creating Layer pool0
I0428 19:33:37.553408 23142 net.cpp:408] pool0 <- conv0
I0428 19:33:37.553416 23142 net.cpp:382] pool0 -> pool0
I0428 19:33:37.553457 23142 net.cpp:124] Setting up pool0
I0428 19:33:37.553467 23142 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:37.553472 23142 net.cpp:139] Memory required for data: 7514800
I0428 19:33:37.553478 23142 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:37.553488 23142 net.cpp:86] Creating Layer ip1
I0428 19:33:37.553493 23142 net.cpp:408] ip1 <- pool0
I0428 19:33:37.553501 23142 net.cpp:382] ip1 -> ip1
I0428 19:33:37.554128 23142 net.cpp:124] Setting up ip1
I0428 19:33:37.554137 23142 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:37.554142 23142 net.cpp:139] Memory required for data: 7524800
I0428 19:33:37.554155 23142 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:37.554164 23142 net.cpp:86] Creating Layer relu1
I0428 19:33:37.554170 23142 net.cpp:408] relu1 <- ip1
I0428 19:33:37.554178 23142 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:37.554347 23142 net.cpp:124] Setting up relu1
I0428 19:33:37.554358 23142 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:37.554363 23142 net.cpp:139] Memory required for data: 7534800
I0428 19:33:37.554383 23142 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:37.554407 23142 net.cpp:86] Creating Layer ip2
I0428 19:33:37.554414 23142 net.cpp:408] ip2 <- ip1
I0428 19:33:37.554424 23142 net.cpp:382] ip2 -> ip2
I0428 19:33:37.554539 23142 net.cpp:124] Setting up ip2
I0428 19:33:37.554548 23142 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:37.554554 23142 net.cpp:139] Memory required for data: 7554800
I0428 19:33:37.554567 23142 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:37.554576 23142 net.cpp:86] Creating Layer relu2
I0428 19:33:37.554584 23142 net.cpp:408] relu2 <- ip2
I0428 19:33:37.554590 23142 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:37.555402 23142 net.cpp:124] Setting up relu2
I0428 19:33:37.555415 23142 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:37.555420 23142 net.cpp:139] Memory required for data: 7574800
I0428 19:33:37.555425 23142 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:37.555438 23142 net.cpp:86] Creating Layer ip3
I0428 19:33:37.555443 23142 net.cpp:408] ip3 <- ip2
I0428 19:33:37.555466 23142 net.cpp:382] ip3 -> ip3
I0428 19:33:37.555650 23142 net.cpp:124] Setting up ip3
I0428 19:33:37.555662 23142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:37.555668 23142 net.cpp:139] Memory required for data: 7578800
I0428 19:33:37.555678 23142 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:37.555691 23142 net.cpp:86] Creating Layer relu3
I0428 19:33:37.555698 23142 net.cpp:408] relu3 <- ip3
I0428 19:33:37.555707 23142 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:37.555888 23142 net.cpp:124] Setting up relu3
I0428 19:33:37.555898 23142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:37.555903 23142 net.cpp:139] Memory required for data: 7582800
I0428 19:33:37.555908 23142 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:37.555917 23142 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:37.555923 23142 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:37.555932 23142 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:37.555944 23142 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:37.555985 23142 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:37.555994 23142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:37.555999 23142 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:37.556015 23142 net.cpp:139] Memory required for data: 7590800
I0428 19:33:37.556021 23142 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:37.556030 23142 net.cpp:86] Creating Layer accuracy
I0428 19:33:37.556035 23142 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:37.556056 23142 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:37.556066 23142 net.cpp:382] accuracy -> accuracy
I0428 19:33:37.556077 23142 net.cpp:124] Setting up accuracy
I0428 19:33:37.556084 23142 net.cpp:131] Top shape: (1)
I0428 19:33:37.556089 23142 net.cpp:139] Memory required for data: 7590804
I0428 19:33:37.556095 23142 layer_factory.hpp:77] Creating layer loss
I0428 19:33:37.556103 23142 net.cpp:86] Creating Layer loss
I0428 19:33:37.556108 23142 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:37.556116 23142 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:37.556128 23142 net.cpp:382] loss -> loss
I0428 19:33:37.556138 23142 layer_factory.hpp:77] Creating layer loss
I0428 19:33:37.556396 23142 net.cpp:124] Setting up loss
I0428 19:33:37.556407 23142 net.cpp:131] Top shape: (1)
I0428 19:33:37.556412 23142 net.cpp:134]     with loss weight 1
I0428 19:33:37.556423 23142 net.cpp:139] Memory required for data: 7590808
I0428 19:33:37.556428 23142 net.cpp:200] loss needs backward computation.
I0428 19:33:37.556437 23142 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:37.556457 23142 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:37.556462 23142 net.cpp:200] relu3 needs backward computation.
I0428 19:33:37.556466 23142 net.cpp:200] ip3 needs backward computation.
I0428 19:33:37.556473 23142 net.cpp:200] relu2 needs backward computation.
I0428 19:33:37.556478 23142 net.cpp:200] ip2 needs backward computation.
I0428 19:33:37.556483 23142 net.cpp:200] relu1 needs backward computation.
I0428 19:33:37.556488 23142 net.cpp:200] ip1 needs backward computation.
I0428 19:33:37.556493 23142 net.cpp:200] pool0 needs backward computation.
I0428 19:33:37.556498 23142 net.cpp:200] conv0 needs backward computation.
I0428 19:33:37.556504 23142 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:37.556509 23142 net.cpp:202] mnist does not need backward computation.
I0428 19:33:37.556514 23142 net.cpp:244] This network produces output accuracy
I0428 19:33:37.556519 23142 net.cpp:244] This network produces output loss
I0428 19:33:37.556533 23142 net.cpp:257] Network initialization done.
I0428 19:33:37.556607 23142 solver.cpp:56] Solver scaffolding done.
I0428 19:33:37.556902 23142 caffe.cpp:248] Starting Optimization
I0428 19:33:37.556910 23142 solver.cpp:273] Solving LeNet
I0428 19:33:37.556915 23142 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:37.558348 23142 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:37.564740 23142 blocking_queue.cpp:49] Waiting for data
I0428 19:33:37.638528 23149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:37.639255 23142 solver.cpp:398]     Test net output #0: accuracy = 0.1074
I0428 19:33:37.639276 23142 solver.cpp:398]     Test net output #1: loss = 2.30079 (* 1 = 2.30079 loss)
I0428 19:33:37.642912 23142 solver.cpp:219] Iteration 0 (-1.18503e-30 iter/s, 0.0859691s/100 iters), loss = 2.29528
I0428 19:33:37.642940 23142 solver.cpp:238]     Train net output #0: loss = 2.29528 (* 1 = 2.29528 loss)
I0428 19:33:37.642973 23142 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:37.748770 23142 solver.cpp:219] Iteration 100 (944.98 iter/s, 0.105822s/100 iters), loss = 1.35303
I0428 19:33:37.748798 23142 solver.cpp:238]     Train net output #0: loss = 1.35303 (* 1 = 1.35303 loss)
I0428 19:33:37.748844 23142 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:37.850035 23142 solver.cpp:219] Iteration 200 (987.864 iter/s, 0.101229s/100 iters), loss = 1.37298
I0428 19:33:37.850062 23142 solver.cpp:238]     Train net output #0: loss = 1.37298 (* 1 = 1.37298 loss)
I0428 19:33:37.850072 23142 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:37.953013 23142 solver.cpp:219] Iteration 300 (971.443 iter/s, 0.10294s/100 iters), loss = 0.75895
I0428 19:33:37.953057 23142 solver.cpp:238]     Train net output #0: loss = 0.75895 (* 1 = 0.75895 loss)
I0428 19:33:37.953073 23142 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:38.053828 23142 solver.cpp:219] Iteration 400 (992.401 iter/s, 0.100766s/100 iters), loss = 0.574781
I0428 19:33:38.053859 23142 solver.cpp:238]     Train net output #0: loss = 0.574781 (* 1 = 0.574781 loss)
I0428 19:33:38.053870 23142 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:38.148607 23142 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:38.224570 23149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:38.225395 23142 solver.cpp:398]     Test net output #0: accuracy = 0.7724
I0428 19:33:38.225416 23142 solver.cpp:398]     Test net output #1: loss = 0.615854 (* 1 = 0.615854 loss)
I0428 19:33:38.226454 23142 solver.cpp:219] Iteration 500 (579.429 iter/s, 0.172584s/100 iters), loss = 0.770836
I0428 19:33:38.226495 23142 solver.cpp:238]     Train net output #0: loss = 0.770836 (* 1 = 0.770836 loss)
I0428 19:33:38.226511 23142 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:38.330157 23142 solver.cpp:219] Iteration 600 (964.601 iter/s, 0.10367s/100 iters), loss = 0.495246
I0428 19:33:38.330185 23142 solver.cpp:238]     Train net output #0: loss = 0.495246 (* 1 = 0.495246 loss)
I0428 19:33:38.330207 23142 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:38.430953 23142 solver.cpp:219] Iteration 700 (992.472 iter/s, 0.100759s/100 iters), loss = 0.672394
I0428 19:33:38.430979 23142 solver.cpp:238]     Train net output #0: loss = 0.672394 (* 1 = 0.672394 loss)
I0428 19:33:38.431004 23142 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:38.536402 23142 solver.cpp:219] Iteration 800 (948.653 iter/s, 0.105413s/100 iters), loss = 0.84727
I0428 19:33:38.536445 23142 solver.cpp:238]     Train net output #0: loss = 0.84727 (* 1 = 0.84727 loss)
I0428 19:33:38.536460 23142 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:38.638643 23142 solver.cpp:219] Iteration 900 (978.549 iter/s, 0.102192s/100 iters), loss = 0.448803
I0428 19:33:38.638675 23142 solver.cpp:238]     Train net output #0: loss = 0.448803 (* 1 = 0.448803 loss)
I0428 19:33:38.638687 23142 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:38.671180 23148 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:38.733639 23142 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:38.735349 23142 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:38.736723 23142 solver.cpp:311] Iteration 1000, loss = 0.39271
I0428 19:33:38.736739 23142 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:38.813076 23149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:38.813839 23142 solver.cpp:398]     Test net output #0: accuracy = 0.868
I0428 19:33:38.813861 23142 solver.cpp:398]     Test net output #1: loss = 0.373188 (* 1 = 0.373188 loss)
I0428 19:33:38.813869 23142 solver.cpp:316] Optimization Done.
I0428 19:33:38.813874 23142 caffe.cpp:259] Optimization Done.
