I0428 19:58:56.049810 29117 caffe.cpp:218] Using GPUs 0
I0428 19:58:56.085806 29117 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:56.542151 29117 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test833.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:56.542284 29117 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test833.prototxt
I0428 19:58:56.542613 29117 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:56.542642 29117 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:56.542717 29117 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:56.542774 29117 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:56.542855 29117 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:56.542873 29117 net.cpp:86] Creating Layer mnist
I0428 19:58:56.542894 29117 net.cpp:382] mnist -> data
I0428 19:58:56.542912 29117 net.cpp:382] mnist -> label
I0428 19:58:56.543946 29117 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:56.546164 29117 net.cpp:124] Setting up mnist
I0428 19:58:56.546193 29117 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:56.546198 29117 net.cpp:131] Top shape: 64 (64)
I0428 19:58:56.546202 29117 net.cpp:139] Memory required for data: 200960
I0428 19:58:56.546207 29117 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:56.546221 29117 net.cpp:86] Creating Layer conv0
I0428 19:58:56.546238 29117 net.cpp:408] conv0 <- data
I0428 19:58:56.546248 29117 net.cpp:382] conv0 -> conv0
I0428 19:58:56.774922 29117 net.cpp:124] Setting up conv0
I0428 19:58:56.774947 29117 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:56.774951 29117 net.cpp:139] Memory required for data: 1675520
I0428 19:58:56.774966 29117 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:56.774977 29117 net.cpp:86] Creating Layer pool0
I0428 19:58:56.774981 29117 net.cpp:408] pool0 <- conv0
I0428 19:58:56.774986 29117 net.cpp:382] pool0 -> pool0
I0428 19:58:56.775045 29117 net.cpp:124] Setting up pool0
I0428 19:58:56.775050 29117 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:56.775053 29117 net.cpp:139] Memory required for data: 2044160
I0428 19:58:56.775055 29117 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:56.775066 29117 net.cpp:86] Creating Layer conv1
I0428 19:58:56.775069 29117 net.cpp:408] conv1 <- pool0
I0428 19:58:56.775074 29117 net.cpp:382] conv1 -> conv1
I0428 19:58:56.777999 29117 net.cpp:124] Setting up conv1
I0428 19:58:56.778028 29117 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:56.778031 29117 net.cpp:139] Memory required for data: 2208000
I0428 19:58:56.778056 29117 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:56.778064 29117 net.cpp:86] Creating Layer pool1
I0428 19:58:56.778067 29117 net.cpp:408] pool1 <- conv1
I0428 19:58:56.778072 29117 net.cpp:382] pool1 -> pool1
I0428 19:58:56.778125 29117 net.cpp:124] Setting up pool1
I0428 19:58:56.778131 29117 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:56.778133 29117 net.cpp:139] Memory required for data: 2248960
I0428 19:58:56.778136 29117 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:56.778144 29117 net.cpp:86] Creating Layer ip1
I0428 19:58:56.778147 29117 net.cpp:408] ip1 <- pool1
I0428 19:58:56.778151 29117 net.cpp:382] ip1 -> ip1
I0428 19:58:56.778259 29117 net.cpp:124] Setting up ip1
I0428 19:58:56.778265 29117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:56.778268 29117 net.cpp:139] Memory required for data: 2251520
I0428 19:58:56.778275 29117 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:56.778281 29117 net.cpp:86] Creating Layer relu1
I0428 19:58:56.778285 29117 net.cpp:408] relu1 <- ip1
I0428 19:58:56.778290 29117 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:56.778465 29117 net.cpp:124] Setting up relu1
I0428 19:58:56.778475 29117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:56.778477 29117 net.cpp:139] Memory required for data: 2254080
I0428 19:58:56.778479 29117 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:56.778486 29117 net.cpp:86] Creating Layer ip2
I0428 19:58:56.778488 29117 net.cpp:408] ip2 <- ip1
I0428 19:58:56.778493 29117 net.cpp:382] ip2 -> ip2
I0428 19:58:56.778584 29117 net.cpp:124] Setting up ip2
I0428 19:58:56.778590 29117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:56.778594 29117 net.cpp:139] Memory required for data: 2256640
I0428 19:58:56.778599 29117 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:56.778604 29117 net.cpp:86] Creating Layer relu2
I0428 19:58:56.778607 29117 net.cpp:408] relu2 <- ip2
I0428 19:58:56.778610 29117 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:56.779417 29117 net.cpp:124] Setting up relu2
I0428 19:58:56.779428 29117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:56.779448 29117 net.cpp:139] Memory required for data: 2259200
I0428 19:58:56.779450 29117 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:56.779472 29117 net.cpp:86] Creating Layer ip3
I0428 19:58:56.779475 29117 net.cpp:408] ip3 <- ip2
I0428 19:58:56.779481 29117 net.cpp:382] ip3 -> ip3
I0428 19:58:56.779579 29117 net.cpp:124] Setting up ip3
I0428 19:58:56.779587 29117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:56.779589 29117 net.cpp:139] Memory required for data: 2261760
I0428 19:58:56.779597 29117 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:56.779602 29117 net.cpp:86] Creating Layer relu3
I0428 19:58:56.779605 29117 net.cpp:408] relu3 <- ip3
I0428 19:58:56.779609 29117 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:56.779780 29117 net.cpp:124] Setting up relu3
I0428 19:58:56.779789 29117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:56.779791 29117 net.cpp:139] Memory required for data: 2264320
I0428 19:58:56.779794 29117 layer_factory.hpp:77] Creating layer loss
I0428 19:58:56.779801 29117 net.cpp:86] Creating Layer loss
I0428 19:58:56.779804 29117 net.cpp:408] loss <- ip3
I0428 19:58:56.779808 29117 net.cpp:408] loss <- label
I0428 19:58:56.779814 29117 net.cpp:382] loss -> loss
I0428 19:58:56.779830 29117 layer_factory.hpp:77] Creating layer loss
I0428 19:58:56.780098 29117 net.cpp:124] Setting up loss
I0428 19:58:56.780122 29117 net.cpp:131] Top shape: (1)
I0428 19:58:56.780123 29117 net.cpp:134]     with loss weight 1
I0428 19:58:56.780154 29117 net.cpp:139] Memory required for data: 2264324
I0428 19:58:56.780158 29117 net.cpp:200] loss needs backward computation.
I0428 19:58:56.780160 29117 net.cpp:200] relu3 needs backward computation.
I0428 19:58:56.780164 29117 net.cpp:200] ip3 needs backward computation.
I0428 19:58:56.780166 29117 net.cpp:200] relu2 needs backward computation.
I0428 19:58:56.780169 29117 net.cpp:200] ip2 needs backward computation.
I0428 19:58:56.780170 29117 net.cpp:200] relu1 needs backward computation.
I0428 19:58:56.780174 29117 net.cpp:200] ip1 needs backward computation.
I0428 19:58:56.780176 29117 net.cpp:200] pool1 needs backward computation.
I0428 19:58:56.780179 29117 net.cpp:200] conv1 needs backward computation.
I0428 19:58:56.780181 29117 net.cpp:200] pool0 needs backward computation.
I0428 19:58:56.780184 29117 net.cpp:200] conv0 needs backward computation.
I0428 19:58:56.780187 29117 net.cpp:202] mnist does not need backward computation.
I0428 19:58:56.780189 29117 net.cpp:244] This network produces output loss
I0428 19:58:56.780200 29117 net.cpp:257] Network initialization done.
I0428 19:58:56.780586 29117 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test833.prototxt
I0428 19:58:56.780629 29117 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:56.780725 29117 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:58:56.780856 29117 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:56.780899 29117 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:56.780912 29117 net.cpp:86] Creating Layer mnist
I0428 19:58:56.780917 29117 net.cpp:382] mnist -> data
I0428 19:58:56.780925 29117 net.cpp:382] mnist -> label
I0428 19:58:56.781016 29117 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:56.782927 29117 net.cpp:124] Setting up mnist
I0428 19:58:56.782955 29117 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:56.782960 29117 net.cpp:131] Top shape: 100 (100)
I0428 19:58:56.782963 29117 net.cpp:139] Memory required for data: 314000
I0428 19:58:56.782966 29117 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:56.782999 29117 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:56.783004 29117 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:56.783026 29117 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:56.783035 29117 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:56.783079 29117 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:56.783084 29117 net.cpp:131] Top shape: 100 (100)
I0428 19:58:56.783088 29117 net.cpp:131] Top shape: 100 (100)
I0428 19:58:56.783090 29117 net.cpp:139] Memory required for data: 314800
I0428 19:58:56.783093 29117 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:56.783102 29117 net.cpp:86] Creating Layer conv0
I0428 19:58:56.783105 29117 net.cpp:408] conv0 <- data
I0428 19:58:56.783112 29117 net.cpp:382] conv0 -> conv0
I0428 19:58:56.784906 29117 net.cpp:124] Setting up conv0
I0428 19:58:56.784920 29117 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:56.784924 29117 net.cpp:139] Memory required for data: 2618800
I0428 19:58:56.784934 29117 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:56.784955 29117 net.cpp:86] Creating Layer pool0
I0428 19:58:56.784958 29117 net.cpp:408] pool0 <- conv0
I0428 19:58:56.784965 29117 net.cpp:382] pool0 -> pool0
I0428 19:58:56.785003 29117 net.cpp:124] Setting up pool0
I0428 19:58:56.785008 29117 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:56.785012 29117 net.cpp:139] Memory required for data: 3194800
I0428 19:58:56.785014 29117 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:56.785024 29117 net.cpp:86] Creating Layer conv1
I0428 19:58:56.785028 29117 net.cpp:408] conv1 <- pool0
I0428 19:58:56.785032 29117 net.cpp:382] conv1 -> conv1
I0428 19:58:56.787170 29117 net.cpp:124] Setting up conv1
I0428 19:58:56.787184 29117 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:56.787186 29117 net.cpp:139] Memory required for data: 3450800
I0428 19:58:56.787209 29117 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:56.787231 29117 net.cpp:86] Creating Layer pool1
I0428 19:58:56.787235 29117 net.cpp:408] pool1 <- conv1
I0428 19:58:56.787241 29117 net.cpp:382] pool1 -> pool1
I0428 19:58:56.787279 29117 net.cpp:124] Setting up pool1
I0428 19:58:56.787284 29117 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:56.787287 29117 net.cpp:139] Memory required for data: 3514800
I0428 19:58:56.787289 29117 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:56.787297 29117 net.cpp:86] Creating Layer ip1
I0428 19:58:56.787300 29117 net.cpp:408] ip1 <- pool1
I0428 19:58:56.787305 29117 net.cpp:382] ip1 -> ip1
I0428 19:58:56.787413 29117 net.cpp:124] Setting up ip1
I0428 19:58:56.787420 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.787432 29117 net.cpp:139] Memory required for data: 3518800
I0428 19:58:56.787439 29117 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:56.787459 29117 net.cpp:86] Creating Layer relu1
I0428 19:58:56.787462 29117 net.cpp:408] relu1 <- ip1
I0428 19:58:56.787468 29117 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:56.787721 29117 net.cpp:124] Setting up relu1
I0428 19:58:56.787729 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.787732 29117 net.cpp:139] Memory required for data: 3522800
I0428 19:58:56.787736 29117 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:56.787744 29117 net.cpp:86] Creating Layer ip2
I0428 19:58:56.787748 29117 net.cpp:408] ip2 <- ip1
I0428 19:58:56.787760 29117 net.cpp:382] ip2 -> ip2
I0428 19:58:56.787858 29117 net.cpp:124] Setting up ip2
I0428 19:58:56.787864 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.787866 29117 net.cpp:139] Memory required for data: 3526800
I0428 19:58:56.787871 29117 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:56.787876 29117 net.cpp:86] Creating Layer relu2
I0428 19:58:56.787879 29117 net.cpp:408] relu2 <- ip2
I0428 19:58:56.787885 29117 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:56.788038 29117 net.cpp:124] Setting up relu2
I0428 19:58:56.788045 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.788048 29117 net.cpp:139] Memory required for data: 3530800
I0428 19:58:56.788053 29117 layer_factory.hpp:77] Creating layer ip3
I0428 19:58:56.788058 29117 net.cpp:86] Creating Layer ip3
I0428 19:58:56.788063 29117 net.cpp:408] ip3 <- ip2
I0428 19:58:56.788066 29117 net.cpp:382] ip3 -> ip3
I0428 19:58:56.788161 29117 net.cpp:124] Setting up ip3
I0428 19:58:56.788167 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.788170 29117 net.cpp:139] Memory required for data: 3534800
I0428 19:58:56.788193 29117 layer_factory.hpp:77] Creating layer relu3
I0428 19:58:56.788199 29117 net.cpp:86] Creating Layer relu3
I0428 19:58:56.788203 29117 net.cpp:408] relu3 <- ip3
I0428 19:58:56.788208 29117 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:58:56.789216 29117 net.cpp:124] Setting up relu3
I0428 19:58:56.789228 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.789232 29117 net.cpp:139] Memory required for data: 3538800
I0428 19:58:56.789235 29117 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:58:56.789240 29117 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:58:56.789243 29117 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:58:56.789248 29117 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:58:56.789254 29117 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:58:56.789314 29117 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:58:56.789319 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.789322 29117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:56.789324 29117 net.cpp:139] Memory required for data: 3546800
I0428 19:58:56.789327 29117 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:56.789335 29117 net.cpp:86] Creating Layer accuracy
I0428 19:58:56.789345 29117 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:58:56.789348 29117 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:56.789353 29117 net.cpp:382] accuracy -> accuracy
I0428 19:58:56.789361 29117 net.cpp:124] Setting up accuracy
I0428 19:58:56.789364 29117 net.cpp:131] Top shape: (1)
I0428 19:58:56.789367 29117 net.cpp:139] Memory required for data: 3546804
I0428 19:58:56.789369 29117 layer_factory.hpp:77] Creating layer loss
I0428 19:58:56.789374 29117 net.cpp:86] Creating Layer loss
I0428 19:58:56.789377 29117 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:58:56.789381 29117 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:56.789386 29117 net.cpp:382] loss -> loss
I0428 19:58:56.789404 29117 layer_factory.hpp:77] Creating layer loss
I0428 19:58:56.789674 29117 net.cpp:124] Setting up loss
I0428 19:58:56.789682 29117 net.cpp:131] Top shape: (1)
I0428 19:58:56.789700 29117 net.cpp:134]     with loss weight 1
I0428 19:58:56.789705 29117 net.cpp:139] Memory required for data: 3546808
I0428 19:58:56.789718 29117 net.cpp:200] loss needs backward computation.
I0428 19:58:56.789742 29117 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:56.789746 29117 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:58:56.789749 29117 net.cpp:200] relu3 needs backward computation.
I0428 19:58:56.789752 29117 net.cpp:200] ip3 needs backward computation.
I0428 19:58:56.789757 29117 net.cpp:200] relu2 needs backward computation.
I0428 19:58:56.789759 29117 net.cpp:200] ip2 needs backward computation.
I0428 19:58:56.789762 29117 net.cpp:200] relu1 needs backward computation.
I0428 19:58:56.789765 29117 net.cpp:200] ip1 needs backward computation.
I0428 19:58:56.789768 29117 net.cpp:200] pool1 needs backward computation.
I0428 19:58:56.789772 29117 net.cpp:200] conv1 needs backward computation.
I0428 19:58:56.789790 29117 net.cpp:200] pool0 needs backward computation.
I0428 19:58:56.789793 29117 net.cpp:200] conv0 needs backward computation.
I0428 19:58:56.789796 29117 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:56.789800 29117 net.cpp:202] mnist does not need backward computation.
I0428 19:58:56.789803 29117 net.cpp:244] This network produces output accuracy
I0428 19:58:56.789806 29117 net.cpp:244] This network produces output loss
I0428 19:58:56.789819 29117 net.cpp:257] Network initialization done.
I0428 19:58:56.789860 29117 solver.cpp:56] Solver scaffolding done.
I0428 19:58:56.790213 29117 caffe.cpp:248] Starting Optimization
I0428 19:58:56.790220 29117 solver.cpp:273] Solving LeNet
I0428 19:58:56.790221 29117 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:56.790442 29117 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:56.794718 29117 blocking_queue.cpp:49] Waiting for data
I0428 19:58:56.865694 29124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:56.866214 29117 solver.cpp:398]     Test net output #0: accuracy = 0.1102
I0428 19:58:56.866247 29117 solver.cpp:398]     Test net output #1: loss = 2.29458 (* 1 = 2.29458 loss)
I0428 19:58:56.868763 29117 solver.cpp:219] Iteration 0 (-1.28012e-30 iter/s, 0.0785173s/100 iters), loss = 2.29457
I0428 19:58:56.868787 29117 solver.cpp:238]     Train net output #0: loss = 2.29457 (* 1 = 2.29457 loss)
I0428 19:58:56.868834 29117 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:56.949300 29117 solver.cpp:219] Iteration 100 (1242.24 iter/s, 0.0804999s/100 iters), loss = 1.31258
I0428 19:58:56.949338 29117 solver.cpp:238]     Train net output #0: loss = 1.31258 (* 1 = 1.31258 loss)
I0428 19:58:56.949344 29117 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:57.027673 29117 solver.cpp:219] Iteration 200 (1276.47 iter/s, 0.0783411s/100 iters), loss = 1.14276
I0428 19:58:57.027712 29117 solver.cpp:238]     Train net output #0: loss = 1.14276 (* 1 = 1.14276 loss)
I0428 19:58:57.027717 29117 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:57.105712 29117 solver.cpp:219] Iteration 300 (1281.96 iter/s, 0.0780054s/100 iters), loss = 0.45606
I0428 19:58:57.105751 29117 solver.cpp:238]     Train net output #0: loss = 0.45606 (* 1 = 0.45606 loss)
I0428 19:58:57.105757 29117 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:57.185295 29117 solver.cpp:219] Iteration 400 (1257.09 iter/s, 0.0795485s/100 iters), loss = 0.386403
I0428 19:58:57.185336 29117 solver.cpp:238]     Train net output #0: loss = 0.386403 (* 1 = 0.386403 loss)
I0428 19:58:57.185343 29117 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:57.264565 29117 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:57.317842 29124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:57.318346 29117 solver.cpp:398]     Test net output #0: accuracy = 0.9249
I0428 19:58:57.318380 29117 solver.cpp:398]     Test net output #1: loss = 0.288208 (* 1 = 0.288208 loss)
I0428 19:58:57.319277 29117 solver.cpp:219] Iteration 500 (746.579 iter/s, 0.133944s/100 iters), loss = 0.373978
I0428 19:58:57.319315 29117 solver.cpp:238]     Train net output #0: loss = 0.373978 (* 1 = 0.373978 loss)
I0428 19:58:57.319322 29117 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:57.401197 29117 solver.cpp:219] Iteration 600 (1221.46 iter/s, 0.0818695s/100 iters), loss = 0.295411
I0428 19:58:57.401234 29117 solver.cpp:238]     Train net output #0: loss = 0.295411 (* 1 = 0.295411 loss)
I0428 19:58:57.401242 29117 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:57.483512 29117 solver.cpp:219] Iteration 700 (1215.51 iter/s, 0.0822702s/100 iters), loss = 0.296517
I0428 19:58:57.483553 29117 solver.cpp:238]     Train net output #0: loss = 0.296517 (* 1 = 0.296517 loss)
I0428 19:58:57.483559 29117 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:57.562542 29117 solver.cpp:219] Iteration 800 (1265.9 iter/s, 0.0789955s/100 iters), loss = 0.380898
I0428 19:58:57.562582 29117 solver.cpp:238]     Train net output #0: loss = 0.380898 (* 1 = 0.380898 loss)
I0428 19:58:57.562588 29117 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:57.646605 29117 solver.cpp:219] Iteration 900 (1190.09 iter/s, 0.0840274s/100 iters), loss = 0.249873
I0428 19:58:57.646643 29117 solver.cpp:238]     Train net output #0: loss = 0.249873 (* 1 = 0.249873 loss)
I0428 19:58:57.646649 29117 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:57.674535 29123 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:57.727295 29117 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:57.728020 29117 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:57.728520 29117 solver.cpp:311] Iteration 1000, loss = 0.15138
I0428 19:58:57.728534 29117 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:57.803035 29124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:57.803565 29117 solver.cpp:398]     Test net output #0: accuracy = 0.9613
I0428 19:58:57.803599 29117 solver.cpp:398]     Test net output #1: loss = 0.135301 (* 1 = 0.135301 loss)
I0428 19:58:57.803604 29117 solver.cpp:316] Optimization Done.
I0428 19:58:57.803607 29117 caffe.cpp:259] Optimization Done.
