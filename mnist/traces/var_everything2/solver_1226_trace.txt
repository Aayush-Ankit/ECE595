I0428 20:14:36.502614 32713 caffe.cpp:218] Using GPUs 0
I0428 20:14:36.539058 32713 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:14:37.047111 32713 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1226.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:14:37.047255 32713 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1226.prototxt
I0428 20:14:37.047672 32713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:14:37.047691 32713 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:14:37.047794 32713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:37.047875 32713 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:37.047976 32713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:14:37.048001 32713 net.cpp:86] Creating Layer mnist
I0428 20:14:37.048007 32713 net.cpp:382] mnist -> data
I0428 20:14:37.048029 32713 net.cpp:382] mnist -> label
I0428 20:14:37.049127 32713 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:14:37.051656 32713 net.cpp:124] Setting up mnist
I0428 20:14:37.051672 32713 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:14:37.051681 32713 net.cpp:131] Top shape: 64 (64)
I0428 20:14:37.051684 32713 net.cpp:139] Memory required for data: 200960
I0428 20:14:37.051692 32713 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:37.051707 32713 net.cpp:86] Creating Layer conv0
I0428 20:14:37.051728 32713 net.cpp:408] conv0 <- data
I0428 20:14:37.051741 32713 net.cpp:382] conv0 -> conv0
I0428 20:14:37.338603 32713 net.cpp:124] Setting up conv0
I0428 20:14:37.338630 32713 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:14:37.338635 32713 net.cpp:139] Memory required for data: 7573760
I0428 20:14:37.338650 32713 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:37.338662 32713 net.cpp:86] Creating Layer pool0
I0428 20:14:37.338665 32713 net.cpp:408] pool0 <- conv0
I0428 20:14:37.338671 32713 net.cpp:382] pool0 -> pool0
I0428 20:14:37.338722 32713 net.cpp:124] Setting up pool0
I0428 20:14:37.338731 32713 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:14:37.338733 32713 net.cpp:139] Memory required for data: 9416960
I0428 20:14:37.338737 32713 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:37.338747 32713 net.cpp:86] Creating Layer conv1
I0428 20:14:37.338752 32713 net.cpp:408] conv1 <- pool0
I0428 20:14:37.338757 32713 net.cpp:382] conv1 -> conv1
I0428 20:14:37.340667 32713 net.cpp:124] Setting up conv1
I0428 20:14:37.340682 32713 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:14:37.340685 32713 net.cpp:139] Memory required for data: 9449728
I0428 20:14:37.340694 32713 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:37.340701 32713 net.cpp:86] Creating Layer pool1
I0428 20:14:37.340705 32713 net.cpp:408] pool1 <- conv1
I0428 20:14:37.340710 32713 net.cpp:382] pool1 -> pool1
I0428 20:14:37.340747 32713 net.cpp:124] Setting up pool1
I0428 20:14:37.340755 32713 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:14:37.340759 32713 net.cpp:139] Memory required for data: 9457920
I0428 20:14:37.340761 32713 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:37.340772 32713 net.cpp:86] Creating Layer ip1
I0428 20:14:37.340775 32713 net.cpp:408] ip1 <- pool1
I0428 20:14:37.340780 32713 net.cpp:382] ip1 -> ip1
I0428 20:14:37.340884 32713 net.cpp:124] Setting up ip1
I0428 20:14:37.340893 32713 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:37.340896 32713 net.cpp:139] Memory required for data: 9460480
I0428 20:14:37.340903 32713 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:37.340909 32713 net.cpp:86] Creating Layer relu1
I0428 20:14:37.340912 32713 net.cpp:408] relu1 <- ip1
I0428 20:14:37.340917 32713 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:37.341084 32713 net.cpp:124] Setting up relu1
I0428 20:14:37.341092 32713 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:37.341095 32713 net.cpp:139] Memory required for data: 9463040
I0428 20:14:37.341099 32713 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:37.341105 32713 net.cpp:86] Creating Layer ip2
I0428 20:14:37.341109 32713 net.cpp:408] ip2 <- ip1
I0428 20:14:37.341114 32713 net.cpp:382] ip2 -> ip2
I0428 20:14:37.341217 32713 net.cpp:124] Setting up ip2
I0428 20:14:37.341224 32713 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:37.341228 32713 net.cpp:139] Memory required for data: 9469440
I0428 20:14:37.341233 32713 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:37.341238 32713 net.cpp:86] Creating Layer relu2
I0428 20:14:37.341241 32713 net.cpp:408] relu2 <- ip2
I0428 20:14:37.341245 32713 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:37.341984 32713 net.cpp:124] Setting up relu2
I0428 20:14:37.341997 32713 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:37.342001 32713 net.cpp:139] Memory required for data: 9475840
I0428 20:14:37.342005 32713 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:37.342011 32713 net.cpp:86] Creating Layer ip3
I0428 20:14:37.342015 32713 net.cpp:408] ip3 <- ip2
I0428 20:14:37.342020 32713 net.cpp:382] ip3 -> ip3
I0428 20:14:37.342118 32713 net.cpp:124] Setting up ip3
I0428 20:14:37.342125 32713 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:37.342128 32713 net.cpp:139] Memory required for data: 9478400
I0428 20:14:37.342136 32713 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:37.342141 32713 net.cpp:86] Creating Layer relu3
I0428 20:14:37.342144 32713 net.cpp:408] relu3 <- ip3
I0428 20:14:37.342149 32713 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:37.342309 32713 net.cpp:124] Setting up relu3
I0428 20:14:37.342317 32713 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:37.342320 32713 net.cpp:139] Memory required for data: 9480960
I0428 20:14:37.342324 32713 layer_factory.hpp:77] Creating layer loss
I0428 20:14:37.342329 32713 net.cpp:86] Creating Layer loss
I0428 20:14:37.342332 32713 net.cpp:408] loss <- ip3
I0428 20:14:37.342336 32713 net.cpp:408] loss <- label
I0428 20:14:37.342341 32713 net.cpp:382] loss -> loss
I0428 20:14:37.342360 32713 layer_factory.hpp:77] Creating layer loss
I0428 20:14:37.342579 32713 net.cpp:124] Setting up loss
I0428 20:14:37.342589 32713 net.cpp:131] Top shape: (1)
I0428 20:14:37.342592 32713 net.cpp:134]     with loss weight 1
I0428 20:14:37.342607 32713 net.cpp:139] Memory required for data: 9480964
I0428 20:14:37.342609 32713 net.cpp:200] loss needs backward computation.
I0428 20:14:37.342613 32713 net.cpp:200] relu3 needs backward computation.
I0428 20:14:37.342617 32713 net.cpp:200] ip3 needs backward computation.
I0428 20:14:37.342619 32713 net.cpp:200] relu2 needs backward computation.
I0428 20:14:37.342622 32713 net.cpp:200] ip2 needs backward computation.
I0428 20:14:37.342624 32713 net.cpp:200] relu1 needs backward computation.
I0428 20:14:37.342628 32713 net.cpp:200] ip1 needs backward computation.
I0428 20:14:37.342630 32713 net.cpp:200] pool1 needs backward computation.
I0428 20:14:37.342633 32713 net.cpp:200] conv1 needs backward computation.
I0428 20:14:37.342636 32713 net.cpp:200] pool0 needs backward computation.
I0428 20:14:37.342639 32713 net.cpp:200] conv0 needs backward computation.
I0428 20:14:37.342643 32713 net.cpp:202] mnist does not need backward computation.
I0428 20:14:37.342645 32713 net.cpp:244] This network produces output loss
I0428 20:14:37.342654 32713 net.cpp:257] Network initialization done.
I0428 20:14:37.342999 32713 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1226.prototxt
I0428 20:14:37.343027 32713 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:14:37.343117 32713 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:37.343196 32713 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:37.343238 32713 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:14:37.343251 32713 net.cpp:86] Creating Layer mnist
I0428 20:14:37.343255 32713 net.cpp:382] mnist -> data
I0428 20:14:37.343263 32713 net.cpp:382] mnist -> label
I0428 20:14:37.343348 32713 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:14:37.345499 32713 net.cpp:124] Setting up mnist
I0428 20:14:37.345521 32713 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:14:37.345527 32713 net.cpp:131] Top shape: 100 (100)
I0428 20:14:37.345530 32713 net.cpp:139] Memory required for data: 314000
I0428 20:14:37.345533 32713 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:14:37.345543 32713 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:14:37.345546 32713 net.cpp:408] label_mnist_1_split <- label
I0428 20:14:37.345551 32713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:14:37.345557 32713 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:14:37.345645 32713 net.cpp:124] Setting up label_mnist_1_split
I0428 20:14:37.345656 32713 net.cpp:131] Top shape: 100 (100)
I0428 20:14:37.345664 32713 net.cpp:131] Top shape: 100 (100)
I0428 20:14:37.345667 32713 net.cpp:139] Memory required for data: 314800
I0428 20:14:37.345672 32713 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:37.345687 32713 net.cpp:86] Creating Layer conv0
I0428 20:14:37.345693 32713 net.cpp:408] conv0 <- data
I0428 20:14:37.345705 32713 net.cpp:382] conv0 -> conv0
I0428 20:14:37.347276 32713 net.cpp:124] Setting up conv0
I0428 20:14:37.347290 32713 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:14:37.347293 32713 net.cpp:139] Memory required for data: 11834800
I0428 20:14:37.347302 32713 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:37.347309 32713 net.cpp:86] Creating Layer pool0
I0428 20:14:37.347313 32713 net.cpp:408] pool0 <- conv0
I0428 20:14:37.347318 32713 net.cpp:382] pool0 -> pool0
I0428 20:14:37.347360 32713 net.cpp:124] Setting up pool0
I0428 20:14:37.347367 32713 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:14:37.347369 32713 net.cpp:139] Memory required for data: 14714800
I0428 20:14:37.347373 32713 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:37.347381 32713 net.cpp:86] Creating Layer conv1
I0428 20:14:37.347384 32713 net.cpp:408] conv1 <- pool0
I0428 20:14:37.347393 32713 net.cpp:382] conv1 -> conv1
I0428 20:14:37.349035 32713 net.cpp:124] Setting up conv1
I0428 20:14:37.349050 32713 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:14:37.349053 32713 net.cpp:139] Memory required for data: 14766000
I0428 20:14:37.349062 32713 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:37.349068 32713 net.cpp:86] Creating Layer pool1
I0428 20:14:37.349087 32713 net.cpp:408] pool1 <- conv1
I0428 20:14:37.349093 32713 net.cpp:382] pool1 -> pool1
I0428 20:14:37.349131 32713 net.cpp:124] Setting up pool1
I0428 20:14:37.349136 32713 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:14:37.349139 32713 net.cpp:139] Memory required for data: 14778800
I0428 20:14:37.349143 32713 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:37.349149 32713 net.cpp:86] Creating Layer ip1
I0428 20:14:37.349153 32713 net.cpp:408] ip1 <- pool1
I0428 20:14:37.349159 32713 net.cpp:382] ip1 -> ip1
I0428 20:14:37.349270 32713 net.cpp:124] Setting up ip1
I0428 20:14:37.349278 32713 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:37.349292 32713 net.cpp:139] Memory required for data: 14782800
I0428 20:14:37.349298 32713 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:37.349303 32713 net.cpp:86] Creating Layer relu1
I0428 20:14:37.349306 32713 net.cpp:408] relu1 <- ip1
I0428 20:14:37.349311 32713 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:37.349486 32713 net.cpp:124] Setting up relu1
I0428 20:14:37.349495 32713 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:37.349498 32713 net.cpp:139] Memory required for data: 14786800
I0428 20:14:37.349501 32713 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:37.349509 32713 net.cpp:86] Creating Layer ip2
I0428 20:14:37.349511 32713 net.cpp:408] ip2 <- ip1
I0428 20:14:37.349517 32713 net.cpp:382] ip2 -> ip2
I0428 20:14:37.349664 32713 net.cpp:124] Setting up ip2
I0428 20:14:37.349673 32713 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:37.349676 32713 net.cpp:139] Memory required for data: 14796800
I0428 20:14:37.349681 32713 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:37.349701 32713 net.cpp:86] Creating Layer relu2
I0428 20:14:37.349704 32713 net.cpp:408] relu2 <- ip2
I0428 20:14:37.349709 32713 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:37.349907 32713 net.cpp:124] Setting up relu2
I0428 20:14:37.349925 32713 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:37.349931 32713 net.cpp:139] Memory required for data: 14806800
I0428 20:14:37.349936 32713 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:37.349946 32713 net.cpp:86] Creating Layer ip3
I0428 20:14:37.349956 32713 net.cpp:408] ip3 <- ip2
I0428 20:14:37.349962 32713 net.cpp:382] ip3 -> ip3
I0428 20:14:37.350064 32713 net.cpp:124] Setting up ip3
I0428 20:14:37.350072 32713 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:37.350075 32713 net.cpp:139] Memory required for data: 14810800
I0428 20:14:37.350083 32713 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:37.350088 32713 net.cpp:86] Creating Layer relu3
I0428 20:14:37.350091 32713 net.cpp:408] relu3 <- ip3
I0428 20:14:37.350103 32713 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:37.350889 32713 net.cpp:124] Setting up relu3
I0428 20:14:37.350901 32713 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:37.350904 32713 net.cpp:139] Memory required for data: 14814800
I0428 20:14:37.350908 32713 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:14:37.350914 32713 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:14:37.350917 32713 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:14:37.350922 32713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:14:37.350927 32713 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:14:37.350970 32713 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:14:37.350980 32713 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:37.350982 32713 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:37.350986 32713 net.cpp:139] Memory required for data: 14822800
I0428 20:14:37.350988 32713 layer_factory.hpp:77] Creating layer accuracy
I0428 20:14:37.350993 32713 net.cpp:86] Creating Layer accuracy
I0428 20:14:37.350996 32713 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:14:37.351001 32713 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:14:37.351006 32713 net.cpp:382] accuracy -> accuracy
I0428 20:14:37.351012 32713 net.cpp:124] Setting up accuracy
I0428 20:14:37.351016 32713 net.cpp:131] Top shape: (1)
I0428 20:14:37.351019 32713 net.cpp:139] Memory required for data: 14822804
I0428 20:14:37.351022 32713 layer_factory.hpp:77] Creating layer loss
I0428 20:14:37.351027 32713 net.cpp:86] Creating Layer loss
I0428 20:14:37.351029 32713 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:14:37.351033 32713 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:14:37.351044 32713 net.cpp:382] loss -> loss
I0428 20:14:37.351052 32713 layer_factory.hpp:77] Creating layer loss
I0428 20:14:37.351338 32713 net.cpp:124] Setting up loss
I0428 20:14:37.351349 32713 net.cpp:131] Top shape: (1)
I0428 20:14:37.351352 32713 net.cpp:134]     with loss weight 1
I0428 20:14:37.351368 32713 net.cpp:139] Memory required for data: 14822808
I0428 20:14:37.351372 32713 net.cpp:200] loss needs backward computation.
I0428 20:14:37.351375 32713 net.cpp:202] accuracy does not need backward computation.
I0428 20:14:37.351379 32713 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:14:37.351382 32713 net.cpp:200] relu3 needs backward computation.
I0428 20:14:37.351385 32713 net.cpp:200] ip3 needs backward computation.
I0428 20:14:37.351394 32713 net.cpp:200] relu2 needs backward computation.
I0428 20:14:37.351397 32713 net.cpp:200] ip2 needs backward computation.
I0428 20:14:37.351404 32713 net.cpp:200] relu1 needs backward computation.
I0428 20:14:37.351413 32713 net.cpp:200] ip1 needs backward computation.
I0428 20:14:37.351415 32713 net.cpp:200] pool1 needs backward computation.
I0428 20:14:37.351418 32713 net.cpp:200] conv1 needs backward computation.
I0428 20:14:37.351421 32713 net.cpp:200] pool0 needs backward computation.
I0428 20:14:37.351424 32713 net.cpp:200] conv0 needs backward computation.
I0428 20:14:37.351428 32713 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:14:37.351433 32713 net.cpp:202] mnist does not need backward computation.
I0428 20:14:37.351435 32713 net.cpp:244] This network produces output accuracy
I0428 20:14:37.351438 32713 net.cpp:244] This network produces output loss
I0428 20:14:37.351465 32713 net.cpp:257] Network initialization done.
I0428 20:14:37.351522 32713 solver.cpp:56] Solver scaffolding done.
I0428 20:14:37.351924 32713 caffe.cpp:248] Starting Optimization
I0428 20:14:37.351930 32713 solver.cpp:273] Solving LeNet
I0428 20:14:37.351933 32713 solver.cpp:274] Learning Rate Policy: inv
I0428 20:14:37.352847 32713 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:14:37.359161 32713 blocking_queue.cpp:49] Waiting for data
I0428 20:14:37.427409 32720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:37.428238 32713 solver.cpp:398]     Test net output #0: accuracy = 0.0275
I0428 20:14:37.428272 32713 solver.cpp:398]     Test net output #1: loss = 2.3434 (* 1 = 2.3434 loss)
I0428 20:14:37.432502 32713 solver.cpp:219] Iteration 0 (-1.00893e-42 iter/s, 0.0805185s/100 iters), loss = 2.33451
I0428 20:14:37.432540 32713 solver.cpp:238]     Train net output #0: loss = 2.33451 (* 1 = 2.33451 loss)
I0428 20:14:37.432552 32713 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:14:37.544772 32713 solver.cpp:219] Iteration 100 (891 iter/s, 0.112233s/100 iters), loss = 0.874196
I0428 20:14:37.544796 32713 solver.cpp:238]     Train net output #0: loss = 0.874196 (* 1 = 0.874196 loss)
I0428 20:14:37.544802 32713 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:14:37.658807 32713 solver.cpp:219] Iteration 200 (877.194 iter/s, 0.114s/100 iters), loss = 0.853808
I0428 20:14:37.658833 32713 solver.cpp:238]     Train net output #0: loss = 0.853808 (* 1 = 0.853808 loss)
I0428 20:14:37.658838 32713 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:14:37.776144 32713 solver.cpp:219] Iteration 300 (852.506 iter/s, 0.117301s/100 iters), loss = 0.66603
I0428 20:14:37.776185 32713 solver.cpp:238]     Train net output #0: loss = 0.66603 (* 1 = 0.66603 loss)
I0428 20:14:37.776191 32713 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:37.887338 32713 solver.cpp:219] Iteration 400 (899.742 iter/s, 0.111143s/100 iters), loss = 0.538371
I0428 20:14:37.887377 32713 solver.cpp:238]     Train net output #0: loss = 0.538371 (* 1 = 0.538371 loss)
I0428 20:14:37.887383 32713 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:37.996781 32713 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:38.073182 32720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:38.073914 32713 solver.cpp:398]     Test net output #0: accuracy = 0.829
I0428 20:14:38.073946 32713 solver.cpp:398]     Test net output #1: loss = 0.495604 (* 1 = 0.495604 loss)
I0428 20:14:38.075143 32713 solver.cpp:219] Iteration 500 (532.573 iter/s, 0.187768s/100 iters), loss = 0.409919
I0428 20:14:38.075196 32713 solver.cpp:238]     Train net output #0: loss = 0.409919 (* 1 = 0.409919 loss)
I0428 20:14:38.075204 32713 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:38.205293 32713 solver.cpp:219] Iteration 600 (768.624 iter/s, 0.130103s/100 iters), loss = 0.318955
I0428 20:14:38.205332 32713 solver.cpp:238]     Train net output #0: loss = 0.318955 (* 1 = 0.318955 loss)
I0428 20:14:38.205338 32713 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:38.321480 32713 solver.cpp:219] Iteration 700 (860.946 iter/s, 0.116151s/100 iters), loss = 0.74505
I0428 20:14:38.321506 32713 solver.cpp:238]     Train net output #0: loss = 0.74505 (* 1 = 0.74505 loss)
I0428 20:14:38.321511 32713 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:38.435084 32713 solver.cpp:219] Iteration 800 (880.532 iter/s, 0.113568s/100 iters), loss = 0.469535
I0428 20:14:38.435124 32713 solver.cpp:238]     Train net output #0: loss = 0.469535 (* 1 = 0.469535 loss)
I0428 20:14:38.435130 32713 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:38.551959 32713 solver.cpp:219] Iteration 900 (855.875 iter/s, 0.116839s/100 iters), loss = 0.447304
I0428 20:14:38.551982 32713 solver.cpp:238]     Train net output #0: loss = 0.447304 (* 1 = 0.447304 loss)
I0428 20:14:38.551988 32713 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:38.589912 32719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:38.668085 32713 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:38.669082 32713 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:38.669790 32713 solver.cpp:311] Iteration 1000, loss = 0.35839
I0428 20:14:38.669806 32713 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:38.735677 32720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:38.737478 32713 solver.cpp:398]     Test net output #0: accuracy = 0.943
I0428 20:14:38.737498 32713 solver.cpp:398]     Test net output #1: loss = 0.182023 (* 1 = 0.182023 loss)
I0428 20:14:38.737502 32713 solver.cpp:316] Optimization Done.
I0428 20:14:38.737505 32713 caffe.cpp:259] Optimization Done.
