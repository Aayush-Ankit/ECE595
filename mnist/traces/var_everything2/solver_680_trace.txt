I0428 19:53:09.247239 27705 caffe.cpp:218] Using GPUs 0
I0428 19:53:09.276376 27705 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:09.721855 27705 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test680.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:09.721988 27705 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test680.prototxt
I0428 19:53:09.722373 27705 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:09.722404 27705 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:09.722479 27705 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:09.722537 27705 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:09.722635 27705 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:09.722654 27705 net.cpp:86] Creating Layer mnist
I0428 19:53:09.722661 27705 net.cpp:382] mnist -> data
I0428 19:53:09.722679 27705 net.cpp:382] mnist -> label
I0428 19:53:09.723587 27705 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:09.725922 27705 net.cpp:124] Setting up mnist
I0428 19:53:09.725953 27705 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:09.725958 27705 net.cpp:131] Top shape: 64 (64)
I0428 19:53:09.725962 27705 net.cpp:139] Memory required for data: 200960
I0428 19:53:09.725968 27705 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:09.725981 27705 net.cpp:86] Creating Layer conv0
I0428 19:53:09.725997 27705 net.cpp:408] conv0 <- data
I0428 19:53:09.726007 27705 net.cpp:382] conv0 -> conv0
I0428 19:53:09.953958 27705 net.cpp:124] Setting up conv0
I0428 19:53:09.953984 27705 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:09.953989 27705 net.cpp:139] Memory required for data: 938240
I0428 19:53:09.954001 27705 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:09.954013 27705 net.cpp:86] Creating Layer pool0
I0428 19:53:09.954017 27705 net.cpp:408] pool0 <- conv0
I0428 19:53:09.954022 27705 net.cpp:382] pool0 -> pool0
I0428 19:53:09.954082 27705 net.cpp:124] Setting up pool0
I0428 19:53:09.954089 27705 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:09.954092 27705 net.cpp:139] Memory required for data: 1122560
I0428 19:53:09.954095 27705 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:09.954107 27705 net.cpp:86] Creating Layer conv1
I0428 19:53:09.954109 27705 net.cpp:408] conv1 <- pool0
I0428 19:53:09.954113 27705 net.cpp:382] conv1 -> conv1
I0428 19:53:09.956800 27705 net.cpp:124] Setting up conv1
I0428 19:53:09.956836 27705 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:09.956841 27705 net.cpp:139] Memory required for data: 1941760
I0428 19:53:09.956849 27705 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:09.956857 27705 net.cpp:86] Creating Layer pool1
I0428 19:53:09.956876 27705 net.cpp:408] pool1 <- conv1
I0428 19:53:09.956885 27705 net.cpp:382] pool1 -> pool1
I0428 19:53:09.956941 27705 net.cpp:124] Setting up pool1
I0428 19:53:09.956949 27705 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:09.956953 27705 net.cpp:139] Memory required for data: 2146560
I0428 19:53:09.956955 27705 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:09.956962 27705 net.cpp:86] Creating Layer ip1
I0428 19:53:09.956965 27705 net.cpp:408] ip1 <- pool1
I0428 19:53:09.956970 27705 net.cpp:382] ip1 -> ip1
I0428 19:53:09.957109 27705 net.cpp:124] Setting up ip1
I0428 19:53:09.957118 27705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:09.957123 27705 net.cpp:139] Memory required for data: 2149120
I0428 19:53:09.957129 27705 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:09.957135 27705 net.cpp:86] Creating Layer relu1
I0428 19:53:09.957139 27705 net.cpp:408] relu1 <- ip1
I0428 19:53:09.957142 27705 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:09.957314 27705 net.cpp:124] Setting up relu1
I0428 19:53:09.957321 27705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:09.957324 27705 net.cpp:139] Memory required for data: 2151680
I0428 19:53:09.957327 27705 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:09.957334 27705 net.cpp:86] Creating Layer ip2
I0428 19:53:09.957336 27705 net.cpp:408] ip2 <- ip1
I0428 19:53:09.957341 27705 net.cpp:382] ip2 -> ip2
I0428 19:53:09.957430 27705 net.cpp:124] Setting up ip2
I0428 19:53:09.957437 27705 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:09.957440 27705 net.cpp:139] Memory required for data: 2158080
I0428 19:53:09.957445 27705 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:09.957451 27705 net.cpp:86] Creating Layer relu2
I0428 19:53:09.957454 27705 net.cpp:408] relu2 <- ip2
I0428 19:53:09.957458 27705 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:09.958204 27705 net.cpp:124] Setting up relu2
I0428 19:53:09.958231 27705 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:09.958235 27705 net.cpp:139] Memory required for data: 2164480
I0428 19:53:09.958238 27705 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:09.958245 27705 net.cpp:86] Creating Layer ip3
I0428 19:53:09.958248 27705 net.cpp:408] ip3 <- ip2
I0428 19:53:09.958253 27705 net.cpp:382] ip3 -> ip3
I0428 19:53:09.958344 27705 net.cpp:124] Setting up ip3
I0428 19:53:09.958353 27705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:09.958355 27705 net.cpp:139] Memory required for data: 2167040
I0428 19:53:09.958362 27705 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:09.958367 27705 net.cpp:86] Creating Layer relu3
I0428 19:53:09.958370 27705 net.cpp:408] relu3 <- ip3
I0428 19:53:09.958374 27705 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:09.958535 27705 net.cpp:124] Setting up relu3
I0428 19:53:09.958544 27705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:09.958547 27705 net.cpp:139] Memory required for data: 2169600
I0428 19:53:09.958550 27705 layer_factory.hpp:77] Creating layer loss
I0428 19:53:09.958556 27705 net.cpp:86] Creating Layer loss
I0428 19:53:09.958559 27705 net.cpp:408] loss <- ip3
I0428 19:53:09.958564 27705 net.cpp:408] loss <- label
I0428 19:53:09.958569 27705 net.cpp:382] loss -> loss
I0428 19:53:09.958585 27705 layer_factory.hpp:77] Creating layer loss
I0428 19:53:09.958822 27705 net.cpp:124] Setting up loss
I0428 19:53:09.958832 27705 net.cpp:131] Top shape: (1)
I0428 19:53:09.958850 27705 net.cpp:134]     with loss weight 1
I0428 19:53:09.958865 27705 net.cpp:139] Memory required for data: 2169604
I0428 19:53:09.958868 27705 net.cpp:200] loss needs backward computation.
I0428 19:53:09.958873 27705 net.cpp:200] relu3 needs backward computation.
I0428 19:53:09.958875 27705 net.cpp:200] ip3 needs backward computation.
I0428 19:53:09.958878 27705 net.cpp:200] relu2 needs backward computation.
I0428 19:53:09.958881 27705 net.cpp:200] ip2 needs backward computation.
I0428 19:53:09.958884 27705 net.cpp:200] relu1 needs backward computation.
I0428 19:53:09.958886 27705 net.cpp:200] ip1 needs backward computation.
I0428 19:53:09.958889 27705 net.cpp:200] pool1 needs backward computation.
I0428 19:53:09.958892 27705 net.cpp:200] conv1 needs backward computation.
I0428 19:53:09.958895 27705 net.cpp:200] pool0 needs backward computation.
I0428 19:53:09.958899 27705 net.cpp:200] conv0 needs backward computation.
I0428 19:53:09.958905 27705 net.cpp:202] mnist does not need backward computation.
I0428 19:53:09.958909 27705 net.cpp:244] This network produces output loss
I0428 19:53:09.958919 27705 net.cpp:257] Network initialization done.
I0428 19:53:09.959324 27705 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test680.prototxt
I0428 19:53:09.959383 27705 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:09.959470 27705 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:09.959545 27705 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:09.959588 27705 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:09.959600 27705 net.cpp:86] Creating Layer mnist
I0428 19:53:09.959604 27705 net.cpp:382] mnist -> data
I0428 19:53:09.959612 27705 net.cpp:382] mnist -> label
I0428 19:53:09.959698 27705 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:09.961889 27705 net.cpp:124] Setting up mnist
I0428 19:53:09.961918 27705 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:09.961923 27705 net.cpp:131] Top shape: 100 (100)
I0428 19:53:09.961926 27705 net.cpp:139] Memory required for data: 314000
I0428 19:53:09.961930 27705 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:09.961936 27705 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:09.961940 27705 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:09.961944 27705 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:09.961951 27705 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:09.961994 27705 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:09.962000 27705 net.cpp:131] Top shape: 100 (100)
I0428 19:53:09.962003 27705 net.cpp:131] Top shape: 100 (100)
I0428 19:53:09.962007 27705 net.cpp:139] Memory required for data: 314800
I0428 19:53:09.962009 27705 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:09.962016 27705 net.cpp:86] Creating Layer conv0
I0428 19:53:09.962019 27705 net.cpp:408] conv0 <- data
I0428 19:53:09.962024 27705 net.cpp:382] conv0 -> conv0
I0428 19:53:09.963659 27705 net.cpp:124] Setting up conv0
I0428 19:53:09.963672 27705 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:09.963675 27705 net.cpp:139] Memory required for data: 1466800
I0428 19:53:09.963685 27705 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:09.963690 27705 net.cpp:86] Creating Layer pool0
I0428 19:53:09.963693 27705 net.cpp:408] pool0 <- conv0
I0428 19:53:09.963698 27705 net.cpp:382] pool0 -> pool0
I0428 19:53:09.963732 27705 net.cpp:124] Setting up pool0
I0428 19:53:09.963742 27705 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:09.963744 27705 net.cpp:139] Memory required for data: 1754800
I0428 19:53:09.963747 27705 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:09.963755 27705 net.cpp:86] Creating Layer conv1
I0428 19:53:09.963758 27705 net.cpp:408] conv1 <- pool0
I0428 19:53:09.963762 27705 net.cpp:382] conv1 -> conv1
I0428 19:53:09.965353 27705 net.cpp:124] Setting up conv1
I0428 19:53:09.965368 27705 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:09.965371 27705 net.cpp:139] Memory required for data: 3034800
I0428 19:53:09.965380 27705 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:09.965386 27705 net.cpp:86] Creating Layer pool1
I0428 19:53:09.965390 27705 net.cpp:408] pool1 <- conv1
I0428 19:53:09.965395 27705 net.cpp:382] pool1 -> pool1
I0428 19:53:09.965456 27705 net.cpp:124] Setting up pool1
I0428 19:53:09.965468 27705 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:09.965473 27705 net.cpp:139] Memory required for data: 3354800
I0428 19:53:09.965479 27705 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:09.965489 27705 net.cpp:86] Creating Layer ip1
I0428 19:53:09.965520 27705 net.cpp:408] ip1 <- pool1
I0428 19:53:09.965526 27705 net.cpp:382] ip1 -> ip1
I0428 19:53:09.965678 27705 net.cpp:124] Setting up ip1
I0428 19:53:09.965687 27705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:09.965700 27705 net.cpp:139] Memory required for data: 3358800
I0428 19:53:09.965708 27705 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:09.965713 27705 net.cpp:86] Creating Layer relu1
I0428 19:53:09.965715 27705 net.cpp:408] relu1 <- ip1
I0428 19:53:09.965719 27705 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:09.965937 27705 net.cpp:124] Setting up relu1
I0428 19:53:09.965946 27705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:09.965950 27705 net.cpp:139] Memory required for data: 3362800
I0428 19:53:09.965953 27705 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:09.965960 27705 net.cpp:86] Creating Layer ip2
I0428 19:53:09.965963 27705 net.cpp:408] ip2 <- ip1
I0428 19:53:09.965967 27705 net.cpp:382] ip2 -> ip2
I0428 19:53:09.966059 27705 net.cpp:124] Setting up ip2
I0428 19:53:09.966066 27705 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:09.966069 27705 net.cpp:139] Memory required for data: 3372800
I0428 19:53:09.966074 27705 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:09.966078 27705 net.cpp:86] Creating Layer relu2
I0428 19:53:09.966083 27705 net.cpp:408] relu2 <- ip2
I0428 19:53:09.966091 27705 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:09.966235 27705 net.cpp:124] Setting up relu2
I0428 19:53:09.966246 27705 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:09.966249 27705 net.cpp:139] Memory required for data: 3382800
I0428 19:53:09.966253 27705 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:09.966258 27705 net.cpp:86] Creating Layer ip3
I0428 19:53:09.966260 27705 net.cpp:408] ip3 <- ip2
I0428 19:53:09.966265 27705 net.cpp:382] ip3 -> ip3
I0428 19:53:09.966356 27705 net.cpp:124] Setting up ip3
I0428 19:53:09.966364 27705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:09.966367 27705 net.cpp:139] Memory required for data: 3386800
I0428 19:53:09.966377 27705 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:09.966383 27705 net.cpp:86] Creating Layer relu3
I0428 19:53:09.966388 27705 net.cpp:408] relu3 <- ip3
I0428 19:53:09.966397 27705 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:09.967239 27705 net.cpp:124] Setting up relu3
I0428 19:53:09.967252 27705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:09.967255 27705 net.cpp:139] Memory required for data: 3390800
I0428 19:53:09.967263 27705 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:09.967268 27705 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:09.967277 27705 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:09.967281 27705 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:09.967288 27705 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:09.967321 27705 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:09.967329 27705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:09.967332 27705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:09.967335 27705 net.cpp:139] Memory required for data: 3398800
I0428 19:53:09.967339 27705 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:09.967346 27705 net.cpp:86] Creating Layer accuracy
I0428 19:53:09.967350 27705 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:09.967358 27705 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:09.967363 27705 net.cpp:382] accuracy -> accuracy
I0428 19:53:09.967375 27705 net.cpp:124] Setting up accuracy
I0428 19:53:09.967377 27705 net.cpp:131] Top shape: (1)
I0428 19:53:09.967384 27705 net.cpp:139] Memory required for data: 3398804
I0428 19:53:09.967387 27705 layer_factory.hpp:77] Creating layer loss
I0428 19:53:09.967391 27705 net.cpp:86] Creating Layer loss
I0428 19:53:09.967394 27705 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:09.967398 27705 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:09.967402 27705 net.cpp:382] loss -> loss
I0428 19:53:09.967409 27705 layer_factory.hpp:77] Creating layer loss
I0428 19:53:09.967640 27705 net.cpp:124] Setting up loss
I0428 19:53:09.967648 27705 net.cpp:131] Top shape: (1)
I0428 19:53:09.967653 27705 net.cpp:134]     with loss weight 1
I0428 19:53:09.967658 27705 net.cpp:139] Memory required for data: 3398808
I0428 19:53:09.967670 27705 net.cpp:200] loss needs backward computation.
I0428 19:53:09.967674 27705 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:09.967679 27705 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:09.967681 27705 net.cpp:200] relu3 needs backward computation.
I0428 19:53:09.967684 27705 net.cpp:200] ip3 needs backward computation.
I0428 19:53:09.967689 27705 net.cpp:200] relu2 needs backward computation.
I0428 19:53:09.967690 27705 net.cpp:200] ip2 needs backward computation.
I0428 19:53:09.967694 27705 net.cpp:200] relu1 needs backward computation.
I0428 19:53:09.967697 27705 net.cpp:200] ip1 needs backward computation.
I0428 19:53:09.967700 27705 net.cpp:200] pool1 needs backward computation.
I0428 19:53:09.967703 27705 net.cpp:200] conv1 needs backward computation.
I0428 19:53:09.967706 27705 net.cpp:200] pool0 needs backward computation.
I0428 19:53:09.967710 27705 net.cpp:200] conv0 needs backward computation.
I0428 19:53:09.967713 27705 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:09.967716 27705 net.cpp:202] mnist does not need backward computation.
I0428 19:53:09.967720 27705 net.cpp:244] This network produces output accuracy
I0428 19:53:09.967722 27705 net.cpp:244] This network produces output loss
I0428 19:53:09.967732 27705 net.cpp:257] Network initialization done.
I0428 19:53:09.967788 27705 solver.cpp:56] Solver scaffolding done.
I0428 19:53:09.968192 27705 caffe.cpp:248] Starting Optimization
I0428 19:53:09.968199 27705 solver.cpp:273] Solving LeNet
I0428 19:53:09.968202 27705 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:09.968446 27705 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:09.973608 27705 blocking_queue.cpp:49] Waiting for data
I0428 19:53:10.026700 27712 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:10.027180 27705 solver.cpp:398]     Test net output #0: accuracy = 0.0853
I0428 19:53:10.027215 27705 solver.cpp:398]     Test net output #1: loss = 2.3233 (* 1 = 2.3233 loss)
I0428 19:53:10.029793 27705 solver.cpp:219] Iteration 0 (-1.7462e-30 iter/s, 0.0615629s/100 iters), loss = 2.32602
I0428 19:53:10.029815 27705 solver.cpp:238]     Train net output #0: loss = 2.32602 (* 1 = 2.32602 loss)
I0428 19:53:10.029842 27705 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:10.132280 27705 solver.cpp:219] Iteration 100 (976.055 iter/s, 0.102453s/100 iters), loss = 1.09243
I0428 19:53:10.132320 27705 solver.cpp:238]     Train net output #0: loss = 1.09243 (* 1 = 1.09243 loss)
I0428 19:53:10.132326 27705 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:10.234000 27705 solver.cpp:219] Iteration 200 (983.585 iter/s, 0.101669s/100 iters), loss = 1.22829
I0428 19:53:10.234026 27705 solver.cpp:238]     Train net output #0: loss = 1.22829 (* 1 = 1.22829 loss)
I0428 19:53:10.234031 27705 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:10.347846 27705 solver.cpp:219] Iteration 300 (878.686 iter/s, 0.113806s/100 iters), loss = 1.02924
I0428 19:53:10.347877 27705 solver.cpp:238]     Train net output #0: loss = 1.02924 (* 1 = 1.02924 loss)
I0428 19:53:10.347885 27705 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:10.457964 27705 solver.cpp:219] Iteration 400 (908.488 iter/s, 0.110073s/100 iters), loss = 0.970483
I0428 19:53:10.458009 27705 solver.cpp:238]     Train net output #0: loss = 0.970483 (* 1 = 0.970483 loss)
I0428 19:53:10.458020 27705 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:10.567548 27705 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:10.621928 27712 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:10.622422 27705 solver.cpp:398]     Test net output #0: accuracy = 0.7559
I0428 19:53:10.622447 27705 solver.cpp:398]     Test net output #1: loss = 0.822539 (* 1 = 0.822539 loss)
I0428 19:53:10.623493 27705 solver.cpp:219] Iteration 500 (604.323 iter/s, 0.165474s/100 iters), loss = 0.623492
I0428 19:53:10.623529 27705 solver.cpp:238]     Train net output #0: loss = 0.623492 (* 1 = 0.623492 loss)
I0428 19:53:10.623553 27705 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:10.730804 27705 solver.cpp:219] Iteration 600 (932.266 iter/s, 0.107266s/100 iters), loss = 0.75972
I0428 19:53:10.730830 27705 solver.cpp:238]     Train net output #0: loss = 0.75972 (* 1 = 0.75972 loss)
I0428 19:53:10.730854 27705 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:10.832197 27705 solver.cpp:219] Iteration 700 (986.626 iter/s, 0.101356s/100 iters), loss = 0.951825
I0428 19:53:10.832240 27705 solver.cpp:238]     Train net output #0: loss = 0.951825 (* 1 = 0.951825 loss)
I0428 19:53:10.832248 27705 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:10.938952 27705 solver.cpp:219] Iteration 800 (937.182 iter/s, 0.106703s/100 iters), loss = 0.901607
I0428 19:53:10.938994 27705 solver.cpp:238]     Train net output #0: loss = 0.901607 (* 1 = 0.901607 loss)
I0428 19:53:10.939002 27705 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:11.044596 27705 solver.cpp:219] Iteration 900 (947.043 iter/s, 0.105592s/100 iters), loss = 0.977718
I0428 19:53:11.044637 27705 solver.cpp:238]     Train net output #0: loss = 0.977718 (* 1 = 0.977718 loss)
I0428 19:53:11.044643 27705 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:11.080288 27711 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:11.149258 27705 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:11.150293 27705 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:11.150835 27705 solver.cpp:311] Iteration 1000, loss = 0.971842
I0428 19:53:11.150851 27705 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:11.204782 27712 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:11.205292 27705 solver.cpp:398]     Test net output #0: accuracy = 0.775
I0428 19:53:11.205312 27705 solver.cpp:398]     Test net output #1: loss = 0.782486 (* 1 = 0.782486 loss)
I0428 19:53:11.205317 27705 solver.cpp:316] Optimization Done.
I0428 19:53:11.205319 27705 caffe.cpp:259] Optimization Done.
