I0428 19:54:29.270364 28003 caffe.cpp:218] Using GPUs 0
I0428 19:54:29.299201 28003 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:54:29.742228 28003 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test712.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:54:29.742383 28003 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test712.prototxt
I0428 19:54:29.742705 28003 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:54:29.742720 28003 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:54:29.742794 28003 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:54:29.742853 28003 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:29.742936 28003 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:54:29.742955 28003 net.cpp:86] Creating Layer mnist
I0428 19:54:29.742962 28003 net.cpp:382] mnist -> data
I0428 19:54:29.742980 28003 net.cpp:382] mnist -> label
I0428 19:54:29.743963 28003 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:54:29.746405 28003 net.cpp:124] Setting up mnist
I0428 19:54:29.746421 28003 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:54:29.746426 28003 net.cpp:131] Top shape: 64 (64)
I0428 19:54:29.746429 28003 net.cpp:139] Memory required for data: 200960
I0428 19:54:29.746435 28003 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:29.746449 28003 net.cpp:86] Creating Layer conv0
I0428 19:54:29.746469 28003 net.cpp:408] conv0 <- data
I0428 19:54:29.746480 28003 net.cpp:382] conv0 -> conv0
I0428 19:54:29.976152 28003 net.cpp:124] Setting up conv0
I0428 19:54:29.976196 28003 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:54:29.976200 28003 net.cpp:139] Memory required for data: 938240
I0428 19:54:29.976233 28003 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:29.976261 28003 net.cpp:86] Creating Layer pool0
I0428 19:54:29.976265 28003 net.cpp:408] pool0 <- conv0
I0428 19:54:29.976271 28003 net.cpp:382] pool0 -> pool0
I0428 19:54:29.976317 28003 net.cpp:124] Setting up pool0
I0428 19:54:29.976325 28003 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:54:29.976343 28003 net.cpp:139] Memory required for data: 1122560
I0428 19:54:29.976346 28003 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:29.976356 28003 net.cpp:86] Creating Layer conv1
I0428 19:54:29.976359 28003 net.cpp:408] conv1 <- pool0
I0428 19:54:29.976364 28003 net.cpp:382] conv1 -> conv1
I0428 19:54:29.979032 28003 net.cpp:124] Setting up conv1
I0428 19:54:29.979061 28003 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:54:29.979065 28003 net.cpp:139] Memory required for data: 2760960
I0428 19:54:29.979074 28003 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:29.979082 28003 net.cpp:86] Creating Layer pool1
I0428 19:54:29.979085 28003 net.cpp:408] pool1 <- conv1
I0428 19:54:29.979090 28003 net.cpp:382] pool1 -> pool1
I0428 19:54:29.979142 28003 net.cpp:124] Setting up pool1
I0428 19:54:29.979147 28003 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:54:29.979151 28003 net.cpp:139] Memory required for data: 3170560
I0428 19:54:29.979152 28003 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:29.979159 28003 net.cpp:86] Creating Layer ip1
I0428 19:54:29.979162 28003 net.cpp:408] ip1 <- pool1
I0428 19:54:29.979167 28003 net.cpp:382] ip1 -> ip1
I0428 19:54:29.980509 28003 net.cpp:124] Setting up ip1
I0428 19:54:29.980536 28003 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:54:29.980540 28003 net.cpp:139] Memory required for data: 3183360
I0428 19:54:29.980548 28003 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:29.980554 28003 net.cpp:86] Creating Layer relu1
I0428 19:54:29.980557 28003 net.cpp:408] relu1 <- ip1
I0428 19:54:29.980562 28003 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:29.980726 28003 net.cpp:124] Setting up relu1
I0428 19:54:29.980734 28003 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:54:29.980737 28003 net.cpp:139] Memory required for data: 3196160
I0428 19:54:29.980741 28003 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:29.980747 28003 net.cpp:86] Creating Layer ip2
I0428 19:54:29.980751 28003 net.cpp:408] ip2 <- ip1
I0428 19:54:29.980756 28003 net.cpp:382] ip2 -> ip2
I0428 19:54:29.980895 28003 net.cpp:124] Setting up ip2
I0428 19:54:29.980902 28003 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:29.980906 28003 net.cpp:139] Memory required for data: 3198720
I0428 19:54:29.980911 28003 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:29.980917 28003 net.cpp:86] Creating Layer relu2
I0428 19:54:29.980921 28003 net.cpp:408] relu2 <- ip2
I0428 19:54:29.980926 28003 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:29.981798 28003 net.cpp:124] Setting up relu2
I0428 19:54:29.981812 28003 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:29.981817 28003 net.cpp:139] Memory required for data: 3201280
I0428 19:54:29.981823 28003 layer_factory.hpp:77] Creating layer loss
I0428 19:54:29.981832 28003 net.cpp:86] Creating Layer loss
I0428 19:54:29.981838 28003 net.cpp:408] loss <- ip2
I0428 19:54:29.981843 28003 net.cpp:408] loss <- label
I0428 19:54:29.981851 28003 net.cpp:382] loss -> loss
I0428 19:54:29.981875 28003 layer_factory.hpp:77] Creating layer loss
I0428 19:54:29.982174 28003 net.cpp:124] Setting up loss
I0428 19:54:29.982198 28003 net.cpp:131] Top shape: (1)
I0428 19:54:29.982201 28003 net.cpp:134]     with loss weight 1
I0428 19:54:29.982230 28003 net.cpp:139] Memory required for data: 3201284
I0428 19:54:29.982234 28003 net.cpp:200] loss needs backward computation.
I0428 19:54:29.982237 28003 net.cpp:200] relu2 needs backward computation.
I0428 19:54:29.982239 28003 net.cpp:200] ip2 needs backward computation.
I0428 19:54:29.982242 28003 net.cpp:200] relu1 needs backward computation.
I0428 19:54:29.982245 28003 net.cpp:200] ip1 needs backward computation.
I0428 19:54:29.982259 28003 net.cpp:200] pool1 needs backward computation.
I0428 19:54:29.982262 28003 net.cpp:200] conv1 needs backward computation.
I0428 19:54:29.982265 28003 net.cpp:200] pool0 needs backward computation.
I0428 19:54:29.982269 28003 net.cpp:200] conv0 needs backward computation.
I0428 19:54:29.982271 28003 net.cpp:202] mnist does not need backward computation.
I0428 19:54:29.982275 28003 net.cpp:244] This network produces output loss
I0428 19:54:29.982283 28003 net.cpp:257] Network initialization done.
I0428 19:54:29.982573 28003 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test712.prototxt
I0428 19:54:29.982599 28003 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:54:29.982682 28003 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:54:29.982743 28003 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:29.982787 28003 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:54:29.982800 28003 net.cpp:86] Creating Layer mnist
I0428 19:54:29.982803 28003 net.cpp:382] mnist -> data
I0428 19:54:29.982810 28003 net.cpp:382] mnist -> label
I0428 19:54:29.982892 28003 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:54:29.983973 28003 net.cpp:124] Setting up mnist
I0428 19:54:29.983999 28003 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:54:29.984004 28003 net.cpp:131] Top shape: 100 (100)
I0428 19:54:29.984007 28003 net.cpp:139] Memory required for data: 314000
I0428 19:54:29.984010 28003 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:54:29.984017 28003 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:54:29.984020 28003 net.cpp:408] label_mnist_1_split <- label
I0428 19:54:29.984025 28003 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:54:29.984031 28003 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:54:29.984154 28003 net.cpp:124] Setting up label_mnist_1_split
I0428 19:54:29.984161 28003 net.cpp:131] Top shape: 100 (100)
I0428 19:54:29.984166 28003 net.cpp:131] Top shape: 100 (100)
I0428 19:54:29.984169 28003 net.cpp:139] Memory required for data: 314800
I0428 19:54:29.984171 28003 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:29.984179 28003 net.cpp:86] Creating Layer conv0
I0428 19:54:29.984182 28003 net.cpp:408] conv0 <- data
I0428 19:54:29.984187 28003 net.cpp:382] conv0 -> conv0
I0428 19:54:29.986040 28003 net.cpp:124] Setting up conv0
I0428 19:54:29.986054 28003 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:54:29.986058 28003 net.cpp:139] Memory required for data: 1466800
I0428 19:54:29.986068 28003 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:29.986088 28003 net.cpp:86] Creating Layer pool0
I0428 19:54:29.986091 28003 net.cpp:408] pool0 <- conv0
I0428 19:54:29.986098 28003 net.cpp:382] pool0 -> pool0
I0428 19:54:29.986133 28003 net.cpp:124] Setting up pool0
I0428 19:54:29.986153 28003 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:54:29.986156 28003 net.cpp:139] Memory required for data: 1754800
I0428 19:54:29.986158 28003 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:29.986181 28003 net.cpp:86] Creating Layer conv1
I0428 19:54:29.986183 28003 net.cpp:408] conv1 <- pool0
I0428 19:54:29.986188 28003 net.cpp:382] conv1 -> conv1
I0428 19:54:29.987859 28003 net.cpp:124] Setting up conv1
I0428 19:54:29.987870 28003 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:54:29.987874 28003 net.cpp:139] Memory required for data: 4314800
I0428 19:54:29.987884 28003 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:29.987890 28003 net.cpp:86] Creating Layer pool1
I0428 19:54:29.987893 28003 net.cpp:408] pool1 <- conv1
I0428 19:54:29.987898 28003 net.cpp:382] pool1 -> pool1
I0428 19:54:29.987951 28003 net.cpp:124] Setting up pool1
I0428 19:54:29.987967 28003 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:54:29.987969 28003 net.cpp:139] Memory required for data: 4954800
I0428 19:54:29.987972 28003 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:29.987978 28003 net.cpp:86] Creating Layer ip1
I0428 19:54:29.987982 28003 net.cpp:408] ip1 <- pool1
I0428 19:54:29.987987 28003 net.cpp:382] ip1 -> ip1
I0428 19:54:29.988541 28003 net.cpp:124] Setting up ip1
I0428 19:54:29.988548 28003 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:54:29.988553 28003 net.cpp:139] Memory required for data: 4974800
I0428 19:54:29.988559 28003 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:29.988564 28003 net.cpp:86] Creating Layer relu1
I0428 19:54:29.988569 28003 net.cpp:408] relu1 <- ip1
I0428 19:54:29.988572 28003 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:29.988749 28003 net.cpp:124] Setting up relu1
I0428 19:54:29.988765 28003 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:54:29.988767 28003 net.cpp:139] Memory required for data: 4994800
I0428 19:54:29.988770 28003 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:29.988778 28003 net.cpp:86] Creating Layer ip2
I0428 19:54:29.988781 28003 net.cpp:408] ip2 <- ip1
I0428 19:54:29.988786 28003 net.cpp:382] ip2 -> ip2
I0428 19:54:29.988970 28003 net.cpp:124] Setting up ip2
I0428 19:54:29.988979 28003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:29.988982 28003 net.cpp:139] Memory required for data: 4998800
I0428 19:54:29.988988 28003 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:29.988996 28003 net.cpp:86] Creating Layer relu2
I0428 19:54:29.988999 28003 net.cpp:408] relu2 <- ip2
I0428 19:54:29.989004 28003 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:29.989300 28003 net.cpp:124] Setting up relu2
I0428 19:54:29.989308 28003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:29.989317 28003 net.cpp:139] Memory required for data: 5002800
I0428 19:54:29.989320 28003 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:54:29.989326 28003 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:54:29.989329 28003 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:54:29.989334 28003 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:54:29.989356 28003 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:54:29.989393 28003 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:54:29.989404 28003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:29.989408 28003 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:29.989423 28003 net.cpp:139] Memory required for data: 5010800
I0428 19:54:29.989425 28003 layer_factory.hpp:77] Creating layer accuracy
I0428 19:54:29.989430 28003 net.cpp:86] Creating Layer accuracy
I0428 19:54:29.989433 28003 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:54:29.989436 28003 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:54:29.989442 28003 net.cpp:382] accuracy -> accuracy
I0428 19:54:29.989449 28003 net.cpp:124] Setting up accuracy
I0428 19:54:29.989452 28003 net.cpp:131] Top shape: (1)
I0428 19:54:29.989456 28003 net.cpp:139] Memory required for data: 5010804
I0428 19:54:29.989459 28003 layer_factory.hpp:77] Creating layer loss
I0428 19:54:29.989462 28003 net.cpp:86] Creating Layer loss
I0428 19:54:29.989465 28003 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:54:29.989475 28003 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:54:29.989480 28003 net.cpp:382] loss -> loss
I0428 19:54:29.989485 28003 layer_factory.hpp:77] Creating layer loss
I0428 19:54:29.989724 28003 net.cpp:124] Setting up loss
I0428 19:54:29.989733 28003 net.cpp:131] Top shape: (1)
I0428 19:54:29.989737 28003 net.cpp:134]     with loss weight 1
I0428 19:54:29.989742 28003 net.cpp:139] Memory required for data: 5010808
I0428 19:54:29.989753 28003 net.cpp:200] loss needs backward computation.
I0428 19:54:29.989755 28003 net.cpp:202] accuracy does not need backward computation.
I0428 19:54:29.989759 28003 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:54:29.989763 28003 net.cpp:200] relu2 needs backward computation.
I0428 19:54:29.989765 28003 net.cpp:200] ip2 needs backward computation.
I0428 19:54:29.989768 28003 net.cpp:200] relu1 needs backward computation.
I0428 19:54:29.989770 28003 net.cpp:200] ip1 needs backward computation.
I0428 19:54:29.989773 28003 net.cpp:200] pool1 needs backward computation.
I0428 19:54:29.989787 28003 net.cpp:200] conv1 needs backward computation.
I0428 19:54:29.989791 28003 net.cpp:200] pool0 needs backward computation.
I0428 19:54:29.989794 28003 net.cpp:200] conv0 needs backward computation.
I0428 19:54:29.989797 28003 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:54:29.989806 28003 net.cpp:202] mnist does not need backward computation.
I0428 19:54:29.989809 28003 net.cpp:244] This network produces output accuracy
I0428 19:54:29.989811 28003 net.cpp:244] This network produces output loss
I0428 19:54:29.989821 28003 net.cpp:257] Network initialization done.
I0428 19:54:29.989858 28003 solver.cpp:56] Solver scaffolding done.
I0428 19:54:29.990128 28003 caffe.cpp:248] Starting Optimization
I0428 19:54:29.990136 28003 solver.cpp:273] Solving LeNet
I0428 19:54:29.990139 28003 solver.cpp:274] Learning Rate Policy: inv
I0428 19:54:29.990881 28003 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:54:29.995391 28003 blocking_queue.cpp:49] Waiting for data
I0428 19:54:30.068495 28010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:30.069090 28003 solver.cpp:398]     Test net output #0: accuracy = 0.1142
I0428 19:54:30.069111 28003 solver.cpp:398]     Test net output #1: loss = 2.33371 (* 1 = 2.33371 loss)
I0428 19:54:30.072688 28003 solver.cpp:219] Iteration 0 (0 iter/s, 0.0825241s/100 iters), loss = 2.33493
I0428 19:54:30.072711 28003 solver.cpp:238]     Train net output #0: loss = 2.33493 (* 1 = 2.33493 loss)
I0428 19:54:30.072736 28003 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:54:30.217882 28003 solver.cpp:219] Iteration 100 (688.904 iter/s, 0.145158s/100 iters), loss = 1.06464
I0428 19:54:30.217907 28003 solver.cpp:238]     Train net output #0: loss = 1.06464 (* 1 = 1.06464 loss)
I0428 19:54:30.217913 28003 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:54:30.365787 28003 solver.cpp:219] Iteration 200 (676.294 iter/s, 0.147865s/100 iters), loss = 0.654181
I0428 19:54:30.365844 28003 solver.cpp:238]     Train net output #0: loss = 0.654181 (* 1 = 0.654181 loss)
I0428 19:54:30.365851 28003 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:54:30.511194 28003 solver.cpp:219] Iteration 300 (688.05 iter/s, 0.145338s/100 iters), loss = 0.603723
I0428 19:54:30.511238 28003 solver.cpp:238]     Train net output #0: loss = 0.603723 (* 1 = 0.603723 loss)
I0428 19:54:30.511245 28003 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:54:30.649906 28003 solver.cpp:219] Iteration 400 (721.13 iter/s, 0.138671s/100 iters), loss = 0.660326
I0428 19:54:30.649948 28003 solver.cpp:238]     Train net output #0: loss = 0.660326 (* 1 = 0.660326 loss)
I0428 19:54:30.649955 28003 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:30.788187 28003 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:30.863814 28010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:30.864413 28003 solver.cpp:398]     Test net output #0: accuracy = 0.8689
I0428 19:54:30.864437 28003 solver.cpp:398]     Test net output #1: loss = 0.360161 (* 1 = 0.360161 loss)
I0428 19:54:30.865955 28003 solver.cpp:219] Iteration 500 (462.949 iter/s, 0.216007s/100 iters), loss = 0.5178
I0428 19:54:30.865996 28003 solver.cpp:238]     Train net output #0: loss = 0.5178 (* 1 = 0.5178 loss)
I0428 19:54:30.866005 28003 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:31.010407 28003 solver.cpp:219] Iteration 600 (692.519 iter/s, 0.1444s/100 iters), loss = 0.115627
I0428 19:54:31.010448 28003 solver.cpp:238]     Train net output #0: loss = 0.115627 (* 1 = 0.115627 loss)
I0428 19:54:31.010455 28003 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:31.148084 28003 solver.cpp:219] Iteration 700 (726.619 iter/s, 0.137624s/100 iters), loss = 0.148382
I0428 19:54:31.148110 28003 solver.cpp:238]     Train net output #0: loss = 0.148382 (* 1 = 0.148382 loss)
I0428 19:54:31.148116 28003 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:31.305471 28003 solver.cpp:219] Iteration 800 (635.551 iter/s, 0.157344s/100 iters), loss = 0.180671
I0428 19:54:31.305513 28003 solver.cpp:238]     Train net output #0: loss = 0.180671 (* 1 = 0.180671 loss)
I0428 19:54:31.305523 28003 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:31.457902 28003 solver.cpp:219] Iteration 900 (656.257 iter/s, 0.152379s/100 iters), loss = 0.140341
I0428 19:54:31.457945 28003 solver.cpp:238]     Train net output #0: loss = 0.140341 (* 1 = 0.140341 loss)
I0428 19:54:31.457952 28003 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:31.504340 28009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:31.597626 28003 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:31.600270 28003 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:31.601544 28003 solver.cpp:311] Iteration 1000, loss = 0.0931321
I0428 19:54:31.601560 28003 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:31.677436 28010 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:31.678015 28003 solver.cpp:398]     Test net output #0: accuracy = 0.9766
I0428 19:54:31.678035 28003 solver.cpp:398]     Test net output #1: loss = 0.0773005 (* 1 = 0.0773005 loss)
I0428 19:54:31.678038 28003 solver.cpp:316] Optimization Done.
I0428 19:54:31.678041 28003 caffe.cpp:259] Optimization Done.
