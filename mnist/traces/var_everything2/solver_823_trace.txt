I0428 19:58:35.278920 29011 caffe.cpp:218] Using GPUs 0
I0428 19:58:35.317510 29011 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:35.848100 29011 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test823.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:35.848240 29011 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test823.prototxt
I0428 19:58:35.848623 29011 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:35.848641 29011 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:35.848731 29011 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:35.848805 29011 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:35.848930 29011 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:35.848955 29011 net.cpp:86] Creating Layer mnist
I0428 19:58:35.848963 29011 net.cpp:382] mnist -> data
I0428 19:58:35.848986 29011 net.cpp:382] mnist -> label
I0428 19:58:35.850082 29011 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:35.852551 29011 net.cpp:124] Setting up mnist
I0428 19:58:35.852571 29011 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:35.852577 29011 net.cpp:131] Top shape: 64 (64)
I0428 19:58:35.852581 29011 net.cpp:139] Memory required for data: 200960
I0428 19:58:35.852588 29011 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:35.852607 29011 net.cpp:86] Creating Layer conv0
I0428 19:58:35.852612 29011 net.cpp:408] conv0 <- data
I0428 19:58:35.852622 29011 net.cpp:382] conv0 -> conv0
I0428 19:58:36.139262 29011 net.cpp:124] Setting up conv0
I0428 19:58:36.139292 29011 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:36.139297 29011 net.cpp:139] Memory required for data: 1675520
I0428 19:58:36.139334 29011 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:36.139348 29011 net.cpp:86] Creating Layer pool0
I0428 19:58:36.139353 29011 net.cpp:408] pool0 <- conv0
I0428 19:58:36.139364 29011 net.cpp:382] pool0 -> pool0
I0428 19:58:36.139423 29011 net.cpp:124] Setting up pool0
I0428 19:58:36.139433 29011 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:36.139437 29011 net.cpp:139] Memory required for data: 2044160
I0428 19:58:36.139441 29011 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:36.139453 29011 net.cpp:86] Creating Layer conv1
I0428 19:58:36.139457 29011 net.cpp:408] conv1 <- pool0
I0428 19:58:36.139463 29011 net.cpp:382] conv1 -> conv1
I0428 19:58:36.142583 29011 net.cpp:124] Setting up conv1
I0428 19:58:36.142601 29011 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:36.142606 29011 net.cpp:139] Memory required for data: 2208000
I0428 19:58:36.142616 29011 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:36.142624 29011 net.cpp:86] Creating Layer pool1
I0428 19:58:36.142628 29011 net.cpp:408] pool1 <- conv1
I0428 19:58:36.142634 29011 net.cpp:382] pool1 -> pool1
I0428 19:58:36.142679 29011 net.cpp:124] Setting up pool1
I0428 19:58:36.142688 29011 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:36.142691 29011 net.cpp:139] Memory required for data: 2248960
I0428 19:58:36.142695 29011 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:36.142709 29011 net.cpp:86] Creating Layer ip1
I0428 19:58:36.142714 29011 net.cpp:408] ip1 <- pool1
I0428 19:58:36.142719 29011 net.cpp:382] ip1 -> ip1
I0428 19:58:36.142848 29011 net.cpp:124] Setting up ip1
I0428 19:58:36.142855 29011 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:36.142859 29011 net.cpp:139] Memory required for data: 2251520
I0428 19:58:36.142868 29011 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:36.142875 29011 net.cpp:86] Creating Layer relu1
I0428 19:58:36.142879 29011 net.cpp:408] relu1 <- ip1
I0428 19:58:36.142884 29011 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:36.143080 29011 net.cpp:124] Setting up relu1
I0428 19:58:36.143091 29011 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:36.143095 29011 net.cpp:139] Memory required for data: 2254080
I0428 19:58:36.143100 29011 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:36.143107 29011 net.cpp:86] Creating Layer ip2
I0428 19:58:36.143110 29011 net.cpp:408] ip2 <- ip1
I0428 19:58:36.143116 29011 net.cpp:382] ip2 -> ip2
I0428 19:58:36.143230 29011 net.cpp:124] Setting up ip2
I0428 19:58:36.143239 29011 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:36.143242 29011 net.cpp:139] Memory required for data: 2256640
I0428 19:58:36.143249 29011 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:36.143256 29011 net.cpp:86] Creating Layer relu2
I0428 19:58:36.143260 29011 net.cpp:408] relu2 <- ip2
I0428 19:58:36.143265 29011 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:36.144100 29011 net.cpp:124] Setting up relu2
I0428 19:58:36.144114 29011 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:36.144119 29011 net.cpp:139] Memory required for data: 2259200
I0428 19:58:36.144124 29011 layer_factory.hpp:77] Creating layer loss
I0428 19:58:36.144130 29011 net.cpp:86] Creating Layer loss
I0428 19:58:36.144134 29011 net.cpp:408] loss <- ip2
I0428 19:58:36.144140 29011 net.cpp:408] loss <- label
I0428 19:58:36.144146 29011 net.cpp:382] loss -> loss
I0428 19:58:36.144167 29011 layer_factory.hpp:77] Creating layer loss
I0428 19:58:36.144443 29011 net.cpp:124] Setting up loss
I0428 19:58:36.144455 29011 net.cpp:131] Top shape: (1)
I0428 19:58:36.144459 29011 net.cpp:134]     with loss weight 1
I0428 19:58:36.144476 29011 net.cpp:139] Memory required for data: 2259204
I0428 19:58:36.144481 29011 net.cpp:200] loss needs backward computation.
I0428 19:58:36.144485 29011 net.cpp:200] relu2 needs backward computation.
I0428 19:58:36.144489 29011 net.cpp:200] ip2 needs backward computation.
I0428 19:58:36.144492 29011 net.cpp:200] relu1 needs backward computation.
I0428 19:58:36.144495 29011 net.cpp:200] ip1 needs backward computation.
I0428 19:58:36.144515 29011 net.cpp:200] pool1 needs backward computation.
I0428 19:58:36.144518 29011 net.cpp:200] conv1 needs backward computation.
I0428 19:58:36.144522 29011 net.cpp:200] pool0 needs backward computation.
I0428 19:58:36.144526 29011 net.cpp:200] conv0 needs backward computation.
I0428 19:58:36.144529 29011 net.cpp:202] mnist does not need backward computation.
I0428 19:58:36.144533 29011 net.cpp:244] This network produces output loss
I0428 19:58:36.144543 29011 net.cpp:257] Network initialization done.
I0428 19:58:36.144896 29011 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test823.prototxt
I0428 19:58:36.144927 29011 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:36.145023 29011 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:36.145097 29011 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:36.145148 29011 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:36.145161 29011 net.cpp:86] Creating Layer mnist
I0428 19:58:36.145166 29011 net.cpp:382] mnist -> data
I0428 19:58:36.145175 29011 net.cpp:382] mnist -> label
I0428 19:58:36.145277 29011 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:36.147608 29011 net.cpp:124] Setting up mnist
I0428 19:58:36.147624 29011 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:36.147630 29011 net.cpp:131] Top shape: 100 (100)
I0428 19:58:36.147634 29011 net.cpp:139] Memory required for data: 314000
I0428 19:58:36.147639 29011 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:36.147650 29011 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:36.147655 29011 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:36.147660 29011 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:36.147668 29011 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:36.147754 29011 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:36.147775 29011 net.cpp:131] Top shape: 100 (100)
I0428 19:58:36.147780 29011 net.cpp:131] Top shape: 100 (100)
I0428 19:58:36.147784 29011 net.cpp:139] Memory required for data: 314800
I0428 19:58:36.147788 29011 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:36.147799 29011 net.cpp:86] Creating Layer conv0
I0428 19:58:36.147802 29011 net.cpp:408] conv0 <- data
I0428 19:58:36.147809 29011 net.cpp:382] conv0 -> conv0
I0428 19:58:36.149657 29011 net.cpp:124] Setting up conv0
I0428 19:58:36.149674 29011 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:36.149678 29011 net.cpp:139] Memory required for data: 2618800
I0428 19:58:36.149689 29011 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:36.149696 29011 net.cpp:86] Creating Layer pool0
I0428 19:58:36.149701 29011 net.cpp:408] pool0 <- conv0
I0428 19:58:36.149706 29011 net.cpp:382] pool0 -> pool0
I0428 19:58:36.149749 29011 net.cpp:124] Setting up pool0
I0428 19:58:36.149756 29011 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:36.149760 29011 net.cpp:139] Memory required for data: 3194800
I0428 19:58:36.149765 29011 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:36.149775 29011 net.cpp:86] Creating Layer conv1
I0428 19:58:36.149778 29011 net.cpp:408] conv1 <- pool0
I0428 19:58:36.149785 29011 net.cpp:382] conv1 -> conv1
I0428 19:58:36.152135 29011 net.cpp:124] Setting up conv1
I0428 19:58:36.152150 29011 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:36.152154 29011 net.cpp:139] Memory required for data: 3450800
I0428 19:58:36.152164 29011 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:36.152171 29011 net.cpp:86] Creating Layer pool1
I0428 19:58:36.152176 29011 net.cpp:408] pool1 <- conv1
I0428 19:58:36.152182 29011 net.cpp:382] pool1 -> pool1
I0428 19:58:36.152227 29011 net.cpp:124] Setting up pool1
I0428 19:58:36.152235 29011 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:36.152240 29011 net.cpp:139] Memory required for data: 3514800
I0428 19:58:36.152243 29011 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:36.152251 29011 net.cpp:86] Creating Layer ip1
I0428 19:58:36.152254 29011 net.cpp:408] ip1 <- pool1
I0428 19:58:36.152261 29011 net.cpp:382] ip1 -> ip1
I0428 19:58:36.152389 29011 net.cpp:124] Setting up ip1
I0428 19:58:36.152397 29011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:36.152401 29011 net.cpp:139] Memory required for data: 3518800
I0428 19:58:36.152410 29011 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:36.152415 29011 net.cpp:86] Creating Layer relu1
I0428 19:58:36.152420 29011 net.cpp:408] relu1 <- ip1
I0428 19:58:36.152426 29011 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:36.152617 29011 net.cpp:124] Setting up relu1
I0428 19:58:36.152628 29011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:36.152633 29011 net.cpp:139] Memory required for data: 3522800
I0428 19:58:36.152637 29011 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:36.152644 29011 net.cpp:86] Creating Layer ip2
I0428 19:58:36.152648 29011 net.cpp:408] ip2 <- ip1
I0428 19:58:36.152654 29011 net.cpp:382] ip2 -> ip2
I0428 19:58:36.152765 29011 net.cpp:124] Setting up ip2
I0428 19:58:36.152773 29011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:36.152777 29011 net.cpp:139] Memory required for data: 3526800
I0428 19:58:36.152784 29011 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:36.152789 29011 net.cpp:86] Creating Layer relu2
I0428 19:58:36.152793 29011 net.cpp:408] relu2 <- ip2
I0428 19:58:36.152798 29011 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:36.153010 29011 net.cpp:124] Setting up relu2
I0428 19:58:36.153023 29011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:36.153028 29011 net.cpp:139] Memory required for data: 3530800
I0428 19:58:36.153030 29011 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:58:36.153036 29011 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:58:36.153040 29011 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:58:36.153045 29011 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:58:36.153065 29011 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:58:36.153115 29011 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:58:36.153122 29011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:36.153127 29011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:36.153131 29011 net.cpp:139] Memory required for data: 3538800
I0428 19:58:36.153136 29011 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:36.153141 29011 net.cpp:86] Creating Layer accuracy
I0428 19:58:36.153144 29011 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:58:36.153149 29011 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:36.153154 29011 net.cpp:382] accuracy -> accuracy
I0428 19:58:36.153162 29011 net.cpp:124] Setting up accuracy
I0428 19:58:36.153167 29011 net.cpp:131] Top shape: (1)
I0428 19:58:36.153170 29011 net.cpp:139] Memory required for data: 3538804
I0428 19:58:36.153173 29011 layer_factory.hpp:77] Creating layer loss
I0428 19:58:36.153179 29011 net.cpp:86] Creating Layer loss
I0428 19:58:36.153182 29011 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:58:36.153187 29011 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:36.153192 29011 net.cpp:382] loss -> loss
I0428 19:58:36.153208 29011 layer_factory.hpp:77] Creating layer loss
I0428 19:58:36.153475 29011 net.cpp:124] Setting up loss
I0428 19:58:36.153486 29011 net.cpp:131] Top shape: (1)
I0428 19:58:36.153491 29011 net.cpp:134]     with loss weight 1
I0428 19:58:36.153499 29011 net.cpp:139] Memory required for data: 3538808
I0428 19:58:36.153504 29011 net.cpp:200] loss needs backward computation.
I0428 19:58:36.153508 29011 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:36.153513 29011 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:58:36.153517 29011 net.cpp:200] relu2 needs backward computation.
I0428 19:58:36.153522 29011 net.cpp:200] ip2 needs backward computation.
I0428 19:58:36.153525 29011 net.cpp:200] relu1 needs backward computation.
I0428 19:58:36.153528 29011 net.cpp:200] ip1 needs backward computation.
I0428 19:58:36.153532 29011 net.cpp:200] pool1 needs backward computation.
I0428 19:58:36.153537 29011 net.cpp:200] conv1 needs backward computation.
I0428 19:58:36.153539 29011 net.cpp:200] pool0 needs backward computation.
I0428 19:58:36.153543 29011 net.cpp:200] conv0 needs backward computation.
I0428 19:58:36.153548 29011 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:36.153553 29011 net.cpp:202] mnist does not need backward computation.
I0428 19:58:36.153555 29011 net.cpp:244] This network produces output accuracy
I0428 19:58:36.153559 29011 net.cpp:244] This network produces output loss
I0428 19:58:36.153570 29011 net.cpp:257] Network initialization done.
I0428 19:58:36.153614 29011 solver.cpp:56] Solver scaffolding done.
I0428 19:58:36.153934 29011 caffe.cpp:248] Starting Optimization
I0428 19:58:36.153940 29011 solver.cpp:273] Solving LeNet
I0428 19:58:36.153954 29011 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:36.154193 29011 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:36.158612 29011 blocking_queue.cpp:49] Waiting for data
I0428 19:58:36.231544 29018 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:36.232231 29011 solver.cpp:398]     Test net output #0: accuracy = 0.0886
I0428 19:58:36.232275 29011 solver.cpp:398]     Test net output #1: loss = 2.30806 (* 1 = 2.30806 loss)
I0428 19:58:36.236310 29011 solver.cpp:219] Iteration 0 (-9.87915e-43 iter/s, 0.0823227s/100 iters), loss = 2.33468
I0428 19:58:36.236362 29011 solver.cpp:238]     Train net output #0: loss = 2.33468 (* 1 = 2.33468 loss)
I0428 19:58:36.236383 29011 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:36.322340 29011 solver.cpp:219] Iteration 100 (1163.18 iter/s, 0.0859709s/100 iters), loss = 1.46632
I0428 19:58:36.322376 29011 solver.cpp:238]     Train net output #0: loss = 1.46632 (* 1 = 1.46632 loss)
I0428 19:58:36.322386 29011 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:36.398886 29011 solver.cpp:219] Iteration 200 (1307.16 iter/s, 0.076502s/100 iters), loss = 1.22011
I0428 19:58:36.398943 29011 solver.cpp:238]     Train net output #0: loss = 1.22011 (* 1 = 1.22011 loss)
I0428 19:58:36.398952 29011 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:36.474391 29011 solver.cpp:219] Iteration 300 (1325.41 iter/s, 0.0754483s/100 iters), loss = 1.17214
I0428 19:58:36.474421 29011 solver.cpp:238]     Train net output #0: loss = 1.17214 (* 1 = 1.17214 loss)
I0428 19:58:36.474428 29011 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:36.550058 29011 solver.cpp:219] Iteration 400 (1322.25 iter/s, 0.0756285s/100 iters), loss = 1.23118
I0428 19:58:36.550097 29011 solver.cpp:238]     Train net output #0: loss = 1.23118 (* 1 = 1.23118 loss)
I0428 19:58:36.550104 29011 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:36.625195 29011 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:36.670506 29018 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:36.671198 29011 solver.cpp:398]     Test net output #0: accuracy = 0.5898
I0428 19:58:36.671222 29011 solver.cpp:398]     Test net output #1: loss = 1.05635 (* 1 = 1.05635 loss)
I0428 19:58:36.671998 29011 solver.cpp:219] Iteration 500 (820.351 iter/s, 0.121899s/100 iters), loss = 1.27799
I0428 19:58:36.672060 29011 solver.cpp:238]     Train net output #0: loss = 1.27799 (* 1 = 1.27799 loss)
I0428 19:58:36.672080 29011 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:36.748435 29011 solver.cpp:219] Iteration 600 (1309.28 iter/s, 0.0763781s/100 iters), loss = 0.772416
I0428 19:58:36.748476 29011 solver.cpp:238]     Train net output #0: loss = 0.772416 (* 1 = 0.772416 loss)
I0428 19:58:36.748483 29011 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:36.824579 29011 solver.cpp:219] Iteration 700 (1314 iter/s, 0.0761037s/100 iters), loss = 0.995914
I0428 19:58:36.824609 29011 solver.cpp:238]     Train net output #0: loss = 0.995914 (* 1 = 0.995914 loss)
I0428 19:58:36.824620 29011 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:36.900599 29011 solver.cpp:219] Iteration 800 (1316.14 iter/s, 0.0759798s/100 iters), loss = 1.32853
I0428 19:58:36.900627 29011 solver.cpp:238]     Train net output #0: loss = 1.32853 (* 1 = 1.32853 loss)
I0428 19:58:36.900640 29011 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:36.977010 29011 solver.cpp:219] Iteration 900 (1309.36 iter/s, 0.076373s/100 iters), loss = 0.933977
I0428 19:58:36.977049 29011 solver.cpp:238]     Train net output #0: loss = 0.933977 (* 1 = 0.933977 loss)
I0428 19:58:36.977056 29011 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:37.002595 29017 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:37.051509 29011 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:37.052232 29011 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:37.052700 29011 solver.cpp:311] Iteration 1000, loss = 1.0335
I0428 19:58:37.052727 29011 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:37.097676 29018 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:37.098213 29011 solver.cpp:398]     Test net output #0: accuracy = 0.5952
I0428 19:58:37.098249 29011 solver.cpp:398]     Test net output #1: loss = 0.996475 (* 1 = 0.996475 loss)
I0428 19:58:37.098254 29011 solver.cpp:316] Optimization Done.
I0428 19:58:37.098258 29011 caffe.cpp:259] Optimization Done.
