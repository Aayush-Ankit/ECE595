I0428 20:33:21.872195  4283 caffe.cpp:218] Using GPUs 0
I0428 20:33:21.909636  4283 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:22.423835  4283 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1587.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:22.423975  4283 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1587.prototxt
I0428 20:33:22.424393  4283 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:22.424412  4283 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:22.424515  4283 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:22.424594  4283 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:22.424696  4283 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:22.424721  4283 net.cpp:86] Creating Layer mnist
I0428 20:33:22.424731  4283 net.cpp:382] mnist -> data
I0428 20:33:22.424752  4283 net.cpp:382] mnist -> label
I0428 20:33:22.425875  4283 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:22.428352  4283 net.cpp:124] Setting up mnist
I0428 20:33:22.428371  4283 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:22.428378  4283 net.cpp:131] Top shape: 64 (64)
I0428 20:33:22.428381  4283 net.cpp:139] Memory required for data: 200960
I0428 20:33:22.428388  4283 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:22.428406  4283 net.cpp:86] Creating Layer conv0
I0428 20:33:22.428426  4283 net.cpp:408] conv0 <- data
I0428 20:33:22.428439  4283 net.cpp:382] conv0 -> conv0
I0428 20:33:22.720088  4283 net.cpp:124] Setting up conv0
I0428 20:33:22.720118  4283 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:22.720122  4283 net.cpp:139] Memory required for data: 14946560
I0428 20:33:22.720139  4283 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:22.720154  4283 net.cpp:86] Creating Layer pool0
I0428 20:33:22.720157  4283 net.cpp:408] pool0 <- conv0
I0428 20:33:22.720163  4283 net.cpp:382] pool0 -> pool0
I0428 20:33:22.720216  4283 net.cpp:124] Setting up pool0
I0428 20:33:22.720224  4283 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:22.720227  4283 net.cpp:139] Memory required for data: 18632960
I0428 20:33:22.720232  4283 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:22.720243  4283 net.cpp:86] Creating Layer conv1
I0428 20:33:22.720249  4283 net.cpp:408] conv1 <- pool0
I0428 20:33:22.720255  4283 net.cpp:382] conv1 -> conv1
I0428 20:33:22.722586  4283 net.cpp:124] Setting up conv1
I0428 20:33:22.722602  4283 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:22.722606  4283 net.cpp:139] Memory required for data: 19042560
I0428 20:33:22.722615  4283 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:22.722623  4283 net.cpp:86] Creating Layer pool1
I0428 20:33:22.722628  4283 net.cpp:408] pool1 <- conv1
I0428 20:33:22.722633  4283 net.cpp:382] pool1 -> pool1
I0428 20:33:22.722671  4283 net.cpp:124] Setting up pool1
I0428 20:33:22.722679  4283 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:22.722682  4283 net.cpp:139] Memory required for data: 19144960
I0428 20:33:22.722685  4283 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:22.722694  4283 net.cpp:86] Creating Layer ip1
I0428 20:33:22.722697  4283 net.cpp:408] ip1 <- pool1
I0428 20:33:22.722702  4283 net.cpp:382] ip1 -> ip1
I0428 20:33:22.723731  4283 net.cpp:124] Setting up ip1
I0428 20:33:22.723744  4283 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:22.723747  4283 net.cpp:139] Memory required for data: 19151360
I0428 20:33:22.723757  4283 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:22.723763  4283 net.cpp:86] Creating Layer relu1
I0428 20:33:22.723768  4283 net.cpp:408] relu1 <- ip1
I0428 20:33:22.723773  4283 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:22.723945  4283 net.cpp:124] Setting up relu1
I0428 20:33:22.723955  4283 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:33:22.723959  4283 net.cpp:139] Memory required for data: 19157760
I0428 20:33:22.723963  4283 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:22.723969  4283 net.cpp:86] Creating Layer ip2
I0428 20:33:22.723973  4283 net.cpp:408] ip2 <- ip1
I0428 20:33:22.723978  4283 net.cpp:382] ip2 -> ip2
I0428 20:33:22.724094  4283 net.cpp:124] Setting up ip2
I0428 20:33:22.724102  4283 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:22.724105  4283 net.cpp:139] Memory required for data: 19170560
I0428 20:33:22.724112  4283 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:22.724118  4283 net.cpp:86] Creating Layer relu2
I0428 20:33:22.724122  4283 net.cpp:408] relu2 <- ip2
I0428 20:33:22.724126  4283 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:22.724884  4283 net.cpp:124] Setting up relu2
I0428 20:33:22.724898  4283 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:22.724902  4283 net.cpp:139] Memory required for data: 19183360
I0428 20:33:22.724906  4283 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:22.724913  4283 net.cpp:86] Creating Layer ip3
I0428 20:33:22.724917  4283 net.cpp:408] ip3 <- ip2
I0428 20:33:22.724925  4283 net.cpp:382] ip3 -> ip3
I0428 20:33:22.725030  4283 net.cpp:124] Setting up ip3
I0428 20:33:22.725039  4283 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:22.725041  4283 net.cpp:139] Memory required for data: 19185920
I0428 20:33:22.725050  4283 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:22.725056  4283 net.cpp:86] Creating Layer relu3
I0428 20:33:22.725059  4283 net.cpp:408] relu3 <- ip3
I0428 20:33:22.725080  4283 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:22.725235  4283 net.cpp:124] Setting up relu3
I0428 20:33:22.725244  4283 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:22.725248  4283 net.cpp:139] Memory required for data: 19188480
I0428 20:33:22.725251  4283 layer_factory.hpp:77] Creating layer loss
I0428 20:33:22.725263  4283 net.cpp:86] Creating Layer loss
I0428 20:33:22.725268  4283 net.cpp:408] loss <- ip3
I0428 20:33:22.725272  4283 net.cpp:408] loss <- label
I0428 20:33:22.725280  4283 net.cpp:382] loss -> loss
I0428 20:33:22.725293  4283 layer_factory.hpp:77] Creating layer loss
I0428 20:33:22.725524  4283 net.cpp:124] Setting up loss
I0428 20:33:22.725533  4283 net.cpp:131] Top shape: (1)
I0428 20:33:22.725538  4283 net.cpp:134]     with loss weight 1
I0428 20:33:22.725553  4283 net.cpp:139] Memory required for data: 19188484
I0428 20:33:22.725558  4283 net.cpp:200] loss needs backward computation.
I0428 20:33:22.725561  4283 net.cpp:200] relu3 needs backward computation.
I0428 20:33:22.725565  4283 net.cpp:200] ip3 needs backward computation.
I0428 20:33:22.725569  4283 net.cpp:200] relu2 needs backward computation.
I0428 20:33:22.725571  4283 net.cpp:200] ip2 needs backward computation.
I0428 20:33:22.725574  4283 net.cpp:200] relu1 needs backward computation.
I0428 20:33:22.725577  4283 net.cpp:200] ip1 needs backward computation.
I0428 20:33:22.725581  4283 net.cpp:200] pool1 needs backward computation.
I0428 20:33:22.725584  4283 net.cpp:200] conv1 needs backward computation.
I0428 20:33:22.725589  4283 net.cpp:200] pool0 needs backward computation.
I0428 20:33:22.725591  4283 net.cpp:200] conv0 needs backward computation.
I0428 20:33:22.725594  4283 net.cpp:202] mnist does not need backward computation.
I0428 20:33:22.725599  4283 net.cpp:244] This network produces output loss
I0428 20:33:22.725607  4283 net.cpp:257] Network initialization done.
I0428 20:33:22.725946  4283 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1587.prototxt
I0428 20:33:22.725975  4283 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:22.726070  4283 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:22.726153  4283 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:22.726200  4283 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:22.726213  4283 net.cpp:86] Creating Layer mnist
I0428 20:33:22.726218  4283 net.cpp:382] mnist -> data
I0428 20:33:22.726227  4283 net.cpp:382] mnist -> label
I0428 20:33:22.726317  4283 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:22.728305  4283 net.cpp:124] Setting up mnist
I0428 20:33:22.728319  4283 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:22.728325  4283 net.cpp:131] Top shape: 100 (100)
I0428 20:33:22.728329  4283 net.cpp:139] Memory required for data: 314000
I0428 20:33:22.728333  4283 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:22.728340  4283 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:22.728344  4283 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:22.728350  4283 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:22.728358  4283 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:22.728451  4283 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:22.728458  4283 net.cpp:131] Top shape: 100 (100)
I0428 20:33:22.728462  4283 net.cpp:131] Top shape: 100 (100)
I0428 20:33:22.728466  4283 net.cpp:139] Memory required for data: 314800
I0428 20:33:22.728469  4283 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:22.728478  4283 net.cpp:86] Creating Layer conv0
I0428 20:33:22.728482  4283 net.cpp:408] conv0 <- data
I0428 20:33:22.728488  4283 net.cpp:382] conv0 -> conv0
I0428 20:33:22.730021  4283 net.cpp:124] Setting up conv0
I0428 20:33:22.730036  4283 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:22.730041  4283 net.cpp:139] Memory required for data: 23354800
I0428 20:33:22.730051  4283 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:22.730057  4283 net.cpp:86] Creating Layer pool0
I0428 20:33:22.730062  4283 net.cpp:408] pool0 <- conv0
I0428 20:33:22.730067  4283 net.cpp:382] pool0 -> pool0
I0428 20:33:22.730103  4283 net.cpp:124] Setting up pool0
I0428 20:33:22.730113  4283 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:22.730115  4283 net.cpp:139] Memory required for data: 29114800
I0428 20:33:22.730119  4283 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:22.730129  4283 net.cpp:86] Creating Layer conv1
I0428 20:33:22.730132  4283 net.cpp:408] conv1 <- pool0
I0428 20:33:22.730137  4283 net.cpp:382] conv1 -> conv1
I0428 20:33:22.731997  4283 net.cpp:124] Setting up conv1
I0428 20:33:22.732012  4283 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:22.732017  4283 net.cpp:139] Memory required for data: 29754800
I0428 20:33:22.732025  4283 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:22.732033  4283 net.cpp:86] Creating Layer pool1
I0428 20:33:22.732036  4283 net.cpp:408] pool1 <- conv1
I0428 20:33:22.732043  4283 net.cpp:382] pool1 -> pool1
I0428 20:33:22.732079  4283 net.cpp:124] Setting up pool1
I0428 20:33:22.732087  4283 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:22.732090  4283 net.cpp:139] Memory required for data: 29914800
I0428 20:33:22.732095  4283 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:22.732100  4283 net.cpp:86] Creating Layer ip1
I0428 20:33:22.732105  4283 net.cpp:408] ip1 <- pool1
I0428 20:33:22.732110  4283 net.cpp:382] ip1 -> ip1
I0428 20:33:22.732288  4283 net.cpp:124] Setting up ip1
I0428 20:33:22.732308  4283 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:22.732312  4283 net.cpp:139] Memory required for data: 29924800
I0428 20:33:22.732321  4283 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:22.732326  4283 net.cpp:86] Creating Layer relu1
I0428 20:33:22.732329  4283 net.cpp:408] relu1 <- ip1
I0428 20:33:22.732334  4283 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:22.732506  4283 net.cpp:124] Setting up relu1
I0428 20:33:22.732514  4283 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:33:22.732518  4283 net.cpp:139] Memory required for data: 29934800
I0428 20:33:22.732522  4283 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:22.732529  4283 net.cpp:86] Creating Layer ip2
I0428 20:33:22.732533  4283 net.cpp:408] ip2 <- ip1
I0428 20:33:22.732538  4283 net.cpp:382] ip2 -> ip2
I0428 20:33:22.732650  4283 net.cpp:124] Setting up ip2
I0428 20:33:22.732657  4283 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:22.732661  4283 net.cpp:139] Memory required for data: 29954800
I0428 20:33:22.732666  4283 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:22.732671  4283 net.cpp:86] Creating Layer relu2
I0428 20:33:22.732676  4283 net.cpp:408] relu2 <- ip2
I0428 20:33:22.732681  4283 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:22.732841  4283 net.cpp:124] Setting up relu2
I0428 20:33:22.732851  4283 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:22.732854  4283 net.cpp:139] Memory required for data: 29974800
I0428 20:33:22.732857  4283 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:22.732872  4283 net.cpp:86] Creating Layer ip3
I0428 20:33:22.732874  4283 net.cpp:408] ip3 <- ip2
I0428 20:33:22.732880  4283 net.cpp:382] ip3 -> ip3
I0428 20:33:22.733057  4283 net.cpp:124] Setting up ip3
I0428 20:33:22.733064  4283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:22.733067  4283 net.cpp:139] Memory required for data: 29978800
I0428 20:33:22.733075  4283 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:22.733081  4283 net.cpp:86] Creating Layer relu3
I0428 20:33:22.733084  4283 net.cpp:408] relu3 <- ip3
I0428 20:33:22.733088  4283 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:22.733855  4283 net.cpp:124] Setting up relu3
I0428 20:33:22.733867  4283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:22.733871  4283 net.cpp:139] Memory required for data: 29982800
I0428 20:33:22.733875  4283 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:22.733881  4283 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:22.733885  4283 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:22.733891  4283 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:22.733896  4283 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:22.733932  4283 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:22.733939  4283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:22.733943  4283 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:22.733947  4283 net.cpp:139] Memory required for data: 29990800
I0428 20:33:22.733949  4283 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:22.733955  4283 net.cpp:86] Creating Layer accuracy
I0428 20:33:22.733958  4283 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:22.733963  4283 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:22.733968  4283 net.cpp:382] accuracy -> accuracy
I0428 20:33:22.733974  4283 net.cpp:124] Setting up accuracy
I0428 20:33:22.733978  4283 net.cpp:131] Top shape: (1)
I0428 20:33:22.733983  4283 net.cpp:139] Memory required for data: 29990804
I0428 20:33:22.733985  4283 layer_factory.hpp:77] Creating layer loss
I0428 20:33:22.733989  4283 net.cpp:86] Creating Layer loss
I0428 20:33:22.733992  4283 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:22.733996  4283 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:22.734001  4283 net.cpp:382] loss -> loss
I0428 20:33:22.734007  4283 layer_factory.hpp:77] Creating layer loss
I0428 20:33:22.734226  4283 net.cpp:124] Setting up loss
I0428 20:33:22.734236  4283 net.cpp:131] Top shape: (1)
I0428 20:33:22.734238  4283 net.cpp:134]     with loss weight 1
I0428 20:33:22.734257  4283 net.cpp:139] Memory required for data: 29990808
I0428 20:33:22.734261  4283 net.cpp:200] loss needs backward computation.
I0428 20:33:22.734266  4283 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:22.734269  4283 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:22.734272  4283 net.cpp:200] relu3 needs backward computation.
I0428 20:33:22.734275  4283 net.cpp:200] ip3 needs backward computation.
I0428 20:33:22.734278  4283 net.cpp:200] relu2 needs backward computation.
I0428 20:33:22.734282  4283 net.cpp:200] ip2 needs backward computation.
I0428 20:33:22.734285  4283 net.cpp:200] relu1 needs backward computation.
I0428 20:33:22.734288  4283 net.cpp:200] ip1 needs backward computation.
I0428 20:33:22.734292  4283 net.cpp:200] pool1 needs backward computation.
I0428 20:33:22.734294  4283 net.cpp:200] conv1 needs backward computation.
I0428 20:33:22.734298  4283 net.cpp:200] pool0 needs backward computation.
I0428 20:33:22.734302  4283 net.cpp:200] conv0 needs backward computation.
I0428 20:33:22.734305  4283 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:22.734309  4283 net.cpp:202] mnist does not need backward computation.
I0428 20:33:22.734313  4283 net.cpp:244] This network produces output accuracy
I0428 20:33:22.734316  4283 net.cpp:244] This network produces output loss
I0428 20:33:22.734326  4283 net.cpp:257] Network initialization done.
I0428 20:33:22.734369  4283 solver.cpp:56] Solver scaffolding done.
I0428 20:33:22.734699  4283 caffe.cpp:248] Starting Optimization
I0428 20:33:22.734705  4283 solver.cpp:273] Solving LeNet
I0428 20:33:22.734709  4283 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:22.735460  4283 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:22.834497  4290 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:22.836632  4283 solver.cpp:398]     Test net output #0: accuracy = 0.0959
I0428 20:33:22.836668  4283 solver.cpp:398]     Test net output #1: loss = 2.33561 (* 1 = 2.33561 loss)
I0428 20:33:22.841333  4283 solver.cpp:219] Iteration 0 (0 iter/s, 0.106599s/100 iters), loss = 2.31588
I0428 20:33:22.841373  4283 solver.cpp:238]     Train net output #0: loss = 2.31588 (* 1 = 2.31588 loss)
I0428 20:33:22.841387  4283 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:23.059988  4283 solver.cpp:219] Iteration 100 (457.462 iter/s, 0.218597s/100 iters), loss = 0.373827
I0428 20:33:23.060025  4283 solver.cpp:238]     Train net output #0: loss = 0.373827 (* 1 = 0.373827 loss)
I0428 20:33:23.060035  4283 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:23.277829  4283 solver.cpp:219] Iteration 200 (459.166 iter/s, 0.217786s/100 iters), loss = 0.24829
I0428 20:33:23.277875  4283 solver.cpp:238]     Train net output #0: loss = 0.24829 (* 1 = 0.24829 loss)
I0428 20:33:23.277887  4283 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:23.498610  4283 solver.cpp:219] Iteration 300 (453.069 iter/s, 0.220717s/100 iters), loss = 0.199693
I0428 20:33:23.498659  4283 solver.cpp:238]     Train net output #0: loss = 0.199693 (* 1 = 0.199693 loss)
I0428 20:33:23.498672  4283 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:23.729110  4283 solver.cpp:219] Iteration 400 (433.966 iter/s, 0.230433s/100 iters), loss = 0.0520671
I0428 20:33:23.729158  4283 solver.cpp:238]     Train net output #0: loss = 0.052067 (* 1 = 0.052067 loss)
I0428 20:33:23.729171  4283 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:23.949731  4283 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:24.049862  4290 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:24.052408  4283 solver.cpp:398]     Test net output #0: accuracy = 0.9561
I0428 20:33:24.052438  4283 solver.cpp:398]     Test net output #1: loss = 0.134927 (* 1 = 0.134927 loss)
I0428 20:33:24.054478  4283 solver.cpp:219] Iteration 500 (307.405 iter/s, 0.325303s/100 iters), loss = 0.0952694
I0428 20:33:24.054507  4283 solver.cpp:238]     Train net output #0: loss = 0.0952693 (* 1 = 0.0952693 loss)
I0428 20:33:24.054534  4283 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:24.276018  4283 solver.cpp:219] Iteration 600 (451.487 iter/s, 0.22149s/100 iters), loss = 0.0665651
I0428 20:33:24.276063  4283 solver.cpp:238]     Train net output #0: loss = 0.066565 (* 1 = 0.066565 loss)
I0428 20:33:24.276075  4283 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:24.496570  4283 solver.cpp:219] Iteration 700 (453.53 iter/s, 0.220493s/100 iters), loss = 0.154075
I0428 20:33:24.496605  4283 solver.cpp:238]     Train net output #0: loss = 0.154074 (* 1 = 0.154074 loss)
I0428 20:33:24.496614  4283 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:24.712139  4283 solver.cpp:219] Iteration 800 (464.007 iter/s, 0.215514s/100 iters), loss = 0.239349
I0428 20:33:24.712184  4283 solver.cpp:238]     Train net output #0: loss = 0.239349 (* 1 = 0.239349 loss)
I0428 20:33:24.712194  4283 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:24.929913  4283 solver.cpp:219] Iteration 900 (459.321 iter/s, 0.217713s/100 iters), loss = 0.12826
I0428 20:33:24.929949  4283 solver.cpp:238]     Train net output #0: loss = 0.12826 (* 1 = 0.12826 loss)
I0428 20:33:24.929958  4283 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:25.002887  4289 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:25.145241  4283 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:25.147884  4283 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:25.149456  4283 solver.cpp:311] Iteration 1000, loss = 0.158175
I0428 20:33:25.149476  4283 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:25.249269  4290 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:25.251626  4283 solver.cpp:398]     Test net output #0: accuracy = 0.975
I0428 20:33:25.251649  4283 solver.cpp:398]     Test net output #1: loss = 0.0737899 (* 1 = 0.0737899 loss)
I0428 20:33:25.251660  4283 solver.cpp:316] Optimization Done.
I0428 20:33:25.251665  4283 caffe.cpp:259] Optimization Done.
