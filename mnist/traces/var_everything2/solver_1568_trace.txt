I0428 20:32:13.068348  4068 caffe.cpp:218] Using GPUs 0
I0428 20:32:13.109092  4068 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:13.631008  4068 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1568.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:13.631181  4068 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1568.prototxt
I0428 20:32:13.631570  4068 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:13.631592  4068 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:13.631691  4068 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:13.631803  4068 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:13.631939  4068 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:13.631971  4068 net.cpp:86] Creating Layer mnist
I0428 20:32:13.631984  4068 net.cpp:382] mnist -> data
I0428 20:32:13.632014  4068 net.cpp:382] mnist -> label
I0428 20:32:13.633261  4068 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:13.635725  4068 net.cpp:124] Setting up mnist
I0428 20:32:13.635748  4068 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:13.635758  4068 net.cpp:131] Top shape: 64 (64)
I0428 20:32:13.635764  4068 net.cpp:139] Memory required for data: 200960
I0428 20:32:13.635776  4068 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:13.635799  4068 net.cpp:86] Creating Layer conv0
I0428 20:32:13.635810  4068 net.cpp:408] conv0 <- data
I0428 20:32:13.635828  4068 net.cpp:382] conv0 -> conv0
I0428 20:32:13.929332  4068 net.cpp:124] Setting up conv0
I0428 20:32:13.929364  4068 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:13.929373  4068 net.cpp:139] Memory required for data: 14946560
I0428 20:32:13.929425  4068 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:13.929447  4068 net.cpp:86] Creating Layer pool0
I0428 20:32:13.929457  4068 net.cpp:408] pool0 <- conv0
I0428 20:32:13.929469  4068 net.cpp:382] pool0 -> pool0
I0428 20:32:13.929534  4068 net.cpp:124] Setting up pool0
I0428 20:32:13.929545  4068 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:13.929553  4068 net.cpp:139] Memory required for data: 18632960
I0428 20:32:13.929558  4068 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:13.929579  4068 net.cpp:86] Creating Layer conv1
I0428 20:32:13.929586  4068 net.cpp:408] conv1 <- pool0
I0428 20:32:13.929596  4068 net.cpp:382] conv1 -> conv1
I0428 20:32:13.932199  4068 net.cpp:124] Setting up conv1
I0428 20:32:13.932219  4068 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:13.932226  4068 net.cpp:139] Memory required for data: 19042560
I0428 20:32:13.932241  4068 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:13.932255  4068 net.cpp:86] Creating Layer pool1
I0428 20:32:13.932263  4068 net.cpp:408] pool1 <- conv1
I0428 20:32:13.932273  4068 net.cpp:382] pool1 -> pool1
I0428 20:32:13.932327  4068 net.cpp:124] Setting up pool1
I0428 20:32:13.932337  4068 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:13.932343  4068 net.cpp:139] Memory required for data: 19144960
I0428 20:32:13.932350  4068 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:13.932363  4068 net.cpp:86] Creating Layer ip1
I0428 20:32:13.932369  4068 net.cpp:408] ip1 <- pool1
I0428 20:32:13.932379  4068 net.cpp:382] ip1 -> ip1
I0428 20:32:13.933559  4068 net.cpp:124] Setting up ip1
I0428 20:32:13.933576  4068 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:13.933583  4068 net.cpp:139] Memory required for data: 19151360
I0428 20:32:13.933599  4068 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:13.933611  4068 net.cpp:86] Creating Layer relu1
I0428 20:32:13.933619  4068 net.cpp:408] relu1 <- ip1
I0428 20:32:13.933629  4068 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:13.933840  4068 net.cpp:124] Setting up relu1
I0428 20:32:13.933853  4068 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:13.933859  4068 net.cpp:139] Memory required for data: 19157760
I0428 20:32:13.933866  4068 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:13.933878  4068 net.cpp:86] Creating Layer ip2
I0428 20:32:13.933886  4068 net.cpp:408] ip2 <- ip1
I0428 20:32:13.933897  4068 net.cpp:382] ip2 -> ip2
I0428 20:32:13.934020  4068 net.cpp:124] Setting up ip2
I0428 20:32:13.934031  4068 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:13.934036  4068 net.cpp:139] Memory required for data: 19160320
I0428 20:32:13.934047  4068 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:13.934059  4068 net.cpp:86] Creating Layer relu2
I0428 20:32:13.934067  4068 net.cpp:408] relu2 <- ip2
I0428 20:32:13.934075  4068 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:13.934953  4068 net.cpp:124] Setting up relu2
I0428 20:32:13.934970  4068 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:13.934976  4068 net.cpp:139] Memory required for data: 19162880
I0428 20:32:13.934983  4068 layer_factory.hpp:77] Creating layer loss
I0428 20:32:13.934995  4068 net.cpp:86] Creating Layer loss
I0428 20:32:13.935001  4068 net.cpp:408] loss <- ip2
I0428 20:32:13.935010  4068 net.cpp:408] loss <- label
I0428 20:32:13.935021  4068 net.cpp:382] loss -> loss
I0428 20:32:13.935052  4068 layer_factory.hpp:77] Creating layer loss
I0428 20:32:13.935343  4068 net.cpp:124] Setting up loss
I0428 20:32:13.935358  4068 net.cpp:131] Top shape: (1)
I0428 20:32:13.935364  4068 net.cpp:134]     with loss weight 1
I0428 20:32:13.935389  4068 net.cpp:139] Memory required for data: 19162884
I0428 20:32:13.935396  4068 net.cpp:200] loss needs backward computation.
I0428 20:32:13.935403  4068 net.cpp:200] relu2 needs backward computation.
I0428 20:32:13.935410  4068 net.cpp:200] ip2 needs backward computation.
I0428 20:32:13.935416  4068 net.cpp:200] relu1 needs backward computation.
I0428 20:32:13.935422  4068 net.cpp:200] ip1 needs backward computation.
I0428 20:32:13.935441  4068 net.cpp:200] pool1 needs backward computation.
I0428 20:32:13.935448  4068 net.cpp:200] conv1 needs backward computation.
I0428 20:32:13.935456  4068 net.cpp:200] pool0 needs backward computation.
I0428 20:32:13.935463  4068 net.cpp:200] conv0 needs backward computation.
I0428 20:32:13.935472  4068 net.cpp:202] mnist does not need backward computation.
I0428 20:32:13.935477  4068 net.cpp:244] This network produces output loss
I0428 20:32:13.935493  4068 net.cpp:257] Network initialization done.
I0428 20:32:13.935845  4068 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1568.prototxt
I0428 20:32:13.935885  4068 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:13.935993  4068 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:13.936108  4068 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:13.936182  4068 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:13.936203  4068 net.cpp:86] Creating Layer mnist
I0428 20:32:13.936213  4068 net.cpp:382] mnist -> data
I0428 20:32:13.936226  4068 net.cpp:382] mnist -> label
I0428 20:32:13.936372  4068 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:13.938733  4068 net.cpp:124] Setting up mnist
I0428 20:32:13.938752  4068 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:13.938762  4068 net.cpp:131] Top shape: 100 (100)
I0428 20:32:13.938768  4068 net.cpp:139] Memory required for data: 314000
I0428 20:32:13.938776  4068 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:13.938788  4068 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:13.938796  4068 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:13.938805  4068 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:13.938818  4068 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:13.938915  4068 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:13.938926  4068 net.cpp:131] Top shape: 100 (100)
I0428 20:32:13.938935  4068 net.cpp:131] Top shape: 100 (100)
I0428 20:32:13.938941  4068 net.cpp:139] Memory required for data: 314800
I0428 20:32:13.938946  4068 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:13.938962  4068 net.cpp:86] Creating Layer conv0
I0428 20:32:13.938971  4068 net.cpp:408] conv0 <- data
I0428 20:32:13.938982  4068 net.cpp:382] conv0 -> conv0
I0428 20:32:13.940721  4068 net.cpp:124] Setting up conv0
I0428 20:32:13.940740  4068 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:13.940748  4068 net.cpp:139] Memory required for data: 23354800
I0428 20:32:13.940765  4068 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:13.940778  4068 net.cpp:86] Creating Layer pool0
I0428 20:32:13.940785  4068 net.cpp:408] pool0 <- conv0
I0428 20:32:13.940795  4068 net.cpp:382] pool0 -> pool0
I0428 20:32:13.940857  4068 net.cpp:124] Setting up pool0
I0428 20:32:13.940870  4068 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:13.940876  4068 net.cpp:139] Memory required for data: 29114800
I0428 20:32:13.940882  4068 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:13.940899  4068 net.cpp:86] Creating Layer conv1
I0428 20:32:13.940908  4068 net.cpp:408] conv1 <- pool0
I0428 20:32:13.940919  4068 net.cpp:382] conv1 -> conv1
I0428 20:32:13.942939  4068 net.cpp:124] Setting up conv1
I0428 20:32:13.942956  4068 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:13.942963  4068 net.cpp:139] Memory required for data: 29754800
I0428 20:32:13.942980  4068 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:13.942991  4068 net.cpp:86] Creating Layer pool1
I0428 20:32:13.943001  4068 net.cpp:408] pool1 <- conv1
I0428 20:32:13.943011  4068 net.cpp:382] pool1 -> pool1
I0428 20:32:13.943063  4068 net.cpp:124] Setting up pool1
I0428 20:32:13.943073  4068 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:13.943079  4068 net.cpp:139] Memory required for data: 29914800
I0428 20:32:13.943087  4068 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:13.943099  4068 net.cpp:86] Creating Layer ip1
I0428 20:32:13.943105  4068 net.cpp:408] ip1 <- pool1
I0428 20:32:13.943116  4068 net.cpp:382] ip1 -> ip1
I0428 20:32:13.943308  4068 net.cpp:124] Setting up ip1
I0428 20:32:13.943320  4068 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:13.943326  4068 net.cpp:139] Memory required for data: 29924800
I0428 20:32:13.943346  4068 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:13.943357  4068 net.cpp:86] Creating Layer relu1
I0428 20:32:13.943369  4068 net.cpp:408] relu1 <- ip1
I0428 20:32:13.943379  4068 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:13.943572  4068 net.cpp:124] Setting up relu1
I0428 20:32:13.943583  4068 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:13.943590  4068 net.cpp:139] Memory required for data: 29934800
I0428 20:32:13.943600  4068 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:13.943614  4068 net.cpp:86] Creating Layer ip2
I0428 20:32:13.943626  4068 net.cpp:408] ip2 <- ip1
I0428 20:32:13.943637  4068 net.cpp:382] ip2 -> ip2
I0428 20:32:13.943761  4068 net.cpp:124] Setting up ip2
I0428 20:32:13.943771  4068 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:13.943778  4068 net.cpp:139] Memory required for data: 29938800
I0428 20:32:13.943789  4068 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:13.943799  4068 net.cpp:86] Creating Layer relu2
I0428 20:32:13.943806  4068 net.cpp:408] relu2 <- ip2
I0428 20:32:13.943816  4068 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:13.944106  4068 net.cpp:124] Setting up relu2
I0428 20:32:13.944119  4068 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:13.944126  4068 net.cpp:139] Memory required for data: 29942800
I0428 20:32:13.944134  4068 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:32:13.944144  4068 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:32:13.944151  4068 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:32:13.944169  4068 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:32:13.944193  4068 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:32:13.944244  4068 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:32:13.944254  4068 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:13.944262  4068 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:13.944269  4068 net.cpp:139] Memory required for data: 29950800
I0428 20:32:13.944275  4068 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:13.944285  4068 net.cpp:86] Creating Layer accuracy
I0428 20:32:13.944293  4068 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:32:13.944303  4068 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:13.944311  4068 net.cpp:382] accuracy -> accuracy
I0428 20:32:13.944325  4068 net.cpp:124] Setting up accuracy
I0428 20:32:13.944335  4068 net.cpp:131] Top shape: (1)
I0428 20:32:13.944346  4068 net.cpp:139] Memory required for data: 29950804
I0428 20:32:13.944352  4068 layer_factory.hpp:77] Creating layer loss
I0428 20:32:13.944362  4068 net.cpp:86] Creating Layer loss
I0428 20:32:13.944370  4068 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:32:13.944380  4068 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:13.944388  4068 net.cpp:382] loss -> loss
I0428 20:32:13.944401  4068 layer_factory.hpp:77] Creating layer loss
I0428 20:32:13.944679  4068 net.cpp:124] Setting up loss
I0428 20:32:13.944691  4068 net.cpp:131] Top shape: (1)
I0428 20:32:13.944699  4068 net.cpp:134]     with loss weight 1
I0428 20:32:13.944710  4068 net.cpp:139] Memory required for data: 29950808
I0428 20:32:13.944717  4068 net.cpp:200] loss needs backward computation.
I0428 20:32:13.944726  4068 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:13.944736  4068 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:32:13.944742  4068 net.cpp:200] relu2 needs backward computation.
I0428 20:32:13.944748  4068 net.cpp:200] ip2 needs backward computation.
I0428 20:32:13.944756  4068 net.cpp:200] relu1 needs backward computation.
I0428 20:32:13.944761  4068 net.cpp:200] ip1 needs backward computation.
I0428 20:32:13.944768  4068 net.cpp:200] pool1 needs backward computation.
I0428 20:32:13.944775  4068 net.cpp:200] conv1 needs backward computation.
I0428 20:32:13.944782  4068 net.cpp:200] pool0 needs backward computation.
I0428 20:32:13.944789  4068 net.cpp:200] conv0 needs backward computation.
I0428 20:32:13.944797  4068 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:13.944803  4068 net.cpp:202] mnist does not need backward computation.
I0428 20:32:13.944816  4068 net.cpp:244] This network produces output accuracy
I0428 20:32:13.944825  4068 net.cpp:244] This network produces output loss
I0428 20:32:13.944844  4068 net.cpp:257] Network initialization done.
I0428 20:32:13.944900  4068 solver.cpp:56] Solver scaffolding done.
I0428 20:32:13.945271  4068 caffe.cpp:248] Starting Optimization
I0428 20:32:13.945279  4068 solver.cpp:273] Solving LeNet
I0428 20:32:13.945286  4068 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:13.945561  4068 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:14.042340  4075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:14.044848  4068 solver.cpp:398]     Test net output #0: accuracy = 0.1022
I0428 20:32:14.044873  4068 solver.cpp:398]     Test net output #1: loss = 2.35434 (* 1 = 2.35434 loss)
I0428 20:32:14.049677  4068 solver.cpp:219] Iteration 0 (-2.64841e-31 iter/s, 0.104352s/100 iters), loss = 2.33648
I0428 20:32:14.049712  4068 solver.cpp:238]     Train net output #0: loss = 2.33648 (* 1 = 2.33648 loss)
I0428 20:32:14.049733  4068 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:14.261654  4068 solver.cpp:219] Iteration 100 (471.865 iter/s, 0.211925s/100 iters), loss = 0.306284
I0428 20:32:14.261713  4068 solver.cpp:238]     Train net output #0: loss = 0.306284 (* 1 = 0.306284 loss)
I0428 20:32:14.261734  4068 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:14.482095  4068 solver.cpp:219] Iteration 200 (453.783 iter/s, 0.22037s/100 iters), loss = 0.176642
I0428 20:32:14.482183  4068 solver.cpp:238]     Train net output #0: loss = 0.176642 (* 1 = 0.176642 loss)
I0428 20:32:14.482205  4068 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:14.702031  4068 solver.cpp:219] Iteration 300 (454.877 iter/s, 0.219839s/100 iters), loss = 0.16947
I0428 20:32:14.702090  4068 solver.cpp:238]     Train net output #0: loss = 0.16947 (* 1 = 0.16947 loss)
I0428 20:32:14.702111  4068 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:14.924444  4068 solver.cpp:219] Iteration 400 (449.757 iter/s, 0.222342s/100 iters), loss = 0.100892
I0428 20:32:14.924504  4068 solver.cpp:238]     Train net output #0: loss = 0.100892 (* 1 = 0.100892 loss)
I0428 20:32:14.924525  4068 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:15.144035  4068 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:15.247804  4075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:15.250488  4068 solver.cpp:398]     Test net output #0: accuracy = 0.9672
I0428 20:32:15.250517  4068 solver.cpp:398]     Test net output #1: loss = 0.104143 (* 1 = 0.104143 loss)
I0428 20:32:15.252480  4068 solver.cpp:219] Iteration 500 (304.911 iter/s, 0.327965s/100 iters), loss = 0.166533
I0428 20:32:15.252514  4068 solver.cpp:238]     Train net output #0: loss = 0.166533 (* 1 = 0.166533 loss)
I0428 20:32:15.252528  4068 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:15.474010  4068 solver.cpp:219] Iteration 600 (451.508 iter/s, 0.22148s/100 iters), loss = 0.0782603
I0428 20:32:15.474071  4068 solver.cpp:238]     Train net output #0: loss = 0.0782604 (* 1 = 0.0782604 loss)
I0428 20:32:15.474092  4068 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:15.694808  4068 solver.cpp:219] Iteration 700 (453.052 iter/s, 0.220725s/100 iters), loss = 0.12588
I0428 20:32:15.694874  4068 solver.cpp:238]     Train net output #0: loss = 0.12588 (* 1 = 0.12588 loss)
I0428 20:32:15.694893  4068 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:15.919358  4068 solver.cpp:219] Iteration 800 (445.49 iter/s, 0.224472s/100 iters), loss = 0.206343
I0428 20:32:15.919417  4068 solver.cpp:238]     Train net output #0: loss = 0.206343 (* 1 = 0.206343 loss)
I0428 20:32:15.919438  4068 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:16.145195  4068 solver.cpp:219] Iteration 900 (442.94 iter/s, 0.225764s/100 iters), loss = 0.140886
I0428 20:32:16.145256  4068 solver.cpp:238]     Train net output #0: loss = 0.140886 (* 1 = 0.140886 loss)
I0428 20:32:16.145277  4068 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:16.219867  4074 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:16.366793  4068 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:16.369827  4068 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:16.371827  4068 solver.cpp:311] Iteration 1000, loss = 0.138066
I0428 20:32:16.371858  4068 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:16.470729  4075 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:16.473217  4068 solver.cpp:398]     Test net output #0: accuracy = 0.9782
I0428 20:32:16.473247  4068 solver.cpp:398]     Test net output #1: loss = 0.0655045 (* 1 = 0.0655045 loss)
I0428 20:32:16.473258  4068 solver.cpp:316] Optimization Done.
I0428 20:32:16.473266  4068 caffe.cpp:259] Optimization Done.
