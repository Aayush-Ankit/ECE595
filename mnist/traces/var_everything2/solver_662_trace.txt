I0428 19:52:26.932792 27519 caffe.cpp:218] Using GPUs 0
I0428 19:52:26.972285 27519 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:27.563614 27519 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test662.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:27.563755 27519 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test662.prototxt
I0428 19:52:27.564261 27519 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:27.564286 27519 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:27.564409 27519 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:27.564501 27519 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:27.564604 27519 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:27.564630 27519 net.cpp:86] Creating Layer mnist
I0428 19:52:27.564641 27519 net.cpp:382] mnist -> data
I0428 19:52:27.564664 27519 net.cpp:382] mnist -> label
I0428 19:52:27.565992 27519 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:27.568754 27519 net.cpp:124] Setting up mnist
I0428 19:52:27.568775 27519 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:27.568783 27519 net.cpp:131] Top shape: 64 (64)
I0428 19:52:27.568788 27519 net.cpp:139] Memory required for data: 200960
I0428 19:52:27.568795 27519 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:27.568826 27519 net.cpp:86] Creating Layer conv0
I0428 19:52:27.568850 27519 net.cpp:408] conv0 <- data
I0428 19:52:27.568862 27519 net.cpp:382] conv0 -> conv0
I0428 19:52:27.819411 27519 net.cpp:124] Setting up conv0
I0428 19:52:27.819437 27519 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:27.819442 27519 net.cpp:139] Memory required for data: 938240
I0428 19:52:27.819456 27519 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:27.819468 27519 net.cpp:86] Creating Layer pool0
I0428 19:52:27.819473 27519 net.cpp:408] pool0 <- conv0
I0428 19:52:27.819478 27519 net.cpp:382] pool0 -> pool0
I0428 19:52:27.819535 27519 net.cpp:124] Setting up pool0
I0428 19:52:27.819541 27519 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:27.819545 27519 net.cpp:139] Memory required for data: 1122560
I0428 19:52:27.819547 27519 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:27.819556 27519 net.cpp:86] Creating Layer conv1
I0428 19:52:27.819560 27519 net.cpp:408] conv1 <- pool0
I0428 19:52:27.819564 27519 net.cpp:382] conv1 -> conv1
I0428 19:52:27.822325 27519 net.cpp:124] Setting up conv1
I0428 19:52:27.822340 27519 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:27.822342 27519 net.cpp:139] Memory required for data: 1532160
I0428 19:52:27.822350 27519 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:27.822357 27519 net.cpp:86] Creating Layer pool1
I0428 19:52:27.822361 27519 net.cpp:408] pool1 <- conv1
I0428 19:52:27.822381 27519 net.cpp:382] pool1 -> pool1
I0428 19:52:27.822417 27519 net.cpp:124] Setting up pool1
I0428 19:52:27.822422 27519 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:27.822425 27519 net.cpp:139] Memory required for data: 1634560
I0428 19:52:27.822428 27519 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:27.822435 27519 net.cpp:86] Creating Layer ip1
I0428 19:52:27.822438 27519 net.cpp:408] ip1 <- pool1
I0428 19:52:27.822443 27519 net.cpp:382] ip1 -> ip1
I0428 19:52:27.822654 27519 net.cpp:124] Setting up ip1
I0428 19:52:27.822662 27519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:27.822665 27519 net.cpp:139] Memory required for data: 1647360
I0428 19:52:27.822672 27519 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:27.822677 27519 net.cpp:86] Creating Layer relu1
I0428 19:52:27.822680 27519 net.cpp:408] relu1 <- ip1
I0428 19:52:27.822685 27519 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:27.822841 27519 net.cpp:124] Setting up relu1
I0428 19:52:27.822849 27519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:27.822852 27519 net.cpp:139] Memory required for data: 1660160
I0428 19:52:27.822855 27519 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:27.822862 27519 net.cpp:86] Creating Layer ip2
I0428 19:52:27.822865 27519 net.cpp:408] ip2 <- ip1
I0428 19:52:27.822870 27519 net.cpp:382] ip2 -> ip2
I0428 19:52:27.822970 27519 net.cpp:124] Setting up ip2
I0428 19:52:27.822978 27519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:27.822980 27519 net.cpp:139] Memory required for data: 1672960
I0428 19:52:27.822985 27519 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:27.822993 27519 net.cpp:86] Creating Layer relu2
I0428 19:52:27.822995 27519 net.cpp:408] relu2 <- ip2
I0428 19:52:27.822999 27519 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:27.823735 27519 net.cpp:124] Setting up relu2
I0428 19:52:27.823746 27519 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:27.823765 27519 net.cpp:139] Memory required for data: 1685760
I0428 19:52:27.823768 27519 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:27.823776 27519 net.cpp:86] Creating Layer ip3
I0428 19:52:27.823779 27519 net.cpp:408] ip3 <- ip2
I0428 19:52:27.823786 27519 net.cpp:382] ip3 -> ip3
I0428 19:52:27.823886 27519 net.cpp:124] Setting up ip3
I0428 19:52:27.823895 27519 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:27.823897 27519 net.cpp:139] Memory required for data: 1688320
I0428 19:52:27.823905 27519 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:27.823910 27519 net.cpp:86] Creating Layer relu3
I0428 19:52:27.823912 27519 net.cpp:408] relu3 <- ip3
I0428 19:52:27.823916 27519 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:27.824076 27519 net.cpp:124] Setting up relu3
I0428 19:52:27.824084 27519 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:27.824087 27519 net.cpp:139] Memory required for data: 1690880
I0428 19:52:27.824090 27519 layer_factory.hpp:77] Creating layer loss
I0428 19:52:27.824101 27519 net.cpp:86] Creating Layer loss
I0428 19:52:27.824105 27519 net.cpp:408] loss <- ip3
I0428 19:52:27.824108 27519 net.cpp:408] loss <- label
I0428 19:52:27.824113 27519 net.cpp:382] loss -> loss
I0428 19:52:27.824129 27519 layer_factory.hpp:77] Creating layer loss
I0428 19:52:27.824347 27519 net.cpp:124] Setting up loss
I0428 19:52:27.824355 27519 net.cpp:131] Top shape: (1)
I0428 19:52:27.824358 27519 net.cpp:134]     with loss weight 1
I0428 19:52:27.824371 27519 net.cpp:139] Memory required for data: 1690884
I0428 19:52:27.824374 27519 net.cpp:200] loss needs backward computation.
I0428 19:52:27.824378 27519 net.cpp:200] relu3 needs backward computation.
I0428 19:52:27.824381 27519 net.cpp:200] ip3 needs backward computation.
I0428 19:52:27.824384 27519 net.cpp:200] relu2 needs backward computation.
I0428 19:52:27.824386 27519 net.cpp:200] ip2 needs backward computation.
I0428 19:52:27.824389 27519 net.cpp:200] relu1 needs backward computation.
I0428 19:52:27.824391 27519 net.cpp:200] ip1 needs backward computation.
I0428 19:52:27.824394 27519 net.cpp:200] pool1 needs backward computation.
I0428 19:52:27.824398 27519 net.cpp:200] conv1 needs backward computation.
I0428 19:52:27.824400 27519 net.cpp:200] pool0 needs backward computation.
I0428 19:52:27.824403 27519 net.cpp:200] conv0 needs backward computation.
I0428 19:52:27.824405 27519 net.cpp:202] mnist does not need backward computation.
I0428 19:52:27.824409 27519 net.cpp:244] This network produces output loss
I0428 19:52:27.824419 27519 net.cpp:257] Network initialization done.
I0428 19:52:27.824743 27519 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test662.prototxt
I0428 19:52:27.824769 27519 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:27.824936 27519 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:27.825024 27519 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:27.825069 27519 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:27.825081 27519 net.cpp:86] Creating Layer mnist
I0428 19:52:27.825088 27519 net.cpp:382] mnist -> data
I0428 19:52:27.825094 27519 net.cpp:382] mnist -> label
I0428 19:52:27.825199 27519 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:27.827240 27519 net.cpp:124] Setting up mnist
I0428 19:52:27.827268 27519 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:27.827275 27519 net.cpp:131] Top shape: 100 (100)
I0428 19:52:27.827277 27519 net.cpp:139] Memory required for data: 314000
I0428 19:52:27.827281 27519 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:27.827287 27519 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:27.827291 27519 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:27.827294 27519 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:27.827301 27519 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:27.827355 27519 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:27.827363 27519 net.cpp:131] Top shape: 100 (100)
I0428 19:52:27.827366 27519 net.cpp:131] Top shape: 100 (100)
I0428 19:52:27.827369 27519 net.cpp:139] Memory required for data: 314800
I0428 19:52:27.827371 27519 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:27.827380 27519 net.cpp:86] Creating Layer conv0
I0428 19:52:27.827383 27519 net.cpp:408] conv0 <- data
I0428 19:52:27.827389 27519 net.cpp:382] conv0 -> conv0
I0428 19:52:27.829000 27519 net.cpp:124] Setting up conv0
I0428 19:52:27.829015 27519 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:27.829017 27519 net.cpp:139] Memory required for data: 1466800
I0428 19:52:27.829026 27519 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:27.829033 27519 net.cpp:86] Creating Layer pool0
I0428 19:52:27.829037 27519 net.cpp:408] pool0 <- conv0
I0428 19:52:27.829041 27519 net.cpp:382] pool0 -> pool0
I0428 19:52:27.829094 27519 net.cpp:124] Setting up pool0
I0428 19:52:27.829099 27519 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:27.829102 27519 net.cpp:139] Memory required for data: 1754800
I0428 19:52:27.829105 27519 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:27.829113 27519 net.cpp:86] Creating Layer conv1
I0428 19:52:27.829118 27519 net.cpp:408] conv1 <- pool0
I0428 19:52:27.829123 27519 net.cpp:382] conv1 -> conv1
I0428 19:52:27.831287 27519 net.cpp:124] Setting up conv1
I0428 19:52:27.831300 27519 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:27.831303 27519 net.cpp:139] Memory required for data: 2394800
I0428 19:52:27.831312 27519 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:27.831336 27519 net.cpp:86] Creating Layer pool1
I0428 19:52:27.831339 27519 net.cpp:408] pool1 <- conv1
I0428 19:52:27.831344 27519 net.cpp:382] pool1 -> pool1
I0428 19:52:27.831396 27519 net.cpp:124] Setting up pool1
I0428 19:52:27.831403 27519 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:27.831406 27519 net.cpp:139] Memory required for data: 2554800
I0428 19:52:27.831409 27519 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:27.831415 27519 net.cpp:86] Creating Layer ip1
I0428 19:52:27.831419 27519 net.cpp:408] ip1 <- pool1
I0428 19:52:27.831423 27519 net.cpp:382] ip1 -> ip1
I0428 19:52:27.831634 27519 net.cpp:124] Setting up ip1
I0428 19:52:27.831642 27519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:27.831655 27519 net.cpp:139] Memory required for data: 2574800
I0428 19:52:27.831663 27519 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:27.831670 27519 net.cpp:86] Creating Layer relu1
I0428 19:52:27.831672 27519 net.cpp:408] relu1 <- ip1
I0428 19:52:27.831676 27519 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:27.831838 27519 net.cpp:124] Setting up relu1
I0428 19:52:27.831847 27519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:27.831851 27519 net.cpp:139] Memory required for data: 2594800
I0428 19:52:27.831852 27519 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:27.831861 27519 net.cpp:86] Creating Layer ip2
I0428 19:52:27.831864 27519 net.cpp:408] ip2 <- ip1
I0428 19:52:27.831869 27519 net.cpp:382] ip2 -> ip2
I0428 19:52:27.831979 27519 net.cpp:124] Setting up ip2
I0428 19:52:27.831986 27519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:27.831990 27519 net.cpp:139] Memory required for data: 2614800
I0428 19:52:27.831995 27519 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:27.832000 27519 net.cpp:86] Creating Layer relu2
I0428 19:52:27.832003 27519 net.cpp:408] relu2 <- ip2
I0428 19:52:27.832007 27519 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:27.832216 27519 net.cpp:124] Setting up relu2
I0428 19:52:27.832224 27519 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:27.832227 27519 net.cpp:139] Memory required for data: 2634800
I0428 19:52:27.832231 27519 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:27.832236 27519 net.cpp:86] Creating Layer ip3
I0428 19:52:27.832239 27519 net.cpp:408] ip3 <- ip2
I0428 19:52:27.832247 27519 net.cpp:382] ip3 -> ip3
I0428 19:52:27.832389 27519 net.cpp:124] Setting up ip3
I0428 19:52:27.832397 27519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:27.832401 27519 net.cpp:139] Memory required for data: 2638800
I0428 19:52:27.832408 27519 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:27.832413 27519 net.cpp:86] Creating Layer relu3
I0428 19:52:27.832417 27519 net.cpp:408] relu3 <- ip3
I0428 19:52:27.832422 27519 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:27.833317 27519 net.cpp:124] Setting up relu3
I0428 19:52:27.833329 27519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:27.833333 27519 net.cpp:139] Memory required for data: 2642800
I0428 19:52:27.833338 27519 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:27.833343 27519 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:27.833345 27519 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:27.833351 27519 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:27.833358 27519 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:27.833400 27519 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:27.833405 27519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:27.833408 27519 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:27.833410 27519 net.cpp:139] Memory required for data: 2650800
I0428 19:52:27.833413 27519 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:27.833420 27519 net.cpp:86] Creating Layer accuracy
I0428 19:52:27.833422 27519 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:27.833426 27519 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:27.833431 27519 net.cpp:382] accuracy -> accuracy
I0428 19:52:27.833438 27519 net.cpp:124] Setting up accuracy
I0428 19:52:27.833442 27519 net.cpp:131] Top shape: (1)
I0428 19:52:27.833444 27519 net.cpp:139] Memory required for data: 2650804
I0428 19:52:27.833447 27519 layer_factory.hpp:77] Creating layer loss
I0428 19:52:27.833451 27519 net.cpp:86] Creating Layer loss
I0428 19:52:27.833454 27519 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:27.833458 27519 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:27.833461 27519 net.cpp:382] loss -> loss
I0428 19:52:27.833467 27519 layer_factory.hpp:77] Creating layer loss
I0428 19:52:27.833700 27519 net.cpp:124] Setting up loss
I0428 19:52:27.833710 27519 net.cpp:131] Top shape: (1)
I0428 19:52:27.833714 27519 net.cpp:134]     with loss weight 1
I0428 19:52:27.833719 27519 net.cpp:139] Memory required for data: 2650808
I0428 19:52:27.833734 27519 net.cpp:200] loss needs backward computation.
I0428 19:52:27.833737 27519 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:27.833741 27519 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:27.833745 27519 net.cpp:200] relu3 needs backward computation.
I0428 19:52:27.833747 27519 net.cpp:200] ip3 needs backward computation.
I0428 19:52:27.833750 27519 net.cpp:200] relu2 needs backward computation.
I0428 19:52:27.833752 27519 net.cpp:200] ip2 needs backward computation.
I0428 19:52:27.833756 27519 net.cpp:200] relu1 needs backward computation.
I0428 19:52:27.833758 27519 net.cpp:200] ip1 needs backward computation.
I0428 19:52:27.833761 27519 net.cpp:200] pool1 needs backward computation.
I0428 19:52:27.833773 27519 net.cpp:200] conv1 needs backward computation.
I0428 19:52:27.833776 27519 net.cpp:200] pool0 needs backward computation.
I0428 19:52:27.833780 27519 net.cpp:200] conv0 needs backward computation.
I0428 19:52:27.833783 27519 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:27.833803 27519 net.cpp:202] mnist does not need backward computation.
I0428 19:52:27.833806 27519 net.cpp:244] This network produces output accuracy
I0428 19:52:27.833816 27519 net.cpp:244] This network produces output loss
I0428 19:52:27.833827 27519 net.cpp:257] Network initialization done.
I0428 19:52:27.833871 27519 solver.cpp:56] Solver scaffolding done.
I0428 19:52:27.834250 27519 caffe.cpp:248] Starting Optimization
I0428 19:52:27.834256 27519 solver.cpp:273] Solving LeNet
I0428 19:52:27.834259 27519 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:27.835170 27519 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:27.838888 27519 blocking_queue.cpp:49] Waiting for data
I0428 19:52:27.910445 27526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:27.910989 27519 solver.cpp:398]     Test net output #0: accuracy = 0.1032
I0428 19:52:27.911027 27519 solver.cpp:398]     Test net output #1: loss = 2.30999 (* 1 = 2.30999 loss)
I0428 19:52:27.914324 27519 solver.cpp:219] Iteration 0 (-1.01594e-42 iter/s, 0.0800102s/100 iters), loss = 2.30969
I0428 19:52:27.914382 27519 solver.cpp:238]     Train net output #0: loss = 2.30969 (* 1 = 2.30969 loss)
I0428 19:52:27.914404 27519 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:28.017812 27519 solver.cpp:219] Iteration 100 (966.951 iter/s, 0.103418s/100 iters), loss = 1.3171
I0428 19:52:28.017844 27519 solver.cpp:238]     Train net output #0: loss = 1.3171 (* 1 = 1.3171 loss)
I0428 19:52:28.017853 27519 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:28.109285 27519 solver.cpp:219] Iteration 200 (1093.73 iter/s, 0.0914299s/100 iters), loss = 1.00806
I0428 19:52:28.109316 27519 solver.cpp:238]     Train net output #0: loss = 1.00806 (* 1 = 1.00806 loss)
I0428 19:52:28.109323 27519 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:28.201887 27519 solver.cpp:219] Iteration 300 (1080.42 iter/s, 0.0925563s/100 iters), loss = 1.34591
I0428 19:52:28.201942 27519 solver.cpp:238]     Train net output #0: loss = 1.34591 (* 1 = 1.34591 loss)
I0428 19:52:28.201956 27519 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:28.305693 27519 solver.cpp:219] Iteration 400 (963.916 iter/s, 0.103743s/100 iters), loss = 0.54204
I0428 19:52:28.305727 27519 solver.cpp:238]     Train net output #0: loss = 0.54204 (* 1 = 0.54204 loss)
I0428 19:52:28.305735 27519 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:28.404279 27519 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:28.461447 27526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:28.462024 27519 solver.cpp:398]     Test net output #0: accuracy = 0.7727
I0428 19:52:28.462052 27519 solver.cpp:398]     Test net output #1: loss = 0.59075 (* 1 = 0.59075 loss)
I0428 19:52:28.463165 27519 solver.cpp:219] Iteration 500 (635.225 iter/s, 0.157425s/100 iters), loss = 0.529672
I0428 19:52:28.463196 27519 solver.cpp:238]     Train net output #0: loss = 0.529672 (* 1 = 0.529672 loss)
I0428 19:52:28.463228 27519 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:28.555681 27519 solver.cpp:219] Iteration 600 (1081.37 iter/s, 0.0924755s/100 iters), loss = 0.642948
I0428 19:52:28.555713 27519 solver.cpp:238]     Train net output #0: loss = 0.642948 (* 1 = 0.642948 loss)
I0428 19:52:28.555721 27519 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:28.645853 27519 solver.cpp:219] Iteration 700 (1109.53 iter/s, 0.0901285s/100 iters), loss = 0.758235
I0428 19:52:28.645884 27519 solver.cpp:238]     Train net output #0: loss = 0.758235 (* 1 = 0.758235 loss)
I0428 19:52:28.645891 27519 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:28.735738 27519 solver.cpp:219] Iteration 800 (1113.03 iter/s, 0.0898447s/100 iters), loss = 0.952047
I0428 19:52:28.735769 27519 solver.cpp:238]     Train net output #0: loss = 0.952047 (* 1 = 0.952047 loss)
I0428 19:52:28.735776 27519 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:28.825539 27519 solver.cpp:219] Iteration 900 (1114.07 iter/s, 0.0897606s/100 iters), loss = 0.684011
I0428 19:52:28.825569 27519 solver.cpp:238]     Train net output #0: loss = 0.684011 (* 1 = 0.684011 loss)
I0428 19:52:28.825577 27519 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:28.855864 27525 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:28.916384 27519 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:28.917642 27519 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:28.918303 27519 solver.cpp:311] Iteration 1000, loss = 0.662569
I0428 19:52:28.918324 27519 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:28.971464 27526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:28.971997 27519 solver.cpp:398]     Test net output #0: accuracy = 0.7839
I0428 19:52:28.972020 27519 solver.cpp:398]     Test net output #1: loss = 0.534295 (* 1 = 0.534295 loss)
I0428 19:52:28.972028 27519 solver.cpp:316] Optimization Done.
I0428 19:52:28.972030 27519 caffe.cpp:259] Optimization Done.
