I0428 19:29:55.293923 22152 caffe.cpp:218] Using GPUs 0
I0428 19:29:55.334678 22152 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:55.782572 22152 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test74.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:55.782759 22152 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test74.prototxt
I0428 19:29:55.783112 22152 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:55.783129 22152 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:55.783203 22152 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:55.783289 22152 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:55.783396 22152 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:55.783423 22152 net.cpp:86] Creating Layer mnist
I0428 19:29:55.783432 22152 net.cpp:382] mnist -> data
I0428 19:29:55.783457 22152 net.cpp:382] mnist -> label
I0428 19:29:55.784621 22152 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:55.787103 22152 net.cpp:124] Setting up mnist
I0428 19:29:55.787122 22152 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:55.787129 22152 net.cpp:131] Top shape: 64 (64)
I0428 19:29:55.787134 22152 net.cpp:139] Memory required for data: 200960
I0428 19:29:55.787143 22152 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:55.787165 22152 net.cpp:86] Creating Layer conv0
I0428 19:29:55.787174 22152 net.cpp:408] conv0 <- data
I0428 19:29:55.787189 22152 net.cpp:382] conv0 -> conv0
I0428 19:29:56.015837 22152 net.cpp:124] Setting up conv0
I0428 19:29:56.015864 22152 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:56.015871 22152 net.cpp:139] Memory required for data: 495872
I0428 19:29:56.015889 22152 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:56.015905 22152 net.cpp:86] Creating Layer pool0
I0428 19:29:56.015928 22152 net.cpp:408] pool0 <- conv0
I0428 19:29:56.015938 22152 net.cpp:382] pool0 -> pool0
I0428 19:29:56.015987 22152 net.cpp:124] Setting up pool0
I0428 19:29:56.015995 22152 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:56.016000 22152 net.cpp:139] Memory required for data: 569600
I0428 19:29:56.016005 22152 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:56.016016 22152 net.cpp:86] Creating Layer ip1
I0428 19:29:56.016024 22152 net.cpp:408] ip1 <- pool0
I0428 19:29:56.016032 22152 net.cpp:382] ip1 -> ip1
I0428 19:29:56.017137 22152 net.cpp:124] Setting up ip1
I0428 19:29:56.017151 22152 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:56.017158 22152 net.cpp:139] Memory required for data: 582400
I0428 19:29:56.017168 22152 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:56.017179 22152 net.cpp:86] Creating Layer relu1
I0428 19:29:56.017184 22152 net.cpp:408] relu1 <- ip1
I0428 19:29:56.017191 22152 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:56.017415 22152 net.cpp:124] Setting up relu1
I0428 19:29:56.017426 22152 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:56.017431 22152 net.cpp:139] Memory required for data: 595200
I0428 19:29:56.017436 22152 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:56.017446 22152 net.cpp:86] Creating Layer ip2
I0428 19:29:56.017452 22152 net.cpp:408] ip2 <- ip1
I0428 19:29:56.017460 22152 net.cpp:382] ip2 -> ip2
I0428 19:29:56.018438 22152 net.cpp:124] Setting up ip2
I0428 19:29:56.018452 22152 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:56.018457 22152 net.cpp:139] Memory required for data: 601600
I0428 19:29:56.018486 22152 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:56.018494 22152 net.cpp:86] Creating Layer relu2
I0428 19:29:56.018499 22152 net.cpp:408] relu2 <- ip2
I0428 19:29:56.018507 22152 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:56.019276 22152 net.cpp:124] Setting up relu2
I0428 19:29:56.019290 22152 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:56.019296 22152 net.cpp:139] Memory required for data: 608000
I0428 19:29:56.019301 22152 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:56.019312 22152 net.cpp:86] Creating Layer ip3
I0428 19:29:56.019318 22152 net.cpp:408] ip3 <- ip2
I0428 19:29:56.019327 22152 net.cpp:382] ip3 -> ip3
I0428 19:29:56.019464 22152 net.cpp:124] Setting up ip3
I0428 19:29:56.019472 22152 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:56.019477 22152 net.cpp:139] Memory required for data: 610560
I0428 19:29:56.019486 22152 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:56.019496 22152 net.cpp:86] Creating Layer relu3
I0428 19:29:56.019505 22152 net.cpp:408] relu3 <- ip3
I0428 19:29:56.019512 22152 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:56.019667 22152 net.cpp:124] Setting up relu3
I0428 19:29:56.019676 22152 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:56.019681 22152 net.cpp:139] Memory required for data: 613120
I0428 19:29:56.019686 22152 layer_factory.hpp:77] Creating layer loss
I0428 19:29:56.019709 22152 net.cpp:86] Creating Layer loss
I0428 19:29:56.019714 22152 net.cpp:408] loss <- ip3
I0428 19:29:56.019721 22152 net.cpp:408] loss <- label
I0428 19:29:56.019729 22152 net.cpp:382] loss -> loss
I0428 19:29:56.019748 22152 layer_factory.hpp:77] Creating layer loss
I0428 19:29:56.019968 22152 net.cpp:124] Setting up loss
I0428 19:29:56.019978 22152 net.cpp:131] Top shape: (1)
I0428 19:29:56.019982 22152 net.cpp:134]     with loss weight 1
I0428 19:29:56.020001 22152 net.cpp:139] Memory required for data: 613124
I0428 19:29:56.020007 22152 net.cpp:200] loss needs backward computation.
I0428 19:29:56.020014 22152 net.cpp:200] relu3 needs backward computation.
I0428 19:29:56.020018 22152 net.cpp:200] ip3 needs backward computation.
I0428 19:29:56.020023 22152 net.cpp:200] relu2 needs backward computation.
I0428 19:29:56.020028 22152 net.cpp:200] ip2 needs backward computation.
I0428 19:29:56.020032 22152 net.cpp:200] relu1 needs backward computation.
I0428 19:29:56.020037 22152 net.cpp:200] ip1 needs backward computation.
I0428 19:29:56.020054 22152 net.cpp:200] pool0 needs backward computation.
I0428 19:29:56.020059 22152 net.cpp:200] conv0 needs backward computation.
I0428 19:29:56.020066 22152 net.cpp:202] mnist does not need backward computation.
I0428 19:29:56.020069 22152 net.cpp:244] This network produces output loss
I0428 19:29:56.020081 22152 net.cpp:257] Network initialization done.
I0428 19:29:56.020354 22152 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test74.prototxt
I0428 19:29:56.020385 22152 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:56.020498 22152 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:56.020589 22152 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:56.020664 22152 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:56.020681 22152 net.cpp:86] Creating Layer mnist
I0428 19:29:56.020689 22152 net.cpp:382] mnist -> data
I0428 19:29:56.020700 22152 net.cpp:382] mnist -> label
I0428 19:29:56.020874 22152 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:56.023128 22152 net.cpp:124] Setting up mnist
I0428 19:29:56.023159 22152 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:56.023172 22152 net.cpp:131] Top shape: 100 (100)
I0428 19:29:56.023177 22152 net.cpp:139] Memory required for data: 314000
I0428 19:29:56.023183 22152 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:56.023193 22152 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:56.023200 22152 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:56.023208 22152 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:56.023219 22152 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:56.023325 22152 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:56.023334 22152 net.cpp:131] Top shape: 100 (100)
I0428 19:29:56.023341 22152 net.cpp:131] Top shape: 100 (100)
I0428 19:29:56.023356 22152 net.cpp:139] Memory required for data: 314800
I0428 19:29:56.023373 22152 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:56.023387 22152 net.cpp:86] Creating Layer conv0
I0428 19:29:56.023394 22152 net.cpp:408] conv0 <- data
I0428 19:29:56.023403 22152 net.cpp:382] conv0 -> conv0
I0428 19:29:56.025030 22152 net.cpp:124] Setting up conv0
I0428 19:29:56.025046 22152 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:56.025053 22152 net.cpp:139] Memory required for data: 775600
I0428 19:29:56.025066 22152 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:56.025076 22152 net.cpp:86] Creating Layer pool0
I0428 19:29:56.025084 22152 net.cpp:408] pool0 <- conv0
I0428 19:29:56.025092 22152 net.cpp:382] pool0 -> pool0
I0428 19:29:56.025147 22152 net.cpp:124] Setting up pool0
I0428 19:29:56.025156 22152 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:56.025174 22152 net.cpp:139] Memory required for data: 890800
I0428 19:29:56.025179 22152 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:56.025189 22152 net.cpp:86] Creating Layer ip1
I0428 19:29:56.025194 22152 net.cpp:408] ip1 <- pool0
I0428 19:29:56.025202 22152 net.cpp:382] ip1 -> ip1
I0428 19:29:56.025367 22152 net.cpp:124] Setting up ip1
I0428 19:29:56.025374 22152 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:56.025379 22152 net.cpp:139] Memory required for data: 910800
I0428 19:29:56.025389 22152 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:56.025408 22152 net.cpp:86] Creating Layer relu1
I0428 19:29:56.025415 22152 net.cpp:408] relu1 <- ip1
I0428 19:29:56.025423 22152 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:56.025709 22152 net.cpp:124] Setting up relu1
I0428 19:29:56.025719 22152 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:56.025725 22152 net.cpp:139] Memory required for data: 930800
I0428 19:29:56.025730 22152 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:56.025739 22152 net.cpp:86] Creating Layer ip2
I0428 19:29:56.025744 22152 net.cpp:408] ip2 <- ip1
I0428 19:29:56.025768 22152 net.cpp:382] ip2 -> ip2
I0428 19:29:56.025902 22152 net.cpp:124] Setting up ip2
I0428 19:29:56.025910 22152 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:56.025915 22152 net.cpp:139] Memory required for data: 940800
I0428 19:29:56.025943 22152 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:56.025967 22152 net.cpp:86] Creating Layer relu2
I0428 19:29:56.025972 22152 net.cpp:408] relu2 <- ip2
I0428 19:29:56.025981 22152 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:56.026867 22152 net.cpp:124] Setting up relu2
I0428 19:29:56.026886 22152 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:56.026906 22152 net.cpp:139] Memory required for data: 950800
I0428 19:29:56.026912 22152 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:56.026924 22152 net.cpp:86] Creating Layer ip3
I0428 19:29:56.026931 22152 net.cpp:408] ip3 <- ip2
I0428 19:29:56.026939 22152 net.cpp:382] ip3 -> ip3
I0428 19:29:56.027076 22152 net.cpp:124] Setting up ip3
I0428 19:29:56.027086 22152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:56.027091 22152 net.cpp:139] Memory required for data: 954800
I0428 19:29:56.027099 22152 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:56.027107 22152 net.cpp:86] Creating Layer relu3
I0428 19:29:56.027112 22152 net.cpp:408] relu3 <- ip3
I0428 19:29:56.027120 22152 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:56.027274 22152 net.cpp:124] Setting up relu3
I0428 19:29:56.027284 22152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:56.027289 22152 net.cpp:139] Memory required for data: 958800
I0428 19:29:56.027294 22152 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:56.027302 22152 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:56.027323 22152 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:56.027345 22152 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:56.027354 22152 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:56.027395 22152 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:56.027403 22152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:56.027410 22152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:56.027436 22152 net.cpp:139] Memory required for data: 966800
I0428 19:29:56.027441 22152 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:56.027449 22152 net.cpp:86] Creating Layer accuracy
I0428 19:29:56.027456 22152 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:56.027462 22152 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:56.027472 22152 net.cpp:382] accuracy -> accuracy
I0428 19:29:56.027482 22152 net.cpp:124] Setting up accuracy
I0428 19:29:56.027489 22152 net.cpp:131] Top shape: (1)
I0428 19:29:56.027494 22152 net.cpp:139] Memory required for data: 966804
I0428 19:29:56.027499 22152 layer_factory.hpp:77] Creating layer loss
I0428 19:29:56.027506 22152 net.cpp:86] Creating Layer loss
I0428 19:29:56.027511 22152 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:56.027518 22152 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:56.027526 22152 net.cpp:382] loss -> loss
I0428 19:29:56.027536 22152 layer_factory.hpp:77] Creating layer loss
I0428 19:29:56.027758 22152 net.cpp:124] Setting up loss
I0428 19:29:56.027768 22152 net.cpp:131] Top shape: (1)
I0428 19:29:56.027773 22152 net.cpp:134]     with loss weight 1
I0428 19:29:56.027782 22152 net.cpp:139] Memory required for data: 966808
I0428 19:29:56.027787 22152 net.cpp:200] loss needs backward computation.
I0428 19:29:56.027794 22152 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:56.027799 22152 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:56.027806 22152 net.cpp:200] relu3 needs backward computation.
I0428 19:29:56.027820 22152 net.cpp:200] ip3 needs backward computation.
I0428 19:29:56.027825 22152 net.cpp:200] relu2 needs backward computation.
I0428 19:29:56.027830 22152 net.cpp:200] ip2 needs backward computation.
I0428 19:29:56.027837 22152 net.cpp:200] relu1 needs backward computation.
I0428 19:29:56.027842 22152 net.cpp:200] ip1 needs backward computation.
I0428 19:29:56.027848 22152 net.cpp:200] pool0 needs backward computation.
I0428 19:29:56.027853 22152 net.cpp:200] conv0 needs backward computation.
I0428 19:29:56.027859 22152 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:56.027865 22152 net.cpp:202] mnist does not need backward computation.
I0428 19:29:56.027869 22152 net.cpp:244] This network produces output accuracy
I0428 19:29:56.027875 22152 net.cpp:244] This network produces output loss
I0428 19:29:56.027890 22152 net.cpp:257] Network initialization done.
I0428 19:29:56.027932 22152 solver.cpp:56] Solver scaffolding done.
I0428 19:29:56.028219 22152 caffe.cpp:248] Starting Optimization
I0428 19:29:56.028226 22152 solver.cpp:273] Solving LeNet
I0428 19:29:56.028231 22152 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:56.029065 22152 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:56.032338 22152 blocking_queue.cpp:49] Waiting for data
I0428 19:29:56.078480 22159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:56.078847 22152 solver.cpp:398]     Test net output #0: accuracy = 0.1052
I0428 19:29:56.078867 22152 solver.cpp:398]     Test net output #1: loss = 2.30062 (* 1 = 2.30062 loss)
I0428 19:29:56.080562 22152 solver.cpp:219] Iteration 0 (0 iter/s, 0.0523046s/100 iters), loss = 2.29639
I0428 19:29:56.080591 22152 solver.cpp:238]     Train net output #0: loss = 2.29639 (* 1 = 2.29639 loss)
I0428 19:29:56.080610 22152 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:56.136090 22152 solver.cpp:219] Iteration 100 (1802.04 iter/s, 0.0554926s/100 iters), loss = 0.43212
I0428 19:29:56.136116 22152 solver.cpp:238]     Train net output #0: loss = 0.43212 (* 1 = 0.43212 loss)
I0428 19:29:56.136126 22152 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:56.190593 22152 solver.cpp:219] Iteration 200 (1835.82 iter/s, 0.0544715s/100 iters), loss = 0.293908
I0428 19:29:56.190618 22152 solver.cpp:238]     Train net output #0: loss = 0.293908 (* 1 = 0.293908 loss)
I0428 19:29:56.190644 22152 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:56.245513 22152 solver.cpp:219] Iteration 300 (1821.84 iter/s, 0.0548895s/100 iters), loss = 0.331995
I0428 19:29:56.245568 22152 solver.cpp:238]     Train net output #0: loss = 0.331995 (* 1 = 0.331995 loss)
I0428 19:29:56.245595 22152 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:56.300552 22152 solver.cpp:219] Iteration 400 (1818.89 iter/s, 0.0549786s/100 iters), loss = 0.208538
I0428 19:29:56.300578 22152 solver.cpp:238]     Train net output #0: loss = 0.208538 (* 1 = 0.208538 loss)
I0428 19:29:56.300603 22152 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:56.354738 22152 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:56.397486 22159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:56.397861 22152 solver.cpp:398]     Test net output #0: accuracy = 0.9398
I0428 19:29:56.397879 22152 solver.cpp:398]     Test net output #1: loss = 0.197582 (* 1 = 0.197582 loss)
I0428 19:29:56.398546 22152 solver.cpp:219] Iteration 500 (1020.99 iter/s, 0.0979446s/100 iters), loss = 0.245157
I0428 19:29:56.398573 22152 solver.cpp:238]     Train net output #0: loss = 0.245157 (* 1 = 0.245157 loss)
I0428 19:29:56.398582 22152 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:56.455348 22152 solver.cpp:219] Iteration 600 (1761.54 iter/s, 0.0567685s/100 iters), loss = 0.178339
I0428 19:29:56.455374 22152 solver.cpp:238]     Train net output #0: loss = 0.178339 (* 1 = 0.178339 loss)
I0428 19:29:56.455399 22152 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:56.511816 22152 solver.cpp:219] Iteration 700 (1771.93 iter/s, 0.0564355s/100 iters), loss = 0.305857
I0428 19:29:56.511843 22152 solver.cpp:238]     Train net output #0: loss = 0.305857 (* 1 = 0.305857 loss)
I0428 19:29:56.511869 22152 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:56.568269 22152 solver.cpp:219] Iteration 800 (1772.41 iter/s, 0.0564204s/100 iters), loss = 0.281624
I0428 19:29:56.568295 22152 solver.cpp:238]     Train net output #0: loss = 0.281624 (* 1 = 0.281624 loss)
I0428 19:29:56.568320 22152 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:56.624094 22152 solver.cpp:219] Iteration 900 (1792.32 iter/s, 0.0557937s/100 iters), loss = 0.335067
I0428 19:29:56.624120 22152 solver.cpp:238]     Train net output #0: loss = 0.335067 (* 1 = 0.335067 loss)
I0428 19:29:56.624145 22152 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:56.643065 22158 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:56.679510 22152 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:56.680322 22152 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:56.680826 22152 solver.cpp:311] Iteration 1000, loss = 0.140849
I0428 19:29:56.680843 22152 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:56.727195 22159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:56.727602 22152 solver.cpp:398]     Test net output #0: accuracy = 0.955
I0428 19:29:56.727622 22152 solver.cpp:398]     Test net output #1: loss = 0.141339 (* 1 = 0.141339 loss)
I0428 19:29:56.727645 22152 solver.cpp:316] Optimization Done.
I0428 19:29:56.727653 22152 caffe.cpp:259] Optimization Done.
