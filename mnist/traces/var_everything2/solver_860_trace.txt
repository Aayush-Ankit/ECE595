I0428 19:59:51.843868 29343 caffe.cpp:218] Using GPUs 0
I0428 19:59:51.880549 29343 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:52.328843 29343 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test860.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:52.328954 29343 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test860.prototxt
I0428 19:59:52.329248 29343 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:52.329260 29343 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:52.329334 29343 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:59:52.329383 29343 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:52.329460 29343 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:52.329479 29343 net.cpp:86] Creating Layer mnist
I0428 19:59:52.329484 29343 net.cpp:382] mnist -> data
I0428 19:59:52.329502 29343 net.cpp:382] mnist -> label
I0428 19:59:52.330365 29343 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:52.332442 29343 net.cpp:124] Setting up mnist
I0428 19:59:52.332455 29343 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:52.332460 29343 net.cpp:131] Top shape: 64 (64)
I0428 19:59:52.332463 29343 net.cpp:139] Memory required for data: 200960
I0428 19:59:52.332469 29343 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:52.332481 29343 net.cpp:86] Creating Layer conv0
I0428 19:59:52.332486 29343 net.cpp:408] conv0 <- data
I0428 19:59:52.332494 29343 net.cpp:382] conv0 -> conv0
I0428 19:59:52.565449 29343 net.cpp:124] Setting up conv0
I0428 19:59:52.565491 29343 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:52.565495 29343 net.cpp:139] Memory required for data: 1675520
I0428 19:59:52.565510 29343 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:52.565523 29343 net.cpp:86] Creating Layer pool0
I0428 19:59:52.565526 29343 net.cpp:408] pool0 <- conv0
I0428 19:59:52.565532 29343 net.cpp:382] pool0 -> pool0
I0428 19:59:52.565577 29343 net.cpp:124] Setting up pool0
I0428 19:59:52.565582 29343 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:52.565601 29343 net.cpp:139] Memory required for data: 2044160
I0428 19:59:52.565604 29343 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:52.565615 29343 net.cpp:86] Creating Layer conv1
I0428 19:59:52.565618 29343 net.cpp:408] conv1 <- pool0
I0428 19:59:52.565623 29343 net.cpp:382] conv1 -> conv1
I0428 19:59:52.568373 29343 net.cpp:124] Setting up conv1
I0428 19:59:52.568387 29343 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:59:52.568392 29343 net.cpp:139] Memory required for data: 2453760
I0428 19:59:52.568399 29343 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:52.568408 29343 net.cpp:86] Creating Layer pool1
I0428 19:59:52.568410 29343 net.cpp:408] pool1 <- conv1
I0428 19:59:52.568415 29343 net.cpp:382] pool1 -> pool1
I0428 19:59:52.568450 29343 net.cpp:124] Setting up pool1
I0428 19:59:52.568459 29343 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:59:52.568460 29343 net.cpp:139] Memory required for data: 2556160
I0428 19:59:52.568464 29343 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:52.568485 29343 net.cpp:86] Creating Layer ip1
I0428 19:59:52.568487 29343 net.cpp:408] ip1 <- pool1
I0428 19:59:52.568491 29343 net.cpp:382] ip1 -> ip1
I0428 19:59:52.569468 29343 net.cpp:124] Setting up ip1
I0428 19:59:52.569481 29343 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:52.569484 29343 net.cpp:139] Memory required for data: 2558720
I0428 19:59:52.569494 29343 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:52.569499 29343 net.cpp:86] Creating Layer relu1
I0428 19:59:52.569502 29343 net.cpp:408] relu1 <- ip1
I0428 19:59:52.569507 29343 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:52.569682 29343 net.cpp:124] Setting up relu1
I0428 19:59:52.569690 29343 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:52.569694 29343 net.cpp:139] Memory required for data: 2561280
I0428 19:59:52.569696 29343 layer_factory.hpp:77] Creating layer loss
I0428 19:59:52.569707 29343 net.cpp:86] Creating Layer loss
I0428 19:59:52.569710 29343 net.cpp:408] loss <- ip1
I0428 19:59:52.569715 29343 net.cpp:408] loss <- label
I0428 19:59:52.569720 29343 net.cpp:382] loss -> loss
I0428 19:59:52.569731 29343 layer_factory.hpp:77] Creating layer loss
I0428 19:59:52.570571 29343 net.cpp:124] Setting up loss
I0428 19:59:52.570583 29343 net.cpp:131] Top shape: (1)
I0428 19:59:52.570587 29343 net.cpp:134]     with loss weight 1
I0428 19:59:52.570601 29343 net.cpp:139] Memory required for data: 2561284
I0428 19:59:52.570605 29343 net.cpp:200] loss needs backward computation.
I0428 19:59:52.570608 29343 net.cpp:200] relu1 needs backward computation.
I0428 19:59:52.570611 29343 net.cpp:200] ip1 needs backward computation.
I0428 19:59:52.570614 29343 net.cpp:200] pool1 needs backward computation.
I0428 19:59:52.570617 29343 net.cpp:200] conv1 needs backward computation.
I0428 19:59:52.570621 29343 net.cpp:200] pool0 needs backward computation.
I0428 19:59:52.570623 29343 net.cpp:200] conv0 needs backward computation.
I0428 19:59:52.570626 29343 net.cpp:202] mnist does not need backward computation.
I0428 19:59:52.570629 29343 net.cpp:244] This network produces output loss
I0428 19:59:52.570637 29343 net.cpp:257] Network initialization done.
I0428 19:59:52.570899 29343 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test860.prototxt
I0428 19:59:52.570922 29343 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:52.570993 29343 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:59:52.571059 29343 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:52.571104 29343 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:52.571115 29343 net.cpp:86] Creating Layer mnist
I0428 19:59:52.571120 29343 net.cpp:382] mnist -> data
I0428 19:59:52.571127 29343 net.cpp:382] mnist -> label
I0428 19:59:52.571209 29343 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:52.573125 29343 net.cpp:124] Setting up mnist
I0428 19:59:52.573139 29343 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:52.573146 29343 net.cpp:131] Top shape: 100 (100)
I0428 19:59:52.573149 29343 net.cpp:139] Memory required for data: 314000
I0428 19:59:52.573153 29343 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:52.573159 29343 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:52.573163 29343 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:52.573168 29343 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:52.573173 29343 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:52.573242 29343 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:52.573251 29343 net.cpp:131] Top shape: 100 (100)
I0428 19:59:52.573253 29343 net.cpp:131] Top shape: 100 (100)
I0428 19:59:52.573256 29343 net.cpp:139] Memory required for data: 314800
I0428 19:59:52.573259 29343 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:52.573268 29343 net.cpp:86] Creating Layer conv0
I0428 19:59:52.573271 29343 net.cpp:408] conv0 <- data
I0428 19:59:52.573277 29343 net.cpp:382] conv0 -> conv0
I0428 19:59:52.574105 29343 net.cpp:124] Setting up conv0
I0428 19:59:52.574115 29343 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:52.574120 29343 net.cpp:139] Memory required for data: 2618800
I0428 19:59:52.574129 29343 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:52.574136 29343 net.cpp:86] Creating Layer pool0
I0428 19:59:52.574138 29343 net.cpp:408] pool0 <- conv0
I0428 19:59:52.574142 29343 net.cpp:382] pool0 -> pool0
I0428 19:59:52.574177 29343 net.cpp:124] Setting up pool0
I0428 19:59:52.574184 29343 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:52.574187 29343 net.cpp:139] Memory required for data: 3194800
I0428 19:59:52.574190 29343 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:52.574198 29343 net.cpp:86] Creating Layer conv1
I0428 19:59:52.574201 29343 net.cpp:408] conv1 <- pool0
I0428 19:59:52.574206 29343 net.cpp:382] conv1 -> conv1
I0428 19:59:52.576252 29343 net.cpp:124] Setting up conv1
I0428 19:59:52.576264 29343 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:59:52.576268 29343 net.cpp:139] Memory required for data: 3834800
I0428 19:59:52.576277 29343 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:52.576283 29343 net.cpp:86] Creating Layer pool1
I0428 19:59:52.576297 29343 net.cpp:408] pool1 <- conv1
I0428 19:59:52.576303 29343 net.cpp:382] pool1 -> pool1
I0428 19:59:52.576344 29343 net.cpp:124] Setting up pool1
I0428 19:59:52.576350 29343 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:59:52.576354 29343 net.cpp:139] Memory required for data: 3994800
I0428 19:59:52.576356 29343 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:52.576362 29343 net.cpp:86] Creating Layer ip1
I0428 19:59:52.576365 29343 net.cpp:408] ip1 <- pool1
I0428 19:59:52.576370 29343 net.cpp:382] ip1 -> ip1
I0428 19:59:52.576496 29343 net.cpp:124] Setting up ip1
I0428 19:59:52.576504 29343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:52.576508 29343 net.cpp:139] Memory required for data: 3998800
I0428 19:59:52.576515 29343 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:52.576520 29343 net.cpp:86] Creating Layer relu1
I0428 19:59:52.576524 29343 net.cpp:408] relu1 <- ip1
I0428 19:59:52.576534 29343 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:52.577363 29343 net.cpp:124] Setting up relu1
I0428 19:59:52.577374 29343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:52.577378 29343 net.cpp:139] Memory required for data: 4002800
I0428 19:59:52.577383 29343 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:59:52.577389 29343 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:59:52.577392 29343 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:59:52.577397 29343 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:59:52.577411 29343 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:59:52.577450 29343 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:59:52.577457 29343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:52.577461 29343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:52.577463 29343 net.cpp:139] Memory required for data: 4010800
I0428 19:59:52.577466 29343 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:52.577471 29343 net.cpp:86] Creating Layer accuracy
I0428 19:59:52.577474 29343 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:59:52.577478 29343 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:52.577482 29343 net.cpp:382] accuracy -> accuracy
I0428 19:59:52.577489 29343 net.cpp:124] Setting up accuracy
I0428 19:59:52.577492 29343 net.cpp:131] Top shape: (1)
I0428 19:59:52.577495 29343 net.cpp:139] Memory required for data: 4010804
I0428 19:59:52.577497 29343 layer_factory.hpp:77] Creating layer loss
I0428 19:59:52.577502 29343 net.cpp:86] Creating Layer loss
I0428 19:59:52.577504 29343 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:59:52.577508 29343 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:52.577512 29343 net.cpp:382] loss -> loss
I0428 19:59:52.577518 29343 layer_factory.hpp:77] Creating layer loss
I0428 19:59:52.577790 29343 net.cpp:124] Setting up loss
I0428 19:59:52.577816 29343 net.cpp:131] Top shape: (1)
I0428 19:59:52.577821 29343 net.cpp:134]     with loss weight 1
I0428 19:59:52.577826 29343 net.cpp:139] Memory required for data: 4010808
I0428 19:59:52.577829 29343 net.cpp:200] loss needs backward computation.
I0428 19:59:52.577833 29343 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:52.577837 29343 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:59:52.577841 29343 net.cpp:200] relu1 needs backward computation.
I0428 19:59:52.577843 29343 net.cpp:200] ip1 needs backward computation.
I0428 19:59:52.577852 29343 net.cpp:200] pool1 needs backward computation.
I0428 19:59:52.577855 29343 net.cpp:200] conv1 needs backward computation.
I0428 19:59:52.577863 29343 net.cpp:200] pool0 needs backward computation.
I0428 19:59:52.577867 29343 net.cpp:200] conv0 needs backward computation.
I0428 19:59:52.577870 29343 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:52.577874 29343 net.cpp:202] mnist does not need backward computation.
I0428 19:59:52.577877 29343 net.cpp:244] This network produces output accuracy
I0428 19:59:52.577880 29343 net.cpp:244] This network produces output loss
I0428 19:59:52.577904 29343 net.cpp:257] Network initialization done.
I0428 19:59:52.577939 29343 solver.cpp:56] Solver scaffolding done.
I0428 19:59:52.578189 29343 caffe.cpp:248] Starting Optimization
I0428 19:59:52.578197 29343 solver.cpp:273] Solving LeNet
I0428 19:59:52.578199 29343 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:52.578294 29343 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:52.582964 29343 blocking_queue.cpp:49] Waiting for data
I0428 19:59:52.635013 29350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:52.635488 29343 solver.cpp:398]     Test net output #0: accuracy = 0.0795
I0428 19:59:52.635506 29343 solver.cpp:398]     Test net output #1: loss = 2.38255 (* 1 = 2.38255 loss)
I0428 19:59:52.637641 29343 solver.cpp:219] Iteration 0 (-2.79865e-31 iter/s, 0.0594177s/100 iters), loss = 2.37696
I0428 19:59:52.637675 29343 solver.cpp:238]     Train net output #0: loss = 2.37696 (* 1 = 2.37696 loss)
I0428 19:59:52.637687 29343 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:52.720572 29343 solver.cpp:219] Iteration 100 (1206.42 iter/s, 0.0828898s/100 iters), loss = 1.93422
I0428 19:59:52.720597 29343 solver.cpp:238]     Train net output #0: loss = 1.93422 (* 1 = 1.93422 loss)
I0428 19:59:52.720603 29343 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:52.794167 29343 solver.cpp:219] Iteration 200 (1359.43 iter/s, 0.0735603s/100 iters), loss = 1.89179
I0428 19:59:52.794190 29343 solver.cpp:238]     Train net output #0: loss = 1.89179 (* 1 = 1.89179 loss)
I0428 19:59:52.794196 29343 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:52.867879 29343 solver.cpp:219] Iteration 300 (1357.22 iter/s, 0.07368s/100 iters), loss = 1.55675
I0428 19:59:52.867902 29343 solver.cpp:238]     Train net output #0: loss = 1.55675 (* 1 = 1.55675 loss)
I0428 19:59:52.867908 29343 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:52.941273 29343 solver.cpp:219] Iteration 400 (1363.11 iter/s, 0.0733614s/100 iters), loss = 1.83816
I0428 19:59:52.941298 29343 solver.cpp:238]     Train net output #0: loss = 1.83816 (* 1 = 1.83816 loss)
I0428 19:59:52.941304 29343 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:53.013638 29343 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:53.088953 29350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:53.089479 29343 solver.cpp:398]     Test net output #0: accuracy = 0.3653
I0428 19:59:53.089499 29343 solver.cpp:398]     Test net output #1: loss = 1.70759 (* 1 = 1.70759 loss)
I0428 19:59:53.090199 29343 solver.cpp:219] Iteration 500 (671.643 iter/s, 0.148889s/100 iters), loss = 1.76923
I0428 19:59:53.090237 29343 solver.cpp:238]     Train net output #0: loss = 1.76923 (* 1 = 1.76923 loss)
I0428 19:59:53.090243 29343 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:53.177158 29343 solver.cpp:219] Iteration 600 (1150.4 iter/s, 0.0869263s/100 iters), loss = 1.84699
I0428 19:59:53.177201 29343 solver.cpp:238]     Train net output #0: loss = 1.84699 (* 1 = 1.84699 loss)
I0428 19:59:53.177206 29343 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:53.256752 29343 solver.cpp:219] Iteration 700 (1257.18 iter/s, 0.0795433s/100 iters), loss = 1.47163
I0428 19:59:53.256791 29343 solver.cpp:238]     Train net output #0: loss = 1.47163 (* 1 = 1.47163 loss)
I0428 19:59:53.256798 29343 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:53.330030 29343 solver.cpp:219] Iteration 800 (1365.27 iter/s, 0.0732457s/100 iters), loss = 1.47869
I0428 19:59:53.330070 29343 solver.cpp:238]     Train net output #0: loss = 1.47869 (* 1 = 1.47869 loss)
I0428 19:59:53.330075 29343 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:53.402779 29343 solver.cpp:219] Iteration 900 (1375.5 iter/s, 0.072701s/100 iters), loss = 1.52035
I0428 19:59:53.402818 29343 solver.cpp:238]     Train net output #0: loss = 1.52035 (* 1 = 1.52035 loss)
I0428 19:59:53.402824 29343 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:53.427709 29349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:53.475872 29343 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:53.476619 29343 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:53.477128 29343 solver.cpp:311] Iteration 1000, loss = 1.40055
I0428 19:59:53.477144 29343 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:53.551827 29350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:53.552332 29343 solver.cpp:398]     Test net output #0: accuracy = 0.4585
I0428 19:59:53.552367 29343 solver.cpp:398]     Test net output #1: loss = 1.48359 (* 1 = 1.48359 loss)
I0428 19:59:53.552371 29343 solver.cpp:316] Optimization Done.
I0428 19:59:53.552374 29343 caffe.cpp:259] Optimization Done.
