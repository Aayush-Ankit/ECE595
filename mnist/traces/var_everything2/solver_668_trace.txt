I0428 19:52:40.972386 27567 caffe.cpp:218] Using GPUs 0
I0428 19:52:41.009279 27567 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:41.466773 27567 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test668.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:41.466930 27567 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test668.prototxt
I0428 19:52:41.467223 27567 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:41.467237 27567 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:41.467308 27567 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:41.467363 27567 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:41.467448 27567 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:41.467468 27567 net.cpp:86] Creating Layer mnist
I0428 19:52:41.467473 27567 net.cpp:382] mnist -> data
I0428 19:52:41.467490 27567 net.cpp:382] mnist -> label
I0428 19:52:41.468394 27567 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:41.470597 27567 net.cpp:124] Setting up mnist
I0428 19:52:41.470628 27567 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:41.470633 27567 net.cpp:131] Top shape: 64 (64)
I0428 19:52:41.470636 27567 net.cpp:139] Memory required for data: 200960
I0428 19:52:41.470643 27567 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:41.470655 27567 net.cpp:86] Creating Layer conv0
I0428 19:52:41.470660 27567 net.cpp:408] conv0 <- data
I0428 19:52:41.470669 27567 net.cpp:382] conv0 -> conv0
I0428 19:52:41.707227 27567 net.cpp:124] Setting up conv0
I0428 19:52:41.707267 27567 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:41.707271 27567 net.cpp:139] Memory required for data: 938240
I0428 19:52:41.707321 27567 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:41.707350 27567 net.cpp:86] Creating Layer pool0
I0428 19:52:41.707353 27567 net.cpp:408] pool0 <- conv0
I0428 19:52:41.707358 27567 net.cpp:382] pool0 -> pool0
I0428 19:52:41.707404 27567 net.cpp:124] Setting up pool0
I0428 19:52:41.707415 27567 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:41.707418 27567 net.cpp:139] Memory required for data: 1122560
I0428 19:52:41.707422 27567 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:41.707432 27567 net.cpp:86] Creating Layer conv1
I0428 19:52:41.707434 27567 net.cpp:408] conv1 <- pool0
I0428 19:52:41.707439 27567 net.cpp:382] conv1 -> conv1
I0428 19:52:41.710413 27567 net.cpp:124] Setting up conv1
I0428 19:52:41.710444 27567 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:41.710448 27567 net.cpp:139] Memory required for data: 1941760
I0428 19:52:41.710458 27567 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:41.710466 27567 net.cpp:86] Creating Layer pool1
I0428 19:52:41.710469 27567 net.cpp:408] pool1 <- conv1
I0428 19:52:41.710474 27567 net.cpp:382] pool1 -> pool1
I0428 19:52:41.710554 27567 net.cpp:124] Setting up pool1
I0428 19:52:41.710578 27567 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:41.710582 27567 net.cpp:139] Memory required for data: 2146560
I0428 19:52:41.710585 27567 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:41.710592 27567 net.cpp:86] Creating Layer ip1
I0428 19:52:41.710595 27567 net.cpp:408] ip1 <- pool1
I0428 19:52:41.710600 27567 net.cpp:382] ip1 -> ip1
I0428 19:52:41.710743 27567 net.cpp:124] Setting up ip1
I0428 19:52:41.710750 27567 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:41.710753 27567 net.cpp:139] Memory required for data: 2149120
I0428 19:52:41.710762 27567 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:41.710767 27567 net.cpp:86] Creating Layer relu1
I0428 19:52:41.710769 27567 net.cpp:408] relu1 <- ip1
I0428 19:52:41.710773 27567 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:41.710939 27567 net.cpp:124] Setting up relu1
I0428 19:52:41.710947 27567 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:41.710952 27567 net.cpp:139] Memory required for data: 2151680
I0428 19:52:41.710954 27567 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:41.710960 27567 net.cpp:86] Creating Layer ip2
I0428 19:52:41.710964 27567 net.cpp:408] ip2 <- ip1
I0428 19:52:41.710968 27567 net.cpp:382] ip2 -> ip2
I0428 19:52:41.711086 27567 net.cpp:124] Setting up ip2
I0428 19:52:41.711091 27567 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:41.711096 27567 net.cpp:139] Memory required for data: 2154240
I0428 19:52:41.711099 27567 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:41.711105 27567 net.cpp:86] Creating Layer relu2
I0428 19:52:41.711108 27567 net.cpp:408] relu2 <- ip2
I0428 19:52:41.711112 27567 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:41.711930 27567 net.cpp:124] Setting up relu2
I0428 19:52:41.711941 27567 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:41.711961 27567 net.cpp:139] Memory required for data: 2156800
I0428 19:52:41.711963 27567 layer_factory.hpp:77] Creating layer loss
I0428 19:52:41.711969 27567 net.cpp:86] Creating Layer loss
I0428 19:52:41.711973 27567 net.cpp:408] loss <- ip2
I0428 19:52:41.711978 27567 net.cpp:408] loss <- label
I0428 19:52:41.711983 27567 net.cpp:382] loss -> loss
I0428 19:52:41.712003 27567 layer_factory.hpp:77] Creating layer loss
I0428 19:52:41.712229 27567 net.cpp:124] Setting up loss
I0428 19:52:41.712239 27567 net.cpp:131] Top shape: (1)
I0428 19:52:41.712242 27567 net.cpp:134]     with loss weight 1
I0428 19:52:41.712257 27567 net.cpp:139] Memory required for data: 2156804
I0428 19:52:41.712260 27567 net.cpp:200] loss needs backward computation.
I0428 19:52:41.712265 27567 net.cpp:200] relu2 needs backward computation.
I0428 19:52:41.712266 27567 net.cpp:200] ip2 needs backward computation.
I0428 19:52:41.712270 27567 net.cpp:200] relu1 needs backward computation.
I0428 19:52:41.712272 27567 net.cpp:200] ip1 needs backward computation.
I0428 19:52:41.712285 27567 net.cpp:200] pool1 needs backward computation.
I0428 19:52:41.712288 27567 net.cpp:200] conv1 needs backward computation.
I0428 19:52:41.712291 27567 net.cpp:200] pool0 needs backward computation.
I0428 19:52:41.712294 27567 net.cpp:200] conv0 needs backward computation.
I0428 19:52:41.712298 27567 net.cpp:202] mnist does not need backward computation.
I0428 19:52:41.712301 27567 net.cpp:244] This network produces output loss
I0428 19:52:41.712326 27567 net.cpp:257] Network initialization done.
I0428 19:52:41.712671 27567 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test668.prototxt
I0428 19:52:41.712713 27567 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:41.712805 27567 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:41.712875 27567 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:41.712935 27567 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:41.712947 27567 net.cpp:86] Creating Layer mnist
I0428 19:52:41.712952 27567 net.cpp:382] mnist -> data
I0428 19:52:41.712960 27567 net.cpp:382] mnist -> label
I0428 19:52:41.713078 27567 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:41.715248 27567 net.cpp:124] Setting up mnist
I0428 19:52:41.715277 27567 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:41.715282 27567 net.cpp:131] Top shape: 100 (100)
I0428 19:52:41.715286 27567 net.cpp:139] Memory required for data: 314000
I0428 19:52:41.715289 27567 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:41.715296 27567 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:41.715299 27567 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:41.715304 27567 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:41.715312 27567 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:41.715404 27567 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:41.715423 27567 net.cpp:131] Top shape: 100 (100)
I0428 19:52:41.715427 27567 net.cpp:131] Top shape: 100 (100)
I0428 19:52:41.715430 27567 net.cpp:139] Memory required for data: 314800
I0428 19:52:41.715433 27567 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:41.715442 27567 net.cpp:86] Creating Layer conv0
I0428 19:52:41.715445 27567 net.cpp:408] conv0 <- data
I0428 19:52:41.715451 27567 net.cpp:382] conv0 -> conv0
I0428 19:52:41.717308 27567 net.cpp:124] Setting up conv0
I0428 19:52:41.717337 27567 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:41.717341 27567 net.cpp:139] Memory required for data: 1466800
I0428 19:52:41.717350 27567 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:41.717357 27567 net.cpp:86] Creating Layer pool0
I0428 19:52:41.717360 27567 net.cpp:408] pool0 <- conv0
I0428 19:52:41.717365 27567 net.cpp:382] pool0 -> pool0
I0428 19:52:41.717399 27567 net.cpp:124] Setting up pool0
I0428 19:52:41.717406 27567 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:41.717409 27567 net.cpp:139] Memory required for data: 1754800
I0428 19:52:41.717412 27567 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:41.717420 27567 net.cpp:86] Creating Layer conv1
I0428 19:52:41.717424 27567 net.cpp:408] conv1 <- pool0
I0428 19:52:41.717429 27567 net.cpp:382] conv1 -> conv1
I0428 19:52:41.719120 27567 net.cpp:124] Setting up conv1
I0428 19:52:41.719149 27567 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:41.719153 27567 net.cpp:139] Memory required for data: 3034800
I0428 19:52:41.719166 27567 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:41.719172 27567 net.cpp:86] Creating Layer pool1
I0428 19:52:41.719175 27567 net.cpp:408] pool1 <- conv1
I0428 19:52:41.719180 27567 net.cpp:382] pool1 -> pool1
I0428 19:52:41.719223 27567 net.cpp:124] Setting up pool1
I0428 19:52:41.719228 27567 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:41.719231 27567 net.cpp:139] Memory required for data: 3354800
I0428 19:52:41.719234 27567 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:41.719240 27567 net.cpp:86] Creating Layer ip1
I0428 19:52:41.719245 27567 net.cpp:408] ip1 <- pool1
I0428 19:52:41.719251 27567 net.cpp:382] ip1 -> ip1
I0428 19:52:41.719429 27567 net.cpp:124] Setting up ip1
I0428 19:52:41.719439 27567 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:41.719442 27567 net.cpp:139] Memory required for data: 3358800
I0428 19:52:41.719449 27567 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:41.719456 27567 net.cpp:86] Creating Layer relu1
I0428 19:52:41.719460 27567 net.cpp:408] relu1 <- ip1
I0428 19:52:41.719475 27567 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:41.719640 27567 net.cpp:124] Setting up relu1
I0428 19:52:41.719651 27567 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:41.719655 27567 net.cpp:139] Memory required for data: 3362800
I0428 19:52:41.719658 27567 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:41.719666 27567 net.cpp:86] Creating Layer ip2
I0428 19:52:41.719671 27567 net.cpp:408] ip2 <- ip1
I0428 19:52:41.719681 27567 net.cpp:382] ip2 -> ip2
I0428 19:52:41.719782 27567 net.cpp:124] Setting up ip2
I0428 19:52:41.719789 27567 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:41.719792 27567 net.cpp:139] Memory required for data: 3366800
I0428 19:52:41.719811 27567 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:41.719820 27567 net.cpp:86] Creating Layer relu2
I0428 19:52:41.719827 27567 net.cpp:408] relu2 <- ip2
I0428 19:52:41.719832 27567 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:41.720005 27567 net.cpp:124] Setting up relu2
I0428 19:52:41.720013 27567 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:41.720016 27567 net.cpp:139] Memory required for data: 3370800
I0428 19:52:41.720019 27567 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:41.720026 27567 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:41.720029 27567 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:41.720033 27567 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:41.720065 27567 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:41.720142 27567 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:41.720150 27567 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:41.720155 27567 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:41.720157 27567 net.cpp:139] Memory required for data: 3378800
I0428 19:52:41.720160 27567 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:41.720165 27567 net.cpp:86] Creating Layer accuracy
I0428 19:52:41.720170 27567 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:41.720175 27567 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:41.720180 27567 net.cpp:382] accuracy -> accuracy
I0428 19:52:41.720187 27567 net.cpp:124] Setting up accuracy
I0428 19:52:41.720191 27567 net.cpp:131] Top shape: (1)
I0428 19:52:41.720194 27567 net.cpp:139] Memory required for data: 3378804
I0428 19:52:41.720197 27567 layer_factory.hpp:77] Creating layer loss
I0428 19:52:41.720202 27567 net.cpp:86] Creating Layer loss
I0428 19:52:41.720206 27567 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:41.720211 27567 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:41.720216 27567 net.cpp:382] loss -> loss
I0428 19:52:41.720223 27567 layer_factory.hpp:77] Creating layer loss
I0428 19:52:41.720513 27567 net.cpp:124] Setting up loss
I0428 19:52:41.720523 27567 net.cpp:131] Top shape: (1)
I0428 19:52:41.720526 27567 net.cpp:134]     with loss weight 1
I0428 19:52:41.720533 27567 net.cpp:139] Memory required for data: 3378808
I0428 19:52:41.720536 27567 net.cpp:200] loss needs backward computation.
I0428 19:52:41.720541 27567 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:41.720544 27567 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:41.720566 27567 net.cpp:200] relu2 needs backward computation.
I0428 19:52:41.720567 27567 net.cpp:200] ip2 needs backward computation.
I0428 19:52:41.720571 27567 net.cpp:200] relu1 needs backward computation.
I0428 19:52:41.720573 27567 net.cpp:200] ip1 needs backward computation.
I0428 19:52:41.720577 27567 net.cpp:200] pool1 needs backward computation.
I0428 19:52:41.720579 27567 net.cpp:200] conv1 needs backward computation.
I0428 19:52:41.720582 27567 net.cpp:200] pool0 needs backward computation.
I0428 19:52:41.720590 27567 net.cpp:200] conv0 needs backward computation.
I0428 19:52:41.720593 27567 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:41.720597 27567 net.cpp:202] mnist does not need backward computation.
I0428 19:52:41.720599 27567 net.cpp:244] This network produces output accuracy
I0428 19:52:41.720602 27567 net.cpp:244] This network produces output loss
I0428 19:52:41.720613 27567 net.cpp:257] Network initialization done.
I0428 19:52:41.720669 27567 solver.cpp:56] Solver scaffolding done.
I0428 19:52:41.721024 27567 caffe.cpp:248] Starting Optimization
I0428 19:52:41.721030 27567 solver.cpp:273] Solving LeNet
I0428 19:52:41.721032 27567 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:41.721294 27567 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:41.725996 27567 blocking_queue.cpp:49] Waiting for data
I0428 19:52:41.800240 27574 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:41.800745 27567 solver.cpp:398]     Test net output #0: accuracy = 0.1112
I0428 19:52:41.800781 27567 solver.cpp:398]     Test net output #1: loss = 2.32437 (* 1 = 2.32437 loss)
I0428 19:52:41.803227 27567 solver.cpp:219] Iteration 0 (-3.46836e-31 iter/s, 0.0821484s/100 iters), loss = 2.34207
I0428 19:52:41.803272 27567 solver.cpp:238]     Train net output #0: loss = 2.34207 (* 1 = 2.34207 loss)
I0428 19:52:41.803283 27567 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:41.910610 27567 solver.cpp:219] Iteration 100 (931.786 iter/s, 0.107321s/100 iters), loss = 1.42404
I0428 19:52:41.910653 27567 solver.cpp:238]     Train net output #0: loss = 1.42404 (* 1 = 1.42404 loss)
I0428 19:52:41.910663 27567 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:42.016424 27567 solver.cpp:219] Iteration 200 (945.521 iter/s, 0.105762s/100 iters), loss = 0.900563
I0428 19:52:42.016477 27567 solver.cpp:238]     Train net output #0: loss = 0.900563 (* 1 = 0.900563 loss)
I0428 19:52:42.016486 27567 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:42.115684 27567 solver.cpp:219] Iteration 300 (1008.08 iter/s, 0.0991989s/100 iters), loss = 0.963725
I0428 19:52:42.115710 27567 solver.cpp:238]     Train net output #0: loss = 0.963725 (* 1 = 0.963725 loss)
I0428 19:52:42.115717 27567 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:42.212347 27567 solver.cpp:219] Iteration 400 (1034.92 iter/s, 0.0966257s/100 iters), loss = 0.483083
I0428 19:52:42.212388 27567 solver.cpp:238]     Train net output #0: loss = 0.483083 (* 1 = 0.483083 loss)
I0428 19:52:42.212393 27567 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:42.307723 27567 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:42.360977 27574 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:42.361497 27567 solver.cpp:398]     Test net output #0: accuracy = 0.8516
I0428 19:52:42.361539 27567 solver.cpp:398]     Test net output #1: loss = 0.424426 (* 1 = 0.424426 loss)
I0428 19:52:42.362512 27567 solver.cpp:219] Iteration 500 (666.168 iter/s, 0.150112s/100 iters), loss = 0.514649
I0428 19:52:42.362566 27567 solver.cpp:238]     Train net output #0: loss = 0.514649 (* 1 = 0.514649 loss)
I0428 19:52:42.362573 27567 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:42.465384 27567 solver.cpp:219] Iteration 600 (972.575 iter/s, 0.10282s/100 iters), loss = 0.285082
I0428 19:52:42.465425 27567 solver.cpp:238]     Train net output #0: loss = 0.285082 (* 1 = 0.285082 loss)
I0428 19:52:42.465432 27567 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:42.561283 27567 solver.cpp:219] Iteration 700 (1043.32 iter/s, 0.0958474s/100 iters), loss = 0.191046
I0428 19:52:42.561323 27567 solver.cpp:238]     Train net output #0: loss = 0.191046 (* 1 = 0.191046 loss)
I0428 19:52:42.561329 27567 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:42.654526 27567 solver.cpp:219] Iteration 800 (1072.86 iter/s, 0.0932087s/100 iters), loss = 0.54726
I0428 19:52:42.654566 27567 solver.cpp:238]     Train net output #0: loss = 0.54726 (* 1 = 0.54726 loss)
I0428 19:52:42.654572 27567 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:42.748699 27567 solver.cpp:219] Iteration 900 (1062.42 iter/s, 0.0941251s/100 iters), loss = 0.369202
I0428 19:52:42.748723 27567 solver.cpp:238]     Train net output #0: loss = 0.369202 (* 1 = 0.369202 loss)
I0428 19:52:42.748728 27567 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:42.780308 27573 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:42.841423 27567 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:42.842468 27567 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:42.843049 27567 solver.cpp:311] Iteration 1000, loss = 0.40275
I0428 19:52:42.843063 27567 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:42.918959 27574 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:42.919471 27567 solver.cpp:398]     Test net output #0: accuracy = 0.8725
I0428 19:52:42.919509 27567 solver.cpp:398]     Test net output #1: loss = 0.33019 (* 1 = 0.33019 loss)
I0428 19:52:42.919514 27567 solver.cpp:316] Optimization Done.
I0428 19:52:42.919517 27567 caffe.cpp:259] Optimization Done.
