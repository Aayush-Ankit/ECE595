I0428 20:13:00.013120 32386 caffe.cpp:218] Using GPUs 0
I0428 20:13:00.045749 32386 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:00.570704 32386 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1191.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:00.570866 32386 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1191.prototxt
I0428 20:13:00.571522 32386 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:00.571552 32386 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:00.571714 32386 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:00.571828 32386 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:00.571957 32386 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:00.571990 32386 net.cpp:86] Creating Layer mnist
I0428 20:13:00.572005 32386 net.cpp:382] mnist -> data
I0428 20:13:00.572034 32386 net.cpp:382] mnist -> label
I0428 20:13:00.573592 32386 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:00.576441 32386 net.cpp:124] Setting up mnist
I0428 20:13:00.576459 32386 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:00.576465 32386 net.cpp:131] Top shape: 64 (64)
I0428 20:13:00.576469 32386 net.cpp:139] Memory required for data: 200960
I0428 20:13:00.576477 32386 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:00.576508 32386 net.cpp:86] Creating Layer conv0
I0428 20:13:00.576537 32386 net.cpp:408] conv0 <- data
I0428 20:13:00.576556 32386 net.cpp:382] conv0 -> conv0
I0428 20:13:00.868257 32386 net.cpp:124] Setting up conv0
I0428 20:13:00.868288 32386 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:00.868293 32386 net.cpp:139] Memory required for data: 3887360
I0428 20:13:00.868311 32386 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:00.868326 32386 net.cpp:86] Creating Layer pool0
I0428 20:13:00.868332 32386 net.cpp:408] pool0 <- conv0
I0428 20:13:00.868340 32386 net.cpp:382] pool0 -> pool0
I0428 20:13:00.868413 32386 net.cpp:124] Setting up pool0
I0428 20:13:00.868428 32386 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:00.868434 32386 net.cpp:139] Memory required for data: 4808960
I0428 20:13:00.868441 32386 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:00.868459 32386 net.cpp:86] Creating Layer conv1
I0428 20:13:00.868471 32386 net.cpp:408] conv1 <- pool0
I0428 20:13:00.868481 32386 net.cpp:382] conv1 -> conv1
I0428 20:13:00.871745 32386 net.cpp:124] Setting up conv1
I0428 20:13:00.871763 32386 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:00.871767 32386 net.cpp:139] Memory required for data: 6447360
I0428 20:13:00.871778 32386 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:00.871788 32386 net.cpp:86] Creating Layer pool1
I0428 20:13:00.871793 32386 net.cpp:408] pool1 <- conv1
I0428 20:13:00.871800 32386 net.cpp:382] pool1 -> pool1
I0428 20:13:00.871860 32386 net.cpp:124] Setting up pool1
I0428 20:13:00.871883 32386 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:00.871889 32386 net.cpp:139] Memory required for data: 6856960
I0428 20:13:00.871896 32386 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:00.871911 32386 net.cpp:86] Creating Layer ip1
I0428 20:13:00.871917 32386 net.cpp:408] ip1 <- pool1
I0428 20:13:00.871928 32386 net.cpp:382] ip1 -> ip1
I0428 20:13:00.872581 32386 net.cpp:124] Setting up ip1
I0428 20:13:00.872596 32386 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:00.872602 32386 net.cpp:139] Memory required for data: 6863360
I0428 20:13:00.872617 32386 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:00.872627 32386 net.cpp:86] Creating Layer relu1
I0428 20:13:00.872632 32386 net.cpp:408] relu1 <- ip1
I0428 20:13:00.872642 32386 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:00.872956 32386 net.cpp:124] Setting up relu1
I0428 20:13:00.872974 32386 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:00.872982 32386 net.cpp:139] Memory required for data: 6869760
I0428 20:13:00.872988 32386 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:00.873003 32386 net.cpp:86] Creating Layer ip2
I0428 20:13:00.873008 32386 net.cpp:408] ip2 <- ip1
I0428 20:13:00.873020 32386 net.cpp:382] ip2 -> ip2
I0428 20:13:00.873185 32386 net.cpp:124] Setting up ip2
I0428 20:13:00.873198 32386 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:00.873204 32386 net.cpp:139] Memory required for data: 6872320
I0428 20:13:00.873215 32386 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:00.873226 32386 net.cpp:86] Creating Layer relu2
I0428 20:13:00.873234 32386 net.cpp:408] relu2 <- ip2
I0428 20:13:00.873241 32386 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:00.874475 32386 net.cpp:124] Setting up relu2
I0428 20:13:00.874495 32386 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:00.874502 32386 net.cpp:139] Memory required for data: 6874880
I0428 20:13:00.874508 32386 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:00.874522 32386 net.cpp:86] Creating Layer ip3
I0428 20:13:00.874529 32386 net.cpp:408] ip3 <- ip2
I0428 20:13:00.874539 32386 net.cpp:382] ip3 -> ip3
I0428 20:13:00.874706 32386 net.cpp:124] Setting up ip3
I0428 20:13:00.874721 32386 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:00.874727 32386 net.cpp:139] Memory required for data: 6877440
I0428 20:13:00.874742 32386 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:00.874752 32386 net.cpp:86] Creating Layer relu3
I0428 20:13:00.874758 32386 net.cpp:408] relu3 <- ip3
I0428 20:13:00.874768 32386 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:00.875058 32386 net.cpp:124] Setting up relu3
I0428 20:13:00.875074 32386 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:00.875082 32386 net.cpp:139] Memory required for data: 6880000
I0428 20:13:00.875088 32386 layer_factory.hpp:77] Creating layer loss
I0428 20:13:00.875102 32386 net.cpp:86] Creating Layer loss
I0428 20:13:00.875108 32386 net.cpp:408] loss <- ip3
I0428 20:13:00.875115 32386 net.cpp:408] loss <- label
I0428 20:13:00.875125 32386 net.cpp:382] loss -> loss
I0428 20:13:00.875154 32386 layer_factory.hpp:77] Creating layer loss
I0428 20:13:00.875568 32386 net.cpp:124] Setting up loss
I0428 20:13:00.875584 32386 net.cpp:131] Top shape: (1)
I0428 20:13:00.875591 32386 net.cpp:134]     with loss weight 1
I0428 20:13:00.875612 32386 net.cpp:139] Memory required for data: 6880004
I0428 20:13:00.875618 32386 net.cpp:200] loss needs backward computation.
I0428 20:13:00.875625 32386 net.cpp:200] relu3 needs backward computation.
I0428 20:13:00.875632 32386 net.cpp:200] ip3 needs backward computation.
I0428 20:13:00.875636 32386 net.cpp:200] relu2 needs backward computation.
I0428 20:13:00.875643 32386 net.cpp:200] ip2 needs backward computation.
I0428 20:13:00.875648 32386 net.cpp:200] relu1 needs backward computation.
I0428 20:13:00.875653 32386 net.cpp:200] ip1 needs backward computation.
I0428 20:13:00.875659 32386 net.cpp:200] pool1 needs backward computation.
I0428 20:13:00.875665 32386 net.cpp:200] conv1 needs backward computation.
I0428 20:13:00.875671 32386 net.cpp:200] pool0 needs backward computation.
I0428 20:13:00.875677 32386 net.cpp:200] conv0 needs backward computation.
I0428 20:13:00.875684 32386 net.cpp:202] mnist does not need backward computation.
I0428 20:13:00.875689 32386 net.cpp:244] This network produces output loss
I0428 20:13:00.875707 32386 net.cpp:257] Network initialization done.
I0428 20:13:00.876312 32386 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1191.prototxt
I0428 20:13:00.876363 32386 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:00.876543 32386 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:00.876694 32386 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:00.876765 32386 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:00.876785 32386 net.cpp:86] Creating Layer mnist
I0428 20:13:00.876794 32386 net.cpp:382] mnist -> data
I0428 20:13:00.876818 32386 net.cpp:382] mnist -> label
I0428 20:13:00.876963 32386 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:00.879968 32386 net.cpp:124] Setting up mnist
I0428 20:13:00.879984 32386 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:00.879990 32386 net.cpp:131] Top shape: 100 (100)
I0428 20:13:00.879994 32386 net.cpp:139] Memory required for data: 314000
I0428 20:13:00.879998 32386 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:00.880010 32386 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:00.880017 32386 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:00.880044 32386 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:00.880058 32386 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:00.880129 32386 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:00.880143 32386 net.cpp:131] Top shape: 100 (100)
I0428 20:13:00.880151 32386 net.cpp:131] Top shape: 100 (100)
I0428 20:13:00.880157 32386 net.cpp:139] Memory required for data: 314800
I0428 20:13:00.880163 32386 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:00.880183 32386 net.cpp:86] Creating Layer conv0
I0428 20:13:00.880198 32386 net.cpp:408] conv0 <- data
I0428 20:13:00.880209 32386 net.cpp:382] conv0 -> conv0
I0428 20:13:00.882354 32386 net.cpp:124] Setting up conv0
I0428 20:13:00.882370 32386 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:00.882375 32386 net.cpp:139] Memory required for data: 6074800
I0428 20:13:00.882388 32386 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:00.882396 32386 net.cpp:86] Creating Layer pool0
I0428 20:13:00.882400 32386 net.cpp:408] pool0 <- conv0
I0428 20:13:00.882407 32386 net.cpp:382] pool0 -> pool0
I0428 20:13:00.882537 32386 net.cpp:124] Setting up pool0
I0428 20:13:00.882555 32386 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:00.882560 32386 net.cpp:139] Memory required for data: 7514800
I0428 20:13:00.882566 32386 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:00.882585 32386 net.cpp:86] Creating Layer conv1
I0428 20:13:00.882596 32386 net.cpp:408] conv1 <- pool0
I0428 20:13:00.882606 32386 net.cpp:382] conv1 -> conv1
I0428 20:13:00.885407 32386 net.cpp:124] Setting up conv1
I0428 20:13:00.885423 32386 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:00.885428 32386 net.cpp:139] Memory required for data: 10074800
I0428 20:13:00.885439 32386 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:00.885449 32386 net.cpp:86] Creating Layer pool1
I0428 20:13:00.885453 32386 net.cpp:408] pool1 <- conv1
I0428 20:13:00.885460 32386 net.cpp:382] pool1 -> pool1
I0428 20:13:00.885524 32386 net.cpp:124] Setting up pool1
I0428 20:13:00.885545 32386 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:00.885550 32386 net.cpp:139] Memory required for data: 10714800
I0428 20:13:00.885557 32386 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:00.885571 32386 net.cpp:86] Creating Layer ip1
I0428 20:13:00.885577 32386 net.cpp:408] ip1 <- pool1
I0428 20:13:00.885587 32386 net.cpp:382] ip1 -> ip1
I0428 20:13:00.886262 32386 net.cpp:124] Setting up ip1
I0428 20:13:00.886276 32386 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:00.886297 32386 net.cpp:139] Memory required for data: 10724800
I0428 20:13:00.886312 32386 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:00.886323 32386 net.cpp:86] Creating Layer relu1
I0428 20:13:00.886330 32386 net.cpp:408] relu1 <- ip1
I0428 20:13:00.886338 32386 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:00.886673 32386 net.cpp:124] Setting up relu1
I0428 20:13:00.886692 32386 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:00.886698 32386 net.cpp:139] Memory required for data: 10734800
I0428 20:13:00.886704 32386 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:00.886719 32386 net.cpp:86] Creating Layer ip2
I0428 20:13:00.886726 32386 net.cpp:408] ip2 <- ip1
I0428 20:13:00.886739 32386 net.cpp:382] ip2 -> ip2
I0428 20:13:00.886909 32386 net.cpp:124] Setting up ip2
I0428 20:13:00.886924 32386 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:00.886929 32386 net.cpp:139] Memory required for data: 10738800
I0428 20:13:00.886940 32386 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:00.886950 32386 net.cpp:86] Creating Layer relu2
I0428 20:13:00.886960 32386 net.cpp:408] relu2 <- ip2
I0428 20:13:00.886968 32386 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:00.887235 32386 net.cpp:124] Setting up relu2
I0428 20:13:00.887251 32386 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:00.887259 32386 net.cpp:139] Memory required for data: 10742800
I0428 20:13:00.887265 32386 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:00.887275 32386 net.cpp:86] Creating Layer ip3
I0428 20:13:00.887281 32386 net.cpp:408] ip3 <- ip2
I0428 20:13:00.887291 32386 net.cpp:382] ip3 -> ip3
I0428 20:13:00.887475 32386 net.cpp:124] Setting up ip3
I0428 20:13:00.887490 32386 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:00.887495 32386 net.cpp:139] Memory required for data: 10746800
I0428 20:13:00.887511 32386 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:00.887521 32386 net.cpp:86] Creating Layer relu3
I0428 20:13:00.887526 32386 net.cpp:408] relu3 <- ip3
I0428 20:13:00.887536 32386 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:00.888780 32386 net.cpp:124] Setting up relu3
I0428 20:13:00.888800 32386 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:00.888808 32386 net.cpp:139] Memory required for data: 10750800
I0428 20:13:00.888823 32386 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:00.888833 32386 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:00.888839 32386 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:00.888850 32386 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:00.888861 32386 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:00.888924 32386 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:00.888936 32386 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:00.888944 32386 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:00.888950 32386 net.cpp:139] Memory required for data: 10758800
I0428 20:13:00.888955 32386 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:00.888967 32386 net.cpp:86] Creating Layer accuracy
I0428 20:13:00.888973 32386 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:00.888981 32386 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:00.888989 32386 net.cpp:382] accuracy -> accuracy
I0428 20:13:00.889004 32386 net.cpp:124] Setting up accuracy
I0428 20:13:00.889012 32386 net.cpp:131] Top shape: (1)
I0428 20:13:00.889019 32386 net.cpp:139] Memory required for data: 10758804
I0428 20:13:00.889024 32386 layer_factory.hpp:77] Creating layer loss
I0428 20:13:00.889032 32386 net.cpp:86] Creating Layer loss
I0428 20:13:00.889039 32386 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:00.889045 32386 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:00.889053 32386 net.cpp:382] loss -> loss
I0428 20:13:00.889065 32386 layer_factory.hpp:77] Creating layer loss
I0428 20:13:00.889479 32386 net.cpp:124] Setting up loss
I0428 20:13:00.889498 32386 net.cpp:131] Top shape: (1)
I0428 20:13:00.889504 32386 net.cpp:134]     with loss weight 1
I0428 20:13:00.889530 32386 net.cpp:139] Memory required for data: 10758808
I0428 20:13:00.889538 32386 net.cpp:200] loss needs backward computation.
I0428 20:13:00.889545 32386 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:00.889552 32386 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:00.889559 32386 net.cpp:200] relu3 needs backward computation.
I0428 20:13:00.889564 32386 net.cpp:200] ip3 needs backward computation.
I0428 20:13:00.889570 32386 net.cpp:200] relu2 needs backward computation.
I0428 20:13:00.889575 32386 net.cpp:200] ip2 needs backward computation.
I0428 20:13:00.889581 32386 net.cpp:200] relu1 needs backward computation.
I0428 20:13:00.889587 32386 net.cpp:200] ip1 needs backward computation.
I0428 20:13:00.889593 32386 net.cpp:200] pool1 needs backward computation.
I0428 20:13:00.889600 32386 net.cpp:200] conv1 needs backward computation.
I0428 20:13:00.889605 32386 net.cpp:200] pool0 needs backward computation.
I0428 20:13:00.889611 32386 net.cpp:200] conv0 needs backward computation.
I0428 20:13:00.889618 32386 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:00.889626 32386 net.cpp:202] mnist does not need backward computation.
I0428 20:13:00.889631 32386 net.cpp:244] This network produces output accuracy
I0428 20:13:00.889638 32386 net.cpp:244] This network produces output loss
I0428 20:13:00.889657 32386 net.cpp:257] Network initialization done.
I0428 20:13:00.889729 32386 solver.cpp:56] Solver scaffolding done.
I0428 20:13:00.890281 32386 caffe.cpp:248] Starting Optimization
I0428 20:13:00.890292 32386 solver.cpp:273] Solving LeNet
I0428 20:13:00.890297 32386 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:00.891549 32386 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:00.901152 32386 blocking_queue.cpp:49] Waiting for data
I0428 20:13:00.970813 32393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:00.972128 32386 solver.cpp:398]     Test net output #0: accuracy = 0.1145
I0428 20:13:00.972151 32386 solver.cpp:398]     Test net output #1: loss = 2.30205 (* 1 = 2.30205 loss)
I0428 20:13:00.978126 32386 solver.cpp:219] Iteration 0 (2.59309 iter/s, 0.0877906s/100 iters), loss = 2.28297
I0428 20:13:00.978158 32386 solver.cpp:238]     Train net output #0: loss = 2.28297 (* 1 = 2.28297 loss)
I0428 20:13:00.978173 32386 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:01.187038 32386 solver.cpp:219] Iteration 100 (478.794 iter/s, 0.208858s/100 iters), loss = 1.18071
I0428 20:13:01.187086 32386 solver.cpp:238]     Train net output #0: loss = 1.18071 (* 1 = 1.18071 loss)
I0428 20:13:01.187099 32386 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:01.400709 32386 solver.cpp:219] Iteration 200 (468.16 iter/s, 0.213602s/100 iters), loss = 0.575935
I0428 20:13:01.400765 32386 solver.cpp:238]     Train net output #0: loss = 0.575935 (* 1 = 0.575935 loss)
I0428 20:13:01.400789 32386 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:01.621920 32386 solver.cpp:219] Iteration 300 (452.198 iter/s, 0.221142s/100 iters), loss = 0.466977
I0428 20:13:01.621959 32386 solver.cpp:238]     Train net output #0: loss = 0.466977 (* 1 = 0.466977 loss)
I0428 20:13:01.621970 32386 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:01.837340 32386 solver.cpp:219] Iteration 400 (464.353 iter/s, 0.215353s/100 iters), loss = 0.562255
I0428 20:13:01.837380 32386 solver.cpp:238]     Train net output #0: loss = 0.562255 (* 1 = 0.562255 loss)
I0428 20:13:01.837390 32386 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:02.040316 32386 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:02.121208 32393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:02.124104 32386 solver.cpp:398]     Test net output #0: accuracy = 0.8527
I0428 20:13:02.124133 32386 solver.cpp:398]     Test net output #1: loss = 0.430264 (* 1 = 0.430264 loss)
I0428 20:13:02.126309 32386 solver.cpp:219] Iteration 500 (346.134 iter/s, 0.288905s/100 iters), loss = 0.620104
I0428 20:13:02.126386 32386 solver.cpp:238]     Train net output #0: loss = 0.620104 (* 1 = 0.620104 loss)
I0428 20:13:02.126401 32386 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:02.334563 32386 solver.cpp:219] Iteration 600 (480.384 iter/s, 0.208167s/100 iters), loss = 0.166381
I0428 20:13:02.334597 32386 solver.cpp:238]     Train net output #0: loss = 0.166381 (* 1 = 0.166381 loss)
I0428 20:13:02.334605 32386 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:02.559588 32386 solver.cpp:219] Iteration 700 (444.502 iter/s, 0.224971s/100 iters), loss = 0.332037
I0428 20:13:02.559638 32386 solver.cpp:238]     Train net output #0: loss = 0.332037 (* 1 = 0.332037 loss)
I0428 20:13:02.559651 32386 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:02.787209 32386 solver.cpp:219] Iteration 800 (439.458 iter/s, 0.227553s/100 iters), loss = 0.353504
I0428 20:13:02.787258 32386 solver.cpp:238]     Train net output #0: loss = 0.353504 (* 1 = 0.353504 loss)
I0428 20:13:02.787271 32386 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:03.012043 32386 solver.cpp:219] Iteration 900 (444.903 iter/s, 0.224768s/100 iters), loss = 0.249566
I0428 20:13:03.012092 32386 solver.cpp:238]     Train net output #0: loss = 0.249566 (* 1 = 0.249566 loss)
I0428 20:13:03.012105 32386 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:03.087422 32392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:03.235978 32386 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:03.240088 32386 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:03.242182 32386 solver.cpp:311] Iteration 1000, loss = 0.294885
I0428 20:13:03.242213 32386 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:03.323833 32393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:03.325047 32386 solver.cpp:398]     Test net output #0: accuracy = 0.8728
I0428 20:13:03.325073 32386 solver.cpp:398]     Test net output #1: loss = 0.330581 (* 1 = 0.330581 loss)
I0428 20:13:03.325079 32386 solver.cpp:316] Optimization Done.
I0428 20:13:03.325083 32386 caffe.cpp:259] Optimization Done.
