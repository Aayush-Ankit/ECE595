I0428 20:00:46.269439 29551 caffe.cpp:218] Using GPUs 0
I0428 20:00:46.308590 29551 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:46.771984 29551 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test885.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:46.772122 29551 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test885.prototxt
I0428 20:00:46.772450 29551 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:46.772470 29551 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:46.772560 29551 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:46.772650 29551 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:46.772755 29551 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:46.772783 29551 net.cpp:86] Creating Layer mnist
I0428 20:00:46.772794 29551 net.cpp:382] mnist -> data
I0428 20:00:46.772853 29551 net.cpp:382] mnist -> label
I0428 20:00:46.773946 29551 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:46.776068 29551 net.cpp:124] Setting up mnist
I0428 20:00:46.776099 29551 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:46.776108 29551 net.cpp:131] Top shape: 64 (64)
I0428 20:00:46.776113 29551 net.cpp:139] Memory required for data: 200960
I0428 20:00:46.776123 29551 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:46.776146 29551 net.cpp:86] Creating Layer conv0
I0428 20:00:46.776180 29551 net.cpp:408] conv0 <- data
I0428 20:00:46.776196 29551 net.cpp:382] conv0 -> conv0
I0428 20:00:47.007201 29551 net.cpp:124] Setting up conv0
I0428 20:00:47.007231 29551 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:47.007236 29551 net.cpp:139] Memory required for data: 1675520
I0428 20:00:47.007256 29551 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:47.007272 29551 net.cpp:86] Creating Layer pool0
I0428 20:00:47.007287 29551 net.cpp:408] pool0 <- conv0
I0428 20:00:47.007295 29551 net.cpp:382] pool0 -> pool0
I0428 20:00:47.007349 29551 net.cpp:124] Setting up pool0
I0428 20:00:47.007357 29551 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:47.007362 29551 net.cpp:139] Memory required for data: 2044160
I0428 20:00:47.007366 29551 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:47.007381 29551 net.cpp:86] Creating Layer conv1
I0428 20:00:47.007387 29551 net.cpp:408] conv1 <- pool0
I0428 20:00:47.007395 29551 net.cpp:382] conv1 -> conv1
I0428 20:00:47.010094 29551 net.cpp:124] Setting up conv1
I0428 20:00:47.010110 29551 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:47.010116 29551 net.cpp:139] Memory required for data: 2453760
I0428 20:00:47.010157 29551 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:47.010169 29551 net.cpp:86] Creating Layer pool1
I0428 20:00:47.010174 29551 net.cpp:408] pool1 <- conv1
I0428 20:00:47.010182 29551 net.cpp:382] pool1 -> pool1
I0428 20:00:47.010226 29551 net.cpp:124] Setting up pool1
I0428 20:00:47.010234 29551 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:47.010239 29551 net.cpp:139] Memory required for data: 2556160
I0428 20:00:47.010244 29551 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:47.010255 29551 net.cpp:86] Creating Layer ip1
I0428 20:00:47.010260 29551 net.cpp:408] ip1 <- pool1
I0428 20:00:47.010268 29551 net.cpp:382] ip1 -> ip1
I0428 20:00:47.010439 29551 net.cpp:124] Setting up ip1
I0428 20:00:47.010448 29551 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:47.010453 29551 net.cpp:139] Memory required for data: 2562560
I0428 20:00:47.010464 29551 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:47.010475 29551 net.cpp:86] Creating Layer relu1
I0428 20:00:47.010483 29551 net.cpp:408] relu1 <- ip1
I0428 20:00:47.010490 29551 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:47.010648 29551 net.cpp:124] Setting up relu1
I0428 20:00:47.010658 29551 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:47.010663 29551 net.cpp:139] Memory required for data: 2568960
I0428 20:00:47.010666 29551 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:47.010676 29551 net.cpp:86] Creating Layer ip2
I0428 20:00:47.010681 29551 net.cpp:408] ip2 <- ip1
I0428 20:00:47.010689 29551 net.cpp:382] ip2 -> ip2
I0428 20:00:47.011646 29551 net.cpp:124] Setting up ip2
I0428 20:00:47.011658 29551 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:47.011664 29551 net.cpp:139] Memory required for data: 2581760
I0428 20:00:47.011673 29551 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:47.011682 29551 net.cpp:86] Creating Layer relu2
I0428 20:00:47.011688 29551 net.cpp:408] relu2 <- ip2
I0428 20:00:47.011695 29551 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:47.012483 29551 net.cpp:124] Setting up relu2
I0428 20:00:47.012497 29551 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:47.012503 29551 net.cpp:139] Memory required for data: 2594560
I0428 20:00:47.012509 29551 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:47.012521 29551 net.cpp:86] Creating Layer ip3
I0428 20:00:47.012526 29551 net.cpp:408] ip3 <- ip2
I0428 20:00:47.012536 29551 net.cpp:382] ip3 -> ip3
I0428 20:00:47.012645 29551 net.cpp:124] Setting up ip3
I0428 20:00:47.012666 29551 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:47.012671 29551 net.cpp:139] Memory required for data: 2597120
I0428 20:00:47.012684 29551 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:47.012693 29551 net.cpp:86] Creating Layer relu3
I0428 20:00:47.012714 29551 net.cpp:408] relu3 <- ip3
I0428 20:00:47.012722 29551 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:47.012934 29551 net.cpp:124] Setting up relu3
I0428 20:00:47.012946 29551 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:47.012951 29551 net.cpp:139] Memory required for data: 2599680
I0428 20:00:47.012958 29551 layer_factory.hpp:77] Creating layer loss
I0428 20:00:47.012966 29551 net.cpp:86] Creating Layer loss
I0428 20:00:47.012972 29551 net.cpp:408] loss <- ip3
I0428 20:00:47.012979 29551 net.cpp:408] loss <- label
I0428 20:00:47.012987 29551 net.cpp:382] loss -> loss
I0428 20:00:47.013026 29551 layer_factory.hpp:77] Creating layer loss
I0428 20:00:47.013300 29551 net.cpp:124] Setting up loss
I0428 20:00:47.013311 29551 net.cpp:131] Top shape: (1)
I0428 20:00:47.013317 29551 net.cpp:134]     with loss weight 1
I0428 20:00:47.013336 29551 net.cpp:139] Memory required for data: 2599684
I0428 20:00:47.013344 29551 net.cpp:200] loss needs backward computation.
I0428 20:00:47.013350 29551 net.cpp:200] relu3 needs backward computation.
I0428 20:00:47.013355 29551 net.cpp:200] ip3 needs backward computation.
I0428 20:00:47.013360 29551 net.cpp:200] relu2 needs backward computation.
I0428 20:00:47.013365 29551 net.cpp:200] ip2 needs backward computation.
I0428 20:00:47.013370 29551 net.cpp:200] relu1 needs backward computation.
I0428 20:00:47.013375 29551 net.cpp:200] ip1 needs backward computation.
I0428 20:00:47.013381 29551 net.cpp:200] pool1 needs backward computation.
I0428 20:00:47.013386 29551 net.cpp:200] conv1 needs backward computation.
I0428 20:00:47.013391 29551 net.cpp:200] pool0 needs backward computation.
I0428 20:00:47.013397 29551 net.cpp:200] conv0 needs backward computation.
I0428 20:00:47.013403 29551 net.cpp:202] mnist does not need backward computation.
I0428 20:00:47.013408 29551 net.cpp:244] This network produces output loss
I0428 20:00:47.013422 29551 net.cpp:257] Network initialization done.
I0428 20:00:47.013790 29551 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test885.prototxt
I0428 20:00:47.013823 29551 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:47.013931 29551 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:47.014037 29551 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:47.014092 29551 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:47.014125 29551 net.cpp:86] Creating Layer mnist
I0428 20:00:47.014132 29551 net.cpp:382] mnist -> data
I0428 20:00:47.014144 29551 net.cpp:382] mnist -> label
I0428 20:00:47.014284 29551 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:47.016378 29551 net.cpp:124] Setting up mnist
I0428 20:00:47.016407 29551 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:47.016428 29551 net.cpp:131] Top shape: 100 (100)
I0428 20:00:47.016433 29551 net.cpp:139] Memory required for data: 314000
I0428 20:00:47.016436 29551 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:47.016456 29551 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:47.016479 29551 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:47.016484 29551 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:47.016491 29551 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:47.016600 29551 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:47.016609 29551 net.cpp:131] Top shape: 100 (100)
I0428 20:00:47.016613 29551 net.cpp:131] Top shape: 100 (100)
I0428 20:00:47.016616 29551 net.cpp:139] Memory required for data: 314800
I0428 20:00:47.016623 29551 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:47.016631 29551 net.cpp:86] Creating Layer conv0
I0428 20:00:47.016635 29551 net.cpp:408] conv0 <- data
I0428 20:00:47.016640 29551 net.cpp:382] conv0 -> conv0
I0428 20:00:47.018352 29551 net.cpp:124] Setting up conv0
I0428 20:00:47.018366 29551 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:47.018380 29551 net.cpp:139] Memory required for data: 2618800
I0428 20:00:47.018389 29551 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:47.018395 29551 net.cpp:86] Creating Layer pool0
I0428 20:00:47.018399 29551 net.cpp:408] pool0 <- conv0
I0428 20:00:47.018404 29551 net.cpp:382] pool0 -> pool0
I0428 20:00:47.018440 29551 net.cpp:124] Setting up pool0
I0428 20:00:47.018445 29551 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:47.018448 29551 net.cpp:139] Memory required for data: 3194800
I0428 20:00:47.018451 29551 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:47.018460 29551 net.cpp:86] Creating Layer conv1
I0428 20:00:47.018462 29551 net.cpp:408] conv1 <- pool0
I0428 20:00:47.018467 29551 net.cpp:382] conv1 -> conv1
I0428 20:00:47.020611 29551 net.cpp:124] Setting up conv1
I0428 20:00:47.020654 29551 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:47.020659 29551 net.cpp:139] Memory required for data: 3834800
I0428 20:00:47.020678 29551 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:47.020704 29551 net.cpp:86] Creating Layer pool1
I0428 20:00:47.020745 29551 net.cpp:408] pool1 <- conv1
I0428 20:00:47.020752 29551 net.cpp:382] pool1 -> pool1
I0428 20:00:47.020817 29551 net.cpp:124] Setting up pool1
I0428 20:00:47.020826 29551 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:47.020829 29551 net.cpp:139] Memory required for data: 3994800
I0428 20:00:47.020833 29551 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:47.020853 29551 net.cpp:86] Creating Layer ip1
I0428 20:00:47.020858 29551 net.cpp:408] ip1 <- pool1
I0428 20:00:47.020862 29551 net.cpp:382] ip1 -> ip1
I0428 20:00:47.021158 29551 net.cpp:124] Setting up ip1
I0428 20:00:47.021167 29551 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:47.021181 29551 net.cpp:139] Memory required for data: 4004800
I0428 20:00:47.021205 29551 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:47.021210 29551 net.cpp:86] Creating Layer relu1
I0428 20:00:47.021214 29551 net.cpp:408] relu1 <- ip1
I0428 20:00:47.021217 29551 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:47.021378 29551 net.cpp:124] Setting up relu1
I0428 20:00:47.021386 29551 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:47.021390 29551 net.cpp:139] Memory required for data: 4014800
I0428 20:00:47.021394 29551 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:47.021400 29551 net.cpp:86] Creating Layer ip2
I0428 20:00:47.021404 29551 net.cpp:408] ip2 <- ip1
I0428 20:00:47.021409 29551 net.cpp:382] ip2 -> ip2
I0428 20:00:47.021526 29551 net.cpp:124] Setting up ip2
I0428 20:00:47.021533 29551 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:47.021536 29551 net.cpp:139] Memory required for data: 4034800
I0428 20:00:47.021543 29551 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:47.021546 29551 net.cpp:86] Creating Layer relu2
I0428 20:00:47.021549 29551 net.cpp:408] relu2 <- ip2
I0428 20:00:47.021554 29551 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:47.021726 29551 net.cpp:124] Setting up relu2
I0428 20:00:47.021734 29551 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:47.021739 29551 net.cpp:139] Memory required for data: 4054800
I0428 20:00:47.021741 29551 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:47.021747 29551 net.cpp:86] Creating Layer ip3
I0428 20:00:47.021750 29551 net.cpp:408] ip3 <- ip2
I0428 20:00:47.021755 29551 net.cpp:382] ip3 -> ip3
I0428 20:00:47.021872 29551 net.cpp:124] Setting up ip3
I0428 20:00:47.021878 29551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:47.021883 29551 net.cpp:139] Memory required for data: 4058800
I0428 20:00:47.021890 29551 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:47.021898 29551 net.cpp:86] Creating Layer relu3
I0428 20:00:47.021900 29551 net.cpp:408] relu3 <- ip3
I0428 20:00:47.021904 29551 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:47.022816 29551 net.cpp:124] Setting up relu3
I0428 20:00:47.022828 29551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:47.022852 29551 net.cpp:139] Memory required for data: 4062800
I0428 20:00:47.022855 29551 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:47.022861 29551 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:47.022866 29551 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:47.022871 29551 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:47.022879 29551 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:47.022929 29551 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:47.022936 29551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:47.022940 29551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:47.022943 29551 net.cpp:139] Memory required for data: 4070800
I0428 20:00:47.022946 29551 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:47.022951 29551 net.cpp:86] Creating Layer accuracy
I0428 20:00:47.022954 29551 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:47.022959 29551 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:47.022964 29551 net.cpp:382] accuracy -> accuracy
I0428 20:00:47.022971 29551 net.cpp:124] Setting up accuracy
I0428 20:00:47.022977 29551 net.cpp:131] Top shape: (1)
I0428 20:00:47.022980 29551 net.cpp:139] Memory required for data: 4070804
I0428 20:00:47.022984 29551 layer_factory.hpp:77] Creating layer loss
I0428 20:00:47.022989 29551 net.cpp:86] Creating Layer loss
I0428 20:00:47.022991 29551 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:47.022995 29551 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:47.023000 29551 net.cpp:382] loss -> loss
I0428 20:00:47.023008 29551 layer_factory.hpp:77] Creating layer loss
I0428 20:00:47.023262 29551 net.cpp:124] Setting up loss
I0428 20:00:47.023289 29551 net.cpp:131] Top shape: (1)
I0428 20:00:47.023293 29551 net.cpp:134]     with loss weight 1
I0428 20:00:47.023309 29551 net.cpp:139] Memory required for data: 4070808
I0428 20:00:47.023322 29551 net.cpp:200] loss needs backward computation.
I0428 20:00:47.023334 29551 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:47.023353 29551 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:47.023357 29551 net.cpp:200] relu3 needs backward computation.
I0428 20:00:47.023360 29551 net.cpp:200] ip3 needs backward computation.
I0428 20:00:47.023365 29551 net.cpp:200] relu2 needs backward computation.
I0428 20:00:47.023367 29551 net.cpp:200] ip2 needs backward computation.
I0428 20:00:47.023371 29551 net.cpp:200] relu1 needs backward computation.
I0428 20:00:47.023375 29551 net.cpp:200] ip1 needs backward computation.
I0428 20:00:47.023378 29551 net.cpp:200] pool1 needs backward computation.
I0428 20:00:47.023394 29551 net.cpp:200] conv1 needs backward computation.
I0428 20:00:47.023398 29551 net.cpp:200] pool0 needs backward computation.
I0428 20:00:47.023401 29551 net.cpp:200] conv0 needs backward computation.
I0428 20:00:47.023406 29551 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:47.023409 29551 net.cpp:202] mnist does not need backward computation.
I0428 20:00:47.023413 29551 net.cpp:244] This network produces output accuracy
I0428 20:00:47.023416 29551 net.cpp:244] This network produces output loss
I0428 20:00:47.023448 29551 net.cpp:257] Network initialization done.
I0428 20:00:47.023494 29551 solver.cpp:56] Solver scaffolding done.
I0428 20:00:47.023936 29551 caffe.cpp:248] Starting Optimization
I0428 20:00:47.023941 29551 solver.cpp:273] Solving LeNet
I0428 20:00:47.023943 29551 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:47.024860 29551 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:47.029072 29551 blocking_queue.cpp:49] Waiting for data
I0428 20:00:47.091716 29583 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:47.092293 29551 solver.cpp:398]     Test net output #0: accuracy = 0.0869
I0428 20:00:47.092326 29551 solver.cpp:398]     Test net output #1: loss = 2.30561 (* 1 = 2.30561 loss)
I0428 20:00:47.094861 29551 solver.cpp:219] Iteration 0 (0 iter/s, 0.0708751s/100 iters), loss = 2.3341
I0428 20:00:47.094898 29551 solver.cpp:238]     Train net output #0: loss = 2.3341 (* 1 = 2.3341 loss)
I0428 20:00:47.094908 29551 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:47.188189 29551 solver.cpp:219] Iteration 100 (1071.93 iter/s, 0.0932893s/100 iters), loss = 1.2086
I0428 20:00:47.188226 29551 solver.cpp:238]     Train net output #0: loss = 1.2086 (* 1 = 1.2086 loss)
I0428 20:00:47.188232 29551 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:47.280901 29551 solver.cpp:219] Iteration 200 (1078.98 iter/s, 0.0926802s/100 iters), loss = 0.312909
I0428 20:00:47.280939 29551 solver.cpp:238]     Train net output #0: loss = 0.312909 (* 1 = 0.312909 loss)
I0428 20:00:47.280944 29551 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:47.373803 29551 solver.cpp:219] Iteration 300 (1076.79 iter/s, 0.0928687s/100 iters), loss = 0.202178
I0428 20:00:47.373857 29551 solver.cpp:238]     Train net output #0: loss = 0.202178 (* 1 = 0.202178 loss)
I0428 20:00:47.373862 29551 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:47.465284 29551 solver.cpp:219] Iteration 400 (1093.71 iter/s, 0.0914319s/100 iters), loss = 0.149664
I0428 20:00:47.465322 29551 solver.cpp:238]     Train net output #0: loss = 0.149664 (* 1 = 0.149664 loss)
I0428 20:00:47.465327 29551 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:47.554836 29551 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:47.608283 29583 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:47.608835 29551 solver.cpp:398]     Test net output #0: accuracy = 0.954
I0428 20:00:47.608867 29551 solver.cpp:398]     Test net output #1: loss = 0.149273 (* 1 = 0.149273 loss)
I0428 20:00:47.609760 29551 solver.cpp:219] Iteration 500 (692.332 iter/s, 0.144439s/100 iters), loss = 0.0809332
I0428 20:00:47.609807 29551 solver.cpp:238]     Train net output #0: loss = 0.0809331 (* 1 = 0.0809331 loss)
I0428 20:00:47.609843 29551 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:47.711109 29551 solver.cpp:219] Iteration 600 (987.232 iter/s, 0.101293s/100 iters), loss = 0.0856678
I0428 20:00:47.711154 29551 solver.cpp:238]     Train net output #0: loss = 0.0856677 (* 1 = 0.0856677 loss)
I0428 20:00:47.711163 29551 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:47.815668 29551 solver.cpp:219] Iteration 700 (956.805 iter/s, 0.104515s/100 iters), loss = 0.0780316
I0428 20:00:47.815706 29551 solver.cpp:238]     Train net output #0: loss = 0.0780315 (* 1 = 0.0780315 loss)
I0428 20:00:47.815726 29551 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:47.907822 29551 solver.cpp:219] Iteration 800 (1085.68 iter/s, 0.0921078s/100 iters), loss = 0.308677
I0428 20:00:47.907850 29551 solver.cpp:238]     Train net output #0: loss = 0.308677 (* 1 = 0.308677 loss)
I0428 20:00:47.907857 29551 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:48.005184 29551 solver.cpp:219] Iteration 900 (1027.55 iter/s, 0.0973191s/100 iters), loss = 0.231357
I0428 20:00:48.005234 29551 solver.cpp:238]     Train net output #0: loss = 0.231357 (* 1 = 0.231357 loss)
I0428 20:00:48.005249 29551 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:48.042644 29582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:48.114892 29551 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:48.116252 29551 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:48.117074 29551 solver.cpp:311] Iteration 1000, loss = 0.149928
I0428 20:00:48.117101 29551 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:48.173879 29583 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:48.174439 29551 solver.cpp:398]     Test net output #0: accuracy = 0.9726
I0428 20:00:48.174465 29551 solver.cpp:398]     Test net output #1: loss = 0.0860681 (* 1 = 0.0860681 loss)
I0428 20:00:48.174475 29551 solver.cpp:316] Optimization Done.
I0428 20:00:48.174480 29551 caffe.cpp:259] Optimization Done.
