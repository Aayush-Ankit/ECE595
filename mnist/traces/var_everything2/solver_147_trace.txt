I0428 19:32:14.768610 22792 caffe.cpp:218] Using GPUs 0
I0428 19:32:14.804798 22792 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:15.248594 22792 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test147.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:15.248741 22792 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test147.prototxt
I0428 19:32:15.249089 22792 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:15.249104 22792 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:15.249207 22792 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:15.249269 22792 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:15.249368 22792 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:15.249389 22792 net.cpp:86] Creating Layer mnist
I0428 19:32:15.249395 22792 net.cpp:382] mnist -> data
I0428 19:32:15.249414 22792 net.cpp:382] mnist -> label
I0428 19:32:15.250371 22792 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:15.252694 22792 net.cpp:124] Setting up mnist
I0428 19:32:15.252725 22792 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:15.252732 22792 net.cpp:131] Top shape: 64 (64)
I0428 19:32:15.252735 22792 net.cpp:139] Memory required for data: 200960
I0428 19:32:15.252741 22792 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:15.252769 22792 net.cpp:86] Creating Layer conv0
I0428 19:32:15.252774 22792 net.cpp:408] conv0 <- data
I0428 19:32:15.252785 22792 net.cpp:382] conv0 -> conv0
I0428 19:32:15.485240 22792 net.cpp:124] Setting up conv0
I0428 19:32:15.485268 22792 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:15.485272 22792 net.cpp:139] Memory required for data: 1675520
I0428 19:32:15.485301 22792 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:15.485314 22792 net.cpp:86] Creating Layer pool0
I0428 19:32:15.485333 22792 net.cpp:408] pool0 <- conv0
I0428 19:32:15.485340 22792 net.cpp:382] pool0 -> pool0
I0428 19:32:15.485388 22792 net.cpp:124] Setting up pool0
I0428 19:32:15.485396 22792 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:15.485399 22792 net.cpp:139] Memory required for data: 2044160
I0428 19:32:15.485402 22792 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:15.485410 22792 net.cpp:86] Creating Layer ip1
I0428 19:32:15.485427 22792 net.cpp:408] ip1 <- pool0
I0428 19:32:15.485432 22792 net.cpp:382] ip1 -> ip1
I0428 19:32:15.486739 22792 net.cpp:124] Setting up ip1
I0428 19:32:15.486752 22792 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:15.486757 22792 net.cpp:139] Memory required for data: 2056960
I0428 19:32:15.486764 22792 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:15.486771 22792 net.cpp:86] Creating Layer relu1
I0428 19:32:15.486774 22792 net.cpp:408] relu1 <- ip1
I0428 19:32:15.486779 22792 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:15.486939 22792 net.cpp:124] Setting up relu1
I0428 19:32:15.486949 22792 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:15.486953 22792 net.cpp:139] Memory required for data: 2069760
I0428 19:32:15.486955 22792 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:15.486963 22792 net.cpp:86] Creating Layer ip2
I0428 19:32:15.486965 22792 net.cpp:408] ip2 <- ip1
I0428 19:32:15.486970 22792 net.cpp:382] ip2 -> ip2
I0428 19:32:15.487067 22792 net.cpp:124] Setting up ip2
I0428 19:32:15.487074 22792 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:15.487077 22792 net.cpp:139] Memory required for data: 2072320
I0428 19:32:15.487087 22792 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:15.487092 22792 net.cpp:86] Creating Layer relu2
I0428 19:32:15.487094 22792 net.cpp:408] relu2 <- ip2
I0428 19:32:15.487099 22792 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:15.487869 22792 net.cpp:124] Setting up relu2
I0428 19:32:15.487881 22792 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:15.487885 22792 net.cpp:139] Memory required for data: 2074880
I0428 19:32:15.487889 22792 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:15.487895 22792 net.cpp:86] Creating Layer ip3
I0428 19:32:15.487898 22792 net.cpp:408] ip3 <- ip2
I0428 19:32:15.487905 22792 net.cpp:382] ip3 -> ip3
I0428 19:32:15.488005 22792 net.cpp:124] Setting up ip3
I0428 19:32:15.488011 22792 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:15.488014 22792 net.cpp:139] Memory required for data: 2077440
I0428 19:32:15.488020 22792 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:15.488026 22792 net.cpp:86] Creating Layer relu3
I0428 19:32:15.488029 22792 net.cpp:408] relu3 <- ip3
I0428 19:32:15.488034 22792 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:15.488188 22792 net.cpp:124] Setting up relu3
I0428 19:32:15.488195 22792 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:15.488198 22792 net.cpp:139] Memory required for data: 2080000
I0428 19:32:15.488201 22792 layer_factory.hpp:77] Creating layer loss
I0428 19:32:15.488207 22792 net.cpp:86] Creating Layer loss
I0428 19:32:15.488211 22792 net.cpp:408] loss <- ip3
I0428 19:32:15.488216 22792 net.cpp:408] loss <- label
I0428 19:32:15.488221 22792 net.cpp:382] loss -> loss
I0428 19:32:15.488239 22792 layer_factory.hpp:77] Creating layer loss
I0428 19:32:15.488482 22792 net.cpp:124] Setting up loss
I0428 19:32:15.488490 22792 net.cpp:131] Top shape: (1)
I0428 19:32:15.488493 22792 net.cpp:134]     with loss weight 1
I0428 19:32:15.488507 22792 net.cpp:139] Memory required for data: 2080004
I0428 19:32:15.488510 22792 net.cpp:200] loss needs backward computation.
I0428 19:32:15.488514 22792 net.cpp:200] relu3 needs backward computation.
I0428 19:32:15.488517 22792 net.cpp:200] ip3 needs backward computation.
I0428 19:32:15.488519 22792 net.cpp:200] relu2 needs backward computation.
I0428 19:32:15.488523 22792 net.cpp:200] ip2 needs backward computation.
I0428 19:32:15.488524 22792 net.cpp:200] relu1 needs backward computation.
I0428 19:32:15.488528 22792 net.cpp:200] ip1 needs backward computation.
I0428 19:32:15.488539 22792 net.cpp:200] pool0 needs backward computation.
I0428 19:32:15.488543 22792 net.cpp:200] conv0 needs backward computation.
I0428 19:32:15.488545 22792 net.cpp:202] mnist does not need backward computation.
I0428 19:32:15.488548 22792 net.cpp:244] This network produces output loss
I0428 19:32:15.488557 22792 net.cpp:257] Network initialization done.
I0428 19:32:15.488857 22792 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test147.prototxt
I0428 19:32:15.488903 22792 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:15.489006 22792 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:15.489074 22792 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:15.489117 22792 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:15.489131 22792 net.cpp:86] Creating Layer mnist
I0428 19:32:15.489136 22792 net.cpp:382] mnist -> data
I0428 19:32:15.489145 22792 net.cpp:382] mnist -> label
I0428 19:32:15.489275 22792 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:15.490622 22792 net.cpp:124] Setting up mnist
I0428 19:32:15.490651 22792 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:15.490656 22792 net.cpp:131] Top shape: 100 (100)
I0428 19:32:15.490660 22792 net.cpp:139] Memory required for data: 314000
I0428 19:32:15.490664 22792 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:15.490690 22792 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:15.490696 22792 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:15.490701 22792 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:15.490708 22792 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:15.490752 22792 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:15.490759 22792 net.cpp:131] Top shape: 100 (100)
I0428 19:32:15.490763 22792 net.cpp:131] Top shape: 100 (100)
I0428 19:32:15.490767 22792 net.cpp:139] Memory required for data: 314800
I0428 19:32:15.490779 22792 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:15.490789 22792 net.cpp:86] Creating Layer conv0
I0428 19:32:15.490793 22792 net.cpp:408] conv0 <- data
I0428 19:32:15.490799 22792 net.cpp:382] conv0 -> conv0
I0428 19:32:15.492595 22792 net.cpp:124] Setting up conv0
I0428 19:32:15.492609 22792 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:15.492612 22792 net.cpp:139] Memory required for data: 2618800
I0428 19:32:15.492621 22792 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:15.492630 22792 net.cpp:86] Creating Layer pool0
I0428 19:32:15.492633 22792 net.cpp:408] pool0 <- conv0
I0428 19:32:15.492638 22792 net.cpp:382] pool0 -> pool0
I0428 19:32:15.492676 22792 net.cpp:124] Setting up pool0
I0428 19:32:15.492682 22792 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:15.492686 22792 net.cpp:139] Memory required for data: 3194800
I0428 19:32:15.492687 22792 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:15.492696 22792 net.cpp:86] Creating Layer ip1
I0428 19:32:15.492698 22792 net.cpp:408] ip1 <- pool0
I0428 19:32:15.492703 22792 net.cpp:382] ip1 -> ip1
I0428 19:32:15.493257 22792 net.cpp:124] Setting up ip1
I0428 19:32:15.493264 22792 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:15.493268 22792 net.cpp:139] Memory required for data: 3214800
I0428 19:32:15.493274 22792 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:15.493280 22792 net.cpp:86] Creating Layer relu1
I0428 19:32:15.493283 22792 net.cpp:408] relu1 <- ip1
I0428 19:32:15.493288 22792 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:15.493604 22792 net.cpp:124] Setting up relu1
I0428 19:32:15.493613 22792 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:15.493616 22792 net.cpp:139] Memory required for data: 3234800
I0428 19:32:15.493635 22792 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:15.493643 22792 net.cpp:86] Creating Layer ip2
I0428 19:32:15.493646 22792 net.cpp:408] ip2 <- ip1
I0428 19:32:15.493652 22792 net.cpp:382] ip2 -> ip2
I0428 19:32:15.493765 22792 net.cpp:124] Setting up ip2
I0428 19:32:15.493773 22792 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:15.493777 22792 net.cpp:139] Memory required for data: 3238800
I0428 19:32:15.493784 22792 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:15.493790 22792 net.cpp:86] Creating Layer relu2
I0428 19:32:15.493793 22792 net.cpp:408] relu2 <- ip2
I0428 19:32:15.493801 22792 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:15.494635 22792 net.cpp:124] Setting up relu2
I0428 19:32:15.494648 22792 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:15.494652 22792 net.cpp:139] Memory required for data: 3242800
I0428 19:32:15.494655 22792 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:15.494664 22792 net.cpp:86] Creating Layer ip3
I0428 19:32:15.494668 22792 net.cpp:408] ip3 <- ip2
I0428 19:32:15.494673 22792 net.cpp:382] ip3 -> ip3
I0428 19:32:15.494848 22792 net.cpp:124] Setting up ip3
I0428 19:32:15.494856 22792 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:15.494860 22792 net.cpp:139] Memory required for data: 3246800
I0428 19:32:15.494865 22792 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:15.494871 22792 net.cpp:86] Creating Layer relu3
I0428 19:32:15.494880 22792 net.cpp:408] relu3 <- ip3
I0428 19:32:15.494887 22792 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:15.495085 22792 net.cpp:124] Setting up relu3
I0428 19:32:15.495093 22792 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:15.495096 22792 net.cpp:139] Memory required for data: 3250800
I0428 19:32:15.495100 22792 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:15.495103 22792 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:15.495106 22792 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:15.495112 22792 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:15.495117 22792 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:15.495152 22792 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:15.495158 22792 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:15.495162 22792 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:15.495174 22792 net.cpp:139] Memory required for data: 3258800
I0428 19:32:15.495177 22792 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:15.495182 22792 net.cpp:86] Creating Layer accuracy
I0428 19:32:15.495185 22792 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:15.495189 22792 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:15.495195 22792 net.cpp:382] accuracy -> accuracy
I0428 19:32:15.495203 22792 net.cpp:124] Setting up accuracy
I0428 19:32:15.495208 22792 net.cpp:131] Top shape: (1)
I0428 19:32:15.495210 22792 net.cpp:139] Memory required for data: 3258804
I0428 19:32:15.495213 22792 layer_factory.hpp:77] Creating layer loss
I0428 19:32:15.495218 22792 net.cpp:86] Creating Layer loss
I0428 19:32:15.495220 22792 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:15.495225 22792 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:15.495229 22792 net.cpp:382] loss -> loss
I0428 19:32:15.495235 22792 layer_factory.hpp:77] Creating layer loss
I0428 19:32:15.495487 22792 net.cpp:124] Setting up loss
I0428 19:32:15.495499 22792 net.cpp:131] Top shape: (1)
I0428 19:32:15.495502 22792 net.cpp:134]     with loss weight 1
I0428 19:32:15.495509 22792 net.cpp:139] Memory required for data: 3258808
I0428 19:32:15.495513 22792 net.cpp:200] loss needs backward computation.
I0428 19:32:15.495517 22792 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:15.495522 22792 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:15.495524 22792 net.cpp:200] relu3 needs backward computation.
I0428 19:32:15.495542 22792 net.cpp:200] ip3 needs backward computation.
I0428 19:32:15.495544 22792 net.cpp:200] relu2 needs backward computation.
I0428 19:32:15.495548 22792 net.cpp:200] ip2 needs backward computation.
I0428 19:32:15.495550 22792 net.cpp:200] relu1 needs backward computation.
I0428 19:32:15.495553 22792 net.cpp:200] ip1 needs backward computation.
I0428 19:32:15.495563 22792 net.cpp:200] pool0 needs backward computation.
I0428 19:32:15.495566 22792 net.cpp:200] conv0 needs backward computation.
I0428 19:32:15.495569 22792 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:15.495573 22792 net.cpp:202] mnist does not need backward computation.
I0428 19:32:15.495576 22792 net.cpp:244] This network produces output accuracy
I0428 19:32:15.495579 22792 net.cpp:244] This network produces output loss
I0428 19:32:15.495599 22792 net.cpp:257] Network initialization done.
I0428 19:32:15.495640 22792 solver.cpp:56] Solver scaffolding done.
I0428 19:32:15.495947 22792 caffe.cpp:248] Starting Optimization
I0428 19:32:15.495959 22792 solver.cpp:273] Solving LeNet
I0428 19:32:15.495966 22792 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:15.496724 22792 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:15.500396 22792 blocking_queue.cpp:49] Waiting for data
I0428 19:32:15.573040 22799 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:15.573556 22792 solver.cpp:398]     Test net output #0: accuracy = 0.0679
I0428 19:32:15.573576 22792 solver.cpp:398]     Test net output #1: loss = 2.30448 (* 1 = 2.30448 loss)
I0428 19:32:15.576584 22792 solver.cpp:219] Iteration 0 (-4.04556e-31 iter/s, 0.0805586s/100 iters), loss = 2.29735
I0428 19:32:15.576645 22792 solver.cpp:238]     Train net output #0: loss = 2.29735 (* 1 = 2.29735 loss)
I0428 19:32:15.576659 22792 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:15.658453 22792 solver.cpp:219] Iteration 100 (1222.56 iter/s, 0.0817959s/100 iters), loss = 1.30203
I0428 19:32:15.658481 22792 solver.cpp:238]     Train net output #0: loss = 1.30203 (* 1 = 1.30203 loss)
I0428 19:32:15.658488 22792 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:15.734189 22792 solver.cpp:219] Iteration 200 (1321.04 iter/s, 0.0756982s/100 iters), loss = 1.19239
I0428 19:32:15.734211 22792 solver.cpp:238]     Train net output #0: loss = 1.19239 (* 1 = 1.19239 loss)
I0428 19:32:15.734232 22792 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:15.806550 22792 solver.cpp:219] Iteration 300 (1382.63 iter/s, 0.0723261s/100 iters), loss = 1.17234
I0428 19:32:15.806572 22792 solver.cpp:238]     Train net output #0: loss = 1.17234 (* 1 = 1.17234 loss)
I0428 19:32:15.806578 22792 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:15.881847 22792 solver.cpp:219] Iteration 400 (1328.62 iter/s, 0.075266s/100 iters), loss = 1.11063
I0428 19:32:15.881868 22792 solver.cpp:238]     Train net output #0: loss = 1.11063 (* 1 = 1.11063 loss)
I0428 19:32:15.881875 22792 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:15.956125 22792 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:16.022394 22799 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:16.022933 22792 solver.cpp:398]     Test net output #0: accuracy = 0.6641
I0428 19:32:16.022953 22792 solver.cpp:398]     Test net output #1: loss = 0.912324 (* 1 = 0.912324 loss)
I0428 19:32:16.023751 22792 solver.cpp:219] Iteration 500 (704.881 iter/s, 0.141868s/100 iters), loss = 1.05116
I0428 19:32:16.023772 22792 solver.cpp:238]     Train net output #0: loss = 1.05116 (* 1 = 1.05116 loss)
I0428 19:32:16.023782 22792 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:16.103716 22792 solver.cpp:219] Iteration 600 (1251.02 iter/s, 0.0799345s/100 iters), loss = 0.656622
I0428 19:32:16.103739 22792 solver.cpp:238]     Train net output #0: loss = 0.656622 (* 1 = 0.656622 loss)
I0428 19:32:16.103744 22792 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:16.177209 22792 solver.cpp:219] Iteration 700 (1361.27 iter/s, 0.0734609s/100 iters), loss = 1.02094
I0428 19:32:16.177232 22792 solver.cpp:238]     Train net output #0: loss = 1.02094 (* 1 = 1.02094 loss)
I0428 19:32:16.177238 22792 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:16.250289 22792 solver.cpp:219] Iteration 800 (1368.98 iter/s, 0.073047s/100 iters), loss = 0.924481
I0428 19:32:16.250311 22792 solver.cpp:238]     Train net output #0: loss = 0.924481 (* 1 = 0.924481 loss)
I0428 19:32:16.250318 22792 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:16.323730 22792 solver.cpp:219] Iteration 900 (1362.2 iter/s, 0.0734106s/100 iters), loss = 0.904342
I0428 19:32:16.323753 22792 solver.cpp:238]     Train net output #0: loss = 0.904342 (* 1 = 0.904342 loss)
I0428 19:32:16.323760 22792 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:16.348031 22798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:16.395790 22792 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:16.397418 22792 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:16.398406 22792 solver.cpp:311] Iteration 1000, loss = 0.846636
I0428 19:32:16.398421 22792 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:16.473659 22799 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:16.474189 22792 solver.cpp:398]     Test net output #0: accuracy = 0.6821
I0428 19:32:16.474210 22792 solver.cpp:398]     Test net output #1: loss = 0.813084 (* 1 = 0.813084 loss)
I0428 19:32:16.474217 22792 solver.cpp:316] Optimization Done.
I0428 19:32:16.474220 22792 caffe.cpp:259] Optimization Done.
