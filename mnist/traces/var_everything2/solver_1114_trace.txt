I0428 20:09:37.841109 31669 caffe.cpp:218] Using GPUs 0
I0428 20:09:37.877082 31669 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:38.397701 31669 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1114.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:38.397836 31669 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1114.prototxt
I0428 20:09:38.398253 31669 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:38.398273 31669 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:38.398373 31669 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:38.398453 31669 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:38.398548 31669 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:38.398571 31669 net.cpp:86] Creating Layer mnist
I0428 20:09:38.398581 31669 net.cpp:382] mnist -> data
I0428 20:09:38.398602 31669 net.cpp:382] mnist -> label
I0428 20:09:38.399688 31669 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:38.402197 31669 net.cpp:124] Setting up mnist
I0428 20:09:38.402215 31669 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:38.402222 31669 net.cpp:131] Top shape: 64 (64)
I0428 20:09:38.402225 31669 net.cpp:139] Memory required for data: 200960
I0428 20:09:38.402232 31669 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:38.402276 31669 net.cpp:86] Creating Layer conv0
I0428 20:09:38.402299 31669 net.cpp:408] conv0 <- data
I0428 20:09:38.402314 31669 net.cpp:382] conv0 -> conv0
I0428 20:09:38.692764 31669 net.cpp:124] Setting up conv0
I0428 20:09:38.692795 31669 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:38.692800 31669 net.cpp:139] Memory required for data: 3887360
I0428 20:09:38.692829 31669 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:38.692844 31669 net.cpp:86] Creating Layer pool0
I0428 20:09:38.692849 31669 net.cpp:408] pool0 <- conv0
I0428 20:09:38.692858 31669 net.cpp:382] pool0 -> pool0
I0428 20:09:38.692920 31669 net.cpp:124] Setting up pool0
I0428 20:09:38.692929 31669 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:38.692934 31669 net.cpp:139] Memory required for data: 4808960
I0428 20:09:38.692937 31669 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:38.692950 31669 net.cpp:86] Creating Layer conv1
I0428 20:09:38.692955 31669 net.cpp:408] conv1 <- pool0
I0428 20:09:38.692961 31669 net.cpp:382] conv1 -> conv1
I0428 20:09:38.696228 31669 net.cpp:124] Setting up conv1
I0428 20:09:38.696245 31669 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:38.696250 31669 net.cpp:139] Memory required for data: 5218560
I0428 20:09:38.696260 31669 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:38.696269 31669 net.cpp:86] Creating Layer pool1
I0428 20:09:38.696275 31669 net.cpp:408] pool1 <- conv1
I0428 20:09:38.696281 31669 net.cpp:382] pool1 -> pool1
I0428 20:09:38.696331 31669 net.cpp:124] Setting up pool1
I0428 20:09:38.696348 31669 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:38.696352 31669 net.cpp:139] Memory required for data: 5320960
I0428 20:09:38.696355 31669 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:38.696363 31669 net.cpp:86] Creating Layer ip1
I0428 20:09:38.696367 31669 net.cpp:408] ip1 <- pool1
I0428 20:09:38.696373 31669 net.cpp:382] ip1 -> ip1
I0428 20:09:38.696555 31669 net.cpp:124] Setting up ip1
I0428 20:09:38.696564 31669 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:38.696568 31669 net.cpp:139] Memory required for data: 5327360
I0428 20:09:38.696576 31669 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:38.696583 31669 net.cpp:86] Creating Layer relu1
I0428 20:09:38.696588 31669 net.cpp:408] relu1 <- ip1
I0428 20:09:38.696593 31669 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:38.696794 31669 net.cpp:124] Setting up relu1
I0428 20:09:38.696805 31669 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:38.696815 31669 net.cpp:139] Memory required for data: 5333760
I0428 20:09:38.696830 31669 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:38.696851 31669 net.cpp:86] Creating Layer ip2
I0428 20:09:38.696858 31669 net.cpp:408] ip2 <- ip1
I0428 20:09:38.696868 31669 net.cpp:382] ip2 -> ip2
I0428 20:09:38.696997 31669 net.cpp:124] Setting up ip2
I0428 20:09:38.697006 31669 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:38.697010 31669 net.cpp:139] Memory required for data: 5336320
I0428 20:09:38.697017 31669 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:38.697024 31669 net.cpp:86] Creating Layer relu2
I0428 20:09:38.697028 31669 net.cpp:408] relu2 <- ip2
I0428 20:09:38.697033 31669 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:38.697883 31669 net.cpp:124] Setting up relu2
I0428 20:09:38.697898 31669 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:38.697903 31669 net.cpp:139] Memory required for data: 5338880
I0428 20:09:38.697907 31669 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:38.697916 31669 net.cpp:86] Creating Layer ip3
I0428 20:09:38.697919 31669 net.cpp:408] ip3 <- ip2
I0428 20:09:38.697926 31669 net.cpp:382] ip3 -> ip3
I0428 20:09:38.698043 31669 net.cpp:124] Setting up ip3
I0428 20:09:38.698052 31669 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:38.698056 31669 net.cpp:139] Memory required for data: 5341440
I0428 20:09:38.698065 31669 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:38.698071 31669 net.cpp:86] Creating Layer relu3
I0428 20:09:38.698076 31669 net.cpp:408] relu3 <- ip3
I0428 20:09:38.698081 31669 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:38.698279 31669 net.cpp:124] Setting up relu3
I0428 20:09:38.698289 31669 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:38.698293 31669 net.cpp:139] Memory required for data: 5344000
I0428 20:09:38.698297 31669 layer_factory.hpp:77] Creating layer loss
I0428 20:09:38.698303 31669 net.cpp:86] Creating Layer loss
I0428 20:09:38.698307 31669 net.cpp:408] loss <- ip3
I0428 20:09:38.698312 31669 net.cpp:408] loss <- label
I0428 20:09:38.698318 31669 net.cpp:382] loss -> loss
I0428 20:09:38.698335 31669 layer_factory.hpp:77] Creating layer loss
I0428 20:09:38.698599 31669 net.cpp:124] Setting up loss
I0428 20:09:38.698609 31669 net.cpp:131] Top shape: (1)
I0428 20:09:38.698614 31669 net.cpp:134]     with loss weight 1
I0428 20:09:38.698631 31669 net.cpp:139] Memory required for data: 5344004
I0428 20:09:38.698634 31669 net.cpp:200] loss needs backward computation.
I0428 20:09:38.698638 31669 net.cpp:200] relu3 needs backward computation.
I0428 20:09:38.698642 31669 net.cpp:200] ip3 needs backward computation.
I0428 20:09:38.698647 31669 net.cpp:200] relu2 needs backward computation.
I0428 20:09:38.698649 31669 net.cpp:200] ip2 needs backward computation.
I0428 20:09:38.698653 31669 net.cpp:200] relu1 needs backward computation.
I0428 20:09:38.698657 31669 net.cpp:200] ip1 needs backward computation.
I0428 20:09:38.698660 31669 net.cpp:200] pool1 needs backward computation.
I0428 20:09:38.698663 31669 net.cpp:200] conv1 needs backward computation.
I0428 20:09:38.698668 31669 net.cpp:200] pool0 needs backward computation.
I0428 20:09:38.698671 31669 net.cpp:200] conv0 needs backward computation.
I0428 20:09:38.698675 31669 net.cpp:202] mnist does not need backward computation.
I0428 20:09:38.698678 31669 net.cpp:244] This network produces output loss
I0428 20:09:38.698689 31669 net.cpp:257] Network initialization done.
I0428 20:09:38.699069 31669 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1114.prototxt
I0428 20:09:38.699100 31669 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:38.699208 31669 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:38.699300 31669 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:38.699349 31669 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:38.699365 31669 net.cpp:86] Creating Layer mnist
I0428 20:09:38.699371 31669 net.cpp:382] mnist -> data
I0428 20:09:38.699380 31669 net.cpp:382] mnist -> label
I0428 20:09:38.699479 31669 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:38.701700 31669 net.cpp:124] Setting up mnist
I0428 20:09:38.701716 31669 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:38.701722 31669 net.cpp:131] Top shape: 100 (100)
I0428 20:09:38.701726 31669 net.cpp:139] Memory required for data: 314000
I0428 20:09:38.701731 31669 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:38.701740 31669 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:38.701743 31669 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:38.701750 31669 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:38.701757 31669 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:38.701824 31669 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:38.701833 31669 net.cpp:131] Top shape: 100 (100)
I0428 20:09:38.701836 31669 net.cpp:131] Top shape: 100 (100)
I0428 20:09:38.701840 31669 net.cpp:139] Memory required for data: 314800
I0428 20:09:38.701843 31669 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:38.701853 31669 net.cpp:86] Creating Layer conv0
I0428 20:09:38.701858 31669 net.cpp:408] conv0 <- data
I0428 20:09:38.701864 31669 net.cpp:382] conv0 -> conv0
I0428 20:09:38.703804 31669 net.cpp:124] Setting up conv0
I0428 20:09:38.703824 31669 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:38.703829 31669 net.cpp:139] Memory required for data: 6074800
I0428 20:09:38.703840 31669 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:38.703846 31669 net.cpp:86] Creating Layer pool0
I0428 20:09:38.703850 31669 net.cpp:408] pool0 <- conv0
I0428 20:09:38.703856 31669 net.cpp:382] pool0 -> pool0
I0428 20:09:38.703899 31669 net.cpp:124] Setting up pool0
I0428 20:09:38.703908 31669 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:38.703912 31669 net.cpp:139] Memory required for data: 7514800
I0428 20:09:38.703915 31669 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:38.703925 31669 net.cpp:86] Creating Layer conv1
I0428 20:09:38.703933 31669 net.cpp:408] conv1 <- pool0
I0428 20:09:38.703938 31669 net.cpp:382] conv1 -> conv1
I0428 20:09:38.706343 31669 net.cpp:124] Setting up conv1
I0428 20:09:38.706359 31669 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:38.706364 31669 net.cpp:139] Memory required for data: 8154800
I0428 20:09:38.706375 31669 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:38.706382 31669 net.cpp:86] Creating Layer pool1
I0428 20:09:38.706387 31669 net.cpp:408] pool1 <- conv1
I0428 20:09:38.706393 31669 net.cpp:382] pool1 -> pool1
I0428 20:09:38.706441 31669 net.cpp:124] Setting up pool1
I0428 20:09:38.706449 31669 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:38.706454 31669 net.cpp:139] Memory required for data: 8314800
I0428 20:09:38.706456 31669 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:38.706465 31669 net.cpp:86] Creating Layer ip1
I0428 20:09:38.706468 31669 net.cpp:408] ip1 <- pool1
I0428 20:09:38.706473 31669 net.cpp:382] ip1 -> ip1
I0428 20:09:38.706692 31669 net.cpp:124] Setting up ip1
I0428 20:09:38.706704 31669 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:38.706722 31669 net.cpp:139] Memory required for data: 8324800
I0428 20:09:38.706730 31669 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:38.706737 31669 net.cpp:86] Creating Layer relu1
I0428 20:09:38.706740 31669 net.cpp:408] relu1 <- ip1
I0428 20:09:38.706745 31669 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:38.706938 31669 net.cpp:124] Setting up relu1
I0428 20:09:38.706948 31669 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:38.706953 31669 net.cpp:139] Memory required for data: 8334800
I0428 20:09:38.706956 31669 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:38.706964 31669 net.cpp:86] Creating Layer ip2
I0428 20:09:38.706969 31669 net.cpp:408] ip2 <- ip1
I0428 20:09:38.706975 31669 net.cpp:382] ip2 -> ip2
I0428 20:09:38.707088 31669 net.cpp:124] Setting up ip2
I0428 20:09:38.707098 31669 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:38.707101 31669 net.cpp:139] Memory required for data: 8338800
I0428 20:09:38.707108 31669 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:38.707113 31669 net.cpp:86] Creating Layer relu2
I0428 20:09:38.707118 31669 net.cpp:408] relu2 <- ip2
I0428 20:09:38.707123 31669 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:38.707294 31669 net.cpp:124] Setting up relu2
I0428 20:09:38.707307 31669 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:38.707311 31669 net.cpp:139] Memory required for data: 8342800
I0428 20:09:38.707315 31669 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:38.707321 31669 net.cpp:86] Creating Layer ip3
I0428 20:09:38.707325 31669 net.cpp:408] ip3 <- ip2
I0428 20:09:38.707331 31669 net.cpp:382] ip3 -> ip3
I0428 20:09:38.707453 31669 net.cpp:124] Setting up ip3
I0428 20:09:38.707460 31669 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:38.707464 31669 net.cpp:139] Memory required for data: 8346800
I0428 20:09:38.707473 31669 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:38.707479 31669 net.cpp:86] Creating Layer relu3
I0428 20:09:38.707482 31669 net.cpp:408] relu3 <- ip3
I0428 20:09:38.707487 31669 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:38.708374 31669 net.cpp:124] Setting up relu3
I0428 20:09:38.708387 31669 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:38.708391 31669 net.cpp:139] Memory required for data: 8350800
I0428 20:09:38.708395 31669 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:38.708401 31669 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:38.708405 31669 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:38.708411 31669 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:38.708420 31669 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:38.708462 31669 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:38.708469 31669 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:38.708474 31669 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:38.708477 31669 net.cpp:139] Memory required for data: 8358800
I0428 20:09:38.708482 31669 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:38.708487 31669 net.cpp:86] Creating Layer accuracy
I0428 20:09:38.708492 31669 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:38.708498 31669 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:38.708503 31669 net.cpp:382] accuracy -> accuracy
I0428 20:09:38.708510 31669 net.cpp:124] Setting up accuracy
I0428 20:09:38.708516 31669 net.cpp:131] Top shape: (1)
I0428 20:09:38.708520 31669 net.cpp:139] Memory required for data: 8358804
I0428 20:09:38.708524 31669 layer_factory.hpp:77] Creating layer loss
I0428 20:09:38.708529 31669 net.cpp:86] Creating Layer loss
I0428 20:09:38.708534 31669 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:38.708539 31669 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:38.708544 31669 net.cpp:382] loss -> loss
I0428 20:09:38.708552 31669 layer_factory.hpp:77] Creating layer loss
I0428 20:09:38.708819 31669 net.cpp:124] Setting up loss
I0428 20:09:38.708839 31669 net.cpp:131] Top shape: (1)
I0428 20:09:38.708843 31669 net.cpp:134]     with loss weight 1
I0428 20:09:38.708863 31669 net.cpp:139] Memory required for data: 8358808
I0428 20:09:38.708866 31669 net.cpp:200] loss needs backward computation.
I0428 20:09:38.708871 31669 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:38.708878 31669 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:38.708881 31669 net.cpp:200] relu3 needs backward computation.
I0428 20:09:38.708887 31669 net.cpp:200] ip3 needs backward computation.
I0428 20:09:38.708894 31669 net.cpp:200] relu2 needs backward computation.
I0428 20:09:38.708899 31669 net.cpp:200] ip2 needs backward computation.
I0428 20:09:38.708904 31669 net.cpp:200] relu1 needs backward computation.
I0428 20:09:38.708909 31669 net.cpp:200] ip1 needs backward computation.
I0428 20:09:38.708912 31669 net.cpp:200] pool1 needs backward computation.
I0428 20:09:38.708915 31669 net.cpp:200] conv1 needs backward computation.
I0428 20:09:38.708920 31669 net.cpp:200] pool0 needs backward computation.
I0428 20:09:38.708923 31669 net.cpp:200] conv0 needs backward computation.
I0428 20:09:38.708928 31669 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:38.708932 31669 net.cpp:202] mnist does not need backward computation.
I0428 20:09:38.708935 31669 net.cpp:244] This network produces output accuracy
I0428 20:09:38.708947 31669 net.cpp:244] This network produces output loss
I0428 20:09:38.708959 31669 net.cpp:257] Network initialization done.
I0428 20:09:38.709009 31669 solver.cpp:56] Solver scaffolding done.
I0428 20:09:38.709414 31669 caffe.cpp:248] Starting Optimization
I0428 20:09:38.709421 31669 solver.cpp:273] Solving LeNet
I0428 20:09:38.709424 31669 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:38.710383 31669 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:38.716595 31669 blocking_queue.cpp:49] Waiting for data
I0428 20:09:38.788126 31676 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:38.788800 31669 solver.cpp:398]     Test net output #0: accuracy = 0.112
I0428 20:09:38.788830 31669 solver.cpp:398]     Test net output #1: loss = 2.31534 (* 1 = 2.31534 loss)
I0428 20:09:38.792910 31669 solver.cpp:219] Iteration 0 (0 iter/s, 0.0834478s/100 iters), loss = 2.3049
I0428 20:09:38.792939 31669 solver.cpp:238]     Train net output #0: loss = 2.3049 (* 1 = 2.3049 loss)
I0428 20:09:38.792953 31669 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:38.900379 31669 solver.cpp:219] Iteration 100 (930.856 iter/s, 0.107428s/100 iters), loss = 0.968586
I0428 20:09:38.900413 31669 solver.cpp:238]     Train net output #0: loss = 0.968586 (* 1 = 0.968586 loss)
I0428 20:09:38.900420 31669 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:39.005309 31669 solver.cpp:219] Iteration 200 (953.404 iter/s, 0.104887s/100 iters), loss = 0.670434
I0428 20:09:39.005337 31669 solver.cpp:238]     Train net output #0: loss = 0.670434 (* 1 = 0.670434 loss)
I0428 20:09:39.005344 31669 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:39.111599 31669 solver.cpp:219] Iteration 300 (941.156 iter/s, 0.106252s/100 iters), loss = 0.183788
I0428 20:09:39.111639 31669 solver.cpp:238]     Train net output #0: loss = 0.183788 (* 1 = 0.183788 loss)
I0428 20:09:39.111644 31669 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:39.216707 31669 solver.cpp:219] Iteration 400 (951.722 iter/s, 0.105073s/100 iters), loss = 0.183156
I0428 20:09:39.216747 31669 solver.cpp:238]     Train net output #0: loss = 0.183156 (* 1 = 0.183156 loss)
I0428 20:09:39.216753 31669 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:39.320513 31669 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:39.377513 31676 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:39.378135 31669 solver.cpp:398]     Test net output #0: accuracy = 0.9546
I0428 20:09:39.378170 31669 solver.cpp:398]     Test net output #1: loss = 0.158189 (* 1 = 0.158189 loss)
I0428 20:09:39.379214 31669 solver.cpp:219] Iteration 500 (615.561 iter/s, 0.162454s/100 iters), loss = 0.0666487
I0428 20:09:39.379283 31669 solver.cpp:238]     Train net output #0: loss = 0.0666487 (* 1 = 0.0666487 loss)
I0428 20:09:39.379293 31669 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:39.493535 31669 solver.cpp:219] Iteration 600 (875.315 iter/s, 0.114245s/100 iters), loss = 0.122037
I0428 20:09:39.493564 31669 solver.cpp:238]     Train net output #0: loss = 0.122037 (* 1 = 0.122037 loss)
I0428 20:09:39.493571 31669 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:39.598847 31669 solver.cpp:219] Iteration 700 (949.917 iter/s, 0.105272s/100 iters), loss = 0.294871
I0428 20:09:39.598871 31669 solver.cpp:238]     Train net output #0: loss = 0.294871 (* 1 = 0.294871 loss)
I0428 20:09:39.598877 31669 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:39.701354 31669 solver.cpp:219] Iteration 800 (975.889 iter/s, 0.102471s/100 iters), loss = 0.282613
I0428 20:09:39.701385 31669 solver.cpp:238]     Train net output #0: loss = 0.282613 (* 1 = 0.282613 loss)
I0428 20:09:39.701392 31669 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:39.806946 31669 solver.cpp:219] Iteration 900 (947.392 iter/s, 0.105553s/100 iters), loss = 0.188063
I0428 20:09:39.806977 31669 solver.cpp:238]     Train net output #0: loss = 0.188063 (* 1 = 0.188063 loss)
I0428 20:09:39.806983 31669 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:39.841267 31675 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:39.908112 31669 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:39.909344 31669 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:39.910082 31669 solver.cpp:311] Iteration 1000, loss = 0.11834
I0428 20:09:39.910099 31669 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:39.982635 31676 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:39.983364 31669 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 20:09:39.983404 31669 solver.cpp:398]     Test net output #1: loss = 0.111011 (* 1 = 0.111011 loss)
I0428 20:09:39.983412 31669 solver.cpp:316] Optimization Done.
I0428 20:09:39.983417 31669 caffe.cpp:259] Optimization Done.
