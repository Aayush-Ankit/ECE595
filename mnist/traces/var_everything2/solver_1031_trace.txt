I0428 20:06:33.491267 30900 caffe.cpp:218] Using GPUs 0
I0428 20:06:33.528129 30900 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:33.978215 30900 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1031.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:33.978364 30900 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1031.prototxt
I0428 20:06:33.978691 30900 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:33.978720 30900 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:33.978795 30900 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:33.978852 30900 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:33.978934 30900 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:33.978952 30900 net.cpp:86] Creating Layer mnist
I0428 20:06:33.978958 30900 net.cpp:382] mnist -> data
I0428 20:06:33.978976 30900 net.cpp:382] mnist -> label
I0428 20:06:33.979910 30900 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:33.982091 30900 net.cpp:124] Setting up mnist
I0428 20:06:33.982137 30900 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:33.982158 30900 net.cpp:131] Top shape: 64 (64)
I0428 20:06:33.982161 30900 net.cpp:139] Memory required for data: 200960
I0428 20:06:33.982167 30900 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:33.982180 30900 net.cpp:86] Creating Layer conv0
I0428 20:06:33.982197 30900 net.cpp:408] conv0 <- data
I0428 20:06:33.982206 30900 net.cpp:382] conv0 -> conv0
I0428 20:06:34.213917 30900 net.cpp:124] Setting up conv0
I0428 20:06:34.213943 30900 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:34.213946 30900 net.cpp:139] Memory required for data: 3887360
I0428 20:06:34.213960 30900 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:34.213987 30900 net.cpp:86] Creating Layer pool0
I0428 20:06:34.213991 30900 net.cpp:408] pool0 <- conv0
I0428 20:06:34.213996 30900 net.cpp:382] pool0 -> pool0
I0428 20:06:34.214038 30900 net.cpp:124] Setting up pool0
I0428 20:06:34.214043 30900 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:34.214046 30900 net.cpp:139] Memory required for data: 4808960
I0428 20:06:34.214049 30900 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:34.214061 30900 net.cpp:86] Creating Layer conv1
I0428 20:06:34.214063 30900 net.cpp:408] conv1 <- pool0
I0428 20:06:34.214067 30900 net.cpp:382] conv1 -> conv1
I0428 20:06:34.216763 30900 net.cpp:124] Setting up conv1
I0428 20:06:34.216794 30900 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:34.216796 30900 net.cpp:139] Memory required for data: 4890880
I0428 20:06:34.216805 30900 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:34.216820 30900 net.cpp:86] Creating Layer pool1
I0428 20:06:34.216825 30900 net.cpp:408] pool1 <- conv1
I0428 20:06:34.216830 30900 net.cpp:382] pool1 -> pool1
I0428 20:06:34.216883 30900 net.cpp:124] Setting up pool1
I0428 20:06:34.216888 30900 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:34.216892 30900 net.cpp:139] Memory required for data: 4911360
I0428 20:06:34.216894 30900 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:34.216900 30900 net.cpp:86] Creating Layer ip1
I0428 20:06:34.216903 30900 net.cpp:408] ip1 <- pool1
I0428 20:06:34.216908 30900 net.cpp:382] ip1 -> ip1
I0428 20:06:34.217034 30900 net.cpp:124] Setting up ip1
I0428 20:06:34.217042 30900 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:34.217046 30900 net.cpp:139] Memory required for data: 4913920
I0428 20:06:34.217052 30900 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:34.217057 30900 net.cpp:86] Creating Layer relu1
I0428 20:06:34.217061 30900 net.cpp:408] relu1 <- ip1
I0428 20:06:34.217064 30900 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:34.217218 30900 net.cpp:124] Setting up relu1
I0428 20:06:34.217227 30900 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:34.217231 30900 net.cpp:139] Memory required for data: 4916480
I0428 20:06:34.217232 30900 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:34.217238 30900 net.cpp:86] Creating Layer ip2
I0428 20:06:34.217242 30900 net.cpp:408] ip2 <- ip1
I0428 20:06:34.217247 30900 net.cpp:382] ip2 -> ip2
I0428 20:06:34.217347 30900 net.cpp:124] Setting up ip2
I0428 20:06:34.217353 30900 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:34.217356 30900 net.cpp:139] Memory required for data: 4922880
I0428 20:06:34.217361 30900 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:34.217366 30900 net.cpp:86] Creating Layer relu2
I0428 20:06:34.217370 30900 net.cpp:408] relu2 <- ip2
I0428 20:06:34.217373 30900 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:34.218096 30900 net.cpp:124] Setting up relu2
I0428 20:06:34.218123 30900 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:34.218127 30900 net.cpp:139] Memory required for data: 4929280
I0428 20:06:34.218132 30900 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:34.218138 30900 net.cpp:86] Creating Layer ip3
I0428 20:06:34.218142 30900 net.cpp:408] ip3 <- ip2
I0428 20:06:34.218147 30900 net.cpp:382] ip3 -> ip3
I0428 20:06:34.218243 30900 net.cpp:124] Setting up ip3
I0428 20:06:34.218250 30900 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:34.218253 30900 net.cpp:139] Memory required for data: 4931840
I0428 20:06:34.218261 30900 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:34.218266 30900 net.cpp:86] Creating Layer relu3
I0428 20:06:34.218269 30900 net.cpp:408] relu3 <- ip3
I0428 20:06:34.218273 30900 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:34.218448 30900 net.cpp:124] Setting up relu3
I0428 20:06:34.218459 30900 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:34.218463 30900 net.cpp:139] Memory required for data: 4934400
I0428 20:06:34.218466 30900 layer_factory.hpp:77] Creating layer loss
I0428 20:06:34.218472 30900 net.cpp:86] Creating Layer loss
I0428 20:06:34.218474 30900 net.cpp:408] loss <- ip3
I0428 20:06:34.218478 30900 net.cpp:408] loss <- label
I0428 20:06:34.218483 30900 net.cpp:382] loss -> loss
I0428 20:06:34.218500 30900 layer_factory.hpp:77] Creating layer loss
I0428 20:06:34.218724 30900 net.cpp:124] Setting up loss
I0428 20:06:34.218731 30900 net.cpp:131] Top shape: (1)
I0428 20:06:34.218735 30900 net.cpp:134]     with loss weight 1
I0428 20:06:34.218750 30900 net.cpp:139] Memory required for data: 4934404
I0428 20:06:34.218752 30900 net.cpp:200] loss needs backward computation.
I0428 20:06:34.218755 30900 net.cpp:200] relu3 needs backward computation.
I0428 20:06:34.218758 30900 net.cpp:200] ip3 needs backward computation.
I0428 20:06:34.218761 30900 net.cpp:200] relu2 needs backward computation.
I0428 20:06:34.218763 30900 net.cpp:200] ip2 needs backward computation.
I0428 20:06:34.218766 30900 net.cpp:200] relu1 needs backward computation.
I0428 20:06:34.218768 30900 net.cpp:200] ip1 needs backward computation.
I0428 20:06:34.218771 30900 net.cpp:200] pool1 needs backward computation.
I0428 20:06:34.218775 30900 net.cpp:200] conv1 needs backward computation.
I0428 20:06:34.218777 30900 net.cpp:200] pool0 needs backward computation.
I0428 20:06:34.218780 30900 net.cpp:200] conv0 needs backward computation.
I0428 20:06:34.218783 30900 net.cpp:202] mnist does not need backward computation.
I0428 20:06:34.218786 30900 net.cpp:244] This network produces output loss
I0428 20:06:34.218794 30900 net.cpp:257] Network initialization done.
I0428 20:06:34.219099 30900 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1031.prototxt
I0428 20:06:34.219125 30900 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:34.219225 30900 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:34.219301 30900 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:34.219346 30900 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:34.219358 30900 net.cpp:86] Creating Layer mnist
I0428 20:06:34.219362 30900 net.cpp:382] mnist -> data
I0428 20:06:34.219369 30900 net.cpp:382] mnist -> label
I0428 20:06:34.219449 30900 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:34.221381 30900 net.cpp:124] Setting up mnist
I0428 20:06:34.221426 30900 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:34.221431 30900 net.cpp:131] Top shape: 100 (100)
I0428 20:06:34.221434 30900 net.cpp:139] Memory required for data: 314000
I0428 20:06:34.221438 30900 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:34.221451 30900 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:34.221456 30900 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:34.221460 30900 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:34.221467 30900 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:34.221511 30900 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:34.221516 30900 net.cpp:131] Top shape: 100 (100)
I0428 20:06:34.221520 30900 net.cpp:131] Top shape: 100 (100)
I0428 20:06:34.221524 30900 net.cpp:139] Memory required for data: 314800
I0428 20:06:34.221526 30900 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:34.221534 30900 net.cpp:86] Creating Layer conv0
I0428 20:06:34.221539 30900 net.cpp:408] conv0 <- data
I0428 20:06:34.221544 30900 net.cpp:382] conv0 -> conv0
I0428 20:06:34.223062 30900 net.cpp:124] Setting up conv0
I0428 20:06:34.223089 30900 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:34.223093 30900 net.cpp:139] Memory required for data: 6074800
I0428 20:06:34.223103 30900 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:34.223109 30900 net.cpp:86] Creating Layer pool0
I0428 20:06:34.223112 30900 net.cpp:408] pool0 <- conv0
I0428 20:06:34.223117 30900 net.cpp:382] pool0 -> pool0
I0428 20:06:34.223187 30900 net.cpp:124] Setting up pool0
I0428 20:06:34.223193 30900 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:34.223196 30900 net.cpp:139] Memory required for data: 7514800
I0428 20:06:34.223199 30900 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:34.223208 30900 net.cpp:86] Creating Layer conv1
I0428 20:06:34.223212 30900 net.cpp:408] conv1 <- pool0
I0428 20:06:34.223217 30900 net.cpp:382] conv1 -> conv1
I0428 20:06:34.225256 30900 net.cpp:124] Setting up conv1
I0428 20:06:34.225286 30900 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:34.225291 30900 net.cpp:139] Memory required for data: 7642800
I0428 20:06:34.225301 30900 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:34.225308 30900 net.cpp:86] Creating Layer pool1
I0428 20:06:34.225311 30900 net.cpp:408] pool1 <- conv1
I0428 20:06:34.225317 30900 net.cpp:382] pool1 -> pool1
I0428 20:06:34.225384 30900 net.cpp:124] Setting up pool1
I0428 20:06:34.225389 30900 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:34.225392 30900 net.cpp:139] Memory required for data: 7674800
I0428 20:06:34.225394 30900 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:34.225400 30900 net.cpp:86] Creating Layer ip1
I0428 20:06:34.225404 30900 net.cpp:408] ip1 <- pool1
I0428 20:06:34.225409 30900 net.cpp:382] ip1 -> ip1
I0428 20:06:34.225508 30900 net.cpp:124] Setting up ip1
I0428 20:06:34.225515 30900 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:34.225528 30900 net.cpp:139] Memory required for data: 7678800
I0428 20:06:34.225535 30900 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:34.225540 30900 net.cpp:86] Creating Layer relu1
I0428 20:06:34.225543 30900 net.cpp:408] relu1 <- ip1
I0428 20:06:34.225548 30900 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:34.225814 30900 net.cpp:124] Setting up relu1
I0428 20:06:34.225823 30900 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:34.225826 30900 net.cpp:139] Memory required for data: 7682800
I0428 20:06:34.225831 30900 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:34.225838 30900 net.cpp:86] Creating Layer ip2
I0428 20:06:34.225841 30900 net.cpp:408] ip2 <- ip1
I0428 20:06:34.225849 30900 net.cpp:382] ip2 -> ip2
I0428 20:06:34.225946 30900 net.cpp:124] Setting up ip2
I0428 20:06:34.225955 30900 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:34.225958 30900 net.cpp:139] Memory required for data: 7692800
I0428 20:06:34.225965 30900 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:34.225970 30900 net.cpp:86] Creating Layer relu2
I0428 20:06:34.225972 30900 net.cpp:408] relu2 <- ip2
I0428 20:06:34.225976 30900 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:34.226140 30900 net.cpp:124] Setting up relu2
I0428 20:06:34.226150 30900 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:34.226157 30900 net.cpp:139] Memory required for data: 7702800
I0428 20:06:34.226161 30900 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:34.226166 30900 net.cpp:86] Creating Layer ip3
I0428 20:06:34.226168 30900 net.cpp:408] ip3 <- ip2
I0428 20:06:34.226174 30900 net.cpp:382] ip3 -> ip3
I0428 20:06:34.226267 30900 net.cpp:124] Setting up ip3
I0428 20:06:34.226274 30900 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:34.226277 30900 net.cpp:139] Memory required for data: 7706800
I0428 20:06:34.226284 30900 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:34.226294 30900 net.cpp:86] Creating Layer relu3
I0428 20:06:34.226297 30900 net.cpp:408] relu3 <- ip3
I0428 20:06:34.226308 30900 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:34.227216 30900 net.cpp:124] Setting up relu3
I0428 20:06:34.227228 30900 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:34.227249 30900 net.cpp:139] Memory required for data: 7710800
I0428 20:06:34.227252 30900 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:34.227258 30900 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:34.227262 30900 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:34.227267 30900 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:34.227275 30900 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:34.227314 30900 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:34.227319 30900 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:34.227324 30900 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:34.227326 30900 net.cpp:139] Memory required for data: 7718800
I0428 20:06:34.227329 30900 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:34.227334 30900 net.cpp:86] Creating Layer accuracy
I0428 20:06:34.227339 30900 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:34.227342 30900 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:34.227346 30900 net.cpp:382] accuracy -> accuracy
I0428 20:06:34.227352 30900 net.cpp:124] Setting up accuracy
I0428 20:06:34.227356 30900 net.cpp:131] Top shape: (1)
I0428 20:06:34.227360 30900 net.cpp:139] Memory required for data: 7718804
I0428 20:06:34.227362 30900 layer_factory.hpp:77] Creating layer loss
I0428 20:06:34.227368 30900 net.cpp:86] Creating Layer loss
I0428 20:06:34.227386 30900 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:34.227390 30900 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:34.227398 30900 net.cpp:382] loss -> loss
I0428 20:06:34.227404 30900 layer_factory.hpp:77] Creating layer loss
I0428 20:06:34.227635 30900 net.cpp:124] Setting up loss
I0428 20:06:34.227645 30900 net.cpp:131] Top shape: (1)
I0428 20:06:34.227648 30900 net.cpp:134]     with loss weight 1
I0428 20:06:34.227655 30900 net.cpp:139] Memory required for data: 7718808
I0428 20:06:34.227671 30900 net.cpp:200] loss needs backward computation.
I0428 20:06:34.227675 30900 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:34.227679 30900 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:34.227681 30900 net.cpp:200] relu3 needs backward computation.
I0428 20:06:34.227684 30900 net.cpp:200] ip3 needs backward computation.
I0428 20:06:34.227687 30900 net.cpp:200] relu2 needs backward computation.
I0428 20:06:34.227689 30900 net.cpp:200] ip2 needs backward computation.
I0428 20:06:34.227692 30900 net.cpp:200] relu1 needs backward computation.
I0428 20:06:34.227695 30900 net.cpp:200] ip1 needs backward computation.
I0428 20:06:34.227697 30900 net.cpp:200] pool1 needs backward computation.
I0428 20:06:34.227700 30900 net.cpp:200] conv1 needs backward computation.
I0428 20:06:34.227704 30900 net.cpp:200] pool0 needs backward computation.
I0428 20:06:34.227706 30900 net.cpp:200] conv0 needs backward computation.
I0428 20:06:34.227716 30900 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:34.227721 30900 net.cpp:202] mnist does not need backward computation.
I0428 20:06:34.227725 30900 net.cpp:244] This network produces output accuracy
I0428 20:06:34.227732 30900 net.cpp:244] This network produces output loss
I0428 20:06:34.227742 30900 net.cpp:257] Network initialization done.
I0428 20:06:34.227782 30900 solver.cpp:56] Solver scaffolding done.
I0428 20:06:34.228174 30900 caffe.cpp:248] Starting Optimization
I0428 20:06:34.228183 30900 solver.cpp:273] Solving LeNet
I0428 20:06:34.228200 30900 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:34.229089 30900 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:34.234128 30900 blocking_queue.cpp:49] Waiting for data
I0428 20:06:34.305994 30907 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:34.306607 30900 solver.cpp:398]     Test net output #0: accuracy = 0.0856
I0428 20:06:34.306643 30900 solver.cpp:398]     Test net output #1: loss = 2.32036 (* 1 = 2.32036 loss)
I0428 20:06:34.310185 30900 solver.cpp:219] Iteration 0 (-9.92119e-43 iter/s, 0.0819519s/100 iters), loss = 2.35923
I0428 20:06:34.310225 30900 solver.cpp:238]     Train net output #0: loss = 2.35923 (* 1 = 2.35923 loss)
I0428 20:06:34.310236 30900 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:34.403007 30900 solver.cpp:219] Iteration 100 (1077.76 iter/s, 0.0927855s/100 iters), loss = 1.72162
I0428 20:06:34.403045 30900 solver.cpp:238]     Train net output #0: loss = 1.72162 (* 1 = 1.72162 loss)
I0428 20:06:34.403051 30900 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:34.494415 30900 solver.cpp:219] Iteration 200 (1094.38 iter/s, 0.0913757s/100 iters), loss = 0.976509
I0428 20:06:34.494453 30900 solver.cpp:238]     Train net output #0: loss = 0.976509 (* 1 = 0.976509 loss)
I0428 20:06:34.494459 30900 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:34.586658 30900 solver.cpp:219] Iteration 300 (1084.48 iter/s, 0.0922101s/100 iters), loss = 0.772165
I0428 20:06:34.586684 30900 solver.cpp:238]     Train net output #0: loss = 0.772165 (* 1 = 0.772165 loss)
I0428 20:06:34.586691 30900 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:34.678901 30900 solver.cpp:219] Iteration 400 (1084.53 iter/s, 0.0922061s/100 iters), loss = 0.482879
I0428 20:06:34.678941 30900 solver.cpp:238]     Train net output #0: loss = 0.482879 (* 1 = 0.482879 loss)
I0428 20:06:34.678962 30900 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:34.768987 30900 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:34.824177 30907 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:34.824771 30900 solver.cpp:398]     Test net output #0: accuracy = 0.7286
I0428 20:06:34.824790 30900 solver.cpp:398]     Test net output #1: loss = 0.753989 (* 1 = 0.753989 loss)
I0428 20:06:34.825744 30900 solver.cpp:219] Iteration 500 (681.239 iter/s, 0.146791s/100 iters), loss = 0.731479
I0428 20:06:34.825798 30900 solver.cpp:238]     Train net output #0: loss = 0.731479 (* 1 = 0.731479 loss)
I0428 20:06:34.825804 30900 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:34.919008 30900 solver.cpp:219] Iteration 600 (1072.94 iter/s, 0.0932017s/100 iters), loss = 0.802833
I0428 20:06:34.919031 30900 solver.cpp:238]     Train net output #0: loss = 0.802833 (* 1 = 0.802833 loss)
I0428 20:06:34.919054 30900 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:35.012529 30900 solver.cpp:219] Iteration 700 (1069.66 iter/s, 0.0934873s/100 iters), loss = 0.734145
I0428 20:06:35.012554 30900 solver.cpp:238]     Train net output #0: loss = 0.734145 (* 1 = 0.734145 loss)
I0428 20:06:35.012580 30900 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:35.100862 30900 solver.cpp:219] Iteration 800 (1132.55 iter/s, 0.0882963s/100 iters), loss = 0.647303
I0428 20:06:35.100888 30900 solver.cpp:238]     Train net output #0: loss = 0.647303 (* 1 = 0.647303 loss)
I0428 20:06:35.100911 30900 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:35.188781 30900 solver.cpp:219] Iteration 900 (1137.87 iter/s, 0.0878838s/100 iters), loss = 0.85044
I0428 20:06:35.188804 30900 solver.cpp:238]     Train net output #0: loss = 0.85044 (* 1 = 0.85044 loss)
I0428 20:06:35.188834 30900 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:35.218536 30906 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:35.277737 30900 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:35.278527 30900 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:35.279101 30900 solver.cpp:311] Iteration 1000, loss = 0.69467
I0428 20:06:35.279116 30900 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:35.355105 30907 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:35.355844 30900 solver.cpp:398]     Test net output #0: accuracy = 0.7538
I0428 20:06:35.355876 30900 solver.cpp:398]     Test net output #1: loss = 0.61455 (* 1 = 0.61455 loss)
I0428 20:06:35.355885 30900 solver.cpp:316] Optimization Done.
I0428 20:06:35.355901 30900 caffe.cpp:259] Optimization Done.
