I0428 20:07:10.155520 31041 caffe.cpp:218] Using GPUs 0
I0428 20:07:10.193747 31041 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:10.653326 31041 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1048.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:10.653477 31041 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1048.prototxt
I0428 20:07:10.653813 31041 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:10.653830 31041 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:10.653913 31041 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:10.653975 31041 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:10.654057 31041 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:10.654075 31041 net.cpp:86] Creating Layer mnist
I0428 20:07:10.654083 31041 net.cpp:382] mnist -> data
I0428 20:07:10.654103 31041 net.cpp:382] mnist -> label
I0428 20:07:10.655061 31041 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:10.657596 31041 net.cpp:124] Setting up mnist
I0428 20:07:10.657611 31041 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:10.657618 31041 net.cpp:131] Top shape: 64 (64)
I0428 20:07:10.657620 31041 net.cpp:139] Memory required for data: 200960
I0428 20:07:10.657626 31041 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:10.657660 31041 net.cpp:86] Creating Layer conv0
I0428 20:07:10.657677 31041 net.cpp:408] conv0 <- data
I0428 20:07:10.657691 31041 net.cpp:382] conv0 -> conv0
I0428 20:07:10.895606 31041 net.cpp:124] Setting up conv0
I0428 20:07:10.895632 31041 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:10.895637 31041 net.cpp:139] Memory required for data: 3887360
I0428 20:07:10.895650 31041 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:10.895663 31041 net.cpp:86] Creating Layer pool0
I0428 20:07:10.895666 31041 net.cpp:408] pool0 <- conv0
I0428 20:07:10.895673 31041 net.cpp:382] pool0 -> pool0
I0428 20:07:10.895715 31041 net.cpp:124] Setting up pool0
I0428 20:07:10.895737 31041 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:10.895740 31041 net.cpp:139] Memory required for data: 4808960
I0428 20:07:10.895743 31041 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:10.895753 31041 net.cpp:86] Creating Layer conv1
I0428 20:07:10.895756 31041 net.cpp:408] conv1 <- pool0
I0428 20:07:10.895761 31041 net.cpp:382] conv1 -> conv1
I0428 20:07:10.898524 31041 net.cpp:124] Setting up conv1
I0428 20:07:10.898537 31041 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:10.898540 31041 net.cpp:139] Memory required for data: 4890880
I0428 20:07:10.898548 31041 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:10.898555 31041 net.cpp:86] Creating Layer pool1
I0428 20:07:10.898558 31041 net.cpp:408] pool1 <- conv1
I0428 20:07:10.898563 31041 net.cpp:382] pool1 -> pool1
I0428 20:07:10.898613 31041 net.cpp:124] Setting up pool1
I0428 20:07:10.898618 31041 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:10.898622 31041 net.cpp:139] Memory required for data: 4911360
I0428 20:07:10.898624 31041 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:10.898632 31041 net.cpp:86] Creating Layer ip1
I0428 20:07:10.898634 31041 net.cpp:408] ip1 <- pool1
I0428 20:07:10.898638 31041 net.cpp:382] ip1 -> ip1
I0428 20:07:10.898747 31041 net.cpp:124] Setting up ip1
I0428 20:07:10.898756 31041 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:10.898758 31041 net.cpp:139] Memory required for data: 4924160
I0428 20:07:10.898764 31041 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:10.898771 31041 net.cpp:86] Creating Layer relu1
I0428 20:07:10.898773 31041 net.cpp:408] relu1 <- ip1
I0428 20:07:10.898777 31041 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:10.898934 31041 net.cpp:124] Setting up relu1
I0428 20:07:10.898942 31041 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:10.898962 31041 net.cpp:139] Memory required for data: 4936960
I0428 20:07:10.898965 31041 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:10.898972 31041 net.cpp:86] Creating Layer ip2
I0428 20:07:10.898974 31041 net.cpp:408] ip2 <- ip1
I0428 20:07:10.898979 31041 net.cpp:382] ip2 -> ip2
I0428 20:07:10.899077 31041 net.cpp:124] Setting up ip2
I0428 20:07:10.899085 31041 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:10.899087 31041 net.cpp:139] Memory required for data: 4943360
I0428 20:07:10.899092 31041 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:10.899097 31041 net.cpp:86] Creating Layer relu2
I0428 20:07:10.899101 31041 net.cpp:408] relu2 <- ip2
I0428 20:07:10.899104 31041 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:10.899812 31041 net.cpp:124] Setting up relu2
I0428 20:07:10.899823 31041 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:10.899842 31041 net.cpp:139] Memory required for data: 4949760
I0428 20:07:10.899845 31041 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:10.899852 31041 net.cpp:86] Creating Layer ip3
I0428 20:07:10.899855 31041 net.cpp:408] ip3 <- ip2
I0428 20:07:10.899860 31041 net.cpp:382] ip3 -> ip3
I0428 20:07:10.899952 31041 net.cpp:124] Setting up ip3
I0428 20:07:10.899960 31041 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:10.899962 31041 net.cpp:139] Memory required for data: 4952320
I0428 20:07:10.899971 31041 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:10.899976 31041 net.cpp:86] Creating Layer relu3
I0428 20:07:10.899978 31041 net.cpp:408] relu3 <- ip3
I0428 20:07:10.899981 31041 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:10.900176 31041 net.cpp:124] Setting up relu3
I0428 20:07:10.900185 31041 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:10.900188 31041 net.cpp:139] Memory required for data: 4954880
I0428 20:07:10.900192 31041 layer_factory.hpp:77] Creating layer loss
I0428 20:07:10.900197 31041 net.cpp:86] Creating Layer loss
I0428 20:07:10.900200 31041 net.cpp:408] loss <- ip3
I0428 20:07:10.900204 31041 net.cpp:408] loss <- label
I0428 20:07:10.900209 31041 net.cpp:382] loss -> loss
I0428 20:07:10.900228 31041 layer_factory.hpp:77] Creating layer loss
I0428 20:07:10.900463 31041 net.cpp:124] Setting up loss
I0428 20:07:10.900472 31041 net.cpp:131] Top shape: (1)
I0428 20:07:10.900490 31041 net.cpp:134]     with loss weight 1
I0428 20:07:10.900506 31041 net.cpp:139] Memory required for data: 4954884
I0428 20:07:10.900508 31041 net.cpp:200] loss needs backward computation.
I0428 20:07:10.900512 31041 net.cpp:200] relu3 needs backward computation.
I0428 20:07:10.900514 31041 net.cpp:200] ip3 needs backward computation.
I0428 20:07:10.900517 31041 net.cpp:200] relu2 needs backward computation.
I0428 20:07:10.900521 31041 net.cpp:200] ip2 needs backward computation.
I0428 20:07:10.900523 31041 net.cpp:200] relu1 needs backward computation.
I0428 20:07:10.900527 31041 net.cpp:200] ip1 needs backward computation.
I0428 20:07:10.900528 31041 net.cpp:200] pool1 needs backward computation.
I0428 20:07:10.900532 31041 net.cpp:200] conv1 needs backward computation.
I0428 20:07:10.900534 31041 net.cpp:200] pool0 needs backward computation.
I0428 20:07:10.900537 31041 net.cpp:200] conv0 needs backward computation.
I0428 20:07:10.900540 31041 net.cpp:202] mnist does not need backward computation.
I0428 20:07:10.900543 31041 net.cpp:244] This network produces output loss
I0428 20:07:10.900552 31041 net.cpp:257] Network initialization done.
I0428 20:07:10.900895 31041 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1048.prototxt
I0428 20:07:10.900938 31041 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:10.901031 31041 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:10.901108 31041 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:10.901168 31041 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:10.901180 31041 net.cpp:86] Creating Layer mnist
I0428 20:07:10.901185 31041 net.cpp:382] mnist -> data
I0428 20:07:10.901193 31041 net.cpp:382] mnist -> label
I0428 20:07:10.901278 31041 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:10.903405 31041 net.cpp:124] Setting up mnist
I0428 20:07:10.903434 31041 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:10.903439 31041 net.cpp:131] Top shape: 100 (100)
I0428 20:07:10.903443 31041 net.cpp:139] Memory required for data: 314000
I0428 20:07:10.903447 31041 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:10.903482 31041 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:10.903487 31041 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:10.903492 31041 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:10.903499 31041 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:10.903554 31041 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:10.903560 31041 net.cpp:131] Top shape: 100 (100)
I0428 20:07:10.903564 31041 net.cpp:131] Top shape: 100 (100)
I0428 20:07:10.903568 31041 net.cpp:139] Memory required for data: 314800
I0428 20:07:10.903570 31041 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:10.903578 31041 net.cpp:86] Creating Layer conv0
I0428 20:07:10.903581 31041 net.cpp:408] conv0 <- data
I0428 20:07:10.903586 31041 net.cpp:382] conv0 -> conv0
I0428 20:07:10.905477 31041 net.cpp:124] Setting up conv0
I0428 20:07:10.905490 31041 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:10.905505 31041 net.cpp:139] Memory required for data: 6074800
I0428 20:07:10.905515 31041 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:10.905536 31041 net.cpp:86] Creating Layer pool0
I0428 20:07:10.905540 31041 net.cpp:408] pool0 <- conv0
I0428 20:07:10.905545 31041 net.cpp:382] pool0 -> pool0
I0428 20:07:10.905581 31041 net.cpp:124] Setting up pool0
I0428 20:07:10.905587 31041 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:10.905591 31041 net.cpp:139] Memory required for data: 7514800
I0428 20:07:10.905593 31041 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:10.905601 31041 net.cpp:86] Creating Layer conv1
I0428 20:07:10.905606 31041 net.cpp:408] conv1 <- pool0
I0428 20:07:10.905609 31041 net.cpp:382] conv1 -> conv1
I0428 20:07:10.907862 31041 net.cpp:124] Setting up conv1
I0428 20:07:10.907876 31041 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:10.907881 31041 net.cpp:139] Memory required for data: 7642800
I0428 20:07:10.907889 31041 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:10.907912 31041 net.cpp:86] Creating Layer pool1
I0428 20:07:10.907915 31041 net.cpp:408] pool1 <- conv1
I0428 20:07:10.907920 31041 net.cpp:382] pool1 -> pool1
I0428 20:07:10.907960 31041 net.cpp:124] Setting up pool1
I0428 20:07:10.907974 31041 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:10.907976 31041 net.cpp:139] Memory required for data: 7674800
I0428 20:07:10.907979 31041 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:10.908006 31041 net.cpp:86] Creating Layer ip1
I0428 20:07:10.908010 31041 net.cpp:408] ip1 <- pool1
I0428 20:07:10.908023 31041 net.cpp:382] ip1 -> ip1
I0428 20:07:10.908154 31041 net.cpp:124] Setting up ip1
I0428 20:07:10.908160 31041 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:10.908174 31041 net.cpp:139] Memory required for data: 7694800
I0428 20:07:10.908181 31041 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:10.908186 31041 net.cpp:86] Creating Layer relu1
I0428 20:07:10.908190 31041 net.cpp:408] relu1 <- ip1
I0428 20:07:10.908193 31041 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:10.908460 31041 net.cpp:124] Setting up relu1
I0428 20:07:10.908469 31041 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:10.908473 31041 net.cpp:139] Memory required for data: 7714800
I0428 20:07:10.908476 31041 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:10.908489 31041 net.cpp:86] Creating Layer ip2
I0428 20:07:10.908493 31041 net.cpp:408] ip2 <- ip1
I0428 20:07:10.908498 31041 net.cpp:382] ip2 -> ip2
I0428 20:07:10.908608 31041 net.cpp:124] Setting up ip2
I0428 20:07:10.908615 31041 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:10.908618 31041 net.cpp:139] Memory required for data: 7724800
I0428 20:07:10.908623 31041 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:10.908627 31041 net.cpp:86] Creating Layer relu2
I0428 20:07:10.908630 31041 net.cpp:408] relu2 <- ip2
I0428 20:07:10.908640 31041 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:10.908793 31041 net.cpp:124] Setting up relu2
I0428 20:07:10.908802 31041 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:10.908804 31041 net.cpp:139] Memory required for data: 7734800
I0428 20:07:10.908807 31041 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:10.908830 31041 net.cpp:86] Creating Layer ip3
I0428 20:07:10.908840 31041 net.cpp:408] ip3 <- ip2
I0428 20:07:10.908845 31041 net.cpp:382] ip3 -> ip3
I0428 20:07:10.908936 31041 net.cpp:124] Setting up ip3
I0428 20:07:10.908943 31041 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:10.908947 31041 net.cpp:139] Memory required for data: 7738800
I0428 20:07:10.908954 31041 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:10.908958 31041 net.cpp:86] Creating Layer relu3
I0428 20:07:10.908977 31041 net.cpp:408] relu3 <- ip3
I0428 20:07:10.908982 31041 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:10.909756 31041 net.cpp:124] Setting up relu3
I0428 20:07:10.909768 31041 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:10.909771 31041 net.cpp:139] Memory required for data: 7742800
I0428 20:07:10.909775 31041 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:10.909780 31041 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:10.909782 31041 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:10.909787 31041 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:10.909793 31041 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:10.909848 31041 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:10.909854 31041 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:10.909858 31041 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:10.909860 31041 net.cpp:139] Memory required for data: 7750800
I0428 20:07:10.909863 31041 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:10.909868 31041 net.cpp:86] Creating Layer accuracy
I0428 20:07:10.909871 31041 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:10.909875 31041 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:10.909879 31041 net.cpp:382] accuracy -> accuracy
I0428 20:07:10.909886 31041 net.cpp:124] Setting up accuracy
I0428 20:07:10.909906 31041 net.cpp:131] Top shape: (1)
I0428 20:07:10.909909 31041 net.cpp:139] Memory required for data: 7750804
I0428 20:07:10.909911 31041 layer_factory.hpp:77] Creating layer loss
I0428 20:07:10.909915 31041 net.cpp:86] Creating Layer loss
I0428 20:07:10.909919 31041 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:10.909922 31041 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:10.909942 31041 net.cpp:382] loss -> loss
I0428 20:07:10.909950 31041 layer_factory.hpp:77] Creating layer loss
I0428 20:07:10.910185 31041 net.cpp:124] Setting up loss
I0428 20:07:10.910195 31041 net.cpp:131] Top shape: (1)
I0428 20:07:10.910199 31041 net.cpp:134]     with loss weight 1
I0428 20:07:10.910207 31041 net.cpp:139] Memory required for data: 7750808
I0428 20:07:10.910220 31041 net.cpp:200] loss needs backward computation.
I0428 20:07:10.910224 31041 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:10.910228 31041 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:10.910233 31041 net.cpp:200] relu3 needs backward computation.
I0428 20:07:10.910235 31041 net.cpp:200] ip3 needs backward computation.
I0428 20:07:10.910238 31041 net.cpp:200] relu2 needs backward computation.
I0428 20:07:10.910253 31041 net.cpp:200] ip2 needs backward computation.
I0428 20:07:10.910256 31041 net.cpp:200] relu1 needs backward computation.
I0428 20:07:10.910259 31041 net.cpp:200] ip1 needs backward computation.
I0428 20:07:10.910277 31041 net.cpp:200] pool1 needs backward computation.
I0428 20:07:10.910280 31041 net.cpp:200] conv1 needs backward computation.
I0428 20:07:10.910284 31041 net.cpp:200] pool0 needs backward computation.
I0428 20:07:10.910297 31041 net.cpp:200] conv0 needs backward computation.
I0428 20:07:10.910301 31041 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:10.910320 31041 net.cpp:202] mnist does not need backward computation.
I0428 20:07:10.910322 31041 net.cpp:244] This network produces output accuracy
I0428 20:07:10.910358 31041 net.cpp:244] This network produces output loss
I0428 20:07:10.910369 31041 net.cpp:257] Network initialization done.
I0428 20:07:10.910426 31041 solver.cpp:56] Solver scaffolding done.
I0428 20:07:10.910786 31041 caffe.cpp:248] Starting Optimization
I0428 20:07:10.910794 31041 solver.cpp:273] Solving LeNet
I0428 20:07:10.910802 31041 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:10.911665 31041 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:10.916842 31041 blocking_queue.cpp:49] Waiting for data
I0428 20:07:10.987882 31048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:10.988481 31041 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 20:07:10.988500 31041 solver.cpp:398]     Test net output #1: loss = 2.30481 (* 1 = 2.30481 loss)
I0428 20:07:10.992274 31041 solver.cpp:219] Iteration 0 (-3.7683e-31 iter/s, 0.081447s/100 iters), loss = 2.31311
I0428 20:07:10.992300 31041 solver.cpp:238]     Train net output #0: loss = 2.31311 (* 1 = 2.31311 loss)
I0428 20:07:10.992326 31041 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:11.092422 31041 solver.cpp:219] Iteration 100 (998.908 iter/s, 0.100109s/100 iters), loss = 1.25659
I0428 20:07:11.092455 31041 solver.cpp:238]     Train net output #0: loss = 1.25659 (* 1 = 1.25659 loss)
I0428 20:07:11.092475 31041 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:11.183631 31041 solver.cpp:219] Iteration 200 (1096.89 iter/s, 0.0911667s/100 iters), loss = 0.689538
I0428 20:07:11.183661 31041 solver.cpp:238]     Train net output #0: loss = 0.689538 (* 1 = 0.689538 loss)
I0428 20:07:11.183668 31041 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:11.274991 31041 solver.cpp:219] Iteration 300 (1095.05 iter/s, 0.0913202s/100 iters), loss = 0.781627
I0428 20:07:11.275022 31041 solver.cpp:238]     Train net output #0: loss = 0.781627 (* 1 = 0.781627 loss)
I0428 20:07:11.275029 31041 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:11.368716 31041 solver.cpp:219] Iteration 400 (1067.47 iter/s, 0.0936796s/100 iters), loss = 0.49841
I0428 20:07:11.368772 31041 solver.cpp:238]     Train net output #0: loss = 0.49841 (* 1 = 0.49841 loss)
I0428 20:07:11.368789 31041 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:11.469463 31041 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:11.528256 31048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:11.528935 31041 solver.cpp:398]     Test net output #0: accuracy = 0.7495
I0428 20:07:11.528959 31041 solver.cpp:398]     Test net output #1: loss = 0.646564 (* 1 = 0.646564 loss)
I0428 20:07:11.529896 31041 solver.cpp:219] Iteration 500 (620.674 iter/s, 0.161115s/100 iters), loss = 0.7136
I0428 20:07:11.529945 31041 solver.cpp:238]     Train net output #0: loss = 0.7136 (* 1 = 0.7136 loss)
I0428 20:07:11.529953 31041 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:11.622951 31041 solver.cpp:219] Iteration 600 (1075.35 iter/s, 0.0929926s/100 iters), loss = 0.65812
I0428 20:07:11.622982 31041 solver.cpp:238]     Train net output #0: loss = 0.65812 (* 1 = 0.65812 loss)
I0428 20:07:11.622989 31041 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:11.715284 31041 solver.cpp:219] Iteration 700 (1083.49 iter/s, 0.0922941s/100 iters), loss = 0.430984
I0428 20:07:11.715317 31041 solver.cpp:238]     Train net output #0: loss = 0.430984 (* 1 = 0.430984 loss)
I0428 20:07:11.715323 31041 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:11.807245 31041 solver.cpp:219] Iteration 800 (1087.9 iter/s, 0.0919202s/100 iters), loss = 0.739167
I0428 20:07:11.807276 31041 solver.cpp:238]     Train net output #0: loss = 0.739167 (* 1 = 0.739167 loss)
I0428 20:07:11.807288 31041 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:11.905903 31041 solver.cpp:219] Iteration 900 (1014.07 iter/s, 0.0986124s/100 iters), loss = 0.672941
I0428 20:07:11.905947 31041 solver.cpp:238]     Train net output #0: loss = 0.672941 (* 1 = 0.672941 loss)
I0428 20:07:11.905959 31041 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:11.939860 31047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:12.002261 31041 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:12.003139 31041 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:12.003736 31041 solver.cpp:311] Iteration 1000, loss = 0.666549
I0428 20:07:12.003756 31041 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:12.058637 31048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:12.059417 31041 solver.cpp:398]     Test net output #0: accuracy = 0.7633
I0428 20:07:12.059440 31041 solver.cpp:398]     Test net output #1: loss = 0.59133 (* 1 = 0.59133 loss)
I0428 20:07:12.059447 31041 solver.cpp:316] Optimization Done.
I0428 20:07:12.059450 31041 caffe.cpp:259] Optimization Done.
