I0428 19:43:03.769340 25252 caffe.cpp:218] Using GPUs 0
I0428 19:43:03.804744 25252 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:04.320116 25252 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test411.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:04.320289 25252 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test411.prototxt
I0428 19:43:04.320716 25252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:04.320741 25252 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:04.320863 25252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:04.320983 25252 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:04.321116 25252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:04.321148 25252 net.cpp:86] Creating Layer mnist
I0428 19:43:04.321162 25252 net.cpp:382] mnist -> data
I0428 19:43:04.321193 25252 net.cpp:382] mnist -> label
I0428 19:43:04.322459 25252 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:04.324932 25252 net.cpp:124] Setting up mnist
I0428 19:43:04.324952 25252 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:04.324964 25252 net.cpp:131] Top shape: 64 (64)
I0428 19:43:04.324970 25252 net.cpp:139] Memory required for data: 200960
I0428 19:43:04.324980 25252 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:04.325004 25252 net.cpp:86] Creating Layer conv0
I0428 19:43:04.325028 25252 net.cpp:408] conv0 <- data
I0428 19:43:04.325049 25252 net.cpp:382] conv0 -> conv0
I0428 19:43:04.615690 25252 net.cpp:124] Setting up conv0
I0428 19:43:04.615725 25252 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:04.615732 25252 net.cpp:139] Memory required for data: 495872
I0428 19:43:04.615756 25252 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:04.615777 25252 net.cpp:86] Creating Layer pool0
I0428 19:43:04.615785 25252 net.cpp:408] pool0 <- conv0
I0428 19:43:04.615797 25252 net.cpp:382] pool0 -> pool0
I0428 19:43:04.615869 25252 net.cpp:124] Setting up pool0
I0428 19:43:04.615880 25252 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:04.615886 25252 net.cpp:139] Memory required for data: 569600
I0428 19:43:04.615892 25252 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:04.615911 25252 net.cpp:86] Creating Layer conv1
I0428 19:43:04.615919 25252 net.cpp:408] conv1 <- pool0
I0428 19:43:04.615931 25252 net.cpp:382] conv1 -> conv1
I0428 19:43:04.619041 25252 net.cpp:124] Setting up conv1
I0428 19:43:04.619061 25252 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:04.619068 25252 net.cpp:139] Memory required for data: 979200
I0428 19:43:04.619084 25252 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:04.619098 25252 net.cpp:86] Creating Layer pool1
I0428 19:43:04.619107 25252 net.cpp:408] pool1 <- conv1
I0428 19:43:04.619117 25252 net.cpp:382] pool1 -> pool1
I0428 19:43:04.619170 25252 net.cpp:124] Setting up pool1
I0428 19:43:04.619180 25252 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:04.619187 25252 net.cpp:139] Memory required for data: 1081600
I0428 19:43:04.619194 25252 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:04.619205 25252 net.cpp:86] Creating Layer ip1
I0428 19:43:04.619212 25252 net.cpp:408] ip1 <- pool1
I0428 19:43:04.619222 25252 net.cpp:382] ip1 -> ip1
I0428 19:43:04.620385 25252 net.cpp:124] Setting up ip1
I0428 19:43:04.620403 25252 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:04.620409 25252 net.cpp:139] Memory required for data: 1088000
I0428 19:43:04.620424 25252 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:04.620437 25252 net.cpp:86] Creating Layer relu1
I0428 19:43:04.620451 25252 net.cpp:408] relu1 <- ip1
I0428 19:43:04.620461 25252 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:04.620671 25252 net.cpp:124] Setting up relu1
I0428 19:43:04.620682 25252 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:04.620688 25252 net.cpp:139] Memory required for data: 1094400
I0428 19:43:04.620695 25252 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:04.620707 25252 net.cpp:86] Creating Layer ip2
I0428 19:43:04.620713 25252 net.cpp:408] ip2 <- ip1
I0428 19:43:04.620724 25252 net.cpp:382] ip2 -> ip2
I0428 19:43:04.620859 25252 net.cpp:124] Setting up ip2
I0428 19:43:04.620870 25252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:04.620877 25252 net.cpp:139] Memory required for data: 1096960
I0428 19:43:04.620887 25252 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:04.620899 25252 net.cpp:86] Creating Layer relu2
I0428 19:43:04.620905 25252 net.cpp:408] relu2 <- ip2
I0428 19:43:04.620914 25252 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:04.621773 25252 net.cpp:124] Setting up relu2
I0428 19:43:04.621790 25252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:04.621798 25252 net.cpp:139] Memory required for data: 1099520
I0428 19:43:04.621804 25252 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:04.621817 25252 net.cpp:86] Creating Layer ip3
I0428 19:43:04.621824 25252 net.cpp:408] ip3 <- ip2
I0428 19:43:04.621835 25252 net.cpp:382] ip3 -> ip3
I0428 19:43:04.621964 25252 net.cpp:124] Setting up ip3
I0428 19:43:04.621976 25252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:04.621983 25252 net.cpp:139] Memory required for data: 1102080
I0428 19:43:04.621999 25252 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:04.622014 25252 net.cpp:86] Creating Layer relu3
I0428 19:43:04.622025 25252 net.cpp:408] relu3 <- ip3
I0428 19:43:04.622035 25252 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:04.622238 25252 net.cpp:124] Setting up relu3
I0428 19:43:04.622251 25252 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:04.622256 25252 net.cpp:139] Memory required for data: 1104640
I0428 19:43:04.622263 25252 layer_factory.hpp:77] Creating layer loss
I0428 19:43:04.622274 25252 net.cpp:86] Creating Layer loss
I0428 19:43:04.622280 25252 net.cpp:408] loss <- ip3
I0428 19:43:04.622288 25252 net.cpp:408] loss <- label
I0428 19:43:04.622299 25252 net.cpp:382] loss -> loss
I0428 19:43:04.622326 25252 layer_factory.hpp:77] Creating layer loss
I0428 19:43:04.622602 25252 net.cpp:124] Setting up loss
I0428 19:43:04.622615 25252 net.cpp:131] Top shape: (1)
I0428 19:43:04.622622 25252 net.cpp:134]     with loss weight 1
I0428 19:43:04.622645 25252 net.cpp:139] Memory required for data: 1104644
I0428 19:43:04.622653 25252 net.cpp:200] loss needs backward computation.
I0428 19:43:04.622660 25252 net.cpp:200] relu3 needs backward computation.
I0428 19:43:04.622666 25252 net.cpp:200] ip3 needs backward computation.
I0428 19:43:04.622673 25252 net.cpp:200] relu2 needs backward computation.
I0428 19:43:04.622678 25252 net.cpp:200] ip2 needs backward computation.
I0428 19:43:04.622684 25252 net.cpp:200] relu1 needs backward computation.
I0428 19:43:04.622690 25252 net.cpp:200] ip1 needs backward computation.
I0428 19:43:04.622697 25252 net.cpp:200] pool1 needs backward computation.
I0428 19:43:04.622704 25252 net.cpp:200] conv1 needs backward computation.
I0428 19:43:04.622709 25252 net.cpp:200] pool0 needs backward computation.
I0428 19:43:04.622716 25252 net.cpp:200] conv0 needs backward computation.
I0428 19:43:04.622723 25252 net.cpp:202] mnist does not need backward computation.
I0428 19:43:04.622730 25252 net.cpp:244] This network produces output loss
I0428 19:43:04.622746 25252 net.cpp:257] Network initialization done.
I0428 19:43:04.623139 25252 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test411.prototxt
I0428 19:43:04.623181 25252 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:04.623298 25252 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:04.623437 25252 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:04.623508 25252 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:04.623529 25252 net.cpp:86] Creating Layer mnist
I0428 19:43:04.623539 25252 net.cpp:382] mnist -> data
I0428 19:43:04.623553 25252 net.cpp:382] mnist -> label
I0428 19:43:04.623697 25252 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:04.626075 25252 net.cpp:124] Setting up mnist
I0428 19:43:04.626093 25252 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:04.626103 25252 net.cpp:131] Top shape: 100 (100)
I0428 19:43:04.626109 25252 net.cpp:139] Memory required for data: 314000
I0428 19:43:04.626117 25252 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:04.626150 25252 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:04.626158 25252 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:04.626168 25252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:04.626181 25252 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:04.626281 25252 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:04.626291 25252 net.cpp:131] Top shape: 100 (100)
I0428 19:43:04.626298 25252 net.cpp:131] Top shape: 100 (100)
I0428 19:43:04.626304 25252 net.cpp:139] Memory required for data: 314800
I0428 19:43:04.626312 25252 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:04.626328 25252 net.cpp:86] Creating Layer conv0
I0428 19:43:04.626338 25252 net.cpp:408] conv0 <- data
I0428 19:43:04.626348 25252 net.cpp:382] conv0 -> conv0
I0428 19:43:04.628165 25252 net.cpp:124] Setting up conv0
I0428 19:43:04.628185 25252 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:04.628191 25252 net.cpp:139] Memory required for data: 775600
I0428 19:43:04.628208 25252 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:04.628221 25252 net.cpp:86] Creating Layer pool0
I0428 19:43:04.628234 25252 net.cpp:408] pool0 <- conv0
I0428 19:43:04.628244 25252 net.cpp:382] pool0 -> pool0
I0428 19:43:04.628295 25252 net.cpp:124] Setting up pool0
I0428 19:43:04.628305 25252 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:04.628311 25252 net.cpp:139] Memory required for data: 890800
I0428 19:43:04.628319 25252 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:04.628334 25252 net.cpp:86] Creating Layer conv1
I0428 19:43:04.628341 25252 net.cpp:408] conv1 <- pool0
I0428 19:43:04.628352 25252 net.cpp:382] conv1 -> conv1
I0428 19:43:04.630117 25252 net.cpp:124] Setting up conv1
I0428 19:43:04.630136 25252 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:04.630147 25252 net.cpp:139] Memory required for data: 1530800
I0428 19:43:04.630163 25252 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:04.630175 25252 net.cpp:86] Creating Layer pool1
I0428 19:43:04.630182 25252 net.cpp:408] pool1 <- conv1
I0428 19:43:04.630204 25252 net.cpp:382] pool1 -> pool1
I0428 19:43:04.630260 25252 net.cpp:124] Setting up pool1
I0428 19:43:04.630271 25252 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:04.630282 25252 net.cpp:139] Memory required for data: 1690800
I0428 19:43:04.630288 25252 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:04.630303 25252 net.cpp:86] Creating Layer ip1
I0428 19:43:04.630314 25252 net.cpp:408] ip1 <- pool1
I0428 19:43:04.630326 25252 net.cpp:382] ip1 -> ip1
I0428 19:43:04.630524 25252 net.cpp:124] Setting up ip1
I0428 19:43:04.630537 25252 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:04.630556 25252 net.cpp:139] Memory required for data: 1700800
I0428 19:43:04.630573 25252 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:04.630584 25252 net.cpp:86] Creating Layer relu1
I0428 19:43:04.630590 25252 net.cpp:408] relu1 <- ip1
I0428 19:43:04.630599 25252 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:04.630901 25252 net.cpp:124] Setting up relu1
I0428 19:43:04.630913 25252 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:04.630920 25252 net.cpp:139] Memory required for data: 1710800
I0428 19:43:04.630928 25252 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:04.630940 25252 net.cpp:86] Creating Layer ip2
I0428 19:43:04.630947 25252 net.cpp:408] ip2 <- ip1
I0428 19:43:04.630959 25252 net.cpp:382] ip2 -> ip2
I0428 19:43:04.631098 25252 net.cpp:124] Setting up ip2
I0428 19:43:04.631109 25252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:04.631115 25252 net.cpp:139] Memory required for data: 1714800
I0428 19:43:04.631126 25252 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:04.631135 25252 net.cpp:86] Creating Layer relu2
I0428 19:43:04.631142 25252 net.cpp:408] relu2 <- ip2
I0428 19:43:04.631153 25252 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:04.631357 25252 net.cpp:124] Setting up relu2
I0428 19:43:04.631369 25252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:04.631376 25252 net.cpp:139] Memory required for data: 1718800
I0428 19:43:04.631382 25252 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:04.631393 25252 net.cpp:86] Creating Layer ip3
I0428 19:43:04.631402 25252 net.cpp:408] ip3 <- ip2
I0428 19:43:04.631413 25252 net.cpp:382] ip3 -> ip3
I0428 19:43:04.631541 25252 net.cpp:124] Setting up ip3
I0428 19:43:04.631551 25252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:04.631556 25252 net.cpp:139] Memory required for data: 1722800
I0428 19:43:04.631570 25252 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:04.631580 25252 net.cpp:86] Creating Layer relu3
I0428 19:43:04.631587 25252 net.cpp:408] relu3 <- ip3
I0428 19:43:04.631598 25252 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:04.632550 25252 net.cpp:124] Setting up relu3
I0428 19:43:04.632566 25252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:04.632573 25252 net.cpp:139] Memory required for data: 1726800
I0428 19:43:04.632580 25252 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:04.632591 25252 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:04.632597 25252 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:04.632607 25252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:04.632619 25252 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:04.632676 25252 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:04.632686 25252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:04.632694 25252 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:04.632700 25252 net.cpp:139] Memory required for data: 1734800
I0428 19:43:04.632707 25252 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:04.632716 25252 net.cpp:86] Creating Layer accuracy
I0428 19:43:04.632722 25252 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:04.632731 25252 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:04.632745 25252 net.cpp:382] accuracy -> accuracy
I0428 19:43:04.632758 25252 net.cpp:124] Setting up accuracy
I0428 19:43:04.632769 25252 net.cpp:131] Top shape: (1)
I0428 19:43:04.632776 25252 net.cpp:139] Memory required for data: 1734804
I0428 19:43:04.632781 25252 layer_factory.hpp:77] Creating layer loss
I0428 19:43:04.632791 25252 net.cpp:86] Creating Layer loss
I0428 19:43:04.632797 25252 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:04.632805 25252 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:04.632824 25252 net.cpp:382] loss -> loss
I0428 19:43:04.632838 25252 layer_factory.hpp:77] Creating layer loss
I0428 19:43:04.633138 25252 net.cpp:124] Setting up loss
I0428 19:43:04.633152 25252 net.cpp:131] Top shape: (1)
I0428 19:43:04.633157 25252 net.cpp:134]     with loss weight 1
I0428 19:43:04.633168 25252 net.cpp:139] Memory required for data: 1734808
I0428 19:43:04.633188 25252 net.cpp:200] loss needs backward computation.
I0428 19:43:04.633200 25252 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:04.633209 25252 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:04.633216 25252 net.cpp:200] relu3 needs backward computation.
I0428 19:43:04.633221 25252 net.cpp:200] ip3 needs backward computation.
I0428 19:43:04.633229 25252 net.cpp:200] relu2 needs backward computation.
I0428 19:43:04.633234 25252 net.cpp:200] ip2 needs backward computation.
I0428 19:43:04.633240 25252 net.cpp:200] relu1 needs backward computation.
I0428 19:43:04.633246 25252 net.cpp:200] ip1 needs backward computation.
I0428 19:43:04.633252 25252 net.cpp:200] pool1 needs backward computation.
I0428 19:43:04.633258 25252 net.cpp:200] conv1 needs backward computation.
I0428 19:43:04.633265 25252 net.cpp:200] pool0 needs backward computation.
I0428 19:43:04.633270 25252 net.cpp:200] conv0 needs backward computation.
I0428 19:43:04.633278 25252 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:04.633285 25252 net.cpp:202] mnist does not need backward computation.
I0428 19:43:04.633291 25252 net.cpp:244] This network produces output accuracy
I0428 19:43:04.633298 25252 net.cpp:244] This network produces output loss
I0428 19:43:04.633324 25252 net.cpp:257] Network initialization done.
I0428 19:43:04.633384 25252 solver.cpp:56] Solver scaffolding done.
I0428 19:43:04.633846 25252 caffe.cpp:248] Starting Optimization
I0428 19:43:04.633854 25252 solver.cpp:273] Solving LeNet
I0428 19:43:04.633860 25252 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:04.634155 25252 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:04.638404 25252 blocking_queue.cpp:49] Waiting for data
I0428 19:43:04.708508 25261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:04.708961 25252 solver.cpp:398]     Test net output #0: accuracy = 0.1138
I0428 19:43:04.708981 25252 solver.cpp:398]     Test net output #1: loss = 2.28132 (* 1 = 2.28132 loss)
I0428 19:43:04.710348 25252 solver.cpp:219] Iteration 0 (0 iter/s, 0.0764498s/100 iters), loss = 2.25522
I0428 19:43:04.710393 25252 solver.cpp:238]     Train net output #0: loss = 2.25522 (* 1 = 2.25522 loss)
I0428 19:43:04.710413 25252 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:04.800467 25252 solver.cpp:219] Iteration 100 (1110.31 iter/s, 0.0900649s/100 iters), loss = 1.1975
I0428 19:43:04.800496 25252 solver.cpp:238]     Train net output #0: loss = 1.1975 (* 1 = 1.1975 loss)
I0428 19:43:04.800506 25252 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:04.883093 25252 solver.cpp:219] Iteration 200 (1210.89 iter/s, 0.0825835s/100 iters), loss = 0.801143
I0428 19:43:04.883121 25252 solver.cpp:238]     Train net output #0: loss = 0.801143 (* 1 = 0.801143 loss)
I0428 19:43:04.883147 25252 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:04.966367 25252 solver.cpp:219] Iteration 300 (1201.61 iter/s, 0.0832215s/100 iters), loss = 0.966982
I0428 19:43:04.966395 25252 solver.cpp:238]     Train net output #0: loss = 0.966982 (* 1 = 0.966982 loss)
I0428 19:43:04.966420 25252 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:05.049587 25252 solver.cpp:219] Iteration 400 (1202.21 iter/s, 0.0831804s/100 iters), loss = 0.647208
I0428 19:43:05.049613 25252 solver.cpp:238]     Train net output #0: loss = 0.647208 (* 1 = 0.647208 loss)
I0428 19:43:05.049638 25252 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:05.132300 25252 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:05.207165 25261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:05.207640 25252 solver.cpp:398]     Test net output #0: accuracy = 0.7559
I0428 19:43:05.207664 25252 solver.cpp:398]     Test net output #1: loss = 0.642436 (* 1 = 0.642436 loss)
I0428 19:43:05.208571 25252 solver.cpp:219] Iteration 500 (629.14 iter/s, 0.158947s/100 iters), loss = 0.596062
I0428 19:43:05.208601 25252 solver.cpp:238]     Train net output #0: loss = 0.596062 (* 1 = 0.596062 loss)
I0428 19:43:05.208631 25252 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:05.299824 25252 solver.cpp:219] Iteration 600 (1096.34 iter/s, 0.0912128s/100 iters), loss = 0.45734
I0428 19:43:05.299854 25252 solver.cpp:238]     Train net output #0: loss = 0.45734 (* 1 = 0.45734 loss)
I0428 19:43:05.299880 25252 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:05.387217 25252 solver.cpp:219] Iteration 700 (1144.78 iter/s, 0.0873533s/100 iters), loss = 0.739006
I0428 19:43:05.387244 25252 solver.cpp:238]     Train net output #0: loss = 0.739006 (* 1 = 0.739006 loss)
I0428 19:43:05.387254 25252 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:05.471105 25252 solver.cpp:219] Iteration 800 (1192.63 iter/s, 0.0838482s/100 iters), loss = 0.672031
I0428 19:43:05.471133 25252 solver.cpp:238]     Train net output #0: loss = 0.672031 (* 1 = 0.672031 loss)
I0428 19:43:05.471143 25252 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:05.562893 25252 solver.cpp:219] Iteration 900 (1089.94 iter/s, 0.0917483s/100 iters), loss = 0.678339
I0428 19:43:05.562925 25252 solver.cpp:238]     Train net output #0: loss = 0.678339 (* 1 = 0.678339 loss)
I0428 19:43:05.562937 25252 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:05.594380 25260 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:05.650446 25252 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:05.651365 25252 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:05.651904 25252 solver.cpp:311] Iteration 1000, loss = 0.637341
I0428 19:43:05.651933 25252 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:05.726256 25261 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:05.726722 25252 solver.cpp:398]     Test net output #0: accuracy = 0.7697
I0428 19:43:05.726743 25252 solver.cpp:398]     Test net output #1: loss = 0.575139 (* 1 = 0.575139 loss)
I0428 19:43:05.726752 25252 solver.cpp:316] Optimization Done.
I0428 19:43:05.726759 25252 caffe.cpp:259] Optimization Done.
