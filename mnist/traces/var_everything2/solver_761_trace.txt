I0428 19:56:30.354807 28451 caffe.cpp:218] Using GPUs 0
I0428 19:56:30.392560 28451 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:30.904887 28451 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test761.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:30.905032 28451 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test761.prototxt
I0428 19:56:30.905460 28451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:30.905481 28451 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:30.905582 28451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:30.905661 28451 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:30.905756 28451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:30.905778 28451 net.cpp:86] Creating Layer mnist
I0428 19:56:30.905787 28451 net.cpp:382] mnist -> data
I0428 19:56:30.905808 28451 net.cpp:382] mnist -> label
I0428 19:56:30.906891 28451 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:30.909377 28451 net.cpp:124] Setting up mnist
I0428 19:56:30.909396 28451 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:30.909402 28451 net.cpp:131] Top shape: 64 (64)
I0428 19:56:30.909405 28451 net.cpp:139] Memory required for data: 200960
I0428 19:56:30.909412 28451 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:30.909451 28451 net.cpp:86] Creating Layer conv0
I0428 19:56:30.909473 28451 net.cpp:408] conv0 <- data
I0428 19:56:30.909487 28451 net.cpp:382] conv0 -> conv0
I0428 19:56:31.198057 28451 net.cpp:124] Setting up conv0
I0428 19:56:31.198087 28451 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:31.198092 28451 net.cpp:139] Memory required for data: 1675520
I0428 19:56:31.198108 28451 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:31.198123 28451 net.cpp:86] Creating Layer pool0
I0428 19:56:31.198128 28451 net.cpp:408] pool0 <- conv0
I0428 19:56:31.198134 28451 net.cpp:382] pool0 -> pool0
I0428 19:56:31.198185 28451 net.cpp:124] Setting up pool0
I0428 19:56:31.198191 28451 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:31.198194 28451 net.cpp:139] Memory required for data: 2044160
I0428 19:56:31.198197 28451 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:31.198210 28451 net.cpp:86] Creating Layer conv1
I0428 19:56:31.198213 28451 net.cpp:408] conv1 <- pool0
I0428 19:56:31.198220 28451 net.cpp:382] conv1 -> conv1
I0428 19:56:31.200245 28451 net.cpp:124] Setting up conv1
I0428 19:56:31.200263 28451 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:31.200266 28451 net.cpp:139] Memory required for data: 2076928
I0428 19:56:31.200276 28451 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:31.200284 28451 net.cpp:86] Creating Layer pool1
I0428 19:56:31.200287 28451 net.cpp:408] pool1 <- conv1
I0428 19:56:31.200294 28451 net.cpp:382] pool1 -> pool1
I0428 19:56:31.200335 28451 net.cpp:124] Setting up pool1
I0428 19:56:31.200342 28451 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:31.200345 28451 net.cpp:139] Memory required for data: 2085120
I0428 19:56:31.200348 28451 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:31.200356 28451 net.cpp:86] Creating Layer ip1
I0428 19:56:31.200361 28451 net.cpp:408] ip1 <- pool1
I0428 19:56:31.200366 28451 net.cpp:382] ip1 -> ip1
I0428 19:56:31.200479 28451 net.cpp:124] Setting up ip1
I0428 19:56:31.200489 28451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:31.200492 28451 net.cpp:139] Memory required for data: 2087680
I0428 19:56:31.200500 28451 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:31.200507 28451 net.cpp:86] Creating Layer relu1
I0428 19:56:31.200510 28451 net.cpp:408] relu1 <- ip1
I0428 19:56:31.200516 28451 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:31.200700 28451 net.cpp:124] Setting up relu1
I0428 19:56:31.200711 28451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:31.200714 28451 net.cpp:139] Memory required for data: 2090240
I0428 19:56:31.200717 28451 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:31.200723 28451 net.cpp:86] Creating Layer ip2
I0428 19:56:31.200727 28451 net.cpp:408] ip2 <- ip1
I0428 19:56:31.200734 28451 net.cpp:382] ip2 -> ip2
I0428 19:56:31.200862 28451 net.cpp:124] Setting up ip2
I0428 19:56:31.200872 28451 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:31.200875 28451 net.cpp:139] Memory required for data: 2103040
I0428 19:56:31.200881 28451 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:31.200888 28451 net.cpp:86] Creating Layer relu2
I0428 19:56:31.200891 28451 net.cpp:408] relu2 <- ip2
I0428 19:56:31.200897 28451 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:31.201681 28451 net.cpp:124] Setting up relu2
I0428 19:56:31.201695 28451 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:31.201699 28451 net.cpp:139] Memory required for data: 2115840
I0428 19:56:31.201702 28451 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:31.201709 28451 net.cpp:86] Creating Layer ip3
I0428 19:56:31.201712 28451 net.cpp:408] ip3 <- ip2
I0428 19:56:31.201719 28451 net.cpp:382] ip3 -> ip3
I0428 19:56:31.201831 28451 net.cpp:124] Setting up ip3
I0428 19:56:31.201840 28451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:31.201843 28451 net.cpp:139] Memory required for data: 2118400
I0428 19:56:31.201851 28451 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:31.201858 28451 net.cpp:86] Creating Layer relu3
I0428 19:56:31.201861 28451 net.cpp:408] relu3 <- ip3
I0428 19:56:31.201865 28451 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:31.202050 28451 net.cpp:124] Setting up relu3
I0428 19:56:31.202061 28451 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:31.202064 28451 net.cpp:139] Memory required for data: 2120960
I0428 19:56:31.202067 28451 layer_factory.hpp:77] Creating layer loss
I0428 19:56:31.202075 28451 net.cpp:86] Creating Layer loss
I0428 19:56:31.202077 28451 net.cpp:408] loss <- ip3
I0428 19:56:31.202081 28451 net.cpp:408] loss <- label
I0428 19:56:31.202086 28451 net.cpp:382] loss -> loss
I0428 19:56:31.202105 28451 layer_factory.hpp:77] Creating layer loss
I0428 19:56:31.202356 28451 net.cpp:124] Setting up loss
I0428 19:56:31.202368 28451 net.cpp:131] Top shape: (1)
I0428 19:56:31.202371 28451 net.cpp:134]     with loss weight 1
I0428 19:56:31.202385 28451 net.cpp:139] Memory required for data: 2120964
I0428 19:56:31.202389 28451 net.cpp:200] loss needs backward computation.
I0428 19:56:31.202394 28451 net.cpp:200] relu3 needs backward computation.
I0428 19:56:31.202396 28451 net.cpp:200] ip3 needs backward computation.
I0428 19:56:31.202399 28451 net.cpp:200] relu2 needs backward computation.
I0428 19:56:31.202402 28451 net.cpp:200] ip2 needs backward computation.
I0428 19:56:31.202405 28451 net.cpp:200] relu1 needs backward computation.
I0428 19:56:31.202409 28451 net.cpp:200] ip1 needs backward computation.
I0428 19:56:31.202411 28451 net.cpp:200] pool1 needs backward computation.
I0428 19:56:31.202415 28451 net.cpp:200] conv1 needs backward computation.
I0428 19:56:31.202419 28451 net.cpp:200] pool0 needs backward computation.
I0428 19:56:31.202421 28451 net.cpp:200] conv0 needs backward computation.
I0428 19:56:31.202425 28451 net.cpp:202] mnist does not need backward computation.
I0428 19:56:31.202427 28451 net.cpp:244] This network produces output loss
I0428 19:56:31.202436 28451 net.cpp:257] Network initialization done.
I0428 19:56:31.202780 28451 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test761.prototxt
I0428 19:56:31.202810 28451 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:31.202906 28451 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:31.202992 28451 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:31.203037 28451 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:31.203052 28451 net.cpp:86] Creating Layer mnist
I0428 19:56:31.203058 28451 net.cpp:382] mnist -> data
I0428 19:56:31.203066 28451 net.cpp:382] mnist -> label
I0428 19:56:31.203158 28451 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:31.205178 28451 net.cpp:124] Setting up mnist
I0428 19:56:31.205191 28451 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:31.205196 28451 net.cpp:131] Top shape: 100 (100)
I0428 19:56:31.205199 28451 net.cpp:139] Memory required for data: 314000
I0428 19:56:31.205204 28451 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:31.205214 28451 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:31.205217 28451 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:31.205235 28451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:31.205243 28451 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:31.205289 28451 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:31.205296 28451 net.cpp:131] Top shape: 100 (100)
I0428 19:56:31.205301 28451 net.cpp:131] Top shape: 100 (100)
I0428 19:56:31.205303 28451 net.cpp:139] Memory required for data: 314800
I0428 19:56:31.205307 28451 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:31.205315 28451 net.cpp:86] Creating Layer conv0
I0428 19:56:31.205319 28451 net.cpp:408] conv0 <- data
I0428 19:56:31.205324 28451 net.cpp:382] conv0 -> conv0
I0428 19:56:31.206917 28451 net.cpp:124] Setting up conv0
I0428 19:56:31.206930 28451 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:31.206934 28451 net.cpp:139] Memory required for data: 2618800
I0428 19:56:31.206944 28451 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:31.206950 28451 net.cpp:86] Creating Layer pool0
I0428 19:56:31.206954 28451 net.cpp:408] pool0 <- conv0
I0428 19:56:31.206960 28451 net.cpp:382] pool0 -> pool0
I0428 19:56:31.207000 28451 net.cpp:124] Setting up pool0
I0428 19:56:31.207006 28451 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:31.207010 28451 net.cpp:139] Memory required for data: 3194800
I0428 19:56:31.207012 28451 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:31.207023 28451 net.cpp:86] Creating Layer conv1
I0428 19:56:31.207026 28451 net.cpp:408] conv1 <- pool0
I0428 19:56:31.207031 28451 net.cpp:382] conv1 -> conv1
I0428 19:56:31.209139 28451 net.cpp:124] Setting up conv1
I0428 19:56:31.209156 28451 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:31.209159 28451 net.cpp:139] Memory required for data: 3246000
I0428 19:56:31.209168 28451 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:31.209177 28451 net.cpp:86] Creating Layer pool1
I0428 19:56:31.209180 28451 net.cpp:408] pool1 <- conv1
I0428 19:56:31.209187 28451 net.cpp:382] pool1 -> pool1
I0428 19:56:31.209229 28451 net.cpp:124] Setting up pool1
I0428 19:56:31.209236 28451 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:31.209240 28451 net.cpp:139] Memory required for data: 3258800
I0428 19:56:31.209244 28451 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:31.209249 28451 net.cpp:86] Creating Layer ip1
I0428 19:56:31.209254 28451 net.cpp:408] ip1 <- pool1
I0428 19:56:31.209261 28451 net.cpp:382] ip1 -> ip1
I0428 19:56:31.209386 28451 net.cpp:124] Setting up ip1
I0428 19:56:31.209395 28451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:31.209408 28451 net.cpp:139] Memory required for data: 3262800
I0428 19:56:31.209416 28451 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:31.209422 28451 net.cpp:86] Creating Layer relu1
I0428 19:56:31.209425 28451 net.cpp:408] relu1 <- ip1
I0428 19:56:31.209431 28451 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:31.209697 28451 net.cpp:124] Setting up relu1
I0428 19:56:31.209707 28451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:31.209710 28451 net.cpp:139] Memory required for data: 3266800
I0428 19:56:31.209714 28451 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:31.209722 28451 net.cpp:86] Creating Layer ip2
I0428 19:56:31.209727 28451 net.cpp:408] ip2 <- ip1
I0428 19:56:31.209733 28451 net.cpp:382] ip2 -> ip2
I0428 19:56:31.209844 28451 net.cpp:124] Setting up ip2
I0428 19:56:31.209852 28451 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:31.209856 28451 net.cpp:139] Memory required for data: 3286800
I0428 19:56:31.209861 28451 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:31.209868 28451 net.cpp:86] Creating Layer relu2
I0428 19:56:31.209872 28451 net.cpp:408] relu2 <- ip2
I0428 19:56:31.209877 28451 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:31.210041 28451 net.cpp:124] Setting up relu2
I0428 19:56:31.210050 28451 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:31.210054 28451 net.cpp:139] Memory required for data: 3306800
I0428 19:56:31.210058 28451 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:31.210067 28451 net.cpp:86] Creating Layer ip3
I0428 19:56:31.210069 28451 net.cpp:408] ip3 <- ip2
I0428 19:56:31.210074 28451 net.cpp:382] ip3 -> ip3
I0428 19:56:31.210185 28451 net.cpp:124] Setting up ip3
I0428 19:56:31.210192 28451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:31.210196 28451 net.cpp:139] Memory required for data: 3310800
I0428 19:56:31.210203 28451 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:31.210211 28451 net.cpp:86] Creating Layer relu3
I0428 19:56:31.210213 28451 net.cpp:408] relu3 <- ip3
I0428 19:56:31.210217 28451 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:31.211086 28451 net.cpp:124] Setting up relu3
I0428 19:56:31.211097 28451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:31.211102 28451 net.cpp:139] Memory required for data: 3314800
I0428 19:56:31.211104 28451 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:31.211110 28451 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:31.211113 28451 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:31.211118 28451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:31.211127 28451 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:31.211174 28451 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:31.211181 28451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:31.211185 28451 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:31.211187 28451 net.cpp:139] Memory required for data: 3322800
I0428 19:56:31.211191 28451 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:31.211197 28451 net.cpp:86] Creating Layer accuracy
I0428 19:56:31.211201 28451 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:31.211205 28451 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:31.211210 28451 net.cpp:382] accuracy -> accuracy
I0428 19:56:31.211217 28451 net.cpp:124] Setting up accuracy
I0428 19:56:31.211222 28451 net.cpp:131] Top shape: (1)
I0428 19:56:31.211226 28451 net.cpp:139] Memory required for data: 3322804
I0428 19:56:31.211230 28451 layer_factory.hpp:77] Creating layer loss
I0428 19:56:31.211235 28451 net.cpp:86] Creating Layer loss
I0428 19:56:31.211238 28451 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:31.211242 28451 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:31.211247 28451 net.cpp:382] loss -> loss
I0428 19:56:31.211253 28451 layer_factory.hpp:77] Creating layer loss
I0428 19:56:31.211504 28451 net.cpp:124] Setting up loss
I0428 19:56:31.211516 28451 net.cpp:131] Top shape: (1)
I0428 19:56:31.211520 28451 net.cpp:134]     with loss weight 1
I0428 19:56:31.211526 28451 net.cpp:139] Memory required for data: 3322808
I0428 19:56:31.211540 28451 net.cpp:200] loss needs backward computation.
I0428 19:56:31.211544 28451 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:31.211549 28451 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:31.211560 28451 net.cpp:200] relu3 needs backward computation.
I0428 19:56:31.211563 28451 net.cpp:200] ip3 needs backward computation.
I0428 19:56:31.211566 28451 net.cpp:200] relu2 needs backward computation.
I0428 19:56:31.211570 28451 net.cpp:200] ip2 needs backward computation.
I0428 19:56:31.211573 28451 net.cpp:200] relu1 needs backward computation.
I0428 19:56:31.211575 28451 net.cpp:200] ip1 needs backward computation.
I0428 19:56:31.211580 28451 net.cpp:200] pool1 needs backward computation.
I0428 19:56:31.211583 28451 net.cpp:200] conv1 needs backward computation.
I0428 19:56:31.211587 28451 net.cpp:200] pool0 needs backward computation.
I0428 19:56:31.211591 28451 net.cpp:200] conv0 needs backward computation.
I0428 19:56:31.211594 28451 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:31.211598 28451 net.cpp:202] mnist does not need backward computation.
I0428 19:56:31.211602 28451 net.cpp:244] This network produces output accuracy
I0428 19:56:31.211606 28451 net.cpp:244] This network produces output loss
I0428 19:56:31.211617 28451 net.cpp:257] Network initialization done.
I0428 19:56:31.211661 28451 solver.cpp:56] Solver scaffolding done.
I0428 19:56:31.212049 28451 caffe.cpp:248] Starting Optimization
I0428 19:56:31.212054 28451 solver.cpp:273] Solving LeNet
I0428 19:56:31.212057 28451 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:31.212962 28451 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:31.217008 28451 blocking_queue.cpp:49] Waiting for data
I0428 19:56:31.278441 28458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:31.278976 28451 solver.cpp:398]     Test net output #0: accuracy = 0.103
I0428 19:56:31.279014 28451 solver.cpp:398]     Test net output #1: loss = 2.31361 (* 1 = 2.31361 loss)
I0428 19:56:31.281663 28451 solver.cpp:219] Iteration 0 (-4.52248e-31 iter/s, 0.0695757s/100 iters), loss = 2.35756
I0428 19:56:31.281705 28451 solver.cpp:238]     Train net output #0: loss = 2.35756 (* 1 = 2.35756 loss)
I0428 19:56:31.281735 28451 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:31.360481 28451 solver.cpp:219] Iteration 100 (1269.6 iter/s, 0.0787649s/100 iters), loss = 0.927432
I0428 19:56:31.360520 28451 solver.cpp:238]     Train net output #0: loss = 0.927432 (* 1 = 0.927432 loss)
I0428 19:56:31.360527 28451 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:31.435741 28451 solver.cpp:219] Iteration 200 (1329.62 iter/s, 0.0752097s/100 iters), loss = 0.577702
I0428 19:56:31.435765 28451 solver.cpp:238]     Train net output #0: loss = 0.577702 (* 1 = 0.577702 loss)
I0428 19:56:31.435771 28451 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:31.508329 28451 solver.cpp:219] Iteration 300 (1378.27 iter/s, 0.0725545s/100 iters), loss = 0.317738
I0428 19:56:31.508352 28451 solver.cpp:238]     Train net output #0: loss = 0.317738 (* 1 = 0.317738 loss)
I0428 19:56:31.508373 28451 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:31.580845 28451 solver.cpp:219] Iteration 400 (1379.62 iter/s, 0.0724838s/100 iters), loss = 0.374898
I0428 19:56:31.580885 28451 solver.cpp:238]     Train net output #0: loss = 0.374898 (* 1 = 0.374898 loss)
I0428 19:56:31.580891 28451 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:31.653264 28451 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:31.715761 28458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:31.716325 28451 solver.cpp:398]     Test net output #0: accuracy = 0.9002
I0428 19:56:31.716358 28451 solver.cpp:398]     Test net output #1: loss = 0.302987 (* 1 = 0.302987 loss)
I0428 19:56:31.717193 28451 solver.cpp:219] Iteration 500 (733.695 iter/s, 0.136296s/100 iters), loss = 0.253557
I0428 19:56:31.717258 28451 solver.cpp:238]     Train net output #0: loss = 0.253557 (* 1 = 0.253557 loss)
I0428 19:56:31.717267 28451 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:31.795888 28451 solver.cpp:219] Iteration 600 (1271.89 iter/s, 0.0786229s/100 iters), loss = 0.175828
I0428 19:56:31.795914 28451 solver.cpp:238]     Train net output #0: loss = 0.175828 (* 1 = 0.175828 loss)
I0428 19:56:31.795935 28451 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:31.870318 28451 solver.cpp:219] Iteration 700 (1344.18 iter/s, 0.0743946s/100 iters), loss = 0.313259
I0428 19:56:31.870342 28451 solver.cpp:238]     Train net output #0: loss = 0.313259 (* 1 = 0.313259 loss)
I0428 19:56:31.870363 28451 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:31.943274 28451 solver.cpp:219] Iteration 800 (1371.31 iter/s, 0.0729231s/100 iters), loss = 0.418693
I0428 19:56:31.943298 28451 solver.cpp:238]     Train net output #0: loss = 0.418693 (* 1 = 0.418693 loss)
I0428 19:56:31.943320 28451 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:32.016557 28451 solver.cpp:219] Iteration 900 (1365.17 iter/s, 0.0732508s/100 iters), loss = 0.224166
I0428 19:56:32.016582 28451 solver.cpp:238]     Train net output #0: loss = 0.224166 (* 1 = 0.224166 loss)
I0428 19:56:32.016587 28451 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:32.041066 28457 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:32.088747 28451 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:32.089443 28451 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:32.089905 28451 solver.cpp:311] Iteration 1000, loss = 0.370582
I0428 19:56:32.089938 28451 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:32.151890 28458 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:32.152427 28451 solver.cpp:398]     Test net output #0: accuracy = 0.939
I0428 19:56:32.152463 28451 solver.cpp:398]     Test net output #1: loss = 0.190239 (* 1 = 0.190239 loss)
I0428 19:56:32.152469 28451 solver.cpp:316] Optimization Done.
I0428 19:56:32.152472 28451 caffe.cpp:259] Optimization Done.
