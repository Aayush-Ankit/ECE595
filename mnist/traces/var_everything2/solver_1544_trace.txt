I0428 20:30:46.236667  3831 caffe.cpp:218] Using GPUs 0
I0428 20:30:46.274544  3831 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:46.785296  3831 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1544.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:46.785441  3831 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1544.prototxt
I0428 20:30:46.785859  3831 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:46.785879  3831 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:46.785979  3831 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:46.786058  3831 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:46.786157  3831 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:46.786181  3831 net.cpp:86] Creating Layer mnist
I0428 20:30:46.786191  3831 net.cpp:382] mnist -> data
I0428 20:30:46.786213  3831 net.cpp:382] mnist -> label
I0428 20:30:46.787315  3831 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:46.790011  3831 net.cpp:124] Setting up mnist
I0428 20:30:46.790030  3831 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:46.790036  3831 net.cpp:131] Top shape: 64 (64)
I0428 20:30:46.790040  3831 net.cpp:139] Memory required for data: 200960
I0428 20:30:46.790047  3831 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:46.790066  3831 net.cpp:86] Creating Layer conv0
I0428 20:30:46.790086  3831 net.cpp:408] conv0 <- data
I0428 20:30:46.790098  3831 net.cpp:382] conv0 -> conv0
I0428 20:30:47.076660  3831 net.cpp:124] Setting up conv0
I0428 20:30:47.076688  3831 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:47.076692  3831 net.cpp:139] Memory required for data: 14946560
I0428 20:30:47.076709  3831 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:47.076721  3831 net.cpp:86] Creating Layer pool0
I0428 20:30:47.076725  3831 net.cpp:408] pool0 <- conv0
I0428 20:30:47.076731  3831 net.cpp:382] pool0 -> pool0
I0428 20:30:47.076781  3831 net.cpp:124] Setting up pool0
I0428 20:30:47.076787  3831 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:47.076791  3831 net.cpp:139] Memory required for data: 18632960
I0428 20:30:47.076793  3831 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:47.076805  3831 net.cpp:86] Creating Layer conv1
I0428 20:30:47.076815  3831 net.cpp:408] conv1 <- pool0
I0428 20:30:47.076822  3831 net.cpp:382] conv1 -> conv1
I0428 20:30:47.078766  3831 net.cpp:124] Setting up conv1
I0428 20:30:47.078797  3831 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:47.078800  3831 net.cpp:139] Memory required for data: 18796800
I0428 20:30:47.078809  3831 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:47.078817  3831 net.cpp:86] Creating Layer pool1
I0428 20:30:47.078821  3831 net.cpp:408] pool1 <- conv1
I0428 20:30:47.078826  3831 net.cpp:382] pool1 -> pool1
I0428 20:30:47.078862  3831 net.cpp:124] Setting up pool1
I0428 20:30:47.078868  3831 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:47.078871  3831 net.cpp:139] Memory required for data: 18837760
I0428 20:30:47.078874  3831 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:47.078881  3831 net.cpp:86] Creating Layer ip1
I0428 20:30:47.078884  3831 net.cpp:408] ip1 <- pool1
I0428 20:30:47.078889  3831 net.cpp:382] ip1 -> ip1
I0428 20:30:47.079044  3831 net.cpp:124] Setting up ip1
I0428 20:30:47.079052  3831 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:47.079056  3831 net.cpp:139] Memory required for data: 18844160
I0428 20:30:47.079062  3831 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:47.079084  3831 net.cpp:86] Creating Layer relu1
I0428 20:30:47.079087  3831 net.cpp:408] relu1 <- ip1
I0428 20:30:47.079107  3831 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:47.079282  3831 net.cpp:124] Setting up relu1
I0428 20:30:47.079290  3831 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:47.079293  3831 net.cpp:139] Memory required for data: 18850560
I0428 20:30:47.079296  3831 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:47.079303  3831 net.cpp:86] Creating Layer ip2
I0428 20:30:47.079305  3831 net.cpp:408] ip2 <- ip1
I0428 20:30:47.079309  3831 net.cpp:382] ip2 -> ip2
I0428 20:30:47.079398  3831 net.cpp:124] Setting up ip2
I0428 20:30:47.079406  3831 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:47.079408  3831 net.cpp:139] Memory required for data: 18853120
I0428 20:30:47.079413  3831 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:47.079419  3831 net.cpp:86] Creating Layer relu2
I0428 20:30:47.079422  3831 net.cpp:408] relu2 <- ip2
I0428 20:30:47.079427  3831 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:47.080160  3831 net.cpp:124] Setting up relu2
I0428 20:30:47.080173  3831 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:47.080176  3831 net.cpp:139] Memory required for data: 18855680
I0428 20:30:47.080180  3831 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:47.080202  3831 net.cpp:86] Creating Layer ip3
I0428 20:30:47.080206  3831 net.cpp:408] ip3 <- ip2
I0428 20:30:47.080211  3831 net.cpp:382] ip3 -> ip3
I0428 20:30:47.080309  3831 net.cpp:124] Setting up ip3
I0428 20:30:47.080317  3831 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:47.080320  3831 net.cpp:139] Memory required for data: 18858240
I0428 20:30:47.080329  3831 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:47.080333  3831 net.cpp:86] Creating Layer relu3
I0428 20:30:47.080338  3831 net.cpp:408] relu3 <- ip3
I0428 20:30:47.080341  3831 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:47.080520  3831 net.cpp:124] Setting up relu3
I0428 20:30:47.080528  3831 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:47.080531  3831 net.cpp:139] Memory required for data: 18860800
I0428 20:30:47.080535  3831 layer_factory.hpp:77] Creating layer loss
I0428 20:30:47.080540  3831 net.cpp:86] Creating Layer loss
I0428 20:30:47.080543  3831 net.cpp:408] loss <- ip3
I0428 20:30:47.080548  3831 net.cpp:408] loss <- label
I0428 20:30:47.080552  3831 net.cpp:382] loss -> loss
I0428 20:30:47.080569  3831 layer_factory.hpp:77] Creating layer loss
I0428 20:30:47.080780  3831 net.cpp:124] Setting up loss
I0428 20:30:47.080790  3831 net.cpp:131] Top shape: (1)
I0428 20:30:47.080793  3831 net.cpp:134]     with loss weight 1
I0428 20:30:47.080806  3831 net.cpp:139] Memory required for data: 18860804
I0428 20:30:47.080814  3831 net.cpp:200] loss needs backward computation.
I0428 20:30:47.080822  3831 net.cpp:200] relu3 needs backward computation.
I0428 20:30:47.080826  3831 net.cpp:200] ip3 needs backward computation.
I0428 20:30:47.080828  3831 net.cpp:200] relu2 needs backward computation.
I0428 20:30:47.080831  3831 net.cpp:200] ip2 needs backward computation.
I0428 20:30:47.080833  3831 net.cpp:200] relu1 needs backward computation.
I0428 20:30:47.080837  3831 net.cpp:200] ip1 needs backward computation.
I0428 20:30:47.080839  3831 net.cpp:200] pool1 needs backward computation.
I0428 20:30:47.080842  3831 net.cpp:200] conv1 needs backward computation.
I0428 20:30:47.080845  3831 net.cpp:200] pool0 needs backward computation.
I0428 20:30:47.080848  3831 net.cpp:200] conv0 needs backward computation.
I0428 20:30:47.080852  3831 net.cpp:202] mnist does not need backward computation.
I0428 20:30:47.080854  3831 net.cpp:244] This network produces output loss
I0428 20:30:47.080863  3831 net.cpp:257] Network initialization done.
I0428 20:30:47.081244  3831 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1544.prototxt
I0428 20:30:47.081270  3831 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:47.081382  3831 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:47.081475  3831 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:47.081517  3831 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:47.081531  3831 net.cpp:86] Creating Layer mnist
I0428 20:30:47.081534  3831 net.cpp:382] mnist -> data
I0428 20:30:47.081542  3831 net.cpp:382] mnist -> label
I0428 20:30:47.081622  3831 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:47.083488  3831 net.cpp:124] Setting up mnist
I0428 20:30:47.083501  3831 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:47.083523  3831 net.cpp:131] Top shape: 100 (100)
I0428 20:30:47.083525  3831 net.cpp:139] Memory required for data: 314000
I0428 20:30:47.083544  3831 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:47.083559  3831 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:47.083562  3831 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:47.083569  3831 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:47.083575  3831 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:47.083683  3831 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:47.083690  3831 net.cpp:131] Top shape: 100 (100)
I0428 20:30:47.083694  3831 net.cpp:131] Top shape: 100 (100)
I0428 20:30:47.083698  3831 net.cpp:139] Memory required for data: 314800
I0428 20:30:47.083701  3831 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:47.083710  3831 net.cpp:86] Creating Layer conv0
I0428 20:30:47.083714  3831 net.cpp:408] conv0 <- data
I0428 20:30:47.083719  3831 net.cpp:382] conv0 -> conv0
I0428 20:30:47.085384  3831 net.cpp:124] Setting up conv0
I0428 20:30:47.085398  3831 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:47.085402  3831 net.cpp:139] Memory required for data: 23354800
I0428 20:30:47.085412  3831 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:47.085417  3831 net.cpp:86] Creating Layer pool0
I0428 20:30:47.085422  3831 net.cpp:408] pool0 <- conv0
I0428 20:30:47.085425  3831 net.cpp:382] pool0 -> pool0
I0428 20:30:47.085459  3831 net.cpp:124] Setting up pool0
I0428 20:30:47.085480  3831 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:47.085484  3831 net.cpp:139] Memory required for data: 29114800
I0428 20:30:47.085486  3831 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:47.085494  3831 net.cpp:86] Creating Layer conv1
I0428 20:30:47.085497  3831 net.cpp:408] conv1 <- pool0
I0428 20:30:47.085502  3831 net.cpp:382] conv1 -> conv1
I0428 20:30:47.087227  3831 net.cpp:124] Setting up conv1
I0428 20:30:47.087241  3831 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:47.087260  3831 net.cpp:139] Memory required for data: 29370800
I0428 20:30:47.087268  3831 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:47.087276  3831 net.cpp:86] Creating Layer pool1
I0428 20:30:47.087280  3831 net.cpp:408] pool1 <- conv1
I0428 20:30:47.087285  3831 net.cpp:382] pool1 -> pool1
I0428 20:30:47.087319  3831 net.cpp:124] Setting up pool1
I0428 20:30:47.087327  3831 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:47.087329  3831 net.cpp:139] Memory required for data: 29434800
I0428 20:30:47.087332  3831 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:47.087354  3831 net.cpp:86] Creating Layer ip1
I0428 20:30:47.087365  3831 net.cpp:408] ip1 <- pool1
I0428 20:30:47.087378  3831 net.cpp:382] ip1 -> ip1
I0428 20:30:47.087501  3831 net.cpp:124] Setting up ip1
I0428 20:30:47.087519  3831 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:47.087523  3831 net.cpp:139] Memory required for data: 29444800
I0428 20:30:47.087530  3831 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:47.087537  3831 net.cpp:86] Creating Layer relu1
I0428 20:30:47.087539  3831 net.cpp:408] relu1 <- ip1
I0428 20:30:47.087544  3831 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:47.087709  3831 net.cpp:124] Setting up relu1
I0428 20:30:47.087718  3831 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:47.087723  3831 net.cpp:139] Memory required for data: 29454800
I0428 20:30:47.087726  3831 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:47.087733  3831 net.cpp:86] Creating Layer ip2
I0428 20:30:47.087736  3831 net.cpp:408] ip2 <- ip1
I0428 20:30:47.087743  3831 net.cpp:382] ip2 -> ip2
I0428 20:30:47.087862  3831 net.cpp:124] Setting up ip2
I0428 20:30:47.087868  3831 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:47.087872  3831 net.cpp:139] Memory required for data: 29458800
I0428 20:30:47.087877  3831 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:47.087880  3831 net.cpp:86] Creating Layer relu2
I0428 20:30:47.087883  3831 net.cpp:408] relu2 <- ip2
I0428 20:30:47.087903  3831 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:47.088120  3831 net.cpp:124] Setting up relu2
I0428 20:30:47.088129  3831 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:47.088132  3831 net.cpp:139] Memory required for data: 29462800
I0428 20:30:47.088135  3831 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:47.088143  3831 net.cpp:86] Creating Layer ip3
I0428 20:30:47.088146  3831 net.cpp:408] ip3 <- ip2
I0428 20:30:47.088151  3831 net.cpp:382] ip3 -> ip3
I0428 20:30:47.088309  3831 net.cpp:124] Setting up ip3
I0428 20:30:47.088330  3831 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:47.088335  3831 net.cpp:139] Memory required for data: 29466800
I0428 20:30:47.088356  3831 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:47.088376  3831 net.cpp:86] Creating Layer relu3
I0428 20:30:47.088379  3831 net.cpp:408] relu3 <- ip3
I0428 20:30:47.088383  3831 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:47.089282  3831 net.cpp:124] Setting up relu3
I0428 20:30:47.089308  3831 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:47.089313  3831 net.cpp:139] Memory required for data: 29470800
I0428 20:30:47.089331  3831 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:47.089337  3831 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:47.089340  3831 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:47.089360  3831 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:47.089368  3831 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:47.089404  3831 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:47.089409  3831 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:47.089414  3831 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:47.089417  3831 net.cpp:139] Memory required for data: 29478800
I0428 20:30:47.089421  3831 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:47.089426  3831 net.cpp:86] Creating Layer accuracy
I0428 20:30:47.089428  3831 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:47.089432  3831 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:47.089437  3831 net.cpp:382] accuracy -> accuracy
I0428 20:30:47.089443  3831 net.cpp:124] Setting up accuracy
I0428 20:30:47.089447  3831 net.cpp:131] Top shape: (1)
I0428 20:30:47.089450  3831 net.cpp:139] Memory required for data: 29478804
I0428 20:30:47.089453  3831 layer_factory.hpp:77] Creating layer loss
I0428 20:30:47.089458  3831 net.cpp:86] Creating Layer loss
I0428 20:30:47.089462  3831 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:47.089465  3831 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:47.089475  3831 net.cpp:382] loss -> loss
I0428 20:30:47.089485  3831 layer_factory.hpp:77] Creating layer loss
I0428 20:30:47.089717  3831 net.cpp:124] Setting up loss
I0428 20:30:47.089727  3831 net.cpp:131] Top shape: (1)
I0428 20:30:47.089730  3831 net.cpp:134]     with loss weight 1
I0428 20:30:47.089746  3831 net.cpp:139] Memory required for data: 29478808
I0428 20:30:47.089750  3831 net.cpp:200] loss needs backward computation.
I0428 20:30:47.089753  3831 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:47.089757  3831 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:47.089761  3831 net.cpp:200] relu3 needs backward computation.
I0428 20:30:47.089763  3831 net.cpp:200] ip3 needs backward computation.
I0428 20:30:47.089766  3831 net.cpp:200] relu2 needs backward computation.
I0428 20:30:47.089768  3831 net.cpp:200] ip2 needs backward computation.
I0428 20:30:47.089771  3831 net.cpp:200] relu1 needs backward computation.
I0428 20:30:47.089774  3831 net.cpp:200] ip1 needs backward computation.
I0428 20:30:47.089777  3831 net.cpp:200] pool1 needs backward computation.
I0428 20:30:47.089779  3831 net.cpp:200] conv1 needs backward computation.
I0428 20:30:47.089782  3831 net.cpp:200] pool0 needs backward computation.
I0428 20:30:47.089785  3831 net.cpp:200] conv0 needs backward computation.
I0428 20:30:47.089790  3831 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:47.089793  3831 net.cpp:202] mnist does not need backward computation.
I0428 20:30:47.089797  3831 net.cpp:244] This network produces output accuracy
I0428 20:30:47.089799  3831 net.cpp:244] This network produces output loss
I0428 20:30:47.089812  3831 net.cpp:257] Network initialization done.
I0428 20:30:47.089854  3831 solver.cpp:56] Solver scaffolding done.
I0428 20:30:47.090190  3831 caffe.cpp:248] Starting Optimization
I0428 20:30:47.090196  3831 solver.cpp:273] Solving LeNet
I0428 20:30:47.090199  3831 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:47.090484  3831 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:47.186429  3838 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:47.188956  3831 solver.cpp:398]     Test net output #0: accuracy = 0.0905
I0428 20:30:47.188989  3831 solver.cpp:398]     Test net output #1: loss = 2.3151 (* 1 = 2.3151 loss)
I0428 20:30:47.195058  3831 solver.cpp:219] Iteration 0 (-6.92145e-31 iter/s, 0.104821s/100 iters), loss = 2.30772
I0428 20:30:47.195097  3831 solver.cpp:238]     Train net output #0: loss = 2.30772 (* 1 = 2.30772 loss)
I0428 20:30:47.195111  3831 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:47.406008  3831 solver.cpp:219] Iteration 100 (474.161 iter/s, 0.210899s/100 iters), loss = 0.779932
I0428 20:30:47.406072  3831 solver.cpp:238]     Train net output #0: loss = 0.779932 (* 1 = 0.779932 loss)
I0428 20:30:47.406085  3831 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:47.621356  3831 solver.cpp:219] Iteration 200 (464.543 iter/s, 0.215265s/100 iters), loss = 0.283665
I0428 20:30:47.621407  3831 solver.cpp:238]     Train net output #0: loss = 0.283665 (* 1 = 0.283665 loss)
I0428 20:30:47.621419  3831 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:47.845819  3831 solver.cpp:219] Iteration 300 (445.638 iter/s, 0.224397s/100 iters), loss = 0.251409
I0428 20:30:47.845863  3831 solver.cpp:238]     Train net output #0: loss = 0.251409 (* 1 = 0.251409 loss)
I0428 20:30:47.845875  3831 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:48.060232  3831 solver.cpp:219] Iteration 400 (466.514 iter/s, 0.214356s/100 iters), loss = 0.245383
I0428 20:30:48.060264  3831 solver.cpp:238]     Train net output #0: loss = 0.245383 (* 1 = 0.245383 loss)
I0428 20:30:48.060272  3831 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:48.286705  3831 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:48.393542  3838 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:48.396389  3831 solver.cpp:398]     Test net output #0: accuracy = 0.947
I0428 20:30:48.396417  3831 solver.cpp:398]     Test net output #1: loss = 0.179225 (* 1 = 0.179225 loss)
I0428 20:30:48.398375  3831 solver.cpp:219] Iteration 500 (295.78 iter/s, 0.338089s/100 iters), loss = 0.168549
I0428 20:30:48.398406  3831 solver.cpp:238]     Train net output #0: loss = 0.168549 (* 1 = 0.168549 loss)
I0428 20:30:48.398433  3831 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:48.631739  3831 solver.cpp:219] Iteration 600 (428.618 iter/s, 0.233308s/100 iters), loss = 0.101689
I0428 20:30:48.631799  3831 solver.cpp:238]     Train net output #0: loss = 0.101689 (* 1 = 0.101689 loss)
I0428 20:30:48.631814  3831 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:48.863849  3831 solver.cpp:219] Iteration 700 (430.975 iter/s, 0.232032s/100 iters), loss = 0.276028
I0428 20:30:48.863904  3831 solver.cpp:238]     Train net output #0: loss = 0.276028 (* 1 = 0.276028 loss)
I0428 20:30:48.863919  3831 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:49.082693  3831 solver.cpp:219] Iteration 800 (457.089 iter/s, 0.218776s/100 iters), loss = 0.371479
I0428 20:30:49.082727  3831 solver.cpp:238]     Train net output #0: loss = 0.371479 (* 1 = 0.371479 loss)
I0428 20:30:49.082736  3831 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:49.296965  3831 solver.cpp:219] Iteration 900 (466.813 iter/s, 0.214219s/100 iters), loss = 0.296185
I0428 20:30:49.297011  3831 solver.cpp:238]     Train net output #0: loss = 0.296185 (* 1 = 0.296185 loss)
I0428 20:30:49.297019  3831 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:49.364974  3837 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:49.505820  3831 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:49.508188  3831 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:49.509636  3831 solver.cpp:311] Iteration 1000, loss = 0.0667121
I0428 20:30:49.509662  3831 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:49.612663  3838 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:49.616266  3831 solver.cpp:398]     Test net output #0: accuracy = 0.9731
I0428 20:30:49.616291  3831 solver.cpp:398]     Test net output #1: loss = 0.0904291 (* 1 = 0.0904291 loss)
I0428 20:30:49.616297  3831 solver.cpp:316] Optimization Done.
I0428 20:30:49.616299  3831 caffe.cpp:259] Optimization Done.
