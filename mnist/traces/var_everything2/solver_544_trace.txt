I0428 19:48:25.782627 26480 caffe.cpp:218] Using GPUs 0
I0428 19:48:25.821014 26480 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:26.354503 26480 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test544.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:26.354648 26480 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test544.prototxt
I0428 19:48:26.355067 26480 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:26.355085 26480 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:26.355190 26480 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:26.355268 26480 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:26.355368 26480 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:26.355391 26480 net.cpp:86] Creating Layer mnist
I0428 19:48:26.355401 26480 net.cpp:382] mnist -> data
I0428 19:48:26.355423 26480 net.cpp:382] mnist -> label
I0428 19:48:26.356513 26480 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:26.358995 26480 net.cpp:124] Setting up mnist
I0428 19:48:26.359026 26480 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:26.359033 26480 net.cpp:131] Top shape: 64 (64)
I0428 19:48:26.359036 26480 net.cpp:139] Memory required for data: 200960
I0428 19:48:26.359043 26480 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:26.359061 26480 net.cpp:86] Creating Layer conv0
I0428 19:48:26.359081 26480 net.cpp:408] conv0 <- data
I0428 19:48:26.359092 26480 net.cpp:382] conv0 -> conv0
I0428 19:48:26.649222 26480 net.cpp:124] Setting up conv0
I0428 19:48:26.649253 26480 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:26.649258 26480 net.cpp:139] Memory required for data: 938240
I0428 19:48:26.649276 26480 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:26.649291 26480 net.cpp:86] Creating Layer pool0
I0428 19:48:26.649297 26480 net.cpp:408] pool0 <- conv0
I0428 19:48:26.649303 26480 net.cpp:382] pool0 -> pool0
I0428 19:48:26.649360 26480 net.cpp:124] Setting up pool0
I0428 19:48:26.649366 26480 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:26.649370 26480 net.cpp:139] Memory required for data: 1122560
I0428 19:48:26.649374 26480 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:26.649387 26480 net.cpp:86] Creating Layer conv1
I0428 19:48:26.649391 26480 net.cpp:408] conv1 <- pool0
I0428 19:48:26.649397 26480 net.cpp:382] conv1 -> conv1
I0428 19:48:26.651593 26480 net.cpp:124] Setting up conv1
I0428 19:48:26.651610 26480 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:48:26.651615 26480 net.cpp:139] Memory required for data: 1155328
I0428 19:48:26.651625 26480 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:26.651634 26480 net.cpp:86] Creating Layer pool1
I0428 19:48:26.651638 26480 net.cpp:408] pool1 <- conv1
I0428 19:48:26.651645 26480 net.cpp:382] pool1 -> pool1
I0428 19:48:26.651691 26480 net.cpp:124] Setting up pool1
I0428 19:48:26.651697 26480 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:48:26.651701 26480 net.cpp:139] Memory required for data: 1163520
I0428 19:48:26.651705 26480 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:26.651715 26480 net.cpp:86] Creating Layer ip1
I0428 19:48:26.651717 26480 net.cpp:408] ip1 <- pool1
I0428 19:48:26.651724 26480 net.cpp:382] ip1 -> ip1
I0428 19:48:26.652840 26480 net.cpp:124] Setting up ip1
I0428 19:48:26.652855 26480 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:26.652859 26480 net.cpp:139] Memory required for data: 1176320
I0428 19:48:26.652869 26480 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:26.652878 26480 net.cpp:86] Creating Layer relu1
I0428 19:48:26.652884 26480 net.cpp:408] relu1 <- ip1
I0428 19:48:26.652889 26480 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:26.653111 26480 net.cpp:124] Setting up relu1
I0428 19:48:26.653122 26480 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:26.653126 26480 net.cpp:139] Memory required for data: 1189120
I0428 19:48:26.653129 26480 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:26.653137 26480 net.cpp:86] Creating Layer ip2
I0428 19:48:26.653141 26480 net.cpp:408] ip2 <- ip1
I0428 19:48:26.653148 26480 net.cpp:382] ip2 -> ip2
I0428 19:48:26.653285 26480 net.cpp:124] Setting up ip2
I0428 19:48:26.653293 26480 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:26.653296 26480 net.cpp:139] Memory required for data: 1201920
I0428 19:48:26.653303 26480 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:26.653311 26480 net.cpp:86] Creating Layer relu2
I0428 19:48:26.653314 26480 net.cpp:408] relu2 <- ip2
I0428 19:48:26.653321 26480 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:26.654182 26480 net.cpp:124] Setting up relu2
I0428 19:48:26.654196 26480 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:48:26.654201 26480 net.cpp:139] Memory required for data: 1214720
I0428 19:48:26.654206 26480 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:26.654213 26480 net.cpp:86] Creating Layer ip3
I0428 19:48:26.654217 26480 net.cpp:408] ip3 <- ip2
I0428 19:48:26.654224 26480 net.cpp:382] ip3 -> ip3
I0428 19:48:26.654353 26480 net.cpp:124] Setting up ip3
I0428 19:48:26.654363 26480 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:26.654366 26480 net.cpp:139] Memory required for data: 1217280
I0428 19:48:26.654376 26480 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:26.654383 26480 net.cpp:86] Creating Layer relu3
I0428 19:48:26.654386 26480 net.cpp:408] relu3 <- ip3
I0428 19:48:26.654392 26480 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:26.654603 26480 net.cpp:124] Setting up relu3
I0428 19:48:26.654614 26480 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:26.654618 26480 net.cpp:139] Memory required for data: 1219840
I0428 19:48:26.654623 26480 layer_factory.hpp:77] Creating layer loss
I0428 19:48:26.654630 26480 net.cpp:86] Creating Layer loss
I0428 19:48:26.654634 26480 net.cpp:408] loss <- ip3
I0428 19:48:26.654639 26480 net.cpp:408] loss <- label
I0428 19:48:26.654644 26480 net.cpp:382] loss -> loss
I0428 19:48:26.654664 26480 layer_factory.hpp:77] Creating layer loss
I0428 19:48:26.654959 26480 net.cpp:124] Setting up loss
I0428 19:48:26.654970 26480 net.cpp:131] Top shape: (1)
I0428 19:48:26.654974 26480 net.cpp:134]     with loss weight 1
I0428 19:48:26.654990 26480 net.cpp:139] Memory required for data: 1219844
I0428 19:48:26.654994 26480 net.cpp:200] loss needs backward computation.
I0428 19:48:26.654999 26480 net.cpp:200] relu3 needs backward computation.
I0428 19:48:26.655002 26480 net.cpp:200] ip3 needs backward computation.
I0428 19:48:26.655005 26480 net.cpp:200] relu2 needs backward computation.
I0428 19:48:26.655009 26480 net.cpp:200] ip2 needs backward computation.
I0428 19:48:26.655012 26480 net.cpp:200] relu1 needs backward computation.
I0428 19:48:26.655015 26480 net.cpp:200] ip1 needs backward computation.
I0428 19:48:26.655019 26480 net.cpp:200] pool1 needs backward computation.
I0428 19:48:26.655022 26480 net.cpp:200] conv1 needs backward computation.
I0428 19:48:26.655025 26480 net.cpp:200] pool0 needs backward computation.
I0428 19:48:26.655030 26480 net.cpp:200] conv0 needs backward computation.
I0428 19:48:26.655035 26480 net.cpp:202] mnist does not need backward computation.
I0428 19:48:26.655040 26480 net.cpp:244] This network produces output loss
I0428 19:48:26.655050 26480 net.cpp:257] Network initialization done.
I0428 19:48:26.655429 26480 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test544.prototxt
I0428 19:48:26.655462 26480 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:26.655572 26480 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:26.655673 26480 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:26.655725 26480 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:26.655740 26480 net.cpp:86] Creating Layer mnist
I0428 19:48:26.655746 26480 net.cpp:382] mnist -> data
I0428 19:48:26.655755 26480 net.cpp:382] mnist -> label
I0428 19:48:26.655858 26480 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:26.658076 26480 net.cpp:124] Setting up mnist
I0428 19:48:26.658092 26480 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:26.658099 26480 net.cpp:131] Top shape: 100 (100)
I0428 19:48:26.658102 26480 net.cpp:139] Memory required for data: 314000
I0428 19:48:26.658107 26480 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:26.658121 26480 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:26.658125 26480 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:26.658144 26480 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:26.658154 26480 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:26.658215 26480 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:26.658234 26480 net.cpp:131] Top shape: 100 (100)
I0428 19:48:26.658239 26480 net.cpp:131] Top shape: 100 (100)
I0428 19:48:26.658242 26480 net.cpp:139] Memory required for data: 314800
I0428 19:48:26.658246 26480 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:26.658258 26480 net.cpp:86] Creating Layer conv0
I0428 19:48:26.658262 26480 net.cpp:408] conv0 <- data
I0428 19:48:26.658268 26480 net.cpp:382] conv0 -> conv0
I0428 19:48:26.660238 26480 net.cpp:124] Setting up conv0
I0428 19:48:26.660256 26480 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:26.660261 26480 net.cpp:139] Memory required for data: 1466800
I0428 19:48:26.660271 26480 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:26.660279 26480 net.cpp:86] Creating Layer pool0
I0428 19:48:26.660284 26480 net.cpp:408] pool0 <- conv0
I0428 19:48:26.660292 26480 net.cpp:382] pool0 -> pool0
I0428 19:48:26.660338 26480 net.cpp:124] Setting up pool0
I0428 19:48:26.660346 26480 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:26.660348 26480 net.cpp:139] Memory required for data: 1754800
I0428 19:48:26.660352 26480 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:26.660364 26480 net.cpp:86] Creating Layer conv1
I0428 19:48:26.660368 26480 net.cpp:408] conv1 <- pool0
I0428 19:48:26.660374 26480 net.cpp:382] conv1 -> conv1
I0428 19:48:26.662750 26480 net.cpp:124] Setting up conv1
I0428 19:48:26.662765 26480 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:48:26.662770 26480 net.cpp:139] Memory required for data: 1806000
I0428 19:48:26.662781 26480 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:26.662787 26480 net.cpp:86] Creating Layer pool1
I0428 19:48:26.662791 26480 net.cpp:408] pool1 <- conv1
I0428 19:48:26.662801 26480 net.cpp:382] pool1 -> pool1
I0428 19:48:26.662853 26480 net.cpp:124] Setting up pool1
I0428 19:48:26.662860 26480 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:48:26.662864 26480 net.cpp:139] Memory required for data: 1818800
I0428 19:48:26.662868 26480 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:26.662876 26480 net.cpp:86] Creating Layer ip1
I0428 19:48:26.662879 26480 net.cpp:408] ip1 <- pool1
I0428 19:48:26.662886 26480 net.cpp:382] ip1 -> ip1
I0428 19:48:26.663064 26480 net.cpp:124] Setting up ip1
I0428 19:48:26.663074 26480 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:26.663090 26480 net.cpp:139] Memory required for data: 1838800
I0428 19:48:26.663100 26480 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:26.663106 26480 net.cpp:86] Creating Layer relu1
I0428 19:48:26.663110 26480 net.cpp:408] relu1 <- ip1
I0428 19:48:26.663118 26480 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:26.663322 26480 net.cpp:124] Setting up relu1
I0428 19:48:26.663336 26480 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:26.663341 26480 net.cpp:139] Memory required for data: 1858800
I0428 19:48:26.663344 26480 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:26.663355 26480 net.cpp:86] Creating Layer ip2
I0428 19:48:26.663359 26480 net.cpp:408] ip2 <- ip1
I0428 19:48:26.663365 26480 net.cpp:382] ip2 -> ip2
I0428 19:48:26.663506 26480 net.cpp:124] Setting up ip2
I0428 19:48:26.663514 26480 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:26.663518 26480 net.cpp:139] Memory required for data: 1878800
I0428 19:48:26.663524 26480 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:26.663530 26480 net.cpp:86] Creating Layer relu2
I0428 19:48:26.663535 26480 net.cpp:408] relu2 <- ip2
I0428 19:48:26.663540 26480 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:26.663733 26480 net.cpp:124] Setting up relu2
I0428 19:48:26.663743 26480 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:48:26.663748 26480 net.cpp:139] Memory required for data: 1898800
I0428 19:48:26.663750 26480 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:26.663759 26480 net.cpp:86] Creating Layer ip3
I0428 19:48:26.663763 26480 net.cpp:408] ip3 <- ip2
I0428 19:48:26.663769 26480 net.cpp:382] ip3 -> ip3
I0428 19:48:26.663908 26480 net.cpp:124] Setting up ip3
I0428 19:48:26.663916 26480 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:26.663919 26480 net.cpp:139] Memory required for data: 1902800
I0428 19:48:26.663928 26480 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:26.663935 26480 net.cpp:86] Creating Layer relu3
I0428 19:48:26.663939 26480 net.cpp:408] relu3 <- ip3
I0428 19:48:26.663944 26480 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:26.664866 26480 net.cpp:124] Setting up relu3
I0428 19:48:26.664883 26480 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:26.664887 26480 net.cpp:139] Memory required for data: 1906800
I0428 19:48:26.664892 26480 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:26.664899 26480 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:26.664903 26480 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:26.664908 26480 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:26.664916 26480 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:26.664963 26480 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:26.664969 26480 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:26.664974 26480 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:26.664978 26480 net.cpp:139] Memory required for data: 1914800
I0428 19:48:26.664981 26480 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:26.664988 26480 net.cpp:86] Creating Layer accuracy
I0428 19:48:26.664990 26480 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:26.664996 26480 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:26.665004 26480 net.cpp:382] accuracy -> accuracy
I0428 19:48:26.665010 26480 net.cpp:124] Setting up accuracy
I0428 19:48:26.665015 26480 net.cpp:131] Top shape: (1)
I0428 19:48:26.665025 26480 net.cpp:139] Memory required for data: 1914804
I0428 19:48:26.665030 26480 layer_factory.hpp:77] Creating layer loss
I0428 19:48:26.665036 26480 net.cpp:86] Creating Layer loss
I0428 19:48:26.665040 26480 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:26.665045 26480 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:26.665050 26480 net.cpp:382] loss -> loss
I0428 19:48:26.665058 26480 layer_factory.hpp:77] Creating layer loss
I0428 19:48:26.665347 26480 net.cpp:124] Setting up loss
I0428 19:48:26.665359 26480 net.cpp:131] Top shape: (1)
I0428 19:48:26.665362 26480 net.cpp:134]     with loss weight 1
I0428 19:48:26.665370 26480 net.cpp:139] Memory required for data: 1914808
I0428 19:48:26.665385 26480 net.cpp:200] loss needs backward computation.
I0428 19:48:26.665391 26480 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:26.665396 26480 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:26.665400 26480 net.cpp:200] relu3 needs backward computation.
I0428 19:48:26.665403 26480 net.cpp:200] ip3 needs backward computation.
I0428 19:48:26.665407 26480 net.cpp:200] relu2 needs backward computation.
I0428 19:48:26.665410 26480 net.cpp:200] ip2 needs backward computation.
I0428 19:48:26.665415 26480 net.cpp:200] relu1 needs backward computation.
I0428 19:48:26.665418 26480 net.cpp:200] ip1 needs backward computation.
I0428 19:48:26.665421 26480 net.cpp:200] pool1 needs backward computation.
I0428 19:48:26.665426 26480 net.cpp:200] conv1 needs backward computation.
I0428 19:48:26.665428 26480 net.cpp:200] pool0 needs backward computation.
I0428 19:48:26.665432 26480 net.cpp:200] conv0 needs backward computation.
I0428 19:48:26.665437 26480 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:26.665441 26480 net.cpp:202] mnist does not need backward computation.
I0428 19:48:26.665444 26480 net.cpp:244] This network produces output accuracy
I0428 19:48:26.665449 26480 net.cpp:244] This network produces output loss
I0428 19:48:26.665463 26480 net.cpp:257] Network initialization done.
I0428 19:48:26.665513 26480 solver.cpp:56] Solver scaffolding done.
I0428 19:48:26.665957 26480 caffe.cpp:248] Starting Optimization
I0428 19:48:26.665964 26480 solver.cpp:273] Solving LeNet
I0428 19:48:26.665967 26480 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:26.666967 26480 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:26.670929 26480 blocking_queue.cpp:49] Waiting for data
I0428 19:48:26.744235 26487 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:26.745190 26480 solver.cpp:398]     Test net output #0: accuracy = 0.1037
I0428 19:48:26.745234 26480 solver.cpp:398]     Test net output #1: loss = 2.30871 (* 1 = 2.30871 loss)
I0428 19:48:26.748180 26480 solver.cpp:219] Iteration 0 (-5.18461e-31 iter/s, 0.082177s/100 iters), loss = 2.28772
I0428 19:48:26.748227 26480 solver.cpp:238]     Train net output #0: loss = 2.28772 (* 1 = 2.28772 loss)
I0428 19:48:26.748247 26480 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:26.843214 26480 solver.cpp:219] Iteration 100 (1052.91 iter/s, 0.094975s/100 iters), loss = 1.6354
I0428 19:48:26.843247 26480 solver.cpp:238]     Train net output #0: loss = 1.6354 (* 1 = 1.6354 loss)
I0428 19:48:26.843256 26480 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:26.922073 26480 solver.cpp:219] Iteration 200 (1268.79 iter/s, 0.0788152s/100 iters), loss = 0.728365
I0428 19:48:26.922102 26480 solver.cpp:238]     Train net output #0: loss = 0.728365 (* 1 = 0.728365 loss)
I0428 19:48:26.922111 26480 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:26.997784 26480 solver.cpp:219] Iteration 300 (1321.5 iter/s, 0.0756716s/100 iters), loss = 0.326527
I0428 19:48:26.997812 26480 solver.cpp:238]     Train net output #0: loss = 0.326527 (* 1 = 0.326527 loss)
I0428 19:48:26.997820 26480 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:27.073001 26480 solver.cpp:219] Iteration 400 (1330.16 iter/s, 0.075179s/100 iters), loss = 0.296131
I0428 19:48:27.073030 26480 solver.cpp:238]     Train net output #0: loss = 0.296131 (* 1 = 0.296131 loss)
I0428 19:48:27.073038 26480 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:27.147652 26480 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:27.200563 26487 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:27.201084 26480 solver.cpp:398]     Test net output #0: accuracy = 0.9236
I0428 19:48:27.201107 26480 solver.cpp:398]     Test net output #1: loss = 0.246298 (* 1 = 0.246298 loss)
I0428 19:48:27.201902 26480 solver.cpp:219] Iteration 500 (776.035 iter/s, 0.12886s/100 iters), loss = 0.249997
I0428 19:48:27.201944 26480 solver.cpp:238]     Train net output #0: loss = 0.249997 (* 1 = 0.249997 loss)
I0428 19:48:27.201970 26480 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:27.280488 26480 solver.cpp:219] Iteration 600 (1273.29 iter/s, 0.078537s/100 iters), loss = 0.298579
I0428 19:48:27.280517 26480 solver.cpp:238]     Train net output #0: loss = 0.298579 (* 1 = 0.298579 loss)
I0428 19:48:27.280524 26480 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:27.358857 26480 solver.cpp:219] Iteration 700 (1276.65 iter/s, 0.0783298s/100 iters), loss = 0.186119
I0428 19:48:27.358889 26480 solver.cpp:238]     Train net output #0: loss = 0.186119 (* 1 = 0.186119 loss)
I0428 19:48:27.358897 26480 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:27.434587 26480 solver.cpp:219] Iteration 800 (1321.22 iter/s, 0.0756877s/100 iters), loss = 0.198227
I0428 19:48:27.434615 26480 solver.cpp:238]     Train net output #0: loss = 0.198227 (* 1 = 0.198227 loss)
I0428 19:48:27.434623 26480 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:27.506826 26480 solver.cpp:219] Iteration 900 (1385 iter/s, 0.0722022s/100 iters), loss = 0.35417
I0428 19:48:27.506865 26480 solver.cpp:238]     Train net output #0: loss = 0.35417 (* 1 = 0.35417 loss)
I0428 19:48:27.506871 26480 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:27.530845 26486 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:27.576681 26480 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:27.577493 26480 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:27.577998 26480 solver.cpp:311] Iteration 1000, loss = 0.17554
I0428 19:48:27.578012 26480 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:27.654405 26487 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:27.654913 26480 solver.cpp:398]     Test net output #0: accuracy = 0.9415
I0428 19:48:27.654948 26480 solver.cpp:398]     Test net output #1: loss = 0.193957 (* 1 = 0.193957 loss)
I0428 19:48:27.654953 26480 solver.cpp:316] Optimization Done.
I0428 19:48:27.654955 26480 caffe.cpp:259] Optimization Done.
