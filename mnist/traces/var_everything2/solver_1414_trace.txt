I0428 20:23:00.397387  2165 caffe.cpp:218] Using GPUs 0
I0428 20:23:00.435089  2165 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:00.946444  2165 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1414.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:00.946590  2165 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1414.prototxt
I0428 20:23:00.946969  2165 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:00.946986  2165 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:00.947077  2165 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:23:00.947152  2165 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:00.947252  2165 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:00.947278  2165 net.cpp:86] Creating Layer mnist
I0428 20:23:00.947289  2165 net.cpp:382] mnist -> data
I0428 20:23:00.947314  2165 net.cpp:382] mnist -> label
I0428 20:23:00.948413  2165 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:00.950889  2165 net.cpp:124] Setting up mnist
I0428 20:23:00.950907  2165 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:00.950913  2165 net.cpp:131] Top shape: 64 (64)
I0428 20:23:00.950917  2165 net.cpp:139] Memory required for data: 200960
I0428 20:23:00.950924  2165 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:00.950940  2165 net.cpp:86] Creating Layer conv0
I0428 20:23:00.950947  2165 net.cpp:408] conv0 <- data
I0428 20:23:00.950959  2165 net.cpp:382] conv0 -> conv0
I0428 20:23:01.226610  2165 net.cpp:124] Setting up conv0
I0428 20:23:01.226637  2165 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:01.226641  2165 net.cpp:139] Memory required for data: 7573760
I0428 20:23:01.226689  2165 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:01.226701  2165 net.cpp:86] Creating Layer pool0
I0428 20:23:01.226706  2165 net.cpp:408] pool0 <- conv0
I0428 20:23:01.226711  2165 net.cpp:382] pool0 -> pool0
I0428 20:23:01.226758  2165 net.cpp:124] Setting up pool0
I0428 20:23:01.226765  2165 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:01.226768  2165 net.cpp:139] Memory required for data: 9416960
I0428 20:23:01.226771  2165 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:01.226783  2165 net.cpp:86] Creating Layer conv1
I0428 20:23:01.226786  2165 net.cpp:408] conv1 <- pool0
I0428 20:23:01.226790  2165 net.cpp:382] conv1 -> conv1
I0428 20:23:01.230145  2165 net.cpp:124] Setting up conv1
I0428 20:23:01.230159  2165 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:01.230162  2165 net.cpp:139] Memory required for data: 11055360
I0428 20:23:01.230171  2165 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:01.230178  2165 net.cpp:86] Creating Layer pool1
I0428 20:23:01.230181  2165 net.cpp:408] pool1 <- conv1
I0428 20:23:01.230186  2165 net.cpp:382] pool1 -> pool1
I0428 20:23:01.230237  2165 net.cpp:124] Setting up pool1
I0428 20:23:01.230252  2165 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:01.230254  2165 net.cpp:139] Memory required for data: 11464960
I0428 20:23:01.230257  2165 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:01.230264  2165 net.cpp:86] Creating Layer ip1
I0428 20:23:01.230268  2165 net.cpp:408] ip1 <- pool1
I0428 20:23:01.230273  2165 net.cpp:382] ip1 -> ip1
I0428 20:23:01.230808  2165 net.cpp:124] Setting up ip1
I0428 20:23:01.230815  2165 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:01.230818  2165 net.cpp:139] Memory required for data: 11477760
I0428 20:23:01.230826  2165 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:01.230831  2165 net.cpp:86] Creating Layer relu1
I0428 20:23:01.230834  2165 net.cpp:408] relu1 <- ip1
I0428 20:23:01.230839  2165 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:01.230994  2165 net.cpp:124] Setting up relu1
I0428 20:23:01.231003  2165 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:01.231006  2165 net.cpp:139] Memory required for data: 11490560
I0428 20:23:01.231009  2165 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:01.231015  2165 net.cpp:86] Creating Layer ip2
I0428 20:23:01.231019  2165 net.cpp:408] ip2 <- ip1
I0428 20:23:01.231022  2165 net.cpp:382] ip2 -> ip2
I0428 20:23:01.231115  2165 net.cpp:124] Setting up ip2
I0428 20:23:01.231122  2165 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:01.231125  2165 net.cpp:139] Memory required for data: 11493120
I0428 20:23:01.231130  2165 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:01.231137  2165 net.cpp:86] Creating Layer relu2
I0428 20:23:01.231139  2165 net.cpp:408] relu2 <- ip2
I0428 20:23:01.231143  2165 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:01.231930  2165 net.cpp:124] Setting up relu2
I0428 20:23:01.231957  2165 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:01.231961  2165 net.cpp:139] Memory required for data: 11495680
I0428 20:23:01.231966  2165 layer_factory.hpp:77] Creating layer loss
I0428 20:23:01.231971  2165 net.cpp:86] Creating Layer loss
I0428 20:23:01.231974  2165 net.cpp:408] loss <- ip2
I0428 20:23:01.231979  2165 net.cpp:408] loss <- label
I0428 20:23:01.231986  2165 net.cpp:382] loss -> loss
I0428 20:23:01.232004  2165 layer_factory.hpp:77] Creating layer loss
I0428 20:23:01.232225  2165 net.cpp:124] Setting up loss
I0428 20:23:01.232235  2165 net.cpp:131] Top shape: (1)
I0428 20:23:01.232239  2165 net.cpp:134]     with loss weight 1
I0428 20:23:01.232270  2165 net.cpp:139] Memory required for data: 11495684
I0428 20:23:01.232273  2165 net.cpp:200] loss needs backward computation.
I0428 20:23:01.232277  2165 net.cpp:200] relu2 needs backward computation.
I0428 20:23:01.232280  2165 net.cpp:200] ip2 needs backward computation.
I0428 20:23:01.232283  2165 net.cpp:200] relu1 needs backward computation.
I0428 20:23:01.232286  2165 net.cpp:200] ip1 needs backward computation.
I0428 20:23:01.232300  2165 net.cpp:200] pool1 needs backward computation.
I0428 20:23:01.232303  2165 net.cpp:200] conv1 needs backward computation.
I0428 20:23:01.232306  2165 net.cpp:200] pool0 needs backward computation.
I0428 20:23:01.232309  2165 net.cpp:200] conv0 needs backward computation.
I0428 20:23:01.232313  2165 net.cpp:202] mnist does not need backward computation.
I0428 20:23:01.232331  2165 net.cpp:244] This network produces output loss
I0428 20:23:01.232339  2165 net.cpp:257] Network initialization done.
I0428 20:23:01.232630  2165 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1414.prototxt
I0428 20:23:01.232655  2165 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:01.232739  2165 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:23:01.232801  2165 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:01.232870  2165 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:01.232899  2165 net.cpp:86] Creating Layer mnist
I0428 20:23:01.232905  2165 net.cpp:382] mnist -> data
I0428 20:23:01.232913  2165 net.cpp:382] mnist -> label
I0428 20:23:01.233012  2165 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:01.234185  2165 net.cpp:124] Setting up mnist
I0428 20:23:01.234215  2165 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:01.234220  2165 net.cpp:131] Top shape: 100 (100)
I0428 20:23:01.234222  2165 net.cpp:139] Memory required for data: 314000
I0428 20:23:01.234241  2165 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:01.234266  2165 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:01.234269  2165 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:01.234274  2165 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:01.234282  2165 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:01.234334  2165 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:01.234344  2165 net.cpp:131] Top shape: 100 (100)
I0428 20:23:01.234349  2165 net.cpp:131] Top shape: 100 (100)
I0428 20:23:01.234351  2165 net.cpp:139] Memory required for data: 314800
I0428 20:23:01.234354  2165 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:01.234364  2165 net.cpp:86] Creating Layer conv0
I0428 20:23:01.234366  2165 net.cpp:408] conv0 <- data
I0428 20:23:01.234371  2165 net.cpp:382] conv0 -> conv0
I0428 20:23:01.235983  2165 net.cpp:124] Setting up conv0
I0428 20:23:01.236012  2165 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:01.236016  2165 net.cpp:139] Memory required for data: 11834800
I0428 20:23:01.236026  2165 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:01.236032  2165 net.cpp:86] Creating Layer pool0
I0428 20:23:01.236035  2165 net.cpp:408] pool0 <- conv0
I0428 20:23:01.236039  2165 net.cpp:382] pool0 -> pool0
I0428 20:23:01.236074  2165 net.cpp:124] Setting up pool0
I0428 20:23:01.236079  2165 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:01.236083  2165 net.cpp:139] Memory required for data: 14714800
I0428 20:23:01.236085  2165 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:01.236093  2165 net.cpp:86] Creating Layer conv1
I0428 20:23:01.236096  2165 net.cpp:408] conv1 <- pool0
I0428 20:23:01.236101  2165 net.cpp:382] conv1 -> conv1
I0428 20:23:01.239208  2165 net.cpp:124] Setting up conv1
I0428 20:23:01.239220  2165 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:01.239224  2165 net.cpp:139] Memory required for data: 17274800
I0428 20:23:01.239233  2165 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:01.239238  2165 net.cpp:86] Creating Layer pool1
I0428 20:23:01.239241  2165 net.cpp:408] pool1 <- conv1
I0428 20:23:01.239245  2165 net.cpp:382] pool1 -> pool1
I0428 20:23:01.239302  2165 net.cpp:124] Setting up pool1
I0428 20:23:01.239308  2165 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:01.239311  2165 net.cpp:139] Memory required for data: 17914800
I0428 20:23:01.239315  2165 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:01.239336  2165 net.cpp:86] Creating Layer ip1
I0428 20:23:01.239339  2165 net.cpp:408] ip1 <- pool1
I0428 20:23:01.239344  2165 net.cpp:382] ip1 -> ip1
I0428 20:23:01.239928  2165 net.cpp:124] Setting up ip1
I0428 20:23:01.239936  2165 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:01.239955  2165 net.cpp:139] Memory required for data: 17934800
I0428 20:23:01.239962  2165 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:01.239967  2165 net.cpp:86] Creating Layer relu1
I0428 20:23:01.239971  2165 net.cpp:408] relu1 <- ip1
I0428 20:23:01.239975  2165 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:01.240205  2165 net.cpp:124] Setting up relu1
I0428 20:23:01.240214  2165 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:01.240218  2165 net.cpp:139] Memory required for data: 17954800
I0428 20:23:01.240221  2165 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:01.240232  2165 net.cpp:86] Creating Layer ip2
I0428 20:23:01.240236  2165 net.cpp:408] ip2 <- ip1
I0428 20:23:01.240241  2165 net.cpp:382] ip2 -> ip2
I0428 20:23:01.240357  2165 net.cpp:124] Setting up ip2
I0428 20:23:01.240367  2165 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:01.240370  2165 net.cpp:139] Memory required for data: 17958800
I0428 20:23:01.240375  2165 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:01.240381  2165 net.cpp:86] Creating Layer relu2
I0428 20:23:01.240383  2165 net.cpp:408] relu2 <- ip2
I0428 20:23:01.240387  2165 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:01.240569  2165 net.cpp:124] Setting up relu2
I0428 20:23:01.240577  2165 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:01.240581  2165 net.cpp:139] Memory required for data: 17962800
I0428 20:23:01.240584  2165 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:23:01.240589  2165 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:23:01.240592  2165 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:23:01.240597  2165 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:23:01.240613  2165 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:23:01.240650  2165 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:23:01.240658  2165 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:01.240663  2165 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:01.240665  2165 net.cpp:139] Memory required for data: 17970800
I0428 20:23:01.240669  2165 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:01.240674  2165 net.cpp:86] Creating Layer accuracy
I0428 20:23:01.240677  2165 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:23:01.240681  2165 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:01.240686  2165 net.cpp:382] accuracy -> accuracy
I0428 20:23:01.240694  2165 net.cpp:124] Setting up accuracy
I0428 20:23:01.240698  2165 net.cpp:131] Top shape: (1)
I0428 20:23:01.240701  2165 net.cpp:139] Memory required for data: 17970804
I0428 20:23:01.240705  2165 layer_factory.hpp:77] Creating layer loss
I0428 20:23:01.240710  2165 net.cpp:86] Creating Layer loss
I0428 20:23:01.240713  2165 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:23:01.240716  2165 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:01.240722  2165 net.cpp:382] loss -> loss
I0428 20:23:01.240728  2165 layer_factory.hpp:77] Creating layer loss
I0428 20:23:01.241029  2165 net.cpp:124] Setting up loss
I0428 20:23:01.241039  2165 net.cpp:131] Top shape: (1)
I0428 20:23:01.241042  2165 net.cpp:134]     with loss weight 1
I0428 20:23:01.241050  2165 net.cpp:139] Memory required for data: 17970808
I0428 20:23:01.241052  2165 net.cpp:200] loss needs backward computation.
I0428 20:23:01.241056  2165 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:01.241060  2165 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:23:01.241063  2165 net.cpp:200] relu2 needs backward computation.
I0428 20:23:01.241066  2165 net.cpp:200] ip2 needs backward computation.
I0428 20:23:01.241070  2165 net.cpp:200] relu1 needs backward computation.
I0428 20:23:01.241072  2165 net.cpp:200] ip1 needs backward computation.
I0428 20:23:01.241075  2165 net.cpp:200] pool1 needs backward computation.
I0428 20:23:01.241078  2165 net.cpp:200] conv1 needs backward computation.
I0428 20:23:01.241081  2165 net.cpp:200] pool0 needs backward computation.
I0428 20:23:01.241084  2165 net.cpp:200] conv0 needs backward computation.
I0428 20:23:01.241088  2165 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:01.241092  2165 net.cpp:202] mnist does not need backward computation.
I0428 20:23:01.241094  2165 net.cpp:244] This network produces output accuracy
I0428 20:23:01.241098  2165 net.cpp:244] This network produces output loss
I0428 20:23:01.241108  2165 net.cpp:257] Network initialization done.
I0428 20:23:01.241147  2165 solver.cpp:56] Solver scaffolding done.
I0428 20:23:01.241425  2165 caffe.cpp:248] Starting Optimization
I0428 20:23:01.241432  2165 solver.cpp:273] Solving LeNet
I0428 20:23:01.241435  2165 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:01.242252  2165 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:01.300850  2165 blocking_queue.cpp:49] Waiting for data
I0428 20:23:01.331372  2172 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:01.332470  2165 solver.cpp:398]     Test net output #0: accuracy = 0.1074
I0428 20:23:01.332489  2165 solver.cpp:398]     Test net output #1: loss = 2.30765 (* 1 = 2.30765 loss)
I0428 20:23:01.338238  2165 solver.cpp:219] Iteration 0 (-1.80098e-31 iter/s, 0.0967793s/100 iters), loss = 2.28988
I0428 20:23:01.338263  2165 solver.cpp:238]     Train net output #0: loss = 2.28988 (* 1 = 2.28988 loss)
I0428 20:23:01.338305  2165 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:01.565397  2165 solver.cpp:219] Iteration 100 (440.306 iter/s, 0.227115s/100 iters), loss = 0.131746
I0428 20:23:01.565430  2165 solver.cpp:238]     Train net output #0: loss = 0.131746 (* 1 = 0.131746 loss)
I0428 20:23:01.565438  2165 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:01.778115  2165 solver.cpp:219] Iteration 200 (470.218 iter/s, 0.212667s/100 iters), loss = 0.126309
I0428 20:23:01.778151  2165 solver.cpp:238]     Train net output #0: loss = 0.126309 (* 1 = 0.126309 loss)
I0428 20:23:01.778159  2165 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:01.991041  2165 solver.cpp:219] Iteration 300 (469.752 iter/s, 0.212878s/100 iters), loss = 0.184587
I0428 20:23:01.991068  2165 solver.cpp:238]     Train net output #0: loss = 0.184587 (* 1 = 0.184587 loss)
I0428 20:23:01.991075  2165 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:02.223747  2165 solver.cpp:219] Iteration 400 (429.813 iter/s, 0.232659s/100 iters), loss = 0.0783782
I0428 20:23:02.223784  2165 solver.cpp:238]     Train net output #0: loss = 0.0783781 (* 1 = 0.0783781 loss)
I0428 20:23:02.223793  2165 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:02.449702  2165 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:02.538441  2172 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:02.539747  2165 solver.cpp:398]     Test net output #0: accuracy = 0.9759
I0428 20:23:02.539774  2165 solver.cpp:398]     Test net output #1: loss = 0.0720128 (* 1 = 0.0720128 loss)
I0428 20:23:02.542037  2165 solver.cpp:219] Iteration 500 (314.235 iter/s, 0.318234s/100 iters), loss = 0.0855252
I0428 20:23:02.542065  2165 solver.cpp:238]     Train net output #0: loss = 0.0855252 (* 1 = 0.0855252 loss)
I0428 20:23:02.542073  2165 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:02.771075  2165 solver.cpp:219] Iteration 600 (436.695 iter/s, 0.228993s/100 iters), loss = 0.0824431
I0428 20:23:02.771111  2165 solver.cpp:238]     Train net output #0: loss = 0.0824431 (* 1 = 0.0824431 loss)
I0428 20:23:02.771119  2165 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:02.993499  2165 solver.cpp:219] Iteration 700 (449.699 iter/s, 0.222371s/100 iters), loss = 0.090124
I0428 20:23:02.993535  2165 solver.cpp:238]     Train net output #0: loss = 0.090124 (* 1 = 0.090124 loss)
I0428 20:23:02.993541  2165 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:03.217141  2165 solver.cpp:219] Iteration 800 (447.244 iter/s, 0.223591s/100 iters), loss = 0.23192
I0428 20:23:03.217209  2165 solver.cpp:238]     Train net output #0: loss = 0.23192 (* 1 = 0.23192 loss)
I0428 20:23:03.217222  2165 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:03.443596  2165 solver.cpp:219] Iteration 900 (441.742 iter/s, 0.226377s/100 iters), loss = 0.199889
I0428 20:23:03.443625  2165 solver.cpp:238]     Train net output #0: loss = 0.199889 (* 1 = 0.199889 loss)
I0428 20:23:03.443632  2165 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:03.524781  2171 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:03.681543  2165 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:03.691598  2165 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:03.694406  2165 solver.cpp:311] Iteration 1000, loss = 0.128576
I0428 20:23:03.694432  2165 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:03.781481  2172 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:03.783824  2165 solver.cpp:398]     Test net output #0: accuracy = 0.9794
I0428 20:23:03.783854  2165 solver.cpp:398]     Test net output #1: loss = 0.0583922 (* 1 = 0.0583922 loss)
I0428 20:23:03.783874  2165 solver.cpp:316] Optimization Done.
I0428 20:23:03.783880  2165 caffe.cpp:259] Optimization Done.
