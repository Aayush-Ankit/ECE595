I0428 20:32:02.069267  4042 caffe.cpp:218] Using GPUs 0
I0428 20:32:02.110138  4042 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:02.630852  4042 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1565.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:02.631021  4042 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1565.prototxt
I0428 20:32:02.631397  4042 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:02.631419  4042 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:02.631515  4042 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:02.631613  4042 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:02.631752  4042 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:02.631785  4042 net.cpp:86] Creating Layer mnist
I0428 20:32:02.631798  4042 net.cpp:382] mnist -> data
I0428 20:32:02.631829  4042 net.cpp:382] mnist -> label
I0428 20:32:02.633085  4042 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:02.635540  4042 net.cpp:124] Setting up mnist
I0428 20:32:02.635560  4042 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:02.635570  4042 net.cpp:131] Top shape: 64 (64)
I0428 20:32:02.635576  4042 net.cpp:139] Memory required for data: 200960
I0428 20:32:02.635588  4042 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:02.635612  4042 net.cpp:86] Creating Layer conv0
I0428 20:32:02.635622  4042 net.cpp:408] conv0 <- data
I0428 20:32:02.635640  4042 net.cpp:382] conv0 -> conv0
I0428 20:32:02.925978  4042 net.cpp:124] Setting up conv0
I0428 20:32:02.926010  4042 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:02.926017  4042 net.cpp:139] Memory required for data: 14946560
I0428 20:32:02.926065  4042 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:02.926087  4042 net.cpp:86] Creating Layer pool0
I0428 20:32:02.926095  4042 net.cpp:408] pool0 <- conv0
I0428 20:32:02.926106  4042 net.cpp:382] pool0 -> pool0
I0428 20:32:02.926167  4042 net.cpp:124] Setting up pool0
I0428 20:32:02.926177  4042 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:02.926183  4042 net.cpp:139] Memory required for data: 18632960
I0428 20:32:02.926189  4042 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:02.926205  4042 net.cpp:86] Creating Layer conv1
I0428 20:32:02.926213  4042 net.cpp:408] conv1 <- pool0
I0428 20:32:02.926223  4042 net.cpp:382] conv1 -> conv1
I0428 20:32:02.928658  4042 net.cpp:124] Setting up conv1
I0428 20:32:02.928675  4042 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:02.928681  4042 net.cpp:139] Memory required for data: 19042560
I0428 20:32:02.928699  4042 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:02.928714  4042 net.cpp:86] Creating Layer pool1
I0428 20:32:02.928724  4042 net.cpp:408] pool1 <- conv1
I0428 20:32:02.928732  4042 net.cpp:382] pool1 -> pool1
I0428 20:32:02.928784  4042 net.cpp:124] Setting up pool1
I0428 20:32:02.928794  4042 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:02.928799  4042 net.cpp:139] Memory required for data: 19144960
I0428 20:32:02.928805  4042 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:02.928827  4042 net.cpp:86] Creating Layer ip1
I0428 20:32:02.928833  4042 net.cpp:408] ip1 <- pool1
I0428 20:32:02.928848  4042 net.cpp:382] ip1 -> ip1
I0428 20:32:02.929000  4042 net.cpp:124] Setting up ip1
I0428 20:32:02.929011  4042 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:02.929016  4042 net.cpp:139] Memory required for data: 19147520
I0428 20:32:02.929029  4042 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:02.929045  4042 net.cpp:86] Creating Layer relu1
I0428 20:32:02.929052  4042 net.cpp:408] relu1 <- ip1
I0428 20:32:02.929061  4042 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:02.929261  4042 net.cpp:124] Setting up relu1
I0428 20:32:02.929273  4042 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:02.929280  4042 net.cpp:139] Memory required for data: 19150080
I0428 20:32:02.929286  4042 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:02.929297  4042 net.cpp:86] Creating Layer ip2
I0428 20:32:02.929304  4042 net.cpp:408] ip2 <- ip1
I0428 20:32:02.929316  4042 net.cpp:382] ip2 -> ip2
I0428 20:32:02.929427  4042 net.cpp:124] Setting up ip2
I0428 20:32:02.929437  4042 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:02.929443  4042 net.cpp:139] Memory required for data: 19152640
I0428 20:32:02.929452  4042 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:02.929466  4042 net.cpp:86] Creating Layer relu2
I0428 20:32:02.929472  4042 net.cpp:408] relu2 <- ip2
I0428 20:32:02.929481  4042 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:02.930284  4042 net.cpp:124] Setting up relu2
I0428 20:32:02.930299  4042 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:02.930305  4042 net.cpp:139] Memory required for data: 19155200
I0428 20:32:02.930311  4042 layer_factory.hpp:77] Creating layer loss
I0428 20:32:02.930323  4042 net.cpp:86] Creating Layer loss
I0428 20:32:02.930330  4042 net.cpp:408] loss <- ip2
I0428 20:32:02.930337  4042 net.cpp:408] loss <- label
I0428 20:32:02.930347  4042 net.cpp:382] loss -> loss
I0428 20:32:02.930375  4042 layer_factory.hpp:77] Creating layer loss
I0428 20:32:02.930657  4042 net.cpp:124] Setting up loss
I0428 20:32:02.930670  4042 net.cpp:131] Top shape: (1)
I0428 20:32:02.930675  4042 net.cpp:134]     with loss weight 1
I0428 20:32:02.930696  4042 net.cpp:139] Memory required for data: 19155204
I0428 20:32:02.930702  4042 net.cpp:200] loss needs backward computation.
I0428 20:32:02.930709  4042 net.cpp:200] relu2 needs backward computation.
I0428 20:32:02.930716  4042 net.cpp:200] ip2 needs backward computation.
I0428 20:32:02.930722  4042 net.cpp:200] relu1 needs backward computation.
I0428 20:32:02.930727  4042 net.cpp:200] ip1 needs backward computation.
I0428 20:32:02.930747  4042 net.cpp:200] pool1 needs backward computation.
I0428 20:32:02.930754  4042 net.cpp:200] conv1 needs backward computation.
I0428 20:32:02.930763  4042 net.cpp:200] pool0 needs backward computation.
I0428 20:32:02.930769  4042 net.cpp:200] conv0 needs backward computation.
I0428 20:32:02.930776  4042 net.cpp:202] mnist does not need backward computation.
I0428 20:32:02.930781  4042 net.cpp:244] This network produces output loss
I0428 20:32:02.930796  4042 net.cpp:257] Network initialization done.
I0428 20:32:02.931118  4042 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1565.prototxt
I0428 20:32:02.931155  4042 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:02.931259  4042 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:02.931371  4042 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:02.931434  4042 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:02.931455  4042 net.cpp:86] Creating Layer mnist
I0428 20:32:02.931464  4042 net.cpp:382] mnist -> data
I0428 20:32:02.931478  4042 net.cpp:382] mnist -> label
I0428 20:32:02.931617  4042 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:02.933804  4042 net.cpp:124] Setting up mnist
I0428 20:32:02.933820  4042 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:02.933830  4042 net.cpp:131] Top shape: 100 (100)
I0428 20:32:02.933835  4042 net.cpp:139] Memory required for data: 314000
I0428 20:32:02.933841  4042 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:02.933852  4042 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:02.933858  4042 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:02.933866  4042 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:02.933877  4042 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:02.934010  4042 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:02.934020  4042 net.cpp:131] Top shape: 100 (100)
I0428 20:32:02.934026  4042 net.cpp:131] Top shape: 100 (100)
I0428 20:32:02.934031  4042 net.cpp:139] Memory required for data: 314800
I0428 20:32:02.934036  4042 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:02.934052  4042 net.cpp:86] Creating Layer conv0
I0428 20:32:02.934061  4042 net.cpp:408] conv0 <- data
I0428 20:32:02.934072  4042 net.cpp:382] conv0 -> conv0
I0428 20:32:02.935611  4042 net.cpp:124] Setting up conv0
I0428 20:32:02.935628  4042 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:02.935634  4042 net.cpp:139] Memory required for data: 23354800
I0428 20:32:02.935649  4042 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:02.935662  4042 net.cpp:86] Creating Layer pool0
I0428 20:32:02.935669  4042 net.cpp:408] pool0 <- conv0
I0428 20:32:02.935678  4042 net.cpp:382] pool0 -> pool0
I0428 20:32:02.935730  4042 net.cpp:124] Setting up pool0
I0428 20:32:02.935739  4042 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:02.935745  4042 net.cpp:139] Memory required for data: 29114800
I0428 20:32:02.935750  4042 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:02.935767  4042 net.cpp:86] Creating Layer conv1
I0428 20:32:02.935775  4042 net.cpp:408] conv1 <- pool0
I0428 20:32:02.935786  4042 net.cpp:382] conv1 -> conv1
I0428 20:32:02.937718  4042 net.cpp:124] Setting up conv1
I0428 20:32:02.937734  4042 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:02.937741  4042 net.cpp:139] Memory required for data: 29754800
I0428 20:32:02.937754  4042 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:02.937765  4042 net.cpp:86] Creating Layer pool1
I0428 20:32:02.937772  4042 net.cpp:408] pool1 <- conv1
I0428 20:32:02.937782  4042 net.cpp:382] pool1 -> pool1
I0428 20:32:02.937827  4042 net.cpp:124] Setting up pool1
I0428 20:32:02.937839  4042 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:02.937844  4042 net.cpp:139] Memory required for data: 29914800
I0428 20:32:02.937849  4042 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:02.937861  4042 net.cpp:86] Creating Layer ip1
I0428 20:32:02.937870  4042 net.cpp:408] ip1 <- pool1
I0428 20:32:02.937883  4042 net.cpp:382] ip1 -> ip1
I0428 20:32:02.938024  4042 net.cpp:124] Setting up ip1
I0428 20:32:02.938035  4042 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:02.938040  4042 net.cpp:139] Memory required for data: 29918800
I0428 20:32:02.938052  4042 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:02.938061  4042 net.cpp:86] Creating Layer relu1
I0428 20:32:02.938068  4042 net.cpp:408] relu1 <- ip1
I0428 20:32:02.938076  4042 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:02.938259  4042 net.cpp:124] Setting up relu1
I0428 20:32:02.938271  4042 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:02.938277  4042 net.cpp:139] Memory required for data: 29922800
I0428 20:32:02.938283  4042 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:02.938295  4042 net.cpp:86] Creating Layer ip2
I0428 20:32:02.938302  4042 net.cpp:408] ip2 <- ip1
I0428 20:32:02.938313  4042 net.cpp:382] ip2 -> ip2
I0428 20:32:02.938426  4042 net.cpp:124] Setting up ip2
I0428 20:32:02.938436  4042 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:02.938441  4042 net.cpp:139] Memory required for data: 29926800
I0428 20:32:02.938450  4042 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:02.938458  4042 net.cpp:86] Creating Layer relu2
I0428 20:32:02.938463  4042 net.cpp:408] relu2 <- ip2
I0428 20:32:02.938473  4042 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:02.938690  4042 net.cpp:124] Setting up relu2
I0428 20:32:02.938701  4042 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:02.938706  4042 net.cpp:139] Memory required for data: 29930800
I0428 20:32:02.938714  4042 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:32:02.938720  4042 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:32:02.938726  4042 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:32:02.938736  4042 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:32:02.938757  4042 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:32:02.938803  4042 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:32:02.938813  4042 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:02.938820  4042 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:02.938827  4042 net.cpp:139] Memory required for data: 29938800
I0428 20:32:02.938832  4042 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:02.938840  4042 net.cpp:86] Creating Layer accuracy
I0428 20:32:02.938846  4042 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:32:02.938853  4042 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:02.938863  4042 net.cpp:382] accuracy -> accuracy
I0428 20:32:02.938874  4042 net.cpp:124] Setting up accuracy
I0428 20:32:02.938884  4042 net.cpp:131] Top shape: (1)
I0428 20:32:02.938894  4042 net.cpp:139] Memory required for data: 29938804
I0428 20:32:02.938899  4042 layer_factory.hpp:77] Creating layer loss
I0428 20:32:02.938908  4042 net.cpp:86] Creating Layer loss
I0428 20:32:02.938915  4042 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:32:02.938926  4042 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:02.938935  4042 net.cpp:382] loss -> loss
I0428 20:32:02.938949  4042 layer_factory.hpp:77] Creating layer loss
I0428 20:32:02.939210  4042 net.cpp:124] Setting up loss
I0428 20:32:02.939223  4042 net.cpp:131] Top shape: (1)
I0428 20:32:02.939227  4042 net.cpp:134]     with loss weight 1
I0428 20:32:02.939237  4042 net.cpp:139] Memory required for data: 29938808
I0428 20:32:02.939244  4042 net.cpp:200] loss needs backward computation.
I0428 20:32:02.939250  4042 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:02.939257  4042 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:32:02.939263  4042 net.cpp:200] relu2 needs backward computation.
I0428 20:32:02.939268  4042 net.cpp:200] ip2 needs backward computation.
I0428 20:32:02.939275  4042 net.cpp:200] relu1 needs backward computation.
I0428 20:32:02.939280  4042 net.cpp:200] ip1 needs backward computation.
I0428 20:32:02.939285  4042 net.cpp:200] pool1 needs backward computation.
I0428 20:32:02.939291  4042 net.cpp:200] conv1 needs backward computation.
I0428 20:32:02.939298  4042 net.cpp:200] pool0 needs backward computation.
I0428 20:32:02.939304  4042 net.cpp:200] conv0 needs backward computation.
I0428 20:32:02.939313  4042 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:02.939321  4042 net.cpp:202] mnist does not need backward computation.
I0428 20:32:02.939326  4042 net.cpp:244] This network produces output accuracy
I0428 20:32:02.939332  4042 net.cpp:244] This network produces output loss
I0428 20:32:02.939353  4042 net.cpp:257] Network initialization done.
I0428 20:32:02.939400  4042 solver.cpp:56] Solver scaffolding done.
I0428 20:32:02.939709  4042 caffe.cpp:248] Starting Optimization
I0428 20:32:02.939716  4042 solver.cpp:273] Solving LeNet
I0428 20:32:02.939721  4042 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:02.939927  4042 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:03.035106  4049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:03.037462  4042 solver.cpp:398]     Test net output #0: accuracy = 0.1351
I0428 20:32:03.037485  4042 solver.cpp:398]     Test net output #1: loss = 2.29322 (* 1 = 2.29322 loss)
I0428 20:32:03.041887  4042 solver.cpp:219] Iteration 0 (0 iter/s, 0.10213s/100 iters), loss = 2.31107
I0428 20:32:03.041916  4042 solver.cpp:238]     Train net output #0: loss = 2.31107 (* 1 = 2.31107 loss)
I0428 20:32:03.041934  4042 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:03.247162  4042 solver.cpp:219] Iteration 100 (487.273 iter/s, 0.205224s/100 iters), loss = 1.14114
I0428 20:32:03.247221  4042 solver.cpp:238]     Train net output #0: loss = 1.14114 (* 1 = 1.14114 loss)
I0428 20:32:03.247242  4042 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:03.470113  4042 solver.cpp:219] Iteration 200 (448.672 iter/s, 0.22288s/100 iters), loss = 0.991183
I0428 20:32:03.470202  4042 solver.cpp:238]     Train net output #0: loss = 0.991183 (* 1 = 0.991183 loss)
I0428 20:32:03.470226  4042 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:03.692047  4042 solver.cpp:219] Iteration 300 (450.785 iter/s, 0.221835s/100 iters), loss = 0.955293
I0428 20:32:03.692111  4042 solver.cpp:238]     Train net output #0: loss = 0.955293 (* 1 = 0.955293 loss)
I0428 20:32:03.692131  4042 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:03.912127  4042 solver.cpp:219] Iteration 400 (454.536 iter/s, 0.220004s/100 iters), loss = 0.44153
I0428 20:32:03.912185  4042 solver.cpp:238]     Train net output #0: loss = 0.44153 (* 1 = 0.44153 loss)
I0428 20:32:03.912206  4042 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:04.128793  4042 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:04.232138  4049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:04.235692  4042 solver.cpp:398]     Test net output #0: accuracy = 0.7684
I0428 20:32:04.235723  4042 solver.cpp:398]     Test net output #1: loss = 0.589803 (* 1 = 0.589803 loss)
I0428 20:32:04.237658  4042 solver.cpp:219] Iteration 500 (307.257 iter/s, 0.32546s/100 iters), loss = 0.56804
I0428 20:32:04.237692  4042 solver.cpp:238]     Train net output #0: loss = 0.56804 (* 1 = 0.56804 loss)
I0428 20:32:04.237705  4042 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:04.443038  4042 solver.cpp:219] Iteration 600 (487.025 iter/s, 0.205328s/100 iters), loss = 0.488007
I0428 20:32:04.443099  4042 solver.cpp:238]     Train net output #0: loss = 0.488007 (* 1 = 0.488007 loss)
I0428 20:32:04.443120  4042 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:04.666143  4042 solver.cpp:219] Iteration 700 (448.365 iter/s, 0.223032s/100 iters), loss = 0.517134
I0428 20:32:04.666206  4042 solver.cpp:238]     Train net output #0: loss = 0.517134 (* 1 = 0.517134 loss)
I0428 20:32:04.666227  4042 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:04.891162  4042 solver.cpp:219] Iteration 800 (444.555 iter/s, 0.224944s/100 iters), loss = 0.796244
I0428 20:32:04.891224  4042 solver.cpp:238]     Train net output #0: loss = 0.796245 (* 1 = 0.796245 loss)
I0428 20:32:04.891247  4042 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:05.116250  4042 solver.cpp:219] Iteration 900 (444.413 iter/s, 0.225016s/100 iters), loss = 0.568417
I0428 20:32:05.116303  4042 solver.cpp:238]     Train net output #0: loss = 0.568417 (* 1 = 0.568417 loss)
I0428 20:32:05.116317  4042 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:05.191730  4048 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:05.339231  4042 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:05.342296  4042 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:05.344169  4042 solver.cpp:311] Iteration 1000, loss = 0.638305
I0428 20:32:05.344195  4042 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:05.444115  4049 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:05.447695  4042 solver.cpp:398]     Test net output #0: accuracy = 0.7832
I0428 20:32:05.447720  4042 solver.cpp:398]     Test net output #1: loss = 0.536754 (* 1 = 0.536754 loss)
I0428 20:32:05.447731  4042 solver.cpp:316] Optimization Done.
I0428 20:32:05.447736  4042 caffe.cpp:259] Optimization Done.
