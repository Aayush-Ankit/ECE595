I0428 20:21:23.397434  1749 caffe.cpp:218] Using GPUs 0
I0428 20:21:23.434047  1749 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:23.889441  1749 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1383.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:23.889605  1749 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1383.prototxt
I0428 20:21:23.890009  1749 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:23.890025  1749 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:23.890142  1749 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:23.890211  1749 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:23.890311  1749 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:23.890331  1749 net.cpp:86] Creating Layer mnist
I0428 20:21:23.890338  1749 net.cpp:382] mnist -> data
I0428 20:21:23.890355  1749 net.cpp:382] mnist -> label
I0428 20:21:23.891276  1749 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:23.893550  1749 net.cpp:124] Setting up mnist
I0428 20:21:23.893581  1749 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:23.893586  1749 net.cpp:131] Top shape: 64 (64)
I0428 20:21:23.893589  1749 net.cpp:139] Memory required for data: 200960
I0428 20:21:23.893595  1749 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:23.893610  1749 net.cpp:86] Creating Layer conv0
I0428 20:21:23.893635  1749 net.cpp:408] conv0 <- data
I0428 20:21:23.893646  1749 net.cpp:382] conv0 -> conv0
I0428 20:21:24.130224  1749 net.cpp:124] Setting up conv0
I0428 20:21:24.130250  1749 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:24.130254  1749 net.cpp:139] Memory required for data: 7573760
I0428 20:21:24.130269  1749 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:24.130281  1749 net.cpp:86] Creating Layer pool0
I0428 20:21:24.130301  1749 net.cpp:408] pool0 <- conv0
I0428 20:21:24.130306  1749 net.cpp:382] pool0 -> pool0
I0428 20:21:24.130368  1749 net.cpp:124] Setting up pool0
I0428 20:21:24.130376  1749 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:24.130379  1749 net.cpp:139] Memory required for data: 9416960
I0428 20:21:24.130383  1749 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:24.130393  1749 net.cpp:86] Creating Layer conv1
I0428 20:21:24.130398  1749 net.cpp:408] conv1 <- pool0
I0428 20:21:24.130403  1749 net.cpp:382] conv1 -> conv1
I0428 20:21:24.132648  1749 net.cpp:124] Setting up conv1
I0428 20:21:24.132663  1749 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:24.132666  1749 net.cpp:139] Memory required for data: 10236160
I0428 20:21:24.132674  1749 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:24.132681  1749 net.cpp:86] Creating Layer pool1
I0428 20:21:24.132684  1749 net.cpp:408] pool1 <- conv1
I0428 20:21:24.132705  1749 net.cpp:382] pool1 -> pool1
I0428 20:21:24.132740  1749 net.cpp:124] Setting up pool1
I0428 20:21:24.132746  1749 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:24.132750  1749 net.cpp:139] Memory required for data: 10440960
I0428 20:21:24.132751  1749 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:24.132758  1749 net.cpp:86] Creating Layer ip1
I0428 20:21:24.132761  1749 net.cpp:408] ip1 <- pool1
I0428 20:21:24.132766  1749 net.cpp:382] ip1 -> ip1
I0428 20:21:24.133751  1749 net.cpp:124] Setting up ip1
I0428 20:21:24.133764  1749 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:24.133767  1749 net.cpp:139] Memory required for data: 10443520
I0428 20:21:24.133775  1749 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:24.133780  1749 net.cpp:86] Creating Layer relu1
I0428 20:21:24.133785  1749 net.cpp:408] relu1 <- ip1
I0428 20:21:24.133788  1749 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:24.133961  1749 net.cpp:124] Setting up relu1
I0428 20:21:24.133970  1749 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:24.133975  1749 net.cpp:139] Memory required for data: 10446080
I0428 20:21:24.133977  1749 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:24.133983  1749 net.cpp:86] Creating Layer ip2
I0428 20:21:24.133986  1749 net.cpp:408] ip2 <- ip1
I0428 20:21:24.133991  1749 net.cpp:382] ip2 -> ip2
I0428 20:21:24.134081  1749 net.cpp:124] Setting up ip2
I0428 20:21:24.134088  1749 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:24.134091  1749 net.cpp:139] Memory required for data: 10458880
I0428 20:21:24.134096  1749 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:24.134101  1749 net.cpp:86] Creating Layer relu2
I0428 20:21:24.134104  1749 net.cpp:408] relu2 <- ip2
I0428 20:21:24.134109  1749 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:24.134856  1749 net.cpp:124] Setting up relu2
I0428 20:21:24.134869  1749 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:21:24.134872  1749 net.cpp:139] Memory required for data: 10471680
I0428 20:21:24.134892  1749 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:24.134899  1749 net.cpp:86] Creating Layer ip3
I0428 20:21:24.134902  1749 net.cpp:408] ip3 <- ip2
I0428 20:21:24.134908  1749 net.cpp:382] ip3 -> ip3
I0428 20:21:24.135025  1749 net.cpp:124] Setting up ip3
I0428 20:21:24.135033  1749 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:24.135036  1749 net.cpp:139] Memory required for data: 10474240
I0428 20:21:24.135045  1749 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:24.135049  1749 net.cpp:86] Creating Layer relu3
I0428 20:21:24.135052  1749 net.cpp:408] relu3 <- ip3
I0428 20:21:24.135056  1749 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:24.135223  1749 net.cpp:124] Setting up relu3
I0428 20:21:24.135232  1749 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:24.135236  1749 net.cpp:139] Memory required for data: 10476800
I0428 20:21:24.135239  1749 layer_factory.hpp:77] Creating layer loss
I0428 20:21:24.135246  1749 net.cpp:86] Creating Layer loss
I0428 20:21:24.135248  1749 net.cpp:408] loss <- ip3
I0428 20:21:24.135252  1749 net.cpp:408] loss <- label
I0428 20:21:24.135257  1749 net.cpp:382] loss -> loss
I0428 20:21:24.135272  1749 layer_factory.hpp:77] Creating layer loss
I0428 20:21:24.135504  1749 net.cpp:124] Setting up loss
I0428 20:21:24.135514  1749 net.cpp:131] Top shape: (1)
I0428 20:21:24.135517  1749 net.cpp:134]     with loss weight 1
I0428 20:21:24.135531  1749 net.cpp:139] Memory required for data: 10476804
I0428 20:21:24.135535  1749 net.cpp:200] loss needs backward computation.
I0428 20:21:24.135538  1749 net.cpp:200] relu3 needs backward computation.
I0428 20:21:24.135541  1749 net.cpp:200] ip3 needs backward computation.
I0428 20:21:24.135545  1749 net.cpp:200] relu2 needs backward computation.
I0428 20:21:24.135547  1749 net.cpp:200] ip2 needs backward computation.
I0428 20:21:24.135550  1749 net.cpp:200] relu1 needs backward computation.
I0428 20:21:24.135552  1749 net.cpp:200] ip1 needs backward computation.
I0428 20:21:24.135555  1749 net.cpp:200] pool1 needs backward computation.
I0428 20:21:24.135558  1749 net.cpp:200] conv1 needs backward computation.
I0428 20:21:24.135561  1749 net.cpp:200] pool0 needs backward computation.
I0428 20:21:24.135565  1749 net.cpp:200] conv0 needs backward computation.
I0428 20:21:24.135567  1749 net.cpp:202] mnist does not need backward computation.
I0428 20:21:24.135571  1749 net.cpp:244] This network produces output loss
I0428 20:21:24.135578  1749 net.cpp:257] Network initialization done.
I0428 20:21:24.135907  1749 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1383.prototxt
I0428 20:21:24.135933  1749 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:24.136036  1749 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:24.136111  1749 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:24.136154  1749 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:24.136167  1749 net.cpp:86] Creating Layer mnist
I0428 20:21:24.136171  1749 net.cpp:382] mnist -> data
I0428 20:21:24.136178  1749 net.cpp:382] mnist -> label
I0428 20:21:24.136270  1749 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:24.138339  1749 net.cpp:124] Setting up mnist
I0428 20:21:24.138352  1749 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:24.138357  1749 net.cpp:131] Top shape: 100 (100)
I0428 20:21:24.138371  1749 net.cpp:139] Memory required for data: 314000
I0428 20:21:24.138375  1749 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:24.138381  1749 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:24.138384  1749 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:24.138389  1749 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:24.138396  1749 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:24.138443  1749 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:24.138449  1749 net.cpp:131] Top shape: 100 (100)
I0428 20:21:24.138453  1749 net.cpp:131] Top shape: 100 (100)
I0428 20:21:24.138455  1749 net.cpp:139] Memory required for data: 314800
I0428 20:21:24.138458  1749 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:24.138466  1749 net.cpp:86] Creating Layer conv0
I0428 20:21:24.138469  1749 net.cpp:408] conv0 <- data
I0428 20:21:24.138473  1749 net.cpp:382] conv0 -> conv0
I0428 20:21:24.140239  1749 net.cpp:124] Setting up conv0
I0428 20:21:24.140254  1749 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:24.140256  1749 net.cpp:139] Memory required for data: 11834800
I0428 20:21:24.140265  1749 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:24.140271  1749 net.cpp:86] Creating Layer pool0
I0428 20:21:24.140290  1749 net.cpp:408] pool0 <- conv0
I0428 20:21:24.140295  1749 net.cpp:382] pool0 -> pool0
I0428 20:21:24.140331  1749 net.cpp:124] Setting up pool0
I0428 20:21:24.140336  1749 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:24.140339  1749 net.cpp:139] Memory required for data: 14714800
I0428 20:21:24.140342  1749 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:24.140350  1749 net.cpp:86] Creating Layer conv1
I0428 20:21:24.140353  1749 net.cpp:408] conv1 <- pool0
I0428 20:21:24.140358  1749 net.cpp:382] conv1 -> conv1
I0428 20:21:24.142313  1749 net.cpp:124] Setting up conv1
I0428 20:21:24.142343  1749 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:24.142346  1749 net.cpp:139] Memory required for data: 15994800
I0428 20:21:24.142354  1749 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:24.142360  1749 net.cpp:86] Creating Layer pool1
I0428 20:21:24.142379  1749 net.cpp:408] pool1 <- conv1
I0428 20:21:24.142385  1749 net.cpp:382] pool1 -> pool1
I0428 20:21:24.142434  1749 net.cpp:124] Setting up pool1
I0428 20:21:24.142439  1749 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:24.142442  1749 net.cpp:139] Memory required for data: 16314800
I0428 20:21:24.142446  1749 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:24.142458  1749 net.cpp:86] Creating Layer ip1
I0428 20:21:24.142462  1749 net.cpp:408] ip1 <- pool1
I0428 20:21:24.142467  1749 net.cpp:382] ip1 -> ip1
I0428 20:21:24.142613  1749 net.cpp:124] Setting up ip1
I0428 20:21:24.142621  1749 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:24.142634  1749 net.cpp:139] Memory required for data: 16318800
I0428 20:21:24.142642  1749 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:24.142653  1749 net.cpp:86] Creating Layer relu1
I0428 20:21:24.142657  1749 net.cpp:408] relu1 <- ip1
I0428 20:21:24.142660  1749 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:24.142827  1749 net.cpp:124] Setting up relu1
I0428 20:21:24.142835  1749 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:24.142838  1749 net.cpp:139] Memory required for data: 16322800
I0428 20:21:24.142841  1749 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:24.142848  1749 net.cpp:86] Creating Layer ip2
I0428 20:21:24.142851  1749 net.cpp:408] ip2 <- ip1
I0428 20:21:24.142856  1749 net.cpp:382] ip2 -> ip2
I0428 20:21:24.142952  1749 net.cpp:124] Setting up ip2
I0428 20:21:24.142959  1749 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:24.142963  1749 net.cpp:139] Memory required for data: 16342800
I0428 20:21:24.142968  1749 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:24.142972  1749 net.cpp:86] Creating Layer relu2
I0428 20:21:24.142976  1749 net.cpp:408] relu2 <- ip2
I0428 20:21:24.142979  1749 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:24.143129  1749 net.cpp:124] Setting up relu2
I0428 20:21:24.143138  1749 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:21:24.143141  1749 net.cpp:139] Memory required for data: 16362800
I0428 20:21:24.143144  1749 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:24.143149  1749 net.cpp:86] Creating Layer ip3
I0428 20:21:24.143152  1749 net.cpp:408] ip3 <- ip2
I0428 20:21:24.143157  1749 net.cpp:382] ip3 -> ip3
I0428 20:21:24.143287  1749 net.cpp:124] Setting up ip3
I0428 20:21:24.143296  1749 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:24.143298  1749 net.cpp:139] Memory required for data: 16366800
I0428 20:21:24.143306  1749 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:24.143311  1749 net.cpp:86] Creating Layer relu3
I0428 20:21:24.143313  1749 net.cpp:408] relu3 <- ip3
I0428 20:21:24.143317  1749 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:24.144244  1749 net.cpp:124] Setting up relu3
I0428 20:21:24.144256  1749 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:24.144259  1749 net.cpp:139] Memory required for data: 16370800
I0428 20:21:24.144269  1749 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:24.144274  1749 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:24.144279  1749 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:24.144284  1749 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:24.144289  1749 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:24.144326  1749 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:24.144331  1749 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:24.144335  1749 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:24.144337  1749 net.cpp:139] Memory required for data: 16378800
I0428 20:21:24.144340  1749 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:24.144351  1749 net.cpp:86] Creating Layer accuracy
I0428 20:21:24.144353  1749 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:24.144363  1749 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:24.144367  1749 net.cpp:382] accuracy -> accuracy
I0428 20:21:24.144373  1749 net.cpp:124] Setting up accuracy
I0428 20:21:24.144377  1749 net.cpp:131] Top shape: (1)
I0428 20:21:24.144381  1749 net.cpp:139] Memory required for data: 16378804
I0428 20:21:24.144383  1749 layer_factory.hpp:77] Creating layer loss
I0428 20:21:24.144387  1749 net.cpp:86] Creating Layer loss
I0428 20:21:24.144389  1749 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:24.144393  1749 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:24.144397  1749 net.cpp:382] loss -> loss
I0428 20:21:24.144403  1749 layer_factory.hpp:77] Creating layer loss
I0428 20:21:24.144657  1749 net.cpp:124] Setting up loss
I0428 20:21:24.144667  1749 net.cpp:131] Top shape: (1)
I0428 20:21:24.144670  1749 net.cpp:134]     with loss weight 1
I0428 20:21:24.144686  1749 net.cpp:139] Memory required for data: 16378808
I0428 20:21:24.144690  1749 net.cpp:200] loss needs backward computation.
I0428 20:21:24.144693  1749 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:24.144697  1749 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:24.144700  1749 net.cpp:200] relu3 needs backward computation.
I0428 20:21:24.144702  1749 net.cpp:200] ip3 needs backward computation.
I0428 20:21:24.144706  1749 net.cpp:200] relu2 needs backward computation.
I0428 20:21:24.144707  1749 net.cpp:200] ip2 needs backward computation.
I0428 20:21:24.144711  1749 net.cpp:200] relu1 needs backward computation.
I0428 20:21:24.144713  1749 net.cpp:200] ip1 needs backward computation.
I0428 20:21:24.144716  1749 net.cpp:200] pool1 needs backward computation.
I0428 20:21:24.144719  1749 net.cpp:200] conv1 needs backward computation.
I0428 20:21:24.144722  1749 net.cpp:200] pool0 needs backward computation.
I0428 20:21:24.144726  1749 net.cpp:200] conv0 needs backward computation.
I0428 20:21:24.144729  1749 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:24.144732  1749 net.cpp:202] mnist does not need backward computation.
I0428 20:21:24.144742  1749 net.cpp:244] This network produces output accuracy
I0428 20:21:24.144745  1749 net.cpp:244] This network produces output loss
I0428 20:21:24.144755  1749 net.cpp:257] Network initialization done.
I0428 20:21:24.144804  1749 solver.cpp:56] Solver scaffolding done.
I0428 20:21:24.145269  1749 caffe.cpp:248] Starting Optimization
I0428 20:21:24.145277  1749 solver.cpp:273] Solving LeNet
I0428 20:21:24.145279  1749 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:24.146080  1749 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:24.155534  1749 blocking_queue.cpp:49] Waiting for data
I0428 20:21:24.224087  1759 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:24.225268  1749 solver.cpp:398]     Test net output #0: accuracy = 0.1258
I0428 20:21:24.225291  1749 solver.cpp:398]     Test net output #1: loss = 2.32919 (* 1 = 2.32919 loss)
I0428 20:21:24.229658  1749 solver.cpp:219] Iteration 0 (0 iter/s, 0.0843541s/100 iters), loss = 2.32814
I0428 20:21:24.229683  1749 solver.cpp:238]     Train net output #0: loss = 2.32814 (* 1 = 2.32814 loss)
I0428 20:21:24.229712  1749 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:24.393821  1749 solver.cpp:219] Iteration 100 (609.297 iter/s, 0.164124s/100 iters), loss = 0.870424
I0428 20:21:24.393862  1749 solver.cpp:238]     Train net output #0: loss = 0.870424 (* 1 = 0.870424 loss)
I0428 20:21:24.393869  1749 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:24.557085  1749 solver.cpp:219] Iteration 200 (612.661 iter/s, 0.163223s/100 iters), loss = 0.749271
I0428 20:21:24.557132  1749 solver.cpp:238]     Train net output #0: loss = 0.749271 (* 1 = 0.749271 loss)
I0428 20:21:24.557155  1749 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:24.714917  1749 solver.cpp:219] Iteration 300 (633.823 iter/s, 0.157773s/100 iters), loss = 0.619477
I0428 20:21:24.714946  1749 solver.cpp:238]     Train net output #0: loss = 0.619477 (* 1 = 0.619477 loss)
I0428 20:21:24.714953  1749 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:24.873991  1749 solver.cpp:219] Iteration 400 (628.803 iter/s, 0.159032s/100 iters), loss = 0.486173
I0428 20:21:24.874016  1749 solver.cpp:238]     Train net output #0: loss = 0.486173 (* 1 = 0.486173 loss)
I0428 20:21:24.874022  1749 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:25.030108  1749 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:25.112467  1759 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:25.113636  1749 solver.cpp:398]     Test net output #0: accuracy = 0.7691
I0428 20:21:25.113677  1749 solver.cpp:398]     Test net output #1: loss = 0.57476 (* 1 = 0.57476 loss)
I0428 20:21:25.115243  1749 solver.cpp:219] Iteration 500 (414.576 iter/s, 0.24121s/100 iters), loss = 0.500723
I0428 20:21:25.115303  1749 solver.cpp:238]     Train net output #0: loss = 0.500723 (* 1 = 0.500723 loss)
I0428 20:21:25.115310  1749 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:25.276592  1749 solver.cpp:219] Iteration 600 (620.051 iter/s, 0.161277s/100 iters), loss = 0.63793
I0428 20:21:25.276636  1749 solver.cpp:238]     Train net output #0: loss = 0.63793 (* 1 = 0.63793 loss)
I0428 20:21:25.276643  1749 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:25.433513  1749 solver.cpp:219] Iteration 700 (637.493 iter/s, 0.156865s/100 iters), loss = 0.522494
I0428 20:21:25.433554  1749 solver.cpp:238]     Train net output #0: loss = 0.522494 (* 1 = 0.522494 loss)
I0428 20:21:25.433562  1749 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:25.590078  1749 solver.cpp:219] Iteration 800 (638.932 iter/s, 0.156511s/100 iters), loss = 0.787086
I0428 20:21:25.590121  1749 solver.cpp:238]     Train net output #0: loss = 0.787086 (* 1 = 0.787086 loss)
I0428 20:21:25.590127  1749 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:25.750627  1749 solver.cpp:219] Iteration 900 (623.07 iter/s, 0.160496s/100 iters), loss = 0.875216
I0428 20:21:25.750670  1749 solver.cpp:238]     Train net output #0: loss = 0.875216 (* 1 = 0.875216 loss)
I0428 20:21:25.750677  1749 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:25.802664  1756 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:25.904870  1749 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:25.907001  1749 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:25.908264  1749 solver.cpp:311] Iteration 1000, loss = 0.552058
I0428 20:21:25.908280  1749 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:25.989048  1759 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:25.990134  1749 solver.cpp:398]     Test net output #0: accuracy = 0.7743
I0428 20:21:25.990171  1749 solver.cpp:398]     Test net output #1: loss = 0.551867 (* 1 = 0.551867 loss)
I0428 20:21:25.990177  1749 solver.cpp:316] Optimization Done.
I0428 20:21:25.990196  1749 caffe.cpp:259] Optimization Done.
