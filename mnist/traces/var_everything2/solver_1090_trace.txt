I0428 20:08:41.783538 31440 caffe.cpp:218] Using GPUs 0
I0428 20:08:41.821089 31440 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:42.271754 31440 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1090.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:42.271914 31440 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1090.prototxt
I0428 20:08:42.272279 31440 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:42.272306 31440 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:42.272380 31440 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:42.272439 31440 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:42.272532 31440 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:42.272552 31440 net.cpp:86] Creating Layer mnist
I0428 20:08:42.272573 31440 net.cpp:382] mnist -> data
I0428 20:08:42.272593 31440 net.cpp:382] mnist -> label
I0428 20:08:42.273670 31440 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:42.275802 31440 net.cpp:124] Setting up mnist
I0428 20:08:42.275832 31440 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:42.275837 31440 net.cpp:131] Top shape: 64 (64)
I0428 20:08:42.275840 31440 net.cpp:139] Memory required for data: 200960
I0428 20:08:42.275847 31440 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:42.275859 31440 net.cpp:86] Creating Layer conv0
I0428 20:08:42.275877 31440 net.cpp:408] conv0 <- data
I0428 20:08:42.275887 31440 net.cpp:382] conv0 -> conv0
I0428 20:08:42.503727 31440 net.cpp:124] Setting up conv0
I0428 20:08:42.503769 31440 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:42.503787 31440 net.cpp:139] Memory required for data: 3887360
I0428 20:08:42.503801 31440 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:42.503813 31440 net.cpp:86] Creating Layer pool0
I0428 20:08:42.503816 31440 net.cpp:408] pool0 <- conv0
I0428 20:08:42.503821 31440 net.cpp:382] pool0 -> pool0
I0428 20:08:42.503880 31440 net.cpp:124] Setting up pool0
I0428 20:08:42.503885 31440 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:42.503887 31440 net.cpp:139] Memory required for data: 4808960
I0428 20:08:42.503890 31440 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:42.503900 31440 net.cpp:86] Creating Layer conv1
I0428 20:08:42.503902 31440 net.cpp:408] conv1 <- pool0
I0428 20:08:42.503906 31440 net.cpp:382] conv1 -> conv1
I0428 20:08:42.506599 31440 net.cpp:124] Setting up conv1
I0428 20:08:42.506628 31440 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:42.506631 31440 net.cpp:139] Memory required for data: 4972800
I0428 20:08:42.506639 31440 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:42.506646 31440 net.cpp:86] Creating Layer pool1
I0428 20:08:42.506649 31440 net.cpp:408] pool1 <- conv1
I0428 20:08:42.506654 31440 net.cpp:382] pool1 -> pool1
I0428 20:08:42.506731 31440 net.cpp:124] Setting up pool1
I0428 20:08:42.506737 31440 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:42.506741 31440 net.cpp:139] Memory required for data: 5013760
I0428 20:08:42.506753 31440 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:42.506760 31440 net.cpp:86] Creating Layer ip1
I0428 20:08:42.506763 31440 net.cpp:408] ip1 <- pool1
I0428 20:08:42.506767 31440 net.cpp:382] ip1 -> ip1
I0428 20:08:42.506916 31440 net.cpp:124] Setting up ip1
I0428 20:08:42.506923 31440 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:42.506927 31440 net.cpp:139] Memory required for data: 5026560
I0428 20:08:42.506933 31440 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:42.506939 31440 net.cpp:86] Creating Layer relu1
I0428 20:08:42.506942 31440 net.cpp:408] relu1 <- ip1
I0428 20:08:42.506947 31440 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:42.507149 31440 net.cpp:124] Setting up relu1
I0428 20:08:42.507158 31440 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:42.507161 31440 net.cpp:139] Memory required for data: 5039360
I0428 20:08:42.507164 31440 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:42.507169 31440 net.cpp:86] Creating Layer ip2
I0428 20:08:42.507172 31440 net.cpp:408] ip2 <- ip1
I0428 20:08:42.507177 31440 net.cpp:382] ip2 -> ip2
I0428 20:08:42.508155 31440 net.cpp:124] Setting up ip2
I0428 20:08:42.508167 31440 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:42.508186 31440 net.cpp:139] Memory required for data: 5052160
I0428 20:08:42.508191 31440 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:42.508198 31440 net.cpp:86] Creating Layer relu2
I0428 20:08:42.508201 31440 net.cpp:408] relu2 <- ip2
I0428 20:08:42.508206 31440 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:42.508981 31440 net.cpp:124] Setting up relu2
I0428 20:08:42.509011 31440 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:42.509013 31440 net.cpp:139] Memory required for data: 5064960
I0428 20:08:42.509017 31440 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:42.509027 31440 net.cpp:86] Creating Layer ip3
I0428 20:08:42.509032 31440 net.cpp:408] ip3 <- ip2
I0428 20:08:42.509037 31440 net.cpp:382] ip3 -> ip3
I0428 20:08:42.509148 31440 net.cpp:124] Setting up ip3
I0428 20:08:42.509156 31440 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:42.509160 31440 net.cpp:139] Memory required for data: 5067520
I0428 20:08:42.509167 31440 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:42.509174 31440 net.cpp:86] Creating Layer relu3
I0428 20:08:42.509177 31440 net.cpp:408] relu3 <- ip3
I0428 20:08:42.509181 31440 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:42.509393 31440 net.cpp:124] Setting up relu3
I0428 20:08:42.509402 31440 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:42.509405 31440 net.cpp:139] Memory required for data: 5070080
I0428 20:08:42.509407 31440 layer_factory.hpp:77] Creating layer loss
I0428 20:08:42.509414 31440 net.cpp:86] Creating Layer loss
I0428 20:08:42.509418 31440 net.cpp:408] loss <- ip3
I0428 20:08:42.509421 31440 net.cpp:408] loss <- label
I0428 20:08:42.509426 31440 net.cpp:382] loss -> loss
I0428 20:08:42.509439 31440 layer_factory.hpp:77] Creating layer loss
I0428 20:08:42.509687 31440 net.cpp:124] Setting up loss
I0428 20:08:42.509696 31440 net.cpp:131] Top shape: (1)
I0428 20:08:42.509698 31440 net.cpp:134]     with loss weight 1
I0428 20:08:42.509711 31440 net.cpp:139] Memory required for data: 5070084
I0428 20:08:42.509716 31440 net.cpp:200] loss needs backward computation.
I0428 20:08:42.509718 31440 net.cpp:200] relu3 needs backward computation.
I0428 20:08:42.509721 31440 net.cpp:200] ip3 needs backward computation.
I0428 20:08:42.509724 31440 net.cpp:200] relu2 needs backward computation.
I0428 20:08:42.509727 31440 net.cpp:200] ip2 needs backward computation.
I0428 20:08:42.509729 31440 net.cpp:200] relu1 needs backward computation.
I0428 20:08:42.509732 31440 net.cpp:200] ip1 needs backward computation.
I0428 20:08:42.509734 31440 net.cpp:200] pool1 needs backward computation.
I0428 20:08:42.509737 31440 net.cpp:200] conv1 needs backward computation.
I0428 20:08:42.509742 31440 net.cpp:200] pool0 needs backward computation.
I0428 20:08:42.509744 31440 net.cpp:200] conv0 needs backward computation.
I0428 20:08:42.509747 31440 net.cpp:202] mnist does not need backward computation.
I0428 20:08:42.509750 31440 net.cpp:244] This network produces output loss
I0428 20:08:42.509758 31440 net.cpp:257] Network initialization done.
I0428 20:08:42.510123 31440 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1090.prototxt
I0428 20:08:42.510151 31440 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:42.510265 31440 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:42.510351 31440 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:42.510399 31440 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:42.510412 31440 net.cpp:86] Creating Layer mnist
I0428 20:08:42.510439 31440 net.cpp:382] mnist -> data
I0428 20:08:42.510452 31440 net.cpp:382] mnist -> label
I0428 20:08:42.510596 31440 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:42.512632 31440 net.cpp:124] Setting up mnist
I0428 20:08:42.512660 31440 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:42.512665 31440 net.cpp:131] Top shape: 100 (100)
I0428 20:08:42.512668 31440 net.cpp:139] Memory required for data: 314000
I0428 20:08:42.512671 31440 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:42.512677 31440 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:42.512681 31440 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:42.512711 31440 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:42.512718 31440 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:42.512768 31440 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:42.512773 31440 net.cpp:131] Top shape: 100 (100)
I0428 20:08:42.512778 31440 net.cpp:131] Top shape: 100 (100)
I0428 20:08:42.512779 31440 net.cpp:139] Memory required for data: 314800
I0428 20:08:42.512783 31440 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:42.512791 31440 net.cpp:86] Creating Layer conv0
I0428 20:08:42.512795 31440 net.cpp:408] conv0 <- data
I0428 20:08:42.512799 31440 net.cpp:382] conv0 -> conv0
I0428 20:08:42.516193 31440 net.cpp:124] Setting up conv0
I0428 20:08:42.516228 31440 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:42.516237 31440 net.cpp:139] Memory required for data: 6074800
I0428 20:08:42.516258 31440 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:42.516274 31440 net.cpp:86] Creating Layer pool0
I0428 20:08:42.516283 31440 net.cpp:408] pool0 <- conv0
I0428 20:08:42.516306 31440 net.cpp:382] pool0 -> pool0
I0428 20:08:42.516386 31440 net.cpp:124] Setting up pool0
I0428 20:08:42.516398 31440 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:42.516405 31440 net.cpp:139] Memory required for data: 7514800
I0428 20:08:42.516418 31440 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:42.516438 31440 net.cpp:86] Creating Layer conv1
I0428 20:08:42.516448 31440 net.cpp:408] conv1 <- pool0
I0428 20:08:42.516460 31440 net.cpp:382] conv1 -> conv1
I0428 20:08:42.520485 31440 net.cpp:124] Setting up conv1
I0428 20:08:42.520512 31440 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:42.520519 31440 net.cpp:139] Memory required for data: 7770800
I0428 20:08:42.520540 31440 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:42.520553 31440 net.cpp:86] Creating Layer pool1
I0428 20:08:42.520560 31440 net.cpp:408] pool1 <- conv1
I0428 20:08:42.520570 31440 net.cpp:382] pool1 -> pool1
I0428 20:08:42.520689 31440 net.cpp:124] Setting up pool1
I0428 20:08:42.520704 31440 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:42.520711 31440 net.cpp:139] Memory required for data: 7834800
I0428 20:08:42.520717 31440 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:42.520730 31440 net.cpp:86] Creating Layer ip1
I0428 20:08:42.520736 31440 net.cpp:408] ip1 <- pool1
I0428 20:08:42.520753 31440 net.cpp:382] ip1 -> ip1
I0428 20:08:42.521107 31440 net.cpp:124] Setting up ip1
I0428 20:08:42.521126 31440 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:42.521157 31440 net.cpp:139] Memory required for data: 7854800
I0428 20:08:42.521173 31440 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:42.521188 31440 net.cpp:86] Creating Layer relu1
I0428 20:08:42.521195 31440 net.cpp:408] relu1 <- ip1
I0428 20:08:42.521204 31440 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:42.521574 31440 net.cpp:124] Setting up relu1
I0428 20:08:42.521595 31440 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:42.521602 31440 net.cpp:139] Memory required for data: 7874800
I0428 20:08:42.521610 31440 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:42.521626 31440 net.cpp:86] Creating Layer ip2
I0428 20:08:42.521633 31440 net.cpp:408] ip2 <- ip1
I0428 20:08:42.521644 31440 net.cpp:382] ip2 -> ip2
I0428 20:08:42.521898 31440 net.cpp:124] Setting up ip2
I0428 20:08:42.521911 31440 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:42.521917 31440 net.cpp:139] Memory required for data: 7894800
I0428 20:08:42.521929 31440 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:42.521940 31440 net.cpp:86] Creating Layer relu2
I0428 20:08:42.521946 31440 net.cpp:408] relu2 <- ip2
I0428 20:08:42.521955 31440 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:42.522291 31440 net.cpp:124] Setting up relu2
I0428 20:08:42.522306 31440 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:42.522312 31440 net.cpp:139] Memory required for data: 7914800
I0428 20:08:42.522318 31440 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:42.522331 31440 net.cpp:86] Creating Layer ip3
I0428 20:08:42.522337 31440 net.cpp:408] ip3 <- ip2
I0428 20:08:42.522349 31440 net.cpp:382] ip3 -> ip3
I0428 20:08:42.522564 31440 net.cpp:124] Setting up ip3
I0428 20:08:42.522578 31440 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:42.522584 31440 net.cpp:139] Memory required for data: 7918800
I0428 20:08:42.522599 31440 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:42.522608 31440 net.cpp:86] Creating Layer relu3
I0428 20:08:42.522614 31440 net.cpp:408] relu3 <- ip3
I0428 20:08:42.522622 31440 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:42.524106 31440 net.cpp:124] Setting up relu3
I0428 20:08:42.524133 31440 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:42.524140 31440 net.cpp:139] Memory required for data: 7922800
I0428 20:08:42.524147 31440 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:42.524170 31440 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:42.524178 31440 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:42.524190 31440 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:42.524204 31440 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:42.524286 31440 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:42.524302 31440 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:42.524309 31440 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:42.524315 31440 net.cpp:139] Memory required for data: 7930800
I0428 20:08:42.524322 31440 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:42.524336 31440 net.cpp:86] Creating Layer accuracy
I0428 20:08:42.524343 31440 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:42.524351 31440 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:42.524360 31440 net.cpp:382] accuracy -> accuracy
I0428 20:08:42.524374 31440 net.cpp:124] Setting up accuracy
I0428 20:08:42.524382 31440 net.cpp:131] Top shape: (1)
I0428 20:08:42.524389 31440 net.cpp:139] Memory required for data: 7930804
I0428 20:08:42.524397 31440 layer_factory.hpp:77] Creating layer loss
I0428 20:08:42.524408 31440 net.cpp:86] Creating Layer loss
I0428 20:08:42.524416 31440 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:42.524423 31440 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:42.524432 31440 net.cpp:382] loss -> loss
I0428 20:08:42.524444 31440 layer_factory.hpp:77] Creating layer loss
I0428 20:08:42.524974 31440 net.cpp:124] Setting up loss
I0428 20:08:42.524992 31440 net.cpp:131] Top shape: (1)
I0428 20:08:42.524999 31440 net.cpp:134]     with loss weight 1
I0428 20:08:42.525033 31440 net.cpp:139] Memory required for data: 7930808
I0428 20:08:42.525041 31440 net.cpp:200] loss needs backward computation.
I0428 20:08:42.525049 31440 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:42.525058 31440 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:42.525063 31440 net.cpp:200] relu3 needs backward computation.
I0428 20:08:42.525069 31440 net.cpp:200] ip3 needs backward computation.
I0428 20:08:42.525075 31440 net.cpp:200] relu2 needs backward computation.
I0428 20:08:42.525081 31440 net.cpp:200] ip2 needs backward computation.
I0428 20:08:42.525087 31440 net.cpp:200] relu1 needs backward computation.
I0428 20:08:42.525092 31440 net.cpp:200] ip1 needs backward computation.
I0428 20:08:42.525099 31440 net.cpp:200] pool1 needs backward computation.
I0428 20:08:42.525105 31440 net.cpp:200] conv1 needs backward computation.
I0428 20:08:42.525112 31440 net.cpp:200] pool0 needs backward computation.
I0428 20:08:42.525118 31440 net.cpp:200] conv0 needs backward computation.
I0428 20:08:42.525125 31440 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:42.525133 31440 net.cpp:202] mnist does not need backward computation.
I0428 20:08:42.525140 31440 net.cpp:244] This network produces output accuracy
I0428 20:08:42.525146 31440 net.cpp:244] This network produces output loss
I0428 20:08:42.525171 31440 net.cpp:257] Network initialization done.
I0428 20:08:42.525272 31440 solver.cpp:56] Solver scaffolding done.
I0428 20:08:42.525928 31440 caffe.cpp:248] Starting Optimization
I0428 20:08:42.525939 31440 solver.cpp:273] Solving LeNet
I0428 20:08:42.525944 31440 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:42.527294 31440 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:42.536950 31440 blocking_queue.cpp:49] Waiting for data
I0428 20:08:42.603087 31447 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:42.604075 31440 solver.cpp:398]     Test net output #0: accuracy = 0.1134
I0428 20:08:42.604120 31440 solver.cpp:398]     Test net output #1: loss = 2.30614 (* 1 = 2.30614 loss)
I0428 20:08:42.610482 31440 solver.cpp:219] Iteration 0 (0 iter/s, 0.0844943s/100 iters), loss = 2.30915
I0428 20:08:42.610535 31440 solver.cpp:238]     Train net output #0: loss = 2.30915 (* 1 = 2.30915 loss)
I0428 20:08:42.610558 31440 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:42.721469 31440 solver.cpp:219] Iteration 100 (901.529 iter/s, 0.110923s/100 iters), loss = 0.967312
I0428 20:08:42.721513 31440 solver.cpp:238]     Train net output #0: loss = 0.967312 (* 1 = 0.967312 loss)
I0428 20:08:42.721524 31440 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:42.822263 31440 solver.cpp:219] Iteration 200 (992.653 iter/s, 0.10074s/100 iters), loss = 0.698519
I0428 20:08:42.822294 31440 solver.cpp:238]     Train net output #0: loss = 0.698519 (* 1 = 0.698519 loss)
I0428 20:08:42.822302 31440 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:42.918262 31440 solver.cpp:219] Iteration 300 (1042.14 iter/s, 0.095956s/100 iters), loss = 0.733272
I0428 20:08:42.918293 31440 solver.cpp:238]     Train net output #0: loss = 0.733272 (* 1 = 0.733272 loss)
I0428 20:08:42.918301 31440 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:43.013465 31440 solver.cpp:219] Iteration 400 (1050.84 iter/s, 0.0951624s/100 iters), loss = 0.763261
I0428 20:08:43.013497 31440 solver.cpp:238]     Train net output #0: loss = 0.763261 (* 1 = 0.763261 loss)
I0428 20:08:43.013505 31440 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:43.107591 31440 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:43.162812 31447 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:43.164170 31440 solver.cpp:398]     Test net output #0: accuracy = 0.8551
I0428 20:08:43.164196 31440 solver.cpp:398]     Test net output #1: loss = 0.563929 (* 1 = 0.563929 loss)
I0428 20:08:43.165123 31440 solver.cpp:219] Iteration 500 (659.568 iter/s, 0.151614s/100 iters), loss = 0.667201
I0428 20:08:43.165171 31440 solver.cpp:238]     Train net output #0: loss = 0.667201 (* 1 = 0.667201 loss)
I0428 20:08:43.165180 31440 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:43.265004 31440 solver.cpp:219] Iteration 600 (1001.77 iter/s, 0.0998236s/100 iters), loss = 0.567111
I0428 20:08:43.265035 31440 solver.cpp:238]     Train net output #0: loss = 0.567111 (* 1 = 0.567111 loss)
I0428 20:08:43.265048 31440 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:43.370048 31440 solver.cpp:219] Iteration 700 (952.372 iter/s, 0.105001s/100 iters), loss = 0.603386
I0428 20:08:43.370085 31440 solver.cpp:238]     Train net output #0: loss = 0.603386 (* 1 = 0.603386 loss)
I0428 20:08:43.370101 31440 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:43.469630 31440 solver.cpp:219] Iteration 800 (1004.67 iter/s, 0.0995349s/100 iters), loss = 0.776758
I0428 20:08:43.469660 31440 solver.cpp:238]     Train net output #0: loss = 0.776758 (* 1 = 0.776758 loss)
I0428 20:08:43.469667 31440 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:43.576108 31440 solver.cpp:219] Iteration 900 (939.518 iter/s, 0.106438s/100 iters), loss = 0.653451
I0428 20:08:43.576141 31440 solver.cpp:238]     Train net output #0: loss = 0.653451 (* 1 = 0.653451 loss)
I0428 20:08:43.576153 31440 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:43.609164 31446 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:43.674329 31440 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:43.675369 31440 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:43.676024 31440 solver.cpp:311] Iteration 1000, loss = 0.622049
I0428 20:08:43.676043 31440 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:43.732847 31447 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:43.734361 31440 solver.cpp:398]     Test net output #0: accuracy = 0.8794
I0428 20:08:43.734385 31440 solver.cpp:398]     Test net output #1: loss = 0.52844 (* 1 = 0.52844 loss)
I0428 20:08:43.734390 31440 solver.cpp:316] Optimization Done.
I0428 20:08:43.734395 31440 caffe.cpp:259] Optimization Done.
