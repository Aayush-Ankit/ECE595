I0428 19:43:47.342530 25454 caffe.cpp:218] Using GPUs 0
I0428 19:43:47.383731 25454 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:47.852028 25454 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test431.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:47.852161 25454 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test431.prototxt
I0428 19:43:47.852452 25454 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:47.852465 25454 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:47.852529 25454 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:43:47.852586 25454 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:47.852679 25454 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:47.852700 25454 net.cpp:86] Creating Layer mnist
I0428 19:43:47.852707 25454 net.cpp:382] mnist -> data
I0428 19:43:47.852725 25454 net.cpp:382] mnist -> label
I0428 19:43:47.853880 25454 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:47.856252 25454 net.cpp:124] Setting up mnist
I0428 19:43:47.856283 25454 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:47.856288 25454 net.cpp:131] Top shape: 64 (64)
I0428 19:43:47.856292 25454 net.cpp:139] Memory required for data: 200960
I0428 19:43:47.856297 25454 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:47.856310 25454 net.cpp:86] Creating Layer conv0
I0428 19:43:47.856315 25454 net.cpp:408] conv0 <- data
I0428 19:43:47.856324 25454 net.cpp:382] conv0 -> conv0
I0428 19:43:48.087369 25454 net.cpp:124] Setting up conv0
I0428 19:43:48.087412 25454 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:48.087416 25454 net.cpp:139] Memory required for data: 495872
I0428 19:43:48.087430 25454 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:48.087443 25454 net.cpp:86] Creating Layer pool0
I0428 19:43:48.087446 25454 net.cpp:408] pool0 <- conv0
I0428 19:43:48.087467 25454 net.cpp:382] pool0 -> pool0
I0428 19:43:48.087527 25454 net.cpp:124] Setting up pool0
I0428 19:43:48.087543 25454 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:48.087561 25454 net.cpp:139] Memory required for data: 569600
I0428 19:43:48.087564 25454 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:48.087575 25454 net.cpp:86] Creating Layer conv1
I0428 19:43:48.087579 25454 net.cpp:408] conv1 <- pool0
I0428 19:43:48.087584 25454 net.cpp:382] conv1 -> conv1
I0428 19:43:48.090414 25454 net.cpp:124] Setting up conv1
I0428 19:43:48.090443 25454 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:43:48.090446 25454 net.cpp:139] Memory required for data: 1388800
I0428 19:43:48.090454 25454 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:48.090462 25454 net.cpp:86] Creating Layer pool1
I0428 19:43:48.090466 25454 net.cpp:408] pool1 <- conv1
I0428 19:43:48.090471 25454 net.cpp:382] pool1 -> pool1
I0428 19:43:48.090524 25454 net.cpp:124] Setting up pool1
I0428 19:43:48.090530 25454 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:43:48.090533 25454 net.cpp:139] Memory required for data: 1593600
I0428 19:43:48.090535 25454 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:48.090543 25454 net.cpp:86] Creating Layer ip1
I0428 19:43:48.090546 25454 net.cpp:408] ip1 <- pool1
I0428 19:43:48.090553 25454 net.cpp:382] ip1 -> ip1
I0428 19:43:48.091552 25454 net.cpp:124] Setting up ip1
I0428 19:43:48.091564 25454 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:48.091583 25454 net.cpp:139] Memory required for data: 1596160
I0428 19:43:48.091593 25454 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:48.091598 25454 net.cpp:86] Creating Layer relu1
I0428 19:43:48.091603 25454 net.cpp:408] relu1 <- ip1
I0428 19:43:48.091609 25454 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:48.091794 25454 net.cpp:124] Setting up relu1
I0428 19:43:48.091804 25454 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:48.091806 25454 net.cpp:139] Memory required for data: 1598720
I0428 19:43:48.091809 25454 layer_factory.hpp:77] Creating layer loss
I0428 19:43:48.091830 25454 net.cpp:86] Creating Layer loss
I0428 19:43:48.091835 25454 net.cpp:408] loss <- ip1
I0428 19:43:48.091837 25454 net.cpp:408] loss <- label
I0428 19:43:48.091843 25454 net.cpp:382] loss -> loss
I0428 19:43:48.091857 25454 layer_factory.hpp:77] Creating layer loss
I0428 19:43:48.092701 25454 net.cpp:124] Setting up loss
I0428 19:43:48.092715 25454 net.cpp:131] Top shape: (1)
I0428 19:43:48.092733 25454 net.cpp:134]     with loss weight 1
I0428 19:43:48.092768 25454 net.cpp:139] Memory required for data: 1598724
I0428 19:43:48.092772 25454 net.cpp:200] loss needs backward computation.
I0428 19:43:48.092775 25454 net.cpp:200] relu1 needs backward computation.
I0428 19:43:48.092778 25454 net.cpp:200] ip1 needs backward computation.
I0428 19:43:48.092782 25454 net.cpp:200] pool1 needs backward computation.
I0428 19:43:48.092784 25454 net.cpp:200] conv1 needs backward computation.
I0428 19:43:48.092787 25454 net.cpp:200] pool0 needs backward computation.
I0428 19:43:48.092790 25454 net.cpp:200] conv0 needs backward computation.
I0428 19:43:48.092793 25454 net.cpp:202] mnist does not need backward computation.
I0428 19:43:48.092797 25454 net.cpp:244] This network produces output loss
I0428 19:43:48.092805 25454 net.cpp:257] Network initialization done.
I0428 19:43:48.093112 25454 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test431.prototxt
I0428 19:43:48.093153 25454 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:48.093243 25454 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:43:48.093317 25454 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:48.093363 25454 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:48.093376 25454 net.cpp:86] Creating Layer mnist
I0428 19:43:48.093382 25454 net.cpp:382] mnist -> data
I0428 19:43:48.093389 25454 net.cpp:382] mnist -> label
I0428 19:43:48.093477 25454 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:48.095388 25454 net.cpp:124] Setting up mnist
I0428 19:43:48.095418 25454 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:48.095424 25454 net.cpp:131] Top shape: 100 (100)
I0428 19:43:48.095427 25454 net.cpp:139] Memory required for data: 314000
I0428 19:43:48.095430 25454 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:48.095437 25454 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:48.095439 25454 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:48.095464 25454 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:48.095471 25454 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:48.095513 25454 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:48.095520 25454 net.cpp:131] Top shape: 100 (100)
I0428 19:43:48.095525 25454 net.cpp:131] Top shape: 100 (100)
I0428 19:43:48.095526 25454 net.cpp:139] Memory required for data: 314800
I0428 19:43:48.095530 25454 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:48.095536 25454 net.cpp:86] Creating Layer conv0
I0428 19:43:48.095541 25454 net.cpp:408] conv0 <- data
I0428 19:43:48.095546 25454 net.cpp:382] conv0 -> conv0
I0428 19:43:48.096501 25454 net.cpp:124] Setting up conv0
I0428 19:43:48.096513 25454 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:48.096515 25454 net.cpp:139] Memory required for data: 775600
I0428 19:43:48.096540 25454 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:48.096546 25454 net.cpp:86] Creating Layer pool0
I0428 19:43:48.096550 25454 net.cpp:408] pool0 <- conv0
I0428 19:43:48.096555 25454 net.cpp:382] pool0 -> pool0
I0428 19:43:48.096606 25454 net.cpp:124] Setting up pool0
I0428 19:43:48.096632 25454 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:48.096635 25454 net.cpp:139] Memory required for data: 890800
I0428 19:43:48.096638 25454 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:48.096648 25454 net.cpp:86] Creating Layer conv1
I0428 19:43:48.096652 25454 net.cpp:408] conv1 <- pool0
I0428 19:43:48.096657 25454 net.cpp:382] conv1 -> conv1
I0428 19:43:48.098382 25454 net.cpp:124] Setting up conv1
I0428 19:43:48.098397 25454 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:43:48.098402 25454 net.cpp:139] Memory required for data: 2170800
I0428 19:43:48.098410 25454 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:48.098417 25454 net.cpp:86] Creating Layer pool1
I0428 19:43:48.098429 25454 net.cpp:408] pool1 <- conv1
I0428 19:43:48.098436 25454 net.cpp:382] pool1 -> pool1
I0428 19:43:48.098475 25454 net.cpp:124] Setting up pool1
I0428 19:43:48.098480 25454 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:43:48.098484 25454 net.cpp:139] Memory required for data: 2490800
I0428 19:43:48.098495 25454 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:48.098501 25454 net.cpp:86] Creating Layer ip1
I0428 19:43:48.098505 25454 net.cpp:408] ip1 <- pool1
I0428 19:43:48.098510 25454 net.cpp:382] ip1 -> ip1
I0428 19:43:48.098656 25454 net.cpp:124] Setting up ip1
I0428 19:43:48.098664 25454 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:48.098667 25454 net.cpp:139] Memory required for data: 2494800
I0428 19:43:48.098690 25454 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:48.098696 25454 net.cpp:86] Creating Layer relu1
I0428 19:43:48.098700 25454 net.cpp:408] relu1 <- ip1
I0428 19:43:48.098704 25454 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:48.099525 25454 net.cpp:124] Setting up relu1
I0428 19:43:48.099537 25454 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:48.099540 25454 net.cpp:139] Memory required for data: 2498800
I0428 19:43:48.099544 25454 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:43:48.099552 25454 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:43:48.099555 25454 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:43:48.099560 25454 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:43:48.099566 25454 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:43:48.099608 25454 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:43:48.099614 25454 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:48.099633 25454 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:48.099637 25454 net.cpp:139] Memory required for data: 2506800
I0428 19:43:48.099639 25454 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:48.099644 25454 net.cpp:86] Creating Layer accuracy
I0428 19:43:48.099647 25454 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:43:48.099651 25454 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:48.099655 25454 net.cpp:382] accuracy -> accuracy
I0428 19:43:48.099689 25454 net.cpp:124] Setting up accuracy
I0428 19:43:48.099694 25454 net.cpp:131] Top shape: (1)
I0428 19:43:48.099695 25454 net.cpp:139] Memory required for data: 2506804
I0428 19:43:48.099699 25454 layer_factory.hpp:77] Creating layer loss
I0428 19:43:48.099704 25454 net.cpp:86] Creating Layer loss
I0428 19:43:48.099709 25454 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:43:48.099712 25454 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:48.099716 25454 net.cpp:382] loss -> loss
I0428 19:43:48.099722 25454 layer_factory.hpp:77] Creating layer loss
I0428 19:43:48.099995 25454 net.cpp:124] Setting up loss
I0428 19:43:48.100005 25454 net.cpp:131] Top shape: (1)
I0428 19:43:48.100008 25454 net.cpp:134]     with loss weight 1
I0428 19:43:48.100014 25454 net.cpp:139] Memory required for data: 2506808
I0428 19:43:48.100018 25454 net.cpp:200] loss needs backward computation.
I0428 19:43:48.100020 25454 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:48.100024 25454 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:43:48.100028 25454 net.cpp:200] relu1 needs backward computation.
I0428 19:43:48.100038 25454 net.cpp:200] ip1 needs backward computation.
I0428 19:43:48.100040 25454 net.cpp:200] pool1 needs backward computation.
I0428 19:43:48.100044 25454 net.cpp:200] conv1 needs backward computation.
I0428 19:43:48.100047 25454 net.cpp:200] pool0 needs backward computation.
I0428 19:43:48.100050 25454 net.cpp:200] conv0 needs backward computation.
I0428 19:43:48.100054 25454 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:48.100057 25454 net.cpp:202] mnist does not need backward computation.
I0428 19:43:48.100059 25454 net.cpp:244] This network produces output accuracy
I0428 19:43:48.100062 25454 net.cpp:244] This network produces output loss
I0428 19:43:48.100081 25454 net.cpp:257] Network initialization done.
I0428 19:43:48.100113 25454 solver.cpp:56] Solver scaffolding done.
I0428 19:43:48.100316 25454 caffe.cpp:248] Starting Optimization
I0428 19:43:48.100322 25454 solver.cpp:273] Solving LeNet
I0428 19:43:48.100325 25454 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:48.100424 25454 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:48.103827 25454 blocking_queue.cpp:49] Waiting for data
I0428 19:43:48.176157 25461 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:48.176620 25454 solver.cpp:398]     Test net output #0: accuracy = 0.0794
I0428 19:43:48.176638 25454 solver.cpp:398]     Test net output #1: loss = 2.36122 (* 1 = 2.36122 loss)
I0428 19:43:48.178495 25454 solver.cpp:219] Iteration 0 (-1.03976e-42 iter/s, 0.0781423s/100 iters), loss = 2.32692
I0428 19:43:48.178521 25454 solver.cpp:238]     Train net output #0: loss = 2.32692 (* 1 = 2.32692 loss)
I0428 19:43:48.178547 25454 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:48.274308 25454 solver.cpp:219] Iteration 100 (1044.12 iter/s, 0.0957743s/100 iters), loss = 1.04928
I0428 19:43:48.274334 25454 solver.cpp:238]     Train net output #0: loss = 1.04928 (* 1 = 1.04928 loss)
I0428 19:43:48.274341 25454 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:48.366789 25454 solver.cpp:219] Iteration 200 (1081.78 iter/s, 0.0924406s/100 iters), loss = 1.02267
I0428 19:43:48.366819 25454 solver.cpp:238]     Train net output #0: loss = 1.02267 (* 1 = 1.02267 loss)
I0428 19:43:48.366827 25454 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:48.466053 25454 solver.cpp:219] Iteration 300 (1007.86 iter/s, 0.0992205s/100 iters), loss = 0.518282
I0428 19:43:48.466080 25454 solver.cpp:238]     Train net output #0: loss = 0.518282 (* 1 = 0.518282 loss)
I0428 19:43:48.466087 25454 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:48.565556 25454 solver.cpp:219] Iteration 400 (1005.42 iter/s, 0.0994611s/100 iters), loss = 0.290151
I0428 19:43:48.565580 25454 solver.cpp:238]     Train net output #0: loss = 0.290151 (* 1 = 0.290151 loss)
I0428 19:43:48.565587 25454 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:48.655830 25454 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:48.730695 25461 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:48.731268 25454 solver.cpp:398]     Test net output #0: accuracy = 0.86
I0428 19:43:48.731307 25454 solver.cpp:398]     Test net output #1: loss = 0.383019 (* 1 = 0.383019 loss)
I0428 19:43:48.732455 25454 solver.cpp:219] Iteration 500 (599.317 iter/s, 0.166857s/100 iters), loss = 0.323003
I0428 19:43:48.732496 25454 solver.cpp:238]     Train net output #0: loss = 0.323003 (* 1 = 0.323003 loss)
I0428 19:43:48.732509 25454 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:48.832612 25454 solver.cpp:219] Iteration 600 (999.017 iter/s, 0.100098s/100 iters), loss = 0.275096
I0428 19:43:48.832660 25454 solver.cpp:238]     Train net output #0: loss = 0.275096 (* 1 = 0.275096 loss)
I0428 19:43:48.832675 25454 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:48.935886 25454 solver.cpp:219] Iteration 700 (968.888 iter/s, 0.103211s/100 iters), loss = 0.548119
I0428 19:43:48.935933 25454 solver.cpp:238]     Train net output #0: loss = 0.548119 (* 1 = 0.548119 loss)
I0428 19:43:48.935945 25454 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:49.038031 25454 solver.cpp:219] Iteration 800 (979.589 iter/s, 0.102084s/100 iters), loss = 0.367142
I0428 19:43:49.038075 25454 solver.cpp:238]     Train net output #0: loss = 0.367142 (* 1 = 0.367142 loss)
I0428 19:43:49.038086 25454 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:49.138954 25454 solver.cpp:219] Iteration 900 (991.545 iter/s, 0.100853s/100 iters), loss = 0.455815
I0428 19:43:49.139008 25454 solver.cpp:238]     Train net output #0: loss = 0.455815 (* 1 = 0.455815 loss)
I0428 19:43:49.139020 25454 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:49.174475 25460 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:49.242547 25454 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:49.243602 25454 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:49.244354 25454 solver.cpp:311] Iteration 1000, loss = 0.413023
I0428 19:43:49.244390 25454 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:49.320232 25461 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:49.321506 25454 solver.cpp:398]     Test net output #0: accuracy = 0.875
I0428 19:43:49.321544 25454 solver.cpp:398]     Test net output #1: loss = 0.330188 (* 1 = 0.330188 loss)
I0428 19:43:49.321553 25454 solver.cpp:316] Optimization Done.
I0428 19:43:49.321559 25454 caffe.cpp:259] Optimization Done.
