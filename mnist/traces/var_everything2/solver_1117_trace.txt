I0428 20:09:44.837054 31693 caffe.cpp:218] Using GPUs 0
I0428 20:09:44.875166 31693 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:45.390202 31693 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1117.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:45.390346 31693 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1117.prototxt
I0428 20:09:45.390749 31693 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:45.390768 31693 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:45.390863 31693 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:45.390938 31693 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:45.391038 31693 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:45.391062 31693 net.cpp:86] Creating Layer mnist
I0428 20:09:45.391069 31693 net.cpp:382] mnist -> data
I0428 20:09:45.391093 31693 net.cpp:382] mnist -> label
I0428 20:09:45.392192 31693 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:45.394664 31693 net.cpp:124] Setting up mnist
I0428 20:09:45.394681 31693 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:45.394687 31693 net.cpp:131] Top shape: 64 (64)
I0428 20:09:45.394691 31693 net.cpp:139] Memory required for data: 200960
I0428 20:09:45.394698 31693 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:45.394714 31693 net.cpp:86] Creating Layer conv0
I0428 20:09:45.394736 31693 net.cpp:408] conv0 <- data
I0428 20:09:45.394747 31693 net.cpp:382] conv0 -> conv0
I0428 20:09:45.659111 31693 net.cpp:124] Setting up conv0
I0428 20:09:45.659153 31693 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:45.659157 31693 net.cpp:139] Memory required for data: 3887360
I0428 20:09:45.659171 31693 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:45.659185 31693 net.cpp:86] Creating Layer pool0
I0428 20:09:45.659189 31693 net.cpp:408] pool0 <- conv0
I0428 20:09:45.659210 31693 net.cpp:382] pool0 -> pool0
I0428 20:09:45.659258 31693 net.cpp:124] Setting up pool0
I0428 20:09:45.659265 31693 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:45.659267 31693 net.cpp:139] Memory required for data: 4808960
I0428 20:09:45.659271 31693 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:45.659282 31693 net.cpp:86] Creating Layer conv1
I0428 20:09:45.659286 31693 net.cpp:408] conv1 <- pool0
I0428 20:09:45.659291 31693 net.cpp:382] conv1 -> conv1
I0428 20:09:45.662300 31693 net.cpp:124] Setting up conv1
I0428 20:09:45.662330 31693 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:45.662333 31693 net.cpp:139] Memory required for data: 5218560
I0428 20:09:45.662341 31693 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:45.662350 31693 net.cpp:86] Creating Layer pool1
I0428 20:09:45.662353 31693 net.cpp:408] pool1 <- conv1
I0428 20:09:45.662359 31693 net.cpp:382] pool1 -> pool1
I0428 20:09:45.662411 31693 net.cpp:124] Setting up pool1
I0428 20:09:45.662422 31693 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:45.662425 31693 net.cpp:139] Memory required for data: 5320960
I0428 20:09:45.662427 31693 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:45.662436 31693 net.cpp:86] Creating Layer ip1
I0428 20:09:45.662438 31693 net.cpp:408] ip1 <- pool1
I0428 20:09:45.662443 31693 net.cpp:382] ip1 -> ip1
I0428 20:09:45.662605 31693 net.cpp:124] Setting up ip1
I0428 20:09:45.662612 31693 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:45.662616 31693 net.cpp:139] Memory required for data: 5327360
I0428 20:09:45.662622 31693 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:45.662627 31693 net.cpp:86] Creating Layer relu1
I0428 20:09:45.662631 31693 net.cpp:408] relu1 <- ip1
I0428 20:09:45.662634 31693 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:45.662817 31693 net.cpp:124] Setting up relu1
I0428 20:09:45.662825 31693 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:45.662829 31693 net.cpp:139] Memory required for data: 5333760
I0428 20:09:45.662832 31693 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:45.662839 31693 net.cpp:86] Creating Layer ip2
I0428 20:09:45.662842 31693 net.cpp:408] ip2 <- ip1
I0428 20:09:45.662847 31693 net.cpp:382] ip2 -> ip2
I0428 20:09:45.662950 31693 net.cpp:124] Setting up ip2
I0428 20:09:45.662957 31693 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:45.662961 31693 net.cpp:139] Memory required for data: 5340160
I0428 20:09:45.662966 31693 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:45.662972 31693 net.cpp:86] Creating Layer relu2
I0428 20:09:45.662974 31693 net.cpp:408] relu2 <- ip2
I0428 20:09:45.662978 31693 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:45.663727 31693 net.cpp:124] Setting up relu2
I0428 20:09:45.663738 31693 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:45.663758 31693 net.cpp:139] Memory required for data: 5346560
I0428 20:09:45.663760 31693 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:45.663766 31693 net.cpp:86] Creating Layer ip3
I0428 20:09:45.663770 31693 net.cpp:408] ip3 <- ip2
I0428 20:09:45.663776 31693 net.cpp:382] ip3 -> ip3
I0428 20:09:45.663902 31693 net.cpp:124] Setting up ip3
I0428 20:09:45.663910 31693 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:45.663913 31693 net.cpp:139] Memory required for data: 5349120
I0428 20:09:45.663936 31693 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:45.663942 31693 net.cpp:86] Creating Layer relu3
I0428 20:09:45.663945 31693 net.cpp:408] relu3 <- ip3
I0428 20:09:45.663950 31693 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:45.664152 31693 net.cpp:124] Setting up relu3
I0428 20:09:45.664177 31693 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:45.664180 31693 net.cpp:139] Memory required for data: 5351680
I0428 20:09:45.664183 31693 layer_factory.hpp:77] Creating layer loss
I0428 20:09:45.664191 31693 net.cpp:86] Creating Layer loss
I0428 20:09:45.664193 31693 net.cpp:408] loss <- ip3
I0428 20:09:45.664198 31693 net.cpp:408] loss <- label
I0428 20:09:45.664204 31693 net.cpp:382] loss -> loss
I0428 20:09:45.664218 31693 layer_factory.hpp:77] Creating layer loss
I0428 20:09:45.664486 31693 net.cpp:124] Setting up loss
I0428 20:09:45.664495 31693 net.cpp:131] Top shape: (1)
I0428 20:09:45.664499 31693 net.cpp:134]     with loss weight 1
I0428 20:09:45.664512 31693 net.cpp:139] Memory required for data: 5351684
I0428 20:09:45.664515 31693 net.cpp:200] loss needs backward computation.
I0428 20:09:45.664518 31693 net.cpp:200] relu3 needs backward computation.
I0428 20:09:45.664522 31693 net.cpp:200] ip3 needs backward computation.
I0428 20:09:45.664525 31693 net.cpp:200] relu2 needs backward computation.
I0428 20:09:45.664527 31693 net.cpp:200] ip2 needs backward computation.
I0428 20:09:45.664530 31693 net.cpp:200] relu1 needs backward computation.
I0428 20:09:45.664532 31693 net.cpp:200] ip1 needs backward computation.
I0428 20:09:45.664535 31693 net.cpp:200] pool1 needs backward computation.
I0428 20:09:45.664537 31693 net.cpp:200] conv1 needs backward computation.
I0428 20:09:45.664541 31693 net.cpp:200] pool0 needs backward computation.
I0428 20:09:45.664543 31693 net.cpp:200] conv0 needs backward computation.
I0428 20:09:45.664546 31693 net.cpp:202] mnist does not need backward computation.
I0428 20:09:45.664549 31693 net.cpp:244] This network produces output loss
I0428 20:09:45.664559 31693 net.cpp:257] Network initialization done.
I0428 20:09:45.664970 31693 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1117.prototxt
I0428 20:09:45.665001 31693 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:45.665103 31693 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:45.665222 31693 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:45.665280 31693 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:45.665293 31693 net.cpp:86] Creating Layer mnist
I0428 20:09:45.665297 31693 net.cpp:382] mnist -> data
I0428 20:09:45.665307 31693 net.cpp:382] mnist -> label
I0428 20:09:45.665390 31693 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:45.667526 31693 net.cpp:124] Setting up mnist
I0428 20:09:45.667556 31693 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:45.667559 31693 net.cpp:131] Top shape: 100 (100)
I0428 20:09:45.667562 31693 net.cpp:139] Memory required for data: 314000
I0428 20:09:45.667567 31693 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:45.667572 31693 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:45.667575 31693 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:45.667580 31693 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:45.667588 31693 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:45.667690 31693 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:45.667697 31693 net.cpp:131] Top shape: 100 (100)
I0428 20:09:45.667701 31693 net.cpp:131] Top shape: 100 (100)
I0428 20:09:45.667703 31693 net.cpp:139] Memory required for data: 314800
I0428 20:09:45.667706 31693 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:45.667716 31693 net.cpp:86] Creating Layer conv0
I0428 20:09:45.667721 31693 net.cpp:408] conv0 <- data
I0428 20:09:45.667739 31693 net.cpp:382] conv0 -> conv0
I0428 20:09:45.669548 31693 net.cpp:124] Setting up conv0
I0428 20:09:45.669562 31693 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:45.669580 31693 net.cpp:139] Memory required for data: 6074800
I0428 20:09:45.669590 31693 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:45.669596 31693 net.cpp:86] Creating Layer pool0
I0428 20:09:45.669600 31693 net.cpp:408] pool0 <- conv0
I0428 20:09:45.669605 31693 net.cpp:382] pool0 -> pool0
I0428 20:09:45.669641 31693 net.cpp:124] Setting up pool0
I0428 20:09:45.669646 31693 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:45.669648 31693 net.cpp:139] Memory required for data: 7514800
I0428 20:09:45.669651 31693 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:45.669661 31693 net.cpp:86] Creating Layer conv1
I0428 20:09:45.669664 31693 net.cpp:408] conv1 <- pool0
I0428 20:09:45.669669 31693 net.cpp:382] conv1 -> conv1
I0428 20:09:45.671944 31693 net.cpp:124] Setting up conv1
I0428 20:09:45.671957 31693 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:45.671960 31693 net.cpp:139] Memory required for data: 8154800
I0428 20:09:45.671968 31693 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:45.671991 31693 net.cpp:86] Creating Layer pool1
I0428 20:09:45.671994 31693 net.cpp:408] pool1 <- conv1
I0428 20:09:45.672015 31693 net.cpp:382] pool1 -> pool1
I0428 20:09:45.672060 31693 net.cpp:124] Setting up pool1
I0428 20:09:45.672070 31693 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:45.672073 31693 net.cpp:139] Memory required for data: 8314800
I0428 20:09:45.672076 31693 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:45.672082 31693 net.cpp:86] Creating Layer ip1
I0428 20:09:45.672086 31693 net.cpp:408] ip1 <- pool1
I0428 20:09:45.672093 31693 net.cpp:382] ip1 -> ip1
I0428 20:09:45.672258 31693 net.cpp:124] Setting up ip1
I0428 20:09:45.672266 31693 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:45.672279 31693 net.cpp:139] Memory required for data: 8324800
I0428 20:09:45.672287 31693 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:45.672292 31693 net.cpp:86] Creating Layer relu1
I0428 20:09:45.672296 31693 net.cpp:408] relu1 <- ip1
I0428 20:09:45.672302 31693 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:45.672482 31693 net.cpp:124] Setting up relu1
I0428 20:09:45.672490 31693 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:45.672493 31693 net.cpp:139] Memory required for data: 8334800
I0428 20:09:45.672497 31693 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:45.672504 31693 net.cpp:86] Creating Layer ip2
I0428 20:09:45.672508 31693 net.cpp:408] ip2 <- ip1
I0428 20:09:45.672513 31693 net.cpp:382] ip2 -> ip2
I0428 20:09:45.672634 31693 net.cpp:124] Setting up ip2
I0428 20:09:45.672642 31693 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:45.672646 31693 net.cpp:139] Memory required for data: 8344800
I0428 20:09:45.672652 31693 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:45.672657 31693 net.cpp:86] Creating Layer relu2
I0428 20:09:45.672659 31693 net.cpp:408] relu2 <- ip2
I0428 20:09:45.672664 31693 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:45.672864 31693 net.cpp:124] Setting up relu2
I0428 20:09:45.672874 31693 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:45.672894 31693 net.cpp:139] Memory required for data: 8354800
I0428 20:09:45.672896 31693 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:45.672904 31693 net.cpp:86] Creating Layer ip3
I0428 20:09:45.672906 31693 net.cpp:408] ip3 <- ip2
I0428 20:09:45.672912 31693 net.cpp:382] ip3 -> ip3
I0428 20:09:45.673038 31693 net.cpp:124] Setting up ip3
I0428 20:09:45.673045 31693 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:45.673049 31693 net.cpp:139] Memory required for data: 8358800
I0428 20:09:45.673058 31693 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:45.673065 31693 net.cpp:86] Creating Layer relu3
I0428 20:09:45.673069 31693 net.cpp:408] relu3 <- ip3
I0428 20:09:45.673072 31693 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:45.673996 31693 net.cpp:124] Setting up relu3
I0428 20:09:45.674008 31693 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:45.674011 31693 net.cpp:139] Memory required for data: 8362800
I0428 20:09:45.674015 31693 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:45.674021 31693 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:45.674024 31693 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:45.674029 31693 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:45.674036 31693 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:45.674073 31693 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:45.674080 31693 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:45.674084 31693 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:45.674088 31693 net.cpp:139] Memory required for data: 8370800
I0428 20:09:45.674090 31693 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:45.674096 31693 net.cpp:86] Creating Layer accuracy
I0428 20:09:45.674099 31693 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:45.674103 31693 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:45.674108 31693 net.cpp:382] accuracy -> accuracy
I0428 20:09:45.674114 31693 net.cpp:124] Setting up accuracy
I0428 20:09:45.674118 31693 net.cpp:131] Top shape: (1)
I0428 20:09:45.674121 31693 net.cpp:139] Memory required for data: 8370804
I0428 20:09:45.674124 31693 layer_factory.hpp:77] Creating layer loss
I0428 20:09:45.674129 31693 net.cpp:86] Creating Layer loss
I0428 20:09:45.674131 31693 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:45.674134 31693 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:45.674139 31693 net.cpp:382] loss -> loss
I0428 20:09:45.674145 31693 layer_factory.hpp:77] Creating layer loss
I0428 20:09:45.674391 31693 net.cpp:124] Setting up loss
I0428 20:09:45.674414 31693 net.cpp:131] Top shape: (1)
I0428 20:09:45.674417 31693 net.cpp:134]     with loss weight 1
I0428 20:09:45.674433 31693 net.cpp:139] Memory required for data: 8370808
I0428 20:09:45.674437 31693 net.cpp:200] loss needs backward computation.
I0428 20:09:45.674440 31693 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:45.674444 31693 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:45.674463 31693 net.cpp:200] relu3 needs backward computation.
I0428 20:09:45.674466 31693 net.cpp:200] ip3 needs backward computation.
I0428 20:09:45.674469 31693 net.cpp:200] relu2 needs backward computation.
I0428 20:09:45.674473 31693 net.cpp:200] ip2 needs backward computation.
I0428 20:09:45.674475 31693 net.cpp:200] relu1 needs backward computation.
I0428 20:09:45.674477 31693 net.cpp:200] ip1 needs backward computation.
I0428 20:09:45.674480 31693 net.cpp:200] pool1 needs backward computation.
I0428 20:09:45.674484 31693 net.cpp:200] conv1 needs backward computation.
I0428 20:09:45.674486 31693 net.cpp:200] pool0 needs backward computation.
I0428 20:09:45.674489 31693 net.cpp:200] conv0 needs backward computation.
I0428 20:09:45.674494 31693 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:45.674496 31693 net.cpp:202] mnist does not need backward computation.
I0428 20:09:45.674499 31693 net.cpp:244] This network produces output accuracy
I0428 20:09:45.674502 31693 net.cpp:244] This network produces output loss
I0428 20:09:45.674516 31693 net.cpp:257] Network initialization done.
I0428 20:09:45.674576 31693 solver.cpp:56] Solver scaffolding done.
I0428 20:09:45.674994 31693 caffe.cpp:248] Starting Optimization
I0428 20:09:45.675000 31693 solver.cpp:273] Solving LeNet
I0428 20:09:45.675004 31693 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:45.675927 31693 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:45.681795 31693 blocking_queue.cpp:49] Waiting for data
I0428 20:09:45.743381 31700 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:45.744001 31693 solver.cpp:398]     Test net output #0: accuracy = 0.0602
I0428 20:09:45.744024 31693 solver.cpp:398]     Test net output #1: loss = 2.301 (* 1 = 2.301 loss)
I0428 20:09:45.747756 31693 solver.cpp:219] Iteration 0 (0 iter/s, 0.0727235s/100 iters), loss = 2.30305
I0428 20:09:45.747797 31693 solver.cpp:238]     Train net output #0: loss = 2.30305 (* 1 = 2.30305 loss)
I0428 20:09:45.747807 31693 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:45.854317 31693 solver.cpp:219] Iteration 100 (938.767 iter/s, 0.106523s/100 iters), loss = 0.672057
I0428 20:09:45.854360 31693 solver.cpp:238]     Train net output #0: loss = 0.672057 (* 1 = 0.672057 loss)
I0428 20:09:45.854367 31693 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:45.962719 31693 solver.cpp:219] Iteration 200 (922.991 iter/s, 0.108343s/100 iters), loss = 0.3625
I0428 20:09:45.962769 31693 solver.cpp:238]     Train net output #0: loss = 0.3625 (* 1 = 0.3625 loss)
I0428 20:09:45.962782 31693 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:46.075790 31693 solver.cpp:219] Iteration 300 (884.856 iter/s, 0.113013s/100 iters), loss = 0.319222
I0428 20:09:46.075822 31693 solver.cpp:238]     Train net output #0: loss = 0.319222 (* 1 = 0.319222 loss)
I0428 20:09:46.075830 31693 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:46.181789 31693 solver.cpp:219] Iteration 400 (943.776 iter/s, 0.105957s/100 iters), loss = 0.13731
I0428 20:09:46.181821 31693 solver.cpp:238]     Train net output #0: loss = 0.13731 (* 1 = 0.13731 loss)
I0428 20:09:46.181829 31693 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:46.287768 31693 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:46.346639 31700 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:46.348572 31693 solver.cpp:398]     Test net output #0: accuracy = 0.9588
I0428 20:09:46.348595 31693 solver.cpp:398]     Test net output #1: loss = 0.129302 (* 1 = 0.129302 loss)
I0428 20:09:46.349573 31693 solver.cpp:219] Iteration 500 (596.163 iter/s, 0.167739s/100 iters), loss = 0.157056
I0428 20:09:46.349601 31693 solver.cpp:238]     Train net output #0: loss = 0.157056 (* 1 = 0.157056 loss)
I0428 20:09:46.349627 31693 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:46.454998 31693 solver.cpp:219] Iteration 600 (948.894 iter/s, 0.105386s/100 iters), loss = 0.115928
I0428 20:09:46.455029 31693 solver.cpp:238]     Train net output #0: loss = 0.115928 (* 1 = 0.115928 loss)
I0428 20:09:46.455035 31693 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:46.561746 31693 solver.cpp:219] Iteration 700 (937.146 iter/s, 0.106707s/100 iters), loss = 0.0730713
I0428 20:09:46.561777 31693 solver.cpp:238]     Train net output #0: loss = 0.0730713 (* 1 = 0.0730713 loss)
I0428 20:09:46.561785 31693 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:46.668407 31693 solver.cpp:219] Iteration 800 (937.92 iter/s, 0.106619s/100 iters), loss = 0.21026
I0428 20:09:46.668439 31693 solver.cpp:238]     Train net output #0: loss = 0.21026 (* 1 = 0.21026 loss)
I0428 20:09:46.668448 31693 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:46.771703 31693 solver.cpp:219] Iteration 900 (968.476 iter/s, 0.103255s/100 iters), loss = 0.158281
I0428 20:09:46.771729 31693 solver.cpp:238]     Train net output #0: loss = 0.158281 (* 1 = 0.158281 loss)
I0428 20:09:46.771736 31693 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:46.806876 31699 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:46.881121 31693 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:46.882454 31693 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:46.883263 31693 solver.cpp:311] Iteration 1000, loss = 0.119892
I0428 20:09:46.883283 31693 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:46.941782 31700 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:46.943687 31693 solver.cpp:398]     Test net output #0: accuracy = 0.9745
I0428 20:09:46.943707 31693 solver.cpp:398]     Test net output #1: loss = 0.0777113 (* 1 = 0.0777113 loss)
I0428 20:09:46.943713 31693 solver.cpp:316] Optimization Done.
I0428 20:09:46.943717 31693 caffe.cpp:259] Optimization Done.
