I0428 19:43:25.372711 25343 caffe.cpp:218] Using GPUs 0
I0428 19:43:25.413291 25343 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:25.932081 25343 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test421.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:25.932226 25343 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test421.prototxt
I0428 19:43:25.932646 25343 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:25.932665 25343 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:25.932770 25343 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:25.932857 25343 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:25.932960 25343 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:25.932983 25343 net.cpp:86] Creating Layer mnist
I0428 19:43:25.932991 25343 net.cpp:382] mnist -> data
I0428 19:43:25.933014 25343 net.cpp:382] mnist -> label
I0428 19:43:25.934105 25343 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:25.936553 25343 net.cpp:124] Setting up mnist
I0428 19:43:25.936570 25343 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:25.936578 25343 net.cpp:131] Top shape: 64 (64)
I0428 19:43:25.936581 25343 net.cpp:139] Memory required for data: 200960
I0428 19:43:25.936589 25343 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:25.936604 25343 net.cpp:86] Creating Layer conv0
I0428 19:43:25.936625 25343 net.cpp:408] conv0 <- data
I0428 19:43:25.936638 25343 net.cpp:382] conv0 -> conv0
I0428 19:43:26.222195 25343 net.cpp:124] Setting up conv0
I0428 19:43:26.222225 25343 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:26.222230 25343 net.cpp:139] Memory required for data: 495872
I0428 19:43:26.222247 25343 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:26.222262 25343 net.cpp:86] Creating Layer pool0
I0428 19:43:26.222267 25343 net.cpp:408] pool0 <- conv0
I0428 19:43:26.222273 25343 net.cpp:382] pool0 -> pool0
I0428 19:43:26.222326 25343 net.cpp:124] Setting up pool0
I0428 19:43:26.222332 25343 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:26.222337 25343 net.cpp:139] Memory required for data: 569600
I0428 19:43:26.222339 25343 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:26.222352 25343 net.cpp:86] Creating Layer conv1
I0428 19:43:26.222354 25343 net.cpp:408] conv1 <- pool0
I0428 19:43:26.222360 25343 net.cpp:382] conv1 -> conv1
I0428 19:43:26.225426 25343 net.cpp:124] Setting up conv1
I0428 19:43:26.225443 25343 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:26.225448 25343 net.cpp:139] Memory required for data: 979200
I0428 19:43:26.225458 25343 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:26.225468 25343 net.cpp:86] Creating Layer pool1
I0428 19:43:26.225472 25343 net.cpp:408] pool1 <- conv1
I0428 19:43:26.225478 25343 net.cpp:382] pool1 -> pool1
I0428 19:43:26.225524 25343 net.cpp:124] Setting up pool1
I0428 19:43:26.225530 25343 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:26.225534 25343 net.cpp:139] Memory required for data: 1081600
I0428 19:43:26.225538 25343 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:26.225546 25343 net.cpp:86] Creating Layer ip1
I0428 19:43:26.225549 25343 net.cpp:408] ip1 <- pool1
I0428 19:43:26.225556 25343 net.cpp:382] ip1 -> ip1
I0428 19:43:26.225795 25343 net.cpp:124] Setting up ip1
I0428 19:43:26.225805 25343 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:26.225807 25343 net.cpp:139] Memory required for data: 1094400
I0428 19:43:26.225816 25343 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:26.225823 25343 net.cpp:86] Creating Layer relu1
I0428 19:43:26.225827 25343 net.cpp:408] relu1 <- ip1
I0428 19:43:26.225832 25343 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:26.226032 25343 net.cpp:124] Setting up relu1
I0428 19:43:26.226044 25343 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:26.226048 25343 net.cpp:139] Memory required for data: 1107200
I0428 19:43:26.226052 25343 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:26.226058 25343 net.cpp:86] Creating Layer ip2
I0428 19:43:26.226063 25343 net.cpp:408] ip2 <- ip1
I0428 19:43:26.226068 25343 net.cpp:382] ip2 -> ip2
I0428 19:43:26.226183 25343 net.cpp:124] Setting up ip2
I0428 19:43:26.226191 25343 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:26.226194 25343 net.cpp:139] Memory required for data: 1109760
I0428 19:43:26.226200 25343 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:26.226208 25343 net.cpp:86] Creating Layer relu2
I0428 19:43:26.226212 25343 net.cpp:408] relu2 <- ip2
I0428 19:43:26.226217 25343 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:26.227035 25343 net.cpp:124] Setting up relu2
I0428 19:43:26.227048 25343 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:26.227052 25343 net.cpp:139] Memory required for data: 1112320
I0428 19:43:26.227056 25343 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:26.227064 25343 net.cpp:86] Creating Layer ip3
I0428 19:43:26.227068 25343 net.cpp:408] ip3 <- ip2
I0428 19:43:26.227075 25343 net.cpp:382] ip3 -> ip3
I0428 19:43:26.227195 25343 net.cpp:124] Setting up ip3
I0428 19:43:26.227203 25343 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:26.227207 25343 net.cpp:139] Memory required for data: 1114880
I0428 19:43:26.227216 25343 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:26.227222 25343 net.cpp:86] Creating Layer relu3
I0428 19:43:26.227226 25343 net.cpp:408] relu3 <- ip3
I0428 19:43:26.227231 25343 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:26.227430 25343 net.cpp:124] Setting up relu3
I0428 19:43:26.227442 25343 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:26.227444 25343 net.cpp:139] Memory required for data: 1117440
I0428 19:43:26.227448 25343 layer_factory.hpp:77] Creating layer loss
I0428 19:43:26.227457 25343 net.cpp:86] Creating Layer loss
I0428 19:43:26.227459 25343 net.cpp:408] loss <- ip3
I0428 19:43:26.227464 25343 net.cpp:408] loss <- label
I0428 19:43:26.227470 25343 net.cpp:382] loss -> loss
I0428 19:43:26.227485 25343 layer_factory.hpp:77] Creating layer loss
I0428 19:43:26.227756 25343 net.cpp:124] Setting up loss
I0428 19:43:26.227766 25343 net.cpp:131] Top shape: (1)
I0428 19:43:26.227771 25343 net.cpp:134]     with loss weight 1
I0428 19:43:26.227784 25343 net.cpp:139] Memory required for data: 1117444
I0428 19:43:26.227788 25343 net.cpp:200] loss needs backward computation.
I0428 19:43:26.227792 25343 net.cpp:200] relu3 needs backward computation.
I0428 19:43:26.227795 25343 net.cpp:200] ip3 needs backward computation.
I0428 19:43:26.227799 25343 net.cpp:200] relu2 needs backward computation.
I0428 19:43:26.227802 25343 net.cpp:200] ip2 needs backward computation.
I0428 19:43:26.227805 25343 net.cpp:200] relu1 needs backward computation.
I0428 19:43:26.227808 25343 net.cpp:200] ip1 needs backward computation.
I0428 19:43:26.227811 25343 net.cpp:200] pool1 needs backward computation.
I0428 19:43:26.227815 25343 net.cpp:200] conv1 needs backward computation.
I0428 19:43:26.227818 25343 net.cpp:200] pool0 needs backward computation.
I0428 19:43:26.227821 25343 net.cpp:200] conv0 needs backward computation.
I0428 19:43:26.227825 25343 net.cpp:202] mnist does not need backward computation.
I0428 19:43:26.227831 25343 net.cpp:244] This network produces output loss
I0428 19:43:26.227841 25343 net.cpp:257] Network initialization done.
I0428 19:43:26.228210 25343 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test421.prototxt
I0428 19:43:26.228241 25343 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:26.228348 25343 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:26.228459 25343 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:26.228510 25343 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:26.228526 25343 net.cpp:86] Creating Layer mnist
I0428 19:43:26.228533 25343 net.cpp:382] mnist -> data
I0428 19:43:26.228541 25343 net.cpp:382] mnist -> label
I0428 19:43:26.228637 25343 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:26.230705 25343 net.cpp:124] Setting up mnist
I0428 19:43:26.230720 25343 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:26.230726 25343 net.cpp:131] Top shape: 100 (100)
I0428 19:43:26.230728 25343 net.cpp:139] Memory required for data: 314000
I0428 19:43:26.230732 25343 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:26.230741 25343 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:26.230744 25343 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:26.230756 25343 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:26.230763 25343 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:26.230809 25343 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:26.230815 25343 net.cpp:131] Top shape: 100 (100)
I0428 19:43:26.230819 25343 net.cpp:131] Top shape: 100 (100)
I0428 19:43:26.230823 25343 net.cpp:139] Memory required for data: 314800
I0428 19:43:26.230825 25343 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:26.230835 25343 net.cpp:86] Creating Layer conv0
I0428 19:43:26.230839 25343 net.cpp:408] conv0 <- data
I0428 19:43:26.230846 25343 net.cpp:382] conv0 -> conv0
I0428 19:43:26.232512 25343 net.cpp:124] Setting up conv0
I0428 19:43:26.232528 25343 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:26.232532 25343 net.cpp:139] Memory required for data: 775600
I0428 19:43:26.232542 25343 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:26.232549 25343 net.cpp:86] Creating Layer pool0
I0428 19:43:26.232553 25343 net.cpp:408] pool0 <- conv0
I0428 19:43:26.232559 25343 net.cpp:382] pool0 -> pool0
I0428 19:43:26.232599 25343 net.cpp:124] Setting up pool0
I0428 19:43:26.232605 25343 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:26.232609 25343 net.cpp:139] Memory required for data: 890800
I0428 19:43:26.232611 25343 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:26.232623 25343 net.cpp:86] Creating Layer conv1
I0428 19:43:26.232626 25343 net.cpp:408] conv1 <- pool0
I0428 19:43:26.232632 25343 net.cpp:382] conv1 -> conv1
I0428 19:43:26.234272 25343 net.cpp:124] Setting up conv1
I0428 19:43:26.234287 25343 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:26.234292 25343 net.cpp:139] Memory required for data: 1530800
I0428 19:43:26.234302 25343 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:26.234309 25343 net.cpp:86] Creating Layer pool1
I0428 19:43:26.234313 25343 net.cpp:408] pool1 <- conv1
I0428 19:43:26.234319 25343 net.cpp:382] pool1 -> pool1
I0428 19:43:26.234359 25343 net.cpp:124] Setting up pool1
I0428 19:43:26.234376 25343 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:26.234380 25343 net.cpp:139] Memory required for data: 1690800
I0428 19:43:26.234382 25343 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:26.234390 25343 net.cpp:86] Creating Layer ip1
I0428 19:43:26.234392 25343 net.cpp:408] ip1 <- pool1
I0428 19:43:26.234400 25343 net.cpp:382] ip1 -> ip1
I0428 19:43:26.234638 25343 net.cpp:124] Setting up ip1
I0428 19:43:26.234647 25343 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:26.234663 25343 net.cpp:139] Memory required for data: 1710800
I0428 19:43:26.234671 25343 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:26.234676 25343 net.cpp:86] Creating Layer relu1
I0428 19:43:26.234680 25343 net.cpp:408] relu1 <- ip1
I0428 19:43:26.234688 25343 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:26.234866 25343 net.cpp:124] Setting up relu1
I0428 19:43:26.234876 25343 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:26.234881 25343 net.cpp:139] Memory required for data: 1730800
I0428 19:43:26.234884 25343 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:26.234894 25343 net.cpp:86] Creating Layer ip2
I0428 19:43:26.234897 25343 net.cpp:408] ip2 <- ip1
I0428 19:43:26.234902 25343 net.cpp:382] ip2 -> ip2
I0428 19:43:26.235029 25343 net.cpp:124] Setting up ip2
I0428 19:43:26.235038 25343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:26.235040 25343 net.cpp:139] Memory required for data: 1734800
I0428 19:43:26.235046 25343 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:26.235051 25343 net.cpp:86] Creating Layer relu2
I0428 19:43:26.235054 25343 net.cpp:408] relu2 <- ip2
I0428 19:43:26.235060 25343 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:26.235319 25343 net.cpp:124] Setting up relu2
I0428 19:43:26.235329 25343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:26.235332 25343 net.cpp:139] Memory required for data: 1738800
I0428 19:43:26.235337 25343 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:26.235344 25343 net.cpp:86] Creating Layer ip3
I0428 19:43:26.235347 25343 net.cpp:408] ip3 <- ip2
I0428 19:43:26.235353 25343 net.cpp:382] ip3 -> ip3
I0428 19:43:26.235460 25343 net.cpp:124] Setting up ip3
I0428 19:43:26.235467 25343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:26.235471 25343 net.cpp:139] Memory required for data: 1742800
I0428 19:43:26.235479 25343 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:26.235486 25343 net.cpp:86] Creating Layer relu3
I0428 19:43:26.235488 25343 net.cpp:408] relu3 <- ip3
I0428 19:43:26.235493 25343 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:26.236351 25343 net.cpp:124] Setting up relu3
I0428 19:43:26.236363 25343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:26.236367 25343 net.cpp:139] Memory required for data: 1746800
I0428 19:43:26.236371 25343 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:26.236378 25343 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:26.236382 25343 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:26.236387 25343 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:26.236394 25343 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:26.236438 25343 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:26.236444 25343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:26.236449 25343 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:26.236451 25343 net.cpp:139] Memory required for data: 1754800
I0428 19:43:26.236455 25343 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:26.236461 25343 net.cpp:86] Creating Layer accuracy
I0428 19:43:26.236465 25343 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:26.236469 25343 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:26.236474 25343 net.cpp:382] accuracy -> accuracy
I0428 19:43:26.236481 25343 net.cpp:124] Setting up accuracy
I0428 19:43:26.236486 25343 net.cpp:131] Top shape: (1)
I0428 19:43:26.236490 25343 net.cpp:139] Memory required for data: 1754804
I0428 19:43:26.236492 25343 layer_factory.hpp:77] Creating layer loss
I0428 19:43:26.236497 25343 net.cpp:86] Creating Layer loss
I0428 19:43:26.236501 25343 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:26.236512 25343 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:26.236518 25343 net.cpp:382] loss -> loss
I0428 19:43:26.236526 25343 layer_factory.hpp:77] Creating layer loss
I0428 19:43:26.236786 25343 net.cpp:124] Setting up loss
I0428 19:43:26.236796 25343 net.cpp:131] Top shape: (1)
I0428 19:43:26.236800 25343 net.cpp:134]     with loss weight 1
I0428 19:43:26.236807 25343 net.cpp:139] Memory required for data: 1754808
I0428 19:43:26.236829 25343 net.cpp:200] loss needs backward computation.
I0428 19:43:26.236834 25343 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:26.236837 25343 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:26.236840 25343 net.cpp:200] relu3 needs backward computation.
I0428 19:43:26.236843 25343 net.cpp:200] ip3 needs backward computation.
I0428 19:43:26.236847 25343 net.cpp:200] relu2 needs backward computation.
I0428 19:43:26.236850 25343 net.cpp:200] ip2 needs backward computation.
I0428 19:43:26.236853 25343 net.cpp:200] relu1 needs backward computation.
I0428 19:43:26.236856 25343 net.cpp:200] ip1 needs backward computation.
I0428 19:43:26.236860 25343 net.cpp:200] pool1 needs backward computation.
I0428 19:43:26.236865 25343 net.cpp:200] conv1 needs backward computation.
I0428 19:43:26.236871 25343 net.cpp:200] pool0 needs backward computation.
I0428 19:43:26.236876 25343 net.cpp:200] conv0 needs backward computation.
I0428 19:43:26.236883 25343 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:26.236894 25343 net.cpp:202] mnist does not need backward computation.
I0428 19:43:26.236897 25343 net.cpp:244] This network produces output accuracy
I0428 19:43:26.236901 25343 net.cpp:244] This network produces output loss
I0428 19:43:26.236915 25343 net.cpp:257] Network initialization done.
I0428 19:43:26.236968 25343 solver.cpp:56] Solver scaffolding done.
I0428 19:43:26.237339 25343 caffe.cpp:248] Starting Optimization
I0428 19:43:26.237345 25343 solver.cpp:273] Solving LeNet
I0428 19:43:26.237349 25343 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:26.238282 25343 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:26.241786 25343 blocking_queue.cpp:49] Waiting for data
I0428 19:43:26.312115 25350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:26.312547 25343 solver.cpp:398]     Test net output #0: accuracy = 0.132
I0428 19:43:26.312564 25343 solver.cpp:398]     Test net output #1: loss = 2.29683 (* 1 = 2.29683 loss)
I0428 19:43:26.313755 25343 solver.cpp:219] Iteration 0 (-1.06359e-42 iter/s, 0.0763689s/100 iters), loss = 2.30663
I0428 19:43:26.313804 25343 solver.cpp:238]     Train net output #0: loss = 2.30663 (* 1 = 2.30663 loss)
I0428 19:43:26.313817 25343 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:26.397255 25343 solver.cpp:219] Iteration 100 (1198.62 iter/s, 0.0834295s/100 iters), loss = 1.51146
I0428 19:43:26.397297 25343 solver.cpp:238]     Train net output #0: loss = 1.51146 (* 1 = 1.51146 loss)
I0428 19:43:26.397305 25343 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:26.478842 25343 solver.cpp:219] Iteration 200 (1226.47 iter/s, 0.081535s/100 iters), loss = 0.856668
I0428 19:43:26.478880 25343 solver.cpp:238]     Train net output #0: loss = 0.856668 (* 1 = 0.856668 loss)
I0428 19:43:26.478886 25343 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:26.559343 25343 solver.cpp:219] Iteration 300 (1242.7 iter/s, 0.08047s/100 iters), loss = 0.755787
I0428 19:43:26.559383 25343 solver.cpp:238]     Train net output #0: loss = 0.755787 (* 1 = 0.755787 loss)
I0428 19:43:26.559389 25343 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:26.639585 25343 solver.cpp:219] Iteration 400 (1246.76 iter/s, 0.0802078s/100 iters), loss = 0.877345
I0428 19:43:26.639626 25343 solver.cpp:238]     Train net output #0: loss = 0.877345 (* 1 = 0.877345 loss)
I0428 19:43:26.639647 25343 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:26.720113 25343 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:26.769891 25350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:26.771354 25343 solver.cpp:398]     Test net output #0: accuracy = 0.6879
I0428 19:43:26.771402 25343 solver.cpp:398]     Test net output #1: loss = 0.798875 (* 1 = 0.798875 loss)
I0428 19:43:26.772374 25343 solver.cpp:219] Iteration 500 (753.288 iter/s, 0.132751s/100 iters), loss = 1.04842
I0428 19:43:26.772423 25343 solver.cpp:238]     Train net output #0: loss = 1.04842 (* 1 = 1.04842 loss)
I0428 19:43:26.772451 25343 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:26.862288 25343 solver.cpp:219] Iteration 600 (1112.85 iter/s, 0.0898591s/100 iters), loss = 0.589736
I0428 19:43:26.862339 25343 solver.cpp:238]     Train net output #0: loss = 0.589736 (* 1 = 0.589736 loss)
I0428 19:43:26.862349 25343 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:26.944231 25343 solver.cpp:219] Iteration 700 (1221.07 iter/s, 0.0818954s/100 iters), loss = 1.08853
I0428 19:43:26.944270 25343 solver.cpp:238]     Train net output #0: loss = 1.08853 (* 1 = 1.08853 loss)
I0428 19:43:26.944278 25343 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:27.024534 25343 solver.cpp:219] Iteration 800 (1245.79 iter/s, 0.0802703s/100 iters), loss = 0.741164
I0428 19:43:27.024574 25343 solver.cpp:238]     Train net output #0: loss = 0.741164 (* 1 = 0.741164 loss)
I0428 19:43:27.024580 25343 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:27.112893 25343 solver.cpp:219] Iteration 900 (1132.19 iter/s, 0.0883241s/100 iters), loss = 0.552029
I0428 19:43:27.112934 25343 solver.cpp:238]     Train net output #0: loss = 0.552029 (* 1 = 0.552029 loss)
I0428 19:43:27.112942 25343 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:27.141715 25349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:27.195983 25343 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:27.197065 25343 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:27.197724 25343 solver.cpp:311] Iteration 1000, loss = 0.652688
I0428 19:43:27.197738 25343 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:27.240774 25350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:27.241219 25343 solver.cpp:398]     Test net output #0: accuracy = 0.7907
I0428 19:43:27.241237 25343 solver.cpp:398]     Test net output #1: loss = 0.523894 (* 1 = 0.523894 loss)
I0428 19:43:27.241255 25343 solver.cpp:316] Optimization Done.
I0428 19:43:27.241257 25343 caffe.cpp:259] Optimization Done.
