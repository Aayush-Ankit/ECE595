I0428 19:51:31.438076 27302 caffe.cpp:218] Using GPUs 0
I0428 19:51:31.474879 27302 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:31.931156 27302 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test636.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:31.931313 27302 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test636.prototxt
I0428 19:51:31.931655 27302 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:31.931668 27302 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:31.931744 27302 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:31.931818 27302 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:31.931902 27302 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:31.931922 27302 net.cpp:86] Creating Layer mnist
I0428 19:51:31.931934 27302 net.cpp:382] mnist -> data
I0428 19:51:31.931954 27302 net.cpp:382] mnist -> label
I0428 19:51:31.932972 27302 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:31.935256 27302 net.cpp:124] Setting up mnist
I0428 19:51:31.935302 27302 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:31.935307 27302 net.cpp:131] Top shape: 64 (64)
I0428 19:51:31.935310 27302 net.cpp:139] Memory required for data: 200960
I0428 19:51:31.935317 27302 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:31.935330 27302 net.cpp:86] Creating Layer conv0
I0428 19:51:31.935349 27302 net.cpp:408] conv0 <- data
I0428 19:51:31.935360 27302 net.cpp:382] conv0 -> conv0
I0428 19:51:32.166031 27302 net.cpp:124] Setting up conv0
I0428 19:51:32.166074 27302 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:32.166079 27302 net.cpp:139] Memory required for data: 938240
I0428 19:51:32.166093 27302 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:32.166121 27302 net.cpp:86] Creating Layer pool0
I0428 19:51:32.166126 27302 net.cpp:408] pool0 <- conv0
I0428 19:51:32.166131 27302 net.cpp:382] pool0 -> pool0
I0428 19:51:32.166179 27302 net.cpp:124] Setting up pool0
I0428 19:51:32.166187 27302 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:32.166189 27302 net.cpp:139] Memory required for data: 1122560
I0428 19:51:32.166193 27302 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:32.166204 27302 net.cpp:86] Creating Layer conv1
I0428 19:51:32.166209 27302 net.cpp:408] conv1 <- pool0
I0428 19:51:32.166215 27302 net.cpp:382] conv1 -> conv1
I0428 19:51:32.168890 27302 net.cpp:124] Setting up conv1
I0428 19:51:32.168921 27302 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:32.168926 27302 net.cpp:139] Memory required for data: 1532160
I0428 19:51:32.168933 27302 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:32.168957 27302 net.cpp:86] Creating Layer pool1
I0428 19:51:32.168962 27302 net.cpp:408] pool1 <- conv1
I0428 19:51:32.168967 27302 net.cpp:382] pool1 -> pool1
I0428 19:51:32.169006 27302 net.cpp:124] Setting up pool1
I0428 19:51:32.169013 27302 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:32.169016 27302 net.cpp:139] Memory required for data: 1634560
I0428 19:51:32.169020 27302 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:32.169026 27302 net.cpp:86] Creating Layer ip1
I0428 19:51:32.169029 27302 net.cpp:408] ip1 <- pool1
I0428 19:51:32.169035 27302 net.cpp:382] ip1 -> ip1
I0428 19:51:32.169174 27302 net.cpp:124] Setting up ip1
I0428 19:51:32.169181 27302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:32.169184 27302 net.cpp:139] Memory required for data: 1637120
I0428 19:51:32.169191 27302 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:32.169199 27302 net.cpp:86] Creating Layer relu1
I0428 19:51:32.169203 27302 net.cpp:408] relu1 <- ip1
I0428 19:51:32.169209 27302 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:32.169399 27302 net.cpp:124] Setting up relu1
I0428 19:51:32.169407 27302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:32.169410 27302 net.cpp:139] Memory required for data: 1639680
I0428 19:51:32.169414 27302 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:32.169420 27302 net.cpp:86] Creating Layer ip2
I0428 19:51:32.169422 27302 net.cpp:408] ip2 <- ip1
I0428 19:51:32.169428 27302 net.cpp:382] ip2 -> ip2
I0428 19:51:32.169523 27302 net.cpp:124] Setting up ip2
I0428 19:51:32.169530 27302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:32.169533 27302 net.cpp:139] Memory required for data: 1642240
I0428 19:51:32.169538 27302 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:32.169545 27302 net.cpp:86] Creating Layer relu2
I0428 19:51:32.169548 27302 net.cpp:408] relu2 <- ip2
I0428 19:51:32.169551 27302 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:32.170320 27302 net.cpp:124] Setting up relu2
I0428 19:51:32.170331 27302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:32.170336 27302 net.cpp:139] Memory required for data: 1644800
I0428 19:51:32.170338 27302 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:32.170346 27302 net.cpp:86] Creating Layer ip3
I0428 19:51:32.170349 27302 net.cpp:408] ip3 <- ip2
I0428 19:51:32.170356 27302 net.cpp:382] ip3 -> ip3
I0428 19:51:32.170452 27302 net.cpp:124] Setting up ip3
I0428 19:51:32.170462 27302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:32.170466 27302 net.cpp:139] Memory required for data: 1647360
I0428 19:51:32.170473 27302 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:32.170478 27302 net.cpp:86] Creating Layer relu3
I0428 19:51:32.170481 27302 net.cpp:408] relu3 <- ip3
I0428 19:51:32.170485 27302 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:32.170653 27302 net.cpp:124] Setting up relu3
I0428 19:51:32.170661 27302 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:32.170665 27302 net.cpp:139] Memory required for data: 1649920
I0428 19:51:32.170667 27302 layer_factory.hpp:77] Creating layer loss
I0428 19:51:32.170675 27302 net.cpp:86] Creating Layer loss
I0428 19:51:32.170677 27302 net.cpp:408] loss <- ip3
I0428 19:51:32.170680 27302 net.cpp:408] loss <- label
I0428 19:51:32.170686 27302 net.cpp:382] loss -> loss
I0428 19:51:32.170702 27302 layer_factory.hpp:77] Creating layer loss
I0428 19:51:32.170951 27302 net.cpp:124] Setting up loss
I0428 19:51:32.170960 27302 net.cpp:131] Top shape: (1)
I0428 19:51:32.170964 27302 net.cpp:134]     with loss weight 1
I0428 19:51:32.170977 27302 net.cpp:139] Memory required for data: 1649924
I0428 19:51:32.170981 27302 net.cpp:200] loss needs backward computation.
I0428 19:51:32.170984 27302 net.cpp:200] relu3 needs backward computation.
I0428 19:51:32.170987 27302 net.cpp:200] ip3 needs backward computation.
I0428 19:51:32.170990 27302 net.cpp:200] relu2 needs backward computation.
I0428 19:51:32.170994 27302 net.cpp:200] ip2 needs backward computation.
I0428 19:51:32.170995 27302 net.cpp:200] relu1 needs backward computation.
I0428 19:51:32.170999 27302 net.cpp:200] ip1 needs backward computation.
I0428 19:51:32.171012 27302 net.cpp:200] pool1 needs backward computation.
I0428 19:51:32.171015 27302 net.cpp:200] conv1 needs backward computation.
I0428 19:51:32.171020 27302 net.cpp:200] pool0 needs backward computation.
I0428 19:51:32.171021 27302 net.cpp:200] conv0 needs backward computation.
I0428 19:51:32.171025 27302 net.cpp:202] mnist does not need backward computation.
I0428 19:51:32.171027 27302 net.cpp:244] This network produces output loss
I0428 19:51:32.171036 27302 net.cpp:257] Network initialization done.
I0428 19:51:32.171373 27302 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test636.prototxt
I0428 19:51:32.171417 27302 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:32.171527 27302 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:32.171610 27302 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:32.171667 27302 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:32.171684 27302 net.cpp:86] Creating Layer mnist
I0428 19:51:32.171689 27302 net.cpp:382] mnist -> data
I0428 19:51:32.171696 27302 net.cpp:382] mnist -> label
I0428 19:51:32.171813 27302 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:32.173792 27302 net.cpp:124] Setting up mnist
I0428 19:51:32.173805 27302 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:32.173830 27302 net.cpp:131] Top shape: 100 (100)
I0428 19:51:32.173832 27302 net.cpp:139] Memory required for data: 314000
I0428 19:51:32.173835 27302 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:32.173846 27302 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:32.173849 27302 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:32.173853 27302 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:32.173861 27302 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:32.173946 27302 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:32.173954 27302 net.cpp:131] Top shape: 100 (100)
I0428 19:51:32.173959 27302 net.cpp:131] Top shape: 100 (100)
I0428 19:51:32.173960 27302 net.cpp:139] Memory required for data: 314800
I0428 19:51:32.173964 27302 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:32.173974 27302 net.cpp:86] Creating Layer conv0
I0428 19:51:32.173979 27302 net.cpp:408] conv0 <- data
I0428 19:51:32.173985 27302 net.cpp:382] conv0 -> conv0
I0428 19:51:32.175650 27302 net.cpp:124] Setting up conv0
I0428 19:51:32.175664 27302 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:32.175684 27302 net.cpp:139] Memory required for data: 1466800
I0428 19:51:32.175693 27302 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:32.175701 27302 net.cpp:86] Creating Layer pool0
I0428 19:51:32.175704 27302 net.cpp:408] pool0 <- conv0
I0428 19:51:32.175709 27302 net.cpp:382] pool0 -> pool0
I0428 19:51:32.175745 27302 net.cpp:124] Setting up pool0
I0428 19:51:32.175752 27302 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:32.175755 27302 net.cpp:139] Memory required for data: 1754800
I0428 19:51:32.175758 27302 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:32.175767 27302 net.cpp:86] Creating Layer conv1
I0428 19:51:32.175771 27302 net.cpp:408] conv1 <- pool0
I0428 19:51:32.175776 27302 net.cpp:382] conv1 -> conv1
I0428 19:51:32.177924 27302 net.cpp:124] Setting up conv1
I0428 19:51:32.177938 27302 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:32.177959 27302 net.cpp:139] Memory required for data: 2394800
I0428 19:51:32.177968 27302 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:32.177976 27302 net.cpp:86] Creating Layer pool1
I0428 19:51:32.177995 27302 net.cpp:408] pool1 <- conv1
I0428 19:51:32.178000 27302 net.cpp:382] pool1 -> pool1
I0428 19:51:32.178042 27302 net.cpp:124] Setting up pool1
I0428 19:51:32.178050 27302 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:32.178053 27302 net.cpp:139] Memory required for data: 2554800
I0428 19:51:32.178056 27302 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:32.178064 27302 net.cpp:86] Creating Layer ip1
I0428 19:51:32.178067 27302 net.cpp:408] ip1 <- pool1
I0428 19:51:32.178072 27302 net.cpp:382] ip1 -> ip1
I0428 19:51:32.178223 27302 net.cpp:124] Setting up ip1
I0428 19:51:32.178231 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.178243 27302 net.cpp:139] Memory required for data: 2558800
I0428 19:51:32.178252 27302 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:32.178259 27302 net.cpp:86] Creating Layer relu1
I0428 19:51:32.178263 27302 net.cpp:408] relu1 <- ip1
I0428 19:51:32.178267 27302 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:32.178486 27302 net.cpp:124] Setting up relu1
I0428 19:51:32.178496 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.178499 27302 net.cpp:139] Memory required for data: 2562800
I0428 19:51:32.178519 27302 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:32.178526 27302 net.cpp:86] Creating Layer ip2
I0428 19:51:32.178529 27302 net.cpp:408] ip2 <- ip1
I0428 19:51:32.178535 27302 net.cpp:382] ip2 -> ip2
I0428 19:51:32.178632 27302 net.cpp:124] Setting up ip2
I0428 19:51:32.178640 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.178643 27302 net.cpp:139] Memory required for data: 2566800
I0428 19:51:32.178648 27302 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:32.178659 27302 net.cpp:86] Creating Layer relu2
I0428 19:51:32.178663 27302 net.cpp:408] relu2 <- ip2
I0428 19:51:32.178668 27302 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:32.178818 27302 net.cpp:124] Setting up relu2
I0428 19:51:32.178828 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.178830 27302 net.cpp:139] Memory required for data: 2570800
I0428 19:51:32.178834 27302 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:32.178839 27302 net.cpp:86] Creating Layer ip3
I0428 19:51:32.178843 27302 net.cpp:408] ip3 <- ip2
I0428 19:51:32.178848 27302 net.cpp:382] ip3 -> ip3
I0428 19:51:32.178941 27302 net.cpp:124] Setting up ip3
I0428 19:51:32.178948 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.178951 27302 net.cpp:139] Memory required for data: 2574800
I0428 19:51:32.178967 27302 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:32.178973 27302 net.cpp:86] Creating Layer relu3
I0428 19:51:32.178975 27302 net.cpp:408] relu3 <- ip3
I0428 19:51:32.178980 27302 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:32.179785 27302 net.cpp:124] Setting up relu3
I0428 19:51:32.179797 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.179817 27302 net.cpp:139] Memory required for data: 2578800
I0428 19:51:32.179821 27302 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:32.179826 27302 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:32.179829 27302 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:32.179836 27302 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:32.179841 27302 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:32.179883 27302 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:32.179889 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.179893 27302 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:32.179895 27302 net.cpp:139] Memory required for data: 2586800
I0428 19:51:32.179904 27302 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:32.179911 27302 net.cpp:86] Creating Layer accuracy
I0428 19:51:32.179921 27302 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:32.179925 27302 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:32.179929 27302 net.cpp:382] accuracy -> accuracy
I0428 19:51:32.179937 27302 net.cpp:124] Setting up accuracy
I0428 19:51:32.179949 27302 net.cpp:131] Top shape: (1)
I0428 19:51:32.179952 27302 net.cpp:139] Memory required for data: 2586804
I0428 19:51:32.179955 27302 layer_factory.hpp:77] Creating layer loss
I0428 19:51:32.179960 27302 net.cpp:86] Creating Layer loss
I0428 19:51:32.179963 27302 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:32.179967 27302 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:32.179977 27302 net.cpp:382] loss -> loss
I0428 19:51:32.179983 27302 layer_factory.hpp:77] Creating layer loss
I0428 19:51:32.180222 27302 net.cpp:124] Setting up loss
I0428 19:51:32.180232 27302 net.cpp:131] Top shape: (1)
I0428 19:51:32.180234 27302 net.cpp:134]     with loss weight 1
I0428 19:51:32.180243 27302 net.cpp:139] Memory required for data: 2586808
I0428 19:51:32.180256 27302 net.cpp:200] loss needs backward computation.
I0428 19:51:32.180260 27302 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:32.180270 27302 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:32.180274 27302 net.cpp:200] relu3 needs backward computation.
I0428 19:51:32.180276 27302 net.cpp:200] ip3 needs backward computation.
I0428 19:51:32.180284 27302 net.cpp:200] relu2 needs backward computation.
I0428 19:51:32.180286 27302 net.cpp:200] ip2 needs backward computation.
I0428 19:51:32.180289 27302 net.cpp:200] relu1 needs backward computation.
I0428 19:51:32.180296 27302 net.cpp:200] ip1 needs backward computation.
I0428 19:51:32.180299 27302 net.cpp:200] pool1 needs backward computation.
I0428 19:51:32.180304 27302 net.cpp:200] conv1 needs backward computation.
I0428 19:51:32.180306 27302 net.cpp:200] pool0 needs backward computation.
I0428 19:51:32.180310 27302 net.cpp:200] conv0 needs backward computation.
I0428 19:51:32.180313 27302 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:32.180323 27302 net.cpp:202] mnist does not need backward computation.
I0428 19:51:32.180331 27302 net.cpp:244] This network produces output accuracy
I0428 19:51:32.180335 27302 net.cpp:244] This network produces output loss
I0428 19:51:32.180346 27302 net.cpp:257] Network initialization done.
I0428 19:51:32.180387 27302 solver.cpp:56] Solver scaffolding done.
I0428 19:51:32.180749 27302 caffe.cpp:248] Starting Optimization
I0428 19:51:32.180755 27302 solver.cpp:273] Solving LeNet
I0428 19:51:32.180758 27302 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:32.181080 27302 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:32.185257 27302 blocking_queue.cpp:49] Waiting for data
I0428 19:51:32.258883 27309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:32.259407 27302 solver.cpp:398]     Test net output #0: accuracy = 0.0794
I0428 19:51:32.259443 27302 solver.cpp:398]     Test net output #1: loss = 2.30539 (* 1 = 2.30539 loss)
I0428 19:51:32.261219 27302 solver.cpp:219] Iteration 0 (0 iter/s, 0.0804106s/100 iters), loss = 2.30899
I0428 19:51:32.261262 27302 solver.cpp:238]     Train net output #0: loss = 2.30899 (* 1 = 2.30899 loss)
I0428 19:51:32.261273 27302 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:32.355363 27302 solver.cpp:219] Iteration 100 (1062.82 iter/s, 0.0940896s/100 iters), loss = 1.52252
I0428 19:51:32.355388 27302 solver.cpp:238]     Train net output #0: loss = 1.52252 (* 1 = 1.52252 loss)
I0428 19:51:32.355394 27302 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:32.443646 27302 solver.cpp:219] Iteration 200 (1133.17 iter/s, 0.0882483s/100 iters), loss = 1.01236
I0428 19:51:32.443670 27302 solver.cpp:238]     Train net output #0: loss = 1.01236 (* 1 = 1.01236 loss)
I0428 19:51:32.443675 27302 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:32.527199 27302 solver.cpp:219] Iteration 300 (1197.33 iter/s, 0.0835194s/100 iters), loss = 1.09473
I0428 19:51:32.527225 27302 solver.cpp:238]     Train net output #0: loss = 1.09473 (* 1 = 1.09473 loss)
I0428 19:51:32.527231 27302 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:32.621189 27302 solver.cpp:219] Iteration 400 (1064.35 iter/s, 0.093954s/100 iters), loss = 1.27226
I0428 19:51:32.621213 27302 solver.cpp:238]     Train net output #0: loss = 1.27226 (* 1 = 1.27226 loss)
I0428 19:51:32.621235 27302 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:32.710788 27302 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:32.787108 27309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:32.787677 27302 solver.cpp:398]     Test net output #0: accuracy = 0.5807
I0428 19:51:32.787698 27302 solver.cpp:398]     Test net output #1: loss = 1.07361 (* 1 = 1.07361 loss)
I0428 19:51:32.788731 27302 solver.cpp:219] Iteration 500 (597.001 iter/s, 0.167504s/100 iters), loss = 1.29978
I0428 19:51:32.788781 27302 solver.cpp:238]     Train net output #0: loss = 1.29978 (* 1 = 1.29978 loss)
I0428 19:51:32.788805 27302 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:32.883427 27302 solver.cpp:219] Iteration 600 (1056.67 iter/s, 0.0946367s/100 iters), loss = 0.905151
I0428 19:51:32.883450 27302 solver.cpp:238]     Train net output #0: loss = 0.905151 (* 1 = 0.905151 loss)
I0428 19:51:32.883457 27302 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:32.973572 27302 solver.cpp:219] Iteration 700 (1109.75 iter/s, 0.09011s/100 iters), loss = 1.41668
I0428 19:51:32.973594 27302 solver.cpp:238]     Train net output #0: loss = 1.41668 (* 1 = 1.41668 loss)
I0428 19:51:32.973600 27302 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:33.062052 27302 solver.cpp:219] Iteration 800 (1130.61 iter/s, 0.0884479s/100 iters), loss = 0.994866
I0428 19:51:33.062106 27302 solver.cpp:238]     Train net output #0: loss = 0.994866 (* 1 = 0.994866 loss)
I0428 19:51:33.062113 27302 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:33.150027 27302 solver.cpp:219] Iteration 900 (1137.28 iter/s, 0.0879288s/100 iters), loss = 0.778479
I0428 19:51:33.150068 27302 solver.cpp:238]     Train net output #0: loss = 0.778479 (* 1 = 0.778479 loss)
I0428 19:51:33.150074 27302 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:33.179442 27308 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:33.236888 27302 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:33.237802 27302 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:33.238312 27302 solver.cpp:311] Iteration 1000, loss = 0.982877
I0428 19:51:33.238327 27302 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:33.313236 27309 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:33.313756 27302 solver.cpp:398]     Test net output #0: accuracy = 0.6863
I0428 19:51:33.313794 27302 solver.cpp:398]     Test net output #1: loss = 0.802696 (* 1 = 0.802696 loss)
I0428 19:51:33.313799 27302 solver.cpp:316] Optimization Done.
I0428 19:51:33.313802 27302 caffe.cpp:259] Optimization Done.
