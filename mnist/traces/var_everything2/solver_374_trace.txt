I0428 19:41:45.502977 24905 caffe.cpp:218] Using GPUs 0
I0428 19:41:45.544104 24905 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:46.066243 24905 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test374.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:46.066383 24905 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test374.prototxt
I0428 19:41:46.066802 24905 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:46.066820 24905 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:46.066923 24905 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:46.067003 24905 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:46.067103 24905 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:46.067129 24905 net.cpp:86] Creating Layer mnist
I0428 19:41:46.067140 24905 net.cpp:382] mnist -> data
I0428 19:41:46.067162 24905 net.cpp:382] mnist -> label
I0428 19:41:46.068256 24905 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:46.070720 24905 net.cpp:124] Setting up mnist
I0428 19:41:46.070739 24905 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:46.070744 24905 net.cpp:131] Top shape: 64 (64)
I0428 19:41:46.070749 24905 net.cpp:139] Memory required for data: 200960
I0428 19:41:46.070756 24905 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:46.070799 24905 net.cpp:86] Creating Layer conv0
I0428 19:41:46.070824 24905 net.cpp:408] conv0 <- data
I0428 19:41:46.070839 24905 net.cpp:382] conv0 -> conv0
I0428 19:41:46.355633 24905 net.cpp:124] Setting up conv0
I0428 19:41:46.355660 24905 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:46.355664 24905 net.cpp:139] Memory required for data: 495872
I0428 19:41:46.355680 24905 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:46.355708 24905 net.cpp:86] Creating Layer pool0
I0428 19:41:46.355733 24905 net.cpp:408] pool0 <- conv0
I0428 19:41:46.355738 24905 net.cpp:382] pool0 -> pool0
I0428 19:41:46.355787 24905 net.cpp:124] Setting up pool0
I0428 19:41:46.355793 24905 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:46.355796 24905 net.cpp:139] Memory required for data: 569600
I0428 19:41:46.355799 24905 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:46.355810 24905 net.cpp:86] Creating Layer conv1
I0428 19:41:46.355813 24905 net.cpp:408] conv1 <- pool0
I0428 19:41:46.355818 24905 net.cpp:382] conv1 -> conv1
I0428 19:41:46.357733 24905 net.cpp:124] Setting up conv1
I0428 19:41:46.357749 24905 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:46.357753 24905 net.cpp:139] Memory required for data: 733440
I0428 19:41:46.357762 24905 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:46.357770 24905 net.cpp:86] Creating Layer pool1
I0428 19:41:46.357774 24905 net.cpp:408] pool1 <- conv1
I0428 19:41:46.357779 24905 net.cpp:382] pool1 -> pool1
I0428 19:41:46.357817 24905 net.cpp:124] Setting up pool1
I0428 19:41:46.357825 24905 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:46.357828 24905 net.cpp:139] Memory required for data: 774400
I0428 19:41:46.357831 24905 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:46.357839 24905 net.cpp:86] Creating Layer ip1
I0428 19:41:46.357842 24905 net.cpp:408] ip1 <- pool1
I0428 19:41:46.357847 24905 net.cpp:382] ip1 -> ip1
I0428 19:41:46.358809 24905 net.cpp:124] Setting up ip1
I0428 19:41:46.358824 24905 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:46.358827 24905 net.cpp:139] Memory required for data: 780800
I0428 19:41:46.358835 24905 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:46.358842 24905 net.cpp:86] Creating Layer relu1
I0428 19:41:46.358845 24905 net.cpp:408] relu1 <- ip1
I0428 19:41:46.358850 24905 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:46.359040 24905 net.cpp:124] Setting up relu1
I0428 19:41:46.359050 24905 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:46.359052 24905 net.cpp:139] Memory required for data: 787200
I0428 19:41:46.359056 24905 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:46.359062 24905 net.cpp:86] Creating Layer ip2
I0428 19:41:46.359066 24905 net.cpp:408] ip2 <- ip1
I0428 19:41:46.359071 24905 net.cpp:382] ip2 -> ip2
I0428 19:41:46.359165 24905 net.cpp:124] Setting up ip2
I0428 19:41:46.359172 24905 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:46.359175 24905 net.cpp:139] Memory required for data: 789760
I0428 19:41:46.359181 24905 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:46.359187 24905 net.cpp:86] Creating Layer relu2
I0428 19:41:46.359190 24905 net.cpp:408] relu2 <- ip2
I0428 19:41:46.359195 24905 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:46.359938 24905 net.cpp:124] Setting up relu2
I0428 19:41:46.359951 24905 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:46.359954 24905 net.cpp:139] Memory required for data: 792320
I0428 19:41:46.359958 24905 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:46.359966 24905 net.cpp:86] Creating Layer ip3
I0428 19:41:46.359969 24905 net.cpp:408] ip3 <- ip2
I0428 19:41:46.359975 24905 net.cpp:382] ip3 -> ip3
I0428 19:41:46.360097 24905 net.cpp:124] Setting up ip3
I0428 19:41:46.360105 24905 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:46.360108 24905 net.cpp:139] Memory required for data: 794880
I0428 19:41:46.360116 24905 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:46.360121 24905 net.cpp:86] Creating Layer relu3
I0428 19:41:46.360124 24905 net.cpp:408] relu3 <- ip3
I0428 19:41:46.360129 24905 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:46.360306 24905 net.cpp:124] Setting up relu3
I0428 19:41:46.360314 24905 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:46.360317 24905 net.cpp:139] Memory required for data: 797440
I0428 19:41:46.360321 24905 layer_factory.hpp:77] Creating layer loss
I0428 19:41:46.360327 24905 net.cpp:86] Creating Layer loss
I0428 19:41:46.360332 24905 net.cpp:408] loss <- ip3
I0428 19:41:46.360334 24905 net.cpp:408] loss <- label
I0428 19:41:46.360339 24905 net.cpp:382] loss -> loss
I0428 19:41:46.360357 24905 layer_factory.hpp:77] Creating layer loss
I0428 19:41:46.360596 24905 net.cpp:124] Setting up loss
I0428 19:41:46.360606 24905 net.cpp:131] Top shape: (1)
I0428 19:41:46.360610 24905 net.cpp:134]     with loss weight 1
I0428 19:41:46.360623 24905 net.cpp:139] Memory required for data: 797444
I0428 19:41:46.360627 24905 net.cpp:200] loss needs backward computation.
I0428 19:41:46.360630 24905 net.cpp:200] relu3 needs backward computation.
I0428 19:41:46.360633 24905 net.cpp:200] ip3 needs backward computation.
I0428 19:41:46.360636 24905 net.cpp:200] relu2 needs backward computation.
I0428 19:41:46.360638 24905 net.cpp:200] ip2 needs backward computation.
I0428 19:41:46.360641 24905 net.cpp:200] relu1 needs backward computation.
I0428 19:41:46.360643 24905 net.cpp:200] ip1 needs backward computation.
I0428 19:41:46.360646 24905 net.cpp:200] pool1 needs backward computation.
I0428 19:41:46.360649 24905 net.cpp:200] conv1 needs backward computation.
I0428 19:41:46.360652 24905 net.cpp:200] pool0 needs backward computation.
I0428 19:41:46.360654 24905 net.cpp:200] conv0 needs backward computation.
I0428 19:41:46.360659 24905 net.cpp:202] mnist does not need backward computation.
I0428 19:41:46.360661 24905 net.cpp:244] This network produces output loss
I0428 19:41:46.360671 24905 net.cpp:257] Network initialization done.
I0428 19:41:46.361062 24905 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test374.prototxt
I0428 19:41:46.361091 24905 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:46.361232 24905 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:46.361316 24905 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:46.361357 24905 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:46.361369 24905 net.cpp:86] Creating Layer mnist
I0428 19:41:46.361374 24905 net.cpp:382] mnist -> data
I0428 19:41:46.361382 24905 net.cpp:382] mnist -> label
I0428 19:41:46.361467 24905 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:46.363324 24905 net.cpp:124] Setting up mnist
I0428 19:41:46.363353 24905 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:46.363358 24905 net.cpp:131] Top shape: 100 (100)
I0428 19:41:46.363361 24905 net.cpp:139] Memory required for data: 314000
I0428 19:41:46.363379 24905 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:46.363409 24905 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:46.363415 24905 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:46.363421 24905 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:46.363442 24905 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:46.363569 24905 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:46.363576 24905 net.cpp:131] Top shape: 100 (100)
I0428 19:41:46.363580 24905 net.cpp:131] Top shape: 100 (100)
I0428 19:41:46.363584 24905 net.cpp:139] Memory required for data: 314800
I0428 19:41:46.363586 24905 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:46.363597 24905 net.cpp:86] Creating Layer conv0
I0428 19:41:46.363600 24905 net.cpp:408] conv0 <- data
I0428 19:41:46.363606 24905 net.cpp:382] conv0 -> conv0
I0428 19:41:46.365372 24905 net.cpp:124] Setting up conv0
I0428 19:41:46.365387 24905 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:46.365391 24905 net.cpp:139] Memory required for data: 775600
I0428 19:41:46.365401 24905 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:46.365407 24905 net.cpp:86] Creating Layer pool0
I0428 19:41:46.365413 24905 net.cpp:408] pool0 <- conv0
I0428 19:41:46.365418 24905 net.cpp:382] pool0 -> pool0
I0428 19:41:46.365456 24905 net.cpp:124] Setting up pool0
I0428 19:41:46.365464 24905 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:46.365468 24905 net.cpp:139] Memory required for data: 890800
I0428 19:41:46.365470 24905 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:46.365483 24905 net.cpp:86] Creating Layer conv1
I0428 19:41:46.365485 24905 net.cpp:408] conv1 <- pool0
I0428 19:41:46.365490 24905 net.cpp:382] conv1 -> conv1
I0428 19:41:46.367154 24905 net.cpp:124] Setting up conv1
I0428 19:41:46.367169 24905 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:46.367173 24905 net.cpp:139] Memory required for data: 1146800
I0428 19:41:46.367182 24905 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:46.367190 24905 net.cpp:86] Creating Layer pool1
I0428 19:41:46.367193 24905 net.cpp:408] pool1 <- conv1
I0428 19:41:46.367198 24905 net.cpp:382] pool1 -> pool1
I0428 19:41:46.367254 24905 net.cpp:124] Setting up pool1
I0428 19:41:46.367260 24905 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:46.367264 24905 net.cpp:139] Memory required for data: 1210800
I0428 19:41:46.367266 24905 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:46.367272 24905 net.cpp:86] Creating Layer ip1
I0428 19:41:46.367275 24905 net.cpp:408] ip1 <- pool1
I0428 19:41:46.367281 24905 net.cpp:382] ip1 -> ip1
I0428 19:41:46.367406 24905 net.cpp:124] Setting up ip1
I0428 19:41:46.367414 24905 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:46.367446 24905 net.cpp:139] Memory required for data: 1220800
I0428 19:41:46.367455 24905 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:46.367462 24905 net.cpp:86] Creating Layer relu1
I0428 19:41:46.367465 24905 net.cpp:408] relu1 <- ip1
I0428 19:41:46.367472 24905 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:46.367658 24905 net.cpp:124] Setting up relu1
I0428 19:41:46.367667 24905 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:46.367672 24905 net.cpp:139] Memory required for data: 1230800
I0428 19:41:46.367676 24905 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:46.367683 24905 net.cpp:86] Creating Layer ip2
I0428 19:41:46.367686 24905 net.cpp:408] ip2 <- ip1
I0428 19:41:46.367700 24905 net.cpp:382] ip2 -> ip2
I0428 19:41:46.367815 24905 net.cpp:124] Setting up ip2
I0428 19:41:46.367822 24905 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:46.367825 24905 net.cpp:139] Memory required for data: 1234800
I0428 19:41:46.367831 24905 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:46.367837 24905 net.cpp:86] Creating Layer relu2
I0428 19:41:46.367841 24905 net.cpp:408] relu2 <- ip2
I0428 19:41:46.367844 24905 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:46.368105 24905 net.cpp:124] Setting up relu2
I0428 19:41:46.368115 24905 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:46.368120 24905 net.cpp:139] Memory required for data: 1238800
I0428 19:41:46.368124 24905 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:46.368130 24905 net.cpp:86] Creating Layer ip3
I0428 19:41:46.368134 24905 net.cpp:408] ip3 <- ip2
I0428 19:41:46.368140 24905 net.cpp:382] ip3 -> ip3
I0428 19:41:46.368299 24905 net.cpp:124] Setting up ip3
I0428 19:41:46.368307 24905 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:46.368310 24905 net.cpp:139] Memory required for data: 1242800
I0428 19:41:46.368319 24905 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:46.368325 24905 net.cpp:86] Creating Layer relu3
I0428 19:41:46.368329 24905 net.cpp:408] relu3 <- ip3
I0428 19:41:46.368332 24905 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:46.369213 24905 net.cpp:124] Setting up relu3
I0428 19:41:46.369225 24905 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:46.369230 24905 net.cpp:139] Memory required for data: 1246800
I0428 19:41:46.369232 24905 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:46.369237 24905 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:46.369240 24905 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:46.369246 24905 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:46.369253 24905 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:46.369295 24905 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:46.369302 24905 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:46.369307 24905 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:46.369309 24905 net.cpp:139] Memory required for data: 1254800
I0428 19:41:46.369313 24905 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:46.369318 24905 net.cpp:86] Creating Layer accuracy
I0428 19:41:46.369321 24905 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:46.369325 24905 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:46.369329 24905 net.cpp:382] accuracy -> accuracy
I0428 19:41:46.369336 24905 net.cpp:124] Setting up accuracy
I0428 19:41:46.369340 24905 net.cpp:131] Top shape: (1)
I0428 19:41:46.369343 24905 net.cpp:139] Memory required for data: 1254804
I0428 19:41:46.369345 24905 layer_factory.hpp:77] Creating layer loss
I0428 19:41:46.369351 24905 net.cpp:86] Creating Layer loss
I0428 19:41:46.369354 24905 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:46.369357 24905 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:46.369361 24905 net.cpp:382] loss -> loss
I0428 19:41:46.369367 24905 layer_factory.hpp:77] Creating layer loss
I0428 19:41:46.369604 24905 net.cpp:124] Setting up loss
I0428 19:41:46.369630 24905 net.cpp:131] Top shape: (1)
I0428 19:41:46.369633 24905 net.cpp:134]     with loss weight 1
I0428 19:41:46.369639 24905 net.cpp:139] Memory required for data: 1254808
I0428 19:41:46.369654 24905 net.cpp:200] loss needs backward computation.
I0428 19:41:46.369658 24905 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:46.369663 24905 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:46.369666 24905 net.cpp:200] relu3 needs backward computation.
I0428 19:41:46.369669 24905 net.cpp:200] ip3 needs backward computation.
I0428 19:41:46.369673 24905 net.cpp:200] relu2 needs backward computation.
I0428 19:41:46.369674 24905 net.cpp:200] ip2 needs backward computation.
I0428 19:41:46.369678 24905 net.cpp:200] relu1 needs backward computation.
I0428 19:41:46.369680 24905 net.cpp:200] ip1 needs backward computation.
I0428 19:41:46.369683 24905 net.cpp:200] pool1 needs backward computation.
I0428 19:41:46.369686 24905 net.cpp:200] conv1 needs backward computation.
I0428 19:41:46.369689 24905 net.cpp:200] pool0 needs backward computation.
I0428 19:41:46.369693 24905 net.cpp:200] conv0 needs backward computation.
I0428 19:41:46.369698 24905 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:46.369702 24905 net.cpp:202] mnist does not need backward computation.
I0428 19:41:46.369705 24905 net.cpp:244] This network produces output accuracy
I0428 19:41:46.369709 24905 net.cpp:244] This network produces output loss
I0428 19:41:46.369719 24905 net.cpp:257] Network initialization done.
I0428 19:41:46.369760 24905 solver.cpp:56] Solver scaffolding done.
I0428 19:41:46.370105 24905 caffe.cpp:248] Starting Optimization
I0428 19:41:46.370111 24905 solver.cpp:273] Solving LeNet
I0428 19:41:46.370115 24905 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:46.370986 24905 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:46.373802 24905 blocking_queue.cpp:49] Waiting for data
I0428 19:41:46.445701 24914 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:46.446144 24905 solver.cpp:398]     Test net output #0: accuracy = 0.1317
I0428 19:41:46.446167 24905 solver.cpp:398]     Test net output #1: loss = 2.27451 (* 1 = 2.27451 loss)
I0428 19:41:46.448043 24905 solver.cpp:219] Iteration 0 (0 iter/s, 0.0778855s/100 iters), loss = 2.27285
I0428 19:41:46.448083 24905 solver.cpp:238]     Train net output #0: loss = 2.27285 (* 1 = 2.27285 loss)
I0428 19:41:46.448096 24905 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:46.525671 24905 solver.cpp:219] Iteration 100 (1289.03 iter/s, 0.0775776s/100 iters), loss = 0.570389
I0428 19:41:46.525696 24905 solver.cpp:238]     Train net output #0: loss = 0.570389 (* 1 = 0.570389 loss)
I0428 19:41:46.525702 24905 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:46.600744 24905 solver.cpp:219] Iteration 200 (1332.7 iter/s, 0.0750357s/100 iters), loss = 0.389101
I0428 19:41:46.600767 24905 solver.cpp:238]     Train net output #0: loss = 0.389101 (* 1 = 0.389101 loss)
I0428 19:41:46.600788 24905 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:46.673032 24905 solver.cpp:219] Iteration 300 (1384.02 iter/s, 0.0722535s/100 iters), loss = 0.37203
I0428 19:41:46.673055 24905 solver.cpp:238]     Train net output #0: loss = 0.37203 (* 1 = 0.37203 loss)
I0428 19:41:46.673076 24905 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:46.767926 24905 solver.cpp:219] Iteration 400 (1054.25 iter/s, 0.0948541s/100 iters), loss = 0.284697
I0428 19:41:46.767966 24905 solver.cpp:238]     Train net output #0: loss = 0.284696 (* 1 = 0.284696 loss)
I0428 19:41:46.767977 24905 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:46.851347 24905 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:46.926869 24914 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:46.927515 24905 solver.cpp:398]     Test net output #0: accuracy = 0.9367
I0428 19:41:46.927543 24905 solver.cpp:398]     Test net output #1: loss = 0.209499 (* 1 = 0.209499 loss)
I0428 19:41:46.928644 24905 solver.cpp:219] Iteration 500 (622.411 iter/s, 0.160665s/100 iters), loss = 0.207593
I0428 19:41:46.928679 24905 solver.cpp:238]     Train net output #0: loss = 0.207593 (* 1 = 0.207593 loss)
I0428 19:41:46.928716 24905 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:47.009039 24905 solver.cpp:219] Iteration 600 (1244.57 iter/s, 0.0803492s/100 iters), loss = 0.230144
I0428 19:41:47.009071 24905 solver.cpp:238]     Train net output #0: loss = 0.230144 (* 1 = 0.230144 loss)
I0428 19:41:47.009079 24905 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:47.088013 24905 solver.cpp:219] Iteration 700 (1266.95 iter/s, 0.0789299s/100 iters), loss = 0.236145
I0428 19:41:47.088044 24905 solver.cpp:238]     Train net output #0: loss = 0.236145 (* 1 = 0.236145 loss)
I0428 19:41:47.088052 24905 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:47.168501 24905 solver.cpp:219] Iteration 800 (1243.19 iter/s, 0.0804383s/100 iters), loss = 0.220038
I0428 19:41:47.168532 24905 solver.cpp:238]     Train net output #0: loss = 0.220038 (* 1 = 0.220038 loss)
I0428 19:41:47.168540 24905 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:47.247941 24905 solver.cpp:219] Iteration 900 (1259.5 iter/s, 0.0793968s/100 iters), loss = 0.310981
I0428 19:41:47.247974 24905 solver.cpp:238]     Train net output #0: loss = 0.310981 (* 1 = 0.310981 loss)
I0428 19:41:47.247982 24905 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:47.275540 24913 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:47.327221 24905 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:47.328002 24905 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:47.328490 24905 solver.cpp:311] Iteration 1000, loss = 0.254685
I0428 19:41:47.328507 24905 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:47.403954 24914 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:47.404583 24905 solver.cpp:398]     Test net output #0: accuracy = 0.9538
I0428 19:41:47.404610 24905 solver.cpp:398]     Test net output #1: loss = 0.14619 (* 1 = 0.14619 loss)
I0428 19:41:47.404619 24905 solver.cpp:316] Optimization Done.
I0428 19:41:47.404624 24905 caffe.cpp:259] Optimization Done.
