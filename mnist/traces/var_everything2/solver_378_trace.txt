I0428 19:41:54.006309 24939 caffe.cpp:218] Using GPUs 0
I0428 19:41:54.046068 24939 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:54.564033 24939 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test378.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:54.564175 24939 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test378.prototxt
I0428 19:41:54.564597 24939 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:54.564615 24939 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:54.564718 24939 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:54.564798 24939 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:54.564913 24939 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:54.564939 24939 net.cpp:86] Creating Layer mnist
I0428 19:41:54.564949 24939 net.cpp:382] mnist -> data
I0428 19:41:54.564970 24939 net.cpp:382] mnist -> label
I0428 19:41:54.566076 24939 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:54.568524 24939 net.cpp:124] Setting up mnist
I0428 19:41:54.568542 24939 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:54.568548 24939 net.cpp:131] Top shape: 64 (64)
I0428 19:41:54.568552 24939 net.cpp:139] Memory required for data: 200960
I0428 19:41:54.568558 24939 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:54.568577 24939 net.cpp:86] Creating Layer conv0
I0428 19:41:54.568599 24939 net.cpp:408] conv0 <- data
I0428 19:41:54.568612 24939 net.cpp:382] conv0 -> conv0
I0428 19:41:54.855990 24939 net.cpp:124] Setting up conv0
I0428 19:41:54.856017 24939 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:54.856021 24939 net.cpp:139] Memory required for data: 495872
I0428 19:41:54.856036 24939 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:54.856050 24939 net.cpp:86] Creating Layer pool0
I0428 19:41:54.856053 24939 net.cpp:408] pool0 <- conv0
I0428 19:41:54.856060 24939 net.cpp:382] pool0 -> pool0
I0428 19:41:54.856106 24939 net.cpp:124] Setting up pool0
I0428 19:41:54.856114 24939 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:54.856117 24939 net.cpp:139] Memory required for data: 569600
I0428 19:41:54.856120 24939 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:54.856132 24939 net.cpp:86] Creating Layer conv1
I0428 19:41:54.856137 24939 net.cpp:408] conv1 <- pool0
I0428 19:41:54.856142 24939 net.cpp:382] conv1 -> conv1
I0428 19:41:54.857981 24939 net.cpp:124] Setting up conv1
I0428 19:41:54.857996 24939 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:54.858000 24939 net.cpp:139] Memory required for data: 733440
I0428 19:41:54.858008 24939 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:54.858016 24939 net.cpp:86] Creating Layer pool1
I0428 19:41:54.858019 24939 net.cpp:408] pool1 <- conv1
I0428 19:41:54.858024 24939 net.cpp:382] pool1 -> pool1
I0428 19:41:54.858064 24939 net.cpp:124] Setting up pool1
I0428 19:41:54.858089 24939 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:54.858093 24939 net.cpp:139] Memory required for data: 774400
I0428 19:41:54.858095 24939 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:54.858103 24939 net.cpp:86] Creating Layer ip1
I0428 19:41:54.858106 24939 net.cpp:408] ip1 <- pool1
I0428 19:41:54.858110 24939 net.cpp:382] ip1 -> ip1
I0428 19:41:54.859066 24939 net.cpp:124] Setting up ip1
I0428 19:41:54.859078 24939 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:54.859082 24939 net.cpp:139] Memory required for data: 780800
I0428 19:41:54.859091 24939 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:54.859097 24939 net.cpp:86] Creating Layer relu1
I0428 19:41:54.859099 24939 net.cpp:408] relu1 <- ip1
I0428 19:41:54.859104 24939 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:54.859275 24939 net.cpp:124] Setting up relu1
I0428 19:41:54.859284 24939 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:54.859287 24939 net.cpp:139] Memory required for data: 787200
I0428 19:41:54.859292 24939 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:54.859297 24939 net.cpp:86] Creating Layer ip2
I0428 19:41:54.859300 24939 net.cpp:408] ip2 <- ip1
I0428 19:41:54.859305 24939 net.cpp:382] ip2 -> ip2
I0428 19:41:54.859406 24939 net.cpp:124] Setting up ip2
I0428 19:41:54.859414 24939 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:54.859417 24939 net.cpp:139] Memory required for data: 800000
I0428 19:41:54.859422 24939 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:54.859428 24939 net.cpp:86] Creating Layer relu2
I0428 19:41:54.859433 24939 net.cpp:408] relu2 <- ip2
I0428 19:41:54.859438 24939 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:54.860172 24939 net.cpp:124] Setting up relu2
I0428 19:41:54.860185 24939 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:54.860188 24939 net.cpp:139] Memory required for data: 812800
I0428 19:41:54.860193 24939 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:54.860199 24939 net.cpp:86] Creating Layer ip3
I0428 19:41:54.860203 24939 net.cpp:408] ip3 <- ip2
I0428 19:41:54.860208 24939 net.cpp:382] ip3 -> ip3
I0428 19:41:54.860311 24939 net.cpp:124] Setting up ip3
I0428 19:41:54.860318 24939 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:54.860321 24939 net.cpp:139] Memory required for data: 815360
I0428 19:41:54.860329 24939 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:54.860337 24939 net.cpp:86] Creating Layer relu3
I0428 19:41:54.860355 24939 net.cpp:408] relu3 <- ip3
I0428 19:41:54.860359 24939 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:54.860543 24939 net.cpp:124] Setting up relu3
I0428 19:41:54.860553 24939 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:54.860556 24939 net.cpp:139] Memory required for data: 817920
I0428 19:41:54.860559 24939 layer_factory.hpp:77] Creating layer loss
I0428 19:41:54.860565 24939 net.cpp:86] Creating Layer loss
I0428 19:41:54.860569 24939 net.cpp:408] loss <- ip3
I0428 19:41:54.860572 24939 net.cpp:408] loss <- label
I0428 19:41:54.860577 24939 net.cpp:382] loss -> loss
I0428 19:41:54.860596 24939 layer_factory.hpp:77] Creating layer loss
I0428 19:41:54.860839 24939 net.cpp:124] Setting up loss
I0428 19:41:54.860851 24939 net.cpp:131] Top shape: (1)
I0428 19:41:54.860853 24939 net.cpp:134]     with loss weight 1
I0428 19:41:54.860870 24939 net.cpp:139] Memory required for data: 817924
I0428 19:41:54.860882 24939 net.cpp:200] loss needs backward computation.
I0428 19:41:54.860888 24939 net.cpp:200] relu3 needs backward computation.
I0428 19:41:54.860890 24939 net.cpp:200] ip3 needs backward computation.
I0428 19:41:54.860893 24939 net.cpp:200] relu2 needs backward computation.
I0428 19:41:54.860896 24939 net.cpp:200] ip2 needs backward computation.
I0428 19:41:54.860899 24939 net.cpp:200] relu1 needs backward computation.
I0428 19:41:54.860903 24939 net.cpp:200] ip1 needs backward computation.
I0428 19:41:54.860905 24939 net.cpp:200] pool1 needs backward computation.
I0428 19:41:54.860908 24939 net.cpp:200] conv1 needs backward computation.
I0428 19:41:54.860911 24939 net.cpp:200] pool0 needs backward computation.
I0428 19:41:54.860932 24939 net.cpp:200] conv0 needs backward computation.
I0428 19:41:54.860936 24939 net.cpp:202] mnist does not need backward computation.
I0428 19:41:54.860955 24939 net.cpp:244] This network produces output loss
I0428 19:41:54.860965 24939 net.cpp:257] Network initialization done.
I0428 19:41:54.861335 24939 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test378.prototxt
I0428 19:41:54.861361 24939 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:54.861452 24939 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:54.861531 24939 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:54.861577 24939 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:54.861591 24939 net.cpp:86] Creating Layer mnist
I0428 19:41:54.861596 24939 net.cpp:382] mnist -> data
I0428 19:41:54.861603 24939 net.cpp:382] mnist -> label
I0428 19:41:54.861688 24939 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:54.863595 24939 net.cpp:124] Setting up mnist
I0428 19:41:54.863608 24939 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:54.863613 24939 net.cpp:131] Top shape: 100 (100)
I0428 19:41:54.863617 24939 net.cpp:139] Memory required for data: 314000
I0428 19:41:54.863620 24939 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:54.863627 24939 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:54.863631 24939 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:54.863636 24939 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:54.863642 24939 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:54.863683 24939 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:54.863689 24939 net.cpp:131] Top shape: 100 (100)
I0428 19:41:54.863693 24939 net.cpp:131] Top shape: 100 (100)
I0428 19:41:54.863696 24939 net.cpp:139] Memory required for data: 314800
I0428 19:41:54.863699 24939 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:54.863708 24939 net.cpp:86] Creating Layer conv0
I0428 19:41:54.863713 24939 net.cpp:408] conv0 <- data
I0428 19:41:54.863718 24939 net.cpp:382] conv0 -> conv0
I0428 19:41:54.865227 24939 net.cpp:124] Setting up conv0
I0428 19:41:54.865242 24939 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:54.865245 24939 net.cpp:139] Memory required for data: 775600
I0428 19:41:54.865254 24939 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:54.865260 24939 net.cpp:86] Creating Layer pool0
I0428 19:41:54.865264 24939 net.cpp:408] pool0 <- conv0
I0428 19:41:54.865269 24939 net.cpp:382] pool0 -> pool0
I0428 19:41:54.865305 24939 net.cpp:124] Setting up pool0
I0428 19:41:54.865312 24939 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:54.865315 24939 net.cpp:139] Memory required for data: 890800
I0428 19:41:54.865319 24939 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:54.865326 24939 net.cpp:86] Creating Layer conv1
I0428 19:41:54.865329 24939 net.cpp:408] conv1 <- pool0
I0428 19:41:54.865334 24939 net.cpp:382] conv1 -> conv1
I0428 19:41:54.866811 24939 net.cpp:124] Setting up conv1
I0428 19:41:54.866824 24939 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:54.866828 24939 net.cpp:139] Memory required for data: 1146800
I0428 19:41:54.866837 24939 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:54.866844 24939 net.cpp:86] Creating Layer pool1
I0428 19:41:54.866848 24939 net.cpp:408] pool1 <- conv1
I0428 19:41:54.866853 24939 net.cpp:382] pool1 -> pool1
I0428 19:41:54.866889 24939 net.cpp:124] Setting up pool1
I0428 19:41:54.866896 24939 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:54.866899 24939 net.cpp:139] Memory required for data: 1210800
I0428 19:41:54.866904 24939 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:54.866909 24939 net.cpp:86] Creating Layer ip1
I0428 19:41:54.866911 24939 net.cpp:408] ip1 <- pool1
I0428 19:41:54.866917 24939 net.cpp:382] ip1 -> ip1
I0428 19:41:54.867034 24939 net.cpp:124] Setting up ip1
I0428 19:41:54.867043 24939 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:54.867055 24939 net.cpp:139] Memory required for data: 1220800
I0428 19:41:54.867064 24939 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:54.867069 24939 net.cpp:86] Creating Layer relu1
I0428 19:41:54.867072 24939 net.cpp:408] relu1 <- ip1
I0428 19:41:54.867077 24939 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:54.867235 24939 net.cpp:124] Setting up relu1
I0428 19:41:54.867244 24939 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:54.867247 24939 net.cpp:139] Memory required for data: 1230800
I0428 19:41:54.867251 24939 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:54.867259 24939 net.cpp:86] Creating Layer ip2
I0428 19:41:54.867264 24939 net.cpp:408] ip2 <- ip1
I0428 19:41:54.867269 24939 net.cpp:382] ip2 -> ip2
I0428 19:41:54.867372 24939 net.cpp:124] Setting up ip2
I0428 19:41:54.867380 24939 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:54.867383 24939 net.cpp:139] Memory required for data: 1250800
I0428 19:41:54.867388 24939 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:54.867393 24939 net.cpp:86] Creating Layer relu2
I0428 19:41:54.867398 24939 net.cpp:408] relu2 <- ip2
I0428 19:41:54.867401 24939 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:54.867610 24939 net.cpp:124] Setting up relu2
I0428 19:41:54.867619 24939 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:54.867624 24939 net.cpp:139] Memory required for data: 1270800
I0428 19:41:54.867626 24939 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:54.867631 24939 net.cpp:86] Creating Layer ip3
I0428 19:41:54.867635 24939 net.cpp:408] ip3 <- ip2
I0428 19:41:54.867640 24939 net.cpp:382] ip3 -> ip3
I0428 19:41:54.867765 24939 net.cpp:124] Setting up ip3
I0428 19:41:54.867774 24939 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:54.867794 24939 net.cpp:139] Memory required for data: 1274800
I0428 19:41:54.867802 24939 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:54.867808 24939 net.cpp:86] Creating Layer relu3
I0428 19:41:54.867811 24939 net.cpp:408] relu3 <- ip3
I0428 19:41:54.867815 24939 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:54.868609 24939 net.cpp:124] Setting up relu3
I0428 19:41:54.868623 24939 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:54.868625 24939 net.cpp:139] Memory required for data: 1278800
I0428 19:41:54.868629 24939 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:54.868634 24939 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:54.868638 24939 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:54.868643 24939 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:54.868649 24939 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:54.868713 24939 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:54.868719 24939 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:54.868722 24939 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:54.868726 24939 net.cpp:139] Memory required for data: 1286800
I0428 19:41:54.868728 24939 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:54.868737 24939 net.cpp:86] Creating Layer accuracy
I0428 19:41:54.868741 24939 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:54.868746 24939 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:54.868751 24939 net.cpp:382] accuracy -> accuracy
I0428 19:41:54.868757 24939 net.cpp:124] Setting up accuracy
I0428 19:41:54.868762 24939 net.cpp:131] Top shape: (1)
I0428 19:41:54.868765 24939 net.cpp:139] Memory required for data: 1286804
I0428 19:41:54.868773 24939 layer_factory.hpp:77] Creating layer loss
I0428 19:41:54.868783 24939 net.cpp:86] Creating Layer loss
I0428 19:41:54.868787 24939 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:54.868790 24939 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:54.868794 24939 net.cpp:382] loss -> loss
I0428 19:41:54.868800 24939 layer_factory.hpp:77] Creating layer loss
I0428 19:41:54.869089 24939 net.cpp:124] Setting up loss
I0428 19:41:54.869101 24939 net.cpp:131] Top shape: (1)
I0428 19:41:54.869105 24939 net.cpp:134]     with loss weight 1
I0428 19:41:54.869112 24939 net.cpp:139] Memory required for data: 1286808
I0428 19:41:54.869127 24939 net.cpp:200] loss needs backward computation.
I0428 19:41:54.869132 24939 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:54.869135 24939 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:54.869139 24939 net.cpp:200] relu3 needs backward computation.
I0428 19:41:54.869143 24939 net.cpp:200] ip3 needs backward computation.
I0428 19:41:54.869145 24939 net.cpp:200] relu2 needs backward computation.
I0428 19:41:54.869148 24939 net.cpp:200] ip2 needs backward computation.
I0428 19:41:54.869151 24939 net.cpp:200] relu1 needs backward computation.
I0428 19:41:54.869155 24939 net.cpp:200] ip1 needs backward computation.
I0428 19:41:54.869158 24939 net.cpp:200] pool1 needs backward computation.
I0428 19:41:54.869163 24939 net.cpp:200] conv1 needs backward computation.
I0428 19:41:54.869165 24939 net.cpp:200] pool0 needs backward computation.
I0428 19:41:54.869168 24939 net.cpp:200] conv0 needs backward computation.
I0428 19:41:54.869174 24939 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:54.869177 24939 net.cpp:202] mnist does not need backward computation.
I0428 19:41:54.869180 24939 net.cpp:244] This network produces output accuracy
I0428 19:41:54.869201 24939 net.cpp:244] This network produces output loss
I0428 19:41:54.869212 24939 net.cpp:257] Network initialization done.
I0428 19:41:54.869269 24939 solver.cpp:56] Solver scaffolding done.
I0428 19:41:54.869627 24939 caffe.cpp:248] Starting Optimization
I0428 19:41:54.869632 24939 solver.cpp:273] Solving LeNet
I0428 19:41:54.869635 24939 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:54.870479 24939 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:54.873042 24939 blocking_queue.cpp:49] Waiting for data
I0428 19:41:54.945397 24946 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:54.945875 24939 solver.cpp:398]     Test net output #0: accuracy = 0.0903
I0428 19:41:54.945914 24939 solver.cpp:398]     Test net output #1: loss = 2.30308 (* 1 = 2.30308 loss)
I0428 19:41:54.947866 24939 solver.cpp:219] Iteration 0 (0 iter/s, 0.0781947s/100 iters), loss = 2.30477
I0428 19:41:54.947921 24939 solver.cpp:238]     Train net output #0: loss = 2.30477 (* 1 = 2.30477 loss)
I0428 19:41:54.947932 24939 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:55.021718 24939 solver.cpp:219] Iteration 100 (1354.93 iter/s, 0.0738048s/100 iters), loss = 1.45583
I0428 19:41:55.021759 24939 solver.cpp:238]     Train net output #0: loss = 1.45583 (* 1 = 1.45583 loss)
I0428 19:41:55.021765 24939 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:55.094110 24939 solver.cpp:219] Iteration 200 (1382.02 iter/s, 0.0723579s/100 iters), loss = 0.995117
I0428 19:41:55.094149 24939 solver.cpp:238]     Train net output #0: loss = 0.995117 (* 1 = 0.995117 loss)
I0428 19:41:55.094156 24939 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:55.166110 24939 solver.cpp:219] Iteration 300 (1389.83 iter/s, 0.0719514s/100 iters), loss = 0.945188
I0428 19:41:55.166148 24939 solver.cpp:238]     Train net output #0: loss = 0.945188 (* 1 = 0.945188 loss)
I0428 19:41:55.166170 24939 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:55.238297 24939 solver.cpp:219] Iteration 400 (1386.2 iter/s, 0.0721398s/100 iters), loss = 0.702966
I0428 19:41:55.238337 24939 solver.cpp:238]     Train net output #0: loss = 0.702966 (* 1 = 0.702966 loss)
I0428 19:41:55.238343 24939 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:55.309886 24939 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:55.363098 24946 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:55.363539 24939 solver.cpp:398]     Test net output #0: accuracy = 0.7611
I0428 19:41:55.363560 24939 solver.cpp:398]     Test net output #1: loss = 0.635226 (* 1 = 0.635226 loss)
I0428 19:41:55.364367 24939 solver.cpp:219] Iteration 500 (793.437 iter/s, 0.126034s/100 iters), loss = 0.659143
I0428 19:41:55.364392 24939 solver.cpp:238]     Train net output #0: loss = 0.659143 (* 1 = 0.659143 loss)
I0428 19:41:55.364413 24939 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:55.441296 24939 solver.cpp:219] Iteration 600 (1300.47 iter/s, 0.0768952s/100 iters), loss = 0.758463
I0428 19:41:55.441321 24939 solver.cpp:238]     Train net output #0: loss = 0.758463 (* 1 = 0.758463 loss)
I0428 19:41:55.441329 24939 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:55.518735 24939 solver.cpp:219] Iteration 700 (1291.94 iter/s, 0.0774032s/100 iters), loss = 0.560481
I0428 19:41:55.518779 24939 solver.cpp:238]     Train net output #0: loss = 0.560481 (* 1 = 0.560481 loss)
I0428 19:41:55.518787 24939 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:55.595443 24939 solver.cpp:219] Iteration 800 (1304.33 iter/s, 0.0766679s/100 iters), loss = 0.994197
I0428 19:41:55.595474 24939 solver.cpp:238]     Train net output #0: loss = 0.994197 (* 1 = 0.994197 loss)
I0428 19:41:55.595485 24939 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:55.671968 24939 solver.cpp:219] Iteration 900 (1307.44 iter/s, 0.0764856s/100 iters), loss = 0.728603
I0428 19:41:55.671996 24939 solver.cpp:238]     Train net output #0: loss = 0.728603 (* 1 = 0.728603 loss)
I0428 19:41:55.672003 24939 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:55.696640 24945 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:55.743237 24939 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:55.743970 24939 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:55.744426 24939 solver.cpp:311] Iteration 1000, loss = 0.622864
I0428 19:41:55.744457 24939 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:55.803922 24946 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:55.804538 24939 solver.cpp:398]     Test net output #0: accuracy = 0.7735
I0428 19:41:55.804587 24939 solver.cpp:398]     Test net output #1: loss = 0.5849 (* 1 = 0.5849 loss)
I0428 19:41:55.804600 24939 solver.cpp:316] Optimization Done.
I0428 19:41:55.804605 24939 caffe.cpp:259] Optimization Done.
