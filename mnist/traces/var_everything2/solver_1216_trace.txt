I0428 20:14:12.758064 32626 caffe.cpp:218] Using GPUs 0
I0428 20:14:12.786845 32626 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:14:13.232930 32626 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1216.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:14:13.233084 32626 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1216.prototxt
I0428 20:14:13.233410 32626 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:14:13.233440 32626 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:14:13.233511 32626 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:14:13.233572 32626 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:13.233651 32626 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:14:13.233670 32626 net.cpp:86] Creating Layer mnist
I0428 20:14:13.233676 32626 net.cpp:382] mnist -> data
I0428 20:14:13.233695 32626 net.cpp:382] mnist -> label
I0428 20:14:13.234686 32626 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:14:13.237053 32626 net.cpp:124] Setting up mnist
I0428 20:14:13.237083 32626 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:14:13.237119 32626 net.cpp:131] Top shape: 64 (64)
I0428 20:14:13.237125 32626 net.cpp:139] Memory required for data: 200960
I0428 20:14:13.237131 32626 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:13.237143 32626 net.cpp:86] Creating Layer conv0
I0428 20:14:13.237149 32626 net.cpp:408] conv0 <- data
I0428 20:14:13.237159 32626 net.cpp:382] conv0 -> conv0
I0428 20:14:13.465886 32626 net.cpp:124] Setting up conv0
I0428 20:14:13.465911 32626 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:14:13.465915 32626 net.cpp:139] Memory required for data: 7573760
I0428 20:14:13.465962 32626 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:13.465976 32626 net.cpp:86] Creating Layer pool0
I0428 20:14:13.465981 32626 net.cpp:408] pool0 <- conv0
I0428 20:14:13.465986 32626 net.cpp:382] pool0 -> pool0
I0428 20:14:13.466032 32626 net.cpp:124] Setting up pool0
I0428 20:14:13.466039 32626 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:14:13.466042 32626 net.cpp:139] Memory required for data: 9416960
I0428 20:14:13.466044 32626 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:13.466055 32626 net.cpp:86] Creating Layer conv1
I0428 20:14:13.466059 32626 net.cpp:408] conv1 <- pool0
I0428 20:14:13.466063 32626 net.cpp:382] conv1 -> conv1
I0428 20:14:13.467933 32626 net.cpp:124] Setting up conv1
I0428 20:14:13.467963 32626 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:14:13.467967 32626 net.cpp:139] Memory required for data: 9449728
I0428 20:14:13.467978 32626 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:13.467986 32626 net.cpp:86] Creating Layer pool1
I0428 20:14:13.467989 32626 net.cpp:408] pool1 <- conv1
I0428 20:14:13.467994 32626 net.cpp:382] pool1 -> pool1
I0428 20:14:13.468047 32626 net.cpp:124] Setting up pool1
I0428 20:14:13.468053 32626 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:14:13.468056 32626 net.cpp:139] Memory required for data: 9457920
I0428 20:14:13.468060 32626 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:13.468066 32626 net.cpp:86] Creating Layer ip1
I0428 20:14:13.468070 32626 net.cpp:408] ip1 <- pool1
I0428 20:14:13.468075 32626 net.cpp:382] ip1 -> ip1
I0428 20:14:13.468189 32626 net.cpp:124] Setting up ip1
I0428 20:14:13.468196 32626 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:13.468199 32626 net.cpp:139] Memory required for data: 9464320
I0428 20:14:13.468206 32626 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:13.468212 32626 net.cpp:86] Creating Layer relu1
I0428 20:14:13.468215 32626 net.cpp:408] relu1 <- ip1
I0428 20:14:13.468220 32626 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:13.468410 32626 net.cpp:124] Setting up relu1
I0428 20:14:13.468418 32626 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:14:13.468421 32626 net.cpp:139] Memory required for data: 9470720
I0428 20:14:13.468425 32626 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:13.468431 32626 net.cpp:86] Creating Layer ip2
I0428 20:14:13.468435 32626 net.cpp:408] ip2 <- ip1
I0428 20:14:13.468439 32626 net.cpp:382] ip2 -> ip2
I0428 20:14:13.468536 32626 net.cpp:124] Setting up ip2
I0428 20:14:13.468544 32626 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:13.468546 32626 net.cpp:139] Memory required for data: 9473280
I0428 20:14:13.468551 32626 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:13.468559 32626 net.cpp:86] Creating Layer relu2
I0428 20:14:13.468561 32626 net.cpp:408] relu2 <- ip2
I0428 20:14:13.468565 32626 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:13.469452 32626 net.cpp:124] Setting up relu2
I0428 20:14:13.469480 32626 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:13.469483 32626 net.cpp:139] Memory required for data: 9475840
I0428 20:14:13.469486 32626 layer_factory.hpp:77] Creating layer loss
I0428 20:14:13.469493 32626 net.cpp:86] Creating Layer loss
I0428 20:14:13.469498 32626 net.cpp:408] loss <- ip2
I0428 20:14:13.469502 32626 net.cpp:408] loss <- label
I0428 20:14:13.469507 32626 net.cpp:382] loss -> loss
I0428 20:14:13.469527 32626 layer_factory.hpp:77] Creating layer loss
I0428 20:14:13.469782 32626 net.cpp:124] Setting up loss
I0428 20:14:13.469791 32626 net.cpp:131] Top shape: (1)
I0428 20:14:13.469794 32626 net.cpp:134]     with loss weight 1
I0428 20:14:13.469808 32626 net.cpp:139] Memory required for data: 9475844
I0428 20:14:13.469811 32626 net.cpp:200] loss needs backward computation.
I0428 20:14:13.469815 32626 net.cpp:200] relu2 needs backward computation.
I0428 20:14:13.469817 32626 net.cpp:200] ip2 needs backward computation.
I0428 20:14:13.469820 32626 net.cpp:200] relu1 needs backward computation.
I0428 20:14:13.469822 32626 net.cpp:200] ip1 needs backward computation.
I0428 20:14:13.469835 32626 net.cpp:200] pool1 needs backward computation.
I0428 20:14:13.469837 32626 net.cpp:200] conv1 needs backward computation.
I0428 20:14:13.469841 32626 net.cpp:200] pool0 needs backward computation.
I0428 20:14:13.469843 32626 net.cpp:200] conv0 needs backward computation.
I0428 20:14:13.469846 32626 net.cpp:202] mnist does not need backward computation.
I0428 20:14:13.469849 32626 net.cpp:244] This network produces output loss
I0428 20:14:13.469858 32626 net.cpp:257] Network initialization done.
I0428 20:14:13.470136 32626 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1216.prototxt
I0428 20:14:13.470162 32626 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:14:13.470259 32626 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:14:13.470342 32626 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:13.470386 32626 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:14:13.470402 32626 net.cpp:86] Creating Layer mnist
I0428 20:14:13.470408 32626 net.cpp:382] mnist -> data
I0428 20:14:13.470417 32626 net.cpp:382] mnist -> label
I0428 20:14:13.470502 32626 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:14:13.472568 32626 net.cpp:124] Setting up mnist
I0428 20:14:13.472596 32626 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:14:13.472601 32626 net.cpp:131] Top shape: 100 (100)
I0428 20:14:13.472604 32626 net.cpp:139] Memory required for data: 314000
I0428 20:14:13.472609 32626 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:14:13.472642 32626 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:14:13.472648 32626 net.cpp:408] label_mnist_1_split <- label
I0428 20:14:13.472653 32626 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:14:13.472661 32626 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:14:13.472774 32626 net.cpp:124] Setting up label_mnist_1_split
I0428 20:14:13.472790 32626 net.cpp:131] Top shape: 100 (100)
I0428 20:14:13.472795 32626 net.cpp:131] Top shape: 100 (100)
I0428 20:14:13.472797 32626 net.cpp:139] Memory required for data: 314800
I0428 20:14:13.472800 32626 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:13.472831 32626 net.cpp:86] Creating Layer conv0
I0428 20:14:13.472836 32626 net.cpp:408] conv0 <- data
I0428 20:14:13.472858 32626 net.cpp:382] conv0 -> conv0
I0428 20:14:13.474651 32626 net.cpp:124] Setting up conv0
I0428 20:14:13.474679 32626 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:14:13.474684 32626 net.cpp:139] Memory required for data: 11834800
I0428 20:14:13.474692 32626 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:13.474699 32626 net.cpp:86] Creating Layer pool0
I0428 20:14:13.474701 32626 net.cpp:408] pool0 <- conv0
I0428 20:14:13.474707 32626 net.cpp:382] pool0 -> pool0
I0428 20:14:13.474745 32626 net.cpp:124] Setting up pool0
I0428 20:14:13.474750 32626 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:14:13.474752 32626 net.cpp:139] Memory required for data: 14714800
I0428 20:14:13.474755 32626 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:13.474764 32626 net.cpp:86] Creating Layer conv1
I0428 20:14:13.474768 32626 net.cpp:408] conv1 <- pool0
I0428 20:14:13.474773 32626 net.cpp:382] conv1 -> conv1
I0428 20:14:13.476317 32626 net.cpp:124] Setting up conv1
I0428 20:14:13.476330 32626 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:14:13.476348 32626 net.cpp:139] Memory required for data: 14766000
I0428 20:14:13.476361 32626 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:13.476366 32626 net.cpp:86] Creating Layer pool1
I0428 20:14:13.476382 32626 net.cpp:408] pool1 <- conv1
I0428 20:14:13.476387 32626 net.cpp:382] pool1 -> pool1
I0428 20:14:13.476423 32626 net.cpp:124] Setting up pool1
I0428 20:14:13.476429 32626 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:14:13.476433 32626 net.cpp:139] Memory required for data: 14778800
I0428 20:14:13.476435 32626 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:13.476441 32626 net.cpp:86] Creating Layer ip1
I0428 20:14:13.476445 32626 net.cpp:408] ip1 <- pool1
I0428 20:14:13.476450 32626 net.cpp:382] ip1 -> ip1
I0428 20:14:13.476565 32626 net.cpp:124] Setting up ip1
I0428 20:14:13.476572 32626 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:13.476575 32626 net.cpp:139] Memory required for data: 14788800
I0428 20:14:13.476583 32626 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:13.476589 32626 net.cpp:86] Creating Layer relu1
I0428 20:14:13.476593 32626 net.cpp:408] relu1 <- ip1
I0428 20:14:13.476608 32626 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:13.476778 32626 net.cpp:124] Setting up relu1
I0428 20:14:13.476804 32626 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:14:13.476807 32626 net.cpp:139] Memory required for data: 14798800
I0428 20:14:13.476835 32626 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:13.476861 32626 net.cpp:86] Creating Layer ip2
I0428 20:14:13.476866 32626 net.cpp:408] ip2 <- ip1
I0428 20:14:13.476894 32626 net.cpp:382] ip2 -> ip2
I0428 20:14:13.477007 32626 net.cpp:124] Setting up ip2
I0428 20:14:13.477016 32626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:13.477020 32626 net.cpp:139] Memory required for data: 14802800
I0428 20:14:13.477026 32626 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:13.477033 32626 net.cpp:86] Creating Layer relu2
I0428 20:14:13.477036 32626 net.cpp:408] relu2 <- ip2
I0428 20:14:13.477041 32626 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:13.477257 32626 net.cpp:124] Setting up relu2
I0428 20:14:13.477267 32626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:13.477270 32626 net.cpp:139] Memory required for data: 14806800
I0428 20:14:13.477273 32626 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:14:13.477278 32626 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:14:13.477282 32626 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:14:13.477285 32626 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:14:13.477303 32626 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:14:13.477337 32626 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:14:13.477344 32626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:13.477349 32626 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:13.477351 32626 net.cpp:139] Memory required for data: 14814800
I0428 20:14:13.477354 32626 layer_factory.hpp:77] Creating layer accuracy
I0428 20:14:13.477362 32626 net.cpp:86] Creating Layer accuracy
I0428 20:14:13.477365 32626 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:14:13.477370 32626 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:14:13.477373 32626 net.cpp:382] accuracy -> accuracy
I0428 20:14:13.477380 32626 net.cpp:124] Setting up accuracy
I0428 20:14:13.477385 32626 net.cpp:131] Top shape: (1)
I0428 20:14:13.477386 32626 net.cpp:139] Memory required for data: 14814804
I0428 20:14:13.477390 32626 layer_factory.hpp:77] Creating layer loss
I0428 20:14:13.477393 32626 net.cpp:86] Creating Layer loss
I0428 20:14:13.477396 32626 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:14:13.477401 32626 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:14:13.477406 32626 net.cpp:382] loss -> loss
I0428 20:14:13.477411 32626 layer_factory.hpp:77] Creating layer loss
I0428 20:14:13.477751 32626 net.cpp:124] Setting up loss
I0428 20:14:13.477759 32626 net.cpp:131] Top shape: (1)
I0428 20:14:13.477762 32626 net.cpp:134]     with loss weight 1
I0428 20:14:13.477784 32626 net.cpp:139] Memory required for data: 14814808
I0428 20:14:13.477787 32626 net.cpp:200] loss needs backward computation.
I0428 20:14:13.477802 32626 net.cpp:202] accuracy does not need backward computation.
I0428 20:14:13.477811 32626 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:14:13.477814 32626 net.cpp:200] relu2 needs backward computation.
I0428 20:14:13.477818 32626 net.cpp:200] ip2 needs backward computation.
I0428 20:14:13.477820 32626 net.cpp:200] relu1 needs backward computation.
I0428 20:14:13.477823 32626 net.cpp:200] ip1 needs backward computation.
I0428 20:14:13.477826 32626 net.cpp:200] pool1 needs backward computation.
I0428 20:14:13.477829 32626 net.cpp:200] conv1 needs backward computation.
I0428 20:14:13.477833 32626 net.cpp:200] pool0 needs backward computation.
I0428 20:14:13.477836 32626 net.cpp:200] conv0 needs backward computation.
I0428 20:14:13.477839 32626 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:14:13.477843 32626 net.cpp:202] mnist does not need backward computation.
I0428 20:14:13.477846 32626 net.cpp:244] This network produces output accuracy
I0428 20:14:13.477849 32626 net.cpp:244] This network produces output loss
I0428 20:14:13.477865 32626 net.cpp:257] Network initialization done.
I0428 20:14:13.477902 32626 solver.cpp:56] Solver scaffolding done.
I0428 20:14:13.478204 32626 caffe.cpp:248] Starting Optimization
I0428 20:14:13.478211 32626 solver.cpp:273] Solving LeNet
I0428 20:14:13.478215 32626 solver.cpp:274] Learning Rate Policy: inv
I0428 20:14:13.478968 32626 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:14:13.484549 32626 blocking_queue.cpp:49] Waiting for data
I0428 20:14:13.556267 32634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:13.557004 32626 solver.cpp:398]     Test net output #0: accuracy = 0.0881
I0428 20:14:13.557040 32626 solver.cpp:398]     Test net output #1: loss = 2.30736 (* 1 = 2.30736 loss)
I0428 20:14:13.561163 32626 solver.cpp:219] Iteration 0 (0 iter/s, 0.0829225s/100 iters), loss = 2.30966
I0428 20:14:13.561202 32626 solver.cpp:238]     Train net output #0: loss = 2.30966 (* 1 = 2.30966 loss)
I0428 20:14:13.561213 32626 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:14:13.669384 32626 solver.cpp:219] Iteration 100 (924.354 iter/s, 0.108184s/100 iters), loss = 0.898343
I0428 20:14:13.669409 32626 solver.cpp:238]     Train net output #0: loss = 0.898343 (* 1 = 0.898343 loss)
I0428 20:14:13.669415 32626 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:14:13.776849 32626 solver.cpp:219] Iteration 200 (930.857 iter/s, 0.107428s/100 iters), loss = 0.53877
I0428 20:14:13.776885 32626 solver.cpp:238]     Train net output #0: loss = 0.53877 (* 1 = 0.53877 loss)
I0428 20:14:13.776907 32626 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:14:13.883723 32626 solver.cpp:219] Iteration 300 (936.077 iter/s, 0.106829s/100 iters), loss = 0.249003
I0428 20:14:13.883749 32626 solver.cpp:238]     Train net output #0: loss = 0.249003 (* 1 = 0.249003 loss)
I0428 20:14:13.883754 32626 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:13.989024 32626 solver.cpp:219] Iteration 400 (949.973 iter/s, 0.105266s/100 iters), loss = 0.18135
I0428 20:14:13.989048 32626 solver.cpp:238]     Train net output #0: loss = 0.18135 (* 1 = 0.18135 loss)
I0428 20:14:13.989054 32626 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:14.093286 32626 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:14.152678 32634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:14.154193 32626 solver.cpp:398]     Test net output #0: accuracy = 0.9338
I0428 20:14:14.154227 32626 solver.cpp:398]     Test net output #1: loss = 0.203913 (* 1 = 0.203913 loss)
I0428 20:14:14.155275 32626 solver.cpp:219] Iteration 500 (601.632 iter/s, 0.166215s/100 iters), loss = 0.183344
I0428 20:14:14.155313 32626 solver.cpp:238]     Train net output #0: loss = 0.183344 (* 1 = 0.183344 loss)
I0428 20:14:14.155318 32626 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:14.272502 32626 solver.cpp:219] Iteration 600 (853.287 iter/s, 0.117194s/100 iters), loss = 0.0916063
I0428 20:14:14.272542 32626 solver.cpp:238]     Train net output #0: loss = 0.0916064 (* 1 = 0.0916064 loss)
I0428 20:14:14.272549 32626 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:14.379022 32626 solver.cpp:219] Iteration 700 (939.102 iter/s, 0.106485s/100 iters), loss = 0.271051
I0428 20:14:14.379045 32626 solver.cpp:238]     Train net output #0: loss = 0.271051 (* 1 = 0.271051 loss)
I0428 20:14:14.379051 32626 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:14.484890 32626 solver.cpp:219] Iteration 800 (944.881 iter/s, 0.105833s/100 iters), loss = 0.239302
I0428 20:14:14.484928 32626 solver.cpp:238]     Train net output #0: loss = 0.239302 (* 1 = 0.239302 loss)
I0428 20:14:14.484935 32626 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:14.593132 32626 solver.cpp:219] Iteration 900 (924.147 iter/s, 0.108208s/100 iters), loss = 0.198841
I0428 20:14:14.593159 32626 solver.cpp:238]     Train net output #0: loss = 0.198841 (* 1 = 0.198841 loss)
I0428 20:14:14.593166 32626 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:14.629727 32633 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:14.699522 32626 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:14.700368 32626 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:14.701004 32626 solver.cpp:311] Iteration 1000, loss = 0.183036
I0428 20:14:14.701020 32626 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:14.763662 32634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:14.764560 32626 solver.cpp:398]     Test net output #0: accuracy = 0.9577
I0428 20:14:14.764578 32626 solver.cpp:398]     Test net output #1: loss = 0.131275 (* 1 = 0.131275 loss)
I0428 20:14:14.764583 32626 solver.cpp:316] Optimization Done.
I0428 20:14:14.764586 32626 caffe.cpp:259] Optimization Done.
