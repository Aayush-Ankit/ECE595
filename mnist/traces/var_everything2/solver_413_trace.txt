I0428 19:43:08.162614 25270 caffe.cpp:218] Using GPUs 0
I0428 19:43:08.190155 25270 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:08.633425 25270 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test413.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:08.633571 25270 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test413.prototxt
I0428 19:43:08.633888 25270 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:08.633901 25270 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:08.633978 25270 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:08.634040 25270 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:08.634116 25270 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:08.634136 25270 net.cpp:86] Creating Layer mnist
I0428 19:43:08.634141 25270 net.cpp:382] mnist -> data
I0428 19:43:08.634160 25270 net.cpp:382] mnist -> label
I0428 19:43:08.635045 25270 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:08.637292 25270 net.cpp:124] Setting up mnist
I0428 19:43:08.637323 25270 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:08.637329 25270 net.cpp:131] Top shape: 64 (64)
I0428 19:43:08.637332 25270 net.cpp:139] Memory required for data: 200960
I0428 19:43:08.637338 25270 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:08.637351 25270 net.cpp:86] Creating Layer conv0
I0428 19:43:08.637367 25270 net.cpp:408] conv0 <- data
I0428 19:43:08.637377 25270 net.cpp:382] conv0 -> conv0
I0428 19:43:08.872444 25270 net.cpp:124] Setting up conv0
I0428 19:43:08.872469 25270 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:08.872473 25270 net.cpp:139] Memory required for data: 495872
I0428 19:43:08.872488 25270 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:08.872500 25270 net.cpp:86] Creating Layer pool0
I0428 19:43:08.872503 25270 net.cpp:408] pool0 <- conv0
I0428 19:43:08.872509 25270 net.cpp:382] pool0 -> pool0
I0428 19:43:08.872552 25270 net.cpp:124] Setting up pool0
I0428 19:43:08.872558 25270 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:08.872566 25270 net.cpp:139] Memory required for data: 569600
I0428 19:43:08.872570 25270 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:08.872580 25270 net.cpp:86] Creating Layer conv1
I0428 19:43:08.872582 25270 net.cpp:408] conv1 <- pool0
I0428 19:43:08.872586 25270 net.cpp:382] conv1 -> conv1
I0428 19:43:08.875313 25270 net.cpp:124] Setting up conv1
I0428 19:43:08.875344 25270 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:08.875347 25270 net.cpp:139] Memory required for data: 979200
I0428 19:43:08.875355 25270 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:08.875362 25270 net.cpp:86] Creating Layer pool1
I0428 19:43:08.875365 25270 net.cpp:408] pool1 <- conv1
I0428 19:43:08.875370 25270 net.cpp:382] pool1 -> pool1
I0428 19:43:08.875406 25270 net.cpp:124] Setting up pool1
I0428 19:43:08.875411 25270 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:08.875413 25270 net.cpp:139] Memory required for data: 1081600
I0428 19:43:08.875416 25270 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:08.875423 25270 net.cpp:86] Creating Layer ip1
I0428 19:43:08.875427 25270 net.cpp:408] ip1 <- pool1
I0428 19:43:08.875430 25270 net.cpp:382] ip1 -> ip1
I0428 19:43:08.876420 25270 net.cpp:124] Setting up ip1
I0428 19:43:08.876432 25270 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:08.876451 25270 net.cpp:139] Memory required for data: 1088000
I0428 19:43:08.876459 25270 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:08.876466 25270 net.cpp:86] Creating Layer relu1
I0428 19:43:08.876471 25270 net.cpp:408] relu1 <- ip1
I0428 19:43:08.876474 25270 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:08.876639 25270 net.cpp:124] Setting up relu1
I0428 19:43:08.876647 25270 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:08.876652 25270 net.cpp:139] Memory required for data: 1094400
I0428 19:43:08.876654 25270 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:08.876662 25270 net.cpp:86] Creating Layer ip2
I0428 19:43:08.876665 25270 net.cpp:408] ip2 <- ip1
I0428 19:43:08.876669 25270 net.cpp:382] ip2 -> ip2
I0428 19:43:08.876765 25270 net.cpp:124] Setting up ip2
I0428 19:43:08.876771 25270 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:08.876775 25270 net.cpp:139] Memory required for data: 1096960
I0428 19:43:08.876780 25270 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:08.876785 25270 net.cpp:86] Creating Layer relu2
I0428 19:43:08.876788 25270 net.cpp:408] relu2 <- ip2
I0428 19:43:08.876792 25270 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:08.877689 25270 net.cpp:124] Setting up relu2
I0428 19:43:08.877701 25270 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:08.877722 25270 net.cpp:139] Memory required for data: 1099520
I0428 19:43:08.877724 25270 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:08.877732 25270 net.cpp:86] Creating Layer ip3
I0428 19:43:08.877735 25270 net.cpp:408] ip3 <- ip2
I0428 19:43:08.877741 25270 net.cpp:382] ip3 -> ip3
I0428 19:43:08.877841 25270 net.cpp:124] Setting up ip3
I0428 19:43:08.877849 25270 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:08.877852 25270 net.cpp:139] Memory required for data: 1102080
I0428 19:43:08.877861 25270 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:08.877866 25270 net.cpp:86] Creating Layer relu3
I0428 19:43:08.877868 25270 net.cpp:408] relu3 <- ip3
I0428 19:43:08.877872 25270 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:08.878041 25270 net.cpp:124] Setting up relu3
I0428 19:43:08.878049 25270 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:08.878052 25270 net.cpp:139] Memory required for data: 1104640
I0428 19:43:08.878057 25270 layer_factory.hpp:77] Creating layer loss
I0428 19:43:08.878062 25270 net.cpp:86] Creating Layer loss
I0428 19:43:08.878064 25270 net.cpp:408] loss <- ip3
I0428 19:43:08.878069 25270 net.cpp:408] loss <- label
I0428 19:43:08.878074 25270 net.cpp:382] loss -> loss
I0428 19:43:08.878108 25270 layer_factory.hpp:77] Creating layer loss
I0428 19:43:08.878340 25270 net.cpp:124] Setting up loss
I0428 19:43:08.878350 25270 net.cpp:131] Top shape: (1)
I0428 19:43:08.878353 25270 net.cpp:134]     with loss weight 1
I0428 19:43:08.878366 25270 net.cpp:139] Memory required for data: 1104644
I0428 19:43:08.878371 25270 net.cpp:200] loss needs backward computation.
I0428 19:43:08.878374 25270 net.cpp:200] relu3 needs backward computation.
I0428 19:43:08.878377 25270 net.cpp:200] ip3 needs backward computation.
I0428 19:43:08.878381 25270 net.cpp:200] relu2 needs backward computation.
I0428 19:43:08.878383 25270 net.cpp:200] ip2 needs backward computation.
I0428 19:43:08.878386 25270 net.cpp:200] relu1 needs backward computation.
I0428 19:43:08.878406 25270 net.cpp:200] ip1 needs backward computation.
I0428 19:43:08.878408 25270 net.cpp:200] pool1 needs backward computation.
I0428 19:43:08.878412 25270 net.cpp:200] conv1 needs backward computation.
I0428 19:43:08.878415 25270 net.cpp:200] pool0 needs backward computation.
I0428 19:43:08.878418 25270 net.cpp:200] conv0 needs backward computation.
I0428 19:43:08.878422 25270 net.cpp:202] mnist does not need backward computation.
I0428 19:43:08.878425 25270 net.cpp:244] This network produces output loss
I0428 19:43:08.878435 25270 net.cpp:257] Network initialization done.
I0428 19:43:08.878834 25270 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test413.prototxt
I0428 19:43:08.878892 25270 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:08.878988 25270 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:08.879067 25270 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:08.879113 25270 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:08.879127 25270 net.cpp:86] Creating Layer mnist
I0428 19:43:08.879132 25270 net.cpp:382] mnist -> data
I0428 19:43:08.879139 25270 net.cpp:382] mnist -> label
I0428 19:43:08.879225 25270 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:08.881237 25270 net.cpp:124] Setting up mnist
I0428 19:43:08.881250 25270 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:08.881271 25270 net.cpp:131] Top shape: 100 (100)
I0428 19:43:08.881275 25270 net.cpp:139] Memory required for data: 314000
I0428 19:43:08.881294 25270 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:08.881320 25270 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:08.881323 25270 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:08.881330 25270 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:08.881336 25270 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:08.881409 25270 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:08.881417 25270 net.cpp:131] Top shape: 100 (100)
I0428 19:43:08.881422 25270 net.cpp:131] Top shape: 100 (100)
I0428 19:43:08.881424 25270 net.cpp:139] Memory required for data: 314800
I0428 19:43:08.881428 25270 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:08.881435 25270 net.cpp:86] Creating Layer conv0
I0428 19:43:08.881439 25270 net.cpp:408] conv0 <- data
I0428 19:43:08.881444 25270 net.cpp:382] conv0 -> conv0
I0428 19:43:08.883150 25270 net.cpp:124] Setting up conv0
I0428 19:43:08.883164 25270 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:08.883168 25270 net.cpp:139] Memory required for data: 775600
I0428 19:43:08.883178 25270 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:08.883185 25270 net.cpp:86] Creating Layer pool0
I0428 19:43:08.883188 25270 net.cpp:408] pool0 <- conv0
I0428 19:43:08.883193 25270 net.cpp:382] pool0 -> pool0
I0428 19:43:08.883229 25270 net.cpp:124] Setting up pool0
I0428 19:43:08.883236 25270 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:08.883239 25270 net.cpp:139] Memory required for data: 890800
I0428 19:43:08.883242 25270 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:08.883251 25270 net.cpp:86] Creating Layer conv1
I0428 19:43:08.883255 25270 net.cpp:408] conv1 <- pool0
I0428 19:43:08.883260 25270 net.cpp:382] conv1 -> conv1
I0428 19:43:08.884723 25270 net.cpp:124] Setting up conv1
I0428 19:43:08.884739 25270 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:08.884745 25270 net.cpp:139] Memory required for data: 1530800
I0428 19:43:08.884754 25270 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:08.884763 25270 net.cpp:86] Creating Layer pool1
I0428 19:43:08.884773 25270 net.cpp:408] pool1 <- conv1
I0428 19:43:08.884778 25270 net.cpp:382] pool1 -> pool1
I0428 19:43:08.884843 25270 net.cpp:124] Setting up pool1
I0428 19:43:08.884852 25270 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:08.884856 25270 net.cpp:139] Memory required for data: 1690800
I0428 19:43:08.884860 25270 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:08.884866 25270 net.cpp:86] Creating Layer ip1
I0428 19:43:08.884869 25270 net.cpp:408] ip1 <- pool1
I0428 19:43:08.884876 25270 net.cpp:382] ip1 -> ip1
I0428 19:43:08.885038 25270 net.cpp:124] Setting up ip1
I0428 19:43:08.885047 25270 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:08.885064 25270 net.cpp:139] Memory required for data: 1700800
I0428 19:43:08.885073 25270 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:08.885079 25270 net.cpp:86] Creating Layer relu1
I0428 19:43:08.885090 25270 net.cpp:408] relu1 <- ip1
I0428 19:43:08.885095 25270 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:08.885273 25270 net.cpp:124] Setting up relu1
I0428 19:43:08.885282 25270 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:08.885285 25270 net.cpp:139] Memory required for data: 1710800
I0428 19:43:08.885289 25270 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:08.885296 25270 net.cpp:86] Creating Layer ip2
I0428 19:43:08.885301 25270 net.cpp:408] ip2 <- ip1
I0428 19:43:08.885306 25270 net.cpp:382] ip2 -> ip2
I0428 19:43:08.885419 25270 net.cpp:124] Setting up ip2
I0428 19:43:08.885427 25270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:08.885431 25270 net.cpp:139] Memory required for data: 1714800
I0428 19:43:08.885437 25270 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:08.885442 25270 net.cpp:86] Creating Layer relu2
I0428 19:43:08.885444 25270 net.cpp:408] relu2 <- ip2
I0428 19:43:08.885449 25270 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:08.885627 25270 net.cpp:124] Setting up relu2
I0428 19:43:08.885635 25270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:08.885638 25270 net.cpp:139] Memory required for data: 1718800
I0428 19:43:08.885641 25270 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:08.885648 25270 net.cpp:86] Creating Layer ip3
I0428 19:43:08.885650 25270 net.cpp:408] ip3 <- ip2
I0428 19:43:08.885655 25270 net.cpp:382] ip3 -> ip3
I0428 19:43:08.885761 25270 net.cpp:124] Setting up ip3
I0428 19:43:08.885768 25270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:08.885771 25270 net.cpp:139] Memory required for data: 1722800
I0428 19:43:08.885779 25270 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:08.885784 25270 net.cpp:86] Creating Layer relu3
I0428 19:43:08.885787 25270 net.cpp:408] relu3 <- ip3
I0428 19:43:08.885792 25270 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:08.886617 25270 net.cpp:124] Setting up relu3
I0428 19:43:08.886629 25270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:08.886634 25270 net.cpp:139] Memory required for data: 1726800
I0428 19:43:08.886637 25270 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:08.886642 25270 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:08.886646 25270 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:08.886651 25270 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:08.886658 25270 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:08.886695 25270 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:08.886703 25270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:08.886706 25270 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:08.886708 25270 net.cpp:139] Memory required for data: 1734800
I0428 19:43:08.886711 25270 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:08.886716 25270 net.cpp:86] Creating Layer accuracy
I0428 19:43:08.886719 25270 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:08.886723 25270 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:08.886729 25270 net.cpp:382] accuracy -> accuracy
I0428 19:43:08.886734 25270 net.cpp:124] Setting up accuracy
I0428 19:43:08.886739 25270 net.cpp:131] Top shape: (1)
I0428 19:43:08.886741 25270 net.cpp:139] Memory required for data: 1734804
I0428 19:43:08.886744 25270 layer_factory.hpp:77] Creating layer loss
I0428 19:43:08.886749 25270 net.cpp:86] Creating Layer loss
I0428 19:43:08.886752 25270 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:08.886755 25270 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:08.886760 25270 net.cpp:382] loss -> loss
I0428 19:43:08.886766 25270 layer_factory.hpp:77] Creating layer loss
I0428 19:43:08.886981 25270 net.cpp:124] Setting up loss
I0428 19:43:08.887006 25270 net.cpp:131] Top shape: (1)
I0428 19:43:08.887009 25270 net.cpp:134]     with loss weight 1
I0428 19:43:08.887017 25270 net.cpp:139] Memory required for data: 1734808
I0428 19:43:08.887032 25270 net.cpp:200] loss needs backward computation.
I0428 19:43:08.887037 25270 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:08.887040 25270 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:08.887044 25270 net.cpp:200] relu3 needs backward computation.
I0428 19:43:08.887048 25270 net.cpp:200] ip3 needs backward computation.
I0428 19:43:08.887051 25270 net.cpp:200] relu2 needs backward computation.
I0428 19:43:08.887054 25270 net.cpp:200] ip2 needs backward computation.
I0428 19:43:08.887058 25270 net.cpp:200] relu1 needs backward computation.
I0428 19:43:08.887060 25270 net.cpp:200] ip1 needs backward computation.
I0428 19:43:08.887063 25270 net.cpp:200] pool1 needs backward computation.
I0428 19:43:08.887066 25270 net.cpp:200] conv1 needs backward computation.
I0428 19:43:08.887070 25270 net.cpp:200] pool0 needs backward computation.
I0428 19:43:08.887073 25270 net.cpp:200] conv0 needs backward computation.
I0428 19:43:08.887078 25270 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:08.887081 25270 net.cpp:202] mnist does not need backward computation.
I0428 19:43:08.887084 25270 net.cpp:244] This network produces output accuracy
I0428 19:43:08.887089 25270 net.cpp:244] This network produces output loss
I0428 19:43:08.887099 25270 net.cpp:257] Network initialization done.
I0428 19:43:08.887141 25270 solver.cpp:56] Solver scaffolding done.
I0428 19:43:08.887496 25270 caffe.cpp:248] Starting Optimization
I0428 19:43:08.887502 25270 solver.cpp:273] Solving LeNet
I0428 19:43:08.887506 25270 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:08.887698 25270 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:08.891788 25270 blocking_queue.cpp:49] Waiting for data
I0428 19:43:08.963253 25277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:08.963747 25270 solver.cpp:398]     Test net output #0: accuracy = 0.1088
I0428 19:43:08.963781 25270 solver.cpp:398]     Test net output #1: loss = 2.30565 (* 1 = 2.30565 loss)
I0428 19:43:08.964990 25270 solver.cpp:219] Iteration 0 (0 iter/s, 0.0774502s/100 iters), loss = 2.30558
I0428 19:43:08.965036 25270 solver.cpp:238]     Train net output #0: loss = 2.30558 (* 1 = 2.30558 loss)
I0428 19:43:08.965049 25270 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:09.064884 25270 solver.cpp:219] Iteration 100 (1001.63 iter/s, 0.0998377s/100 iters), loss = 1.56332
I0428 19:43:09.064908 25270 solver.cpp:238]     Train net output #0: loss = 1.56332 (* 1 = 1.56332 loss)
I0428 19:43:09.064914 25270 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:09.152622 25270 solver.cpp:219] Iteration 200 (1140.33 iter/s, 0.0876943s/100 iters), loss = 1.33933
I0428 19:43:09.152647 25270 solver.cpp:238]     Train net output #0: loss = 1.33933 (* 1 = 1.33933 loss)
I0428 19:43:09.152653 25270 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:09.237715 25270 solver.cpp:219] Iteration 300 (1175.67 iter/s, 0.0850575s/100 iters), loss = 0.781851
I0428 19:43:09.237742 25270 solver.cpp:238]     Train net output #0: loss = 0.781851 (* 1 = 0.781851 loss)
I0428 19:43:09.237749 25270 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:09.326617 25270 solver.cpp:219] Iteration 400 (1125.33 iter/s, 0.0888628s/100 iters), loss = 0.661208
I0428 19:43:09.326643 25270 solver.cpp:238]     Train net output #0: loss = 0.661208 (* 1 = 0.661208 loss)
I0428 19:43:09.326648 25270 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:09.410105 25270 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:09.485363 25277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:09.485958 25270 solver.cpp:398]     Test net output #0: accuracy = 0.6715
I0428 19:43:09.485991 25270 solver.cpp:398]     Test net output #1: loss = 0.843969 (* 1 = 0.843969 loss)
I0428 19:43:09.487197 25270 solver.cpp:219] Iteration 500 (622.907 iter/s, 0.160538s/100 iters), loss = 0.976982
I0428 19:43:09.487233 25270 solver.cpp:238]     Train net output #0: loss = 0.976982 (* 1 = 0.976982 loss)
I0428 19:43:09.487268 25270 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:09.584668 25270 solver.cpp:219] Iteration 600 (1026.43 iter/s, 0.0974254s/100 iters), loss = 0.852176
I0428 19:43:09.584697 25270 solver.cpp:238]     Train net output #0: loss = 0.852176 (* 1 = 0.852176 loss)
I0428 19:43:09.584704 25270 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:09.669358 25270 solver.cpp:219] Iteration 700 (1181.29 iter/s, 0.084653s/100 iters), loss = 1.19618
I0428 19:43:09.669383 25270 solver.cpp:238]     Train net output #0: loss = 1.19618 (* 1 = 1.19618 loss)
I0428 19:43:09.669387 25270 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:09.749866 25270 solver.cpp:219] Iteration 800 (1242.63 iter/s, 0.0804743s/100 iters), loss = 0.897523
I0428 19:43:09.749888 25270 solver.cpp:238]     Train net output #0: loss = 0.897523 (* 1 = 0.897523 loss)
I0428 19:43:09.749910 25270 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:09.837949 25270 solver.cpp:219] Iteration 900 (1135.72 iter/s, 0.0880496s/100 iters), loss = 0.648383
I0428 19:43:09.837971 25270 solver.cpp:238]     Train net output #0: loss = 0.648383 (* 1 = 0.648383 loss)
I0428 19:43:09.837976 25270 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:09.867032 25276 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:09.920933 25270 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:09.921815 25270 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:09.922363 25270 solver.cpp:311] Iteration 1000, loss = 0.937539
I0428 19:43:09.922379 25270 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:09.998191 25277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:09.998812 25270 solver.cpp:398]     Test net output #0: accuracy = 0.689
I0428 19:43:09.998852 25270 solver.cpp:398]     Test net output #1: loss = 0.759272 (* 1 = 0.759272 loss)
I0428 19:43:09.998860 25270 solver.cpp:316] Optimization Done.
I0428 19:43:09.998865 25270 caffe.cpp:259] Optimization Done.
