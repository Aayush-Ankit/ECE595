I0428 20:27:11.601815  2996 caffe.cpp:218] Using GPUs 0
I0428 20:27:11.630053  2996 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:12.076108  2996 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1484.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:12.076242  2996 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1484.prototxt
I0428 20:27:12.076534  2996 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:12.076577  2996 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:12.076656  2996 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:27:12.076712  2996 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:12.076794  2996 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:12.076822  2996 net.cpp:86] Creating Layer mnist
I0428 20:27:12.076843  2996 net.cpp:382] mnist -> data
I0428 20:27:12.076864  2996 net.cpp:382] mnist -> label
I0428 20:27:12.077910  2996 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:12.080394  2996 net.cpp:124] Setting up mnist
I0428 20:27:12.080440  2996 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:12.080446  2996 net.cpp:131] Top shape: 64 (64)
I0428 20:27:12.080448  2996 net.cpp:139] Memory required for data: 200960
I0428 20:27:12.080454  2996 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:12.080471  2996 net.cpp:86] Creating Layer conv0
I0428 20:27:12.080474  2996 net.cpp:408] conv0 <- data
I0428 20:27:12.080484  2996 net.cpp:382] conv0 -> conv0
I0428 20:27:12.318025  2996 net.cpp:124] Setting up conv0
I0428 20:27:12.318066  2996 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:12.318070  2996 net.cpp:139] Memory required for data: 14946560
I0428 20:27:12.318086  2996 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:12.318099  2996 net.cpp:86] Creating Layer pool0
I0428 20:27:12.318102  2996 net.cpp:408] pool0 <- conv0
I0428 20:27:12.318107  2996 net.cpp:382] pool0 -> pool0
I0428 20:27:12.318171  2996 net.cpp:124] Setting up pool0
I0428 20:27:12.318181  2996 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:12.318200  2996 net.cpp:139] Memory required for data: 18632960
I0428 20:27:12.318203  2996 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:12.318214  2996 net.cpp:86] Creating Layer conv1
I0428 20:27:12.318217  2996 net.cpp:408] conv1 <- pool0
I0428 20:27:12.318222  2996 net.cpp:382] conv1 -> conv1
I0428 20:27:12.320996  2996 net.cpp:124] Setting up conv1
I0428 20:27:12.321027  2996 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:12.321030  2996 net.cpp:139] Memory required for data: 18714880
I0428 20:27:12.321043  2996 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:12.321053  2996 net.cpp:86] Creating Layer pool1
I0428 20:27:12.321058  2996 net.cpp:408] pool1 <- conv1
I0428 20:27:12.321063  2996 net.cpp:382] pool1 -> pool1
I0428 20:27:12.321101  2996 net.cpp:124] Setting up pool1
I0428 20:27:12.321107  2996 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:12.321110  2996 net.cpp:139] Memory required for data: 18735360
I0428 20:27:12.321113  2996 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:12.321120  2996 net.cpp:86] Creating Layer ip1
I0428 20:27:12.321123  2996 net.cpp:408] ip1 <- pool1
I0428 20:27:12.321128  2996 net.cpp:382] ip1 -> ip1
I0428 20:27:12.321245  2996 net.cpp:124] Setting up ip1
I0428 20:27:12.321254  2996 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:12.321256  2996 net.cpp:139] Memory required for data: 18737920
I0428 20:27:12.321264  2996 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:12.321269  2996 net.cpp:86] Creating Layer relu1
I0428 20:27:12.321272  2996 net.cpp:408] relu1 <- ip1
I0428 20:27:12.321277  2996 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:12.321454  2996 net.cpp:124] Setting up relu1
I0428 20:27:12.321463  2996 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:12.321466  2996 net.cpp:139] Memory required for data: 18740480
I0428 20:27:12.321470  2996 layer_factory.hpp:77] Creating layer loss
I0428 20:27:12.321476  2996 net.cpp:86] Creating Layer loss
I0428 20:27:12.321494  2996 net.cpp:408] loss <- ip1
I0428 20:27:12.321498  2996 net.cpp:408] loss <- label
I0428 20:27:12.321503  2996 net.cpp:382] loss -> loss
I0428 20:27:12.321521  2996 layer_factory.hpp:77] Creating layer loss
I0428 20:27:12.322369  2996 net.cpp:124] Setting up loss
I0428 20:27:12.322382  2996 net.cpp:131] Top shape: (1)
I0428 20:27:12.322402  2996 net.cpp:134]     with loss weight 1
I0428 20:27:12.322415  2996 net.cpp:139] Memory required for data: 18740484
I0428 20:27:12.322419  2996 net.cpp:200] loss needs backward computation.
I0428 20:27:12.322423  2996 net.cpp:200] relu1 needs backward computation.
I0428 20:27:12.322427  2996 net.cpp:200] ip1 needs backward computation.
I0428 20:27:12.322429  2996 net.cpp:200] pool1 needs backward computation.
I0428 20:27:12.322432  2996 net.cpp:200] conv1 needs backward computation.
I0428 20:27:12.322435  2996 net.cpp:200] pool0 needs backward computation.
I0428 20:27:12.322438  2996 net.cpp:200] conv0 needs backward computation.
I0428 20:27:12.322441  2996 net.cpp:202] mnist does not need backward computation.
I0428 20:27:12.322444  2996 net.cpp:244] This network produces output loss
I0428 20:27:12.322453  2996 net.cpp:257] Network initialization done.
I0428 20:27:12.322717  2996 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1484.prototxt
I0428 20:27:12.322746  2996 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:12.322824  2996 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:27:12.322895  2996 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:12.322952  2996 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:12.322964  2996 net.cpp:86] Creating Layer mnist
I0428 20:27:12.322969  2996 net.cpp:382] mnist -> data
I0428 20:27:12.322976  2996 net.cpp:382] mnist -> label
I0428 20:27:12.323065  2996 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:12.325446  2996 net.cpp:124] Setting up mnist
I0428 20:27:12.325476  2996 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:12.325482  2996 net.cpp:131] Top shape: 100 (100)
I0428 20:27:12.325486  2996 net.cpp:139] Memory required for data: 314000
I0428 20:27:12.325489  2996 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:12.325516  2996 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:12.325536  2996 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:12.325542  2996 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:12.325567  2996 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:12.325667  2996 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:12.325676  2996 net.cpp:131] Top shape: 100 (100)
I0428 20:27:12.325680  2996 net.cpp:131] Top shape: 100 (100)
I0428 20:27:12.325683  2996 net.cpp:139] Memory required for data: 314800
I0428 20:27:12.325686  2996 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:12.325695  2996 net.cpp:86] Creating Layer conv0
I0428 20:27:12.325700  2996 net.cpp:408] conv0 <- data
I0428 20:27:12.325705  2996 net.cpp:382] conv0 -> conv0
I0428 20:27:12.326529  2996 net.cpp:124] Setting up conv0
I0428 20:27:12.326541  2996 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:12.326545  2996 net.cpp:139] Memory required for data: 23354800
I0428 20:27:12.326553  2996 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:12.326558  2996 net.cpp:86] Creating Layer pool0
I0428 20:27:12.326561  2996 net.cpp:408] pool0 <- conv0
I0428 20:27:12.326566  2996 net.cpp:382] pool0 -> pool0
I0428 20:27:12.326616  2996 net.cpp:124] Setting up pool0
I0428 20:27:12.326620  2996 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:12.326623  2996 net.cpp:139] Memory required for data: 29114800
I0428 20:27:12.326627  2996 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:12.326633  2996 net.cpp:86] Creating Layer conv1
I0428 20:27:12.326637  2996 net.cpp:408] conv1 <- pool0
I0428 20:27:12.326642  2996 net.cpp:382] conv1 -> conv1
I0428 20:27:12.328132  2996 net.cpp:124] Setting up conv1
I0428 20:27:12.328146  2996 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:12.328150  2996 net.cpp:139] Memory required for data: 29242800
I0428 20:27:12.328160  2996 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:12.328166  2996 net.cpp:86] Creating Layer pool1
I0428 20:27:12.328181  2996 net.cpp:408] pool1 <- conv1
I0428 20:27:12.328186  2996 net.cpp:382] pool1 -> pool1
I0428 20:27:12.328227  2996 net.cpp:124] Setting up pool1
I0428 20:27:12.328238  2996 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:12.328244  2996 net.cpp:139] Memory required for data: 29274800
I0428 20:27:12.328250  2996 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:12.328271  2996 net.cpp:86] Creating Layer ip1
I0428 20:27:12.328274  2996 net.cpp:408] ip1 <- pool1
I0428 20:27:12.328279  2996 net.cpp:382] ip1 -> ip1
I0428 20:27:12.328444  2996 net.cpp:124] Setting up ip1
I0428 20:27:12.328457  2996 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:12.328461  2996 net.cpp:139] Memory required for data: 29278800
I0428 20:27:12.328469  2996 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:12.328475  2996 net.cpp:86] Creating Layer relu1
I0428 20:27:12.328479  2996 net.cpp:408] relu1 <- ip1
I0428 20:27:12.328487  2996 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:12.329454  2996 net.cpp:124] Setting up relu1
I0428 20:27:12.329488  2996 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:12.329505  2996 net.cpp:139] Memory required for data: 29282800
I0428 20:27:12.329509  2996 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:27:12.329517  2996 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:27:12.329531  2996 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:27:12.329537  2996 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:27:12.329550  2996 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:27:12.329591  2996 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:27:12.329604  2996 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:12.329614  2996 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:12.329618  2996 net.cpp:139] Memory required for data: 29290800
I0428 20:27:12.329622  2996 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:12.329627  2996 net.cpp:86] Creating Layer accuracy
I0428 20:27:12.329630  2996 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:27:12.329635  2996 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:12.329641  2996 net.cpp:382] accuracy -> accuracy
I0428 20:27:12.329648  2996 net.cpp:124] Setting up accuracy
I0428 20:27:12.329658  2996 net.cpp:131] Top shape: (1)
I0428 20:27:12.329661  2996 net.cpp:139] Memory required for data: 29290804
I0428 20:27:12.329665  2996 layer_factory.hpp:77] Creating layer loss
I0428 20:27:12.329670  2996 net.cpp:86] Creating Layer loss
I0428 20:27:12.329689  2996 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:27:12.329697  2996 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:12.329702  2996 net.cpp:382] loss -> loss
I0428 20:27:12.329708  2996 layer_factory.hpp:77] Creating layer loss
I0428 20:27:12.330035  2996 net.cpp:124] Setting up loss
I0428 20:27:12.330044  2996 net.cpp:131] Top shape: (1)
I0428 20:27:12.330061  2996 net.cpp:134]     with loss weight 1
I0428 20:27:12.330068  2996 net.cpp:139] Memory required for data: 29290808
I0428 20:27:12.330087  2996 net.cpp:200] loss needs backward computation.
I0428 20:27:12.330091  2996 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:12.330096  2996 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:27:12.330098  2996 net.cpp:200] relu1 needs backward computation.
I0428 20:27:12.330101  2996 net.cpp:200] ip1 needs backward computation.
I0428 20:27:12.330106  2996 net.cpp:200] pool1 needs backward computation.
I0428 20:27:12.330108  2996 net.cpp:200] conv1 needs backward computation.
I0428 20:27:12.330112  2996 net.cpp:200] pool0 needs backward computation.
I0428 20:27:12.330116  2996 net.cpp:200] conv0 needs backward computation.
I0428 20:27:12.330119  2996 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:12.330123  2996 net.cpp:202] mnist does not need backward computation.
I0428 20:27:12.330126  2996 net.cpp:244] This network produces output accuracy
I0428 20:27:12.330129  2996 net.cpp:244] This network produces output loss
I0428 20:27:12.330155  2996 net.cpp:257] Network initialization done.
I0428 20:27:12.330202  2996 solver.cpp:56] Solver scaffolding done.
I0428 20:27:12.330489  2996 caffe.cpp:248] Starting Optimization
I0428 20:27:12.330513  2996 solver.cpp:273] Solving LeNet
I0428 20:27:12.330531  2996 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:12.331286  2996 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:12.336345  2996 blocking_queue.cpp:49] Waiting for data
I0428 20:27:12.436467  3003 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:12.437852  2996 solver.cpp:398]     Test net output #0: accuracy = 0.1462
I0428 20:27:12.437889  2996 solver.cpp:398]     Test net output #1: loss = 2.28029 (* 1 = 2.28029 loss)
I0428 20:27:12.442363  2996 solver.cpp:219] Iteration 0 (-2.74509e-31 iter/s, 0.111805s/100 iters), loss = 2.28151
I0428 20:27:12.442404  2996 solver.cpp:238]     Train net output #0: loss = 2.28151 (* 1 = 2.28151 loss)
I0428 20:27:12.442426  2996 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:12.625754  2996 solver.cpp:219] Iteration 100 (545.453 iter/s, 0.183334s/100 iters), loss = 0.804157
I0428 20:27:12.625787  2996 solver.cpp:238]     Train net output #0: loss = 0.804157 (* 1 = 0.804157 loss)
I0428 20:27:12.625794  2996 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:12.811653  2996 solver.cpp:219] Iteration 200 (538.06 iter/s, 0.185853s/100 iters), loss = 0.751674
I0428 20:27:12.811681  2996 solver.cpp:238]     Train net output #0: loss = 0.751674 (* 1 = 0.751674 loss)
I0428 20:27:12.811688  2996 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:12.999243  2996 solver.cpp:219] Iteration 300 (533.204 iter/s, 0.187545s/100 iters), loss = 0.651501
I0428 20:27:12.999280  2996 solver.cpp:238]     Train net output #0: loss = 0.651501 (* 1 = 0.651501 loss)
I0428 20:27:12.999290  2996 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:13.196043  2996 solver.cpp:219] Iteration 400 (508.272 iter/s, 0.196745s/100 iters), loss = 0.933608
I0428 20:27:13.196087  2996 solver.cpp:238]     Train net output #0: loss = 0.933608 (* 1 = 0.933608 loss)
I0428 20:27:13.196099  2996 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:13.393177  2996 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:13.485150  3003 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:13.487473  2996 solver.cpp:398]     Test net output #0: accuracy = 0.8369
I0428 20:27:13.487499  2996 solver.cpp:398]     Test net output #1: loss = 0.621032 (* 1 = 0.621032 loss)
I0428 20:27:13.489362  2996 solver.cpp:219] Iteration 500 (340.998 iter/s, 0.293257s/100 iters), loss = 0.831462
I0428 20:27:13.489392  2996 solver.cpp:238]     Train net output #0: loss = 0.831462 (* 1 = 0.831462 loss)
I0428 20:27:13.489399  2996 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:13.681125  2996 solver.cpp:219] Iteration 600 (521.612 iter/s, 0.191713s/100 iters), loss = 0.423703
I0428 20:27:13.681176  2996 solver.cpp:238]     Train net output #0: loss = 0.423703 (* 1 = 0.423703 loss)
I0428 20:27:13.681190  2996 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:13.883591  2996 solver.cpp:219] Iteration 700 (494.077 iter/s, 0.202398s/100 iters), loss = 0.615692
I0428 20:27:13.883647  2996 solver.cpp:238]     Train net output #0: loss = 0.615692 (* 1 = 0.615692 loss)
I0428 20:27:13.883662  2996 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:14.090765  2996 solver.cpp:219] Iteration 800 (482.851 iter/s, 0.207103s/100 iters), loss = 0.507184
I0428 20:27:14.090812  2996 solver.cpp:238]     Train net output #0: loss = 0.507184 (* 1 = 0.507184 loss)
I0428 20:27:14.090824  2996 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:14.294842  2996 solver.cpp:219] Iteration 900 (490.166 iter/s, 0.204013s/100 iters), loss = 0.217299
I0428 20:27:14.294891  2996 solver.cpp:238]     Train net output #0: loss = 0.217299 (* 1 = 0.217299 loss)
I0428 20:27:14.294903  2996 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:14.363754  3002 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:14.498344  2996 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:14.500129  2996 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:14.501276  2996 solver.cpp:311] Iteration 1000, loss = 0.199462
I0428 20:27:14.501307  2996 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:14.597693  3003 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:14.601006  2996 solver.cpp:398]     Test net output #0: accuracy = 0.9552
I0428 20:27:14.601030  2996 solver.cpp:398]     Test net output #1: loss = 0.141334 (* 1 = 0.141334 loss)
I0428 20:27:14.601037  2996 solver.cpp:316] Optimization Done.
I0428 20:27:14.601039  2996 caffe.cpp:259] Optimization Done.
