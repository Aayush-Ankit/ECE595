I0428 20:30:53.416031  3850 caffe.cpp:218] Using GPUs 0
I0428 20:30:53.454777  3850 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:53.915799  3850 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1546.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:53.915948  3850 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1546.prototxt
I0428 20:30:53.916280  3850 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:53.916296  3850 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:53.916395  3850 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:53.916462  3850 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:53.916544  3850 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:53.916565  3850 net.cpp:86] Creating Layer mnist
I0428 20:30:53.916573  3850 net.cpp:382] mnist -> data
I0428 20:30:53.916590  3850 net.cpp:382] mnist -> label
I0428 20:30:53.917677  3850 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:53.919824  3850 net.cpp:124] Setting up mnist
I0428 20:30:53.919869  3850 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:53.919875  3850 net.cpp:131] Top shape: 64 (64)
I0428 20:30:53.919878  3850 net.cpp:139] Memory required for data: 200960
I0428 20:30:53.919884  3850 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:53.919896  3850 net.cpp:86] Creating Layer conv0
I0428 20:30:53.919914  3850 net.cpp:408] conv0 <- data
I0428 20:30:53.919925  3850 net.cpp:382] conv0 -> conv0
I0428 20:30:54.153981  3850 net.cpp:124] Setting up conv0
I0428 20:30:54.154007  3850 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:54.154011  3850 net.cpp:139] Memory required for data: 14946560
I0428 20:30:54.154026  3850 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:54.154054  3850 net.cpp:86] Creating Layer pool0
I0428 20:30:54.154058  3850 net.cpp:408] pool0 <- conv0
I0428 20:30:54.154063  3850 net.cpp:382] pool0 -> pool0
I0428 20:30:54.154108  3850 net.cpp:124] Setting up pool0
I0428 20:30:54.154120  3850 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:54.154124  3850 net.cpp:139] Memory required for data: 18632960
I0428 20:30:54.154126  3850 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:54.154136  3850 net.cpp:86] Creating Layer conv1
I0428 20:30:54.154139  3850 net.cpp:408] conv1 <- pool0
I0428 20:30:54.154145  3850 net.cpp:382] conv1 -> conv1
I0428 20:30:54.156159  3850 net.cpp:124] Setting up conv1
I0428 20:30:54.156175  3850 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:54.156179  3850 net.cpp:139] Memory required for data: 18796800
I0428 20:30:54.156188  3850 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:54.156196  3850 net.cpp:86] Creating Layer pool1
I0428 20:30:54.156200  3850 net.cpp:408] pool1 <- conv1
I0428 20:30:54.156205  3850 net.cpp:382] pool1 -> pool1
I0428 20:30:54.156242  3850 net.cpp:124] Setting up pool1
I0428 20:30:54.156247  3850 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:54.156251  3850 net.cpp:139] Memory required for data: 18837760
I0428 20:30:54.156255  3850 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:54.156261  3850 net.cpp:86] Creating Layer ip1
I0428 20:30:54.156265  3850 net.cpp:408] ip1 <- pool1
I0428 20:30:54.156270  3850 net.cpp:382] ip1 -> ip1
I0428 20:30:54.156404  3850 net.cpp:124] Setting up ip1
I0428 20:30:54.156412  3850 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:54.156415  3850 net.cpp:139] Memory required for data: 18844160
I0428 20:30:54.156422  3850 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:54.156428  3850 net.cpp:86] Creating Layer relu1
I0428 20:30:54.156442  3850 net.cpp:408] relu1 <- ip1
I0428 20:30:54.156447  3850 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:54.156605  3850 net.cpp:124] Setting up relu1
I0428 20:30:54.156615  3850 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:54.156617  3850 net.cpp:139] Memory required for data: 18850560
I0428 20:30:54.156620  3850 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:54.156626  3850 net.cpp:86] Creating Layer ip2
I0428 20:30:54.156630  3850 net.cpp:408] ip2 <- ip1
I0428 20:30:54.156635  3850 net.cpp:382] ip2 -> ip2
I0428 20:30:54.156738  3850 net.cpp:124] Setting up ip2
I0428 20:30:54.156744  3850 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:54.156749  3850 net.cpp:139] Memory required for data: 18856960
I0428 20:30:54.156754  3850 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:54.156759  3850 net.cpp:86] Creating Layer relu2
I0428 20:30:54.156762  3850 net.cpp:408] relu2 <- ip2
I0428 20:30:54.156767  3850 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:54.157618  3850 net.cpp:124] Setting up relu2
I0428 20:30:54.157630  3850 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:54.157634  3850 net.cpp:139] Memory required for data: 18863360
I0428 20:30:54.157637  3850 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:54.157644  3850 net.cpp:86] Creating Layer ip3
I0428 20:30:54.157647  3850 net.cpp:408] ip3 <- ip2
I0428 20:30:54.157652  3850 net.cpp:382] ip3 -> ip3
I0428 20:30:54.157745  3850 net.cpp:124] Setting up ip3
I0428 20:30:54.157752  3850 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:54.157757  3850 net.cpp:139] Memory required for data: 18865920
I0428 20:30:54.157763  3850 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:54.157768  3850 net.cpp:86] Creating Layer relu3
I0428 20:30:54.157771  3850 net.cpp:408] relu3 <- ip3
I0428 20:30:54.157775  3850 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:54.157958  3850 net.cpp:124] Setting up relu3
I0428 20:30:54.157965  3850 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:54.157969  3850 net.cpp:139] Memory required for data: 18868480
I0428 20:30:54.157973  3850 layer_factory.hpp:77] Creating layer loss
I0428 20:30:54.157979  3850 net.cpp:86] Creating Layer loss
I0428 20:30:54.157981  3850 net.cpp:408] loss <- ip3
I0428 20:30:54.157985  3850 net.cpp:408] loss <- label
I0428 20:30:54.157990  3850 net.cpp:382] loss -> loss
I0428 20:30:54.158004  3850 layer_factory.hpp:77] Creating layer loss
I0428 20:30:54.158223  3850 net.cpp:124] Setting up loss
I0428 20:30:54.158233  3850 net.cpp:131] Top shape: (1)
I0428 20:30:54.158236  3850 net.cpp:134]     with loss weight 1
I0428 20:30:54.158251  3850 net.cpp:139] Memory required for data: 18868484
I0428 20:30:54.158253  3850 net.cpp:200] loss needs backward computation.
I0428 20:30:54.158257  3850 net.cpp:200] relu3 needs backward computation.
I0428 20:30:54.158260  3850 net.cpp:200] ip3 needs backward computation.
I0428 20:30:54.158262  3850 net.cpp:200] relu2 needs backward computation.
I0428 20:30:54.158265  3850 net.cpp:200] ip2 needs backward computation.
I0428 20:30:54.158268  3850 net.cpp:200] relu1 needs backward computation.
I0428 20:30:54.158270  3850 net.cpp:200] ip1 needs backward computation.
I0428 20:30:54.158273  3850 net.cpp:200] pool1 needs backward computation.
I0428 20:30:54.158277  3850 net.cpp:200] conv1 needs backward computation.
I0428 20:30:54.158279  3850 net.cpp:200] pool0 needs backward computation.
I0428 20:30:54.158282  3850 net.cpp:200] conv0 needs backward computation.
I0428 20:30:54.158287  3850 net.cpp:202] mnist does not need backward computation.
I0428 20:30:54.158288  3850 net.cpp:244] This network produces output loss
I0428 20:30:54.158313  3850 net.cpp:257] Network initialization done.
I0428 20:30:54.158677  3850 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1546.prototxt
I0428 20:30:54.158715  3850 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:54.158823  3850 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:54.158920  3850 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:54.158962  3850 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:54.158974  3850 net.cpp:86] Creating Layer mnist
I0428 20:30:54.158980  3850 net.cpp:382] mnist -> data
I0428 20:30:54.158988  3850 net.cpp:382] mnist -> label
I0428 20:30:54.159071  3850 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:54.161116  3850 net.cpp:124] Setting up mnist
I0428 20:30:54.161160  3850 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:54.161165  3850 net.cpp:131] Top shape: 100 (100)
I0428 20:30:54.161168  3850 net.cpp:139] Memory required for data: 314000
I0428 20:30:54.161172  3850 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:54.161178  3850 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:54.161182  3850 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:54.161198  3850 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:54.161206  3850 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:54.161264  3850 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:54.161272  3850 net.cpp:131] Top shape: 100 (100)
I0428 20:30:54.161274  3850 net.cpp:131] Top shape: 100 (100)
I0428 20:30:54.161278  3850 net.cpp:139] Memory required for data: 314800
I0428 20:30:54.161280  3850 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:54.161289  3850 net.cpp:86] Creating Layer conv0
I0428 20:30:54.161293  3850 net.cpp:408] conv0 <- data
I0428 20:30:54.161298  3850 net.cpp:382] conv0 -> conv0
I0428 20:30:54.163192  3850 net.cpp:124] Setting up conv0
I0428 20:30:54.163205  3850 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:54.163208  3850 net.cpp:139] Memory required for data: 23354800
I0428 20:30:54.163218  3850 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:54.163223  3850 net.cpp:86] Creating Layer pool0
I0428 20:30:54.163226  3850 net.cpp:408] pool0 <- conv0
I0428 20:30:54.163233  3850 net.cpp:382] pool0 -> pool0
I0428 20:30:54.163267  3850 net.cpp:124] Setting up pool0
I0428 20:30:54.163272  3850 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:54.163275  3850 net.cpp:139] Memory required for data: 29114800
I0428 20:30:54.163278  3850 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:54.163288  3850 net.cpp:86] Creating Layer conv1
I0428 20:30:54.163291  3850 net.cpp:408] conv1 <- pool0
I0428 20:30:54.163296  3850 net.cpp:382] conv1 -> conv1
I0428 20:30:54.165246  3850 net.cpp:124] Setting up conv1
I0428 20:30:54.165261  3850 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:54.165271  3850 net.cpp:139] Memory required for data: 29370800
I0428 20:30:54.165279  3850 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:54.165287  3850 net.cpp:86] Creating Layer pool1
I0428 20:30:54.165292  3850 net.cpp:408] pool1 <- conv1
I0428 20:30:54.165302  3850 net.cpp:382] pool1 -> pool1
I0428 20:30:54.165343  3850 net.cpp:124] Setting up pool1
I0428 20:30:54.165364  3850 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:54.165366  3850 net.cpp:139] Memory required for data: 29434800
I0428 20:30:54.165369  3850 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:54.165375  3850 net.cpp:86] Creating Layer ip1
I0428 20:30:54.165379  3850 net.cpp:408] ip1 <- pool1
I0428 20:30:54.165385  3850 net.cpp:382] ip1 -> ip1
I0428 20:30:54.165531  3850 net.cpp:124] Setting up ip1
I0428 20:30:54.165549  3850 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:54.165551  3850 net.cpp:139] Memory required for data: 29444800
I0428 20:30:54.165560  3850 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:54.165565  3850 net.cpp:86] Creating Layer relu1
I0428 20:30:54.165567  3850 net.cpp:408] relu1 <- ip1
I0428 20:30:54.165572  3850 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:54.165741  3850 net.cpp:124] Setting up relu1
I0428 20:30:54.165766  3850 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:54.165771  3850 net.cpp:139] Memory required for data: 29454800
I0428 20:30:54.165773  3850 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:54.165781  3850 net.cpp:86] Creating Layer ip2
I0428 20:30:54.165792  3850 net.cpp:408] ip2 <- ip1
I0428 20:30:54.165797  3850 net.cpp:382] ip2 -> ip2
I0428 20:30:54.165908  3850 net.cpp:124] Setting up ip2
I0428 20:30:54.165915  3850 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:54.165920  3850 net.cpp:139] Memory required for data: 29464800
I0428 20:30:54.165925  3850 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:54.165930  3850 net.cpp:86] Creating Layer relu2
I0428 20:30:54.165932  3850 net.cpp:408] relu2 <- ip2
I0428 20:30:54.165949  3850 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:54.166148  3850 net.cpp:124] Setting up relu2
I0428 20:30:54.166157  3850 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:54.166175  3850 net.cpp:139] Memory required for data: 29474800
I0428 20:30:54.166178  3850 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:54.166185  3850 net.cpp:86] Creating Layer ip3
I0428 20:30:54.166188  3850 net.cpp:408] ip3 <- ip2
I0428 20:30:54.166208  3850 net.cpp:382] ip3 -> ip3
I0428 20:30:54.166378  3850 net.cpp:124] Setting up ip3
I0428 20:30:54.166388  3850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:54.166390  3850 net.cpp:139] Memory required for data: 29478800
I0428 20:30:54.166404  3850 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:54.166410  3850 net.cpp:86] Creating Layer relu3
I0428 20:30:54.166414  3850 net.cpp:408] relu3 <- ip3
I0428 20:30:54.166417  3850 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:54.167338  3850 net.cpp:124] Setting up relu3
I0428 20:30:54.167351  3850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:54.167359  3850 net.cpp:139] Memory required for data: 29482800
I0428 20:30:54.167363  3850 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:54.167369  3850 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:54.167372  3850 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:54.167377  3850 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:54.167384  3850 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:54.167420  3850 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:54.167425  3850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:54.167428  3850 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:54.167431  3850 net.cpp:139] Memory required for data: 29490800
I0428 20:30:54.167434  3850 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:54.167445  3850 net.cpp:86] Creating Layer accuracy
I0428 20:30:54.167448  3850 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:54.167453  3850 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:54.167457  3850 net.cpp:382] accuracy -> accuracy
I0428 20:30:54.167464  3850 net.cpp:124] Setting up accuracy
I0428 20:30:54.167467  3850 net.cpp:131] Top shape: (1)
I0428 20:30:54.167471  3850 net.cpp:139] Memory required for data: 29490804
I0428 20:30:54.167474  3850 layer_factory.hpp:77] Creating layer loss
I0428 20:30:54.167479  3850 net.cpp:86] Creating Layer loss
I0428 20:30:54.167482  3850 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:54.167486  3850 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:54.167490  3850 net.cpp:382] loss -> loss
I0428 20:30:54.167495  3850 layer_factory.hpp:77] Creating layer loss
I0428 20:30:54.167762  3850 net.cpp:124] Setting up loss
I0428 20:30:54.167783  3850 net.cpp:131] Top shape: (1)
I0428 20:30:54.167788  3850 net.cpp:134]     with loss weight 1
I0428 20:30:54.167803  3850 net.cpp:139] Memory required for data: 29490808
I0428 20:30:54.167806  3850 net.cpp:200] loss needs backward computation.
I0428 20:30:54.167816  3850 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:54.167820  3850 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:54.167824  3850 net.cpp:200] relu3 needs backward computation.
I0428 20:30:54.167826  3850 net.cpp:200] ip3 needs backward computation.
I0428 20:30:54.167829  3850 net.cpp:200] relu2 needs backward computation.
I0428 20:30:54.167831  3850 net.cpp:200] ip2 needs backward computation.
I0428 20:30:54.167834  3850 net.cpp:200] relu1 needs backward computation.
I0428 20:30:54.167837  3850 net.cpp:200] ip1 needs backward computation.
I0428 20:30:54.167840  3850 net.cpp:200] pool1 needs backward computation.
I0428 20:30:54.167845  3850 net.cpp:200] conv1 needs backward computation.
I0428 20:30:54.167853  3850 net.cpp:200] pool0 needs backward computation.
I0428 20:30:54.167856  3850 net.cpp:200] conv0 needs backward computation.
I0428 20:30:54.167860  3850 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:54.167865  3850 net.cpp:202] mnist does not need backward computation.
I0428 20:30:54.167867  3850 net.cpp:244] This network produces output accuracy
I0428 20:30:54.167870  3850 net.cpp:244] This network produces output loss
I0428 20:30:54.167898  3850 net.cpp:257] Network initialization done.
I0428 20:30:54.167943  3850 solver.cpp:56] Solver scaffolding done.
I0428 20:30:54.168310  3850 caffe.cpp:248] Starting Optimization
I0428 20:30:54.168318  3850 solver.cpp:273] Solving LeNet
I0428 20:30:54.168320  3850 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:54.169173  3850 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:54.264855  3878 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:54.267262  3850 solver.cpp:398]     Test net output #0: accuracy = 0.098
I0428 20:30:54.267280  3850 solver.cpp:398]     Test net output #1: loss = 2.30987 (* 1 = 2.30987 loss)
I0428 20:30:54.271682  3850 solver.cpp:219] Iteration 0 (-9.74061e-32 iter/s, 0.103336s/100 iters), loss = 2.32374
I0428 20:30:54.271705  3850 solver.cpp:238]     Train net output #0: loss = 2.32374 (* 1 = 2.32374 loss)
I0428 20:30:54.271715  3850 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:54.476541  3850 solver.cpp:219] Iteration 100 (488.247 iter/s, 0.204814s/100 iters), loss = 0.398463
I0428 20:30:54.476577  3850 solver.cpp:238]     Train net output #0: loss = 0.398463 (* 1 = 0.398463 loss)
I0428 20:30:54.476588  3850 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:54.684916  3850 solver.cpp:219] Iteration 200 (480.032 iter/s, 0.208319s/100 iters), loss = 0.257667
I0428 20:30:54.684962  3850 solver.cpp:238]     Train net output #0: loss = 0.257667 (* 1 = 0.257667 loss)
I0428 20:30:54.684972  3850 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:54.897727  3850 solver.cpp:219] Iteration 300 (470.035 iter/s, 0.21275s/100 iters), loss = 0.256843
I0428 20:30:54.897765  3850 solver.cpp:238]     Train net output #0: loss = 0.256843 (* 1 = 0.256843 loss)
I0428 20:30:54.897775  3850 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:55.107650  3850 solver.cpp:219] Iteration 400 (476.491 iter/s, 0.209868s/100 iters), loss = 0.0904463
I0428 20:30:55.107686  3850 solver.cpp:238]     Train net output #0: loss = 0.0904462 (* 1 = 0.0904462 loss)
I0428 20:30:55.107695  3850 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:55.312887  3850 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:55.409667  3878 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:55.413080  3850 solver.cpp:398]     Test net output #0: accuracy = 0.9607
I0428 20:30:55.413102  3850 solver.cpp:398]     Test net output #1: loss = 0.124476 (* 1 = 0.124476 loss)
I0428 20:30:55.415036  3850 solver.cpp:219] Iteration 500 (325.38 iter/s, 0.307333s/100 iters), loss = 0.09134
I0428 20:30:55.415060  3850 solver.cpp:238]     Train net output #0: loss = 0.0913399 (* 1 = 0.0913399 loss)
I0428 20:30:55.415083  3850 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:55.627070  3850 solver.cpp:219] Iteration 600 (471.72 iter/s, 0.21199s/100 iters), loss = 0.151708
I0428 20:30:55.627116  3850 solver.cpp:238]     Train net output #0: loss = 0.151708 (* 1 = 0.151708 loss)
I0428 20:30:55.627130  3850 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:55.842558  3850 solver.cpp:219] Iteration 700 (464.201 iter/s, 0.215424s/100 iters), loss = 0.130013
I0428 20:30:55.842608  3850 solver.cpp:238]     Train net output #0: loss = 0.130013 (* 1 = 0.130013 loss)
I0428 20:30:55.842627  3850 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:56.072860  3850 solver.cpp:219] Iteration 800 (434.339 iter/s, 0.230235s/100 iters), loss = 0.397768
I0428 20:30:56.072909  3850 solver.cpp:238]     Train net output #0: loss = 0.397768 (* 1 = 0.397768 loss)
I0428 20:30:56.072923  3850 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:56.303630  3850 solver.cpp:219] Iteration 900 (433.458 iter/s, 0.230703s/100 iters), loss = 0.0790516
I0428 20:30:56.303680  3850 solver.cpp:238]     Train net output #0: loss = 0.0790514 (* 1 = 0.0790514 loss)
I0428 20:30:56.303694  3850 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:56.380626  3857 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:56.531124  3850 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:56.533586  3850 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:56.535079  3850 solver.cpp:311] Iteration 1000, loss = 0.142371
I0428 20:30:56.535109  3850 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:56.640542  3878 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:56.643318  3850 solver.cpp:398]     Test net output #0: accuracy = 0.9724
I0428 20:30:56.643344  3850 solver.cpp:398]     Test net output #1: loss = 0.0882877 (* 1 = 0.0882877 loss)
I0428 20:30:56.643350  3850 solver.cpp:316] Optimization Done.
I0428 20:30:56.643353  3850 caffe.cpp:259] Optimization Done.
