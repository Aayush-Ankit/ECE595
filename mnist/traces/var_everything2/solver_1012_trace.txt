I0428 20:05:53.020591 30742 caffe.cpp:218] Using GPUs 0
I0428 20:05:53.050051 30742 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:53.488016 30742 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1012.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:53.488150 30742 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1012.prototxt
I0428 20:05:53.488476 30742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:53.488492 30742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:53.488572 30742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:53.488636 30742 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:53.488723 30742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:53.488742 30742 net.cpp:86] Creating Layer mnist
I0428 20:05:53.488749 30742 net.cpp:382] mnist -> data
I0428 20:05:53.488768 30742 net.cpp:382] mnist -> label
I0428 20:05:53.489838 30742 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:53.491968 30742 net.cpp:124] Setting up mnist
I0428 20:05:53.492014 30742 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:53.492019 30742 net.cpp:131] Top shape: 64 (64)
I0428 20:05:53.492022 30742 net.cpp:139] Memory required for data: 200960
I0428 20:05:53.492027 30742 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:53.492063 30742 net.cpp:86] Creating Layer conv0
I0428 20:05:53.492080 30742 net.cpp:408] conv0 <- data
I0428 20:05:53.492091 30742 net.cpp:382] conv0 -> conv0
I0428 20:05:53.722762 30742 net.cpp:124] Setting up conv0
I0428 20:05:53.722805 30742 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:53.722810 30742 net.cpp:139] Memory required for data: 3887360
I0428 20:05:53.722825 30742 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:53.722836 30742 net.cpp:86] Creating Layer pool0
I0428 20:05:53.722841 30742 net.cpp:408] pool0 <- conv0
I0428 20:05:53.722846 30742 net.cpp:382] pool0 -> pool0
I0428 20:05:53.722890 30742 net.cpp:124] Setting up pool0
I0428 20:05:53.722896 30742 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:53.722899 30742 net.cpp:139] Memory required for data: 4808960
I0428 20:05:53.722903 30742 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:53.722913 30742 net.cpp:86] Creating Layer conv1
I0428 20:05:53.722915 30742 net.cpp:408] conv1 <- pool0
I0428 20:05:53.722920 30742 net.cpp:382] conv1 -> conv1
I0428 20:05:53.725713 30742 net.cpp:124] Setting up conv1
I0428 20:05:53.725728 30742 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:53.725731 30742 net.cpp:139] Memory required for data: 4841728
I0428 20:05:53.725740 30742 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:53.725749 30742 net.cpp:86] Creating Layer pool1
I0428 20:05:53.725751 30742 net.cpp:408] pool1 <- conv1
I0428 20:05:53.725756 30742 net.cpp:382] pool1 -> pool1
I0428 20:05:53.725806 30742 net.cpp:124] Setting up pool1
I0428 20:05:53.725814 30742 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:53.725817 30742 net.cpp:139] Memory required for data: 4849920
I0428 20:05:53.725821 30742 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:53.725827 30742 net.cpp:86] Creating Layer ip1
I0428 20:05:53.725831 30742 net.cpp:408] ip1 <- pool1
I0428 20:05:53.725834 30742 net.cpp:382] ip1 -> ip1
I0428 20:05:53.725936 30742 net.cpp:124] Setting up ip1
I0428 20:05:53.725942 30742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:53.725945 30742 net.cpp:139] Memory required for data: 4862720
I0428 20:05:53.725952 30742 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:53.725957 30742 net.cpp:86] Creating Layer relu1
I0428 20:05:53.725960 30742 net.cpp:408] relu1 <- ip1
I0428 20:05:53.725965 30742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:53.726124 30742 net.cpp:124] Setting up relu1
I0428 20:05:53.726132 30742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:53.726135 30742 net.cpp:139] Memory required for data: 4875520
I0428 20:05:53.726138 30742 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:53.726145 30742 net.cpp:86] Creating Layer ip2
I0428 20:05:53.726147 30742 net.cpp:408] ip2 <- ip1
I0428 20:05:53.726152 30742 net.cpp:382] ip2 -> ip2
I0428 20:05:53.726253 30742 net.cpp:124] Setting up ip2
I0428 20:05:53.726259 30742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:53.726263 30742 net.cpp:139] Memory required for data: 4888320
I0428 20:05:53.726267 30742 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:53.726274 30742 net.cpp:86] Creating Layer relu2
I0428 20:05:53.726276 30742 net.cpp:408] relu2 <- ip2
I0428 20:05:53.726280 30742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:53.727044 30742 net.cpp:124] Setting up relu2
I0428 20:05:53.727056 30742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:53.727072 30742 net.cpp:139] Memory required for data: 4901120
I0428 20:05:53.727074 30742 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:53.727082 30742 net.cpp:86] Creating Layer ip3
I0428 20:05:53.727084 30742 net.cpp:408] ip3 <- ip2
I0428 20:05:53.727090 30742 net.cpp:382] ip3 -> ip3
I0428 20:05:53.727190 30742 net.cpp:124] Setting up ip3
I0428 20:05:53.727198 30742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:53.727201 30742 net.cpp:139] Memory required for data: 4903680
I0428 20:05:53.727210 30742 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:53.727214 30742 net.cpp:86] Creating Layer relu3
I0428 20:05:53.727217 30742 net.cpp:408] relu3 <- ip3
I0428 20:05:53.727221 30742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:53.727396 30742 net.cpp:124] Setting up relu3
I0428 20:05:53.727404 30742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:53.727407 30742 net.cpp:139] Memory required for data: 4906240
I0428 20:05:53.727411 30742 layer_factory.hpp:77] Creating layer loss
I0428 20:05:53.727416 30742 net.cpp:86] Creating Layer loss
I0428 20:05:53.727418 30742 net.cpp:408] loss <- ip3
I0428 20:05:53.727422 30742 net.cpp:408] loss <- label
I0428 20:05:53.727430 30742 net.cpp:382] loss -> loss
I0428 20:05:53.727452 30742 layer_factory.hpp:77] Creating layer loss
I0428 20:05:53.727674 30742 net.cpp:124] Setting up loss
I0428 20:05:53.727682 30742 net.cpp:131] Top shape: (1)
I0428 20:05:53.727685 30742 net.cpp:134]     with loss weight 1
I0428 20:05:53.727699 30742 net.cpp:139] Memory required for data: 4906244
I0428 20:05:53.727704 30742 net.cpp:200] loss needs backward computation.
I0428 20:05:53.727706 30742 net.cpp:200] relu3 needs backward computation.
I0428 20:05:53.727710 30742 net.cpp:200] ip3 needs backward computation.
I0428 20:05:53.727712 30742 net.cpp:200] relu2 needs backward computation.
I0428 20:05:53.727715 30742 net.cpp:200] ip2 needs backward computation.
I0428 20:05:53.727718 30742 net.cpp:200] relu1 needs backward computation.
I0428 20:05:53.727721 30742 net.cpp:200] ip1 needs backward computation.
I0428 20:05:53.727725 30742 net.cpp:200] pool1 needs backward computation.
I0428 20:05:53.727726 30742 net.cpp:200] conv1 needs backward computation.
I0428 20:05:53.727730 30742 net.cpp:200] pool0 needs backward computation.
I0428 20:05:53.727732 30742 net.cpp:200] conv0 needs backward computation.
I0428 20:05:53.727735 30742 net.cpp:202] mnist does not need backward computation.
I0428 20:05:53.727738 30742 net.cpp:244] This network produces output loss
I0428 20:05:53.727747 30742 net.cpp:257] Network initialization done.
I0428 20:05:53.728085 30742 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1012.prototxt
I0428 20:05:53.728112 30742 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:53.728207 30742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:53.728302 30742 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:53.728341 30742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:53.728358 30742 net.cpp:86] Creating Layer mnist
I0428 20:05:53.728361 30742 net.cpp:382] mnist -> data
I0428 20:05:53.728369 30742 net.cpp:382] mnist -> label
I0428 20:05:53.728452 30742 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:53.730463 30742 net.cpp:124] Setting up mnist
I0428 20:05:53.730475 30742 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:53.730480 30742 net.cpp:131] Top shape: 100 (100)
I0428 20:05:53.730484 30742 net.cpp:139] Memory required for data: 314000
I0428 20:05:53.730486 30742 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:53.730492 30742 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:53.730496 30742 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:53.730501 30742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:53.730507 30742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:53.730550 30742 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:53.730556 30742 net.cpp:131] Top shape: 100 (100)
I0428 20:05:53.730558 30742 net.cpp:131] Top shape: 100 (100)
I0428 20:05:53.730561 30742 net.cpp:139] Memory required for data: 314800
I0428 20:05:53.730563 30742 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:53.730571 30742 net.cpp:86] Creating Layer conv0
I0428 20:05:53.730574 30742 net.cpp:408] conv0 <- data
I0428 20:05:53.730578 30742 net.cpp:382] conv0 -> conv0
I0428 20:05:53.732084 30742 net.cpp:124] Setting up conv0
I0428 20:05:53.732096 30742 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:53.732100 30742 net.cpp:139] Memory required for data: 6074800
I0428 20:05:53.732110 30742 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:53.732115 30742 net.cpp:86] Creating Layer pool0
I0428 20:05:53.732118 30742 net.cpp:408] pool0 <- conv0
I0428 20:05:53.732122 30742 net.cpp:382] pool0 -> pool0
I0428 20:05:53.732157 30742 net.cpp:124] Setting up pool0
I0428 20:05:53.732162 30742 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:53.732165 30742 net.cpp:139] Memory required for data: 7514800
I0428 20:05:53.732168 30742 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:53.732177 30742 net.cpp:86] Creating Layer conv1
I0428 20:05:53.732179 30742 net.cpp:408] conv1 <- pool0
I0428 20:05:53.732184 30742 net.cpp:382] conv1 -> conv1
I0428 20:05:53.734313 30742 net.cpp:124] Setting up conv1
I0428 20:05:53.734325 30742 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:53.734329 30742 net.cpp:139] Memory required for data: 7566000
I0428 20:05:53.734338 30742 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:53.734344 30742 net.cpp:86] Creating Layer pool1
I0428 20:05:53.734347 30742 net.cpp:408] pool1 <- conv1
I0428 20:05:53.734351 30742 net.cpp:382] pool1 -> pool1
I0428 20:05:53.734390 30742 net.cpp:124] Setting up pool1
I0428 20:05:53.734405 30742 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:53.734407 30742 net.cpp:139] Memory required for data: 7578800
I0428 20:05:53.734421 30742 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:53.734426 30742 net.cpp:86] Creating Layer ip1
I0428 20:05:53.734436 30742 net.cpp:408] ip1 <- pool1
I0428 20:05:53.734441 30742 net.cpp:382] ip1 -> ip1
I0428 20:05:53.734545 30742 net.cpp:124] Setting up ip1
I0428 20:05:53.734553 30742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:53.734567 30742 net.cpp:139] Memory required for data: 7598800
I0428 20:05:53.734575 30742 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:53.734586 30742 net.cpp:86] Creating Layer relu1
I0428 20:05:53.734588 30742 net.cpp:408] relu1 <- ip1
I0428 20:05:53.734593 30742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:53.734756 30742 net.cpp:124] Setting up relu1
I0428 20:05:53.734766 30742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:53.734768 30742 net.cpp:139] Memory required for data: 7618800
I0428 20:05:53.734772 30742 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:53.734778 30742 net.cpp:86] Creating Layer ip2
I0428 20:05:53.734782 30742 net.cpp:408] ip2 <- ip1
I0428 20:05:53.734787 30742 net.cpp:382] ip2 -> ip2
I0428 20:05:53.734906 30742 net.cpp:124] Setting up ip2
I0428 20:05:53.734915 30742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:53.734918 30742 net.cpp:139] Memory required for data: 7638800
I0428 20:05:53.734923 30742 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:53.734928 30742 net.cpp:86] Creating Layer relu2
I0428 20:05:53.734931 30742 net.cpp:408] relu2 <- ip2
I0428 20:05:53.734935 30742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:53.735111 30742 net.cpp:124] Setting up relu2
I0428 20:05:53.735119 30742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:53.735122 30742 net.cpp:139] Memory required for data: 7658800
I0428 20:05:53.735126 30742 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:53.735131 30742 net.cpp:86] Creating Layer ip3
I0428 20:05:53.735133 30742 net.cpp:408] ip3 <- ip2
I0428 20:05:53.735138 30742 net.cpp:382] ip3 -> ip3
I0428 20:05:53.735287 30742 net.cpp:124] Setting up ip3
I0428 20:05:53.735294 30742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:53.735316 30742 net.cpp:139] Memory required for data: 7662800
I0428 20:05:53.735339 30742 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:53.735352 30742 net.cpp:86] Creating Layer relu3
I0428 20:05:53.735354 30742 net.cpp:408] relu3 <- ip3
I0428 20:05:53.735358 30742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:53.736162 30742 net.cpp:124] Setting up relu3
I0428 20:05:53.736173 30742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:53.736176 30742 net.cpp:139] Memory required for data: 7666800
I0428 20:05:53.736179 30742 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:53.736184 30742 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:53.736187 30742 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:53.736192 30742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:53.736198 30742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:53.736238 30742 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:53.736243 30742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:53.736245 30742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:53.736248 30742 net.cpp:139] Memory required for data: 7674800
I0428 20:05:53.736250 30742 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:53.736255 30742 net.cpp:86] Creating Layer accuracy
I0428 20:05:53.736258 30742 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:53.736263 30742 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:53.736266 30742 net.cpp:382] accuracy -> accuracy
I0428 20:05:53.736273 30742 net.cpp:124] Setting up accuracy
I0428 20:05:53.736275 30742 net.cpp:131] Top shape: (1)
I0428 20:05:53.736279 30742 net.cpp:139] Memory required for data: 7674804
I0428 20:05:53.736280 30742 layer_factory.hpp:77] Creating layer loss
I0428 20:05:53.736284 30742 net.cpp:86] Creating Layer loss
I0428 20:05:53.736287 30742 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:53.736290 30742 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:53.736294 30742 net.cpp:382] loss -> loss
I0428 20:05:53.736299 30742 layer_factory.hpp:77] Creating layer loss
I0428 20:05:53.736536 30742 net.cpp:124] Setting up loss
I0428 20:05:53.736546 30742 net.cpp:131] Top shape: (1)
I0428 20:05:53.736548 30742 net.cpp:134]     with loss weight 1
I0428 20:05:53.736554 30742 net.cpp:139] Memory required for data: 7674808
I0428 20:05:53.736573 30742 net.cpp:200] loss needs backward computation.
I0428 20:05:53.736582 30742 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:53.736587 30742 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:53.736589 30742 net.cpp:200] relu3 needs backward computation.
I0428 20:05:53.736593 30742 net.cpp:200] ip3 needs backward computation.
I0428 20:05:53.736600 30742 net.cpp:200] relu2 needs backward computation.
I0428 20:05:53.736603 30742 net.cpp:200] ip2 needs backward computation.
I0428 20:05:53.736606 30742 net.cpp:200] relu1 needs backward computation.
I0428 20:05:53.736608 30742 net.cpp:200] ip1 needs backward computation.
I0428 20:05:53.736611 30742 net.cpp:200] pool1 needs backward computation.
I0428 20:05:53.736614 30742 net.cpp:200] conv1 needs backward computation.
I0428 20:05:53.736624 30742 net.cpp:200] pool0 needs backward computation.
I0428 20:05:53.736625 30742 net.cpp:200] conv0 needs backward computation.
I0428 20:05:53.736629 30742 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:53.736634 30742 net.cpp:202] mnist does not need backward computation.
I0428 20:05:53.736636 30742 net.cpp:244] This network produces output accuracy
I0428 20:05:53.736639 30742 net.cpp:244] This network produces output loss
I0428 20:05:53.736649 30742 net.cpp:257] Network initialization done.
I0428 20:05:53.736688 30742 solver.cpp:56] Solver scaffolding done.
I0428 20:05:53.737085 30742 caffe.cpp:248] Starting Optimization
I0428 20:05:53.737093 30742 solver.cpp:273] Solving LeNet
I0428 20:05:53.737097 30742 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:53.737921 30742 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:53.743017 30742 blocking_queue.cpp:49] Waiting for data
I0428 20:05:53.816730 30749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:53.817319 30742 solver.cpp:398]     Test net output #0: accuracy = 0.1845
I0428 20:05:53.817348 30742 solver.cpp:398]     Test net output #1: loss = 2.27168 (* 1 = 2.27168 loss)
I0428 20:05:53.820307 30742 solver.cpp:219] Iteration 0 (-2.57409e-31 iter/s, 0.0831672s/100 iters), loss = 2.27979
I0428 20:05:53.820330 30742 solver.cpp:238]     Train net output #0: loss = 2.27979 (* 1 = 2.27979 loss)
I0428 20:05:53.820340 30742 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:53.912425 30742 solver.cpp:219] Iteration 100 (1085.96 iter/s, 0.0920842s/100 iters), loss = 0.990258
I0428 20:05:53.912447 30742 solver.cpp:238]     Train net output #0: loss = 0.990258 (* 1 = 0.990258 loss)
I0428 20:05:53.912469 30742 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:54.008744 30742 solver.cpp:219] Iteration 200 (1038.58 iter/s, 0.0962857s/100 iters), loss = 0.450936
I0428 20:05:54.008767 30742 solver.cpp:238]     Train net output #0: loss = 0.450936 (* 1 = 0.450936 loss)
I0428 20:05:54.008774 30742 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:54.096303 30742 solver.cpp:219] Iteration 300 (1142.53 iter/s, 0.0875254s/100 iters), loss = 0.496902
I0428 20:05:54.096328 30742 solver.cpp:238]     Train net output #0: loss = 0.496902 (* 1 = 0.496902 loss)
I0428 20:05:54.096349 30742 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:54.182281 30742 solver.cpp:219] Iteration 400 (1163.54 iter/s, 0.0859443s/100 iters), loss = 0.308506
I0428 20:05:54.182306 30742 solver.cpp:238]     Train net output #0: loss = 0.308505 (* 1 = 0.308505 loss)
I0428 20:05:54.182312 30742 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:54.267961 30742 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:54.343284 30749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:54.343885 30742 solver.cpp:398]     Test net output #0: accuracy = 0.9305
I0428 20:05:54.343909 30742 solver.cpp:398]     Test net output #1: loss = 0.216293 (* 1 = 0.216293 loss)
I0428 20:05:54.344794 30742 solver.cpp:219] Iteration 500 (615.479 iter/s, 0.162475s/100 iters), loss = 0.266948
I0428 20:05:54.344853 30742 solver.cpp:238]     Train net output #0: loss = 0.266948 (* 1 = 0.266948 loss)
I0428 20:05:54.344861 30742 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:54.442384 30742 solver.cpp:219] Iteration 600 (1025.42 iter/s, 0.0975206s/100 iters), loss = 0.203454
I0428 20:05:54.442411 30742 solver.cpp:238]     Train net output #0: loss = 0.203454 (* 1 = 0.203454 loss)
I0428 20:05:54.442417 30742 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:54.532001 30742 solver.cpp:219] Iteration 700 (1116.31 iter/s, 0.0895805s/100 iters), loss = 0.343309
I0428 20:05:54.532023 30742 solver.cpp:238]     Train net output #0: loss = 0.343309 (* 1 = 0.343309 loss)
I0428 20:05:54.532045 30742 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:54.618278 30742 solver.cpp:219] Iteration 800 (1159.5 iter/s, 0.0862444s/100 iters), loss = 0.337369
I0428 20:05:54.618301 30742 solver.cpp:238]     Train net output #0: loss = 0.337369 (* 1 = 0.337369 loss)
I0428 20:05:54.618322 30742 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:54.713245 30742 solver.cpp:219] Iteration 900 (1053.37 iter/s, 0.094933s/100 iters), loss = 0.218984
I0428 20:05:54.713269 30742 solver.cpp:238]     Train net output #0: loss = 0.218984 (* 1 = 0.218984 loss)
I0428 20:05:54.713275 30742 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:54.744410 30748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:54.801712 30742 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:54.802474 30742 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:54.803047 30742 solver.cpp:311] Iteration 1000, loss = 0.123001
I0428 20:05:54.803062 30742 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:54.879019 30749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:54.879619 30742 solver.cpp:398]     Test net output #0: accuracy = 0.9553
I0428 20:05:54.879639 30742 solver.cpp:398]     Test net output #1: loss = 0.136925 (* 1 = 0.136925 loss)
I0428 20:05:54.879644 30742 solver.cpp:316] Optimization Done.
I0428 20:05:54.879647 30742 caffe.cpp:259] Optimization Done.
