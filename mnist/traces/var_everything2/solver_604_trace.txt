I0428 19:50:25.416661 27010 caffe.cpp:218] Using GPUs 0
I0428 19:50:25.447031 27010 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:25.890432 27010 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test604.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:25.890612 27010 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test604.prototxt
I0428 19:50:25.890940 27010 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:25.890967 27010 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:25.891057 27010 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:25.891121 27010 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:25.891218 27010 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:25.891237 27010 net.cpp:86] Creating Layer mnist
I0428 19:50:25.891245 27010 net.cpp:382] mnist -> data
I0428 19:50:25.891263 27010 net.cpp:382] mnist -> label
I0428 19:50:25.892277 27010 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:25.894539 27010 net.cpp:124] Setting up mnist
I0428 19:50:25.894569 27010 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:25.894574 27010 net.cpp:131] Top shape: 64 (64)
I0428 19:50:25.894577 27010 net.cpp:139] Memory required for data: 200960
I0428 19:50:25.894583 27010 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:25.894637 27010 net.cpp:86] Creating Layer conv0
I0428 19:50:25.894654 27010 net.cpp:408] conv0 <- data
I0428 19:50:25.894665 27010 net.cpp:382] conv0 -> conv0
I0428 19:50:26.124928 27010 net.cpp:124] Setting up conv0
I0428 19:50:26.124970 27010 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:26.124974 27010 net.cpp:139] Memory required for data: 938240
I0428 19:50:26.124989 27010 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:26.125000 27010 net.cpp:86] Creating Layer pool0
I0428 19:50:26.125005 27010 net.cpp:408] pool0 <- conv0
I0428 19:50:26.125010 27010 net.cpp:382] pool0 -> pool0
I0428 19:50:26.125069 27010 net.cpp:124] Setting up pool0
I0428 19:50:26.125075 27010 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:26.125077 27010 net.cpp:139] Memory required for data: 1122560
I0428 19:50:26.125082 27010 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:26.125107 27010 net.cpp:86] Creating Layer conv1
I0428 19:50:26.125109 27010 net.cpp:408] conv1 <- pool0
I0428 19:50:26.125114 27010 net.cpp:382] conv1 -> conv1
I0428 19:50:26.127902 27010 net.cpp:124] Setting up conv1
I0428 19:50:26.127915 27010 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:26.127934 27010 net.cpp:139] Memory required for data: 1286400
I0428 19:50:26.127943 27010 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:26.127950 27010 net.cpp:86] Creating Layer pool1
I0428 19:50:26.127954 27010 net.cpp:408] pool1 <- conv1
I0428 19:50:26.127959 27010 net.cpp:382] pool1 -> pool1
I0428 19:50:26.128012 27010 net.cpp:124] Setting up pool1
I0428 19:50:26.128018 27010 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:26.128032 27010 net.cpp:139] Memory required for data: 1327360
I0428 19:50:26.128036 27010 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:26.128057 27010 net.cpp:86] Creating Layer ip1
I0428 19:50:26.128059 27010 net.cpp:408] ip1 <- pool1
I0428 19:50:26.128064 27010 net.cpp:382] ip1 -> ip1
I0428 19:50:26.128162 27010 net.cpp:124] Setting up ip1
I0428 19:50:26.128170 27010 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:26.128173 27010 net.cpp:139] Memory required for data: 1329920
I0428 19:50:26.128180 27010 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:26.128185 27010 net.cpp:86] Creating Layer relu1
I0428 19:50:26.128188 27010 net.cpp:408] relu1 <- ip1
I0428 19:50:26.128192 27010 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:26.128350 27010 net.cpp:124] Setting up relu1
I0428 19:50:26.128373 27010 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:26.128376 27010 net.cpp:139] Memory required for data: 1332480
I0428 19:50:26.128379 27010 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:26.128386 27010 net.cpp:86] Creating Layer ip2
I0428 19:50:26.128388 27010 net.cpp:408] ip2 <- ip1
I0428 19:50:26.128392 27010 net.cpp:382] ip2 -> ip2
I0428 19:50:26.128494 27010 net.cpp:124] Setting up ip2
I0428 19:50:26.128500 27010 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:26.128504 27010 net.cpp:139] Memory required for data: 1345280
I0428 19:50:26.128509 27010 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:26.128515 27010 net.cpp:86] Creating Layer relu2
I0428 19:50:26.128517 27010 net.cpp:408] relu2 <- ip2
I0428 19:50:26.128521 27010 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:26.129392 27010 net.cpp:124] Setting up relu2
I0428 19:50:26.129403 27010 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:26.129422 27010 net.cpp:139] Memory required for data: 1358080
I0428 19:50:26.129426 27010 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:26.129432 27010 net.cpp:86] Creating Layer ip3
I0428 19:50:26.129436 27010 net.cpp:408] ip3 <- ip2
I0428 19:50:26.129441 27010 net.cpp:382] ip3 -> ip3
I0428 19:50:26.129537 27010 net.cpp:124] Setting up ip3
I0428 19:50:26.129545 27010 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:26.129549 27010 net.cpp:139] Memory required for data: 1360640
I0428 19:50:26.129555 27010 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:26.129560 27010 net.cpp:86] Creating Layer relu3
I0428 19:50:26.129564 27010 net.cpp:408] relu3 <- ip3
I0428 19:50:26.129567 27010 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:26.129724 27010 net.cpp:124] Setting up relu3
I0428 19:50:26.129732 27010 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:26.129734 27010 net.cpp:139] Memory required for data: 1363200
I0428 19:50:26.129737 27010 layer_factory.hpp:77] Creating layer loss
I0428 19:50:26.129743 27010 net.cpp:86] Creating Layer loss
I0428 19:50:26.129746 27010 net.cpp:408] loss <- ip3
I0428 19:50:26.129750 27010 net.cpp:408] loss <- label
I0428 19:50:26.129755 27010 net.cpp:382] loss -> loss
I0428 19:50:26.129771 27010 layer_factory.hpp:77] Creating layer loss
I0428 19:50:26.130017 27010 net.cpp:124] Setting up loss
I0428 19:50:26.130026 27010 net.cpp:131] Top shape: (1)
I0428 19:50:26.130029 27010 net.cpp:134]     with loss weight 1
I0428 19:50:26.130043 27010 net.cpp:139] Memory required for data: 1363204
I0428 19:50:26.130046 27010 net.cpp:200] loss needs backward computation.
I0428 19:50:26.130049 27010 net.cpp:200] relu3 needs backward computation.
I0428 19:50:26.130053 27010 net.cpp:200] ip3 needs backward computation.
I0428 19:50:26.130055 27010 net.cpp:200] relu2 needs backward computation.
I0428 19:50:26.130058 27010 net.cpp:200] ip2 needs backward computation.
I0428 19:50:26.130060 27010 net.cpp:200] relu1 needs backward computation.
I0428 19:50:26.130062 27010 net.cpp:200] ip1 needs backward computation.
I0428 19:50:26.130065 27010 net.cpp:200] pool1 needs backward computation.
I0428 19:50:26.130069 27010 net.cpp:200] conv1 needs backward computation.
I0428 19:50:26.130071 27010 net.cpp:200] pool0 needs backward computation.
I0428 19:50:26.130074 27010 net.cpp:200] conv0 needs backward computation.
I0428 19:50:26.130077 27010 net.cpp:202] mnist does not need backward computation.
I0428 19:50:26.130080 27010 net.cpp:244] This network produces output loss
I0428 19:50:26.130089 27010 net.cpp:257] Network initialization done.
I0428 19:50:26.130455 27010 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test604.prototxt
I0428 19:50:26.130512 27010 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:26.130621 27010 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:26.130703 27010 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:26.130766 27010 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:26.130779 27010 net.cpp:86] Creating Layer mnist
I0428 19:50:26.130784 27010 net.cpp:382] mnist -> data
I0428 19:50:26.130790 27010 net.cpp:382] mnist -> label
I0428 19:50:26.130900 27010 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:26.132761 27010 net.cpp:124] Setting up mnist
I0428 19:50:26.132803 27010 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:26.132830 27010 net.cpp:131] Top shape: 100 (100)
I0428 19:50:26.132834 27010 net.cpp:139] Memory required for data: 314000
I0428 19:50:26.132838 27010 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:26.132844 27010 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:26.132848 27010 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:26.132853 27010 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:26.132859 27010 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:26.132895 27010 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:26.132901 27010 net.cpp:131] Top shape: 100 (100)
I0428 19:50:26.132905 27010 net.cpp:131] Top shape: 100 (100)
I0428 19:50:26.132907 27010 net.cpp:139] Memory required for data: 314800
I0428 19:50:26.132910 27010 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:26.132918 27010 net.cpp:86] Creating Layer conv0
I0428 19:50:26.132920 27010 net.cpp:408] conv0 <- data
I0428 19:50:26.132925 27010 net.cpp:382] conv0 -> conv0
I0428 19:50:26.134784 27010 net.cpp:124] Setting up conv0
I0428 19:50:26.134798 27010 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:26.134801 27010 net.cpp:139] Memory required for data: 1466800
I0428 19:50:26.134809 27010 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:26.134826 27010 net.cpp:86] Creating Layer pool0
I0428 19:50:26.134830 27010 net.cpp:408] pool0 <- conv0
I0428 19:50:26.134835 27010 net.cpp:382] pool0 -> pool0
I0428 19:50:26.134871 27010 net.cpp:124] Setting up pool0
I0428 19:50:26.134876 27010 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:26.134878 27010 net.cpp:139] Memory required for data: 1754800
I0428 19:50:26.134881 27010 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:26.134888 27010 net.cpp:86] Creating Layer conv1
I0428 19:50:26.134892 27010 net.cpp:408] conv1 <- pool0
I0428 19:50:26.134896 27010 net.cpp:382] conv1 -> conv1
I0428 19:50:26.137099 27010 net.cpp:124] Setting up conv1
I0428 19:50:26.137115 27010 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:26.137117 27010 net.cpp:139] Memory required for data: 2010800
I0428 19:50:26.137126 27010 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:26.137148 27010 net.cpp:86] Creating Layer pool1
I0428 19:50:26.137173 27010 net.cpp:408] pool1 <- conv1
I0428 19:50:26.137179 27010 net.cpp:382] pool1 -> pool1
I0428 19:50:26.137236 27010 net.cpp:124] Setting up pool1
I0428 19:50:26.137249 27010 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:26.137253 27010 net.cpp:139] Memory required for data: 2074800
I0428 19:50:26.137255 27010 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:26.137269 27010 net.cpp:86] Creating Layer ip1
I0428 19:50:26.137271 27010 net.cpp:408] ip1 <- pool1
I0428 19:50:26.137276 27010 net.cpp:382] ip1 -> ip1
I0428 19:50:26.137410 27010 net.cpp:124] Setting up ip1
I0428 19:50:26.137418 27010 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:26.137430 27010 net.cpp:139] Memory required for data: 2078800
I0428 19:50:26.137439 27010 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:26.137442 27010 net.cpp:86] Creating Layer relu1
I0428 19:50:26.137445 27010 net.cpp:408] relu1 <- ip1
I0428 19:50:26.137451 27010 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:26.137698 27010 net.cpp:124] Setting up relu1
I0428 19:50:26.137708 27010 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:26.137712 27010 net.cpp:139] Memory required for data: 2082800
I0428 19:50:26.137714 27010 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:26.137722 27010 net.cpp:86] Creating Layer ip2
I0428 19:50:26.137724 27010 net.cpp:408] ip2 <- ip1
I0428 19:50:26.137729 27010 net.cpp:382] ip2 -> ip2
I0428 19:50:26.137845 27010 net.cpp:124] Setting up ip2
I0428 19:50:26.137852 27010 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:26.137856 27010 net.cpp:139] Memory required for data: 2102800
I0428 19:50:26.137861 27010 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:26.137866 27010 net.cpp:86] Creating Layer relu2
I0428 19:50:26.137868 27010 net.cpp:408] relu2 <- ip2
I0428 19:50:26.137872 27010 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:26.138018 27010 net.cpp:124] Setting up relu2
I0428 19:50:26.138026 27010 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:26.138036 27010 net.cpp:139] Memory required for data: 2122800
I0428 19:50:26.138038 27010 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:26.138043 27010 net.cpp:86] Creating Layer ip3
I0428 19:50:26.138047 27010 net.cpp:408] ip3 <- ip2
I0428 19:50:26.138051 27010 net.cpp:382] ip3 -> ip3
I0428 19:50:26.138149 27010 net.cpp:124] Setting up ip3
I0428 19:50:26.138156 27010 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:26.138164 27010 net.cpp:139] Memory required for data: 2126800
I0428 19:50:26.138172 27010 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:26.138177 27010 net.cpp:86] Creating Layer relu3
I0428 19:50:26.138180 27010 net.cpp:408] relu3 <- ip3
I0428 19:50:26.138185 27010 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:26.138942 27010 net.cpp:124] Setting up relu3
I0428 19:50:26.138952 27010 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:26.138957 27010 net.cpp:139] Memory required for data: 2130800
I0428 19:50:26.138959 27010 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:26.138964 27010 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:26.138968 27010 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:26.138973 27010 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:26.138979 27010 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:26.139019 27010 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:26.139024 27010 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:26.139035 27010 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:26.139039 27010 net.cpp:139] Memory required for data: 2138800
I0428 19:50:26.139041 27010 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:26.139046 27010 net.cpp:86] Creating Layer accuracy
I0428 19:50:26.139050 27010 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:26.139053 27010 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:26.139057 27010 net.cpp:382] accuracy -> accuracy
I0428 19:50:26.139065 27010 net.cpp:124] Setting up accuracy
I0428 19:50:26.139068 27010 net.cpp:131] Top shape: (1)
I0428 19:50:26.139070 27010 net.cpp:139] Memory required for data: 2138804
I0428 19:50:26.139073 27010 layer_factory.hpp:77] Creating layer loss
I0428 19:50:26.139077 27010 net.cpp:86] Creating Layer loss
I0428 19:50:26.139081 27010 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:26.139084 27010 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:26.139088 27010 net.cpp:382] loss -> loss
I0428 19:50:26.139093 27010 layer_factory.hpp:77] Creating layer loss
I0428 19:50:26.139366 27010 net.cpp:124] Setting up loss
I0428 19:50:26.139375 27010 net.cpp:131] Top shape: (1)
I0428 19:50:26.139379 27010 net.cpp:134]     with loss weight 1
I0428 19:50:26.139385 27010 net.cpp:139] Memory required for data: 2138808
I0428 19:50:26.139397 27010 net.cpp:200] loss needs backward computation.
I0428 19:50:26.139401 27010 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:26.139406 27010 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:26.139410 27010 net.cpp:200] relu3 needs backward computation.
I0428 19:50:26.139412 27010 net.cpp:200] ip3 needs backward computation.
I0428 19:50:26.139415 27010 net.cpp:200] relu2 needs backward computation.
I0428 19:50:26.139417 27010 net.cpp:200] ip2 needs backward computation.
I0428 19:50:26.139438 27010 net.cpp:200] relu1 needs backward computation.
I0428 19:50:26.139441 27010 net.cpp:200] ip1 needs backward computation.
I0428 19:50:26.139444 27010 net.cpp:200] pool1 needs backward computation.
I0428 19:50:26.139453 27010 net.cpp:200] conv1 needs backward computation.
I0428 19:50:26.139456 27010 net.cpp:200] pool0 needs backward computation.
I0428 19:50:26.139459 27010 net.cpp:200] conv0 needs backward computation.
I0428 19:50:26.139468 27010 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:26.139472 27010 net.cpp:202] mnist does not need backward computation.
I0428 19:50:26.139474 27010 net.cpp:244] This network produces output accuracy
I0428 19:50:26.139477 27010 net.cpp:244] This network produces output loss
I0428 19:50:26.139498 27010 net.cpp:257] Network initialization done.
I0428 19:50:26.139536 27010 solver.cpp:56] Solver scaffolding done.
I0428 19:50:26.139889 27010 caffe.cpp:248] Starting Optimization
I0428 19:50:26.139896 27010 solver.cpp:273] Solving LeNet
I0428 19:50:26.139899 27010 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:26.140693 27010 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:26.143841 27010 blocking_queue.cpp:49] Waiting for data
I0428 19:50:26.214351 27017 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:26.214876 27010 solver.cpp:398]     Test net output #0: accuracy = 0.1187
I0428 19:50:26.214893 27010 solver.cpp:398]     Test net output #1: loss = 2.30112 (* 1 = 2.30112 loss)
I0428 19:50:26.216806 27010 solver.cpp:219] Iteration 0 (-4.03107e-31 iter/s, 0.0768828s/100 iters), loss = 2.30636
I0428 19:50:26.216852 27010 solver.cpp:238]     Train net output #0: loss = 2.30636 (* 1 = 2.30636 loss)
I0428 19:50:26.216879 27010 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:26.297515 27010 solver.cpp:219] Iteration 100 (1239.86 iter/s, 0.0806543s/100 iters), loss = 0.939493
I0428 19:50:26.297541 27010 solver.cpp:238]     Train net output #0: loss = 0.939493 (* 1 = 0.939493 loss)
I0428 19:50:26.297564 27010 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:26.375141 27010 solver.cpp:219] Iteration 200 (1288.81 iter/s, 0.0775907s/100 iters), loss = 0.624035
I0428 19:50:26.375165 27010 solver.cpp:238]     Train net output #0: loss = 0.624035 (* 1 = 0.624035 loss)
I0428 19:50:26.375171 27010 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:26.458217 27010 solver.cpp:219] Iteration 300 (1204.19 iter/s, 0.0830431s/100 iters), loss = 0.741039
I0428 19:50:26.458241 27010 solver.cpp:238]     Train net output #0: loss = 0.741039 (* 1 = 0.741039 loss)
I0428 19:50:26.458266 27010 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:26.535081 27010 solver.cpp:219] Iteration 400 (1301.58 iter/s, 0.0768299s/100 iters), loss = 0.766957
I0428 19:50:26.535104 27010 solver.cpp:238]     Train net output #0: loss = 0.766957 (* 1 = 0.766957 loss)
I0428 19:50:26.535109 27010 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:26.607779 27010 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:26.682986 27017 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:26.683480 27010 solver.cpp:398]     Test net output #0: accuracy = 0.8351
I0428 19:50:26.683498 27010 solver.cpp:398]     Test net output #1: loss = 0.623264 (* 1 = 0.623264 loss)
I0428 19:50:26.684353 27010 solver.cpp:219] Iteration 500 (670.081 iter/s, 0.149236s/100 iters), loss = 0.576215
I0428 19:50:26.684396 27010 solver.cpp:238]     Train net output #0: loss = 0.576215 (* 1 = 0.576215 loss)
I0428 19:50:26.684403 27010 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:26.769853 27010 solver.cpp:219] Iteration 600 (1170.31 iter/s, 0.0854477s/100 iters), loss = 0.401051
I0428 19:50:26.769883 27010 solver.cpp:238]     Train net output #0: loss = 0.401051 (* 1 = 0.401051 loss)
I0428 19:50:26.769891 27010 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:26.847837 27010 solver.cpp:219] Iteration 700 (1282.96 iter/s, 0.0779448s/100 iters), loss = 0.54714
I0428 19:50:26.847867 27010 solver.cpp:238]     Train net output #0: loss = 0.54714 (* 1 = 0.54714 loss)
I0428 19:50:26.847873 27010 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:26.926208 27010 solver.cpp:219] Iteration 800 (1276.6 iter/s, 0.0783329s/100 iters), loss = 0.40701
I0428 19:50:26.926239 27010 solver.cpp:238]     Train net output #0: loss = 0.40701 (* 1 = 0.40701 loss)
I0428 19:50:26.926245 27010 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:27.005462 27010 solver.cpp:219] Iteration 900 (1262.39 iter/s, 0.0792146s/100 iters), loss = 0.505076
I0428 19:50:27.005492 27010 solver.cpp:238]     Train net output #0: loss = 0.505076 (* 1 = 0.505076 loss)
I0428 19:50:27.005499 27010 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:27.032297 27016 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:27.084066 27010 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:27.084767 27010 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:27.085247 27010 solver.cpp:311] Iteration 1000, loss = 0.426117
I0428 19:50:27.085263 27010 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:27.147493 27017 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:27.148114 27010 solver.cpp:398]     Test net output #0: accuracy = 0.9459
I0428 19:50:27.148151 27010 solver.cpp:398]     Test net output #1: loss = 0.359071 (* 1 = 0.359071 loss)
I0428 19:50:27.148159 27010 solver.cpp:316] Optimization Done.
I0428 19:50:27.148162 27010 caffe.cpp:259] Optimization Done.
