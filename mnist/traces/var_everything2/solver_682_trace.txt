I0428 19:53:13.685261 27723 caffe.cpp:218] Using GPUs 0
I0428 19:53:13.716645 27723 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:14.225721 27723 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test682.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:14.225862 27723 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test682.prototxt
I0428 19:53:14.226284 27723 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:14.226305 27723 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:14.226408 27723 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:14.226490 27723 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:14.226594 27723 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:14.226619 27723 net.cpp:86] Creating Layer mnist
I0428 19:53:14.226626 27723 net.cpp:382] mnist -> data
I0428 19:53:14.226649 27723 net.cpp:382] mnist -> label
I0428 19:53:14.227759 27723 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:14.230270 27723 net.cpp:124] Setting up mnist
I0428 19:53:14.230291 27723 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:14.230298 27723 net.cpp:131] Top shape: 64 (64)
I0428 19:53:14.230300 27723 net.cpp:139] Memory required for data: 200960
I0428 19:53:14.230307 27723 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:14.230324 27723 net.cpp:86] Creating Layer conv0
I0428 19:53:14.230345 27723 net.cpp:408] conv0 <- data
I0428 19:53:14.230358 27723 net.cpp:382] conv0 -> conv0
I0428 19:53:14.474431 27723 net.cpp:124] Setting up conv0
I0428 19:53:14.474457 27723 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:14.474462 27723 net.cpp:139] Memory required for data: 938240
I0428 19:53:14.474474 27723 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:14.474488 27723 net.cpp:86] Creating Layer pool0
I0428 19:53:14.474490 27723 net.cpp:408] pool0 <- conv0
I0428 19:53:14.474495 27723 net.cpp:382] pool0 -> pool0
I0428 19:53:14.474555 27723 net.cpp:124] Setting up pool0
I0428 19:53:14.474561 27723 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:14.474565 27723 net.cpp:139] Memory required for data: 1122560
I0428 19:53:14.474567 27723 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:14.474577 27723 net.cpp:86] Creating Layer conv1
I0428 19:53:14.474581 27723 net.cpp:408] conv1 <- pool0
I0428 19:53:14.474584 27723 net.cpp:382] conv1 -> conv1
I0428 19:53:14.477310 27723 net.cpp:124] Setting up conv1
I0428 19:53:14.477339 27723 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:14.477344 27723 net.cpp:139] Memory required for data: 1941760
I0428 19:53:14.477351 27723 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:14.477358 27723 net.cpp:86] Creating Layer pool1
I0428 19:53:14.477362 27723 net.cpp:408] pool1 <- conv1
I0428 19:53:14.477366 27723 net.cpp:382] pool1 -> pool1
I0428 19:53:14.477418 27723 net.cpp:124] Setting up pool1
I0428 19:53:14.477424 27723 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:14.477427 27723 net.cpp:139] Memory required for data: 2146560
I0428 19:53:14.477429 27723 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:14.477437 27723 net.cpp:86] Creating Layer ip1
I0428 19:53:14.477439 27723 net.cpp:408] ip1 <- pool1
I0428 19:53:14.477444 27723 net.cpp:382] ip1 -> ip1
I0428 19:53:14.477608 27723 net.cpp:124] Setting up ip1
I0428 19:53:14.477617 27723 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:14.477620 27723 net.cpp:139] Memory required for data: 2149120
I0428 19:53:14.477627 27723 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:14.477648 27723 net.cpp:86] Creating Layer relu1
I0428 19:53:14.477650 27723 net.cpp:408] relu1 <- ip1
I0428 19:53:14.477654 27723 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:14.477811 27723 net.cpp:124] Setting up relu1
I0428 19:53:14.477819 27723 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:14.477823 27723 net.cpp:139] Memory required for data: 2151680
I0428 19:53:14.477825 27723 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:14.477833 27723 net.cpp:86] Creating Layer ip2
I0428 19:53:14.477835 27723 net.cpp:408] ip2 <- ip1
I0428 19:53:14.477839 27723 net.cpp:382] ip2 -> ip2
I0428 19:53:14.477929 27723 net.cpp:124] Setting up ip2
I0428 19:53:14.477936 27723 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:14.477939 27723 net.cpp:139] Memory required for data: 2164480
I0428 19:53:14.477944 27723 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:14.477951 27723 net.cpp:86] Creating Layer relu2
I0428 19:53:14.477953 27723 net.cpp:408] relu2 <- ip2
I0428 19:53:14.477957 27723 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:14.478793 27723 net.cpp:124] Setting up relu2
I0428 19:53:14.478806 27723 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:14.478824 27723 net.cpp:139] Memory required for data: 2177280
I0428 19:53:14.478827 27723 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:14.478834 27723 net.cpp:86] Creating Layer ip3
I0428 19:53:14.478837 27723 net.cpp:408] ip3 <- ip2
I0428 19:53:14.478842 27723 net.cpp:382] ip3 -> ip3
I0428 19:53:14.478942 27723 net.cpp:124] Setting up ip3
I0428 19:53:14.478950 27723 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:14.478952 27723 net.cpp:139] Memory required for data: 2179840
I0428 19:53:14.478960 27723 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:14.478965 27723 net.cpp:86] Creating Layer relu3
I0428 19:53:14.478968 27723 net.cpp:408] relu3 <- ip3
I0428 19:53:14.478972 27723 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:14.479130 27723 net.cpp:124] Setting up relu3
I0428 19:53:14.479138 27723 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:14.479141 27723 net.cpp:139] Memory required for data: 2182400
I0428 19:53:14.479145 27723 layer_factory.hpp:77] Creating layer loss
I0428 19:53:14.479151 27723 net.cpp:86] Creating Layer loss
I0428 19:53:14.479153 27723 net.cpp:408] loss <- ip3
I0428 19:53:14.479157 27723 net.cpp:408] loss <- label
I0428 19:53:14.479162 27723 net.cpp:382] loss -> loss
I0428 19:53:14.479176 27723 layer_factory.hpp:77] Creating layer loss
I0428 19:53:14.479400 27723 net.cpp:124] Setting up loss
I0428 19:53:14.479409 27723 net.cpp:131] Top shape: (1)
I0428 19:53:14.479413 27723 net.cpp:134]     with loss weight 1
I0428 19:53:14.479425 27723 net.cpp:139] Memory required for data: 2182404
I0428 19:53:14.479429 27723 net.cpp:200] loss needs backward computation.
I0428 19:53:14.479432 27723 net.cpp:200] relu3 needs backward computation.
I0428 19:53:14.479435 27723 net.cpp:200] ip3 needs backward computation.
I0428 19:53:14.479445 27723 net.cpp:200] relu2 needs backward computation.
I0428 19:53:14.479449 27723 net.cpp:200] ip2 needs backward computation.
I0428 19:53:14.479451 27723 net.cpp:200] relu1 needs backward computation.
I0428 19:53:14.479454 27723 net.cpp:200] ip1 needs backward computation.
I0428 19:53:14.479456 27723 net.cpp:200] pool1 needs backward computation.
I0428 19:53:14.479460 27723 net.cpp:200] conv1 needs backward computation.
I0428 19:53:14.479463 27723 net.cpp:200] pool0 needs backward computation.
I0428 19:53:14.479466 27723 net.cpp:200] conv0 needs backward computation.
I0428 19:53:14.479470 27723 net.cpp:202] mnist does not need backward computation.
I0428 19:53:14.479472 27723 net.cpp:244] This network produces output loss
I0428 19:53:14.479496 27723 net.cpp:257] Network initialization done.
I0428 19:53:14.479919 27723 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test682.prototxt
I0428 19:53:14.479964 27723 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:14.480075 27723 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:14.480173 27723 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:14.480235 27723 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:14.480247 27723 net.cpp:86] Creating Layer mnist
I0428 19:53:14.480252 27723 net.cpp:382] mnist -> data
I0428 19:53:14.480260 27723 net.cpp:382] mnist -> label
I0428 19:53:14.480345 27723 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:14.482372 27723 net.cpp:124] Setting up mnist
I0428 19:53:14.482415 27723 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:14.482420 27723 net.cpp:131] Top shape: 100 (100)
I0428 19:53:14.482424 27723 net.cpp:139] Memory required for data: 314000
I0428 19:53:14.482427 27723 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:14.482434 27723 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:14.482437 27723 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:14.482442 27723 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:14.482604 27723 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:14.482651 27723 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:14.482658 27723 net.cpp:131] Top shape: 100 (100)
I0428 19:53:14.482662 27723 net.cpp:131] Top shape: 100 (100)
I0428 19:53:14.482666 27723 net.cpp:139] Memory required for data: 314800
I0428 19:53:14.482668 27723 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:14.482676 27723 net.cpp:86] Creating Layer conv0
I0428 19:53:14.482679 27723 net.cpp:408] conv0 <- data
I0428 19:53:14.482684 27723 net.cpp:382] conv0 -> conv0
I0428 19:53:14.484326 27723 net.cpp:124] Setting up conv0
I0428 19:53:14.484339 27723 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:14.484344 27723 net.cpp:139] Memory required for data: 1466800
I0428 19:53:14.484352 27723 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:14.484375 27723 net.cpp:86] Creating Layer pool0
I0428 19:53:14.484377 27723 net.cpp:408] pool0 <- conv0
I0428 19:53:14.484382 27723 net.cpp:382] pool0 -> pool0
I0428 19:53:14.484421 27723 net.cpp:124] Setting up pool0
I0428 19:53:14.484426 27723 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:14.484428 27723 net.cpp:139] Memory required for data: 1754800
I0428 19:53:14.484431 27723 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:14.484441 27723 net.cpp:86] Creating Layer conv1
I0428 19:53:14.484460 27723 net.cpp:408] conv1 <- pool0
I0428 19:53:14.484465 27723 net.cpp:382] conv1 -> conv1
I0428 19:53:14.486237 27723 net.cpp:124] Setting up conv1
I0428 19:53:14.486266 27723 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:14.486270 27723 net.cpp:139] Memory required for data: 3034800
I0428 19:53:14.486280 27723 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:14.486287 27723 net.cpp:86] Creating Layer pool1
I0428 19:53:14.486291 27723 net.cpp:408] pool1 <- conv1
I0428 19:53:14.486296 27723 net.cpp:382] pool1 -> pool1
I0428 19:53:14.486333 27723 net.cpp:124] Setting up pool1
I0428 19:53:14.486338 27723 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:14.486341 27723 net.cpp:139] Memory required for data: 3354800
I0428 19:53:14.486346 27723 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:14.486366 27723 net.cpp:86] Creating Layer ip1
I0428 19:53:14.486369 27723 net.cpp:408] ip1 <- pool1
I0428 19:53:14.486387 27723 net.cpp:382] ip1 -> ip1
I0428 19:53:14.486532 27723 net.cpp:124] Setting up ip1
I0428 19:53:14.486542 27723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:14.486563 27723 net.cpp:139] Memory required for data: 3358800
I0428 19:53:14.486572 27723 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:14.486577 27723 net.cpp:86] Creating Layer relu1
I0428 19:53:14.486580 27723 net.cpp:408] relu1 <- ip1
I0428 19:53:14.486585 27723 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:14.486755 27723 net.cpp:124] Setting up relu1
I0428 19:53:14.486764 27723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:14.486768 27723 net.cpp:139] Memory required for data: 3362800
I0428 19:53:14.486771 27723 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:14.486778 27723 net.cpp:86] Creating Layer ip2
I0428 19:53:14.486781 27723 net.cpp:408] ip2 <- ip1
I0428 19:53:14.486786 27723 net.cpp:382] ip2 -> ip2
I0428 19:53:14.486894 27723 net.cpp:124] Setting up ip2
I0428 19:53:14.486901 27723 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:14.486905 27723 net.cpp:139] Memory required for data: 3382800
I0428 19:53:14.486910 27723 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:14.486915 27723 net.cpp:86] Creating Layer relu2
I0428 19:53:14.486918 27723 net.cpp:408] relu2 <- ip2
I0428 19:53:14.486922 27723 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:14.487203 27723 net.cpp:124] Setting up relu2
I0428 19:53:14.487213 27723 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:14.487216 27723 net.cpp:139] Memory required for data: 3402800
I0428 19:53:14.487231 27723 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:14.487236 27723 net.cpp:86] Creating Layer ip3
I0428 19:53:14.487239 27723 net.cpp:408] ip3 <- ip2
I0428 19:53:14.487244 27723 net.cpp:382] ip3 -> ip3
I0428 19:53:14.487354 27723 net.cpp:124] Setting up ip3
I0428 19:53:14.487361 27723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:14.487365 27723 net.cpp:139] Memory required for data: 3406800
I0428 19:53:14.487373 27723 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:14.487378 27723 net.cpp:86] Creating Layer relu3
I0428 19:53:14.487382 27723 net.cpp:408] relu3 <- ip3
I0428 19:53:14.487387 27723 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:14.488219 27723 net.cpp:124] Setting up relu3
I0428 19:53:14.488231 27723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:14.488273 27723 net.cpp:139] Memory required for data: 3410800
I0428 19:53:14.488276 27723 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:14.488282 27723 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:14.488286 27723 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:14.488291 27723 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:14.488297 27723 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:14.488353 27723 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:14.488360 27723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:14.488364 27723 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:14.488368 27723 net.cpp:139] Memory required for data: 3418800
I0428 19:53:14.488370 27723 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:14.488376 27723 net.cpp:86] Creating Layer accuracy
I0428 19:53:14.488379 27723 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:14.488384 27723 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:14.488389 27723 net.cpp:382] accuracy -> accuracy
I0428 19:53:14.488401 27723 net.cpp:124] Setting up accuracy
I0428 19:53:14.488405 27723 net.cpp:131] Top shape: (1)
I0428 19:53:14.488414 27723 net.cpp:139] Memory required for data: 3418804
I0428 19:53:14.488415 27723 layer_factory.hpp:77] Creating layer loss
I0428 19:53:14.488425 27723 net.cpp:86] Creating Layer loss
I0428 19:53:14.488427 27723 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:14.488431 27723 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:14.488435 27723 net.cpp:382] loss -> loss
I0428 19:53:14.488440 27723 layer_factory.hpp:77] Creating layer loss
I0428 19:53:14.488718 27723 net.cpp:124] Setting up loss
I0428 19:53:14.488731 27723 net.cpp:131] Top shape: (1)
I0428 19:53:14.488739 27723 net.cpp:134]     with loss weight 1
I0428 19:53:14.488746 27723 net.cpp:139] Memory required for data: 3418808
I0428 19:53:14.488759 27723 net.cpp:200] loss needs backward computation.
I0428 19:53:14.488762 27723 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:14.488766 27723 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:14.488770 27723 net.cpp:200] relu3 needs backward computation.
I0428 19:53:14.488773 27723 net.cpp:200] ip3 needs backward computation.
I0428 19:53:14.488776 27723 net.cpp:200] relu2 needs backward computation.
I0428 19:53:14.488780 27723 net.cpp:200] ip2 needs backward computation.
I0428 19:53:14.488782 27723 net.cpp:200] relu1 needs backward computation.
I0428 19:53:14.488785 27723 net.cpp:200] ip1 needs backward computation.
I0428 19:53:14.488793 27723 net.cpp:200] pool1 needs backward computation.
I0428 19:53:14.488796 27723 net.cpp:200] conv1 needs backward computation.
I0428 19:53:14.488800 27723 net.cpp:200] pool0 needs backward computation.
I0428 19:53:14.488802 27723 net.cpp:200] conv0 needs backward computation.
I0428 19:53:14.488806 27723 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:14.488828 27723 net.cpp:202] mnist does not need backward computation.
I0428 19:53:14.488831 27723 net.cpp:244] This network produces output accuracy
I0428 19:53:14.488836 27723 net.cpp:244] This network produces output loss
I0428 19:53:14.488872 27723 net.cpp:257] Network initialization done.
I0428 19:53:14.488916 27723 solver.cpp:56] Solver scaffolding done.
I0428 19:53:14.489344 27723 caffe.cpp:248] Starting Optimization
I0428 19:53:14.489362 27723 solver.cpp:273] Solving LeNet
I0428 19:53:14.489364 27723 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:14.490142 27723 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:14.494230 27723 blocking_queue.cpp:49] Waiting for data
I0428 19:53:14.561904 27730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:14.562415 27723 solver.cpp:398]     Test net output #0: accuracy = 0.0994
I0428 19:53:14.562444 27723 solver.cpp:398]     Test net output #1: loss = 2.2965 (* 1 = 2.2965 loss)
I0428 19:53:14.565225 27723 solver.cpp:219] Iteration 0 (-1.44925e-30 iter/s, 0.0758129s/100 iters), loss = 2.29294
I0428 19:53:14.565263 27723 solver.cpp:238]     Train net output #0: loss = 2.29294 (* 1 = 2.29294 loss)
I0428 19:53:14.565274 27723 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:14.686115 27723 solver.cpp:219] Iteration 100 (827.49 iter/s, 0.120847s/100 iters), loss = 0.480968
I0428 19:53:14.686158 27723 solver.cpp:238]     Train net output #0: loss = 0.480968 (* 1 = 0.480968 loss)
I0428 19:53:14.686169 27723 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:14.803200 27723 solver.cpp:219] Iteration 200 (854.475 iter/s, 0.117031s/100 iters), loss = 0.221717
I0428 19:53:14.803236 27723 solver.cpp:238]     Train net output #0: loss = 0.221717 (* 1 = 0.221717 loss)
I0428 19:53:14.803246 27723 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:14.911095 27723 solver.cpp:219] Iteration 300 (927.217 iter/s, 0.10785s/100 iters), loss = 0.319856
I0428 19:53:14.911128 27723 solver.cpp:238]     Train net output #0: loss = 0.319856 (* 1 = 0.319856 loss)
I0428 19:53:14.911136 27723 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:15.027261 27723 solver.cpp:219] Iteration 400 (861.174 iter/s, 0.116121s/100 iters), loss = 0.162563
I0428 19:53:15.027298 27723 solver.cpp:238]     Train net output #0: loss = 0.162563 (* 1 = 0.162563 loss)
I0428 19:53:15.027308 27723 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:15.140058 27723 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:15.193289 27730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:15.193800 27723 solver.cpp:398]     Test net output #0: accuracy = 0.9527
I0428 19:53:15.193825 27723 solver.cpp:398]     Test net output #1: loss = 0.149356 (* 1 = 0.149356 loss)
I0428 19:53:15.194898 27723 solver.cpp:219] Iteration 500 (596.702 iter/s, 0.167588s/100 iters), loss = 0.0524881
I0428 19:53:15.194949 27723 solver.cpp:238]     Train net output #0: loss = 0.0524882 (* 1 = 0.0524882 loss)
I0428 19:53:15.194957 27723 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:15.307826 27723 solver.cpp:219] Iteration 600 (886.019 iter/s, 0.112864s/100 iters), loss = 0.0993505
I0428 19:53:15.307858 27723 solver.cpp:238]     Train net output #0: loss = 0.0993506 (* 1 = 0.0993506 loss)
I0428 19:53:15.307867 27723 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:15.420372 27723 solver.cpp:219] Iteration 700 (888.899 iter/s, 0.112499s/100 iters), loss = 0.233319
I0428 19:53:15.420410 27723 solver.cpp:238]     Train net output #0: loss = 0.233319 (* 1 = 0.233319 loss)
I0428 19:53:15.420418 27723 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:15.529014 27723 solver.cpp:219] Iteration 800 (920.877 iter/s, 0.108592s/100 iters), loss = 0.262441
I0428 19:53:15.529047 27723 solver.cpp:238]     Train net output #0: loss = 0.262441 (* 1 = 0.262441 loss)
I0428 19:53:15.529054 27723 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:15.638592 27723 solver.cpp:219] Iteration 900 (912.94 iter/s, 0.109536s/100 iters), loss = 0.233668
I0428 19:53:15.638622 27723 solver.cpp:238]     Train net output #0: loss = 0.233668 (* 1 = 0.233668 loss)
I0428 19:53:15.638629 27723 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:15.674340 27729 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:15.743212 27723 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:15.744349 27723 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:15.744952 27723 solver.cpp:311] Iteration 1000, loss = 0.058415
I0428 19:53:15.744971 27723 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:15.814255 27730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:15.814745 27723 solver.cpp:398]     Test net output #0: accuracy = 0.9682
I0428 19:53:15.814764 27723 solver.cpp:398]     Test net output #1: loss = 0.0974926 (* 1 = 0.0974926 loss)
I0428 19:53:15.814770 27723 solver.cpp:316] Optimization Done.
I0428 19:53:15.814774 27723 caffe.cpp:259] Optimization Done.
