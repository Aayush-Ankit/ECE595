I0428 20:04:31.647831 30400 caffe.cpp:218] Using GPUs 0
I0428 20:04:31.685271 30400 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:32.143546 30400 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test974.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:32.143710 30400 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test974.prototxt
I0428 20:04:32.144063 30400 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:32.144109 30400 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:32.144191 30400 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:32.144253 30400 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:32.144336 30400 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:32.144356 30400 net.cpp:86] Creating Layer mnist
I0428 20:04:32.144361 30400 net.cpp:382] mnist -> data
I0428 20:04:32.144381 30400 net.cpp:382] mnist -> label
I0428 20:04:32.145398 30400 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:32.147624 30400 net.cpp:124] Setting up mnist
I0428 20:04:32.147653 30400 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:32.147660 30400 net.cpp:131] Top shape: 64 (64)
I0428 20:04:32.147663 30400 net.cpp:139] Memory required for data: 200960
I0428 20:04:32.147670 30400 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:32.147683 30400 net.cpp:86] Creating Layer conv0
I0428 20:04:32.147701 30400 net.cpp:408] conv0 <- data
I0428 20:04:32.147712 30400 net.cpp:382] conv0 -> conv0
I0428 20:04:32.387670 30400 net.cpp:124] Setting up conv0
I0428 20:04:32.387696 30400 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:32.387701 30400 net.cpp:139] Memory required for data: 1675520
I0428 20:04:32.387715 30400 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:32.387743 30400 net.cpp:86] Creating Layer pool0
I0428 20:04:32.387748 30400 net.cpp:408] pool0 <- conv0
I0428 20:04:32.387753 30400 net.cpp:382] pool0 -> pool0
I0428 20:04:32.387797 30400 net.cpp:124] Setting up pool0
I0428 20:04:32.387809 30400 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:32.387811 30400 net.cpp:139] Memory required for data: 2044160
I0428 20:04:32.387814 30400 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:32.387825 30400 net.cpp:86] Creating Layer conv1
I0428 20:04:32.387827 30400 net.cpp:408] conv1 <- pool0
I0428 20:04:32.387831 30400 net.cpp:382] conv1 -> conv1
I0428 20:04:32.389828 30400 net.cpp:124] Setting up conv1
I0428 20:04:32.389843 30400 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:32.389847 30400 net.cpp:139] Memory required for data: 3682560
I0428 20:04:32.389855 30400 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:32.389863 30400 net.cpp:86] Creating Layer pool1
I0428 20:04:32.389866 30400 net.cpp:408] pool1 <- conv1
I0428 20:04:32.389871 30400 net.cpp:382] pool1 -> pool1
I0428 20:04:32.389909 30400 net.cpp:124] Setting up pool1
I0428 20:04:32.389914 30400 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:32.389919 30400 net.cpp:139] Memory required for data: 4092160
I0428 20:04:32.389921 30400 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:32.389927 30400 net.cpp:86] Creating Layer ip1
I0428 20:04:32.389931 30400 net.cpp:408] ip1 <- pool1
I0428 20:04:32.389935 30400 net.cpp:382] ip1 -> ip1
I0428 20:04:32.391355 30400 net.cpp:124] Setting up ip1
I0428 20:04:32.391367 30400 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:32.391387 30400 net.cpp:139] Memory required for data: 4104960
I0428 20:04:32.391396 30400 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:32.391402 30400 net.cpp:86] Creating Layer relu1
I0428 20:04:32.391405 30400 net.cpp:408] relu1 <- ip1
I0428 20:04:32.391410 30400 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:32.391582 30400 net.cpp:124] Setting up relu1
I0428 20:04:32.391592 30400 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:32.391595 30400 net.cpp:139] Memory required for data: 4117760
I0428 20:04:32.391598 30400 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:32.391605 30400 net.cpp:86] Creating Layer ip2
I0428 20:04:32.391608 30400 net.cpp:408] ip2 <- ip1
I0428 20:04:32.391613 30400 net.cpp:382] ip2 -> ip2
I0428 20:04:32.392590 30400 net.cpp:124] Setting up ip2
I0428 20:04:32.392601 30400 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:32.392621 30400 net.cpp:139] Memory required for data: 4130560
I0428 20:04:32.392627 30400 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:32.392633 30400 net.cpp:86] Creating Layer relu2
I0428 20:04:32.392637 30400 net.cpp:408] relu2 <- ip2
I0428 20:04:32.392642 30400 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:32.393411 30400 net.cpp:124] Setting up relu2
I0428 20:04:32.393424 30400 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:32.393443 30400 net.cpp:139] Memory required for data: 4143360
I0428 20:04:32.393447 30400 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:32.393455 30400 net.cpp:86] Creating Layer ip3
I0428 20:04:32.393460 30400 net.cpp:408] ip3 <- ip2
I0428 20:04:32.393465 30400 net.cpp:382] ip3 -> ip3
I0428 20:04:32.393570 30400 net.cpp:124] Setting up ip3
I0428 20:04:32.393579 30400 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:32.393582 30400 net.cpp:139] Memory required for data: 4145920
I0428 20:04:32.393590 30400 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:32.393595 30400 net.cpp:86] Creating Layer relu3
I0428 20:04:32.393599 30400 net.cpp:408] relu3 <- ip3
I0428 20:04:32.393602 30400 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:32.393767 30400 net.cpp:124] Setting up relu3
I0428 20:04:32.393775 30400 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:32.393779 30400 net.cpp:139] Memory required for data: 4148480
I0428 20:04:32.393782 30400 layer_factory.hpp:77] Creating layer loss
I0428 20:04:32.393792 30400 net.cpp:86] Creating Layer loss
I0428 20:04:32.393796 30400 net.cpp:408] loss <- ip3
I0428 20:04:32.393800 30400 net.cpp:408] loss <- label
I0428 20:04:32.393805 30400 net.cpp:382] loss -> loss
I0428 20:04:32.393820 30400 layer_factory.hpp:77] Creating layer loss
I0428 20:04:32.394044 30400 net.cpp:124] Setting up loss
I0428 20:04:32.394053 30400 net.cpp:131] Top shape: (1)
I0428 20:04:32.394057 30400 net.cpp:134]     with loss weight 1
I0428 20:04:32.394071 30400 net.cpp:139] Memory required for data: 4148484
I0428 20:04:32.394075 30400 net.cpp:200] loss needs backward computation.
I0428 20:04:32.394078 30400 net.cpp:200] relu3 needs backward computation.
I0428 20:04:32.394083 30400 net.cpp:200] ip3 needs backward computation.
I0428 20:04:32.394085 30400 net.cpp:200] relu2 needs backward computation.
I0428 20:04:32.394088 30400 net.cpp:200] ip2 needs backward computation.
I0428 20:04:32.394091 30400 net.cpp:200] relu1 needs backward computation.
I0428 20:04:32.394093 30400 net.cpp:200] ip1 needs backward computation.
I0428 20:04:32.394098 30400 net.cpp:200] pool1 needs backward computation.
I0428 20:04:32.394100 30400 net.cpp:200] conv1 needs backward computation.
I0428 20:04:32.394104 30400 net.cpp:200] pool0 needs backward computation.
I0428 20:04:32.394106 30400 net.cpp:200] conv0 needs backward computation.
I0428 20:04:32.394110 30400 net.cpp:202] mnist does not need backward computation.
I0428 20:04:32.394114 30400 net.cpp:244] This network produces output loss
I0428 20:04:32.394122 30400 net.cpp:257] Network initialization done.
I0428 20:04:32.394464 30400 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test974.prototxt
I0428 20:04:32.394517 30400 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:32.394618 30400 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:32.394695 30400 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:32.394738 30400 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:32.394750 30400 net.cpp:86] Creating Layer mnist
I0428 20:04:32.394755 30400 net.cpp:382] mnist -> data
I0428 20:04:32.394762 30400 net.cpp:382] mnist -> label
I0428 20:04:32.394857 30400 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:32.396119 30400 net.cpp:124] Setting up mnist
I0428 20:04:32.396132 30400 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:32.396137 30400 net.cpp:131] Top shape: 100 (100)
I0428 20:04:32.396142 30400 net.cpp:139] Memory required for data: 314000
I0428 20:04:32.396144 30400 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:32.396152 30400 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:32.396155 30400 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:32.396160 30400 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:32.396167 30400 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:32.396248 30400 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:32.396255 30400 net.cpp:131] Top shape: 100 (100)
I0428 20:04:32.396260 30400 net.cpp:131] Top shape: 100 (100)
I0428 20:04:32.396262 30400 net.cpp:139] Memory required for data: 314800
I0428 20:04:32.396265 30400 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:32.396276 30400 net.cpp:86] Creating Layer conv0
I0428 20:04:32.396281 30400 net.cpp:408] conv0 <- data
I0428 20:04:32.396286 30400 net.cpp:382] conv0 -> conv0
I0428 20:04:32.398141 30400 net.cpp:124] Setting up conv0
I0428 20:04:32.398155 30400 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:32.398159 30400 net.cpp:139] Memory required for data: 2618800
I0428 20:04:32.398170 30400 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:32.398177 30400 net.cpp:86] Creating Layer pool0
I0428 20:04:32.398191 30400 net.cpp:408] pool0 <- conv0
I0428 20:04:32.398196 30400 net.cpp:382] pool0 -> pool0
I0428 20:04:32.398232 30400 net.cpp:124] Setting up pool0
I0428 20:04:32.398237 30400 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:32.398241 30400 net.cpp:139] Memory required for data: 3194800
I0428 20:04:32.398243 30400 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:32.398252 30400 net.cpp:86] Creating Layer conv1
I0428 20:04:32.398255 30400 net.cpp:408] conv1 <- pool0
I0428 20:04:32.398260 30400 net.cpp:382] conv1 -> conv1
I0428 20:04:32.400007 30400 net.cpp:124] Setting up conv1
I0428 20:04:32.400019 30400 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:32.400028 30400 net.cpp:139] Memory required for data: 5754800
I0428 20:04:32.400055 30400 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:32.400063 30400 net.cpp:86] Creating Layer pool1
I0428 20:04:32.400065 30400 net.cpp:408] pool1 <- conv1
I0428 20:04:32.400077 30400 net.cpp:382] pool1 -> pool1
I0428 20:04:32.400113 30400 net.cpp:124] Setting up pool1
I0428 20:04:32.400120 30400 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:32.400123 30400 net.cpp:139] Memory required for data: 6394800
I0428 20:04:32.400126 30400 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:32.400132 30400 net.cpp:86] Creating Layer ip1
I0428 20:04:32.400143 30400 net.cpp:408] ip1 <- pool1
I0428 20:04:32.400147 30400 net.cpp:382] ip1 -> ip1
I0428 20:04:32.400733 30400 net.cpp:124] Setting up ip1
I0428 20:04:32.400743 30400 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:32.400754 30400 net.cpp:139] Memory required for data: 6414800
I0428 20:04:32.400763 30400 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:32.400769 30400 net.cpp:86] Creating Layer relu1
I0428 20:04:32.400773 30400 net.cpp:408] relu1 <- ip1
I0428 20:04:32.400777 30400 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:32.401000 30400 net.cpp:124] Setting up relu1
I0428 20:04:32.401010 30400 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:32.401012 30400 net.cpp:139] Memory required for data: 6434800
I0428 20:04:32.401015 30400 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:32.401024 30400 net.cpp:86] Creating Layer ip2
I0428 20:04:32.401027 30400 net.cpp:408] ip2 <- ip1
I0428 20:04:32.401041 30400 net.cpp:382] ip2 -> ip2
I0428 20:04:32.401207 30400 net.cpp:124] Setting up ip2
I0428 20:04:32.401216 30400 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:32.401218 30400 net.cpp:139] Memory required for data: 6454800
I0428 20:04:32.401224 30400 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:32.401228 30400 net.cpp:86] Creating Layer relu2
I0428 20:04:32.401232 30400 net.cpp:408] relu2 <- ip2
I0428 20:04:32.401237 30400 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:32.401406 30400 net.cpp:124] Setting up relu2
I0428 20:04:32.401413 30400 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:32.401423 30400 net.cpp:139] Memory required for data: 6474800
I0428 20:04:32.401427 30400 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:32.401432 30400 net.cpp:86] Creating Layer ip3
I0428 20:04:32.401435 30400 net.cpp:408] ip3 <- ip2
I0428 20:04:32.401442 30400 net.cpp:382] ip3 -> ip3
I0428 20:04:32.401545 30400 net.cpp:124] Setting up ip3
I0428 20:04:32.401551 30400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:32.401556 30400 net.cpp:139] Memory required for data: 6478800
I0428 20:04:32.401563 30400 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:32.401568 30400 net.cpp:86] Creating Layer relu3
I0428 20:04:32.401572 30400 net.cpp:408] relu3 <- ip3
I0428 20:04:32.401576 30400 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:32.402405 30400 net.cpp:124] Setting up relu3
I0428 20:04:32.402417 30400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:32.402421 30400 net.cpp:139] Memory required for data: 6482800
I0428 20:04:32.402425 30400 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:32.402431 30400 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:32.402433 30400 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:32.402439 30400 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:32.402446 30400 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:32.402516 30400 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:32.402523 30400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:32.402528 30400 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:32.402529 30400 net.cpp:139] Memory required for data: 6490800
I0428 20:04:32.402532 30400 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:32.402544 30400 net.cpp:86] Creating Layer accuracy
I0428 20:04:32.402546 30400 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:32.402550 30400 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:32.402555 30400 net.cpp:382] accuracy -> accuracy
I0428 20:04:32.402564 30400 net.cpp:124] Setting up accuracy
I0428 20:04:32.402566 30400 net.cpp:131] Top shape: (1)
I0428 20:04:32.402570 30400 net.cpp:139] Memory required for data: 6490804
I0428 20:04:32.402572 30400 layer_factory.hpp:77] Creating layer loss
I0428 20:04:32.402582 30400 net.cpp:86] Creating Layer loss
I0428 20:04:32.402585 30400 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:32.402595 30400 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:32.402598 30400 net.cpp:382] loss -> loss
I0428 20:04:32.402604 30400 layer_factory.hpp:77] Creating layer loss
I0428 20:04:32.402859 30400 net.cpp:124] Setting up loss
I0428 20:04:32.402868 30400 net.cpp:131] Top shape: (1)
I0428 20:04:32.402871 30400 net.cpp:134]     with loss weight 1
I0428 20:04:32.402887 30400 net.cpp:139] Memory required for data: 6490808
I0428 20:04:32.402890 30400 net.cpp:200] loss needs backward computation.
I0428 20:04:32.402894 30400 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:32.402899 30400 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:32.402901 30400 net.cpp:200] relu3 needs backward computation.
I0428 20:04:32.402904 30400 net.cpp:200] ip3 needs backward computation.
I0428 20:04:32.402907 30400 net.cpp:200] relu2 needs backward computation.
I0428 20:04:32.402917 30400 net.cpp:200] ip2 needs backward computation.
I0428 20:04:32.402920 30400 net.cpp:200] relu1 needs backward computation.
I0428 20:04:32.402923 30400 net.cpp:200] ip1 needs backward computation.
I0428 20:04:32.402937 30400 net.cpp:200] pool1 needs backward computation.
I0428 20:04:32.402940 30400 net.cpp:200] conv1 needs backward computation.
I0428 20:04:32.402943 30400 net.cpp:200] pool0 needs backward computation.
I0428 20:04:32.402946 30400 net.cpp:200] conv0 needs backward computation.
I0428 20:04:32.402951 30400 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:32.402954 30400 net.cpp:202] mnist does not need backward computation.
I0428 20:04:32.402957 30400 net.cpp:244] This network produces output accuracy
I0428 20:04:32.402961 30400 net.cpp:244] This network produces output loss
I0428 20:04:32.402972 30400 net.cpp:257] Network initialization done.
I0428 20:04:32.403015 30400 solver.cpp:56] Solver scaffolding done.
I0428 20:04:32.403364 30400 caffe.cpp:248] Starting Optimization
I0428 20:04:32.403372 30400 solver.cpp:273] Solving LeNet
I0428 20:04:32.403375 30400 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:32.404177 30400 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:32.409652 30400 blocking_queue.cpp:49] Waiting for data
I0428 20:04:32.479748 30407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:32.480408 30400 solver.cpp:398]     Test net output #0: accuracy = 0.1034
I0428 20:04:32.480427 30400 solver.cpp:398]     Test net output #1: loss = 2.31718 (* 1 = 2.31718 loss)
I0428 20:04:32.484251 30400 solver.cpp:219] Iteration 0 (0 iter/s, 0.0808489s/100 iters), loss = 2.32482
I0428 20:04:32.484275 30400 solver.cpp:238]     Train net output #0: loss = 2.32482 (* 1 = 2.32482 loss)
I0428 20:04:32.484287 30400 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:32.642457 30400 solver.cpp:219] Iteration 100 (632.255 iter/s, 0.158164s/100 iters), loss = 1.14074
I0428 20:04:32.642482 30400 solver.cpp:238]     Train net output #0: loss = 1.14074 (* 1 = 1.14074 loss)
I0428 20:04:32.642488 30400 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:32.796720 30400 solver.cpp:219] Iteration 200 (648.405 iter/s, 0.154225s/100 iters), loss = 0.622682
I0428 20:04:32.796746 30400 solver.cpp:238]     Train net output #0: loss = 0.622682 (* 1 = 0.622682 loss)
I0428 20:04:32.796768 30400 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:32.950594 30400 solver.cpp:219] Iteration 300 (650.045 iter/s, 0.153836s/100 iters), loss = 0.629198
I0428 20:04:32.950618 30400 solver.cpp:238]     Train net output #0: loss = 0.629198 (* 1 = 0.629198 loss)
I0428 20:04:32.950624 30400 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:33.105590 30400 solver.cpp:219] Iteration 400 (645.337 iter/s, 0.154958s/100 iters), loss = 0.314993
I0428 20:04:33.105612 30400 solver.cpp:238]     Train net output #0: loss = 0.314993 (* 1 = 0.314993 loss)
I0428 20:04:33.105618 30400 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:33.260372 30400 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:33.317775 30407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:33.319470 30400 solver.cpp:398]     Test net output #0: accuracy = 0.7599
I0428 20:04:33.319490 30400 solver.cpp:398]     Test net output #1: loss = 0.592342 (* 1 = 0.592342 loss)
I0428 20:04:33.320941 30400 solver.cpp:219] Iteration 500 (464.441 iter/s, 0.215312s/100 iters), loss = 0.535865
I0428 20:04:33.320994 30400 solver.cpp:238]     Train net output #0: loss = 0.535865 (* 1 = 0.535865 loss)
I0428 20:04:33.321017 30400 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:33.479538 30400 solver.cpp:219] Iteration 600 (630.793 iter/s, 0.158531s/100 iters), loss = 0.0989151
I0428 20:04:33.479568 30400 solver.cpp:238]     Train net output #0: loss = 0.0989151 (* 1 = 0.0989151 loss)
I0428 20:04:33.479576 30400 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:33.627964 30400 solver.cpp:219] Iteration 700 (673.924 iter/s, 0.148385s/100 iters), loss = 0.163088
I0428 20:04:33.627990 30400 solver.cpp:238]     Train net output #0: loss = 0.163088 (* 1 = 0.163088 loss)
I0428 20:04:33.628015 30400 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:33.780952 30400 solver.cpp:219] Iteration 800 (653.818 iter/s, 0.152948s/100 iters), loss = 0.285845
I0428 20:04:33.780978 30400 solver.cpp:238]     Train net output #0: loss = 0.285845 (* 1 = 0.285845 loss)
I0428 20:04:33.781002 30400 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:33.934401 30400 solver.cpp:219] Iteration 900 (651.859 iter/s, 0.153407s/100 iters), loss = 0.163061
I0428 20:04:33.934430 30400 solver.cpp:238]     Train net output #0: loss = 0.163061 (* 1 = 0.163061 loss)
I0428 20:04:33.934451 30400 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:33.988445 30406 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:34.086601 30400 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:34.089395 30400 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:34.090858 30400 solver.cpp:311] Iteration 1000, loss = 0.149646
I0428 20:04:34.090874 30400 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:34.147197 30407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:34.149118 30400 solver.cpp:398]     Test net output #0: accuracy = 0.9746
I0428 20:04:34.149137 30400 solver.cpp:398]     Test net output #1: loss = 0.078003 (* 1 = 0.078003 loss)
I0428 20:04:34.149142 30400 solver.cpp:316] Optimization Done.
I0428 20:04:34.149160 30400 caffe.cpp:259] Optimization Done.
