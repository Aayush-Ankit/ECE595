I0428 20:31:33.258865  3972 caffe.cpp:218] Using GPUs 0
I0428 20:31:33.294914  3972 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:33.750233  3972 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1557.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:33.750428  3972 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1557.prototxt
I0428 20:31:33.751241  3972 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:33.751262  3972 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:33.751353  3972 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:33.751461  3972 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:33.751569  3972 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:33.751595  3972 net.cpp:86] Creating Layer mnist
I0428 20:31:33.751606  3972 net.cpp:382] mnist -> data
I0428 20:31:33.751631  3972 net.cpp:382] mnist -> label
I0428 20:31:33.752837  3972 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:33.755254  3972 net.cpp:124] Setting up mnist
I0428 20:31:33.755287  3972 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:33.755296  3972 net.cpp:131] Top shape: 64 (64)
I0428 20:31:33.755300  3972 net.cpp:139] Memory required for data: 200960
I0428 20:31:33.755309  3972 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:33.755329  3972 net.cpp:86] Creating Layer conv0
I0428 20:31:33.755359  3972 net.cpp:408] conv0 <- data
I0428 20:31:33.755374  3972 net.cpp:382] conv0 -> conv0
I0428 20:31:33.990514  3972 net.cpp:124] Setting up conv0
I0428 20:31:33.990540  3972 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:33.990546  3972 net.cpp:139] Memory required for data: 14946560
I0428 20:31:33.990566  3972 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:33.990582  3972 net.cpp:86] Creating Layer pool0
I0428 20:31:33.990594  3972 net.cpp:408] pool0 <- conv0
I0428 20:31:33.990603  3972 net.cpp:382] pool0 -> pool0
I0428 20:31:33.990658  3972 net.cpp:124] Setting up pool0
I0428 20:31:33.990666  3972 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:33.990671  3972 net.cpp:139] Memory required for data: 18632960
I0428 20:31:33.990675  3972 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:33.990690  3972 net.cpp:86] Creating Layer conv1
I0428 20:31:33.990696  3972 net.cpp:408] conv1 <- pool0
I0428 20:31:33.990705  3972 net.cpp:382] conv1 -> conv1
I0428 20:31:33.992801  3972 net.cpp:124] Setting up conv1
I0428 20:31:33.992837  3972 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:33.992858  3972 net.cpp:139] Memory required for data: 18796800
I0428 20:31:33.992887  3972 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:33.992898  3972 net.cpp:86] Creating Layer pool1
I0428 20:31:33.992904  3972 net.cpp:408] pool1 <- conv1
I0428 20:31:33.992913  3972 net.cpp:382] pool1 -> pool1
I0428 20:31:33.992959  3972 net.cpp:124] Setting up pool1
I0428 20:31:33.992969  3972 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:33.992974  3972 net.cpp:139] Memory required for data: 18837760
I0428 20:31:33.992995  3972 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:33.993006  3972 net.cpp:86] Creating Layer ip1
I0428 20:31:33.993012  3972 net.cpp:408] ip1 <- pool1
I0428 20:31:33.993021  3972 net.cpp:382] ip1 -> ip1
I0428 20:31:33.994050  3972 net.cpp:124] Setting up ip1
I0428 20:31:33.994065  3972 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:33.994069  3972 net.cpp:139] Memory required for data: 18850560
I0428 20:31:33.994097  3972 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:33.994107  3972 net.cpp:86] Creating Layer relu1
I0428 20:31:33.994134  3972 net.cpp:408] relu1 <- ip1
I0428 20:31:33.994143  3972 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:33.994307  3972 net.cpp:124] Setting up relu1
I0428 20:31:33.994316  3972 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:33.994321  3972 net.cpp:139] Memory required for data: 18863360
I0428 20:31:33.994326  3972 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:33.994336  3972 net.cpp:86] Creating Layer ip2
I0428 20:31:33.994341  3972 net.cpp:408] ip2 <- ip1
I0428 20:31:33.994350  3972 net.cpp:382] ip2 -> ip2
I0428 20:31:33.994498  3972 net.cpp:124] Setting up ip2
I0428 20:31:33.994508  3972 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:33.994513  3972 net.cpp:139] Memory required for data: 18876160
I0428 20:31:33.994520  3972 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:33.994529  3972 net.cpp:86] Creating Layer relu2
I0428 20:31:33.994539  3972 net.cpp:408] relu2 <- ip2
I0428 20:31:33.994546  3972 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:33.995337  3972 net.cpp:124] Setting up relu2
I0428 20:31:33.995349  3972 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:33.995354  3972 net.cpp:139] Memory required for data: 18888960
I0428 20:31:33.995360  3972 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:33.995370  3972 net.cpp:86] Creating Layer ip3
I0428 20:31:33.995375  3972 net.cpp:408] ip3 <- ip2
I0428 20:31:33.995384  3972 net.cpp:382] ip3 -> ip3
I0428 20:31:33.995520  3972 net.cpp:124] Setting up ip3
I0428 20:31:33.995530  3972 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:33.995535  3972 net.cpp:139] Memory required for data: 18891520
I0428 20:31:33.995548  3972 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:33.995558  3972 net.cpp:86] Creating Layer relu3
I0428 20:31:33.995563  3972 net.cpp:408] relu3 <- ip3
I0428 20:31:33.995570  3972 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:33.995739  3972 net.cpp:124] Setting up relu3
I0428 20:31:33.995748  3972 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:33.995754  3972 net.cpp:139] Memory required for data: 18894080
I0428 20:31:33.995759  3972 layer_factory.hpp:77] Creating layer loss
I0428 20:31:33.995766  3972 net.cpp:86] Creating Layer loss
I0428 20:31:33.995771  3972 net.cpp:408] loss <- ip3
I0428 20:31:33.995777  3972 net.cpp:408] loss <- label
I0428 20:31:33.995785  3972 net.cpp:382] loss -> loss
I0428 20:31:33.995807  3972 layer_factory.hpp:77] Creating layer loss
I0428 20:31:33.996035  3972 net.cpp:124] Setting up loss
I0428 20:31:33.996045  3972 net.cpp:131] Top shape: (1)
I0428 20:31:33.996052  3972 net.cpp:134]     with loss weight 1
I0428 20:31:33.996070  3972 net.cpp:139] Memory required for data: 18894084
I0428 20:31:33.996078  3972 net.cpp:200] loss needs backward computation.
I0428 20:31:33.996083  3972 net.cpp:200] relu3 needs backward computation.
I0428 20:31:33.996088  3972 net.cpp:200] ip3 needs backward computation.
I0428 20:31:33.996107  3972 net.cpp:200] relu2 needs backward computation.
I0428 20:31:33.996112  3972 net.cpp:200] ip2 needs backward computation.
I0428 20:31:33.996116  3972 net.cpp:200] relu1 needs backward computation.
I0428 20:31:33.996121  3972 net.cpp:200] ip1 needs backward computation.
I0428 20:31:33.996126  3972 net.cpp:200] pool1 needs backward computation.
I0428 20:31:33.996131  3972 net.cpp:200] conv1 needs backward computation.
I0428 20:31:33.996137  3972 net.cpp:200] pool0 needs backward computation.
I0428 20:31:33.996142  3972 net.cpp:200] conv0 needs backward computation.
I0428 20:31:33.996148  3972 net.cpp:202] mnist does not need backward computation.
I0428 20:31:33.996152  3972 net.cpp:244] This network produces output loss
I0428 20:31:33.996167  3972 net.cpp:257] Network initialization done.
I0428 20:31:33.996532  3972 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1557.prototxt
I0428 20:31:33.996565  3972 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:33.996673  3972 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:33.996778  3972 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:33.996906  3972 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:33.996925  3972 net.cpp:86] Creating Layer mnist
I0428 20:31:33.996934  3972 net.cpp:382] mnist -> data
I0428 20:31:33.996948  3972 net.cpp:382] mnist -> label
I0428 20:31:33.997073  3972 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:33.999363  3972 net.cpp:124] Setting up mnist
I0428 20:31:33.999399  3972 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:33.999408  3972 net.cpp:131] Top shape: 100 (100)
I0428 20:31:33.999413  3972 net.cpp:139] Memory required for data: 314000
I0428 20:31:33.999418  3972 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:33.999442  3972 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:33.999449  3972 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:33.999456  3972 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:33.999466  3972 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:33.999548  3972 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:33.999557  3972 net.cpp:131] Top shape: 100 (100)
I0428 20:31:33.999563  3972 net.cpp:131] Top shape: 100 (100)
I0428 20:31:33.999568  3972 net.cpp:139] Memory required for data: 314800
I0428 20:31:33.999573  3972 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:33.999585  3972 net.cpp:86] Creating Layer conv0
I0428 20:31:33.999591  3972 net.cpp:408] conv0 <- data
I0428 20:31:33.999600  3972 net.cpp:382] conv0 -> conv0
I0428 20:31:34.001220  3972 net.cpp:124] Setting up conv0
I0428 20:31:34.001235  3972 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:34.001240  3972 net.cpp:139] Memory required for data: 23354800
I0428 20:31:34.001253  3972 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:34.001265  3972 net.cpp:86] Creating Layer pool0
I0428 20:31:34.001271  3972 net.cpp:408] pool0 <- conv0
I0428 20:31:34.001278  3972 net.cpp:382] pool0 -> pool0
I0428 20:31:34.001319  3972 net.cpp:124] Setting up pool0
I0428 20:31:34.001327  3972 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:34.001332  3972 net.cpp:139] Memory required for data: 29114800
I0428 20:31:34.001337  3972 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:34.001350  3972 net.cpp:86] Creating Layer conv1
I0428 20:31:34.001356  3972 net.cpp:408] conv1 <- pool0
I0428 20:31:34.001366  3972 net.cpp:382] conv1 -> conv1
I0428 20:31:34.003136  3972 net.cpp:124] Setting up conv1
I0428 20:31:34.003151  3972 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:34.003156  3972 net.cpp:139] Memory required for data: 29370800
I0428 20:31:34.003183  3972 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:34.003196  3972 net.cpp:86] Creating Layer pool1
I0428 20:31:34.003201  3972 net.cpp:408] pool1 <- conv1
I0428 20:31:34.003209  3972 net.cpp:382] pool1 -> pool1
I0428 20:31:34.003253  3972 net.cpp:124] Setting up pool1
I0428 20:31:34.003262  3972 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:34.003267  3972 net.cpp:139] Memory required for data: 29434800
I0428 20:31:34.003279  3972 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:34.003291  3972 net.cpp:86] Creating Layer ip1
I0428 20:31:34.003298  3972 net.cpp:408] ip1 <- pool1
I0428 20:31:34.003305  3972 net.cpp:382] ip1 -> ip1
I0428 20:31:34.003468  3972 net.cpp:124] Setting up ip1
I0428 20:31:34.003486  3972 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:34.003494  3972 net.cpp:139] Memory required for data: 29454800
I0428 20:31:34.003505  3972 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:34.003520  3972 net.cpp:86] Creating Layer relu1
I0428 20:31:34.003526  3972 net.cpp:408] relu1 <- ip1
I0428 20:31:34.003535  3972 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:34.003720  3972 net.cpp:124] Setting up relu1
I0428 20:31:34.003731  3972 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:34.003734  3972 net.cpp:139] Memory required for data: 29474800
I0428 20:31:34.003739  3972 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:34.003751  3972 net.cpp:86] Creating Layer ip2
I0428 20:31:34.003757  3972 net.cpp:408] ip2 <- ip1
I0428 20:31:34.003767  3972 net.cpp:382] ip2 -> ip2
I0428 20:31:34.003898  3972 net.cpp:124] Setting up ip2
I0428 20:31:34.003907  3972 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:34.003911  3972 net.cpp:139] Memory required for data: 29494800
I0428 20:31:34.003921  3972 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:34.003928  3972 net.cpp:86] Creating Layer relu2
I0428 20:31:34.003933  3972 net.cpp:408] relu2 <- ip2
I0428 20:31:34.003939  3972 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:34.004101  3972 net.cpp:124] Setting up relu2
I0428 20:31:34.004112  3972 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:34.004117  3972 net.cpp:139] Memory required for data: 29514800
I0428 20:31:34.004122  3972 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:34.004132  3972 net.cpp:86] Creating Layer ip3
I0428 20:31:34.004137  3972 net.cpp:408] ip3 <- ip2
I0428 20:31:34.004146  3972 net.cpp:382] ip3 -> ip3
I0428 20:31:34.004292  3972 net.cpp:124] Setting up ip3
I0428 20:31:34.004300  3972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:34.004320  3972 net.cpp:139] Memory required for data: 29518800
I0428 20:31:34.004334  3972 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:34.004348  3972 net.cpp:86] Creating Layer relu3
I0428 20:31:34.004353  3972 net.cpp:408] relu3 <- ip3
I0428 20:31:34.004361  3972 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:34.005276  3972 net.cpp:124] Setting up relu3
I0428 20:31:34.005291  3972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:34.005298  3972 net.cpp:139] Memory required for data: 29522800
I0428 20:31:34.005303  3972 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:34.005311  3972 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:34.005317  3972 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:34.005327  3972 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:34.005337  3972 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:34.005401  3972 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:34.005409  3972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:34.005416  3972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:34.005421  3972 net.cpp:139] Memory required for data: 29530800
I0428 20:31:34.005426  3972 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:34.005437  3972 net.cpp:86] Creating Layer accuracy
I0428 20:31:34.005442  3972 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:34.005450  3972 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:34.005457  3972 net.cpp:382] accuracy -> accuracy
I0428 20:31:34.005471  3972 net.cpp:124] Setting up accuracy
I0428 20:31:34.005480  3972 net.cpp:131] Top shape: (1)
I0428 20:31:34.005486  3972 net.cpp:139] Memory required for data: 29530804
I0428 20:31:34.005491  3972 layer_factory.hpp:77] Creating layer loss
I0428 20:31:34.005498  3972 net.cpp:86] Creating Layer loss
I0428 20:31:34.005504  3972 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:34.005511  3972 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:34.005517  3972 net.cpp:382] loss -> loss
I0428 20:31:34.005527  3972 layer_factory.hpp:77] Creating layer loss
I0428 20:31:34.005834  3972 net.cpp:124] Setting up loss
I0428 20:31:34.005847  3972 net.cpp:131] Top shape: (1)
I0428 20:31:34.005854  3972 net.cpp:134]     with loss weight 1
I0428 20:31:34.005877  3972 net.cpp:139] Memory required for data: 29530808
I0428 20:31:34.005883  3972 net.cpp:200] loss needs backward computation.
I0428 20:31:34.005890  3972 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:34.005897  3972 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:34.005903  3972 net.cpp:200] relu3 needs backward computation.
I0428 20:31:34.005908  3972 net.cpp:200] ip3 needs backward computation.
I0428 20:31:34.005913  3972 net.cpp:200] relu2 needs backward computation.
I0428 20:31:34.005919  3972 net.cpp:200] ip2 needs backward computation.
I0428 20:31:34.005925  3972 net.cpp:200] relu1 needs backward computation.
I0428 20:31:34.005930  3972 net.cpp:200] ip1 needs backward computation.
I0428 20:31:34.005935  3972 net.cpp:200] pool1 needs backward computation.
I0428 20:31:34.005941  3972 net.cpp:200] conv1 needs backward computation.
I0428 20:31:34.005947  3972 net.cpp:200] pool0 needs backward computation.
I0428 20:31:34.005954  3972 net.cpp:200] conv0 needs backward computation.
I0428 20:31:34.005960  3972 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:34.005972  3972 net.cpp:202] mnist does not need backward computation.
I0428 20:31:34.005977  3972 net.cpp:244] This network produces output accuracy
I0428 20:31:34.005990  3972 net.cpp:244] This network produces output loss
I0428 20:31:34.006011  3972 net.cpp:257] Network initialization done.
I0428 20:31:34.006063  3972 solver.cpp:56] Solver scaffolding done.
I0428 20:31:34.006494  3972 caffe.cpp:248] Starting Optimization
I0428 20:31:34.006500  3972 solver.cpp:273] Solving LeNet
I0428 20:31:34.006505  3972 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:34.007401  3972 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:34.103948  3979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:34.105518  3972 solver.cpp:398]     Test net output #0: accuracy = 0.1242
I0428 20:31:34.105558  3972 solver.cpp:398]     Test net output #1: loss = 2.29664 (* 1 = 2.29664 loss)
I0428 20:31:34.110265  3972 solver.cpp:219] Iteration 0 (-3.49088e-31 iter/s, 0.10372s/100 iters), loss = 2.2934
I0428 20:31:34.110294  3972 solver.cpp:238]     Train net output #0: loss = 2.2934 (* 1 = 2.2934 loss)
I0428 20:31:34.110311  3972 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:34.323829  3972 solver.cpp:219] Iteration 100 (468.359 iter/s, 0.213511s/100 iters), loss = 0.849964
I0428 20:31:34.323881  3972 solver.cpp:238]     Train net output #0: loss = 0.849964 (* 1 = 0.849964 loss)
I0428 20:31:34.323899  3972 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:34.539911  3972 solver.cpp:219] Iteration 200 (462.922 iter/s, 0.216019s/100 iters), loss = 0.73257
I0428 20:31:34.539955  3972 solver.cpp:238]     Train net output #0: loss = 0.73257 (* 1 = 0.73257 loss)
I0428 20:31:34.539971  3972 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:34.754338  3972 solver.cpp:219] Iteration 300 (466.483 iter/s, 0.21437s/100 iters), loss = 0.41531
I0428 20:31:34.754379  3972 solver.cpp:238]     Train net output #0: loss = 0.41531 (* 1 = 0.41531 loss)
I0428 20:31:34.754393  3972 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:34.966806  3972 solver.cpp:219] Iteration 400 (470.773 iter/s, 0.212417s/100 iters), loss = 0.699322
I0428 20:31:34.966842  3972 solver.cpp:238]     Train net output #0: loss = 0.699322 (* 1 = 0.699322 loss)
I0428 20:31:34.966855  3972 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:35.182576  3972 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:35.278933  3979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:35.281424  3972 solver.cpp:398]     Test net output #0: accuracy = 0.8645
I0428 20:31:35.281450  3972 solver.cpp:398]     Test net output #1: loss = 0.551921 (* 1 = 0.551921 loss)
I0428 20:31:35.283402  3972 solver.cpp:219] Iteration 500 (315.911 iter/s, 0.316545s/100 iters), loss = 0.610847
I0428 20:31:35.283429  3972 solver.cpp:238]     Train net output #0: loss = 0.610847 (* 1 = 0.610847 loss)
I0428 20:31:35.283458  3972 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:35.503273  3972 solver.cpp:219] Iteration 600 (454.905 iter/s, 0.219826s/100 iters), loss = 0.420969
I0428 20:31:35.503327  3972 solver.cpp:238]     Train net output #0: loss = 0.420969 (* 1 = 0.420969 loss)
I0428 20:31:35.503345  3972 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:35.715425  3972 solver.cpp:219] Iteration 700 (471.498 iter/s, 0.21209s/100 iters), loss = 0.794827
I0428 20:31:35.715462  3972 solver.cpp:238]     Train net output #0: loss = 0.794827 (* 1 = 0.794827 loss)
I0428 20:31:35.715476  3972 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:35.936494  3972 solver.cpp:219] Iteration 800 (452.456 iter/s, 0.221016s/100 iters), loss = 0.669702
I0428 20:31:35.936543  3972 solver.cpp:238]     Train net output #0: loss = 0.669702 (* 1 = 0.669702 loss)
I0428 20:31:35.936561  3972 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:36.152580  3972 solver.cpp:219] Iteration 900 (462.914 iter/s, 0.216023s/100 iters), loss = 0.51451
I0428 20:31:36.152632  3972 solver.cpp:238]     Train net output #0: loss = 0.51451 (* 1 = 0.51451 loss)
I0428 20:31:36.152652  3972 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:36.223148  3978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:36.361338  3972 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:36.363431  3972 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:36.364701  3972 solver.cpp:311] Iteration 1000, loss = 0.700959
I0428 20:31:36.364724  3972 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:36.462224  3979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:36.464905  3972 solver.cpp:398]     Test net output #0: accuracy = 0.8782
I0428 20:31:36.464932  3972 solver.cpp:398]     Test net output #1: loss = 0.518621 (* 1 = 0.518621 loss)
I0428 20:31:36.464942  3972 solver.cpp:316] Optimization Done.
I0428 20:31:36.464948  3972 caffe.cpp:259] Optimization Done.
