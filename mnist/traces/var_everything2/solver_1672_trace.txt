I0428 20:38:56.481521  5211 caffe.cpp:218] Using GPUs 0
I0428 20:38:56.510509  5211 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:56.958226  5211 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1672.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:56.958362  5211 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1672.prototxt
I0428 20:38:56.958689  5211 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:56.958703  5211 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:56.958778  5211 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:56.958837  5211 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:56.958935  5211 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:56.958953  5211 net.cpp:86] Creating Layer mnist
I0428 20:38:56.958959  5211 net.cpp:382] mnist -> data
I0428 20:38:56.958992  5211 net.cpp:382] mnist -> label
I0428 20:38:56.960093  5211 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:56.962277  5211 net.cpp:124] Setting up mnist
I0428 20:38:56.962308  5211 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:56.962313  5211 net.cpp:131] Top shape: 64 (64)
I0428 20:38:56.962317  5211 net.cpp:139] Memory required for data: 200960
I0428 20:38:56.962323  5211 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:56.962337  5211 net.cpp:86] Creating Layer conv0
I0428 20:38:56.962357  5211 net.cpp:408] conv0 <- data
I0428 20:38:56.962383  5211 net.cpp:382] conv0 -> conv0
I0428 20:38:57.189105  5211 net.cpp:124] Setting up conv0
I0428 20:38:57.189144  5211 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:57.189148  5211 net.cpp:139] Memory required for data: 14946560
I0428 20:38:57.189177  5211 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:57.189188  5211 net.cpp:86] Creating Layer pool0
I0428 20:38:57.189193  5211 net.cpp:408] pool0 <- conv0
I0428 20:38:57.189198  5211 net.cpp:382] pool0 -> pool0
I0428 20:38:57.189254  5211 net.cpp:124] Setting up pool0
I0428 20:38:57.189261  5211 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:57.189265  5211 net.cpp:139] Memory required for data: 18632960
I0428 20:38:57.189267  5211 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:57.189277  5211 net.cpp:86] Creating Layer conv1
I0428 20:38:57.189282  5211 net.cpp:408] conv1 <- pool0
I0428 20:38:57.189301  5211 net.cpp:382] conv1 -> conv1
I0428 20:38:57.193411  5211 net.cpp:124] Setting up conv1
I0428 20:38:57.193425  5211 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:57.193429  5211 net.cpp:139] Memory required for data: 20271360
I0428 20:38:57.193436  5211 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:57.193444  5211 net.cpp:86] Creating Layer pool1
I0428 20:38:57.193446  5211 net.cpp:408] pool1 <- conv1
I0428 20:38:57.193450  5211 net.cpp:382] pool1 -> pool1
I0428 20:38:57.193500  5211 net.cpp:124] Setting up pool1
I0428 20:38:57.193505  5211 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:57.193507  5211 net.cpp:139] Memory required for data: 20680960
I0428 20:38:57.193509  5211 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:57.193516  5211 net.cpp:86] Creating Layer ip1
I0428 20:38:57.193519  5211 net.cpp:408] ip1 <- pool1
I0428 20:38:57.193523  5211 net.cpp:382] ip1 -> ip1
I0428 20:38:57.194025  5211 net.cpp:124] Setting up ip1
I0428 20:38:57.194031  5211 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:57.194049  5211 net.cpp:139] Memory required for data: 20693760
I0428 20:38:57.194056  5211 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:57.194061  5211 net.cpp:86] Creating Layer relu1
I0428 20:38:57.194063  5211 net.cpp:408] relu1 <- ip1
I0428 20:38:57.194068  5211 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:57.194239  5211 net.cpp:124] Setting up relu1
I0428 20:38:57.194248  5211 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:57.194252  5211 net.cpp:139] Memory required for data: 20706560
I0428 20:38:57.194254  5211 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:57.194260  5211 net.cpp:86] Creating Layer ip2
I0428 20:38:57.194263  5211 net.cpp:408] ip2 <- ip1
I0428 20:38:57.194268  5211 net.cpp:382] ip2 -> ip2
I0428 20:38:57.194371  5211 net.cpp:124] Setting up ip2
I0428 20:38:57.194378  5211 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:57.194381  5211 net.cpp:139] Memory required for data: 20712960
I0428 20:38:57.194386  5211 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:57.194391  5211 net.cpp:86] Creating Layer relu2
I0428 20:38:57.194394  5211 net.cpp:408] relu2 <- ip2
I0428 20:38:57.194398  5211 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:57.195209  5211 net.cpp:124] Setting up relu2
I0428 20:38:57.195236  5211 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:57.195240  5211 net.cpp:139] Memory required for data: 20719360
I0428 20:38:57.195243  5211 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:57.195250  5211 net.cpp:86] Creating Layer ip3
I0428 20:38:57.195255  5211 net.cpp:408] ip3 <- ip2
I0428 20:38:57.195260  5211 net.cpp:382] ip3 -> ip3
I0428 20:38:57.195358  5211 net.cpp:124] Setting up ip3
I0428 20:38:57.195365  5211 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:57.195369  5211 net.cpp:139] Memory required for data: 20721920
I0428 20:38:57.195375  5211 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:57.195380  5211 net.cpp:86] Creating Layer relu3
I0428 20:38:57.195384  5211 net.cpp:408] relu3 <- ip3
I0428 20:38:57.195401  5211 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:57.195580  5211 net.cpp:124] Setting up relu3
I0428 20:38:57.195587  5211 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:57.195590  5211 net.cpp:139] Memory required for data: 20724480
I0428 20:38:57.195593  5211 layer_factory.hpp:77] Creating layer loss
I0428 20:38:57.195598  5211 net.cpp:86] Creating Layer loss
I0428 20:38:57.195601  5211 net.cpp:408] loss <- ip3
I0428 20:38:57.195605  5211 net.cpp:408] loss <- label
I0428 20:38:57.195611  5211 net.cpp:382] loss -> loss
I0428 20:38:57.195623  5211 layer_factory.hpp:77] Creating layer loss
I0428 20:38:57.195863  5211 net.cpp:124] Setting up loss
I0428 20:38:57.195873  5211 net.cpp:131] Top shape: (1)
I0428 20:38:57.195875  5211 net.cpp:134]     with loss weight 1
I0428 20:38:57.195889  5211 net.cpp:139] Memory required for data: 20724484
I0428 20:38:57.195894  5211 net.cpp:200] loss needs backward computation.
I0428 20:38:57.195896  5211 net.cpp:200] relu3 needs backward computation.
I0428 20:38:57.195899  5211 net.cpp:200] ip3 needs backward computation.
I0428 20:38:57.195902  5211 net.cpp:200] relu2 needs backward computation.
I0428 20:38:57.195905  5211 net.cpp:200] ip2 needs backward computation.
I0428 20:38:57.195907  5211 net.cpp:200] relu1 needs backward computation.
I0428 20:38:57.195910  5211 net.cpp:200] ip1 needs backward computation.
I0428 20:38:57.195914  5211 net.cpp:200] pool1 needs backward computation.
I0428 20:38:57.195916  5211 net.cpp:200] conv1 needs backward computation.
I0428 20:38:57.195919  5211 net.cpp:200] pool0 needs backward computation.
I0428 20:38:57.195924  5211 net.cpp:200] conv0 needs backward computation.
I0428 20:38:57.195926  5211 net.cpp:202] mnist does not need backward computation.
I0428 20:38:57.195930  5211 net.cpp:244] This network produces output loss
I0428 20:38:57.195940  5211 net.cpp:257] Network initialization done.
I0428 20:38:57.196275  5211 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1672.prototxt
I0428 20:38:57.196346  5211 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:57.196439  5211 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:57.196518  5211 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:57.196561  5211 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:57.196573  5211 net.cpp:86] Creating Layer mnist
I0428 20:38:57.196578  5211 net.cpp:382] mnist -> data
I0428 20:38:57.196585  5211 net.cpp:382] mnist -> label
I0428 20:38:57.196683  5211 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:57.198683  5211 net.cpp:124] Setting up mnist
I0428 20:38:57.198711  5211 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:57.198715  5211 net.cpp:131] Top shape: 100 (100)
I0428 20:38:57.198719  5211 net.cpp:139] Memory required for data: 314000
I0428 20:38:57.198721  5211 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:57.198729  5211 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:57.198730  5211 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:57.198762  5211 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:57.198770  5211 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:57.198832  5211 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:57.198837  5211 net.cpp:131] Top shape: 100 (100)
I0428 20:38:57.198840  5211 net.cpp:131] Top shape: 100 (100)
I0428 20:38:57.198843  5211 net.cpp:139] Memory required for data: 314800
I0428 20:38:57.198845  5211 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:57.198855  5211 net.cpp:86] Creating Layer conv0
I0428 20:38:57.198858  5211 net.cpp:408] conv0 <- data
I0428 20:38:57.198863  5211 net.cpp:382] conv0 -> conv0
I0428 20:38:57.200608  5211 net.cpp:124] Setting up conv0
I0428 20:38:57.200621  5211 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:57.200639  5211 net.cpp:139] Memory required for data: 23354800
I0428 20:38:57.200647  5211 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:57.200670  5211 net.cpp:86] Creating Layer pool0
I0428 20:38:57.200672  5211 net.cpp:408] pool0 <- conv0
I0428 20:38:57.200700  5211 net.cpp:382] pool0 -> pool0
I0428 20:38:57.200737  5211 net.cpp:124] Setting up pool0
I0428 20:38:57.200744  5211 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:57.200749  5211 net.cpp:139] Memory required for data: 29114800
I0428 20:38:57.200752  5211 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:57.200763  5211 net.cpp:86] Creating Layer conv1
I0428 20:38:57.200767  5211 net.cpp:408] conv1 <- pool0
I0428 20:38:57.200772  5211 net.cpp:382] conv1 -> conv1
I0428 20:38:57.203821  5211 net.cpp:124] Setting up conv1
I0428 20:38:57.203835  5211 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:57.203838  5211 net.cpp:139] Memory required for data: 31674800
I0428 20:38:57.203845  5211 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:57.203852  5211 net.cpp:86] Creating Layer pool1
I0428 20:38:57.203871  5211 net.cpp:408] pool1 <- conv1
I0428 20:38:57.203876  5211 net.cpp:382] pool1 -> pool1
I0428 20:38:57.203923  5211 net.cpp:124] Setting up pool1
I0428 20:38:57.203929  5211 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:57.203946  5211 net.cpp:139] Memory required for data: 32314800
I0428 20:38:57.203949  5211 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:57.203956  5211 net.cpp:86] Creating Layer ip1
I0428 20:38:57.203959  5211 net.cpp:408] ip1 <- pool1
I0428 20:38:57.203964  5211 net.cpp:382] ip1 -> ip1
I0428 20:38:57.204512  5211 net.cpp:124] Setting up ip1
I0428 20:38:57.204530  5211 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:57.204533  5211 net.cpp:139] Memory required for data: 32334800
I0428 20:38:57.204540  5211 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:57.204546  5211 net.cpp:86] Creating Layer relu1
I0428 20:38:57.204550  5211 net.cpp:408] relu1 <- ip1
I0428 20:38:57.204553  5211 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:57.204710  5211 net.cpp:124] Setting up relu1
I0428 20:38:57.204718  5211 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:57.204721  5211 net.cpp:139] Memory required for data: 32354800
I0428 20:38:57.204725  5211 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:57.204731  5211 net.cpp:86] Creating Layer ip2
I0428 20:38:57.204735  5211 net.cpp:408] ip2 <- ip1
I0428 20:38:57.204741  5211 net.cpp:382] ip2 -> ip2
I0428 20:38:57.204898  5211 net.cpp:124] Setting up ip2
I0428 20:38:57.204906  5211 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:57.204910  5211 net.cpp:139] Memory required for data: 32364800
I0428 20:38:57.204916  5211 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:57.204928  5211 net.cpp:86] Creating Layer relu2
I0428 20:38:57.204932  5211 net.cpp:408] relu2 <- ip2
I0428 20:38:57.204938  5211 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:57.205224  5211 net.cpp:124] Setting up relu2
I0428 20:38:57.205247  5211 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:57.205250  5211 net.cpp:139] Memory required for data: 32374800
I0428 20:38:57.205253  5211 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:57.205258  5211 net.cpp:86] Creating Layer ip3
I0428 20:38:57.205267  5211 net.cpp:408] ip3 <- ip2
I0428 20:38:57.205273  5211 net.cpp:382] ip3 -> ip3
I0428 20:38:57.205386  5211 net.cpp:124] Setting up ip3
I0428 20:38:57.205394  5211 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:57.205397  5211 net.cpp:139] Memory required for data: 32378800
I0428 20:38:57.205404  5211 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:57.205410  5211 net.cpp:86] Creating Layer relu3
I0428 20:38:57.205411  5211 net.cpp:408] relu3 <- ip3
I0428 20:38:57.205416  5211 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:57.206166  5211 net.cpp:124] Setting up relu3
I0428 20:38:57.206179  5211 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:57.206182  5211 net.cpp:139] Memory required for data: 32382800
I0428 20:38:57.206187  5211 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:57.206192  5211 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:57.206194  5211 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:57.206202  5211 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:57.206207  5211 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:57.206248  5211 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:57.206254  5211 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:57.206256  5211 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:57.206259  5211 net.cpp:139] Memory required for data: 32390800
I0428 20:38:57.206262  5211 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:57.206269  5211 net.cpp:86] Creating Layer accuracy
I0428 20:38:57.206271  5211 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:57.206275  5211 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:57.206281  5211 net.cpp:382] accuracy -> accuracy
I0428 20:38:57.206287  5211 net.cpp:124] Setting up accuracy
I0428 20:38:57.206291  5211 net.cpp:131] Top shape: (1)
I0428 20:38:57.206295  5211 net.cpp:139] Memory required for data: 32390804
I0428 20:38:57.206297  5211 layer_factory.hpp:77] Creating layer loss
I0428 20:38:57.206301  5211 net.cpp:86] Creating Layer loss
I0428 20:38:57.206305  5211 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:57.206308  5211 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:57.206312  5211 net.cpp:382] loss -> loss
I0428 20:38:57.206318  5211 layer_factory.hpp:77] Creating layer loss
I0428 20:38:57.206598  5211 net.cpp:124] Setting up loss
I0428 20:38:57.206609  5211 net.cpp:131] Top shape: (1)
I0428 20:38:57.206611  5211 net.cpp:134]     with loss weight 1
I0428 20:38:57.206626  5211 net.cpp:139] Memory required for data: 32390808
I0428 20:38:57.206629  5211 net.cpp:200] loss needs backward computation.
I0428 20:38:57.206634  5211 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:57.206636  5211 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:57.206640  5211 net.cpp:200] relu3 needs backward computation.
I0428 20:38:57.206641  5211 net.cpp:200] ip3 needs backward computation.
I0428 20:38:57.206645  5211 net.cpp:200] relu2 needs backward computation.
I0428 20:38:57.206646  5211 net.cpp:200] ip2 needs backward computation.
I0428 20:38:57.206648  5211 net.cpp:200] relu1 needs backward computation.
I0428 20:38:57.206651  5211 net.cpp:200] ip1 needs backward computation.
I0428 20:38:57.206653  5211 net.cpp:200] pool1 needs backward computation.
I0428 20:38:57.206656  5211 net.cpp:200] conv1 needs backward computation.
I0428 20:38:57.206660  5211 net.cpp:200] pool0 needs backward computation.
I0428 20:38:57.206661  5211 net.cpp:200] conv0 needs backward computation.
I0428 20:38:57.206665  5211 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:57.206668  5211 net.cpp:202] mnist does not need backward computation.
I0428 20:38:57.206670  5211 net.cpp:244] This network produces output accuracy
I0428 20:38:57.206673  5211 net.cpp:244] This network produces output loss
I0428 20:38:57.206684  5211 net.cpp:257] Network initialization done.
I0428 20:38:57.206723  5211 solver.cpp:56] Solver scaffolding done.
I0428 20:38:57.207057  5211 caffe.cpp:248] Starting Optimization
I0428 20:38:57.207064  5211 solver.cpp:273] Solving LeNet
I0428 20:38:57.207067  5211 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:57.207891  5211 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:57.338548  5218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:57.343107  5211 solver.cpp:398]     Test net output #0: accuracy = 0.113
I0428 20:38:57.343125  5211 solver.cpp:398]     Test net output #1: loss = 2.29765 (* 1 = 2.29765 loss)
I0428 20:38:57.348316  5211 solver.cpp:219] Iteration 0 (-3.34807e-31 iter/s, 0.141218s/100 iters), loss = 2.29142
I0428 20:38:57.348354  5211 solver.cpp:238]     Train net output #0: loss = 2.29142 (* 1 = 2.29142 loss)
I0428 20:38:57.348382  5211 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:57.616961  5211 solver.cpp:219] Iteration 100 (372.306 iter/s, 0.268596s/100 iters), loss = 0.625355
I0428 20:38:57.616992  5211 solver.cpp:238]     Train net output #0: loss = 0.625355 (* 1 = 0.625355 loss)
I0428 20:38:57.616999  5211 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:57.888764  5211 solver.cpp:219] Iteration 200 (367.999 iter/s, 0.27174s/100 iters), loss = 0.195578
I0428 20:38:57.888790  5211 solver.cpp:238]     Train net output #0: loss = 0.195578 (* 1 = 0.195578 loss)
I0428 20:38:57.888833  5211 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:58.160439  5211 solver.cpp:219] Iteration 300 (368.149 iter/s, 0.271629s/100 iters), loss = 0.153639
I0428 20:38:58.160465  5211 solver.cpp:238]     Train net output #0: loss = 0.153639 (* 1 = 0.153639 loss)
I0428 20:38:58.160471  5211 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:58.433522  5211 solver.cpp:219] Iteration 400 (366.248 iter/s, 0.273039s/100 iters), loss = 0.102717
I0428 20:38:58.433547  5211 solver.cpp:238]     Train net output #0: loss = 0.102717 (* 1 = 0.102717 loss)
I0428 20:38:58.433553  5211 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:58.706197  5211 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:58.832077  5218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:58.836792  5211 solver.cpp:398]     Test net output #0: accuracy = 0.9702
I0428 20:38:58.836817  5211 solver.cpp:398]     Test net output #1: loss = 0.0898101 (* 1 = 0.0898101 loss)
I0428 20:38:58.839517  5211 solver.cpp:219] Iteration 500 (246.339 iter/s, 0.405945s/100 iters), loss = 0.118114
I0428 20:38:58.839555  5211 solver.cpp:238]     Train net output #0: loss = 0.118114 (* 1 = 0.118114 loss)
I0428 20:38:58.839591  5211 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:59.118000  5211 solver.cpp:219] Iteration 600 (359.161 iter/s, 0.278427s/100 iters), loss = 0.0868812
I0428 20:38:59.118023  5211 solver.cpp:238]     Train net output #0: loss = 0.0868812 (* 1 = 0.0868812 loss)
I0428 20:38:59.118029  5211 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:59.400424  5211 solver.cpp:219] Iteration 700 (354.132 iter/s, 0.28238s/100 iters), loss = 0.10831
I0428 20:38:59.400450  5211 solver.cpp:238]     Train net output #0: loss = 0.10831 (* 1 = 0.10831 loss)
I0428 20:38:59.400456  5211 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:59.685674  5211 solver.cpp:219] Iteration 800 (350.626 iter/s, 0.285204s/100 iters), loss = 0.17709
I0428 20:38:59.685701  5211 solver.cpp:238]     Train net output #0: loss = 0.17709 (* 1 = 0.17709 loss)
I0428 20:38:59.685708  5211 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:59.972817  5211 solver.cpp:219] Iteration 900 (348.323 iter/s, 0.28709s/100 iters), loss = 0.128775
I0428 20:38:59.972846  5211 solver.cpp:238]     Train net output #0: loss = 0.128775 (* 1 = 0.128775 loss)
I0428 20:38:59.972867  5211 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:39:00.066418  5217 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:00.255203  5211 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:39:00.261056  5211 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:39:00.264495  5211 solver.cpp:311] Iteration 1000, loss = 0.133576
I0428 20:39:00.264511  5211 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:39:00.392730  5218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:00.397565  5211 solver.cpp:398]     Test net output #0: accuracy = 0.98
I0428 20:39:00.397588  5211 solver.cpp:398]     Test net output #1: loss = 0.0613166 (* 1 = 0.0613166 loss)
I0428 20:39:00.397593  5211 solver.cpp:316] Optimization Done.
I0428 20:39:00.397598  5211 caffe.cpp:259] Optimization Done.
