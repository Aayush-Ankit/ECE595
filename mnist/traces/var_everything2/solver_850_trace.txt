I0428 19:59:31.299072 29260 caffe.cpp:218] Using GPUs 0
I0428 19:59:31.336567 29260 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:31.790891 29260 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test850.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:31.791035 29260 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test850.prototxt
I0428 19:59:31.791381 29260 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:31.791410 29260 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:31.791484 29260 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:31.791543 29260 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:31.791625 29260 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:31.791642 29260 net.cpp:86] Creating Layer mnist
I0428 19:59:31.791648 29260 net.cpp:382] mnist -> data
I0428 19:59:31.791666 29260 net.cpp:382] mnist -> label
I0428 19:59:31.792661 29260 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:31.794920 29260 net.cpp:124] Setting up mnist
I0428 19:59:31.794950 29260 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:31.794956 29260 net.cpp:131] Top shape: 64 (64)
I0428 19:59:31.794960 29260 net.cpp:139] Memory required for data: 200960
I0428 19:59:31.794965 29260 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:31.794977 29260 net.cpp:86] Creating Layer conv0
I0428 19:59:31.794994 29260 net.cpp:408] conv0 <- data
I0428 19:59:31.795003 29260 net.cpp:382] conv0 -> conv0
I0428 19:59:32.020107 29260 net.cpp:124] Setting up conv0
I0428 19:59:32.020148 29260 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:32.020153 29260 net.cpp:139] Memory required for data: 1675520
I0428 19:59:32.020167 29260 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:32.020179 29260 net.cpp:86] Creating Layer pool0
I0428 19:59:32.020198 29260 net.cpp:408] pool0 <- conv0
I0428 19:59:32.020203 29260 net.cpp:382] pool0 -> pool0
I0428 19:59:32.020248 29260 net.cpp:124] Setting up pool0
I0428 19:59:32.020256 29260 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:32.020258 29260 net.cpp:139] Memory required for data: 2044160
I0428 19:59:32.020262 29260 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:32.020272 29260 net.cpp:86] Creating Layer conv1
I0428 19:59:32.020275 29260 net.cpp:408] conv1 <- pool0
I0428 19:59:32.020280 29260 net.cpp:382] conv1 -> conv1
I0428 19:59:32.023051 29260 net.cpp:124] Setting up conv1
I0428 19:59:32.023080 29260 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:32.023084 29260 net.cpp:139] Memory required for data: 2208000
I0428 19:59:32.023092 29260 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:32.023100 29260 net.cpp:86] Creating Layer pool1
I0428 19:59:32.023103 29260 net.cpp:408] pool1 <- conv1
I0428 19:59:32.023123 29260 net.cpp:382] pool1 -> pool1
I0428 19:59:32.023159 29260 net.cpp:124] Setting up pool1
I0428 19:59:32.023166 29260 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:32.023169 29260 net.cpp:139] Memory required for data: 2248960
I0428 19:59:32.023172 29260 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:32.023180 29260 net.cpp:86] Creating Layer ip1
I0428 19:59:32.023182 29260 net.cpp:408] ip1 <- pool1
I0428 19:59:32.023187 29260 net.cpp:382] ip1 -> ip1
I0428 19:59:32.024220 29260 net.cpp:124] Setting up ip1
I0428 19:59:32.024233 29260 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:32.024236 29260 net.cpp:139] Memory required for data: 2261760
I0428 19:59:32.024245 29260 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:32.024250 29260 net.cpp:86] Creating Layer relu1
I0428 19:59:32.024255 29260 net.cpp:408] relu1 <- ip1
I0428 19:59:32.024258 29260 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:32.024441 29260 net.cpp:124] Setting up relu1
I0428 19:59:32.024461 29260 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:32.024464 29260 net.cpp:139] Memory required for data: 2274560
I0428 19:59:32.024467 29260 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:32.024473 29260 net.cpp:86] Creating Layer ip2
I0428 19:59:32.024477 29260 net.cpp:408] ip2 <- ip1
I0428 19:59:32.024482 29260 net.cpp:382] ip2 -> ip2
I0428 19:59:32.024587 29260 net.cpp:124] Setting up ip2
I0428 19:59:32.024593 29260 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:32.024596 29260 net.cpp:139] Memory required for data: 2277120
I0428 19:59:32.024601 29260 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:32.024607 29260 net.cpp:86] Creating Layer relu2
I0428 19:59:32.024610 29260 net.cpp:408] relu2 <- ip2
I0428 19:59:32.024615 29260 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:32.025487 29260 net.cpp:124] Setting up relu2
I0428 19:59:32.025516 29260 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:32.025519 29260 net.cpp:139] Memory required for data: 2279680
I0428 19:59:32.025522 29260 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:32.025529 29260 net.cpp:86] Creating Layer ip3
I0428 19:59:32.025533 29260 net.cpp:408] ip3 <- ip2
I0428 19:59:32.025538 29260 net.cpp:382] ip3 -> ip3
I0428 19:59:32.025652 29260 net.cpp:124] Setting up ip3
I0428 19:59:32.025676 29260 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:32.025678 29260 net.cpp:139] Memory required for data: 2282240
I0428 19:59:32.025686 29260 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:32.025691 29260 net.cpp:86] Creating Layer relu3
I0428 19:59:32.025694 29260 net.cpp:408] relu3 <- ip3
I0428 19:59:32.025698 29260 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:32.025867 29260 net.cpp:124] Setting up relu3
I0428 19:59:32.025877 29260 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:32.025880 29260 net.cpp:139] Memory required for data: 2284800
I0428 19:59:32.025883 29260 layer_factory.hpp:77] Creating layer loss
I0428 19:59:32.025888 29260 net.cpp:86] Creating Layer loss
I0428 19:59:32.025892 29260 net.cpp:408] loss <- ip3
I0428 19:59:32.025897 29260 net.cpp:408] loss <- label
I0428 19:59:32.025902 29260 net.cpp:382] loss -> loss
I0428 19:59:32.025918 29260 layer_factory.hpp:77] Creating layer loss
I0428 19:59:32.026161 29260 net.cpp:124] Setting up loss
I0428 19:59:32.026170 29260 net.cpp:131] Top shape: (1)
I0428 19:59:32.026175 29260 net.cpp:134]     with loss weight 1
I0428 19:59:32.026204 29260 net.cpp:139] Memory required for data: 2284804
I0428 19:59:32.026207 29260 net.cpp:200] loss needs backward computation.
I0428 19:59:32.026211 29260 net.cpp:200] relu3 needs backward computation.
I0428 19:59:32.026213 29260 net.cpp:200] ip3 needs backward computation.
I0428 19:59:32.026216 29260 net.cpp:200] relu2 needs backward computation.
I0428 19:59:32.026219 29260 net.cpp:200] ip2 needs backward computation.
I0428 19:59:32.026221 29260 net.cpp:200] relu1 needs backward computation.
I0428 19:59:32.026224 29260 net.cpp:200] ip1 needs backward computation.
I0428 19:59:32.026227 29260 net.cpp:200] pool1 needs backward computation.
I0428 19:59:32.026231 29260 net.cpp:200] conv1 needs backward computation.
I0428 19:59:32.026233 29260 net.cpp:200] pool0 needs backward computation.
I0428 19:59:32.026237 29260 net.cpp:200] conv0 needs backward computation.
I0428 19:59:32.026239 29260 net.cpp:202] mnist does not need backward computation.
I0428 19:59:32.026242 29260 net.cpp:244] This network produces output loss
I0428 19:59:32.026250 29260 net.cpp:257] Network initialization done.
I0428 19:59:32.026602 29260 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test850.prototxt
I0428 19:59:32.026644 29260 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:32.026746 29260 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:32.026841 29260 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:32.026886 29260 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:32.026904 29260 net.cpp:86] Creating Layer mnist
I0428 19:59:32.026909 29260 net.cpp:382] mnist -> data
I0428 19:59:32.026916 29260 net.cpp:382] mnist -> label
I0428 19:59:32.027010 29260 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:32.029026 29260 net.cpp:124] Setting up mnist
I0428 19:59:32.029055 29260 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:32.029062 29260 net.cpp:131] Top shape: 100 (100)
I0428 19:59:32.029064 29260 net.cpp:139] Memory required for data: 314000
I0428 19:59:32.029069 29260 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:32.029096 29260 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:32.029100 29260 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:32.029105 29260 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:32.029112 29260 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:32.029168 29260 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:32.029175 29260 net.cpp:131] Top shape: 100 (100)
I0428 19:59:32.029180 29260 net.cpp:131] Top shape: 100 (100)
I0428 19:59:32.029182 29260 net.cpp:139] Memory required for data: 314800
I0428 19:59:32.029186 29260 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:32.029193 29260 net.cpp:86] Creating Layer conv0
I0428 19:59:32.029196 29260 net.cpp:408] conv0 <- data
I0428 19:59:32.029201 29260 net.cpp:382] conv0 -> conv0
I0428 19:59:32.030895 29260 net.cpp:124] Setting up conv0
I0428 19:59:32.030910 29260 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:32.030915 29260 net.cpp:139] Memory required for data: 2618800
I0428 19:59:32.030922 29260 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:32.030943 29260 net.cpp:86] Creating Layer pool0
I0428 19:59:32.030947 29260 net.cpp:408] pool0 <- conv0
I0428 19:59:32.030951 29260 net.cpp:382] pool0 -> pool0
I0428 19:59:32.030988 29260 net.cpp:124] Setting up pool0
I0428 19:59:32.030997 29260 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:32.030999 29260 net.cpp:139] Memory required for data: 3194800
I0428 19:59:32.031002 29260 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:32.031011 29260 net.cpp:86] Creating Layer conv1
I0428 19:59:32.031014 29260 net.cpp:408] conv1 <- pool0
I0428 19:59:32.031019 29260 net.cpp:382] conv1 -> conv1
I0428 19:59:32.033367 29260 net.cpp:124] Setting up conv1
I0428 19:59:32.033380 29260 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:32.033383 29260 net.cpp:139] Memory required for data: 3450800
I0428 19:59:32.033391 29260 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:32.033412 29260 net.cpp:86] Creating Layer pool1
I0428 19:59:32.033416 29260 net.cpp:408] pool1 <- conv1
I0428 19:59:32.033421 29260 net.cpp:382] pool1 -> pool1
I0428 19:59:32.033464 29260 net.cpp:124] Setting up pool1
I0428 19:59:32.033471 29260 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:32.033473 29260 net.cpp:139] Memory required for data: 3514800
I0428 19:59:32.033476 29260 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:32.033483 29260 net.cpp:86] Creating Layer ip1
I0428 19:59:32.033486 29260 net.cpp:408] ip1 <- pool1
I0428 19:59:32.033491 29260 net.cpp:382] ip1 -> ip1
I0428 19:59:32.033676 29260 net.cpp:124] Setting up ip1
I0428 19:59:32.033684 29260 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:32.033697 29260 net.cpp:139] Memory required for data: 3534800
I0428 19:59:32.033704 29260 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:32.033710 29260 net.cpp:86] Creating Layer relu1
I0428 19:59:32.033712 29260 net.cpp:408] relu1 <- ip1
I0428 19:59:32.033717 29260 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:32.033888 29260 net.cpp:124] Setting up relu1
I0428 19:59:32.033897 29260 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:32.033900 29260 net.cpp:139] Memory required for data: 3554800
I0428 19:59:32.033903 29260 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:32.033910 29260 net.cpp:86] Creating Layer ip2
I0428 19:59:32.033913 29260 net.cpp:408] ip2 <- ip1
I0428 19:59:32.033920 29260 net.cpp:382] ip2 -> ip2
I0428 19:59:32.034018 29260 net.cpp:124] Setting up ip2
I0428 19:59:32.034025 29260 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:32.034035 29260 net.cpp:139] Memory required for data: 3558800
I0428 19:59:32.034040 29260 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:32.034045 29260 net.cpp:86] Creating Layer relu2
I0428 19:59:32.034049 29260 net.cpp:408] relu2 <- ip2
I0428 19:59:32.034054 29260 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:32.034201 29260 net.cpp:124] Setting up relu2
I0428 19:59:32.034209 29260 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:32.034211 29260 net.cpp:139] Memory required for data: 3562800
I0428 19:59:32.034214 29260 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:32.034220 29260 net.cpp:86] Creating Layer ip3
I0428 19:59:32.034224 29260 net.cpp:408] ip3 <- ip2
I0428 19:59:32.034227 29260 net.cpp:382] ip3 -> ip3
I0428 19:59:32.034394 29260 net.cpp:124] Setting up ip3
I0428 19:59:32.034401 29260 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:32.034404 29260 net.cpp:139] Memory required for data: 3566800
I0428 19:59:32.034411 29260 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:32.034416 29260 net.cpp:86] Creating Layer relu3
I0428 19:59:32.034420 29260 net.cpp:408] relu3 <- ip3
I0428 19:59:32.034425 29260 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:32.035241 29260 net.cpp:124] Setting up relu3
I0428 19:59:32.035254 29260 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:32.035264 29260 net.cpp:139] Memory required for data: 3570800
I0428 19:59:32.035269 29260 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:32.035274 29260 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:32.035277 29260 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:32.035281 29260 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:32.035287 29260 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:32.035327 29260 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:32.035333 29260 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:32.035346 29260 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:32.035349 29260 net.cpp:139] Memory required for data: 3578800
I0428 19:59:32.035357 29260 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:32.035362 29260 net.cpp:86] Creating Layer accuracy
I0428 19:59:32.035370 29260 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:32.035374 29260 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:32.035379 29260 net.cpp:382] accuracy -> accuracy
I0428 19:59:32.035387 29260 net.cpp:124] Setting up accuracy
I0428 19:59:32.035390 29260 net.cpp:131] Top shape: (1)
I0428 19:59:32.035393 29260 net.cpp:139] Memory required for data: 3578804
I0428 19:59:32.035396 29260 layer_factory.hpp:77] Creating layer loss
I0428 19:59:32.035400 29260 net.cpp:86] Creating Layer loss
I0428 19:59:32.035403 29260 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:32.035406 29260 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:32.035411 29260 net.cpp:382] loss -> loss
I0428 19:59:32.035418 29260 layer_factory.hpp:77] Creating layer loss
I0428 19:59:32.035681 29260 net.cpp:124] Setting up loss
I0428 19:59:32.035698 29260 net.cpp:131] Top shape: (1)
I0428 19:59:32.035718 29260 net.cpp:134]     with loss weight 1
I0428 19:59:32.035742 29260 net.cpp:139] Memory required for data: 3578808
I0428 19:59:32.035745 29260 net.cpp:200] loss needs backward computation.
I0428 19:59:32.035749 29260 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:32.035768 29260 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:32.035776 29260 net.cpp:200] relu3 needs backward computation.
I0428 19:59:32.035779 29260 net.cpp:200] ip3 needs backward computation.
I0428 19:59:32.035782 29260 net.cpp:200] relu2 needs backward computation.
I0428 19:59:32.035784 29260 net.cpp:200] ip2 needs backward computation.
I0428 19:59:32.035787 29260 net.cpp:200] relu1 needs backward computation.
I0428 19:59:32.035790 29260 net.cpp:200] ip1 needs backward computation.
I0428 19:59:32.035794 29260 net.cpp:200] pool1 needs backward computation.
I0428 19:59:32.035796 29260 net.cpp:200] conv1 needs backward computation.
I0428 19:59:32.035799 29260 net.cpp:200] pool0 needs backward computation.
I0428 19:59:32.035811 29260 net.cpp:200] conv0 needs backward computation.
I0428 19:59:32.035815 29260 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:32.035818 29260 net.cpp:202] mnist does not need backward computation.
I0428 19:59:32.035821 29260 net.cpp:244] This network produces output accuracy
I0428 19:59:32.035825 29260 net.cpp:244] This network produces output loss
I0428 19:59:32.035840 29260 net.cpp:257] Network initialization done.
I0428 19:59:32.035894 29260 solver.cpp:56] Solver scaffolding done.
I0428 19:59:32.036280 29260 caffe.cpp:248] Starting Optimization
I0428 19:59:32.036288 29260 solver.cpp:273] Solving LeNet
I0428 19:59:32.036290 29260 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:32.037075 29260 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:32.041162 29260 blocking_queue.cpp:49] Waiting for data
I0428 19:59:32.092468 29267 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:32.092974 29260 solver.cpp:398]     Test net output #0: accuracy = 0.1019
I0428 19:59:32.092993 29260 solver.cpp:398]     Test net output #1: loss = 2.29369 (* 1 = 2.29369 loss)
I0428 19:59:32.095500 29260 solver.cpp:219] Iteration 0 (0 iter/s, 0.0591831s/100 iters), loss = 2.28216
I0428 19:59:32.095523 29260 solver.cpp:238]     Train net output #0: loss = 2.28216 (* 1 = 2.28216 loss)
I0428 19:59:32.095551 29260 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:32.179174 29260 solver.cpp:219] Iteration 100 (1195.61 iter/s, 0.0836393s/100 iters), loss = 0.980063
I0428 19:59:32.179199 29260 solver.cpp:238]     Train net output #0: loss = 0.980063 (* 1 = 0.980063 loss)
I0428 19:59:32.179205 29260 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:32.262513 29260 solver.cpp:219] Iteration 200 (1200.4 iter/s, 0.0833053s/100 iters), loss = 0.360054
I0428 19:59:32.262537 29260 solver.cpp:238]     Train net output #0: loss = 0.360054 (* 1 = 0.360054 loss)
I0428 19:59:32.262558 29260 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:32.344645 29260 solver.cpp:219] Iteration 300 (1218.07 iter/s, 0.0820972s/100 iters), loss = 0.357845
I0428 19:59:32.344668 29260 solver.cpp:238]     Train net output #0: loss = 0.357845 (* 1 = 0.357845 loss)
I0428 19:59:32.344674 29260 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:32.427451 29260 solver.cpp:219] Iteration 400 (1208.11 iter/s, 0.082774s/100 iters), loss = 0.203898
I0428 19:59:32.427474 29260 solver.cpp:238]     Train net output #0: loss = 0.203898 (* 1 = 0.203898 loss)
I0428 19:59:32.427495 29260 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:32.510113 29260 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:32.562832 29267 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:32.563349 29260 solver.cpp:398]     Test net output #0: accuracy = 0.9425
I0428 19:59:32.563371 29260 solver.cpp:398]     Test net output #1: loss = 0.182664 (* 1 = 0.182664 loss)
I0428 19:59:32.564208 29260 solver.cpp:219] Iteration 500 (731.425 iter/s, 0.136719s/100 iters), loss = 0.253994
I0428 19:59:32.564262 29260 solver.cpp:238]     Train net output #0: loss = 0.253994 (* 1 = 0.253994 loss)
I0428 19:59:32.564273 29260 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:32.648206 29260 solver.cpp:219] Iteration 600 (1191.39 iter/s, 0.0839357s/100 iters), loss = 0.144056
I0428 19:59:32.648234 29260 solver.cpp:238]     Train net output #0: loss = 0.144056 (* 1 = 0.144056 loss)
I0428 19:59:32.648244 29260 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:32.731289 29260 solver.cpp:219] Iteration 700 (1204.15 iter/s, 0.0830462s/100 iters), loss = 0.152253
I0428 19:59:32.731329 29260 solver.cpp:238]     Train net output #0: loss = 0.152253 (* 1 = 0.152253 loss)
I0428 19:59:32.731336 29260 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:32.812913 29260 solver.cpp:219] Iteration 800 (1225.65 iter/s, 0.0815893s/100 iters), loss = 0.344541
I0428 19:59:32.812954 29260 solver.cpp:238]     Train net output #0: loss = 0.34454 (* 1 = 0.34454 loss)
I0428 19:59:32.812961 29260 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:32.898708 29260 solver.cpp:219] Iteration 900 (1166.03 iter/s, 0.0857611s/100 iters), loss = 0.22066
I0428 19:59:32.898749 29260 solver.cpp:238]     Train net output #0: loss = 0.22066 (* 1 = 0.22066 loss)
I0428 19:59:32.898756 29260 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:32.927191 29266 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:32.979568 29260 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:32.980460 29260 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:32.980988 29260 solver.cpp:311] Iteration 1000, loss = 0.102351
I0428 19:59:32.981004 29260 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:33.032610 29267 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:33.033109 29260 solver.cpp:398]     Test net output #0: accuracy = 0.9703
I0428 19:59:33.033130 29260 solver.cpp:398]     Test net output #1: loss = 0.0951622 (* 1 = 0.0951622 loss)
I0428 19:59:33.033135 29260 solver.cpp:316] Optimization Done.
I0428 19:59:33.033139 29260 caffe.cpp:259] Optimization Done.
