I0428 19:46:26.593626 26002 caffe.cpp:218] Using GPUs 0
I0428 19:46:26.629075 26002 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:27.129286 26002 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test492.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:27.129415 26002 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test492.prototxt
I0428 19:46:27.129822 26002 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:27.129842 26002 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:27.129941 26002 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:27.130018 26002 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:27.130116 26002 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:27.130139 26002 net.cpp:86] Creating Layer mnist
I0428 19:46:27.130146 26002 net.cpp:382] mnist -> data
I0428 19:46:27.130168 26002 net.cpp:382] mnist -> label
I0428 19:46:27.131216 26002 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:27.133599 26002 net.cpp:124] Setting up mnist
I0428 19:46:27.133616 26002 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:27.133622 26002 net.cpp:131] Top shape: 64 (64)
I0428 19:46:27.133625 26002 net.cpp:139] Memory required for data: 200960
I0428 19:46:27.133632 26002 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:27.133673 26002 net.cpp:86] Creating Layer conv0
I0428 19:46:27.133694 26002 net.cpp:408] conv0 <- data
I0428 19:46:27.133708 26002 net.cpp:382] conv0 -> conv0
I0428 19:46:27.421036 26002 net.cpp:124] Setting up conv0
I0428 19:46:27.421066 26002 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:27.421072 26002 net.cpp:139] Memory required for data: 495872
I0428 19:46:27.421089 26002 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:27.421105 26002 net.cpp:86] Creating Layer pool0
I0428 19:46:27.421109 26002 net.cpp:408] pool0 <- conv0
I0428 19:46:27.421116 26002 net.cpp:382] pool0 -> pool0
I0428 19:46:27.421171 26002 net.cpp:124] Setting up pool0
I0428 19:46:27.421177 26002 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:27.421181 26002 net.cpp:139] Memory required for data: 569600
I0428 19:46:27.421185 26002 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:27.421197 26002 net.cpp:86] Creating Layer conv1
I0428 19:46:27.421201 26002 net.cpp:408] conv1 <- pool0
I0428 19:46:27.421207 26002 net.cpp:382] conv1 -> conv1
I0428 19:46:27.424336 26002 net.cpp:124] Setting up conv1
I0428 19:46:27.424355 26002 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:27.424358 26002 net.cpp:139] Memory required for data: 2208000
I0428 19:46:27.424371 26002 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:27.424381 26002 net.cpp:86] Creating Layer pool1
I0428 19:46:27.424384 26002 net.cpp:408] pool1 <- conv1
I0428 19:46:27.424391 26002 net.cpp:382] pool1 -> pool1
I0428 19:46:27.424437 26002 net.cpp:124] Setting up pool1
I0428 19:46:27.424445 26002 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:27.424448 26002 net.cpp:139] Memory required for data: 2617600
I0428 19:46:27.424453 26002 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:27.424460 26002 net.cpp:86] Creating Layer ip1
I0428 19:46:27.424464 26002 net.cpp:408] ip1 <- pool1
I0428 19:46:27.424470 26002 net.cpp:382] ip1 -> ip1
I0428 19:46:27.424875 26002 net.cpp:124] Setting up ip1
I0428 19:46:27.424883 26002 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:27.424887 26002 net.cpp:139] Memory required for data: 2624000
I0428 19:46:27.424896 26002 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:27.424902 26002 net.cpp:86] Creating Layer relu1
I0428 19:46:27.424906 26002 net.cpp:408] relu1 <- ip1
I0428 19:46:27.424912 26002 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:27.425115 26002 net.cpp:124] Setting up relu1
I0428 19:46:27.425125 26002 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:27.425128 26002 net.cpp:139] Memory required for data: 2630400
I0428 19:46:27.425132 26002 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:27.425142 26002 net.cpp:86] Creating Layer ip2
I0428 19:46:27.425145 26002 net.cpp:408] ip2 <- ip1
I0428 19:46:27.425151 26002 net.cpp:382] ip2 -> ip2
I0428 19:46:27.425272 26002 net.cpp:124] Setting up ip2
I0428 19:46:27.425281 26002 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:27.425283 26002 net.cpp:139] Memory required for data: 2636800
I0428 19:46:27.425290 26002 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:27.425299 26002 net.cpp:86] Creating Layer relu2
I0428 19:46:27.425303 26002 net.cpp:408] relu2 <- ip2
I0428 19:46:27.425308 26002 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:27.426159 26002 net.cpp:124] Setting up relu2
I0428 19:46:27.426175 26002 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:27.426180 26002 net.cpp:139] Memory required for data: 2643200
I0428 19:46:27.426184 26002 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:27.426192 26002 net.cpp:86] Creating Layer ip3
I0428 19:46:27.426196 26002 net.cpp:408] ip3 <- ip2
I0428 19:46:27.426204 26002 net.cpp:382] ip3 -> ip3
I0428 19:46:27.426329 26002 net.cpp:124] Setting up ip3
I0428 19:46:27.426338 26002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:27.426342 26002 net.cpp:139] Memory required for data: 2645760
I0428 19:46:27.426352 26002 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:27.426358 26002 net.cpp:86] Creating Layer relu3
I0428 19:46:27.426362 26002 net.cpp:408] relu3 <- ip3
I0428 19:46:27.426368 26002 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:27.426570 26002 net.cpp:124] Setting up relu3
I0428 19:46:27.426580 26002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:27.426584 26002 net.cpp:139] Memory required for data: 2648320
I0428 19:46:27.426589 26002 layer_factory.hpp:77] Creating layer loss
I0428 19:46:27.426596 26002 net.cpp:86] Creating Layer loss
I0428 19:46:27.426599 26002 net.cpp:408] loss <- ip3
I0428 19:46:27.426604 26002 net.cpp:408] loss <- label
I0428 19:46:27.426610 26002 net.cpp:382] loss -> loss
I0428 19:46:27.426627 26002 layer_factory.hpp:77] Creating layer loss
I0428 19:46:27.426899 26002 net.cpp:124] Setting up loss
I0428 19:46:27.426909 26002 net.cpp:131] Top shape: (1)
I0428 19:46:27.426913 26002 net.cpp:134]     with loss weight 1
I0428 19:46:27.426929 26002 net.cpp:139] Memory required for data: 2648324
I0428 19:46:27.426934 26002 net.cpp:200] loss needs backward computation.
I0428 19:46:27.426939 26002 net.cpp:200] relu3 needs backward computation.
I0428 19:46:27.426941 26002 net.cpp:200] ip3 needs backward computation.
I0428 19:46:27.426945 26002 net.cpp:200] relu2 needs backward computation.
I0428 19:46:27.426949 26002 net.cpp:200] ip2 needs backward computation.
I0428 19:46:27.426952 26002 net.cpp:200] relu1 needs backward computation.
I0428 19:46:27.426955 26002 net.cpp:200] ip1 needs backward computation.
I0428 19:46:27.426959 26002 net.cpp:200] pool1 needs backward computation.
I0428 19:46:27.426964 26002 net.cpp:200] conv1 needs backward computation.
I0428 19:46:27.426967 26002 net.cpp:200] pool0 needs backward computation.
I0428 19:46:27.426970 26002 net.cpp:200] conv0 needs backward computation.
I0428 19:46:27.426975 26002 net.cpp:202] mnist does not need backward computation.
I0428 19:46:27.426978 26002 net.cpp:244] This network produces output loss
I0428 19:46:27.426990 26002 net.cpp:257] Network initialization done.
I0428 19:46:27.427371 26002 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test492.prototxt
I0428 19:46:27.427402 26002 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:27.427510 26002 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:27.427603 26002 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:27.427655 26002 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:27.427670 26002 net.cpp:86] Creating Layer mnist
I0428 19:46:27.427675 26002 net.cpp:382] mnist -> data
I0428 19:46:27.427685 26002 net.cpp:382] mnist -> label
I0428 19:46:27.427784 26002 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:27.429966 26002 net.cpp:124] Setting up mnist
I0428 19:46:27.429982 26002 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:27.429988 26002 net.cpp:131] Top shape: 100 (100)
I0428 19:46:27.429992 26002 net.cpp:139] Memory required for data: 314000
I0428 19:46:27.429996 26002 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:27.430004 26002 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:27.430008 26002 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:27.430014 26002 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:27.430022 26002 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:27.430085 26002 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:27.430093 26002 net.cpp:131] Top shape: 100 (100)
I0428 19:46:27.430096 26002 net.cpp:131] Top shape: 100 (100)
I0428 19:46:27.430099 26002 net.cpp:139] Memory required for data: 314800
I0428 19:46:27.430104 26002 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:27.430114 26002 net.cpp:86] Creating Layer conv0
I0428 19:46:27.430117 26002 net.cpp:408] conv0 <- data
I0428 19:46:27.430122 26002 net.cpp:382] conv0 -> conv0
I0428 19:46:27.432032 26002 net.cpp:124] Setting up conv0
I0428 19:46:27.432049 26002 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:27.432054 26002 net.cpp:139] Memory required for data: 775600
I0428 19:46:27.432065 26002 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:27.432072 26002 net.cpp:86] Creating Layer pool0
I0428 19:46:27.432076 26002 net.cpp:408] pool0 <- conv0
I0428 19:46:27.432082 26002 net.cpp:382] pool0 -> pool0
I0428 19:46:27.432126 26002 net.cpp:124] Setting up pool0
I0428 19:46:27.432132 26002 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:27.432135 26002 net.cpp:139] Memory required for data: 890800
I0428 19:46:27.432138 26002 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:27.432148 26002 net.cpp:86] Creating Layer conv1
I0428 19:46:27.432152 26002 net.cpp:408] conv1 <- pool0
I0428 19:46:27.432157 26002 net.cpp:382] conv1 -> conv1
I0428 19:46:27.433835 26002 net.cpp:124] Setting up conv1
I0428 19:46:27.433851 26002 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:27.433857 26002 net.cpp:139] Memory required for data: 3450800
I0428 19:46:27.433867 26002 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:27.433876 26002 net.cpp:86] Creating Layer pool1
I0428 19:46:27.433879 26002 net.cpp:408] pool1 <- conv1
I0428 19:46:27.433887 26002 net.cpp:382] pool1 -> pool1
I0428 19:46:27.433928 26002 net.cpp:124] Setting up pool1
I0428 19:46:27.433941 26002 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:27.433945 26002 net.cpp:139] Memory required for data: 4090800
I0428 19:46:27.433949 26002 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:27.433956 26002 net.cpp:86] Creating Layer ip1
I0428 19:46:27.433960 26002 net.cpp:408] ip1 <- pool1
I0428 19:46:27.433966 26002 net.cpp:382] ip1 -> ip1
I0428 19:46:27.434412 26002 net.cpp:124] Setting up ip1
I0428 19:46:27.434422 26002 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:27.434439 26002 net.cpp:139] Memory required for data: 4100800
I0428 19:46:27.434449 26002 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:27.434455 26002 net.cpp:86] Creating Layer relu1
I0428 19:46:27.434459 26002 net.cpp:408] relu1 <- ip1
I0428 19:46:27.434465 26002 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:27.434650 26002 net.cpp:124] Setting up relu1
I0428 19:46:27.434660 26002 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:27.434664 26002 net.cpp:139] Memory required for data: 4110800
I0428 19:46:27.434669 26002 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:27.434677 26002 net.cpp:86] Creating Layer ip2
I0428 19:46:27.434682 26002 net.cpp:408] ip2 <- ip1
I0428 19:46:27.434687 26002 net.cpp:382] ip2 -> ip2
I0428 19:46:27.434806 26002 net.cpp:124] Setting up ip2
I0428 19:46:27.434814 26002 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:27.434818 26002 net.cpp:139] Memory required for data: 4120800
I0428 19:46:27.434825 26002 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:27.434833 26002 net.cpp:86] Creating Layer relu2
I0428 19:46:27.434836 26002 net.cpp:408] relu2 <- ip2
I0428 19:46:27.434841 26002 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:27.435014 26002 net.cpp:124] Setting up relu2
I0428 19:46:27.435024 26002 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:27.435027 26002 net.cpp:139] Memory required for data: 4130800
I0428 19:46:27.435030 26002 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:27.435037 26002 net.cpp:86] Creating Layer ip3
I0428 19:46:27.435041 26002 net.cpp:408] ip3 <- ip2
I0428 19:46:27.435047 26002 net.cpp:382] ip3 -> ip3
I0428 19:46:27.435169 26002 net.cpp:124] Setting up ip3
I0428 19:46:27.435176 26002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:27.435180 26002 net.cpp:139] Memory required for data: 4134800
I0428 19:46:27.435189 26002 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:27.435194 26002 net.cpp:86] Creating Layer relu3
I0428 19:46:27.435199 26002 net.cpp:408] relu3 <- ip3
I0428 19:46:27.435204 26002 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:27.436136 26002 net.cpp:124] Setting up relu3
I0428 19:46:27.436151 26002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:27.436154 26002 net.cpp:139] Memory required for data: 4138800
I0428 19:46:27.436158 26002 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:27.436167 26002 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:27.436170 26002 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:27.436177 26002 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:27.436184 26002 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:27.436228 26002 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:27.436236 26002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:27.436241 26002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:27.436244 26002 net.cpp:139] Memory required for data: 4146800
I0428 19:46:27.436249 26002 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:27.436254 26002 net.cpp:86] Creating Layer accuracy
I0428 19:46:27.436259 26002 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:27.436264 26002 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:27.436269 26002 net.cpp:382] accuracy -> accuracy
I0428 19:46:27.436276 26002 net.cpp:124] Setting up accuracy
I0428 19:46:27.436281 26002 net.cpp:131] Top shape: (1)
I0428 19:46:27.436285 26002 net.cpp:139] Memory required for data: 4146804
I0428 19:46:27.436290 26002 layer_factory.hpp:77] Creating layer loss
I0428 19:46:27.436295 26002 net.cpp:86] Creating Layer loss
I0428 19:46:27.436300 26002 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:27.436305 26002 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:27.436309 26002 net.cpp:382] loss -> loss
I0428 19:46:27.436316 26002 layer_factory.hpp:77] Creating layer loss
I0428 19:46:27.436581 26002 net.cpp:124] Setting up loss
I0428 19:46:27.436594 26002 net.cpp:131] Top shape: (1)
I0428 19:46:27.436597 26002 net.cpp:134]     with loss weight 1
I0428 19:46:27.436617 26002 net.cpp:139] Memory required for data: 4146808
I0428 19:46:27.436622 26002 net.cpp:200] loss needs backward computation.
I0428 19:46:27.436627 26002 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:27.436632 26002 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:27.436635 26002 net.cpp:200] relu3 needs backward computation.
I0428 19:46:27.436640 26002 net.cpp:200] ip3 needs backward computation.
I0428 19:46:27.436643 26002 net.cpp:200] relu2 needs backward computation.
I0428 19:46:27.436646 26002 net.cpp:200] ip2 needs backward computation.
I0428 19:46:27.436650 26002 net.cpp:200] relu1 needs backward computation.
I0428 19:46:27.436655 26002 net.cpp:200] ip1 needs backward computation.
I0428 19:46:27.436658 26002 net.cpp:200] pool1 needs backward computation.
I0428 19:46:27.436662 26002 net.cpp:200] conv1 needs backward computation.
I0428 19:46:27.436666 26002 net.cpp:200] pool0 needs backward computation.
I0428 19:46:27.436671 26002 net.cpp:200] conv0 needs backward computation.
I0428 19:46:27.436676 26002 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:27.436679 26002 net.cpp:202] mnist does not need backward computation.
I0428 19:46:27.436683 26002 net.cpp:244] This network produces output accuracy
I0428 19:46:27.436687 26002 net.cpp:244] This network produces output loss
I0428 19:46:27.436700 26002 net.cpp:257] Network initialization done.
I0428 19:46:27.436750 26002 solver.cpp:56] Solver scaffolding done.
I0428 19:46:27.437193 26002 caffe.cpp:248] Starting Optimization
I0428 19:46:27.437201 26002 solver.cpp:273] Solving LeNet
I0428 19:46:27.437204 26002 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:27.438199 26002 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:27.443136 26002 blocking_queue.cpp:49] Waiting for data
I0428 19:46:27.505826 26009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:27.506446 26002 solver.cpp:398]     Test net output #0: accuracy = 0.1082
I0428 19:46:27.506470 26002 solver.cpp:398]     Test net output #1: loss = 2.32317 (* 1 = 2.32317 loss)
I0428 19:46:27.510453 26002 solver.cpp:219] Iteration 0 (-4.59274e-31 iter/s, 0.0732161s/100 iters), loss = 2.34363
I0428 19:46:27.510484 26002 solver.cpp:238]     Train net output #0: loss = 2.34363 (* 1 = 2.34363 loss)
I0428 19:46:27.510499 26002 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:27.680804 26002 solver.cpp:219] Iteration 100 (587.198 iter/s, 0.1703s/100 iters), loss = 0.472591
I0428 19:46:27.680871 26002 solver.cpp:238]     Train net output #0: loss = 0.472591 (* 1 = 0.472591 loss)
I0428 19:46:27.680884 26002 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:27.872805 26002 solver.cpp:219] Iteration 200 (521.053 iter/s, 0.191919s/100 iters), loss = 0.260046
I0428 19:46:27.872876 26002 solver.cpp:238]     Train net output #0: loss = 0.260046 (* 1 = 0.260046 loss)
I0428 19:46:27.872892 26002 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:28.059869 26002 solver.cpp:219] Iteration 300 (534.827 iter/s, 0.186976s/100 iters), loss = 0.252053
I0428 19:46:28.059919 26002 solver.cpp:238]     Train net output #0: loss = 0.252053 (* 1 = 0.252053 loss)
I0428 19:46:28.059933 26002 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:28.240622 26002 solver.cpp:219] Iteration 400 (553.44 iter/s, 0.180688s/100 iters), loss = 0.110016
I0428 19:46:28.240670 26002 solver.cpp:238]     Train net output #0: loss = 0.110016 (* 1 = 0.110016 loss)
I0428 19:46:28.240682 26002 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:28.421644 26002 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:28.484230 26009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:28.486143 26002 solver.cpp:398]     Test net output #0: accuracy = 0.9524
I0428 19:46:28.486173 26002 solver.cpp:398]     Test net output #1: loss = 0.150539 (* 1 = 0.150539 loss)
I0428 19:46:28.487696 26002 solver.cpp:219] Iteration 500 (404.841 iter/s, 0.24701s/100 iters), loss = 0.0895734
I0428 19:46:28.487747 26002 solver.cpp:238]     Train net output #0: loss = 0.0895734 (* 1 = 0.0895734 loss)
I0428 19:46:28.487757 26002 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:28.655289 26002 solver.cpp:219] Iteration 600 (596.917 iter/s, 0.167527s/100 iters), loss = 0.105001
I0428 19:46:28.655333 26002 solver.cpp:238]     Train net output #0: loss = 0.105001 (* 1 = 0.105001 loss)
I0428 19:46:28.655344 26002 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:28.835121 26002 solver.cpp:219] Iteration 700 (556.259 iter/s, 0.179772s/100 iters), loss = 0.197741
I0428 19:46:28.835166 26002 solver.cpp:238]     Train net output #0: loss = 0.197741 (* 1 = 0.197741 loss)
I0428 19:46:28.835178 26002 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:29.022708 26002 solver.cpp:219] Iteration 800 (533.265 iter/s, 0.187524s/100 iters), loss = 0.26896
I0428 19:46:29.022760 26002 solver.cpp:238]     Train net output #0: loss = 0.26896 (* 1 = 0.26896 loss)
I0428 19:46:29.022773 26002 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:29.208645 26002 solver.cpp:219] Iteration 900 (538.015 iter/s, 0.185868s/100 iters), loss = 0.189698
I0428 19:46:29.208700 26002 solver.cpp:238]     Train net output #0: loss = 0.189698 (* 1 = 0.189698 loss)
I0428 19:46:29.208714 26002 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:29.273402 26008 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:29.387725 26002 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:29.389837 26002 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:29.390869 26002 solver.cpp:311] Iteration 1000, loss = 0.132408
I0428 19:46:29.390892 26002 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:29.449512 26009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:29.450861 26002 solver.cpp:398]     Test net output #0: accuracy = 0.9699
I0428 19:46:29.450886 26002 solver.cpp:398]     Test net output #1: loss = 0.0943804 (* 1 = 0.0943804 loss)
I0428 19:46:29.450892 26002 solver.cpp:316] Optimization Done.
I0428 19:46:29.450896 26002 caffe.cpp:259] Optimization Done.
