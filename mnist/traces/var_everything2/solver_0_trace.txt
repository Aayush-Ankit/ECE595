I0428 19:27:41.555292 21373 caffe.cpp:218] Using GPUs 0
I0428 19:27:41.597213 21373 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:27:42.128878 21373 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test0.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:27:42.129017 21373 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test0.prototxt
I0428 19:27:42.129253 21373 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:27:42.129266 21373 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:27:42.129317 21373 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:27:42.129371 21373 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:42.129473 21373 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:27:42.129495 21373 net.cpp:86] Creating Layer mnist
I0428 19:27:42.129504 21373 net.cpp:382] mnist -> data
I0428 19:27:42.129526 21373 net.cpp:382] mnist -> label
I0428 19:27:42.130617 21373 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:27:42.133075 21373 net.cpp:124] Setting up mnist
I0428 19:27:42.133093 21373 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:27:42.133100 21373 net.cpp:131] Top shape: 64 (64)
I0428 19:27:42.133105 21373 net.cpp:139] Memory required for data: 200960
I0428 19:27:42.133111 21373 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:42.133121 21373 net.cpp:86] Creating Layer ip1
I0428 19:27:42.133126 21373 net.cpp:408] ip1 <- data
I0428 19:27:42.133136 21373 net.cpp:382] ip1 -> ip1
I0428 19:27:42.134454 21373 net.cpp:124] Setting up ip1
I0428 19:27:42.134469 21373 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:42.134474 21373 net.cpp:139] Memory required for data: 203520
I0428 19:27:42.134490 21373 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:42.134498 21373 net.cpp:86] Creating Layer relu1
I0428 19:27:42.134502 21373 net.cpp:408] relu1 <- ip1
I0428 19:27:42.134507 21373 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:42.388187 21373 net.cpp:124] Setting up relu1
I0428 19:27:42.388213 21373 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:42.388217 21373 net.cpp:139] Memory required for data: 206080
I0428 19:27:42.388222 21373 layer_factory.hpp:77] Creating layer loss
I0428 19:27:42.388236 21373 net.cpp:86] Creating Layer loss
I0428 19:27:42.388240 21373 net.cpp:408] loss <- ip1
I0428 19:27:42.388247 21373 net.cpp:408] loss <- label
I0428 19:27:42.388252 21373 net.cpp:382] loss -> loss
I0428 19:27:42.388283 21373 layer_factory.hpp:77] Creating layer loss
I0428 19:27:42.390020 21373 net.cpp:124] Setting up loss
I0428 19:27:42.390034 21373 net.cpp:131] Top shape: (1)
I0428 19:27:42.390053 21373 net.cpp:134]     with loss weight 1
I0428 19:27:42.390069 21373 net.cpp:139] Memory required for data: 206084
I0428 19:27:42.390071 21373 net.cpp:200] loss needs backward computation.
I0428 19:27:42.390075 21373 net.cpp:200] relu1 needs backward computation.
I0428 19:27:42.390079 21373 net.cpp:200] ip1 needs backward computation.
I0428 19:27:42.390099 21373 net.cpp:202] mnist does not need backward computation.
I0428 19:27:42.390101 21373 net.cpp:244] This network produces output loss
I0428 19:27:42.390107 21373 net.cpp:257] Network initialization done.
I0428 19:27:42.390275 21373 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test0.prototxt
I0428 19:27:42.390295 21373 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:27:42.390346 21373 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:27:42.390390 21373 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:42.390436 21373 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:27:42.390450 21373 net.cpp:86] Creating Layer mnist
I0428 19:27:42.390455 21373 net.cpp:382] mnist -> data
I0428 19:27:42.390461 21373 net.cpp:382] mnist -> label
I0428 19:27:42.390544 21373 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:27:42.392474 21373 net.cpp:124] Setting up mnist
I0428 19:27:42.392503 21373 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:27:42.392509 21373 net.cpp:131] Top shape: 100 (100)
I0428 19:27:42.392513 21373 net.cpp:139] Memory required for data: 314000
I0428 19:27:42.392515 21373 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:27:42.392557 21373 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:27:42.392561 21373 net.cpp:408] label_mnist_1_split <- label
I0428 19:27:42.392566 21373 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:27:42.392573 21373 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:27:42.392613 21373 net.cpp:124] Setting up label_mnist_1_split
I0428 19:27:42.392621 21373 net.cpp:131] Top shape: 100 (100)
I0428 19:27:42.392623 21373 net.cpp:131] Top shape: 100 (100)
I0428 19:27:42.392627 21373 net.cpp:139] Memory required for data: 314800
I0428 19:27:42.392629 21373 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:42.392637 21373 net.cpp:86] Creating Layer ip1
I0428 19:27:42.392639 21373 net.cpp:408] ip1 <- data
I0428 19:27:42.392643 21373 net.cpp:382] ip1 -> ip1
I0428 19:27:42.392916 21373 net.cpp:124] Setting up ip1
I0428 19:27:42.392928 21373 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:42.392932 21373 net.cpp:139] Memory required for data: 318800
I0428 19:27:42.392942 21373 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:42.392948 21373 net.cpp:86] Creating Layer relu1
I0428 19:27:42.392952 21373 net.cpp:408] relu1 <- ip1
I0428 19:27:42.392956 21373 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:42.393191 21373 net.cpp:124] Setting up relu1
I0428 19:27:42.393199 21373 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:42.393203 21373 net.cpp:139] Memory required for data: 322800
I0428 19:27:42.393205 21373 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:27:42.393210 21373 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:27:42.393213 21373 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:27:42.393218 21373 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:27:42.393223 21373 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:27:42.393254 21373 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:27:42.393270 21373 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:42.393273 21373 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:42.393276 21373 net.cpp:139] Memory required for data: 330800
I0428 19:27:42.393280 21373 layer_factory.hpp:77] Creating layer accuracy
I0428 19:27:42.393283 21373 net.cpp:86] Creating Layer accuracy
I0428 19:27:42.393286 21373 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:27:42.393290 21373 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:27:42.393295 21373 net.cpp:382] accuracy -> accuracy
I0428 19:27:42.393301 21373 net.cpp:124] Setting up accuracy
I0428 19:27:42.393304 21373 net.cpp:131] Top shape: (1)
I0428 19:27:42.393307 21373 net.cpp:139] Memory required for data: 330804
I0428 19:27:42.393309 21373 layer_factory.hpp:77] Creating layer loss
I0428 19:27:42.393313 21373 net.cpp:86] Creating Layer loss
I0428 19:27:42.393316 21373 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:27:42.393319 21373 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:27:42.393323 21373 net.cpp:382] loss -> loss
I0428 19:27:42.393329 21373 layer_factory.hpp:77] Creating layer loss
I0428 19:27:42.393558 21373 net.cpp:124] Setting up loss
I0428 19:27:42.393566 21373 net.cpp:131] Top shape: (1)
I0428 19:27:42.393569 21373 net.cpp:134]     with loss weight 1
I0428 19:27:42.393575 21373 net.cpp:139] Memory required for data: 330808
I0428 19:27:42.393579 21373 net.cpp:200] loss needs backward computation.
I0428 19:27:42.393582 21373 net.cpp:202] accuracy does not need backward computation.
I0428 19:27:42.393586 21373 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:27:42.393589 21373 net.cpp:200] relu1 needs backward computation.
I0428 19:27:42.393592 21373 net.cpp:200] ip1 needs backward computation.
I0428 19:27:42.393595 21373 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:27:42.393599 21373 net.cpp:202] mnist does not need backward computation.
I0428 19:27:42.393602 21373 net.cpp:244] This network produces output accuracy
I0428 19:27:42.393605 21373 net.cpp:244] This network produces output loss
I0428 19:27:42.393612 21373 net.cpp:257] Network initialization done.
I0428 19:27:42.393633 21373 solver.cpp:56] Solver scaffolding done.
I0428 19:27:42.393719 21373 caffe.cpp:248] Starting Optimization
I0428 19:27:42.393725 21373 solver.cpp:273] Solving LeNet
I0428 19:27:42.393729 21373 solver.cpp:274] Learning Rate Policy: inv
I0428 19:27:42.393770 21373 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:27:42.393810 21373 blocking_queue.cpp:49] Waiting for data
I0428 19:27:42.458117 21382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:42.458483 21373 solver.cpp:398]     Test net output #0: accuracy = 0.1053
I0428 19:27:42.458504 21373 solver.cpp:398]     Test net output #1: loss = 2.32618 (* 1 = 2.32618 loss)
I0428 19:27:42.458900 21373 solver.cpp:219] Iteration 0 (0 iter/s, 0.0651488s/100 iters), loss = 2.34443
I0428 19:27:42.458922 21373 solver.cpp:238]     Train net output #0: loss = 2.34443 (* 1 = 2.34443 loss)
I0428 19:27:42.458932 21373 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:27:42.515420 21373 solver.cpp:219] Iteration 100 (1770.37 iter/s, 0.0564853s/100 iters), loss = 0.55541
I0428 19:27:42.515467 21373 solver.cpp:238]     Train net output #0: loss = 0.55541 (* 1 = 0.55541 loss)
I0428 19:27:42.515480 21373 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:27:42.561444 21373 solver.cpp:219] Iteration 200 (2175.26 iter/s, 0.0459715s/100 iters), loss = 0.462462
I0428 19:27:42.561478 21373 solver.cpp:238]     Train net output #0: loss = 0.462462 (* 1 = 0.462462 loss)
I0428 19:27:42.561489 21373 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:27:42.601641 21373 solver.cpp:219] Iteration 300 (2490.28 iter/s, 0.0401562s/100 iters), loss = 0.514239
I0428 19:27:42.601670 21373 solver.cpp:238]     Train net output #0: loss = 0.514239 (* 1 = 0.514239 loss)
I0428 19:27:42.601680 21373 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:27:42.640858 21373 solver.cpp:219] Iteration 400 (2552.24 iter/s, 0.0391813s/100 iters), loss = 0.348986
I0428 19:27:42.640884 21373 solver.cpp:238]     Train net output #0: loss = 0.348986 (* 1 = 0.348986 loss)
I0428 19:27:42.640895 21373 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:27:42.680254 21373 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:27:42.737794 21382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:42.738159 21373 solver.cpp:398]     Test net output #0: accuracy = 0.8981
I0428 19:27:42.738185 21373 solver.cpp:398]     Test net output #1: loss = 0.380579 (* 1 = 0.380579 loss)
I0428 19:27:42.738484 21373 solver.cpp:219] Iteration 500 (1024.69 iter/s, 0.0975902s/100 iters), loss = 0.430682
I0428 19:27:42.738531 21373 solver.cpp:238]     Train net output #0: loss = 0.430682 (* 1 = 0.430682 loss)
I0428 19:27:42.738541 21373 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:27:42.794864 21373 solver.cpp:219] Iteration 600 (1775.37 iter/s, 0.0563264s/100 iters), loss = 0.286773
I0428 19:27:42.794889 21373 solver.cpp:238]     Train net output #0: loss = 0.286773 (* 1 = 0.286773 loss)
I0428 19:27:42.794896 21373 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:27:42.841192 21373 solver.cpp:219] Iteration 700 (2160.11 iter/s, 0.046294s/100 iters), loss = 0.503121
I0428 19:27:42.841224 21373 solver.cpp:238]     Train net output #0: loss = 0.503121 (* 1 = 0.503121 loss)
I0428 19:27:42.841231 21373 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:27:42.881712 21373 solver.cpp:219] Iteration 800 (2470.31 iter/s, 0.0404808s/100 iters), loss = 0.4101
I0428 19:27:42.881742 21373 solver.cpp:238]     Train net output #0: loss = 0.4101 (* 1 = 0.4101 loss)
I0428 19:27:42.881752 21373 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:27:42.886888 21373 blocking_queue.cpp:49] Waiting for data
I0428 19:27:42.921828 21373 solver.cpp:219] Iteration 900 (2495.43 iter/s, 0.0400732s/100 iters), loss = 0.467381
I0428 19:27:42.921885 21373 solver.cpp:238]     Train net output #0: loss = 0.467381 (* 1 = 0.467381 loss)
I0428 19:27:42.921901 21373 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:27:42.936463 21381 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:42.961894 21373 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:27:42.962829 21373 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:27:42.963649 21373 solver.cpp:311] Iteration 1000, loss = 0.340641
I0428 19:27:42.963675 21373 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:27:43.040787 21382 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:43.041218 21373 solver.cpp:398]     Test net output #0: accuracy = 0.9057
I0428 19:27:43.041256 21373 solver.cpp:398]     Test net output #1: loss = 0.342697 (* 1 = 0.342697 loss)
I0428 19:27:43.041265 21373 solver.cpp:316] Optimization Done.
I0428 19:27:43.041275 21373 caffe.cpp:259] Optimization Done.
