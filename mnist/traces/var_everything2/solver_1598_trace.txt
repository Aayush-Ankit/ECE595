I0428 20:34:01.408370  4405 caffe.cpp:218] Using GPUs 0
I0428 20:34:01.438273  4405 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:01.887850  4405 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1598.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:01.887975  4405 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1598.prototxt
I0428 20:34:01.888300  4405 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:01.888315  4405 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:01.888394  4405 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:34:01.888474  4405 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:01.888556  4405 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:01.888574  4405 net.cpp:86] Creating Layer mnist
I0428 20:34:01.888582  4405 net.cpp:382] mnist -> data
I0428 20:34:01.888600  4405 net.cpp:382] mnist -> label
I0428 20:34:01.889592  4405 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:01.891866  4405 net.cpp:124] Setting up mnist
I0428 20:34:01.891880  4405 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:01.891887  4405 net.cpp:131] Top shape: 64 (64)
I0428 20:34:01.891891  4405 net.cpp:139] Memory required for data: 200960
I0428 20:34:01.891896  4405 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:01.891927  4405 net.cpp:86] Creating Layer conv0
I0428 20:34:01.891945  4405 net.cpp:408] conv0 <- data
I0428 20:34:01.891958  4405 net.cpp:382] conv0 -> conv0
I0428 20:34:02.122470  4405 net.cpp:124] Setting up conv0
I0428 20:34:02.122498  4405 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:02.122500  4405 net.cpp:139] Memory required for data: 14946560
I0428 20:34:02.122515  4405 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:02.122526  4405 net.cpp:86] Creating Layer pool0
I0428 20:34:02.122530  4405 net.cpp:408] pool0 <- conv0
I0428 20:34:02.122535  4405 net.cpp:382] pool0 -> pool0
I0428 20:34:02.122594  4405 net.cpp:124] Setting up pool0
I0428 20:34:02.122601  4405 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:02.122603  4405 net.cpp:139] Memory required for data: 18632960
I0428 20:34:02.122606  4405 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:02.122615  4405 net.cpp:86] Creating Layer conv1
I0428 20:34:02.122618  4405 net.cpp:408] conv1 <- pool0
I0428 20:34:02.122623  4405 net.cpp:382] conv1 -> conv1
I0428 20:34:02.124807  4405 net.cpp:124] Setting up conv1
I0428 20:34:02.124856  4405 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:34:02.124861  4405 net.cpp:139] Memory required for data: 19042560
I0428 20:34:02.124869  4405 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:02.124878  4405 net.cpp:86] Creating Layer pool1
I0428 20:34:02.124881  4405 net.cpp:408] pool1 <- conv1
I0428 20:34:02.124886  4405 net.cpp:382] pool1 -> pool1
I0428 20:34:02.124941  4405 net.cpp:124] Setting up pool1
I0428 20:34:02.124956  4405 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:34:02.124960  4405 net.cpp:139] Memory required for data: 19144960
I0428 20:34:02.124963  4405 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:02.124969  4405 net.cpp:86] Creating Layer ip1
I0428 20:34:02.124974  4405 net.cpp:408] ip1 <- pool1
I0428 20:34:02.124977  4405 net.cpp:382] ip1 -> ip1
I0428 20:34:02.125243  4405 net.cpp:124] Setting up ip1
I0428 20:34:02.125252  4405 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:02.125255  4405 net.cpp:139] Memory required for data: 19157760
I0428 20:34:02.125262  4405 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:02.125268  4405 net.cpp:86] Creating Layer relu1
I0428 20:34:02.125272  4405 net.cpp:408] relu1 <- ip1
I0428 20:34:02.125275  4405 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:02.125491  4405 net.cpp:124] Setting up relu1
I0428 20:34:02.125500  4405 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:02.125504  4405 net.cpp:139] Memory required for data: 19170560
I0428 20:34:02.125507  4405 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:02.125514  4405 net.cpp:86] Creating Layer ip2
I0428 20:34:02.125516  4405 net.cpp:408] ip2 <- ip1
I0428 20:34:02.125522  4405 net.cpp:382] ip2 -> ip2
I0428 20:34:02.125634  4405 net.cpp:124] Setting up ip2
I0428 20:34:02.125653  4405 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:02.125656  4405 net.cpp:139] Memory required for data: 19183360
I0428 20:34:02.125676  4405 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:02.125682  4405 net.cpp:86] Creating Layer relu2
I0428 20:34:02.125685  4405 net.cpp:408] relu2 <- ip2
I0428 20:34:02.125689  4405 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:02.126497  4405 net.cpp:124] Setting up relu2
I0428 20:34:02.126510  4405 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:34:02.126530  4405 net.cpp:139] Memory required for data: 19196160
I0428 20:34:02.126533  4405 layer_factory.hpp:77] Creating layer ip3
I0428 20:34:02.126540  4405 net.cpp:86] Creating Layer ip3
I0428 20:34:02.126544  4405 net.cpp:408] ip3 <- ip2
I0428 20:34:02.126550  4405 net.cpp:382] ip3 -> ip3
I0428 20:34:02.126658  4405 net.cpp:124] Setting up ip3
I0428 20:34:02.126667  4405 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:02.126669  4405 net.cpp:139] Memory required for data: 19198720
I0428 20:34:02.126678  4405 layer_factory.hpp:77] Creating layer relu3
I0428 20:34:02.126684  4405 net.cpp:86] Creating Layer relu3
I0428 20:34:02.126688  4405 net.cpp:408] relu3 <- ip3
I0428 20:34:02.126708  4405 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:34:02.126885  4405 net.cpp:124] Setting up relu3
I0428 20:34:02.126894  4405 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:02.126898  4405 net.cpp:139] Memory required for data: 19201280
I0428 20:34:02.126900  4405 layer_factory.hpp:77] Creating layer loss
I0428 20:34:02.126906  4405 net.cpp:86] Creating Layer loss
I0428 20:34:02.126909  4405 net.cpp:408] loss <- ip3
I0428 20:34:02.126914  4405 net.cpp:408] loss <- label
I0428 20:34:02.126919  4405 net.cpp:382] loss -> loss
I0428 20:34:02.126936  4405 layer_factory.hpp:77] Creating layer loss
I0428 20:34:02.127162  4405 net.cpp:124] Setting up loss
I0428 20:34:02.127172  4405 net.cpp:131] Top shape: (1)
I0428 20:34:02.127176  4405 net.cpp:134]     with loss weight 1
I0428 20:34:02.127188  4405 net.cpp:139] Memory required for data: 19201284
I0428 20:34:02.127192  4405 net.cpp:200] loss needs backward computation.
I0428 20:34:02.127212  4405 net.cpp:200] relu3 needs backward computation.
I0428 20:34:02.127214  4405 net.cpp:200] ip3 needs backward computation.
I0428 20:34:02.127218  4405 net.cpp:200] relu2 needs backward computation.
I0428 20:34:02.127220  4405 net.cpp:200] ip2 needs backward computation.
I0428 20:34:02.127223  4405 net.cpp:200] relu1 needs backward computation.
I0428 20:34:02.127225  4405 net.cpp:200] ip1 needs backward computation.
I0428 20:34:02.127228  4405 net.cpp:200] pool1 needs backward computation.
I0428 20:34:02.127231  4405 net.cpp:200] conv1 needs backward computation.
I0428 20:34:02.127234  4405 net.cpp:200] pool0 needs backward computation.
I0428 20:34:02.127238  4405 net.cpp:200] conv0 needs backward computation.
I0428 20:34:02.127240  4405 net.cpp:202] mnist does not need backward computation.
I0428 20:34:02.127259  4405 net.cpp:244] This network produces output loss
I0428 20:34:02.127267  4405 net.cpp:257] Network initialization done.
I0428 20:34:02.127635  4405 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1598.prototxt
I0428 20:34:02.127692  4405 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:02.127782  4405 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:34:02.127872  4405 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:02.127915  4405 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:02.127928  4405 net.cpp:86] Creating Layer mnist
I0428 20:34:02.127931  4405 net.cpp:382] mnist -> data
I0428 20:34:02.127939  4405 net.cpp:382] mnist -> label
I0428 20:34:02.128036  4405 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:02.130193  4405 net.cpp:124] Setting up mnist
I0428 20:34:02.130223  4405 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:02.130228  4405 net.cpp:131] Top shape: 100 (100)
I0428 20:34:02.130231  4405 net.cpp:139] Memory required for data: 314000
I0428 20:34:02.130234  4405 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:02.130257  4405 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:02.130262  4405 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:02.130266  4405 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:02.130273  4405 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:02.130376  4405 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:02.130384  4405 net.cpp:131] Top shape: 100 (100)
I0428 20:34:02.130388  4405 net.cpp:131] Top shape: 100 (100)
I0428 20:34:02.130391  4405 net.cpp:139] Memory required for data: 314800
I0428 20:34:02.130394  4405 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:02.130416  4405 net.cpp:86] Creating Layer conv0
I0428 20:34:02.130420  4405 net.cpp:408] conv0 <- data
I0428 20:34:02.130425  4405 net.cpp:382] conv0 -> conv0
I0428 20:34:02.132153  4405 net.cpp:124] Setting up conv0
I0428 20:34:02.132167  4405 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:02.132171  4405 net.cpp:139] Memory required for data: 23354800
I0428 20:34:02.132181  4405 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:02.132187  4405 net.cpp:86] Creating Layer pool0
I0428 20:34:02.132191  4405 net.cpp:408] pool0 <- conv0
I0428 20:34:02.132211  4405 net.cpp:382] pool0 -> pool0
I0428 20:34:02.132246  4405 net.cpp:124] Setting up pool0
I0428 20:34:02.132251  4405 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:02.132253  4405 net.cpp:139] Memory required for data: 29114800
I0428 20:34:02.132256  4405 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:02.132266  4405 net.cpp:86] Creating Layer conv1
I0428 20:34:02.132268  4405 net.cpp:408] conv1 <- pool0
I0428 20:34:02.132272  4405 net.cpp:382] conv1 -> conv1
I0428 20:34:02.134402  4405 net.cpp:124] Setting up conv1
I0428 20:34:02.134415  4405 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:34:02.134419  4405 net.cpp:139] Memory required for data: 29754800
I0428 20:34:02.134428  4405 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:02.134449  4405 net.cpp:86] Creating Layer pool1
I0428 20:34:02.134454  4405 net.cpp:408] pool1 <- conv1
I0428 20:34:02.134459  4405 net.cpp:382] pool1 -> pool1
I0428 20:34:02.134495  4405 net.cpp:124] Setting up pool1
I0428 20:34:02.134515  4405 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:34:02.134517  4405 net.cpp:139] Memory required for data: 29914800
I0428 20:34:02.134521  4405 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:02.134526  4405 net.cpp:86] Creating Layer ip1
I0428 20:34:02.134529  4405 net.cpp:408] ip1 <- pool1
I0428 20:34:02.134533  4405 net.cpp:382] ip1 -> ip1
I0428 20:34:02.134748  4405 net.cpp:124] Setting up ip1
I0428 20:34:02.134768  4405 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:02.134770  4405 net.cpp:139] Memory required for data: 29934800
I0428 20:34:02.134778  4405 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:02.134783  4405 net.cpp:86] Creating Layer relu1
I0428 20:34:02.134786  4405 net.cpp:408] relu1 <- ip1
I0428 20:34:02.134790  4405 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:02.134969  4405 net.cpp:124] Setting up relu1
I0428 20:34:02.134994  4405 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:02.135002  4405 net.cpp:139] Memory required for data: 29954800
I0428 20:34:02.135005  4405 layer_factory.hpp:77] Creating layer ip2
I0428 20:34:02.135012  4405 net.cpp:86] Creating Layer ip2
I0428 20:34:02.135015  4405 net.cpp:408] ip2 <- ip1
I0428 20:34:02.135020  4405 net.cpp:382] ip2 -> ip2
I0428 20:34:02.135146  4405 net.cpp:124] Setting up ip2
I0428 20:34:02.135154  4405 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:02.135159  4405 net.cpp:139] Memory required for data: 29974800
I0428 20:34:02.135164  4405 layer_factory.hpp:77] Creating layer relu2
I0428 20:34:02.135169  4405 net.cpp:86] Creating Layer relu2
I0428 20:34:02.135177  4405 net.cpp:408] relu2 <- ip2
I0428 20:34:02.135181  4405 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:34:02.135372  4405 net.cpp:124] Setting up relu2
I0428 20:34:02.135381  4405 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:34:02.135385  4405 net.cpp:139] Memory required for data: 29994800
I0428 20:34:02.135393  4405 layer_factory.hpp:77] Creating layer ip3
I0428 20:34:02.135399  4405 net.cpp:86] Creating Layer ip3
I0428 20:34:02.135402  4405 net.cpp:408] ip3 <- ip2
I0428 20:34:02.135407  4405 net.cpp:382] ip3 -> ip3
I0428 20:34:02.135597  4405 net.cpp:124] Setting up ip3
I0428 20:34:02.135606  4405 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:02.135609  4405 net.cpp:139] Memory required for data: 29998800
I0428 20:34:02.135617  4405 layer_factory.hpp:77] Creating layer relu3
I0428 20:34:02.135627  4405 net.cpp:86] Creating Layer relu3
I0428 20:34:02.135630  4405 net.cpp:408] relu3 <- ip3
I0428 20:34:02.135635  4405 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:34:02.136438  4405 net.cpp:124] Setting up relu3
I0428 20:34:02.136451  4405 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:02.136454  4405 net.cpp:139] Memory required for data: 30002800
I0428 20:34:02.136458  4405 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:34:02.136471  4405 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:34:02.136473  4405 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:34:02.136479  4405 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:34:02.136485  4405 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:34:02.136541  4405 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:34:02.136548  4405 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:02.136553  4405 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:02.136555  4405 net.cpp:139] Memory required for data: 30010800
I0428 20:34:02.136559  4405 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:02.136579  4405 net.cpp:86] Creating Layer accuracy
I0428 20:34:02.136581  4405 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:34:02.136586  4405 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:02.136590  4405 net.cpp:382] accuracy -> accuracy
I0428 20:34:02.136597  4405 net.cpp:124] Setting up accuracy
I0428 20:34:02.136601  4405 net.cpp:131] Top shape: (1)
I0428 20:34:02.136605  4405 net.cpp:139] Memory required for data: 30010804
I0428 20:34:02.136606  4405 layer_factory.hpp:77] Creating layer loss
I0428 20:34:02.136611  4405 net.cpp:86] Creating Layer loss
I0428 20:34:02.136615  4405 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:34:02.136617  4405 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:02.136622  4405 net.cpp:382] loss -> loss
I0428 20:34:02.136627  4405 layer_factory.hpp:77] Creating layer loss
I0428 20:34:02.136878  4405 net.cpp:124] Setting up loss
I0428 20:34:02.136888  4405 net.cpp:131] Top shape: (1)
I0428 20:34:02.136893  4405 net.cpp:134]     with loss weight 1
I0428 20:34:02.136909  4405 net.cpp:139] Memory required for data: 30010808
I0428 20:34:02.136914  4405 net.cpp:200] loss needs backward computation.
I0428 20:34:02.136917  4405 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:02.136936  4405 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:34:02.136940  4405 net.cpp:200] relu3 needs backward computation.
I0428 20:34:02.136943  4405 net.cpp:200] ip3 needs backward computation.
I0428 20:34:02.136953  4405 net.cpp:200] relu2 needs backward computation.
I0428 20:34:02.136956  4405 net.cpp:200] ip2 needs backward computation.
I0428 20:34:02.136960  4405 net.cpp:200] relu1 needs backward computation.
I0428 20:34:02.136962  4405 net.cpp:200] ip1 needs backward computation.
I0428 20:34:02.136966  4405 net.cpp:200] pool1 needs backward computation.
I0428 20:34:02.136971  4405 net.cpp:200] conv1 needs backward computation.
I0428 20:34:02.136977  4405 net.cpp:200] pool0 needs backward computation.
I0428 20:34:02.136982  4405 net.cpp:200] conv0 needs backward computation.
I0428 20:34:02.136987  4405 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:02.136991  4405 net.cpp:202] mnist does not need backward computation.
I0428 20:34:02.136994  4405 net.cpp:244] This network produces output accuracy
I0428 20:34:02.136997  4405 net.cpp:244] This network produces output loss
I0428 20:34:02.137008  4405 net.cpp:257] Network initialization done.
I0428 20:34:02.137058  4405 solver.cpp:56] Solver scaffolding done.
I0428 20:34:02.137415  4405 caffe.cpp:248] Starting Optimization
I0428 20:34:02.137423  4405 solver.cpp:273] Solving LeNet
I0428 20:34:02.137425  4405 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:02.138247  4405 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:02.234899  4412 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:02.237423  4405 solver.cpp:398]     Test net output #0: accuracy = 0.1161
I0428 20:34:02.237442  4405 solver.cpp:398]     Test net output #1: loss = 2.32284 (* 1 = 2.32284 loss)
I0428 20:34:02.243258  4405 solver.cpp:219] Iteration 0 (0 iter/s, 0.105807s/100 iters), loss = 2.33665
I0428 20:34:02.243284  4405 solver.cpp:238]     Train net output #0: loss = 2.33665 (* 1 = 2.33665 loss)
I0428 20:34:02.243297  4405 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:02.461724  4405 solver.cpp:219] Iteration 100 (457.833 iter/s, 0.21842s/100 iters), loss = 0.22441
I0428 20:34:02.461766  4405 solver.cpp:238]     Train net output #0: loss = 0.22441 (* 1 = 0.22441 loss)
I0428 20:34:02.461776  4405 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:02.681912  4405 solver.cpp:219] Iteration 200 (454.279 iter/s, 0.220129s/100 iters), loss = 0.174352
I0428 20:34:02.681954  4405 solver.cpp:238]     Train net output #0: loss = 0.174352 (* 1 = 0.174352 loss)
I0428 20:34:02.681965  4405 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:02.901417  4405 solver.cpp:219] Iteration 300 (455.686 iter/s, 0.219449s/100 iters), loss = 0.231667
I0428 20:34:02.901455  4405 solver.cpp:238]     Train net output #0: loss = 0.231667 (* 1 = 0.231667 loss)
I0428 20:34:02.901479  4405 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:03.120273  4405 solver.cpp:219] Iteration 400 (457.04 iter/s, 0.218799s/100 iters), loss = 0.0785359
I0428 20:34:03.120316  4405 solver.cpp:238]     Train net output #0: loss = 0.0785359 (* 1 = 0.0785359 loss)
I0428 20:34:03.120326  4405 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:03.331598  4405 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:03.427700  4412 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:03.430294  4405 solver.cpp:398]     Test net output #0: accuracy = 0.9687
I0428 20:34:03.430315  4405 solver.cpp:398]     Test net output #1: loss = 0.103438 (* 1 = 0.103438 loss)
I0428 20:34:03.432343  4405 solver.cpp:219] Iteration 500 (320.501 iter/s, 0.312012s/100 iters), loss = 0.110025
I0428 20:34:03.432368  4405 solver.cpp:238]     Train net output #0: loss = 0.110025 (* 1 = 0.110025 loss)
I0428 20:34:03.432404  4405 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:03.648944  4405 solver.cpp:219] Iteration 600 (461.771 iter/s, 0.216558s/100 iters), loss = 0.117493
I0428 20:34:03.648983  4405 solver.cpp:238]     Train net output #0: loss = 0.117493 (* 1 = 0.117493 loss)
I0428 20:34:03.648991  4405 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:03.869989  4405 solver.cpp:219] Iteration 700 (452.514 iter/s, 0.220987s/100 iters), loss = 0.136987
I0428 20:34:03.870038  4405 solver.cpp:238]     Train net output #0: loss = 0.136987 (* 1 = 0.136987 loss)
I0428 20:34:03.870051  4405 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:04.094699  4405 solver.cpp:219] Iteration 800 (445.145 iter/s, 0.224646s/100 iters), loss = 0.355877
I0428 20:34:04.094735  4405 solver.cpp:238]     Train net output #0: loss = 0.355877 (* 1 = 0.355877 loss)
I0428 20:34:04.094744  4405 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:04.318536  4405 solver.cpp:219] Iteration 900 (446.862 iter/s, 0.223783s/100 iters), loss = 0.163472
I0428 20:34:04.318575  4405 solver.cpp:238]     Train net output #0: loss = 0.163472 (* 1 = 0.163472 loss)
I0428 20:34:04.318585  4405 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:04.392231  4411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:04.535531  4405 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:04.538215  4405 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:04.539887  4405 solver.cpp:311] Iteration 1000, loss = 0.0927166
I0428 20:34:04.539908  4405 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:04.639816  4412 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:04.642602  4405 solver.cpp:398]     Test net output #0: accuracy = 0.9762
I0428 20:34:04.642628  4405 solver.cpp:398]     Test net output #1: loss = 0.0734384 (* 1 = 0.0734384 loss)
I0428 20:34:04.642634  4405 solver.cpp:316] Optimization Done.
I0428 20:34:04.642638  4405 caffe.cpp:259] Optimization Done.
