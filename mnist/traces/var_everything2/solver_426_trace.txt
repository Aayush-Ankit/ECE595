I0428 19:43:36.199503 25384 caffe.cpp:218] Using GPUs 0
I0428 19:43:36.239609 25384 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:36.756958 25384 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test426.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:36.757122 25384 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test426.prototxt
I0428 19:43:36.757544 25384 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:36.757570 25384 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:36.757685 25384 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:36.757802 25384 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:36.757932 25384 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:36.757967 25384 net.cpp:86] Creating Layer mnist
I0428 19:43:36.757979 25384 net.cpp:382] mnist -> data
I0428 19:43:36.758011 25384 net.cpp:382] mnist -> label
I0428 19:43:36.759274 25384 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:36.761749 25384 net.cpp:124] Setting up mnist
I0428 19:43:36.761768 25384 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:36.761781 25384 net.cpp:131] Top shape: 64 (64)
I0428 19:43:36.761787 25384 net.cpp:139] Memory required for data: 200960
I0428 19:43:36.761798 25384 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:36.761821 25384 net.cpp:86] Creating Layer conv0
I0428 19:43:36.761845 25384 net.cpp:408] conv0 <- data
I0428 19:43:36.761868 25384 net.cpp:382] conv0 -> conv0
I0428 19:43:37.077903 25384 net.cpp:124] Setting up conv0
I0428 19:43:37.077934 25384 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:37.077940 25384 net.cpp:139] Memory required for data: 495872
I0428 19:43:37.077958 25384 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:37.077972 25384 net.cpp:86] Creating Layer pool0
I0428 19:43:37.077977 25384 net.cpp:408] pool0 <- conv0
I0428 19:43:37.077985 25384 net.cpp:382] pool0 -> pool0
I0428 19:43:37.078040 25384 net.cpp:124] Setting up pool0
I0428 19:43:37.078047 25384 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:37.078052 25384 net.cpp:139] Memory required for data: 569600
I0428 19:43:37.078054 25384 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:37.078068 25384 net.cpp:86] Creating Layer conv1
I0428 19:43:37.078071 25384 net.cpp:408] conv1 <- pool0
I0428 19:43:37.078078 25384 net.cpp:382] conv1 -> conv1
I0428 19:43:37.081197 25384 net.cpp:124] Setting up conv1
I0428 19:43:37.081215 25384 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:37.081220 25384 net.cpp:139] Memory required for data: 979200
I0428 19:43:37.081231 25384 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:37.081240 25384 net.cpp:86] Creating Layer pool1
I0428 19:43:37.081245 25384 net.cpp:408] pool1 <- conv1
I0428 19:43:37.081251 25384 net.cpp:382] pool1 -> pool1
I0428 19:43:37.081296 25384 net.cpp:124] Setting up pool1
I0428 19:43:37.081302 25384 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:37.081306 25384 net.cpp:139] Memory required for data: 1081600
I0428 19:43:37.081310 25384 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:37.081321 25384 net.cpp:86] Creating Layer ip1
I0428 19:43:37.081326 25384 net.cpp:408] ip1 <- pool1
I0428 19:43:37.081331 25384 net.cpp:382] ip1 -> ip1
I0428 19:43:37.081588 25384 net.cpp:124] Setting up ip1
I0428 19:43:37.081598 25384 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:37.081604 25384 net.cpp:139] Memory required for data: 1094400
I0428 19:43:37.081614 25384 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:37.081619 25384 net.cpp:86] Creating Layer relu1
I0428 19:43:37.081624 25384 net.cpp:408] relu1 <- ip1
I0428 19:43:37.081629 25384 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:37.081827 25384 net.cpp:124] Setting up relu1
I0428 19:43:37.081838 25384 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:37.081842 25384 net.cpp:139] Memory required for data: 1107200
I0428 19:43:37.081846 25384 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:37.081854 25384 net.cpp:86] Creating Layer ip2
I0428 19:43:37.081858 25384 net.cpp:408] ip2 <- ip1
I0428 19:43:37.081864 25384 net.cpp:382] ip2 -> ip2
I0428 19:43:37.082000 25384 net.cpp:124] Setting up ip2
I0428 19:43:37.082007 25384 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:37.082011 25384 net.cpp:139] Memory required for data: 1120000
I0428 19:43:37.082018 25384 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:37.082026 25384 net.cpp:86] Creating Layer relu2
I0428 19:43:37.082029 25384 net.cpp:408] relu2 <- ip2
I0428 19:43:37.082034 25384 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:37.082880 25384 net.cpp:124] Setting up relu2
I0428 19:43:37.082895 25384 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:37.082900 25384 net.cpp:139] Memory required for data: 1132800
I0428 19:43:37.082903 25384 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:37.082911 25384 net.cpp:86] Creating Layer ip3
I0428 19:43:37.082916 25384 net.cpp:408] ip3 <- ip2
I0428 19:43:37.082922 25384 net.cpp:382] ip3 -> ip3
I0428 19:43:37.083045 25384 net.cpp:124] Setting up ip3
I0428 19:43:37.083055 25384 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:37.083058 25384 net.cpp:139] Memory required for data: 1135360
I0428 19:43:37.083068 25384 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:37.083075 25384 net.cpp:86] Creating Layer relu3
I0428 19:43:37.083078 25384 net.cpp:408] relu3 <- ip3
I0428 19:43:37.083083 25384 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:37.083287 25384 net.cpp:124] Setting up relu3
I0428 19:43:37.083298 25384 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:37.083302 25384 net.cpp:139] Memory required for data: 1137920
I0428 19:43:37.083307 25384 layer_factory.hpp:77] Creating layer loss
I0428 19:43:37.083314 25384 net.cpp:86] Creating Layer loss
I0428 19:43:37.083318 25384 net.cpp:408] loss <- ip3
I0428 19:43:37.083323 25384 net.cpp:408] loss <- label
I0428 19:43:37.083330 25384 net.cpp:382] loss -> loss
I0428 19:43:37.083351 25384 layer_factory.hpp:77] Creating layer loss
I0428 19:43:37.083626 25384 net.cpp:124] Setting up loss
I0428 19:43:37.083637 25384 net.cpp:131] Top shape: (1)
I0428 19:43:37.083642 25384 net.cpp:134]     with loss weight 1
I0428 19:43:37.083658 25384 net.cpp:139] Memory required for data: 1137924
I0428 19:43:37.083663 25384 net.cpp:200] loss needs backward computation.
I0428 19:43:37.083667 25384 net.cpp:200] relu3 needs backward computation.
I0428 19:43:37.083672 25384 net.cpp:200] ip3 needs backward computation.
I0428 19:43:37.083675 25384 net.cpp:200] relu2 needs backward computation.
I0428 19:43:37.083679 25384 net.cpp:200] ip2 needs backward computation.
I0428 19:43:37.083683 25384 net.cpp:200] relu1 needs backward computation.
I0428 19:43:37.083686 25384 net.cpp:200] ip1 needs backward computation.
I0428 19:43:37.083690 25384 net.cpp:200] pool1 needs backward computation.
I0428 19:43:37.083694 25384 net.cpp:200] conv1 needs backward computation.
I0428 19:43:37.083698 25384 net.cpp:200] pool0 needs backward computation.
I0428 19:43:37.083703 25384 net.cpp:200] conv0 needs backward computation.
I0428 19:43:37.083706 25384 net.cpp:202] mnist does not need backward computation.
I0428 19:43:37.083710 25384 net.cpp:244] This network produces output loss
I0428 19:43:37.083721 25384 net.cpp:257] Network initialization done.
I0428 19:43:37.084105 25384 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test426.prototxt
I0428 19:43:37.084137 25384 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:37.084246 25384 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:37.084339 25384 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:37.084391 25384 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:37.084408 25384 net.cpp:86] Creating Layer mnist
I0428 19:43:37.084413 25384 net.cpp:382] mnist -> data
I0428 19:43:37.084421 25384 net.cpp:382] mnist -> label
I0428 19:43:37.084522 25384 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:37.086721 25384 net.cpp:124] Setting up mnist
I0428 19:43:37.086737 25384 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:37.086745 25384 net.cpp:131] Top shape: 100 (100)
I0428 19:43:37.086748 25384 net.cpp:139] Memory required for data: 314000
I0428 19:43:37.086752 25384 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:37.086778 25384 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:37.086786 25384 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:37.086791 25384 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:37.086800 25384 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:37.086851 25384 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:37.086859 25384 net.cpp:131] Top shape: 100 (100)
I0428 19:43:37.086864 25384 net.cpp:131] Top shape: 100 (100)
I0428 19:43:37.086869 25384 net.cpp:139] Memory required for data: 314800
I0428 19:43:37.086871 25384 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:37.086882 25384 net.cpp:86] Creating Layer conv0
I0428 19:43:37.086889 25384 net.cpp:408] conv0 <- data
I0428 19:43:37.086895 25384 net.cpp:382] conv0 -> conv0
I0428 19:43:37.088798 25384 net.cpp:124] Setting up conv0
I0428 19:43:37.088825 25384 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:37.088831 25384 net.cpp:139] Memory required for data: 775600
I0428 19:43:37.088842 25384 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:37.088850 25384 net.cpp:86] Creating Layer pool0
I0428 19:43:37.088855 25384 net.cpp:408] pool0 <- conv0
I0428 19:43:37.088860 25384 net.cpp:382] pool0 -> pool0
I0428 19:43:37.088906 25384 net.cpp:124] Setting up pool0
I0428 19:43:37.088912 25384 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:37.088915 25384 net.cpp:139] Memory required for data: 890800
I0428 19:43:37.088919 25384 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:37.088932 25384 net.cpp:86] Creating Layer conv1
I0428 19:43:37.088935 25384 net.cpp:408] conv1 <- pool0
I0428 19:43:37.088940 25384 net.cpp:382] conv1 -> conv1
I0428 19:43:37.090684 25384 net.cpp:124] Setting up conv1
I0428 19:43:37.090701 25384 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:37.090706 25384 net.cpp:139] Memory required for data: 1530800
I0428 19:43:37.090718 25384 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:37.090725 25384 net.cpp:86] Creating Layer pool1
I0428 19:43:37.090730 25384 net.cpp:408] pool1 <- conv1
I0428 19:43:37.090737 25384 net.cpp:382] pool1 -> pool1
I0428 19:43:37.090780 25384 net.cpp:124] Setting up pool1
I0428 19:43:37.090785 25384 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:37.090790 25384 net.cpp:139] Memory required for data: 1690800
I0428 19:43:37.090793 25384 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:37.090801 25384 net.cpp:86] Creating Layer ip1
I0428 19:43:37.090806 25384 net.cpp:408] ip1 <- pool1
I0428 19:43:37.090811 25384 net.cpp:382] ip1 -> ip1
I0428 19:43:37.091066 25384 net.cpp:124] Setting up ip1
I0428 19:43:37.091076 25384 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:37.091092 25384 net.cpp:139] Memory required for data: 1710800
I0428 19:43:37.091102 25384 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:37.091109 25384 net.cpp:86] Creating Layer relu1
I0428 19:43:37.091122 25384 net.cpp:408] relu1 <- ip1
I0428 19:43:37.091127 25384 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:37.091325 25384 net.cpp:124] Setting up relu1
I0428 19:43:37.091336 25384 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:37.091341 25384 net.cpp:139] Memory required for data: 1730800
I0428 19:43:37.091346 25384 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:37.091353 25384 net.cpp:86] Creating Layer ip2
I0428 19:43:37.091357 25384 net.cpp:408] ip2 <- ip1
I0428 19:43:37.091363 25384 net.cpp:382] ip2 -> ip2
I0428 19:43:37.091569 25384 net.cpp:124] Setting up ip2
I0428 19:43:37.091579 25384 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:37.091583 25384 net.cpp:139] Memory required for data: 1750800
I0428 19:43:37.091590 25384 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:37.091595 25384 net.cpp:86] Creating Layer relu2
I0428 19:43:37.091599 25384 net.cpp:408] relu2 <- ip2
I0428 19:43:37.091605 25384 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:37.091801 25384 net.cpp:124] Setting up relu2
I0428 19:43:37.091811 25384 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:37.091816 25384 net.cpp:139] Memory required for data: 1770800
I0428 19:43:37.091820 25384 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:37.091828 25384 net.cpp:86] Creating Layer ip3
I0428 19:43:37.091838 25384 net.cpp:408] ip3 <- ip2
I0428 19:43:37.091846 25384 net.cpp:382] ip3 -> ip3
I0428 19:43:37.091971 25384 net.cpp:124] Setting up ip3
I0428 19:43:37.091981 25384 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:37.091985 25384 net.cpp:139] Memory required for data: 1774800
I0428 19:43:37.091995 25384 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:37.092000 25384 net.cpp:86] Creating Layer relu3
I0428 19:43:37.092005 25384 net.cpp:408] relu3 <- ip3
I0428 19:43:37.092010 25384 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:37.092953 25384 net.cpp:124] Setting up relu3
I0428 19:43:37.092968 25384 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:37.092973 25384 net.cpp:139] Memory required for data: 1778800
I0428 19:43:37.092978 25384 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:37.092983 25384 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:37.092988 25384 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:37.092995 25384 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:37.093003 25384 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:37.093050 25384 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:37.093057 25384 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:37.093062 25384 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:37.093065 25384 net.cpp:139] Memory required for data: 1786800
I0428 19:43:37.093068 25384 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:37.093075 25384 net.cpp:86] Creating Layer accuracy
I0428 19:43:37.093078 25384 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:37.093083 25384 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:37.093088 25384 net.cpp:382] accuracy -> accuracy
I0428 19:43:37.093097 25384 net.cpp:124] Setting up accuracy
I0428 19:43:37.093102 25384 net.cpp:131] Top shape: (1)
I0428 19:43:37.093106 25384 net.cpp:139] Memory required for data: 1786804
I0428 19:43:37.093109 25384 layer_factory.hpp:77] Creating layer loss
I0428 19:43:37.093116 25384 net.cpp:86] Creating Layer loss
I0428 19:43:37.093120 25384 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:37.093125 25384 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:37.093130 25384 net.cpp:382] loss -> loss
I0428 19:43:37.093137 25384 layer_factory.hpp:77] Creating layer loss
I0428 19:43:37.093425 25384 net.cpp:124] Setting up loss
I0428 19:43:37.093436 25384 net.cpp:131] Top shape: (1)
I0428 19:43:37.093441 25384 net.cpp:134]     with loss weight 1
I0428 19:43:37.093447 25384 net.cpp:139] Memory required for data: 1786808
I0428 19:43:37.093463 25384 net.cpp:200] loss needs backward computation.
I0428 19:43:37.093468 25384 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:37.093473 25384 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:37.093477 25384 net.cpp:200] relu3 needs backward computation.
I0428 19:43:37.093482 25384 net.cpp:200] ip3 needs backward computation.
I0428 19:43:37.093485 25384 net.cpp:200] relu2 needs backward computation.
I0428 19:43:37.093489 25384 net.cpp:200] ip2 needs backward computation.
I0428 19:43:37.093492 25384 net.cpp:200] relu1 needs backward computation.
I0428 19:43:37.093497 25384 net.cpp:200] ip1 needs backward computation.
I0428 19:43:37.093500 25384 net.cpp:200] pool1 needs backward computation.
I0428 19:43:37.093504 25384 net.cpp:200] conv1 needs backward computation.
I0428 19:43:37.093508 25384 net.cpp:200] pool0 needs backward computation.
I0428 19:43:37.093513 25384 net.cpp:200] conv0 needs backward computation.
I0428 19:43:37.093516 25384 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:37.093521 25384 net.cpp:202] mnist does not need backward computation.
I0428 19:43:37.093525 25384 net.cpp:244] This network produces output accuracy
I0428 19:43:37.093530 25384 net.cpp:244] This network produces output loss
I0428 19:43:37.093544 25384 net.cpp:257] Network initialization done.
I0428 19:43:37.093595 25384 solver.cpp:56] Solver scaffolding done.
I0428 19:43:37.094023 25384 caffe.cpp:248] Starting Optimization
I0428 19:43:37.094030 25384 solver.cpp:273] Solving LeNet
I0428 19:43:37.094034 25384 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:37.095044 25384 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:37.098675 25384 blocking_queue.cpp:49] Waiting for data
I0428 19:43:37.169391 25392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:37.169879 25384 solver.cpp:398]     Test net output #0: accuracy = 0.0833
I0428 19:43:37.169910 25384 solver.cpp:398]     Test net output #1: loss = 2.31384 (* 1 = 2.31384 loss)
I0428 19:43:37.171350 25384 solver.cpp:219] Iteration 0 (-6.18367e-31 iter/s, 0.0772773s/100 iters), loss = 2.31814
I0428 19:43:37.171380 25384 solver.cpp:238]     Train net output #0: loss = 2.31814 (* 1 = 2.31814 loss)
I0428 19:43:37.171396 25384 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:37.262284 25384 solver.cpp:219] Iteration 100 (1100.22 iter/s, 0.0908913s/100 iters), loss = 1.20638
I0428 19:43:37.262316 25384 solver.cpp:238]     Train net output #0: loss = 1.20638 (* 1 = 1.20638 loss)
I0428 19:43:37.262325 25384 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:37.354147 25384 solver.cpp:219] Iteration 200 (1089.14 iter/s, 0.0918159s/100 iters), loss = 1.08882
I0428 19:43:37.354204 25384 solver.cpp:238]     Train net output #0: loss = 1.08882 (* 1 = 1.08882 loss)
I0428 19:43:37.354225 25384 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:37.457823 25384 solver.cpp:219] Iteration 300 (965.145 iter/s, 0.103611s/100 iters), loss = 0.547419
I0428 19:43:37.457856 25384 solver.cpp:238]     Train net output #0: loss = 0.547419 (* 1 = 0.547419 loss)
I0428 19:43:37.457864 25384 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:37.547854 25384 solver.cpp:219] Iteration 400 (1111.26 iter/s, 0.0899881s/100 iters), loss = 0.171283
I0428 19:43:37.547886 25384 solver.cpp:238]     Train net output #0: loss = 0.171283 (* 1 = 0.171283 loss)
I0428 19:43:37.547894 25384 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:37.637162 25384 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:37.690135 25392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:37.690852 25384 solver.cpp:398]     Test net output #0: accuracy = 0.9517
I0428 19:43:37.690883 25384 solver.cpp:398]     Test net output #1: loss = 0.156583 (* 1 = 0.156583 loss)
I0428 19:43:37.692109 25384 solver.cpp:219] Iteration 500 (693.439 iter/s, 0.144209s/100 iters), loss = 0.0903925
I0428 19:43:37.692147 25384 solver.cpp:238]     Train net output #0: loss = 0.0903925 (* 1 = 0.0903925 loss)
I0428 19:43:37.692183 25384 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:37.783514 25384 solver.cpp:219] Iteration 600 (1094.61 iter/s, 0.0913564s/100 iters), loss = 0.248224
I0428 19:43:37.783546 25384 solver.cpp:238]     Train net output #0: loss = 0.248224 (* 1 = 0.248224 loss)
I0428 19:43:37.783555 25384 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:37.874131 25384 solver.cpp:219] Iteration 700 (1104.1 iter/s, 0.0905717s/100 iters), loss = 0.218433
I0428 19:43:37.874162 25384 solver.cpp:238]     Train net output #0: loss = 0.218433 (* 1 = 0.218433 loss)
I0428 19:43:37.874171 25384 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:37.964521 25384 solver.cpp:219] Iteration 800 (1106.85 iter/s, 0.0903465s/100 iters), loss = 0.197469
I0428 19:43:37.964555 25384 solver.cpp:238]     Train net output #0: loss = 0.197469 (* 1 = 0.197469 loss)
I0428 19:43:37.964563 25384 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:38.075942 25384 solver.cpp:219] Iteration 900 (897.906 iter/s, 0.11137s/100 iters), loss = 0.172806
I0428 19:43:38.075986 25384 solver.cpp:238]     Train net output #0: loss = 0.172806 (* 1 = 0.172806 loss)
I0428 19:43:38.075997 25384 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:38.108999 25391 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:38.171468 25384 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:38.172698 25384 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:38.173365 25384 solver.cpp:311] Iteration 1000, loss = 0.17932
I0428 19:43:38.173385 25384 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:38.237179 25392 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:38.237659 25384 solver.cpp:398]     Test net output #0: accuracy = 0.9689
I0428 19:43:38.237684 25384 solver.cpp:398]     Test net output #1: loss = 0.100633 (* 1 = 0.100633 loss)
I0428 19:43:38.237691 25384 solver.cpp:316] Optimization Done.
I0428 19:43:38.237695 25384 caffe.cpp:259] Optimization Done.
