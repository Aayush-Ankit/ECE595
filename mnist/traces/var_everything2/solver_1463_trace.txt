I0428 20:25:57.343896  2718 caffe.cpp:218] Using GPUs 0
I0428 20:25:57.382226  2718 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:57.893987  2718 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1463.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:57.894131  2718 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1463.prototxt
I0428 20:25:57.894547  2718 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:57.894567  2718 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:57.894668  2718 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:57.894747  2718 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:57.894845  2718 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:57.894867  2718 net.cpp:86] Creating Layer mnist
I0428 20:25:57.894875  2718 net.cpp:382] mnist -> data
I0428 20:25:57.894898  2718 net.cpp:382] mnist -> label
I0428 20:25:57.895979  2718 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:57.898655  2718 net.cpp:124] Setting up mnist
I0428 20:25:57.898674  2718 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:57.898679  2718 net.cpp:131] Top shape: 64 (64)
I0428 20:25:57.898684  2718 net.cpp:139] Memory required for data: 200960
I0428 20:25:57.898691  2718 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:57.898753  2718 net.cpp:86] Creating Layer conv0
I0428 20:25:57.898775  2718 net.cpp:408] conv0 <- data
I0428 20:25:57.898788  2718 net.cpp:382] conv0 -> conv0
I0428 20:25:58.189774  2718 net.cpp:124] Setting up conv0
I0428 20:25:58.189805  2718 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:58.189811  2718 net.cpp:139] Memory required for data: 14946560
I0428 20:25:58.189829  2718 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:58.189843  2718 net.cpp:86] Creating Layer pool0
I0428 20:25:58.189848  2718 net.cpp:408] pool0 <- conv0
I0428 20:25:58.189855  2718 net.cpp:382] pool0 -> pool0
I0428 20:25:58.189909  2718 net.cpp:124] Setting up pool0
I0428 20:25:58.189916  2718 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:58.189919  2718 net.cpp:139] Memory required for data: 18632960
I0428 20:25:58.189924  2718 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:58.189935  2718 net.cpp:86] Creating Layer conv1
I0428 20:25:58.189939  2718 net.cpp:408] conv1 <- pool0
I0428 20:25:58.189945  2718 net.cpp:382] conv1 -> conv1
I0428 20:25:58.192999  2718 net.cpp:124] Setting up conv1
I0428 20:25:58.193017  2718 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:58.193020  2718 net.cpp:139] Memory required for data: 18665728
I0428 20:25:58.193030  2718 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:58.193039  2718 net.cpp:86] Creating Layer pool1
I0428 20:25:58.193043  2718 net.cpp:408] pool1 <- conv1
I0428 20:25:58.193049  2718 net.cpp:382] pool1 -> pool1
I0428 20:25:58.193092  2718 net.cpp:124] Setting up pool1
I0428 20:25:58.193099  2718 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:58.193101  2718 net.cpp:139] Memory required for data: 18673920
I0428 20:25:58.193105  2718 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:58.193112  2718 net.cpp:86] Creating Layer ip1
I0428 20:25:58.193116  2718 net.cpp:408] ip1 <- pool1
I0428 20:25:58.193121  2718 net.cpp:382] ip1 -> ip1
I0428 20:25:58.193228  2718 net.cpp:124] Setting up ip1
I0428 20:25:58.193236  2718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:58.193239  2718 net.cpp:139] Memory required for data: 18676480
I0428 20:25:58.193248  2718 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:58.193253  2718 net.cpp:86] Creating Layer relu1
I0428 20:25:58.193258  2718 net.cpp:408] relu1 <- ip1
I0428 20:25:58.193262  2718 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:58.193454  2718 net.cpp:124] Setting up relu1
I0428 20:25:58.193464  2718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:58.193466  2718 net.cpp:139] Memory required for data: 18679040
I0428 20:25:58.193470  2718 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:58.193477  2718 net.cpp:86] Creating Layer ip2
I0428 20:25:58.193480  2718 net.cpp:408] ip2 <- ip1
I0428 20:25:58.193486  2718 net.cpp:382] ip2 -> ip2
I0428 20:25:58.193595  2718 net.cpp:124] Setting up ip2
I0428 20:25:58.193603  2718 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:25:58.193608  2718 net.cpp:139] Memory required for data: 18691840
I0428 20:25:58.193614  2718 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:58.193620  2718 net.cpp:86] Creating Layer relu2
I0428 20:25:58.193624  2718 net.cpp:408] relu2 <- ip2
I0428 20:25:58.193629  2718 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:58.194435  2718 net.cpp:124] Setting up relu2
I0428 20:25:58.194450  2718 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:25:58.194454  2718 net.cpp:139] Memory required for data: 18704640
I0428 20:25:58.194458  2718 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:58.194466  2718 net.cpp:86] Creating Layer ip3
I0428 20:25:58.194470  2718 net.cpp:408] ip3 <- ip2
I0428 20:25:58.194476  2718 net.cpp:382] ip3 -> ip3
I0428 20:25:58.194589  2718 net.cpp:124] Setting up ip3
I0428 20:25:58.194598  2718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:58.194602  2718 net.cpp:139] Memory required for data: 18707200
I0428 20:25:58.194610  2718 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:58.194617  2718 net.cpp:86] Creating Layer relu3
I0428 20:25:58.194619  2718 net.cpp:408] relu3 <- ip3
I0428 20:25:58.194624  2718 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:58.194809  2718 net.cpp:124] Setting up relu3
I0428 20:25:58.194819  2718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:58.194823  2718 net.cpp:139] Memory required for data: 18709760
I0428 20:25:58.194826  2718 layer_factory.hpp:77] Creating layer loss
I0428 20:25:58.194833  2718 net.cpp:86] Creating Layer loss
I0428 20:25:58.194836  2718 net.cpp:408] loss <- ip3
I0428 20:25:58.194840  2718 net.cpp:408] loss <- label
I0428 20:25:58.194846  2718 net.cpp:382] loss -> loss
I0428 20:25:58.194862  2718 layer_factory.hpp:77] Creating layer loss
I0428 20:25:58.195116  2718 net.cpp:124] Setting up loss
I0428 20:25:58.195127  2718 net.cpp:131] Top shape: (1)
I0428 20:25:58.195130  2718 net.cpp:134]     with loss weight 1
I0428 20:25:58.195145  2718 net.cpp:139] Memory required for data: 18709764
I0428 20:25:58.195149  2718 net.cpp:200] loss needs backward computation.
I0428 20:25:58.195153  2718 net.cpp:200] relu3 needs backward computation.
I0428 20:25:58.195158  2718 net.cpp:200] ip3 needs backward computation.
I0428 20:25:58.195160  2718 net.cpp:200] relu2 needs backward computation.
I0428 20:25:58.195163  2718 net.cpp:200] ip2 needs backward computation.
I0428 20:25:58.195168  2718 net.cpp:200] relu1 needs backward computation.
I0428 20:25:58.195170  2718 net.cpp:200] ip1 needs backward computation.
I0428 20:25:58.195173  2718 net.cpp:200] pool1 needs backward computation.
I0428 20:25:58.195178  2718 net.cpp:200] conv1 needs backward computation.
I0428 20:25:58.195181  2718 net.cpp:200] pool0 needs backward computation.
I0428 20:25:58.195184  2718 net.cpp:200] conv0 needs backward computation.
I0428 20:25:58.195188  2718 net.cpp:202] mnist does not need backward computation.
I0428 20:25:58.195191  2718 net.cpp:244] This network produces output loss
I0428 20:25:58.195201  2718 net.cpp:257] Network initialization done.
I0428 20:25:58.195564  2718 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1463.prototxt
I0428 20:25:58.195595  2718 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:58.195698  2718 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:58.195787  2718 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:58.195838  2718 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:58.195852  2718 net.cpp:86] Creating Layer mnist
I0428 20:25:58.195858  2718 net.cpp:382] mnist -> data
I0428 20:25:58.195866  2718 net.cpp:382] mnist -> label
I0428 20:25:58.195962  2718 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:58.198072  2718 net.cpp:124] Setting up mnist
I0428 20:25:58.198088  2718 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:58.198093  2718 net.cpp:131] Top shape: 100 (100)
I0428 20:25:58.198097  2718 net.cpp:139] Memory required for data: 314000
I0428 20:25:58.198102  2718 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:58.198112  2718 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:58.198117  2718 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:58.198122  2718 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:58.198129  2718 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:58.198185  2718 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:58.198191  2718 net.cpp:131] Top shape: 100 (100)
I0428 20:25:58.198195  2718 net.cpp:131] Top shape: 100 (100)
I0428 20:25:58.198199  2718 net.cpp:139] Memory required for data: 314800
I0428 20:25:58.198202  2718 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:58.198211  2718 net.cpp:86] Creating Layer conv0
I0428 20:25:58.198215  2718 net.cpp:408] conv0 <- data
I0428 20:25:58.198220  2718 net.cpp:382] conv0 -> conv0
I0428 20:25:58.200108  2718 net.cpp:124] Setting up conv0
I0428 20:25:58.200124  2718 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:58.200129  2718 net.cpp:139] Memory required for data: 23354800
I0428 20:25:58.200139  2718 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:58.200145  2718 net.cpp:86] Creating Layer pool0
I0428 20:25:58.200150  2718 net.cpp:408] pool0 <- conv0
I0428 20:25:58.200155  2718 net.cpp:382] pool0 -> pool0
I0428 20:25:58.200196  2718 net.cpp:124] Setting up pool0
I0428 20:25:58.200202  2718 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:58.200206  2718 net.cpp:139] Memory required for data: 29114800
I0428 20:25:58.200209  2718 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:58.200218  2718 net.cpp:86] Creating Layer conv1
I0428 20:25:58.200222  2718 net.cpp:408] conv1 <- pool0
I0428 20:25:58.200227  2718 net.cpp:382] conv1 -> conv1
I0428 20:25:58.201956  2718 net.cpp:124] Setting up conv1
I0428 20:25:58.201972  2718 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:58.201977  2718 net.cpp:139] Memory required for data: 29166000
I0428 20:25:58.201993  2718 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:58.202003  2718 net.cpp:86] Creating Layer pool1
I0428 20:25:58.202006  2718 net.cpp:408] pool1 <- conv1
I0428 20:25:58.202013  2718 net.cpp:382] pool1 -> pool1
I0428 20:25:58.202056  2718 net.cpp:124] Setting up pool1
I0428 20:25:58.202069  2718 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:58.202071  2718 net.cpp:139] Memory required for data: 29178800
I0428 20:25:58.202075  2718 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:58.202081  2718 net.cpp:86] Creating Layer ip1
I0428 20:25:58.202085  2718 net.cpp:408] ip1 <- pool1
I0428 20:25:58.202091  2718 net.cpp:382] ip1 -> ip1
I0428 20:25:58.202206  2718 net.cpp:124] Setting up ip1
I0428 20:25:58.202214  2718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:58.202235  2718 net.cpp:139] Memory required for data: 29182800
I0428 20:25:58.202244  2718 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:58.202256  2718 net.cpp:86] Creating Layer relu1
I0428 20:25:58.202260  2718 net.cpp:408] relu1 <- ip1
I0428 20:25:58.202266  2718 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:58.202461  2718 net.cpp:124] Setting up relu1
I0428 20:25:58.202469  2718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:58.202473  2718 net.cpp:139] Memory required for data: 29186800
I0428 20:25:58.202476  2718 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:58.202486  2718 net.cpp:86] Creating Layer ip2
I0428 20:25:58.202491  2718 net.cpp:408] ip2 <- ip1
I0428 20:25:58.202497  2718 net.cpp:382] ip2 -> ip2
I0428 20:25:58.202613  2718 net.cpp:124] Setting up ip2
I0428 20:25:58.202621  2718 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:25:58.202625  2718 net.cpp:139] Memory required for data: 29206800
I0428 20:25:58.202631  2718 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:58.202646  2718 net.cpp:86] Creating Layer relu2
I0428 20:25:58.202649  2718 net.cpp:408] relu2 <- ip2
I0428 20:25:58.202653  2718 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:58.202839  2718 net.cpp:124] Setting up relu2
I0428 20:25:58.202849  2718 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:25:58.202853  2718 net.cpp:139] Memory required for data: 29226800
I0428 20:25:58.202864  2718 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:58.202872  2718 net.cpp:86] Creating Layer ip3
I0428 20:25:58.202877  2718 net.cpp:408] ip3 <- ip2
I0428 20:25:58.202882  2718 net.cpp:382] ip3 -> ip3
I0428 20:25:58.203007  2718 net.cpp:124] Setting up ip3
I0428 20:25:58.203016  2718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:58.203019  2718 net.cpp:139] Memory required for data: 29230800
I0428 20:25:58.203027  2718 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:58.203034  2718 net.cpp:86] Creating Layer relu3
I0428 20:25:58.203037  2718 net.cpp:408] relu3 <- ip3
I0428 20:25:58.203042  2718 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:58.203974  2718 net.cpp:124] Setting up relu3
I0428 20:25:58.203987  2718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:58.203991  2718 net.cpp:139] Memory required for data: 29234800
I0428 20:25:58.203995  2718 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:58.204001  2718 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:58.204005  2718 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:58.204011  2718 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:58.204020  2718 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:58.204063  2718 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:58.204071  2718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:58.204074  2718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:58.204077  2718 net.cpp:139] Memory required for data: 29242800
I0428 20:25:58.204080  2718 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:58.204095  2718 net.cpp:86] Creating Layer accuracy
I0428 20:25:58.204098  2718 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:58.204103  2718 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:58.204108  2718 net.cpp:382] accuracy -> accuracy
I0428 20:25:58.204115  2718 net.cpp:124] Setting up accuracy
I0428 20:25:58.204120  2718 net.cpp:131] Top shape: (1)
I0428 20:25:58.204123  2718 net.cpp:139] Memory required for data: 29242804
I0428 20:25:58.204126  2718 layer_factory.hpp:77] Creating layer loss
I0428 20:25:58.204139  2718 net.cpp:86] Creating Layer loss
I0428 20:25:58.204144  2718 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:58.204147  2718 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:58.204152  2718 net.cpp:382] loss -> loss
I0428 20:25:58.204159  2718 layer_factory.hpp:77] Creating layer loss
I0428 20:25:58.204429  2718 net.cpp:124] Setting up loss
I0428 20:25:58.204439  2718 net.cpp:131] Top shape: (1)
I0428 20:25:58.204443  2718 net.cpp:134]     with loss weight 1
I0428 20:25:58.204460  2718 net.cpp:139] Memory required for data: 29242808
I0428 20:25:58.204464  2718 net.cpp:200] loss needs backward computation.
I0428 20:25:58.204478  2718 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:58.204481  2718 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:58.204485  2718 net.cpp:200] relu3 needs backward computation.
I0428 20:25:58.204488  2718 net.cpp:200] ip3 needs backward computation.
I0428 20:25:58.204491  2718 net.cpp:200] relu2 needs backward computation.
I0428 20:25:58.204494  2718 net.cpp:200] ip2 needs backward computation.
I0428 20:25:58.204497  2718 net.cpp:200] relu1 needs backward computation.
I0428 20:25:58.204500  2718 net.cpp:200] ip1 needs backward computation.
I0428 20:25:58.204504  2718 net.cpp:200] pool1 needs backward computation.
I0428 20:25:58.204509  2718 net.cpp:200] conv1 needs backward computation.
I0428 20:25:58.204511  2718 net.cpp:200] pool0 needs backward computation.
I0428 20:25:58.204521  2718 net.cpp:200] conv0 needs backward computation.
I0428 20:25:58.204525  2718 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:58.204530  2718 net.cpp:202] mnist does not need backward computation.
I0428 20:25:58.204540  2718 net.cpp:244] This network produces output accuracy
I0428 20:25:58.204543  2718 net.cpp:244] This network produces output loss
I0428 20:25:58.204555  2718 net.cpp:257] Network initialization done.
I0428 20:25:58.204602  2718 solver.cpp:56] Solver scaffolding done.
I0428 20:25:58.205000  2718 caffe.cpp:248] Starting Optimization
I0428 20:25:58.205008  2718 solver.cpp:273] Solving LeNet
I0428 20:25:58.205013  2718 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:58.205884  2718 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:58.301375  2725 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:58.303920  2718 solver.cpp:398]     Test net output #0: accuracy = 0.1127
I0428 20:25:58.303953  2718 solver.cpp:398]     Test net output #1: loss = 2.31254 (* 1 = 2.31254 loss)
I0428 20:25:58.308354  2718 solver.cpp:219] Iteration 0 (0 iter/s, 0.103314s/100 iters), loss = 2.29071
I0428 20:25:58.308393  2718 solver.cpp:238]     Train net output #0: loss = 2.29071 (* 1 = 2.29071 loss)
I0428 20:25:58.308404  2718 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:58.510010  2718 solver.cpp:219] Iteration 100 (496.06 iter/s, 0.201589s/100 iters), loss = 0.717378
I0428 20:25:58.510062  2718 solver.cpp:238]     Train net output #0: loss = 0.717378 (* 1 = 0.717378 loss)
I0428 20:25:58.510076  2718 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:58.734088  2718 solver.cpp:219] Iteration 200 (446.408 iter/s, 0.22401s/100 iters), loss = 0.83419
I0428 20:25:58.734138  2718 solver.cpp:238]     Train net output #0: loss = 0.83419 (* 1 = 0.83419 loss)
I0428 20:25:58.734150  2718 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:58.950564  2718 solver.cpp:219] Iteration 300 (462.086 iter/s, 0.21641s/100 iters), loss = 0.338226
I0428 20:25:58.950613  2718 solver.cpp:238]     Train net output #0: loss = 0.338226 (* 1 = 0.338226 loss)
I0428 20:25:58.950624  2718 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:59.169145  2718 solver.cpp:219] Iteration 400 (457.636 iter/s, 0.218514s/100 iters), loss = 0.476673
I0428 20:25:59.169193  2718 solver.cpp:238]     Train net output #0: loss = 0.476673 (* 1 = 0.476673 loss)
I0428 20:25:59.169205  2718 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:59.380764  2718 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:59.393671  2718 blocking_queue.cpp:49] Waiting for data
I0428 20:25:59.485033  2725 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:59.486696  2718 solver.cpp:398]     Test net output #0: accuracy = 0.852
I0428 20:25:59.486722  2718 solver.cpp:398]     Test net output #1: loss = 0.44943 (* 1 = 0.44943 loss)
I0428 20:25:59.488704  2718 solver.cpp:219] Iteration 500 (312.995 iter/s, 0.319494s/100 iters), loss = 0.604431
I0428 20:25:59.488759  2718 solver.cpp:238]     Train net output #0: loss = 0.604431 (* 1 = 0.604431 loss)
I0428 20:25:59.488766  2718 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:59.709385  2718 solver.cpp:219] Iteration 600 (453.292 iter/s, 0.220608s/100 iters), loss = 0.382849
I0428 20:25:59.709436  2718 solver.cpp:238]     Train net output #0: loss = 0.382849 (* 1 = 0.382849 loss)
I0428 20:25:59.709450  2718 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:59.932937  2718 solver.cpp:219] Iteration 700 (447.46 iter/s, 0.223484s/100 iters), loss = 0.630762
I0428 20:25:59.932987  2718 solver.cpp:238]     Train net output #0: loss = 0.630762 (* 1 = 0.630762 loss)
I0428 20:25:59.932999  2718 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:00.156471  2718 solver.cpp:219] Iteration 800 (447.496 iter/s, 0.223465s/100 iters), loss = 0.610781
I0428 20:26:00.156518  2718 solver.cpp:238]     Train net output #0: loss = 0.610781 (* 1 = 0.610781 loss)
I0428 20:26:00.156530  2718 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:00.378782  2718 solver.cpp:219] Iteration 900 (449.954 iter/s, 0.222245s/100 iters), loss = 0.331147
I0428 20:26:00.378830  2718 solver.cpp:238]     Train net output #0: loss = 0.331147 (* 1 = 0.331147 loss)
I0428 20:26:00.378842  2718 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:00.451361  2724 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:00.596191  2718 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:00.598026  2718 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:00.599213  2718 solver.cpp:311] Iteration 1000, loss = 0.205996
I0428 20:26:00.599243  2718 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:00.708163  2725 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:00.709889  2718 solver.cpp:398]     Test net output #0: accuracy = 0.9333
I0428 20:26:00.709919  2718 solver.cpp:398]     Test net output #1: loss = 0.213873 (* 1 = 0.213873 loss)
I0428 20:26:00.709928  2718 solver.cpp:316] Optimization Done.
I0428 20:26:00.709931  2718 caffe.cpp:259] Optimization Done.
