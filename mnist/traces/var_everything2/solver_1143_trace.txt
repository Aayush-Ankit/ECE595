I0428 20:10:46.611927 31917 caffe.cpp:218] Using GPUs 0
I0428 20:10:46.651868 31917 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:47.168227 31917 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1143.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:47.168365 31917 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1143.prototxt
I0428 20:10:47.168772 31917 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:47.168789 31917 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:47.168892 31917 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:47.168968 31917 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:47.169072 31917 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:47.169098 31917 net.cpp:86] Creating Layer mnist
I0428 20:10:47.169107 31917 net.cpp:382] mnist -> data
I0428 20:10:47.169131 31917 net.cpp:382] mnist -> label
I0428 20:10:47.170213 31917 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:47.172672 31917 net.cpp:124] Setting up mnist
I0428 20:10:47.172689 31917 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:47.172695 31917 net.cpp:131] Top shape: 64 (64)
I0428 20:10:47.172699 31917 net.cpp:139] Memory required for data: 200960
I0428 20:10:47.172706 31917 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:47.172722 31917 net.cpp:86] Creating Layer conv0
I0428 20:10:47.172744 31917 net.cpp:408] conv0 <- data
I0428 20:10:47.172758 31917 net.cpp:382] conv0 -> conv0
I0428 20:10:47.463354 31917 net.cpp:124] Setting up conv0
I0428 20:10:47.463384 31917 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:47.463389 31917 net.cpp:139] Memory required for data: 3887360
I0428 20:10:47.463407 31917 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:47.463421 31917 net.cpp:86] Creating Layer pool0
I0428 20:10:47.463426 31917 net.cpp:408] pool0 <- conv0
I0428 20:10:47.463433 31917 net.cpp:382] pool0 -> pool0
I0428 20:10:47.463486 31917 net.cpp:124] Setting up pool0
I0428 20:10:47.463495 31917 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:47.463500 31917 net.cpp:139] Memory required for data: 4808960
I0428 20:10:47.463502 31917 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:47.463516 31917 net.cpp:86] Creating Layer conv1
I0428 20:10:47.463522 31917 net.cpp:408] conv1 <- pool0
I0428 20:10:47.463528 31917 net.cpp:382] conv1 -> conv1
I0428 20:10:47.465942 31917 net.cpp:124] Setting up conv1
I0428 20:10:47.465960 31917 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:10:47.465965 31917 net.cpp:139] Memory required for data: 5628160
I0428 20:10:47.465976 31917 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:47.465986 31917 net.cpp:86] Creating Layer pool1
I0428 20:10:47.465989 31917 net.cpp:408] pool1 <- conv1
I0428 20:10:47.465997 31917 net.cpp:382] pool1 -> pool1
I0428 20:10:47.466042 31917 net.cpp:124] Setting up pool1
I0428 20:10:47.466051 31917 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:10:47.466054 31917 net.cpp:139] Memory required for data: 5832960
I0428 20:10:47.466058 31917 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:47.466068 31917 net.cpp:86] Creating Layer ip1
I0428 20:10:47.466073 31917 net.cpp:408] ip1 <- pool1
I0428 20:10:47.466080 31917 net.cpp:382] ip1 -> ip1
I0428 20:10:47.467224 31917 net.cpp:124] Setting up ip1
I0428 20:10:47.467239 31917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:47.467243 31917 net.cpp:139] Memory required for data: 5835520
I0428 20:10:47.467253 31917 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:47.467262 31917 net.cpp:86] Creating Layer relu1
I0428 20:10:47.467270 31917 net.cpp:408] relu1 <- ip1
I0428 20:10:47.467277 31917 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:47.467499 31917 net.cpp:124] Setting up relu1
I0428 20:10:47.467509 31917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:47.467512 31917 net.cpp:139] Memory required for data: 5838080
I0428 20:10:47.467526 31917 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:47.467536 31917 net.cpp:86] Creating Layer ip2
I0428 20:10:47.467540 31917 net.cpp:408] ip2 <- ip1
I0428 20:10:47.467546 31917 net.cpp:382] ip2 -> ip2
I0428 20:10:47.467665 31917 net.cpp:124] Setting up ip2
I0428 20:10:47.467674 31917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:47.467677 31917 net.cpp:139] Memory required for data: 5840640
I0428 20:10:47.467684 31917 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:47.467690 31917 net.cpp:86] Creating Layer relu2
I0428 20:10:47.467696 31917 net.cpp:408] relu2 <- ip2
I0428 20:10:47.467703 31917 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:47.468535 31917 net.cpp:124] Setting up relu2
I0428 20:10:47.468550 31917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:47.468554 31917 net.cpp:139] Memory required for data: 5843200
I0428 20:10:47.468559 31917 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:47.468566 31917 net.cpp:86] Creating Layer ip3
I0428 20:10:47.468569 31917 net.cpp:408] ip3 <- ip2
I0428 20:10:47.468576 31917 net.cpp:382] ip3 -> ip3
I0428 20:10:47.468698 31917 net.cpp:124] Setting up ip3
I0428 20:10:47.468706 31917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:47.468709 31917 net.cpp:139] Memory required for data: 5845760
I0428 20:10:47.468719 31917 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:47.468727 31917 net.cpp:86] Creating Layer relu3
I0428 20:10:47.468731 31917 net.cpp:408] relu3 <- ip3
I0428 20:10:47.468736 31917 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:47.468946 31917 net.cpp:124] Setting up relu3
I0428 20:10:47.468960 31917 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:47.468963 31917 net.cpp:139] Memory required for data: 5848320
I0428 20:10:47.468966 31917 layer_factory.hpp:77] Creating layer loss
I0428 20:10:47.468973 31917 net.cpp:86] Creating Layer loss
I0428 20:10:47.468976 31917 net.cpp:408] loss <- ip3
I0428 20:10:47.468982 31917 net.cpp:408] loss <- label
I0428 20:10:47.468988 31917 net.cpp:382] loss -> loss
I0428 20:10:47.469010 31917 layer_factory.hpp:77] Creating layer loss
I0428 20:10:47.469295 31917 net.cpp:124] Setting up loss
I0428 20:10:47.469307 31917 net.cpp:131] Top shape: (1)
I0428 20:10:47.469311 31917 net.cpp:134]     with loss weight 1
I0428 20:10:47.469328 31917 net.cpp:139] Memory required for data: 5848324
I0428 20:10:47.469333 31917 net.cpp:200] loss needs backward computation.
I0428 20:10:47.469337 31917 net.cpp:200] relu3 needs backward computation.
I0428 20:10:47.469341 31917 net.cpp:200] ip3 needs backward computation.
I0428 20:10:47.469343 31917 net.cpp:200] relu2 needs backward computation.
I0428 20:10:47.469347 31917 net.cpp:200] ip2 needs backward computation.
I0428 20:10:47.469350 31917 net.cpp:200] relu1 needs backward computation.
I0428 20:10:47.469353 31917 net.cpp:200] ip1 needs backward computation.
I0428 20:10:47.469357 31917 net.cpp:200] pool1 needs backward computation.
I0428 20:10:47.469360 31917 net.cpp:200] conv1 needs backward computation.
I0428 20:10:47.469364 31917 net.cpp:200] pool0 needs backward computation.
I0428 20:10:47.469367 31917 net.cpp:200] conv0 needs backward computation.
I0428 20:10:47.469372 31917 net.cpp:202] mnist does not need backward computation.
I0428 20:10:47.469374 31917 net.cpp:244] This network produces output loss
I0428 20:10:47.469384 31917 net.cpp:257] Network initialization done.
I0428 20:10:47.469750 31917 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1143.prototxt
I0428 20:10:47.469782 31917 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:47.469889 31917 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:47.469985 31917 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:47.470036 31917 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:47.470054 31917 net.cpp:86] Creating Layer mnist
I0428 20:10:47.470062 31917 net.cpp:382] mnist -> data
I0428 20:10:47.470073 31917 net.cpp:382] mnist -> label
I0428 20:10:47.470172 31917 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:47.472298 31917 net.cpp:124] Setting up mnist
I0428 20:10:47.472313 31917 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:47.472319 31917 net.cpp:131] Top shape: 100 (100)
I0428 20:10:47.472322 31917 net.cpp:139] Memory required for data: 314000
I0428 20:10:47.472326 31917 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:47.472334 31917 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:47.472338 31917 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:47.472345 31917 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:47.472353 31917 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:47.472448 31917 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:47.472458 31917 net.cpp:131] Top shape: 100 (100)
I0428 20:10:47.472463 31917 net.cpp:131] Top shape: 100 (100)
I0428 20:10:47.472466 31917 net.cpp:139] Memory required for data: 314800
I0428 20:10:47.472470 31917 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:47.472481 31917 net.cpp:86] Creating Layer conv0
I0428 20:10:47.472487 31917 net.cpp:408] conv0 <- data
I0428 20:10:47.472493 31917 net.cpp:382] conv0 -> conv0
I0428 20:10:47.474341 31917 net.cpp:124] Setting up conv0
I0428 20:10:47.474359 31917 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:47.474362 31917 net.cpp:139] Memory required for data: 6074800
I0428 20:10:47.474372 31917 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:47.474380 31917 net.cpp:86] Creating Layer pool0
I0428 20:10:47.474385 31917 net.cpp:408] pool0 <- conv0
I0428 20:10:47.474391 31917 net.cpp:382] pool0 -> pool0
I0428 20:10:47.474434 31917 net.cpp:124] Setting up pool0
I0428 20:10:47.474442 31917 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:47.474447 31917 net.cpp:139] Memory required for data: 7514800
I0428 20:10:47.474450 31917 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:47.474462 31917 net.cpp:86] Creating Layer conv1
I0428 20:10:47.474468 31917 net.cpp:408] conv1 <- pool0
I0428 20:10:47.474475 31917 net.cpp:382] conv1 -> conv1
I0428 20:10:47.476428 31917 net.cpp:124] Setting up conv1
I0428 20:10:47.476442 31917 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:10:47.476446 31917 net.cpp:139] Memory required for data: 8794800
I0428 20:10:47.476459 31917 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:47.476467 31917 net.cpp:86] Creating Layer pool1
I0428 20:10:47.476471 31917 net.cpp:408] pool1 <- conv1
I0428 20:10:47.476477 31917 net.cpp:382] pool1 -> pool1
I0428 20:10:47.476522 31917 net.cpp:124] Setting up pool1
I0428 20:10:47.476529 31917 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:10:47.476533 31917 net.cpp:139] Memory required for data: 9114800
I0428 20:10:47.476537 31917 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:47.476544 31917 net.cpp:86] Creating Layer ip1
I0428 20:10:47.476547 31917 net.cpp:408] ip1 <- pool1
I0428 20:10:47.476554 31917 net.cpp:382] ip1 -> ip1
I0428 20:10:47.476721 31917 net.cpp:124] Setting up ip1
I0428 20:10:47.476729 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.476744 31917 net.cpp:139] Memory required for data: 9118800
I0428 20:10:47.476753 31917 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:47.476763 31917 net.cpp:86] Creating Layer relu1
I0428 20:10:47.476768 31917 net.cpp:408] relu1 <- ip1
I0428 20:10:47.476774 31917 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:47.476991 31917 net.cpp:124] Setting up relu1
I0428 20:10:47.477002 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.477005 31917 net.cpp:139] Memory required for data: 9122800
I0428 20:10:47.477010 31917 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:47.477018 31917 net.cpp:86] Creating Layer ip2
I0428 20:10:47.477026 31917 net.cpp:408] ip2 <- ip1
I0428 20:10:47.477032 31917 net.cpp:382] ip2 -> ip2
I0428 20:10:47.477151 31917 net.cpp:124] Setting up ip2
I0428 20:10:47.477159 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.477164 31917 net.cpp:139] Memory required for data: 9126800
I0428 20:10:47.477169 31917 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:47.477174 31917 net.cpp:86] Creating Layer relu2
I0428 20:10:47.477177 31917 net.cpp:408] relu2 <- ip2
I0428 20:10:47.477183 31917 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:47.477458 31917 net.cpp:124] Setting up relu2
I0428 20:10:47.477466 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.477471 31917 net.cpp:139] Memory required for data: 9130800
I0428 20:10:47.477474 31917 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:47.477483 31917 net.cpp:86] Creating Layer ip3
I0428 20:10:47.477485 31917 net.cpp:408] ip3 <- ip2
I0428 20:10:47.477493 31917 net.cpp:382] ip3 -> ip3
I0428 20:10:47.477607 31917 net.cpp:124] Setting up ip3
I0428 20:10:47.477615 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.477622 31917 net.cpp:139] Memory required for data: 9134800
I0428 20:10:47.477630 31917 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:47.477635 31917 net.cpp:86] Creating Layer relu3
I0428 20:10:47.477638 31917 net.cpp:408] relu3 <- ip3
I0428 20:10:47.477643 31917 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:47.478512 31917 net.cpp:124] Setting up relu3
I0428 20:10:47.478524 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.478528 31917 net.cpp:139] Memory required for data: 9138800
I0428 20:10:47.478533 31917 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:47.478539 31917 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:47.478543 31917 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:47.478549 31917 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:47.478559 31917 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:47.478606 31917 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:47.478615 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.478618 31917 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:47.478622 31917 net.cpp:139] Memory required for data: 9146800
I0428 20:10:47.478626 31917 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:47.478632 31917 net.cpp:86] Creating Layer accuracy
I0428 20:10:47.478638 31917 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:47.478643 31917 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:47.478648 31917 net.cpp:382] accuracy -> accuracy
I0428 20:10:47.478657 31917 net.cpp:124] Setting up accuracy
I0428 20:10:47.478660 31917 net.cpp:131] Top shape: (1)
I0428 20:10:47.478663 31917 net.cpp:139] Memory required for data: 9146804
I0428 20:10:47.478667 31917 layer_factory.hpp:77] Creating layer loss
I0428 20:10:47.478673 31917 net.cpp:86] Creating Layer loss
I0428 20:10:47.478677 31917 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:47.478682 31917 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:47.478687 31917 net.cpp:382] loss -> loss
I0428 20:10:47.478693 31917 layer_factory.hpp:77] Creating layer loss
I0428 20:10:47.478968 31917 net.cpp:124] Setting up loss
I0428 20:10:47.478978 31917 net.cpp:131] Top shape: (1)
I0428 20:10:47.478981 31917 net.cpp:134]     with loss weight 1
I0428 20:10:47.479002 31917 net.cpp:139] Memory required for data: 9146808
I0428 20:10:47.479007 31917 net.cpp:200] loss needs backward computation.
I0428 20:10:47.479012 31917 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:47.479017 31917 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:47.479020 31917 net.cpp:200] relu3 needs backward computation.
I0428 20:10:47.479023 31917 net.cpp:200] ip3 needs backward computation.
I0428 20:10:47.479027 31917 net.cpp:200] relu2 needs backward computation.
I0428 20:10:47.479029 31917 net.cpp:200] ip2 needs backward computation.
I0428 20:10:47.479033 31917 net.cpp:200] relu1 needs backward computation.
I0428 20:10:47.479037 31917 net.cpp:200] ip1 needs backward computation.
I0428 20:10:47.479040 31917 net.cpp:200] pool1 needs backward computation.
I0428 20:10:47.479043 31917 net.cpp:200] conv1 needs backward computation.
I0428 20:10:47.479048 31917 net.cpp:200] pool0 needs backward computation.
I0428 20:10:47.479050 31917 net.cpp:200] conv0 needs backward computation.
I0428 20:10:47.479054 31917 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:47.479059 31917 net.cpp:202] mnist does not need backward computation.
I0428 20:10:47.479061 31917 net.cpp:244] This network produces output accuracy
I0428 20:10:47.479066 31917 net.cpp:244] This network produces output loss
I0428 20:10:47.479079 31917 net.cpp:257] Network initialization done.
I0428 20:10:47.479126 31917 solver.cpp:56] Solver scaffolding done.
I0428 20:10:47.479518 31917 caffe.cpp:248] Starting Optimization
I0428 20:10:47.479526 31917 solver.cpp:273] Solving LeNet
I0428 20:10:47.479529 31917 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:47.480489 31917 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:47.487184 31917 blocking_queue.cpp:49] Waiting for data
I0428 20:10:47.556268 31949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:47.556896 31917 solver.cpp:398]     Test net output #0: accuracy = 0.0812
I0428 20:10:47.556926 31917 solver.cpp:398]     Test net output #1: loss = 2.30852 (* 1 = 2.30852 loss)
I0428 20:10:47.560652 31917 solver.cpp:219] Iteration 0 (0 iter/s, 0.0810886s/100 iters), loss = 2.30918
I0428 20:10:47.560673 31917 solver.cpp:238]     Train net output #0: loss = 2.30918 (* 1 = 2.30918 loss)
I0428 20:10:47.560685 31917 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:47.682958 31917 solver.cpp:219] Iteration 100 (817.857 iter/s, 0.122271s/100 iters), loss = 0.852316
I0428 20:10:47.682986 31917 solver.cpp:238]     Train net output #0: loss = 0.852316 (* 1 = 0.852316 loss)
I0428 20:10:47.682992 31917 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:47.802444 31917 solver.cpp:219] Iteration 200 (837.188 iter/s, 0.119448s/100 iters), loss = 0.358706
I0428 20:10:47.802484 31917 solver.cpp:238]     Train net output #0: loss = 0.358706 (* 1 = 0.358706 loss)
I0428 20:10:47.802489 31917 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:47.924638 31917 solver.cpp:219] Iteration 300 (818.605 iter/s, 0.122159s/100 iters), loss = 0.254378
I0428 20:10:47.924676 31917 solver.cpp:238]     Train net output #0: loss = 0.254378 (* 1 = 0.254378 loss)
I0428 20:10:47.924682 31917 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:48.046020 31917 solver.cpp:219] Iteration 400 (824.083 iter/s, 0.121347s/100 iters), loss = 0.0870346
I0428 20:10:48.046046 31917 solver.cpp:238]     Train net output #0: loss = 0.0870346 (* 1 = 0.0870346 loss)
I0428 20:10:48.046052 31917 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:48.165850 31917 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:48.222103 31949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:48.222791 31917 solver.cpp:398]     Test net output #0: accuracy = 0.9542
I0428 20:10:48.222823 31917 solver.cpp:398]     Test net output #1: loss = 0.157201 (* 1 = 0.157201 loss)
I0428 20:10:48.224210 31917 solver.cpp:219] Iteration 500 (561.375 iter/s, 0.178134s/100 iters), loss = 0.205051
I0428 20:10:48.224262 31917 solver.cpp:238]     Train net output #0: loss = 0.205051 (* 1 = 0.205051 loss)
I0428 20:10:48.224287 31917 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:48.351130 31917 solver.cpp:219] Iteration 600 (788.281 iter/s, 0.126858s/100 iters), loss = 0.145856
I0428 20:10:48.351168 31917 solver.cpp:238]     Train net output #0: loss = 0.145856 (* 1 = 0.145856 loss)
I0428 20:10:48.351176 31917 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:48.480144 31917 solver.cpp:219] Iteration 700 (775.467 iter/s, 0.128955s/100 iters), loss = 0.106691
I0428 20:10:48.480195 31917 solver.cpp:238]     Train net output #0: loss = 0.106691 (* 1 = 0.106691 loss)
I0428 20:10:48.480206 31917 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:48.620100 31917 solver.cpp:219] Iteration 800 (714.823 iter/s, 0.139895s/100 iters), loss = 0.242946
I0428 20:10:48.620141 31917 solver.cpp:238]     Train net output #0: loss = 0.242946 (* 1 = 0.242946 loss)
I0428 20:10:48.620151 31917 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:48.753829 31917 solver.cpp:219] Iteration 900 (748.066 iter/s, 0.133678s/100 iters), loss = 0.145657
I0428 20:10:48.753864 31917 solver.cpp:238]     Train net output #0: loss = 0.145657 (* 1 = 0.145657 loss)
I0428 20:10:48.753872 31917 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:48.796161 31948 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:48.880889 31917 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:48.882558 31917 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:48.883497 31917 solver.cpp:311] Iteration 1000, loss = 0.0586963
I0428 20:10:48.883518 31917 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:48.959419 31949 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:48.960130 31917 solver.cpp:398]     Test net output #0: accuracy = 0.9729
I0428 20:10:48.960160 31917 solver.cpp:398]     Test net output #1: loss = 0.0920424 (* 1 = 0.0920424 loss)
I0428 20:10:48.960168 31917 solver.cpp:316] Optimization Done.
I0428 20:10:48.960172 31917 caffe.cpp:259] Optimization Done.
