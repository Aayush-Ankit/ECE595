I0428 20:00:41.817703 29535 caffe.cpp:218] Using GPUs 0
I0428 20:00:41.857882 29535 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:42.317276 29535 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test883.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:42.317406 29535 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test883.prototxt
I0428 20:00:42.317757 29535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:42.317775 29535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:42.317885 29535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:42.317950 29535 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:42.318030 29535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:42.318049 29535 net.cpp:86] Creating Layer mnist
I0428 20:00:42.318056 29535 net.cpp:382] mnist -> data
I0428 20:00:42.318075 29535 net.cpp:382] mnist -> label
I0428 20:00:42.319072 29535 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:42.321343 29535 net.cpp:124] Setting up mnist
I0428 20:00:42.321388 29535 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:42.321395 29535 net.cpp:131] Top shape: 64 (64)
I0428 20:00:42.321398 29535 net.cpp:139] Memory required for data: 200960
I0428 20:00:42.321403 29535 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:42.321418 29535 net.cpp:86] Creating Layer conv0
I0428 20:00:42.321449 29535 net.cpp:408] conv0 <- data
I0428 20:00:42.321458 29535 net.cpp:382] conv0 -> conv0
I0428 20:00:42.554289 29535 net.cpp:124] Setting up conv0
I0428 20:00:42.554330 29535 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:42.554334 29535 net.cpp:139] Memory required for data: 1675520
I0428 20:00:42.554349 29535 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:42.554361 29535 net.cpp:86] Creating Layer pool0
I0428 20:00:42.554365 29535 net.cpp:408] pool0 <- conv0
I0428 20:00:42.554370 29535 net.cpp:382] pool0 -> pool0
I0428 20:00:42.554431 29535 net.cpp:124] Setting up pool0
I0428 20:00:42.554450 29535 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:42.554453 29535 net.cpp:139] Memory required for data: 2044160
I0428 20:00:42.554456 29535 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:42.554466 29535 net.cpp:86] Creating Layer conv1
I0428 20:00:42.554478 29535 net.cpp:408] conv1 <- pool0
I0428 20:00:42.554483 29535 net.cpp:382] conv1 -> conv1
I0428 20:00:42.557394 29535 net.cpp:124] Setting up conv1
I0428 20:00:42.557423 29535 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:42.557426 29535 net.cpp:139] Memory required for data: 2453760
I0428 20:00:42.557435 29535 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:42.557441 29535 net.cpp:86] Creating Layer pool1
I0428 20:00:42.557446 29535 net.cpp:408] pool1 <- conv1
I0428 20:00:42.557466 29535 net.cpp:382] pool1 -> pool1
I0428 20:00:42.557502 29535 net.cpp:124] Setting up pool1
I0428 20:00:42.557509 29535 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:42.557513 29535 net.cpp:139] Memory required for data: 2556160
I0428 20:00:42.557515 29535 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:42.557523 29535 net.cpp:86] Creating Layer ip1
I0428 20:00:42.557525 29535 net.cpp:408] ip1 <- pool1
I0428 20:00:42.557529 29535 net.cpp:382] ip1 -> ip1
I0428 20:00:42.557672 29535 net.cpp:124] Setting up ip1
I0428 20:00:42.557679 29535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:42.557682 29535 net.cpp:139] Memory required for data: 2562560
I0428 20:00:42.557689 29535 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:42.557694 29535 net.cpp:86] Creating Layer relu1
I0428 20:00:42.557698 29535 net.cpp:408] relu1 <- ip1
I0428 20:00:42.557701 29535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:42.557874 29535 net.cpp:124] Setting up relu1
I0428 20:00:42.557883 29535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:42.557886 29535 net.cpp:139] Memory required for data: 2568960
I0428 20:00:42.557889 29535 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:42.557895 29535 net.cpp:86] Creating Layer ip2
I0428 20:00:42.557898 29535 net.cpp:408] ip2 <- ip1
I0428 20:00:42.557904 29535 net.cpp:382] ip2 -> ip2
I0428 20:00:42.558008 29535 net.cpp:124] Setting up ip2
I0428 20:00:42.558014 29535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:42.558017 29535 net.cpp:139] Memory required for data: 2575360
I0428 20:00:42.558023 29535 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:42.558028 29535 net.cpp:86] Creating Layer relu2
I0428 20:00:42.558032 29535 net.cpp:408] relu2 <- ip2
I0428 20:00:42.558035 29535 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:42.558781 29535 net.cpp:124] Setting up relu2
I0428 20:00:42.558792 29535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:42.558811 29535 net.cpp:139] Memory required for data: 2581760
I0428 20:00:42.558815 29535 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:42.558821 29535 net.cpp:86] Creating Layer ip3
I0428 20:00:42.558825 29535 net.cpp:408] ip3 <- ip2
I0428 20:00:42.558830 29535 net.cpp:382] ip3 -> ip3
I0428 20:00:42.558940 29535 net.cpp:124] Setting up ip3
I0428 20:00:42.558948 29535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:42.558951 29535 net.cpp:139] Memory required for data: 2584320
I0428 20:00:42.558959 29535 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:42.558964 29535 net.cpp:86] Creating Layer relu3
I0428 20:00:42.558966 29535 net.cpp:408] relu3 <- ip3
I0428 20:00:42.558970 29535 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:42.559155 29535 net.cpp:124] Setting up relu3
I0428 20:00:42.559165 29535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:42.559167 29535 net.cpp:139] Memory required for data: 2586880
I0428 20:00:42.559171 29535 layer_factory.hpp:77] Creating layer loss
I0428 20:00:42.559176 29535 net.cpp:86] Creating Layer loss
I0428 20:00:42.559180 29535 net.cpp:408] loss <- ip3
I0428 20:00:42.559185 29535 net.cpp:408] loss <- label
I0428 20:00:42.559190 29535 net.cpp:382] loss -> loss
I0428 20:00:42.559207 29535 layer_factory.hpp:77] Creating layer loss
I0428 20:00:42.559448 29535 net.cpp:124] Setting up loss
I0428 20:00:42.559458 29535 net.cpp:131] Top shape: (1)
I0428 20:00:42.559460 29535 net.cpp:134]     with loss weight 1
I0428 20:00:42.559489 29535 net.cpp:139] Memory required for data: 2586884
I0428 20:00:42.559492 29535 net.cpp:200] loss needs backward computation.
I0428 20:00:42.559495 29535 net.cpp:200] relu3 needs backward computation.
I0428 20:00:42.559499 29535 net.cpp:200] ip3 needs backward computation.
I0428 20:00:42.559501 29535 net.cpp:200] relu2 needs backward computation.
I0428 20:00:42.559504 29535 net.cpp:200] ip2 needs backward computation.
I0428 20:00:42.559506 29535 net.cpp:200] relu1 needs backward computation.
I0428 20:00:42.559509 29535 net.cpp:200] ip1 needs backward computation.
I0428 20:00:42.559512 29535 net.cpp:200] pool1 needs backward computation.
I0428 20:00:42.559514 29535 net.cpp:200] conv1 needs backward computation.
I0428 20:00:42.559518 29535 net.cpp:200] pool0 needs backward computation.
I0428 20:00:42.559520 29535 net.cpp:200] conv0 needs backward computation.
I0428 20:00:42.559525 29535 net.cpp:202] mnist does not need backward computation.
I0428 20:00:42.559526 29535 net.cpp:244] This network produces output loss
I0428 20:00:42.559535 29535 net.cpp:257] Network initialization done.
I0428 20:00:42.559898 29535 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test883.prototxt
I0428 20:00:42.559949 29535 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:42.560084 29535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:42.560161 29535 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:42.560204 29535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:42.560216 29535 net.cpp:86] Creating Layer mnist
I0428 20:00:42.560220 29535 net.cpp:382] mnist -> data
I0428 20:00:42.560228 29535 net.cpp:382] mnist -> label
I0428 20:00:42.560312 29535 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:42.562348 29535 net.cpp:124] Setting up mnist
I0428 20:00:42.562392 29535 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:42.562398 29535 net.cpp:131] Top shape: 100 (100)
I0428 20:00:42.562402 29535 net.cpp:139] Memory required for data: 314000
I0428 20:00:42.562405 29535 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:42.562412 29535 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:42.562415 29535 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:42.562420 29535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:42.562427 29535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:42.562475 29535 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:42.562481 29535 net.cpp:131] Top shape: 100 (100)
I0428 20:00:42.562484 29535 net.cpp:131] Top shape: 100 (100)
I0428 20:00:42.562487 29535 net.cpp:139] Memory required for data: 314800
I0428 20:00:42.562490 29535 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:42.562500 29535 net.cpp:86] Creating Layer conv0
I0428 20:00:42.562516 29535 net.cpp:408] conv0 <- data
I0428 20:00:42.562521 29535 net.cpp:382] conv0 -> conv0
I0428 20:00:42.564092 29535 net.cpp:124] Setting up conv0
I0428 20:00:42.564106 29535 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:42.564126 29535 net.cpp:139] Memory required for data: 2618800
I0428 20:00:42.564133 29535 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:42.564139 29535 net.cpp:86] Creating Layer pool0
I0428 20:00:42.564143 29535 net.cpp:408] pool0 <- conv0
I0428 20:00:42.564147 29535 net.cpp:382] pool0 -> pool0
I0428 20:00:42.564199 29535 net.cpp:124] Setting up pool0
I0428 20:00:42.564204 29535 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:42.564208 29535 net.cpp:139] Memory required for data: 3194800
I0428 20:00:42.564210 29535 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:42.564218 29535 net.cpp:86] Creating Layer conv1
I0428 20:00:42.564221 29535 net.cpp:408] conv1 <- pool0
I0428 20:00:42.564226 29535 net.cpp:382] conv1 -> conv1
I0428 20:00:42.566484 29535 net.cpp:124] Setting up conv1
I0428 20:00:42.566498 29535 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:42.566517 29535 net.cpp:139] Memory required for data: 3834800
I0428 20:00:42.566526 29535 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:42.566534 29535 net.cpp:86] Creating Layer pool1
I0428 20:00:42.566543 29535 net.cpp:408] pool1 <- conv1
I0428 20:00:42.566565 29535 net.cpp:382] pool1 -> pool1
I0428 20:00:42.566622 29535 net.cpp:124] Setting up pool1
I0428 20:00:42.566630 29535 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:42.566633 29535 net.cpp:139] Memory required for data: 3994800
I0428 20:00:42.566637 29535 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:42.566643 29535 net.cpp:86] Creating Layer ip1
I0428 20:00:42.566646 29535 net.cpp:408] ip1 <- pool1
I0428 20:00:42.566651 29535 net.cpp:382] ip1 -> ip1
I0428 20:00:42.566889 29535 net.cpp:124] Setting up ip1
I0428 20:00:42.566897 29535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:42.566912 29535 net.cpp:139] Memory required for data: 4004800
I0428 20:00:42.566921 29535 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:42.566927 29535 net.cpp:86] Creating Layer relu1
I0428 20:00:42.566934 29535 net.cpp:408] relu1 <- ip1
I0428 20:00:42.566939 29535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:42.567152 29535 net.cpp:124] Setting up relu1
I0428 20:00:42.567162 29535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:42.567164 29535 net.cpp:139] Memory required for data: 4014800
I0428 20:00:42.567167 29535 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:42.567175 29535 net.cpp:86] Creating Layer ip2
I0428 20:00:42.567178 29535 net.cpp:408] ip2 <- ip1
I0428 20:00:42.567184 29535 net.cpp:382] ip2 -> ip2
I0428 20:00:42.567286 29535 net.cpp:124] Setting up ip2
I0428 20:00:42.567293 29535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:42.567296 29535 net.cpp:139] Memory required for data: 4024800
I0428 20:00:42.567302 29535 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:42.567306 29535 net.cpp:86] Creating Layer relu2
I0428 20:00:42.567309 29535 net.cpp:408] relu2 <- ip2
I0428 20:00:42.567313 29535 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:42.567526 29535 net.cpp:124] Setting up relu2
I0428 20:00:42.567536 29535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:42.567539 29535 net.cpp:139] Memory required for data: 4034800
I0428 20:00:42.567543 29535 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:42.567549 29535 net.cpp:86] Creating Layer ip3
I0428 20:00:42.567553 29535 net.cpp:408] ip3 <- ip2
I0428 20:00:42.567559 29535 net.cpp:382] ip3 -> ip3
I0428 20:00:42.567692 29535 net.cpp:124] Setting up ip3
I0428 20:00:42.567700 29535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:42.567703 29535 net.cpp:139] Memory required for data: 4038800
I0428 20:00:42.567713 29535 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:42.567734 29535 net.cpp:86] Creating Layer relu3
I0428 20:00:42.567737 29535 net.cpp:408] relu3 <- ip3
I0428 20:00:42.567742 29535 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:42.568655 29535 net.cpp:124] Setting up relu3
I0428 20:00:42.568684 29535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:42.568688 29535 net.cpp:139] Memory required for data: 4042800
I0428 20:00:42.568691 29535 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:42.568697 29535 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:42.568701 29535 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:42.568707 29535 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:42.568714 29535 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:42.568768 29535 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:42.568775 29535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:42.568780 29535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:42.568797 29535 net.cpp:139] Memory required for data: 4050800
I0428 20:00:42.568801 29535 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:42.568817 29535 net.cpp:86] Creating Layer accuracy
I0428 20:00:42.568821 29535 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:42.568826 29535 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:42.568831 29535 net.cpp:382] accuracy -> accuracy
I0428 20:00:42.568840 29535 net.cpp:124] Setting up accuracy
I0428 20:00:42.568845 29535 net.cpp:131] Top shape: (1)
I0428 20:00:42.568848 29535 net.cpp:139] Memory required for data: 4050804
I0428 20:00:42.568861 29535 layer_factory.hpp:77] Creating layer loss
I0428 20:00:42.568866 29535 net.cpp:86] Creating Layer loss
I0428 20:00:42.568887 29535 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:42.568892 29535 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:42.568897 29535 net.cpp:382] loss -> loss
I0428 20:00:42.568903 29535 layer_factory.hpp:77] Creating layer loss
I0428 20:00:42.569196 29535 net.cpp:124] Setting up loss
I0428 20:00:42.569205 29535 net.cpp:131] Top shape: (1)
I0428 20:00:42.569208 29535 net.cpp:134]     with loss weight 1
I0428 20:00:42.569234 29535 net.cpp:139] Memory required for data: 4050808
I0428 20:00:42.569238 29535 net.cpp:200] loss needs backward computation.
I0428 20:00:42.569242 29535 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:42.569245 29535 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:42.569248 29535 net.cpp:200] relu3 needs backward computation.
I0428 20:00:42.569252 29535 net.cpp:200] ip3 needs backward computation.
I0428 20:00:42.569255 29535 net.cpp:200] relu2 needs backward computation.
I0428 20:00:42.569257 29535 net.cpp:200] ip2 needs backward computation.
I0428 20:00:42.569260 29535 net.cpp:200] relu1 needs backward computation.
I0428 20:00:42.569270 29535 net.cpp:200] ip1 needs backward computation.
I0428 20:00:42.569273 29535 net.cpp:200] pool1 needs backward computation.
I0428 20:00:42.569278 29535 net.cpp:200] conv1 needs backward computation.
I0428 20:00:42.569280 29535 net.cpp:200] pool0 needs backward computation.
I0428 20:00:42.569283 29535 net.cpp:200] conv0 needs backward computation.
I0428 20:00:42.569286 29535 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:42.569290 29535 net.cpp:202] mnist does not need backward computation.
I0428 20:00:42.569293 29535 net.cpp:244] This network produces output accuracy
I0428 20:00:42.569296 29535 net.cpp:244] This network produces output loss
I0428 20:00:42.569306 29535 net.cpp:257] Network initialization done.
I0428 20:00:42.569346 29535 solver.cpp:56] Solver scaffolding done.
I0428 20:00:42.569730 29535 caffe.cpp:248] Starting Optimization
I0428 20:00:42.569737 29535 solver.cpp:273] Solving LeNet
I0428 20:00:42.569741 29535 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:42.570708 29535 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:42.575073 29535 blocking_queue.cpp:49] Waiting for data
I0428 20:00:42.645015 29542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:42.645632 29535 solver.cpp:398]     Test net output #0: accuracy = 0.1174
I0428 20:00:42.645666 29535 solver.cpp:398]     Test net output #1: loss = 2.31969 (* 1 = 2.31969 loss)
I0428 20:00:42.648385 29535 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786043s/100 iters), loss = 2.31335
I0428 20:00:42.648423 29535 solver.cpp:238]     Train net output #0: loss = 2.31335 (* 1 = 2.31335 loss)
I0428 20:00:42.648434 29535 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:42.753793 29535 solver.cpp:219] Iteration 100 (949.041 iter/s, 0.10537s/100 iters), loss = 0.959978
I0428 20:00:42.753829 29535 solver.cpp:238]     Train net output #0: loss = 0.959978 (* 1 = 0.959978 loss)
I0428 20:00:42.753839 29535 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:42.847463 29535 solver.cpp:219] Iteration 200 (1068.1 iter/s, 0.0936243s/100 iters), loss = 0.57897
I0428 20:00:42.847493 29535 solver.cpp:238]     Train net output #0: loss = 0.57897 (* 1 = 0.57897 loss)
I0428 20:00:42.847501 29535 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:42.945019 29535 solver.cpp:219] Iteration 300 (1025.54 iter/s, 0.0975094s/100 iters), loss = 0.290885
I0428 20:00:42.945067 29535 solver.cpp:238]     Train net output #0: loss = 0.290885 (* 1 = 0.290885 loss)
I0428 20:00:42.945082 29535 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:43.047919 29535 solver.cpp:219] Iteration 400 (972.353 iter/s, 0.102843s/100 iters), loss = 0.167866
I0428 20:00:43.047952 29535 solver.cpp:238]     Train net output #0: loss = 0.167866 (* 1 = 0.167866 loss)
I0428 20:00:43.047961 29535 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:43.148841 29535 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:43.212950 29542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:43.213541 29535 solver.cpp:398]     Test net output #0: accuracy = 0.9594
I0428 20:00:43.213568 29535 solver.cpp:398]     Test net output #1: loss = 0.136213 (* 1 = 0.136213 loss)
I0428 20:00:43.214627 29535 solver.cpp:219] Iteration 500 (600.016 iter/s, 0.166662s/100 iters), loss = 0.193907
I0428 20:00:43.214679 29535 solver.cpp:238]     Train net output #0: loss = 0.193907 (* 1 = 0.193907 loss)
I0428 20:00:43.214687 29535 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:43.309994 29535 solver.cpp:219] Iteration 600 (1049.25 iter/s, 0.0953059s/100 iters), loss = 0.110378
I0428 20:00:43.310027 29535 solver.cpp:238]     Train net output #0: loss = 0.110378 (* 1 = 0.110378 loss)
I0428 20:00:43.310035 29535 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:43.402915 29535 solver.cpp:219] Iteration 700 (1076.7 iter/s, 0.0928768s/100 iters), loss = 0.199617
I0428 20:00:43.402946 29535 solver.cpp:238]     Train net output #0: loss = 0.199617 (* 1 = 0.199617 loss)
I0428 20:00:43.402954 29535 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:43.494874 29535 solver.cpp:219] Iteration 800 (1087.93 iter/s, 0.0919173s/100 iters), loss = 0.242822
I0428 20:00:43.494906 29535 solver.cpp:238]     Train net output #0: loss = 0.242822 (* 1 = 0.242822 loss)
I0428 20:00:43.494915 29535 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:43.587349 29535 solver.cpp:219] Iteration 900 (1081.87 iter/s, 0.0924324s/100 iters), loss = 0.207078
I0428 20:00:43.587381 29535 solver.cpp:238]     Train net output #0: loss = 0.207078 (* 1 = 0.207078 loss)
I0428 20:00:43.587389 29535 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:43.618263 29541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:43.688527 29535 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:43.689857 29535 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:43.690852 29535 solver.cpp:311] Iteration 1000, loss = 0.143215
I0428 20:00:43.690888 29535 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:43.754320 29542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:43.756168 29535 solver.cpp:398]     Test net output #0: accuracy = 0.9747
I0428 20:00:43.756201 29535 solver.cpp:398]     Test net output #1: loss = 0.0846373 (* 1 = 0.0846373 loss)
I0428 20:00:43.756208 29535 solver.cpp:316] Optimization Done.
I0428 20:00:43.756212 29535 caffe.cpp:259] Optimization Done.
