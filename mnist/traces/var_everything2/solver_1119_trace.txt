I0428 20:09:49.524019 31710 caffe.cpp:218] Using GPUs 0
I0428 20:09:49.554755 31710 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:50.003367 31710 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1119.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:50.003514 31710 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1119.prototxt
I0428 20:09:50.003895 31710 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:50.003924 31710 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:50.004007 31710 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:50.004070 31710 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:50.004180 31710 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:50.004199 31710 net.cpp:86] Creating Layer mnist
I0428 20:09:50.004205 31710 net.cpp:382] mnist -> data
I0428 20:09:50.004223 31710 net.cpp:382] mnist -> label
I0428 20:09:50.005199 31710 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:50.007467 31710 net.cpp:124] Setting up mnist
I0428 20:09:50.007498 31710 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:50.007503 31710 net.cpp:131] Top shape: 64 (64)
I0428 20:09:50.007506 31710 net.cpp:139] Memory required for data: 200960
I0428 20:09:50.007513 31710 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:50.007524 31710 net.cpp:86] Creating Layer conv0
I0428 20:09:50.007542 31710 net.cpp:408] conv0 <- data
I0428 20:09:50.007552 31710 net.cpp:382] conv0 -> conv0
I0428 20:09:50.248806 31710 net.cpp:124] Setting up conv0
I0428 20:09:50.248878 31710 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:50.248881 31710 net.cpp:139] Memory required for data: 3887360
I0428 20:09:50.248898 31710 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:50.248911 31710 net.cpp:86] Creating Layer pool0
I0428 20:09:50.248915 31710 net.cpp:408] pool0 <- conv0
I0428 20:09:50.248921 31710 net.cpp:382] pool0 -> pool0
I0428 20:09:50.248968 31710 net.cpp:124] Setting up pool0
I0428 20:09:50.248975 31710 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:50.248980 31710 net.cpp:139] Memory required for data: 4808960
I0428 20:09:50.248982 31710 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:50.248993 31710 net.cpp:86] Creating Layer conv1
I0428 20:09:50.248996 31710 net.cpp:408] conv1 <- pool0
I0428 20:09:50.249002 31710 net.cpp:382] conv1 -> conv1
I0428 20:09:50.251969 31710 net.cpp:124] Setting up conv1
I0428 20:09:50.251983 31710 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:50.251987 31710 net.cpp:139] Memory required for data: 5218560
I0428 20:09:50.252012 31710 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:50.252018 31710 net.cpp:86] Creating Layer pool1
I0428 20:09:50.252022 31710 net.cpp:408] pool1 <- conv1
I0428 20:09:50.252027 31710 net.cpp:382] pool1 -> pool1
I0428 20:09:50.252063 31710 net.cpp:124] Setting up pool1
I0428 20:09:50.252069 31710 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:50.252089 31710 net.cpp:139] Memory required for data: 5320960
I0428 20:09:50.252091 31710 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:50.252099 31710 net.cpp:86] Creating Layer ip1
I0428 20:09:50.252101 31710 net.cpp:408] ip1 <- pool1
I0428 20:09:50.252106 31710 net.cpp:382] ip1 -> ip1
I0428 20:09:50.252280 31710 net.cpp:124] Setting up ip1
I0428 20:09:50.252288 31710 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:50.252291 31710 net.cpp:139] Memory required for data: 5327360
I0428 20:09:50.252300 31710 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:50.252305 31710 net.cpp:86] Creating Layer relu1
I0428 20:09:50.252308 31710 net.cpp:408] relu1 <- ip1
I0428 20:09:50.252312 31710 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:50.252492 31710 net.cpp:124] Setting up relu1
I0428 20:09:50.252516 31710 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:50.252518 31710 net.cpp:139] Memory required for data: 5333760
I0428 20:09:50.252521 31710 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:50.252528 31710 net.cpp:86] Creating Layer ip2
I0428 20:09:50.252532 31710 net.cpp:408] ip2 <- ip1
I0428 20:09:50.252537 31710 net.cpp:382] ip2 -> ip2
I0428 20:09:50.253605 31710 net.cpp:124] Setting up ip2
I0428 20:09:50.253618 31710 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:50.253621 31710 net.cpp:139] Memory required for data: 5346560
I0428 20:09:50.253628 31710 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:50.253634 31710 net.cpp:86] Creating Layer relu2
I0428 20:09:50.253638 31710 net.cpp:408] relu2 <- ip2
I0428 20:09:50.253643 31710 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:50.254348 31710 net.cpp:124] Setting up relu2
I0428 20:09:50.254361 31710 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:50.254364 31710 net.cpp:139] Memory required for data: 5359360
I0428 20:09:50.254369 31710 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:50.254375 31710 net.cpp:86] Creating Layer ip3
I0428 20:09:50.254379 31710 net.cpp:408] ip3 <- ip2
I0428 20:09:50.254384 31710 net.cpp:382] ip3 -> ip3
I0428 20:09:50.254480 31710 net.cpp:124] Setting up ip3
I0428 20:09:50.254488 31710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:50.254492 31710 net.cpp:139] Memory required for data: 5361920
I0428 20:09:50.254498 31710 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:50.254503 31710 net.cpp:86] Creating Layer relu3
I0428 20:09:50.254506 31710 net.cpp:408] relu3 <- ip3
I0428 20:09:50.254510 31710 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:50.254668 31710 net.cpp:124] Setting up relu3
I0428 20:09:50.254678 31710 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:50.254680 31710 net.cpp:139] Memory required for data: 5364480
I0428 20:09:50.254683 31710 layer_factory.hpp:77] Creating layer loss
I0428 20:09:50.254689 31710 net.cpp:86] Creating Layer loss
I0428 20:09:50.254693 31710 net.cpp:408] loss <- ip3
I0428 20:09:50.254696 31710 net.cpp:408] loss <- label
I0428 20:09:50.254701 31710 net.cpp:382] loss -> loss
I0428 20:09:50.254716 31710 layer_factory.hpp:77] Creating layer loss
I0428 20:09:50.254932 31710 net.cpp:124] Setting up loss
I0428 20:09:50.254941 31710 net.cpp:131] Top shape: (1)
I0428 20:09:50.254945 31710 net.cpp:134]     with loss weight 1
I0428 20:09:50.254957 31710 net.cpp:139] Memory required for data: 5364484
I0428 20:09:50.254961 31710 net.cpp:200] loss needs backward computation.
I0428 20:09:50.254964 31710 net.cpp:200] relu3 needs backward computation.
I0428 20:09:50.254967 31710 net.cpp:200] ip3 needs backward computation.
I0428 20:09:50.254971 31710 net.cpp:200] relu2 needs backward computation.
I0428 20:09:50.254973 31710 net.cpp:200] ip2 needs backward computation.
I0428 20:09:50.254977 31710 net.cpp:200] relu1 needs backward computation.
I0428 20:09:50.254979 31710 net.cpp:200] ip1 needs backward computation.
I0428 20:09:50.254982 31710 net.cpp:200] pool1 needs backward computation.
I0428 20:09:50.254986 31710 net.cpp:200] conv1 needs backward computation.
I0428 20:09:50.254988 31710 net.cpp:200] pool0 needs backward computation.
I0428 20:09:50.254992 31710 net.cpp:200] conv0 needs backward computation.
I0428 20:09:50.254995 31710 net.cpp:202] mnist does not need backward computation.
I0428 20:09:50.254998 31710 net.cpp:244] This network produces output loss
I0428 20:09:50.255007 31710 net.cpp:257] Network initialization done.
I0428 20:09:50.255323 31710 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1119.prototxt
I0428 20:09:50.255349 31710 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:50.255441 31710 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:50.255519 31710 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:50.255560 31710 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:50.255575 31710 net.cpp:86] Creating Layer mnist
I0428 20:09:50.255579 31710 net.cpp:382] mnist -> data
I0428 20:09:50.255587 31710 net.cpp:382] mnist -> label
I0428 20:09:50.255668 31710 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:50.257611 31710 net.cpp:124] Setting up mnist
I0428 20:09:50.257625 31710 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:50.257645 31710 net.cpp:131] Top shape: 100 (100)
I0428 20:09:50.257648 31710 net.cpp:139] Memory required for data: 314000
I0428 20:09:50.257652 31710 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:50.257659 31710 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:50.257663 31710 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:50.257668 31710 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:50.257673 31710 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:50.257745 31710 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:50.257752 31710 net.cpp:131] Top shape: 100 (100)
I0428 20:09:50.257756 31710 net.cpp:131] Top shape: 100 (100)
I0428 20:09:50.257760 31710 net.cpp:139] Memory required for data: 314800
I0428 20:09:50.257762 31710 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:50.257771 31710 net.cpp:86] Creating Layer conv0
I0428 20:09:50.257776 31710 net.cpp:408] conv0 <- data
I0428 20:09:50.257781 31710 net.cpp:382] conv0 -> conv0
I0428 20:09:50.259472 31710 net.cpp:124] Setting up conv0
I0428 20:09:50.259487 31710 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:50.259491 31710 net.cpp:139] Memory required for data: 6074800
I0428 20:09:50.259501 31710 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:50.259508 31710 net.cpp:86] Creating Layer pool0
I0428 20:09:50.259515 31710 net.cpp:408] pool0 <- conv0
I0428 20:09:50.259534 31710 net.cpp:382] pool0 -> pool0
I0428 20:09:50.259605 31710 net.cpp:124] Setting up pool0
I0428 20:09:50.259613 31710 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:50.259616 31710 net.cpp:139] Memory required for data: 7514800
I0428 20:09:50.259619 31710 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:50.259627 31710 net.cpp:86] Creating Layer conv1
I0428 20:09:50.259631 31710 net.cpp:408] conv1 <- pool0
I0428 20:09:50.259636 31710 net.cpp:382] conv1 -> conv1
I0428 20:09:50.261878 31710 net.cpp:124] Setting up conv1
I0428 20:09:50.261891 31710 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:50.261895 31710 net.cpp:139] Memory required for data: 8154800
I0428 20:09:50.261904 31710 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:50.261910 31710 net.cpp:86] Creating Layer pool1
I0428 20:09:50.261914 31710 net.cpp:408] pool1 <- conv1
I0428 20:09:50.261919 31710 net.cpp:382] pool1 -> pool1
I0428 20:09:50.261986 31710 net.cpp:124] Setting up pool1
I0428 20:09:50.261993 31710 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:50.261997 31710 net.cpp:139] Memory required for data: 8314800
I0428 20:09:50.262001 31710 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:50.262006 31710 net.cpp:86] Creating Layer ip1
I0428 20:09:50.262009 31710 net.cpp:408] ip1 <- pool1
I0428 20:09:50.262015 31710 net.cpp:382] ip1 -> ip1
I0428 20:09:50.262200 31710 net.cpp:124] Setting up ip1
I0428 20:09:50.262209 31710 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:50.262224 31710 net.cpp:139] Memory required for data: 8324800
I0428 20:09:50.262231 31710 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:50.262240 31710 net.cpp:86] Creating Layer relu1
I0428 20:09:50.262259 31710 net.cpp:408] relu1 <- ip1
I0428 20:09:50.262264 31710 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:50.262439 31710 net.cpp:124] Setting up relu1
I0428 20:09:50.262449 31710 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:50.262454 31710 net.cpp:139] Memory required for data: 8334800
I0428 20:09:50.262457 31710 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:50.262465 31710 net.cpp:86] Creating Layer ip2
I0428 20:09:50.262470 31710 net.cpp:408] ip2 <- ip1
I0428 20:09:50.262476 31710 net.cpp:382] ip2 -> ip2
I0428 20:09:50.262588 31710 net.cpp:124] Setting up ip2
I0428 20:09:50.262595 31710 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:50.262598 31710 net.cpp:139] Memory required for data: 8354800
I0428 20:09:50.262604 31710 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:50.262609 31710 net.cpp:86] Creating Layer relu2
I0428 20:09:50.262614 31710 net.cpp:408] relu2 <- ip2
I0428 20:09:50.262617 31710 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:50.262804 31710 net.cpp:124] Setting up relu2
I0428 20:09:50.262811 31710 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:50.262814 31710 net.cpp:139] Memory required for data: 8374800
I0428 20:09:50.262818 31710 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:50.262840 31710 net.cpp:86] Creating Layer ip3
I0428 20:09:50.262852 31710 net.cpp:408] ip3 <- ip2
I0428 20:09:50.262858 31710 net.cpp:382] ip3 -> ip3
I0428 20:09:50.262974 31710 net.cpp:124] Setting up ip3
I0428 20:09:50.262981 31710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:50.262984 31710 net.cpp:139] Memory required for data: 8378800
I0428 20:09:50.262992 31710 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:50.263000 31710 net.cpp:86] Creating Layer relu3
I0428 20:09:50.263003 31710 net.cpp:408] relu3 <- ip3
I0428 20:09:50.263007 31710 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:50.263895 31710 net.cpp:124] Setting up relu3
I0428 20:09:50.263909 31710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:50.263919 31710 net.cpp:139] Memory required for data: 8382800
I0428 20:09:50.263924 31710 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:50.263931 31710 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:50.263934 31710 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:50.263939 31710 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:50.263945 31710 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:50.263983 31710 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:50.263989 31710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:50.263993 31710 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:50.263996 31710 net.cpp:139] Memory required for data: 8390800
I0428 20:09:50.263999 31710 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:50.264004 31710 net.cpp:86] Creating Layer accuracy
I0428 20:09:50.264008 31710 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:50.264012 31710 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:50.264017 31710 net.cpp:382] accuracy -> accuracy
I0428 20:09:50.264036 31710 net.cpp:124] Setting up accuracy
I0428 20:09:50.264040 31710 net.cpp:131] Top shape: (1)
I0428 20:09:50.264045 31710 net.cpp:139] Memory required for data: 8390804
I0428 20:09:50.264047 31710 layer_factory.hpp:77] Creating layer loss
I0428 20:09:50.264052 31710 net.cpp:86] Creating Layer loss
I0428 20:09:50.264055 31710 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:50.264060 31710 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:50.264065 31710 net.cpp:382] loss -> loss
I0428 20:09:50.264070 31710 layer_factory.hpp:77] Creating layer loss
I0428 20:09:50.264363 31710 net.cpp:124] Setting up loss
I0428 20:09:50.264385 31710 net.cpp:131] Top shape: (1)
I0428 20:09:50.264400 31710 net.cpp:134]     with loss weight 1
I0428 20:09:50.264431 31710 net.cpp:139] Memory required for data: 8390808
I0428 20:09:50.264436 31710 net.cpp:200] loss needs backward computation.
I0428 20:09:50.264441 31710 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:50.264446 31710 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:50.264448 31710 net.cpp:200] relu3 needs backward computation.
I0428 20:09:50.264452 31710 net.cpp:200] ip3 needs backward computation.
I0428 20:09:50.264456 31710 net.cpp:200] relu2 needs backward computation.
I0428 20:09:50.264459 31710 net.cpp:200] ip2 needs backward computation.
I0428 20:09:50.264463 31710 net.cpp:200] relu1 needs backward computation.
I0428 20:09:50.264467 31710 net.cpp:200] ip1 needs backward computation.
I0428 20:09:50.264469 31710 net.cpp:200] pool1 needs backward computation.
I0428 20:09:50.264473 31710 net.cpp:200] conv1 needs backward computation.
I0428 20:09:50.264477 31710 net.cpp:200] pool0 needs backward computation.
I0428 20:09:50.264482 31710 net.cpp:200] conv0 needs backward computation.
I0428 20:09:50.264485 31710 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:50.264490 31710 net.cpp:202] mnist does not need backward computation.
I0428 20:09:50.264493 31710 net.cpp:244] This network produces output accuracy
I0428 20:09:50.264497 31710 net.cpp:244] This network produces output loss
I0428 20:09:50.264508 31710 net.cpp:257] Network initialization done.
I0428 20:09:50.264555 31710 solver.cpp:56] Solver scaffolding done.
I0428 20:09:50.264966 31710 caffe.cpp:248] Starting Optimization
I0428 20:09:50.264972 31710 solver.cpp:273] Solving LeNet
I0428 20:09:50.264976 31710 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:50.265857 31710 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:50.271697 31710 blocking_queue.cpp:49] Waiting for data
I0428 20:09:50.341248 31717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:50.341873 31710 solver.cpp:398]     Test net output #0: accuracy = 0.0514
I0428 20:09:50.341909 31710 solver.cpp:398]     Test net output #1: loss = 2.30772 (* 1 = 2.30772 loss)
I0428 20:09:50.345589 31710 solver.cpp:219] Iteration 0 (0 iter/s, 0.0805807s/100 iters), loss = 2.30423
I0428 20:09:50.345643 31710 solver.cpp:238]     Train net output #0: loss = 2.30423 (* 1 = 2.30423 loss)
I0428 20:09:50.345654 31710 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:50.453011 31710 solver.cpp:219] Iteration 100 (931.336 iter/s, 0.107373s/100 iters), loss = 1.49521
I0428 20:09:50.453050 31710 solver.cpp:238]     Train net output #0: loss = 1.49521 (* 1 = 1.49521 loss)
I0428 20:09:50.453057 31710 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:50.557911 31710 solver.cpp:219] Iteration 200 (953.591 iter/s, 0.104867s/100 iters), loss = 0.796307
I0428 20:09:50.557934 31710 solver.cpp:238]     Train net output #0: loss = 0.796307 (* 1 = 0.796307 loss)
I0428 20:09:50.557940 31710 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:50.657275 31710 solver.cpp:219] Iteration 300 (1006.73 iter/s, 0.0993311s/100 iters), loss = 0.674864
I0428 20:09:50.657299 31710 solver.cpp:238]     Train net output #0: loss = 0.674864 (* 1 = 0.674864 loss)
I0428 20:09:50.657304 31710 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:50.765528 31710 solver.cpp:219] Iteration 400 (924.102 iter/s, 0.108213s/100 iters), loss = 0.726339
I0428 20:09:50.765580 31710 solver.cpp:238]     Train net output #0: loss = 0.726339 (* 1 = 0.726339 loss)
I0428 20:09:50.765607 31710 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:50.880097 31710 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:50.938940 31717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:50.940852 31710 solver.cpp:398]     Test net output #0: accuracy = 0.8745
I0428 20:09:50.940876 31710 solver.cpp:398]     Test net output #1: loss = 0.442996 (* 1 = 0.442996 loss)
I0428 20:09:50.941857 31710 solver.cpp:219] Iteration 500 (567.32 iter/s, 0.176267s/100 iters), loss = 0.389604
I0428 20:09:50.941902 31710 solver.cpp:238]     Train net output #0: loss = 0.389604 (* 1 = 0.389604 loss)
I0428 20:09:50.941910 31710 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:51.045949 31710 solver.cpp:219] Iteration 600 (961.202 iter/s, 0.104036s/100 iters), loss = 0.319955
I0428 20:09:51.045980 31710 solver.cpp:238]     Train net output #0: loss = 0.319955 (* 1 = 0.319955 loss)
I0428 20:09:51.045987 31710 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:51.151379 31710 solver.cpp:219] Iteration 700 (948.874 iter/s, 0.105388s/100 iters), loss = 0.438582
I0428 20:09:51.151410 31710 solver.cpp:238]     Train net output #0: loss = 0.438582 (* 1 = 0.438582 loss)
I0428 20:09:51.151418 31710 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:51.257410 31710 solver.cpp:219] Iteration 800 (943.502 iter/s, 0.105988s/100 iters), loss = 0.47474
I0428 20:09:51.257441 31710 solver.cpp:238]     Train net output #0: loss = 0.474739 (* 1 = 0.474739 loss)
I0428 20:09:51.257449 31710 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:51.370842 31710 solver.cpp:219] Iteration 900 (881.939 iter/s, 0.113386s/100 iters), loss = 0.317757
I0428 20:09:51.370888 31710 solver.cpp:238]     Train net output #0: loss = 0.317757 (* 1 = 0.317757 loss)
I0428 20:09:51.370900 31710 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:51.408824 31716 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:51.478919 31710 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:51.480178 31710 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:51.481021 31710 solver.cpp:311] Iteration 1000, loss = 0.382395
I0428 20:09:51.481043 31710 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:51.541662 31717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:51.543290 31710 solver.cpp:398]     Test net output #0: accuracy = 0.9672
I0428 20:09:51.543314 31710 solver.cpp:398]     Test net output #1: loss = 0.318277 (* 1 = 0.318277 loss)
I0428 20:09:51.543320 31710 solver.cpp:316] Optimization Done.
I0428 20:09:51.543324 31710 caffe.cpp:259] Optimization Done.
