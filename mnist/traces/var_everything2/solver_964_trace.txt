I0428 20:04:03.220682 30312 caffe.cpp:218] Using GPUs 0
I0428 20:04:03.253855 30312 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:03.705878 30312 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test964.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:03.706007 30312 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test964.prototxt
I0428 20:04:03.706338 30312 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:03.706354 30312 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:03.706434 30312 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:03.706497 30312 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:03.706578 30312 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:03.706596 30312 net.cpp:86] Creating Layer mnist
I0428 20:04:03.706604 30312 net.cpp:382] mnist -> data
I0428 20:04:03.706621 30312 net.cpp:382] mnist -> label
I0428 20:04:03.707619 30312 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:03.709818 30312 net.cpp:124] Setting up mnist
I0428 20:04:03.709847 30312 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:03.709853 30312 net.cpp:131] Top shape: 64 (64)
I0428 20:04:03.709856 30312 net.cpp:139] Memory required for data: 200960
I0428 20:04:03.709861 30312 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:03.709873 30312 net.cpp:86] Creating Layer conv0
I0428 20:04:03.709888 30312 net.cpp:408] conv0 <- data
I0428 20:04:03.709899 30312 net.cpp:382] conv0 -> conv0
I0428 20:04:03.935456 30312 net.cpp:124] Setting up conv0
I0428 20:04:03.935518 30312 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:03.935523 30312 net.cpp:139] Memory required for data: 1675520
I0428 20:04:03.935537 30312 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:03.935550 30312 net.cpp:86] Creating Layer pool0
I0428 20:04:03.935554 30312 net.cpp:408] pool0 <- conv0
I0428 20:04:03.935575 30312 net.cpp:382] pool0 -> pool0
I0428 20:04:03.935622 30312 net.cpp:124] Setting up pool0
I0428 20:04:03.935639 30312 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:03.935642 30312 net.cpp:139] Memory required for data: 2044160
I0428 20:04:03.935645 30312 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:03.935657 30312 net.cpp:86] Creating Layer conv1
I0428 20:04:03.935659 30312 net.cpp:408] conv1 <- pool0
I0428 20:04:03.935664 30312 net.cpp:382] conv1 -> conv1
I0428 20:04:03.937784 30312 net.cpp:124] Setting up conv1
I0428 20:04:03.937814 30312 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:03.937819 30312 net.cpp:139] Memory required for data: 3682560
I0428 20:04:03.937826 30312 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:03.937849 30312 net.cpp:86] Creating Layer pool1
I0428 20:04:03.937852 30312 net.cpp:408] pool1 <- conv1
I0428 20:04:03.937856 30312 net.cpp:382] pool1 -> pool1
I0428 20:04:03.937908 30312 net.cpp:124] Setting up pool1
I0428 20:04:03.937913 30312 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:03.937916 30312 net.cpp:139] Memory required for data: 4092160
I0428 20:04:03.937919 30312 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:03.937927 30312 net.cpp:86] Creating Layer ip1
I0428 20:04:03.937928 30312 net.cpp:408] ip1 <- pool1
I0428 20:04:03.937933 30312 net.cpp:382] ip1 -> ip1
I0428 20:04:03.938292 30312 net.cpp:124] Setting up ip1
I0428 20:04:03.938299 30312 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:03.938318 30312 net.cpp:139] Memory required for data: 4098560
I0428 20:04:03.938325 30312 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:03.938331 30312 net.cpp:86] Creating Layer relu1
I0428 20:04:03.938335 30312 net.cpp:408] relu1 <- ip1
I0428 20:04:03.938339 30312 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:03.938518 30312 net.cpp:124] Setting up relu1
I0428 20:04:03.938525 30312 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:03.938529 30312 net.cpp:139] Memory required for data: 4104960
I0428 20:04:03.938532 30312 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:03.938539 30312 net.cpp:86] Creating Layer ip2
I0428 20:04:03.938541 30312 net.cpp:408] ip2 <- ip1
I0428 20:04:03.938545 30312 net.cpp:382] ip2 -> ip2
I0428 20:04:03.939548 30312 net.cpp:124] Setting up ip2
I0428 20:04:03.939560 30312 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:03.939579 30312 net.cpp:139] Memory required for data: 4117760
I0428 20:04:03.939585 30312 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:03.939592 30312 net.cpp:86] Creating Layer relu2
I0428 20:04:03.939595 30312 net.cpp:408] relu2 <- ip2
I0428 20:04:03.939600 30312 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:03.940382 30312 net.cpp:124] Setting up relu2
I0428 20:04:03.940394 30312 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:03.940414 30312 net.cpp:139] Memory required for data: 4130560
I0428 20:04:03.940418 30312 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:03.940440 30312 net.cpp:86] Creating Layer ip3
I0428 20:04:03.940459 30312 net.cpp:408] ip3 <- ip2
I0428 20:04:03.940464 30312 net.cpp:382] ip3 -> ip3
I0428 20:04:03.940564 30312 net.cpp:124] Setting up ip3
I0428 20:04:03.940572 30312 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:03.940575 30312 net.cpp:139] Memory required for data: 4133120
I0428 20:04:03.940582 30312 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:03.940588 30312 net.cpp:86] Creating Layer relu3
I0428 20:04:03.940592 30312 net.cpp:408] relu3 <- ip3
I0428 20:04:03.940595 30312 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:03.940755 30312 net.cpp:124] Setting up relu3
I0428 20:04:03.940764 30312 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:03.940768 30312 net.cpp:139] Memory required for data: 4135680
I0428 20:04:03.940770 30312 layer_factory.hpp:77] Creating layer loss
I0428 20:04:03.940776 30312 net.cpp:86] Creating Layer loss
I0428 20:04:03.940783 30312 net.cpp:408] loss <- ip3
I0428 20:04:03.940788 30312 net.cpp:408] loss <- label
I0428 20:04:03.940795 30312 net.cpp:382] loss -> loss
I0428 20:04:03.940830 30312 layer_factory.hpp:77] Creating layer loss
I0428 20:04:03.941084 30312 net.cpp:124] Setting up loss
I0428 20:04:03.941110 30312 net.cpp:131] Top shape: (1)
I0428 20:04:03.941114 30312 net.cpp:134]     with loss weight 1
I0428 20:04:03.941133 30312 net.cpp:139] Memory required for data: 4135684
I0428 20:04:03.941138 30312 net.cpp:200] loss needs backward computation.
I0428 20:04:03.941143 30312 net.cpp:200] relu3 needs backward computation.
I0428 20:04:03.941145 30312 net.cpp:200] ip3 needs backward computation.
I0428 20:04:03.941148 30312 net.cpp:200] relu2 needs backward computation.
I0428 20:04:03.941151 30312 net.cpp:200] ip2 needs backward computation.
I0428 20:04:03.941154 30312 net.cpp:200] relu1 needs backward computation.
I0428 20:04:03.941157 30312 net.cpp:200] ip1 needs backward computation.
I0428 20:04:03.941160 30312 net.cpp:200] pool1 needs backward computation.
I0428 20:04:03.941179 30312 net.cpp:200] conv1 needs backward computation.
I0428 20:04:03.941182 30312 net.cpp:200] pool0 needs backward computation.
I0428 20:04:03.941185 30312 net.cpp:200] conv0 needs backward computation.
I0428 20:04:03.941189 30312 net.cpp:202] mnist does not need backward computation.
I0428 20:04:03.941191 30312 net.cpp:244] This network produces output loss
I0428 20:04:03.941201 30312 net.cpp:257] Network initialization done.
I0428 20:04:03.941563 30312 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test964.prototxt
I0428 20:04:03.941617 30312 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:03.941704 30312 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:03.941782 30312 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:03.941824 30312 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:03.941840 30312 net.cpp:86] Creating Layer mnist
I0428 20:04:03.941848 30312 net.cpp:382] mnist -> data
I0428 20:04:03.941859 30312 net.cpp:382] mnist -> label
I0428 20:04:03.941962 30312 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:03.944149 30312 net.cpp:124] Setting up mnist
I0428 20:04:03.944178 30312 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:03.944185 30312 net.cpp:131] Top shape: 100 (100)
I0428 20:04:03.944187 30312 net.cpp:139] Memory required for data: 314000
I0428 20:04:03.944191 30312 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:03.944198 30312 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:03.944202 30312 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:03.944207 30312 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:03.944214 30312 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:03.944272 30312 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:03.944293 30312 net.cpp:131] Top shape: 100 (100)
I0428 20:04:03.944295 30312 net.cpp:131] Top shape: 100 (100)
I0428 20:04:03.944298 30312 net.cpp:139] Memory required for data: 314800
I0428 20:04:03.944301 30312 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:03.944310 30312 net.cpp:86] Creating Layer conv0
I0428 20:04:03.944314 30312 net.cpp:408] conv0 <- data
I0428 20:04:03.944319 30312 net.cpp:382] conv0 -> conv0
I0428 20:04:03.946063 30312 net.cpp:124] Setting up conv0
I0428 20:04:03.946080 30312 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:03.946085 30312 net.cpp:139] Memory required for data: 2618800
I0428 20:04:03.946094 30312 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:03.946100 30312 net.cpp:86] Creating Layer pool0
I0428 20:04:03.946105 30312 net.cpp:408] pool0 <- conv0
I0428 20:04:03.946110 30312 net.cpp:382] pool0 -> pool0
I0428 20:04:03.946146 30312 net.cpp:124] Setting up pool0
I0428 20:04:03.946151 30312 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:03.946154 30312 net.cpp:139] Memory required for data: 3194800
I0428 20:04:03.946157 30312 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:03.946166 30312 net.cpp:86] Creating Layer conv1
I0428 20:04:03.946168 30312 net.cpp:408] conv1 <- pool0
I0428 20:04:03.946173 30312 net.cpp:382] conv1 -> conv1
I0428 20:04:03.947988 30312 net.cpp:124] Setting up conv1
I0428 20:04:03.948002 30312 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:03.948006 30312 net.cpp:139] Memory required for data: 5754800
I0428 20:04:03.948017 30312 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:03.948024 30312 net.cpp:86] Creating Layer pool1
I0428 20:04:03.948027 30312 net.cpp:408] pool1 <- conv1
I0428 20:04:03.948034 30312 net.cpp:382] pool1 -> pool1
I0428 20:04:03.948081 30312 net.cpp:124] Setting up pool1
I0428 20:04:03.948086 30312 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:03.948089 30312 net.cpp:139] Memory required for data: 6394800
I0428 20:04:03.948092 30312 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:03.948099 30312 net.cpp:86] Creating Layer ip1
I0428 20:04:03.948102 30312 net.cpp:408] ip1 <- pool1
I0428 20:04:03.948108 30312 net.cpp:382] ip1 -> ip1
I0428 20:04:03.948467 30312 net.cpp:124] Setting up ip1
I0428 20:04:03.948475 30312 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:03.948488 30312 net.cpp:139] Memory required for data: 6404800
I0428 20:04:03.948498 30312 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:03.948504 30312 net.cpp:86] Creating Layer relu1
I0428 20:04:03.948508 30312 net.cpp:408] relu1 <- ip1
I0428 20:04:03.948513 30312 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:03.948695 30312 net.cpp:124] Setting up relu1
I0428 20:04:03.948704 30312 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:03.948706 30312 net.cpp:139] Memory required for data: 6414800
I0428 20:04:03.948710 30312 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:03.948719 30312 net.cpp:86] Creating Layer ip2
I0428 20:04:03.948721 30312 net.cpp:408] ip2 <- ip1
I0428 20:04:03.948727 30312 net.cpp:382] ip2 -> ip2
I0428 20:04:03.948863 30312 net.cpp:124] Setting up ip2
I0428 20:04:03.948870 30312 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:03.948873 30312 net.cpp:139] Memory required for data: 6434800
I0428 20:04:03.948879 30312 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:03.948885 30312 net.cpp:86] Creating Layer relu2
I0428 20:04:03.948889 30312 net.cpp:408] relu2 <- ip2
I0428 20:04:03.948892 30312 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:03.949138 30312 net.cpp:124] Setting up relu2
I0428 20:04:03.949147 30312 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:03.949156 30312 net.cpp:139] Memory required for data: 6454800
I0428 20:04:03.949159 30312 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:03.949167 30312 net.cpp:86] Creating Layer ip3
I0428 20:04:03.949175 30312 net.cpp:408] ip3 <- ip2
I0428 20:04:03.949182 30312 net.cpp:382] ip3 -> ip3
I0428 20:04:03.949301 30312 net.cpp:124] Setting up ip3
I0428 20:04:03.949309 30312 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:03.949312 30312 net.cpp:139] Memory required for data: 6458800
I0428 20:04:03.949321 30312 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:03.949326 30312 net.cpp:86] Creating Layer relu3
I0428 20:04:03.949328 30312 net.cpp:408] relu3 <- ip3
I0428 20:04:03.949333 30312 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:03.950155 30312 net.cpp:124] Setting up relu3
I0428 20:04:03.950167 30312 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:03.950186 30312 net.cpp:139] Memory required for data: 6462800
I0428 20:04:03.950191 30312 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:03.950196 30312 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:03.950199 30312 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:03.950207 30312 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:03.950214 30312 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:03.950260 30312 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:03.950266 30312 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:03.950271 30312 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:03.950274 30312 net.cpp:139] Memory required for data: 6470800
I0428 20:04:03.950278 30312 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:03.950289 30312 net.cpp:86] Creating Layer accuracy
I0428 20:04:03.950294 30312 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:03.950297 30312 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:03.950304 30312 net.cpp:382] accuracy -> accuracy
I0428 20:04:03.950321 30312 net.cpp:124] Setting up accuracy
I0428 20:04:03.950331 30312 net.cpp:131] Top shape: (1)
I0428 20:04:03.950335 30312 net.cpp:139] Memory required for data: 6470804
I0428 20:04:03.950338 30312 layer_factory.hpp:77] Creating layer loss
I0428 20:04:03.950345 30312 net.cpp:86] Creating Layer loss
I0428 20:04:03.950350 30312 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:03.950353 30312 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:03.950358 30312 net.cpp:382] loss -> loss
I0428 20:04:03.950366 30312 layer_factory.hpp:77] Creating layer loss
I0428 20:04:03.950636 30312 net.cpp:124] Setting up loss
I0428 20:04:03.950645 30312 net.cpp:131] Top shape: (1)
I0428 20:04:03.950649 30312 net.cpp:134]     with loss weight 1
I0428 20:04:03.950666 30312 net.cpp:139] Memory required for data: 6470808
I0428 20:04:03.950670 30312 net.cpp:200] loss needs backward computation.
I0428 20:04:03.950686 30312 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:03.950690 30312 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:03.950700 30312 net.cpp:200] relu3 needs backward computation.
I0428 20:04:03.950701 30312 net.cpp:200] ip3 needs backward computation.
I0428 20:04:03.950705 30312 net.cpp:200] relu2 needs backward computation.
I0428 20:04:03.950707 30312 net.cpp:200] ip2 needs backward computation.
I0428 20:04:03.950711 30312 net.cpp:200] relu1 needs backward computation.
I0428 20:04:03.950713 30312 net.cpp:200] ip1 needs backward computation.
I0428 20:04:03.950717 30312 net.cpp:200] pool1 needs backward computation.
I0428 20:04:03.950721 30312 net.cpp:200] conv1 needs backward computation.
I0428 20:04:03.950723 30312 net.cpp:200] pool0 needs backward computation.
I0428 20:04:03.950726 30312 net.cpp:200] conv0 needs backward computation.
I0428 20:04:03.950731 30312 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:03.950739 30312 net.cpp:202] mnist does not need backward computation.
I0428 20:04:03.950742 30312 net.cpp:244] This network produces output accuracy
I0428 20:04:03.950747 30312 net.cpp:244] This network produces output loss
I0428 20:04:03.950759 30312 net.cpp:257] Network initialization done.
I0428 20:04:03.950803 30312 solver.cpp:56] Solver scaffolding done.
I0428 20:04:03.951150 30312 caffe.cpp:248] Starting Optimization
I0428 20:04:03.951158 30312 solver.cpp:273] Solving LeNet
I0428 20:04:03.951160 30312 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:03.952028 30312 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:03.957583 30312 blocking_queue.cpp:49] Waiting for data
I0428 20:04:04.026126 30319 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:04.026775 30312 solver.cpp:398]     Test net output #0: accuracy = 0.1281
I0428 20:04:04.026795 30312 solver.cpp:398]     Test net output #1: loss = 2.32494 (* 1 = 2.32494 loss)
I0428 20:04:04.030585 30312 solver.cpp:219] Iteration 0 (-1.25284e-30 iter/s, 0.0793917s/100 iters), loss = 2.31413
I0428 20:04:04.030611 30312 solver.cpp:238]     Train net output #0: loss = 2.31413 (* 1 = 2.31413 loss)
I0428 20:04:04.030622 30312 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:04.185806 30312 solver.cpp:219] Iteration 100 (644.413 iter/s, 0.15518s/100 iters), loss = 0.658139
I0428 20:04:04.185832 30312 solver.cpp:238]     Train net output #0: loss = 0.658139 (* 1 = 0.658139 loss)
I0428 20:04:04.185839 30312 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:04.343641 30312 solver.cpp:219] Iteration 200 (633.736 iter/s, 0.157794s/100 iters), loss = 0.264558
I0428 20:04:04.343669 30312 solver.cpp:238]     Train net output #0: loss = 0.264558 (* 1 = 0.264558 loss)
I0428 20:04:04.343677 30312 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:04.505040 30312 solver.cpp:219] Iteration 300 (619.745 iter/s, 0.161357s/100 iters), loss = 0.248203
I0428 20:04:04.505070 30312 solver.cpp:238]     Train net output #0: loss = 0.248203 (* 1 = 0.248203 loss)
I0428 20:04:04.505077 30312 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:04.673713 30312 solver.cpp:219] Iteration 400 (593.02 iter/s, 0.168628s/100 iters), loss = 0.0964978
I0428 20:04:04.673746 30312 solver.cpp:238]     Train net output #0: loss = 0.0964978 (* 1 = 0.0964978 loss)
I0428 20:04:04.673754 30312 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:04.826665 30312 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:04.882109 30319 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:04.883999 30312 solver.cpp:398]     Test net output #0: accuracy = 0.9605
I0428 20:04:04.884034 30312 solver.cpp:398]     Test net output #1: loss = 0.124562 (* 1 = 0.124562 loss)
I0428 20:04:04.885541 30312 solver.cpp:219] Iteration 500 (472.187 iter/s, 0.211781s/100 iters), loss = 0.105628
I0428 20:04:04.885593 30312 solver.cpp:238]     Train net output #0: loss = 0.105628 (* 1 = 0.105628 loss)
I0428 20:04:04.885615 30312 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:05.042966 30312 solver.cpp:219] Iteration 600 (635.48 iter/s, 0.157361s/100 iters), loss = 0.0998328
I0428 20:04:05.042992 30312 solver.cpp:238]     Train net output #0: loss = 0.0998327 (* 1 = 0.0998327 loss)
I0428 20:04:05.042999 30312 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:05.205917 30312 solver.cpp:219] Iteration 700 (613.831 iter/s, 0.162911s/100 iters), loss = 0.286852
I0428 20:04:05.205945 30312 solver.cpp:238]     Train net output #0: loss = 0.286852 (* 1 = 0.286852 loss)
I0428 20:04:05.205951 30312 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:05.372997 30312 solver.cpp:219] Iteration 800 (598.666 iter/s, 0.167038s/100 iters), loss = 0.269637
I0428 20:04:05.373025 30312 solver.cpp:238]     Train net output #0: loss = 0.269637 (* 1 = 0.269637 loss)
I0428 20:04:05.373033 30312 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:05.537919 30312 solver.cpp:219] Iteration 900 (606.504 iter/s, 0.164879s/100 iters), loss = 0.118315
I0428 20:04:05.537947 30312 solver.cpp:238]     Train net output #0: loss = 0.118315 (* 1 = 0.118315 loss)
I0428 20:04:05.537955 30312 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:05.594063 30318 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:05.704401 30312 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:05.706931 30312 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:05.708422 30312 solver.cpp:311] Iteration 1000, loss = 0.191299
I0428 20:04:05.708456 30312 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:05.778733 30319 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:05.781018 30312 solver.cpp:398]     Test net output #0: accuracy = 0.975
I0428 20:04:05.781045 30312 solver.cpp:398]     Test net output #1: loss = 0.0747717 (* 1 = 0.0747717 loss)
I0428 20:04:05.781065 30312 solver.cpp:316] Optimization Done.
I0428 20:04:05.781069 30312 caffe.cpp:259] Optimization Done.
