I0428 20:08:44.016957 31450 caffe.cpp:218] Using GPUs 0
I0428 20:08:44.057307 31450 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:44.511756 31450 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1091.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:44.511925 31450 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1091.prototxt
I0428 20:08:44.512246 31450 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:44.512265 31450 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:44.512351 31450 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:44.512435 31450 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:44.512542 31450 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:44.512568 31450 net.cpp:86] Creating Layer mnist
I0428 20:08:44.512578 31450 net.cpp:382] mnist -> data
I0428 20:08:44.512619 31450 net.cpp:382] mnist -> label
I0428 20:08:44.513748 31450 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:44.515991 31450 net.cpp:124] Setting up mnist
I0428 20:08:44.516008 31450 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:44.516018 31450 net.cpp:131] Top shape: 64 (64)
I0428 20:08:44.516024 31450 net.cpp:139] Memory required for data: 200960
I0428 20:08:44.516036 31450 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:44.516057 31450 net.cpp:86] Creating Layer conv0
I0428 20:08:44.516080 31450 net.cpp:408] conv0 <- data
I0428 20:08:44.516096 31450 net.cpp:382] conv0 -> conv0
I0428 20:08:44.767001 31450 net.cpp:124] Setting up conv0
I0428 20:08:44.767029 31450 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:44.767035 31450 net.cpp:139] Memory required for data: 3887360
I0428 20:08:44.767055 31450 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:44.767071 31450 net.cpp:86] Creating Layer pool0
I0428 20:08:44.767077 31450 net.cpp:408] pool0 <- conv0
I0428 20:08:44.767086 31450 net.cpp:382] pool0 -> pool0
I0428 20:08:44.767141 31450 net.cpp:124] Setting up pool0
I0428 20:08:44.767150 31450 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:44.767154 31450 net.cpp:139] Memory required for data: 4808960
I0428 20:08:44.767159 31450 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:44.767175 31450 net.cpp:86] Creating Layer conv1
I0428 20:08:44.767181 31450 net.cpp:408] conv1 <- pool0
I0428 20:08:44.767190 31450 net.cpp:382] conv1 -> conv1
I0428 20:08:44.770027 31450 net.cpp:124] Setting up conv1
I0428 20:08:44.770045 31450 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:44.770051 31450 net.cpp:139] Memory required for data: 4972800
I0428 20:08:44.770079 31450 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:44.770092 31450 net.cpp:86] Creating Layer pool1
I0428 20:08:44.770112 31450 net.cpp:408] pool1 <- conv1
I0428 20:08:44.770122 31450 net.cpp:382] pool1 -> pool1
I0428 20:08:44.770170 31450 net.cpp:124] Setting up pool1
I0428 20:08:44.770195 31450 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:44.770215 31450 net.cpp:139] Memory required for data: 5013760
I0428 20:08:44.770220 31450 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:44.770246 31450 net.cpp:86] Creating Layer ip1
I0428 20:08:44.770254 31450 net.cpp:408] ip1 <- pool1
I0428 20:08:44.770263 31450 net.cpp:382] ip1 -> ip1
I0428 20:08:44.770406 31450 net.cpp:124] Setting up ip1
I0428 20:08:44.770416 31450 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:44.770437 31450 net.cpp:139] Memory required for data: 5026560
I0428 20:08:44.770449 31450 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:44.770458 31450 net.cpp:86] Creating Layer relu1
I0428 20:08:44.770467 31450 net.cpp:408] relu1 <- ip1
I0428 20:08:44.770475 31450 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:44.770649 31450 net.cpp:124] Setting up relu1
I0428 20:08:44.770660 31450 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:44.770664 31450 net.cpp:139] Memory required for data: 5039360
I0428 20:08:44.770670 31450 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:44.770680 31450 net.cpp:86] Creating Layer ip2
I0428 20:08:44.770685 31450 net.cpp:408] ip2 <- ip1
I0428 20:08:44.770694 31450 net.cpp:382] ip2 -> ip2
I0428 20:08:44.771664 31450 net.cpp:124] Setting up ip2
I0428 20:08:44.771677 31450 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:44.771683 31450 net.cpp:139] Memory required for data: 5052160
I0428 20:08:44.771692 31450 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:44.771703 31450 net.cpp:86] Creating Layer relu2
I0428 20:08:44.771708 31450 net.cpp:408] relu2 <- ip2
I0428 20:08:44.771715 31450 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:44.772433 31450 net.cpp:124] Setting up relu2
I0428 20:08:44.772445 31450 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:44.772451 31450 net.cpp:139] Memory required for data: 5064960
I0428 20:08:44.772456 31450 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:44.772466 31450 net.cpp:86] Creating Layer ip3
I0428 20:08:44.772471 31450 net.cpp:408] ip3 <- ip2
I0428 20:08:44.772480 31450 net.cpp:382] ip3 -> ip3
I0428 20:08:44.772583 31450 net.cpp:124] Setting up ip3
I0428 20:08:44.772593 31450 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:44.772598 31450 net.cpp:139] Memory required for data: 5067520
I0428 20:08:44.772610 31450 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:44.772621 31450 net.cpp:86] Creating Layer relu3
I0428 20:08:44.772627 31450 net.cpp:408] relu3 <- ip3
I0428 20:08:44.772634 31450 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:44.772794 31450 net.cpp:124] Setting up relu3
I0428 20:08:44.772804 31450 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:44.772814 31450 net.cpp:139] Memory required for data: 5070080
I0428 20:08:44.772835 31450 layer_factory.hpp:77] Creating layer loss
I0428 20:08:44.772846 31450 net.cpp:86] Creating Layer loss
I0428 20:08:44.772852 31450 net.cpp:408] loss <- ip3
I0428 20:08:44.772860 31450 net.cpp:408] loss <- label
I0428 20:08:44.772868 31450 net.cpp:382] loss -> loss
I0428 20:08:44.772903 31450 layer_factory.hpp:77] Creating layer loss
I0428 20:08:44.773170 31450 net.cpp:124] Setting up loss
I0428 20:08:44.773197 31450 net.cpp:131] Top shape: (1)
I0428 20:08:44.773217 31450 net.cpp:134]     with loss weight 1
I0428 20:08:44.773250 31450 net.cpp:139] Memory required for data: 5070084
I0428 20:08:44.773257 31450 net.cpp:200] loss needs backward computation.
I0428 20:08:44.773262 31450 net.cpp:200] relu3 needs backward computation.
I0428 20:08:44.773267 31450 net.cpp:200] ip3 needs backward computation.
I0428 20:08:44.773272 31450 net.cpp:200] relu2 needs backward computation.
I0428 20:08:44.773277 31450 net.cpp:200] ip2 needs backward computation.
I0428 20:08:44.773283 31450 net.cpp:200] relu1 needs backward computation.
I0428 20:08:44.773286 31450 net.cpp:200] ip1 needs backward computation.
I0428 20:08:44.773291 31450 net.cpp:200] pool1 needs backward computation.
I0428 20:08:44.773296 31450 net.cpp:200] conv1 needs backward computation.
I0428 20:08:44.773303 31450 net.cpp:200] pool0 needs backward computation.
I0428 20:08:44.773306 31450 net.cpp:200] conv0 needs backward computation.
I0428 20:08:44.773313 31450 net.cpp:202] mnist does not need backward computation.
I0428 20:08:44.773316 31450 net.cpp:244] This network produces output loss
I0428 20:08:44.773330 31450 net.cpp:257] Network initialization done.
I0428 20:08:44.773656 31450 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1091.prototxt
I0428 20:08:44.773689 31450 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:44.773783 31450 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:44.773898 31450 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:44.773953 31450 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:44.773970 31450 net.cpp:86] Creating Layer mnist
I0428 20:08:44.773980 31450 net.cpp:382] mnist -> data
I0428 20:08:44.773991 31450 net.cpp:382] mnist -> label
I0428 20:08:44.774109 31450 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:44.776046 31450 net.cpp:124] Setting up mnist
I0428 20:08:44.776074 31450 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:44.776095 31450 net.cpp:131] Top shape: 100 (100)
I0428 20:08:44.776098 31450 net.cpp:139] Memory required for data: 314000
I0428 20:08:44.776101 31450 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:44.776108 31450 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:44.776113 31450 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:44.776136 31450 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:44.776144 31450 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:44.776187 31450 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:44.776196 31450 net.cpp:131] Top shape: 100 (100)
I0428 20:08:44.776199 31450 net.cpp:131] Top shape: 100 (100)
I0428 20:08:44.776202 31450 net.cpp:139] Memory required for data: 314800
I0428 20:08:44.776206 31450 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:44.776214 31450 net.cpp:86] Creating Layer conv0
I0428 20:08:44.776219 31450 net.cpp:408] conv0 <- data
I0428 20:08:44.776240 31450 net.cpp:382] conv0 -> conv0
I0428 20:08:44.778168 31450 net.cpp:124] Setting up conv0
I0428 20:08:44.778183 31450 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:44.778187 31450 net.cpp:139] Memory required for data: 6074800
I0428 20:08:44.778198 31450 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:44.778206 31450 net.cpp:86] Creating Layer pool0
I0428 20:08:44.778210 31450 net.cpp:408] pool0 <- conv0
I0428 20:08:44.778216 31450 net.cpp:382] pool0 -> pool0
I0428 20:08:44.778257 31450 net.cpp:124] Setting up pool0
I0428 20:08:44.778264 31450 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:44.778267 31450 net.cpp:139] Memory required for data: 7514800
I0428 20:08:44.778270 31450 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:44.778283 31450 net.cpp:86] Creating Layer conv1
I0428 20:08:44.778290 31450 net.cpp:408] conv1 <- pool0
I0428 20:08:44.778295 31450 net.cpp:382] conv1 -> conv1
I0428 20:08:44.780571 31450 net.cpp:124] Setting up conv1
I0428 20:08:44.780585 31450 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:44.780588 31450 net.cpp:139] Memory required for data: 7770800
I0428 20:08:44.780597 31450 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:44.780606 31450 net.cpp:86] Creating Layer pool1
I0428 20:08:44.780611 31450 net.cpp:408] pool1 <- conv1
I0428 20:08:44.780632 31450 net.cpp:382] pool1 -> pool1
I0428 20:08:44.780681 31450 net.cpp:124] Setting up pool1
I0428 20:08:44.780689 31450 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:44.780707 31450 net.cpp:139] Memory required for data: 7834800
I0428 20:08:44.780711 31450 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:44.780717 31450 net.cpp:86] Creating Layer ip1
I0428 20:08:44.780720 31450 net.cpp:408] ip1 <- pool1
I0428 20:08:44.780727 31450 net.cpp:382] ip1 -> ip1
I0428 20:08:44.780932 31450 net.cpp:124] Setting up ip1
I0428 20:08:44.780942 31450 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:44.780956 31450 net.cpp:139] Memory required for data: 7854800
I0428 20:08:44.780966 31450 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:44.780973 31450 net.cpp:86] Creating Layer relu1
I0428 20:08:44.780977 31450 net.cpp:408] relu1 <- ip1
I0428 20:08:44.780983 31450 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:44.781185 31450 net.cpp:124] Setting up relu1
I0428 20:08:44.781194 31450 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:44.781198 31450 net.cpp:139] Memory required for data: 7874800
I0428 20:08:44.781214 31450 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:44.781226 31450 net.cpp:86] Creating Layer ip2
I0428 20:08:44.781230 31450 net.cpp:408] ip2 <- ip1
I0428 20:08:44.781236 31450 net.cpp:382] ip2 -> ip2
I0428 20:08:44.781414 31450 net.cpp:124] Setting up ip2
I0428 20:08:44.781424 31450 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:44.781427 31450 net.cpp:139] Memory required for data: 7894800
I0428 20:08:44.781435 31450 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:44.781440 31450 net.cpp:86] Creating Layer relu2
I0428 20:08:44.781445 31450 net.cpp:408] relu2 <- ip2
I0428 20:08:44.781448 31450 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:44.781633 31450 net.cpp:124] Setting up relu2
I0428 20:08:44.781641 31450 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:44.781646 31450 net.cpp:139] Memory required for data: 7914800
I0428 20:08:44.781648 31450 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:44.781656 31450 net.cpp:86] Creating Layer ip3
I0428 20:08:44.781661 31450 net.cpp:408] ip3 <- ip2
I0428 20:08:44.781666 31450 net.cpp:382] ip3 -> ip3
I0428 20:08:44.781811 31450 net.cpp:124] Setting up ip3
I0428 20:08:44.781821 31450 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:44.781834 31450 net.cpp:139] Memory required for data: 7918800
I0428 20:08:44.781843 31450 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:44.781852 31450 net.cpp:86] Creating Layer relu3
I0428 20:08:44.781855 31450 net.cpp:408] relu3 <- ip3
I0428 20:08:44.781859 31450 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:44.782702 31450 net.cpp:124] Setting up relu3
I0428 20:08:44.782714 31450 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:44.782734 31450 net.cpp:139] Memory required for data: 7922800
I0428 20:08:44.782737 31450 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:44.782743 31450 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:44.782747 31450 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:44.782753 31450 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:44.782762 31450 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:44.782824 31450 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:44.782831 31450 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:44.782835 31450 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:44.782840 31450 net.cpp:139] Memory required for data: 7930800
I0428 20:08:44.782843 31450 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:44.782866 31450 net.cpp:86] Creating Layer accuracy
I0428 20:08:44.782871 31450 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:44.782874 31450 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:44.782881 31450 net.cpp:382] accuracy -> accuracy
I0428 20:08:44.782888 31450 net.cpp:124] Setting up accuracy
I0428 20:08:44.782893 31450 net.cpp:131] Top shape: (1)
I0428 20:08:44.782896 31450 net.cpp:139] Memory required for data: 7930804
I0428 20:08:44.782899 31450 layer_factory.hpp:77] Creating layer loss
I0428 20:08:44.782907 31450 net.cpp:86] Creating Layer loss
I0428 20:08:44.782909 31450 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:44.782913 31450 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:44.782918 31450 net.cpp:382] loss -> loss
I0428 20:08:44.782925 31450 layer_factory.hpp:77] Creating layer loss
I0428 20:08:44.783200 31450 net.cpp:124] Setting up loss
I0428 20:08:44.783210 31450 net.cpp:131] Top shape: (1)
I0428 20:08:44.783212 31450 net.cpp:134]     with loss weight 1
I0428 20:08:44.783247 31450 net.cpp:139] Memory required for data: 7930808
I0428 20:08:44.783252 31450 net.cpp:200] loss needs backward computation.
I0428 20:08:44.783255 31450 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:44.783259 31450 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:44.783263 31450 net.cpp:200] relu3 needs backward computation.
I0428 20:08:44.783267 31450 net.cpp:200] ip3 needs backward computation.
I0428 20:08:44.783270 31450 net.cpp:200] relu2 needs backward computation.
I0428 20:08:44.783272 31450 net.cpp:200] ip2 needs backward computation.
I0428 20:08:44.783277 31450 net.cpp:200] relu1 needs backward computation.
I0428 20:08:44.783279 31450 net.cpp:200] ip1 needs backward computation.
I0428 20:08:44.783283 31450 net.cpp:200] pool1 needs backward computation.
I0428 20:08:44.783287 31450 net.cpp:200] conv1 needs backward computation.
I0428 20:08:44.783289 31450 net.cpp:200] pool0 needs backward computation.
I0428 20:08:44.783293 31450 net.cpp:200] conv0 needs backward computation.
I0428 20:08:44.783298 31450 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:44.783308 31450 net.cpp:202] mnist does not need backward computation.
I0428 20:08:44.783309 31450 net.cpp:244] This network produces output accuracy
I0428 20:08:44.783324 31450 net.cpp:244] This network produces output loss
I0428 20:08:44.783337 31450 net.cpp:257] Network initialization done.
I0428 20:08:44.783381 31450 solver.cpp:56] Solver scaffolding done.
I0428 20:08:44.783816 31450 caffe.cpp:248] Starting Optimization
I0428 20:08:44.783823 31450 solver.cpp:273] Solving LeNet
I0428 20:08:44.783825 31450 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:44.784734 31450 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:44.789979 31450 blocking_queue.cpp:49] Waiting for data
I0428 20:08:44.857929 31482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:44.858566 31450 solver.cpp:398]     Test net output #0: accuracy = 0.1087
I0428 20:08:44.858587 31450 solver.cpp:398]     Test net output #1: loss = 2.30543 (* 1 = 2.30543 loss)
I0428 20:08:44.862243 31450 solver.cpp:219] Iteration 0 (-1.05518e-42 iter/s, 0.0783749s/100 iters), loss = 2.33323
I0428 20:08:44.862267 31450 solver.cpp:238]     Train net output #0: loss = 2.33323 (* 1 = 2.33323 loss)
I0428 20:08:44.862277 31450 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:44.961738 31450 solver.cpp:219] Iteration 100 (1005.45 iter/s, 0.099458s/100 iters), loss = 0.676918
I0428 20:08:44.961779 31450 solver.cpp:238]     Train net output #0: loss = 0.676918 (* 1 = 0.676918 loss)
I0428 20:08:44.961786 31450 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:45.054673 31450 solver.cpp:219] Iteration 200 (1076.79 iter/s, 0.0928687s/100 iters), loss = 0.507373
I0428 20:08:45.054713 31450 solver.cpp:238]     Train net output #0: loss = 0.507373 (* 1 = 0.507373 loss)
I0428 20:08:45.054721 31450 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:45.147214 31450 solver.cpp:219] Iteration 300 (1081.18 iter/s, 0.0924917s/100 iters), loss = 0.266365
I0428 20:08:45.147254 31450 solver.cpp:238]     Train net output #0: loss = 0.266365 (* 1 = 0.266365 loss)
I0428 20:08:45.147261 31450 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:45.239480 31450 solver.cpp:219] Iteration 400 (1084.6 iter/s, 0.0922001s/100 iters), loss = 0.316684
I0428 20:08:45.239518 31450 solver.cpp:238]     Train net output #0: loss = 0.316684 (* 1 = 0.316684 loss)
I0428 20:08:45.239524 31450 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:45.343001 31450 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:45.424224 31482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:45.424990 31450 solver.cpp:398]     Test net output #0: accuracy = 0.8731
I0428 20:08:45.425030 31450 solver.cpp:398]     Test net output #1: loss = 0.342416 (* 1 = 0.342416 loss)
I0428 20:08:45.426236 31450 solver.cpp:219] Iteration 500 (535.569 iter/s, 0.186717s/100 iters), loss = 0.36037
I0428 20:08:45.426304 31450 solver.cpp:238]     Train net output #0: loss = 0.36037 (* 1 = 0.36037 loss)
I0428 20:08:45.426316 31450 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:45.525665 31450 solver.cpp:219] Iteration 600 (1006.54 iter/s, 0.0993505s/100 iters), loss = 0.396486
I0428 20:08:45.525698 31450 solver.cpp:238]     Train net output #0: loss = 0.396486 (* 1 = 0.396486 loss)
I0428 20:08:45.525707 31450 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:45.631072 31450 solver.cpp:219] Iteration 700 (949.133 iter/s, 0.105359s/100 iters), loss = 0.429893
I0428 20:08:45.631121 31450 solver.cpp:238]     Train net output #0: loss = 0.429893 (* 1 = 0.429893 loss)
I0428 20:08:45.631134 31450 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:45.733359 31450 solver.cpp:219] Iteration 800 (978.178 iter/s, 0.102231s/100 iters), loss = 0.585412
I0428 20:08:45.733391 31450 solver.cpp:238]     Train net output #0: loss = 0.585412 (* 1 = 0.585412 loss)
I0428 20:08:45.733397 31450 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:45.829361 31450 solver.cpp:219] Iteration 900 (1042.09 iter/s, 0.0959611s/100 iters), loss = 0.247257
I0428 20:08:45.829390 31450 solver.cpp:238]     Train net output #0: loss = 0.247257 (* 1 = 0.247257 loss)
I0428 20:08:45.829396 31450 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:45.860960 31467 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:45.924190 31450 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:45.925293 31450 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:45.925981 31450 solver.cpp:311] Iteration 1000, loss = 0.34234
I0428 20:08:45.926002 31450 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:45.984949 31482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:45.986557 31450 solver.cpp:398]     Test net output #0: accuracy = 0.8809
I0428 20:08:45.986578 31450 solver.cpp:398]     Test net output #1: loss = 0.303507 (* 1 = 0.303507 loss)
I0428 20:08:45.986591 31450 solver.cpp:316] Optimization Done.
I0428 20:08:45.986596 31450 caffe.cpp:259] Optimization Done.
