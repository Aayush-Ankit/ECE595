I0428 20:38:52.179119  5201 caffe.cpp:218] Using GPUs 0
I0428 20:38:52.217242  5201 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:52.727046  5201 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1671.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:52.727195  5201 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1671.prototxt
I0428 20:38:52.727612  5201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:52.727632  5201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:52.727735  5201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:52.727813  5201 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:52.727910  5201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:52.727933  5201 net.cpp:86] Creating Layer mnist
I0428 20:38:52.727942  5201 net.cpp:382] mnist -> data
I0428 20:38:52.727964  5201 net.cpp:382] mnist -> label
I0428 20:38:52.729069  5201 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:52.731775  5201 net.cpp:124] Setting up mnist
I0428 20:38:52.731794  5201 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:52.731801  5201 net.cpp:131] Top shape: 64 (64)
I0428 20:38:52.731806  5201 net.cpp:139] Memory required for data: 200960
I0428 20:38:52.731812  5201 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:52.731829  5201 net.cpp:86] Creating Layer conv0
I0428 20:38:52.731849  5201 net.cpp:408] conv0 <- data
I0428 20:38:52.731863  5201 net.cpp:382] conv0 -> conv0
I0428 20:38:52.987579  5201 net.cpp:124] Setting up conv0
I0428 20:38:52.987606  5201 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:52.987609  5201 net.cpp:139] Memory required for data: 14946560
I0428 20:38:52.987623  5201 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:52.987649  5201 net.cpp:86] Creating Layer pool0
I0428 20:38:52.987653  5201 net.cpp:408] pool0 <- conv0
I0428 20:38:52.987658  5201 net.cpp:382] pool0 -> pool0
I0428 20:38:52.987702  5201 net.cpp:124] Setting up pool0
I0428 20:38:52.987710  5201 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:52.987728  5201 net.cpp:139] Memory required for data: 18632960
I0428 20:38:52.987731  5201 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:52.987741  5201 net.cpp:86] Creating Layer conv1
I0428 20:38:52.987745  5201 net.cpp:408] conv1 <- pool0
I0428 20:38:52.987749  5201 net.cpp:382] conv1 -> conv1
I0428 20:38:52.991787  5201 net.cpp:124] Setting up conv1
I0428 20:38:52.991801  5201 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:52.991819  5201 net.cpp:139] Memory required for data: 20271360
I0428 20:38:52.991827  5201 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:52.991834  5201 net.cpp:86] Creating Layer pool1
I0428 20:38:52.991837  5201 net.cpp:408] pool1 <- conv1
I0428 20:38:52.991842  5201 net.cpp:382] pool1 -> pool1
I0428 20:38:52.991891  5201 net.cpp:124] Setting up pool1
I0428 20:38:52.991896  5201 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:52.991899  5201 net.cpp:139] Memory required for data: 20680960
I0428 20:38:52.991901  5201 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:52.991909  5201 net.cpp:86] Creating Layer ip1
I0428 20:38:52.991911  5201 net.cpp:408] ip1 <- pool1
I0428 20:38:52.991915  5201 net.cpp:382] ip1 -> ip1
I0428 20:38:52.992471  5201 net.cpp:124] Setting up ip1
I0428 20:38:52.992478  5201 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:52.992481  5201 net.cpp:139] Memory required for data: 20693760
I0428 20:38:52.992503  5201 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:52.992508  5201 net.cpp:86] Creating Layer relu1
I0428 20:38:52.992511  5201 net.cpp:408] relu1 <- ip1
I0428 20:38:52.992516  5201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:52.992668  5201 net.cpp:124] Setting up relu1
I0428 20:38:52.992677  5201 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:52.992681  5201 net.cpp:139] Memory required for data: 20706560
I0428 20:38:52.992683  5201 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:52.992689  5201 net.cpp:86] Creating Layer ip2
I0428 20:38:52.992692  5201 net.cpp:408] ip2 <- ip1
I0428 20:38:52.992697  5201 net.cpp:382] ip2 -> ip2
I0428 20:38:52.992796  5201 net.cpp:124] Setting up ip2
I0428 20:38:52.992802  5201 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:52.992805  5201 net.cpp:139] Memory required for data: 20712960
I0428 20:38:52.992831  5201 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:52.992837  5201 net.cpp:86] Creating Layer relu2
I0428 20:38:52.992856  5201 net.cpp:408] relu2 <- ip2
I0428 20:38:52.992861  5201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:52.993635  5201 net.cpp:124] Setting up relu2
I0428 20:38:52.993647  5201 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:52.993665  5201 net.cpp:139] Memory required for data: 20719360
I0428 20:38:52.993669  5201 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:52.993676  5201 net.cpp:86] Creating Layer ip3
I0428 20:38:52.993680  5201 net.cpp:408] ip3 <- ip2
I0428 20:38:52.993685  5201 net.cpp:382] ip3 -> ip3
I0428 20:38:52.993778  5201 net.cpp:124] Setting up ip3
I0428 20:38:52.993785  5201 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:52.993788  5201 net.cpp:139] Memory required for data: 20721920
I0428 20:38:52.993796  5201 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:52.993801  5201 net.cpp:86] Creating Layer relu3
I0428 20:38:52.993803  5201 net.cpp:408] relu3 <- ip3
I0428 20:38:52.993821  5201 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:52.993962  5201 net.cpp:124] Setting up relu3
I0428 20:38:52.993969  5201 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:52.993973  5201 net.cpp:139] Memory required for data: 20724480
I0428 20:38:52.993975  5201 layer_factory.hpp:77] Creating layer loss
I0428 20:38:52.993980  5201 net.cpp:86] Creating Layer loss
I0428 20:38:52.993983  5201 net.cpp:408] loss <- ip3
I0428 20:38:52.993986  5201 net.cpp:408] loss <- label
I0428 20:38:52.993991  5201 net.cpp:382] loss -> loss
I0428 20:38:52.994009  5201 layer_factory.hpp:77] Creating layer loss
I0428 20:38:52.994235  5201 net.cpp:124] Setting up loss
I0428 20:38:52.994243  5201 net.cpp:131] Top shape: (1)
I0428 20:38:52.994246  5201 net.cpp:134]     with loss weight 1
I0428 20:38:52.994261  5201 net.cpp:139] Memory required for data: 20724484
I0428 20:38:52.994263  5201 net.cpp:200] loss needs backward computation.
I0428 20:38:52.994267  5201 net.cpp:200] relu3 needs backward computation.
I0428 20:38:52.994271  5201 net.cpp:200] ip3 needs backward computation.
I0428 20:38:52.994273  5201 net.cpp:200] relu2 needs backward computation.
I0428 20:38:52.994276  5201 net.cpp:200] ip2 needs backward computation.
I0428 20:38:52.994278  5201 net.cpp:200] relu1 needs backward computation.
I0428 20:38:52.994282  5201 net.cpp:200] ip1 needs backward computation.
I0428 20:38:52.994284  5201 net.cpp:200] pool1 needs backward computation.
I0428 20:38:52.994287  5201 net.cpp:200] conv1 needs backward computation.
I0428 20:38:52.994290  5201 net.cpp:200] pool0 needs backward computation.
I0428 20:38:52.994292  5201 net.cpp:200] conv0 needs backward computation.
I0428 20:38:52.994297  5201 net.cpp:202] mnist does not need backward computation.
I0428 20:38:52.994298  5201 net.cpp:244] This network produces output loss
I0428 20:38:52.994307  5201 net.cpp:257] Network initialization done.
I0428 20:38:52.994654  5201 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1671.prototxt
I0428 20:38:52.994694  5201 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:52.994779  5201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:52.994855  5201 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:52.994899  5201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:52.994910  5201 net.cpp:86] Creating Layer mnist
I0428 20:38:52.994915  5201 net.cpp:382] mnist -> data
I0428 20:38:52.994921  5201 net.cpp:382] mnist -> label
I0428 20:38:52.994999  5201 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:52.996984  5201 net.cpp:124] Setting up mnist
I0428 20:38:52.997009  5201 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:52.997014  5201 net.cpp:131] Top shape: 100 (100)
I0428 20:38:52.997017  5201 net.cpp:139] Memory required for data: 314000
I0428 20:38:52.997020  5201 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:52.997057  5201 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:52.997061  5201 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:52.997066  5201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:52.997073  5201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:52.997118  5201 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:52.997126  5201 net.cpp:131] Top shape: 100 (100)
I0428 20:38:52.997129  5201 net.cpp:131] Top shape: 100 (100)
I0428 20:38:52.997133  5201 net.cpp:139] Memory required for data: 314800
I0428 20:38:52.997135  5201 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:52.997143  5201 net.cpp:86] Creating Layer conv0
I0428 20:38:52.997148  5201 net.cpp:408] conv0 <- data
I0428 20:38:52.997153  5201 net.cpp:382] conv0 -> conv0
I0428 20:38:52.998847  5201 net.cpp:124] Setting up conv0
I0428 20:38:52.998862  5201 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:52.998865  5201 net.cpp:139] Memory required for data: 23354800
I0428 20:38:52.998873  5201 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:52.998880  5201 net.cpp:86] Creating Layer pool0
I0428 20:38:52.998883  5201 net.cpp:408] pool0 <- conv0
I0428 20:38:52.998888  5201 net.cpp:382] pool0 -> pool0
I0428 20:38:52.998934  5201 net.cpp:124] Setting up pool0
I0428 20:38:52.998939  5201 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:52.998942  5201 net.cpp:139] Memory required for data: 29114800
I0428 20:38:52.998944  5201 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:52.998952  5201 net.cpp:86] Creating Layer conv1
I0428 20:38:52.998955  5201 net.cpp:408] conv1 <- pool0
I0428 20:38:52.998960  5201 net.cpp:382] conv1 -> conv1
I0428 20:38:53.002038  5201 net.cpp:124] Setting up conv1
I0428 20:38:53.002053  5201 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:53.002056  5201 net.cpp:139] Memory required for data: 31674800
I0428 20:38:53.002064  5201 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:53.002092  5201 net.cpp:86] Creating Layer pool1
I0428 20:38:53.002096  5201 net.cpp:408] pool1 <- conv1
I0428 20:38:53.002101  5201 net.cpp:382] pool1 -> pool1
I0428 20:38:53.002138  5201 net.cpp:124] Setting up pool1
I0428 20:38:53.002143  5201 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:53.002146  5201 net.cpp:139] Memory required for data: 32314800
I0428 20:38:53.002149  5201 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:53.002156  5201 net.cpp:86] Creating Layer ip1
I0428 20:38:53.002159  5201 net.cpp:408] ip1 <- pool1
I0428 20:38:53.002163  5201 net.cpp:382] ip1 -> ip1
I0428 20:38:53.002699  5201 net.cpp:124] Setting up ip1
I0428 20:38:53.002720  5201 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:53.002724  5201 net.cpp:139] Memory required for data: 32334800
I0428 20:38:53.002732  5201 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:53.002738  5201 net.cpp:86] Creating Layer relu1
I0428 20:38:53.002743  5201 net.cpp:408] relu1 <- ip1
I0428 20:38:53.002746  5201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:53.002915  5201 net.cpp:124] Setting up relu1
I0428 20:38:53.002923  5201 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:53.002928  5201 net.cpp:139] Memory required for data: 32354800
I0428 20:38:53.002930  5201 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:53.002939  5201 net.cpp:86] Creating Layer ip2
I0428 20:38:53.002944  5201 net.cpp:408] ip2 <- ip1
I0428 20:38:53.002952  5201 net.cpp:382] ip2 -> ip2
I0428 20:38:53.003120  5201 net.cpp:124] Setting up ip2
I0428 20:38:53.003127  5201 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:53.003130  5201 net.cpp:139] Memory required for data: 32364800
I0428 20:38:53.003136  5201 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:53.003142  5201 net.cpp:86] Creating Layer relu2
I0428 20:38:53.003145  5201 net.cpp:408] relu2 <- ip2
I0428 20:38:53.003149  5201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:53.003360  5201 net.cpp:124] Setting up relu2
I0428 20:38:53.003368  5201 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:53.003372  5201 net.cpp:139] Memory required for data: 32374800
I0428 20:38:53.003376  5201 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:53.003381  5201 net.cpp:86] Creating Layer ip3
I0428 20:38:53.003398  5201 net.cpp:408] ip3 <- ip2
I0428 20:38:53.003408  5201 net.cpp:382] ip3 -> ip3
I0428 20:38:53.003516  5201 net.cpp:124] Setting up ip3
I0428 20:38:53.003522  5201 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:53.003526  5201 net.cpp:139] Memory required for data: 32378800
I0428 20:38:53.003533  5201 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:53.003545  5201 net.cpp:86] Creating Layer relu3
I0428 20:38:53.003548  5201 net.cpp:408] relu3 <- ip3
I0428 20:38:53.003552  5201 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:53.004330  5201 net.cpp:124] Setting up relu3
I0428 20:38:53.004343  5201 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:53.004348  5201 net.cpp:139] Memory required for data: 32382800
I0428 20:38:53.004350  5201 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:53.004355  5201 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:53.004359  5201 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:53.004365  5201 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:53.004377  5201 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:53.004467  5201 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:53.004474  5201 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:53.004478  5201 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:53.004482  5201 net.cpp:139] Memory required for data: 32390800
I0428 20:38:53.004490  5201 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:53.004494  5201 net.cpp:86] Creating Layer accuracy
I0428 20:38:53.004498  5201 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:53.004501  5201 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:53.004505  5201 net.cpp:382] accuracy -> accuracy
I0428 20:38:53.004513  5201 net.cpp:124] Setting up accuracy
I0428 20:38:53.004516  5201 net.cpp:131] Top shape: (1)
I0428 20:38:53.004518  5201 net.cpp:139] Memory required for data: 32390804
I0428 20:38:53.004528  5201 layer_factory.hpp:77] Creating layer loss
I0428 20:38:53.004532  5201 net.cpp:86] Creating Layer loss
I0428 20:38:53.004535  5201 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:53.004539  5201 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:53.004544  5201 net.cpp:382] loss -> loss
I0428 20:38:53.004549  5201 layer_factory.hpp:77] Creating layer loss
I0428 20:38:53.004840  5201 net.cpp:124] Setting up loss
I0428 20:38:53.004851  5201 net.cpp:131] Top shape: (1)
I0428 20:38:53.004854  5201 net.cpp:134]     with loss weight 1
I0428 20:38:53.004871  5201 net.cpp:139] Memory required for data: 32390808
I0428 20:38:53.004876  5201 net.cpp:200] loss needs backward computation.
I0428 20:38:53.004880  5201 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:53.004884  5201 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:53.004887  5201 net.cpp:200] relu3 needs backward computation.
I0428 20:38:53.004890  5201 net.cpp:200] ip3 needs backward computation.
I0428 20:38:53.004892  5201 net.cpp:200] relu2 needs backward computation.
I0428 20:38:53.004895  5201 net.cpp:200] ip2 needs backward computation.
I0428 20:38:53.004899  5201 net.cpp:200] relu1 needs backward computation.
I0428 20:38:53.004901  5201 net.cpp:200] ip1 needs backward computation.
I0428 20:38:53.004905  5201 net.cpp:200] pool1 needs backward computation.
I0428 20:38:53.004909  5201 net.cpp:200] conv1 needs backward computation.
I0428 20:38:53.004911  5201 net.cpp:200] pool0 needs backward computation.
I0428 20:38:53.004914  5201 net.cpp:200] conv0 needs backward computation.
I0428 20:38:53.004920  5201 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:53.004923  5201 net.cpp:202] mnist does not need backward computation.
I0428 20:38:53.004925  5201 net.cpp:244] This network produces output accuracy
I0428 20:38:53.004930  5201 net.cpp:244] This network produces output loss
I0428 20:38:53.004948  5201 net.cpp:257] Network initialization done.
I0428 20:38:53.004992  5201 solver.cpp:56] Solver scaffolding done.
I0428 20:38:53.005368  5201 caffe.cpp:248] Starting Optimization
I0428 20:38:53.005375  5201 solver.cpp:273] Solving LeNet
I0428 20:38:53.005378  5201 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:53.006233  5201 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:53.138450  5210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:53.141819  5201 solver.cpp:398]     Test net output #0: accuracy = 0.1218
I0428 20:38:53.141839  5201 solver.cpp:398]     Test net output #1: loss = 2.31506 (* 1 = 2.31506 loss)
I0428 20:38:53.148490  5201 solver.cpp:219] Iteration 0 (-5.77335e-43 iter/s, 0.143085s/100 iters), loss = 2.31311
I0428 20:38:53.148530  5201 solver.cpp:238]     Train net output #0: loss = 2.31311 (* 1 = 2.31311 loss)
I0428 20:38:53.148540  5201 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:53.422483  5201 solver.cpp:219] Iteration 100 (365.033 iter/s, 0.273948s/100 iters), loss = 0.644223
I0428 20:38:53.422509  5201 solver.cpp:238]     Train net output #0: loss = 0.644223 (* 1 = 0.644223 loss)
I0428 20:38:53.422515  5201 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:53.693575  5201 solver.cpp:219] Iteration 200 (368.94 iter/s, 0.271047s/100 iters), loss = 0.338471
I0428 20:38:53.693601  5201 solver.cpp:238]     Train net output #0: loss = 0.338471 (* 1 = 0.338471 loss)
I0428 20:38:53.693608  5201 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:53.968334  5201 solver.cpp:219] Iteration 300 (364.013 iter/s, 0.274716s/100 iters), loss = 0.19286
I0428 20:38:53.968363  5201 solver.cpp:238]     Train net output #0: loss = 0.19286 (* 1 = 0.19286 loss)
I0428 20:38:53.968369  5201 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:54.244112  5201 solver.cpp:219] Iteration 400 (362.672 iter/s, 0.275731s/100 iters), loss = 0.106831
I0428 20:38:54.244140  5201 solver.cpp:238]     Train net output #0: loss = 0.106831 (* 1 = 0.106831 loss)
I0428 20:38:54.244148  5201 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:54.519172  5201 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:54.644264  5210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:54.649034  5201 solver.cpp:398]     Test net output #0: accuracy = 0.9742
I0428 20:38:54.649056  5201 solver.cpp:398]     Test net output #1: loss = 0.0898122 (* 1 = 0.0898122 loss)
I0428 20:38:54.651721  5201 solver.cpp:219] Iteration 500 (245.364 iter/s, 0.407557s/100 iters), loss = 0.0809024
I0428 20:38:54.651744  5201 solver.cpp:238]     Train net output #0: loss = 0.0809024 (* 1 = 0.0809024 loss)
I0428 20:38:54.651788  5201 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:54.932394  5201 solver.cpp:219] Iteration 600 (356.341 iter/s, 0.28063s/100 iters), loss = 0.0841934
I0428 20:38:54.932420  5201 solver.cpp:238]     Train net output #0: loss = 0.0841933 (* 1 = 0.0841933 loss)
I0428 20:38:54.932425  5201 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:55.215800  5201 solver.cpp:219] Iteration 700 (352.906 iter/s, 0.283361s/100 iters), loss = 0.132681
I0428 20:38:55.215826  5201 solver.cpp:238]     Train net output #0: loss = 0.132681 (* 1 = 0.132681 loss)
I0428 20:38:55.215848  5201 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:55.501546  5201 solver.cpp:219] Iteration 800 (350.015 iter/s, 0.285702s/100 iters), loss = 0.160268
I0428 20:38:55.501572  5201 solver.cpp:238]     Train net output #0: loss = 0.160268 (* 1 = 0.160268 loss)
I0428 20:38:55.501595  5201 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:55.793639  5201 solver.cpp:219] Iteration 900 (342.411 iter/s, 0.292047s/100 iters), loss = 0.211458
I0428 20:38:55.793664  5201 solver.cpp:238]     Train net output #0: loss = 0.211458 (* 1 = 0.211458 loss)
I0428 20:38:55.793670  5201 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:55.889837  5209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:56.079212  5201 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:56.085270  5201 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:56.088802  5201 solver.cpp:311] Iteration 1000, loss = 0.0746854
I0428 20:38:56.088840  5201 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:56.218911  5210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:56.222120  5201 solver.cpp:398]     Test net output #0: accuracy = 0.9809
I0428 20:38:56.222137  5201 solver.cpp:398]     Test net output #1: loss = 0.0569899 (* 1 = 0.0569899 loss)
I0428 20:38:56.222142  5201 solver.cpp:316] Optimization Done.
I0428 20:38:56.222144  5201 caffe.cpp:259] Optimization Done.
