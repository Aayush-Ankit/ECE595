I0428 20:24:47.545222  2484 caffe.cpp:218] Using GPUs 0
I0428 20:24:47.578095  2484 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:48.089001  2484 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1443.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:48.089146  2484 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1443.prototxt
I0428 20:24:48.089493  2484 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:48.089511  2484 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:48.089591  2484 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:24:48.089660  2484 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:48.089764  2484 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:48.089788  2484 net.cpp:86] Creating Layer mnist
I0428 20:24:48.089798  2484 net.cpp:382] mnist -> data
I0428 20:24:48.089820  2484 net.cpp:382] mnist -> label
I0428 20:24:48.090914  2484 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:48.093374  2484 net.cpp:124] Setting up mnist
I0428 20:24:48.093392  2484 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:48.093400  2484 net.cpp:131] Top shape: 64 (64)
I0428 20:24:48.093402  2484 net.cpp:139] Memory required for data: 200960
I0428 20:24:48.093410  2484 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:48.093430  2484 net.cpp:86] Creating Layer conv0
I0428 20:24:48.093436  2484 net.cpp:408] conv0 <- data
I0428 20:24:48.093456  2484 net.cpp:382] conv0 -> conv0
I0428 20:24:48.337330  2484 net.cpp:124] Setting up conv0
I0428 20:24:48.337371  2484 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:24:48.337375  2484 net.cpp:139] Memory required for data: 14946560
I0428 20:24:48.337389  2484 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:48.337402  2484 net.cpp:86] Creating Layer pool0
I0428 20:24:48.337405  2484 net.cpp:408] pool0 <- conv0
I0428 20:24:48.337426  2484 net.cpp:382] pool0 -> pool0
I0428 20:24:48.337471  2484 net.cpp:124] Setting up pool0
I0428 20:24:48.337477  2484 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:24:48.337496  2484 net.cpp:139] Memory required for data: 18632960
I0428 20:24:48.337499  2484 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:48.337510  2484 net.cpp:86] Creating Layer conv1
I0428 20:24:48.337514  2484 net.cpp:408] conv1 <- pool0
I0428 20:24:48.337519  2484 net.cpp:382] conv1 -> conv1
I0428 20:24:48.340181  2484 net.cpp:124] Setting up conv1
I0428 20:24:48.340211  2484 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:24:48.340215  2484 net.cpp:139] Memory required for data: 18665728
I0428 20:24:48.340224  2484 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:48.340231  2484 net.cpp:86] Creating Layer pool1
I0428 20:24:48.340235  2484 net.cpp:408] pool1 <- conv1
I0428 20:24:48.340240  2484 net.cpp:382] pool1 -> pool1
I0428 20:24:48.340291  2484 net.cpp:124] Setting up pool1
I0428 20:24:48.340299  2484 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:24:48.340303  2484 net.cpp:139] Memory required for data: 18673920
I0428 20:24:48.340306  2484 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:48.340313  2484 net.cpp:86] Creating Layer ip1
I0428 20:24:48.340317  2484 net.cpp:408] ip1 <- pool1
I0428 20:24:48.340322  2484 net.cpp:382] ip1 -> ip1
I0428 20:24:48.340411  2484 net.cpp:124] Setting up ip1
I0428 20:24:48.340418  2484 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:48.340421  2484 net.cpp:139] Memory required for data: 18676480
I0428 20:24:48.340428  2484 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:48.340435  2484 net.cpp:86] Creating Layer relu1
I0428 20:24:48.340437  2484 net.cpp:408] relu1 <- ip1
I0428 20:24:48.340442  2484 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:48.340601  2484 net.cpp:124] Setting up relu1
I0428 20:24:48.340610  2484 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:48.340613  2484 net.cpp:139] Memory required for data: 18679040
I0428 20:24:48.340616  2484 layer_factory.hpp:77] Creating layer loss
I0428 20:24:48.340622  2484 net.cpp:86] Creating Layer loss
I0428 20:24:48.340626  2484 net.cpp:408] loss <- ip1
I0428 20:24:48.340629  2484 net.cpp:408] loss <- label
I0428 20:24:48.340634  2484 net.cpp:382] loss -> loss
I0428 20:24:48.340649  2484 layer_factory.hpp:77] Creating layer loss
I0428 20:24:48.341553  2484 net.cpp:124] Setting up loss
I0428 20:24:48.341567  2484 net.cpp:131] Top shape: (1)
I0428 20:24:48.341574  2484 net.cpp:134]     with loss weight 1
I0428 20:24:48.341588  2484 net.cpp:139] Memory required for data: 18679044
I0428 20:24:48.341593  2484 net.cpp:200] loss needs backward computation.
I0428 20:24:48.341596  2484 net.cpp:200] relu1 needs backward computation.
I0428 20:24:48.341599  2484 net.cpp:200] ip1 needs backward computation.
I0428 20:24:48.341603  2484 net.cpp:200] pool1 needs backward computation.
I0428 20:24:48.341606  2484 net.cpp:200] conv1 needs backward computation.
I0428 20:24:48.341609  2484 net.cpp:200] pool0 needs backward computation.
I0428 20:24:48.341612  2484 net.cpp:200] conv0 needs backward computation.
I0428 20:24:48.341616  2484 net.cpp:202] mnist does not need backward computation.
I0428 20:24:48.341619  2484 net.cpp:244] This network produces output loss
I0428 20:24:48.341627  2484 net.cpp:257] Network initialization done.
I0428 20:24:48.341886  2484 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1443.prototxt
I0428 20:24:48.341910  2484 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:48.341981  2484 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:24:48.342047  2484 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:48.342106  2484 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:48.342118  2484 net.cpp:86] Creating Layer mnist
I0428 20:24:48.342123  2484 net.cpp:382] mnist -> data
I0428 20:24:48.342130  2484 net.cpp:382] mnist -> label
I0428 20:24:48.342211  2484 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:48.344128  2484 net.cpp:124] Setting up mnist
I0428 20:24:48.344157  2484 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:48.344163  2484 net.cpp:131] Top shape: 100 (100)
I0428 20:24:48.344166  2484 net.cpp:139] Memory required for data: 314000
I0428 20:24:48.344171  2484 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:48.344177  2484 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:48.344182  2484 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:48.344187  2484 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:48.344192  2484 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:48.344282  2484 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:48.344290  2484 net.cpp:131] Top shape: 100 (100)
I0428 20:24:48.344295  2484 net.cpp:131] Top shape: 100 (100)
I0428 20:24:48.344297  2484 net.cpp:139] Memory required for data: 314800
I0428 20:24:48.344301  2484 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:48.344324  2484 net.cpp:86] Creating Layer conv0
I0428 20:24:48.344328  2484 net.cpp:408] conv0 <- data
I0428 20:24:48.344333  2484 net.cpp:382] conv0 -> conv0
I0428 20:24:48.345227  2484 net.cpp:124] Setting up conv0
I0428 20:24:48.345238  2484 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:24:48.345257  2484 net.cpp:139] Memory required for data: 23354800
I0428 20:24:48.345266  2484 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:48.345273  2484 net.cpp:86] Creating Layer pool0
I0428 20:24:48.345275  2484 net.cpp:408] pool0 <- conv0
I0428 20:24:48.345280  2484 net.cpp:382] pool0 -> pool0
I0428 20:24:48.345329  2484 net.cpp:124] Setting up pool0
I0428 20:24:48.345335  2484 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:24:48.345345  2484 net.cpp:139] Memory required for data: 29114800
I0428 20:24:48.345348  2484 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:48.345356  2484 net.cpp:86] Creating Layer conv1
I0428 20:24:48.345360  2484 net.cpp:408] conv1 <- pool0
I0428 20:24:48.345365  2484 net.cpp:382] conv1 -> conv1
I0428 20:24:48.346895  2484 net.cpp:124] Setting up conv1
I0428 20:24:48.346907  2484 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:24:48.346926  2484 net.cpp:139] Memory required for data: 29166000
I0428 20:24:48.346936  2484 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:48.346943  2484 net.cpp:86] Creating Layer pool1
I0428 20:24:48.346956  2484 net.cpp:408] pool1 <- conv1
I0428 20:24:48.346962  2484 net.cpp:382] pool1 -> pool1
I0428 20:24:48.347000  2484 net.cpp:124] Setting up pool1
I0428 20:24:48.347014  2484 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:24:48.347018  2484 net.cpp:139] Memory required for data: 29178800
I0428 20:24:48.347028  2484 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:48.347050  2484 net.cpp:86] Creating Layer ip1
I0428 20:24:48.347054  2484 net.cpp:408] ip1 <- pool1
I0428 20:24:48.347059  2484 net.cpp:382] ip1 -> ip1
I0428 20:24:48.347173  2484 net.cpp:124] Setting up ip1
I0428 20:24:48.347182  2484 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:48.347185  2484 net.cpp:139] Memory required for data: 29182800
I0428 20:24:48.347193  2484 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:48.347199  2484 net.cpp:86] Creating Layer relu1
I0428 20:24:48.347203  2484 net.cpp:408] relu1 <- ip1
I0428 20:24:48.347208  2484 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:48.348049  2484 net.cpp:124] Setting up relu1
I0428 20:24:48.348062  2484 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:48.348080  2484 net.cpp:139] Memory required for data: 29186800
I0428 20:24:48.348084  2484 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:24:48.348093  2484 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:24:48.348095  2484 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:24:48.348100  2484 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:24:48.348106  2484 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:24:48.348150  2484 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:24:48.348155  2484 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:48.348160  2484 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:48.348163  2484 net.cpp:139] Memory required for data: 29194800
I0428 20:24:48.348166  2484 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:48.348171  2484 net.cpp:86] Creating Layer accuracy
I0428 20:24:48.348176  2484 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:24:48.348179  2484 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:48.348184  2484 net.cpp:382] accuracy -> accuracy
I0428 20:24:48.348191  2484 net.cpp:124] Setting up accuracy
I0428 20:24:48.348196  2484 net.cpp:131] Top shape: (1)
I0428 20:24:48.348198  2484 net.cpp:139] Memory required for data: 29194804
I0428 20:24:48.348201  2484 layer_factory.hpp:77] Creating layer loss
I0428 20:24:48.348206  2484 net.cpp:86] Creating Layer loss
I0428 20:24:48.348209  2484 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:24:48.348213  2484 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:48.348217  2484 net.cpp:382] loss -> loss
I0428 20:24:48.348223  2484 layer_factory.hpp:77] Creating layer loss
I0428 20:24:48.348485  2484 net.cpp:124] Setting up loss
I0428 20:24:48.348493  2484 net.cpp:131] Top shape: (1)
I0428 20:24:48.348496  2484 net.cpp:134]     with loss weight 1
I0428 20:24:48.348502  2484 net.cpp:139] Memory required for data: 29194808
I0428 20:24:48.348506  2484 net.cpp:200] loss needs backward computation.
I0428 20:24:48.348510  2484 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:48.348513  2484 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:24:48.348517  2484 net.cpp:200] relu1 needs backward computation.
I0428 20:24:48.348520  2484 net.cpp:200] ip1 needs backward computation.
I0428 20:24:48.348523  2484 net.cpp:200] pool1 needs backward computation.
I0428 20:24:48.348526  2484 net.cpp:200] conv1 needs backward computation.
I0428 20:24:48.348529  2484 net.cpp:200] pool0 needs backward computation.
I0428 20:24:48.348532  2484 net.cpp:200] conv0 needs backward computation.
I0428 20:24:48.348536  2484 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:48.348541  2484 net.cpp:202] mnist does not need backward computation.
I0428 20:24:48.348551  2484 net.cpp:244] This network produces output accuracy
I0428 20:24:48.348554  2484 net.cpp:244] This network produces output loss
I0428 20:24:48.348574  2484 net.cpp:257] Network initialization done.
I0428 20:24:48.348606  2484 solver.cpp:56] Solver scaffolding done.
I0428 20:24:48.348825  2484 caffe.cpp:248] Starting Optimization
I0428 20:24:48.348832  2484 solver.cpp:273] Solving LeNet
I0428 20:24:48.348835  2484 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:48.349529  2484 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:48.361696  2484 blocking_queue.cpp:49] Waiting for data
I0428 20:24:48.440501  2492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:48.441884  2484 solver.cpp:398]     Test net output #0: accuracy = 0.0403
I0428 20:24:48.441905  2484 solver.cpp:398]     Test net output #1: loss = 2.37095 (* 1 = 2.37095 loss)
I0428 20:24:48.446492  2484 solver.cpp:219] Iteration 0 (0 iter/s, 0.0976302s/100 iters), loss = 2.35495
I0428 20:24:48.446519  2484 solver.cpp:238]     Train net output #0: loss = 2.35495 (* 1 = 2.35495 loss)
I0428 20:24:48.446552  2484 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:48.632184  2484 solver.cpp:219] Iteration 100 (538.654 iter/s, 0.185648s/100 iters), loss = 1.32153
I0428 20:24:48.632216  2484 solver.cpp:238]     Train net output #0: loss = 1.32153 (* 1 = 1.32153 loss)
I0428 20:24:48.632223  2484 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:48.813668  2484 solver.cpp:219] Iteration 200 (551.154 iter/s, 0.181437s/100 iters), loss = 0.526426
I0428 20:24:48.813695  2484 solver.cpp:238]     Train net output #0: loss = 0.526426 (* 1 = 0.526426 loss)
I0428 20:24:48.813702  2484 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:48.996346  2484 solver.cpp:219] Iteration 300 (547.536 iter/s, 0.182637s/100 iters), loss = 0.439786
I0428 20:24:48.996373  2484 solver.cpp:238]     Train net output #0: loss = 0.439786 (* 1 = 0.439786 loss)
I0428 20:24:48.996381  2484 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:49.184072  2484 solver.cpp:219] Iteration 400 (532.811 iter/s, 0.187684s/100 iters), loss = 0.539943
I0428 20:24:49.184113  2484 solver.cpp:238]     Train net output #0: loss = 0.539943 (* 1 = 0.539943 loss)
I0428 20:24:49.184120  2484 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:49.371811  2484 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:49.467381  2492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:49.469736  2484 solver.cpp:398]     Test net output #0: accuracy = 0.9233
I0428 20:24:49.469768  2484 solver.cpp:398]     Test net output #1: loss = 0.256275 (* 1 = 0.256275 loss)
I0428 20:24:49.471640  2484 solver.cpp:219] Iteration 500 (347.803 iter/s, 0.287519s/100 iters), loss = 0.351587
I0428 20:24:49.471678  2484 solver.cpp:238]     Train net output #0: loss = 0.351587 (* 1 = 0.351587 loss)
I0428 20:24:49.471688  2484 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:49.672402  2484 solver.cpp:219] Iteration 600 (498.226 iter/s, 0.200712s/100 iters), loss = 0.210018
I0428 20:24:49.672452  2484 solver.cpp:238]     Train net output #0: loss = 0.210018 (* 1 = 0.210018 loss)
I0428 20:24:49.672466  2484 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:49.872033  2484 solver.cpp:219] Iteration 700 (501.087 iter/s, 0.199566s/100 iters), loss = 0.204013
I0428 20:24:49.872087  2484 solver.cpp:238]     Train net output #0: loss = 0.204013 (* 1 = 0.204013 loss)
I0428 20:24:49.872102  2484 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:50.073257  2484 solver.cpp:219] Iteration 800 (497.135 iter/s, 0.201153s/100 iters), loss = 0.277625
I0428 20:24:50.073317  2484 solver.cpp:238]     Train net output #0: loss = 0.277625 (* 1 = 0.277625 loss)
I0428 20:24:50.073331  2484 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:50.278770  2484 solver.cpp:219] Iteration 900 (486.76 iter/s, 0.20544s/100 iters), loss = 0.306706
I0428 20:24:50.278820  2484 solver.cpp:238]     Train net output #0: loss = 0.306706 (* 1 = 0.306706 loss)
I0428 20:24:50.278832  2484 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:50.347659  2491 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:50.482615  2484 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:50.484407  2484 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:50.485720  2484 solver.cpp:311] Iteration 1000, loss = 0.135598
I0428 20:24:50.485750  2484 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:50.584563  2492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:50.585774  2484 solver.cpp:398]     Test net output #0: accuracy = 0.9515
I0428 20:24:50.585798  2484 solver.cpp:398]     Test net output #1: loss = 0.159377 (* 1 = 0.159377 loss)
I0428 20:24:50.585805  2484 solver.cpp:316] Optimization Done.
I0428 20:24:50.585809  2484 caffe.cpp:259] Optimization Done.
