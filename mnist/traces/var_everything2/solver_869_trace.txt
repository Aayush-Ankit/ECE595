I0428 20:00:10.722309 29417 caffe.cpp:218] Using GPUs 0
I0428 20:00:10.765969 29417 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:11.284776 29417 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test869.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:11.284931 29417 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test869.prototxt
I0428 20:00:11.285315 29417 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:11.285333 29417 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:11.285424 29417 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:00:11.285504 29417 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:11.285606 29417 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:11.285629 29417 net.cpp:86] Creating Layer mnist
I0428 20:00:11.285640 29417 net.cpp:382] mnist -> data
I0428 20:00:11.285661 29417 net.cpp:382] mnist -> label
I0428 20:00:11.286758 29417 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:11.289427 29417 net.cpp:124] Setting up mnist
I0428 20:00:11.289444 29417 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:11.289450 29417 net.cpp:131] Top shape: 64 (64)
I0428 20:00:11.289454 29417 net.cpp:139] Memory required for data: 200960
I0428 20:00:11.289460 29417 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:11.289479 29417 net.cpp:86] Creating Layer conv0
I0428 20:00:11.289484 29417 net.cpp:408] conv0 <- data
I0428 20:00:11.289497 29417 net.cpp:382] conv0 -> conv0
I0428 20:00:11.580193 29417 net.cpp:124] Setting up conv0
I0428 20:00:11.580224 29417 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:11.580229 29417 net.cpp:139] Memory required for data: 1675520
I0428 20:00:11.580271 29417 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:11.580286 29417 net.cpp:86] Creating Layer pool0
I0428 20:00:11.580291 29417 net.cpp:408] pool0 <- conv0
I0428 20:00:11.580296 29417 net.cpp:382] pool0 -> pool0
I0428 20:00:11.580356 29417 net.cpp:124] Setting up pool0
I0428 20:00:11.580365 29417 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:11.580369 29417 net.cpp:139] Memory required for data: 2044160
I0428 20:00:11.580374 29417 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:11.580385 29417 net.cpp:86] Creating Layer conv1
I0428 20:00:11.580389 29417 net.cpp:408] conv1 <- pool0
I0428 20:00:11.580395 29417 net.cpp:382] conv1 -> conv1
I0428 20:00:11.583564 29417 net.cpp:124] Setting up conv1
I0428 20:00:11.583582 29417 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:11.583587 29417 net.cpp:139] Memory required for data: 2453760
I0428 20:00:11.583597 29417 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:11.583606 29417 net.cpp:86] Creating Layer pool1
I0428 20:00:11.583611 29417 net.cpp:408] pool1 <- conv1
I0428 20:00:11.583617 29417 net.cpp:382] pool1 -> pool1
I0428 20:00:11.583662 29417 net.cpp:124] Setting up pool1
I0428 20:00:11.583667 29417 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:11.583670 29417 net.cpp:139] Memory required for data: 2556160
I0428 20:00:11.583674 29417 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:11.583688 29417 net.cpp:86] Creating Layer ip1
I0428 20:00:11.583691 29417 net.cpp:408] ip1 <- pool1
I0428 20:00:11.583698 29417 net.cpp:382] ip1 -> ip1
I0428 20:00:11.583940 29417 net.cpp:124] Setting up ip1
I0428 20:00:11.583950 29417 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:11.583953 29417 net.cpp:139] Memory required for data: 2568960
I0428 20:00:11.583961 29417 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:11.583968 29417 net.cpp:86] Creating Layer relu1
I0428 20:00:11.583972 29417 net.cpp:408] relu1 <- ip1
I0428 20:00:11.583977 29417 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:11.584168 29417 net.cpp:124] Setting up relu1
I0428 20:00:11.584178 29417 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:11.584182 29417 net.cpp:139] Memory required for data: 2581760
I0428 20:00:11.584187 29417 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:11.584193 29417 net.cpp:86] Creating Layer ip2
I0428 20:00:11.584197 29417 net.cpp:408] ip2 <- ip1
I0428 20:00:11.584203 29417 net.cpp:382] ip2 -> ip2
I0428 20:00:11.584316 29417 net.cpp:124] Setting up ip2
I0428 20:00:11.584323 29417 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:11.584327 29417 net.cpp:139] Memory required for data: 2584320
I0428 20:00:11.584333 29417 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:11.584341 29417 net.cpp:86] Creating Layer relu2
I0428 20:00:11.584344 29417 net.cpp:408] relu2 <- ip2
I0428 20:00:11.584350 29417 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:11.585196 29417 net.cpp:124] Setting up relu2
I0428 20:00:11.585211 29417 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:11.585216 29417 net.cpp:139] Memory required for data: 2586880
I0428 20:00:11.585219 29417 layer_factory.hpp:77] Creating layer loss
I0428 20:00:11.585227 29417 net.cpp:86] Creating Layer loss
I0428 20:00:11.585230 29417 net.cpp:408] loss <- ip2
I0428 20:00:11.585237 29417 net.cpp:408] loss <- label
I0428 20:00:11.585242 29417 net.cpp:382] loss -> loss
I0428 20:00:11.585266 29417 layer_factory.hpp:77] Creating layer loss
I0428 20:00:11.585536 29417 net.cpp:124] Setting up loss
I0428 20:00:11.585548 29417 net.cpp:131] Top shape: (1)
I0428 20:00:11.585552 29417 net.cpp:134]     with loss weight 1
I0428 20:00:11.585571 29417 net.cpp:139] Memory required for data: 2586884
I0428 20:00:11.585575 29417 net.cpp:200] loss needs backward computation.
I0428 20:00:11.585579 29417 net.cpp:200] relu2 needs backward computation.
I0428 20:00:11.585583 29417 net.cpp:200] ip2 needs backward computation.
I0428 20:00:11.585587 29417 net.cpp:200] relu1 needs backward computation.
I0428 20:00:11.585590 29417 net.cpp:200] ip1 needs backward computation.
I0428 20:00:11.585606 29417 net.cpp:200] pool1 needs backward computation.
I0428 20:00:11.585610 29417 net.cpp:200] conv1 needs backward computation.
I0428 20:00:11.585614 29417 net.cpp:200] pool0 needs backward computation.
I0428 20:00:11.585618 29417 net.cpp:200] conv0 needs backward computation.
I0428 20:00:11.585623 29417 net.cpp:202] mnist does not need backward computation.
I0428 20:00:11.585625 29417 net.cpp:244] This network produces output loss
I0428 20:00:11.585635 29417 net.cpp:257] Network initialization done.
I0428 20:00:11.585981 29417 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test869.prototxt
I0428 20:00:11.586011 29417 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:11.586112 29417 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:00:11.586186 29417 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:11.586242 29417 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:11.586256 29417 net.cpp:86] Creating Layer mnist
I0428 20:00:11.586261 29417 net.cpp:382] mnist -> data
I0428 20:00:11.586271 29417 net.cpp:382] mnist -> label
I0428 20:00:11.586365 29417 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:11.588541 29417 net.cpp:124] Setting up mnist
I0428 20:00:11.588557 29417 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:11.588563 29417 net.cpp:131] Top shape: 100 (100)
I0428 20:00:11.588567 29417 net.cpp:139] Memory required for data: 314000
I0428 20:00:11.588572 29417 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:11.588584 29417 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:11.588588 29417 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:11.588593 29417 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:11.588601 29417 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:11.588671 29417 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:11.588678 29417 net.cpp:131] Top shape: 100 (100)
I0428 20:00:11.588690 29417 net.cpp:131] Top shape: 100 (100)
I0428 20:00:11.588693 29417 net.cpp:139] Memory required for data: 314800
I0428 20:00:11.588696 29417 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:11.588706 29417 net.cpp:86] Creating Layer conv0
I0428 20:00:11.588711 29417 net.cpp:408] conv0 <- data
I0428 20:00:11.588716 29417 net.cpp:382] conv0 -> conv0
I0428 20:00:11.590613 29417 net.cpp:124] Setting up conv0
I0428 20:00:11.590631 29417 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:11.590636 29417 net.cpp:139] Memory required for data: 2618800
I0428 20:00:11.590646 29417 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:11.590654 29417 net.cpp:86] Creating Layer pool0
I0428 20:00:11.590658 29417 net.cpp:408] pool0 <- conv0
I0428 20:00:11.590664 29417 net.cpp:382] pool0 -> pool0
I0428 20:00:11.590706 29417 net.cpp:124] Setting up pool0
I0428 20:00:11.590713 29417 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:11.590715 29417 net.cpp:139] Memory required for data: 3194800
I0428 20:00:11.590719 29417 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:11.590729 29417 net.cpp:86] Creating Layer conv1
I0428 20:00:11.590733 29417 net.cpp:408] conv1 <- pool0
I0428 20:00:11.590739 29417 net.cpp:382] conv1 -> conv1
I0428 20:00:11.593094 29417 net.cpp:124] Setting up conv1
I0428 20:00:11.593111 29417 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:11.593114 29417 net.cpp:139] Memory required for data: 3834800
I0428 20:00:11.593125 29417 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:11.593134 29417 net.cpp:86] Creating Layer pool1
I0428 20:00:11.593138 29417 net.cpp:408] pool1 <- conv1
I0428 20:00:11.593144 29417 net.cpp:382] pool1 -> pool1
I0428 20:00:11.593195 29417 net.cpp:124] Setting up pool1
I0428 20:00:11.593209 29417 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:11.593214 29417 net.cpp:139] Memory required for data: 3994800
I0428 20:00:11.593216 29417 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:11.593224 29417 net.cpp:86] Creating Layer ip1
I0428 20:00:11.593226 29417 net.cpp:408] ip1 <- pool1
I0428 20:00:11.593233 29417 net.cpp:382] ip1 -> ip1
I0428 20:00:11.593519 29417 net.cpp:124] Setting up ip1
I0428 20:00:11.593529 29417 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:11.593534 29417 net.cpp:139] Memory required for data: 4014800
I0428 20:00:11.593544 29417 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:11.593549 29417 net.cpp:86] Creating Layer relu1
I0428 20:00:11.593554 29417 net.cpp:408] relu1 <- ip1
I0428 20:00:11.593560 29417 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:11.593757 29417 net.cpp:124] Setting up relu1
I0428 20:00:11.593770 29417 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:11.593772 29417 net.cpp:139] Memory required for data: 4034800
I0428 20:00:11.593776 29417 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:11.593786 29417 net.cpp:86] Creating Layer ip2
I0428 20:00:11.593791 29417 net.cpp:408] ip2 <- ip1
I0428 20:00:11.593806 29417 net.cpp:382] ip2 -> ip2
I0428 20:00:11.593930 29417 net.cpp:124] Setting up ip2
I0428 20:00:11.593940 29417 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:11.593943 29417 net.cpp:139] Memory required for data: 4038800
I0428 20:00:11.593950 29417 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:11.593955 29417 net.cpp:86] Creating Layer relu2
I0428 20:00:11.593960 29417 net.cpp:408] relu2 <- ip2
I0428 20:00:11.593966 29417 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:11.594158 29417 net.cpp:124] Setting up relu2
I0428 20:00:11.594168 29417 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:11.594172 29417 net.cpp:139] Memory required for data: 4042800
I0428 20:00:11.594175 29417 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:00:11.594182 29417 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:00:11.594184 29417 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:00:11.594192 29417 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:00:11.594213 29417 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:00:11.594274 29417 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:00:11.594285 29417 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:11.594290 29417 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:11.594292 29417 net.cpp:139] Memory required for data: 4050800
I0428 20:00:11.594295 29417 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:11.594303 29417 net.cpp:86] Creating Layer accuracy
I0428 20:00:11.594307 29417 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:00:11.594312 29417 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:11.594318 29417 net.cpp:382] accuracy -> accuracy
I0428 20:00:11.594326 29417 net.cpp:124] Setting up accuracy
I0428 20:00:11.594331 29417 net.cpp:131] Top shape: (1)
I0428 20:00:11.594334 29417 net.cpp:139] Memory required for data: 4050804
I0428 20:00:11.594337 29417 layer_factory.hpp:77] Creating layer loss
I0428 20:00:11.594342 29417 net.cpp:86] Creating Layer loss
I0428 20:00:11.594347 29417 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:00:11.594350 29417 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:11.594355 29417 net.cpp:382] loss -> loss
I0428 20:00:11.594362 29417 layer_factory.hpp:77] Creating layer loss
I0428 20:00:11.594662 29417 net.cpp:124] Setting up loss
I0428 20:00:11.594674 29417 net.cpp:131] Top shape: (1)
I0428 20:00:11.594678 29417 net.cpp:134]     with loss weight 1
I0428 20:00:11.594686 29417 net.cpp:139] Memory required for data: 4050808
I0428 20:00:11.594691 29417 net.cpp:200] loss needs backward computation.
I0428 20:00:11.594696 29417 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:11.594700 29417 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:00:11.594704 29417 net.cpp:200] relu2 needs backward computation.
I0428 20:00:11.594707 29417 net.cpp:200] ip2 needs backward computation.
I0428 20:00:11.594712 29417 net.cpp:200] relu1 needs backward computation.
I0428 20:00:11.594714 29417 net.cpp:200] ip1 needs backward computation.
I0428 20:00:11.594718 29417 net.cpp:200] pool1 needs backward computation.
I0428 20:00:11.594722 29417 net.cpp:200] conv1 needs backward computation.
I0428 20:00:11.594727 29417 net.cpp:200] pool0 needs backward computation.
I0428 20:00:11.594729 29417 net.cpp:200] conv0 needs backward computation.
I0428 20:00:11.594733 29417 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:11.594738 29417 net.cpp:202] mnist does not need backward computation.
I0428 20:00:11.594750 29417 net.cpp:244] This network produces output accuracy
I0428 20:00:11.594754 29417 net.cpp:244] This network produces output loss
I0428 20:00:11.594769 29417 net.cpp:257] Network initialization done.
I0428 20:00:11.594811 29417 solver.cpp:56] Solver scaffolding done.
I0428 20:00:11.595124 29417 caffe.cpp:248] Starting Optimization
I0428 20:00:11.595132 29417 solver.cpp:273] Solving LeNet
I0428 20:00:11.595136 29417 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:11.596004 29417 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:11.600414 29417 blocking_queue.cpp:49] Waiting for data
I0428 20:00:11.666857 29424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:11.667377 29417 solver.cpp:398]     Test net output #0: accuracy = 0.1726
I0428 20:00:11.667403 29417 solver.cpp:398]     Test net output #1: loss = 2.27385 (* 1 = 2.27385 loss)
I0428 20:00:11.669961 29417 solver.cpp:219] Iteration 0 (-7.60538e-31 iter/s, 0.0747971s/100 iters), loss = 2.2762
I0428 20:00:11.669989 29417 solver.cpp:238]     Train net output #0: loss = 2.2762 (* 1 = 2.2762 loss)
I0428 20:00:11.670003 29417 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:11.754351 29417 solver.cpp:219] Iteration 100 (1185.54 iter/s, 0.08435s/100 iters), loss = 0.826483
I0428 20:00:11.754379 29417 solver.cpp:238]     Train net output #0: loss = 0.826483 (* 1 = 0.826483 loss)
I0428 20:00:11.754401 29417 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:11.840987 29417 solver.cpp:219] Iteration 200 (1154.73 iter/s, 0.0866005s/100 iters), loss = 0.427677
I0428 20:00:11.841027 29417 solver.cpp:238]     Train net output #0: loss = 0.427677 (* 1 = 0.427677 loss)
I0428 20:00:11.841035 29417 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:11.927953 29417 solver.cpp:219] Iteration 300 (1150.49 iter/s, 0.0869192s/100 iters), loss = 0.341792
I0428 20:00:11.927978 29417 solver.cpp:238]     Train net output #0: loss = 0.341792 (* 1 = 0.341792 loss)
I0428 20:00:11.927999 29417 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:12.014875 29417 solver.cpp:219] Iteration 400 (1150.9 iter/s, 0.0868883s/100 iters), loss = 0.557882
I0428 20:00:12.014900 29417 solver.cpp:238]     Train net output #0: loss = 0.557882 (* 1 = 0.557882 loss)
I0428 20:00:12.014921 29417 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:12.101478 29417 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:12.155223 29424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:12.155720 29417 solver.cpp:398]     Test net output #0: accuracy = 0.8649
I0428 20:00:12.155740 29417 solver.cpp:398]     Test net output #1: loss = 0.366684 (* 1 = 0.366684 loss)
I0428 20:00:12.156667 29417 solver.cpp:219] Iteration 500 (705.512 iter/s, 0.141741s/100 iters), loss = 0.497378
I0428 20:00:12.156694 29417 solver.cpp:238]     Train net output #0: loss = 0.497378 (* 1 = 0.497378 loss)
I0428 20:00:12.156708 29417 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:12.257977 29417 solver.cpp:219] Iteration 600 (987.394 iter/s, 0.101277s/100 iters), loss = 0.172399
I0428 20:00:12.258002 29417 solver.cpp:238]     Train net output #0: loss = 0.172399 (* 1 = 0.172399 loss)
I0428 20:00:12.258026 29417 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:12.349355 29417 solver.cpp:219] Iteration 700 (1094.76 iter/s, 0.0913439s/100 iters), loss = 0.36315
I0428 20:00:12.349381 29417 solver.cpp:238]     Train net output #0: loss = 0.36315 (* 1 = 0.36315 loss)
I0428 20:00:12.349405 29417 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:12.435968 29417 solver.cpp:219] Iteration 800 (1155.04 iter/s, 0.0865771s/100 iters), loss = 0.364135
I0428 20:00:12.435997 29417 solver.cpp:238]     Train net output #0: loss = 0.364135 (* 1 = 0.364135 loss)
I0428 20:00:12.436020 29417 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:12.522919 29417 solver.cpp:219] Iteration 900 (1150.77 iter/s, 0.0868987s/100 iters), loss = 0.228563
I0428 20:00:12.522961 29417 solver.cpp:238]     Train net output #0: loss = 0.228563 (* 1 = 0.228563 loss)
I0428 20:00:12.522986 29417 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:12.551837 29423 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:12.608355 29417 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:12.609587 29417 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:12.610208 29417 solver.cpp:311] Iteration 1000, loss = 0.262223
I0428 20:00:12.610224 29417 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:12.684866 29424 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:12.685387 29417 solver.cpp:398]     Test net output #0: accuracy = 0.8829
I0428 20:00:12.685406 29417 solver.cpp:398]     Test net output #1: loss = 0.298006 (* 1 = 0.298006 loss)
I0428 20:00:12.685411 29417 solver.cpp:316] Optimization Done.
I0428 20:00:12.685415 29417 caffe.cpp:259] Optimization Done.
