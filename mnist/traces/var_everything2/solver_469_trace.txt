I0428 19:45:18.649801 25782 caffe.cpp:218] Using GPUs 0
I0428 19:45:18.689064 25782 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:19.211989 25782 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test469.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:19.212136 25782 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test469.prototxt
I0428 19:45:19.212486 25782 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:19.212503 25782 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:19.212584 25782 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:45:19.212654 25782 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:19.212754 25782 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:19.212777 25782 net.cpp:86] Creating Layer mnist
I0428 19:45:19.212787 25782 net.cpp:382] mnist -> data
I0428 19:45:19.212818 25782 net.cpp:382] mnist -> label
I0428 19:45:19.213913 25782 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:19.216349 25782 net.cpp:124] Setting up mnist
I0428 19:45:19.216367 25782 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:19.216375 25782 net.cpp:131] Top shape: 64 (64)
I0428 19:45:19.216378 25782 net.cpp:139] Memory required for data: 200960
I0428 19:45:19.216385 25782 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:19.216426 25782 net.cpp:86] Creating Layer conv0
I0428 19:45:19.216434 25782 net.cpp:408] conv0 <- data
I0428 19:45:19.216445 25782 net.cpp:382] conv0 -> conv0
I0428 19:45:19.508760 25782 net.cpp:124] Setting up conv0
I0428 19:45:19.508792 25782 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:19.508798 25782 net.cpp:139] Memory required for data: 495872
I0428 19:45:19.508822 25782 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:19.508838 25782 net.cpp:86] Creating Layer pool0
I0428 19:45:19.508843 25782 net.cpp:408] pool0 <- conv0
I0428 19:45:19.508851 25782 net.cpp:382] pool0 -> pool0
I0428 19:45:19.508905 25782 net.cpp:124] Setting up pool0
I0428 19:45:19.508913 25782 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:19.508932 25782 net.cpp:139] Memory required for data: 569600
I0428 19:45:19.508936 25782 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:19.508950 25782 net.cpp:86] Creating Layer conv1
I0428 19:45:19.508955 25782 net.cpp:408] conv1 <- pool0
I0428 19:45:19.508960 25782 net.cpp:382] conv1 -> conv1
I0428 19:45:19.512104 25782 net.cpp:124] Setting up conv1
I0428 19:45:19.512122 25782 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:19.512126 25782 net.cpp:139] Memory required for data: 2208000
I0428 19:45:19.512137 25782 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:19.512146 25782 net.cpp:86] Creating Layer pool1
I0428 19:45:19.512151 25782 net.cpp:408] pool1 <- conv1
I0428 19:45:19.512158 25782 net.cpp:382] pool1 -> pool1
I0428 19:45:19.512202 25782 net.cpp:124] Setting up pool1
I0428 19:45:19.512209 25782 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:19.512213 25782 net.cpp:139] Memory required for data: 2617600
I0428 19:45:19.512217 25782 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:19.512225 25782 net.cpp:86] Creating Layer ip1
I0428 19:45:19.512228 25782 net.cpp:408] ip1 <- pool1
I0428 19:45:19.512234 25782 net.cpp:382] ip1 -> ip1
I0428 19:45:19.512455 25782 net.cpp:124] Setting up ip1
I0428 19:45:19.512465 25782 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:19.512470 25782 net.cpp:139] Memory required for data: 2620160
I0428 19:45:19.512478 25782 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:19.512485 25782 net.cpp:86] Creating Layer relu1
I0428 19:45:19.512490 25782 net.cpp:408] relu1 <- ip1
I0428 19:45:19.512495 25782 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:19.512692 25782 net.cpp:124] Setting up relu1
I0428 19:45:19.512703 25782 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:19.512707 25782 net.cpp:139] Memory required for data: 2622720
I0428 19:45:19.512712 25782 layer_factory.hpp:77] Creating layer loss
I0428 19:45:19.512719 25782 net.cpp:86] Creating Layer loss
I0428 19:45:19.512722 25782 net.cpp:408] loss <- ip1
I0428 19:45:19.512727 25782 net.cpp:408] loss <- label
I0428 19:45:19.512733 25782 net.cpp:382] loss -> loss
I0428 19:45:19.512754 25782 layer_factory.hpp:77] Creating layer loss
I0428 19:45:19.513705 25782 net.cpp:124] Setting up loss
I0428 19:45:19.513720 25782 net.cpp:131] Top shape: (1)
I0428 19:45:19.513725 25782 net.cpp:134]     with loss weight 1
I0428 19:45:19.513741 25782 net.cpp:139] Memory required for data: 2622724
I0428 19:45:19.513746 25782 net.cpp:200] loss needs backward computation.
I0428 19:45:19.513752 25782 net.cpp:200] relu1 needs backward computation.
I0428 19:45:19.513756 25782 net.cpp:200] ip1 needs backward computation.
I0428 19:45:19.513761 25782 net.cpp:200] pool1 needs backward computation.
I0428 19:45:19.513763 25782 net.cpp:200] conv1 needs backward computation.
I0428 19:45:19.513767 25782 net.cpp:200] pool0 needs backward computation.
I0428 19:45:19.513770 25782 net.cpp:200] conv0 needs backward computation.
I0428 19:45:19.513774 25782 net.cpp:202] mnist does not need backward computation.
I0428 19:45:19.513778 25782 net.cpp:244] This network produces output loss
I0428 19:45:19.513788 25782 net.cpp:257] Network initialization done.
I0428 19:45:19.514092 25782 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test469.prototxt
I0428 19:45:19.514120 25782 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:19.514214 25782 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:45:19.514298 25782 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:19.514351 25782 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:19.514366 25782 net.cpp:86] Creating Layer mnist
I0428 19:45:19.514371 25782 net.cpp:382] mnist -> data
I0428 19:45:19.514380 25782 net.cpp:382] mnist -> label
I0428 19:45:19.514479 25782 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:19.516670 25782 net.cpp:124] Setting up mnist
I0428 19:45:19.516686 25782 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:19.516692 25782 net.cpp:131] Top shape: 100 (100)
I0428 19:45:19.516696 25782 net.cpp:139] Memory required for data: 314000
I0428 19:45:19.516700 25782 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:19.516708 25782 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:19.516712 25782 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:19.516718 25782 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:19.516728 25782 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:19.516849 25782 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:19.516860 25782 net.cpp:131] Top shape: 100 (100)
I0428 19:45:19.516865 25782 net.cpp:131] Top shape: 100 (100)
I0428 19:45:19.516868 25782 net.cpp:139] Memory required for data: 314800
I0428 19:45:19.516871 25782 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:19.516882 25782 net.cpp:86] Creating Layer conv0
I0428 19:45:19.516886 25782 net.cpp:408] conv0 <- data
I0428 19:45:19.516892 25782 net.cpp:382] conv0 -> conv0
I0428 19:45:19.517930 25782 net.cpp:124] Setting up conv0
I0428 19:45:19.517945 25782 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:19.517949 25782 net.cpp:139] Memory required for data: 775600
I0428 19:45:19.517961 25782 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:19.517967 25782 net.cpp:86] Creating Layer pool0
I0428 19:45:19.517971 25782 net.cpp:408] pool0 <- conv0
I0428 19:45:19.517978 25782 net.cpp:382] pool0 -> pool0
I0428 19:45:19.518023 25782 net.cpp:124] Setting up pool0
I0428 19:45:19.518028 25782 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:19.518033 25782 net.cpp:139] Memory required for data: 890800
I0428 19:45:19.518035 25782 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:19.518049 25782 net.cpp:86] Creating Layer conv1
I0428 19:45:19.518052 25782 net.cpp:408] conv1 <- pool0
I0428 19:45:19.518059 25782 net.cpp:382] conv1 -> conv1
I0428 19:45:19.519881 25782 net.cpp:124] Setting up conv1
I0428 19:45:19.519899 25782 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:19.519904 25782 net.cpp:139] Memory required for data: 3450800
I0428 19:45:19.519915 25782 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:19.519922 25782 net.cpp:86] Creating Layer pool1
I0428 19:45:19.519939 25782 net.cpp:408] pool1 <- conv1
I0428 19:45:19.519948 25782 net.cpp:382] pool1 -> pool1
I0428 19:45:19.519992 25782 net.cpp:124] Setting up pool1
I0428 19:45:19.520004 25782 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:19.520006 25782 net.cpp:139] Memory required for data: 4090800
I0428 19:45:19.520011 25782 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:19.520018 25782 net.cpp:86] Creating Layer ip1
I0428 19:45:19.520022 25782 net.cpp:408] ip1 <- pool1
I0428 19:45:19.520030 25782 net.cpp:382] ip1 -> ip1
I0428 19:45:19.520256 25782 net.cpp:124] Setting up ip1
I0428 19:45:19.520267 25782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:19.520270 25782 net.cpp:139] Memory required for data: 4094800
I0428 19:45:19.520278 25782 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:19.520287 25782 net.cpp:86] Creating Layer relu1
I0428 19:45:19.520290 25782 net.cpp:408] relu1 <- ip1
I0428 19:45:19.520298 25782 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:19.521236 25782 net.cpp:124] Setting up relu1
I0428 19:45:19.521251 25782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:19.521255 25782 net.cpp:139] Memory required for data: 4098800
I0428 19:45:19.521260 25782 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:45:19.521267 25782 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:45:19.521271 25782 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:45:19.521277 25782 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:45:19.521286 25782 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:45:19.521332 25782 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:45:19.521339 25782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:19.521343 25782 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:19.521347 25782 net.cpp:139] Memory required for data: 4106800
I0428 19:45:19.521351 25782 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:19.521359 25782 net.cpp:86] Creating Layer accuracy
I0428 19:45:19.521363 25782 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:45:19.521368 25782 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:19.521373 25782 net.cpp:382] accuracy -> accuracy
I0428 19:45:19.521381 25782 net.cpp:124] Setting up accuracy
I0428 19:45:19.521386 25782 net.cpp:131] Top shape: (1)
I0428 19:45:19.521390 25782 net.cpp:139] Memory required for data: 4106804
I0428 19:45:19.521394 25782 layer_factory.hpp:77] Creating layer loss
I0428 19:45:19.521400 25782 net.cpp:86] Creating Layer loss
I0428 19:45:19.521404 25782 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:45:19.521409 25782 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:19.521414 25782 net.cpp:382] loss -> loss
I0428 19:45:19.521420 25782 layer_factory.hpp:77] Creating layer loss
I0428 19:45:19.521716 25782 net.cpp:124] Setting up loss
I0428 19:45:19.521728 25782 net.cpp:131] Top shape: (1)
I0428 19:45:19.521731 25782 net.cpp:134]     with loss weight 1
I0428 19:45:19.521739 25782 net.cpp:139] Memory required for data: 4106808
I0428 19:45:19.521744 25782 net.cpp:200] loss needs backward computation.
I0428 19:45:19.521749 25782 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:19.521752 25782 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:45:19.521762 25782 net.cpp:200] relu1 needs backward computation.
I0428 19:45:19.521766 25782 net.cpp:200] ip1 needs backward computation.
I0428 19:45:19.521770 25782 net.cpp:200] pool1 needs backward computation.
I0428 19:45:19.521775 25782 net.cpp:200] conv1 needs backward computation.
I0428 19:45:19.521777 25782 net.cpp:200] pool0 needs backward computation.
I0428 19:45:19.521781 25782 net.cpp:200] conv0 needs backward computation.
I0428 19:45:19.521787 25782 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:19.521792 25782 net.cpp:202] mnist does not need backward computation.
I0428 19:45:19.521795 25782 net.cpp:244] This network produces output accuracy
I0428 19:45:19.521807 25782 net.cpp:244] This network produces output loss
I0428 19:45:19.521829 25782 net.cpp:257] Network initialization done.
I0428 19:45:19.521870 25782 solver.cpp:56] Solver scaffolding done.
I0428 19:45:19.522126 25782 caffe.cpp:248] Starting Optimization
I0428 19:45:19.522133 25782 solver.cpp:273] Solving LeNet
I0428 19:45:19.522137 25782 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:19.522357 25782 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:19.527463 25782 blocking_queue.cpp:49] Waiting for data
I0428 19:45:19.597337 25789 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:19.597887 25782 solver.cpp:398]     Test net output #0: accuracy = 0.1123
I0428 19:45:19.597913 25782 solver.cpp:398]     Test net output #1: loss = 2.30095 (* 1 = 2.30095 loss)
I0428 19:45:19.601646 25782 solver.cpp:219] Iteration 0 (-5.39169e-38 iter/s, 0.0794748s/100 iters), loss = 2.27031
I0428 19:45:19.601677 25782 solver.cpp:238]     Train net output #0: loss = 2.27031 (* 1 = 2.27031 loss)
I0428 19:45:19.601691 25782 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:19.745386 25782 solver.cpp:219] Iteration 100 (695.949 iter/s, 0.143689s/100 iters), loss = 0.599618
I0428 19:45:19.745430 25782 solver.cpp:238]     Train net output #0: loss = 0.599618 (* 1 = 0.599618 loss)
I0428 19:45:19.745442 25782 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:19.901235 25782 solver.cpp:219] Iteration 200 (641.893 iter/s, 0.155789s/100 iters), loss = 0.521146
I0428 19:45:19.901284 25782 solver.cpp:238]     Train net output #0: loss = 0.521146 (* 1 = 0.521146 loss)
I0428 19:45:19.901298 25782 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:20.058632 25782 solver.cpp:219] Iteration 300 (635.588 iter/s, 0.157335s/100 iters), loss = 0.556345
I0428 19:45:20.058681 25782 solver.cpp:238]     Train net output #0: loss = 0.556345 (* 1 = 0.556345 loss)
I0428 19:45:20.058694 25782 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:20.216481 25782 solver.cpp:219] Iteration 400 (633.769 iter/s, 0.157786s/100 iters), loss = 0.325958
I0428 19:45:20.216531 25782 solver.cpp:238]     Train net output #0: loss = 0.325958 (* 1 = 0.325958 loss)
I0428 19:45:20.216543 25782 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:20.372782 25782 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:20.429385 25789 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:20.431208 25782 solver.cpp:398]     Test net output #0: accuracy = 0.8688
I0428 19:45:20.431249 25782 solver.cpp:398]     Test net output #1: loss = 0.358496 (* 1 = 0.358496 loss)
I0428 19:45:20.432600 25782 solver.cpp:219] Iteration 500 (462.843 iter/s, 0.216056s/100 iters), loss = 0.379569
I0428 19:45:20.432641 25782 solver.cpp:238]     Train net output #0: loss = 0.379569 (* 1 = 0.379569 loss)
I0428 19:45:20.432649 25782 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:20.584445 25782 solver.cpp:219] Iteration 600 (658.771 iter/s, 0.151798s/100 iters), loss = 0.420019
I0428 19:45:20.584498 25782 solver.cpp:238]     Train net output #0: loss = 0.420019 (* 1 = 0.420019 loss)
I0428 19:45:20.584511 25782 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:20.738459 25782 solver.cpp:219] Iteration 700 (649.543 iter/s, 0.153954s/100 iters), loss = 0.374512
I0428 19:45:20.738514 25782 solver.cpp:238]     Train net output #0: loss = 0.374512 (* 1 = 0.374512 loss)
I0428 19:45:20.738526 25782 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:20.893016 25782 solver.cpp:219] Iteration 800 (647.266 iter/s, 0.154496s/100 iters), loss = 0.479626
I0428 19:45:20.893069 25782 solver.cpp:238]     Train net output #0: loss = 0.479626 (* 1 = 0.479626 loss)
I0428 19:45:20.893080 25782 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:21.048288 25782 solver.cpp:219] Iteration 900 (644.273 iter/s, 0.155214s/100 iters), loss = 0.49674
I0428 19:45:21.048337 25782 solver.cpp:238]     Train net output #0: loss = 0.49674 (* 1 = 0.49674 loss)
I0428 19:45:21.048349 25782 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:21.098920 25788 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:21.200511 25782 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:21.202276 25782 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:21.203166 25782 solver.cpp:311] Iteration 1000, loss = 0.209452
I0428 19:45:21.203191 25782 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:21.256968 25789 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:21.258802 25782 solver.cpp:398]     Test net output #0: accuracy = 0.9691
I0428 19:45:21.258839 25782 solver.cpp:398]     Test net output #1: loss = 0.110066 (* 1 = 0.110066 loss)
I0428 19:45:21.258846 25782 solver.cpp:316] Optimization Done.
I0428 19:45:21.258851 25782 caffe.cpp:259] Optimization Done.
