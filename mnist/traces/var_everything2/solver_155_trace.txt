I0428 19:32:31.128068 22857 caffe.cpp:218] Using GPUs 0
I0428 19:32:31.167948 22857 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:31.718420 22857 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test155.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:31.718557 22857 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test155.prototxt
I0428 19:32:31.718926 22857 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:31.718943 22857 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:31.719033 22857 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:31.719107 22857 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:31.719205 22857 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:31.719228 22857 net.cpp:86] Creating Layer mnist
I0428 19:32:31.719238 22857 net.cpp:382] mnist -> data
I0428 19:32:31.719276 22857 net.cpp:382] mnist -> label
I0428 19:32:31.720367 22857 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:31.722836 22857 net.cpp:124] Setting up mnist
I0428 19:32:31.722853 22857 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:31.722859 22857 net.cpp:131] Top shape: 64 (64)
I0428 19:32:31.722864 22857 net.cpp:139] Memory required for data: 200960
I0428 19:32:31.722872 22857 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:31.722916 22857 net.cpp:86] Creating Layer conv0
I0428 19:32:31.722923 22857 net.cpp:408] conv0 <- data
I0428 19:32:31.722939 22857 net.cpp:382] conv0 -> conv0
I0428 19:32:32.010826 22857 net.cpp:124] Setting up conv0
I0428 19:32:32.010857 22857 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:32.010862 22857 net.cpp:139] Memory required for data: 1675520
I0428 19:32:32.010880 22857 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:32.010895 22857 net.cpp:86] Creating Layer pool0
I0428 19:32:32.010921 22857 net.cpp:408] pool0 <- conv0
I0428 19:32:32.010927 22857 net.cpp:382] pool0 -> pool0
I0428 19:32:32.010984 22857 net.cpp:124] Setting up pool0
I0428 19:32:32.010993 22857 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:32.010998 22857 net.cpp:139] Memory required for data: 2044160
I0428 19:32:32.011001 22857 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:32.011010 22857 net.cpp:86] Creating Layer ip1
I0428 19:32:32.011013 22857 net.cpp:408] ip1 <- pool0
I0428 19:32:32.011019 22857 net.cpp:382] ip1 -> ip1
I0428 19:32:32.012603 22857 net.cpp:124] Setting up ip1
I0428 19:32:32.012619 22857 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:32.012624 22857 net.cpp:139] Memory required for data: 2056960
I0428 19:32:32.012632 22857 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:32.012641 22857 net.cpp:86] Creating Layer relu1
I0428 19:32:32.012646 22857 net.cpp:408] relu1 <- ip1
I0428 19:32:32.012651 22857 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:32.012863 22857 net.cpp:124] Setting up relu1
I0428 19:32:32.012874 22857 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:32.012878 22857 net.cpp:139] Memory required for data: 2069760
I0428 19:32:32.012882 22857 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:32.012890 22857 net.cpp:86] Creating Layer ip2
I0428 19:32:32.012894 22857 net.cpp:408] ip2 <- ip1
I0428 19:32:32.012900 22857 net.cpp:382] ip2 -> ip2
I0428 19:32:32.014011 22857 net.cpp:124] Setting up ip2
I0428 19:32:32.014026 22857 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:32.014030 22857 net.cpp:139] Memory required for data: 2082560
I0428 19:32:32.014040 22857 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:32.014046 22857 net.cpp:86] Creating Layer relu2
I0428 19:32:32.014050 22857 net.cpp:408] relu2 <- ip2
I0428 19:32:32.014056 22857 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:32.014919 22857 net.cpp:124] Setting up relu2
I0428 19:32:32.014935 22857 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:32.014938 22857 net.cpp:139] Memory required for data: 2095360
I0428 19:32:32.014943 22857 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:32.014951 22857 net.cpp:86] Creating Layer ip3
I0428 19:32:32.014955 22857 net.cpp:408] ip3 <- ip2
I0428 19:32:32.014962 22857 net.cpp:382] ip3 -> ip3
I0428 19:32:32.015084 22857 net.cpp:124] Setting up ip3
I0428 19:32:32.015094 22857 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:32.015096 22857 net.cpp:139] Memory required for data: 2097920
I0428 19:32:32.015103 22857 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:32.015111 22857 net.cpp:86] Creating Layer relu3
I0428 19:32:32.015115 22857 net.cpp:408] relu3 <- ip3
I0428 19:32:32.015121 22857 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:32.015297 22857 net.cpp:124] Setting up relu3
I0428 19:32:32.015306 22857 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:32.015311 22857 net.cpp:139] Memory required for data: 2100480
I0428 19:32:32.015314 22857 layer_factory.hpp:77] Creating layer loss
I0428 19:32:32.015321 22857 net.cpp:86] Creating Layer loss
I0428 19:32:32.015326 22857 net.cpp:408] loss <- ip3
I0428 19:32:32.015331 22857 net.cpp:408] loss <- label
I0428 19:32:32.015336 22857 net.cpp:382] loss -> loss
I0428 19:32:32.015357 22857 layer_factory.hpp:77] Creating layer loss
I0428 19:32:32.015637 22857 net.cpp:124] Setting up loss
I0428 19:32:32.015647 22857 net.cpp:131] Top shape: (1)
I0428 19:32:32.015651 22857 net.cpp:134]     with loss weight 1
I0428 19:32:32.015667 22857 net.cpp:139] Memory required for data: 2100484
I0428 19:32:32.015671 22857 net.cpp:200] loss needs backward computation.
I0428 19:32:32.015677 22857 net.cpp:200] relu3 needs backward computation.
I0428 19:32:32.015681 22857 net.cpp:200] ip3 needs backward computation.
I0428 19:32:32.015684 22857 net.cpp:200] relu2 needs backward computation.
I0428 19:32:32.015687 22857 net.cpp:200] ip2 needs backward computation.
I0428 19:32:32.015691 22857 net.cpp:200] relu1 needs backward computation.
I0428 19:32:32.015693 22857 net.cpp:200] ip1 needs backward computation.
I0428 19:32:32.015709 22857 net.cpp:200] pool0 needs backward computation.
I0428 19:32:32.015713 22857 net.cpp:200] conv0 needs backward computation.
I0428 19:32:32.015718 22857 net.cpp:202] mnist does not need backward computation.
I0428 19:32:32.015722 22857 net.cpp:244] This network produces output loss
I0428 19:32:32.015732 22857 net.cpp:257] Network initialization done.
I0428 19:32:32.016062 22857 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test155.prototxt
I0428 19:32:32.016093 22857 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:32.016188 22857 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:32.016263 22857 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:32.016314 22857 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:32.016327 22857 net.cpp:86] Creating Layer mnist
I0428 19:32:32.016333 22857 net.cpp:382] mnist -> data
I0428 19:32:32.016342 22857 net.cpp:382] mnist -> label
I0428 19:32:32.016443 22857 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:32.017915 22857 net.cpp:124] Setting up mnist
I0428 19:32:32.017931 22857 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:32.017937 22857 net.cpp:131] Top shape: 100 (100)
I0428 19:32:32.017941 22857 net.cpp:139] Memory required for data: 314000
I0428 19:32:32.017946 22857 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:32.017958 22857 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:32.017962 22857 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:32.017968 22857 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:32.017976 22857 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:32.018030 22857 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:32.018036 22857 net.cpp:131] Top shape: 100 (100)
I0428 19:32:32.018040 22857 net.cpp:131] Top shape: 100 (100)
I0428 19:32:32.018044 22857 net.cpp:139] Memory required for data: 314800
I0428 19:32:32.018059 22857 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:32.018070 22857 net.cpp:86] Creating Layer conv0
I0428 19:32:32.018074 22857 net.cpp:408] conv0 <- data
I0428 19:32:32.018080 22857 net.cpp:382] conv0 -> conv0
I0428 19:32:32.019953 22857 net.cpp:124] Setting up conv0
I0428 19:32:32.019969 22857 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:32.019974 22857 net.cpp:139] Memory required for data: 2618800
I0428 19:32:32.019985 22857 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:32.019994 22857 net.cpp:86] Creating Layer pool0
I0428 19:32:32.019997 22857 net.cpp:408] pool0 <- conv0
I0428 19:32:32.020002 22857 net.cpp:382] pool0 -> pool0
I0428 19:32:32.020045 22857 net.cpp:124] Setting up pool0
I0428 19:32:32.020052 22857 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:32.020056 22857 net.cpp:139] Memory required for data: 3194800
I0428 19:32:32.020058 22857 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:32.020066 22857 net.cpp:86] Creating Layer ip1
I0428 19:32:32.020071 22857 net.cpp:408] ip1 <- pool0
I0428 19:32:32.020076 22857 net.cpp:382] ip1 -> ip1
I0428 19:32:32.020737 22857 net.cpp:124] Setting up ip1
I0428 19:32:32.020746 22857 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:32.020750 22857 net.cpp:139] Memory required for data: 3214800
I0428 19:32:32.020759 22857 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:32.020766 22857 net.cpp:86] Creating Layer relu1
I0428 19:32:32.020769 22857 net.cpp:408] relu1 <- ip1
I0428 19:32:32.020781 22857 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:32.020993 22857 net.cpp:124] Setting up relu1
I0428 19:32:32.021005 22857 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:32.021009 22857 net.cpp:139] Memory required for data: 3234800
I0428 19:32:32.021013 22857 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:32.021019 22857 net.cpp:86] Creating Layer ip2
I0428 19:32:32.021024 22857 net.cpp:408] ip2 <- ip1
I0428 19:32:32.021030 22857 net.cpp:382] ip2 -> ip2
I0428 19:32:32.021176 22857 net.cpp:124] Setting up ip2
I0428 19:32:32.021184 22857 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:32.021188 22857 net.cpp:139] Memory required for data: 3254800
I0428 19:32:32.021196 22857 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:32.021203 22857 net.cpp:86] Creating Layer relu2
I0428 19:32:32.021206 22857 net.cpp:408] relu2 <- ip2
I0428 19:32:32.021211 22857 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:32.022141 22857 net.cpp:124] Setting up relu2
I0428 19:32:32.022157 22857 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:32.022162 22857 net.cpp:139] Memory required for data: 3274800
I0428 19:32:32.022166 22857 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:32.022176 22857 net.cpp:86] Creating Layer ip3
I0428 19:32:32.022181 22857 net.cpp:408] ip3 <- ip2
I0428 19:32:32.022187 22857 net.cpp:382] ip3 -> ip3
I0428 19:32:32.022333 22857 net.cpp:124] Setting up ip3
I0428 19:32:32.022346 22857 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:32.022351 22857 net.cpp:139] Memory required for data: 3278800
I0428 19:32:32.022357 22857 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:32.022362 22857 net.cpp:86] Creating Layer relu3
I0428 19:32:32.022373 22857 net.cpp:408] relu3 <- ip3
I0428 19:32:32.022378 22857 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:32.022558 22857 net.cpp:124] Setting up relu3
I0428 19:32:32.022568 22857 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:32.022572 22857 net.cpp:139] Memory required for data: 3282800
I0428 19:32:32.022575 22857 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:32.022580 22857 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:32.022584 22857 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:32.022590 22857 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:32.022598 22857 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:32.022639 22857 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:32.022644 22857 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:32.022655 22857 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:32.022672 22857 net.cpp:139] Memory required for data: 3290800
I0428 19:32:32.022682 22857 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:32.022688 22857 net.cpp:86] Creating Layer accuracy
I0428 19:32:32.022693 22857 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:32.022698 22857 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:32.022711 22857 net.cpp:382] accuracy -> accuracy
I0428 19:32:32.022719 22857 net.cpp:124] Setting up accuracy
I0428 19:32:32.022725 22857 net.cpp:131] Top shape: (1)
I0428 19:32:32.022728 22857 net.cpp:139] Memory required for data: 3290804
I0428 19:32:32.022732 22857 layer_factory.hpp:77] Creating layer loss
I0428 19:32:32.022742 22857 net.cpp:86] Creating Layer loss
I0428 19:32:32.022747 22857 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:32.022752 22857 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:32.022763 22857 net.cpp:382] loss -> loss
I0428 19:32:32.022769 22857 layer_factory.hpp:77] Creating layer loss
I0428 19:32:32.023042 22857 net.cpp:124] Setting up loss
I0428 19:32:32.023053 22857 net.cpp:131] Top shape: (1)
I0428 19:32:32.023058 22857 net.cpp:134]     with loss weight 1
I0428 19:32:32.023066 22857 net.cpp:139] Memory required for data: 3290808
I0428 19:32:32.023071 22857 net.cpp:200] loss needs backward computation.
I0428 19:32:32.023074 22857 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:32.023079 22857 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:32.023083 22857 net.cpp:200] relu3 needs backward computation.
I0428 19:32:32.023087 22857 net.cpp:200] ip3 needs backward computation.
I0428 19:32:32.023097 22857 net.cpp:200] relu2 needs backward computation.
I0428 19:32:32.023100 22857 net.cpp:200] ip2 needs backward computation.
I0428 19:32:32.023109 22857 net.cpp:200] relu1 needs backward computation.
I0428 19:32:32.023113 22857 net.cpp:200] ip1 needs backward computation.
I0428 19:32:32.023116 22857 net.cpp:200] pool0 needs backward computation.
I0428 19:32:32.023120 22857 net.cpp:200] conv0 needs backward computation.
I0428 19:32:32.023124 22857 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:32.023129 22857 net.cpp:202] mnist does not need backward computation.
I0428 19:32:32.023133 22857 net.cpp:244] This network produces output accuracy
I0428 19:32:32.023138 22857 net.cpp:244] This network produces output loss
I0428 19:32:32.023149 22857 net.cpp:257] Network initialization done.
I0428 19:32:32.023192 22857 solver.cpp:56] Solver scaffolding done.
I0428 19:32:32.023555 22857 caffe.cpp:248] Starting Optimization
I0428 19:32:32.023561 22857 solver.cpp:273] Solving LeNet
I0428 19:32:32.023566 22857 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:32.025182 22857 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:32.029685 22857 blocking_queue.cpp:49] Waiting for data
I0428 19:32:32.096078 22864 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:32.096632 22857 solver.cpp:398]     Test net output #0: accuracy = 0.0932
I0428 19:32:32.096653 22857 solver.cpp:398]     Test net output #1: loss = 2.31154 (* 1 = 2.31154 loss)
I0428 19:32:32.099159 22857 solver.cpp:219] Iteration 0 (-1.21754e-31 iter/s, 0.0755538s/100 iters), loss = 2.31407
I0428 19:32:32.099190 22857 solver.cpp:238]     Train net output #0: loss = 2.31407 (* 1 = 2.31407 loss)
I0428 19:32:32.099205 22857 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:32.177353 22857 solver.cpp:219] Iteration 100 (1279.52 iter/s, 0.0781545s/100 iters), loss = 1.18373
I0428 19:32:32.177382 22857 solver.cpp:238]     Train net output #0: loss = 1.18373 (* 1 = 1.18373 loss)
I0428 19:32:32.177389 22857 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:32.252112 22857 solver.cpp:219] Iteration 200 (1338.4 iter/s, 0.0747162s/100 iters), loss = 0.922479
I0428 19:32:32.252174 22857 solver.cpp:238]     Train net output #0: loss = 0.922479 (* 1 = 0.922479 loss)
I0428 19:32:32.252190 22857 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:32.336930 22857 solver.cpp:219] Iteration 300 (1179.79 iter/s, 0.0847606s/100 iters), loss = 1.41854
I0428 19:32:32.336961 22857 solver.cpp:238]     Train net output #0: loss = 1.41854 (* 1 = 1.41854 loss)
I0428 19:32:32.336980 22857 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:32.413055 22857 solver.cpp:219] Iteration 400 (1314.32 iter/s, 0.0760853s/100 iters), loss = 1.25703
I0428 19:32:32.413084 22857 solver.cpp:238]     Train net output #0: loss = 1.25703 (* 1 = 1.25703 loss)
I0428 19:32:32.413092 22857 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:32.488715 22857 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:32.537319 22864 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:32.538072 22857 solver.cpp:398]     Test net output #0: accuracy = 0.5802
I0428 19:32:32.538106 22857 solver.cpp:398]     Test net output #1: loss = 1.07264 (* 1 = 1.07264 loss)
I0428 19:32:32.538969 22857 solver.cpp:219] Iteration 500 (794.457 iter/s, 0.125872s/100 iters), loss = 1.17887
I0428 19:32:32.539007 22857 solver.cpp:238]     Train net output #0: loss = 1.17887 (* 1 = 1.17887 loss)
I0428 19:32:32.539014 22857 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:32.617805 22857 solver.cpp:219] Iteration 600 (1269.04 iter/s, 0.0787999s/100 iters), loss = 0.793606
I0428 19:32:32.617831 22857 solver.cpp:238]     Train net output #0: loss = 0.793606 (* 1 = 0.793606 loss)
I0428 19:32:32.617839 22857 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:32.693522 22857 solver.cpp:219] Iteration 700 (1321.32 iter/s, 0.0756818s/100 iters), loss = 0.99347
I0428 19:32:32.693550 22857 solver.cpp:238]     Train net output #0: loss = 0.99347 (* 1 = 0.99347 loss)
I0428 19:32:32.693560 22857 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:32.769057 22857 solver.cpp:219] Iteration 800 (1324.55 iter/s, 0.0754974s/100 iters), loss = 0.964693
I0428 19:32:32.769084 22857 solver.cpp:238]     Train net output #0: loss = 0.964693 (* 1 = 0.964693 loss)
I0428 19:32:32.769091 22857 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:32.844616 22857 solver.cpp:219] Iteration 900 (1324.12 iter/s, 0.0755221s/100 iters), loss = 0.890377
I0428 19:32:32.844643 22857 solver.cpp:238]     Train net output #0: loss = 0.890377 (* 1 = 0.890377 loss)
I0428 19:32:32.844651 22857 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:32.869771 22863 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:32.919021 22857 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:32.920620 22857 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:32.921787 22857 solver.cpp:311] Iteration 1000, loss = 0.895575
I0428 19:32:32.921805 22857 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:32.996289 22864 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:32.996820 22857 solver.cpp:398]     Test net output #0: accuracy = 0.6805
I0428 19:32:32.996841 22857 solver.cpp:398]     Test net output #1: loss = 0.82197 (* 1 = 0.82197 loss)
I0428 19:32:32.996847 22857 solver.cpp:316] Optimization Done.
I0428 19:32:32.996850 22857 caffe.cpp:259] Optimization Done.
