I0428 19:55:50.722705 28286 caffe.cpp:218] Using GPUs 0
I0428 19:55:50.752583 28286 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:51.200631 28286 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test741.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:51.200769 28286 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test741.prototxt
I0428 19:55:51.201138 28286 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:51.201166 28286 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:51.201273 28286 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:55:51.201328 28286 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:51.201407 28286 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:51.201426 28286 net.cpp:86] Creating Layer mnist
I0428 19:55:51.201432 28286 net.cpp:382] mnist -> data
I0428 19:55:51.201452 28286 net.cpp:382] mnist -> label
I0428 19:55:51.202503 28286 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:51.204722 28286 net.cpp:124] Setting up mnist
I0428 19:55:51.204754 28286 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:51.204759 28286 net.cpp:131] Top shape: 64 (64)
I0428 19:55:51.204762 28286 net.cpp:139] Memory required for data: 200960
I0428 19:55:51.204769 28286 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:51.204782 28286 net.cpp:86] Creating Layer conv0
I0428 19:55:51.204787 28286 net.cpp:408] conv0 <- data
I0428 19:55:51.204797 28286 net.cpp:382] conv0 -> conv0
I0428 19:55:51.437986 28286 net.cpp:124] Setting up conv0
I0428 19:55:51.438011 28286 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:55:51.438015 28286 net.cpp:139] Memory required for data: 1675520
I0428 19:55:51.438030 28286 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:51.438041 28286 net.cpp:86] Creating Layer pool0
I0428 19:55:51.438045 28286 net.cpp:408] pool0 <- conv0
I0428 19:55:51.438050 28286 net.cpp:382] pool0 -> pool0
I0428 19:55:51.438110 28286 net.cpp:124] Setting up pool0
I0428 19:55:51.438115 28286 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:55:51.438133 28286 net.cpp:139] Memory required for data: 2044160
I0428 19:55:51.438136 28286 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:51.438148 28286 net.cpp:86] Creating Layer conv1
I0428 19:55:51.438150 28286 net.cpp:408] conv1 <- pool0
I0428 19:55:51.438154 28286 net.cpp:382] conv1 -> conv1
I0428 19:55:51.440059 28286 net.cpp:124] Setting up conv1
I0428 19:55:51.440089 28286 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:55:51.440093 28286 net.cpp:139] Memory required for data: 2076928
I0428 19:55:51.440102 28286 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:51.440111 28286 net.cpp:86] Creating Layer pool1
I0428 19:55:51.440114 28286 net.cpp:408] pool1 <- conv1
I0428 19:55:51.440119 28286 net.cpp:382] pool1 -> pool1
I0428 19:55:51.440157 28286 net.cpp:124] Setting up pool1
I0428 19:55:51.440163 28286 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:55:51.440166 28286 net.cpp:139] Memory required for data: 2085120
I0428 19:55:51.440170 28286 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:51.440182 28286 net.cpp:86] Creating Layer ip1
I0428 19:55:51.440186 28286 net.cpp:408] ip1 <- pool1
I0428 19:55:51.440191 28286 net.cpp:382] ip1 -> ip1
I0428 19:55:51.440300 28286 net.cpp:124] Setting up ip1
I0428 19:55:51.440307 28286 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:51.440311 28286 net.cpp:139] Memory required for data: 2087680
I0428 19:55:51.440317 28286 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:51.440323 28286 net.cpp:86] Creating Layer relu1
I0428 19:55:51.440326 28286 net.cpp:408] relu1 <- ip1
I0428 19:55:51.440330 28286 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:51.440495 28286 net.cpp:124] Setting up relu1
I0428 19:55:51.440505 28286 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:51.440507 28286 net.cpp:139] Memory required for data: 2090240
I0428 19:55:51.440510 28286 layer_factory.hpp:77] Creating layer loss
I0428 19:55:51.440516 28286 net.cpp:86] Creating Layer loss
I0428 19:55:51.440520 28286 net.cpp:408] loss <- ip1
I0428 19:55:51.440523 28286 net.cpp:408] loss <- label
I0428 19:55:51.440527 28286 net.cpp:382] loss -> loss
I0428 19:55:51.440541 28286 layer_factory.hpp:77] Creating layer loss
I0428 19:55:51.441329 28286 net.cpp:124] Setting up loss
I0428 19:55:51.441340 28286 net.cpp:131] Top shape: (1)
I0428 19:55:51.441360 28286 net.cpp:134]     with loss weight 1
I0428 19:55:51.441375 28286 net.cpp:139] Memory required for data: 2090244
I0428 19:55:51.441378 28286 net.cpp:200] loss needs backward computation.
I0428 19:55:51.441382 28286 net.cpp:200] relu1 needs backward computation.
I0428 19:55:51.441385 28286 net.cpp:200] ip1 needs backward computation.
I0428 19:55:51.441388 28286 net.cpp:200] pool1 needs backward computation.
I0428 19:55:51.441391 28286 net.cpp:200] conv1 needs backward computation.
I0428 19:55:51.441393 28286 net.cpp:200] pool0 needs backward computation.
I0428 19:55:51.441396 28286 net.cpp:200] conv0 needs backward computation.
I0428 19:55:51.441401 28286 net.cpp:202] mnist does not need backward computation.
I0428 19:55:51.441402 28286 net.cpp:244] This network produces output loss
I0428 19:55:51.441411 28286 net.cpp:257] Network initialization done.
I0428 19:55:51.441663 28286 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test741.prototxt
I0428 19:55:51.441686 28286 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:51.441772 28286 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:55:51.441838 28286 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:51.441880 28286 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:51.441892 28286 net.cpp:86] Creating Layer mnist
I0428 19:55:51.441896 28286 net.cpp:382] mnist -> data
I0428 19:55:51.441905 28286 net.cpp:382] mnist -> label
I0428 19:55:51.441982 28286 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:51.443979 28286 net.cpp:124] Setting up mnist
I0428 19:55:51.444023 28286 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:51.444028 28286 net.cpp:131] Top shape: 100 (100)
I0428 19:55:51.444047 28286 net.cpp:139] Memory required for data: 314000
I0428 19:55:51.444051 28286 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:51.444057 28286 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:51.444061 28286 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:51.444067 28286 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:51.444073 28286 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:51.444116 28286 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:51.444123 28286 net.cpp:131] Top shape: 100 (100)
I0428 19:55:51.444126 28286 net.cpp:131] Top shape: 100 (100)
I0428 19:55:51.444129 28286 net.cpp:139] Memory required for data: 314800
I0428 19:55:51.444133 28286 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:51.444140 28286 net.cpp:86] Creating Layer conv0
I0428 19:55:51.444144 28286 net.cpp:408] conv0 <- data
I0428 19:55:51.444149 28286 net.cpp:382] conv0 -> conv0
I0428 19:55:51.445149 28286 net.cpp:124] Setting up conv0
I0428 19:55:51.445176 28286 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:55:51.445195 28286 net.cpp:139] Memory required for data: 2618800
I0428 19:55:51.445204 28286 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:51.445210 28286 net.cpp:86] Creating Layer pool0
I0428 19:55:51.445214 28286 net.cpp:408] pool0 <- conv0
I0428 19:55:51.445219 28286 net.cpp:382] pool0 -> pool0
I0428 19:55:51.445268 28286 net.cpp:124] Setting up pool0
I0428 19:55:51.445288 28286 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:55:51.445291 28286 net.cpp:139] Memory required for data: 3194800
I0428 19:55:51.445294 28286 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:51.445302 28286 net.cpp:86] Creating Layer conv1
I0428 19:55:51.445305 28286 net.cpp:408] conv1 <- pool0
I0428 19:55:51.445310 28286 net.cpp:382] conv1 -> conv1
I0428 19:55:51.447424 28286 net.cpp:124] Setting up conv1
I0428 19:55:51.447451 28286 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:55:51.447471 28286 net.cpp:139] Memory required for data: 3246000
I0428 19:55:51.447479 28286 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:51.447485 28286 net.cpp:86] Creating Layer pool1
I0428 19:55:51.447499 28286 net.cpp:408] pool1 <- conv1
I0428 19:55:51.447520 28286 net.cpp:382] pool1 -> pool1
I0428 19:55:51.447559 28286 net.cpp:124] Setting up pool1
I0428 19:55:51.447566 28286 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:55:51.447568 28286 net.cpp:139] Memory required for data: 3258800
I0428 19:55:51.447572 28286 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:51.447578 28286 net.cpp:86] Creating Layer ip1
I0428 19:55:51.447582 28286 net.cpp:408] ip1 <- pool1
I0428 19:55:51.447587 28286 net.cpp:382] ip1 -> ip1
I0428 19:55:51.447695 28286 net.cpp:124] Setting up ip1
I0428 19:55:51.447703 28286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:51.447706 28286 net.cpp:139] Memory required for data: 3262800
I0428 19:55:51.447713 28286 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:51.447717 28286 net.cpp:86] Creating Layer relu1
I0428 19:55:51.447721 28286 net.cpp:408] relu1 <- ip1
I0428 19:55:51.447726 28286 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:51.448580 28286 net.cpp:124] Setting up relu1
I0428 19:55:51.448592 28286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:51.448611 28286 net.cpp:139] Memory required for data: 3266800
I0428 19:55:51.448616 28286 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:55:51.448622 28286 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:55:51.448627 28286 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:55:51.448632 28286 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:55:51.448639 28286 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:55:51.448678 28286 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:55:51.448683 28286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:51.448686 28286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:51.448689 28286 net.cpp:139] Memory required for data: 3274800
I0428 19:55:51.448693 28286 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:51.448698 28286 net.cpp:86] Creating Layer accuracy
I0428 19:55:51.448719 28286 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:55:51.448724 28286 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:51.448732 28286 net.cpp:382] accuracy -> accuracy
I0428 19:55:51.448740 28286 net.cpp:124] Setting up accuracy
I0428 19:55:51.448745 28286 net.cpp:131] Top shape: (1)
I0428 19:55:51.448748 28286 net.cpp:139] Memory required for data: 3274804
I0428 19:55:51.448751 28286 layer_factory.hpp:77] Creating layer loss
I0428 19:55:51.448756 28286 net.cpp:86] Creating Layer loss
I0428 19:55:51.448760 28286 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:55:51.448763 28286 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:51.448767 28286 net.cpp:382] loss -> loss
I0428 19:55:51.448774 28286 layer_factory.hpp:77] Creating layer loss
I0428 19:55:51.449076 28286 net.cpp:124] Setting up loss
I0428 19:55:51.449086 28286 net.cpp:131] Top shape: (1)
I0428 19:55:51.449091 28286 net.cpp:134]     with loss weight 1
I0428 19:55:51.449097 28286 net.cpp:139] Memory required for data: 3274808
I0428 19:55:51.449101 28286 net.cpp:200] loss needs backward computation.
I0428 19:55:51.449105 28286 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:51.449132 28286 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:55:51.449136 28286 net.cpp:200] relu1 needs backward computation.
I0428 19:55:51.449138 28286 net.cpp:200] ip1 needs backward computation.
I0428 19:55:51.449142 28286 net.cpp:200] pool1 needs backward computation.
I0428 19:55:51.449146 28286 net.cpp:200] conv1 needs backward computation.
I0428 19:55:51.449148 28286 net.cpp:200] pool0 needs backward computation.
I0428 19:55:51.449151 28286 net.cpp:200] conv0 needs backward computation.
I0428 19:55:51.449156 28286 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:51.449160 28286 net.cpp:202] mnist does not need backward computation.
I0428 19:55:51.449167 28286 net.cpp:244] This network produces output accuracy
I0428 19:55:51.449170 28286 net.cpp:244] This network produces output loss
I0428 19:55:51.449192 28286 net.cpp:257] Network initialization done.
I0428 19:55:51.449254 28286 solver.cpp:56] Solver scaffolding done.
I0428 19:55:51.449461 28286 caffe.cpp:248] Starting Optimization
I0428 19:55:51.449468 28286 solver.cpp:273] Solving LeNet
I0428 19:55:51.449470 28286 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:51.450249 28286 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:51.453196 28286 blocking_queue.cpp:49] Waiting for data
I0428 19:55:51.525761 28293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:51.526269 28286 solver.cpp:398]     Test net output #0: accuracy = 0.1278
I0428 19:55:51.526304 28286 solver.cpp:398]     Test net output #1: loss = 2.31863 (* 1 = 2.31863 loss)
I0428 19:55:51.528636 28286 solver.cpp:219] Iteration 0 (0 iter/s, 0.079139s/100 iters), loss = 2.34268
I0428 19:55:51.528686 28286 solver.cpp:238]     Train net output #0: loss = 2.34268 (* 1 = 2.34268 loss)
I0428 19:55:51.528713 28286 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:51.602560 28286 solver.cpp:219] Iteration 100 (1353.81 iter/s, 0.0738656s/100 iters), loss = 0.525543
I0428 19:55:51.602586 28286 solver.cpp:238]     Train net output #0: loss = 0.525543 (* 1 = 0.525543 loss)
I0428 19:55:51.602592 28286 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:51.667678 28286 solver.cpp:219] Iteration 200 (1536.47 iter/s, 0.0650844s/100 iters), loss = 0.374943
I0428 19:55:51.667702 28286 solver.cpp:238]     Train net output #0: loss = 0.374943 (* 1 = 0.374943 loss)
I0428 19:55:51.667724 28286 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:51.725405 28286 solver.cpp:219] Iteration 300 (1733.25 iter/s, 0.0576952s/100 iters), loss = 0.360459
I0428 19:55:51.725428 28286 solver.cpp:238]     Train net output #0: loss = 0.360459 (* 1 = 0.360459 loss)
I0428 19:55:51.725450 28286 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:51.783978 28286 solver.cpp:219] Iteration 400 (1708.17 iter/s, 0.0585421s/100 iters), loss = 0.260146
I0428 19:55:51.784001 28286 solver.cpp:238]     Train net output #0: loss = 0.260146 (* 1 = 0.260146 loss)
I0428 19:55:51.784024 28286 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:51.841634 28286 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:51.917356 28293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:51.917872 28286 solver.cpp:398]     Test net output #0: accuracy = 0.929
I0428 19:55:51.917899 28286 solver.cpp:398]     Test net output #1: loss = 0.239552 (* 1 = 0.239552 loss)
I0428 19:55:51.918623 28286 solver.cpp:219] Iteration 500 (742.894 iter/s, 0.134609s/100 iters), loss = 0.28388
I0428 19:55:51.918654 28286 solver.cpp:238]     Train net output #0: loss = 0.28388 (* 1 = 0.28388 loss)
I0428 19:55:51.918663 28286 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:51.986582 28286 solver.cpp:219] Iteration 600 (1472.34 iter/s, 0.0679189s/100 iters), loss = 0.250796
I0428 19:55:51.986610 28286 solver.cpp:238]     Train net output #0: loss = 0.250796 (* 1 = 0.250796 loss)
I0428 19:55:51.986618 28286 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:52.048270 28286 solver.cpp:219] Iteration 700 (1621.99 iter/s, 0.0616528s/100 iters), loss = 0.218112
I0428 19:55:52.048295 28286 solver.cpp:238]     Train net output #0: loss = 0.218112 (* 1 = 0.218112 loss)
I0428 19:55:52.048300 28286 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:52.106534 28286 solver.cpp:219] Iteration 800 (1717.3 iter/s, 0.0582309s/100 iters), loss = 0.414619
I0428 19:55:52.106556 28286 solver.cpp:238]     Train net output #0: loss = 0.414619 (* 1 = 0.414619 loss)
I0428 19:55:52.106562 28286 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:52.167127 28286 solver.cpp:219] Iteration 900 (1651.21 iter/s, 0.0605615s/100 iters), loss = 0.403086
I0428 19:55:52.167151 28286 solver.cpp:238]     Train net output #0: loss = 0.403086 (* 1 = 0.403086 loss)
I0428 19:55:52.167157 28286 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:52.192958 28292 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:52.239413 28286 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:52.240039 28286 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:52.240463 28286 solver.cpp:311] Iteration 1000, loss = 0.242447
I0428 19:55:52.240478 28286 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:52.316483 28293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:52.316946 28286 solver.cpp:398]     Test net output #0: accuracy = 0.9475
I0428 19:55:52.316964 28286 solver.cpp:398]     Test net output #1: loss = 0.174583 (* 1 = 0.174583 loss)
I0428 19:55:52.316968 28286 solver.cpp:316] Optimization Done.
I0428 19:55:52.316972 28286 caffe.cpp:259] Optimization Done.
