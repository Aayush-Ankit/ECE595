I0428 19:33:43.731851 23168 caffe.cpp:218] Using GPUs 0
I0428 19:33:43.772224 23168 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:44.218083 23168 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test187.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:44.218253 23168 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test187.prototxt
I0428 19:33:44.218542 23168 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:44.218561 23168 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:44.218636 23168 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:44.218721 23168 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:44.218830 23168 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:44.218857 23168 net.cpp:86] Creating Layer mnist
I0428 19:33:44.218868 23168 net.cpp:382] mnist -> data
I0428 19:33:44.218891 23168 net.cpp:382] mnist -> label
I0428 19:33:44.219986 23168 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:44.222195 23168 net.cpp:124] Setting up mnist
I0428 19:33:44.222226 23168 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:44.222234 23168 net.cpp:131] Top shape: 64 (64)
I0428 19:33:44.222239 23168 net.cpp:139] Memory required for data: 200960
I0428 19:33:44.222264 23168 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:44.222283 23168 net.cpp:86] Creating Layer conv0
I0428 19:33:44.222293 23168 net.cpp:408] conv0 <- data
I0428 19:33:44.222309 23168 net.cpp:382] conv0 -> conv0
I0428 19:33:44.448412 23168 net.cpp:124] Setting up conv0
I0428 19:33:44.448441 23168 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:44.448446 23168 net.cpp:139] Memory required for data: 3887360
I0428 19:33:44.448482 23168 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:44.448498 23168 net.cpp:86] Creating Layer pool0
I0428 19:33:44.448523 23168 net.cpp:408] pool0 <- conv0
I0428 19:33:44.448534 23168 net.cpp:382] pool0 -> pool0
I0428 19:33:44.448598 23168 net.cpp:124] Setting up pool0
I0428 19:33:44.448607 23168 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:44.448611 23168 net.cpp:139] Memory required for data: 4808960
I0428 19:33:44.448616 23168 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:44.448626 23168 net.cpp:86] Creating Layer ip1
I0428 19:33:44.448635 23168 net.cpp:408] ip1 <- pool0
I0428 19:33:44.448643 23168 net.cpp:382] ip1 -> ip1
I0428 19:33:44.450562 23168 net.cpp:124] Setting up ip1
I0428 19:33:44.450577 23168 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:44.450582 23168 net.cpp:139] Memory required for data: 4821760
I0428 19:33:44.450594 23168 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:44.450604 23168 net.cpp:86] Creating Layer relu1
I0428 19:33:44.450610 23168 net.cpp:408] relu1 <- ip1
I0428 19:33:44.450618 23168 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:44.450803 23168 net.cpp:124] Setting up relu1
I0428 19:33:44.450814 23168 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:44.450817 23168 net.cpp:139] Memory required for data: 4834560
I0428 19:33:44.450822 23168 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:44.450832 23168 net.cpp:86] Creating Layer ip2
I0428 19:33:44.450839 23168 net.cpp:408] ip2 <- ip1
I0428 19:33:44.450845 23168 net.cpp:382] ip2 -> ip2
I0428 19:33:44.450942 23168 net.cpp:124] Setting up ip2
I0428 19:33:44.450951 23168 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:44.450956 23168 net.cpp:139] Memory required for data: 4837120
I0428 19:33:44.450968 23168 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:44.450978 23168 net.cpp:86] Creating Layer relu2
I0428 19:33:44.450986 23168 net.cpp:408] relu2 <- ip2
I0428 19:33:44.450994 23168 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:44.451712 23168 net.cpp:124] Setting up relu2
I0428 19:33:44.451726 23168 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:44.451732 23168 net.cpp:139] Memory required for data: 4839680
I0428 19:33:44.451737 23168 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:44.451748 23168 net.cpp:86] Creating Layer ip3
I0428 19:33:44.451755 23168 net.cpp:408] ip3 <- ip2
I0428 19:33:44.451763 23168 net.cpp:382] ip3 -> ip3
I0428 19:33:44.451889 23168 net.cpp:124] Setting up ip3
I0428 19:33:44.451898 23168 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:44.451903 23168 net.cpp:139] Memory required for data: 4842240
I0428 19:33:44.451911 23168 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:44.451920 23168 net.cpp:86] Creating Layer relu3
I0428 19:33:44.451926 23168 net.cpp:408] relu3 <- ip3
I0428 19:33:44.451933 23168 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:44.452076 23168 net.cpp:124] Setting up relu3
I0428 19:33:44.452086 23168 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:44.452091 23168 net.cpp:139] Memory required for data: 4844800
I0428 19:33:44.452096 23168 layer_factory.hpp:77] Creating layer loss
I0428 19:33:44.452105 23168 net.cpp:86] Creating Layer loss
I0428 19:33:44.452109 23168 net.cpp:408] loss <- ip3
I0428 19:33:44.452116 23168 net.cpp:408] loss <- label
I0428 19:33:44.452123 23168 net.cpp:382] loss -> loss
I0428 19:33:44.452155 23168 layer_factory.hpp:77] Creating layer loss
I0428 19:33:44.452385 23168 net.cpp:124] Setting up loss
I0428 19:33:44.452395 23168 net.cpp:131] Top shape: (1)
I0428 19:33:44.452399 23168 net.cpp:134]     with loss weight 1
I0428 19:33:44.452419 23168 net.cpp:139] Memory required for data: 4844804
I0428 19:33:44.452440 23168 net.cpp:200] loss needs backward computation.
I0428 19:33:44.452446 23168 net.cpp:200] relu3 needs backward computation.
I0428 19:33:44.452451 23168 net.cpp:200] ip3 needs backward computation.
I0428 19:33:44.452456 23168 net.cpp:200] relu2 needs backward computation.
I0428 19:33:44.452461 23168 net.cpp:200] ip2 needs backward computation.
I0428 19:33:44.452466 23168 net.cpp:200] relu1 needs backward computation.
I0428 19:33:44.452471 23168 net.cpp:200] ip1 needs backward computation.
I0428 19:33:44.452487 23168 net.cpp:200] pool0 needs backward computation.
I0428 19:33:44.452493 23168 net.cpp:200] conv0 needs backward computation.
I0428 19:33:44.452498 23168 net.cpp:202] mnist does not need backward computation.
I0428 19:33:44.452503 23168 net.cpp:244] This network produces output loss
I0428 19:33:44.452527 23168 net.cpp:257] Network initialization done.
I0428 19:33:44.452833 23168 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test187.prototxt
I0428 19:33:44.452883 23168 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:44.453002 23168 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:44.453099 23168 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:44.453176 23168 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:44.453192 23168 net.cpp:86] Creating Layer mnist
I0428 19:33:44.453214 23168 net.cpp:382] mnist -> data
I0428 19:33:44.453239 23168 net.cpp:382] mnist -> label
I0428 19:33:44.453349 23168 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:44.454474 23168 net.cpp:124] Setting up mnist
I0428 19:33:44.454504 23168 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:44.454512 23168 net.cpp:131] Top shape: 100 (100)
I0428 19:33:44.454516 23168 net.cpp:139] Memory required for data: 314000
I0428 19:33:44.454522 23168 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:44.454531 23168 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:44.454537 23168 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:44.454545 23168 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:44.454555 23168 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:44.454648 23168 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:44.454656 23168 net.cpp:131] Top shape: 100 (100)
I0428 19:33:44.454663 23168 net.cpp:131] Top shape: 100 (100)
I0428 19:33:44.454666 23168 net.cpp:139] Memory required for data: 314800
I0428 19:33:44.454684 23168 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:44.454696 23168 net.cpp:86] Creating Layer conv0
I0428 19:33:44.454704 23168 net.cpp:408] conv0 <- data
I0428 19:33:44.454711 23168 net.cpp:382] conv0 -> conv0
I0428 19:33:44.456296 23168 net.cpp:124] Setting up conv0
I0428 19:33:44.456311 23168 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:44.456317 23168 net.cpp:139] Memory required for data: 6074800
I0428 19:33:44.456331 23168 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:44.456342 23168 net.cpp:86] Creating Layer pool0
I0428 19:33:44.456347 23168 net.cpp:408] pool0 <- conv0
I0428 19:33:44.456356 23168 net.cpp:382] pool0 -> pool0
I0428 19:33:44.456398 23168 net.cpp:124] Setting up pool0
I0428 19:33:44.456406 23168 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:44.456411 23168 net.cpp:139] Memory required for data: 7514800
I0428 19:33:44.456415 23168 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:44.456430 23168 net.cpp:86] Creating Layer ip1
I0428 19:33:44.456436 23168 net.cpp:408] ip1 <- pool0
I0428 19:33:44.456445 23168 net.cpp:382] ip1 -> ip1
I0428 19:33:44.458552 23168 net.cpp:124] Setting up ip1
I0428 19:33:44.458565 23168 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:44.458571 23168 net.cpp:139] Memory required for data: 7534800
I0428 19:33:44.458585 23168 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:44.458593 23168 net.cpp:86] Creating Layer relu1
I0428 19:33:44.458600 23168 net.cpp:408] relu1 <- ip1
I0428 19:33:44.458608 23168 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:44.458791 23168 net.cpp:124] Setting up relu1
I0428 19:33:44.458802 23168 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:44.458807 23168 net.cpp:139] Memory required for data: 7554800
I0428 19:33:44.458812 23168 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:44.458822 23168 net.cpp:86] Creating Layer ip2
I0428 19:33:44.458827 23168 net.cpp:408] ip2 <- ip1
I0428 19:33:44.458837 23168 net.cpp:382] ip2 -> ip2
I0428 19:33:44.458987 23168 net.cpp:124] Setting up ip2
I0428 19:33:44.458997 23168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:44.459002 23168 net.cpp:139] Memory required for data: 7558800
I0428 19:33:44.459014 23168 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:44.459028 23168 net.cpp:86] Creating Layer relu2
I0428 19:33:44.459034 23168 net.cpp:408] relu2 <- ip2
I0428 19:33:44.459044 23168 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:44.459970 23168 net.cpp:124] Setting up relu2
I0428 19:33:44.459983 23168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:44.459988 23168 net.cpp:139] Memory required for data: 7562800
I0428 19:33:44.459993 23168 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:44.460005 23168 net.cpp:86] Creating Layer ip3
I0428 19:33:44.460009 23168 net.cpp:408] ip3 <- ip2
I0428 19:33:44.460021 23168 net.cpp:382] ip3 -> ip3
I0428 19:33:44.460122 23168 net.cpp:124] Setting up ip3
I0428 19:33:44.460131 23168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:44.460136 23168 net.cpp:139] Memory required for data: 7566800
I0428 19:33:44.460145 23168 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:44.460152 23168 net.cpp:86] Creating Layer relu3
I0428 19:33:44.460157 23168 net.cpp:408] relu3 <- ip3
I0428 19:33:44.460166 23168 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:44.460363 23168 net.cpp:124] Setting up relu3
I0428 19:33:44.460374 23168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:44.460379 23168 net.cpp:139] Memory required for data: 7570800
I0428 19:33:44.460384 23168 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:44.460393 23168 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:44.460398 23168 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:44.460408 23168 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:44.460418 23168 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:44.460461 23168 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:44.460470 23168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:44.460477 23168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:44.460494 23168 net.cpp:139] Memory required for data: 7578800
I0428 19:33:44.460500 23168 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:44.460508 23168 net.cpp:86] Creating Layer accuracy
I0428 19:33:44.460513 23168 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:44.460520 23168 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:44.460530 23168 net.cpp:382] accuracy -> accuracy
I0428 19:33:44.460541 23168 net.cpp:124] Setting up accuracy
I0428 19:33:44.460549 23168 net.cpp:131] Top shape: (1)
I0428 19:33:44.460568 23168 net.cpp:139] Memory required for data: 7578804
I0428 19:33:44.460573 23168 layer_factory.hpp:77] Creating layer loss
I0428 19:33:44.460583 23168 net.cpp:86] Creating Layer loss
I0428 19:33:44.460588 23168 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:44.460595 23168 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:44.460603 23168 net.cpp:382] loss -> loss
I0428 19:33:44.460613 23168 layer_factory.hpp:77] Creating layer loss
I0428 19:33:44.460909 23168 net.cpp:124] Setting up loss
I0428 19:33:44.460921 23168 net.cpp:131] Top shape: (1)
I0428 19:33:44.460927 23168 net.cpp:134]     with loss weight 1
I0428 19:33:44.460935 23168 net.cpp:139] Memory required for data: 7578808
I0428 19:33:44.460942 23168 net.cpp:200] loss needs backward computation.
I0428 19:33:44.460947 23168 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:44.460953 23168 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:44.460958 23168 net.cpp:200] relu3 needs backward computation.
I0428 19:33:44.460973 23168 net.cpp:200] ip3 needs backward computation.
I0428 19:33:44.460991 23168 net.cpp:200] relu2 needs backward computation.
I0428 19:33:44.460995 23168 net.cpp:200] ip2 needs backward computation.
I0428 19:33:44.461000 23168 net.cpp:200] relu1 needs backward computation.
I0428 19:33:44.461005 23168 net.cpp:200] ip1 needs backward computation.
I0428 19:33:44.461010 23168 net.cpp:200] pool0 needs backward computation.
I0428 19:33:44.461015 23168 net.cpp:200] conv0 needs backward computation.
I0428 19:33:44.461022 23168 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:44.461028 23168 net.cpp:202] mnist does not need backward computation.
I0428 19:33:44.461033 23168 net.cpp:244] This network produces output accuracy
I0428 19:33:44.461038 23168 net.cpp:244] This network produces output loss
I0428 19:33:44.461055 23168 net.cpp:257] Network initialization done.
I0428 19:33:44.461097 23168 solver.cpp:56] Solver scaffolding done.
I0428 19:33:44.461418 23168 caffe.cpp:248] Starting Optimization
I0428 19:33:44.461426 23168 solver.cpp:273] Solving LeNet
I0428 19:33:44.461429 23168 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:44.462191 23168 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:44.540387 23175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:44.542634 23168 solver.cpp:398]     Test net output #0: accuracy = 0.1037
I0428 19:33:44.542685 23168 solver.cpp:398]     Test net output #1: loss = 2.30395 (* 1 = 2.30395 loss)
I0428 19:33:44.547929 23168 solver.cpp:219] Iteration 0 (-6.4576e-31 iter/s, 0.0864615s/100 iters), loss = 2.31315
I0428 19:33:44.547984 23168 solver.cpp:238]     Train net output #0: loss = 2.31315 (* 1 = 2.31315 loss)
I0428 19:33:44.548004 23168 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:44.660905 23168 solver.cpp:219] Iteration 100 (885.594 iter/s, 0.112919s/100 iters), loss = 1.10168
I0428 19:33:44.660951 23168 solver.cpp:238]     Train net output #0: loss = 1.10168 (* 1 = 1.10168 loss)
I0428 19:33:44.660961 23168 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:44.763353 23168 solver.cpp:219] Iteration 200 (976.661 iter/s, 0.10239s/100 iters), loss = 0.745314
I0428 19:33:44.763392 23168 solver.cpp:238]     Train net output #0: loss = 0.745314 (* 1 = 0.745314 loss)
I0428 19:33:44.763401 23168 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:44.870666 23168 solver.cpp:219] Iteration 300 (932.314 iter/s, 0.10726s/100 iters), loss = 1.07518
I0428 19:33:44.870734 23168 solver.cpp:238]     Train net output #0: loss = 1.07518 (* 1 = 1.07518 loss)
I0428 19:33:44.870749 23168 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:44.975756 23168 solver.cpp:219] Iteration 400 (952.252 iter/s, 0.105014s/100 iters), loss = 0.786094
I0428 19:33:44.975788 23168 solver.cpp:238]     Train net output #0: loss = 0.786094 (* 1 = 0.786094 loss)
I0428 19:33:44.975795 23168 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:45.076562 23168 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:45.143654 23175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:45.145939 23168 solver.cpp:398]     Test net output #0: accuracy = 0.6793
I0428 19:33:45.145964 23168 solver.cpp:398]     Test net output #1: loss = 0.827105 (* 1 = 0.827105 loss)
I0428 19:33:45.146925 23168 solver.cpp:219] Iteration 500 (584.373 iter/s, 0.171124s/100 iters), loss = 0.905683
I0428 19:33:45.146952 23168 solver.cpp:238]     Train net output #0: loss = 0.905683 (* 1 = 0.905683 loss)
I0428 19:33:45.146960 23168 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:45.256626 23168 solver.cpp:219] Iteration 600 (911.934 iter/s, 0.109657s/100 iters), loss = 0.856001
I0428 19:33:45.256675 23168 solver.cpp:238]     Train net output #0: loss = 0.856001 (* 1 = 0.856001 loss)
I0428 19:33:45.256686 23168 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:45.362512 23168 solver.cpp:219] Iteration 700 (944.945 iter/s, 0.105826s/100 iters), loss = 0.694938
I0428 19:33:45.362546 23168 solver.cpp:238]     Train net output #0: loss = 0.694938 (* 1 = 0.694938 loss)
I0428 19:33:45.362555 23168 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:45.468091 23168 solver.cpp:219] Iteration 800 (947.576 iter/s, 0.105532s/100 iters), loss = 1.0144
I0428 19:33:45.468122 23168 solver.cpp:238]     Train net output #0: loss = 1.0144 (* 1 = 1.0144 loss)
I0428 19:33:45.468129 23168 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:45.571421 23168 solver.cpp:219] Iteration 900 (968.168 iter/s, 0.103288s/100 iters), loss = 0.775549
I0428 19:33:45.571452 23168 solver.cpp:238]     Train net output #0: loss = 0.775549 (* 1 = 0.775549 loss)
I0428 19:33:45.571460 23168 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:45.607520 23174 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:45.675930 23168 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:45.680603 23168 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:45.682832 23168 solver.cpp:311] Iteration 1000, loss = 0.815194
I0428 19:33:45.682852 23168 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:45.753680 23175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:45.754758 23168 solver.cpp:398]     Test net output #0: accuracy = 0.6884
I0428 19:33:45.754783 23168 solver.cpp:398]     Test net output #1: loss = 0.774221 (* 1 = 0.774221 loss)
I0428 19:33:45.754789 23168 solver.cpp:316] Optimization Done.
I0428 19:33:45.754793 23168 caffe.cpp:259] Optimization Done.
