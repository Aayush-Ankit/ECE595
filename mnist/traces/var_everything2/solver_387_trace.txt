I0428 19:42:12.649276 25013 caffe.cpp:218] Using GPUs 0
I0428 19:42:12.686512 25013 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:13.196964 25013 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test387.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:13.197104 25013 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test387.prototxt
I0428 19:42:13.197509 25013 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:13.197525 25013 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:13.197624 25013 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:13.197698 25013 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:13.197800 25013 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:13.197825 25013 net.cpp:86] Creating Layer mnist
I0428 19:42:13.197834 25013 net.cpp:382] mnist -> data
I0428 19:42:13.197856 25013 net.cpp:382] mnist -> label
I0428 19:42:13.198951 25013 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:13.201412 25013 net.cpp:124] Setting up mnist
I0428 19:42:13.201431 25013 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:13.201436 25013 net.cpp:131] Top shape: 64 (64)
I0428 19:42:13.201441 25013 net.cpp:139] Memory required for data: 200960
I0428 19:42:13.201448 25013 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:13.201463 25013 net.cpp:86] Creating Layer conv0
I0428 19:42:13.201484 25013 net.cpp:408] conv0 <- data
I0428 19:42:13.201495 25013 net.cpp:382] conv0 -> conv0
I0428 19:42:13.487752 25013 net.cpp:124] Setting up conv0
I0428 19:42:13.487779 25013 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:13.487783 25013 net.cpp:139] Memory required for data: 495872
I0428 19:42:13.487798 25013 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:13.487812 25013 net.cpp:86] Creating Layer pool0
I0428 19:42:13.487815 25013 net.cpp:408] pool0 <- conv0
I0428 19:42:13.487821 25013 net.cpp:382] pool0 -> pool0
I0428 19:42:13.487867 25013 net.cpp:124] Setting up pool0
I0428 19:42:13.487874 25013 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:13.487876 25013 net.cpp:139] Memory required for data: 569600
I0428 19:42:13.487879 25013 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:13.487890 25013 net.cpp:86] Creating Layer conv1
I0428 19:42:13.487893 25013 net.cpp:408] conv1 <- pool0
I0428 19:42:13.487898 25013 net.cpp:382] conv1 -> conv1
I0428 19:42:13.489795 25013 net.cpp:124] Setting up conv1
I0428 19:42:13.489825 25013 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:42:13.489830 25013 net.cpp:139] Memory required for data: 733440
I0428 19:42:13.489838 25013 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:13.489846 25013 net.cpp:86] Creating Layer pool1
I0428 19:42:13.489850 25013 net.cpp:408] pool1 <- conv1
I0428 19:42:13.489856 25013 net.cpp:382] pool1 -> pool1
I0428 19:42:13.489894 25013 net.cpp:124] Setting up pool1
I0428 19:42:13.489900 25013 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:42:13.489903 25013 net.cpp:139] Memory required for data: 774400
I0428 19:42:13.489907 25013 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:13.489913 25013 net.cpp:86] Creating Layer ip1
I0428 19:42:13.489917 25013 net.cpp:408] ip1 <- pool1
I0428 19:42:13.489922 25013 net.cpp:382] ip1 -> ip1
I0428 19:42:13.490893 25013 net.cpp:124] Setting up ip1
I0428 19:42:13.490906 25013 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:13.490926 25013 net.cpp:139] Memory required for data: 787200
I0428 19:42:13.490934 25013 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:13.490941 25013 net.cpp:86] Creating Layer relu1
I0428 19:42:13.490944 25013 net.cpp:408] relu1 <- ip1
I0428 19:42:13.490949 25013 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:13.491127 25013 net.cpp:124] Setting up relu1
I0428 19:42:13.491137 25013 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:13.491139 25013 net.cpp:139] Memory required for data: 800000
I0428 19:42:13.491142 25013 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:13.491148 25013 net.cpp:86] Creating Layer ip2
I0428 19:42:13.491152 25013 net.cpp:408] ip2 <- ip1
I0428 19:42:13.491156 25013 net.cpp:382] ip2 -> ip2
I0428 19:42:13.492081 25013 net.cpp:124] Setting up ip2
I0428 19:42:13.492094 25013 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:13.492113 25013 net.cpp:139] Memory required for data: 812800
I0428 19:42:13.492120 25013 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:13.492126 25013 net.cpp:86] Creating Layer relu2
I0428 19:42:13.492130 25013 net.cpp:408] relu2 <- ip2
I0428 19:42:13.492136 25013 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:13.492926 25013 net.cpp:124] Setting up relu2
I0428 19:42:13.492939 25013 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:13.492959 25013 net.cpp:139] Memory required for data: 825600
I0428 19:42:13.492964 25013 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:13.492971 25013 net.cpp:86] Creating Layer ip3
I0428 19:42:13.492975 25013 net.cpp:408] ip3 <- ip2
I0428 19:42:13.492982 25013 net.cpp:382] ip3 -> ip3
I0428 19:42:13.493135 25013 net.cpp:124] Setting up ip3
I0428 19:42:13.493144 25013 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:13.493146 25013 net.cpp:139] Memory required for data: 828160
I0428 19:42:13.493154 25013 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:13.493158 25013 net.cpp:86] Creating Layer relu3
I0428 19:42:13.493161 25013 net.cpp:408] relu3 <- ip3
I0428 19:42:13.493165 25013 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:13.493327 25013 net.cpp:124] Setting up relu3
I0428 19:42:13.493335 25013 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:13.493338 25013 net.cpp:139] Memory required for data: 830720
I0428 19:42:13.493342 25013 layer_factory.hpp:77] Creating layer loss
I0428 19:42:13.493347 25013 net.cpp:86] Creating Layer loss
I0428 19:42:13.493350 25013 net.cpp:408] loss <- ip3
I0428 19:42:13.493355 25013 net.cpp:408] loss <- label
I0428 19:42:13.493360 25013 net.cpp:382] loss -> loss
I0428 19:42:13.493374 25013 layer_factory.hpp:77] Creating layer loss
I0428 19:42:13.493592 25013 net.cpp:124] Setting up loss
I0428 19:42:13.493600 25013 net.cpp:131] Top shape: (1)
I0428 19:42:13.493604 25013 net.cpp:134]     with loss weight 1
I0428 19:42:13.493618 25013 net.cpp:139] Memory required for data: 830724
I0428 19:42:13.493623 25013 net.cpp:200] loss needs backward computation.
I0428 19:42:13.493626 25013 net.cpp:200] relu3 needs backward computation.
I0428 19:42:13.493629 25013 net.cpp:200] ip3 needs backward computation.
I0428 19:42:13.493633 25013 net.cpp:200] relu2 needs backward computation.
I0428 19:42:13.493634 25013 net.cpp:200] ip2 needs backward computation.
I0428 19:42:13.493638 25013 net.cpp:200] relu1 needs backward computation.
I0428 19:42:13.493640 25013 net.cpp:200] ip1 needs backward computation.
I0428 19:42:13.493643 25013 net.cpp:200] pool1 needs backward computation.
I0428 19:42:13.493646 25013 net.cpp:200] conv1 needs backward computation.
I0428 19:42:13.493649 25013 net.cpp:200] pool0 needs backward computation.
I0428 19:42:13.493652 25013 net.cpp:200] conv0 needs backward computation.
I0428 19:42:13.493655 25013 net.cpp:202] mnist does not need backward computation.
I0428 19:42:13.493659 25013 net.cpp:244] This network produces output loss
I0428 19:42:13.493669 25013 net.cpp:257] Network initialization done.
I0428 19:42:13.494045 25013 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test387.prototxt
I0428 19:42:13.494072 25013 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:13.494163 25013 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:13.494240 25013 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:13.494282 25013 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:13.494297 25013 net.cpp:86] Creating Layer mnist
I0428 19:42:13.494300 25013 net.cpp:382] mnist -> data
I0428 19:42:13.494308 25013 net.cpp:382] mnist -> label
I0428 19:42:13.494390 25013 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:13.496270 25013 net.cpp:124] Setting up mnist
I0428 19:42:13.496284 25013 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:13.496287 25013 net.cpp:131] Top shape: 100 (100)
I0428 19:42:13.496291 25013 net.cpp:139] Memory required for data: 314000
I0428 19:42:13.496294 25013 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:13.496301 25013 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:13.496304 25013 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:13.496309 25013 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:13.496315 25013 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:13.496352 25013 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:13.496357 25013 net.cpp:131] Top shape: 100 (100)
I0428 19:42:13.496361 25013 net.cpp:131] Top shape: 100 (100)
I0428 19:42:13.496363 25013 net.cpp:139] Memory required for data: 314800
I0428 19:42:13.496366 25013 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:13.496374 25013 net.cpp:86] Creating Layer conv0
I0428 19:42:13.496377 25013 net.cpp:408] conv0 <- data
I0428 19:42:13.496382 25013 net.cpp:382] conv0 -> conv0
I0428 19:42:13.498142 25013 net.cpp:124] Setting up conv0
I0428 19:42:13.498157 25013 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:13.498160 25013 net.cpp:139] Memory required for data: 775600
I0428 19:42:13.498169 25013 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:13.498175 25013 net.cpp:86] Creating Layer pool0
I0428 19:42:13.498178 25013 net.cpp:408] pool0 <- conv0
I0428 19:42:13.498183 25013 net.cpp:382] pool0 -> pool0
I0428 19:42:13.498219 25013 net.cpp:124] Setting up pool0
I0428 19:42:13.498224 25013 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:13.498226 25013 net.cpp:139] Memory required for data: 890800
I0428 19:42:13.498229 25013 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:13.498237 25013 net.cpp:86] Creating Layer conv1
I0428 19:42:13.498240 25013 net.cpp:408] conv1 <- pool0
I0428 19:42:13.498245 25013 net.cpp:382] conv1 -> conv1
I0428 19:42:13.499732 25013 net.cpp:124] Setting up conv1
I0428 19:42:13.499745 25013 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:42:13.499749 25013 net.cpp:139] Memory required for data: 1146800
I0428 19:42:13.499758 25013 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:13.499771 25013 net.cpp:86] Creating Layer pool1
I0428 19:42:13.499775 25013 net.cpp:408] pool1 <- conv1
I0428 19:42:13.499780 25013 net.cpp:382] pool1 -> pool1
I0428 19:42:13.499825 25013 net.cpp:124] Setting up pool1
I0428 19:42:13.499835 25013 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:42:13.499838 25013 net.cpp:139] Memory required for data: 1210800
I0428 19:42:13.499841 25013 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:13.499847 25013 net.cpp:86] Creating Layer ip1
I0428 19:42:13.499856 25013 net.cpp:408] ip1 <- pool1
I0428 19:42:13.499861 25013 net.cpp:382] ip1 -> ip1
I0428 19:42:13.500013 25013 net.cpp:124] Setting up ip1
I0428 19:42:13.500022 25013 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:13.500036 25013 net.cpp:139] Memory required for data: 1230800
I0428 19:42:13.500044 25013 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:13.500049 25013 net.cpp:86] Creating Layer relu1
I0428 19:42:13.500053 25013 net.cpp:408] relu1 <- ip1
I0428 19:42:13.500057 25013 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:13.500246 25013 net.cpp:124] Setting up relu1
I0428 19:42:13.500254 25013 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:13.500265 25013 net.cpp:139] Memory required for data: 1250800
I0428 19:42:13.500268 25013 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:13.500283 25013 net.cpp:86] Creating Layer ip2
I0428 19:42:13.500285 25013 net.cpp:408] ip2 <- ip1
I0428 19:42:13.500290 25013 net.cpp:382] ip2 -> ip2
I0428 19:42:13.500438 25013 net.cpp:124] Setting up ip2
I0428 19:42:13.500447 25013 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:13.500449 25013 net.cpp:139] Memory required for data: 1270800
I0428 19:42:13.500461 25013 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:13.500466 25013 net.cpp:86] Creating Layer relu2
I0428 19:42:13.500469 25013 net.cpp:408] relu2 <- ip2
I0428 19:42:13.500473 25013 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:13.500669 25013 net.cpp:124] Setting up relu2
I0428 19:42:13.500677 25013 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:13.500680 25013 net.cpp:139] Memory required for data: 1290800
I0428 19:42:13.500684 25013 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:13.500689 25013 net.cpp:86] Creating Layer ip3
I0428 19:42:13.500694 25013 net.cpp:408] ip3 <- ip2
I0428 19:42:13.500712 25013 net.cpp:382] ip3 -> ip3
I0428 19:42:13.500859 25013 net.cpp:124] Setting up ip3
I0428 19:42:13.500869 25013 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:13.500874 25013 net.cpp:139] Memory required for data: 1294800
I0428 19:42:13.500882 25013 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:13.500887 25013 net.cpp:86] Creating Layer relu3
I0428 19:42:13.500890 25013 net.cpp:408] relu3 <- ip3
I0428 19:42:13.500895 25013 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:13.501740 25013 net.cpp:124] Setting up relu3
I0428 19:42:13.501752 25013 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:13.501756 25013 net.cpp:139] Memory required for data: 1298800
I0428 19:42:13.501760 25013 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:13.501765 25013 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:13.501768 25013 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:13.501773 25013 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:13.501780 25013 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:13.501817 25013 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:13.501822 25013 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:13.501827 25013 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:13.501829 25013 net.cpp:139] Memory required for data: 1306800
I0428 19:42:13.501832 25013 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:13.501848 25013 net.cpp:86] Creating Layer accuracy
I0428 19:42:13.501852 25013 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:13.501855 25013 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:13.501865 25013 net.cpp:382] accuracy -> accuracy
I0428 19:42:13.501873 25013 net.cpp:124] Setting up accuracy
I0428 19:42:13.501876 25013 net.cpp:131] Top shape: (1)
I0428 19:42:13.501878 25013 net.cpp:139] Memory required for data: 1306804
I0428 19:42:13.501881 25013 layer_factory.hpp:77] Creating layer loss
I0428 19:42:13.501885 25013 net.cpp:86] Creating Layer loss
I0428 19:42:13.501889 25013 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:13.501893 25013 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:13.501898 25013 net.cpp:382] loss -> loss
I0428 19:42:13.501902 25013 layer_factory.hpp:77] Creating layer loss
I0428 19:42:13.502147 25013 net.cpp:124] Setting up loss
I0428 19:42:13.502157 25013 net.cpp:131] Top shape: (1)
I0428 19:42:13.502161 25013 net.cpp:134]     with loss weight 1
I0428 19:42:13.502168 25013 net.cpp:139] Memory required for data: 1306808
I0428 19:42:13.502182 25013 net.cpp:200] loss needs backward computation.
I0428 19:42:13.502193 25013 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:13.502197 25013 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:13.502207 25013 net.cpp:200] relu3 needs backward computation.
I0428 19:42:13.502209 25013 net.cpp:200] ip3 needs backward computation.
I0428 19:42:13.502213 25013 net.cpp:200] relu2 needs backward computation.
I0428 19:42:13.502215 25013 net.cpp:200] ip2 needs backward computation.
I0428 19:42:13.502224 25013 net.cpp:200] relu1 needs backward computation.
I0428 19:42:13.502228 25013 net.cpp:200] ip1 needs backward computation.
I0428 19:42:13.502230 25013 net.cpp:200] pool1 needs backward computation.
I0428 19:42:13.502233 25013 net.cpp:200] conv1 needs backward computation.
I0428 19:42:13.502236 25013 net.cpp:200] pool0 needs backward computation.
I0428 19:42:13.502239 25013 net.cpp:200] conv0 needs backward computation.
I0428 19:42:13.502243 25013 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:13.502248 25013 net.cpp:202] mnist does not need backward computation.
I0428 19:42:13.502250 25013 net.cpp:244] This network produces output accuracy
I0428 19:42:13.502259 25013 net.cpp:244] This network produces output loss
I0428 19:42:13.502270 25013 net.cpp:257] Network initialization done.
I0428 19:42:13.502326 25013 solver.cpp:56] Solver scaffolding done.
I0428 19:42:13.502647 25013 caffe.cpp:248] Starting Optimization
I0428 19:42:13.502655 25013 solver.cpp:273] Solving LeNet
I0428 19:42:13.502658 25013 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:13.503442 25013 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:13.505452 25013 blocking_queue.cpp:49] Waiting for data
I0428 19:42:13.577452 25020 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:13.577891 25013 solver.cpp:398]     Test net output #0: accuracy = 0.1118
I0428 19:42:13.577913 25013 solver.cpp:398]     Test net output #1: loss = 2.31469 (* 1 = 2.31469 loss)
I0428 19:42:13.579723 25013 solver.cpp:219] Iteration 0 (0 iter/s, 0.0770416s/100 iters), loss = 2.33818
I0428 19:42:13.579758 25013 solver.cpp:238]     Train net output #0: loss = 2.33818 (* 1 = 2.33818 loss)
I0428 19:42:13.579777 25013 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:13.656369 25013 solver.cpp:219] Iteration 100 (1305.44 iter/s, 0.0766027s/100 iters), loss = 1.63048
I0428 19:42:13.656397 25013 solver.cpp:238]     Train net output #0: loss = 1.63048 (* 1 = 1.63048 loss)
I0428 19:42:13.656404 25013 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:13.734853 25013 solver.cpp:219] Iteration 200 (1274.75 iter/s, 0.0784466s/100 iters), loss = 1.54825
I0428 19:42:13.734879 25013 solver.cpp:238]     Train net output #0: loss = 1.54825 (* 1 = 1.54825 loss)
I0428 19:42:13.734884 25013 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:13.810406 25013 solver.cpp:219] Iteration 300 (1324.17 iter/s, 0.075519s/100 iters), loss = 1.34392
I0428 19:42:13.810433 25013 solver.cpp:238]     Train net output #0: loss = 1.34392 (* 1 = 1.34392 loss)
I0428 19:42:13.810441 25013 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:13.889410 25013 solver.cpp:219] Iteration 400 (1266.37 iter/s, 0.0789659s/100 iters), loss = 1.66978
I0428 19:42:13.889444 25013 solver.cpp:238]     Train net output #0: loss = 1.66978 (* 1 = 1.66978 loss)
I0428 19:42:13.889452 25013 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:13.966287 25013 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:14.040805 25020 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:14.041419 25013 solver.cpp:398]     Test net output #0: accuracy = 0.4524
I0428 19:42:14.041445 25013 solver.cpp:398]     Test net output #1: loss = 1.52805 (* 1 = 1.52805 loss)
I0428 19:42:14.042428 25013 solver.cpp:219] Iteration 500 (653.73 iter/s, 0.152968s/100 iters), loss = 1.5673
I0428 19:42:14.042460 25013 solver.cpp:238]     Train net output #0: loss = 1.5673 (* 1 = 1.5673 loss)
I0428 19:42:14.042495 25013 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:14.116278 25013 solver.cpp:219] Iteration 600 (1354.79 iter/s, 0.073812s/100 iters), loss = 1.69857
I0428 19:42:14.116304 25013 solver.cpp:238]     Train net output #0: loss = 1.69857 (* 1 = 1.69857 loss)
I0428 19:42:14.116312 25013 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:14.190974 25013 solver.cpp:219] Iteration 700 (1339.39 iter/s, 0.0746608s/100 iters), loss = 1.36547
I0428 19:42:14.191017 25013 solver.cpp:238]     Train net output #0: loss = 1.36547 (* 1 = 1.36547 loss)
I0428 19:42:14.191025 25013 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:14.268484 25013 solver.cpp:219] Iteration 800 (1290.74 iter/s, 0.0774748s/100 iters), loss = 1.515
I0428 19:42:14.268527 25013 solver.cpp:238]     Train net output #0: loss = 1.515 (* 1 = 1.515 loss)
I0428 19:42:14.268532 25013 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:14.342440 25013 solver.cpp:219] Iteration 900 (1353.09 iter/s, 0.0739052s/100 iters), loss = 1.50784
I0428 19:42:14.342480 25013 solver.cpp:238]     Train net output #0: loss = 1.50784 (* 1 = 1.50784 loss)
I0428 19:42:14.342488 25013 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:14.368379 25019 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:14.417201 25013 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:14.418025 25013 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:14.418579 25013 solver.cpp:311] Iteration 1000, loss = 1.39287
I0428 19:42:14.418609 25013 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:14.482748 25020 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:14.483335 25013 solver.cpp:398]     Test net output #0: accuracy = 0.4703
I0428 19:42:14.483376 25013 solver.cpp:398]     Test net output #1: loss = 1.47924 (* 1 = 1.47924 loss)
I0428 19:42:14.483382 25013 solver.cpp:316] Optimization Done.
I0428 19:42:14.483387 25013 caffe.cpp:259] Optimization Done.
