I0428 19:59:13.133144 29185 caffe.cpp:218] Using GPUs 0
I0428 19:59:13.162338 29185 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:13.603432 29185 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test841.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:13.603581 29185 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test841.prototxt
I0428 19:59:13.603970 29185 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:13.604001 29185 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:13.604092 29185 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:13.604156 29185 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:13.604238 29185 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:13.604256 29185 net.cpp:86] Creating Layer mnist
I0428 19:59:13.604262 29185 net.cpp:382] mnist -> data
I0428 19:59:13.604282 29185 net.cpp:382] mnist -> label
I0428 19:59:13.605387 29185 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:13.607661 29185 net.cpp:124] Setting up mnist
I0428 19:59:13.607692 29185 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:13.607697 29185 net.cpp:131] Top shape: 64 (64)
I0428 19:59:13.607698 29185 net.cpp:139] Memory required for data: 200960
I0428 19:59:13.607704 29185 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:13.607719 29185 net.cpp:86] Creating Layer conv0
I0428 19:59:13.607736 29185 net.cpp:408] conv0 <- data
I0428 19:59:13.607746 29185 net.cpp:382] conv0 -> conv0
I0428 19:59:13.832249 29185 net.cpp:124] Setting up conv0
I0428 19:59:13.832275 29185 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:13.832279 29185 net.cpp:139] Memory required for data: 1675520
I0428 19:59:13.832293 29185 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:13.832304 29185 net.cpp:86] Creating Layer pool0
I0428 19:59:13.832309 29185 net.cpp:408] pool0 <- conv0
I0428 19:59:13.832314 29185 net.cpp:382] pool0 -> pool0
I0428 19:59:13.832370 29185 net.cpp:124] Setting up pool0
I0428 19:59:13.832376 29185 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:13.832378 29185 net.cpp:139] Memory required for data: 2044160
I0428 19:59:13.832381 29185 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:13.832391 29185 net.cpp:86] Creating Layer conv1
I0428 19:59:13.832394 29185 net.cpp:408] conv1 <- pool0
I0428 19:59:13.832398 29185 net.cpp:382] conv1 -> conv1
I0428 19:59:13.835194 29185 net.cpp:124] Setting up conv1
I0428 19:59:13.835208 29185 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:13.835212 29185 net.cpp:139] Memory required for data: 2208000
I0428 19:59:13.835220 29185 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:13.835228 29185 net.cpp:86] Creating Layer pool1
I0428 19:59:13.835232 29185 net.cpp:408] pool1 <- conv1
I0428 19:59:13.835252 29185 net.cpp:382] pool1 -> pool1
I0428 19:59:13.835286 29185 net.cpp:124] Setting up pool1
I0428 19:59:13.835291 29185 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:13.835294 29185 net.cpp:139] Memory required for data: 2248960
I0428 19:59:13.835297 29185 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:13.835304 29185 net.cpp:86] Creating Layer ip1
I0428 19:59:13.835306 29185 net.cpp:408] ip1 <- pool1
I0428 19:59:13.835310 29185 net.cpp:382] ip1 -> ip1
I0428 19:59:13.835422 29185 net.cpp:124] Setting up ip1
I0428 19:59:13.835429 29185 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:13.835433 29185 net.cpp:139] Memory required for data: 2255360
I0428 19:59:13.835439 29185 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:13.835444 29185 net.cpp:86] Creating Layer relu1
I0428 19:59:13.835448 29185 net.cpp:408] relu1 <- ip1
I0428 19:59:13.835451 29185 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:13.835603 29185 net.cpp:124] Setting up relu1
I0428 19:59:13.835611 29185 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:13.835614 29185 net.cpp:139] Memory required for data: 2261760
I0428 19:59:13.835618 29185 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:13.835623 29185 net.cpp:86] Creating Layer ip2
I0428 19:59:13.835626 29185 net.cpp:408] ip2 <- ip1
I0428 19:59:13.835631 29185 net.cpp:382] ip2 -> ip2
I0428 19:59:13.835718 29185 net.cpp:124] Setting up ip2
I0428 19:59:13.835724 29185 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:13.835727 29185 net.cpp:139] Memory required for data: 2264320
I0428 19:59:13.835732 29185 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:13.835737 29185 net.cpp:86] Creating Layer relu2
I0428 19:59:13.835741 29185 net.cpp:408] relu2 <- ip2
I0428 19:59:13.835758 29185 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:13.836486 29185 net.cpp:124] Setting up relu2
I0428 19:59:13.836498 29185 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:13.836501 29185 net.cpp:139] Memory required for data: 2266880
I0428 19:59:13.836505 29185 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:13.836526 29185 net.cpp:86] Creating Layer ip3
I0428 19:59:13.836529 29185 net.cpp:408] ip3 <- ip2
I0428 19:59:13.836536 29185 net.cpp:382] ip3 -> ip3
I0428 19:59:13.836643 29185 net.cpp:124] Setting up ip3
I0428 19:59:13.836650 29185 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:13.836653 29185 net.cpp:139] Memory required for data: 2269440
I0428 19:59:13.836660 29185 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:13.836665 29185 net.cpp:86] Creating Layer relu3
I0428 19:59:13.836668 29185 net.cpp:408] relu3 <- ip3
I0428 19:59:13.836673 29185 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:13.836846 29185 net.cpp:124] Setting up relu3
I0428 19:59:13.836855 29185 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:13.836859 29185 net.cpp:139] Memory required for data: 2272000
I0428 19:59:13.836877 29185 layer_factory.hpp:77] Creating layer loss
I0428 19:59:13.836884 29185 net.cpp:86] Creating Layer loss
I0428 19:59:13.836886 29185 net.cpp:408] loss <- ip3
I0428 19:59:13.836890 29185 net.cpp:408] loss <- label
I0428 19:59:13.836895 29185 net.cpp:382] loss -> loss
I0428 19:59:13.836912 29185 layer_factory.hpp:77] Creating layer loss
I0428 19:59:13.837167 29185 net.cpp:124] Setting up loss
I0428 19:59:13.837177 29185 net.cpp:131] Top shape: (1)
I0428 19:59:13.837193 29185 net.cpp:134]     with loss weight 1
I0428 19:59:13.837206 29185 net.cpp:139] Memory required for data: 2272004
I0428 19:59:13.837209 29185 net.cpp:200] loss needs backward computation.
I0428 19:59:13.837213 29185 net.cpp:200] relu3 needs backward computation.
I0428 19:59:13.837215 29185 net.cpp:200] ip3 needs backward computation.
I0428 19:59:13.837218 29185 net.cpp:200] relu2 needs backward computation.
I0428 19:59:13.837221 29185 net.cpp:200] ip2 needs backward computation.
I0428 19:59:13.837224 29185 net.cpp:200] relu1 needs backward computation.
I0428 19:59:13.837225 29185 net.cpp:200] ip1 needs backward computation.
I0428 19:59:13.837229 29185 net.cpp:200] pool1 needs backward computation.
I0428 19:59:13.837231 29185 net.cpp:200] conv1 needs backward computation.
I0428 19:59:13.837234 29185 net.cpp:200] pool0 needs backward computation.
I0428 19:59:13.837236 29185 net.cpp:200] conv0 needs backward computation.
I0428 19:59:13.837240 29185 net.cpp:202] mnist does not need backward computation.
I0428 19:59:13.837242 29185 net.cpp:244] This network produces output loss
I0428 19:59:13.837251 29185 net.cpp:257] Network initialization done.
I0428 19:59:13.837605 29185 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test841.prototxt
I0428 19:59:13.837661 29185 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:13.837754 29185 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:13.837836 29185 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:13.837880 29185 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:13.837893 29185 net.cpp:86] Creating Layer mnist
I0428 19:59:13.837898 29185 net.cpp:382] mnist -> data
I0428 19:59:13.837906 29185 net.cpp:382] mnist -> label
I0428 19:59:13.838021 29185 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:13.840158 29185 net.cpp:124] Setting up mnist
I0428 19:59:13.840171 29185 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:13.840178 29185 net.cpp:131] Top shape: 100 (100)
I0428 19:59:13.840180 29185 net.cpp:139] Memory required for data: 314000
I0428 19:59:13.840184 29185 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:13.840212 29185 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:13.840217 29185 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:13.840221 29185 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:13.840227 29185 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:13.840271 29185 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:13.840278 29185 net.cpp:131] Top shape: 100 (100)
I0428 19:59:13.840282 29185 net.cpp:131] Top shape: 100 (100)
I0428 19:59:13.840286 29185 net.cpp:139] Memory required for data: 314800
I0428 19:59:13.840287 29185 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:13.840296 29185 net.cpp:86] Creating Layer conv0
I0428 19:59:13.840299 29185 net.cpp:408] conv0 <- data
I0428 19:59:13.840306 29185 net.cpp:382] conv0 -> conv0
I0428 19:59:13.841922 29185 net.cpp:124] Setting up conv0
I0428 19:59:13.841935 29185 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:13.841939 29185 net.cpp:139] Memory required for data: 2618800
I0428 19:59:13.841948 29185 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:13.841954 29185 net.cpp:86] Creating Layer pool0
I0428 19:59:13.841958 29185 net.cpp:408] pool0 <- conv0
I0428 19:59:13.841977 29185 net.cpp:382] pool0 -> pool0
I0428 19:59:13.842013 29185 net.cpp:124] Setting up pool0
I0428 19:59:13.842018 29185 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:13.842021 29185 net.cpp:139] Memory required for data: 3194800
I0428 19:59:13.842023 29185 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:13.842033 29185 net.cpp:86] Creating Layer conv1
I0428 19:59:13.842036 29185 net.cpp:408] conv1 <- pool0
I0428 19:59:13.842041 29185 net.cpp:382] conv1 -> conv1
I0428 19:59:13.844183 29185 net.cpp:124] Setting up conv1
I0428 19:59:13.844197 29185 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:13.844200 29185 net.cpp:139] Memory required for data: 3450800
I0428 19:59:13.844224 29185 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:13.844249 29185 net.cpp:86] Creating Layer pool1
I0428 19:59:13.844254 29185 net.cpp:408] pool1 <- conv1
I0428 19:59:13.844274 29185 net.cpp:382] pool1 -> pool1
I0428 19:59:13.844312 29185 net.cpp:124] Setting up pool1
I0428 19:59:13.844321 29185 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:13.844324 29185 net.cpp:139] Memory required for data: 3514800
I0428 19:59:13.844328 29185 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:13.844334 29185 net.cpp:86] Creating Layer ip1
I0428 19:59:13.844337 29185 net.cpp:408] ip1 <- pool1
I0428 19:59:13.844341 29185 net.cpp:382] ip1 -> ip1
I0428 19:59:13.844487 29185 net.cpp:124] Setting up ip1
I0428 19:59:13.844496 29185 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:13.844508 29185 net.cpp:139] Memory required for data: 3524800
I0428 19:59:13.844516 29185 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:13.844522 29185 net.cpp:86] Creating Layer relu1
I0428 19:59:13.844525 29185 net.cpp:408] relu1 <- ip1
I0428 19:59:13.844529 29185 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:13.844740 29185 net.cpp:124] Setting up relu1
I0428 19:59:13.844749 29185 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:13.844753 29185 net.cpp:139] Memory required for data: 3534800
I0428 19:59:13.844755 29185 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:13.844764 29185 net.cpp:86] Creating Layer ip2
I0428 19:59:13.844769 29185 net.cpp:408] ip2 <- ip1
I0428 19:59:13.844774 29185 net.cpp:382] ip2 -> ip2
I0428 19:59:13.844908 29185 net.cpp:124] Setting up ip2
I0428 19:59:13.844918 29185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:13.844920 29185 net.cpp:139] Memory required for data: 3538800
I0428 19:59:13.844926 29185 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:13.844931 29185 net.cpp:86] Creating Layer relu2
I0428 19:59:13.844935 29185 net.cpp:408] relu2 <- ip2
I0428 19:59:13.844939 29185 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:13.845096 29185 net.cpp:124] Setting up relu2
I0428 19:59:13.845105 29185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:13.845109 29185 net.cpp:139] Memory required for data: 3542800
I0428 19:59:13.845113 29185 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:13.845118 29185 net.cpp:86] Creating Layer ip3
I0428 19:59:13.845121 29185 net.cpp:408] ip3 <- ip2
I0428 19:59:13.845127 29185 net.cpp:382] ip3 -> ip3
I0428 19:59:13.845252 29185 net.cpp:124] Setting up ip3
I0428 19:59:13.845257 29185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:13.845262 29185 net.cpp:139] Memory required for data: 3546800
I0428 19:59:13.845270 29185 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:13.845275 29185 net.cpp:86] Creating Layer relu3
I0428 19:59:13.845278 29185 net.cpp:408] relu3 <- ip3
I0428 19:59:13.845283 29185 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:13.846093 29185 net.cpp:124] Setting up relu3
I0428 19:59:13.846104 29185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:13.846122 29185 net.cpp:139] Memory required for data: 3550800
I0428 19:59:13.846127 29185 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:13.846132 29185 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:13.846135 29185 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:13.846141 29185 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:13.846148 29185 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:13.846186 29185 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:13.846191 29185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:13.846194 29185 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:13.846197 29185 net.cpp:139] Memory required for data: 3558800
I0428 19:59:13.846199 29185 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:13.846205 29185 net.cpp:86] Creating Layer accuracy
I0428 19:59:13.846209 29185 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:13.846212 29185 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:13.846216 29185 net.cpp:382] accuracy -> accuracy
I0428 19:59:13.846223 29185 net.cpp:124] Setting up accuracy
I0428 19:59:13.846226 29185 net.cpp:131] Top shape: (1)
I0428 19:59:13.846230 29185 net.cpp:139] Memory required for data: 3558804
I0428 19:59:13.846231 29185 layer_factory.hpp:77] Creating layer loss
I0428 19:59:13.846235 29185 net.cpp:86] Creating Layer loss
I0428 19:59:13.846238 29185 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:13.846242 29185 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:13.846246 29185 net.cpp:382] loss -> loss
I0428 19:59:13.846251 29185 layer_factory.hpp:77] Creating layer loss
I0428 19:59:13.846474 29185 net.cpp:124] Setting up loss
I0428 19:59:13.846483 29185 net.cpp:131] Top shape: (1)
I0428 19:59:13.846487 29185 net.cpp:134]     with loss weight 1
I0428 19:59:13.846503 29185 net.cpp:139] Memory required for data: 3558808
I0428 19:59:13.846506 29185 net.cpp:200] loss needs backward computation.
I0428 19:59:13.846510 29185 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:13.846521 29185 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:13.846524 29185 net.cpp:200] relu3 needs backward computation.
I0428 19:59:13.846526 29185 net.cpp:200] ip3 needs backward computation.
I0428 19:59:13.846529 29185 net.cpp:200] relu2 needs backward computation.
I0428 19:59:13.846532 29185 net.cpp:200] ip2 needs backward computation.
I0428 19:59:13.846534 29185 net.cpp:200] relu1 needs backward computation.
I0428 19:59:13.846539 29185 net.cpp:200] ip1 needs backward computation.
I0428 19:59:13.846545 29185 net.cpp:200] pool1 needs backward computation.
I0428 19:59:13.846549 29185 net.cpp:200] conv1 needs backward computation.
I0428 19:59:13.846551 29185 net.cpp:200] pool0 needs backward computation.
I0428 19:59:13.846554 29185 net.cpp:200] conv0 needs backward computation.
I0428 19:59:13.846557 29185 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:13.846560 29185 net.cpp:202] mnist does not need backward computation.
I0428 19:59:13.846563 29185 net.cpp:244] This network produces output accuracy
I0428 19:59:13.846567 29185 net.cpp:244] This network produces output loss
I0428 19:59:13.846576 29185 net.cpp:257] Network initialization done.
I0428 19:59:13.846616 29185 solver.cpp:56] Solver scaffolding done.
I0428 19:59:13.846943 29185 caffe.cpp:248] Starting Optimization
I0428 19:59:13.846954 29185 solver.cpp:273] Solving LeNet
I0428 19:59:13.846956 29185 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:13.847149 29185 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:13.851555 29185 blocking_queue.cpp:49] Waiting for data
I0428 19:59:13.923606 29192 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:13.924160 29185 solver.cpp:398]     Test net output #0: accuracy = 0.116
I0428 19:59:13.924196 29185 solver.cpp:398]     Test net output #1: loss = 2.30585 (* 1 = 2.30585 loss)
I0428 19:59:13.926903 29185 solver.cpp:219] Iteration 0 (-1.01734e-42 iter/s, 0.0799067s/100 iters), loss = 2.30751
I0428 19:59:13.926928 29185 solver.cpp:238]     Train net output #0: loss = 2.30751 (* 1 = 2.30751 loss)
I0428 19:59:13.926937 29185 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:14.005622 29185 solver.cpp:219] Iteration 100 (1270.92 iter/s, 0.0786831s/100 iters), loss = 0.843239
I0428 19:59:14.005647 29185 solver.cpp:238]     Train net output #0: loss = 0.843239 (* 1 = 0.843239 loss)
I0428 19:59:14.005653 29185 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:14.083084 29185 solver.cpp:219] Iteration 200 (1291.54 iter/s, 0.0774267s/100 iters), loss = 0.532667
I0428 19:59:14.083123 29185 solver.cpp:238]     Train net output #0: loss = 0.532667 (* 1 = 0.532667 loss)
I0428 19:59:14.083129 29185 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:14.161327 29185 solver.cpp:219] Iteration 300 (1278.61 iter/s, 0.07821s/100 iters), loss = 0.301759
I0428 19:59:14.161365 29185 solver.cpp:238]     Train net output #0: loss = 0.301759 (* 1 = 0.301759 loss)
I0428 19:59:14.161371 29185 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:14.239748 29185 solver.cpp:219] Iteration 400 (1275.7 iter/s, 0.0783882s/100 iters), loss = 0.223822
I0428 19:59:14.239773 29185 solver.cpp:238]     Train net output #0: loss = 0.223822 (* 1 = 0.223822 loss)
I0428 19:59:14.239779 29185 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:14.317561 29185 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:14.370739 29192 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:14.371281 29185 solver.cpp:398]     Test net output #0: accuracy = 0.9361
I0428 19:59:14.371316 29185 solver.cpp:398]     Test net output #1: loss = 0.215345 (* 1 = 0.215345 loss)
I0428 19:59:14.372131 29185 solver.cpp:219] Iteration 500 (755.59 iter/s, 0.132347s/100 iters), loss = 0.145078
I0428 19:59:14.372174 29185 solver.cpp:238]     Train net output #0: loss = 0.145078 (* 1 = 0.145078 loss)
I0428 19:59:14.372180 29185 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:14.451067 29185 solver.cpp:219] Iteration 600 (1267.65 iter/s, 0.0788859s/100 iters), loss = 0.158482
I0428 19:59:14.451107 29185 solver.cpp:238]     Train net output #0: loss = 0.158482 (* 1 = 0.158482 loss)
I0428 19:59:14.451114 29185 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:14.532922 29185 solver.cpp:219] Iteration 700 (1222.2 iter/s, 0.0818195s/100 iters), loss = 0.335792
I0428 19:59:14.532946 29185 solver.cpp:238]     Train net output #0: loss = 0.335792 (* 1 = 0.335792 loss)
I0428 19:59:14.532953 29185 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:14.613730 29185 solver.cpp:219] Iteration 800 (1238.02 iter/s, 0.0807742s/100 iters), loss = 0.336853
I0428 19:59:14.613755 29185 solver.cpp:238]     Train net output #0: loss = 0.336853 (* 1 = 0.336853 loss)
I0428 19:59:14.613776 29185 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:14.692364 29185 solver.cpp:219] Iteration 900 (1272.26 iter/s, 0.0786002s/100 iters), loss = 0.206922
I0428 19:59:14.692389 29185 solver.cpp:238]     Train net output #0: loss = 0.206922 (* 1 = 0.206922 loss)
I0428 19:59:14.692395 29185 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:14.718688 29191 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:14.770002 29185 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:14.770828 29185 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:14.771317 29185 solver.cpp:311] Iteration 1000, loss = 0.145993
I0428 19:59:14.771332 29185 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:14.833151 29192 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:14.833647 29185 solver.cpp:398]     Test net output #0: accuracy = 0.964
I0428 19:59:14.833667 29185 solver.cpp:398]     Test net output #1: loss = 0.122473 (* 1 = 0.122473 loss)
I0428 19:59:14.833673 29185 solver.cpp:316] Optimization Done.
I0428 19:59:14.833678 29185 caffe.cpp:259] Optimization Done.
