I0428 19:49:39.020926 26817 caffe.cpp:218] Using GPUs 0
I0428 19:49:39.053338 26817 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:39.553164 26817 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test581.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:39.553285 26817 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test581.prototxt
I0428 19:49:39.553624 26817 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:39.553638 26817 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:39.553720 26817 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:39.553786 26817 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:39.553869 26817 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:39.553889 26817 net.cpp:86] Creating Layer mnist
I0428 19:49:39.553895 26817 net.cpp:382] mnist -> data
I0428 19:49:39.553913 26817 net.cpp:382] mnist -> label
I0428 19:49:39.554877 26817 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:39.556938 26817 net.cpp:124] Setting up mnist
I0428 19:49:39.556969 26817 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:39.556977 26817 net.cpp:131] Top shape: 64 (64)
I0428 19:49:39.556979 26817 net.cpp:139] Memory required for data: 200960
I0428 19:49:39.556984 26817 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:39.557011 26817 net.cpp:86] Creating Layer conv0
I0428 19:49:39.557030 26817 net.cpp:408] conv0 <- data
I0428 19:49:39.557041 26817 net.cpp:382] conv0 -> conv0
I0428 19:49:39.785518 26817 net.cpp:124] Setting up conv0
I0428 19:49:39.785544 26817 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:39.785548 26817 net.cpp:139] Memory required for data: 938240
I0428 19:49:39.785562 26817 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:39.785574 26817 net.cpp:86] Creating Layer pool0
I0428 19:49:39.785578 26817 net.cpp:408] pool0 <- conv0
I0428 19:49:39.785583 26817 net.cpp:382] pool0 -> pool0
I0428 19:49:39.785657 26817 net.cpp:124] Setting up pool0
I0428 19:49:39.785662 26817 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:39.785665 26817 net.cpp:139] Memory required for data: 1122560
I0428 19:49:39.785668 26817 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:39.785678 26817 net.cpp:86] Creating Layer conv1
I0428 19:49:39.785681 26817 net.cpp:408] conv1 <- pool0
I0428 19:49:39.785686 26817 net.cpp:382] conv1 -> conv1
I0428 19:49:39.787504 26817 net.cpp:124] Setting up conv1
I0428 19:49:39.787534 26817 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:39.787539 26817 net.cpp:139] Memory required for data: 1204480
I0428 19:49:39.787546 26817 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:39.787554 26817 net.cpp:86] Creating Layer pool1
I0428 19:49:39.787557 26817 net.cpp:408] pool1 <- conv1
I0428 19:49:39.787562 26817 net.cpp:382] pool1 -> pool1
I0428 19:49:39.787598 26817 net.cpp:124] Setting up pool1
I0428 19:49:39.787603 26817 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:39.787607 26817 net.cpp:139] Memory required for data: 1224960
I0428 19:49:39.787609 26817 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:39.787616 26817 net.cpp:86] Creating Layer ip1
I0428 19:49:39.787619 26817 net.cpp:408] ip1 <- pool1
I0428 19:49:39.787623 26817 net.cpp:382] ip1 -> ip1
I0428 19:49:39.788590 26817 net.cpp:124] Setting up ip1
I0428 19:49:39.788602 26817 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:39.788622 26817 net.cpp:139] Memory required for data: 1237760
I0428 19:49:39.788630 26817 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:39.788635 26817 net.cpp:86] Creating Layer relu1
I0428 19:49:39.788640 26817 net.cpp:408] relu1 <- ip1
I0428 19:49:39.788643 26817 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:39.788802 26817 net.cpp:124] Setting up relu1
I0428 19:49:39.788833 26817 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:39.788838 26817 net.cpp:139] Memory required for data: 1250560
I0428 19:49:39.788843 26817 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:39.788852 26817 net.cpp:86] Creating Layer ip2
I0428 19:49:39.788857 26817 net.cpp:408] ip2 <- ip1
I0428 19:49:39.788864 26817 net.cpp:382] ip2 -> ip2
I0428 19:49:39.789012 26817 net.cpp:124] Setting up ip2
I0428 19:49:39.789022 26817 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:39.789027 26817 net.cpp:139] Memory required for data: 1256960
I0428 19:49:39.789036 26817 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:39.789044 26817 net.cpp:86] Creating Layer relu2
I0428 19:49:39.789049 26817 net.cpp:408] relu2 <- ip2
I0428 19:49:39.789055 26817 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:39.790026 26817 net.cpp:124] Setting up relu2
I0428 19:49:39.790057 26817 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:39.790062 26817 net.cpp:139] Memory required for data: 1263360
I0428 19:49:39.790067 26817 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:39.790076 26817 net.cpp:86] Creating Layer ip3
I0428 19:49:39.790081 26817 net.cpp:408] ip3 <- ip2
I0428 19:49:39.790088 26817 net.cpp:382] ip3 -> ip3
I0428 19:49:39.790210 26817 net.cpp:124] Setting up ip3
I0428 19:49:39.790220 26817 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:39.790225 26817 net.cpp:139] Memory required for data: 1265920
I0428 19:49:39.790235 26817 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:39.790243 26817 net.cpp:86] Creating Layer relu3
I0428 19:49:39.790248 26817 net.cpp:408] relu3 <- ip3
I0428 19:49:39.790254 26817 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:39.790467 26817 net.cpp:124] Setting up relu3
I0428 19:49:39.790478 26817 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:39.790482 26817 net.cpp:139] Memory required for data: 1268480
I0428 19:49:39.790487 26817 layer_factory.hpp:77] Creating layer loss
I0428 19:49:39.790494 26817 net.cpp:86] Creating Layer loss
I0428 19:49:39.790498 26817 net.cpp:408] loss <- ip3
I0428 19:49:39.790504 26817 net.cpp:408] loss <- label
I0428 19:49:39.790511 26817 net.cpp:382] loss -> loss
I0428 19:49:39.790532 26817 layer_factory.hpp:77] Creating layer loss
I0428 19:49:39.790799 26817 net.cpp:124] Setting up loss
I0428 19:49:39.790810 26817 net.cpp:131] Top shape: (1)
I0428 19:49:39.790815 26817 net.cpp:134]     with loss weight 1
I0428 19:49:39.790832 26817 net.cpp:139] Memory required for data: 1268484
I0428 19:49:39.790838 26817 net.cpp:200] loss needs backward computation.
I0428 19:49:39.790843 26817 net.cpp:200] relu3 needs backward computation.
I0428 19:49:39.790846 26817 net.cpp:200] ip3 needs backward computation.
I0428 19:49:39.790850 26817 net.cpp:200] relu2 needs backward computation.
I0428 19:49:39.790855 26817 net.cpp:200] ip2 needs backward computation.
I0428 19:49:39.790859 26817 net.cpp:200] relu1 needs backward computation.
I0428 19:49:39.790863 26817 net.cpp:200] ip1 needs backward computation.
I0428 19:49:39.790868 26817 net.cpp:200] pool1 needs backward computation.
I0428 19:49:39.790873 26817 net.cpp:200] conv1 needs backward computation.
I0428 19:49:39.790876 26817 net.cpp:200] pool0 needs backward computation.
I0428 19:49:39.790881 26817 net.cpp:200] conv0 needs backward computation.
I0428 19:49:39.790886 26817 net.cpp:202] mnist does not need backward computation.
I0428 19:49:39.790890 26817 net.cpp:244] This network produces output loss
I0428 19:49:39.790902 26817 net.cpp:257] Network initialization done.
I0428 19:49:39.791456 26817 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test581.prototxt
I0428 19:49:39.791507 26817 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:39.791635 26817 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:39.791754 26817 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:39.791806 26817 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:39.791821 26817 net.cpp:86] Creating Layer mnist
I0428 19:49:39.791827 26817 net.cpp:382] mnist -> data
I0428 19:49:39.791837 26817 net.cpp:382] mnist -> label
I0428 19:49:39.791934 26817 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:39.794682 26817 net.cpp:124] Setting up mnist
I0428 19:49:39.794713 26817 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:39.794721 26817 net.cpp:131] Top shape: 100 (100)
I0428 19:49:39.794725 26817 net.cpp:139] Memory required for data: 314000
I0428 19:49:39.794730 26817 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:39.794739 26817 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:39.794744 26817 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:39.794749 26817 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:39.794759 26817 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:39.794817 26817 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:39.794824 26817 net.cpp:131] Top shape: 100 (100)
I0428 19:49:39.794831 26817 net.cpp:131] Top shape: 100 (100)
I0428 19:49:39.794834 26817 net.cpp:139] Memory required for data: 314800
I0428 19:49:39.794838 26817 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:39.794848 26817 net.cpp:86] Creating Layer conv0
I0428 19:49:39.794853 26817 net.cpp:408] conv0 <- data
I0428 19:49:39.794859 26817 net.cpp:382] conv0 -> conv0
I0428 19:49:39.796891 26817 net.cpp:124] Setting up conv0
I0428 19:49:39.796908 26817 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:39.796928 26817 net.cpp:139] Memory required for data: 1466800
I0428 19:49:39.796941 26817 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:39.796949 26817 net.cpp:86] Creating Layer pool0
I0428 19:49:39.796955 26817 net.cpp:408] pool0 <- conv0
I0428 19:49:39.796962 26817 net.cpp:382] pool0 -> pool0
I0428 19:49:39.797006 26817 net.cpp:124] Setting up pool0
I0428 19:49:39.797013 26817 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:39.797019 26817 net.cpp:139] Memory required for data: 1754800
I0428 19:49:39.797024 26817 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:39.797049 26817 net.cpp:86] Creating Layer conv1
I0428 19:49:39.797055 26817 net.cpp:408] conv1 <- pool0
I0428 19:49:39.797062 26817 net.cpp:382] conv1 -> conv1
I0428 19:49:39.799733 26817 net.cpp:124] Setting up conv1
I0428 19:49:39.799748 26817 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:39.799753 26817 net.cpp:139] Memory required for data: 1882800
I0428 19:49:39.799780 26817 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:39.799788 26817 net.cpp:86] Creating Layer pool1
I0428 19:49:39.799793 26817 net.cpp:408] pool1 <- conv1
I0428 19:49:39.799800 26817 net.cpp:382] pool1 -> pool1
I0428 19:49:39.799924 26817 net.cpp:124] Setting up pool1
I0428 19:49:39.799934 26817 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:39.799939 26817 net.cpp:139] Memory required for data: 1914800
I0428 19:49:39.799944 26817 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:39.799959 26817 net.cpp:86] Creating Layer ip1
I0428 19:49:39.799964 26817 net.cpp:408] ip1 <- pool1
I0428 19:49:39.799978 26817 net.cpp:382] ip1 -> ip1
I0428 19:49:39.800165 26817 net.cpp:124] Setting up ip1
I0428 19:49:39.800176 26817 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:39.800192 26817 net.cpp:139] Memory required for data: 1934800
I0428 19:49:39.800202 26817 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:39.800209 26817 net.cpp:86] Creating Layer relu1
I0428 19:49:39.800213 26817 net.cpp:408] relu1 <- ip1
I0428 19:49:39.800226 26817 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:39.800428 26817 net.cpp:124] Setting up relu1
I0428 19:49:39.800438 26817 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:39.800443 26817 net.cpp:139] Memory required for data: 1954800
I0428 19:49:39.800447 26817 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:39.800457 26817 net.cpp:86] Creating Layer ip2
I0428 19:49:39.800460 26817 net.cpp:408] ip2 <- ip1
I0428 19:49:39.800467 26817 net.cpp:382] ip2 -> ip2
I0428 19:49:39.800595 26817 net.cpp:124] Setting up ip2
I0428 19:49:39.800619 26817 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:39.800631 26817 net.cpp:139] Memory required for data: 1964800
I0428 19:49:39.800637 26817 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:39.800665 26817 net.cpp:86] Creating Layer relu2
I0428 19:49:39.800674 26817 net.cpp:408] relu2 <- ip2
I0428 19:49:39.800681 26817 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:39.800889 26817 net.cpp:124] Setting up relu2
I0428 19:49:39.800918 26817 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:39.800923 26817 net.cpp:139] Memory required for data: 1974800
I0428 19:49:39.800935 26817 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:39.800943 26817 net.cpp:86] Creating Layer ip3
I0428 19:49:39.800948 26817 net.cpp:408] ip3 <- ip2
I0428 19:49:39.800956 26817 net.cpp:382] ip3 -> ip3
I0428 19:49:39.801111 26817 net.cpp:124] Setting up ip3
I0428 19:49:39.801121 26817 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:39.801126 26817 net.cpp:139] Memory required for data: 1978800
I0428 19:49:39.801151 26817 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:39.801157 26817 net.cpp:86] Creating Layer relu3
I0428 19:49:39.801162 26817 net.cpp:408] relu3 <- ip3
I0428 19:49:39.801167 26817 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:39.802261 26817 net.cpp:124] Setting up relu3
I0428 19:49:39.802275 26817 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:39.802281 26817 net.cpp:139] Memory required for data: 1982800
I0428 19:49:39.802286 26817 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:39.802294 26817 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:39.802312 26817 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:39.802320 26817 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:39.802327 26817 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:39.802381 26817 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:39.802397 26817 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:39.802402 26817 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:39.802407 26817 net.cpp:139] Memory required for data: 1990800
I0428 19:49:39.802410 26817 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:39.802422 26817 net.cpp:86] Creating Layer accuracy
I0428 19:49:39.802426 26817 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:39.802431 26817 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:39.802438 26817 net.cpp:382] accuracy -> accuracy
I0428 19:49:39.802446 26817 net.cpp:124] Setting up accuracy
I0428 19:49:39.802453 26817 net.cpp:131] Top shape: (1)
I0428 19:49:39.802456 26817 net.cpp:139] Memory required for data: 1990804
I0428 19:49:39.802460 26817 layer_factory.hpp:77] Creating layer loss
I0428 19:49:39.802466 26817 net.cpp:86] Creating Layer loss
I0428 19:49:39.802470 26817 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:39.802476 26817 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:39.802482 26817 net.cpp:382] loss -> loss
I0428 19:49:39.802490 26817 layer_factory.hpp:77] Creating layer loss
I0428 19:49:39.802760 26817 net.cpp:124] Setting up loss
I0428 19:49:39.802772 26817 net.cpp:131] Top shape: (1)
I0428 19:49:39.802785 26817 net.cpp:134]     with loss weight 1
I0428 19:49:39.802793 26817 net.cpp:139] Memory required for data: 1990808
I0428 19:49:39.802809 26817 net.cpp:200] loss needs backward computation.
I0428 19:49:39.802815 26817 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:39.802821 26817 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:39.802825 26817 net.cpp:200] relu3 needs backward computation.
I0428 19:49:39.802836 26817 net.cpp:200] ip3 needs backward computation.
I0428 19:49:39.802840 26817 net.cpp:200] relu2 needs backward computation.
I0428 19:49:39.802845 26817 net.cpp:200] ip2 needs backward computation.
I0428 19:49:39.802860 26817 net.cpp:200] relu1 needs backward computation.
I0428 19:49:39.802865 26817 net.cpp:200] ip1 needs backward computation.
I0428 19:49:39.802868 26817 net.cpp:200] pool1 needs backward computation.
I0428 19:49:39.802878 26817 net.cpp:200] conv1 needs backward computation.
I0428 19:49:39.802882 26817 net.cpp:200] pool0 needs backward computation.
I0428 19:49:39.802887 26817 net.cpp:200] conv0 needs backward computation.
I0428 19:49:39.802893 26817 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:39.802898 26817 net.cpp:202] mnist does not need backward computation.
I0428 19:49:39.802901 26817 net.cpp:244] This network produces output accuracy
I0428 19:49:39.802906 26817 net.cpp:244] This network produces output loss
I0428 19:49:39.802925 26817 net.cpp:257] Network initialization done.
I0428 19:49:39.802983 26817 solver.cpp:56] Solver scaffolding done.
I0428 19:49:39.803439 26817 caffe.cpp:248] Starting Optimization
I0428 19:49:39.803447 26817 solver.cpp:273] Solving LeNet
I0428 19:49:39.803452 26817 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:39.804592 26817 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:39.809046 26817 blocking_queue.cpp:49] Waiting for data
I0428 19:49:39.878955 26824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:39.879540 26817 solver.cpp:398]     Test net output #0: accuracy = 0.1498
I0428 19:49:39.879561 26817 solver.cpp:398]     Test net output #1: loss = 2.29312 (* 1 = 2.29312 loss)
I0428 19:49:39.882083 26817 solver.cpp:219] Iteration 0 (-4.3721e-31 iter/s, 0.078591s/100 iters), loss = 2.29999
I0428 19:49:39.882112 26817 solver.cpp:238]     Train net output #0: loss = 2.29999 (* 1 = 2.29999 loss)
I0428 19:49:39.882139 26817 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:39.966015 26817 solver.cpp:219] Iteration 100 (1191.98 iter/s, 0.0838943s/100 iters), loss = 1.24542
I0428 19:49:39.966059 26817 solver.cpp:238]     Train net output #0: loss = 1.24542 (* 1 = 1.24542 loss)
I0428 19:49:39.966068 26817 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:40.049207 26817 solver.cpp:219] Iteration 200 (1202.81 iter/s, 0.0831386s/100 iters), loss = 0.823848
I0428 19:49:40.049250 26817 solver.cpp:238]     Train net output #0: loss = 0.823848 (* 1 = 0.823848 loss)
I0428 19:49:40.049258 26817 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:40.132130 26817 solver.cpp:219] Iteration 300 (1206.71 iter/s, 0.0828703s/100 iters), loss = 0.647067
I0428 19:49:40.132174 26817 solver.cpp:238]     Train net output #0: loss = 0.647067 (* 1 = 0.647067 loss)
I0428 19:49:40.132181 26817 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:40.212501 26817 solver.cpp:219] Iteration 400 (1245.06 iter/s, 0.0803174s/100 iters), loss = 0.408645
I0428 19:49:40.212543 26817 solver.cpp:238]     Train net output #0: loss = 0.408645 (* 1 = 0.408645 loss)
I0428 19:49:40.212550 26817 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:40.294471 26817 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:40.369544 26824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:40.370260 26817 solver.cpp:398]     Test net output #0: accuracy = 0.8492
I0428 19:49:40.370291 26817 solver.cpp:398]     Test net output #1: loss = 0.419764 (* 1 = 0.419764 loss)
I0428 19:49:40.371490 26817 solver.cpp:219] Iteration 500 (629.148 iter/s, 0.158945s/100 iters), loss = 0.34264
I0428 19:49:40.371526 26817 solver.cpp:238]     Train net output #0: loss = 0.34264 (* 1 = 0.34264 loss)
I0428 19:49:40.371564 26817 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:40.469359 26817 solver.cpp:219] Iteration 600 (1022.23 iter/s, 0.0978252s/100 iters), loss = 0.320693
I0428 19:49:40.469388 26817 solver.cpp:238]     Train net output #0: loss = 0.320693 (* 1 = 0.320693 loss)
I0428 19:49:40.469396 26817 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:40.550734 26817 solver.cpp:219] Iteration 700 (1229.45 iter/s, 0.0813373s/100 iters), loss = 0.545499
I0428 19:49:40.550791 26817 solver.cpp:238]     Train net output #0: loss = 0.545499 (* 1 = 0.545499 loss)
I0428 19:49:40.550815 26817 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:40.635248 26817 solver.cpp:219] Iteration 800 (1184.16 iter/s, 0.0844483s/100 iters), loss = 0.408068
I0428 19:49:40.635291 26817 solver.cpp:238]     Train net output #0: loss = 0.408068 (* 1 = 0.408068 loss)
I0428 19:49:40.635298 26817 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:40.716630 26817 solver.cpp:219] Iteration 900 (1229.32 iter/s, 0.0813455s/100 iters), loss = 0.496681
I0428 19:49:40.716672 26817 solver.cpp:238]     Train net output #0: loss = 0.496681 (* 1 = 0.496681 loss)
I0428 19:49:40.716681 26817 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:40.743870 26823 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:40.797475 26817 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:40.798355 26817 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:40.798974 26817 solver.cpp:311] Iteration 1000, loss = 0.501267
I0428 19:49:40.799005 26817 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:40.874569 26824 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:40.875324 26817 solver.cpp:398]     Test net output #0: accuracy = 0.8695
I0428 19:49:40.875356 26817 solver.cpp:398]     Test net output #1: loss = 0.348448 (* 1 = 0.348448 loss)
I0428 19:49:40.875366 26817 solver.cpp:316] Optimization Done.
I0428 19:49:40.875372 26817 caffe.cpp:259] Optimization Done.
