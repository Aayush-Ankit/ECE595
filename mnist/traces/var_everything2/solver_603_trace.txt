I0428 19:50:23.367377 27002 caffe.cpp:218] Using GPUs 0
I0428 19:50:23.404676 27002 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:23.916426 27002 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test603.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:23.916573 27002 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test603.prototxt
I0428 19:50:23.916993 27002 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:23.917018 27002 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:23.917119 27002 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:23.917201 27002 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:23.917299 27002 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:23.917323 27002 net.cpp:86] Creating Layer mnist
I0428 19:50:23.917332 27002 net.cpp:382] mnist -> data
I0428 19:50:23.917356 27002 net.cpp:382] mnist -> label
I0428 19:50:23.918449 27002 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:23.920913 27002 net.cpp:124] Setting up mnist
I0428 19:50:23.920930 27002 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:23.920936 27002 net.cpp:131] Top shape: 64 (64)
I0428 19:50:23.920939 27002 net.cpp:139] Memory required for data: 200960
I0428 19:50:23.920946 27002 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:23.920985 27002 net.cpp:86] Creating Layer conv0
I0428 19:50:23.921006 27002 net.cpp:408] conv0 <- data
I0428 19:50:23.921020 27002 net.cpp:382] conv0 -> conv0
I0428 19:50:24.177779 27002 net.cpp:124] Setting up conv0
I0428 19:50:24.177805 27002 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:24.177809 27002 net.cpp:139] Memory required for data: 938240
I0428 19:50:24.177824 27002 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:24.177835 27002 net.cpp:86] Creating Layer pool0
I0428 19:50:24.177839 27002 net.cpp:408] pool0 <- conv0
I0428 19:50:24.177845 27002 net.cpp:382] pool0 -> pool0
I0428 19:50:24.177904 27002 net.cpp:124] Setting up pool0
I0428 19:50:24.177909 27002 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:24.177911 27002 net.cpp:139] Memory required for data: 1122560
I0428 19:50:24.177914 27002 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:24.177924 27002 net.cpp:86] Creating Layer conv1
I0428 19:50:24.177927 27002 net.cpp:408] conv1 <- pool0
I0428 19:50:24.177932 27002 net.cpp:382] conv1 -> conv1
I0428 19:50:24.180738 27002 net.cpp:124] Setting up conv1
I0428 19:50:24.180768 27002 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:24.180773 27002 net.cpp:139] Memory required for data: 1286400
I0428 19:50:24.180797 27002 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:24.180804 27002 net.cpp:86] Creating Layer pool1
I0428 19:50:24.180809 27002 net.cpp:408] pool1 <- conv1
I0428 19:50:24.180835 27002 net.cpp:382] pool1 -> pool1
I0428 19:50:24.180877 27002 net.cpp:124] Setting up pool1
I0428 19:50:24.180883 27002 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:24.180886 27002 net.cpp:139] Memory required for data: 1327360
I0428 19:50:24.180889 27002 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:24.180896 27002 net.cpp:86] Creating Layer ip1
I0428 19:50:24.180899 27002 net.cpp:408] ip1 <- pool1
I0428 19:50:24.180904 27002 net.cpp:382] ip1 -> ip1
I0428 19:50:24.181016 27002 net.cpp:124] Setting up ip1
I0428 19:50:24.181025 27002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:24.181028 27002 net.cpp:139] Memory required for data: 1329920
I0428 19:50:24.181051 27002 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:24.181056 27002 net.cpp:86] Creating Layer relu1
I0428 19:50:24.181059 27002 net.cpp:408] relu1 <- ip1
I0428 19:50:24.181064 27002 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:24.181269 27002 net.cpp:124] Setting up relu1
I0428 19:50:24.181278 27002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:24.181282 27002 net.cpp:139] Memory required for data: 1332480
I0428 19:50:24.181284 27002 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:24.181289 27002 net.cpp:86] Creating Layer ip2
I0428 19:50:24.181293 27002 net.cpp:408] ip2 <- ip1
I0428 19:50:24.181298 27002 net.cpp:382] ip2 -> ip2
I0428 19:50:24.181387 27002 net.cpp:124] Setting up ip2
I0428 19:50:24.181393 27002 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:24.181396 27002 net.cpp:139] Memory required for data: 1345280
I0428 19:50:24.181401 27002 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:24.181407 27002 net.cpp:86] Creating Layer relu2
I0428 19:50:24.181411 27002 net.cpp:408] relu2 <- ip2
I0428 19:50:24.181413 27002 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:24.182215 27002 net.cpp:124] Setting up relu2
I0428 19:50:24.182227 27002 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:24.182246 27002 net.cpp:139] Memory required for data: 1358080
I0428 19:50:24.182250 27002 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:24.182255 27002 net.cpp:86] Creating Layer ip3
I0428 19:50:24.182258 27002 net.cpp:408] ip3 <- ip2
I0428 19:50:24.182265 27002 net.cpp:382] ip3 -> ip3
I0428 19:50:24.182360 27002 net.cpp:124] Setting up ip3
I0428 19:50:24.182368 27002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:24.182370 27002 net.cpp:139] Memory required for data: 1360640
I0428 19:50:24.182377 27002 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:24.182382 27002 net.cpp:86] Creating Layer relu3
I0428 19:50:24.182385 27002 net.cpp:408] relu3 <- ip3
I0428 19:50:24.182389 27002 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:24.182546 27002 net.cpp:124] Setting up relu3
I0428 19:50:24.182554 27002 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:24.182557 27002 net.cpp:139] Memory required for data: 1363200
I0428 19:50:24.182560 27002 layer_factory.hpp:77] Creating layer loss
I0428 19:50:24.182566 27002 net.cpp:86] Creating Layer loss
I0428 19:50:24.182569 27002 net.cpp:408] loss <- ip3
I0428 19:50:24.182574 27002 net.cpp:408] loss <- label
I0428 19:50:24.182579 27002 net.cpp:382] loss -> loss
I0428 19:50:24.182595 27002 layer_factory.hpp:77] Creating layer loss
I0428 19:50:24.182853 27002 net.cpp:124] Setting up loss
I0428 19:50:24.182862 27002 net.cpp:131] Top shape: (1)
I0428 19:50:24.182867 27002 net.cpp:134]     with loss weight 1
I0428 19:50:24.182880 27002 net.cpp:139] Memory required for data: 1363204
I0428 19:50:24.182884 27002 net.cpp:200] loss needs backward computation.
I0428 19:50:24.182888 27002 net.cpp:200] relu3 needs backward computation.
I0428 19:50:24.182890 27002 net.cpp:200] ip3 needs backward computation.
I0428 19:50:24.182894 27002 net.cpp:200] relu2 needs backward computation.
I0428 19:50:24.182896 27002 net.cpp:200] ip2 needs backward computation.
I0428 19:50:24.182899 27002 net.cpp:200] relu1 needs backward computation.
I0428 19:50:24.182903 27002 net.cpp:200] ip1 needs backward computation.
I0428 19:50:24.182905 27002 net.cpp:200] pool1 needs backward computation.
I0428 19:50:24.182909 27002 net.cpp:200] conv1 needs backward computation.
I0428 19:50:24.182911 27002 net.cpp:200] pool0 needs backward computation.
I0428 19:50:24.182914 27002 net.cpp:200] conv0 needs backward computation.
I0428 19:50:24.182919 27002 net.cpp:202] mnist does not need backward computation.
I0428 19:50:24.182921 27002 net.cpp:244] This network produces output loss
I0428 19:50:24.182945 27002 net.cpp:257] Network initialization done.
I0428 19:50:24.183324 27002 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test603.prototxt
I0428 19:50:24.183382 27002 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:24.183473 27002 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:24.183552 27002 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:24.183609 27002 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:24.183635 27002 net.cpp:86] Creating Layer mnist
I0428 19:50:24.183640 27002 net.cpp:382] mnist -> data
I0428 19:50:24.183647 27002 net.cpp:382] mnist -> label
I0428 19:50:24.183743 27002 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:24.185981 27002 net.cpp:124] Setting up mnist
I0428 19:50:24.186010 27002 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:24.186015 27002 net.cpp:131] Top shape: 100 (100)
I0428 19:50:24.186019 27002 net.cpp:139] Memory required for data: 314000
I0428 19:50:24.186022 27002 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:24.186043 27002 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:24.186046 27002 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:24.186051 27002 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:24.186058 27002 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:24.186106 27002 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:24.186111 27002 net.cpp:131] Top shape: 100 (100)
I0428 19:50:24.186131 27002 net.cpp:131] Top shape: 100 (100)
I0428 19:50:24.186133 27002 net.cpp:139] Memory required for data: 314800
I0428 19:50:24.186136 27002 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:24.186144 27002 net.cpp:86] Creating Layer conv0
I0428 19:50:24.186147 27002 net.cpp:408] conv0 <- data
I0428 19:50:24.186152 27002 net.cpp:382] conv0 -> conv0
I0428 19:50:24.187906 27002 net.cpp:124] Setting up conv0
I0428 19:50:24.187919 27002 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:24.187922 27002 net.cpp:139] Memory required for data: 1466800
I0428 19:50:24.187932 27002 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:24.187938 27002 net.cpp:86] Creating Layer pool0
I0428 19:50:24.187957 27002 net.cpp:408] pool0 <- conv0
I0428 19:50:24.187963 27002 net.cpp:382] pool0 -> pool0
I0428 19:50:24.188014 27002 net.cpp:124] Setting up pool0
I0428 19:50:24.188019 27002 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:24.188022 27002 net.cpp:139] Memory required for data: 1754800
I0428 19:50:24.188024 27002 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:24.188033 27002 net.cpp:86] Creating Layer conv1
I0428 19:50:24.188036 27002 net.cpp:408] conv1 <- pool0
I0428 19:50:24.188042 27002 net.cpp:382] conv1 -> conv1
I0428 19:50:24.190294 27002 net.cpp:124] Setting up conv1
I0428 19:50:24.190309 27002 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:24.190312 27002 net.cpp:139] Memory required for data: 2010800
I0428 19:50:24.190321 27002 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:24.190345 27002 net.cpp:86] Creating Layer pool1
I0428 19:50:24.190348 27002 net.cpp:408] pool1 <- conv1
I0428 19:50:24.190353 27002 net.cpp:382] pool1 -> pool1
I0428 19:50:24.190392 27002 net.cpp:124] Setting up pool1
I0428 19:50:24.190412 27002 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:24.190414 27002 net.cpp:139] Memory required for data: 2074800
I0428 19:50:24.190418 27002 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:24.190423 27002 net.cpp:86] Creating Layer ip1
I0428 19:50:24.190425 27002 net.cpp:408] ip1 <- pool1
I0428 19:50:24.190445 27002 net.cpp:382] ip1 -> ip1
I0428 19:50:24.190592 27002 net.cpp:124] Setting up ip1
I0428 19:50:24.190598 27002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:24.190613 27002 net.cpp:139] Memory required for data: 2078800
I0428 19:50:24.190619 27002 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:24.190624 27002 net.cpp:86] Creating Layer relu1
I0428 19:50:24.190629 27002 net.cpp:408] relu1 <- ip1
I0428 19:50:24.190634 27002 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:24.190862 27002 net.cpp:124] Setting up relu1
I0428 19:50:24.190872 27002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:24.190876 27002 net.cpp:139] Memory required for data: 2082800
I0428 19:50:24.190878 27002 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:24.190886 27002 net.cpp:86] Creating Layer ip2
I0428 19:50:24.190896 27002 net.cpp:408] ip2 <- ip1
I0428 19:50:24.190901 27002 net.cpp:382] ip2 -> ip2
I0428 19:50:24.191018 27002 net.cpp:124] Setting up ip2
I0428 19:50:24.191026 27002 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:24.191028 27002 net.cpp:139] Memory required for data: 2102800
I0428 19:50:24.191033 27002 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:24.191038 27002 net.cpp:86] Creating Layer relu2
I0428 19:50:24.191041 27002 net.cpp:408] relu2 <- ip2
I0428 19:50:24.191052 27002 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:24.191231 27002 net.cpp:124] Setting up relu2
I0428 19:50:24.191239 27002 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:24.191242 27002 net.cpp:139] Memory required for data: 2122800
I0428 19:50:24.191246 27002 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:24.191252 27002 net.cpp:86] Creating Layer ip3
I0428 19:50:24.191256 27002 net.cpp:408] ip3 <- ip2
I0428 19:50:24.191259 27002 net.cpp:382] ip3 -> ip3
I0428 19:50:24.191360 27002 net.cpp:124] Setting up ip3
I0428 19:50:24.191366 27002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:24.191370 27002 net.cpp:139] Memory required for data: 2126800
I0428 19:50:24.191377 27002 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:24.191381 27002 net.cpp:86] Creating Layer relu3
I0428 19:50:24.191391 27002 net.cpp:408] relu3 <- ip3
I0428 19:50:24.191395 27002 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:24.192224 27002 net.cpp:124] Setting up relu3
I0428 19:50:24.192236 27002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:24.192240 27002 net.cpp:139] Memory required for data: 2130800
I0428 19:50:24.192243 27002 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:24.192250 27002 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:24.192253 27002 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:24.192258 27002 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:24.192265 27002 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:24.192353 27002 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:24.192359 27002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:24.192363 27002 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:24.192366 27002 net.cpp:139] Memory required for data: 2138800
I0428 19:50:24.192368 27002 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:24.192378 27002 net.cpp:86] Creating Layer accuracy
I0428 19:50:24.192381 27002 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:24.192385 27002 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:24.192389 27002 net.cpp:382] accuracy -> accuracy
I0428 19:50:24.192395 27002 net.cpp:124] Setting up accuracy
I0428 19:50:24.192399 27002 net.cpp:131] Top shape: (1)
I0428 19:50:24.192402 27002 net.cpp:139] Memory required for data: 2138804
I0428 19:50:24.192404 27002 layer_factory.hpp:77] Creating layer loss
I0428 19:50:24.192409 27002 net.cpp:86] Creating Layer loss
I0428 19:50:24.192411 27002 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:24.192416 27002 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:24.192421 27002 net.cpp:382] loss -> loss
I0428 19:50:24.192427 27002 layer_factory.hpp:77] Creating layer loss
I0428 19:50:24.192682 27002 net.cpp:124] Setting up loss
I0428 19:50:24.192692 27002 net.cpp:131] Top shape: (1)
I0428 19:50:24.192694 27002 net.cpp:134]     with loss weight 1
I0428 19:50:24.192700 27002 net.cpp:139] Memory required for data: 2138808
I0428 19:50:24.192711 27002 net.cpp:200] loss needs backward computation.
I0428 19:50:24.192715 27002 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:24.192719 27002 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:24.192721 27002 net.cpp:200] relu3 needs backward computation.
I0428 19:50:24.192724 27002 net.cpp:200] ip3 needs backward computation.
I0428 19:50:24.192739 27002 net.cpp:200] relu2 needs backward computation.
I0428 19:50:24.192741 27002 net.cpp:200] ip2 needs backward computation.
I0428 19:50:24.192744 27002 net.cpp:200] relu1 needs backward computation.
I0428 19:50:24.192746 27002 net.cpp:200] ip1 needs backward computation.
I0428 19:50:24.192749 27002 net.cpp:200] pool1 needs backward computation.
I0428 19:50:24.192752 27002 net.cpp:200] conv1 needs backward computation.
I0428 19:50:24.192754 27002 net.cpp:200] pool0 needs backward computation.
I0428 19:50:24.192757 27002 net.cpp:200] conv0 needs backward computation.
I0428 19:50:24.192761 27002 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:24.192764 27002 net.cpp:202] mnist does not need backward computation.
I0428 19:50:24.192766 27002 net.cpp:244] This network produces output accuracy
I0428 19:50:24.192770 27002 net.cpp:244] This network produces output loss
I0428 19:50:24.192780 27002 net.cpp:257] Network initialization done.
I0428 19:50:24.192858 27002 solver.cpp:56] Solver scaffolding done.
I0428 19:50:24.193255 27002 caffe.cpp:248] Starting Optimization
I0428 19:50:24.193261 27002 solver.cpp:273] Solving LeNet
I0428 19:50:24.193264 27002 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:24.194126 27002 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:24.197707 27002 blocking_queue.cpp:49] Waiting for data
I0428 19:50:24.263037 27009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:24.263566 27002 solver.cpp:398]     Test net output #0: accuracy = 0.0596
I0428 19:50:24.263586 27002 solver.cpp:398]     Test net output #1: loss = 2.31542 (* 1 = 2.31542 loss)
I0428 19:50:24.265497 27002 solver.cpp:219] Iteration 0 (-1.29687e-30 iter/s, 0.0722072s/100 iters), loss = 2.3002
I0428 19:50:24.265521 27002 solver.cpp:238]     Train net output #0: loss = 2.3002 (* 1 = 2.3002 loss)
I0428 19:50:24.265547 27002 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:24.340275 27002 solver.cpp:219] Iteration 100 (1337.94 iter/s, 0.0747418s/100 iters), loss = 0.966458
I0428 19:50:24.340301 27002 solver.cpp:238]     Train net output #0: loss = 0.966458 (* 1 = 0.966458 loss)
I0428 19:50:24.340322 27002 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:24.415478 27002 solver.cpp:219] Iteration 200 (1330.39 iter/s, 0.0751657s/100 iters), loss = 0.293263
I0428 19:50:24.415518 27002 solver.cpp:238]     Train net output #0: loss = 0.293263 (* 1 = 0.293263 loss)
I0428 19:50:24.415526 27002 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:24.490463 27002 solver.cpp:219] Iteration 300 (1334.47 iter/s, 0.0749364s/100 iters), loss = 0.250714
I0428 19:50:24.490489 27002 solver.cpp:238]     Train net output #0: loss = 0.250714 (* 1 = 0.250714 loss)
I0428 19:50:24.490494 27002 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:24.563908 27002 solver.cpp:219] Iteration 400 (1362.18 iter/s, 0.0734116s/100 iters), loss = 0.214578
I0428 19:50:24.563947 27002 solver.cpp:238]     Train net output #0: loss = 0.214578 (* 1 = 0.214578 loss)
I0428 19:50:24.563953 27002 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:24.635792 27002 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:24.701761 27009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:24.702301 27002 solver.cpp:398]     Test net output #0: accuracy = 0.9437
I0428 19:50:24.702322 27002 solver.cpp:398]     Test net output #1: loss = 0.183518 (* 1 = 0.183518 loss)
I0428 19:50:24.703156 27002 solver.cpp:219] Iteration 500 (718.329 iter/s, 0.139212s/100 iters), loss = 0.171306
I0428 19:50:24.703197 27002 solver.cpp:238]     Train net output #0: loss = 0.171306 (* 1 = 0.171306 loss)
I0428 19:50:24.703203 27002 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:24.783445 27002 solver.cpp:219] Iteration 600 (1246.25 iter/s, 0.0802405s/100 iters), loss = 0.149101
I0428 19:50:24.783469 27002 solver.cpp:238]     Train net output #0: loss = 0.149101 (* 1 = 0.149101 loss)
I0428 19:50:24.783491 27002 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:24.861402 27002 solver.cpp:219] Iteration 700 (1283.33 iter/s, 0.0779223s/100 iters), loss = 0.203351
I0428 19:50:24.861425 27002 solver.cpp:238]     Train net output #0: loss = 0.203351 (* 1 = 0.203351 loss)
I0428 19:50:24.861449 27002 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:24.935506 27002 solver.cpp:219] Iteration 800 (1350.04 iter/s, 0.0740721s/100 iters), loss = 0.441488
I0428 19:50:24.935530 27002 solver.cpp:238]     Train net output #0: loss = 0.441488 (* 1 = 0.441488 loss)
I0428 19:50:24.935536 27002 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:25.012082 27002 solver.cpp:219] Iteration 900 (1306.45 iter/s, 0.0765431s/100 iters), loss = 0.23034
I0428 19:50:25.012122 27002 solver.cpp:238]     Train net output #0: loss = 0.23034 (* 1 = 0.23034 loss)
I0428 19:50:25.012128 27002 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:25.037629 27008 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:25.087430 27002 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:25.088201 27002 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:25.088707 27002 solver.cpp:311] Iteration 1000, loss = 0.112698
I0428 19:50:25.088721 27002 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:25.164511 27009 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:25.165072 27002 solver.cpp:398]     Test net output #0: accuracy = 0.9637
I0428 19:50:25.165091 27002 solver.cpp:398]     Test net output #1: loss = 0.115069 (* 1 = 0.115069 loss)
I0428 19:50:25.165096 27002 solver.cpp:316] Optimization Done.
I0428 19:50:25.165101 27002 caffe.cpp:259] Optimization Done.
