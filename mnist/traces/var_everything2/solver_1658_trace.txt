I0428 20:37:56.353569  5058 caffe.cpp:218] Using GPUs 0
I0428 20:37:56.391538  5058 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:56.903420  5058 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1658.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:56.903561  5058 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1658.prototxt
I0428 20:37:56.903996  5058 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:56.904017  5058 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:56.904120  5058 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:56.904201  5058 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:56.904302  5058 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:56.904325  5058 net.cpp:86] Creating Layer mnist
I0428 20:37:56.904333  5058 net.cpp:382] mnist -> data
I0428 20:37:56.904359  5058 net.cpp:382] mnist -> label
I0428 20:37:56.905475  5058 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:56.907946  5058 net.cpp:124] Setting up mnist
I0428 20:37:56.907965  5058 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:56.907971  5058 net.cpp:131] Top shape: 64 (64)
I0428 20:37:56.907974  5058 net.cpp:139] Memory required for data: 200960
I0428 20:37:56.907981  5058 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:56.907999  5058 net.cpp:86] Creating Layer conv0
I0428 20:37:56.908020  5058 net.cpp:408] conv0 <- data
I0428 20:37:56.908031  5058 net.cpp:382] conv0 -> conv0
I0428 20:37:57.190022  5058 net.cpp:124] Setting up conv0
I0428 20:37:57.190049  5058 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:57.190053  5058 net.cpp:139] Memory required for data: 14946560
I0428 20:37:57.190069  5058 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:57.190089  5058 net.cpp:86] Creating Layer pool0
I0428 20:37:57.190093  5058 net.cpp:408] pool0 <- conv0
I0428 20:37:57.190099  5058 net.cpp:382] pool0 -> pool0
I0428 20:37:57.190145  5058 net.cpp:124] Setting up pool0
I0428 20:37:57.190151  5058 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:57.190153  5058 net.cpp:139] Memory required for data: 18632960
I0428 20:37:57.190156  5058 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:57.190168  5058 net.cpp:86] Creating Layer conv1
I0428 20:37:57.190172  5058 net.cpp:408] conv1 <- pool0
I0428 20:37:57.190177  5058 net.cpp:382] conv1 -> conv1
I0428 20:37:57.194070  5058 net.cpp:124] Setting up conv1
I0428 20:37:57.194084  5058 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:57.194087  5058 net.cpp:139] Memory required for data: 20271360
I0428 20:37:57.194095  5058 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:57.194104  5058 net.cpp:86] Creating Layer pool1
I0428 20:37:57.194108  5058 net.cpp:408] pool1 <- conv1
I0428 20:37:57.194111  5058 net.cpp:382] pool1 -> pool1
I0428 20:37:57.194147  5058 net.cpp:124] Setting up pool1
I0428 20:37:57.194152  5058 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:57.194154  5058 net.cpp:139] Memory required for data: 20680960
I0428 20:37:57.194157  5058 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:57.194164  5058 net.cpp:86] Creating Layer ip1
I0428 20:37:57.194167  5058 net.cpp:408] ip1 <- pool1
I0428 20:37:57.194171  5058 net.cpp:382] ip1 -> ip1
I0428 20:37:57.195122  5058 net.cpp:124] Setting up ip1
I0428 20:37:57.195133  5058 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:57.195152  5058 net.cpp:139] Memory required for data: 20683520
I0428 20:37:57.195159  5058 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:57.195166  5058 net.cpp:86] Creating Layer relu1
I0428 20:37:57.195169  5058 net.cpp:408] relu1 <- ip1
I0428 20:37:57.195173  5058 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:57.195338  5058 net.cpp:124] Setting up relu1
I0428 20:37:57.195346  5058 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:57.195349  5058 net.cpp:139] Memory required for data: 20686080
I0428 20:37:57.195353  5058 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:57.195359  5058 net.cpp:86] Creating Layer ip2
I0428 20:37:57.195363  5058 net.cpp:408] ip2 <- ip1
I0428 20:37:57.195369  5058 net.cpp:382] ip2 -> ip2
I0428 20:37:57.195477  5058 net.cpp:124] Setting up ip2
I0428 20:37:57.195482  5058 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:37:57.195485  5058 net.cpp:139] Memory required for data: 20698880
I0428 20:37:57.195490  5058 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:57.195497  5058 net.cpp:86] Creating Layer relu2
I0428 20:37:57.195499  5058 net.cpp:408] relu2 <- ip2
I0428 20:37:57.195502  5058 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:57.196200  5058 net.cpp:124] Setting up relu2
I0428 20:37:57.196213  5058 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:37:57.196215  5058 net.cpp:139] Memory required for data: 20711680
I0428 20:37:57.196218  5058 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:57.196226  5058 net.cpp:86] Creating Layer ip3
I0428 20:37:57.196229  5058 net.cpp:408] ip3 <- ip2
I0428 20:37:57.196235  5058 net.cpp:382] ip3 -> ip3
I0428 20:37:57.196337  5058 net.cpp:124] Setting up ip3
I0428 20:37:57.196344  5058 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:57.196347  5058 net.cpp:139] Memory required for data: 20714240
I0428 20:37:57.196354  5058 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:57.196360  5058 net.cpp:86] Creating Layer relu3
I0428 20:37:57.196362  5058 net.cpp:408] relu3 <- ip3
I0428 20:37:57.196382  5058 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:57.196533  5058 net.cpp:124] Setting up relu3
I0428 20:37:57.196542  5058 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:57.196544  5058 net.cpp:139] Memory required for data: 20716800
I0428 20:37:57.196547  5058 layer_factory.hpp:77] Creating layer loss
I0428 20:37:57.196557  5058 net.cpp:86] Creating Layer loss
I0428 20:37:57.196560  5058 net.cpp:408] loss <- ip3
I0428 20:37:57.196563  5058 net.cpp:408] loss <- label
I0428 20:37:57.196570  5058 net.cpp:382] loss -> loss
I0428 20:37:57.196583  5058 layer_factory.hpp:77] Creating layer loss
I0428 20:37:57.196805  5058 net.cpp:124] Setting up loss
I0428 20:37:57.196835  5058 net.cpp:131] Top shape: (1)
I0428 20:37:57.196837  5058 net.cpp:134]     with loss weight 1
I0428 20:37:57.196851  5058 net.cpp:139] Memory required for data: 20716804
I0428 20:37:57.196854  5058 net.cpp:200] loss needs backward computation.
I0428 20:37:57.196858  5058 net.cpp:200] relu3 needs backward computation.
I0428 20:37:57.196861  5058 net.cpp:200] ip3 needs backward computation.
I0428 20:37:57.196863  5058 net.cpp:200] relu2 needs backward computation.
I0428 20:37:57.196866  5058 net.cpp:200] ip2 needs backward computation.
I0428 20:37:57.196868  5058 net.cpp:200] relu1 needs backward computation.
I0428 20:37:57.196871  5058 net.cpp:200] ip1 needs backward computation.
I0428 20:37:57.196874  5058 net.cpp:200] pool1 needs backward computation.
I0428 20:37:57.196877  5058 net.cpp:200] conv1 needs backward computation.
I0428 20:37:57.196880  5058 net.cpp:200] pool0 needs backward computation.
I0428 20:37:57.196883  5058 net.cpp:200] conv0 needs backward computation.
I0428 20:37:57.196887  5058 net.cpp:202] mnist does not need backward computation.
I0428 20:37:57.196889  5058 net.cpp:244] This network produces output loss
I0428 20:37:57.196898  5058 net.cpp:257] Network initialization done.
I0428 20:37:57.197229  5058 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1658.prototxt
I0428 20:37:57.197254  5058 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:57.197345  5058 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:57.197423  5058 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:57.197464  5058 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:57.197475  5058 net.cpp:86] Creating Layer mnist
I0428 20:37:57.197479  5058 net.cpp:382] mnist -> data
I0428 20:37:57.197487  5058 net.cpp:382] mnist -> label
I0428 20:37:57.197572  5058 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:57.199376  5058 net.cpp:124] Setting up mnist
I0428 20:37:57.199389  5058 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:57.199405  5058 net.cpp:131] Top shape: 100 (100)
I0428 20:37:57.199407  5058 net.cpp:139] Memory required for data: 314000
I0428 20:37:57.199411  5058 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:57.199417  5058 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:57.199420  5058 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:57.199425  5058 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:57.199430  5058 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:57.199479  5058 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:57.199486  5058 net.cpp:131] Top shape: 100 (100)
I0428 20:37:57.199489  5058 net.cpp:131] Top shape: 100 (100)
I0428 20:37:57.199491  5058 net.cpp:139] Memory required for data: 314800
I0428 20:37:57.199494  5058 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:57.199502  5058 net.cpp:86] Creating Layer conv0
I0428 20:37:57.199506  5058 net.cpp:408] conv0 <- data
I0428 20:37:57.199512  5058 net.cpp:382] conv0 -> conv0
I0428 20:37:57.201268  5058 net.cpp:124] Setting up conv0
I0428 20:37:57.201283  5058 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:57.201287  5058 net.cpp:139] Memory required for data: 23354800
I0428 20:37:57.201295  5058 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:57.201319  5058 net.cpp:86] Creating Layer pool0
I0428 20:37:57.201323  5058 net.cpp:408] pool0 <- conv0
I0428 20:37:57.201328  5058 net.cpp:382] pool0 -> pool0
I0428 20:37:57.201364  5058 net.cpp:124] Setting up pool0
I0428 20:37:57.201370  5058 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:57.201373  5058 net.cpp:139] Memory required for data: 29114800
I0428 20:37:57.201376  5058 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:57.201385  5058 net.cpp:86] Creating Layer conv1
I0428 20:37:57.201388  5058 net.cpp:408] conv1 <- pool0
I0428 20:37:57.201393  5058 net.cpp:382] conv1 -> conv1
I0428 20:37:57.204310  5058 net.cpp:124] Setting up conv1
I0428 20:37:57.204324  5058 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:57.204342  5058 net.cpp:139] Memory required for data: 31674800
I0428 20:37:57.204351  5058 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:57.204358  5058 net.cpp:86] Creating Layer pool1
I0428 20:37:57.204361  5058 net.cpp:408] pool1 <- conv1
I0428 20:37:57.204368  5058 net.cpp:382] pool1 -> pool1
I0428 20:37:57.204421  5058 net.cpp:124] Setting up pool1
I0428 20:37:57.204426  5058 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:57.204429  5058 net.cpp:139] Memory required for data: 32314800
I0428 20:37:57.204432  5058 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:57.204439  5058 net.cpp:86] Creating Layer ip1
I0428 20:37:57.204442  5058 net.cpp:408] ip1 <- pool1
I0428 20:37:57.204447  5058 net.cpp:382] ip1 -> ip1
I0428 20:37:57.204632  5058 net.cpp:124] Setting up ip1
I0428 20:37:57.204650  5058 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:57.204681  5058 net.cpp:139] Memory required for data: 32318800
I0428 20:37:57.204689  5058 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:57.204694  5058 net.cpp:86] Creating Layer relu1
I0428 20:37:57.204704  5058 net.cpp:408] relu1 <- ip1
I0428 20:37:57.204707  5058 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:57.204933  5058 net.cpp:124] Setting up relu1
I0428 20:37:57.204944  5058 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:57.204947  5058 net.cpp:139] Memory required for data: 32322800
I0428 20:37:57.204951  5058 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:57.204957  5058 net.cpp:86] Creating Layer ip2
I0428 20:37:57.204960  5058 net.cpp:408] ip2 <- ip1
I0428 20:37:57.204967  5058 net.cpp:382] ip2 -> ip2
I0428 20:37:57.205127  5058 net.cpp:124] Setting up ip2
I0428 20:37:57.205134  5058 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:37:57.205137  5058 net.cpp:139] Memory required for data: 32342800
I0428 20:37:57.205157  5058 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:57.205162  5058 net.cpp:86] Creating Layer relu2
I0428 20:37:57.205164  5058 net.cpp:408] relu2 <- ip2
I0428 20:37:57.205171  5058 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:57.205319  5058 net.cpp:124] Setting up relu2
I0428 20:37:57.205327  5058 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:37:57.205330  5058 net.cpp:139] Memory required for data: 32362800
I0428 20:37:57.205334  5058 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:57.205340  5058 net.cpp:86] Creating Layer ip3
I0428 20:37:57.205343  5058 net.cpp:408] ip3 <- ip2
I0428 20:37:57.205348  5058 net.cpp:382] ip3 -> ip3
I0428 20:37:57.205479  5058 net.cpp:124] Setting up ip3
I0428 20:37:57.205487  5058 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:57.205489  5058 net.cpp:139] Memory required for data: 32366800
I0428 20:37:57.205497  5058 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:57.205502  5058 net.cpp:86] Creating Layer relu3
I0428 20:37:57.205505  5058 net.cpp:408] relu3 <- ip3
I0428 20:37:57.205510  5058 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:57.206336  5058 net.cpp:124] Setting up relu3
I0428 20:37:57.206348  5058 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:57.206351  5058 net.cpp:139] Memory required for data: 32370800
I0428 20:37:57.206356  5058 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:57.206362  5058 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:57.206365  5058 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:57.206370  5058 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:57.206377  5058 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:57.206444  5058 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:57.206451  5058 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:57.206455  5058 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:57.206463  5058 net.cpp:139] Memory required for data: 32378800
I0428 20:37:57.206466  5058 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:57.206476  5058 net.cpp:86] Creating Layer accuracy
I0428 20:37:57.206480  5058 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:57.206485  5058 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:57.206490  5058 net.cpp:382] accuracy -> accuracy
I0428 20:37:57.206496  5058 net.cpp:124] Setting up accuracy
I0428 20:37:57.206501  5058 net.cpp:131] Top shape: (1)
I0428 20:37:57.206508  5058 net.cpp:139] Memory required for data: 32378804
I0428 20:37:57.206511  5058 layer_factory.hpp:77] Creating layer loss
I0428 20:37:57.206532  5058 net.cpp:86] Creating Layer loss
I0428 20:37:57.206535  5058 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:57.206539  5058 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:57.206544  5058 net.cpp:382] loss -> loss
I0428 20:37:57.206567  5058 layer_factory.hpp:77] Creating layer loss
I0428 20:37:57.206822  5058 net.cpp:124] Setting up loss
I0428 20:37:57.206831  5058 net.cpp:131] Top shape: (1)
I0428 20:37:57.206835  5058 net.cpp:134]     with loss weight 1
I0428 20:37:57.206866  5058 net.cpp:139] Memory required for data: 32378808
I0428 20:37:57.206869  5058 net.cpp:200] loss needs backward computation.
I0428 20:37:57.206889  5058 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:57.206893  5058 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:57.206897  5058 net.cpp:200] relu3 needs backward computation.
I0428 20:37:57.206899  5058 net.cpp:200] ip3 needs backward computation.
I0428 20:37:57.206902  5058 net.cpp:200] relu2 needs backward computation.
I0428 20:37:57.206905  5058 net.cpp:200] ip2 needs backward computation.
I0428 20:37:57.206907  5058 net.cpp:200] relu1 needs backward computation.
I0428 20:37:57.206910  5058 net.cpp:200] ip1 needs backward computation.
I0428 20:37:57.206913  5058 net.cpp:200] pool1 needs backward computation.
I0428 20:37:57.206917  5058 net.cpp:200] conv1 needs backward computation.
I0428 20:37:57.206919  5058 net.cpp:200] pool0 needs backward computation.
I0428 20:37:57.206923  5058 net.cpp:200] conv0 needs backward computation.
I0428 20:37:57.206926  5058 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:57.206930  5058 net.cpp:202] mnist does not need backward computation.
I0428 20:37:57.206933  5058 net.cpp:244] This network produces output accuracy
I0428 20:37:57.206935  5058 net.cpp:244] This network produces output loss
I0428 20:37:57.206948  5058 net.cpp:257] Network initialization done.
I0428 20:37:57.206989  5058 solver.cpp:56] Solver scaffolding done.
I0428 20:37:57.207383  5058 caffe.cpp:248] Starting Optimization
I0428 20:37:57.207391  5058 solver.cpp:273] Solving LeNet
I0428 20:37:57.207392  5058 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:57.208845  5058 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:57.336679  5065 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:57.339921  5058 solver.cpp:398]     Test net output #0: accuracy = 0.1009
I0428 20:37:57.339957  5058 solver.cpp:398]     Test net output #1: loss = 2.3163 (* 1 = 2.3163 loss)
I0428 20:37:57.345109  5058 solver.cpp:219] Iteration 0 (-2.42429e-31 iter/s, 0.137683s/100 iters), loss = 2.29593
I0428 20:37:57.345134  5058 solver.cpp:238]     Train net output #0: loss = 2.29593 (* 1 = 2.29593 loss)
I0428 20:37:57.345146  5058 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:57.611217  5058 solver.cpp:219] Iteration 100 (375.857 iter/s, 0.266059s/100 iters), loss = 0.87997
I0428 20:37:57.611266  5058 solver.cpp:238]     Train net output #0: loss = 0.87997 (* 1 = 0.87997 loss)
I0428 20:37:57.611273  5058 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:57.873080  5058 solver.cpp:219] Iteration 200 (381.976 iter/s, 0.261797s/100 iters), loss = 0.260748
I0428 20:37:57.873123  5058 solver.cpp:238]     Train net output #0: loss = 0.260748 (* 1 = 0.260748 loss)
I0428 20:37:57.873129  5058 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:58.135166  5058 solver.cpp:219] Iteration 300 (381.619 iter/s, 0.262042s/100 iters), loss = 0.215364
I0428 20:37:58.135207  5058 solver.cpp:238]     Train net output #0: loss = 0.215364 (* 1 = 0.215364 loss)
I0428 20:37:58.135213  5058 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:58.398386  5058 solver.cpp:219] Iteration 400 (379.978 iter/s, 0.263173s/100 iters), loss = 0.117535
I0428 20:37:58.398424  5058 solver.cpp:238]     Train net output #0: loss = 0.117535 (* 1 = 0.117535 loss)
I0428 20:37:58.398433  5058 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:58.659219  5058 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:58.784255  5065 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:58.787772  5058 solver.cpp:398]     Test net output #0: accuracy = 0.9662
I0428 20:37:58.787811  5058 solver.cpp:398]     Test net output #1: loss = 0.112198 (* 1 = 0.112198 loss)
I0428 20:37:58.790410  5058 solver.cpp:219] Iteration 500 (255.125 iter/s, 0.391965s/100 iters), loss = 0.11885
I0428 20:37:58.790434  5058 solver.cpp:238]     Train net output #0: loss = 0.11885 (* 1 = 0.11885 loss)
I0428 20:37:58.790454  5058 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:59.058576  5058 solver.cpp:219] Iteration 600 (372.963 iter/s, 0.268123s/100 iters), loss = 0.0719442
I0428 20:37:59.058620  5058 solver.cpp:238]     Train net output #0: loss = 0.0719442 (* 1 = 0.0719442 loss)
I0428 20:37:59.058629  5058 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:59.326972  5058 solver.cpp:219] Iteration 700 (372.65 iter/s, 0.268348s/100 iters), loss = 0.105798
I0428 20:37:59.327003  5058 solver.cpp:238]     Train net output #0: loss = 0.105798 (* 1 = 0.105798 loss)
I0428 20:37:59.327009  5058 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:59.597012  5058 solver.cpp:219] Iteration 800 (370.38 iter/s, 0.269993s/100 iters), loss = 0.327404
I0428 20:37:59.597039  5058 solver.cpp:238]     Train net output #0: loss = 0.327404 (* 1 = 0.327404 loss)
I0428 20:37:59.597045  5058 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:59.871084  5058 solver.cpp:219] Iteration 900 (364.929 iter/s, 0.274026s/100 iters), loss = 0.103336
I0428 20:37:59.871129  5058 solver.cpp:238]     Train net output #0: loss = 0.103337 (* 1 = 0.103337 loss)
I0428 20:37:59.871151  5058 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:59.962373  5064 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:00.144254  5058 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:00.149247  5058 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:00.152113  5058 solver.cpp:311] Iteration 1000, loss = 0.120735
I0428 20:38:00.152130  5058 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:00.280102  5065 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:00.284832  5058 solver.cpp:398]     Test net output #0: accuracy = 0.98
I0428 20:38:00.284869  5058 solver.cpp:398]     Test net output #1: loss = 0.0673885 (* 1 = 0.0673885 loss)
I0428 20:38:00.284874  5058 solver.cpp:316] Optimization Done.
I0428 20:38:00.284893  5058 caffe.cpp:259] Optimization Done.
