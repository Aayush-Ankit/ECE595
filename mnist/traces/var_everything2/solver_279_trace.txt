I0428 19:38:37.060397 24063 caffe.cpp:218] Using GPUs 0
I0428 19:38:37.100178 24063 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:37.618953 24063 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test279.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:37.619096 24063 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test279.prototxt
I0428 19:38:37.619474 24063 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:37.619496 24063 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:37.619590 24063 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:38:37.619669 24063 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:37.619771 24063 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:37.619794 24063 net.cpp:86] Creating Layer mnist
I0428 19:38:37.619803 24063 net.cpp:382] mnist -> data
I0428 19:38:37.619825 24063 net.cpp:382] mnist -> label
I0428 19:38:37.620929 24063 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:37.623399 24063 net.cpp:124] Setting up mnist
I0428 19:38:37.623417 24063 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:37.623423 24063 net.cpp:131] Top shape: 64 (64)
I0428 19:38:37.623427 24063 net.cpp:139] Memory required for data: 200960
I0428 19:38:37.623435 24063 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:37.623462 24063 net.cpp:86] Creating Layer conv0
I0428 19:38:37.623469 24063 net.cpp:408] conv0 <- data
I0428 19:38:37.623482 24063 net.cpp:382] conv0 -> conv0
I0428 19:38:37.911867 24063 net.cpp:124] Setting up conv0
I0428 19:38:37.911895 24063 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:37.911900 24063 net.cpp:139] Memory required for data: 495872
I0428 19:38:37.911932 24063 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:37.911947 24063 net.cpp:86] Creating Layer pool0
I0428 19:38:37.911950 24063 net.cpp:408] pool0 <- conv0
I0428 19:38:37.911957 24063 net.cpp:382] pool0 -> pool0
I0428 19:38:37.912008 24063 net.cpp:124] Setting up pool0
I0428 19:38:37.912014 24063 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:37.912016 24063 net.cpp:139] Memory required for data: 569600
I0428 19:38:37.912019 24063 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:37.912032 24063 net.cpp:86] Creating Layer conv1
I0428 19:38:37.912035 24063 net.cpp:408] conv1 <- pool0
I0428 19:38:37.912044 24063 net.cpp:382] conv1 -> conv1
I0428 19:38:37.913944 24063 net.cpp:124] Setting up conv1
I0428 19:38:37.913960 24063 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:37.913964 24063 net.cpp:139] Memory required for data: 602368
I0428 19:38:37.913972 24063 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:37.913982 24063 net.cpp:86] Creating Layer pool1
I0428 19:38:37.913985 24063 net.cpp:408] pool1 <- conv1
I0428 19:38:37.913990 24063 net.cpp:382] pool1 -> pool1
I0428 19:38:37.914031 24063 net.cpp:124] Setting up pool1
I0428 19:38:37.914036 24063 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:37.914038 24063 net.cpp:139] Memory required for data: 610560
I0428 19:38:37.914041 24063 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:37.914048 24063 net.cpp:86] Creating Layer ip1
I0428 19:38:37.914052 24063 net.cpp:408] ip1 <- pool1
I0428 19:38:37.914057 24063 net.cpp:382] ip1 -> ip1
I0428 19:38:37.914157 24063 net.cpp:124] Setting up ip1
I0428 19:38:37.914165 24063 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:37.914168 24063 net.cpp:139] Memory required for data: 616960
I0428 19:38:37.914175 24063 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:37.914181 24063 net.cpp:86] Creating Layer relu1
I0428 19:38:37.914185 24063 net.cpp:408] relu1 <- ip1
I0428 19:38:37.914189 24063 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:37.914371 24063 net.cpp:124] Setting up relu1
I0428 19:38:37.914381 24063 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:38:37.914383 24063 net.cpp:139] Memory required for data: 623360
I0428 19:38:37.914386 24063 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:37.914394 24063 net.cpp:86] Creating Layer ip2
I0428 19:38:37.914397 24063 net.cpp:408] ip2 <- ip1
I0428 19:38:37.914402 24063 net.cpp:382] ip2 -> ip2
I0428 19:38:37.914502 24063 net.cpp:124] Setting up ip2
I0428 19:38:37.914508 24063 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:37.914511 24063 net.cpp:139] Memory required for data: 625920
I0428 19:38:37.914516 24063 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:37.914523 24063 net.cpp:86] Creating Layer relu2
I0428 19:38:37.914526 24063 net.cpp:408] relu2 <- ip2
I0428 19:38:37.914530 24063 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:37.915278 24063 net.cpp:124] Setting up relu2
I0428 19:38:37.915292 24063 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:37.915294 24063 net.cpp:139] Memory required for data: 628480
I0428 19:38:37.915298 24063 layer_factory.hpp:77] Creating layer loss
I0428 19:38:37.915305 24063 net.cpp:86] Creating Layer loss
I0428 19:38:37.915309 24063 net.cpp:408] loss <- ip2
I0428 19:38:37.915313 24063 net.cpp:408] loss <- label
I0428 19:38:37.915318 24063 net.cpp:382] loss -> loss
I0428 19:38:37.915334 24063 layer_factory.hpp:77] Creating layer loss
I0428 19:38:37.915583 24063 net.cpp:124] Setting up loss
I0428 19:38:37.915592 24063 net.cpp:131] Top shape: (1)
I0428 19:38:37.915596 24063 net.cpp:134]     with loss weight 1
I0428 19:38:37.915613 24063 net.cpp:139] Memory required for data: 628484
I0428 19:38:37.915618 24063 net.cpp:200] loss needs backward computation.
I0428 19:38:37.915624 24063 net.cpp:200] relu2 needs backward computation.
I0428 19:38:37.915627 24063 net.cpp:200] ip2 needs backward computation.
I0428 19:38:37.915630 24063 net.cpp:200] relu1 needs backward computation.
I0428 19:38:37.915632 24063 net.cpp:200] ip1 needs backward computation.
I0428 19:38:37.915635 24063 net.cpp:200] pool1 needs backward computation.
I0428 19:38:37.915648 24063 net.cpp:200] conv1 needs backward computation.
I0428 19:38:37.915652 24063 net.cpp:200] pool0 needs backward computation.
I0428 19:38:37.915654 24063 net.cpp:200] conv0 needs backward computation.
I0428 19:38:37.915658 24063 net.cpp:202] mnist does not need backward computation.
I0428 19:38:37.915660 24063 net.cpp:244] This network produces output loss
I0428 19:38:37.915670 24063 net.cpp:257] Network initialization done.
I0428 19:38:37.915966 24063 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test279.prototxt
I0428 19:38:37.915992 24063 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:37.916079 24063 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:38:37.916146 24063 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:37.916191 24063 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:37.916206 24063 net.cpp:86] Creating Layer mnist
I0428 19:38:37.916211 24063 net.cpp:382] mnist -> data
I0428 19:38:37.916219 24063 net.cpp:382] mnist -> label
I0428 19:38:37.916311 24063 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:37.918391 24063 net.cpp:124] Setting up mnist
I0428 19:38:37.918406 24063 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:37.918411 24063 net.cpp:131] Top shape: 100 (100)
I0428 19:38:37.918412 24063 net.cpp:139] Memory required for data: 314000
I0428 19:38:37.918416 24063 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:37.918424 24063 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:37.918427 24063 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:37.918432 24063 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:37.918438 24063 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:37.918478 24063 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:37.918494 24063 net.cpp:131] Top shape: 100 (100)
I0428 19:38:37.918498 24063 net.cpp:131] Top shape: 100 (100)
I0428 19:38:37.918500 24063 net.cpp:139] Memory required for data: 314800
I0428 19:38:37.918503 24063 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:37.918512 24063 net.cpp:86] Creating Layer conv0
I0428 19:38:37.918515 24063 net.cpp:408] conv0 <- data
I0428 19:38:37.918521 24063 net.cpp:382] conv0 -> conv0
I0428 19:38:37.920264 24063 net.cpp:124] Setting up conv0
I0428 19:38:37.920277 24063 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:37.920281 24063 net.cpp:139] Memory required for data: 775600
I0428 19:38:37.920290 24063 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:37.920296 24063 net.cpp:86] Creating Layer pool0
I0428 19:38:37.920300 24063 net.cpp:408] pool0 <- conv0
I0428 19:38:37.920305 24063 net.cpp:382] pool0 -> pool0
I0428 19:38:37.920341 24063 net.cpp:124] Setting up pool0
I0428 19:38:37.920346 24063 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:37.920349 24063 net.cpp:139] Memory required for data: 890800
I0428 19:38:37.920352 24063 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:37.920362 24063 net.cpp:86] Creating Layer conv1
I0428 19:38:37.920366 24063 net.cpp:408] conv1 <- pool0
I0428 19:38:37.920370 24063 net.cpp:382] conv1 -> conv1
I0428 19:38:37.921862 24063 net.cpp:124] Setting up conv1
I0428 19:38:37.921875 24063 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:37.921880 24063 net.cpp:139] Memory required for data: 942000
I0428 19:38:37.921890 24063 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:37.921895 24063 net.cpp:86] Creating Layer pool1
I0428 19:38:37.921898 24063 net.cpp:408] pool1 <- conv1
I0428 19:38:37.921903 24063 net.cpp:382] pool1 -> pool1
I0428 19:38:37.921941 24063 net.cpp:124] Setting up pool1
I0428 19:38:37.921947 24063 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:37.921952 24063 net.cpp:139] Memory required for data: 954800
I0428 19:38:37.921955 24063 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:37.921969 24063 net.cpp:86] Creating Layer ip1
I0428 19:38:37.921973 24063 net.cpp:408] ip1 <- pool1
I0428 19:38:37.921978 24063 net.cpp:382] ip1 -> ip1
I0428 19:38:37.922083 24063 net.cpp:124] Setting up ip1
I0428 19:38:37.922091 24063 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:37.922094 24063 net.cpp:139] Memory required for data: 964800
I0428 19:38:37.922101 24063 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:37.922107 24063 net.cpp:86] Creating Layer relu1
I0428 19:38:37.922111 24063 net.cpp:408] relu1 <- ip1
I0428 19:38:37.922114 24063 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:37.922276 24063 net.cpp:124] Setting up relu1
I0428 19:38:37.922283 24063 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:38:37.922287 24063 net.cpp:139] Memory required for data: 974800
I0428 19:38:37.922289 24063 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:37.922297 24063 net.cpp:86] Creating Layer ip2
I0428 19:38:37.922300 24063 net.cpp:408] ip2 <- ip1
I0428 19:38:37.922307 24063 net.cpp:382] ip2 -> ip2
I0428 19:38:37.922406 24063 net.cpp:124] Setting up ip2
I0428 19:38:37.922412 24063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:37.922423 24063 net.cpp:139] Memory required for data: 978800
I0428 19:38:37.922428 24063 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:37.922439 24063 net.cpp:86] Creating Layer relu2
I0428 19:38:37.922442 24063 net.cpp:408] relu2 <- ip2
I0428 19:38:37.922446 24063 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:37.922606 24063 net.cpp:124] Setting up relu2
I0428 19:38:37.922615 24063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:37.922617 24063 net.cpp:139] Memory required for data: 982800
I0428 19:38:37.922626 24063 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:38:37.922632 24063 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:38:37.922636 24063 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:38:37.922639 24063 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:38:37.922657 24063 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:38:37.922698 24063 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:38:37.922703 24063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:37.922706 24063 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:37.922709 24063 net.cpp:139] Memory required for data: 990800
I0428 19:38:37.922711 24063 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:37.922718 24063 net.cpp:86] Creating Layer accuracy
I0428 19:38:37.922721 24063 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:38:37.922725 24063 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:37.922729 24063 net.cpp:382] accuracy -> accuracy
I0428 19:38:37.922742 24063 net.cpp:124] Setting up accuracy
I0428 19:38:37.922747 24063 net.cpp:131] Top shape: (1)
I0428 19:38:37.922749 24063 net.cpp:139] Memory required for data: 990804
I0428 19:38:37.922754 24063 layer_factory.hpp:77] Creating layer loss
I0428 19:38:37.922758 24063 net.cpp:86] Creating Layer loss
I0428 19:38:37.922761 24063 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:38:37.922765 24063 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:37.922776 24063 net.cpp:382] loss -> loss
I0428 19:38:37.922782 24063 layer_factory.hpp:77] Creating layer loss
I0428 19:38:37.923072 24063 net.cpp:124] Setting up loss
I0428 19:38:37.923081 24063 net.cpp:131] Top shape: (1)
I0428 19:38:37.923084 24063 net.cpp:134]     with loss weight 1
I0428 19:38:37.923090 24063 net.cpp:139] Memory required for data: 990808
I0428 19:38:37.923094 24063 net.cpp:200] loss needs backward computation.
I0428 19:38:37.923096 24063 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:37.923100 24063 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:38:37.923104 24063 net.cpp:200] relu2 needs backward computation.
I0428 19:38:37.923105 24063 net.cpp:200] ip2 needs backward computation.
I0428 19:38:37.923108 24063 net.cpp:200] relu1 needs backward computation.
I0428 19:38:37.923110 24063 net.cpp:200] ip1 needs backward computation.
I0428 19:38:37.923113 24063 net.cpp:200] pool1 needs backward computation.
I0428 19:38:37.923116 24063 net.cpp:200] conv1 needs backward computation.
I0428 19:38:37.923120 24063 net.cpp:200] pool0 needs backward computation.
I0428 19:38:37.923122 24063 net.cpp:200] conv0 needs backward computation.
I0428 19:38:37.923125 24063 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:37.923128 24063 net.cpp:202] mnist does not need backward computation.
I0428 19:38:37.923131 24063 net.cpp:244] This network produces output accuracy
I0428 19:38:37.923135 24063 net.cpp:244] This network produces output loss
I0428 19:38:37.923144 24063 net.cpp:257] Network initialization done.
I0428 19:38:37.923182 24063 solver.cpp:56] Solver scaffolding done.
I0428 19:38:37.923446 24063 caffe.cpp:248] Starting Optimization
I0428 19:38:37.923452 24063 solver.cpp:273] Solving LeNet
I0428 19:38:37.923455 24063 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:37.924228 24063 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:37.926100 24063 blocking_queue.cpp:49] Waiting for data
I0428 19:38:37.998801 24070 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:37.999228 24063 solver.cpp:398]     Test net output #0: accuracy = 0.0561
I0428 19:38:37.999248 24063 solver.cpp:398]     Test net output #1: loss = 2.40509 (* 1 = 2.40509 loss)
I0428 19:38:38.000936 24063 solver.cpp:219] Iteration 0 (-1.04957e-42 iter/s, 0.0774537s/100 iters), loss = 2.37967
I0428 19:38:38.000975 24063 solver.cpp:238]     Train net output #0: loss = 2.37967 (* 1 = 2.37967 loss)
I0428 19:38:38.000993 24063 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:38.066403 24063 solver.cpp:219] Iteration 100 (1528.61 iter/s, 0.0654189s/100 iters), loss = 1.75616
I0428 19:38:38.066455 24063 solver.cpp:238]     Train net output #0: loss = 1.75616 (* 1 = 1.75616 loss)
I0428 19:38:38.066468 24063 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:38.129495 24063 solver.cpp:219] Iteration 200 (1586.08 iter/s, 0.0630486s/100 iters), loss = 0.883227
I0428 19:38:38.129534 24063 solver.cpp:238]     Train net output #0: loss = 0.883227 (* 1 = 0.883227 loss)
I0428 19:38:38.129559 24063 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:38.191251 24063 solver.cpp:219] Iteration 300 (1620.5 iter/s, 0.0617093s/100 iters), loss = 0.772697
I0428 19:38:38.191277 24063 solver.cpp:238]     Train net output #0: loss = 0.772697 (* 1 = 0.772697 loss)
I0428 19:38:38.191283 24063 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:38.253432 24063 solver.cpp:219] Iteration 400 (1609.07 iter/s, 0.0621475s/100 iters), loss = 0.587793
I0428 19:38:38.253456 24063 solver.cpp:238]     Train net output #0: loss = 0.587793 (* 1 = 0.587793 loss)
I0428 19:38:38.253482 24063 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:38.313736 24063 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:38.388502 24070 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:38.388942 24063 solver.cpp:398]     Test net output #0: accuracy = 0.8215
I0428 19:38:38.388962 24063 solver.cpp:398]     Test net output #1: loss = 0.528178 (* 1 = 0.528178 loss)
I0428 19:38:38.389627 24063 solver.cpp:219] Iteration 500 (734.434 iter/s, 0.136159s/100 iters), loss = 0.518215
I0428 19:38:38.389650 24063 solver.cpp:238]     Train net output #0: loss = 0.518215 (* 1 = 0.518215 loss)
I0428 19:38:38.389657 24063 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:38.468124 24063 solver.cpp:219] Iteration 600 (1274.51 iter/s, 0.0784615s/100 iters), loss = 0.430651
I0428 19:38:38.468155 24063 solver.cpp:238]     Train net output #0: loss = 0.430651 (* 1 = 0.430651 loss)
I0428 19:38:38.468178 24063 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:38.531013 24063 solver.cpp:219] Iteration 700 (1591.11 iter/s, 0.062849s/100 iters), loss = 0.408463
I0428 19:38:38.531038 24063 solver.cpp:238]     Train net output #0: loss = 0.408463 (* 1 = 0.408463 loss)
I0428 19:38:38.531062 24063 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:38.592756 24063 solver.cpp:219] Iteration 800 (1620.47 iter/s, 0.0617103s/100 iters), loss = 0.686728
I0428 19:38:38.592782 24063 solver.cpp:238]     Train net output #0: loss = 0.686728 (* 1 = 0.686728 loss)
I0428 19:38:38.592805 24063 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:38.654646 24063 solver.cpp:219] Iteration 900 (1616.64 iter/s, 0.0618567s/100 iters), loss = 0.542946
I0428 19:38:38.654671 24063 solver.cpp:238]     Train net output #0: loss = 0.542946 (* 1 = 0.542946 loss)
I0428 19:38:38.654695 24063 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:38.675307 24069 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:38.715814 24063 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:38.716415 24063 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:38.716778 24063 solver.cpp:311] Iteration 1000, loss = 0.494406
I0428 19:38:38.716794 24063 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:38.791064 24070 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:38.791491 24063 solver.cpp:398]     Test net output #0: accuracy = 0.8399
I0428 19:38:38.791512 24063 solver.cpp:398]     Test net output #1: loss = 0.452297 (* 1 = 0.452297 loss)
I0428 19:38:38.791517 24063 solver.cpp:316] Optimization Done.
I0428 19:38:38.791519 24063 caffe.cpp:259] Optimization Done.
