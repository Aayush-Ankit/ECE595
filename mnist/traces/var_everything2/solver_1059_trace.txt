I0428 20:07:33.876755 31134 caffe.cpp:218] Using GPUs 0
I0428 20:07:33.905776 31134 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:34.351094 31134 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1059.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:34.351239 31134 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1059.prototxt
I0428 20:07:34.351555 31134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:34.351570 31134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:34.351640 31134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:07:34.351699 31134 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:34.351780 31134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:34.351799 31134 net.cpp:86] Creating Layer mnist
I0428 20:07:34.351805 31134 net.cpp:382] mnist -> data
I0428 20:07:34.351824 31134 net.cpp:382] mnist -> label
I0428 20:07:34.352773 31134 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:34.355074 31134 net.cpp:124] Setting up mnist
I0428 20:07:34.355104 31134 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:34.355111 31134 net.cpp:131] Top shape: 64 (64)
I0428 20:07:34.355114 31134 net.cpp:139] Memory required for data: 200960
I0428 20:07:34.355120 31134 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:34.355170 31134 net.cpp:86] Creating Layer conv0
I0428 20:07:34.355175 31134 net.cpp:408] conv0 <- data
I0428 20:07:34.355186 31134 net.cpp:382] conv0 -> conv0
I0428 20:07:34.583638 31134 net.cpp:124] Setting up conv0
I0428 20:07:34.583665 31134 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:34.583669 31134 net.cpp:139] Memory required for data: 3887360
I0428 20:07:34.583700 31134 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:34.583712 31134 net.cpp:86] Creating Layer pool0
I0428 20:07:34.583731 31134 net.cpp:408] pool0 <- conv0
I0428 20:07:34.583737 31134 net.cpp:382] pool0 -> pool0
I0428 20:07:34.583780 31134 net.cpp:124] Setting up pool0
I0428 20:07:34.583786 31134 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:34.583788 31134 net.cpp:139] Memory required for data: 4808960
I0428 20:07:34.583791 31134 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:34.583801 31134 net.cpp:86] Creating Layer conv1
I0428 20:07:34.583804 31134 net.cpp:408] conv1 <- pool0
I0428 20:07:34.583809 31134 net.cpp:382] conv1 -> conv1
I0428 20:07:34.586778 31134 net.cpp:124] Setting up conv1
I0428 20:07:34.586792 31134 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:34.586812 31134 net.cpp:139] Memory required for data: 4972800
I0428 20:07:34.586819 31134 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:34.586841 31134 net.cpp:86] Creating Layer pool1
I0428 20:07:34.586845 31134 net.cpp:408] pool1 <- conv1
I0428 20:07:34.586865 31134 net.cpp:382] pool1 -> pool1
I0428 20:07:34.586916 31134 net.cpp:124] Setting up pool1
I0428 20:07:34.586921 31134 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:34.586925 31134 net.cpp:139] Memory required for data: 5013760
I0428 20:07:34.586927 31134 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:34.586935 31134 net.cpp:86] Creating Layer ip1
I0428 20:07:34.586937 31134 net.cpp:408] ip1 <- pool1
I0428 20:07:34.586941 31134 net.cpp:382] ip1 -> ip1
I0428 20:07:34.587885 31134 net.cpp:124] Setting up ip1
I0428 20:07:34.587898 31134 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:34.587916 31134 net.cpp:139] Memory required for data: 5020160
I0428 20:07:34.587939 31134 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:34.587947 31134 net.cpp:86] Creating Layer relu1
I0428 20:07:34.587950 31134 net.cpp:408] relu1 <- ip1
I0428 20:07:34.587955 31134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:34.588124 31134 net.cpp:124] Setting up relu1
I0428 20:07:34.588147 31134 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:34.588150 31134 net.cpp:139] Memory required for data: 5026560
I0428 20:07:34.588153 31134 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:34.588161 31134 net.cpp:86] Creating Layer ip2
I0428 20:07:34.588165 31134 net.cpp:408] ip2 <- ip1
I0428 20:07:34.588170 31134 net.cpp:382] ip2 -> ip2
I0428 20:07:34.588292 31134 net.cpp:124] Setting up ip2
I0428 20:07:34.588299 31134 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:34.588302 31134 net.cpp:139] Memory required for data: 5029120
I0428 20:07:34.588309 31134 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:34.588315 31134 net.cpp:86] Creating Layer relu2
I0428 20:07:34.588317 31134 net.cpp:408] relu2 <- ip2
I0428 20:07:34.588321 31134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:34.589124 31134 net.cpp:124] Setting up relu2
I0428 20:07:34.589136 31134 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:34.589140 31134 net.cpp:139] Memory required for data: 5031680
I0428 20:07:34.589143 31134 layer_factory.hpp:77] Creating layer loss
I0428 20:07:34.589149 31134 net.cpp:86] Creating Layer loss
I0428 20:07:34.589154 31134 net.cpp:408] loss <- ip2
I0428 20:07:34.589157 31134 net.cpp:408] loss <- label
I0428 20:07:34.589162 31134 net.cpp:382] loss -> loss
I0428 20:07:34.589181 31134 layer_factory.hpp:77] Creating layer loss
I0428 20:07:34.589432 31134 net.cpp:124] Setting up loss
I0428 20:07:34.589442 31134 net.cpp:131] Top shape: (1)
I0428 20:07:34.589445 31134 net.cpp:134]     with loss weight 1
I0428 20:07:34.589459 31134 net.cpp:139] Memory required for data: 5031684
I0428 20:07:34.589462 31134 net.cpp:200] loss needs backward computation.
I0428 20:07:34.589467 31134 net.cpp:200] relu2 needs backward computation.
I0428 20:07:34.589469 31134 net.cpp:200] ip2 needs backward computation.
I0428 20:07:34.589473 31134 net.cpp:200] relu1 needs backward computation.
I0428 20:07:34.589475 31134 net.cpp:200] ip1 needs backward computation.
I0428 20:07:34.589489 31134 net.cpp:200] pool1 needs backward computation.
I0428 20:07:34.589493 31134 net.cpp:200] conv1 needs backward computation.
I0428 20:07:34.589496 31134 net.cpp:200] pool0 needs backward computation.
I0428 20:07:34.589499 31134 net.cpp:200] conv0 needs backward computation.
I0428 20:07:34.589504 31134 net.cpp:202] mnist does not need backward computation.
I0428 20:07:34.589506 31134 net.cpp:244] This network produces output loss
I0428 20:07:34.589514 31134 net.cpp:257] Network initialization done.
I0428 20:07:34.589853 31134 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1059.prototxt
I0428 20:07:34.589906 31134 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:34.589993 31134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:07:34.590057 31134 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:34.590101 31134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:34.590116 31134 net.cpp:86] Creating Layer mnist
I0428 20:07:34.590134 31134 net.cpp:382] mnist -> data
I0428 20:07:34.590142 31134 net.cpp:382] mnist -> label
I0428 20:07:34.590222 31134 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:34.592248 31134 net.cpp:124] Setting up mnist
I0428 20:07:34.592262 31134 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:34.592267 31134 net.cpp:131] Top shape: 100 (100)
I0428 20:07:34.592269 31134 net.cpp:139] Memory required for data: 314000
I0428 20:07:34.592272 31134 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:34.592301 31134 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:34.592305 31134 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:34.592311 31134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:34.592317 31134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:34.592368 31134 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:34.592375 31134 net.cpp:131] Top shape: 100 (100)
I0428 20:07:34.592380 31134 net.cpp:131] Top shape: 100 (100)
I0428 20:07:34.592381 31134 net.cpp:139] Memory required for data: 314800
I0428 20:07:34.592384 31134 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:34.592393 31134 net.cpp:86] Creating Layer conv0
I0428 20:07:34.592397 31134 net.cpp:408] conv0 <- data
I0428 20:07:34.592401 31134 net.cpp:382] conv0 -> conv0
I0428 20:07:34.594236 31134 net.cpp:124] Setting up conv0
I0428 20:07:34.594250 31134 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:34.594254 31134 net.cpp:139] Memory required for data: 6074800
I0428 20:07:34.594262 31134 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:34.594270 31134 net.cpp:86] Creating Layer pool0
I0428 20:07:34.594274 31134 net.cpp:408] pool0 <- conv0
I0428 20:07:34.594277 31134 net.cpp:382] pool0 -> pool0
I0428 20:07:34.594314 31134 net.cpp:124] Setting up pool0
I0428 20:07:34.594319 31134 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:34.594321 31134 net.cpp:139] Memory required for data: 7514800
I0428 20:07:34.594324 31134 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:34.594334 31134 net.cpp:86] Creating Layer conv1
I0428 20:07:34.594337 31134 net.cpp:408] conv1 <- pool0
I0428 20:07:34.594343 31134 net.cpp:382] conv1 -> conv1
I0428 20:07:34.596598 31134 net.cpp:124] Setting up conv1
I0428 20:07:34.596627 31134 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:34.596631 31134 net.cpp:139] Memory required for data: 7770800
I0428 20:07:34.596642 31134 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:34.596663 31134 net.cpp:86] Creating Layer pool1
I0428 20:07:34.596667 31134 net.cpp:408] pool1 <- conv1
I0428 20:07:34.596671 31134 net.cpp:382] pool1 -> pool1
I0428 20:07:34.596712 31134 net.cpp:124] Setting up pool1
I0428 20:07:34.596719 31134 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:34.596721 31134 net.cpp:139] Memory required for data: 7834800
I0428 20:07:34.596724 31134 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:34.596730 31134 net.cpp:86] Creating Layer ip1
I0428 20:07:34.596734 31134 net.cpp:408] ip1 <- pool1
I0428 20:07:34.596738 31134 net.cpp:382] ip1 -> ip1
I0428 20:07:34.596915 31134 net.cpp:124] Setting up ip1
I0428 20:07:34.596923 31134 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:34.596927 31134 net.cpp:139] Memory required for data: 7844800
I0428 20:07:34.596935 31134 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:34.596940 31134 net.cpp:86] Creating Layer relu1
I0428 20:07:34.596946 31134 net.cpp:408] relu1 <- ip1
I0428 20:07:34.596949 31134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:34.597234 31134 net.cpp:124] Setting up relu1
I0428 20:07:34.597242 31134 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:34.597245 31134 net.cpp:139] Memory required for data: 7854800
I0428 20:07:34.597249 31134 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:34.597256 31134 net.cpp:86] Creating Layer ip2
I0428 20:07:34.597259 31134 net.cpp:408] ip2 <- ip1
I0428 20:07:34.597265 31134 net.cpp:382] ip2 -> ip2
I0428 20:07:34.597374 31134 net.cpp:124] Setting up ip2
I0428 20:07:34.597381 31134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:34.597384 31134 net.cpp:139] Memory required for data: 7858800
I0428 20:07:34.597389 31134 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:34.597395 31134 net.cpp:86] Creating Layer relu2
I0428 20:07:34.597398 31134 net.cpp:408] relu2 <- ip2
I0428 20:07:34.597403 31134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:34.597563 31134 net.cpp:124] Setting up relu2
I0428 20:07:34.597573 31134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:34.597575 31134 net.cpp:139] Memory required for data: 7862800
I0428 20:07:34.597579 31134 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:07:34.597585 31134 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:07:34.597589 31134 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:07:34.597592 31134 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:07:34.597625 31134 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:07:34.597673 31134 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:07:34.597695 31134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:34.597702 31134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:34.597705 31134 net.cpp:139] Memory required for data: 7870800
I0428 20:07:34.597708 31134 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:34.597715 31134 net.cpp:86] Creating Layer accuracy
I0428 20:07:34.597719 31134 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:07:34.597724 31134 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:34.597728 31134 net.cpp:382] accuracy -> accuracy
I0428 20:07:34.597736 31134 net.cpp:124] Setting up accuracy
I0428 20:07:34.597740 31134 net.cpp:131] Top shape: (1)
I0428 20:07:34.597743 31134 net.cpp:139] Memory required for data: 7870804
I0428 20:07:34.597745 31134 layer_factory.hpp:77] Creating layer loss
I0428 20:07:34.597750 31134 net.cpp:86] Creating Layer loss
I0428 20:07:34.597759 31134 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:07:34.597762 31134 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:34.597769 31134 net.cpp:382] loss -> loss
I0428 20:07:34.597774 31134 layer_factory.hpp:77] Creating layer loss
I0428 20:07:34.598039 31134 net.cpp:124] Setting up loss
I0428 20:07:34.598047 31134 net.cpp:131] Top shape: (1)
I0428 20:07:34.598050 31134 net.cpp:134]     with loss weight 1
I0428 20:07:34.598057 31134 net.cpp:139] Memory required for data: 7870808
I0428 20:07:34.598059 31134 net.cpp:200] loss needs backward computation.
I0428 20:07:34.598062 31134 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:34.598067 31134 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:07:34.598069 31134 net.cpp:200] relu2 needs backward computation.
I0428 20:07:34.598073 31134 net.cpp:200] ip2 needs backward computation.
I0428 20:07:34.598075 31134 net.cpp:200] relu1 needs backward computation.
I0428 20:07:34.598078 31134 net.cpp:200] ip1 needs backward computation.
I0428 20:07:34.598080 31134 net.cpp:200] pool1 needs backward computation.
I0428 20:07:34.598083 31134 net.cpp:200] conv1 needs backward computation.
I0428 20:07:34.598086 31134 net.cpp:200] pool0 needs backward computation.
I0428 20:07:34.598089 31134 net.cpp:200] conv0 needs backward computation.
I0428 20:07:34.598109 31134 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:34.598119 31134 net.cpp:202] mnist does not need backward computation.
I0428 20:07:34.598121 31134 net.cpp:244] This network produces output accuracy
I0428 20:07:34.598124 31134 net.cpp:244] This network produces output loss
I0428 20:07:34.598135 31134 net.cpp:257] Network initialization done.
I0428 20:07:34.598171 31134 solver.cpp:56] Solver scaffolding done.
I0428 20:07:34.598479 31134 caffe.cpp:248] Starting Optimization
I0428 20:07:34.598485 31134 solver.cpp:273] Solving LeNet
I0428 20:07:34.598489 31134 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:34.599351 31134 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:34.604298 31134 blocking_queue.cpp:49] Waiting for data
I0428 20:07:34.672497 31141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:34.673092 31134 solver.cpp:398]     Test net output #0: accuracy = 0.1494
I0428 20:07:34.673110 31134 solver.cpp:398]     Test net output #1: loss = 2.27652 (* 1 = 2.27652 loss)
I0428 20:07:34.676734 31134 solver.cpp:219] Iteration 0 (0 iter/s, 0.0782172s/100 iters), loss = 2.28613
I0428 20:07:34.676756 31134 solver.cpp:238]     Train net output #0: loss = 2.28613 (* 1 = 2.28613 loss)
I0428 20:07:34.676782 31134 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:34.763187 31134 solver.cpp:219] Iteration 100 (1157.16 iter/s, 0.0864184s/100 iters), loss = 0.530453
I0428 20:07:34.763212 31134 solver.cpp:238]     Train net output #0: loss = 0.530453 (* 1 = 0.530453 loss)
I0428 20:07:34.763217 31134 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:34.847506 31134 solver.cpp:219] Iteration 200 (1186.44 iter/s, 0.0842854s/100 iters), loss = 0.35848
I0428 20:07:34.847543 31134 solver.cpp:238]     Train net output #0: loss = 0.35848 (* 1 = 0.35848 loss)
I0428 20:07:34.847549 31134 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:34.931650 31134 solver.cpp:219] Iteration 300 (1189.07 iter/s, 0.0840993s/100 iters), loss = 0.337027
I0428 20:07:34.931689 31134 solver.cpp:238]     Train net output #0: loss = 0.337027 (* 1 = 0.337027 loss)
I0428 20:07:34.931713 31134 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:35.016192 31134 solver.cpp:219] Iteration 400 (1183.51 iter/s, 0.0844943s/100 iters), loss = 0.549368
I0428 20:07:35.016216 31134 solver.cpp:238]     Train net output #0: loss = 0.549368 (* 1 = 0.549368 loss)
I0428 20:07:35.016237 31134 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:35.098443 31134 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:35.152645 31141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:35.153203 31134 solver.cpp:398]     Test net output #0: accuracy = 0.8628
I0428 20:07:35.153223 31134 solver.cpp:398]     Test net output #1: loss = 0.37249 (* 1 = 0.37249 loss)
I0428 20:07:35.154147 31134 solver.cpp:219] Iteration 500 (725.115 iter/s, 0.137909s/100 iters), loss = 0.572092
I0428 20:07:35.154186 31134 solver.cpp:238]     Train net output #0: loss = 0.572092 (* 1 = 0.572092 loss)
I0428 20:07:35.154193 31134 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:35.249878 31134 solver.cpp:219] Iteration 600 (1045.1 iter/s, 0.0956847s/100 iters), loss = 0.220126
I0428 20:07:35.249904 31134 solver.cpp:238]     Train net output #0: loss = 0.220126 (* 1 = 0.220126 loss)
I0428 20:07:35.249928 31134 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:35.339316 31134 solver.cpp:219] Iteration 700 (1118.6 iter/s, 0.0893972s/100 iters), loss = 0.340085
I0428 20:07:35.339372 31134 solver.cpp:238]     Train net output #0: loss = 0.340085 (* 1 = 0.340085 loss)
I0428 20:07:35.339388 31134 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:35.436758 31134 solver.cpp:219] Iteration 800 (1026.92 iter/s, 0.0973783s/100 iters), loss = 0.45109
I0428 20:07:35.436791 31134 solver.cpp:238]     Train net output #0: loss = 0.45109 (* 1 = 0.45109 loss)
I0428 20:07:35.436801 31134 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:35.525427 31134 solver.cpp:219] Iteration 900 (1128.33 iter/s, 0.0886262s/100 iters), loss = 0.211644
I0428 20:07:35.525459 31134 solver.cpp:238]     Train net output #0: loss = 0.211644 (* 1 = 0.211644 loss)
I0428 20:07:35.525468 31134 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:35.554832 31140 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:35.612597 31134 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:35.613502 31134 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:35.614096 31134 solver.cpp:311] Iteration 1000, loss = 0.208943
I0428 20:07:35.614114 31134 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:35.688904 31141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:35.689523 31134 solver.cpp:398]     Test net output #0: accuracy = 0.8767
I0428 20:07:35.689548 31134 solver.cpp:398]     Test net output #1: loss = 0.321227 (* 1 = 0.321227 loss)
I0428 20:07:35.689554 31134 solver.cpp:316] Optimization Done.
I0428 20:07:35.689558 31134 caffe.cpp:259] Optimization Done.
