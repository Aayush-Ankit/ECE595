I0428 19:51:35.677713 27318 caffe.cpp:218] Using GPUs 0
I0428 19:51:35.706786 27318 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:36.159859 27318 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test638.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:36.160007 27318 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test638.prototxt
I0428 19:51:36.160352 27318 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:36.160367 27318 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:36.160447 27318 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:36.160511 27318 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:36.160589 27318 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:36.160609 27318 net.cpp:86] Creating Layer mnist
I0428 19:51:36.160615 27318 net.cpp:382] mnist -> data
I0428 19:51:36.160634 27318 net.cpp:382] mnist -> label
I0428 19:51:36.161626 27318 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:36.163792 27318 net.cpp:124] Setting up mnist
I0428 19:51:36.163805 27318 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:36.163810 27318 net.cpp:131] Top shape: 64 (64)
I0428 19:51:36.163812 27318 net.cpp:139] Memory required for data: 200960
I0428 19:51:36.163818 27318 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:36.163842 27318 net.cpp:86] Creating Layer conv0
I0428 19:51:36.163859 27318 net.cpp:408] conv0 <- data
I0428 19:51:36.163871 27318 net.cpp:382] conv0 -> conv0
I0428 19:51:36.400557 27318 net.cpp:124] Setting up conv0
I0428 19:51:36.400580 27318 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:36.400584 27318 net.cpp:139] Memory required for data: 938240
I0428 19:51:36.400599 27318 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:36.400609 27318 net.cpp:86] Creating Layer pool0
I0428 19:51:36.400614 27318 net.cpp:408] pool0 <- conv0
I0428 19:51:36.400619 27318 net.cpp:382] pool0 -> pool0
I0428 19:51:36.400678 27318 net.cpp:124] Setting up pool0
I0428 19:51:36.400683 27318 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:36.400686 27318 net.cpp:139] Memory required for data: 1122560
I0428 19:51:36.400689 27318 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:36.400699 27318 net.cpp:86] Creating Layer conv1
I0428 19:51:36.400701 27318 net.cpp:408] conv1 <- pool0
I0428 19:51:36.400707 27318 net.cpp:382] conv1 -> conv1
I0428 19:51:36.403560 27318 net.cpp:124] Setting up conv1
I0428 19:51:36.403574 27318 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:36.403578 27318 net.cpp:139] Memory required for data: 1532160
I0428 19:51:36.403587 27318 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:36.403595 27318 net.cpp:86] Creating Layer pool1
I0428 19:51:36.403599 27318 net.cpp:408] pool1 <- conv1
I0428 19:51:36.403619 27318 net.cpp:382] pool1 -> pool1
I0428 19:51:36.403657 27318 net.cpp:124] Setting up pool1
I0428 19:51:36.403662 27318 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:36.403666 27318 net.cpp:139] Memory required for data: 1634560
I0428 19:51:36.403668 27318 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:36.403676 27318 net.cpp:86] Creating Layer ip1
I0428 19:51:36.403677 27318 net.cpp:408] ip1 <- pool1
I0428 19:51:36.403683 27318 net.cpp:382] ip1 -> ip1
I0428 19:51:36.403817 27318 net.cpp:124] Setting up ip1
I0428 19:51:36.403825 27318 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:36.403827 27318 net.cpp:139] Memory required for data: 1637120
I0428 19:51:36.403834 27318 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:36.403841 27318 net.cpp:86] Creating Layer relu1
I0428 19:51:36.403843 27318 net.cpp:408] relu1 <- ip1
I0428 19:51:36.403848 27318 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:36.404008 27318 net.cpp:124] Setting up relu1
I0428 19:51:36.404017 27318 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:36.404021 27318 net.cpp:139] Memory required for data: 1639680
I0428 19:51:36.404023 27318 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:36.404028 27318 net.cpp:86] Creating Layer ip2
I0428 19:51:36.404031 27318 net.cpp:408] ip2 <- ip1
I0428 19:51:36.404037 27318 net.cpp:382] ip2 -> ip2
I0428 19:51:36.404134 27318 net.cpp:124] Setting up ip2
I0428 19:51:36.404140 27318 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:36.404144 27318 net.cpp:139] Memory required for data: 1642240
I0428 19:51:36.404148 27318 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:36.404153 27318 net.cpp:86] Creating Layer relu2
I0428 19:51:36.404156 27318 net.cpp:408] relu2 <- ip2
I0428 19:51:36.404161 27318 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:36.404898 27318 net.cpp:124] Setting up relu2
I0428 19:51:36.404911 27318 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:36.404929 27318 net.cpp:139] Memory required for data: 1644800
I0428 19:51:36.404932 27318 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:36.404940 27318 net.cpp:86] Creating Layer ip3
I0428 19:51:36.404943 27318 net.cpp:408] ip3 <- ip2
I0428 19:51:36.404948 27318 net.cpp:382] ip3 -> ip3
I0428 19:51:36.405046 27318 net.cpp:124] Setting up ip3
I0428 19:51:36.405053 27318 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:36.405056 27318 net.cpp:139] Memory required for data: 1647360
I0428 19:51:36.405064 27318 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:36.405071 27318 net.cpp:86] Creating Layer relu3
I0428 19:51:36.405072 27318 net.cpp:408] relu3 <- ip3
I0428 19:51:36.405076 27318 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:36.405239 27318 net.cpp:124] Setting up relu3
I0428 19:51:36.405248 27318 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:36.405251 27318 net.cpp:139] Memory required for data: 1649920
I0428 19:51:36.405254 27318 layer_factory.hpp:77] Creating layer loss
I0428 19:51:36.405259 27318 net.cpp:86] Creating Layer loss
I0428 19:51:36.405262 27318 net.cpp:408] loss <- ip3
I0428 19:51:36.405266 27318 net.cpp:408] loss <- label
I0428 19:51:36.405270 27318 net.cpp:382] loss -> loss
I0428 19:51:36.405287 27318 layer_factory.hpp:77] Creating layer loss
I0428 19:51:36.405527 27318 net.cpp:124] Setting up loss
I0428 19:51:36.405535 27318 net.cpp:131] Top shape: (1)
I0428 19:51:36.405539 27318 net.cpp:134]     with loss weight 1
I0428 19:51:36.405551 27318 net.cpp:139] Memory required for data: 1649924
I0428 19:51:36.405555 27318 net.cpp:200] loss needs backward computation.
I0428 19:51:36.405558 27318 net.cpp:200] relu3 needs backward computation.
I0428 19:51:36.405560 27318 net.cpp:200] ip3 needs backward computation.
I0428 19:51:36.405563 27318 net.cpp:200] relu2 needs backward computation.
I0428 19:51:36.405565 27318 net.cpp:200] ip2 needs backward computation.
I0428 19:51:36.405568 27318 net.cpp:200] relu1 needs backward computation.
I0428 19:51:36.405571 27318 net.cpp:200] ip1 needs backward computation.
I0428 19:51:36.405573 27318 net.cpp:200] pool1 needs backward computation.
I0428 19:51:36.405576 27318 net.cpp:200] conv1 needs backward computation.
I0428 19:51:36.405578 27318 net.cpp:200] pool0 needs backward computation.
I0428 19:51:36.405581 27318 net.cpp:200] conv0 needs backward computation.
I0428 19:51:36.405585 27318 net.cpp:202] mnist does not need backward computation.
I0428 19:51:36.405586 27318 net.cpp:244] This network produces output loss
I0428 19:51:36.405594 27318 net.cpp:257] Network initialization done.
I0428 19:51:36.405957 27318 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test638.prototxt
I0428 19:51:36.405983 27318 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:36.406071 27318 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:36.406152 27318 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:36.406193 27318 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:36.406205 27318 net.cpp:86] Creating Layer mnist
I0428 19:51:36.406211 27318 net.cpp:382] mnist -> data
I0428 19:51:36.406219 27318 net.cpp:382] mnist -> label
I0428 19:51:36.406313 27318 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:36.408201 27318 net.cpp:124] Setting up mnist
I0428 19:51:36.408224 27318 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:36.408229 27318 net.cpp:131] Top shape: 100 (100)
I0428 19:51:36.408231 27318 net.cpp:139] Memory required for data: 314000
I0428 19:51:36.408234 27318 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:36.408263 27318 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:36.408267 27318 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:36.408280 27318 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:36.408288 27318 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:36.408327 27318 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:36.408332 27318 net.cpp:131] Top shape: 100 (100)
I0428 19:51:36.408335 27318 net.cpp:131] Top shape: 100 (100)
I0428 19:51:36.408337 27318 net.cpp:139] Memory required for data: 314800
I0428 19:51:36.408340 27318 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:36.408349 27318 net.cpp:86] Creating Layer conv0
I0428 19:51:36.408351 27318 net.cpp:408] conv0 <- data
I0428 19:51:36.408357 27318 net.cpp:382] conv0 -> conv0
I0428 19:51:36.410082 27318 net.cpp:124] Setting up conv0
I0428 19:51:36.410095 27318 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:36.410099 27318 net.cpp:139] Memory required for data: 1466800
I0428 19:51:36.410107 27318 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:36.410114 27318 net.cpp:86] Creating Layer pool0
I0428 19:51:36.410132 27318 net.cpp:408] pool0 <- conv0
I0428 19:51:36.410138 27318 net.cpp:382] pool0 -> pool0
I0428 19:51:36.410174 27318 net.cpp:124] Setting up pool0
I0428 19:51:36.410179 27318 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:36.410181 27318 net.cpp:139] Memory required for data: 1754800
I0428 19:51:36.410184 27318 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:36.410194 27318 net.cpp:86] Creating Layer conv1
I0428 19:51:36.410197 27318 net.cpp:408] conv1 <- pool0
I0428 19:51:36.410202 27318 net.cpp:382] conv1 -> conv1
I0428 19:51:36.412272 27318 net.cpp:124] Setting up conv1
I0428 19:51:36.412289 27318 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:36.412293 27318 net.cpp:139] Memory required for data: 2394800
I0428 19:51:36.412302 27318 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:36.412323 27318 net.cpp:86] Creating Layer pool1
I0428 19:51:36.412335 27318 net.cpp:408] pool1 <- conv1
I0428 19:51:36.412339 27318 net.cpp:382] pool1 -> pool1
I0428 19:51:36.412382 27318 net.cpp:124] Setting up pool1
I0428 19:51:36.412387 27318 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:36.412390 27318 net.cpp:139] Memory required for data: 2554800
I0428 19:51:36.412392 27318 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:36.412405 27318 net.cpp:86] Creating Layer ip1
I0428 19:51:36.412408 27318 net.cpp:408] ip1 <- pool1
I0428 19:51:36.412412 27318 net.cpp:382] ip1 -> ip1
I0428 19:51:36.412549 27318 net.cpp:124] Setting up ip1
I0428 19:51:36.412556 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.412569 27318 net.cpp:139] Memory required for data: 2558800
I0428 19:51:36.412576 27318 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:36.412580 27318 net.cpp:86] Creating Layer relu1
I0428 19:51:36.412590 27318 net.cpp:408] relu1 <- ip1
I0428 19:51:36.412595 27318 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:36.412794 27318 net.cpp:124] Setting up relu1
I0428 19:51:36.412803 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.412806 27318 net.cpp:139] Memory required for data: 2562800
I0428 19:51:36.412817 27318 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:36.412858 27318 net.cpp:86] Creating Layer ip2
I0428 19:51:36.412861 27318 net.cpp:408] ip2 <- ip1
I0428 19:51:36.412868 27318 net.cpp:382] ip2 -> ip2
I0428 19:51:36.412972 27318 net.cpp:124] Setting up ip2
I0428 19:51:36.412981 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.412983 27318 net.cpp:139] Memory required for data: 2566800
I0428 19:51:36.412988 27318 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:36.412999 27318 net.cpp:86] Creating Layer relu2
I0428 19:51:36.413002 27318 net.cpp:408] relu2 <- ip2
I0428 19:51:36.413012 27318 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:36.413183 27318 net.cpp:124] Setting up relu2
I0428 19:51:36.413208 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.413210 27318 net.cpp:139] Memory required for data: 2570800
I0428 19:51:36.413213 27318 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:36.413218 27318 net.cpp:86] Creating Layer ip3
I0428 19:51:36.413221 27318 net.cpp:408] ip3 <- ip2
I0428 19:51:36.413233 27318 net.cpp:382] ip3 -> ip3
I0428 19:51:36.413370 27318 net.cpp:124] Setting up ip3
I0428 19:51:36.413377 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.413380 27318 net.cpp:139] Memory required for data: 2574800
I0428 19:51:36.413390 27318 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:36.413394 27318 net.cpp:86] Creating Layer relu3
I0428 19:51:36.413398 27318 net.cpp:408] relu3 <- ip3
I0428 19:51:36.413403 27318 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:36.414227 27318 net.cpp:124] Setting up relu3
I0428 19:51:36.414238 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.414242 27318 net.cpp:139] Memory required for data: 2578800
I0428 19:51:36.414244 27318 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:36.414249 27318 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:36.414252 27318 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:36.414258 27318 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:36.414264 27318 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:36.414304 27318 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:36.414309 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.414314 27318 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:36.414315 27318 net.cpp:139] Memory required for data: 2586800
I0428 19:51:36.414319 27318 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:36.414324 27318 net.cpp:86] Creating Layer accuracy
I0428 19:51:36.414326 27318 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:36.414330 27318 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:36.414335 27318 net.cpp:382] accuracy -> accuracy
I0428 19:51:36.414357 27318 net.cpp:124] Setting up accuracy
I0428 19:51:36.414361 27318 net.cpp:131] Top shape: (1)
I0428 19:51:36.414363 27318 net.cpp:139] Memory required for data: 2586804
I0428 19:51:36.414366 27318 layer_factory.hpp:77] Creating layer loss
I0428 19:51:36.414371 27318 net.cpp:86] Creating Layer loss
I0428 19:51:36.414374 27318 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:36.414377 27318 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:36.414381 27318 net.cpp:382] loss -> loss
I0428 19:51:36.414387 27318 layer_factory.hpp:77] Creating layer loss
I0428 19:51:36.414621 27318 net.cpp:124] Setting up loss
I0428 19:51:36.414629 27318 net.cpp:131] Top shape: (1)
I0428 19:51:36.414633 27318 net.cpp:134]     with loss weight 1
I0428 19:51:36.414659 27318 net.cpp:139] Memory required for data: 2586808
I0428 19:51:36.414671 27318 net.cpp:200] loss needs backward computation.
I0428 19:51:36.414675 27318 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:36.414679 27318 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:36.414692 27318 net.cpp:200] relu3 needs backward computation.
I0428 19:51:36.414695 27318 net.cpp:200] ip3 needs backward computation.
I0428 19:51:36.414697 27318 net.cpp:200] relu2 needs backward computation.
I0428 19:51:36.414700 27318 net.cpp:200] ip2 needs backward computation.
I0428 19:51:36.414702 27318 net.cpp:200] relu1 needs backward computation.
I0428 19:51:36.414710 27318 net.cpp:200] ip1 needs backward computation.
I0428 19:51:36.414713 27318 net.cpp:200] pool1 needs backward computation.
I0428 19:51:36.414716 27318 net.cpp:200] conv1 needs backward computation.
I0428 19:51:36.414724 27318 net.cpp:200] pool0 needs backward computation.
I0428 19:51:36.414726 27318 net.cpp:200] conv0 needs backward computation.
I0428 19:51:36.414731 27318 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:36.414736 27318 net.cpp:202] mnist does not need backward computation.
I0428 19:51:36.414738 27318 net.cpp:244] This network produces output accuracy
I0428 19:51:36.414746 27318 net.cpp:244] This network produces output loss
I0428 19:51:36.414757 27318 net.cpp:257] Network initialization done.
I0428 19:51:36.414800 27318 solver.cpp:56] Solver scaffolding done.
I0428 19:51:36.415138 27318 caffe.cpp:248] Starting Optimization
I0428 19:51:36.415143 27318 solver.cpp:273] Solving LeNet
I0428 19:51:36.415146 27318 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:36.415297 27318 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:36.419222 27318 blocking_queue.cpp:49] Waiting for data
I0428 19:51:36.490954 27325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:36.491484 27318 solver.cpp:398]     Test net output #0: accuracy = 0.0987
I0428 19:51:36.491503 27318 solver.cpp:398]     Test net output #1: loss = 2.31234 (* 1 = 2.31234 loss)
I0428 19:51:36.493255 27318 solver.cpp:219] Iteration 0 (0 iter/s, 0.078082s/100 iters), loss = 2.29674
I0428 19:51:36.493304 27318 solver.cpp:238]     Train net output #0: loss = 2.29674 (* 1 = 2.29674 loss)
I0428 19:51:36.493335 27318 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:36.588223 27318 solver.cpp:219] Iteration 100 (1053.5 iter/s, 0.0949214s/100 iters), loss = 1.37651
I0428 19:51:36.588249 27318 solver.cpp:238]     Train net output #0: loss = 1.37651 (* 1 = 1.37651 loss)
I0428 19:51:36.588255 27318 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:36.683173 27318 solver.cpp:219] Iteration 200 (1053.59 iter/s, 0.0949135s/100 iters), loss = 1.37403
I0428 19:51:36.683197 27318 solver.cpp:238]     Train net output #0: loss = 1.37403 (* 1 = 1.37403 loss)
I0428 19:51:36.683223 27318 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:36.769145 27318 solver.cpp:219] Iteration 300 (1163.61 iter/s, 0.0859394s/100 iters), loss = 1.13524
I0428 19:51:36.769170 27318 solver.cpp:238]     Train net output #0: loss = 1.13524 (* 1 = 1.13524 loss)
I0428 19:51:36.769191 27318 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:36.852654 27318 solver.cpp:219] Iteration 400 (1197.94 iter/s, 0.0834764s/100 iters), loss = 1.25387
I0428 19:51:36.852679 27318 solver.cpp:238]     Train net output #0: loss = 1.25387 (* 1 = 1.25387 loss)
I0428 19:51:36.852699 27318 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:36.934097 27318 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:37.009166 27325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:37.009763 27318 solver.cpp:398]     Test net output #0: accuracy = 0.654
I0428 19:51:37.009793 27318 solver.cpp:398]     Test net output #1: loss = 1.04125 (* 1 = 1.04125 loss)
I0428 19:51:37.010797 27318 solver.cpp:219] Iteration 500 (632.493 iter/s, 0.158105s/100 iters), loss = 1.06015
I0428 19:51:37.010828 27318 solver.cpp:238]     Train net output #0: loss = 1.06015 (* 1 = 1.06015 loss)
I0428 19:51:37.010859 27318 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:37.104216 27318 solver.cpp:219] Iteration 600 (1070.9 iter/s, 0.0933793s/100 iters), loss = 1.00228
I0428 19:51:37.104241 27318 solver.cpp:238]     Train net output #0: loss = 1.00228 (* 1 = 1.00228 loss)
I0428 19:51:37.104249 27318 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:37.188877 27318 solver.cpp:219] Iteration 700 (1181.68 iter/s, 0.0846254s/100 iters), loss = 0.98496
I0428 19:51:37.188917 27318 solver.cpp:238]     Train net output #0: loss = 0.98496 (* 1 = 0.98496 loss)
I0428 19:51:37.188923 27318 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:37.272341 27318 solver.cpp:219] Iteration 800 (1198.81 iter/s, 0.083416s/100 iters), loss = 1.41608
I0428 19:51:37.272364 27318 solver.cpp:238]     Train net output #0: loss = 1.41608 (* 1 = 1.41608 loss)
I0428 19:51:37.272388 27318 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:37.355293 27318 solver.cpp:219] Iteration 900 (1206.02 iter/s, 0.0829175s/100 iters), loss = 1.17773
I0428 19:51:37.355316 27318 solver.cpp:238]     Train net output #0: loss = 1.17773 (* 1 = 1.17773 loss)
I0428 19:51:37.355340 27318 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:37.383009 27324 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:37.437026 27318 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:37.437901 27318 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:37.438469 27318 solver.cpp:311] Iteration 1000, loss = 1.06334
I0428 19:51:37.438483 27318 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:37.513252 27325 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:37.513775 27318 solver.cpp:398]     Test net output #0: accuracy = 0.6801
I0428 19:51:37.513793 27318 solver.cpp:398]     Test net output #1: loss = 0.989745 (* 1 = 0.989745 loss)
I0428 19:51:37.513798 27318 solver.cpp:316] Optimization Done.
I0428 19:51:37.513802 27318 caffe.cpp:259] Optimization Done.
