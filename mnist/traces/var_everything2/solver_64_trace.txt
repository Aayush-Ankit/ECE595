I0428 19:29:36.635848 22069 caffe.cpp:218] Using GPUs 0
I0428 19:29:36.676525 22069 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:37.197355 22069 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test64.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:37.197523 22069 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test64.prototxt
I0428 19:29:37.197897 22069 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:37.197918 22069 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:37.198014 22069 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:37.198124 22069 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:37.198256 22069 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:37.198290 22069 net.cpp:86] Creating Layer mnist
I0428 19:29:37.198302 22069 net.cpp:382] mnist -> data
I0428 19:29:37.198331 22069 net.cpp:382] mnist -> label
I0428 19:29:37.199550 22069 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:37.202039 22069 net.cpp:124] Setting up mnist
I0428 19:29:37.202060 22069 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:37.202072 22069 net.cpp:131] Top shape: 64 (64)
I0428 19:29:37.202078 22069 net.cpp:139] Memory required for data: 200960
I0428 19:29:37.202090 22069 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:37.202111 22069 net.cpp:86] Creating Layer conv0
I0428 19:29:37.202121 22069 net.cpp:408] conv0 <- data
I0428 19:29:37.202141 22069 net.cpp:382] conv0 -> conv0
I0428 19:29:37.490793 22069 net.cpp:124] Setting up conv0
I0428 19:29:37.490823 22069 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:37.490829 22069 net.cpp:139] Memory required for data: 495872
I0428 19:29:37.490850 22069 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:37.490867 22069 net.cpp:86] Creating Layer pool0
I0428 19:29:37.490893 22069 net.cpp:408] pool0 <- conv0
I0428 19:29:37.490903 22069 net.cpp:382] pool0 -> pool0
I0428 19:29:37.490967 22069 net.cpp:124] Setting up pool0
I0428 19:29:37.490975 22069 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:37.490981 22069 net.cpp:139] Memory required for data: 569600
I0428 19:29:37.490986 22069 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:37.491003 22069 net.cpp:86] Creating Layer ip1
I0428 19:29:37.491009 22069 net.cpp:408] ip1 <- pool0
I0428 19:29:37.491019 22069 net.cpp:382] ip1 -> ip1
I0428 19:29:37.492009 22069 net.cpp:124] Setting up ip1
I0428 19:29:37.492024 22069 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:37.492030 22069 net.cpp:139] Memory required for data: 576000
I0428 19:29:37.492043 22069 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:37.492054 22069 net.cpp:86] Creating Layer relu1
I0428 19:29:37.492065 22069 net.cpp:408] relu1 <- ip1
I0428 19:29:37.492074 22069 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:37.492250 22069 net.cpp:124] Setting up relu1
I0428 19:29:37.492261 22069 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:37.492266 22069 net.cpp:139] Memory required for data: 582400
I0428 19:29:37.492271 22069 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:37.492282 22069 net.cpp:86] Creating Layer ip2
I0428 19:29:37.492287 22069 net.cpp:408] ip2 <- ip1
I0428 19:29:37.492296 22069 net.cpp:382] ip2 -> ip2
I0428 19:29:37.492401 22069 net.cpp:124] Setting up ip2
I0428 19:29:37.492410 22069 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:37.492415 22069 net.cpp:139] Memory required for data: 588800
I0428 19:29:37.492427 22069 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:37.492437 22069 net.cpp:86] Creating Layer relu2
I0428 19:29:37.492442 22069 net.cpp:408] relu2 <- ip2
I0428 19:29:37.492451 22069 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:37.493362 22069 net.cpp:124] Setting up relu2
I0428 19:29:37.493377 22069 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:37.493384 22069 net.cpp:139] Memory required for data: 595200
I0428 19:29:37.493392 22069 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:37.493402 22069 net.cpp:86] Creating Layer ip3
I0428 19:29:37.493408 22069 net.cpp:408] ip3 <- ip2
I0428 19:29:37.493417 22069 net.cpp:382] ip3 -> ip3
I0428 19:29:37.493525 22069 net.cpp:124] Setting up ip3
I0428 19:29:37.493535 22069 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:37.493541 22069 net.cpp:139] Memory required for data: 597760
I0428 19:29:37.493551 22069 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:37.493561 22069 net.cpp:86] Creating Layer relu3
I0428 19:29:37.493566 22069 net.cpp:408] relu3 <- ip3
I0428 19:29:37.493573 22069 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:37.493733 22069 net.cpp:124] Setting up relu3
I0428 19:29:37.493744 22069 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:37.493749 22069 net.cpp:139] Memory required for data: 600320
I0428 19:29:37.493755 22069 layer_factory.hpp:77] Creating layer loss
I0428 19:29:37.493764 22069 net.cpp:86] Creating Layer loss
I0428 19:29:37.493769 22069 net.cpp:408] loss <- ip3
I0428 19:29:37.493777 22069 net.cpp:408] loss <- label
I0428 19:29:37.493785 22069 net.cpp:382] loss -> loss
I0428 19:29:37.493809 22069 layer_factory.hpp:77] Creating layer loss
I0428 19:29:37.494046 22069 net.cpp:124] Setting up loss
I0428 19:29:37.494057 22069 net.cpp:131] Top shape: (1)
I0428 19:29:37.494063 22069 net.cpp:134]     with loss weight 1
I0428 19:29:37.494083 22069 net.cpp:139] Memory required for data: 600324
I0428 19:29:37.494089 22069 net.cpp:200] loss needs backward computation.
I0428 19:29:37.494096 22069 net.cpp:200] relu3 needs backward computation.
I0428 19:29:37.494102 22069 net.cpp:200] ip3 needs backward computation.
I0428 19:29:37.494107 22069 net.cpp:200] relu2 needs backward computation.
I0428 19:29:37.494112 22069 net.cpp:200] ip2 needs backward computation.
I0428 19:29:37.494117 22069 net.cpp:200] relu1 needs backward computation.
I0428 19:29:37.494122 22069 net.cpp:200] ip1 needs backward computation.
I0428 19:29:37.494139 22069 net.cpp:200] pool0 needs backward computation.
I0428 19:29:37.494145 22069 net.cpp:200] conv0 needs backward computation.
I0428 19:29:37.494150 22069 net.cpp:202] mnist does not need backward computation.
I0428 19:29:37.494155 22069 net.cpp:244] This network produces output loss
I0428 19:29:37.494168 22069 net.cpp:257] Network initialization done.
I0428 19:29:37.494462 22069 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test64.prototxt
I0428 19:29:37.494494 22069 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:37.494585 22069 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:37.494683 22069 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:37.494743 22069 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:37.494760 22069 net.cpp:86] Creating Layer mnist
I0428 19:29:37.494767 22069 net.cpp:382] mnist -> data
I0428 19:29:37.494779 22069 net.cpp:382] mnist -> label
I0428 19:29:37.494899 22069 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:37.496958 22069 net.cpp:124] Setting up mnist
I0428 19:29:37.496974 22069 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:37.496984 22069 net.cpp:131] Top shape: 100 (100)
I0428 19:29:37.496989 22069 net.cpp:139] Memory required for data: 314000
I0428 19:29:37.496996 22069 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:37.497025 22069 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:37.497031 22069 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:37.497040 22069 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:37.497051 22069 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:37.497193 22069 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:37.497202 22069 net.cpp:131] Top shape: 100 (100)
I0428 19:29:37.497210 22069 net.cpp:131] Top shape: 100 (100)
I0428 19:29:37.497215 22069 net.cpp:139] Memory required for data: 314800
I0428 19:29:37.497232 22069 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:37.497246 22069 net.cpp:86] Creating Layer conv0
I0428 19:29:37.497252 22069 net.cpp:408] conv0 <- data
I0428 19:29:37.497262 22069 net.cpp:382] conv0 -> conv0
I0428 19:29:37.498841 22069 net.cpp:124] Setting up conv0
I0428 19:29:37.498857 22069 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:37.498862 22069 net.cpp:139] Memory required for data: 775600
I0428 19:29:37.498893 22069 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:37.498903 22069 net.cpp:86] Creating Layer pool0
I0428 19:29:37.498910 22069 net.cpp:408] pool0 <- conv0
I0428 19:29:37.498920 22069 net.cpp:382] pool0 -> pool0
I0428 19:29:37.498963 22069 net.cpp:124] Setting up pool0
I0428 19:29:37.498975 22069 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:37.498980 22069 net.cpp:139] Memory required for data: 890800
I0428 19:29:37.498984 22069 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:37.498996 22069 net.cpp:86] Creating Layer ip1
I0428 19:29:37.499001 22069 net.cpp:408] ip1 <- pool0
I0428 19:29:37.499011 22069 net.cpp:382] ip1 -> ip1
I0428 19:29:37.499171 22069 net.cpp:124] Setting up ip1
I0428 19:29:37.499182 22069 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:37.499187 22069 net.cpp:139] Memory required for data: 900800
I0428 19:29:37.499200 22069 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:37.499210 22069 net.cpp:86] Creating Layer relu1
I0428 19:29:37.499217 22069 net.cpp:408] relu1 <- ip1
I0428 19:29:37.499223 22069 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:37.499440 22069 net.cpp:124] Setting up relu1
I0428 19:29:37.499450 22069 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:37.499455 22069 net.cpp:139] Memory required for data: 910800
I0428 19:29:37.499460 22069 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:37.499469 22069 net.cpp:86] Creating Layer ip2
I0428 19:29:37.499475 22069 net.cpp:408] ip2 <- ip1
I0428 19:29:37.499485 22069 net.cpp:382] ip2 -> ip2
I0428 19:29:37.499627 22069 net.cpp:124] Setting up ip2
I0428 19:29:37.499639 22069 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:37.499644 22069 net.cpp:139] Memory required for data: 920800
I0428 19:29:37.499657 22069 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:37.499665 22069 net.cpp:86] Creating Layer relu2
I0428 19:29:37.499672 22069 net.cpp:408] relu2 <- ip2
I0428 19:29:37.499682 22069 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:37.500557 22069 net.cpp:124] Setting up relu2
I0428 19:29:37.500571 22069 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:37.500576 22069 net.cpp:139] Memory required for data: 930800
I0428 19:29:37.500582 22069 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:37.500596 22069 net.cpp:86] Creating Layer ip3
I0428 19:29:37.500602 22069 net.cpp:408] ip3 <- ip2
I0428 19:29:37.500610 22069 net.cpp:382] ip3 -> ip3
I0428 19:29:37.500728 22069 net.cpp:124] Setting up ip3
I0428 19:29:37.500738 22069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:37.500744 22069 net.cpp:139] Memory required for data: 934800
I0428 19:29:37.500753 22069 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:37.500764 22069 net.cpp:86] Creating Layer relu3
I0428 19:29:37.500771 22069 net.cpp:408] relu3 <- ip3
I0428 19:29:37.500778 22069 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:37.500988 22069 net.cpp:124] Setting up relu3
I0428 19:29:37.501000 22069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:37.501005 22069 net.cpp:139] Memory required for data: 938800
I0428 19:29:37.501010 22069 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:37.501019 22069 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:37.501036 22069 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:37.501044 22069 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:37.501055 22069 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:37.501101 22069 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:37.501109 22069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:37.501116 22069 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:37.501132 22069 net.cpp:139] Memory required for data: 946800
I0428 19:29:37.501138 22069 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:37.501147 22069 net.cpp:86] Creating Layer accuracy
I0428 19:29:37.501152 22069 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:37.501161 22069 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:37.501170 22069 net.cpp:382] accuracy -> accuracy
I0428 19:29:37.501181 22069 net.cpp:124] Setting up accuracy
I0428 19:29:37.501189 22069 net.cpp:131] Top shape: (1)
I0428 19:29:37.501194 22069 net.cpp:139] Memory required for data: 946804
I0428 19:29:37.501199 22069 layer_factory.hpp:77] Creating layer loss
I0428 19:29:37.501207 22069 net.cpp:86] Creating Layer loss
I0428 19:29:37.501214 22069 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:37.501219 22069 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:37.501229 22069 net.cpp:382] loss -> loss
I0428 19:29:37.501238 22069 layer_factory.hpp:77] Creating layer loss
I0428 19:29:37.501493 22069 net.cpp:124] Setting up loss
I0428 19:29:37.501503 22069 net.cpp:131] Top shape: (1)
I0428 19:29:37.501508 22069 net.cpp:134]     with loss weight 1
I0428 19:29:37.501518 22069 net.cpp:139] Memory required for data: 946808
I0428 19:29:37.501523 22069 net.cpp:200] loss needs backward computation.
I0428 19:29:37.501529 22069 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:37.501535 22069 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:37.501540 22069 net.cpp:200] relu3 needs backward computation.
I0428 19:29:37.501545 22069 net.cpp:200] ip3 needs backward computation.
I0428 19:29:37.501550 22069 net.cpp:200] relu2 needs backward computation.
I0428 19:29:37.501555 22069 net.cpp:200] ip2 needs backward computation.
I0428 19:29:37.501560 22069 net.cpp:200] relu1 needs backward computation.
I0428 19:29:37.501565 22069 net.cpp:200] ip1 needs backward computation.
I0428 19:29:37.501570 22069 net.cpp:200] pool0 needs backward computation.
I0428 19:29:37.501574 22069 net.cpp:200] conv0 needs backward computation.
I0428 19:29:37.501580 22069 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:37.501586 22069 net.cpp:202] mnist does not need backward computation.
I0428 19:29:37.501592 22069 net.cpp:244] This network produces output accuracy
I0428 19:29:37.501598 22069 net.cpp:244] This network produces output loss
I0428 19:29:37.501616 22069 net.cpp:257] Network initialization done.
I0428 19:29:37.501658 22069 solver.cpp:56] Solver scaffolding done.
I0428 19:29:37.501936 22069 caffe.cpp:248] Starting Optimization
I0428 19:29:37.501945 22069 solver.cpp:273] Solving LeNet
I0428 19:29:37.501948 22069 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:37.502749 22069 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:37.505784 22069 blocking_queue.cpp:49] Waiting for data
I0428 19:29:37.577590 22077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:37.577996 22069 solver.cpp:398]     Test net output #0: accuracy = 0.1187
I0428 19:29:37.578029 22069 solver.cpp:398]     Test net output #1: loss = 2.29575 (* 1 = 2.29575 loss)
I0428 19:29:37.579691 22069 solver.cpp:219] Iteration 0 (-6.42176e-31 iter/s, 0.0777123s/100 iters), loss = 2.30441
I0428 19:29:37.579723 22069 solver.cpp:238]     Train net output #0: loss = 2.30441 (* 1 = 2.30441 loss)
I0428 19:29:37.579751 22069 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:37.633435 22069 solver.cpp:219] Iteration 100 (1862.01 iter/s, 0.0537054s/100 iters), loss = 1.05126
I0428 19:29:37.633462 22069 solver.cpp:238]     Train net output #0: loss = 1.05126 (* 1 = 1.05126 loss)
I0428 19:29:37.633487 22069 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:37.687578 22069 solver.cpp:219] Iteration 200 (1848.05 iter/s, 0.0541112s/100 iters), loss = 0.968662
I0428 19:29:37.687605 22069 solver.cpp:238]     Train net output #0: loss = 0.968662 (* 1 = 0.968662 loss)
I0428 19:29:37.687631 22069 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:37.741411 22069 solver.cpp:219] Iteration 300 (1858.74 iter/s, 0.0537999s/100 iters), loss = 0.772398
I0428 19:29:37.741439 22069 solver.cpp:238]     Train net output #0: loss = 0.772398 (* 1 = 0.772398 loss)
I0428 19:29:37.741466 22069 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:37.796025 22069 solver.cpp:219] Iteration 400 (1832.17 iter/s, 0.0545802s/100 iters), loss = 0.394094
I0428 19:29:37.796052 22069 solver.cpp:238]     Train net output #0: loss = 0.394094 (* 1 = 0.394094 loss)
I0428 19:29:37.796078 22069 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:37.848672 22069 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:37.900779 22077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:37.901172 22069 solver.cpp:398]     Test net output #0: accuracy = 0.9225
I0428 19:29:37.901195 22069 solver.cpp:398]     Test net output #1: loss = 0.262775 (* 1 = 0.262775 loss)
I0428 19:29:37.901804 22069 solver.cpp:219] Iteration 500 (945.678 iter/s, 0.105744s/100 iters), loss = 0.353723
I0428 19:29:37.901854 22069 solver.cpp:238]     Train net output #0: loss = 0.353723 (* 1 = 0.353723 loss)
I0428 19:29:37.901881 22069 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:37.955483 22069 solver.cpp:219] Iteration 600 (1863.99 iter/s, 0.0536484s/100 iters), loss = 0.160996
I0428 19:29:37.955510 22069 solver.cpp:238]     Train net output #0: loss = 0.160996 (* 1 = 0.160996 loss)
I0428 19:29:37.955535 22069 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:38.009902 22069 solver.cpp:219] Iteration 700 (1838.72 iter/s, 0.0543856s/100 iters), loss = 0.438938
I0428 19:29:38.009928 22069 solver.cpp:238]     Train net output #0: loss = 0.438938 (* 1 = 0.438938 loss)
I0428 19:29:38.009954 22069 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:38.063570 22069 solver.cpp:219] Iteration 800 (1864.41 iter/s, 0.0536363s/100 iters), loss = 0.481148
I0428 19:29:38.063597 22069 solver.cpp:238]     Train net output #0: loss = 0.481148 (* 1 = 0.481148 loss)
I0428 19:29:38.063621 22069 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:38.117080 22069 solver.cpp:219] Iteration 900 (1869.91 iter/s, 0.0534784s/100 iters), loss = 0.312236
I0428 19:29:38.117108 22069 solver.cpp:238]     Train net output #0: loss = 0.312235 (* 1 = 0.312235 loss)
I0428 19:29:38.117135 22069 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:38.135222 22076 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:38.170223 22069 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:38.170867 22069 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:38.171299 22069 solver.cpp:311] Iteration 1000, loss = 0.200374
I0428 19:29:38.171315 22069 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:38.214643 22077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:38.215031 22069 solver.cpp:398]     Test net output #0: accuracy = 0.9458
I0428 19:29:38.215050 22069 solver.cpp:398]     Test net output #1: loss = 0.172167 (* 1 = 0.172167 loss)
I0428 19:29:38.215057 22069 solver.cpp:316] Optimization Done.
I0428 19:29:38.215062 22069 caffe.cpp:259] Optimization Done.
