I0428 19:34:49.738778 23397 caffe.cpp:218] Using GPUs 0
I0428 19:34:49.776707 23397 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:34:50.244477 23397 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test212.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:34:50.244613 23397 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test212.prototxt
I0428 19:34:50.244961 23397 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:34:50.244990 23397 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:34:50.245062 23397 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:50.245123 23397 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:50.245234 23397 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:34:50.245252 23397 net.cpp:86] Creating Layer mnist
I0428 19:34:50.245259 23397 net.cpp:382] mnist -> data
I0428 19:34:50.245276 23397 net.cpp:382] mnist -> label
I0428 19:34:50.246230 23397 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:34:50.248492 23397 net.cpp:124] Setting up mnist
I0428 19:34:50.248522 23397 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:34:50.248528 23397 net.cpp:131] Top shape: 64 (64)
I0428 19:34:50.248530 23397 net.cpp:139] Memory required for data: 200960
I0428 19:34:50.248536 23397 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:50.248548 23397 net.cpp:86] Creating Layer conv0
I0428 19:34:50.248553 23397 net.cpp:408] conv0 <- data
I0428 19:34:50.248563 23397 net.cpp:382] conv0 -> conv0
I0428 19:34:50.477680 23397 net.cpp:124] Setting up conv0
I0428 19:34:50.477707 23397 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:34:50.477710 23397 net.cpp:139] Memory required for data: 7573760
I0428 19:34:50.477725 23397 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:50.477752 23397 net.cpp:86] Creating Layer pool0
I0428 19:34:50.477771 23397 net.cpp:408] pool0 <- conv0
I0428 19:34:50.477782 23397 net.cpp:382] pool0 -> pool0
I0428 19:34:50.477828 23397 net.cpp:124] Setting up pool0
I0428 19:34:50.477836 23397 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:34:50.477839 23397 net.cpp:139] Memory required for data: 9416960
I0428 19:34:50.477843 23397 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:50.477849 23397 net.cpp:86] Creating Layer ip1
I0428 19:34:50.477852 23397 net.cpp:408] ip1 <- pool0
I0428 19:34:50.477856 23397 net.cpp:382] ip1 -> ip1
I0428 19:34:50.479235 23397 net.cpp:124] Setting up ip1
I0428 19:34:50.479248 23397 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:50.479267 23397 net.cpp:139] Memory required for data: 9419520
I0428 19:34:50.479274 23397 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:50.479281 23397 net.cpp:86] Creating Layer relu1
I0428 19:34:50.479285 23397 net.cpp:408] relu1 <- ip1
I0428 19:34:50.479290 23397 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:50.479483 23397 net.cpp:124] Setting up relu1
I0428 19:34:50.479491 23397 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:50.479496 23397 net.cpp:139] Memory required for data: 9422080
I0428 19:34:50.479498 23397 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:50.479504 23397 net.cpp:86] Creating Layer ip2
I0428 19:34:50.479507 23397 net.cpp:408] ip2 <- ip1
I0428 19:34:50.479513 23397 net.cpp:382] ip2 -> ip2
I0428 19:34:50.479625 23397 net.cpp:124] Setting up ip2
I0428 19:34:50.479631 23397 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:34:50.479651 23397 net.cpp:139] Memory required for data: 9428480
I0428 19:34:50.479660 23397 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:50.479665 23397 net.cpp:86] Creating Layer relu2
I0428 19:34:50.479668 23397 net.cpp:408] relu2 <- ip2
I0428 19:34:50.479672 23397 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:50.480502 23397 net.cpp:124] Setting up relu2
I0428 19:34:50.480515 23397 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:34:50.480533 23397 net.cpp:139] Memory required for data: 9434880
I0428 19:34:50.480536 23397 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:50.480545 23397 net.cpp:86] Creating Layer ip3
I0428 19:34:50.480547 23397 net.cpp:408] ip3 <- ip2
I0428 19:34:50.480553 23397 net.cpp:382] ip3 -> ip3
I0428 19:34:50.480653 23397 net.cpp:124] Setting up ip3
I0428 19:34:50.480659 23397 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:50.480662 23397 net.cpp:139] Memory required for data: 9437440
I0428 19:34:50.480669 23397 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:50.480675 23397 net.cpp:86] Creating Layer relu3
I0428 19:34:50.480679 23397 net.cpp:408] relu3 <- ip3
I0428 19:34:50.480682 23397 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:50.480936 23397 net.cpp:124] Setting up relu3
I0428 19:34:50.480945 23397 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:50.480948 23397 net.cpp:139] Memory required for data: 9440000
I0428 19:34:50.480952 23397 layer_factory.hpp:77] Creating layer loss
I0428 19:34:50.480959 23397 net.cpp:86] Creating Layer loss
I0428 19:34:50.480963 23397 net.cpp:408] loss <- ip3
I0428 19:34:50.480967 23397 net.cpp:408] loss <- label
I0428 19:34:50.480973 23397 net.cpp:382] loss -> loss
I0428 19:34:50.480991 23397 layer_factory.hpp:77] Creating layer loss
I0428 19:34:50.481312 23397 net.cpp:124] Setting up loss
I0428 19:34:50.481319 23397 net.cpp:131] Top shape: (1)
I0428 19:34:50.481338 23397 net.cpp:134]     with loss weight 1
I0428 19:34:50.481351 23397 net.cpp:139] Memory required for data: 9440004
I0428 19:34:50.481354 23397 net.cpp:200] loss needs backward computation.
I0428 19:34:50.481358 23397 net.cpp:200] relu3 needs backward computation.
I0428 19:34:50.481360 23397 net.cpp:200] ip3 needs backward computation.
I0428 19:34:50.481364 23397 net.cpp:200] relu2 needs backward computation.
I0428 19:34:50.481365 23397 net.cpp:200] ip2 needs backward computation.
I0428 19:34:50.481369 23397 net.cpp:200] relu1 needs backward computation.
I0428 19:34:50.481371 23397 net.cpp:200] ip1 needs backward computation.
I0428 19:34:50.481384 23397 net.cpp:200] pool0 needs backward computation.
I0428 19:34:50.481387 23397 net.cpp:200] conv0 needs backward computation.
I0428 19:34:50.481390 23397 net.cpp:202] mnist does not need backward computation.
I0428 19:34:50.481393 23397 net.cpp:244] This network produces output loss
I0428 19:34:50.481418 23397 net.cpp:257] Network initialization done.
I0428 19:34:50.481719 23397 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test212.prototxt
I0428 19:34:50.481758 23397 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:34:50.481837 23397 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:50.481904 23397 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:50.481961 23397 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:34:50.481972 23397 net.cpp:86] Creating Layer mnist
I0428 19:34:50.481978 23397 net.cpp:382] mnist -> data
I0428 19:34:50.481986 23397 net.cpp:382] mnist -> label
I0428 19:34:50.482072 23397 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:34:50.483239 23397 net.cpp:124] Setting up mnist
I0428 19:34:50.483266 23397 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:34:50.483271 23397 net.cpp:131] Top shape: 100 (100)
I0428 19:34:50.483276 23397 net.cpp:139] Memory required for data: 314000
I0428 19:34:50.483279 23397 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:34:50.483317 23397 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:34:50.483321 23397 net.cpp:408] label_mnist_1_split <- label
I0428 19:34:50.483343 23397 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:34:50.483366 23397 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:34:50.483425 23397 net.cpp:124] Setting up label_mnist_1_split
I0428 19:34:50.483433 23397 net.cpp:131] Top shape: 100 (100)
I0428 19:34:50.483436 23397 net.cpp:131] Top shape: 100 (100)
I0428 19:34:50.483438 23397 net.cpp:139] Memory required for data: 314800
I0428 19:34:50.483451 23397 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:50.483463 23397 net.cpp:86] Creating Layer conv0
I0428 19:34:50.483465 23397 net.cpp:408] conv0 <- data
I0428 19:34:50.483470 23397 net.cpp:382] conv0 -> conv0
I0428 19:34:50.485306 23397 net.cpp:124] Setting up conv0
I0428 19:34:50.485321 23397 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:34:50.485325 23397 net.cpp:139] Memory required for data: 11834800
I0428 19:34:50.485335 23397 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:50.485343 23397 net.cpp:86] Creating Layer pool0
I0428 19:34:50.485347 23397 net.cpp:408] pool0 <- conv0
I0428 19:34:50.485352 23397 net.cpp:382] pool0 -> pool0
I0428 19:34:50.485411 23397 net.cpp:124] Setting up pool0
I0428 19:34:50.485417 23397 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:34:50.485420 23397 net.cpp:139] Memory required for data: 14714800
I0428 19:34:50.485424 23397 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:50.485446 23397 net.cpp:86] Creating Layer ip1
I0428 19:34:50.485450 23397 net.cpp:408] ip1 <- pool0
I0428 19:34:50.485455 23397 net.cpp:382] ip1 -> ip1
I0428 19:34:50.486004 23397 net.cpp:124] Setting up ip1
I0428 19:34:50.486011 23397 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:50.486014 23397 net.cpp:139] Memory required for data: 14718800
I0428 19:34:50.486021 23397 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:50.486042 23397 net.cpp:86] Creating Layer relu1
I0428 19:34:50.486044 23397 net.cpp:408] relu1 <- ip1
I0428 19:34:50.486049 23397 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:50.486290 23397 net.cpp:124] Setting up relu1
I0428 19:34:50.486300 23397 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:50.486304 23397 net.cpp:139] Memory required for data: 14722800
I0428 19:34:50.486307 23397 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:50.486331 23397 net.cpp:86] Creating Layer ip2
I0428 19:34:50.486335 23397 net.cpp:408] ip2 <- ip1
I0428 19:34:50.486338 23397 net.cpp:382] ip2 -> ip2
I0428 19:34:50.486435 23397 net.cpp:124] Setting up ip2
I0428 19:34:50.486443 23397 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:34:50.486445 23397 net.cpp:139] Memory required for data: 14732800
I0428 19:34:50.486454 23397 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:50.486459 23397 net.cpp:86] Creating Layer relu2
I0428 19:34:50.486476 23397 net.cpp:408] relu2 <- ip2
I0428 19:34:50.486480 23397 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:50.487316 23397 net.cpp:124] Setting up relu2
I0428 19:34:50.487329 23397 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:34:50.487332 23397 net.cpp:139] Memory required for data: 14742800
I0428 19:34:50.487336 23397 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:50.487344 23397 net.cpp:86] Creating Layer ip3
I0428 19:34:50.487349 23397 net.cpp:408] ip3 <- ip2
I0428 19:34:50.487355 23397 net.cpp:382] ip3 -> ip3
I0428 19:34:50.487560 23397 net.cpp:124] Setting up ip3
I0428 19:34:50.487567 23397 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:50.487571 23397 net.cpp:139] Memory required for data: 14746800
I0428 19:34:50.487577 23397 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:50.487584 23397 net.cpp:86] Creating Layer relu3
I0428 19:34:50.487588 23397 net.cpp:408] relu3 <- ip3
I0428 19:34:50.487592 23397 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:50.487768 23397 net.cpp:124] Setting up relu3
I0428 19:34:50.487777 23397 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:50.487782 23397 net.cpp:139] Memory required for data: 14750800
I0428 19:34:50.487784 23397 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:34:50.487790 23397 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:34:50.487793 23397 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:34:50.487798 23397 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:34:50.487807 23397 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:34:50.487850 23397 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:34:50.487857 23397 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:50.487872 23397 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:50.487876 23397 net.cpp:139] Memory required for data: 14758800
I0428 19:34:50.487879 23397 layer_factory.hpp:77] Creating layer accuracy
I0428 19:34:50.487890 23397 net.cpp:86] Creating Layer accuracy
I0428 19:34:50.487895 23397 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:34:50.487900 23397 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:34:50.487905 23397 net.cpp:382] accuracy -> accuracy
I0428 19:34:50.487912 23397 net.cpp:124] Setting up accuracy
I0428 19:34:50.487916 23397 net.cpp:131] Top shape: (1)
I0428 19:34:50.487920 23397 net.cpp:139] Memory required for data: 14758804
I0428 19:34:50.487922 23397 layer_factory.hpp:77] Creating layer loss
I0428 19:34:50.487927 23397 net.cpp:86] Creating Layer loss
I0428 19:34:50.487931 23397 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:34:50.487934 23397 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:34:50.487941 23397 net.cpp:382] loss -> loss
I0428 19:34:50.487947 23397 layer_factory.hpp:77] Creating layer loss
I0428 19:34:50.488329 23397 net.cpp:124] Setting up loss
I0428 19:34:50.488340 23397 net.cpp:131] Top shape: (1)
I0428 19:34:50.488343 23397 net.cpp:134]     with loss weight 1
I0428 19:34:50.488350 23397 net.cpp:139] Memory required for data: 14758808
I0428 19:34:50.488353 23397 net.cpp:200] loss needs backward computation.
I0428 19:34:50.488358 23397 net.cpp:202] accuracy does not need backward computation.
I0428 19:34:50.488368 23397 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:34:50.488371 23397 net.cpp:200] relu3 needs backward computation.
I0428 19:34:50.488374 23397 net.cpp:200] ip3 needs backward computation.
I0428 19:34:50.488378 23397 net.cpp:200] relu2 needs backward computation.
I0428 19:34:50.488381 23397 net.cpp:200] ip2 needs backward computation.
I0428 19:34:50.488384 23397 net.cpp:200] relu1 needs backward computation.
I0428 19:34:50.488386 23397 net.cpp:200] ip1 needs backward computation.
I0428 19:34:50.488395 23397 net.cpp:200] pool0 needs backward computation.
I0428 19:34:50.488404 23397 net.cpp:200] conv0 needs backward computation.
I0428 19:34:50.488407 23397 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:34:50.488411 23397 net.cpp:202] mnist does not need backward computation.
I0428 19:34:50.488415 23397 net.cpp:244] This network produces output accuracy
I0428 19:34:50.488418 23397 net.cpp:244] This network produces output loss
I0428 19:34:50.488430 23397 net.cpp:257] Network initialization done.
I0428 19:34:50.488467 23397 solver.cpp:56] Solver scaffolding done.
I0428 19:34:50.488760 23397 caffe.cpp:248] Starting Optimization
I0428 19:34:50.488766 23397 solver.cpp:273] Solving LeNet
I0428 19:34:50.488770 23397 solver.cpp:274] Learning Rate Policy: inv
I0428 19:34:50.489595 23397 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:34:50.585933 23404 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:50.588572 23397 solver.cpp:398]     Test net output #0: accuracy = 0.1245
I0428 19:34:50.588590 23397 solver.cpp:398]     Test net output #1: loss = 2.2997 (* 1 = 2.2997 loss)
I0428 19:34:50.592824 23397 solver.cpp:219] Iteration 0 (0 iter/s, 0.104024s/100 iters), loss = 2.29517
I0428 19:34:50.592862 23397 solver.cpp:238]     Train net output #0: loss = 2.29517 (* 1 = 2.29517 loss)
I0428 19:34:50.592874 23397 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:34:50.731964 23397 solver.cpp:219] Iteration 100 (718.9 iter/s, 0.139101s/100 iters), loss = 0.974608
I0428 19:34:50.731987 23397 solver.cpp:238]     Train net output #0: loss = 0.974608 (* 1 = 0.974608 loss)
I0428 19:34:50.731993 23397 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:34:50.871666 23397 solver.cpp:219] Iteration 200 (715.992 iter/s, 0.139666s/100 iters), loss = 1.36026
I0428 19:34:50.871690 23397 solver.cpp:238]     Train net output #0: loss = 1.36026 (* 1 = 1.36026 loss)
I0428 19:34:50.871696 23397 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:34:51.015318 23397 solver.cpp:219] Iteration 300 (696.326 iter/s, 0.143611s/100 iters), loss = 1.08679
I0428 19:34:51.015360 23397 solver.cpp:238]     Train net output #0: loss = 1.08679 (* 1 = 1.08679 loss)
I0428 19:34:51.015368 23397 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:34:51.157095 23397 solver.cpp:219] Iteration 400 (705.593 iter/s, 0.141725s/100 iters), loss = 1.37097
I0428 19:34:51.157135 23397 solver.cpp:238]     Train net output #0: loss = 1.37097 (* 1 = 1.37097 loss)
I0428 19:34:51.157141 23397 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:34:51.296735 23397 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:34:51.392807 23404 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:51.395412 23397 solver.cpp:398]     Test net output #0: accuracy = 0.6579
I0428 19:34:51.395433 23397 solver.cpp:398]     Test net output #1: loss = 1.07672 (* 1 = 1.07672 loss)
I0428 19:34:51.396764 23397 solver.cpp:219] Iteration 500 (417.345 iter/s, 0.23961s/100 iters), loss = 1.13017
I0428 19:34:51.396788 23397 solver.cpp:238]     Train net output #0: loss = 1.13017 (* 1 = 1.13017 loss)
I0428 19:34:51.396795 23397 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:34:51.545656 23397 solver.cpp:219] Iteration 600 (671.81 iter/s, 0.148852s/100 iters), loss = 0.861537
I0428 19:34:51.545696 23397 solver.cpp:238]     Train net output #0: loss = 0.861537 (* 1 = 0.861537 loss)
I0428 19:34:51.545704 23397 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:34:51.689954 23397 solver.cpp:219] Iteration 700 (693.256 iter/s, 0.144247s/100 iters), loss = 0.824411
I0428 19:34:51.689988 23397 solver.cpp:238]     Train net output #0: loss = 0.824411 (* 1 = 0.824411 loss)
I0428 19:34:51.689996 23397 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:34:51.835499 23397 solver.cpp:219] Iteration 800 (687.304 iter/s, 0.145496s/100 iters), loss = 0.978718
I0428 19:34:51.835531 23397 solver.cpp:238]     Train net output #0: loss = 0.978718 (* 1 = 0.978718 loss)
I0428 19:34:51.835539 23397 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:34:51.978368 23397 solver.cpp:219] Iteration 900 (700.164 iter/s, 0.142824s/100 iters), loss = 1.01604
I0428 19:34:51.978401 23397 solver.cpp:238]     Train net output #0: loss = 1.01604 (* 1 = 1.01604 loss)
I0428 19:34:51.978410 23397 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:34:52.025764 23403 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:52.119448 23397 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:34:52.121522 23397 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:34:52.123109 23397 solver.cpp:311] Iteration 1000, loss = 0.709794
I0428 19:34:52.123129 23397 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:34:52.223073 23404 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:52.225525 23397 solver.cpp:398]     Test net output #0: accuracy = 0.7576
I0428 19:34:52.225548 23397 solver.cpp:398]     Test net output #1: loss = 0.833542 (* 1 = 0.833542 loss)
I0428 19:34:52.225558 23397 solver.cpp:316] Optimization Done.
I0428 19:34:52.225561 23397 caffe.cpp:259] Optimization Done.
