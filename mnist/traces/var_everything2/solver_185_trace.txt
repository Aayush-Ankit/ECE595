I0428 19:33:39.087461 23150 caffe.cpp:218] Using GPUs 0
I0428 19:33:39.127439 23150 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:39.651119 23150 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test185.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:39.651260 23150 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test185.prototxt
I0428 19:33:39.651635 23150 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:39.651653 23150 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:39.651741 23150 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:39.651813 23150 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:39.651913 23150 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:39.651939 23150 net.cpp:86] Creating Layer mnist
I0428 19:33:39.651949 23150 net.cpp:382] mnist -> data
I0428 19:33:39.651973 23150 net.cpp:382] mnist -> label
I0428 19:33:39.653097 23150 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:39.655573 23150 net.cpp:124] Setting up mnist
I0428 19:33:39.655592 23150 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:39.655603 23150 net.cpp:131] Top shape: 64 (64)
I0428 19:33:39.655609 23150 net.cpp:139] Memory required for data: 200960
I0428 19:33:39.655618 23150 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:39.655634 23150 net.cpp:86] Creating Layer conv0
I0428 19:33:39.655640 23150 net.cpp:408] conv0 <- data
I0428 19:33:39.655653 23150 net.cpp:382] conv0 -> conv0
I0428 19:33:39.941460 23150 net.cpp:124] Setting up conv0
I0428 19:33:39.941493 23150 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:39.941498 23150 net.cpp:139] Memory required for data: 3887360
I0428 19:33:39.941515 23150 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:39.941530 23150 net.cpp:86] Creating Layer pool0
I0428 19:33:39.941556 23150 net.cpp:408] pool0 <- conv0
I0428 19:33:39.941565 23150 net.cpp:382] pool0 -> pool0
I0428 19:33:39.941622 23150 net.cpp:124] Setting up pool0
I0428 19:33:39.941632 23150 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:39.941635 23150 net.cpp:139] Memory required for data: 4808960
I0428 19:33:39.941639 23150 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:39.941651 23150 net.cpp:86] Creating Layer ip1
I0428 19:33:39.941655 23150 net.cpp:408] ip1 <- pool0
I0428 19:33:39.941661 23150 net.cpp:382] ip1 -> ip1
I0428 19:33:39.943382 23150 net.cpp:124] Setting up ip1
I0428 19:33:39.943399 23150 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:39.943403 23150 net.cpp:139] Memory required for data: 4815360
I0428 19:33:39.943413 23150 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:39.943421 23150 net.cpp:86] Creating Layer relu1
I0428 19:33:39.943425 23150 net.cpp:408] relu1 <- ip1
I0428 19:33:39.943431 23150 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:39.943648 23150 net.cpp:124] Setting up relu1
I0428 19:33:39.943658 23150 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:39.943662 23150 net.cpp:139] Memory required for data: 4821760
I0428 19:33:39.943666 23150 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:39.943677 23150 net.cpp:86] Creating Layer ip2
I0428 19:33:39.943681 23150 net.cpp:408] ip2 <- ip1
I0428 19:33:39.943688 23150 net.cpp:382] ip2 -> ip2
I0428 19:33:39.944800 23150 net.cpp:124] Setting up ip2
I0428 19:33:39.944821 23150 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:39.944825 23150 net.cpp:139] Memory required for data: 4834560
I0428 19:33:39.944836 23150 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:39.944842 23150 net.cpp:86] Creating Layer relu2
I0428 19:33:39.944846 23150 net.cpp:408] relu2 <- ip2
I0428 19:33:39.944854 23150 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:39.945729 23150 net.cpp:124] Setting up relu2
I0428 19:33:39.945744 23150 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:39.945749 23150 net.cpp:139] Memory required for data: 4847360
I0428 19:33:39.945752 23150 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:39.945760 23150 net.cpp:86] Creating Layer ip3
I0428 19:33:39.945765 23150 net.cpp:408] ip3 <- ip2
I0428 19:33:39.945772 23150 net.cpp:382] ip3 -> ip3
I0428 19:33:39.945900 23150 net.cpp:124] Setting up ip3
I0428 19:33:39.945909 23150 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:39.945914 23150 net.cpp:139] Memory required for data: 4849920
I0428 19:33:39.945920 23150 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:39.945927 23150 net.cpp:86] Creating Layer relu3
I0428 19:33:39.945930 23150 net.cpp:408] relu3 <- ip3
I0428 19:33:39.945937 23150 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:39.946137 23150 net.cpp:124] Setting up relu3
I0428 19:33:39.946148 23150 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:39.946151 23150 net.cpp:139] Memory required for data: 4852480
I0428 19:33:39.946156 23150 layer_factory.hpp:77] Creating layer loss
I0428 19:33:39.946166 23150 net.cpp:86] Creating Layer loss
I0428 19:33:39.946168 23150 net.cpp:408] loss <- ip3
I0428 19:33:39.946173 23150 net.cpp:408] loss <- label
I0428 19:33:39.946180 23150 net.cpp:382] loss -> loss
I0428 19:33:39.946199 23150 layer_factory.hpp:77] Creating layer loss
I0428 19:33:39.946490 23150 net.cpp:124] Setting up loss
I0428 19:33:39.946499 23150 net.cpp:131] Top shape: (1)
I0428 19:33:39.946503 23150 net.cpp:134]     with loss weight 1
I0428 19:33:39.946519 23150 net.cpp:139] Memory required for data: 4852484
I0428 19:33:39.946523 23150 net.cpp:200] loss needs backward computation.
I0428 19:33:39.946527 23150 net.cpp:200] relu3 needs backward computation.
I0428 19:33:39.946530 23150 net.cpp:200] ip3 needs backward computation.
I0428 19:33:39.946534 23150 net.cpp:200] relu2 needs backward computation.
I0428 19:33:39.946537 23150 net.cpp:200] ip2 needs backward computation.
I0428 19:33:39.946540 23150 net.cpp:200] relu1 needs backward computation.
I0428 19:33:39.946543 23150 net.cpp:200] ip1 needs backward computation.
I0428 19:33:39.946558 23150 net.cpp:200] pool0 needs backward computation.
I0428 19:33:39.946563 23150 net.cpp:200] conv0 needs backward computation.
I0428 19:33:39.946566 23150 net.cpp:202] mnist does not need backward computation.
I0428 19:33:39.946569 23150 net.cpp:244] This network produces output loss
I0428 19:33:39.946583 23150 net.cpp:257] Network initialization done.
I0428 19:33:39.946918 23150 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test185.prototxt
I0428 19:33:39.946949 23150 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:39.947044 23150 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:39.947131 23150 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:39.947183 23150 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:39.947201 23150 net.cpp:86] Creating Layer mnist
I0428 19:33:39.947206 23150 net.cpp:382] mnist -> data
I0428 19:33:39.947216 23150 net.cpp:382] mnist -> label
I0428 19:33:39.947320 23150 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:39.948566 23150 net.cpp:124] Setting up mnist
I0428 19:33:39.948582 23150 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:39.948588 23150 net.cpp:131] Top shape: 100 (100)
I0428 19:33:39.948591 23150 net.cpp:139] Memory required for data: 314000
I0428 19:33:39.948596 23150 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:39.948612 23150 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:39.948616 23150 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:39.948622 23150 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:39.948632 23150 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:39.948684 23150 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:39.948691 23150 net.cpp:131] Top shape: 100 (100)
I0428 19:33:39.948695 23150 net.cpp:131] Top shape: 100 (100)
I0428 19:33:39.948698 23150 net.cpp:139] Memory required for data: 314800
I0428 19:33:39.948714 23150 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:39.948727 23150 net.cpp:86] Creating Layer conv0
I0428 19:33:39.948731 23150 net.cpp:408] conv0 <- data
I0428 19:33:39.948737 23150 net.cpp:382] conv0 -> conv0
I0428 19:33:39.950702 23150 net.cpp:124] Setting up conv0
I0428 19:33:39.950719 23150 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:39.950723 23150 net.cpp:139] Memory required for data: 6074800
I0428 19:33:39.950734 23150 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:39.950743 23150 net.cpp:86] Creating Layer pool0
I0428 19:33:39.950749 23150 net.cpp:408] pool0 <- conv0
I0428 19:33:39.950757 23150 net.cpp:382] pool0 -> pool0
I0428 19:33:39.950798 23150 net.cpp:124] Setting up pool0
I0428 19:33:39.950805 23150 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:39.950809 23150 net.cpp:139] Memory required for data: 7514800
I0428 19:33:39.950812 23150 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:39.950821 23150 net.cpp:86] Creating Layer ip1
I0428 19:33:39.950824 23150 net.cpp:408] ip1 <- pool0
I0428 19:33:39.950830 23150 net.cpp:382] ip1 -> ip1
I0428 19:33:39.951550 23150 net.cpp:124] Setting up ip1
I0428 19:33:39.951560 23150 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:39.951565 23150 net.cpp:139] Memory required for data: 7524800
I0428 19:33:39.951573 23150 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:39.951581 23150 net.cpp:86] Creating Layer relu1
I0428 19:33:39.951584 23150 net.cpp:408] relu1 <- ip1
I0428 19:33:39.951589 23150 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:39.951797 23150 net.cpp:124] Setting up relu1
I0428 19:33:39.951808 23150 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:39.951812 23150 net.cpp:139] Memory required for data: 7534800
I0428 19:33:39.951815 23150 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:39.951824 23150 net.cpp:86] Creating Layer ip2
I0428 19:33:39.951828 23150 net.cpp:408] ip2 <- ip1
I0428 19:33:39.951835 23150 net.cpp:382] ip2 -> ip2
I0428 19:33:39.951984 23150 net.cpp:124] Setting up ip2
I0428 19:33:39.951993 23150 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:39.951997 23150 net.cpp:139] Memory required for data: 7554800
I0428 19:33:39.952005 23150 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:39.952011 23150 net.cpp:86] Creating Layer relu2
I0428 19:33:39.952015 23150 net.cpp:408] relu2 <- ip2
I0428 19:33:39.952023 23150 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:39.953016 23150 net.cpp:124] Setting up relu2
I0428 19:33:39.953032 23150 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:39.953035 23150 net.cpp:139] Memory required for data: 7574800
I0428 19:33:39.953039 23150 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:39.953050 23150 net.cpp:86] Creating Layer ip3
I0428 19:33:39.953055 23150 net.cpp:408] ip3 <- ip2
I0428 19:33:39.953063 23150 net.cpp:382] ip3 -> ip3
I0428 19:33:39.953194 23150 net.cpp:124] Setting up ip3
I0428 19:33:39.953204 23150 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:39.953208 23150 net.cpp:139] Memory required for data: 7578800
I0428 19:33:39.953215 23150 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:39.953222 23150 net.cpp:86] Creating Layer relu3
I0428 19:33:39.953227 23150 net.cpp:408] relu3 <- ip3
I0428 19:33:39.953233 23150 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:39.953423 23150 net.cpp:124] Setting up relu3
I0428 19:33:39.953433 23150 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:39.953435 23150 net.cpp:139] Memory required for data: 7582800
I0428 19:33:39.953440 23150 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:39.953447 23150 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:39.953451 23150 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:39.953457 23150 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:39.953464 23150 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:39.953508 23150 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:39.953516 23150 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:39.953521 23150 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:39.953536 23150 net.cpp:139] Memory required for data: 7590800
I0428 19:33:39.953541 23150 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:39.953547 23150 net.cpp:86] Creating Layer accuracy
I0428 19:33:39.953552 23150 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:39.953565 23150 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:39.953572 23150 net.cpp:382] accuracy -> accuracy
I0428 19:33:39.953579 23150 net.cpp:124] Setting up accuracy
I0428 19:33:39.953584 23150 net.cpp:131] Top shape: (1)
I0428 19:33:39.953588 23150 net.cpp:139] Memory required for data: 7590804
I0428 19:33:39.953593 23150 layer_factory.hpp:77] Creating layer loss
I0428 19:33:39.953605 23150 net.cpp:86] Creating Layer loss
I0428 19:33:39.953610 23150 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:39.953614 23150 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:39.953627 23150 net.cpp:382] loss -> loss
I0428 19:33:39.953634 23150 layer_factory.hpp:77] Creating layer loss
I0428 19:33:39.953980 23150 net.cpp:124] Setting up loss
I0428 19:33:39.953991 23150 net.cpp:131] Top shape: (1)
I0428 19:33:39.953995 23150 net.cpp:134]     with loss weight 1
I0428 19:33:39.954002 23150 net.cpp:139] Memory required for data: 7590808
I0428 19:33:39.954006 23150 net.cpp:200] loss needs backward computation.
I0428 19:33:39.954011 23150 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:39.954015 23150 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:39.954020 23150 net.cpp:200] relu3 needs backward computation.
I0428 19:33:39.954022 23150 net.cpp:200] ip3 needs backward computation.
I0428 19:33:39.954025 23150 net.cpp:200] relu2 needs backward computation.
I0428 19:33:39.954028 23150 net.cpp:200] ip2 needs backward computation.
I0428 19:33:39.954031 23150 net.cpp:200] relu1 needs backward computation.
I0428 19:33:39.954035 23150 net.cpp:200] ip1 needs backward computation.
I0428 19:33:39.954038 23150 net.cpp:200] pool0 needs backward computation.
I0428 19:33:39.954042 23150 net.cpp:200] conv0 needs backward computation.
I0428 19:33:39.954047 23150 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:39.954051 23150 net.cpp:202] mnist does not need backward computation.
I0428 19:33:39.954054 23150 net.cpp:244] This network produces output accuracy
I0428 19:33:39.954059 23150 net.cpp:244] This network produces output loss
I0428 19:33:39.954071 23150 net.cpp:257] Network initialization done.
I0428 19:33:39.954120 23150 solver.cpp:56] Solver scaffolding done.
I0428 19:33:39.954433 23150 caffe.cpp:248] Starting Optimization
I0428 19:33:39.954440 23150 solver.cpp:273] Solving LeNet
I0428 19:33:39.954444 23150 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:39.956087 23150 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:39.963807 23150 blocking_queue.cpp:49] Waiting for data
I0428 19:33:40.033368 23157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:40.034432 23150 solver.cpp:398]     Test net output #0: accuracy = 0.1425
I0428 19:33:40.034457 23150 solver.cpp:398]     Test net output #1: loss = 2.2951 (* 1 = 2.2951 loss)
I0428 19:33:40.038380 23150 solver.cpp:219] Iteration 0 (0 iter/s, 0.0839067s/100 iters), loss = 2.29887
I0428 19:33:40.038409 23150 solver.cpp:238]     Train net output #0: loss = 2.29887 (* 1 = 2.29887 loss)
I0428 19:33:40.038421 23150 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:40.137936 23150 solver.cpp:219] Iteration 100 (1004.89 iter/s, 0.0995132s/100 iters), loss = 1.22973
I0428 19:33:40.137972 23150 solver.cpp:238]     Train net output #0: loss = 1.22973 (* 1 = 1.22973 loss)
I0428 19:33:40.137981 23150 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:40.246757 23150 solver.cpp:219] Iteration 200 (919.351 iter/s, 0.108772s/100 iters), loss = 0.507151
I0428 19:33:40.246795 23150 solver.cpp:238]     Train net output #0: loss = 0.507151 (* 1 = 0.507151 loss)
I0428 19:33:40.246804 23150 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:40.347874 23150 solver.cpp:219] Iteration 300 (989.415 iter/s, 0.10107s/100 iters), loss = 0.29006
I0428 19:33:40.347903 23150 solver.cpp:238]     Train net output #0: loss = 0.29006 (* 1 = 0.29006 loss)
I0428 19:33:40.347910 23150 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:40.446748 23150 solver.cpp:219] Iteration 400 (1011.8 iter/s, 0.0988342s/100 iters), loss = 0.133972
I0428 19:33:40.446777 23150 solver.cpp:238]     Train net output #0: loss = 0.133972 (* 1 = 0.133972 loss)
I0428 19:33:40.446784 23150 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:40.554867 23150 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:40.622885 23157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:40.625340 23150 solver.cpp:398]     Test net output #0: accuracy = 0.9389
I0428 19:33:40.625362 23150 solver.cpp:398]     Test net output #1: loss = 0.198105 (* 1 = 0.198105 loss)
I0428 19:33:40.626303 23150 solver.cpp:219] Iteration 500 (557.065 iter/s, 0.179512s/100 iters), loss = 0.21328
I0428 19:33:40.626328 23150 solver.cpp:238]     Train net output #0: loss = 0.21328 (* 1 = 0.21328 loss)
I0428 19:33:40.626340 23150 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:40.736377 23150 solver.cpp:219] Iteration 600 (908.801 iter/s, 0.110035s/100 iters), loss = 0.132128
I0428 19:33:40.736410 23150 solver.cpp:238]     Train net output #0: loss = 0.132128 (* 1 = 0.132128 loss)
I0428 19:33:40.736418 23150 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:40.841001 23150 solver.cpp:219] Iteration 700 (956.195 iter/s, 0.104581s/100 iters), loss = 0.295029
I0428 19:33:40.841042 23150 solver.cpp:238]     Train net output #0: loss = 0.295029 (* 1 = 0.295029 loss)
I0428 19:33:40.841049 23150 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:40.941035 23150 solver.cpp:219] Iteration 800 (1000.19 iter/s, 0.0999814s/100 iters), loss = 0.260332
I0428 19:33:40.941063 23150 solver.cpp:238]     Train net output #0: loss = 0.260332 (* 1 = 0.260332 loss)
I0428 19:33:40.941082 23150 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:41.041198 23150 solver.cpp:219] Iteration 900 (998.765 iter/s, 0.100124s/100 iters), loss = 0.146692
I0428 19:33:41.041240 23150 solver.cpp:238]     Train net output #0: loss = 0.146692 (* 1 = 0.146692 loss)
I0428 19:33:41.041259 23150 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:41.076882 23156 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:41.145195 23150 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:41.147368 23150 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:41.148831 23150 solver.cpp:311] Iteration 1000, loss = 0.182674
I0428 19:33:41.148849 23150 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:41.217294 23157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:41.219719 23150 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0428 19:33:41.219740 23150 solver.cpp:398]     Test net output #1: loss = 0.115866 (* 1 = 0.115866 loss)
I0428 19:33:41.219755 23150 solver.cpp:316] Optimization Done.
I0428 19:33:41.219759 23150 caffe.cpp:259] Optimization Done.
