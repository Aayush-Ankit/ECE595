I0428 19:56:42.716433 28499 caffe.cpp:218] Using GPUs 0
I0428 19:56:42.752499 28499 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:43.206948 28499 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test767.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:43.207075 28499 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test767.prototxt
I0428 19:56:43.207434 28499 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:43.207482 28499 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:43.207561 28499 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:43.207625 28499 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:43.207705 28499 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:43.207723 28499 net.cpp:86] Creating Layer mnist
I0428 19:56:43.207731 28499 net.cpp:382] mnist -> data
I0428 19:56:43.207748 28499 net.cpp:382] mnist -> label
I0428 19:56:43.208744 28499 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:43.211079 28499 net.cpp:124] Setting up mnist
I0428 19:56:43.211109 28499 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:43.211114 28499 net.cpp:131] Top shape: 64 (64)
I0428 19:56:43.211117 28499 net.cpp:139] Memory required for data: 200960
I0428 19:56:43.211122 28499 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:43.211146 28499 net.cpp:86] Creating Layer conv0
I0428 19:56:43.211164 28499 net.cpp:408] conv0 <- data
I0428 19:56:43.211175 28499 net.cpp:382] conv0 -> conv0
I0428 19:56:43.445047 28499 net.cpp:124] Setting up conv0
I0428 19:56:43.445080 28499 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:43.445085 28499 net.cpp:139] Memory required for data: 1675520
I0428 19:56:43.445101 28499 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:43.445112 28499 net.cpp:86] Creating Layer pool0
I0428 19:56:43.445116 28499 net.cpp:408] pool0 <- conv0
I0428 19:56:43.445122 28499 net.cpp:382] pool0 -> pool0
I0428 19:56:43.445195 28499 net.cpp:124] Setting up pool0
I0428 19:56:43.445200 28499 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:43.445202 28499 net.cpp:139] Memory required for data: 2044160
I0428 19:56:43.445205 28499 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:43.445215 28499 net.cpp:86] Creating Layer conv1
I0428 19:56:43.445219 28499 net.cpp:408] conv1 <- pool0
I0428 19:56:43.445222 28499 net.cpp:382] conv1 -> conv1
I0428 19:56:43.447012 28499 net.cpp:124] Setting up conv1
I0428 19:56:43.447043 28499 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:43.447047 28499 net.cpp:139] Memory required for data: 2076928
I0428 19:56:43.447055 28499 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:43.447063 28499 net.cpp:86] Creating Layer pool1
I0428 19:56:43.447067 28499 net.cpp:408] pool1 <- conv1
I0428 19:56:43.447070 28499 net.cpp:382] pool1 -> pool1
I0428 19:56:43.447106 28499 net.cpp:124] Setting up pool1
I0428 19:56:43.447111 28499 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:43.447113 28499 net.cpp:139] Memory required for data: 2085120
I0428 19:56:43.447116 28499 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:43.447124 28499 net.cpp:86] Creating Layer ip1
I0428 19:56:43.447125 28499 net.cpp:408] ip1 <- pool1
I0428 19:56:43.447130 28499 net.cpp:382] ip1 -> ip1
I0428 19:56:43.447230 28499 net.cpp:124] Setting up ip1
I0428 19:56:43.447238 28499 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:43.447242 28499 net.cpp:139] Memory required for data: 2091520
I0428 19:56:43.447247 28499 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:43.447252 28499 net.cpp:86] Creating Layer relu1
I0428 19:56:43.447255 28499 net.cpp:408] relu1 <- ip1
I0428 19:56:43.447259 28499 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:43.447422 28499 net.cpp:124] Setting up relu1
I0428 19:56:43.447432 28499 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:43.447434 28499 net.cpp:139] Memory required for data: 2097920
I0428 19:56:43.447438 28499 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:43.447444 28499 net.cpp:86] Creating Layer ip2
I0428 19:56:43.447448 28499 net.cpp:408] ip2 <- ip1
I0428 19:56:43.447453 28499 net.cpp:382] ip2 -> ip2
I0428 19:56:43.447549 28499 net.cpp:124] Setting up ip2
I0428 19:56:43.447556 28499 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:43.447558 28499 net.cpp:139] Memory required for data: 2104320
I0428 19:56:43.447564 28499 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:43.447569 28499 net.cpp:86] Creating Layer relu2
I0428 19:56:43.447572 28499 net.cpp:408] relu2 <- ip2
I0428 19:56:43.447576 28499 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:43.448272 28499 net.cpp:124] Setting up relu2
I0428 19:56:43.448283 28499 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:43.448302 28499 net.cpp:139] Memory required for data: 2110720
I0428 19:56:43.448305 28499 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:43.448312 28499 net.cpp:86] Creating Layer ip3
I0428 19:56:43.448314 28499 net.cpp:408] ip3 <- ip2
I0428 19:56:43.448321 28499 net.cpp:382] ip3 -> ip3
I0428 19:56:43.448422 28499 net.cpp:124] Setting up ip3
I0428 19:56:43.448429 28499 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:43.448443 28499 net.cpp:139] Memory required for data: 2113280
I0428 19:56:43.448451 28499 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:43.448456 28499 net.cpp:86] Creating Layer relu3
I0428 19:56:43.448458 28499 net.cpp:408] relu3 <- ip3
I0428 19:56:43.448462 28499 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:43.448633 28499 net.cpp:124] Setting up relu3
I0428 19:56:43.448642 28499 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:43.448644 28499 net.cpp:139] Memory required for data: 2115840
I0428 19:56:43.448647 28499 layer_factory.hpp:77] Creating layer loss
I0428 19:56:43.448654 28499 net.cpp:86] Creating Layer loss
I0428 19:56:43.448657 28499 net.cpp:408] loss <- ip3
I0428 19:56:43.448660 28499 net.cpp:408] loss <- label
I0428 19:56:43.448665 28499 net.cpp:382] loss -> loss
I0428 19:56:43.448679 28499 layer_factory.hpp:77] Creating layer loss
I0428 19:56:43.448976 28499 net.cpp:124] Setting up loss
I0428 19:56:43.448999 28499 net.cpp:131] Top shape: (1)
I0428 19:56:43.449002 28499 net.cpp:134]     with loss weight 1
I0428 19:56:43.449031 28499 net.cpp:139] Memory required for data: 2115844
I0428 19:56:43.449035 28499 net.cpp:200] loss needs backward computation.
I0428 19:56:43.449040 28499 net.cpp:200] relu3 needs backward computation.
I0428 19:56:43.449043 28499 net.cpp:200] ip3 needs backward computation.
I0428 19:56:43.449046 28499 net.cpp:200] relu2 needs backward computation.
I0428 19:56:43.449049 28499 net.cpp:200] ip2 needs backward computation.
I0428 19:56:43.449053 28499 net.cpp:200] relu1 needs backward computation.
I0428 19:56:43.449055 28499 net.cpp:200] ip1 needs backward computation.
I0428 19:56:43.449059 28499 net.cpp:200] pool1 needs backward computation.
I0428 19:56:43.449061 28499 net.cpp:200] conv1 needs backward computation.
I0428 19:56:43.449065 28499 net.cpp:200] pool0 needs backward computation.
I0428 19:56:43.449069 28499 net.cpp:200] conv0 needs backward computation.
I0428 19:56:43.449071 28499 net.cpp:202] mnist does not need backward computation.
I0428 19:56:43.449074 28499 net.cpp:244] This network produces output loss
I0428 19:56:43.449084 28499 net.cpp:257] Network initialization done.
I0428 19:56:43.449484 28499 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test767.prototxt
I0428 19:56:43.449527 28499 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:43.449616 28499 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:43.449714 28499 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:43.449756 28499 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:43.449769 28499 net.cpp:86] Creating Layer mnist
I0428 19:56:43.449774 28499 net.cpp:382] mnist -> data
I0428 19:56:43.449781 28499 net.cpp:382] mnist -> label
I0428 19:56:43.449863 28499 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:43.451783 28499 net.cpp:124] Setting up mnist
I0428 19:56:43.451797 28499 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:43.451800 28499 net.cpp:131] Top shape: 100 (100)
I0428 19:56:43.451803 28499 net.cpp:139] Memory required for data: 314000
I0428 19:56:43.451807 28499 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:43.451812 28499 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:43.451815 28499 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:43.451820 28499 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:43.451836 28499 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:43.451885 28499 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:43.451890 28499 net.cpp:131] Top shape: 100 (100)
I0428 19:56:43.451894 28499 net.cpp:131] Top shape: 100 (100)
I0428 19:56:43.451896 28499 net.cpp:139] Memory required for data: 314800
I0428 19:56:43.451900 28499 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:43.451910 28499 net.cpp:86] Creating Layer conv0
I0428 19:56:43.451915 28499 net.cpp:408] conv0 <- data
I0428 19:56:43.451918 28499 net.cpp:382] conv0 -> conv0
I0428 19:56:43.453675 28499 net.cpp:124] Setting up conv0
I0428 19:56:43.453689 28499 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:43.453693 28499 net.cpp:139] Memory required for data: 2618800
I0428 19:56:43.453703 28499 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:43.453711 28499 net.cpp:86] Creating Layer pool0
I0428 19:56:43.453713 28499 net.cpp:408] pool0 <- conv0
I0428 19:56:43.453718 28499 net.cpp:382] pool0 -> pool0
I0428 19:56:43.453753 28499 net.cpp:124] Setting up pool0
I0428 19:56:43.453758 28499 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:43.453760 28499 net.cpp:139] Memory required for data: 3194800
I0428 19:56:43.453763 28499 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:43.453773 28499 net.cpp:86] Creating Layer conv1
I0428 19:56:43.453775 28499 net.cpp:408] conv1 <- pool0
I0428 19:56:43.453780 28499 net.cpp:382] conv1 -> conv1
I0428 19:56:43.455770 28499 net.cpp:124] Setting up conv1
I0428 19:56:43.455782 28499 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:43.455795 28499 net.cpp:139] Memory required for data: 3246000
I0428 19:56:43.455803 28499 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:43.455811 28499 net.cpp:86] Creating Layer pool1
I0428 19:56:43.455814 28499 net.cpp:408] pool1 <- conv1
I0428 19:56:43.455819 28499 net.cpp:382] pool1 -> pool1
I0428 19:56:43.455857 28499 net.cpp:124] Setting up pool1
I0428 19:56:43.455862 28499 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:43.455870 28499 net.cpp:139] Memory required for data: 3258800
I0428 19:56:43.455873 28499 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:43.455878 28499 net.cpp:86] Creating Layer ip1
I0428 19:56:43.455881 28499 net.cpp:408] ip1 <- pool1
I0428 19:56:43.455888 28499 net.cpp:382] ip1 -> ip1
I0428 19:56:43.455996 28499 net.cpp:124] Setting up ip1
I0428 19:56:43.456003 28499 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:43.456015 28499 net.cpp:139] Memory required for data: 3268800
I0428 19:56:43.456028 28499 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:43.456033 28499 net.cpp:86] Creating Layer relu1
I0428 19:56:43.456043 28499 net.cpp:408] relu1 <- ip1
I0428 19:56:43.456048 28499 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:43.456264 28499 net.cpp:124] Setting up relu1
I0428 19:56:43.456272 28499 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:43.456275 28499 net.cpp:139] Memory required for data: 3278800
I0428 19:56:43.456279 28499 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:43.456286 28499 net.cpp:86] Creating Layer ip2
I0428 19:56:43.456290 28499 net.cpp:408] ip2 <- ip1
I0428 19:56:43.456295 28499 net.cpp:382] ip2 -> ip2
I0428 19:56:43.456452 28499 net.cpp:124] Setting up ip2
I0428 19:56:43.456460 28499 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:43.456463 28499 net.cpp:139] Memory required for data: 3288800
I0428 19:56:43.456470 28499 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:43.456473 28499 net.cpp:86] Creating Layer relu2
I0428 19:56:43.456476 28499 net.cpp:408] relu2 <- ip2
I0428 19:56:43.456481 28499 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:43.456630 28499 net.cpp:124] Setting up relu2
I0428 19:56:43.456639 28499 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:43.456641 28499 net.cpp:139] Memory required for data: 3298800
I0428 19:56:43.456645 28499 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:43.456650 28499 net.cpp:86] Creating Layer ip3
I0428 19:56:43.456661 28499 net.cpp:408] ip3 <- ip2
I0428 19:56:43.456665 28499 net.cpp:382] ip3 -> ip3
I0428 19:56:43.456760 28499 net.cpp:124] Setting up ip3
I0428 19:56:43.456768 28499 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:43.456770 28499 net.cpp:139] Memory required for data: 3302800
I0428 19:56:43.456779 28499 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:43.456784 28499 net.cpp:86] Creating Layer relu3
I0428 19:56:43.456786 28499 net.cpp:408] relu3 <- ip3
I0428 19:56:43.456790 28499 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:43.457715 28499 net.cpp:124] Setting up relu3
I0428 19:56:43.457727 28499 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:43.457731 28499 net.cpp:139] Memory required for data: 3306800
I0428 19:56:43.457733 28499 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:43.457741 28499 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:43.457743 28499 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:43.457747 28499 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:43.457754 28499 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:43.457808 28499 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:43.457813 28499 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:43.457816 28499 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:43.457819 28499 net.cpp:139] Memory required for data: 3314800
I0428 19:56:43.457823 28499 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:43.457828 28499 net.cpp:86] Creating Layer accuracy
I0428 19:56:43.457830 28499 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:43.457839 28499 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:43.457844 28499 net.cpp:382] accuracy -> accuracy
I0428 19:56:43.457850 28499 net.cpp:124] Setting up accuracy
I0428 19:56:43.457859 28499 net.cpp:131] Top shape: (1)
I0428 19:56:43.457861 28499 net.cpp:139] Memory required for data: 3314804
I0428 19:56:43.457864 28499 layer_factory.hpp:77] Creating layer loss
I0428 19:56:43.457870 28499 net.cpp:86] Creating Layer loss
I0428 19:56:43.457871 28499 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:43.457875 28499 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:43.457880 28499 net.cpp:382] loss -> loss
I0428 19:56:43.457896 28499 layer_factory.hpp:77] Creating layer loss
I0428 19:56:43.458123 28499 net.cpp:124] Setting up loss
I0428 19:56:43.458132 28499 net.cpp:131] Top shape: (1)
I0428 19:56:43.458135 28499 net.cpp:134]     with loss weight 1
I0428 19:56:43.458142 28499 net.cpp:139] Memory required for data: 3314808
I0428 19:56:43.458153 28499 net.cpp:200] loss needs backward computation.
I0428 19:56:43.458158 28499 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:43.458161 28499 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:43.458164 28499 net.cpp:200] relu3 needs backward computation.
I0428 19:56:43.458166 28499 net.cpp:200] ip3 needs backward computation.
I0428 19:56:43.458181 28499 net.cpp:200] relu2 needs backward computation.
I0428 19:56:43.458184 28499 net.cpp:200] ip2 needs backward computation.
I0428 19:56:43.458187 28499 net.cpp:200] relu1 needs backward computation.
I0428 19:56:43.458195 28499 net.cpp:200] ip1 needs backward computation.
I0428 19:56:43.458202 28499 net.cpp:200] pool1 needs backward computation.
I0428 19:56:43.458205 28499 net.cpp:200] conv1 needs backward computation.
I0428 19:56:43.458209 28499 net.cpp:200] pool0 needs backward computation.
I0428 19:56:43.458211 28499 net.cpp:200] conv0 needs backward computation.
I0428 19:56:43.458220 28499 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:43.458225 28499 net.cpp:202] mnist does not need backward computation.
I0428 19:56:43.458226 28499 net.cpp:244] This network produces output accuracy
I0428 19:56:43.458230 28499 net.cpp:244] This network produces output loss
I0428 19:56:43.458246 28499 net.cpp:257] Network initialization done.
I0428 19:56:43.458286 28499 solver.cpp:56] Solver scaffolding done.
I0428 19:56:43.458606 28499 caffe.cpp:248] Starting Optimization
I0428 19:56:43.458611 28499 solver.cpp:273] Solving LeNet
I0428 19:56:43.458614 28499 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:43.459381 28499 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:43.462913 28499 blocking_queue.cpp:49] Waiting for data
I0428 19:56:43.536108 28506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:43.536597 28499 solver.cpp:398]     Test net output #0: accuracy = 0.1745
I0428 19:56:43.536615 28499 solver.cpp:398]     Test net output #1: loss = 2.3181 (* 1 = 2.3181 loss)
I0428 19:56:43.539047 28499 solver.cpp:219] Iteration 0 (0 iter/s, 0.0804096s/100 iters), loss = 2.33159
I0428 19:56:43.539072 28499 solver.cpp:238]     Train net output #0: loss = 2.33159 (* 1 = 2.33159 loss)
I0428 19:56:43.539083 28499 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:43.614082 28499 solver.cpp:219] Iteration 100 (1333.34 iter/s, 0.0749998s/100 iters), loss = 1.73066
I0428 19:56:43.614109 28499 solver.cpp:238]     Train net output #0: loss = 1.73066 (* 1 = 1.73066 loss)
I0428 19:56:43.614114 28499 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:43.687793 28499 solver.cpp:219] Iteration 200 (1357.35 iter/s, 0.0736727s/100 iters), loss = 0.607491
I0428 19:56:43.687815 28499 solver.cpp:238]     Train net output #0: loss = 0.607491 (* 1 = 0.607491 loss)
I0428 19:56:43.687821 28499 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:43.762759 28499 solver.cpp:219] Iteration 300 (1334.49 iter/s, 0.0749351s/100 iters), loss = 0.461626
I0428 19:56:43.762781 28499 solver.cpp:238]     Train net output #0: loss = 0.461626 (* 1 = 0.461626 loss)
I0428 19:56:43.762804 28499 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:43.838860 28499 solver.cpp:219] Iteration 400 (1314.61 iter/s, 0.076068s/100 iters), loss = 0.262949
I0428 19:56:43.838882 28499 solver.cpp:238]     Train net output #0: loss = 0.262949 (* 1 = 0.262949 loss)
I0428 19:56:43.838887 28499 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:43.913847 28499 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:43.966826 28506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:43.967372 28499 solver.cpp:398]     Test net output #0: accuracy = 0.9162
I0428 19:56:43.967393 28499 solver.cpp:398]     Test net output #1: loss = 0.276968 (* 1 = 0.276968 loss)
I0428 19:56:43.968152 28499 solver.cpp:219] Iteration 500 (773.643 iter/s, 0.129258s/100 iters), loss = 0.365265
I0428 19:56:43.968179 28499 solver.cpp:238]     Train net output #0: loss = 0.365265 (* 1 = 0.365265 loss)
I0428 19:56:43.968214 28499 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:44.048051 28499 solver.cpp:219] Iteration 600 (1252.15 iter/s, 0.0798628s/100 iters), loss = 0.105305
I0428 19:56:44.048074 28499 solver.cpp:238]     Train net output #0: loss = 0.105305 (* 1 = 0.105305 loss)
I0428 19:56:44.048095 28499 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:44.122253 28499 solver.cpp:219] Iteration 700 (1348.26 iter/s, 0.0741695s/100 iters), loss = 0.515329
I0428 19:56:44.122277 28499 solver.cpp:238]     Train net output #0: loss = 0.515329 (* 1 = 0.515329 loss)
I0428 19:56:44.122282 28499 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:44.194540 28499 solver.cpp:219] Iteration 800 (1384 iter/s, 0.0722545s/100 iters), loss = 0.494993
I0428 19:56:44.194578 28499 solver.cpp:238]     Train net output #0: loss = 0.494993 (* 1 = 0.494993 loss)
I0428 19:56:44.194584 28499 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:44.267774 28499 solver.cpp:219] Iteration 900 (1366.07 iter/s, 0.0732028s/100 iters), loss = 0.296774
I0428 19:56:44.267813 28499 solver.cpp:238]     Train net output #0: loss = 0.296775 (* 1 = 0.296775 loss)
I0428 19:56:44.267819 28499 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:44.292309 28505 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:44.345360 28499 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:44.346050 28499 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:44.346547 28499 solver.cpp:311] Iteration 1000, loss = 0.102885
I0428 19:56:44.346562 28499 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:44.420637 28506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:44.421140 28499 solver.cpp:398]     Test net output #0: accuracy = 0.9467
I0428 19:56:44.421160 28499 solver.cpp:398]     Test net output #1: loss = 0.166923 (* 1 = 0.166923 loss)
I0428 19:56:44.421165 28499 solver.cpp:316] Optimization Done.
I0428 19:56:44.421169 28499 caffe.cpp:259] Optimization Done.
