I0428 20:19:47.386968  1425 caffe.cpp:218] Using GPUs 0
I0428 20:19:47.415956  1425 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:47.868916  1425 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1349.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:47.869088  1425 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1349.prototxt
I0428 20:19:47.869599  1425 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:47.869619  1425 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:47.869748  1425 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:47.869843  1425 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:47.869963  1425 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:47.869989  1425 net.cpp:86] Creating Layer mnist
I0428 20:19:47.869998  1425 net.cpp:382] mnist -> data
I0428 20:19:47.870023  1425 net.cpp:382] mnist -> label
I0428 20:19:47.871357  1425 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:47.874220  1425 net.cpp:124] Setting up mnist
I0428 20:19:47.874255  1425 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:47.874264  1425 net.cpp:131] Top shape: 64 (64)
I0428 20:19:47.874269  1425 net.cpp:139] Memory required for data: 200960
I0428 20:19:47.874277  1425 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:47.874295  1425 net.cpp:86] Creating Layer conv0
I0428 20:19:47.874317  1425 net.cpp:408] conv0 <- data
I0428 20:19:47.874331  1425 net.cpp:382] conv0 -> conv0
I0428 20:19:48.174486  1425 net.cpp:124] Setting up conv0
I0428 20:19:48.174515  1425 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:48.174520  1425 net.cpp:139] Memory required for data: 7573760
I0428 20:19:48.174553  1425 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:48.174569  1425 net.cpp:86] Creating Layer pool0
I0428 20:19:48.174574  1425 net.cpp:408] pool0 <- conv0
I0428 20:19:48.174582  1425 net.cpp:382] pool0 -> pool0
I0428 20:19:48.174638  1425 net.cpp:124] Setting up pool0
I0428 20:19:48.174646  1425 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:48.174650  1425 net.cpp:139] Memory required for data: 9416960
I0428 20:19:48.174654  1425 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:48.174669  1425 net.cpp:86] Creating Layer conv1
I0428 20:19:48.174674  1425 net.cpp:408] conv1 <- pool0
I0428 20:19:48.174682  1425 net.cpp:382] conv1 -> conv1
I0428 20:19:48.177752  1425 net.cpp:124] Setting up conv1
I0428 20:19:48.177767  1425 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:48.177772  1425 net.cpp:139] Memory required for data: 9826560
I0428 20:19:48.177800  1425 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:48.177809  1425 net.cpp:86] Creating Layer pool1
I0428 20:19:48.177814  1425 net.cpp:408] pool1 <- conv1
I0428 20:19:48.177820  1425 net.cpp:382] pool1 -> pool1
I0428 20:19:48.177881  1425 net.cpp:124] Setting up pool1
I0428 20:19:48.177889  1425 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:48.177893  1425 net.cpp:139] Memory required for data: 9928960
I0428 20:19:48.177897  1425 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:48.177907  1425 net.cpp:86] Creating Layer ip1
I0428 20:19:48.177912  1425 net.cpp:408] ip1 <- pool1
I0428 20:19:48.177918  1425 net.cpp:382] ip1 -> ip1
I0428 20:19:48.179278  1425 net.cpp:124] Setting up ip1
I0428 20:19:48.179292  1425 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:48.179297  1425 net.cpp:139] Memory required for data: 9935360
I0428 20:19:48.179308  1425 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:48.179317  1425 net.cpp:86] Creating Layer relu1
I0428 20:19:48.179322  1425 net.cpp:408] relu1 <- ip1
I0428 20:19:48.179329  1425 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:48.179558  1425 net.cpp:124] Setting up relu1
I0428 20:19:48.179569  1425 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:48.179589  1425 net.cpp:139] Memory required for data: 9941760
I0428 20:19:48.179594  1425 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:48.179605  1425 net.cpp:86] Creating Layer ip2
I0428 20:19:48.179625  1425 net.cpp:408] ip2 <- ip1
I0428 20:19:48.179631  1425 net.cpp:382] ip2 -> ip2
I0428 20:19:48.179759  1425 net.cpp:124] Setting up ip2
I0428 20:19:48.179767  1425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:48.179771  1425 net.cpp:139] Memory required for data: 9944320
I0428 20:19:48.179780  1425 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:48.179790  1425 net.cpp:86] Creating Layer relu2
I0428 20:19:48.179795  1425 net.cpp:408] relu2 <- ip2
I0428 20:19:48.179800  1425 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:48.180927  1425 net.cpp:124] Setting up relu2
I0428 20:19:48.180959  1425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:48.180963  1425 net.cpp:139] Memory required for data: 9946880
I0428 20:19:48.180969  1425 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:48.180979  1425 net.cpp:86] Creating Layer ip3
I0428 20:19:48.180984  1425 net.cpp:408] ip3 <- ip2
I0428 20:19:48.180992  1425 net.cpp:382] ip3 -> ip3
I0428 20:19:48.181141  1425 net.cpp:124] Setting up ip3
I0428 20:19:48.181151  1425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:48.181155  1425 net.cpp:139] Memory required for data: 9949440
I0428 20:19:48.181166  1425 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:48.181174  1425 net.cpp:86] Creating Layer relu3
I0428 20:19:48.181177  1425 net.cpp:408] relu3 <- ip3
I0428 20:19:48.181185  1425 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:48.181412  1425 net.cpp:124] Setting up relu3
I0428 20:19:48.181423  1425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:48.181427  1425 net.cpp:139] Memory required for data: 9952000
I0428 20:19:48.181432  1425 layer_factory.hpp:77] Creating layer loss
I0428 20:19:48.181439  1425 net.cpp:86] Creating Layer loss
I0428 20:19:48.181443  1425 net.cpp:408] loss <- ip3
I0428 20:19:48.181448  1425 net.cpp:408] loss <- label
I0428 20:19:48.181457  1425 net.cpp:382] loss -> loss
I0428 20:19:48.181476  1425 layer_factory.hpp:77] Creating layer loss
I0428 20:19:48.181814  1425 net.cpp:124] Setting up loss
I0428 20:19:48.181826  1425 net.cpp:131] Top shape: (1)
I0428 20:19:48.181830  1425 net.cpp:134]     with loss weight 1
I0428 20:19:48.181851  1425 net.cpp:139] Memory required for data: 9952004
I0428 20:19:48.181856  1425 net.cpp:200] loss needs backward computation.
I0428 20:19:48.181861  1425 net.cpp:200] relu3 needs backward computation.
I0428 20:19:48.181866  1425 net.cpp:200] ip3 needs backward computation.
I0428 20:19:48.181870  1425 net.cpp:200] relu2 needs backward computation.
I0428 20:19:48.181874  1425 net.cpp:200] ip2 needs backward computation.
I0428 20:19:48.181879  1425 net.cpp:200] relu1 needs backward computation.
I0428 20:19:48.181884  1425 net.cpp:200] ip1 needs backward computation.
I0428 20:19:48.181887  1425 net.cpp:200] pool1 needs backward computation.
I0428 20:19:48.181891  1425 net.cpp:200] conv1 needs backward computation.
I0428 20:19:48.181896  1425 net.cpp:200] pool0 needs backward computation.
I0428 20:19:48.181900  1425 net.cpp:200] conv0 needs backward computation.
I0428 20:19:48.181905  1425 net.cpp:202] mnist does not need backward computation.
I0428 20:19:48.181910  1425 net.cpp:244] This network produces output loss
I0428 20:19:48.181924  1425 net.cpp:257] Network initialization done.
I0428 20:19:48.182451  1425 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1349.prototxt
I0428 20:19:48.182488  1425 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:48.182652  1425 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:48.182760  1425 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:48.182809  1425 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:48.182842  1425 net.cpp:86] Creating Layer mnist
I0428 20:19:48.182847  1425 net.cpp:382] mnist -> data
I0428 20:19:48.182857  1425 net.cpp:382] mnist -> label
I0428 20:19:48.182999  1425 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:48.185580  1425 net.cpp:124] Setting up mnist
I0428 20:19:48.185611  1425 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:48.185618  1425 net.cpp:131] Top shape: 100 (100)
I0428 20:19:48.185622  1425 net.cpp:139] Memory required for data: 314000
I0428 20:19:48.185627  1425 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:48.185642  1425 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:48.185647  1425 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:48.185652  1425 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:48.185662  1425 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:48.185758  1425 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:48.185770  1425 net.cpp:131] Top shape: 100 (100)
I0428 20:19:48.185775  1425 net.cpp:131] Top shape: 100 (100)
I0428 20:19:48.185780  1425 net.cpp:139] Memory required for data: 314800
I0428 20:19:48.185783  1425 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:48.185796  1425 net.cpp:86] Creating Layer conv0
I0428 20:19:48.185803  1425 net.cpp:408] conv0 <- data
I0428 20:19:48.185822  1425 net.cpp:382] conv0 -> conv0
I0428 20:19:48.187968  1425 net.cpp:124] Setting up conv0
I0428 20:19:48.187983  1425 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:48.187999  1425 net.cpp:139] Memory required for data: 11834800
I0428 20:19:48.188041  1425 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:48.188052  1425 net.cpp:86] Creating Layer pool0
I0428 20:19:48.188057  1425 net.cpp:408] pool0 <- conv0
I0428 20:19:48.188063  1425 net.cpp:382] pool0 -> pool0
I0428 20:19:48.188149  1425 net.cpp:124] Setting up pool0
I0428 20:19:48.188159  1425 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:48.188174  1425 net.cpp:139] Memory required for data: 14714800
I0428 20:19:48.188191  1425 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:48.188205  1425 net.cpp:86] Creating Layer conv1
I0428 20:19:48.188210  1425 net.cpp:408] conv1 <- pool0
I0428 20:19:48.188218  1425 net.cpp:382] conv1 -> conv1
I0428 20:19:48.190742  1425 net.cpp:124] Setting up conv1
I0428 20:19:48.190758  1425 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:48.190778  1425 net.cpp:139] Memory required for data: 15354800
I0428 20:19:48.190794  1425 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:48.190822  1425 net.cpp:86] Creating Layer pool1
I0428 20:19:48.190831  1425 net.cpp:408] pool1 <- conv1
I0428 20:19:48.190840  1425 net.cpp:382] pool1 -> pool1
I0428 20:19:48.190884  1425 net.cpp:124] Setting up pool1
I0428 20:19:48.190894  1425 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:48.190904  1425 net.cpp:139] Memory required for data: 15514800
I0428 20:19:48.190923  1425 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:48.190937  1425 net.cpp:86] Creating Layer ip1
I0428 20:19:48.190948  1425 net.cpp:408] ip1 <- pool1
I0428 20:19:48.190958  1425 net.cpp:382] ip1 -> ip1
I0428 20:19:48.191203  1425 net.cpp:124] Setting up ip1
I0428 20:19:48.191215  1425 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:48.191231  1425 net.cpp:139] Memory required for data: 15524800
I0428 20:19:48.191241  1425 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:48.191251  1425 net.cpp:86] Creating Layer relu1
I0428 20:19:48.191272  1425 net.cpp:408] relu1 <- ip1
I0428 20:19:48.191280  1425 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:48.191567  1425 net.cpp:124] Setting up relu1
I0428 20:19:48.191579  1425 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:48.191584  1425 net.cpp:139] Memory required for data: 15534800
I0428 20:19:48.191588  1425 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:48.191598  1425 net.cpp:86] Creating Layer ip2
I0428 20:19:48.191603  1425 net.cpp:408] ip2 <- ip1
I0428 20:19:48.191611  1425 net.cpp:382] ip2 -> ip2
I0428 20:19:48.191738  1425 net.cpp:124] Setting up ip2
I0428 20:19:48.191748  1425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:48.191752  1425 net.cpp:139] Memory required for data: 15538800
I0428 20:19:48.191761  1425 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:48.191767  1425 net.cpp:86] Creating Layer relu2
I0428 20:19:48.191771  1425 net.cpp:408] relu2 <- ip2
I0428 20:19:48.191778  1425 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:48.191972  1425 net.cpp:124] Setting up relu2
I0428 20:19:48.191982  1425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:48.191987  1425 net.cpp:139] Memory required for data: 15542800
I0428 20:19:48.191992  1425 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:48.192000  1425 net.cpp:86] Creating Layer ip3
I0428 20:19:48.192005  1425 net.cpp:408] ip3 <- ip2
I0428 20:19:48.192013  1425 net.cpp:382] ip3 -> ip3
I0428 20:19:48.192129  1425 net.cpp:124] Setting up ip3
I0428 20:19:48.192138  1425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:48.192153  1425 net.cpp:139] Memory required for data: 15546800
I0428 20:19:48.192165  1425 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:48.192188  1425 net.cpp:86] Creating Layer relu3
I0428 20:19:48.192193  1425 net.cpp:408] relu3 <- ip3
I0428 20:19:48.192198  1425 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:48.193369  1425 net.cpp:124] Setting up relu3
I0428 20:19:48.193399  1425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:48.193404  1425 net.cpp:139] Memory required for data: 15550800
I0428 20:19:48.193409  1425 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:48.193418  1425 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:48.193423  1425 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:48.193430  1425 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:48.193441  1425 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:48.193505  1425 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:48.193517  1425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:48.193523  1425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:48.193528  1425 net.cpp:139] Memory required for data: 15558800
I0428 20:19:48.193532  1425 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:48.193543  1425 net.cpp:86] Creating Layer accuracy
I0428 20:19:48.193547  1425 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:48.193553  1425 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:48.193562  1425 net.cpp:382] accuracy -> accuracy
I0428 20:19:48.193570  1425 net.cpp:124] Setting up accuracy
I0428 20:19:48.193578  1425 net.cpp:131] Top shape: (1)
I0428 20:19:48.193583  1425 net.cpp:139] Memory required for data: 15558804
I0428 20:19:48.193586  1425 layer_factory.hpp:77] Creating layer loss
I0428 20:19:48.193593  1425 net.cpp:86] Creating Layer loss
I0428 20:19:48.193598  1425 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:48.193603  1425 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:48.193611  1425 net.cpp:382] loss -> loss
I0428 20:19:48.193620  1425 layer_factory.hpp:77] Creating layer loss
I0428 20:19:48.193976  1425 net.cpp:124] Setting up loss
I0428 20:19:48.194001  1425 net.cpp:131] Top shape: (1)
I0428 20:19:48.194005  1425 net.cpp:134]     with loss weight 1
I0428 20:19:48.194038  1425 net.cpp:139] Memory required for data: 15558808
I0428 20:19:48.194044  1425 net.cpp:200] loss needs backward computation.
I0428 20:19:48.194049  1425 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:48.194056  1425 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:48.194059  1425 net.cpp:200] relu3 needs backward computation.
I0428 20:19:48.194063  1425 net.cpp:200] ip3 needs backward computation.
I0428 20:19:48.194067  1425 net.cpp:200] relu2 needs backward computation.
I0428 20:19:48.194072  1425 net.cpp:200] ip2 needs backward computation.
I0428 20:19:48.194077  1425 net.cpp:200] relu1 needs backward computation.
I0428 20:19:48.194080  1425 net.cpp:200] ip1 needs backward computation.
I0428 20:19:48.194092  1425 net.cpp:200] pool1 needs backward computation.
I0428 20:19:48.194113  1425 net.cpp:200] conv1 needs backward computation.
I0428 20:19:48.194118  1425 net.cpp:200] pool0 needs backward computation.
I0428 20:19:48.194121  1425 net.cpp:200] conv0 needs backward computation.
I0428 20:19:48.194133  1425 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:48.194139  1425 net.cpp:202] mnist does not need backward computation.
I0428 20:19:48.194144  1425 net.cpp:244] This network produces output accuracy
I0428 20:19:48.194154  1425 net.cpp:244] This network produces output loss
I0428 20:19:48.194171  1425 net.cpp:257] Network initialization done.
I0428 20:19:48.194244  1425 solver.cpp:56] Solver scaffolding done.
I0428 20:19:48.194782  1425 caffe.cpp:248] Starting Optimization
I0428 20:19:48.194790  1425 solver.cpp:273] Solving LeNet
I0428 20:19:48.194794  1425 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:48.195027  1425 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:48.204690  1425 blocking_queue.cpp:49] Waiting for data
I0428 20:19:48.275913  1432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:48.277164  1425 solver.cpp:398]     Test net output #0: accuracy = 0.0634
I0428 20:19:48.277185  1425 solver.cpp:398]     Test net output #1: loss = 2.31982 (* 1 = 2.31982 loss)
I0428 20:19:48.282428  1425 solver.cpp:219] Iteration 0 (0 iter/s, 0.0875971s/100 iters), loss = 2.32302
I0428 20:19:48.282457  1425 solver.cpp:238]     Train net output #0: loss = 2.32302 (* 1 = 2.32302 loss)
I0428 20:19:48.282472  1425 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:48.423944  1425 solver.cpp:219] Iteration 100 (706.845 iter/s, 0.141474s/100 iters), loss = 1.33632
I0428 20:19:48.423988  1425 solver.cpp:238]     Train net output #0: loss = 1.33632 (* 1 = 1.33632 loss)
I0428 20:19:48.423996  1425 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:48.575405  1425 solver.cpp:219] Iteration 200 (660.509 iter/s, 0.151398s/100 iters), loss = 0.723173
I0428 20:19:48.575464  1425 solver.cpp:238]     Train net output #0: loss = 0.723173 (* 1 = 0.723173 loss)
I0428 20:19:48.575474  1425 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:48.726708  1425 solver.cpp:219] Iteration 300 (661.22 iter/s, 0.151236s/100 iters), loss = 0.872213
I0428 20:19:48.726747  1425 solver.cpp:238]     Train net output #0: loss = 0.872213 (* 1 = 0.872213 loss)
I0428 20:19:48.726757  1425 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:48.876658  1425 solver.cpp:219] Iteration 400 (667.115 iter/s, 0.149899s/100 iters), loss = 0.77755
I0428 20:19:48.876698  1425 solver.cpp:238]     Train net output #0: loss = 0.77755 (* 1 = 0.77755 loss)
I0428 20:19:48.876708  1425 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:49.028105  1425 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:49.112519  1432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:49.113816  1425 solver.cpp:398]     Test net output #0: accuracy = 0.8432
I0428 20:19:49.113847  1425 solver.cpp:398]     Test net output #1: loss = 0.588897 (* 1 = 0.588897 loss)
I0428 20:19:49.115339  1425 solver.cpp:219] Iteration 500 (419.066 iter/s, 0.238626s/100 iters), loss = 0.570659
I0428 20:19:49.115397  1425 solver.cpp:238]     Train net output #0: loss = 0.570659 (* 1 = 0.570659 loss)
I0428 20:19:49.115407  1425 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:49.265854  1425 solver.cpp:219] Iteration 600 (664.69 iter/s, 0.150446s/100 iters), loss = 0.558603
I0428 20:19:49.265897  1425 solver.cpp:238]     Train net output #0: loss = 0.558603 (* 1 = 0.558603 loss)
I0428 20:19:49.265913  1425 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:49.420325  1425 solver.cpp:219] Iteration 700 (647.597 iter/s, 0.154417s/100 iters), loss = 0.604517
I0428 20:19:49.420364  1425 solver.cpp:238]     Train net output #0: loss = 0.604517 (* 1 = 0.604517 loss)
I0428 20:19:49.420380  1425 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:49.580348  1425 solver.cpp:219] Iteration 800 (625.12 iter/s, 0.159969s/100 iters), loss = 0.663244
I0428 20:19:49.580389  1425 solver.cpp:238]     Train net output #0: loss = 0.663244 (* 1 = 0.663244 loss)
I0428 20:19:49.580399  1425 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:49.731217  1425 solver.cpp:219] Iteration 900 (663.061 iter/s, 0.150816s/100 iters), loss = 0.39005
I0428 20:19:49.731259  1425 solver.cpp:238]     Train net output #0: loss = 0.390051 (* 1 = 0.390051 loss)
I0428 20:19:49.731269  1425 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:49.782650  1431 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:49.885224  1425 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:49.887184  1425 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:49.888380  1425 solver.cpp:311] Iteration 1000, loss = 0.566348
I0428 20:19:49.888402  1425 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:49.966639  1432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:49.967615  1425 solver.cpp:398]     Test net output #0: accuracy = 0.8773
I0428 20:19:49.967638  1425 solver.cpp:398]     Test net output #1: loss = 0.529084 (* 1 = 0.529084 loss)
I0428 20:19:49.967644  1425 solver.cpp:316] Optimization Done.
I0428 20:19:49.967648  1425 caffe.cpp:259] Optimization Done.
