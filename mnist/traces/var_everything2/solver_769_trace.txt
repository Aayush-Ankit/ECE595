I0428 19:56:46.647899 28517 caffe.cpp:218] Using GPUs 0
I0428 19:56:46.678519 28517 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:47.127774 28517 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test769.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:47.127928 28517 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test769.prototxt
I0428 19:56:47.128355 28517 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:47.128384 28517 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:47.128464 28517 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:47.128525 28517 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:47.128609 28517 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:47.128629 28517 net.cpp:86] Creating Layer mnist
I0428 19:56:47.128636 28517 net.cpp:382] mnist -> data
I0428 19:56:47.128655 28517 net.cpp:382] mnist -> label
I0428 19:56:47.129740 28517 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:47.132016 28517 net.cpp:124] Setting up mnist
I0428 19:56:47.132046 28517 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:47.132051 28517 net.cpp:131] Top shape: 64 (64)
I0428 19:56:47.132055 28517 net.cpp:139] Memory required for data: 200960
I0428 19:56:47.132061 28517 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:47.132073 28517 net.cpp:86] Creating Layer conv0
I0428 19:56:47.132089 28517 net.cpp:408] conv0 <- data
I0428 19:56:47.132100 28517 net.cpp:382] conv0 -> conv0
I0428 19:56:47.364511 28517 net.cpp:124] Setting up conv0
I0428 19:56:47.364538 28517 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:47.364542 28517 net.cpp:139] Memory required for data: 1675520
I0428 19:56:47.364557 28517 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:47.364570 28517 net.cpp:86] Creating Layer pool0
I0428 19:56:47.364575 28517 net.cpp:408] pool0 <- conv0
I0428 19:56:47.364580 28517 net.cpp:382] pool0 -> pool0
I0428 19:56:47.364626 28517 net.cpp:124] Setting up pool0
I0428 19:56:47.364634 28517 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:47.364636 28517 net.cpp:139] Memory required for data: 2044160
I0428 19:56:47.364639 28517 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:47.364650 28517 net.cpp:86] Creating Layer conv1
I0428 19:56:47.364653 28517 net.cpp:408] conv1 <- pool0
I0428 19:56:47.364658 28517 net.cpp:382] conv1 -> conv1
I0428 19:56:47.366667 28517 net.cpp:124] Setting up conv1
I0428 19:56:47.366698 28517 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:47.366703 28517 net.cpp:139] Memory required for data: 2076928
I0428 19:56:47.366714 28517 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:47.366721 28517 net.cpp:86] Creating Layer pool1
I0428 19:56:47.366725 28517 net.cpp:408] pool1 <- conv1
I0428 19:56:47.366730 28517 net.cpp:382] pool1 -> pool1
I0428 19:56:47.366768 28517 net.cpp:124] Setting up pool1
I0428 19:56:47.366775 28517 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:47.366780 28517 net.cpp:139] Memory required for data: 2085120
I0428 19:56:47.366782 28517 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:47.366789 28517 net.cpp:86] Creating Layer ip1
I0428 19:56:47.366792 28517 net.cpp:408] ip1 <- pool1
I0428 19:56:47.366796 28517 net.cpp:382] ip1 -> ip1
I0428 19:56:47.366899 28517 net.cpp:124] Setting up ip1
I0428 19:56:47.366907 28517 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:47.366910 28517 net.cpp:139] Memory required for data: 2091520
I0428 19:56:47.366917 28517 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:47.366922 28517 net.cpp:86] Creating Layer relu1
I0428 19:56:47.366926 28517 net.cpp:408] relu1 <- ip1
I0428 19:56:47.366930 28517 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:47.367110 28517 net.cpp:124] Setting up relu1
I0428 19:56:47.367118 28517 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:47.367121 28517 net.cpp:139] Memory required for data: 2097920
I0428 19:56:47.367125 28517 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:47.367132 28517 net.cpp:86] Creating Layer ip2
I0428 19:56:47.367136 28517 net.cpp:408] ip2 <- ip1
I0428 19:56:47.367142 28517 net.cpp:382] ip2 -> ip2
I0428 19:56:47.368222 28517 net.cpp:124] Setting up ip2
I0428 19:56:47.368234 28517 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:47.368254 28517 net.cpp:139] Memory required for data: 2110720
I0428 19:56:47.368260 28517 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:47.368268 28517 net.cpp:86] Creating Layer relu2
I0428 19:56:47.368273 28517 net.cpp:408] relu2 <- ip2
I0428 19:56:47.368294 28517 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:47.369124 28517 net.cpp:124] Setting up relu2
I0428 19:56:47.369151 28517 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:47.369171 28517 net.cpp:139] Memory required for data: 2123520
I0428 19:56:47.369175 28517 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:47.369181 28517 net.cpp:86] Creating Layer ip3
I0428 19:56:47.369185 28517 net.cpp:408] ip3 <- ip2
I0428 19:56:47.369191 28517 net.cpp:382] ip3 -> ip3
I0428 19:56:47.369318 28517 net.cpp:124] Setting up ip3
I0428 19:56:47.369326 28517 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:47.369329 28517 net.cpp:139] Memory required for data: 2126080
I0428 19:56:47.369338 28517 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:47.369344 28517 net.cpp:86] Creating Layer relu3
I0428 19:56:47.369350 28517 net.cpp:408] relu3 <- ip3
I0428 19:56:47.369355 28517 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:47.369539 28517 net.cpp:124] Setting up relu3
I0428 19:56:47.369549 28517 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:47.369551 28517 net.cpp:139] Memory required for data: 2128640
I0428 19:56:47.369554 28517 layer_factory.hpp:77] Creating layer loss
I0428 19:56:47.369561 28517 net.cpp:86] Creating Layer loss
I0428 19:56:47.369565 28517 net.cpp:408] loss <- ip3
I0428 19:56:47.369570 28517 net.cpp:408] loss <- label
I0428 19:56:47.369590 28517 net.cpp:382] loss -> loss
I0428 19:56:47.369609 28517 layer_factory.hpp:77] Creating layer loss
I0428 19:56:47.369870 28517 net.cpp:124] Setting up loss
I0428 19:56:47.369894 28517 net.cpp:131] Top shape: (1)
I0428 19:56:47.369897 28517 net.cpp:134]     with loss weight 1
I0428 19:56:47.369926 28517 net.cpp:139] Memory required for data: 2128644
I0428 19:56:47.369930 28517 net.cpp:200] loss needs backward computation.
I0428 19:56:47.369935 28517 net.cpp:200] relu3 needs backward computation.
I0428 19:56:47.369936 28517 net.cpp:200] ip3 needs backward computation.
I0428 19:56:47.369940 28517 net.cpp:200] relu2 needs backward computation.
I0428 19:56:47.369942 28517 net.cpp:200] ip2 needs backward computation.
I0428 19:56:47.369946 28517 net.cpp:200] relu1 needs backward computation.
I0428 19:56:47.369947 28517 net.cpp:200] ip1 needs backward computation.
I0428 19:56:47.369951 28517 net.cpp:200] pool1 needs backward computation.
I0428 19:56:47.369953 28517 net.cpp:200] conv1 needs backward computation.
I0428 19:56:47.369956 28517 net.cpp:200] pool0 needs backward computation.
I0428 19:56:47.369959 28517 net.cpp:200] conv0 needs backward computation.
I0428 19:56:47.369963 28517 net.cpp:202] mnist does not need backward computation.
I0428 19:56:47.369968 28517 net.cpp:244] This network produces output loss
I0428 19:56:47.369977 28517 net.cpp:257] Network initialization done.
I0428 19:56:47.370329 28517 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test769.prototxt
I0428 19:56:47.370373 28517 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:47.370471 28517 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:47.370564 28517 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:47.370615 28517 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:47.370627 28517 net.cpp:86] Creating Layer mnist
I0428 19:56:47.370633 28517 net.cpp:382] mnist -> data
I0428 19:56:47.370641 28517 net.cpp:382] mnist -> label
I0428 19:56:47.370731 28517 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:47.372946 28517 net.cpp:124] Setting up mnist
I0428 19:56:47.372977 28517 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:47.372982 28517 net.cpp:131] Top shape: 100 (100)
I0428 19:56:47.372985 28517 net.cpp:139] Memory required for data: 314000
I0428 19:56:47.372989 28517 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:47.373001 28517 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:47.373005 28517 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:47.373011 28517 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:47.373018 28517 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:47.373112 28517 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:47.373121 28517 net.cpp:131] Top shape: 100 (100)
I0428 19:56:47.373124 28517 net.cpp:131] Top shape: 100 (100)
I0428 19:56:47.373127 28517 net.cpp:139] Memory required for data: 314800
I0428 19:56:47.373131 28517 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:47.373142 28517 net.cpp:86] Creating Layer conv0
I0428 19:56:47.373159 28517 net.cpp:408] conv0 <- data
I0428 19:56:47.373165 28517 net.cpp:382] conv0 -> conv0
I0428 19:56:47.374891 28517 net.cpp:124] Setting up conv0
I0428 19:56:47.374905 28517 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:47.374909 28517 net.cpp:139] Memory required for data: 2618800
I0428 19:56:47.374918 28517 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:47.374924 28517 net.cpp:86] Creating Layer pool0
I0428 19:56:47.374927 28517 net.cpp:408] pool0 <- conv0
I0428 19:56:47.374933 28517 net.cpp:382] pool0 -> pool0
I0428 19:56:47.374981 28517 net.cpp:124] Setting up pool0
I0428 19:56:47.374989 28517 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:47.374991 28517 net.cpp:139] Memory required for data: 3194800
I0428 19:56:47.374994 28517 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:47.375005 28517 net.cpp:86] Creating Layer conv1
I0428 19:56:47.375008 28517 net.cpp:408] conv1 <- pool0
I0428 19:56:47.375013 28517 net.cpp:382] conv1 -> conv1
I0428 19:56:47.377161 28517 net.cpp:124] Setting up conv1
I0428 19:56:47.377187 28517 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:47.377192 28517 net.cpp:139] Memory required for data: 3246000
I0428 19:56:47.377214 28517 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:47.377238 28517 net.cpp:86] Creating Layer pool1
I0428 19:56:47.377243 28517 net.cpp:408] pool1 <- conv1
I0428 19:56:47.377249 28517 net.cpp:382] pool1 -> pool1
I0428 19:56:47.377334 28517 net.cpp:124] Setting up pool1
I0428 19:56:47.377342 28517 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:47.377346 28517 net.cpp:139] Memory required for data: 3258800
I0428 19:56:47.377348 28517 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:47.377355 28517 net.cpp:86] Creating Layer ip1
I0428 19:56:47.377358 28517 net.cpp:408] ip1 <- pool1
I0428 19:56:47.377363 28517 net.cpp:382] ip1 -> ip1
I0428 19:56:47.377475 28517 net.cpp:124] Setting up ip1
I0428 19:56:47.377482 28517 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:47.377496 28517 net.cpp:139] Memory required for data: 3268800
I0428 19:56:47.377503 28517 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:47.377508 28517 net.cpp:86] Creating Layer relu1
I0428 19:56:47.377512 28517 net.cpp:408] relu1 <- ip1
I0428 19:56:47.377518 28517 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:47.377691 28517 net.cpp:124] Setting up relu1
I0428 19:56:47.377714 28517 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:47.377717 28517 net.cpp:139] Memory required for data: 3278800
I0428 19:56:47.377720 28517 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:47.377728 28517 net.cpp:86] Creating Layer ip2
I0428 19:56:47.377748 28517 net.cpp:408] ip2 <- ip1
I0428 19:56:47.377771 28517 net.cpp:382] ip2 -> ip2
I0428 19:56:47.377912 28517 net.cpp:124] Setting up ip2
I0428 19:56:47.377921 28517 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:47.377924 28517 net.cpp:139] Memory required for data: 3298800
I0428 19:56:47.377929 28517 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:47.377934 28517 net.cpp:86] Creating Layer relu2
I0428 19:56:47.377938 28517 net.cpp:408] relu2 <- ip2
I0428 19:56:47.377943 28517 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:47.378208 28517 net.cpp:124] Setting up relu2
I0428 19:56:47.378219 28517 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:47.378222 28517 net.cpp:139] Memory required for data: 3318800
I0428 19:56:47.378226 28517 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:47.378231 28517 net.cpp:86] Creating Layer ip3
I0428 19:56:47.378233 28517 net.cpp:408] ip3 <- ip2
I0428 19:56:47.378239 28517 net.cpp:382] ip3 -> ip3
I0428 19:56:47.378341 28517 net.cpp:124] Setting up ip3
I0428 19:56:47.378350 28517 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:47.378352 28517 net.cpp:139] Memory required for data: 3322800
I0428 19:56:47.378360 28517 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:47.378365 28517 net.cpp:86] Creating Layer relu3
I0428 19:56:47.378367 28517 net.cpp:408] relu3 <- ip3
I0428 19:56:47.378372 28517 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:47.379185 28517 net.cpp:124] Setting up relu3
I0428 19:56:47.379197 28517 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:47.379201 28517 net.cpp:139] Memory required for data: 3326800
I0428 19:56:47.379204 28517 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:47.379210 28517 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:47.379215 28517 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:47.379220 28517 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:47.379227 28517 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:47.379267 28517 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:47.379274 28517 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:47.379278 28517 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:47.379281 28517 net.cpp:139] Memory required for data: 3334800
I0428 19:56:47.379284 28517 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:47.379293 28517 net.cpp:86] Creating Layer accuracy
I0428 19:56:47.379297 28517 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:47.379302 28517 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:47.379305 28517 net.cpp:382] accuracy -> accuracy
I0428 19:56:47.379328 28517 net.cpp:124] Setting up accuracy
I0428 19:56:47.379333 28517 net.cpp:131] Top shape: (1)
I0428 19:56:47.379335 28517 net.cpp:139] Memory required for data: 3334804
I0428 19:56:47.379338 28517 layer_factory.hpp:77] Creating layer loss
I0428 19:56:47.379344 28517 net.cpp:86] Creating Layer loss
I0428 19:56:47.379348 28517 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:47.379365 28517 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:47.379370 28517 net.cpp:382] loss -> loss
I0428 19:56:47.379376 28517 layer_factory.hpp:77] Creating layer loss
I0428 19:56:47.379606 28517 net.cpp:124] Setting up loss
I0428 19:56:47.379613 28517 net.cpp:131] Top shape: (1)
I0428 19:56:47.379616 28517 net.cpp:134]     with loss weight 1
I0428 19:56:47.379622 28517 net.cpp:139] Memory required for data: 3334808
I0428 19:56:47.379637 28517 net.cpp:200] loss needs backward computation.
I0428 19:56:47.379640 28517 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:47.379644 28517 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:47.379649 28517 net.cpp:200] relu3 needs backward computation.
I0428 19:56:47.379653 28517 net.cpp:200] ip3 needs backward computation.
I0428 19:56:47.379657 28517 net.cpp:200] relu2 needs backward computation.
I0428 19:56:47.379662 28517 net.cpp:200] ip2 needs backward computation.
I0428 19:56:47.379665 28517 net.cpp:200] relu1 needs backward computation.
I0428 19:56:47.379669 28517 net.cpp:200] ip1 needs backward computation.
I0428 19:56:47.379673 28517 net.cpp:200] pool1 needs backward computation.
I0428 19:56:47.379678 28517 net.cpp:200] conv1 needs backward computation.
I0428 19:56:47.379683 28517 net.cpp:200] pool0 needs backward computation.
I0428 19:56:47.379688 28517 net.cpp:200] conv0 needs backward computation.
I0428 19:56:47.379690 28517 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:47.379694 28517 net.cpp:202] mnist does not need backward computation.
I0428 19:56:47.379696 28517 net.cpp:244] This network produces output accuracy
I0428 19:56:47.379700 28517 net.cpp:244] This network produces output loss
I0428 19:56:47.379710 28517 net.cpp:257] Network initialization done.
I0428 19:56:47.379750 28517 solver.cpp:56] Solver scaffolding done.
I0428 19:56:47.380103 28517 caffe.cpp:248] Starting Optimization
I0428 19:56:47.380110 28517 solver.cpp:273] Solving LeNet
I0428 19:56:47.380111 28517 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:47.380936 28517 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:47.386351 28517 blocking_queue.cpp:49] Waiting for data
I0428 19:56:47.435533 28524 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:47.436040 28517 solver.cpp:398]     Test net output #0: accuracy = 0.0811
I0428 19:56:47.436058 28517 solver.cpp:398]     Test net output #1: loss = 2.3155 (* 1 = 2.3155 loss)
I0428 19:56:47.438552 28517 solver.cpp:219] Iteration 0 (-4.05425e-36 iter/s, 0.0584132s/100 iters), loss = 2.31
I0428 19:56:47.438575 28517 solver.cpp:238]     Train net output #0: loss = 2.31 (* 1 = 2.31 loss)
I0428 19:56:47.438602 28517 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:47.513033 28517 solver.cpp:219] Iteration 100 (1343.26 iter/s, 0.0744458s/100 iters), loss = 1.44323
I0428 19:56:47.513059 28517 solver.cpp:238]     Train net output #0: loss = 1.44323 (* 1 = 1.44323 loss)
I0428 19:56:47.513082 28517 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:47.588227 28517 solver.cpp:219] Iteration 200 (1330.54 iter/s, 0.0751575s/100 iters), loss = 1.10729
I0428 19:56:47.588249 28517 solver.cpp:238]     Train net output #0: loss = 1.10729 (* 1 = 1.10729 loss)
I0428 19:56:47.588273 28517 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:47.662565 28517 solver.cpp:219] Iteration 300 (1345.78 iter/s, 0.0743066s/100 iters), loss = 0.558914
I0428 19:56:47.662588 28517 solver.cpp:238]     Train net output #0: loss = 0.558914 (* 1 = 0.558914 loss)
I0428 19:56:47.662612 28517 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:47.736450 28517 solver.cpp:219] Iteration 400 (1354.04 iter/s, 0.0738528s/100 iters), loss = 0.738382
I0428 19:56:47.736474 28517 solver.cpp:238]     Train net output #0: loss = 0.738382 (* 1 = 0.738382 loss)
I0428 19:56:47.736481 28517 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:47.809149 28517 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:47.856205 28524 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:47.856694 28517 solver.cpp:398]     Test net output #0: accuracy = 0.9043
I0428 19:56:47.856710 28517 solver.cpp:398]     Test net output #1: loss = 0.320194 (* 1 = 0.320194 loss)
I0428 19:56:47.857578 28517 solver.cpp:219] Iteration 500 (825.831 iter/s, 0.12109s/100 iters), loss = 0.348481
I0428 19:56:47.857614 28517 solver.cpp:238]     Train net output #0: loss = 0.348481 (* 1 = 0.348481 loss)
I0428 19:56:47.857636 28517 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:47.937273 28517 solver.cpp:219] Iteration 600 (1255.46 iter/s, 0.0796522s/100 iters), loss = 0.306954
I0428 19:56:47.937297 28517 solver.cpp:238]     Train net output #0: loss = 0.306954 (* 1 = 0.306954 loss)
I0428 19:56:47.937324 28517 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:48.013304 28517 solver.cpp:219] Iteration 700 (1315.82 iter/s, 0.0759982s/100 iters), loss = 0.35816
I0428 19:56:48.013329 28517 solver.cpp:238]     Train net output #0: loss = 0.35816 (* 1 = 0.35816 loss)
I0428 19:56:48.013353 28517 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:48.088563 28517 solver.cpp:219] Iteration 800 (1329.31 iter/s, 0.0752271s/100 iters), loss = 0.507022
I0428 19:56:48.088587 28517 solver.cpp:238]     Train net output #0: loss = 0.507022 (* 1 = 0.507022 loss)
I0428 19:56:48.088611 28517 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:48.163408 28517 solver.cpp:219] Iteration 900 (1336.69 iter/s, 0.0748114s/100 iters), loss = 0.287163
I0428 19:56:48.163431 28517 solver.cpp:238]     Train net output #0: loss = 0.287163 (* 1 = 0.287163 loss)
I0428 19:56:48.163456 28517 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:48.188145 28523 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:48.236779 28517 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:48.237458 28517 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:48.237901 28517 solver.cpp:311] Iteration 1000, loss = 0.200212
I0428 19:56:48.237916 28517 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:48.312945 28524 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:48.313482 28517 solver.cpp:398]     Test net output #0: accuracy = 0.9318
I0428 19:56:48.313503 28517 solver.cpp:398]     Test net output #1: loss = 0.220254 (* 1 = 0.220254 loss)
I0428 19:56:48.313508 28517 solver.cpp:316] Optimization Done.
I0428 19:56:48.313511 28517 caffe.cpp:259] Optimization Done.
