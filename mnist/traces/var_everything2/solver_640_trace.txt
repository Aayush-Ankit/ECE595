I0428 19:51:39.791148 27334 caffe.cpp:218] Using GPUs 0
I0428 19:51:39.826547 27334 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:40.283259 27334 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test640.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:40.283380 27334 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test640.prototxt
I0428 19:51:40.283711 27334 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:40.283725 27334 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:40.283799 27334 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:40.283859 27334 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:40.283956 27334 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:40.283974 27334 net.cpp:86] Creating Layer mnist
I0428 19:51:40.283980 27334 net.cpp:382] mnist -> data
I0428 19:51:40.283998 27334 net.cpp:382] mnist -> label
I0428 19:51:40.284991 27334 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:40.287103 27334 net.cpp:124] Setting up mnist
I0428 19:51:40.287132 27334 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:40.287137 27334 net.cpp:131] Top shape: 64 (64)
I0428 19:51:40.287142 27334 net.cpp:139] Memory required for data: 200960
I0428 19:51:40.287147 27334 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:40.287159 27334 net.cpp:86] Creating Layer conv0
I0428 19:51:40.287178 27334 net.cpp:408] conv0 <- data
I0428 19:51:40.287201 27334 net.cpp:382] conv0 -> conv0
I0428 19:51:40.514104 27334 net.cpp:124] Setting up conv0
I0428 19:51:40.514130 27334 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:40.514133 27334 net.cpp:139] Memory required for data: 938240
I0428 19:51:40.514147 27334 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:40.514159 27334 net.cpp:86] Creating Layer pool0
I0428 19:51:40.514163 27334 net.cpp:408] pool0 <- conv0
I0428 19:51:40.514168 27334 net.cpp:382] pool0 -> pool0
I0428 19:51:40.514228 27334 net.cpp:124] Setting up pool0
I0428 19:51:40.514235 27334 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:40.514237 27334 net.cpp:139] Memory required for data: 1122560
I0428 19:51:40.514240 27334 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:40.514250 27334 net.cpp:86] Creating Layer conv1
I0428 19:51:40.514253 27334 net.cpp:408] conv1 <- pool0
I0428 19:51:40.514257 27334 net.cpp:382] conv1 -> conv1
I0428 19:51:40.516973 27334 net.cpp:124] Setting up conv1
I0428 19:51:40.516986 27334 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:40.516989 27334 net.cpp:139] Memory required for data: 1532160
I0428 19:51:40.516999 27334 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:40.517005 27334 net.cpp:86] Creating Layer pool1
I0428 19:51:40.517009 27334 net.cpp:408] pool1 <- conv1
I0428 19:51:40.517030 27334 net.cpp:382] pool1 -> pool1
I0428 19:51:40.517066 27334 net.cpp:124] Setting up pool1
I0428 19:51:40.517071 27334 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:40.517074 27334 net.cpp:139] Memory required for data: 1634560
I0428 19:51:40.517077 27334 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:40.517083 27334 net.cpp:86] Creating Layer ip1
I0428 19:51:40.517086 27334 net.cpp:408] ip1 <- pool1
I0428 19:51:40.517091 27334 net.cpp:382] ip1 -> ip1
I0428 19:51:40.517220 27334 net.cpp:124] Setting up ip1
I0428 19:51:40.517226 27334 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:40.517230 27334 net.cpp:139] Memory required for data: 1637120
I0428 19:51:40.517236 27334 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:40.517241 27334 net.cpp:86] Creating Layer relu1
I0428 19:51:40.517244 27334 net.cpp:408] relu1 <- ip1
I0428 19:51:40.517248 27334 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:40.517402 27334 net.cpp:124] Setting up relu1
I0428 19:51:40.517411 27334 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:40.517415 27334 net.cpp:139] Memory required for data: 1639680
I0428 19:51:40.517417 27334 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:40.517423 27334 net.cpp:86] Creating Layer ip2
I0428 19:51:40.517426 27334 net.cpp:408] ip2 <- ip1
I0428 19:51:40.517431 27334 net.cpp:382] ip2 -> ip2
I0428 19:51:40.517521 27334 net.cpp:124] Setting up ip2
I0428 19:51:40.517527 27334 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:40.517530 27334 net.cpp:139] Memory required for data: 1646080
I0428 19:51:40.517535 27334 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:40.517541 27334 net.cpp:86] Creating Layer relu2
I0428 19:51:40.517544 27334 net.cpp:408] relu2 <- ip2
I0428 19:51:40.517549 27334 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:40.518278 27334 net.cpp:124] Setting up relu2
I0428 19:51:40.518306 27334 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:40.518323 27334 net.cpp:139] Memory required for data: 1652480
I0428 19:51:40.518326 27334 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:40.518332 27334 net.cpp:86] Creating Layer ip3
I0428 19:51:40.518335 27334 net.cpp:408] ip3 <- ip2
I0428 19:51:40.518340 27334 net.cpp:382] ip3 -> ip3
I0428 19:51:40.518430 27334 net.cpp:124] Setting up ip3
I0428 19:51:40.518437 27334 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:40.518440 27334 net.cpp:139] Memory required for data: 1655040
I0428 19:51:40.518447 27334 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:40.518452 27334 net.cpp:86] Creating Layer relu3
I0428 19:51:40.518455 27334 net.cpp:408] relu3 <- ip3
I0428 19:51:40.518458 27334 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:40.518610 27334 net.cpp:124] Setting up relu3
I0428 19:51:40.518618 27334 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:40.518621 27334 net.cpp:139] Memory required for data: 1657600
I0428 19:51:40.518625 27334 layer_factory.hpp:77] Creating layer loss
I0428 19:51:40.518630 27334 net.cpp:86] Creating Layer loss
I0428 19:51:40.518632 27334 net.cpp:408] loss <- ip3
I0428 19:51:40.518636 27334 net.cpp:408] loss <- label
I0428 19:51:40.518640 27334 net.cpp:382] loss -> loss
I0428 19:51:40.518657 27334 layer_factory.hpp:77] Creating layer loss
I0428 19:51:40.518898 27334 net.cpp:124] Setting up loss
I0428 19:51:40.518908 27334 net.cpp:131] Top shape: (1)
I0428 19:51:40.518910 27334 net.cpp:134]     with loss weight 1
I0428 19:51:40.518924 27334 net.cpp:139] Memory required for data: 1657604
I0428 19:51:40.518929 27334 net.cpp:200] loss needs backward computation.
I0428 19:51:40.518932 27334 net.cpp:200] relu3 needs backward computation.
I0428 19:51:40.518935 27334 net.cpp:200] ip3 needs backward computation.
I0428 19:51:40.518939 27334 net.cpp:200] relu2 needs backward computation.
I0428 19:51:40.518941 27334 net.cpp:200] ip2 needs backward computation.
I0428 19:51:40.518944 27334 net.cpp:200] relu1 needs backward computation.
I0428 19:51:40.518946 27334 net.cpp:200] ip1 needs backward computation.
I0428 19:51:40.518949 27334 net.cpp:200] pool1 needs backward computation.
I0428 19:51:40.518952 27334 net.cpp:200] conv1 needs backward computation.
I0428 19:51:40.518955 27334 net.cpp:200] pool0 needs backward computation.
I0428 19:51:40.518959 27334 net.cpp:200] conv0 needs backward computation.
I0428 19:51:40.518962 27334 net.cpp:202] mnist does not need backward computation.
I0428 19:51:40.518965 27334 net.cpp:244] This network produces output loss
I0428 19:51:40.518975 27334 net.cpp:257] Network initialization done.
I0428 19:51:40.519289 27334 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test640.prototxt
I0428 19:51:40.519316 27334 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:40.519418 27334 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:40.519493 27334 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:40.519551 27334 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:40.519562 27334 net.cpp:86] Creating Layer mnist
I0428 19:51:40.519567 27334 net.cpp:382] mnist -> data
I0428 19:51:40.519573 27334 net.cpp:382] mnist -> label
I0428 19:51:40.519649 27334 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:40.521677 27334 net.cpp:124] Setting up mnist
I0428 19:51:40.521704 27334 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:40.521709 27334 net.cpp:131] Top shape: 100 (100)
I0428 19:51:40.521713 27334 net.cpp:139] Memory required for data: 314000
I0428 19:51:40.521716 27334 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:40.521754 27334 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:40.521759 27334 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:40.521764 27334 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:40.521770 27334 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:40.521817 27334 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:40.521822 27334 net.cpp:131] Top shape: 100 (100)
I0428 19:51:40.521826 27334 net.cpp:131] Top shape: 100 (100)
I0428 19:51:40.521828 27334 net.cpp:139] Memory required for data: 314800
I0428 19:51:40.521831 27334 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:40.521839 27334 net.cpp:86] Creating Layer conv0
I0428 19:51:40.521842 27334 net.cpp:408] conv0 <- data
I0428 19:51:40.521847 27334 net.cpp:382] conv0 -> conv0
I0428 19:51:40.523383 27334 net.cpp:124] Setting up conv0
I0428 19:51:40.523397 27334 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:40.523416 27334 net.cpp:139] Memory required for data: 1466800
I0428 19:51:40.523440 27334 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:40.523447 27334 net.cpp:86] Creating Layer pool0
I0428 19:51:40.523449 27334 net.cpp:408] pool0 <- conv0
I0428 19:51:40.523454 27334 net.cpp:382] pool0 -> pool0
I0428 19:51:40.523490 27334 net.cpp:124] Setting up pool0
I0428 19:51:40.523495 27334 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:40.523499 27334 net.cpp:139] Memory required for data: 1754800
I0428 19:51:40.523501 27334 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:40.523509 27334 net.cpp:86] Creating Layer conv1
I0428 19:51:40.523512 27334 net.cpp:408] conv1 <- pool0
I0428 19:51:40.523517 27334 net.cpp:382] conv1 -> conv1
I0428 19:51:40.525501 27334 net.cpp:124] Setting up conv1
I0428 19:51:40.525512 27334 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:40.525517 27334 net.cpp:139] Memory required for data: 2394800
I0428 19:51:40.525527 27334 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:40.525532 27334 net.cpp:86] Creating Layer pool1
I0428 19:51:40.525535 27334 net.cpp:408] pool1 <- conv1
I0428 19:51:40.525539 27334 net.cpp:382] pool1 -> pool1
I0428 19:51:40.525585 27334 net.cpp:124] Setting up pool1
I0428 19:51:40.525590 27334 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:40.525614 27334 net.cpp:139] Memory required for data: 2554800
I0428 19:51:40.525617 27334 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:40.525624 27334 net.cpp:86] Creating Layer ip1
I0428 19:51:40.525626 27334 net.cpp:408] ip1 <- pool1
I0428 19:51:40.525630 27334 net.cpp:382] ip1 -> ip1
I0428 19:51:40.525759 27334 net.cpp:124] Setting up ip1
I0428 19:51:40.525768 27334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:40.525780 27334 net.cpp:139] Memory required for data: 2558800
I0428 19:51:40.525789 27334 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:40.525792 27334 net.cpp:86] Creating Layer relu1
I0428 19:51:40.525796 27334 net.cpp:408] relu1 <- ip1
I0428 19:51:40.525807 27334 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:40.526007 27334 net.cpp:124] Setting up relu1
I0428 19:51:40.526016 27334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:40.526020 27334 net.cpp:139] Memory required for data: 2562800
I0428 19:51:40.526022 27334 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:40.526036 27334 net.cpp:86] Creating Layer ip2
I0428 19:51:40.526039 27334 net.cpp:408] ip2 <- ip1
I0428 19:51:40.526044 27334 net.cpp:382] ip2 -> ip2
I0428 19:51:40.526144 27334 net.cpp:124] Setting up ip2
I0428 19:51:40.526150 27334 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:40.526154 27334 net.cpp:139] Memory required for data: 2572800
I0428 19:51:40.526159 27334 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:40.526163 27334 net.cpp:86] Creating Layer relu2
I0428 19:51:40.526165 27334 net.cpp:408] relu2 <- ip2
I0428 19:51:40.526170 27334 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:40.526317 27334 net.cpp:124] Setting up relu2
I0428 19:51:40.526325 27334 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:40.526329 27334 net.cpp:139] Memory required for data: 2582800
I0428 19:51:40.526331 27334 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:40.526337 27334 net.cpp:86] Creating Layer ip3
I0428 19:51:40.526340 27334 net.cpp:408] ip3 <- ip2
I0428 19:51:40.526345 27334 net.cpp:382] ip3 -> ip3
I0428 19:51:40.526438 27334 net.cpp:124] Setting up ip3
I0428 19:51:40.526445 27334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:40.526454 27334 net.cpp:139] Memory required for data: 2586800
I0428 19:51:40.526463 27334 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:40.526473 27334 net.cpp:86] Creating Layer relu3
I0428 19:51:40.526475 27334 net.cpp:408] relu3 <- ip3
I0428 19:51:40.526479 27334 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:40.527277 27334 net.cpp:124] Setting up relu3
I0428 19:51:40.527289 27334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:40.527292 27334 net.cpp:139] Memory required for data: 2590800
I0428 19:51:40.527295 27334 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:40.527302 27334 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:40.527304 27334 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:40.527309 27334 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:40.527317 27334 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:40.527356 27334 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:40.527362 27334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:40.527365 27334 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:40.527367 27334 net.cpp:139] Memory required for data: 2598800
I0428 19:51:40.527370 27334 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:40.527376 27334 net.cpp:86] Creating Layer accuracy
I0428 19:51:40.527379 27334 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:40.527382 27334 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:40.527397 27334 net.cpp:382] accuracy -> accuracy
I0428 19:51:40.527405 27334 net.cpp:124] Setting up accuracy
I0428 19:51:40.527407 27334 net.cpp:131] Top shape: (1)
I0428 19:51:40.527410 27334 net.cpp:139] Memory required for data: 2598804
I0428 19:51:40.527412 27334 layer_factory.hpp:77] Creating layer loss
I0428 19:51:40.527416 27334 net.cpp:86] Creating Layer loss
I0428 19:51:40.527420 27334 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:40.527422 27334 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:40.527428 27334 net.cpp:382] loss -> loss
I0428 19:51:40.527434 27334 layer_factory.hpp:77] Creating layer loss
I0428 19:51:40.527670 27334 net.cpp:124] Setting up loss
I0428 19:51:40.527679 27334 net.cpp:131] Top shape: (1)
I0428 19:51:40.527683 27334 net.cpp:134]     with loss weight 1
I0428 19:51:40.527688 27334 net.cpp:139] Memory required for data: 2598808
I0428 19:51:40.527706 27334 net.cpp:200] loss needs backward computation.
I0428 19:51:40.527710 27334 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:40.527714 27334 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:40.527716 27334 net.cpp:200] relu3 needs backward computation.
I0428 19:51:40.527719 27334 net.cpp:200] ip3 needs backward computation.
I0428 19:51:40.527721 27334 net.cpp:200] relu2 needs backward computation.
I0428 19:51:40.527724 27334 net.cpp:200] ip2 needs backward computation.
I0428 19:51:40.527726 27334 net.cpp:200] relu1 needs backward computation.
I0428 19:51:40.527729 27334 net.cpp:200] ip1 needs backward computation.
I0428 19:51:40.527731 27334 net.cpp:200] pool1 needs backward computation.
I0428 19:51:40.527734 27334 net.cpp:200] conv1 needs backward computation.
I0428 19:51:40.527737 27334 net.cpp:200] pool0 needs backward computation.
I0428 19:51:40.527740 27334 net.cpp:200] conv0 needs backward computation.
I0428 19:51:40.527748 27334 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:40.527752 27334 net.cpp:202] mnist does not need backward computation.
I0428 19:51:40.527755 27334 net.cpp:244] This network produces output accuracy
I0428 19:51:40.527757 27334 net.cpp:244] This network produces output loss
I0428 19:51:40.527773 27334 net.cpp:257] Network initialization done.
I0428 19:51:40.527839 27334 solver.cpp:56] Solver scaffolding done.
I0428 19:51:40.528179 27334 caffe.cpp:248] Starting Optimization
I0428 19:51:40.528187 27334 solver.cpp:273] Solving LeNet
I0428 19:51:40.528189 27334 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:40.528362 27334 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:40.532450 27334 blocking_queue.cpp:49] Waiting for data
I0428 19:51:40.605841 27341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:40.606348 27334 solver.cpp:398]     Test net output #0: accuracy = 0.0909
I0428 19:51:40.606369 27334 solver.cpp:398]     Test net output #1: loss = 2.33219 (* 1 = 2.33219 loss)
I0428 19:51:40.608080 27334 solver.cpp:219] Iteration 0 (-8.09077e-31 iter/s, 0.0798587s/100 iters), loss = 2.3218
I0428 19:51:40.608114 27334 solver.cpp:238]     Train net output #0: loss = 2.3218 (* 1 = 2.3218 loss)
I0428 19:51:40.608132 27334 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:40.703716 27334 solver.cpp:219] Iteration 100 (1046.14 iter/s, 0.0955895s/100 iters), loss = 0.602413
I0428 19:51:40.703742 27334 solver.cpp:238]     Train net output #0: loss = 0.602413 (* 1 = 0.602413 loss)
I0428 19:51:40.703748 27334 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:40.789913 27334 solver.cpp:219] Iteration 200 (1160.6 iter/s, 0.0861624s/100 iters), loss = 0.311975
I0428 19:51:40.789952 27334 solver.cpp:238]     Train net output #0: loss = 0.311975 (* 1 = 0.311975 loss)
I0428 19:51:40.789958 27334 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:40.872433 27334 solver.cpp:219] Iteration 300 (1212.32 iter/s, 0.0824862s/100 iters), loss = 0.334451
I0428 19:51:40.872473 27334 solver.cpp:238]     Train net output #0: loss = 0.334451 (* 1 = 0.334451 loss)
I0428 19:51:40.872478 27334 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:40.954993 27334 solver.cpp:219] Iteration 400 (1211.72 iter/s, 0.0825272s/100 iters), loss = 0.234142
I0428 19:51:40.955030 27334 solver.cpp:238]     Train net output #0: loss = 0.234142 (* 1 = 0.234142 loss)
I0428 19:51:40.955036 27334 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:41.035761 27334 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:41.111573 27341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:41.112098 27334 solver.cpp:398]     Test net output #0: accuracy = 0.9482
I0428 19:51:41.112116 27334 solver.cpp:398]     Test net output #1: loss = 0.177827 (* 1 = 0.177827 loss)
I0428 19:51:41.112996 27334 solver.cpp:219] Iteration 500 (633.046 iter/s, 0.157966s/100 iters), loss = 0.206384
I0428 19:51:41.113037 27334 solver.cpp:238]     Train net output #0: loss = 0.206384 (* 1 = 0.206384 loss)
I0428 19:51:41.113059 27334 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:41.209043 27334 solver.cpp:219] Iteration 600 (1041.71 iter/s, 0.0959958s/100 iters), loss = 0.0966936
I0428 19:51:41.209081 27334 solver.cpp:238]     Train net output #0: loss = 0.0966938 (* 1 = 0.0966938 loss)
I0428 19:51:41.209089 27334 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:41.296269 27334 solver.cpp:219] Iteration 700 (1146.86 iter/s, 0.0871946s/100 iters), loss = 0.299955
I0428 19:51:41.296309 27334 solver.cpp:238]     Train net output #0: loss = 0.299955 (* 1 = 0.299955 loss)
I0428 19:51:41.296315 27334 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:41.380201 27334 solver.cpp:219] Iteration 800 (1191.92 iter/s, 0.0838984s/100 iters), loss = 0.248243
I0428 19:51:41.380240 27334 solver.cpp:238]     Train net output #0: loss = 0.248243 (* 1 = 0.248243 loss)
I0428 19:51:41.380246 27334 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:41.476163 27334 solver.cpp:219] Iteration 900 (1042.46 iter/s, 0.0959273s/100 iters), loss = 0.237605
I0428 19:51:41.476203 27334 solver.cpp:238]     Train net output #0: loss = 0.237606 (* 1 = 0.237606 loss)
I0428 19:51:41.476210 27334 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:41.506240 27340 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:41.566737 27334 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:41.567606 27334 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:41.568145 27334 solver.cpp:311] Iteration 1000, loss = 0.125951
I0428 19:51:41.568161 27334 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:41.643249 27341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:41.643790 27334 solver.cpp:398]     Test net output #0: accuracy = 0.9671
I0428 19:51:41.643810 27334 solver.cpp:398]     Test net output #1: loss = 0.106716 (* 1 = 0.106716 loss)
I0428 19:51:41.643815 27334 solver.cpp:316] Optimization Done.
I0428 19:51:41.643818 27334 caffe.cpp:259] Optimization Done.
