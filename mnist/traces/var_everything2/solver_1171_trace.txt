I0428 20:11:59.012027 32176 caffe.cpp:218] Using GPUs 0
I0428 20:11:59.045014 32176 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:59.567414 32176 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1171.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:59.567555 32176 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1171.prototxt
I0428 20:11:59.567909 32176 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:59.567925 32176 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:59.568007 32176 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:11:59.568078 32176 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:59.568178 32176 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:59.568204 32176 net.cpp:86] Creating Layer mnist
I0428 20:11:59.568215 32176 net.cpp:382] mnist -> data
I0428 20:11:59.568244 32176 net.cpp:382] mnist -> label
I0428 20:11:59.569479 32176 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:59.572229 32176 net.cpp:124] Setting up mnist
I0428 20:11:59.572247 32176 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:59.572253 32176 net.cpp:131] Top shape: 64 (64)
I0428 20:11:59.572257 32176 net.cpp:139] Memory required for data: 200960
I0428 20:11:59.572264 32176 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:59.572300 32176 net.cpp:86] Creating Layer conv0
I0428 20:11:59.572320 32176 net.cpp:408] conv0 <- data
I0428 20:11:59.572334 32176 net.cpp:382] conv0 -> conv0
I0428 20:11:59.862509 32176 net.cpp:124] Setting up conv0
I0428 20:11:59.862540 32176 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:59.862545 32176 net.cpp:139] Memory required for data: 3887360
I0428 20:11:59.862563 32176 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:59.862578 32176 net.cpp:86] Creating Layer pool0
I0428 20:11:59.862583 32176 net.cpp:408] pool0 <- conv0
I0428 20:11:59.862589 32176 net.cpp:382] pool0 -> pool0
I0428 20:11:59.862643 32176 net.cpp:124] Setting up pool0
I0428 20:11:59.862649 32176 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:59.862673 32176 net.cpp:139] Memory required for data: 4808960
I0428 20:11:59.862676 32176 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:59.862690 32176 net.cpp:86] Creating Layer conv1
I0428 20:11:59.862694 32176 net.cpp:408] conv1 <- pool0
I0428 20:11:59.862700 32176 net.cpp:382] conv1 -> conv1
I0428 20:11:59.865376 32176 net.cpp:124] Setting up conv1
I0428 20:11:59.865396 32176 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:11:59.865402 32176 net.cpp:139] Memory required for data: 6447360
I0428 20:11:59.865413 32176 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:59.865422 32176 net.cpp:86] Creating Layer pool1
I0428 20:11:59.865427 32176 net.cpp:408] pool1 <- conv1
I0428 20:11:59.865433 32176 net.cpp:382] pool1 -> pool1
I0428 20:11:59.865476 32176 net.cpp:124] Setting up pool1
I0428 20:11:59.865483 32176 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:11:59.865487 32176 net.cpp:139] Memory required for data: 6856960
I0428 20:11:59.865490 32176 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:59.865499 32176 net.cpp:86] Creating Layer ip1
I0428 20:11:59.865504 32176 net.cpp:408] ip1 <- pool1
I0428 20:11:59.865509 32176 net.cpp:382] ip1 -> ip1
I0428 20:11:59.866746 32176 net.cpp:124] Setting up ip1
I0428 20:11:59.866763 32176 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:59.866767 32176 net.cpp:139] Memory required for data: 6859520
I0428 20:11:59.866777 32176 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:59.866785 32176 net.cpp:86] Creating Layer relu1
I0428 20:11:59.866789 32176 net.cpp:408] relu1 <- ip1
I0428 20:11:59.866796 32176 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:59.867004 32176 net.cpp:124] Setting up relu1
I0428 20:11:59.867015 32176 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:59.867019 32176 net.cpp:139] Memory required for data: 6862080
I0428 20:11:59.867023 32176 layer_factory.hpp:77] Creating layer loss
I0428 20:11:59.867030 32176 net.cpp:86] Creating Layer loss
I0428 20:11:59.867034 32176 net.cpp:408] loss <- ip1
I0428 20:11:59.867039 32176 net.cpp:408] loss <- label
I0428 20:11:59.867044 32176 net.cpp:382] loss -> loss
I0428 20:11:59.867066 32176 layer_factory.hpp:77] Creating layer loss
I0428 20:11:59.868055 32176 net.cpp:124] Setting up loss
I0428 20:11:59.868072 32176 net.cpp:131] Top shape: (1)
I0428 20:11:59.868077 32176 net.cpp:134]     with loss weight 1
I0428 20:11:59.868093 32176 net.cpp:139] Memory required for data: 6862084
I0428 20:11:59.868098 32176 net.cpp:200] loss needs backward computation.
I0428 20:11:59.868103 32176 net.cpp:200] relu1 needs backward computation.
I0428 20:11:59.868108 32176 net.cpp:200] ip1 needs backward computation.
I0428 20:11:59.868110 32176 net.cpp:200] pool1 needs backward computation.
I0428 20:11:59.868114 32176 net.cpp:200] conv1 needs backward computation.
I0428 20:11:59.868119 32176 net.cpp:200] pool0 needs backward computation.
I0428 20:11:59.868121 32176 net.cpp:200] conv0 needs backward computation.
I0428 20:11:59.868126 32176 net.cpp:202] mnist does not need backward computation.
I0428 20:11:59.868129 32176 net.cpp:244] This network produces output loss
I0428 20:11:59.868139 32176 net.cpp:257] Network initialization done.
I0428 20:11:59.868460 32176 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1171.prototxt
I0428 20:11:59.868504 32176 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:59.868610 32176 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:11:59.868696 32176 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:59.868754 32176 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:59.868769 32176 net.cpp:86] Creating Layer mnist
I0428 20:11:59.868774 32176 net.cpp:382] mnist -> data
I0428 20:11:59.868784 32176 net.cpp:382] mnist -> label
I0428 20:11:59.868901 32176 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:59.871143 32176 net.cpp:124] Setting up mnist
I0428 20:11:59.871165 32176 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:59.871172 32176 net.cpp:131] Top shape: 100 (100)
I0428 20:11:59.871176 32176 net.cpp:139] Memory required for data: 314000
I0428 20:11:59.871181 32176 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:59.871203 32176 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:59.871209 32176 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:59.871215 32176 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:59.871224 32176 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:59.871275 32176 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:59.871292 32176 net.cpp:131] Top shape: 100 (100)
I0428 20:11:59.871297 32176 net.cpp:131] Top shape: 100 (100)
I0428 20:11:59.871301 32176 net.cpp:139] Memory required for data: 314800
I0428 20:11:59.871304 32176 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:59.871315 32176 net.cpp:86] Creating Layer conv0
I0428 20:11:59.871318 32176 net.cpp:408] conv0 <- data
I0428 20:11:59.871325 32176 net.cpp:382] conv0 -> conv0
I0428 20:11:59.872406 32176 net.cpp:124] Setting up conv0
I0428 20:11:59.872421 32176 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:59.872424 32176 net.cpp:139] Memory required for data: 6074800
I0428 20:11:59.872436 32176 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:59.872444 32176 net.cpp:86] Creating Layer pool0
I0428 20:11:59.872449 32176 net.cpp:408] pool0 <- conv0
I0428 20:11:59.872455 32176 net.cpp:382] pool0 -> pool0
I0428 20:11:59.872503 32176 net.cpp:124] Setting up pool0
I0428 20:11:59.872509 32176 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:59.872512 32176 net.cpp:139] Memory required for data: 7514800
I0428 20:11:59.872516 32176 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:59.872527 32176 net.cpp:86] Creating Layer conv1
I0428 20:11:59.872530 32176 net.cpp:408] conv1 <- pool0
I0428 20:11:59.872537 32176 net.cpp:382] conv1 -> conv1
I0428 20:11:59.874816 32176 net.cpp:124] Setting up conv1
I0428 20:11:59.874836 32176 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:11:59.874841 32176 net.cpp:139] Memory required for data: 10074800
I0428 20:11:59.874852 32176 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:59.874861 32176 net.cpp:86] Creating Layer pool1
I0428 20:11:59.874884 32176 net.cpp:408] pool1 <- conv1
I0428 20:11:59.874891 32176 net.cpp:382] pool1 -> pool1
I0428 20:11:59.874938 32176 net.cpp:124] Setting up pool1
I0428 20:11:59.874945 32176 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:11:59.874949 32176 net.cpp:139] Memory required for data: 10714800
I0428 20:11:59.874953 32176 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:59.874961 32176 net.cpp:86] Creating Layer ip1
I0428 20:11:59.874966 32176 net.cpp:408] ip1 <- pool1
I0428 20:11:59.874974 32176 net.cpp:382] ip1 -> ip1
I0428 20:11:59.875198 32176 net.cpp:124] Setting up ip1
I0428 20:11:59.875208 32176 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:59.875212 32176 net.cpp:139] Memory required for data: 10718800
I0428 20:11:59.875221 32176 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:59.875229 32176 net.cpp:86] Creating Layer relu1
I0428 20:11:59.875233 32176 net.cpp:408] relu1 <- ip1
I0428 20:11:59.875239 32176 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:59.876190 32176 net.cpp:124] Setting up relu1
I0428 20:11:59.876205 32176 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:59.876210 32176 net.cpp:139] Memory required for data: 10722800
I0428 20:11:59.876214 32176 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:11:59.876224 32176 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:11:59.876229 32176 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:11:59.876235 32176 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:11:59.876241 32176 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:11:59.876302 32176 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:11:59.876313 32176 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:59.876318 32176 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:59.876322 32176 net.cpp:139] Memory required for data: 10730800
I0428 20:11:59.876325 32176 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:59.876332 32176 net.cpp:86] Creating Layer accuracy
I0428 20:11:59.876335 32176 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:11:59.876341 32176 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:59.876346 32176 net.cpp:382] accuracy -> accuracy
I0428 20:11:59.876355 32176 net.cpp:124] Setting up accuracy
I0428 20:11:59.876360 32176 net.cpp:131] Top shape: (1)
I0428 20:11:59.876364 32176 net.cpp:139] Memory required for data: 10730804
I0428 20:11:59.876368 32176 layer_factory.hpp:77] Creating layer loss
I0428 20:11:59.876374 32176 net.cpp:86] Creating Layer loss
I0428 20:11:59.876377 32176 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:11:59.876382 32176 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:59.876389 32176 net.cpp:382] loss -> loss
I0428 20:11:59.876402 32176 layer_factory.hpp:77] Creating layer loss
I0428 20:11:59.876695 32176 net.cpp:124] Setting up loss
I0428 20:11:59.876708 32176 net.cpp:131] Top shape: (1)
I0428 20:11:59.876713 32176 net.cpp:134]     with loss weight 1
I0428 20:11:59.876720 32176 net.cpp:139] Memory required for data: 10730808
I0428 20:11:59.876724 32176 net.cpp:200] loss needs backward computation.
I0428 20:11:59.876729 32176 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:59.876734 32176 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:11:59.876737 32176 net.cpp:200] relu1 needs backward computation.
I0428 20:11:59.876740 32176 net.cpp:200] ip1 needs backward computation.
I0428 20:11:59.876744 32176 net.cpp:200] pool1 needs backward computation.
I0428 20:11:59.876749 32176 net.cpp:200] conv1 needs backward computation.
I0428 20:11:59.876754 32176 net.cpp:200] pool0 needs backward computation.
I0428 20:11:59.876756 32176 net.cpp:200] conv0 needs backward computation.
I0428 20:11:59.876760 32176 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:59.876765 32176 net.cpp:202] mnist does not need backward computation.
I0428 20:11:59.876775 32176 net.cpp:244] This network produces output accuracy
I0428 20:11:59.876780 32176 net.cpp:244] This network produces output loss
I0428 20:11:59.876802 32176 net.cpp:257] Network initialization done.
I0428 20:11:59.876866 32176 solver.cpp:56] Solver scaffolding done.
I0428 20:11:59.877135 32176 caffe.cpp:248] Starting Optimization
I0428 20:11:59.877148 32176 solver.cpp:273] Solving LeNet
I0428 20:11:59.877154 32176 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:59.878041 32176 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:59.885413 32176 blocking_queue.cpp:49] Waiting for data
I0428 20:11:59.955423 32183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:59.956161 32176 solver.cpp:398]     Test net output #0: accuracy = 0.1371
I0428 20:11:59.956184 32176 solver.cpp:398]     Test net output #1: loss = 2.29569 (* 1 = 2.29569 loss)
I0428 20:11:59.961442 32176 solver.cpp:219] Iteration 0 (0 iter/s, 0.0842527s/100 iters), loss = 2.3147
I0428 20:11:59.961472 32176 solver.cpp:238]     Train net output #0: loss = 2.3147 (* 1 = 2.3147 loss)
I0428 20:11:59.961486 32176 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:00.135603 32176 solver.cpp:219] Iteration 100 (574.344 iter/s, 0.174112s/100 iters), loss = 0.466288
I0428 20:12:00.135640 32176 solver.cpp:238]     Train net output #0: loss = 0.466288 (* 1 = 0.466288 loss)
I0428 20:12:00.135650 32176 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:00.326867 32176 solver.cpp:219] Iteration 200 (522.989 iter/s, 0.191208s/100 iters), loss = 0.169231
I0428 20:12:00.326925 32176 solver.cpp:238]     Train net output #0: loss = 0.169231 (* 1 = 0.169231 loss)
I0428 20:12:00.326941 32176 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:00.526690 32176 solver.cpp:219] Iteration 300 (500.64 iter/s, 0.199745s/100 iters), loss = 0.197994
I0428 20:12:00.526758 32176 solver.cpp:238]     Train net output #0: loss = 0.197994 (* 1 = 0.197994 loss)
I0428 20:12:00.526775 32176 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:00.724035 32176 solver.cpp:219] Iteration 400 (506.939 iter/s, 0.197262s/100 iters), loss = 0.0910872
I0428 20:12:00.724089 32176 solver.cpp:238]     Train net output #0: loss = 0.0910872 (* 1 = 0.0910872 loss)
I0428 20:12:00.724103 32176 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:00.912365 32176 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:00.980819 32183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:00.982971 32176 solver.cpp:398]     Test net output #0: accuracy = 0.9686
I0428 20:12:00.983000 32176 solver.cpp:398]     Test net output #1: loss = 0.106885 (* 1 = 0.106885 loss)
I0428 20:12:00.984717 32176 solver.cpp:219] Iteration 500 (383.71 iter/s, 0.260613s/100 iters), loss = 0.106355
I0428 20:12:00.984748 32176 solver.cpp:238]     Train net output #0: loss = 0.106355 (* 1 = 0.106355 loss)
I0428 20:12:00.984758 32176 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:01.171056 32176 solver.cpp:219] Iteration 600 (536.794 iter/s, 0.186291s/100 iters), loss = 0.107705
I0428 20:12:01.171098 32176 solver.cpp:238]     Train net output #0: loss = 0.107705 (* 1 = 0.107705 loss)
I0428 20:12:01.171109 32176 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:01.360247 32176 solver.cpp:219] Iteration 700 (528.732 iter/s, 0.189132s/100 iters), loss = 0.0909813
I0428 20:12:01.360302 32176 solver.cpp:238]     Train net output #0: loss = 0.0909815 (* 1 = 0.0909815 loss)
I0428 20:12:01.360316 32176 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:01.559686 32176 solver.cpp:219] Iteration 800 (501.586 iter/s, 0.199368s/100 iters), loss = 0.177958
I0428 20:12:01.559741 32176 solver.cpp:238]     Train net output #0: loss = 0.177958 (* 1 = 0.177958 loss)
I0428 20:12:01.559756 32176 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:01.759451 32176 solver.cpp:219] Iteration 900 (500.763 iter/s, 0.199695s/100 iters), loss = 0.157364
I0428 20:12:01.759503 32176 solver.cpp:238]     Train net output #0: loss = 0.157365 (* 1 = 0.157365 loss)
I0428 20:12:01.759517 32176 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:01.825069 32182 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:01.956681 32176 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:01.960227 32176 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:01.962146 32176 solver.cpp:311] Iteration 1000, loss = 0.103447
I0428 20:12:01.962179 32176 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:02.032330 32183 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:02.034531 32176 solver.cpp:398]     Test net output #0: accuracy = 0.9774
I0428 20:12:02.034560 32176 solver.cpp:398]     Test net output #1: loss = 0.0694144 (* 1 = 0.0694144 loss)
I0428 20:12:02.034569 32176 solver.cpp:316] Optimization Done.
I0428 20:12:02.034574 32176 caffe.cpp:259] Optimization Done.
