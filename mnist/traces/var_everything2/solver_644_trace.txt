I0428 19:51:48.233501 27367 caffe.cpp:218] Using GPUs 0
I0428 19:51:48.270663 27367 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:48.783390 27367 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test644.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:48.783535 27367 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test644.prototxt
I0428 19:51:48.783970 27367 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:48.783989 27367 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:48.784093 27367 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:48.784175 27367 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:48.784277 27367 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:48.784301 27367 net.cpp:86] Creating Layer mnist
I0428 19:51:48.784310 27367 net.cpp:382] mnist -> data
I0428 19:51:48.784334 27367 net.cpp:382] mnist -> label
I0428 19:51:48.785430 27367 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:48.788092 27367 net.cpp:124] Setting up mnist
I0428 19:51:48.788128 27367 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:48.788136 27367 net.cpp:131] Top shape: 64 (64)
I0428 19:51:48.788138 27367 net.cpp:139] Memory required for data: 200960
I0428 19:51:48.788146 27367 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:48.788163 27367 net.cpp:86] Creating Layer conv0
I0428 19:51:48.788185 27367 net.cpp:408] conv0 <- data
I0428 19:51:48.788197 27367 net.cpp:382] conv0 -> conv0
I0428 19:51:49.043246 27367 net.cpp:124] Setting up conv0
I0428 19:51:49.043288 27367 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:49.043292 27367 net.cpp:139] Memory required for data: 938240
I0428 19:51:49.043308 27367 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:49.043335 27367 net.cpp:86] Creating Layer pool0
I0428 19:51:49.043339 27367 net.cpp:408] pool0 <- conv0
I0428 19:51:49.043344 27367 net.cpp:382] pool0 -> pool0
I0428 19:51:49.043390 27367 net.cpp:124] Setting up pool0
I0428 19:51:49.043397 27367 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:49.043401 27367 net.cpp:139] Memory required for data: 1122560
I0428 19:51:49.043403 27367 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:49.043414 27367 net.cpp:86] Creating Layer conv1
I0428 19:51:49.043417 27367 net.cpp:408] conv1 <- pool0
I0428 19:51:49.043422 27367 net.cpp:382] conv1 -> conv1
I0428 19:51:49.046177 27367 net.cpp:124] Setting up conv1
I0428 19:51:49.046192 27367 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:49.046195 27367 net.cpp:139] Memory required for data: 1532160
I0428 19:51:49.046203 27367 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:49.046211 27367 net.cpp:86] Creating Layer pool1
I0428 19:51:49.046214 27367 net.cpp:408] pool1 <- conv1
I0428 19:51:49.046233 27367 net.cpp:382] pool1 -> pool1
I0428 19:51:49.046269 27367 net.cpp:124] Setting up pool1
I0428 19:51:49.046275 27367 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:49.046278 27367 net.cpp:139] Memory required for data: 1634560
I0428 19:51:49.046280 27367 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:49.046288 27367 net.cpp:86] Creating Layer ip1
I0428 19:51:49.046290 27367 net.cpp:408] ip1 <- pool1
I0428 19:51:49.046294 27367 net.cpp:382] ip1 -> ip1
I0428 19:51:49.046416 27367 net.cpp:124] Setting up ip1
I0428 19:51:49.046425 27367 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:49.046428 27367 net.cpp:139] Memory required for data: 1637120
I0428 19:51:49.046435 27367 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:49.046442 27367 net.cpp:86] Creating Layer relu1
I0428 19:51:49.046444 27367 net.cpp:408] relu1 <- ip1
I0428 19:51:49.046447 27367 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:49.046627 27367 net.cpp:124] Setting up relu1
I0428 19:51:49.046636 27367 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:49.046639 27367 net.cpp:139] Memory required for data: 1639680
I0428 19:51:49.046643 27367 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:49.046648 27367 net.cpp:86] Creating Layer ip2
I0428 19:51:49.046651 27367 net.cpp:408] ip2 <- ip1
I0428 19:51:49.046656 27367 net.cpp:382] ip2 -> ip2
I0428 19:51:49.046753 27367 net.cpp:124] Setting up ip2
I0428 19:51:49.046761 27367 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:49.046763 27367 net.cpp:139] Memory required for data: 1652480
I0428 19:51:49.046768 27367 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:49.046774 27367 net.cpp:86] Creating Layer relu2
I0428 19:51:49.046777 27367 net.cpp:408] relu2 <- ip2
I0428 19:51:49.046782 27367 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:49.047508 27367 net.cpp:124] Setting up relu2
I0428 19:51:49.047519 27367 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:49.047523 27367 net.cpp:139] Memory required for data: 1665280
I0428 19:51:49.047525 27367 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:49.047533 27367 net.cpp:86] Creating Layer ip3
I0428 19:51:49.047535 27367 net.cpp:408] ip3 <- ip2
I0428 19:51:49.047540 27367 net.cpp:382] ip3 -> ip3
I0428 19:51:49.047654 27367 net.cpp:124] Setting up ip3
I0428 19:51:49.047662 27367 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:49.047665 27367 net.cpp:139] Memory required for data: 1667840
I0428 19:51:49.047672 27367 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:49.047677 27367 net.cpp:86] Creating Layer relu3
I0428 19:51:49.047680 27367 net.cpp:408] relu3 <- ip3
I0428 19:51:49.047684 27367 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:49.047847 27367 net.cpp:124] Setting up relu3
I0428 19:51:49.047855 27367 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:49.047858 27367 net.cpp:139] Memory required for data: 1670400
I0428 19:51:49.047861 27367 layer_factory.hpp:77] Creating layer loss
I0428 19:51:49.047866 27367 net.cpp:86] Creating Layer loss
I0428 19:51:49.047870 27367 net.cpp:408] loss <- ip3
I0428 19:51:49.047873 27367 net.cpp:408] loss <- label
I0428 19:51:49.047879 27367 net.cpp:382] loss -> loss
I0428 19:51:49.047894 27367 layer_factory.hpp:77] Creating layer loss
I0428 19:51:49.048120 27367 net.cpp:124] Setting up loss
I0428 19:51:49.048128 27367 net.cpp:131] Top shape: (1)
I0428 19:51:49.048131 27367 net.cpp:134]     with loss weight 1
I0428 19:51:49.048144 27367 net.cpp:139] Memory required for data: 1670404
I0428 19:51:49.048147 27367 net.cpp:200] loss needs backward computation.
I0428 19:51:49.048151 27367 net.cpp:200] relu3 needs backward computation.
I0428 19:51:49.048154 27367 net.cpp:200] ip3 needs backward computation.
I0428 19:51:49.048156 27367 net.cpp:200] relu2 needs backward computation.
I0428 19:51:49.048159 27367 net.cpp:200] ip2 needs backward computation.
I0428 19:51:49.048162 27367 net.cpp:200] relu1 needs backward computation.
I0428 19:51:49.048164 27367 net.cpp:200] ip1 needs backward computation.
I0428 19:51:49.048167 27367 net.cpp:200] pool1 needs backward computation.
I0428 19:51:49.048171 27367 net.cpp:200] conv1 needs backward computation.
I0428 19:51:49.048173 27367 net.cpp:200] pool0 needs backward computation.
I0428 19:51:49.048177 27367 net.cpp:200] conv0 needs backward computation.
I0428 19:51:49.048179 27367 net.cpp:202] mnist does not need backward computation.
I0428 19:51:49.048182 27367 net.cpp:244] This network produces output loss
I0428 19:51:49.048190 27367 net.cpp:257] Network initialization done.
I0428 19:51:49.048498 27367 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test644.prototxt
I0428 19:51:49.048523 27367 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:49.048611 27367 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:49.048702 27367 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:49.048744 27367 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:49.048756 27367 net.cpp:86] Creating Layer mnist
I0428 19:51:49.048761 27367 net.cpp:382] mnist -> data
I0428 19:51:49.048768 27367 net.cpp:382] mnist -> label
I0428 19:51:49.048892 27367 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:49.050891 27367 net.cpp:124] Setting up mnist
I0428 19:51:49.050920 27367 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:49.050925 27367 net.cpp:131] Top shape: 100 (100)
I0428 19:51:49.050928 27367 net.cpp:139] Memory required for data: 314000
I0428 19:51:49.050932 27367 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:49.050940 27367 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:49.050942 27367 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:49.050947 27367 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:49.050953 27367 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:49.051056 27367 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:49.051064 27367 net.cpp:131] Top shape: 100 (100)
I0428 19:51:49.051067 27367 net.cpp:131] Top shape: 100 (100)
I0428 19:51:49.051070 27367 net.cpp:139] Memory required for data: 314800
I0428 19:51:49.051074 27367 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:49.051081 27367 net.cpp:86] Creating Layer conv0
I0428 19:51:49.051084 27367 net.cpp:408] conv0 <- data
I0428 19:51:49.051090 27367 net.cpp:382] conv0 -> conv0
I0428 19:51:49.052594 27367 net.cpp:124] Setting up conv0
I0428 19:51:49.052608 27367 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:49.052610 27367 net.cpp:139] Memory required for data: 1466800
I0428 19:51:49.052634 27367 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:49.052640 27367 net.cpp:86] Creating Layer pool0
I0428 19:51:49.052644 27367 net.cpp:408] pool0 <- conv0
I0428 19:51:49.052649 27367 net.cpp:382] pool0 -> pool0
I0428 19:51:49.052682 27367 net.cpp:124] Setting up pool0
I0428 19:51:49.052690 27367 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:49.052692 27367 net.cpp:139] Memory required for data: 1754800
I0428 19:51:49.052695 27367 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:49.052702 27367 net.cpp:86] Creating Layer conv1
I0428 19:51:49.052706 27367 net.cpp:408] conv1 <- pool0
I0428 19:51:49.052711 27367 net.cpp:382] conv1 -> conv1
I0428 19:51:49.054777 27367 net.cpp:124] Setting up conv1
I0428 19:51:49.054790 27367 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:49.054793 27367 net.cpp:139] Memory required for data: 2394800
I0428 19:51:49.054819 27367 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:49.054826 27367 net.cpp:86] Creating Layer pool1
I0428 19:51:49.054828 27367 net.cpp:408] pool1 <- conv1
I0428 19:51:49.054833 27367 net.cpp:382] pool1 -> pool1
I0428 19:51:49.054874 27367 net.cpp:124] Setting up pool1
I0428 19:51:49.054882 27367 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:49.054883 27367 net.cpp:139] Memory required for data: 2554800
I0428 19:51:49.054886 27367 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:49.054891 27367 net.cpp:86] Creating Layer ip1
I0428 19:51:49.054894 27367 net.cpp:408] ip1 <- pool1
I0428 19:51:49.054899 27367 net.cpp:382] ip1 -> ip1
I0428 19:51:49.055019 27367 net.cpp:124] Setting up ip1
I0428 19:51:49.055027 27367 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:49.055038 27367 net.cpp:139] Memory required for data: 2558800
I0428 19:51:49.055047 27367 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:49.055052 27367 net.cpp:86] Creating Layer relu1
I0428 19:51:49.055055 27367 net.cpp:408] relu1 <- ip1
I0428 19:51:49.055059 27367 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:49.055227 27367 net.cpp:124] Setting up relu1
I0428 19:51:49.055249 27367 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:49.055253 27367 net.cpp:139] Memory required for data: 2562800
I0428 19:51:49.055256 27367 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:49.055280 27367 net.cpp:86] Creating Layer ip2
I0428 19:51:49.055294 27367 net.cpp:408] ip2 <- ip1
I0428 19:51:49.055299 27367 net.cpp:382] ip2 -> ip2
I0428 19:51:49.055402 27367 net.cpp:124] Setting up ip2
I0428 19:51:49.055408 27367 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:49.055411 27367 net.cpp:139] Memory required for data: 2582800
I0428 19:51:49.055415 27367 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:49.055421 27367 net.cpp:86] Creating Layer relu2
I0428 19:51:49.055424 27367 net.cpp:408] relu2 <- ip2
I0428 19:51:49.055428 27367 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:49.055627 27367 net.cpp:124] Setting up relu2
I0428 19:51:49.055635 27367 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:49.055637 27367 net.cpp:139] Memory required for data: 2602800
I0428 19:51:49.055640 27367 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:49.055646 27367 net.cpp:86] Creating Layer ip3
I0428 19:51:49.055649 27367 net.cpp:408] ip3 <- ip2
I0428 19:51:49.055655 27367 net.cpp:382] ip3 -> ip3
I0428 19:51:49.055764 27367 net.cpp:124] Setting up ip3
I0428 19:51:49.055773 27367 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:49.055775 27367 net.cpp:139] Memory required for data: 2606800
I0428 19:51:49.055797 27367 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:49.055801 27367 net.cpp:86] Creating Layer relu3
I0428 19:51:49.055804 27367 net.cpp:408] relu3 <- ip3
I0428 19:51:49.055807 27367 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:49.056568 27367 net.cpp:124] Setting up relu3
I0428 19:51:49.056579 27367 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:49.056582 27367 net.cpp:139] Memory required for data: 2610800
I0428 19:51:49.056586 27367 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:49.056591 27367 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:49.056594 27367 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:49.056601 27367 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:49.056605 27367 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:49.056658 27367 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:49.056663 27367 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:49.056668 27367 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:49.056686 27367 net.cpp:139] Memory required for data: 2618800
I0428 19:51:49.056689 27367 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:49.056694 27367 net.cpp:86] Creating Layer accuracy
I0428 19:51:49.056696 27367 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:49.056700 27367 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:49.056704 27367 net.cpp:382] accuracy -> accuracy
I0428 19:51:49.056710 27367 net.cpp:124] Setting up accuracy
I0428 19:51:49.056715 27367 net.cpp:131] Top shape: (1)
I0428 19:51:49.056716 27367 net.cpp:139] Memory required for data: 2618804
I0428 19:51:49.056720 27367 layer_factory.hpp:77] Creating layer loss
I0428 19:51:49.056725 27367 net.cpp:86] Creating Layer loss
I0428 19:51:49.056727 27367 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:49.056731 27367 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:49.056735 27367 net.cpp:382] loss -> loss
I0428 19:51:49.056740 27367 layer_factory.hpp:77] Creating layer loss
I0428 19:51:49.057036 27367 net.cpp:124] Setting up loss
I0428 19:51:49.057046 27367 net.cpp:131] Top shape: (1)
I0428 19:51:49.057049 27367 net.cpp:134]     with loss weight 1
I0428 19:51:49.057056 27367 net.cpp:139] Memory required for data: 2618808
I0428 19:51:49.057070 27367 net.cpp:200] loss needs backward computation.
I0428 19:51:49.057075 27367 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:49.057080 27367 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:49.057082 27367 net.cpp:200] relu3 needs backward computation.
I0428 19:51:49.057085 27367 net.cpp:200] ip3 needs backward computation.
I0428 19:51:49.057087 27367 net.cpp:200] relu2 needs backward computation.
I0428 19:51:49.057091 27367 net.cpp:200] ip2 needs backward computation.
I0428 19:51:49.057095 27367 net.cpp:200] relu1 needs backward computation.
I0428 19:51:49.057096 27367 net.cpp:200] ip1 needs backward computation.
I0428 19:51:49.057099 27367 net.cpp:200] pool1 needs backward computation.
I0428 19:51:49.057103 27367 net.cpp:200] conv1 needs backward computation.
I0428 19:51:49.057106 27367 net.cpp:200] pool0 needs backward computation.
I0428 19:51:49.057109 27367 net.cpp:200] conv0 needs backward computation.
I0428 19:51:49.057112 27367 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:49.057116 27367 net.cpp:202] mnist does not need backward computation.
I0428 19:51:49.057119 27367 net.cpp:244] This network produces output accuracy
I0428 19:51:49.057122 27367 net.cpp:244] This network produces output loss
I0428 19:51:49.057135 27367 net.cpp:257] Network initialization done.
I0428 19:51:49.057235 27367 solver.cpp:56] Solver scaffolding done.
I0428 19:51:49.057579 27367 caffe.cpp:248] Starting Optimization
I0428 19:51:49.057585 27367 solver.cpp:273] Solving LeNet
I0428 19:51:49.057588 27367 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:49.058326 27367 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:49.062561 27367 blocking_queue.cpp:49] Waiting for data
I0428 19:51:49.135747 27374 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:49.136263 27367 solver.cpp:398]     Test net output #0: accuracy = 0.0992
I0428 19:51:49.136286 27367 solver.cpp:398]     Test net output #1: loss = 2.31089 (* 1 = 2.31089 loss)
I0428 19:51:49.138031 27367 solver.cpp:219] Iteration 0 (-2.99299e-31 iter/s, 0.0804157s/100 iters), loss = 2.34381
I0428 19:51:49.138094 27367 solver.cpp:238]     Train net output #0: loss = 2.34381 (* 1 = 2.34381 loss)
I0428 19:51:49.138108 27367 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:49.233822 27367 solver.cpp:219] Iteration 100 (1044.58 iter/s, 0.0957323s/100 iters), loss = 1.01932
I0428 19:51:49.233847 27367 solver.cpp:238]     Train net output #0: loss = 1.01932 (* 1 = 1.01932 loss)
I0428 19:51:49.233868 27367 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:49.320780 27367 solver.cpp:219] Iteration 200 (1150.44 iter/s, 0.0869233s/100 iters), loss = 0.510449
I0428 19:51:49.320804 27367 solver.cpp:238]     Train net output #0: loss = 0.510449 (* 1 = 0.510449 loss)
I0428 19:51:49.320832 27367 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:49.407210 27367 solver.cpp:219] Iteration 300 (1157.45 iter/s, 0.0863969s/100 iters), loss = 0.313446
I0428 19:51:49.407235 27367 solver.cpp:238]     Train net output #0: loss = 0.313446 (* 1 = 0.313446 loss)
I0428 19:51:49.407258 27367 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:49.493904 27367 solver.cpp:219] Iteration 400 (1153.95 iter/s, 0.0866591s/100 iters), loss = 0.153524
I0428 19:51:49.493928 27367 solver.cpp:238]     Train net output #0: loss = 0.153524 (* 1 = 0.153524 loss)
I0428 19:51:49.493950 27367 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:49.579704 27367 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:49.655028 27374 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:49.655601 27367 solver.cpp:398]     Test net output #0: accuracy = 0.9571
I0428 19:51:49.655622 27367 solver.cpp:398]     Test net output #1: loss = 0.147726 (* 1 = 0.147726 loss)
I0428 19:51:49.656586 27367 solver.cpp:219] Iteration 500 (614.894 iter/s, 0.16263s/100 iters), loss = 0.160903
I0428 19:51:49.656635 27367 solver.cpp:238]     Train net output #0: loss = 0.160903 (* 1 = 0.160903 loss)
I0428 19:51:49.656642 27367 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:49.751266 27367 solver.cpp:219] Iteration 600 (1056.82 iter/s, 0.0946232s/100 iters), loss = 0.133679
I0428 19:51:49.751291 27367 solver.cpp:238]     Train net output #0: loss = 0.133679 (* 1 = 0.133679 loss)
I0428 19:51:49.751313 27367 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:49.837563 27367 solver.cpp:219] Iteration 700 (1159.27 iter/s, 0.0862609s/100 iters), loss = 0.273732
I0428 19:51:49.837586 27367 solver.cpp:238]     Train net output #0: loss = 0.273732 (* 1 = 0.273732 loss)
I0428 19:51:49.837594 27367 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:49.922953 27367 solver.cpp:219] Iteration 800 (1171.57 iter/s, 0.0853555s/100 iters), loss = 0.333222
I0428 19:51:49.922978 27367 solver.cpp:238]     Train net output #0: loss = 0.333222 (* 1 = 0.333222 loss)
I0428 19:51:49.922986 27367 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:50.008919 27367 solver.cpp:219] Iteration 900 (1163.73 iter/s, 0.0859308s/100 iters), loss = 0.175689
I0428 19:51:50.008944 27367 solver.cpp:238]     Train net output #0: loss = 0.175689 (* 1 = 0.175689 loss)
I0428 19:51:50.008951 27367 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:50.037753 27373 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:50.094048 27367 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:50.094967 27367 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:50.095464 27367 solver.cpp:311] Iteration 1000, loss = 0.0909296
I0428 19:51:50.095481 27367 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:50.161254 27374 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:50.161774 27367 solver.cpp:398]     Test net output #0: accuracy = 0.9714
I0428 19:51:50.161793 27367 solver.cpp:398]     Test net output #1: loss = 0.0895701 (* 1 = 0.0895701 loss)
I0428 19:51:50.161798 27367 solver.cpp:316] Optimization Done.
I0428 19:51:50.161801 27367 caffe.cpp:259] Optimization Done.
