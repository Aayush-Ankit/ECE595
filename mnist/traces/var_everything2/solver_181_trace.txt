I0428 19:33:29.905099 23117 caffe.cpp:218] Using GPUs 0
I0428 19:33:29.946255 23117 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:30.467311 23117 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test181.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:30.467466 23117 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test181.prototxt
I0428 19:33:30.467847 23117 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:30.467871 23117 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:30.467967 23117 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:30.468044 23117 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:30.468145 23117 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:30.468170 23117 net.cpp:86] Creating Layer mnist
I0428 19:33:30.468179 23117 net.cpp:382] mnist -> data
I0428 19:33:30.468207 23117 net.cpp:382] mnist -> label
I0428 19:33:30.469297 23117 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:30.471987 23117 net.cpp:124] Setting up mnist
I0428 19:33:30.472005 23117 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:30.472012 23117 net.cpp:131] Top shape: 64 (64)
I0428 19:33:30.472014 23117 net.cpp:139] Memory required for data: 200960
I0428 19:33:30.472021 23117 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:30.472044 23117 net.cpp:86] Creating Layer conv0
I0428 19:33:30.472050 23117 net.cpp:408] conv0 <- data
I0428 19:33:30.472062 23117 net.cpp:382] conv0 -> conv0
I0428 19:33:30.729215 23117 net.cpp:124] Setting up conv0
I0428 19:33:30.729255 23117 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:30.729259 23117 net.cpp:139] Memory required for data: 3887360
I0428 19:33:30.729272 23117 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:30.729285 23117 net.cpp:86] Creating Layer pool0
I0428 19:33:30.729308 23117 net.cpp:408] pool0 <- conv0
I0428 19:33:30.729315 23117 net.cpp:382] pool0 -> pool0
I0428 19:33:30.729357 23117 net.cpp:124] Setting up pool0
I0428 19:33:30.729365 23117 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:30.729368 23117 net.cpp:139] Memory required for data: 4808960
I0428 19:33:30.729370 23117 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:30.729378 23117 net.cpp:86] Creating Layer ip1
I0428 19:33:30.729394 23117 net.cpp:408] ip1 <- pool0
I0428 19:33:30.729413 23117 net.cpp:382] ip1 -> ip1
I0428 19:33:30.730936 23117 net.cpp:124] Setting up ip1
I0428 19:33:30.730947 23117 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:30.730967 23117 net.cpp:139] Memory required for data: 4815360
I0428 19:33:30.730975 23117 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:30.730981 23117 net.cpp:86] Creating Layer relu1
I0428 19:33:30.730985 23117 net.cpp:408] relu1 <- ip1
I0428 19:33:30.730989 23117 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:30.731169 23117 net.cpp:124] Setting up relu1
I0428 19:33:30.731179 23117 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:30.731182 23117 net.cpp:139] Memory required for data: 4821760
I0428 19:33:30.731185 23117 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:30.731191 23117 net.cpp:86] Creating Layer ip2
I0428 19:33:30.731194 23117 net.cpp:408] ip2 <- ip1
I0428 19:33:30.731199 23117 net.cpp:382] ip2 -> ip2
I0428 19:33:30.731331 23117 net.cpp:124] Setting up ip2
I0428 19:33:30.731338 23117 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:30.731343 23117 net.cpp:139] Memory required for data: 4828160
I0428 19:33:30.731349 23117 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:30.731358 23117 net.cpp:86] Creating Layer relu2
I0428 19:33:30.731360 23117 net.cpp:408] relu2 <- ip2
I0428 19:33:30.731366 23117 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:30.732216 23117 net.cpp:124] Setting up relu2
I0428 19:33:30.732228 23117 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:30.732242 23117 net.cpp:139] Memory required for data: 4834560
I0428 19:33:30.732246 23117 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:30.732254 23117 net.cpp:86] Creating Layer ip3
I0428 19:33:30.732256 23117 net.cpp:408] ip3 <- ip2
I0428 19:33:30.732261 23117 net.cpp:382] ip3 -> ip3
I0428 19:33:30.732388 23117 net.cpp:124] Setting up ip3
I0428 19:33:30.732396 23117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:30.732399 23117 net.cpp:139] Memory required for data: 4837120
I0428 19:33:30.732405 23117 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:30.732411 23117 net.cpp:86] Creating Layer relu3
I0428 19:33:30.732414 23117 net.cpp:408] relu3 <- ip3
I0428 19:33:30.732419 23117 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:30.732587 23117 net.cpp:124] Setting up relu3
I0428 19:33:30.732596 23117 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:30.732599 23117 net.cpp:139] Memory required for data: 4839680
I0428 19:33:30.732602 23117 layer_factory.hpp:77] Creating layer loss
I0428 19:33:30.732607 23117 net.cpp:86] Creating Layer loss
I0428 19:33:30.732611 23117 net.cpp:408] loss <- ip3
I0428 19:33:30.732615 23117 net.cpp:408] loss <- label
I0428 19:33:30.732621 23117 net.cpp:382] loss -> loss
I0428 19:33:30.732650 23117 layer_factory.hpp:77] Creating layer loss
I0428 19:33:30.732918 23117 net.cpp:124] Setting up loss
I0428 19:33:30.732928 23117 net.cpp:131] Top shape: (1)
I0428 19:33:30.732931 23117 net.cpp:134]     with loss weight 1
I0428 19:33:30.732947 23117 net.cpp:139] Memory required for data: 4839684
I0428 19:33:30.732951 23117 net.cpp:200] loss needs backward computation.
I0428 19:33:30.732970 23117 net.cpp:200] relu3 needs backward computation.
I0428 19:33:30.732973 23117 net.cpp:200] ip3 needs backward computation.
I0428 19:33:30.732975 23117 net.cpp:200] relu2 needs backward computation.
I0428 19:33:30.732978 23117 net.cpp:200] ip2 needs backward computation.
I0428 19:33:30.732998 23117 net.cpp:200] relu1 needs backward computation.
I0428 19:33:30.733001 23117 net.cpp:200] ip1 needs backward computation.
I0428 19:33:30.733021 23117 net.cpp:200] pool0 needs backward computation.
I0428 19:33:30.733024 23117 net.cpp:200] conv0 needs backward computation.
I0428 19:33:30.733027 23117 net.cpp:202] mnist does not need backward computation.
I0428 19:33:30.733031 23117 net.cpp:244] This network produces output loss
I0428 19:33:30.733038 23117 net.cpp:257] Network initialization done.
I0428 19:33:30.733378 23117 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test181.prototxt
I0428 19:33:30.733433 23117 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:30.733543 23117 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:30.733623 23117 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:30.733683 23117 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:30.733697 23117 net.cpp:86] Creating Layer mnist
I0428 19:33:30.733705 23117 net.cpp:382] mnist -> data
I0428 19:33:30.733728 23117 net.cpp:382] mnist -> label
I0428 19:33:30.733860 23117 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:30.734968 23117 net.cpp:124] Setting up mnist
I0428 19:33:30.734997 23117 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:30.735002 23117 net.cpp:131] Top shape: 100 (100)
I0428 19:33:30.735004 23117 net.cpp:139] Memory required for data: 314000
I0428 19:33:30.735008 23117 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:30.735014 23117 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:30.735018 23117 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:30.735023 23117 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:30.735029 23117 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:30.735074 23117 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:30.735080 23117 net.cpp:131] Top shape: 100 (100)
I0428 19:33:30.735083 23117 net.cpp:131] Top shape: 100 (100)
I0428 19:33:30.735086 23117 net.cpp:139] Memory required for data: 314800
I0428 19:33:30.735098 23117 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:30.735107 23117 net.cpp:86] Creating Layer conv0
I0428 19:33:30.735113 23117 net.cpp:408] conv0 <- data
I0428 19:33:30.735134 23117 net.cpp:382] conv0 -> conv0
I0428 19:33:30.736943 23117 net.cpp:124] Setting up conv0
I0428 19:33:30.736974 23117 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:30.736977 23117 net.cpp:139] Memory required for data: 6074800
I0428 19:33:30.736986 23117 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:30.736994 23117 net.cpp:86] Creating Layer pool0
I0428 19:33:30.736996 23117 net.cpp:408] pool0 <- conv0
I0428 19:33:30.737001 23117 net.cpp:382] pool0 -> pool0
I0428 19:33:30.737037 23117 net.cpp:124] Setting up pool0
I0428 19:33:30.737046 23117 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:30.737048 23117 net.cpp:139] Memory required for data: 7514800
I0428 19:33:30.737051 23117 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:30.737058 23117 net.cpp:86] Creating Layer ip1
I0428 19:33:30.737062 23117 net.cpp:408] ip1 <- pool0
I0428 19:33:30.737067 23117 net.cpp:382] ip1 -> ip1
I0428 19:33:30.737788 23117 net.cpp:124] Setting up ip1
I0428 19:33:30.737795 23117 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:30.737799 23117 net.cpp:139] Memory required for data: 7524800
I0428 19:33:30.737805 23117 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:30.737810 23117 net.cpp:86] Creating Layer relu1
I0428 19:33:30.737814 23117 net.cpp:408] relu1 <- ip1
I0428 19:33:30.737819 23117 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:30.737993 23117 net.cpp:124] Setting up relu1
I0428 19:33:30.738003 23117 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:30.738006 23117 net.cpp:139] Memory required for data: 7534800
I0428 19:33:30.738010 23117 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:30.738016 23117 net.cpp:86] Creating Layer ip2
I0428 19:33:30.738019 23117 net.cpp:408] ip2 <- ip1
I0428 19:33:30.738024 23117 net.cpp:382] ip2 -> ip2
I0428 19:33:30.738135 23117 net.cpp:124] Setting up ip2
I0428 19:33:30.738143 23117 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:30.738147 23117 net.cpp:139] Memory required for data: 7544800
I0428 19:33:30.738153 23117 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:30.738160 23117 net.cpp:86] Creating Layer relu2
I0428 19:33:30.738178 23117 net.cpp:408] relu2 <- ip2
I0428 19:33:30.738183 23117 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:30.739035 23117 net.cpp:124] Setting up relu2
I0428 19:33:30.739049 23117 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:30.739053 23117 net.cpp:139] Memory required for data: 7554800
I0428 19:33:30.739056 23117 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:30.739064 23117 net.cpp:86] Creating Layer ip3
I0428 19:33:30.739071 23117 net.cpp:408] ip3 <- ip2
I0428 19:33:30.739094 23117 net.cpp:382] ip3 -> ip3
I0428 19:33:30.739250 23117 net.cpp:124] Setting up ip3
I0428 19:33:30.739259 23117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:30.739264 23117 net.cpp:139] Memory required for data: 7558800
I0428 19:33:30.739269 23117 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:30.739274 23117 net.cpp:86] Creating Layer relu3
I0428 19:33:30.739277 23117 net.cpp:408] relu3 <- ip3
I0428 19:33:30.739282 23117 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:30.739431 23117 net.cpp:124] Setting up relu3
I0428 19:33:30.739441 23117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:30.739445 23117 net.cpp:139] Memory required for data: 7562800
I0428 19:33:30.739449 23117 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:30.739461 23117 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:30.739464 23117 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:30.739470 23117 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:30.739497 23117 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:30.739545 23117 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:30.739553 23117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:30.739573 23117 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:30.739586 23117 net.cpp:139] Memory required for data: 7570800
I0428 19:33:30.739590 23117 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:30.739596 23117 net.cpp:86] Creating Layer accuracy
I0428 19:33:30.739600 23117 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:30.739605 23117 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:30.739609 23117 net.cpp:382] accuracy -> accuracy
I0428 19:33:30.739617 23117 net.cpp:124] Setting up accuracy
I0428 19:33:30.739621 23117 net.cpp:131] Top shape: (1)
I0428 19:33:30.739624 23117 net.cpp:139] Memory required for data: 7570804
I0428 19:33:30.739629 23117 layer_factory.hpp:77] Creating layer loss
I0428 19:33:30.739632 23117 net.cpp:86] Creating Layer loss
I0428 19:33:30.739645 23117 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:30.739665 23117 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:30.739668 23117 net.cpp:382] loss -> loss
I0428 19:33:30.739675 23117 layer_factory.hpp:77] Creating layer loss
I0428 19:33:30.739938 23117 net.cpp:124] Setting up loss
I0428 19:33:30.739964 23117 net.cpp:131] Top shape: (1)
I0428 19:33:30.739966 23117 net.cpp:134]     with loss weight 1
I0428 19:33:30.739972 23117 net.cpp:139] Memory required for data: 7570808
I0428 19:33:30.739976 23117 net.cpp:200] loss needs backward computation.
I0428 19:33:30.739980 23117 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:30.739984 23117 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:30.739987 23117 net.cpp:200] relu3 needs backward computation.
I0428 19:33:30.739990 23117 net.cpp:200] ip3 needs backward computation.
I0428 19:33:30.739998 23117 net.cpp:200] relu2 needs backward computation.
I0428 19:33:30.740003 23117 net.cpp:200] ip2 needs backward computation.
I0428 19:33:30.740017 23117 net.cpp:200] relu1 needs backward computation.
I0428 19:33:30.740020 23117 net.cpp:200] ip1 needs backward computation.
I0428 19:33:30.740023 23117 net.cpp:200] pool0 needs backward computation.
I0428 19:33:30.740030 23117 net.cpp:200] conv0 needs backward computation.
I0428 19:33:30.740032 23117 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:30.740036 23117 net.cpp:202] mnist does not need backward computation.
I0428 19:33:30.740039 23117 net.cpp:244] This network produces output accuracy
I0428 19:33:30.740042 23117 net.cpp:244] This network produces output loss
I0428 19:33:30.740052 23117 net.cpp:257] Network initialization done.
I0428 19:33:30.740110 23117 solver.cpp:56] Solver scaffolding done.
I0428 19:33:30.740465 23117 caffe.cpp:248] Starting Optimization
I0428 19:33:30.740473 23117 solver.cpp:273] Solving LeNet
I0428 19:33:30.740475 23117 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:30.741230 23117 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:30.747681 23117 blocking_queue.cpp:49] Waiting for data
I0428 19:33:30.816686 23124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:30.817471 23117 solver.cpp:398]     Test net output #0: accuracy = 0.065
I0428 19:33:30.817499 23117 solver.cpp:398]     Test net output #1: loss = 2.31302 (* 1 = 2.31302 loss)
I0428 19:33:30.821310 23117 solver.cpp:219] Iteration 0 (-4.14664e-31 iter/s, 0.0808066s/100 iters), loss = 2.31775
I0428 19:33:30.821354 23117 solver.cpp:238]     Train net output #0: loss = 2.31775 (* 1 = 2.31775 loss)
I0428 19:33:30.821367 23117 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:30.926342 23117 solver.cpp:219] Iteration 100 (952.613 iter/s, 0.104974s/100 iters), loss = 0.462164
I0428 19:33:30.926384 23117 solver.cpp:238]     Train net output #0: loss = 0.462164 (* 1 = 0.462164 loss)
I0428 19:33:30.926390 23117 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:31.029089 23117 solver.cpp:219] Iteration 200 (973.739 iter/s, 0.102697s/100 iters), loss = 0.292793
I0428 19:33:31.029121 23117 solver.cpp:238]     Train net output #0: loss = 0.292793 (* 1 = 0.292793 loss)
I0428 19:33:31.029129 23117 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:31.130210 23117 solver.cpp:219] Iteration 300 (989.325 iter/s, 0.101079s/100 iters), loss = 0.221183
I0428 19:33:31.130234 23117 solver.cpp:238]     Train net output #0: loss = 0.221183 (* 1 = 0.221183 loss)
I0428 19:33:31.130240 23117 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:31.228684 23117 solver.cpp:219] Iteration 400 (1015.85 iter/s, 0.09844s/100 iters), loss = 0.157299
I0428 19:33:31.228708 23117 solver.cpp:238]     Train net output #0: loss = 0.157299 (* 1 = 0.157299 loss)
I0428 19:33:31.228714 23117 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:31.323338 23117 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:31.399484 23124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:31.400322 23117 solver.cpp:398]     Test net output #0: accuracy = 0.9495
I0428 19:33:31.400343 23117 solver.cpp:398]     Test net output #1: loss = 0.172155 (* 1 = 0.172155 loss)
I0428 19:33:31.401305 23117 solver.cpp:219] Iteration 500 (579.435 iter/s, 0.172582s/100 iters), loss = 0.25351
I0428 19:33:31.401355 23117 solver.cpp:238]     Train net output #0: loss = 0.25351 (* 1 = 0.25351 loss)
I0428 19:33:31.401362 23117 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:31.506798 23117 solver.cpp:219] Iteration 600 (948.463 iter/s, 0.105434s/100 iters), loss = 0.170836
I0428 19:33:31.506839 23117 solver.cpp:238]     Train net output #0: loss = 0.170836 (* 1 = 0.170836 loss)
I0428 19:33:31.506844 23117 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:31.602977 23117 solver.cpp:219] Iteration 700 (1040.28 iter/s, 0.096128s/100 iters), loss = 0.321745
I0428 19:33:31.603001 23117 solver.cpp:238]     Train net output #0: loss = 0.321745 (* 1 = 0.321745 loss)
I0428 19:33:31.603008 23117 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:31.698422 23117 solver.cpp:219] Iteration 800 (1048.1 iter/s, 0.0954112s/100 iters), loss = 0.294516
I0428 19:33:31.698446 23117 solver.cpp:238]     Train net output #0: loss = 0.294516 (* 1 = 0.294516 loss)
I0428 19:33:31.698452 23117 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:31.794236 23117 solver.cpp:219] Iteration 900 (1044.07 iter/s, 0.0957788s/100 iters), loss = 0.241135
I0428 19:33:31.794277 23117 solver.cpp:238]     Train net output #0: loss = 0.241135 (* 1 = 0.241135 loss)
I0428 19:33:31.794283 23117 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:31.826321 23123 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:31.891360 23117 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:31.893293 23117 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:31.894606 23117 solver.cpp:311] Iteration 1000, loss = 0.197017
I0428 19:33:31.894620 23117 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:31.971154 23124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:31.971992 23117 solver.cpp:398]     Test net output #0: accuracy = 0.965
I0428 19:33:31.972028 23117 solver.cpp:398]     Test net output #1: loss = 0.109471 (* 1 = 0.109471 loss)
I0428 19:33:31.972033 23117 solver.cpp:316] Optimization Done.
I0428 19:33:31.972035 23117 caffe.cpp:259] Optimization Done.
