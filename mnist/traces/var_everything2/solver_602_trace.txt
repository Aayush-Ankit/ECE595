I0428 19:50:21.240382 26994 caffe.cpp:218] Using GPUs 0
I0428 19:50:21.269634 26994 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:21.785706 26994 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test602.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:21.785850 26994 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test602.prototxt
I0428 19:50:21.786262 26994 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:21.786283 26994 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:21.786387 26994 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:21.786469 26994 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:21.786567 26994 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:21.786590 26994 net.cpp:86] Creating Layer mnist
I0428 19:50:21.786597 26994 net.cpp:382] mnist -> data
I0428 19:50:21.786622 26994 net.cpp:382] mnist -> label
I0428 19:50:21.787725 26994 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:21.790153 26994 net.cpp:124] Setting up mnist
I0428 19:50:21.790170 26994 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:21.790176 26994 net.cpp:131] Top shape: 64 (64)
I0428 19:50:21.790179 26994 net.cpp:139] Memory required for data: 200960
I0428 19:50:21.790187 26994 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:21.790235 26994 net.cpp:86] Creating Layer conv0
I0428 19:50:21.790256 26994 net.cpp:408] conv0 <- data
I0428 19:50:21.790269 26994 net.cpp:382] conv0 -> conv0
I0428 19:50:22.083942 26994 net.cpp:124] Setting up conv0
I0428 19:50:22.083972 26994 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:22.083978 26994 net.cpp:139] Memory required for data: 938240
I0428 19:50:22.083997 26994 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:22.084012 26994 net.cpp:86] Creating Layer pool0
I0428 19:50:22.084017 26994 net.cpp:408] pool0 <- conv0
I0428 19:50:22.084023 26994 net.cpp:382] pool0 -> pool0
I0428 19:50:22.084079 26994 net.cpp:124] Setting up pool0
I0428 19:50:22.084089 26994 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:22.084092 26994 net.cpp:139] Memory required for data: 1122560
I0428 19:50:22.084096 26994 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:22.084108 26994 net.cpp:86] Creating Layer conv1
I0428 19:50:22.084112 26994 net.cpp:408] conv1 <- pool0
I0428 19:50:22.084118 26994 net.cpp:382] conv1 -> conv1
I0428 19:50:22.087294 26994 net.cpp:124] Setting up conv1
I0428 19:50:22.087313 26994 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:22.087318 26994 net.cpp:139] Memory required for data: 1286400
I0428 19:50:22.087328 26994 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:22.087337 26994 net.cpp:86] Creating Layer pool1
I0428 19:50:22.087342 26994 net.cpp:408] pool1 <- conv1
I0428 19:50:22.087348 26994 net.cpp:382] pool1 -> pool1
I0428 19:50:22.087393 26994 net.cpp:124] Setting up pool1
I0428 19:50:22.087402 26994 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:22.087405 26994 net.cpp:139] Memory required for data: 1327360
I0428 19:50:22.087409 26994 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:22.087417 26994 net.cpp:86] Creating Layer ip1
I0428 19:50:22.087421 26994 net.cpp:408] ip1 <- pool1
I0428 19:50:22.087427 26994 net.cpp:382] ip1 -> ip1
I0428 19:50:22.087553 26994 net.cpp:124] Setting up ip1
I0428 19:50:22.087563 26994 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:22.087566 26994 net.cpp:139] Memory required for data: 1329920
I0428 19:50:22.087574 26994 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:22.087581 26994 net.cpp:86] Creating Layer relu1
I0428 19:50:22.087585 26994 net.cpp:408] relu1 <- ip1
I0428 19:50:22.087590 26994 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:22.087790 26994 net.cpp:124] Setting up relu1
I0428 19:50:22.087800 26994 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:22.087805 26994 net.cpp:139] Memory required for data: 1332480
I0428 19:50:22.087808 26994 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:22.087816 26994 net.cpp:86] Creating Layer ip2
I0428 19:50:22.087821 26994 net.cpp:408] ip2 <- ip1
I0428 19:50:22.087826 26994 net.cpp:382] ip2 -> ip2
I0428 19:50:22.087941 26994 net.cpp:124] Setting up ip2
I0428 19:50:22.087950 26994 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:22.087954 26994 net.cpp:139] Memory required for data: 1338880
I0428 19:50:22.087961 26994 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:22.087967 26994 net.cpp:86] Creating Layer relu2
I0428 19:50:22.087971 26994 net.cpp:408] relu2 <- ip2
I0428 19:50:22.087976 26994 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:22.088829 26994 net.cpp:124] Setting up relu2
I0428 19:50:22.088843 26994 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:22.088847 26994 net.cpp:139] Memory required for data: 1345280
I0428 19:50:22.088852 26994 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:22.088860 26994 net.cpp:86] Creating Layer ip3
I0428 19:50:22.088865 26994 net.cpp:408] ip3 <- ip2
I0428 19:50:22.088871 26994 net.cpp:382] ip3 -> ip3
I0428 19:50:22.088989 26994 net.cpp:124] Setting up ip3
I0428 19:50:22.088999 26994 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:22.089004 26994 net.cpp:139] Memory required for data: 1347840
I0428 19:50:22.089013 26994 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:22.089020 26994 net.cpp:86] Creating Layer relu3
I0428 19:50:22.089023 26994 net.cpp:408] relu3 <- ip3
I0428 19:50:22.089028 26994 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:22.089228 26994 net.cpp:124] Setting up relu3
I0428 19:50:22.089241 26994 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:22.089243 26994 net.cpp:139] Memory required for data: 1350400
I0428 19:50:22.089247 26994 layer_factory.hpp:77] Creating layer loss
I0428 19:50:22.089254 26994 net.cpp:86] Creating Layer loss
I0428 19:50:22.089258 26994 net.cpp:408] loss <- ip3
I0428 19:50:22.089263 26994 net.cpp:408] loss <- label
I0428 19:50:22.089269 26994 net.cpp:382] loss -> loss
I0428 19:50:22.089292 26994 layer_factory.hpp:77] Creating layer loss
I0428 19:50:22.089563 26994 net.cpp:124] Setting up loss
I0428 19:50:22.089576 26994 net.cpp:131] Top shape: (1)
I0428 19:50:22.089579 26994 net.cpp:134]     with loss weight 1
I0428 19:50:22.089596 26994 net.cpp:139] Memory required for data: 1350404
I0428 19:50:22.089601 26994 net.cpp:200] loss needs backward computation.
I0428 19:50:22.089606 26994 net.cpp:200] relu3 needs backward computation.
I0428 19:50:22.089610 26994 net.cpp:200] ip3 needs backward computation.
I0428 19:50:22.089613 26994 net.cpp:200] relu2 needs backward computation.
I0428 19:50:22.089617 26994 net.cpp:200] ip2 needs backward computation.
I0428 19:50:22.089620 26994 net.cpp:200] relu1 needs backward computation.
I0428 19:50:22.089623 26994 net.cpp:200] ip1 needs backward computation.
I0428 19:50:22.089627 26994 net.cpp:200] pool1 needs backward computation.
I0428 19:50:22.089632 26994 net.cpp:200] conv1 needs backward computation.
I0428 19:50:22.089635 26994 net.cpp:200] pool0 needs backward computation.
I0428 19:50:22.089638 26994 net.cpp:200] conv0 needs backward computation.
I0428 19:50:22.089643 26994 net.cpp:202] mnist does not need backward computation.
I0428 19:50:22.089646 26994 net.cpp:244] This network produces output loss
I0428 19:50:22.089658 26994 net.cpp:257] Network initialization done.
I0428 19:50:22.090039 26994 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test602.prototxt
I0428 19:50:22.090071 26994 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:22.090178 26994 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:22.090271 26994 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:22.090324 26994 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:22.090339 26994 net.cpp:86] Creating Layer mnist
I0428 19:50:22.090344 26994 net.cpp:382] mnist -> data
I0428 19:50:22.090354 26994 net.cpp:382] mnist -> label
I0428 19:50:22.090454 26994 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:22.092655 26994 net.cpp:124] Setting up mnist
I0428 19:50:22.092671 26994 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:22.092679 26994 net.cpp:131] Top shape: 100 (100)
I0428 19:50:22.092682 26994 net.cpp:139] Memory required for data: 314000
I0428 19:50:22.092686 26994 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:22.092694 26994 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:22.092699 26994 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:22.092705 26994 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:22.092712 26994 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:22.092795 26994 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:22.092805 26994 net.cpp:131] Top shape: 100 (100)
I0428 19:50:22.092816 26994 net.cpp:131] Top shape: 100 (100)
I0428 19:50:22.092820 26994 net.cpp:139] Memory required for data: 314800
I0428 19:50:22.092824 26994 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:22.092834 26994 net.cpp:86] Creating Layer conv0
I0428 19:50:22.092839 26994 net.cpp:408] conv0 <- data
I0428 19:50:22.092845 26994 net.cpp:382] conv0 -> conv0
I0428 19:50:22.094771 26994 net.cpp:124] Setting up conv0
I0428 19:50:22.094789 26994 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:22.094792 26994 net.cpp:139] Memory required for data: 1466800
I0428 19:50:22.094805 26994 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:22.094813 26994 net.cpp:86] Creating Layer pool0
I0428 19:50:22.094817 26994 net.cpp:408] pool0 <- conv0
I0428 19:50:22.094823 26994 net.cpp:382] pool0 -> pool0
I0428 19:50:22.094868 26994 net.cpp:124] Setting up pool0
I0428 19:50:22.094876 26994 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:22.094879 26994 net.cpp:139] Memory required for data: 1754800
I0428 19:50:22.094882 26994 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:22.094895 26994 net.cpp:86] Creating Layer conv1
I0428 19:50:22.094899 26994 net.cpp:408] conv1 <- pool0
I0428 19:50:22.094905 26994 net.cpp:382] conv1 -> conv1
I0428 19:50:22.097290 26994 net.cpp:124] Setting up conv1
I0428 19:50:22.097306 26994 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:22.097311 26994 net.cpp:139] Memory required for data: 2010800
I0428 19:50:22.097321 26994 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:22.097331 26994 net.cpp:86] Creating Layer pool1
I0428 19:50:22.097335 26994 net.cpp:408] pool1 <- conv1
I0428 19:50:22.097342 26994 net.cpp:382] pool1 -> pool1
I0428 19:50:22.097394 26994 net.cpp:124] Setting up pool1
I0428 19:50:22.097404 26994 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:22.097409 26994 net.cpp:139] Memory required for data: 2074800
I0428 19:50:22.097412 26994 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:22.097419 26994 net.cpp:86] Creating Layer ip1
I0428 19:50:22.097424 26994 net.cpp:408] ip1 <- pool1
I0428 19:50:22.097430 26994 net.cpp:382] ip1 -> ip1
I0428 19:50:22.097620 26994 net.cpp:124] Setting up ip1
I0428 19:50:22.097630 26994 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:22.097645 26994 net.cpp:139] Memory required for data: 2078800
I0428 19:50:22.097656 26994 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:22.097662 26994 net.cpp:86] Creating Layer relu1
I0428 19:50:22.097672 26994 net.cpp:408] relu1 <- ip1
I0428 19:50:22.097679 26994 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:22.097888 26994 net.cpp:124] Setting up relu1
I0428 19:50:22.097899 26994 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:22.097904 26994 net.cpp:139] Memory required for data: 2082800
I0428 19:50:22.097908 26994 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:22.097919 26994 net.cpp:86] Creating Layer ip2
I0428 19:50:22.097923 26994 net.cpp:408] ip2 <- ip1
I0428 19:50:22.097929 26994 net.cpp:382] ip2 -> ip2
I0428 19:50:22.098050 26994 net.cpp:124] Setting up ip2
I0428 19:50:22.098060 26994 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:22.098064 26994 net.cpp:139] Memory required for data: 2092800
I0428 19:50:22.098071 26994 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:22.098078 26994 net.cpp:86] Creating Layer relu2
I0428 19:50:22.098081 26994 net.cpp:408] relu2 <- ip2
I0428 19:50:22.098086 26994 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:22.098273 26994 net.cpp:124] Setting up relu2
I0428 19:50:22.098284 26994 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:22.098287 26994 net.cpp:139] Memory required for data: 2102800
I0428 19:50:22.098299 26994 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:22.098309 26994 net.cpp:86] Creating Layer ip3
I0428 19:50:22.098312 26994 net.cpp:408] ip3 <- ip2
I0428 19:50:22.098318 26994 net.cpp:382] ip3 -> ip3
I0428 19:50:22.098435 26994 net.cpp:124] Setting up ip3
I0428 19:50:22.098444 26994 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:22.098448 26994 net.cpp:139] Memory required for data: 2106800
I0428 19:50:22.098459 26994 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:22.098464 26994 net.cpp:86] Creating Layer relu3
I0428 19:50:22.098467 26994 net.cpp:408] relu3 <- ip3
I0428 19:50:22.098472 26994 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:22.099422 26994 net.cpp:124] Setting up relu3
I0428 19:50:22.099436 26994 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:22.099442 26994 net.cpp:139] Memory required for data: 2110800
I0428 19:50:22.099447 26994 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:22.099453 26994 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:22.099458 26994 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:22.099464 26994 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:22.099472 26994 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:22.099516 26994 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:22.099524 26994 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:22.099529 26994 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:22.099532 26994 net.cpp:139] Memory required for data: 2118800
I0428 19:50:22.099535 26994 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:22.099547 26994 net.cpp:86] Creating Layer accuracy
I0428 19:50:22.099552 26994 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:22.099562 26994 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:22.099568 26994 net.cpp:382] accuracy -> accuracy
I0428 19:50:22.099577 26994 net.cpp:124] Setting up accuracy
I0428 19:50:22.099582 26994 net.cpp:131] Top shape: (1)
I0428 19:50:22.099586 26994 net.cpp:139] Memory required for data: 2118804
I0428 19:50:22.099589 26994 layer_factory.hpp:77] Creating layer loss
I0428 19:50:22.099596 26994 net.cpp:86] Creating Layer loss
I0428 19:50:22.099599 26994 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:22.099603 26994 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:22.099609 26994 net.cpp:382] loss -> loss
I0428 19:50:22.099617 26994 layer_factory.hpp:77] Creating layer loss
I0428 19:50:22.099892 26994 net.cpp:124] Setting up loss
I0428 19:50:22.099905 26994 net.cpp:131] Top shape: (1)
I0428 19:50:22.099915 26994 net.cpp:134]     with loss weight 1
I0428 19:50:22.099923 26994 net.cpp:139] Memory required for data: 2118808
I0428 19:50:22.099939 26994 net.cpp:200] loss needs backward computation.
I0428 19:50:22.099949 26994 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:22.099954 26994 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:22.099958 26994 net.cpp:200] relu3 needs backward computation.
I0428 19:50:22.099962 26994 net.cpp:200] ip3 needs backward computation.
I0428 19:50:22.099967 26994 net.cpp:200] relu2 needs backward computation.
I0428 19:50:22.099970 26994 net.cpp:200] ip2 needs backward computation.
I0428 19:50:22.099973 26994 net.cpp:200] relu1 needs backward computation.
I0428 19:50:22.099977 26994 net.cpp:200] ip1 needs backward computation.
I0428 19:50:22.099982 26994 net.cpp:200] pool1 needs backward computation.
I0428 19:50:22.099984 26994 net.cpp:200] conv1 needs backward computation.
I0428 19:50:22.099989 26994 net.cpp:200] pool0 needs backward computation.
I0428 19:50:22.099994 26994 net.cpp:200] conv0 needs backward computation.
I0428 19:50:22.099998 26994 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:22.100003 26994 net.cpp:202] mnist does not need backward computation.
I0428 19:50:22.100008 26994 net.cpp:244] This network produces output accuracy
I0428 19:50:22.100011 26994 net.cpp:244] This network produces output loss
I0428 19:50:22.100024 26994 net.cpp:257] Network initialization done.
I0428 19:50:22.100075 26994 solver.cpp:56] Solver scaffolding done.
I0428 19:50:22.100517 26994 caffe.cpp:248] Starting Optimization
I0428 19:50:22.100523 26994 solver.cpp:273] Solving LeNet
I0428 19:50:22.100527 26994 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:22.100839 26994 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:22.104750 26994 blocking_queue.cpp:49] Waiting for data
I0428 19:50:22.173943 27001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:22.174492 26994 solver.cpp:398]     Test net output #0: accuracy = 0.1135
I0428 19:50:22.174518 26994 solver.cpp:398]     Test net output #1: loss = 2.32857 (* 1 = 2.32857 loss)
I0428 19:50:22.176527 26994 solver.cpp:219] Iteration 0 (0 iter/s, 0.0759695s/100 iters), loss = 2.3125
I0428 19:50:22.176556 26994 solver.cpp:238]     Train net output #0: loss = 2.3125 (* 1 = 2.3125 loss)
I0428 19:50:22.176570 26994 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:22.258020 26994 solver.cpp:219] Iteration 100 (1227.7 iter/s, 0.0814531s/100 iters), loss = 1.05015
I0428 19:50:22.258054 26994 solver.cpp:238]     Train net output #0: loss = 1.05015 (* 1 = 1.05015 loss)
I0428 19:50:22.258061 26994 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:22.338683 26994 solver.cpp:219] Iteration 200 (1240.38 iter/s, 0.0806205s/100 iters), loss = 0.898566
I0428 19:50:22.338716 26994 solver.cpp:238]     Train net output #0: loss = 0.898566 (* 1 = 0.898566 loss)
I0428 19:50:22.338723 26994 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:22.418962 26994 solver.cpp:219] Iteration 300 (1246.33 iter/s, 0.0802357s/100 iters), loss = 0.492245
I0428 19:50:22.418989 26994 solver.cpp:238]     Train net output #0: loss = 0.492245 (* 1 = 0.492245 loss)
I0428 19:50:22.418998 26994 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:22.498606 26994 solver.cpp:219] Iteration 400 (1256.17 iter/s, 0.0796067s/100 iters), loss = 0.644949
I0428 19:50:22.498636 26994 solver.cpp:238]     Train net output #0: loss = 0.644948 (* 1 = 0.644948 loss)
I0428 19:50:22.498644 26994 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:22.575110 26994 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:22.649857 27001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:22.650372 26994 solver.cpp:398]     Test net output #0: accuracy = 0.8494
I0428 19:50:22.650408 26994 solver.cpp:398]     Test net output #1: loss = 0.421483 (* 1 = 0.421483 loss)
I0428 19:50:22.651211 26994 solver.cpp:219] Iteration 500 (655.465 iter/s, 0.152564s/100 iters), loss = 0.479225
I0428 19:50:22.651233 26994 solver.cpp:238]     Train net output #0: loss = 0.479225 (* 1 = 0.479225 loss)
I0428 19:50:22.651253 26994 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:22.733322 26994 solver.cpp:219] Iteration 600 (1218.34 iter/s, 0.0820787s/100 iters), loss = 0.51666
I0428 19:50:22.733361 26994 solver.cpp:238]     Train net output #0: loss = 0.51666 (* 1 = 0.51666 loss)
I0428 19:50:22.733368 26994 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:22.811100 26994 solver.cpp:219] Iteration 700 (1286.25 iter/s, 0.0777452s/100 iters), loss = 0.318417
I0428 19:50:22.811138 26994 solver.cpp:238]     Train net output #0: loss = 0.318416 (* 1 = 0.318416 loss)
I0428 19:50:22.811144 26994 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:22.883973 26994 solver.cpp:219] Iteration 800 (1372.83 iter/s, 0.0728422s/100 iters), loss = 0.485831
I0428 19:50:22.883996 26994 solver.cpp:238]     Train net output #0: loss = 0.485831 (* 1 = 0.485831 loss)
I0428 19:50:22.884003 26994 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:22.957264 26994 solver.cpp:219] Iteration 900 (1365.02 iter/s, 0.073259s/100 iters), loss = 0.358848
I0428 19:50:22.957304 26994 solver.cpp:238]     Train net output #0: loss = 0.358848 (* 1 = 0.358848 loss)
I0428 19:50:22.957309 26994 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:22.981901 27000 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:23.029603 26994 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:23.030293 26994 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:23.030751 26994 solver.cpp:311] Iteration 1000, loss = 0.124244
I0428 19:50:23.030766 26994 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:23.105762 27001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:23.106281 26994 solver.cpp:398]     Test net output #0: accuracy = 0.9592
I0428 19:50:23.106302 26994 solver.cpp:398]     Test net output #1: loss = 0.140876 (* 1 = 0.140876 loss)
I0428 19:50:23.106308 26994 solver.cpp:316] Optimization Done.
I0428 19:50:23.106312 26994 caffe.cpp:259] Optimization Done.
