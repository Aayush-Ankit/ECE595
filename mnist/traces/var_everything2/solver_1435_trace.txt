I0428 20:24:17.836313  2387 caffe.cpp:218] Using GPUs 0
I0428 20:24:17.873615  2387 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:18.328527  2387 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1435.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:18.328685  2387 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1435.prototxt
I0428 20:24:18.329067  2387 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:18.329098  2387 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:18.329198  2387 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:18.329262  2387 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:18.329342  2387 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:18.329361  2387 net.cpp:86] Creating Layer mnist
I0428 20:24:18.329370  2387 net.cpp:382] mnist -> data
I0428 20:24:18.329386  2387 net.cpp:382] mnist -> label
I0428 20:24:18.330374  2387 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:18.332703  2387 net.cpp:124] Setting up mnist
I0428 20:24:18.332736  2387 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:18.332741  2387 net.cpp:131] Top shape: 64 (64)
I0428 20:24:18.332743  2387 net.cpp:139] Memory required for data: 200960
I0428 20:24:18.332748  2387 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:18.332762  2387 net.cpp:86] Creating Layer conv0
I0428 20:24:18.332779  2387 net.cpp:408] conv0 <- data
I0428 20:24:18.332788  2387 net.cpp:382] conv0 -> conv0
I0428 20:24:18.566195  2387 net.cpp:124] Setting up conv0
I0428 20:24:18.566223  2387 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:18.566227  2387 net.cpp:139] Memory required for data: 7573760
I0428 20:24:18.566241  2387 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:18.566253  2387 net.cpp:86] Creating Layer pool0
I0428 20:24:18.566257  2387 net.cpp:408] pool0 <- conv0
I0428 20:24:18.566262  2387 net.cpp:382] pool0 -> pool0
I0428 20:24:18.566323  2387 net.cpp:124] Setting up pool0
I0428 20:24:18.566329  2387 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:18.566330  2387 net.cpp:139] Memory required for data: 9416960
I0428 20:24:18.566334  2387 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:18.566344  2387 net.cpp:86] Creating Layer conv1
I0428 20:24:18.566346  2387 net.cpp:408] conv1 <- pool0
I0428 20:24:18.566350  2387 net.cpp:382] conv1 -> conv1
I0428 20:24:18.569809  2387 net.cpp:124] Setting up conv1
I0428 20:24:18.569839  2387 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:18.569842  2387 net.cpp:139] Memory required for data: 11055360
I0428 20:24:18.569851  2387 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:18.569860  2387 net.cpp:86] Creating Layer pool1
I0428 20:24:18.569864  2387 net.cpp:408] pool1 <- conv1
I0428 20:24:18.569869  2387 net.cpp:382] pool1 -> pool1
I0428 20:24:18.569903  2387 net.cpp:124] Setting up pool1
I0428 20:24:18.569908  2387 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:18.569911  2387 net.cpp:139] Memory required for data: 11464960
I0428 20:24:18.569914  2387 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:18.569921  2387 net.cpp:86] Creating Layer ip1
I0428 20:24:18.569924  2387 net.cpp:408] ip1 <- pool1
I0428 20:24:18.569928  2387 net.cpp:382] ip1 -> ip1
I0428 20:24:18.570477  2387 net.cpp:124] Setting up ip1
I0428 20:24:18.570484  2387 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:18.570503  2387 net.cpp:139] Memory required for data: 11477760
I0428 20:24:18.570510  2387 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:18.570518  2387 net.cpp:86] Creating Layer relu1
I0428 20:24:18.570520  2387 net.cpp:408] relu1 <- ip1
I0428 20:24:18.570524  2387 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:18.570731  2387 net.cpp:124] Setting up relu1
I0428 20:24:18.570741  2387 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:18.570744  2387 net.cpp:139] Memory required for data: 11490560
I0428 20:24:18.570762  2387 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:18.570768  2387 net.cpp:86] Creating Layer ip2
I0428 20:24:18.570771  2387 net.cpp:408] ip2 <- ip1
I0428 20:24:18.570776  2387 net.cpp:382] ip2 -> ip2
I0428 20:24:18.570878  2387 net.cpp:124] Setting up ip2
I0428 20:24:18.570885  2387 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:18.570888  2387 net.cpp:139] Memory required for data: 11493120
I0428 20:24:18.570894  2387 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:18.570900  2387 net.cpp:86] Creating Layer relu2
I0428 20:24:18.570904  2387 net.cpp:408] relu2 <- ip2
I0428 20:24:18.570909  2387 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:18.571638  2387 net.cpp:124] Setting up relu2
I0428 20:24:18.571650  2387 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:18.571668  2387 net.cpp:139] Memory required for data: 11495680
I0428 20:24:18.571672  2387 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:18.571678  2387 net.cpp:86] Creating Layer ip3
I0428 20:24:18.571681  2387 net.cpp:408] ip3 <- ip2
I0428 20:24:18.571687  2387 net.cpp:382] ip3 -> ip3
I0428 20:24:18.571792  2387 net.cpp:124] Setting up ip3
I0428 20:24:18.571801  2387 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:18.571810  2387 net.cpp:139] Memory required for data: 11498240
I0428 20:24:18.571818  2387 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:18.571825  2387 net.cpp:86] Creating Layer relu3
I0428 20:24:18.571827  2387 net.cpp:408] relu3 <- ip3
I0428 20:24:18.571830  2387 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:18.572024  2387 net.cpp:124] Setting up relu3
I0428 20:24:18.572033  2387 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:18.572036  2387 net.cpp:139] Memory required for data: 11500800
I0428 20:24:18.572039  2387 layer_factory.hpp:77] Creating layer loss
I0428 20:24:18.572046  2387 net.cpp:86] Creating Layer loss
I0428 20:24:18.572049  2387 net.cpp:408] loss <- ip3
I0428 20:24:18.572053  2387 net.cpp:408] loss <- label
I0428 20:24:18.572058  2387 net.cpp:382] loss -> loss
I0428 20:24:18.572075  2387 layer_factory.hpp:77] Creating layer loss
I0428 20:24:18.572324  2387 net.cpp:124] Setting up loss
I0428 20:24:18.572342  2387 net.cpp:131] Top shape: (1)
I0428 20:24:18.572345  2387 net.cpp:134]     with loss weight 1
I0428 20:24:18.572360  2387 net.cpp:139] Memory required for data: 11500804
I0428 20:24:18.572362  2387 net.cpp:200] loss needs backward computation.
I0428 20:24:18.572365  2387 net.cpp:200] relu3 needs backward computation.
I0428 20:24:18.572368  2387 net.cpp:200] ip3 needs backward computation.
I0428 20:24:18.572371  2387 net.cpp:200] relu2 needs backward computation.
I0428 20:24:18.572373  2387 net.cpp:200] ip2 needs backward computation.
I0428 20:24:18.572376  2387 net.cpp:200] relu1 needs backward computation.
I0428 20:24:18.572379  2387 net.cpp:200] ip1 needs backward computation.
I0428 20:24:18.572381  2387 net.cpp:200] pool1 needs backward computation.
I0428 20:24:18.572384  2387 net.cpp:200] conv1 needs backward computation.
I0428 20:24:18.572387  2387 net.cpp:200] pool0 needs backward computation.
I0428 20:24:18.572389  2387 net.cpp:200] conv0 needs backward computation.
I0428 20:24:18.572392  2387 net.cpp:202] mnist does not need backward computation.
I0428 20:24:18.572397  2387 net.cpp:244] This network produces output loss
I0428 20:24:18.572405  2387 net.cpp:257] Network initialization done.
I0428 20:24:18.572744  2387 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1435.prototxt
I0428 20:24:18.572783  2387 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:18.572912  2387 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:18.572999  2387 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:18.573047  2387 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:18.573060  2387 net.cpp:86] Creating Layer mnist
I0428 20:24:18.573066  2387 net.cpp:382] mnist -> data
I0428 20:24:18.573074  2387 net.cpp:382] mnist -> label
I0428 20:24:18.573213  2387 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:18.574276  2387 net.cpp:124] Setting up mnist
I0428 20:24:18.574306  2387 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:18.574311  2387 net.cpp:131] Top shape: 100 (100)
I0428 20:24:18.574313  2387 net.cpp:139] Memory required for data: 314000
I0428 20:24:18.574316  2387 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:18.574352  2387 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:18.574357  2387 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:18.574362  2387 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:18.574368  2387 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:18.574411  2387 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:18.574416  2387 net.cpp:131] Top shape: 100 (100)
I0428 20:24:18.574420  2387 net.cpp:131] Top shape: 100 (100)
I0428 20:24:18.574424  2387 net.cpp:139] Memory required for data: 314800
I0428 20:24:18.574425  2387 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:18.574434  2387 net.cpp:86] Creating Layer conv0
I0428 20:24:18.574437  2387 net.cpp:408] conv0 <- data
I0428 20:24:18.574443  2387 net.cpp:382] conv0 -> conv0
I0428 20:24:18.576154  2387 net.cpp:124] Setting up conv0
I0428 20:24:18.576167  2387 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:18.576171  2387 net.cpp:139] Memory required for data: 11834800
I0428 20:24:18.576179  2387 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:18.576186  2387 net.cpp:86] Creating Layer pool0
I0428 20:24:18.576189  2387 net.cpp:408] pool0 <- conv0
I0428 20:24:18.576195  2387 net.cpp:382] pool0 -> pool0
I0428 20:24:18.576230  2387 net.cpp:124] Setting up pool0
I0428 20:24:18.576234  2387 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:18.576236  2387 net.cpp:139] Memory required for data: 14714800
I0428 20:24:18.576239  2387 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:18.576247  2387 net.cpp:86] Creating Layer conv1
I0428 20:24:18.576251  2387 net.cpp:408] conv1 <- pool0
I0428 20:24:18.576256  2387 net.cpp:382] conv1 -> conv1
I0428 20:24:18.579432  2387 net.cpp:124] Setting up conv1
I0428 20:24:18.579444  2387 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:18.579453  2387 net.cpp:139] Memory required for data: 17274800
I0428 20:24:18.579462  2387 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:18.579488  2387 net.cpp:86] Creating Layer pool1
I0428 20:24:18.579497  2387 net.cpp:408] pool1 <- conv1
I0428 20:24:18.579502  2387 net.cpp:382] pool1 -> pool1
I0428 20:24:18.579542  2387 net.cpp:124] Setting up pool1
I0428 20:24:18.579547  2387 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:18.579555  2387 net.cpp:139] Memory required for data: 17914800
I0428 20:24:18.579557  2387 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:18.579562  2387 net.cpp:86] Creating Layer ip1
I0428 20:24:18.579566  2387 net.cpp:408] ip1 <- pool1
I0428 20:24:18.579578  2387 net.cpp:382] ip1 -> ip1
I0428 20:24:18.580126  2387 net.cpp:124] Setting up ip1
I0428 20:24:18.580143  2387 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:18.580147  2387 net.cpp:139] Memory required for data: 17934800
I0428 20:24:18.580154  2387 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:18.580158  2387 net.cpp:86] Creating Layer relu1
I0428 20:24:18.580162  2387 net.cpp:408] relu1 <- ip1
I0428 20:24:18.580173  2387 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:18.580360  2387 net.cpp:124] Setting up relu1
I0428 20:24:18.580369  2387 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:18.580371  2387 net.cpp:139] Memory required for data: 17954800
I0428 20:24:18.580374  2387 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:18.580382  2387 net.cpp:86] Creating Layer ip2
I0428 20:24:18.580385  2387 net.cpp:408] ip2 <- ip1
I0428 20:24:18.580389  2387 net.cpp:382] ip2 -> ip2
I0428 20:24:18.580580  2387 net.cpp:124] Setting up ip2
I0428 20:24:18.580588  2387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:18.580591  2387 net.cpp:139] Memory required for data: 17958800
I0428 20:24:18.580596  2387 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:18.580601  2387 net.cpp:86] Creating Layer relu2
I0428 20:24:18.580605  2387 net.cpp:408] relu2 <- ip2
I0428 20:24:18.580610  2387 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:18.580807  2387 net.cpp:124] Setting up relu2
I0428 20:24:18.580822  2387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:18.580855  2387 net.cpp:139] Memory required for data: 17962800
I0428 20:24:18.580878  2387 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:18.580886  2387 net.cpp:86] Creating Layer ip3
I0428 20:24:18.580889  2387 net.cpp:408] ip3 <- ip2
I0428 20:24:18.580895  2387 net.cpp:382] ip3 -> ip3
I0428 20:24:18.581007  2387 net.cpp:124] Setting up ip3
I0428 20:24:18.581015  2387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:18.581019  2387 net.cpp:139] Memory required for data: 17966800
I0428 20:24:18.581034  2387 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:18.581040  2387 net.cpp:86] Creating Layer relu3
I0428 20:24:18.581049  2387 net.cpp:408] relu3 <- ip3
I0428 20:24:18.581053  2387 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:18.581866  2387 net.cpp:124] Setting up relu3
I0428 20:24:18.581876  2387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:18.581879  2387 net.cpp:139] Memory required for data: 17970800
I0428 20:24:18.581883  2387 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:18.581889  2387 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:18.581892  2387 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:18.581897  2387 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:18.581904  2387 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:18.581943  2387 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:18.581948  2387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:18.581953  2387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:18.581954  2387 net.cpp:139] Memory required for data: 17978800
I0428 20:24:18.581957  2387 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:18.581962  2387 net.cpp:86] Creating Layer accuracy
I0428 20:24:18.581965  2387 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:18.581969  2387 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:18.581974  2387 net.cpp:382] accuracy -> accuracy
I0428 20:24:18.581979  2387 net.cpp:124] Setting up accuracy
I0428 20:24:18.581984  2387 net.cpp:131] Top shape: (1)
I0428 20:24:18.581985  2387 net.cpp:139] Memory required for data: 17978804
I0428 20:24:18.581989  2387 layer_factory.hpp:77] Creating layer loss
I0428 20:24:18.581992  2387 net.cpp:86] Creating Layer loss
I0428 20:24:18.581995  2387 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:18.581998  2387 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:18.582003  2387 net.cpp:382] loss -> loss
I0428 20:24:18.582008  2387 layer_factory.hpp:77] Creating layer loss
I0428 20:24:18.582279  2387 net.cpp:124] Setting up loss
I0428 20:24:18.582288  2387 net.cpp:131] Top shape: (1)
I0428 20:24:18.582291  2387 net.cpp:134]     with loss weight 1
I0428 20:24:18.582309  2387 net.cpp:139] Memory required for data: 17978808
I0428 20:24:18.582320  2387 net.cpp:200] loss needs backward computation.
I0428 20:24:18.582324  2387 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:18.582329  2387 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:18.582331  2387 net.cpp:200] relu3 needs backward computation.
I0428 20:24:18.582334  2387 net.cpp:200] ip3 needs backward computation.
I0428 20:24:18.582337  2387 net.cpp:200] relu2 needs backward computation.
I0428 20:24:18.582340  2387 net.cpp:200] ip2 needs backward computation.
I0428 20:24:18.582343  2387 net.cpp:200] relu1 needs backward computation.
I0428 20:24:18.582345  2387 net.cpp:200] ip1 needs backward computation.
I0428 20:24:18.582348  2387 net.cpp:200] pool1 needs backward computation.
I0428 20:24:18.582351  2387 net.cpp:200] conv1 needs backward computation.
I0428 20:24:18.582355  2387 net.cpp:200] pool0 needs backward computation.
I0428 20:24:18.582357  2387 net.cpp:200] conv0 needs backward computation.
I0428 20:24:18.582361  2387 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:18.582365  2387 net.cpp:202] mnist does not need backward computation.
I0428 20:24:18.582367  2387 net.cpp:244] This network produces output accuracy
I0428 20:24:18.582370  2387 net.cpp:244] This network produces output loss
I0428 20:24:18.582382  2387 net.cpp:257] Network initialization done.
I0428 20:24:18.582425  2387 solver.cpp:56] Solver scaffolding done.
I0428 20:24:18.582789  2387 caffe.cpp:248] Starting Optimization
I0428 20:24:18.582798  2387 solver.cpp:273] Solving LeNet
I0428 20:24:18.582801  2387 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:18.583680  2387 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:18.598636  2387 blocking_queue.cpp:49] Waiting for data
I0428 20:24:18.674497  2394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:18.675881  2387 solver.cpp:398]     Test net output #0: accuracy = 0.0762
I0428 20:24:18.675899  2387 solver.cpp:398]     Test net output #1: loss = 2.30855 (* 1 = 2.30855 loss)
I0428 20:24:18.681535  2387 solver.cpp:219] Iteration 0 (0 iter/s, 0.0987064s/100 iters), loss = 2.29608
I0428 20:24:18.681557  2387 solver.cpp:238]     Train net output #0: loss = 2.29608 (* 1 = 2.29608 loss)
I0428 20:24:18.681583  2387 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:18.903164  2387 solver.cpp:219] Iteration 100 (451.291 iter/s, 0.221587s/100 iters), loss = 0.805178
I0428 20:24:18.903193  2387 solver.cpp:238]     Train net output #0: loss = 0.805178 (* 1 = 0.805178 loss)
I0428 20:24:18.903200  2387 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:19.108454  2387 solver.cpp:219] Iteration 200 (487.234 iter/s, 0.20524s/100 iters), loss = 0.639807
I0428 20:24:19.108505  2387 solver.cpp:238]     Train net output #0: loss = 0.639807 (* 1 = 0.639807 loss)
I0428 20:24:19.108518  2387 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:19.336791  2387 solver.cpp:219] Iteration 300 (438.072 iter/s, 0.228273s/100 iters), loss = 0.596065
I0428 20:24:19.336830  2387 solver.cpp:238]     Train net output #0: loss = 0.596065 (* 1 = 0.596065 loss)
I0428 20:24:19.336838  2387 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:19.572839  2387 solver.cpp:219] Iteration 400 (423.749 iter/s, 0.235989s/100 iters), loss = 0.40245
I0428 20:24:19.572875  2387 solver.cpp:238]     Train net output #0: loss = 0.40245 (* 1 = 0.40245 loss)
I0428 20:24:19.572883  2387 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:19.803200  2387 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:19.896339  2394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:19.897573  2387 solver.cpp:398]     Test net output #0: accuracy = 0.7594
I0428 20:24:19.897601  2387 solver.cpp:398]     Test net output #1: loss = 0.612466 (* 1 = 0.612466 loss)
I0428 20:24:19.899981  2387 solver.cpp:219] Iteration 500 (305.73 iter/s, 0.327086s/100 iters), loss = 0.683918
I0428 20:24:19.900029  2387 solver.cpp:238]     Train net output #0: loss = 0.683918 (* 1 = 0.683918 loss)
I0428 20:24:19.900041  2387 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:20.131453  2387 solver.cpp:219] Iteration 600 (432.14 iter/s, 0.231407s/100 iters), loss = 0.759226
I0428 20:24:20.131489  2387 solver.cpp:238]     Train net output #0: loss = 0.759226 (* 1 = 0.759226 loss)
I0428 20:24:20.131496  2387 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:20.366237  2387 solver.cpp:219] Iteration 700 (426.017 iter/s, 0.234733s/100 iters), loss = 0.537009
I0428 20:24:20.366271  2387 solver.cpp:238]     Train net output #0: loss = 0.537009 (* 1 = 0.537009 loss)
I0428 20:24:20.366281  2387 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:20.597625  2387 solver.cpp:219] Iteration 800 (432.268 iter/s, 0.231338s/100 iters), loss = 0.642339
I0428 20:24:20.597656  2387 solver.cpp:238]     Train net output #0: loss = 0.642339 (* 1 = 0.642339 loss)
I0428 20:24:20.597664  2387 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:20.830489  2387 solver.cpp:219] Iteration 900 (429.523 iter/s, 0.232817s/100 iters), loss = 0.702714
I0428 20:24:20.830518  2387 solver.cpp:238]     Train net output #0: loss = 0.702714 (* 1 = 0.702714 loss)
I0428 20:24:20.830526  2387 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:20.904479  2393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:21.054255  2387 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:21.059927  2387 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:21.062402  2387 solver.cpp:311] Iteration 1000, loss = 0.584682
I0428 20:24:21.062422  2387 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:21.153832  2394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:21.155426  2387 solver.cpp:398]     Test net output #0: accuracy = 0.7736
I0428 20:24:21.155450  2387 solver.cpp:398]     Test net output #1: loss = 0.546019 (* 1 = 0.546019 loss)
I0428 20:24:21.155472  2387 solver.cpp:316] Optimization Done.
I0428 20:24:21.155477  2387 caffe.cpp:259] Optimization Done.
