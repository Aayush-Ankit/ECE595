I0428 20:31:00.429052  3893 caffe.cpp:218] Using GPUs 0
I0428 20:31:00.468538  3893 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:00.988171  3893 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1548.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:00.988314  3893 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1548.prototxt
I0428 20:31:00.988719  3893 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:00.988737  3893 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:00.988844  3893 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:00.988919  3893 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:00.989017  3893 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:00.989043  3893 net.cpp:86] Creating Layer mnist
I0428 20:31:00.989053  3893 net.cpp:382] mnist -> data
I0428 20:31:00.989074  3893 net.cpp:382] mnist -> label
I0428 20:31:00.990157  3893 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:00.992609  3893 net.cpp:124] Setting up mnist
I0428 20:31:00.992626  3893 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:00.992633  3893 net.cpp:131] Top shape: 64 (64)
I0428 20:31:00.992637  3893 net.cpp:139] Memory required for data: 200960
I0428 20:31:00.992645  3893 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:00.992660  3893 net.cpp:86] Creating Layer conv0
I0428 20:31:00.992682  3893 net.cpp:408] conv0 <- data
I0428 20:31:00.992696  3893 net.cpp:382] conv0 -> conv0
I0428 20:31:01.280839  3893 net.cpp:124] Setting up conv0
I0428 20:31:01.280871  3893 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:01.280876  3893 net.cpp:139] Memory required for data: 14946560
I0428 20:31:01.280894  3893 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:01.280910  3893 net.cpp:86] Creating Layer pool0
I0428 20:31:01.280915  3893 net.cpp:408] pool0 <- conv0
I0428 20:31:01.280920  3893 net.cpp:382] pool0 -> pool0
I0428 20:31:01.280977  3893 net.cpp:124] Setting up pool0
I0428 20:31:01.280987  3893 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:01.280990  3893 net.cpp:139] Memory required for data: 18632960
I0428 20:31:01.280993  3893 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:01.281008  3893 net.cpp:86] Creating Layer conv1
I0428 20:31:01.281013  3893 net.cpp:408] conv1 <- pool0
I0428 20:31:01.281020  3893 net.cpp:382] conv1 -> conv1
I0428 20:31:01.283326  3893 net.cpp:124] Setting up conv1
I0428 20:31:01.283344  3893 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:31:01.283349  3893 net.cpp:139] Memory required for data: 18796800
I0428 20:31:01.283359  3893 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:01.283366  3893 net.cpp:86] Creating Layer pool1
I0428 20:31:01.283371  3893 net.cpp:408] pool1 <- conv1
I0428 20:31:01.283376  3893 net.cpp:382] pool1 -> pool1
I0428 20:31:01.283421  3893 net.cpp:124] Setting up pool1
I0428 20:31:01.283428  3893 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:31:01.283432  3893 net.cpp:139] Memory required for data: 18837760
I0428 20:31:01.283437  3893 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:01.283445  3893 net.cpp:86] Creating Layer ip1
I0428 20:31:01.283450  3893 net.cpp:408] ip1 <- pool1
I0428 20:31:01.283457  3893 net.cpp:382] ip1 -> ip1
I0428 20:31:01.283601  3893 net.cpp:124] Setting up ip1
I0428 20:31:01.283608  3893 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:31:01.283612  3893 net.cpp:139] Memory required for data: 18844160
I0428 20:31:01.283620  3893 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:01.283630  3893 net.cpp:86] Creating Layer relu1
I0428 20:31:01.283633  3893 net.cpp:408] relu1 <- ip1
I0428 20:31:01.283638  3893 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:01.283831  3893 net.cpp:124] Setting up relu1
I0428 20:31:01.283843  3893 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:31:01.283845  3893 net.cpp:139] Memory required for data: 18850560
I0428 20:31:01.283849  3893 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:01.283857  3893 net.cpp:86] Creating Layer ip2
I0428 20:31:01.283861  3893 net.cpp:408] ip2 <- ip1
I0428 20:31:01.283867  3893 net.cpp:382] ip2 -> ip2
I0428 20:31:01.283990  3893 net.cpp:124] Setting up ip2
I0428 20:31:01.283998  3893 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:01.284003  3893 net.cpp:139] Memory required for data: 18863360
I0428 20:31:01.284008  3893 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:01.284018  3893 net.cpp:86] Creating Layer relu2
I0428 20:31:01.284021  3893 net.cpp:408] relu2 <- ip2
I0428 20:31:01.284026  3893 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:01.284876  3893 net.cpp:124] Setting up relu2
I0428 20:31:01.284893  3893 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:31:01.284896  3893 net.cpp:139] Memory required for data: 18876160
I0428 20:31:01.284900  3893 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:01.284909  3893 net.cpp:86] Creating Layer ip3
I0428 20:31:01.284912  3893 net.cpp:408] ip3 <- ip2
I0428 20:31:01.284919  3893 net.cpp:382] ip3 -> ip3
I0428 20:31:01.285042  3893 net.cpp:124] Setting up ip3
I0428 20:31:01.285050  3893 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:01.285054  3893 net.cpp:139] Memory required for data: 18878720
I0428 20:31:01.285063  3893 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:01.285073  3893 net.cpp:86] Creating Layer relu3
I0428 20:31:01.285076  3893 net.cpp:408] relu3 <- ip3
I0428 20:31:01.285081  3893 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:01.285276  3893 net.cpp:124] Setting up relu3
I0428 20:31:01.285286  3893 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:01.285290  3893 net.cpp:139] Memory required for data: 18881280
I0428 20:31:01.285295  3893 layer_factory.hpp:77] Creating layer loss
I0428 20:31:01.285301  3893 net.cpp:86] Creating Layer loss
I0428 20:31:01.285305  3893 net.cpp:408] loss <- ip3
I0428 20:31:01.285310  3893 net.cpp:408] loss <- label
I0428 20:31:01.285317  3893 net.cpp:382] loss -> loss
I0428 20:31:01.285342  3893 layer_factory.hpp:77] Creating layer loss
I0428 20:31:01.285611  3893 net.cpp:124] Setting up loss
I0428 20:31:01.285622  3893 net.cpp:131] Top shape: (1)
I0428 20:31:01.285626  3893 net.cpp:134]     with loss weight 1
I0428 20:31:01.285642  3893 net.cpp:139] Memory required for data: 18881284
I0428 20:31:01.285646  3893 net.cpp:200] loss needs backward computation.
I0428 20:31:01.285651  3893 net.cpp:200] relu3 needs backward computation.
I0428 20:31:01.285655  3893 net.cpp:200] ip3 needs backward computation.
I0428 20:31:01.285658  3893 net.cpp:200] relu2 needs backward computation.
I0428 20:31:01.285661  3893 net.cpp:200] ip2 needs backward computation.
I0428 20:31:01.285665  3893 net.cpp:200] relu1 needs backward computation.
I0428 20:31:01.285670  3893 net.cpp:200] ip1 needs backward computation.
I0428 20:31:01.285672  3893 net.cpp:200] pool1 needs backward computation.
I0428 20:31:01.285676  3893 net.cpp:200] conv1 needs backward computation.
I0428 20:31:01.285681  3893 net.cpp:200] pool0 needs backward computation.
I0428 20:31:01.285684  3893 net.cpp:200] conv0 needs backward computation.
I0428 20:31:01.285689  3893 net.cpp:202] mnist does not need backward computation.
I0428 20:31:01.285692  3893 net.cpp:244] This network produces output loss
I0428 20:31:01.285704  3893 net.cpp:257] Network initialization done.
I0428 20:31:01.286085  3893 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1548.prototxt
I0428 20:31:01.286118  3893 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:01.286224  3893 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:31:01.286319  3893 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:01.286370  3893 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:01.286391  3893 net.cpp:86] Creating Layer mnist
I0428 20:31:01.286398  3893 net.cpp:382] mnist -> data
I0428 20:31:01.286407  3893 net.cpp:382] mnist -> label
I0428 20:31:01.286514  3893 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:01.288714  3893 net.cpp:124] Setting up mnist
I0428 20:31:01.288730  3893 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:01.288736  3893 net.cpp:131] Top shape: 100 (100)
I0428 20:31:01.288739  3893 net.cpp:139] Memory required for data: 314000
I0428 20:31:01.288743  3893 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:01.288755  3893 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:01.288759  3893 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:01.288764  3893 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:01.288774  3893 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:01.288830  3893 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:01.288839  3893 net.cpp:131] Top shape: 100 (100)
I0428 20:31:01.288844  3893 net.cpp:131] Top shape: 100 (100)
I0428 20:31:01.288847  3893 net.cpp:139] Memory required for data: 314800
I0428 20:31:01.288851  3893 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:01.288863  3893 net.cpp:86] Creating Layer conv0
I0428 20:31:01.288867  3893 net.cpp:408] conv0 <- data
I0428 20:31:01.288873  3893 net.cpp:382] conv0 -> conv0
I0428 20:31:01.290875  3893 net.cpp:124] Setting up conv0
I0428 20:31:01.290902  3893 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:01.290907  3893 net.cpp:139] Memory required for data: 23354800
I0428 20:31:01.290920  3893 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:01.290927  3893 net.cpp:86] Creating Layer pool0
I0428 20:31:01.290931  3893 net.cpp:408] pool0 <- conv0
I0428 20:31:01.290938  3893 net.cpp:382] pool0 -> pool0
I0428 20:31:01.290982  3893 net.cpp:124] Setting up pool0
I0428 20:31:01.290990  3893 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:01.290993  3893 net.cpp:139] Memory required for data: 29114800
I0428 20:31:01.290997  3893 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:01.291008  3893 net.cpp:86] Creating Layer conv1
I0428 20:31:01.291014  3893 net.cpp:408] conv1 <- pool0
I0428 20:31:01.291020  3893 net.cpp:382] conv1 -> conv1
I0428 20:31:01.292953  3893 net.cpp:124] Setting up conv1
I0428 20:31:01.292969  3893 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:31:01.292973  3893 net.cpp:139] Memory required for data: 29370800
I0428 20:31:01.292984  3893 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:01.292991  3893 net.cpp:86] Creating Layer pool1
I0428 20:31:01.292995  3893 net.cpp:408] pool1 <- conv1
I0428 20:31:01.293004  3893 net.cpp:382] pool1 -> pool1
I0428 20:31:01.293051  3893 net.cpp:124] Setting up pool1
I0428 20:31:01.293059  3893 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:31:01.293063  3893 net.cpp:139] Memory required for data: 29434800
I0428 20:31:01.293066  3893 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:01.293076  3893 net.cpp:86] Creating Layer ip1
I0428 20:31:01.293081  3893 net.cpp:408] ip1 <- pool1
I0428 20:31:01.293088  3893 net.cpp:382] ip1 -> ip1
I0428 20:31:01.293241  3893 net.cpp:124] Setting up ip1
I0428 20:31:01.293262  3893 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:31:01.293267  3893 net.cpp:139] Memory required for data: 29444800
I0428 20:31:01.293275  3893 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:01.293284  3893 net.cpp:86] Creating Layer relu1
I0428 20:31:01.293288  3893 net.cpp:408] relu1 <- ip1
I0428 20:31:01.293296  3893 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:01.293545  3893 net.cpp:124] Setting up relu1
I0428 20:31:01.293555  3893 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:31:01.293558  3893 net.cpp:139] Memory required for data: 29454800
I0428 20:31:01.293562  3893 layer_factory.hpp:77] Creating layer ip2
I0428 20:31:01.293571  3893 net.cpp:86] Creating Layer ip2
I0428 20:31:01.293577  3893 net.cpp:408] ip2 <- ip1
I0428 20:31:01.293583  3893 net.cpp:382] ip2 -> ip2
I0428 20:31:01.293740  3893 net.cpp:124] Setting up ip2
I0428 20:31:01.293750  3893 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:01.293752  3893 net.cpp:139] Memory required for data: 29474800
I0428 20:31:01.293759  3893 layer_factory.hpp:77] Creating layer relu2
I0428 20:31:01.293764  3893 net.cpp:86] Creating Layer relu2
I0428 20:31:01.293772  3893 net.cpp:408] relu2 <- ip2
I0428 20:31:01.293777  3893 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:31:01.293962  3893 net.cpp:124] Setting up relu2
I0428 20:31:01.293972  3893 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:31:01.293977  3893 net.cpp:139] Memory required for data: 29494800
I0428 20:31:01.293980  3893 layer_factory.hpp:77] Creating layer ip3
I0428 20:31:01.293988  3893 net.cpp:86] Creating Layer ip3
I0428 20:31:01.293995  3893 net.cpp:408] ip3 <- ip2
I0428 20:31:01.294001  3893 net.cpp:382] ip3 -> ip3
I0428 20:31:01.294126  3893 net.cpp:124] Setting up ip3
I0428 20:31:01.294133  3893 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:01.294137  3893 net.cpp:139] Memory required for data: 29498800
I0428 20:31:01.294147  3893 layer_factory.hpp:77] Creating layer relu3
I0428 20:31:01.294157  3893 net.cpp:86] Creating Layer relu3
I0428 20:31:01.294162  3893 net.cpp:408] relu3 <- ip3
I0428 20:31:01.294167  3893 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:31:01.295104  3893 net.cpp:124] Setting up relu3
I0428 20:31:01.295120  3893 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:01.295125  3893 net.cpp:139] Memory required for data: 29502800
I0428 20:31:01.295128  3893 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:31:01.295135  3893 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:31:01.295138  3893 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:31:01.295145  3893 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:31:01.295151  3893 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:31:01.295198  3893 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:31:01.295207  3893 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:01.295212  3893 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:01.295214  3893 net.cpp:139] Memory required for data: 29510800
I0428 20:31:01.295218  3893 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:01.295224  3893 net.cpp:86] Creating Layer accuracy
I0428 20:31:01.295228  3893 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:31:01.295233  3893 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:01.295239  3893 net.cpp:382] accuracy -> accuracy
I0428 20:31:01.295248  3893 net.cpp:124] Setting up accuracy
I0428 20:31:01.295256  3893 net.cpp:131] Top shape: (1)
I0428 20:31:01.295259  3893 net.cpp:139] Memory required for data: 29510804
I0428 20:31:01.295262  3893 layer_factory.hpp:77] Creating layer loss
I0428 20:31:01.295269  3893 net.cpp:86] Creating Layer loss
I0428 20:31:01.295274  3893 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:31:01.295277  3893 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:01.295282  3893 net.cpp:382] loss -> loss
I0428 20:31:01.295289  3893 layer_factory.hpp:77] Creating layer loss
I0428 20:31:01.295569  3893 net.cpp:124] Setting up loss
I0428 20:31:01.295581  3893 net.cpp:131] Top shape: (1)
I0428 20:31:01.295584  3893 net.cpp:134]     with loss weight 1
I0428 20:31:01.295603  3893 net.cpp:139] Memory required for data: 29510808
I0428 20:31:01.295606  3893 net.cpp:200] loss needs backward computation.
I0428 20:31:01.295610  3893 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:01.295614  3893 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:31:01.295619  3893 net.cpp:200] relu3 needs backward computation.
I0428 20:31:01.295621  3893 net.cpp:200] ip3 needs backward computation.
I0428 20:31:01.295625  3893 net.cpp:200] relu2 needs backward computation.
I0428 20:31:01.295635  3893 net.cpp:200] ip2 needs backward computation.
I0428 20:31:01.295639  3893 net.cpp:200] relu1 needs backward computation.
I0428 20:31:01.295641  3893 net.cpp:200] ip1 needs backward computation.
I0428 20:31:01.295646  3893 net.cpp:200] pool1 needs backward computation.
I0428 20:31:01.295650  3893 net.cpp:200] conv1 needs backward computation.
I0428 20:31:01.295653  3893 net.cpp:200] pool0 needs backward computation.
I0428 20:31:01.295657  3893 net.cpp:200] conv0 needs backward computation.
I0428 20:31:01.295661  3893 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:01.295665  3893 net.cpp:202] mnist does not need backward computation.
I0428 20:31:01.295670  3893 net.cpp:244] This network produces output accuracy
I0428 20:31:01.295673  3893 net.cpp:244] This network produces output loss
I0428 20:31:01.295688  3893 net.cpp:257] Network initialization done.
I0428 20:31:01.295742  3893 solver.cpp:56] Solver scaffolding done.
I0428 20:31:01.296160  3893 caffe.cpp:248] Starting Optimization
I0428 20:31:01.296169  3893 solver.cpp:273] Solving LeNet
I0428 20:31:01.296171  3893 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:01.297188  3893 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:01.395714  3900 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:01.398170  3893 solver.cpp:398]     Test net output #0: accuracy = 0.0971
I0428 20:31:01.398195  3893 solver.cpp:398]     Test net output #1: loss = 2.3289 (* 1 = 2.3289 loss)
I0428 20:31:01.403084  3893 solver.cpp:219] Iteration 0 (-1.59024e-31 iter/s, 0.106879s/100 iters), loss = 2.31041
I0428 20:31:01.403115  3893 solver.cpp:238]     Train net output #0: loss = 2.31041 (* 1 = 2.31041 loss)
I0428 20:31:01.403126  3893 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:01.619761  3893 solver.cpp:219] Iteration 100 (461.636 iter/s, 0.216621s/100 iters), loss = 0.886735
I0428 20:31:01.619813  3893 solver.cpp:238]     Train net output #0: loss = 0.886735 (* 1 = 0.886735 loss)
I0428 20:31:01.619827  3893 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:01.847215  3893 solver.cpp:219] Iteration 200 (439.784 iter/s, 0.227384s/100 iters), loss = 1.38741
I0428 20:31:01.847267  3893 solver.cpp:238]     Train net output #0: loss = 1.38741 (* 1 = 1.38741 loss)
I0428 20:31:01.847280  3893 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:02.075346  3893 solver.cpp:219] Iteration 300 (438.479 iter/s, 0.228061s/100 iters), loss = 0.744865
I0428 20:31:02.075397  3893 solver.cpp:238]     Train net output #0: loss = 0.744865 (* 1 = 0.744865 loss)
I0428 20:31:02.075412  3893 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:02.298897  3893 solver.cpp:219] Iteration 400 (447.46 iter/s, 0.223484s/100 iters), loss = 0.337457
I0428 20:31:02.298943  3893 solver.cpp:238]     Train net output #0: loss = 0.337457 (* 1 = 0.337457 loss)
I0428 20:31:02.298956  3893 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:02.517099  3893 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:02.629958  3900 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:02.633481  3893 solver.cpp:398]     Test net output #0: accuracy = 0.862
I0428 20:31:02.633508  3893 solver.cpp:398]     Test net output #1: loss = 0.368478 (* 1 = 0.368478 loss)
I0428 20:31:02.635481  3893 solver.cpp:219] Iteration 500 (297.161 iter/s, 0.336518s/100 iters), loss = 0.325201
I0428 20:31:02.635509  3893 solver.cpp:238]     Train net output #0: loss = 0.325201 (* 1 = 0.325201 loss)
I0428 20:31:02.635534  3893 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:02.851173  3893 solver.cpp:219] Iteration 600 (463.718 iter/s, 0.215648s/100 iters), loss = 0.185201
I0428 20:31:02.851208  3893 solver.cpp:238]     Train net output #0: loss = 0.185201 (* 1 = 0.185201 loss)
I0428 20:31:02.851217  3893 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:03.079874  3893 solver.cpp:219] Iteration 700 (437.361 iter/s, 0.228644s/100 iters), loss = 0.240079
I0428 20:31:03.079924  3893 solver.cpp:238]     Train net output #0: loss = 0.240079 (* 1 = 0.240079 loss)
I0428 20:31:03.079936  3893 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:03.295748  3893 solver.cpp:219] Iteration 800 (463.375 iter/s, 0.215808s/100 iters), loss = 0.348737
I0428 20:31:03.295792  3893 solver.cpp:238]     Train net output #0: loss = 0.348737 (* 1 = 0.348737 loss)
I0428 20:31:03.295804  3893 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:03.509456  3893 solver.cpp:219] Iteration 900 (468.061 iter/s, 0.213647s/100 iters), loss = 0.104082
I0428 20:31:03.509498  3893 solver.cpp:238]     Train net output #0: loss = 0.104082 (* 1 = 0.104082 loss)
I0428 20:31:03.509510  3893 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:03.581779  3899 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:03.724802  3893 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:03.727068  3893 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:03.728552  3893 solver.cpp:311] Iteration 1000, loss = 0.144702
I0428 20:31:03.728592  3893 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:03.741216  3893 blocking_queue.cpp:49] Waiting for data
I0428 20:31:03.846632  3900 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:03.850276  3893 solver.cpp:398]     Test net output #0: accuracy = 0.9686
I0428 20:31:03.850306  3893 solver.cpp:398]     Test net output #1: loss = 0.100096 (* 1 = 0.100096 loss)
I0428 20:31:03.850312  3893 solver.cpp:316] Optimization Done.
I0428 20:31:03.850317  3893 caffe.cpp:259] Optimization Done.
