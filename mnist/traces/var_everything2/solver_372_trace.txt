I0428 19:41:41.510951 24889 caffe.cpp:218] Using GPUs 0
I0428 19:41:41.551066 24889 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:42.055106 24889 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test372.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:42.055220 24889 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test372.prototxt
I0428 19:41:42.055558 24889 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:42.055589 24889 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:42.055672 24889 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:42.055737 24889 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:42.055821 24889 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:42.055843 24889 net.cpp:86] Creating Layer mnist
I0428 19:41:42.055851 24889 net.cpp:382] mnist -> data
I0428 19:41:42.055884 24889 net.cpp:382] mnist -> label
I0428 19:41:42.056856 24889 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:42.059155 24889 net.cpp:124] Setting up mnist
I0428 19:41:42.059186 24889 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:42.059191 24889 net.cpp:131] Top shape: 64 (64)
I0428 19:41:42.059195 24889 net.cpp:139] Memory required for data: 200960
I0428 19:41:42.059201 24889 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:42.059216 24889 net.cpp:86] Creating Layer conv0
I0428 19:41:42.059233 24889 net.cpp:408] conv0 <- data
I0428 19:41:42.059244 24889 net.cpp:382] conv0 -> conv0
I0428 19:41:42.297879 24889 net.cpp:124] Setting up conv0
I0428 19:41:42.297907 24889 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:42.297912 24889 net.cpp:139] Memory required for data: 495872
I0428 19:41:42.297929 24889 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:42.297957 24889 net.cpp:86] Creating Layer pool0
I0428 19:41:42.297962 24889 net.cpp:408] pool0 <- conv0
I0428 19:41:42.297967 24889 net.cpp:382] pool0 -> pool0
I0428 19:41:42.298018 24889 net.cpp:124] Setting up pool0
I0428 19:41:42.298025 24889 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:42.298028 24889 net.cpp:139] Memory required for data: 569600
I0428 19:41:42.298032 24889 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:42.298043 24889 net.cpp:86] Creating Layer conv1
I0428 19:41:42.298045 24889 net.cpp:408] conv1 <- pool0
I0428 19:41:42.298050 24889 net.cpp:382] conv1 -> conv1
I0428 19:41:42.300022 24889 net.cpp:124] Setting up conv1
I0428 19:41:42.300037 24889 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:42.300041 24889 net.cpp:139] Memory required for data: 733440
I0428 19:41:42.300050 24889 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:42.300058 24889 net.cpp:86] Creating Layer pool1
I0428 19:41:42.300062 24889 net.cpp:408] pool1 <- conv1
I0428 19:41:42.300068 24889 net.cpp:382] pool1 -> pool1
I0428 19:41:42.300107 24889 net.cpp:124] Setting up pool1
I0428 19:41:42.300119 24889 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:42.300122 24889 net.cpp:139] Memory required for data: 774400
I0428 19:41:42.300125 24889 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:42.300133 24889 net.cpp:86] Creating Layer ip1
I0428 19:41:42.300137 24889 net.cpp:408] ip1 <- pool1
I0428 19:41:42.300142 24889 net.cpp:382] ip1 -> ip1
I0428 19:41:42.301241 24889 net.cpp:124] Setting up ip1
I0428 19:41:42.301271 24889 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:42.301275 24889 net.cpp:139] Memory required for data: 780800
I0428 19:41:42.301283 24889 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:42.301290 24889 net.cpp:86] Creating Layer relu1
I0428 19:41:42.301295 24889 net.cpp:408] relu1 <- ip1
I0428 19:41:42.301300 24889 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:42.301524 24889 net.cpp:124] Setting up relu1
I0428 19:41:42.301533 24889 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:42.301537 24889 net.cpp:139] Memory required for data: 787200
I0428 19:41:42.301540 24889 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:42.301548 24889 net.cpp:86] Creating Layer ip2
I0428 19:41:42.301550 24889 net.cpp:408] ip2 <- ip1
I0428 19:41:42.301555 24889 net.cpp:382] ip2 -> ip2
I0428 19:41:42.301651 24889 net.cpp:124] Setting up ip2
I0428 19:41:42.301658 24889 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:42.301681 24889 net.cpp:139] Memory required for data: 789760
I0428 19:41:42.301687 24889 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:42.301692 24889 net.cpp:86] Creating Layer relu2
I0428 19:41:42.301697 24889 net.cpp:408] relu2 <- ip2
I0428 19:41:42.301702 24889 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:42.302521 24889 net.cpp:124] Setting up relu2
I0428 19:41:42.302533 24889 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:42.302553 24889 net.cpp:139] Memory required for data: 792320
I0428 19:41:42.302557 24889 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:42.302578 24889 net.cpp:86] Creating Layer ip3
I0428 19:41:42.302582 24889 net.cpp:408] ip3 <- ip2
I0428 19:41:42.302587 24889 net.cpp:382] ip3 -> ip3
I0428 19:41:42.302702 24889 net.cpp:124] Setting up ip3
I0428 19:41:42.302709 24889 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:42.302712 24889 net.cpp:139] Memory required for data: 794880
I0428 19:41:42.302721 24889 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:42.302726 24889 net.cpp:86] Creating Layer relu3
I0428 19:41:42.302728 24889 net.cpp:408] relu3 <- ip3
I0428 19:41:42.302733 24889 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:42.302914 24889 net.cpp:124] Setting up relu3
I0428 19:41:42.302922 24889 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:42.302940 24889 net.cpp:139] Memory required for data: 797440
I0428 19:41:42.302943 24889 layer_factory.hpp:77] Creating layer loss
I0428 19:41:42.302948 24889 net.cpp:86] Creating Layer loss
I0428 19:41:42.302952 24889 net.cpp:408] loss <- ip3
I0428 19:41:42.302955 24889 net.cpp:408] loss <- label
I0428 19:41:42.302960 24889 net.cpp:382] loss -> loss
I0428 19:41:42.302978 24889 layer_factory.hpp:77] Creating layer loss
I0428 19:41:42.303231 24889 net.cpp:124] Setting up loss
I0428 19:41:42.303241 24889 net.cpp:131] Top shape: (1)
I0428 19:41:42.303243 24889 net.cpp:134]     with loss weight 1
I0428 19:41:42.303257 24889 net.cpp:139] Memory required for data: 797444
I0428 19:41:42.303261 24889 net.cpp:200] loss needs backward computation.
I0428 19:41:42.303279 24889 net.cpp:200] relu3 needs backward computation.
I0428 19:41:42.303282 24889 net.cpp:200] ip3 needs backward computation.
I0428 19:41:42.303287 24889 net.cpp:200] relu2 needs backward computation.
I0428 19:41:42.303289 24889 net.cpp:200] ip2 needs backward computation.
I0428 19:41:42.303292 24889 net.cpp:200] relu1 needs backward computation.
I0428 19:41:42.303295 24889 net.cpp:200] ip1 needs backward computation.
I0428 19:41:42.303298 24889 net.cpp:200] pool1 needs backward computation.
I0428 19:41:42.303302 24889 net.cpp:200] conv1 needs backward computation.
I0428 19:41:42.303305 24889 net.cpp:200] pool0 needs backward computation.
I0428 19:41:42.303308 24889 net.cpp:200] conv0 needs backward computation.
I0428 19:41:42.303313 24889 net.cpp:202] mnist does not need backward computation.
I0428 19:41:42.303315 24889 net.cpp:244] This network produces output loss
I0428 19:41:42.303325 24889 net.cpp:257] Network initialization done.
I0428 19:41:42.303699 24889 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test372.prototxt
I0428 19:41:42.303741 24889 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:42.303829 24889 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:42.303923 24889 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:42.303968 24889 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:42.303998 24889 net.cpp:86] Creating Layer mnist
I0428 19:41:42.304003 24889 net.cpp:382] mnist -> data
I0428 19:41:42.304013 24889 net.cpp:382] mnist -> label
I0428 19:41:42.304100 24889 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:42.306419 24889 net.cpp:124] Setting up mnist
I0428 19:41:42.306448 24889 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:42.306469 24889 net.cpp:131] Top shape: 100 (100)
I0428 19:41:42.306473 24889 net.cpp:139] Memory required for data: 314000
I0428 19:41:42.306478 24889 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:42.306504 24889 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:42.306507 24889 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:42.306512 24889 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:42.306520 24889 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:42.306563 24889 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:42.306571 24889 net.cpp:131] Top shape: 100 (100)
I0428 19:41:42.306574 24889 net.cpp:131] Top shape: 100 (100)
I0428 19:41:42.306577 24889 net.cpp:139] Memory required for data: 314800
I0428 19:41:42.306581 24889 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:42.306589 24889 net.cpp:86] Creating Layer conv0
I0428 19:41:42.306592 24889 net.cpp:408] conv0 <- data
I0428 19:41:42.306597 24889 net.cpp:382] conv0 -> conv0
I0428 19:41:42.308248 24889 net.cpp:124] Setting up conv0
I0428 19:41:42.308276 24889 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:42.308280 24889 net.cpp:139] Memory required for data: 775600
I0428 19:41:42.308290 24889 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:42.308295 24889 net.cpp:86] Creating Layer pool0
I0428 19:41:42.308300 24889 net.cpp:408] pool0 <- conv0
I0428 19:41:42.308303 24889 net.cpp:382] pool0 -> pool0
I0428 19:41:42.308339 24889 net.cpp:124] Setting up pool0
I0428 19:41:42.308349 24889 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:42.308352 24889 net.cpp:139] Memory required for data: 890800
I0428 19:41:42.308356 24889 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:42.308379 24889 net.cpp:86] Creating Layer conv1
I0428 19:41:42.308382 24889 net.cpp:408] conv1 <- pool0
I0428 19:41:42.308387 24889 net.cpp:382] conv1 -> conv1
I0428 19:41:42.310094 24889 net.cpp:124] Setting up conv1
I0428 19:41:42.310109 24889 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:42.310114 24889 net.cpp:139] Memory required for data: 1146800
I0428 19:41:42.310124 24889 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:42.310132 24889 net.cpp:86] Creating Layer pool1
I0428 19:41:42.310135 24889 net.cpp:408] pool1 <- conv1
I0428 19:41:42.310142 24889 net.cpp:382] pool1 -> pool1
I0428 19:41:42.310194 24889 net.cpp:124] Setting up pool1
I0428 19:41:42.310215 24889 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:42.310220 24889 net.cpp:139] Memory required for data: 1210800
I0428 19:41:42.310222 24889 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:42.310228 24889 net.cpp:86] Creating Layer ip1
I0428 19:41:42.310232 24889 net.cpp:408] ip1 <- pool1
I0428 19:41:42.310237 24889 net.cpp:382] ip1 -> ip1
I0428 19:41:42.310384 24889 net.cpp:124] Setting up ip1
I0428 19:41:42.310392 24889 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:42.310407 24889 net.cpp:139] Memory required for data: 1220800
I0428 19:41:42.310415 24889 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:42.310421 24889 net.cpp:86] Creating Layer relu1
I0428 19:41:42.310425 24889 net.cpp:408] relu1 <- ip1
I0428 19:41:42.310431 24889 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:42.310611 24889 net.cpp:124] Setting up relu1
I0428 19:41:42.310636 24889 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:42.310654 24889 net.cpp:139] Memory required for data: 1230800
I0428 19:41:42.310658 24889 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:42.310667 24889 net.cpp:86] Creating Layer ip2
I0428 19:41:42.310670 24889 net.cpp:408] ip2 <- ip1
I0428 19:41:42.310675 24889 net.cpp:382] ip2 -> ip2
I0428 19:41:42.310778 24889 net.cpp:124] Setting up ip2
I0428 19:41:42.310786 24889 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:42.310788 24889 net.cpp:139] Memory required for data: 1234800
I0428 19:41:42.310794 24889 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:42.310799 24889 net.cpp:86] Creating Layer relu2
I0428 19:41:42.310802 24889 net.cpp:408] relu2 <- ip2
I0428 19:41:42.310806 24889 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:42.311017 24889 net.cpp:124] Setting up relu2
I0428 19:41:42.311027 24889 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:42.311029 24889 net.cpp:139] Memory required for data: 1238800
I0428 19:41:42.311033 24889 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:42.311038 24889 net.cpp:86] Creating Layer ip3
I0428 19:41:42.311041 24889 net.cpp:408] ip3 <- ip2
I0428 19:41:42.311045 24889 net.cpp:382] ip3 -> ip3
I0428 19:41:42.311182 24889 net.cpp:124] Setting up ip3
I0428 19:41:42.311188 24889 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:42.311192 24889 net.cpp:139] Memory required for data: 1242800
I0428 19:41:42.311199 24889 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:42.311203 24889 net.cpp:86] Creating Layer relu3
I0428 19:41:42.311223 24889 net.cpp:408] relu3 <- ip3
I0428 19:41:42.311228 24889 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:42.312075 24889 net.cpp:124] Setting up relu3
I0428 19:41:42.312088 24889 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:42.312090 24889 net.cpp:139] Memory required for data: 1246800
I0428 19:41:42.312110 24889 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:42.312124 24889 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:42.312129 24889 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:42.312134 24889 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:42.312140 24889 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:42.312196 24889 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:42.312203 24889 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:42.312206 24889 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:42.312214 24889 net.cpp:139] Memory required for data: 1254800
I0428 19:41:42.312217 24889 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:42.312223 24889 net.cpp:86] Creating Layer accuracy
I0428 19:41:42.312227 24889 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:42.312230 24889 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:42.312235 24889 net.cpp:382] accuracy -> accuracy
I0428 19:41:42.312242 24889 net.cpp:124] Setting up accuracy
I0428 19:41:42.312247 24889 net.cpp:131] Top shape: (1)
I0428 19:41:42.312249 24889 net.cpp:139] Memory required for data: 1254804
I0428 19:41:42.312252 24889 layer_factory.hpp:77] Creating layer loss
I0428 19:41:42.312258 24889 net.cpp:86] Creating Layer loss
I0428 19:41:42.312260 24889 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:42.312264 24889 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:42.312268 24889 net.cpp:382] loss -> loss
I0428 19:41:42.312275 24889 layer_factory.hpp:77] Creating layer loss
I0428 19:41:42.312513 24889 net.cpp:124] Setting up loss
I0428 19:41:42.312525 24889 net.cpp:131] Top shape: (1)
I0428 19:41:42.312528 24889 net.cpp:134]     with loss weight 1
I0428 19:41:42.312536 24889 net.cpp:139] Memory required for data: 1254808
I0428 19:41:42.312548 24889 net.cpp:200] loss needs backward computation.
I0428 19:41:42.312553 24889 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:42.312558 24889 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:42.312561 24889 net.cpp:200] relu3 needs backward computation.
I0428 19:41:42.312564 24889 net.cpp:200] ip3 needs backward computation.
I0428 19:41:42.312568 24889 net.cpp:200] relu2 needs backward computation.
I0428 19:41:42.312572 24889 net.cpp:200] ip2 needs backward computation.
I0428 19:41:42.312583 24889 net.cpp:200] relu1 needs backward computation.
I0428 19:41:42.312587 24889 net.cpp:200] ip1 needs backward computation.
I0428 19:41:42.312597 24889 net.cpp:200] pool1 needs backward computation.
I0428 19:41:42.312600 24889 net.cpp:200] conv1 needs backward computation.
I0428 19:41:42.312603 24889 net.cpp:200] pool0 needs backward computation.
I0428 19:41:42.312607 24889 net.cpp:200] conv0 needs backward computation.
I0428 19:41:42.312610 24889 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:42.312615 24889 net.cpp:202] mnist does not need backward computation.
I0428 19:41:42.312618 24889 net.cpp:244] This network produces output accuracy
I0428 19:41:42.312638 24889 net.cpp:244] This network produces output loss
I0428 19:41:42.312649 24889 net.cpp:257] Network initialization done.
I0428 19:41:42.312707 24889 solver.cpp:56] Solver scaffolding done.
I0428 19:41:42.313148 24889 caffe.cpp:248] Starting Optimization
I0428 19:41:42.313154 24889 solver.cpp:273] Solving LeNet
I0428 19:41:42.313158 24889 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:42.314069 24889 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:42.316931 24889 blocking_queue.cpp:49] Waiting for data
I0428 19:41:42.384845 24896 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:42.385318 24889 solver.cpp:398]     Test net output #0: accuracy = 0.1013
I0428 19:41:42.385351 24889 solver.cpp:398]     Test net output #1: loss = 2.31094 (* 1 = 2.31094 loss)
I0428 19:41:42.387341 24889 solver.cpp:219] Iteration 0 (3.07045 iter/s, 0.0741417s/100 iters), loss = 2.30287
I0428 19:41:42.387379 24889 solver.cpp:238]     Train net output #0: loss = 2.30287 (* 1 = 2.30287 loss)
I0428 19:41:42.387392 24889 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:42.461581 24889 solver.cpp:219] Iteration 100 (1347.54 iter/s, 0.0742093s/100 iters), loss = 1.29018
I0428 19:41:42.461604 24889 solver.cpp:238]     Train net output #0: loss = 1.29018 (* 1 = 1.29018 loss)
I0428 19:41:42.461611 24889 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:42.534971 24889 solver.cpp:219] Iteration 200 (1363.17 iter/s, 0.0733583s/100 iters), loss = 0.95761
I0428 19:41:42.534994 24889 solver.cpp:238]     Train net output #0: loss = 0.95761 (* 1 = 0.95761 loss)
I0428 19:41:42.535001 24889 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:42.609647 24889 solver.cpp:219] Iteration 300 (1339.7 iter/s, 0.0746435s/100 iters), loss = 0.710824
I0428 19:41:42.609669 24889 solver.cpp:238]     Train net output #0: loss = 0.710824 (* 1 = 0.710824 loss)
I0428 19:41:42.609691 24889 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:42.682997 24889 solver.cpp:219] Iteration 400 (1363.9 iter/s, 0.0733194s/100 iters), loss = 1.15288
I0428 19:41:42.683020 24889 solver.cpp:238]     Train net output #0: loss = 1.15288 (* 1 = 1.15288 loss)
I0428 19:41:42.683027 24889 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:42.756942 24889 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:42.833184 24896 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:42.833629 24889 solver.cpp:398]     Test net output #0: accuracy = 0.7435
I0428 19:41:42.833647 24889 solver.cpp:398]     Test net output #1: loss = 0.872733 (* 1 = 0.872733 loss)
I0428 19:41:42.834442 24889 solver.cpp:219] Iteration 500 (660.46 iter/s, 0.15141s/100 iters), loss = 1.10812
I0428 19:41:42.834483 24889 solver.cpp:238]     Train net output #0: loss = 1.10812 (* 1 = 1.10812 loss)
I0428 19:41:42.834506 24889 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:42.910446 24889 solver.cpp:219] Iteration 600 (1316.58 iter/s, 0.0759542s/100 iters), loss = 0.590915
I0428 19:41:42.910485 24889 solver.cpp:238]     Train net output #0: loss = 0.590915 (* 1 = 0.590915 loss)
I0428 19:41:42.910491 24889 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:42.985070 24889 solver.cpp:219] Iteration 700 (1340.82 iter/s, 0.074581s/100 iters), loss = 1.13531
I0428 19:41:42.985110 24889 solver.cpp:238]     Train net output #0: loss = 1.13531 (* 1 = 1.13531 loss)
I0428 19:41:42.985117 24889 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:43.057301 24889 solver.cpp:219] Iteration 800 (1385.08 iter/s, 0.0721981s/100 iters), loss = 0.768953
I0428 19:41:43.057339 24889 solver.cpp:238]     Train net output #0: loss = 0.768953 (* 1 = 0.768953 loss)
I0428 19:41:43.057345 24889 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:43.129698 24889 solver.cpp:219] Iteration 900 (1381.86 iter/s, 0.0723661s/100 iters), loss = 0.608218
I0428 19:41:43.129737 24889 solver.cpp:238]     Train net output #0: loss = 0.608218 (* 1 = 0.608218 loss)
I0428 19:41:43.129743 24889 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:43.153830 24895 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:43.202018 24889 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:43.203001 24889 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:43.203501 24889 solver.cpp:311] Iteration 1000, loss = 0.785
I0428 19:41:43.203519 24889 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:43.277840 24896 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:43.278409 24889 solver.cpp:398]     Test net output #0: accuracy = 0.7773
I0428 19:41:43.278439 24889 solver.cpp:398]     Test net output #1: loss = 0.78134 (* 1 = 0.78134 loss)
I0428 19:41:43.278450 24889 solver.cpp:316] Optimization Done.
I0428 19:41:43.278462 24889 caffe.cpp:259] Optimization Done.
