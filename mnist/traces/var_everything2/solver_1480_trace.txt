I0428 20:26:58.109305  2902 caffe.cpp:218] Using GPUs 0
I0428 20:26:58.141090  2902 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:58.607190  2902 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1480.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:58.607321  2902 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1480.prototxt
I0428 20:26:58.607672  2902 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:58.607688  2902 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:58.607781  2902 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:58.607846  2902 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:58.607928  2902 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:58.607946  2902 net.cpp:86] Creating Layer mnist
I0428 20:26:58.607954  2902 net.cpp:382] mnist -> data
I0428 20:26:58.607971  2902 net.cpp:382] mnist -> label
I0428 20:26:58.608952  2902 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:58.611146  2902 net.cpp:124] Setting up mnist
I0428 20:26:58.611191  2902 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:58.611196  2902 net.cpp:131] Top shape: 64 (64)
I0428 20:26:58.611198  2902 net.cpp:139] Memory required for data: 200960
I0428 20:26:58.611204  2902 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:58.611228  2902 net.cpp:86] Creating Layer conv0
I0428 20:26:58.611248  2902 net.cpp:408] conv0 <- data
I0428 20:26:58.611259  2902 net.cpp:382] conv0 -> conv0
I0428 20:26:58.846096  2902 net.cpp:124] Setting up conv0
I0428 20:26:58.846124  2902 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:58.846128  2902 net.cpp:139] Memory required for data: 14946560
I0428 20:26:58.846143  2902 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:58.846154  2902 net.cpp:86] Creating Layer pool0
I0428 20:26:58.846159  2902 net.cpp:408] pool0 <- conv0
I0428 20:26:58.846163  2902 net.cpp:382] pool0 -> pool0
I0428 20:26:58.846225  2902 net.cpp:124] Setting up pool0
I0428 20:26:58.846230  2902 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:58.846232  2902 net.cpp:139] Memory required for data: 18632960
I0428 20:26:58.846235  2902 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:58.846246  2902 net.cpp:86] Creating Layer conv1
I0428 20:26:58.846248  2902 net.cpp:408] conv1 <- pool0
I0428 20:26:58.846253  2902 net.cpp:382] conv1 -> conv1
I0428 20:26:58.849083  2902 net.cpp:124] Setting up conv1
I0428 20:26:58.849114  2902 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:58.849118  2902 net.cpp:139] Memory required for data: 18665728
I0428 20:26:58.849143  2902 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:58.849164  2902 net.cpp:86] Creating Layer pool1
I0428 20:26:58.849167  2902 net.cpp:408] pool1 <- conv1
I0428 20:26:58.849172  2902 net.cpp:382] pool1 -> pool1
I0428 20:26:58.849210  2902 net.cpp:124] Setting up pool1
I0428 20:26:58.849215  2902 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:58.849217  2902 net.cpp:139] Memory required for data: 18673920
I0428 20:26:58.849220  2902 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:58.849227  2902 net.cpp:86] Creating Layer ip1
I0428 20:26:58.849231  2902 net.cpp:408] ip1 <- pool1
I0428 20:26:58.849234  2902 net.cpp:382] ip1 -> ip1
I0428 20:26:58.849355  2902 net.cpp:124] Setting up ip1
I0428 20:26:58.849362  2902 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:58.849365  2902 net.cpp:139] Memory required for data: 18686720
I0428 20:26:58.849372  2902 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:58.849377  2902 net.cpp:86] Creating Layer relu1
I0428 20:26:58.849380  2902 net.cpp:408] relu1 <- ip1
I0428 20:26:58.849385  2902 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:58.849539  2902 net.cpp:124] Setting up relu1
I0428 20:26:58.849547  2902 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:58.849550  2902 net.cpp:139] Memory required for data: 18699520
I0428 20:26:58.849553  2902 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:58.849573  2902 net.cpp:86] Creating Layer ip2
I0428 20:26:58.849576  2902 net.cpp:408] ip2 <- ip1
I0428 20:26:58.849581  2902 net.cpp:382] ip2 -> ip2
I0428 20:26:58.849678  2902 net.cpp:124] Setting up ip2
I0428 20:26:58.849684  2902 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:58.849686  2902 net.cpp:139] Memory required for data: 18712320
I0428 20:26:58.849691  2902 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:58.849696  2902 net.cpp:86] Creating Layer relu2
I0428 20:26:58.849699  2902 net.cpp:408] relu2 <- ip2
I0428 20:26:58.849704  2902 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:58.850483  2902 net.cpp:124] Setting up relu2
I0428 20:26:58.850494  2902 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:58.850513  2902 net.cpp:139] Memory required for data: 18725120
I0428 20:26:58.850517  2902 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:58.850523  2902 net.cpp:86] Creating Layer ip3
I0428 20:26:58.850527  2902 net.cpp:408] ip3 <- ip2
I0428 20:26:58.850531  2902 net.cpp:382] ip3 -> ip3
I0428 20:26:58.850625  2902 net.cpp:124] Setting up ip3
I0428 20:26:58.850631  2902 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:58.850634  2902 net.cpp:139] Memory required for data: 18727680
I0428 20:26:58.850641  2902 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:58.850646  2902 net.cpp:86] Creating Layer relu3
I0428 20:26:58.850648  2902 net.cpp:408] relu3 <- ip3
I0428 20:26:58.850652  2902 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:58.850821  2902 net.cpp:124] Setting up relu3
I0428 20:26:58.850829  2902 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:58.850832  2902 net.cpp:139] Memory required for data: 18730240
I0428 20:26:58.850836  2902 layer_factory.hpp:77] Creating layer loss
I0428 20:26:58.850841  2902 net.cpp:86] Creating Layer loss
I0428 20:26:58.850844  2902 net.cpp:408] loss <- ip3
I0428 20:26:58.850848  2902 net.cpp:408] loss <- label
I0428 20:26:58.850853  2902 net.cpp:382] loss -> loss
I0428 20:26:58.850870  2902 layer_factory.hpp:77] Creating layer loss
I0428 20:26:58.851086  2902 net.cpp:124] Setting up loss
I0428 20:26:58.851095  2902 net.cpp:131] Top shape: (1)
I0428 20:26:58.851099  2902 net.cpp:134]     with loss weight 1
I0428 20:26:58.851111  2902 net.cpp:139] Memory required for data: 18730244
I0428 20:26:58.851114  2902 net.cpp:200] loss needs backward computation.
I0428 20:26:58.851119  2902 net.cpp:200] relu3 needs backward computation.
I0428 20:26:58.851121  2902 net.cpp:200] ip3 needs backward computation.
I0428 20:26:58.851125  2902 net.cpp:200] relu2 needs backward computation.
I0428 20:26:58.851127  2902 net.cpp:200] ip2 needs backward computation.
I0428 20:26:58.851130  2902 net.cpp:200] relu1 needs backward computation.
I0428 20:26:58.851132  2902 net.cpp:200] ip1 needs backward computation.
I0428 20:26:58.851135  2902 net.cpp:200] pool1 needs backward computation.
I0428 20:26:58.851138  2902 net.cpp:200] conv1 needs backward computation.
I0428 20:26:58.851141  2902 net.cpp:200] pool0 needs backward computation.
I0428 20:26:58.851145  2902 net.cpp:200] conv0 needs backward computation.
I0428 20:26:58.851148  2902 net.cpp:202] mnist does not need backward computation.
I0428 20:26:58.851150  2902 net.cpp:244] This network produces output loss
I0428 20:26:58.851160  2902 net.cpp:257] Network initialization done.
I0428 20:26:58.851575  2902 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1480.prototxt
I0428 20:26:58.851631  2902 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:58.851718  2902 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:58.851807  2902 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:58.851850  2902 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:58.851861  2902 net.cpp:86] Creating Layer mnist
I0428 20:26:58.851866  2902 net.cpp:382] mnist -> data
I0428 20:26:58.851872  2902 net.cpp:382] mnist -> label
I0428 20:26:58.851950  2902 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:58.854044  2902 net.cpp:124] Setting up mnist
I0428 20:26:58.854074  2902 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:58.854094  2902 net.cpp:131] Top shape: 100 (100)
I0428 20:26:58.854097  2902 net.cpp:139] Memory required for data: 314000
I0428 20:26:58.854100  2902 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:58.854107  2902 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:58.854111  2902 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:58.854115  2902 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:58.854122  2902 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:58.854177  2902 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:58.854182  2902 net.cpp:131] Top shape: 100 (100)
I0428 20:26:58.854187  2902 net.cpp:131] Top shape: 100 (100)
I0428 20:26:58.854188  2902 net.cpp:139] Memory required for data: 314800
I0428 20:26:58.854192  2902 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:58.854199  2902 net.cpp:86] Creating Layer conv0
I0428 20:26:58.854202  2902 net.cpp:408] conv0 <- data
I0428 20:26:58.854207  2902 net.cpp:382] conv0 -> conv0
I0428 20:26:58.855947  2902 net.cpp:124] Setting up conv0
I0428 20:26:58.855975  2902 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:58.855979  2902 net.cpp:139] Memory required for data: 23354800
I0428 20:26:58.855988  2902 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:58.855993  2902 net.cpp:86] Creating Layer pool0
I0428 20:26:58.855996  2902 net.cpp:408] pool0 <- conv0
I0428 20:26:58.856001  2902 net.cpp:382] pool0 -> pool0
I0428 20:26:58.856037  2902 net.cpp:124] Setting up pool0
I0428 20:26:58.856042  2902 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:58.856045  2902 net.cpp:139] Memory required for data: 29114800
I0428 20:26:58.856047  2902 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:58.856055  2902 net.cpp:86] Creating Layer conv1
I0428 20:26:58.856058  2902 net.cpp:408] conv1 <- pool0
I0428 20:26:58.856062  2902 net.cpp:382] conv1 -> conv1
I0428 20:26:58.857615  2902 net.cpp:124] Setting up conv1
I0428 20:26:58.857643  2902 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:58.857647  2902 net.cpp:139] Memory required for data: 29166000
I0428 20:26:58.857656  2902 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:58.857662  2902 net.cpp:86] Creating Layer pool1
I0428 20:26:58.857666  2902 net.cpp:408] pool1 <- conv1
I0428 20:26:58.857671  2902 net.cpp:382] pool1 -> pool1
I0428 20:26:58.857722  2902 net.cpp:124] Setting up pool1
I0428 20:26:58.857728  2902 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:58.857733  2902 net.cpp:139] Memory required for data: 29178800
I0428 20:26:58.857735  2902 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:58.857741  2902 net.cpp:86] Creating Layer ip1
I0428 20:26:58.857760  2902 net.cpp:408] ip1 <- pool1
I0428 20:26:58.857764  2902 net.cpp:382] ip1 -> ip1
I0428 20:26:58.857877  2902 net.cpp:124] Setting up ip1
I0428 20:26:58.857885  2902 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:58.857898  2902 net.cpp:139] Memory required for data: 29198800
I0428 20:26:58.857906  2902 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:58.857911  2902 net.cpp:86] Creating Layer relu1
I0428 20:26:58.857915  2902 net.cpp:408] relu1 <- ip1
I0428 20:26:58.857920  2902 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:58.858108  2902 net.cpp:124] Setting up relu1
I0428 20:26:58.858116  2902 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:58.858119  2902 net.cpp:139] Memory required for data: 29218800
I0428 20:26:58.858124  2902 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:58.858129  2902 net.cpp:86] Creating Layer ip2
I0428 20:26:58.858132  2902 net.cpp:408] ip2 <- ip1
I0428 20:26:58.858137  2902 net.cpp:382] ip2 -> ip2
I0428 20:26:58.858242  2902 net.cpp:124] Setting up ip2
I0428 20:26:58.858250  2902 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:58.858253  2902 net.cpp:139] Memory required for data: 29238800
I0428 20:26:58.858258  2902 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:58.858263  2902 net.cpp:86] Creating Layer relu2
I0428 20:26:58.858265  2902 net.cpp:408] relu2 <- ip2
I0428 20:26:58.858269  2902 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:58.858484  2902 net.cpp:124] Setting up relu2
I0428 20:26:58.858492  2902 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:58.858495  2902 net.cpp:139] Memory required for data: 29258800
I0428 20:26:58.858499  2902 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:58.858503  2902 net.cpp:86] Creating Layer ip3
I0428 20:26:58.858506  2902 net.cpp:408] ip3 <- ip2
I0428 20:26:58.858511  2902 net.cpp:382] ip3 -> ip3
I0428 20:26:58.858645  2902 net.cpp:124] Setting up ip3
I0428 20:26:58.858654  2902 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:58.858656  2902 net.cpp:139] Memory required for data: 29262800
I0428 20:26:58.858664  2902 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:58.858669  2902 net.cpp:86] Creating Layer relu3
I0428 20:26:58.858671  2902 net.cpp:408] relu3 <- ip3
I0428 20:26:58.858675  2902 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:58.859608  2902 net.cpp:124] Setting up relu3
I0428 20:26:58.859619  2902 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:58.859623  2902 net.cpp:139] Memory required for data: 29266800
I0428 20:26:58.859627  2902 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:58.859632  2902 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:58.859635  2902 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:58.859640  2902 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:58.859647  2902 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:58.859683  2902 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:58.859688  2902 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:58.859690  2902 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:58.859694  2902 net.cpp:139] Memory required for data: 29274800
I0428 20:26:58.859697  2902 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:58.859702  2902 net.cpp:86] Creating Layer accuracy
I0428 20:26:58.859705  2902 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:58.859709  2902 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:58.859714  2902 net.cpp:382] accuracy -> accuracy
I0428 20:26:58.859720  2902 net.cpp:124] Setting up accuracy
I0428 20:26:58.859724  2902 net.cpp:131] Top shape: (1)
I0428 20:26:58.859729  2902 net.cpp:139] Memory required for data: 29274804
I0428 20:26:58.859731  2902 layer_factory.hpp:77] Creating layer loss
I0428 20:26:58.859735  2902 net.cpp:86] Creating Layer loss
I0428 20:26:58.859738  2902 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:58.859742  2902 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:58.859746  2902 net.cpp:382] loss -> loss
I0428 20:26:58.859752  2902 layer_factory.hpp:77] Creating layer loss
I0428 20:26:58.859988  2902 net.cpp:124] Setting up loss
I0428 20:26:58.859998  2902 net.cpp:131] Top shape: (1)
I0428 20:26:58.860002  2902 net.cpp:134]     with loss weight 1
I0428 20:26:58.860018  2902 net.cpp:139] Memory required for data: 29274808
I0428 20:26:58.860023  2902 net.cpp:200] loss needs backward computation.
I0428 20:26:58.860025  2902 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:58.860030  2902 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:58.860033  2902 net.cpp:200] relu3 needs backward computation.
I0428 20:26:58.860036  2902 net.cpp:200] ip3 needs backward computation.
I0428 20:26:58.860039  2902 net.cpp:200] relu2 needs backward computation.
I0428 20:26:58.860064  2902 net.cpp:200] ip2 needs backward computation.
I0428 20:26:58.860067  2902 net.cpp:200] relu1 needs backward computation.
I0428 20:26:58.860070  2902 net.cpp:200] ip1 needs backward computation.
I0428 20:26:58.860074  2902 net.cpp:200] pool1 needs backward computation.
I0428 20:26:58.860077  2902 net.cpp:200] conv1 needs backward computation.
I0428 20:26:58.860080  2902 net.cpp:200] pool0 needs backward computation.
I0428 20:26:58.860088  2902 net.cpp:200] conv0 needs backward computation.
I0428 20:26:58.860092  2902 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:58.860096  2902 net.cpp:202] mnist does not need backward computation.
I0428 20:26:58.860100  2902 net.cpp:244] This network produces output accuracy
I0428 20:26:58.860102  2902 net.cpp:244] This network produces output loss
I0428 20:26:58.860112  2902 net.cpp:257] Network initialization done.
I0428 20:26:58.860170  2902 solver.cpp:56] Solver scaffolding done.
I0428 20:26:58.860599  2902 caffe.cpp:248] Starting Optimization
I0428 20:26:58.860604  2902 solver.cpp:273] Solving LeNet
I0428 20:26:58.860606  2902 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:58.861531  2902 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:58.955379  2909 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:58.957845  2902 solver.cpp:398]     Test net output #0: accuracy = 0.0923
I0428 20:26:58.957881  2902 solver.cpp:398]     Test net output #1: loss = 2.32142 (* 1 = 2.32142 loss)
I0428 20:26:58.962196  2902 solver.cpp:219] Iteration 0 (-8.80911e-31 iter/s, 0.101547s/100 iters), loss = 2.30974
I0428 20:26:58.962219  2902 solver.cpp:238]     Train net output #0: loss = 2.30974 (* 1 = 2.30974 loss)
I0428 20:26:58.962231  2902 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:59.169384  2902 solver.cpp:219] Iteration 100 (482.747 iter/s, 0.207148s/100 iters), loss = 1.02463
I0428 20:26:59.169425  2902 solver.cpp:238]     Train net output #0: loss = 1.02463 (* 1 = 1.02463 loss)
I0428 20:26:59.169431  2902 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:59.377769  2902 solver.cpp:219] Iteration 200 (480.02 iter/s, 0.208325s/100 iters), loss = 0.743281
I0428 20:26:59.377813  2902 solver.cpp:238]     Train net output #0: loss = 0.743281 (* 1 = 0.743281 loss)
I0428 20:26:59.377825  2902 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:59.592900  2902 solver.cpp:219] Iteration 300 (464.966 iter/s, 0.21507s/100 iters), loss = 0.701389
I0428 20:26:59.592943  2902 solver.cpp:238]     Train net output #0: loss = 0.701389 (* 1 = 0.701389 loss)
I0428 20:26:59.592954  2902 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:59.811127  2902 solver.cpp:219] Iteration 400 (458.371 iter/s, 0.218164s/100 iters), loss = 0.387432
I0428 20:26:59.811180  2902 solver.cpp:238]     Train net output #0: loss = 0.387432 (* 1 = 0.387432 loss)
I0428 20:26:59.811193  2902 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:00.028273  2902 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:00.134284  2909 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:00.136672  2902 solver.cpp:398]     Test net output #0: accuracy = 0.8389
I0428 20:27:00.136703  2902 solver.cpp:398]     Test net output #1: loss = 0.439307 (* 1 = 0.439307 loss)
I0428 20:27:00.138712  2902 solver.cpp:219] Iteration 500 (305.33 iter/s, 0.327514s/100 iters), loss = 0.342092
I0428 20:27:00.138744  2902 solver.cpp:238]     Train net output #0: loss = 0.342092 (* 1 = 0.342092 loss)
I0428 20:27:00.138772  2902 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:00.354192  2902 solver.cpp:219] Iteration 600 (464.196 iter/s, 0.215426s/100 iters), loss = 0.357089
I0428 20:27:00.354249  2902 solver.cpp:238]     Train net output #0: loss = 0.357089 (* 1 = 0.357089 loss)
I0428 20:27:00.354262  2902 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:00.574605  2902 solver.cpp:219] Iteration 700 (453.844 iter/s, 0.22034s/100 iters), loss = 0.688432
I0428 20:27:00.574656  2902 solver.cpp:238]     Train net output #0: loss = 0.688432 (* 1 = 0.688432 loss)
I0428 20:27:00.574668  2902 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:00.792889  2902 solver.cpp:219] Iteration 800 (458.263 iter/s, 0.218215s/100 iters), loss = 0.456908
I0428 20:27:00.792935  2902 solver.cpp:238]     Train net output #0: loss = 0.456908 (* 1 = 0.456908 loss)
I0428 20:27:00.792948  2902 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:01.011651  2902 solver.cpp:219] Iteration 900 (457.256 iter/s, 0.218696s/100 iters), loss = 0.486257
I0428 20:27:01.011706  2902 solver.cpp:238]     Train net output #0: loss = 0.486257 (* 1 = 0.486257 loss)
I0428 20:27:01.011720  2902 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:01.086135  2908 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:01.228222  2902 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:01.230131  2902 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:01.231369  2902 solver.cpp:311] Iteration 1000, loss = 0.455125
I0428 20:27:01.231401  2902 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:01.335499  2909 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:01.338013  2902 solver.cpp:398]     Test net output #0: accuracy = 0.8667
I0428 20:27:01.338038  2902 solver.cpp:398]     Test net output #1: loss = 0.348266 (* 1 = 0.348266 loss)
I0428 20:27:01.338044  2902 solver.cpp:316] Optimization Done.
I0428 20:27:01.338048  2902 caffe.cpp:259] Optimization Done.
