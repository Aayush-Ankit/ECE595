I0428 19:30:30.927865 22308 caffe.cpp:218] Using GPUs 0
I0428 19:30:30.969158 22308 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:31.449117 22308 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test93.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:31.449323 22308 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test93.prototxt
I0428 19:30:31.449628 22308 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:31.449645 22308 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:31.449718 22308 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:31.449802 22308 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:31.449906 22308 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:31.449931 22308 net.cpp:86] Creating Layer mnist
I0428 19:30:31.449942 22308 net.cpp:382] mnist -> data
I0428 19:30:31.449966 22308 net.cpp:382] mnist -> label
I0428 19:30:31.451000 22308 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:31.453274 22308 net.cpp:124] Setting up mnist
I0428 19:30:31.453292 22308 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:31.453315 22308 net.cpp:131] Top shape: 64 (64)
I0428 19:30:31.453320 22308 net.cpp:139] Memory required for data: 200960
I0428 19:30:31.453330 22308 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:31.453351 22308 net.cpp:86] Creating Layer conv0
I0428 19:30:31.453361 22308 net.cpp:408] conv0 <- data
I0428 19:30:31.453379 22308 net.cpp:382] conv0 -> conv0
I0428 19:30:31.680907 22308 net.cpp:124] Setting up conv0
I0428 19:30:31.680936 22308 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:31.680941 22308 net.cpp:139] Memory required for data: 938240
I0428 19:30:31.680963 22308 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:31.680994 22308 net.cpp:86] Creating Layer pool0
I0428 19:30:31.681022 22308 net.cpp:408] pool0 <- conv0
I0428 19:30:31.681032 22308 net.cpp:382] pool0 -> pool0
I0428 19:30:31.681089 22308 net.cpp:124] Setting up pool0
I0428 19:30:31.681098 22308 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:31.681103 22308 net.cpp:139] Memory required for data: 1122560
I0428 19:30:31.681108 22308 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:31.681119 22308 net.cpp:86] Creating Layer ip1
I0428 19:30:31.681125 22308 net.cpp:408] ip1 <- pool0
I0428 19:30:31.681133 22308 net.cpp:382] ip1 -> ip1
I0428 19:30:31.682163 22308 net.cpp:124] Setting up ip1
I0428 19:30:31.682193 22308 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:31.682199 22308 net.cpp:139] Memory required for data: 1125120
I0428 19:30:31.682211 22308 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:31.682221 22308 net.cpp:86] Creating Layer relu1
I0428 19:30:31.682231 22308 net.cpp:408] relu1 <- ip1
I0428 19:30:31.682240 22308 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:31.682415 22308 net.cpp:124] Setting up relu1
I0428 19:30:31.682425 22308 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:31.682430 22308 net.cpp:139] Memory required for data: 1127680
I0428 19:30:31.682435 22308 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:31.682443 22308 net.cpp:86] Creating Layer ip2
I0428 19:30:31.682448 22308 net.cpp:408] ip2 <- ip1
I0428 19:30:31.682456 22308 net.cpp:382] ip2 -> ip2
I0428 19:30:31.682551 22308 net.cpp:124] Setting up ip2
I0428 19:30:31.682560 22308 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:31.682565 22308 net.cpp:139] Memory required for data: 1134080
I0428 19:30:31.682576 22308 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:31.682584 22308 net.cpp:86] Creating Layer relu2
I0428 19:30:31.682590 22308 net.cpp:408] relu2 <- ip2
I0428 19:30:31.682597 22308 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:31.683351 22308 net.cpp:124] Setting up relu2
I0428 19:30:31.683365 22308 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:31.683372 22308 net.cpp:139] Memory required for data: 1140480
I0428 19:30:31.683377 22308 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:31.683388 22308 net.cpp:86] Creating Layer ip3
I0428 19:30:31.683394 22308 net.cpp:408] ip3 <- ip2
I0428 19:30:31.683403 22308 net.cpp:382] ip3 -> ip3
I0428 19:30:31.683518 22308 net.cpp:124] Setting up ip3
I0428 19:30:31.683527 22308 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:31.683532 22308 net.cpp:139] Memory required for data: 1143040
I0428 19:30:31.683542 22308 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:31.683552 22308 net.cpp:86] Creating Layer relu3
I0428 19:30:31.683571 22308 net.cpp:408] relu3 <- ip3
I0428 19:30:31.683579 22308 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:31.683737 22308 net.cpp:124] Setting up relu3
I0428 19:30:31.683745 22308 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:31.683749 22308 net.cpp:139] Memory required for data: 1145600
I0428 19:30:31.683754 22308 layer_factory.hpp:77] Creating layer loss
I0428 19:30:31.683763 22308 net.cpp:86] Creating Layer loss
I0428 19:30:31.683768 22308 net.cpp:408] loss <- ip3
I0428 19:30:31.683773 22308 net.cpp:408] loss <- label
I0428 19:30:31.683781 22308 net.cpp:382] loss -> loss
I0428 19:30:31.683804 22308 layer_factory.hpp:77] Creating layer loss
I0428 19:30:31.684012 22308 net.cpp:124] Setting up loss
I0428 19:30:31.684022 22308 net.cpp:131] Top shape: (1)
I0428 19:30:31.684026 22308 net.cpp:134]     with loss weight 1
I0428 19:30:31.684046 22308 net.cpp:139] Memory required for data: 1145604
I0428 19:30:31.684051 22308 net.cpp:200] loss needs backward computation.
I0428 19:30:31.684057 22308 net.cpp:200] relu3 needs backward computation.
I0428 19:30:31.684062 22308 net.cpp:200] ip3 needs backward computation.
I0428 19:30:31.684067 22308 net.cpp:200] relu2 needs backward computation.
I0428 19:30:31.684072 22308 net.cpp:200] ip2 needs backward computation.
I0428 19:30:31.684077 22308 net.cpp:200] relu1 needs backward computation.
I0428 19:30:31.684095 22308 net.cpp:200] ip1 needs backward computation.
I0428 19:30:31.684109 22308 net.cpp:200] pool0 needs backward computation.
I0428 19:30:31.684114 22308 net.cpp:200] conv0 needs backward computation.
I0428 19:30:31.684119 22308 net.cpp:202] mnist does not need backward computation.
I0428 19:30:31.684124 22308 net.cpp:244] This network produces output loss
I0428 19:30:31.684135 22308 net.cpp:257] Network initialization done.
I0428 19:30:31.684417 22308 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test93.prototxt
I0428 19:30:31.684461 22308 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:31.684593 22308 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:31.684705 22308 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:31.684764 22308 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:31.684782 22308 net.cpp:86] Creating Layer mnist
I0428 19:30:31.684789 22308 net.cpp:382] mnist -> data
I0428 19:30:31.684801 22308 net.cpp:382] mnist -> label
I0428 19:30:31.684973 22308 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:31.687095 22308 net.cpp:124] Setting up mnist
I0428 19:30:31.687125 22308 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:31.687134 22308 net.cpp:131] Top shape: 100 (100)
I0428 19:30:31.687139 22308 net.cpp:139] Memory required for data: 314000
I0428 19:30:31.687144 22308 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:31.687173 22308 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:31.687180 22308 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:31.687188 22308 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:31.687214 22308 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:31.687281 22308 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:31.687290 22308 net.cpp:131] Top shape: 100 (100)
I0428 19:30:31.687296 22308 net.cpp:131] Top shape: 100 (100)
I0428 19:30:31.687302 22308 net.cpp:139] Memory required for data: 314800
I0428 19:30:31.687335 22308 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:31.687350 22308 net.cpp:86] Creating Layer conv0
I0428 19:30:31.687356 22308 net.cpp:408] conv0 <- data
I0428 19:30:31.687366 22308 net.cpp:382] conv0 -> conv0
I0428 19:30:31.688948 22308 net.cpp:124] Setting up conv0
I0428 19:30:31.688964 22308 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:31.688971 22308 net.cpp:139] Memory required for data: 1466800
I0428 19:30:31.688985 22308 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:31.688995 22308 net.cpp:86] Creating Layer pool0
I0428 19:30:31.689003 22308 net.cpp:408] pool0 <- conv0
I0428 19:30:31.689012 22308 net.cpp:382] pool0 -> pool0
I0428 19:30:31.689080 22308 net.cpp:124] Setting up pool0
I0428 19:30:31.689088 22308 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:31.689093 22308 net.cpp:139] Memory required for data: 1754800
I0428 19:30:31.689098 22308 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:31.689108 22308 net.cpp:86] Creating Layer ip1
I0428 19:30:31.689113 22308 net.cpp:408] ip1 <- pool0
I0428 19:30:31.689121 22308 net.cpp:382] ip1 -> ip1
I0428 19:30:31.689309 22308 net.cpp:124] Setting up ip1
I0428 19:30:31.689318 22308 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:31.689323 22308 net.cpp:139] Memory required for data: 1758800
I0428 19:30:31.689334 22308 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:31.689342 22308 net.cpp:86] Creating Layer relu1
I0428 19:30:31.689347 22308 net.cpp:408] relu1 <- ip1
I0428 19:30:31.689354 22308 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:31.689602 22308 net.cpp:124] Setting up relu1
I0428 19:30:31.689613 22308 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:31.689620 22308 net.cpp:139] Memory required for data: 1762800
I0428 19:30:31.689625 22308 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:31.689633 22308 net.cpp:86] Creating Layer ip2
I0428 19:30:31.689640 22308 net.cpp:408] ip2 <- ip1
I0428 19:30:31.689648 22308 net.cpp:382] ip2 -> ip2
I0428 19:30:31.689766 22308 net.cpp:124] Setting up ip2
I0428 19:30:31.689790 22308 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:31.689795 22308 net.cpp:139] Memory required for data: 1772800
I0428 19:30:31.689808 22308 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:31.689815 22308 net.cpp:86] Creating Layer relu2
I0428 19:30:31.689822 22308 net.cpp:408] relu2 <- ip2
I0428 19:30:31.689829 22308 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:31.690599 22308 net.cpp:124] Setting up relu2
I0428 19:30:31.690611 22308 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:31.690616 22308 net.cpp:139] Memory required for data: 1782800
I0428 19:30:31.690621 22308 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:31.690632 22308 net.cpp:86] Creating Layer ip3
I0428 19:30:31.690639 22308 net.cpp:408] ip3 <- ip2
I0428 19:30:31.690646 22308 net.cpp:382] ip3 -> ip3
I0428 19:30:31.690865 22308 net.cpp:124] Setting up ip3
I0428 19:30:31.690876 22308 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:31.690881 22308 net.cpp:139] Memory required for data: 1786800
I0428 19:30:31.690891 22308 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:31.690899 22308 net.cpp:86] Creating Layer relu3
I0428 19:30:31.690906 22308 net.cpp:408] relu3 <- ip3
I0428 19:30:31.690913 22308 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:31.691103 22308 net.cpp:124] Setting up relu3
I0428 19:30:31.691128 22308 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:31.691133 22308 net.cpp:139] Memory required for data: 1790800
I0428 19:30:31.691138 22308 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:31.691145 22308 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:31.691150 22308 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:31.691159 22308 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:31.691167 22308 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:31.691206 22308 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:31.691215 22308 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:31.691220 22308 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:31.691237 22308 net.cpp:139] Memory required for data: 1798800
I0428 19:30:31.691242 22308 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:31.691251 22308 net.cpp:86] Creating Layer accuracy
I0428 19:30:31.691256 22308 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:31.691263 22308 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:31.691270 22308 net.cpp:382] accuracy -> accuracy
I0428 19:30:31.691282 22308 net.cpp:124] Setting up accuracy
I0428 19:30:31.691289 22308 net.cpp:131] Top shape: (1)
I0428 19:30:31.691294 22308 net.cpp:139] Memory required for data: 1798804
I0428 19:30:31.691299 22308 layer_factory.hpp:77] Creating layer loss
I0428 19:30:31.691306 22308 net.cpp:86] Creating Layer loss
I0428 19:30:31.691311 22308 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:31.691318 22308 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:31.691324 22308 net.cpp:382] loss -> loss
I0428 19:30:31.691334 22308 layer_factory.hpp:77] Creating layer loss
I0428 19:30:31.691565 22308 net.cpp:124] Setting up loss
I0428 19:30:31.691575 22308 net.cpp:131] Top shape: (1)
I0428 19:30:31.691579 22308 net.cpp:134]     with loss weight 1
I0428 19:30:31.691588 22308 net.cpp:139] Memory required for data: 1798808
I0428 19:30:31.691593 22308 net.cpp:200] loss needs backward computation.
I0428 19:30:31.691599 22308 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:31.691606 22308 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:31.691612 22308 net.cpp:200] relu3 needs backward computation.
I0428 19:30:31.691615 22308 net.cpp:200] ip3 needs backward computation.
I0428 19:30:31.691620 22308 net.cpp:200] relu2 needs backward computation.
I0428 19:30:31.691625 22308 net.cpp:200] ip2 needs backward computation.
I0428 19:30:31.691630 22308 net.cpp:200] relu1 needs backward computation.
I0428 19:30:31.691634 22308 net.cpp:200] ip1 needs backward computation.
I0428 19:30:31.691639 22308 net.cpp:200] pool0 needs backward computation.
I0428 19:30:31.691645 22308 net.cpp:200] conv0 needs backward computation.
I0428 19:30:31.691650 22308 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:31.691656 22308 net.cpp:202] mnist does not need backward computation.
I0428 19:30:31.691660 22308 net.cpp:244] This network produces output accuracy
I0428 19:30:31.691666 22308 net.cpp:244] This network produces output loss
I0428 19:30:31.691680 22308 net.cpp:257] Network initialization done.
I0428 19:30:31.691720 22308 solver.cpp:56] Solver scaffolding done.
I0428 19:30:31.692021 22308 caffe.cpp:248] Starting Optimization
I0428 19:30:31.692028 22308 solver.cpp:273] Solving LeNet
I0428 19:30:31.692034 22308 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:31.692185 22308 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:31.696988 22308 blocking_queue.cpp:49] Waiting for data
I0428 19:30:31.748338 22317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:31.748747 22308 solver.cpp:398]     Test net output #0: accuracy = 0.0867
I0428 19:30:31.748766 22308 solver.cpp:398]     Test net output #1: loss = 2.30662 (* 1 = 2.30662 loss)
I0428 19:30:31.750416 22308 solver.cpp:219] Iteration 0 (-3.67669e-15 iter/s, 0.0583545s/100 iters), loss = 2.30899
I0428 19:30:31.750442 22308 solver.cpp:238]     Train net output #0: loss = 2.30899 (* 1 = 2.30899 loss)
I0428 19:30:31.750461 22308 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:31.809666 22308 solver.cpp:219] Iteration 100 (1688.83 iter/s, 0.0592124s/100 iters), loss = 0.53133
I0428 19:30:31.809717 22308 solver.cpp:238]     Train net output #0: loss = 0.53133 (* 1 = 0.53133 loss)
I0428 19:30:31.809733 22308 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:31.869405 22308 solver.cpp:219] Iteration 200 (1675.12 iter/s, 0.0596971s/100 iters), loss = 0.388961
I0428 19:30:31.869452 22308 solver.cpp:238]     Train net output #0: loss = 0.388961 (* 1 = 0.388961 loss)
I0428 19:30:31.869477 22308 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:31.925842 22308 solver.cpp:219] Iteration 300 (1773.53 iter/s, 0.0563848s/100 iters), loss = 0.401591
I0428 19:30:31.925868 22308 solver.cpp:238]     Train net output #0: loss = 0.401591 (* 1 = 0.401591 loss)
I0428 19:30:31.925891 22308 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:31.983033 22308 solver.cpp:219] Iteration 400 (1749.48 iter/s, 0.0571597s/100 iters), loss = 0.198545
I0428 19:30:31.983057 22308 solver.cpp:238]     Train net output #0: loss = 0.198545 (* 1 = 0.198545 loss)
I0428 19:30:31.983083 22308 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:32.039608 22308 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:32.091965 22317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:32.092386 22308 solver.cpp:398]     Test net output #0: accuracy = 0.9271
I0428 19:30:32.092404 22308 solver.cpp:398]     Test net output #1: loss = 0.238212 (* 1 = 0.238212 loss)
I0428 19:30:32.093035 22308 solver.cpp:219] Iteration 500 (909.369 iter/s, 0.109966s/100 iters), loss = 0.270371
I0428 19:30:32.093081 22308 solver.cpp:238]     Train net output #0: loss = 0.270371 (* 1 = 0.270371 loss)
I0428 19:30:32.093096 22308 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:32.151062 22308 solver.cpp:219] Iteration 600 (1724.58 iter/s, 0.057985s/100 iters), loss = 0.195604
I0428 19:30:32.151129 22308 solver.cpp:238]     Train net output #0: loss = 0.195604 (* 1 = 0.195604 loss)
I0428 19:30:32.151139 22308 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:32.211509 22308 solver.cpp:219] Iteration 700 (1656.32 iter/s, 0.0603747s/100 iters), loss = 0.285137
I0428 19:30:32.211560 22308 solver.cpp:238]     Train net output #0: loss = 0.285137 (* 1 = 0.285137 loss)
I0428 19:30:32.211572 22308 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:32.267827 22308 solver.cpp:219] Iteration 800 (1776.84 iter/s, 0.0562796s/100 iters), loss = 0.34773
I0428 19:30:32.267853 22308 solver.cpp:238]     Train net output #0: loss = 0.34773 (* 1 = 0.34773 loss)
I0428 19:30:32.267879 22308 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:32.323385 22308 solver.cpp:219] Iteration 900 (1800.98 iter/s, 0.0555254s/100 iters), loss = 0.287137
I0428 19:30:32.323410 22308 solver.cpp:238]     Train net output #0: loss = 0.287137 (* 1 = 0.287137 loss)
I0428 19:30:32.323434 22308 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:32.342515 22316 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:32.379267 22308 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:32.379900 22308 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:32.380340 22308 solver.cpp:311] Iteration 1000, loss = 0.248435
I0428 19:30:32.380355 22308 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:32.432432 22317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:32.432847 22308 solver.cpp:398]     Test net output #0: accuracy = 0.945
I0428 19:30:32.432868 22308 solver.cpp:398]     Test net output #1: loss = 0.169643 (* 1 = 0.169643 loss)
I0428 19:30:32.432876 22308 solver.cpp:316] Optimization Done.
I0428 19:30:32.432880 22308 caffe.cpp:259] Optimization Done.
