I0428 20:18:42.552783  1197 caffe.cpp:218] Using GPUs 0
I0428 20:18:42.582844  1197 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:43.025900  1197 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1325.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:43.026036  1197 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1325.prototxt
I0428 20:18:43.026397  1197 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:43.026428  1197 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:43.026510  1197 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:43.026576  1197 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:43.026656  1197 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:43.026690  1197 net.cpp:86] Creating Layer mnist
I0428 20:18:43.026696  1197 net.cpp:382] mnist -> data
I0428 20:18:43.026731  1197 net.cpp:382] mnist -> label
I0428 20:18:43.027737  1197 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:43.029975  1197 net.cpp:124] Setting up mnist
I0428 20:18:43.029990  1197 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:43.029994  1197 net.cpp:131] Top shape: 64 (64)
I0428 20:18:43.029997  1197 net.cpp:139] Memory required for data: 200960
I0428 20:18:43.030004  1197 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:43.030017  1197 net.cpp:86] Creating Layer conv0
I0428 20:18:43.030035  1197 net.cpp:408] conv0 <- data
I0428 20:18:43.030045  1197 net.cpp:382] conv0 -> conv0
I0428 20:18:43.263859  1197 net.cpp:124] Setting up conv0
I0428 20:18:43.263883  1197 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:43.263887  1197 net.cpp:139] Memory required for data: 7573760
I0428 20:18:43.263902  1197 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:43.263914  1197 net.cpp:86] Creating Layer pool0
I0428 20:18:43.263917  1197 net.cpp:408] pool0 <- conv0
I0428 20:18:43.263922  1197 net.cpp:382] pool0 -> pool0
I0428 20:18:43.263983  1197 net.cpp:124] Setting up pool0
I0428 20:18:43.263990  1197 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:43.263993  1197 net.cpp:139] Memory required for data: 9416960
I0428 20:18:43.263996  1197 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:43.264006  1197 net.cpp:86] Creating Layer conv1
I0428 20:18:43.264009  1197 net.cpp:408] conv1 <- pool0
I0428 20:18:43.264014  1197 net.cpp:382] conv1 -> conv1
I0428 20:18:43.266813  1197 net.cpp:124] Setting up conv1
I0428 20:18:43.266845  1197 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:43.266849  1197 net.cpp:139] Memory required for data: 9580800
I0428 20:18:43.266857  1197 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:43.266865  1197 net.cpp:86] Creating Layer pool1
I0428 20:18:43.266882  1197 net.cpp:408] pool1 <- conv1
I0428 20:18:43.266887  1197 net.cpp:382] pool1 -> pool1
I0428 20:18:43.266940  1197 net.cpp:124] Setting up pool1
I0428 20:18:43.266947  1197 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:43.266950  1197 net.cpp:139] Memory required for data: 9621760
I0428 20:18:43.266953  1197 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:43.266960  1197 net.cpp:86] Creating Layer ip1
I0428 20:18:43.266963  1197 net.cpp:408] ip1 <- pool1
I0428 20:18:43.266968  1197 net.cpp:382] ip1 -> ip1
I0428 20:18:43.267109  1197 net.cpp:124] Setting up ip1
I0428 20:18:43.267117  1197 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:43.267118  1197 net.cpp:139] Memory required for data: 9634560
I0428 20:18:43.267125  1197 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:43.267135  1197 net.cpp:86] Creating Layer relu1
I0428 20:18:43.267138  1197 net.cpp:408] relu1 <- ip1
I0428 20:18:43.267143  1197 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:43.267318  1197 net.cpp:124] Setting up relu1
I0428 20:18:43.267325  1197 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:43.267328  1197 net.cpp:139] Memory required for data: 9647360
I0428 20:18:43.267331  1197 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:43.267338  1197 net.cpp:86] Creating Layer ip2
I0428 20:18:43.267341  1197 net.cpp:408] ip2 <- ip1
I0428 20:18:43.267346  1197 net.cpp:382] ip2 -> ip2
I0428 20:18:43.267464  1197 net.cpp:124] Setting up ip2
I0428 20:18:43.267472  1197 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:43.267475  1197 net.cpp:139] Memory required for data: 9660160
I0428 20:18:43.267480  1197 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:43.267487  1197 net.cpp:86] Creating Layer relu2
I0428 20:18:43.267489  1197 net.cpp:408] relu2 <- ip2
I0428 20:18:43.267493  1197 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:43.268283  1197 net.cpp:124] Setting up relu2
I0428 20:18:43.268295  1197 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:43.268314  1197 net.cpp:139] Memory required for data: 9672960
I0428 20:18:43.268317  1197 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:43.268326  1197 net.cpp:86] Creating Layer ip3
I0428 20:18:43.268328  1197 net.cpp:408] ip3 <- ip2
I0428 20:18:43.268334  1197 net.cpp:382] ip3 -> ip3
I0428 20:18:43.268435  1197 net.cpp:124] Setting up ip3
I0428 20:18:43.268443  1197 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:43.268445  1197 net.cpp:139] Memory required for data: 9675520
I0428 20:18:43.268453  1197 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:43.268457  1197 net.cpp:86] Creating Layer relu3
I0428 20:18:43.268460  1197 net.cpp:408] relu3 <- ip3
I0428 20:18:43.268465  1197 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:43.268649  1197 net.cpp:124] Setting up relu3
I0428 20:18:43.268658  1197 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:43.268661  1197 net.cpp:139] Memory required for data: 9678080
I0428 20:18:43.268664  1197 layer_factory.hpp:77] Creating layer loss
I0428 20:18:43.268669  1197 net.cpp:86] Creating Layer loss
I0428 20:18:43.268673  1197 net.cpp:408] loss <- ip3
I0428 20:18:43.268676  1197 net.cpp:408] loss <- label
I0428 20:18:43.268683  1197 net.cpp:382] loss -> loss
I0428 20:18:43.268697  1197 layer_factory.hpp:77] Creating layer loss
I0428 20:18:43.268993  1197 net.cpp:124] Setting up loss
I0428 20:18:43.269003  1197 net.cpp:131] Top shape: (1)
I0428 20:18:43.269006  1197 net.cpp:134]     with loss weight 1
I0428 20:18:43.269021  1197 net.cpp:139] Memory required for data: 9678084
I0428 20:18:43.269023  1197 net.cpp:200] loss needs backward computation.
I0428 20:18:43.269027  1197 net.cpp:200] relu3 needs backward computation.
I0428 20:18:43.269031  1197 net.cpp:200] ip3 needs backward computation.
I0428 20:18:43.269032  1197 net.cpp:200] relu2 needs backward computation.
I0428 20:18:43.269035  1197 net.cpp:200] ip2 needs backward computation.
I0428 20:18:43.269038  1197 net.cpp:200] relu1 needs backward computation.
I0428 20:18:43.269042  1197 net.cpp:200] ip1 needs backward computation.
I0428 20:18:43.269044  1197 net.cpp:200] pool1 needs backward computation.
I0428 20:18:43.269047  1197 net.cpp:200] conv1 needs backward computation.
I0428 20:18:43.269050  1197 net.cpp:200] pool0 needs backward computation.
I0428 20:18:43.269052  1197 net.cpp:200] conv0 needs backward computation.
I0428 20:18:43.269057  1197 net.cpp:202] mnist does not need backward computation.
I0428 20:18:43.269058  1197 net.cpp:244] This network produces output loss
I0428 20:18:43.269068  1197 net.cpp:257] Network initialization done.
I0428 20:18:43.269423  1197 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1325.prototxt
I0428 20:18:43.269466  1197 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:43.269562  1197 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:43.269659  1197 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:43.269702  1197 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:43.269716  1197 net.cpp:86] Creating Layer mnist
I0428 20:18:43.269721  1197 net.cpp:382] mnist -> data
I0428 20:18:43.269727  1197 net.cpp:382] mnist -> label
I0428 20:18:43.269814  1197 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:43.271793  1197 net.cpp:124] Setting up mnist
I0428 20:18:43.271808  1197 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:43.271812  1197 net.cpp:131] Top shape: 100 (100)
I0428 20:18:43.271816  1197 net.cpp:139] Memory required for data: 314000
I0428 20:18:43.271819  1197 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:43.271826  1197 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:43.271829  1197 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:43.271834  1197 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:43.271841  1197 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:43.271937  1197 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:43.271944  1197 net.cpp:131] Top shape: 100 (100)
I0428 20:18:43.271948  1197 net.cpp:131] Top shape: 100 (100)
I0428 20:18:43.271950  1197 net.cpp:139] Memory required for data: 314800
I0428 20:18:43.271953  1197 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:43.271962  1197 net.cpp:86] Creating Layer conv0
I0428 20:18:43.271965  1197 net.cpp:408] conv0 <- data
I0428 20:18:43.271971  1197 net.cpp:382] conv0 -> conv0
I0428 20:18:43.273545  1197 net.cpp:124] Setting up conv0
I0428 20:18:43.273557  1197 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:43.273561  1197 net.cpp:139] Memory required for data: 11834800
I0428 20:18:43.273586  1197 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:43.273615  1197 net.cpp:86] Creating Layer pool0
I0428 20:18:43.273620  1197 net.cpp:408] pool0 <- conv0
I0428 20:18:43.273627  1197 net.cpp:382] pool0 -> pool0
I0428 20:18:43.273713  1197 net.cpp:124] Setting up pool0
I0428 20:18:43.273721  1197 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:43.273723  1197 net.cpp:139] Memory required for data: 14714800
I0428 20:18:43.273726  1197 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:43.273736  1197 net.cpp:86] Creating Layer conv1
I0428 20:18:43.273739  1197 net.cpp:408] conv1 <- pool0
I0428 20:18:43.273746  1197 net.cpp:382] conv1 -> conv1
I0428 20:18:43.275358  1197 net.cpp:124] Setting up conv1
I0428 20:18:43.275372  1197 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:43.275377  1197 net.cpp:139] Memory required for data: 14970800
I0428 20:18:43.275385  1197 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:43.275393  1197 net.cpp:86] Creating Layer pool1
I0428 20:18:43.275395  1197 net.cpp:408] pool1 <- conv1
I0428 20:18:43.275401  1197 net.cpp:382] pool1 -> pool1
I0428 20:18:43.275439  1197 net.cpp:124] Setting up pool1
I0428 20:18:43.275446  1197 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:43.275449  1197 net.cpp:139] Memory required for data: 15034800
I0428 20:18:43.275451  1197 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:43.275475  1197 net.cpp:86] Creating Layer ip1
I0428 20:18:43.275478  1197 net.cpp:408] ip1 <- pool1
I0428 20:18:43.275485  1197 net.cpp:382] ip1 -> ip1
I0428 20:18:43.275631  1197 net.cpp:124] Setting up ip1
I0428 20:18:43.275640  1197 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:43.275655  1197 net.cpp:139] Memory required for data: 15054800
I0428 20:18:43.275663  1197 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:43.275668  1197 net.cpp:86] Creating Layer relu1
I0428 20:18:43.275672  1197 net.cpp:408] relu1 <- ip1
I0428 20:18:43.275679  1197 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:43.275925  1197 net.cpp:124] Setting up relu1
I0428 20:18:43.275934  1197 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:43.275938  1197 net.cpp:139] Memory required for data: 15074800
I0428 20:18:43.275941  1197 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:43.275949  1197 net.cpp:86] Creating Layer ip2
I0428 20:18:43.275952  1197 net.cpp:408] ip2 <- ip1
I0428 20:18:43.275959  1197 net.cpp:382] ip2 -> ip2
I0428 20:18:43.276073  1197 net.cpp:124] Setting up ip2
I0428 20:18:43.276082  1197 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:43.276084  1197 net.cpp:139] Memory required for data: 15094800
I0428 20:18:43.276089  1197 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:43.276094  1197 net.cpp:86] Creating Layer relu2
I0428 20:18:43.276098  1197 net.cpp:408] relu2 <- ip2
I0428 20:18:43.276108  1197 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:43.276266  1197 net.cpp:124] Setting up relu2
I0428 20:18:43.276278  1197 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:43.276280  1197 net.cpp:139] Memory required for data: 15114800
I0428 20:18:43.276283  1197 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:43.276290  1197 net.cpp:86] Creating Layer ip3
I0428 20:18:43.276293  1197 net.cpp:408] ip3 <- ip2
I0428 20:18:43.276298  1197 net.cpp:382] ip3 -> ip3
I0428 20:18:43.276414  1197 net.cpp:124] Setting up ip3
I0428 20:18:43.276422  1197 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:43.276425  1197 net.cpp:139] Memory required for data: 15118800
I0428 20:18:43.276433  1197 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:43.276439  1197 net.cpp:86] Creating Layer relu3
I0428 20:18:43.276443  1197 net.cpp:408] relu3 <- ip3
I0428 20:18:43.276451  1197 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:43.277345  1197 net.cpp:124] Setting up relu3
I0428 20:18:43.277359  1197 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:43.277364  1197 net.cpp:139] Memory required for data: 15122800
I0428 20:18:43.277366  1197 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:43.277372  1197 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:43.277375  1197 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:43.277380  1197 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:43.277387  1197 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:43.277426  1197 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:43.277432  1197 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:43.277436  1197 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:43.277439  1197 net.cpp:139] Memory required for data: 15130800
I0428 20:18:43.277442  1197 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:43.277447  1197 net.cpp:86] Creating Layer accuracy
I0428 20:18:43.277451  1197 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:43.277454  1197 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:43.277459  1197 net.cpp:382] accuracy -> accuracy
I0428 20:18:43.277465  1197 net.cpp:124] Setting up accuracy
I0428 20:18:43.277469  1197 net.cpp:131] Top shape: (1)
I0428 20:18:43.277472  1197 net.cpp:139] Memory required for data: 15130804
I0428 20:18:43.277475  1197 layer_factory.hpp:77] Creating layer loss
I0428 20:18:43.277482  1197 net.cpp:86] Creating Layer loss
I0428 20:18:43.277484  1197 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:43.277487  1197 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:43.277492  1197 net.cpp:382] loss -> loss
I0428 20:18:43.277498  1197 layer_factory.hpp:77] Creating layer loss
I0428 20:18:43.277735  1197 net.cpp:124] Setting up loss
I0428 20:18:43.277743  1197 net.cpp:131] Top shape: (1)
I0428 20:18:43.277746  1197 net.cpp:134]     with loss weight 1
I0428 20:18:43.277762  1197 net.cpp:139] Memory required for data: 15130808
I0428 20:18:43.277765  1197 net.cpp:200] loss needs backward computation.
I0428 20:18:43.277770  1197 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:43.277773  1197 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:43.277777  1197 net.cpp:200] relu3 needs backward computation.
I0428 20:18:43.277781  1197 net.cpp:200] ip3 needs backward computation.
I0428 20:18:43.277783  1197 net.cpp:200] relu2 needs backward computation.
I0428 20:18:43.277791  1197 net.cpp:200] ip2 needs backward computation.
I0428 20:18:43.277793  1197 net.cpp:200] relu1 needs backward computation.
I0428 20:18:43.277796  1197 net.cpp:200] ip1 needs backward computation.
I0428 20:18:43.277799  1197 net.cpp:200] pool1 needs backward computation.
I0428 20:18:43.277801  1197 net.cpp:200] conv1 needs backward computation.
I0428 20:18:43.277804  1197 net.cpp:200] pool0 needs backward computation.
I0428 20:18:43.277807  1197 net.cpp:200] conv0 needs backward computation.
I0428 20:18:43.277812  1197 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:43.277814  1197 net.cpp:202] mnist does not need backward computation.
I0428 20:18:43.277818  1197 net.cpp:244] This network produces output accuracy
I0428 20:18:43.277822  1197 net.cpp:244] This network produces output loss
I0428 20:18:43.277832  1197 net.cpp:257] Network initialization done.
I0428 20:18:43.277885  1197 solver.cpp:56] Solver scaffolding done.
I0428 20:18:43.278268  1197 caffe.cpp:248] Starting Optimization
I0428 20:18:43.278275  1197 solver.cpp:273] Solving LeNet
I0428 20:18:43.278277  1197 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:43.279022  1197 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:43.345865  1204 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:43.348242  1197 solver.cpp:398]     Test net output #0: accuracy = 0.1148
I0428 20:18:43.348260  1197 solver.cpp:398]     Test net output #1: loss = 2.30024 (* 1 = 2.30024 loss)
I0428 20:18:43.352313  1197 solver.cpp:219] Iteration 0 (0 iter/s, 0.0740117s/100 iters), loss = 2.29603
I0428 20:18:43.352336  1197 solver.cpp:238]     Train net output #0: loss = 2.29603 (* 1 = 2.29603 loss)
I0428 20:18:43.352363  1197 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:43.473004  1197 solver.cpp:219] Iteration 100 (828.818 iter/s, 0.120654s/100 iters), loss = 0.582352
I0428 20:18:43.473031  1197 solver.cpp:238]     Train net output #0: loss = 0.582352 (* 1 = 0.582352 loss)
I0428 20:18:43.473037  1197 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:43.590970  1197 solver.cpp:219] Iteration 200 (847.967 iter/s, 0.117929s/100 iters), loss = 0.629
I0428 20:18:43.590994  1197 solver.cpp:238]     Train net output #0: loss = 0.629 (* 1 = 0.629 loss)
I0428 20:18:43.591015  1197 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:43.710080  1197 solver.cpp:219] Iteration 300 (839.815 iter/s, 0.119074s/100 iters), loss = 0.482712
I0428 20:18:43.710104  1197 solver.cpp:238]     Train net output #0: loss = 0.482712 (* 1 = 0.482712 loss)
I0428 20:18:43.710111  1197 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:43.832131  1197 solver.cpp:219] Iteration 400 (819.567 iter/s, 0.122016s/100 iters), loss = 0.322568
I0428 20:18:43.832154  1197 solver.cpp:238]     Train net output #0: loss = 0.322568 (* 1 = 0.322568 loss)
I0428 20:18:43.832160  1197 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:43.954293  1197 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:43.996337  1197 blocking_queue.cpp:49] Waiting for data
I0428 20:18:44.026278  1204 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:44.027009  1197 solver.cpp:398]     Test net output #0: accuracy = 0.8592
I0428 20:18:44.027029  1197 solver.cpp:398]     Test net output #1: loss = 0.372592 (* 1 = 0.372592 loss)
I0428 20:18:44.028316  1197 solver.cpp:219] Iteration 500 (509.821 iter/s, 0.196147s/100 iters), loss = 0.282828
I0428 20:18:44.028359  1197 solver.cpp:238]     Train net output #0: loss = 0.282828 (* 1 = 0.282828 loss)
I0428 20:18:44.028381  1197 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:44.154592  1197 solver.cpp:219] Iteration 600 (792.253 iter/s, 0.126222s/100 iters), loss = 0.415914
I0428 20:18:44.154616  1197 solver.cpp:238]     Train net output #0: loss = 0.415914 (* 1 = 0.415914 loss)
I0428 20:18:44.154623  1197 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:44.273599  1197 solver.cpp:219] Iteration 700 (840.538 iter/s, 0.118971s/100 iters), loss = 0.312241
I0428 20:18:44.273623  1197 solver.cpp:238]     Train net output #0: loss = 0.312241 (* 1 = 0.312241 loss)
I0428 20:18:44.273645  1197 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:44.392338  1197 solver.cpp:219] Iteration 800 (842.438 iter/s, 0.118703s/100 iters), loss = 0.411011
I0428 20:18:44.392364  1197 solver.cpp:238]     Train net output #0: loss = 0.411011 (* 1 = 0.411011 loss)
I0428 20:18:44.392369  1197 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:44.528503  1197 solver.cpp:219] Iteration 900 (734.639 iter/s, 0.136121s/100 iters), loss = 0.160012
I0428 20:18:44.528553  1197 solver.cpp:238]     Train net output #0: loss = 0.160012 (* 1 = 0.160012 loss)
I0428 20:18:44.528563  1197 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:44.572657  1203 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:44.661546  1197 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:44.663004  1197 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:44.663975  1197 solver.cpp:311] Iteration 1000, loss = 0.107565
I0428 20:18:44.664000  1197 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:44.741214  1204 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:44.742094  1197 solver.cpp:398]     Test net output #0: accuracy = 0.9686
I0428 20:18:44.742120  1197 solver.cpp:398]     Test net output #1: loss = 0.10027 (* 1 = 0.10027 loss)
I0428 20:18:44.742125  1197 solver.cpp:316] Optimization Done.
I0428 20:18:44.742130  1197 caffe.cpp:259] Optimization Done.
