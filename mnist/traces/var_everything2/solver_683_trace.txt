I0428 19:53:16.086035 27731 caffe.cpp:218] Using GPUs 0
I0428 19:53:16.122743 27731 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:16.633440 27731 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test683.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:16.633580 27731 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test683.prototxt
I0428 19:53:16.633996 27731 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:16.634014 27731 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:16.634119 27731 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:16.634197 27731 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:16.634296 27731 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:16.634320 27731 net.cpp:86] Creating Layer mnist
I0428 19:53:16.634328 27731 net.cpp:382] mnist -> data
I0428 19:53:16.634351 27731 net.cpp:382] mnist -> label
I0428 19:53:16.635473 27731 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:16.638020 27731 net.cpp:124] Setting up mnist
I0428 19:53:16.638037 27731 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:16.638043 27731 net.cpp:131] Top shape: 64 (64)
I0428 19:53:16.638047 27731 net.cpp:139] Memory required for data: 200960
I0428 19:53:16.638054 27731 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:16.638079 27731 net.cpp:86] Creating Layer conv0
I0428 19:53:16.638100 27731 net.cpp:408] conv0 <- data
I0428 19:53:16.638113 27731 net.cpp:382] conv0 -> conv0
I0428 19:53:16.923424 27731 net.cpp:124] Setting up conv0
I0428 19:53:16.923454 27731 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:16.923457 27731 net.cpp:139] Memory required for data: 938240
I0428 19:53:16.923472 27731 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:16.923486 27731 net.cpp:86] Creating Layer pool0
I0428 19:53:16.923491 27731 net.cpp:408] pool0 <- conv0
I0428 19:53:16.923496 27731 net.cpp:382] pool0 -> pool0
I0428 19:53:16.923543 27731 net.cpp:124] Setting up pool0
I0428 19:53:16.923550 27731 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:16.923554 27731 net.cpp:139] Memory required for data: 1122560
I0428 19:53:16.923557 27731 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:16.923568 27731 net.cpp:86] Creating Layer conv1
I0428 19:53:16.923571 27731 net.cpp:408] conv1 <- pool0
I0428 19:53:16.923576 27731 net.cpp:382] conv1 -> conv1
I0428 19:53:16.926414 27731 net.cpp:124] Setting up conv1
I0428 19:53:16.926429 27731 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:16.926434 27731 net.cpp:139] Memory required for data: 1941760
I0428 19:53:16.926442 27731 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:16.926450 27731 net.cpp:86] Creating Layer pool1
I0428 19:53:16.926453 27731 net.cpp:408] pool1 <- conv1
I0428 19:53:16.926458 27731 net.cpp:382] pool1 -> pool1
I0428 19:53:16.926497 27731 net.cpp:124] Setting up pool1
I0428 19:53:16.926502 27731 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:16.926506 27731 net.cpp:139] Memory required for data: 2146560
I0428 19:53:16.926508 27731 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:16.926515 27731 net.cpp:86] Creating Layer ip1
I0428 19:53:16.926518 27731 net.cpp:408] ip1 <- pool1
I0428 19:53:16.926524 27731 net.cpp:382] ip1 -> ip1
I0428 19:53:16.926673 27731 net.cpp:124] Setting up ip1
I0428 19:53:16.926681 27731 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:16.926684 27731 net.cpp:139] Memory required for data: 2149120
I0428 19:53:16.926692 27731 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:16.926697 27731 net.cpp:86] Creating Layer relu1
I0428 19:53:16.926700 27731 net.cpp:408] relu1 <- ip1
I0428 19:53:16.926704 27731 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:16.926867 27731 net.cpp:124] Setting up relu1
I0428 19:53:16.926875 27731 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:16.926878 27731 net.cpp:139] Memory required for data: 2151680
I0428 19:53:16.926882 27731 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:16.926888 27731 net.cpp:86] Creating Layer ip2
I0428 19:53:16.926892 27731 net.cpp:408] ip2 <- ip1
I0428 19:53:16.926897 27731 net.cpp:382] ip2 -> ip2
I0428 19:53:16.926993 27731 net.cpp:124] Setting up ip2
I0428 19:53:16.927000 27731 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:16.927003 27731 net.cpp:139] Memory required for data: 2164480
I0428 19:53:16.927008 27731 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:16.927014 27731 net.cpp:86] Creating Layer relu2
I0428 19:53:16.927018 27731 net.cpp:408] relu2 <- ip2
I0428 19:53:16.927022 27731 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:16.927778 27731 net.cpp:124] Setting up relu2
I0428 19:53:16.927791 27731 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:16.927795 27731 net.cpp:139] Memory required for data: 2177280
I0428 19:53:16.927799 27731 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:16.927806 27731 net.cpp:86] Creating Layer ip3
I0428 19:53:16.927809 27731 net.cpp:408] ip3 <- ip2
I0428 19:53:16.927815 27731 net.cpp:382] ip3 -> ip3
I0428 19:53:16.927918 27731 net.cpp:124] Setting up ip3
I0428 19:53:16.927927 27731 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:16.927929 27731 net.cpp:139] Memory required for data: 2179840
I0428 19:53:16.927937 27731 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:16.927942 27731 net.cpp:86] Creating Layer relu3
I0428 19:53:16.927945 27731 net.cpp:408] relu3 <- ip3
I0428 19:53:16.927950 27731 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:16.928123 27731 net.cpp:124] Setting up relu3
I0428 19:53:16.928133 27731 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:16.928136 27731 net.cpp:139] Memory required for data: 2182400
I0428 19:53:16.928139 27731 layer_factory.hpp:77] Creating layer loss
I0428 19:53:16.928145 27731 net.cpp:86] Creating Layer loss
I0428 19:53:16.928148 27731 net.cpp:408] loss <- ip3
I0428 19:53:16.928153 27731 net.cpp:408] loss <- label
I0428 19:53:16.928158 27731 net.cpp:382] loss -> loss
I0428 19:53:16.928174 27731 layer_factory.hpp:77] Creating layer loss
I0428 19:53:16.928411 27731 net.cpp:124] Setting up loss
I0428 19:53:16.928421 27731 net.cpp:131] Top shape: (1)
I0428 19:53:16.928424 27731 net.cpp:134]     with loss weight 1
I0428 19:53:16.928439 27731 net.cpp:139] Memory required for data: 2182404
I0428 19:53:16.928442 27731 net.cpp:200] loss needs backward computation.
I0428 19:53:16.928447 27731 net.cpp:200] relu3 needs backward computation.
I0428 19:53:16.928449 27731 net.cpp:200] ip3 needs backward computation.
I0428 19:53:16.928452 27731 net.cpp:200] relu2 needs backward computation.
I0428 19:53:16.928455 27731 net.cpp:200] ip2 needs backward computation.
I0428 19:53:16.928458 27731 net.cpp:200] relu1 needs backward computation.
I0428 19:53:16.928462 27731 net.cpp:200] ip1 needs backward computation.
I0428 19:53:16.928464 27731 net.cpp:200] pool1 needs backward computation.
I0428 19:53:16.928467 27731 net.cpp:200] conv1 needs backward computation.
I0428 19:53:16.928470 27731 net.cpp:200] pool0 needs backward computation.
I0428 19:53:16.928473 27731 net.cpp:200] conv0 needs backward computation.
I0428 19:53:16.928478 27731 net.cpp:202] mnist does not need backward computation.
I0428 19:53:16.928480 27731 net.cpp:244] This network produces output loss
I0428 19:53:16.928489 27731 net.cpp:257] Network initialization done.
I0428 19:53:16.928910 27731 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test683.prototxt
I0428 19:53:16.928990 27731 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:16.929194 27731 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:16.929359 27731 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:16.929445 27731 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:16.929468 27731 net.cpp:86] Creating Layer mnist
I0428 19:53:16.929478 27731 net.cpp:382] mnist -> data
I0428 19:53:16.929497 27731 net.cpp:382] mnist -> label
I0428 19:53:16.929685 27731 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:16.933182 27731 net.cpp:124] Setting up mnist
I0428 19:53:16.933209 27731 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:16.933220 27731 net.cpp:131] Top shape: 100 (100)
I0428 19:53:16.933228 27731 net.cpp:139] Memory required for data: 314000
I0428 19:53:16.933235 27731 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:16.933249 27731 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:16.933256 27731 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:16.933266 27731 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:16.933281 27731 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:16.933374 27731 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:16.933387 27731 net.cpp:131] Top shape: 100 (100)
I0428 19:53:16.933394 27731 net.cpp:131] Top shape: 100 (100)
I0428 19:53:16.933404 27731 net.cpp:139] Memory required for data: 314800
I0428 19:53:16.933410 27731 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:16.933428 27731 net.cpp:86] Creating Layer conv0
I0428 19:53:16.933436 27731 net.cpp:408] conv0 <- data
I0428 19:53:16.933447 27731 net.cpp:382] conv0 -> conv0
I0428 19:53:16.936286 27731 net.cpp:124] Setting up conv0
I0428 19:53:16.936313 27731 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:16.936321 27731 net.cpp:139] Memory required for data: 1466800
I0428 19:53:16.936342 27731 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:16.936354 27731 net.cpp:86] Creating Layer pool0
I0428 19:53:16.936362 27731 net.cpp:408] pool0 <- conv0
I0428 19:53:16.936372 27731 net.cpp:382] pool0 -> pool0
I0428 19:53:16.936447 27731 net.cpp:124] Setting up pool0
I0428 19:53:16.936461 27731 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:16.936467 27731 net.cpp:139] Memory required for data: 1754800
I0428 19:53:16.936475 27731 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:16.936491 27731 net.cpp:86] Creating Layer conv1
I0428 19:53:16.936501 27731 net.cpp:408] conv1 <- pool0
I0428 19:53:16.936511 27731 net.cpp:382] conv1 -> conv1
I0428 19:53:16.939390 27731 net.cpp:124] Setting up conv1
I0428 19:53:16.939417 27731 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:16.939425 27731 net.cpp:139] Memory required for data: 3034800
I0428 19:53:16.939443 27731 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:16.939456 27731 net.cpp:86] Creating Layer pool1
I0428 19:53:16.939463 27731 net.cpp:408] pool1 <- conv1
I0428 19:53:16.939474 27731 net.cpp:382] pool1 -> pool1
I0428 19:53:16.939546 27731 net.cpp:124] Setting up pool1
I0428 19:53:16.939559 27731 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:16.939566 27731 net.cpp:139] Memory required for data: 3354800
I0428 19:53:16.939573 27731 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:16.939584 27731 net.cpp:86] Creating Layer ip1
I0428 19:53:16.939592 27731 net.cpp:408] ip1 <- pool1
I0428 19:53:16.939604 27731 net.cpp:382] ip1 -> ip1
I0428 19:53:16.939904 27731 net.cpp:124] Setting up ip1
I0428 19:53:16.939918 27731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:16.939945 27731 net.cpp:139] Memory required for data: 3358800
I0428 19:53:16.939961 27731 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:16.939971 27731 net.cpp:86] Creating Layer relu1
I0428 19:53:16.939978 27731 net.cpp:408] relu1 <- ip1
I0428 19:53:16.939987 27731 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:16.940325 27731 net.cpp:124] Setting up relu1
I0428 19:53:16.940341 27731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:16.940348 27731 net.cpp:139] Memory required for data: 3362800
I0428 19:53:16.940356 27731 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:16.940371 27731 net.cpp:86] Creating Layer ip2
I0428 19:53:16.940378 27731 net.cpp:408] ip2 <- ip1
I0428 19:53:16.940388 27731 net.cpp:382] ip2 -> ip2
I0428 19:53:16.940610 27731 net.cpp:124] Setting up ip2
I0428 19:53:16.940624 27731 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:16.940630 27731 net.cpp:139] Memory required for data: 3382800
I0428 19:53:16.940641 27731 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:16.940652 27731 net.cpp:86] Creating Layer relu2
I0428 19:53:16.940659 27731 net.cpp:408] relu2 <- ip2
I0428 19:53:16.940670 27731 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:16.941030 27731 net.cpp:124] Setting up relu2
I0428 19:53:16.941047 27731 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:16.941053 27731 net.cpp:139] Memory required for data: 3402800
I0428 19:53:16.941059 27731 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:16.941072 27731 net.cpp:86] Creating Layer ip3
I0428 19:53:16.941079 27731 net.cpp:408] ip3 <- ip2
I0428 19:53:16.941090 27731 net.cpp:382] ip3 -> ip3
I0428 19:53:16.941304 27731 net.cpp:124] Setting up ip3
I0428 19:53:16.941316 27731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:16.941323 27731 net.cpp:139] Memory required for data: 3406800
I0428 19:53:16.941341 27731 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:16.941352 27731 net.cpp:86] Creating Layer relu3
I0428 19:53:16.941359 27731 net.cpp:408] relu3 <- ip3
I0428 19:53:16.941366 27731 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:16.942831 27731 net.cpp:124] Setting up relu3
I0428 19:53:16.942855 27731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:16.942862 27731 net.cpp:139] Memory required for data: 3410800
I0428 19:53:16.942869 27731 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:16.942883 27731 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:16.942890 27731 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:16.942900 27731 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:16.942915 27731 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:16.942991 27731 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:16.943003 27731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:16.943011 27731 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:16.943017 27731 net.cpp:139] Memory required for data: 3418800
I0428 19:53:16.943023 27731 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:16.943035 27731 net.cpp:86] Creating Layer accuracy
I0428 19:53:16.943043 27731 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:16.943051 27731 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:16.943061 27731 net.cpp:382] accuracy -> accuracy
I0428 19:53:16.943076 27731 net.cpp:124] Setting up accuracy
I0428 19:53:16.943086 27731 net.cpp:131] Top shape: (1)
I0428 19:53:16.943092 27731 net.cpp:139] Memory required for data: 3418804
I0428 19:53:16.943099 27731 layer_factory.hpp:77] Creating layer loss
I0428 19:53:16.943109 27731 net.cpp:86] Creating Layer loss
I0428 19:53:16.943119 27731 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:16.943125 27731 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:16.943135 27731 net.cpp:382] loss -> loss
I0428 19:53:16.943148 27731 layer_factory.hpp:77] Creating layer loss
I0428 19:53:16.943645 27731 net.cpp:124] Setting up loss
I0428 19:53:16.943661 27731 net.cpp:131] Top shape: (1)
I0428 19:53:16.943670 27731 net.cpp:134]     with loss weight 1
I0428 19:53:16.943683 27731 net.cpp:139] Memory required for data: 3418808
I0428 19:53:16.943711 27731 net.cpp:200] loss needs backward computation.
I0428 19:53:16.943719 27731 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:16.943727 27731 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:16.943734 27731 net.cpp:200] relu3 needs backward computation.
I0428 19:53:16.943740 27731 net.cpp:200] ip3 needs backward computation.
I0428 19:53:16.943747 27731 net.cpp:200] relu2 needs backward computation.
I0428 19:53:16.943753 27731 net.cpp:200] ip2 needs backward computation.
I0428 19:53:16.943758 27731 net.cpp:200] relu1 needs backward computation.
I0428 19:53:16.943764 27731 net.cpp:200] ip1 needs backward computation.
I0428 19:53:16.943770 27731 net.cpp:200] pool1 needs backward computation.
I0428 19:53:16.943778 27731 net.cpp:200] conv1 needs backward computation.
I0428 19:53:16.943783 27731 net.cpp:200] pool0 needs backward computation.
I0428 19:53:16.943789 27731 net.cpp:200] conv0 needs backward computation.
I0428 19:53:16.943799 27731 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:16.943806 27731 net.cpp:202] mnist does not need backward computation.
I0428 19:53:16.943811 27731 net.cpp:244] This network produces output accuracy
I0428 19:53:16.943819 27731 net.cpp:244] This network produces output loss
I0428 19:53:16.943843 27731 net.cpp:257] Network initialization done.
I0428 19:53:16.943933 27731 solver.cpp:56] Solver scaffolding done.
I0428 19:53:16.944653 27731 caffe.cpp:248] Starting Optimization
I0428 19:53:16.944664 27731 solver.cpp:273] Solving LeNet
I0428 19:53:16.944670 27731 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:16.946064 27731 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:17.003924 27738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:17.005723 27731 solver.cpp:398]     Test net output #0: accuracy = 0.0926
I0428 19:53:17.005760 27731 solver.cpp:398]     Test net output #1: loss = 2.30611 (* 1 = 2.30611 loss)
I0428 19:53:17.008715 27731 solver.cpp:219] Iteration 0 (3.55638 iter/s, 0.0640113s/100 iters), loss = 2.31052
I0428 19:53:17.008759 27731 solver.cpp:238]     Train net output #0: loss = 2.31052 (* 1 = 2.31052 loss)
I0428 19:53:17.008774 27731 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:17.126512 27731 solver.cpp:219] Iteration 100 (849.297 iter/s, 0.117744s/100 iters), loss = 0.792255
I0428 19:53:17.126564 27731 solver.cpp:238]     Train net output #0: loss = 0.792255 (* 1 = 0.792255 loss)
I0428 19:53:17.126575 27731 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:17.237408 27731 solver.cpp:219] Iteration 200 (902.161 iter/s, 0.110845s/100 iters), loss = 0.986691
I0428 19:53:17.237438 27731 solver.cpp:238]     Train net output #0: loss = 0.986691 (* 1 = 0.986691 loss)
I0428 19:53:17.237445 27731 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:17.347949 27731 solver.cpp:219] Iteration 300 (904.987 iter/s, 0.110499s/100 iters), loss = 0.687362
I0428 19:53:17.347980 27731 solver.cpp:238]     Train net output #0: loss = 0.687362 (* 1 = 0.687362 loss)
I0428 19:53:17.347990 27731 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:17.454059 27731 solver.cpp:219] Iteration 400 (942.774 iter/s, 0.10607s/100 iters), loss = 0.820154
I0428 19:53:17.454090 27731 solver.cpp:238]     Train net output #0: loss = 0.820154 (* 1 = 0.820154 loss)
I0428 19:53:17.454098 27731 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:17.560896 27731 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:17.593791 27731 blocking_queue.cpp:49] Waiting for data
I0428 19:53:17.609004 27738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:17.609591 27731 solver.cpp:398]     Test net output #0: accuracy = 0.8017
I0428 19:53:17.609623 27731 solver.cpp:398]     Test net output #1: loss = 0.646178 (* 1 = 0.646178 loss)
I0428 19:53:17.610709 27731 solver.cpp:219] Iteration 500 (638.543 iter/s, 0.156606s/100 iters), loss = 0.584489
I0428 19:53:17.610760 27731 solver.cpp:238]     Train net output #0: loss = 0.584489 (* 1 = 0.584489 loss)
I0428 19:53:17.610786 27731 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:17.719800 27731 solver.cpp:219] Iteration 600 (917.168 iter/s, 0.109031s/100 iters), loss = 0.607494
I0428 19:53:17.719830 27731 solver.cpp:238]     Train net output #0: loss = 0.607494 (* 1 = 0.607494 loss)
I0428 19:53:17.719843 27731 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:17.823325 27731 solver.cpp:219] Iteration 700 (966.319 iter/s, 0.103485s/100 iters), loss = 0.551591
I0428 19:53:17.823355 27731 solver.cpp:238]     Train net output #0: loss = 0.551591 (* 1 = 0.551591 loss)
I0428 19:53:17.823364 27731 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:17.940414 27731 solver.cpp:219] Iteration 800 (854.356 iter/s, 0.117047s/100 iters), loss = 0.791601
I0428 19:53:17.940449 27731 solver.cpp:238]     Train net output #0: loss = 0.791601 (* 1 = 0.791601 loss)
I0428 19:53:17.940459 27731 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:18.051672 27731 solver.cpp:219] Iteration 900 (899.171 iter/s, 0.111214s/100 iters), loss = 0.879803
I0428 19:53:18.051714 27731 solver.cpp:238]     Train net output #0: loss = 0.879803 (* 1 = 0.879803 loss)
I0428 19:53:18.051723 27731 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:18.087446 27737 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:18.166523 27731 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:18.167791 27731 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:18.168499 27731 solver.cpp:311] Iteration 1000, loss = 0.642618
I0428 19:53:18.168521 27731 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:18.219353 27738 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:18.220752 27731 solver.cpp:398]     Test net output #0: accuracy = 0.8609
I0428 19:53:18.220777 27731 solver.cpp:398]     Test net output #1: loss = 0.580124 (* 1 = 0.580124 loss)
I0428 19:53:18.220784 27731 solver.cpp:316] Optimization Done.
I0428 19:53:18.220788 27731 caffe.cpp:259] Optimization Done.
