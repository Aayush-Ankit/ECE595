I0428 20:06:46.614079 30950 caffe.cpp:218] Using GPUs 0
I0428 20:06:46.641960 30950 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:47.088477 30950 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1037.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:47.088624 30950 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1037.prototxt
I0428 20:06:47.089053 30950 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:47.089085 30950 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:47.089198 30950 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:47.089287 30950 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:47.089366 30950 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:47.089385 30950 net.cpp:86] Creating Layer mnist
I0428 20:06:47.089390 30950 net.cpp:382] mnist -> data
I0428 20:06:47.089407 30950 net.cpp:382] mnist -> label
I0428 20:06:47.090387 30950 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:47.092622 30950 net.cpp:124] Setting up mnist
I0428 20:06:47.092669 30950 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:47.092679 30950 net.cpp:131] Top shape: 64 (64)
I0428 20:06:47.092682 30950 net.cpp:139] Memory required for data: 200960
I0428 20:06:47.092690 30950 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:47.092720 30950 net.cpp:86] Creating Layer conv0
I0428 20:06:47.092736 30950 net.cpp:408] conv0 <- data
I0428 20:06:47.092746 30950 net.cpp:382] conv0 -> conv0
I0428 20:06:47.327985 30950 net.cpp:124] Setting up conv0
I0428 20:06:47.328025 30950 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:47.328029 30950 net.cpp:139] Memory required for data: 3887360
I0428 20:06:47.328044 30950 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:47.328058 30950 net.cpp:86] Creating Layer pool0
I0428 20:06:47.328060 30950 net.cpp:408] pool0 <- conv0
I0428 20:06:47.328065 30950 net.cpp:382] pool0 -> pool0
I0428 20:06:47.328125 30950 net.cpp:124] Setting up pool0
I0428 20:06:47.328130 30950 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:47.328132 30950 net.cpp:139] Memory required for data: 4808960
I0428 20:06:47.328135 30950 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:47.328145 30950 net.cpp:86] Creating Layer conv1
I0428 20:06:47.328148 30950 net.cpp:408] conv1 <- pool0
I0428 20:06:47.328153 30950 net.cpp:382] conv1 -> conv1
I0428 20:06:47.330948 30950 net.cpp:124] Setting up conv1
I0428 20:06:47.330978 30950 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:47.330981 30950 net.cpp:139] Memory required for data: 4890880
I0428 20:06:47.330991 30950 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:47.330997 30950 net.cpp:86] Creating Layer pool1
I0428 20:06:47.331001 30950 net.cpp:408] pool1 <- conv1
I0428 20:06:47.331006 30950 net.cpp:382] pool1 -> pool1
I0428 20:06:47.331058 30950 net.cpp:124] Setting up pool1
I0428 20:06:47.331077 30950 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:47.331080 30950 net.cpp:139] Memory required for data: 4911360
I0428 20:06:47.331084 30950 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:47.331090 30950 net.cpp:86] Creating Layer ip1
I0428 20:06:47.331094 30950 net.cpp:408] ip1 <- pool1
I0428 20:06:47.331097 30950 net.cpp:382] ip1 -> ip1
I0428 20:06:47.331226 30950 net.cpp:124] Setting up ip1
I0428 20:06:47.331235 30950 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:47.331238 30950 net.cpp:139] Memory required for data: 4917760
I0428 20:06:47.331246 30950 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:47.331252 30950 net.cpp:86] Creating Layer relu1
I0428 20:06:47.331255 30950 net.cpp:408] relu1 <- ip1
I0428 20:06:47.331259 30950 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:47.331428 30950 net.cpp:124] Setting up relu1
I0428 20:06:47.331437 30950 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:47.331440 30950 net.cpp:139] Memory required for data: 4924160
I0428 20:06:47.331444 30950 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:47.331449 30950 net.cpp:86] Creating Layer ip2
I0428 20:06:47.331452 30950 net.cpp:408] ip2 <- ip1
I0428 20:06:47.331457 30950 net.cpp:382] ip2 -> ip2
I0428 20:06:47.331560 30950 net.cpp:124] Setting up ip2
I0428 20:06:47.331567 30950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:47.331569 30950 net.cpp:139] Memory required for data: 4926720
I0428 20:06:47.331575 30950 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:47.331580 30950 net.cpp:86] Creating Layer relu2
I0428 20:06:47.331583 30950 net.cpp:408] relu2 <- ip2
I0428 20:06:47.331588 30950 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:47.332360 30950 net.cpp:124] Setting up relu2
I0428 20:06:47.332371 30950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:47.332391 30950 net.cpp:139] Memory required for data: 4929280
I0428 20:06:47.332394 30950 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:47.332401 30950 net.cpp:86] Creating Layer ip3
I0428 20:06:47.332404 30950 net.cpp:408] ip3 <- ip2
I0428 20:06:47.332409 30950 net.cpp:382] ip3 -> ip3
I0428 20:06:47.332505 30950 net.cpp:124] Setting up ip3
I0428 20:06:47.332514 30950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:47.332516 30950 net.cpp:139] Memory required for data: 4931840
I0428 20:06:47.332525 30950 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:47.332530 30950 net.cpp:86] Creating Layer relu3
I0428 20:06:47.332532 30950 net.cpp:408] relu3 <- ip3
I0428 20:06:47.332536 30950 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:47.332698 30950 net.cpp:124] Setting up relu3
I0428 20:06:47.332707 30950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:47.332710 30950 net.cpp:139] Memory required for data: 4934400
I0428 20:06:47.332713 30950 layer_factory.hpp:77] Creating layer loss
I0428 20:06:47.332718 30950 net.cpp:86] Creating Layer loss
I0428 20:06:47.332721 30950 net.cpp:408] loss <- ip3
I0428 20:06:47.332726 30950 net.cpp:408] loss <- label
I0428 20:06:47.332731 30950 net.cpp:382] loss -> loss
I0428 20:06:47.332748 30950 layer_factory.hpp:77] Creating layer loss
I0428 20:06:47.333086 30950 net.cpp:124] Setting up loss
I0428 20:06:47.333097 30950 net.cpp:131] Top shape: (1)
I0428 20:06:47.333101 30950 net.cpp:134]     with loss weight 1
I0428 20:06:47.333130 30950 net.cpp:139] Memory required for data: 4934404
I0428 20:06:47.333134 30950 net.cpp:200] loss needs backward computation.
I0428 20:06:47.333138 30950 net.cpp:200] relu3 needs backward computation.
I0428 20:06:47.333142 30950 net.cpp:200] ip3 needs backward computation.
I0428 20:06:47.333147 30950 net.cpp:200] relu2 needs backward computation.
I0428 20:06:47.333149 30950 net.cpp:200] ip2 needs backward computation.
I0428 20:06:47.333153 30950 net.cpp:200] relu1 needs backward computation.
I0428 20:06:47.333155 30950 net.cpp:200] ip1 needs backward computation.
I0428 20:06:47.333158 30950 net.cpp:200] pool1 needs backward computation.
I0428 20:06:47.333163 30950 net.cpp:200] conv1 needs backward computation.
I0428 20:06:47.333165 30950 net.cpp:200] pool0 needs backward computation.
I0428 20:06:47.333168 30950 net.cpp:200] conv0 needs backward computation.
I0428 20:06:47.333173 30950 net.cpp:202] mnist does not need backward computation.
I0428 20:06:47.333175 30950 net.cpp:244] This network produces output loss
I0428 20:06:47.333200 30950 net.cpp:257] Network initialization done.
I0428 20:06:47.333621 30950 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1037.prototxt
I0428 20:06:47.333664 30950 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:47.333752 30950 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:47.333832 30950 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:47.333874 30950 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:47.333886 30950 net.cpp:86] Creating Layer mnist
I0428 20:06:47.333890 30950 net.cpp:382] mnist -> data
I0428 20:06:47.333899 30950 net.cpp:382] mnist -> label
I0428 20:06:47.333981 30950 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:47.335973 30950 net.cpp:124] Setting up mnist
I0428 20:06:47.335986 30950 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:47.336006 30950 net.cpp:131] Top shape: 100 (100)
I0428 20:06:47.336009 30950 net.cpp:139] Memory required for data: 314000
I0428 20:06:47.336012 30950 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:47.336019 30950 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:47.336022 30950 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:47.336027 30950 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:47.336033 30950 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:47.336097 30950 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:47.336110 30950 net.cpp:131] Top shape: 100 (100)
I0428 20:06:47.336114 30950 net.cpp:131] Top shape: 100 (100)
I0428 20:06:47.336117 30950 net.cpp:139] Memory required for data: 314800
I0428 20:06:47.336120 30950 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:47.336128 30950 net.cpp:86] Creating Layer conv0
I0428 20:06:47.336132 30950 net.cpp:408] conv0 <- data
I0428 20:06:47.336136 30950 net.cpp:382] conv0 -> conv0
I0428 20:06:47.337749 30950 net.cpp:124] Setting up conv0
I0428 20:06:47.337777 30950 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:47.337780 30950 net.cpp:139] Memory required for data: 6074800
I0428 20:06:47.337790 30950 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:47.337795 30950 net.cpp:86] Creating Layer pool0
I0428 20:06:47.337800 30950 net.cpp:408] pool0 <- conv0
I0428 20:06:47.337803 30950 net.cpp:382] pool0 -> pool0
I0428 20:06:47.337854 30950 net.cpp:124] Setting up pool0
I0428 20:06:47.337860 30950 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:47.337863 30950 net.cpp:139] Memory required for data: 7514800
I0428 20:06:47.337867 30950 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:47.337874 30950 net.cpp:86] Creating Layer conv1
I0428 20:06:47.337877 30950 net.cpp:408] conv1 <- pool0
I0428 20:06:47.337882 30950 net.cpp:382] conv1 -> conv1
I0428 20:06:47.339920 30950 net.cpp:124] Setting up conv1
I0428 20:06:47.339948 30950 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:47.339952 30950 net.cpp:139] Memory required for data: 7642800
I0428 20:06:47.339962 30950 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:47.339982 30950 net.cpp:86] Creating Layer pool1
I0428 20:06:47.339985 30950 net.cpp:408] pool1 <- conv1
I0428 20:06:47.339992 30950 net.cpp:382] pool1 -> pool1
I0428 20:06:47.340044 30950 net.cpp:124] Setting up pool1
I0428 20:06:47.340050 30950 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:47.340052 30950 net.cpp:139] Memory required for data: 7674800
I0428 20:06:47.340056 30950 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:47.340061 30950 net.cpp:86] Creating Layer ip1
I0428 20:06:47.340065 30950 net.cpp:408] ip1 <- pool1
I0428 20:06:47.340070 30950 net.cpp:382] ip1 -> ip1
I0428 20:06:47.340173 30950 net.cpp:124] Setting up ip1
I0428 20:06:47.340180 30950 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:47.340194 30950 net.cpp:139] Memory required for data: 7684800
I0428 20:06:47.340203 30950 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:47.340207 30950 net.cpp:86] Creating Layer relu1
I0428 20:06:47.340210 30950 net.cpp:408] relu1 <- ip1
I0428 20:06:47.340214 30950 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:47.340464 30950 net.cpp:124] Setting up relu1
I0428 20:06:47.340474 30950 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:47.340478 30950 net.cpp:139] Memory required for data: 7694800
I0428 20:06:47.340481 30950 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:47.340488 30950 net.cpp:86] Creating Layer ip2
I0428 20:06:47.340492 30950 net.cpp:408] ip2 <- ip1
I0428 20:06:47.340497 30950 net.cpp:382] ip2 -> ip2
I0428 20:06:47.340591 30950 net.cpp:124] Setting up ip2
I0428 20:06:47.340600 30950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:47.340602 30950 net.cpp:139] Memory required for data: 7698800
I0428 20:06:47.340608 30950 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:47.340613 30950 net.cpp:86] Creating Layer relu2
I0428 20:06:47.340616 30950 net.cpp:408] relu2 <- ip2
I0428 20:06:47.340646 30950 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:47.340832 30950 net.cpp:124] Setting up relu2
I0428 20:06:47.340843 30950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:47.340847 30950 net.cpp:139] Memory required for data: 7702800
I0428 20:06:47.340850 30950 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:47.340883 30950 net.cpp:86] Creating Layer ip3
I0428 20:06:47.340888 30950 net.cpp:408] ip3 <- ip2
I0428 20:06:47.340893 30950 net.cpp:382] ip3 -> ip3
I0428 20:06:47.340996 30950 net.cpp:124] Setting up ip3
I0428 20:06:47.341004 30950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:47.341009 30950 net.cpp:139] Memory required for data: 7706800
I0428 20:06:47.341022 30950 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:47.341032 30950 net.cpp:86] Creating Layer relu3
I0428 20:06:47.341037 30950 net.cpp:408] relu3 <- ip3
I0428 20:06:47.341044 30950 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:47.341897 30950 net.cpp:124] Setting up relu3
I0428 20:06:47.341909 30950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:47.341928 30950 net.cpp:139] Memory required for data: 7710800
I0428 20:06:47.341933 30950 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:47.341938 30950 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:47.341940 30950 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:47.341946 30950 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:47.341953 30950 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:47.342025 30950 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:47.342032 30950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:47.342036 30950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:47.342041 30950 net.cpp:139] Memory required for data: 7718800
I0428 20:06:47.342047 30950 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:47.342058 30950 net.cpp:86] Creating Layer accuracy
I0428 20:06:47.342062 30950 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:47.342067 30950 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:47.342072 30950 net.cpp:382] accuracy -> accuracy
I0428 20:06:47.342079 30950 net.cpp:124] Setting up accuracy
I0428 20:06:47.342084 30950 net.cpp:131] Top shape: (1)
I0428 20:06:47.342092 30950 net.cpp:139] Memory required for data: 7718804
I0428 20:06:47.342095 30950 layer_factory.hpp:77] Creating layer loss
I0428 20:06:47.342100 30950 net.cpp:86] Creating Layer loss
I0428 20:06:47.342103 30950 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:47.342108 30950 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:47.342111 30950 net.cpp:382] loss -> loss
I0428 20:06:47.342118 30950 layer_factory.hpp:77] Creating layer loss
I0428 20:06:47.342409 30950 net.cpp:124] Setting up loss
I0428 20:06:47.342427 30950 net.cpp:131] Top shape: (1)
I0428 20:06:47.342447 30950 net.cpp:134]     with loss weight 1
I0428 20:06:47.342470 30950 net.cpp:139] Memory required for data: 7718808
I0428 20:06:47.342485 30950 net.cpp:200] loss needs backward computation.
I0428 20:06:47.342490 30950 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:47.342494 30950 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:47.342497 30950 net.cpp:200] relu3 needs backward computation.
I0428 20:06:47.342500 30950 net.cpp:200] ip3 needs backward computation.
I0428 20:06:47.342504 30950 net.cpp:200] relu2 needs backward computation.
I0428 20:06:47.342507 30950 net.cpp:200] ip2 needs backward computation.
I0428 20:06:47.342511 30950 net.cpp:200] relu1 needs backward computation.
I0428 20:06:47.342514 30950 net.cpp:200] ip1 needs backward computation.
I0428 20:06:47.342517 30950 net.cpp:200] pool1 needs backward computation.
I0428 20:06:47.342520 30950 net.cpp:200] conv1 needs backward computation.
I0428 20:06:47.342525 30950 net.cpp:200] pool0 needs backward computation.
I0428 20:06:47.342528 30950 net.cpp:200] conv0 needs backward computation.
I0428 20:06:47.342547 30950 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:47.342551 30950 net.cpp:202] mnist does not need backward computation.
I0428 20:06:47.342569 30950 net.cpp:244] This network produces output accuracy
I0428 20:06:47.342573 30950 net.cpp:244] This network produces output loss
I0428 20:06:47.342584 30950 net.cpp:257] Network initialization done.
I0428 20:06:47.342630 30950 solver.cpp:56] Solver scaffolding done.
I0428 20:06:47.343050 30950 caffe.cpp:248] Starting Optimization
I0428 20:06:47.343055 30950 solver.cpp:273] Solving LeNet
I0428 20:06:47.343058 30950 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:47.343911 30950 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:47.348991 30950 blocking_queue.cpp:49] Waiting for data
I0428 20:06:47.418875 30957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:47.419458 30950 solver.cpp:398]     Test net output #0: accuracy = 0.1054
I0428 20:06:47.419508 30950 solver.cpp:398]     Test net output #1: loss = 2.29951 (* 1 = 2.29951 loss)
I0428 20:06:47.423362 30950 solver.cpp:219] Iteration 0 (0 iter/s, 0.0802602s/100 iters), loss = 2.31245
I0428 20:06:47.423400 30950 solver.cpp:238]     Train net output #0: loss = 2.31245 (* 1 = 2.31245 loss)
I0428 20:06:47.423411 30950 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:47.511045 30950 solver.cpp:219] Iteration 100 (1140.9 iter/s, 0.0876503s/100 iters), loss = 1.00612
I0428 20:06:47.511085 30950 solver.cpp:238]     Train net output #0: loss = 1.00612 (* 1 = 1.00612 loss)
I0428 20:06:47.511090 30950 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:47.598875 30950 solver.cpp:219] Iteration 200 (1139.19 iter/s, 0.0877815s/100 iters), loss = 0.500954
I0428 20:06:47.598914 30950 solver.cpp:238]     Train net output #0: loss = 0.500954 (* 1 = 0.500954 loss)
I0428 20:06:47.598920 30950 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:47.687922 30950 solver.cpp:219] Iteration 300 (1123.43 iter/s, 0.0890132s/100 iters), loss = 0.713644
I0428 20:06:47.687961 30950 solver.cpp:238]     Train net output #0: loss = 0.713644 (* 1 = 0.713644 loss)
I0428 20:06:47.687968 30950 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:47.775645 30950 solver.cpp:219] Iteration 400 (1140.39 iter/s, 0.0876892s/100 iters), loss = 0.494229
I0428 20:06:47.775683 30950 solver.cpp:238]     Train net output #0: loss = 0.494229 (* 1 = 0.494229 loss)
I0428 20:06:47.775689 30950 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:47.862143 30950 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:47.915347 30957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:47.916218 30950 solver.cpp:398]     Test net output #0: accuracy = 0.8511
I0428 20:06:47.916236 30950 solver.cpp:398]     Test net output #1: loss = 0.409034 (* 1 = 0.409034 loss)
I0428 20:06:47.917191 30950 solver.cpp:219] Iteration 500 (706.655 iter/s, 0.141512s/100 iters), loss = 0.364362
I0428 20:06:47.917229 30950 solver.cpp:238]     Train net output #0: loss = 0.364362 (* 1 = 0.364362 loss)
I0428 20:06:47.917250 30950 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:48.002887 30950 solver.cpp:219] Iteration 600 (1167.35 iter/s, 0.0856637s/100 iters), loss = 0.250766
I0428 20:06:48.002943 30950 solver.cpp:238]     Train net output #0: loss = 0.250766 (* 1 = 0.250766 loss)
I0428 20:06:48.002948 30950 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:48.088682 30950 solver.cpp:219] Iteration 700 (1166.23 iter/s, 0.0857467s/100 iters), loss = 0.390115
I0428 20:06:48.088721 30950 solver.cpp:238]     Train net output #0: loss = 0.390115 (* 1 = 0.390115 loss)
I0428 20:06:48.088727 30950 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:48.174971 30950 solver.cpp:219] Iteration 800 (1159.33 iter/s, 0.0862566s/100 iters), loss = 0.558954
I0428 20:06:48.175010 30950 solver.cpp:238]     Train net output #0: loss = 0.558954 (* 1 = 0.558954 loss)
I0428 20:06:48.175016 30950 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:48.261215 30950 solver.cpp:219] Iteration 900 (1159.95 iter/s, 0.0862107s/100 iters), loss = 0.525113
I0428 20:06:48.261255 30950 solver.cpp:238]     Train net output #0: loss = 0.525113 (* 1 = 0.525113 loss)
I0428 20:06:48.261261 30950 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:48.289845 30956 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:48.346705 30950 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:48.347549 30950 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:48.348135 30950 solver.cpp:311] Iteration 1000, loss = 0.318061
I0428 20:06:48.348165 30950 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:48.400724 30957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:48.402241 30950 solver.cpp:398]     Test net output #0: accuracy = 0.8687
I0428 20:06:48.402277 30950 solver.cpp:398]     Test net output #1: loss = 0.34567 (* 1 = 0.34567 loss)
I0428 20:06:48.402281 30950 solver.cpp:316] Optimization Done.
I0428 20:06:48.402284 30950 caffe.cpp:259] Optimization Done.
