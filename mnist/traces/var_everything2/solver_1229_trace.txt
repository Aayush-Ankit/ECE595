I0428 20:14:43.859825 32737 caffe.cpp:218] Using GPUs 0
I0428 20:14:43.888494 32737 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:14:44.395414 32737 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1229.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:14:44.395555 32737 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1229.prototxt
I0428 20:14:44.395977 32737 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:14:44.395998 32737 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:14:44.396100 32737 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:44.396181 32737 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:44.396280 32737 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:14:44.396306 32737 net.cpp:86] Creating Layer mnist
I0428 20:14:44.396317 32737 net.cpp:382] mnist -> data
I0428 20:14:44.396342 32737 net.cpp:382] mnist -> label
I0428 20:14:44.397471 32737 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:14:44.399957 32737 net.cpp:124] Setting up mnist
I0428 20:14:44.399976 32737 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:14:44.399981 32737 net.cpp:131] Top shape: 64 (64)
I0428 20:14:44.399984 32737 net.cpp:139] Memory required for data: 200960
I0428 20:14:44.399992 32737 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:44.400010 32737 net.cpp:86] Creating Layer conv0
I0428 20:14:44.400032 32737 net.cpp:408] conv0 <- data
I0428 20:14:44.400046 32737 net.cpp:382] conv0 -> conv0
I0428 20:14:44.695435 32737 net.cpp:124] Setting up conv0
I0428 20:14:44.695466 32737 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:14:44.695472 32737 net.cpp:139] Memory required for data: 7573760
I0428 20:14:44.695490 32737 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:44.695504 32737 net.cpp:86] Creating Layer pool0
I0428 20:14:44.695509 32737 net.cpp:408] pool0 <- conv0
I0428 20:14:44.695516 32737 net.cpp:382] pool0 -> pool0
I0428 20:14:44.695574 32737 net.cpp:124] Setting up pool0
I0428 20:14:44.695583 32737 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:14:44.695587 32737 net.cpp:139] Memory required for data: 9416960
I0428 20:14:44.695591 32737 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:44.695605 32737 net.cpp:86] Creating Layer conv1
I0428 20:14:44.695610 32737 net.cpp:408] conv1 <- pool0
I0428 20:14:44.695616 32737 net.cpp:382] conv1 -> conv1
I0428 20:14:44.697801 32737 net.cpp:124] Setting up conv1
I0428 20:14:44.697819 32737 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:14:44.697824 32737 net.cpp:139] Memory required for data: 9449728
I0428 20:14:44.697837 32737 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:44.697846 32737 net.cpp:86] Creating Layer pool1
I0428 20:14:44.697851 32737 net.cpp:408] pool1 <- conv1
I0428 20:14:44.697857 32737 net.cpp:382] pool1 -> pool1
I0428 20:14:44.697907 32737 net.cpp:124] Setting up pool1
I0428 20:14:44.697916 32737 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:14:44.697919 32737 net.cpp:139] Memory required for data: 9457920
I0428 20:14:44.697923 32737 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:44.697932 32737 net.cpp:86] Creating Layer ip1
I0428 20:14:44.697938 32737 net.cpp:408] ip1 <- pool1
I0428 20:14:44.697944 32737 net.cpp:382] ip1 -> ip1
I0428 20:14:44.698057 32737 net.cpp:124] Setting up ip1
I0428 20:14:44.698065 32737 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:44.698070 32737 net.cpp:139] Memory required for data: 9460480
I0428 20:14:44.698078 32737 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:44.698086 32737 net.cpp:86] Creating Layer relu1
I0428 20:14:44.698089 32737 net.cpp:408] relu1 <- ip1
I0428 20:14:44.698096 32737 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:44.698309 32737 net.cpp:124] Setting up relu1
I0428 20:14:44.698319 32737 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:44.698323 32737 net.cpp:139] Memory required for data: 9463040
I0428 20:14:44.698328 32737 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:44.698336 32737 net.cpp:86] Creating Layer ip2
I0428 20:14:44.698339 32737 net.cpp:408] ip2 <- ip1
I0428 20:14:44.698345 32737 net.cpp:382] ip2 -> ip2
I0428 20:14:44.698477 32737 net.cpp:124] Setting up ip2
I0428 20:14:44.698487 32737 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:14:44.698490 32737 net.cpp:139] Memory required for data: 9475840
I0428 20:14:44.698498 32737 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:44.698506 32737 net.cpp:86] Creating Layer relu2
I0428 20:14:44.698513 32737 net.cpp:408] relu2 <- ip2
I0428 20:14:44.698518 32737 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:44.699373 32737 net.cpp:124] Setting up relu2
I0428 20:14:44.699388 32737 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:14:44.699391 32737 net.cpp:139] Memory required for data: 9488640
I0428 20:14:44.699395 32737 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:44.699407 32737 net.cpp:86] Creating Layer ip3
I0428 20:14:44.699411 32737 net.cpp:408] ip3 <- ip2
I0428 20:14:44.699419 32737 net.cpp:382] ip3 -> ip3
I0428 20:14:44.699548 32737 net.cpp:124] Setting up ip3
I0428 20:14:44.699558 32737 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:44.699560 32737 net.cpp:139] Memory required for data: 9491200
I0428 20:14:44.699570 32737 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:44.699578 32737 net.cpp:86] Creating Layer relu3
I0428 20:14:44.699581 32737 net.cpp:408] relu3 <- ip3
I0428 20:14:44.699586 32737 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:44.699796 32737 net.cpp:124] Setting up relu3
I0428 20:14:44.699806 32737 net.cpp:131] Top shape: 64 10 (640)
I0428 20:14:44.699810 32737 net.cpp:139] Memory required for data: 9493760
I0428 20:14:44.699815 32737 layer_factory.hpp:77] Creating layer loss
I0428 20:14:44.699820 32737 net.cpp:86] Creating Layer loss
I0428 20:14:44.699826 32737 net.cpp:408] loss <- ip3
I0428 20:14:44.699831 32737 net.cpp:408] loss <- label
I0428 20:14:44.699838 32737 net.cpp:382] loss -> loss
I0428 20:14:44.699856 32737 layer_factory.hpp:77] Creating layer loss
I0428 20:14:44.700145 32737 net.cpp:124] Setting up loss
I0428 20:14:44.700155 32737 net.cpp:131] Top shape: (1)
I0428 20:14:44.700158 32737 net.cpp:134]     with loss weight 1
I0428 20:14:44.700176 32737 net.cpp:139] Memory required for data: 9493764
I0428 20:14:44.700179 32737 net.cpp:200] loss needs backward computation.
I0428 20:14:44.700184 32737 net.cpp:200] relu3 needs backward computation.
I0428 20:14:44.700188 32737 net.cpp:200] ip3 needs backward computation.
I0428 20:14:44.700191 32737 net.cpp:200] relu2 needs backward computation.
I0428 20:14:44.700196 32737 net.cpp:200] ip2 needs backward computation.
I0428 20:14:44.700199 32737 net.cpp:200] relu1 needs backward computation.
I0428 20:14:44.700202 32737 net.cpp:200] ip1 needs backward computation.
I0428 20:14:44.700206 32737 net.cpp:200] pool1 needs backward computation.
I0428 20:14:44.700211 32737 net.cpp:200] conv1 needs backward computation.
I0428 20:14:44.700213 32737 net.cpp:200] pool0 needs backward computation.
I0428 20:14:44.700217 32737 net.cpp:200] conv0 needs backward computation.
I0428 20:14:44.700222 32737 net.cpp:202] mnist does not need backward computation.
I0428 20:14:44.700225 32737 net.cpp:244] This network produces output loss
I0428 20:14:44.700238 32737 net.cpp:257] Network initialization done.
I0428 20:14:44.700620 32737 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1229.prototxt
I0428 20:14:44.700651 32737 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:14:44.700760 32737 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:14:44.700868 32737 layer_factory.hpp:77] Creating layer mnist
I0428 20:14:44.700918 32737 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:14:44.700937 32737 net.cpp:86] Creating Layer mnist
I0428 20:14:44.700942 32737 net.cpp:382] mnist -> data
I0428 20:14:44.700951 32737 net.cpp:382] mnist -> label
I0428 20:14:44.701056 32737 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:14:44.703225 32737 net.cpp:124] Setting up mnist
I0428 20:14:44.703241 32737 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:14:44.703248 32737 net.cpp:131] Top shape: 100 (100)
I0428 20:14:44.703251 32737 net.cpp:139] Memory required for data: 314000
I0428 20:14:44.703256 32737 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:14:44.703264 32737 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:14:44.703268 32737 net.cpp:408] label_mnist_1_split <- label
I0428 20:14:44.703274 32737 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:14:44.703280 32737 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:14:44.703336 32737 net.cpp:124] Setting up label_mnist_1_split
I0428 20:14:44.703346 32737 net.cpp:131] Top shape: 100 (100)
I0428 20:14:44.703349 32737 net.cpp:131] Top shape: 100 (100)
I0428 20:14:44.703353 32737 net.cpp:139] Memory required for data: 314800
I0428 20:14:44.703356 32737 layer_factory.hpp:77] Creating layer conv0
I0428 20:14:44.703367 32737 net.cpp:86] Creating Layer conv0
I0428 20:14:44.703372 32737 net.cpp:408] conv0 <- data
I0428 20:14:44.703378 32737 net.cpp:382] conv0 -> conv0
I0428 20:14:44.705123 32737 net.cpp:124] Setting up conv0
I0428 20:14:44.705140 32737 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:14:44.705144 32737 net.cpp:139] Memory required for data: 11834800
I0428 20:14:44.705155 32737 layer_factory.hpp:77] Creating layer pool0
I0428 20:14:44.705164 32737 net.cpp:86] Creating Layer pool0
I0428 20:14:44.705168 32737 net.cpp:408] pool0 <- conv0
I0428 20:14:44.705173 32737 net.cpp:382] pool0 -> pool0
I0428 20:14:44.705217 32737 net.cpp:124] Setting up pool0
I0428 20:14:44.705226 32737 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:14:44.705229 32737 net.cpp:139] Memory required for data: 14714800
I0428 20:14:44.705234 32737 layer_factory.hpp:77] Creating layer conv1
I0428 20:14:44.705245 32737 net.cpp:86] Creating Layer conv1
I0428 20:14:44.705250 32737 net.cpp:408] conv1 <- pool0
I0428 20:14:44.705256 32737 net.cpp:382] conv1 -> conv1
I0428 20:14:44.706964 32737 net.cpp:124] Setting up conv1
I0428 20:14:44.706981 32737 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:14:44.706985 32737 net.cpp:139] Memory required for data: 14766000
I0428 20:14:44.706995 32737 layer_factory.hpp:77] Creating layer pool1
I0428 20:14:44.707002 32737 net.cpp:86] Creating Layer pool1
I0428 20:14:44.707007 32737 net.cpp:408] pool1 <- conv1
I0428 20:14:44.707013 32737 net.cpp:382] pool1 -> pool1
I0428 20:14:44.707058 32737 net.cpp:124] Setting up pool1
I0428 20:14:44.707067 32737 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:14:44.707070 32737 net.cpp:139] Memory required for data: 14778800
I0428 20:14:44.707073 32737 layer_factory.hpp:77] Creating layer ip1
I0428 20:14:44.707082 32737 net.cpp:86] Creating Layer ip1
I0428 20:14:44.707087 32737 net.cpp:408] ip1 <- pool1
I0428 20:14:44.707093 32737 net.cpp:382] ip1 -> ip1
I0428 20:14:44.707211 32737 net.cpp:124] Setting up ip1
I0428 20:14:44.707221 32737 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:44.707237 32737 net.cpp:139] Memory required for data: 14782800
I0428 20:14:44.707247 32737 layer_factory.hpp:77] Creating layer relu1
I0428 20:14:44.707252 32737 net.cpp:86] Creating Layer relu1
I0428 20:14:44.707257 32737 net.cpp:408] relu1 <- ip1
I0428 20:14:44.707262 32737 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:14:44.707449 32737 net.cpp:124] Setting up relu1
I0428 20:14:44.707463 32737 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:44.707466 32737 net.cpp:139] Memory required for data: 14786800
I0428 20:14:44.707470 32737 layer_factory.hpp:77] Creating layer ip2
I0428 20:14:44.707479 32737 net.cpp:86] Creating Layer ip2
I0428 20:14:44.707482 32737 net.cpp:408] ip2 <- ip1
I0428 20:14:44.707489 32737 net.cpp:382] ip2 -> ip2
I0428 20:14:44.707614 32737 net.cpp:124] Setting up ip2
I0428 20:14:44.707624 32737 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:14:44.707636 32737 net.cpp:139] Memory required for data: 14806800
I0428 20:14:44.707643 32737 layer_factory.hpp:77] Creating layer relu2
I0428 20:14:44.707649 32737 net.cpp:86] Creating Layer relu2
I0428 20:14:44.707653 32737 net.cpp:408] relu2 <- ip2
I0428 20:14:44.707659 32737 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:14:44.707929 32737 net.cpp:124] Setting up relu2
I0428 20:14:44.707939 32737 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:14:44.707944 32737 net.cpp:139] Memory required for data: 14826800
I0428 20:14:44.707947 32737 layer_factory.hpp:77] Creating layer ip3
I0428 20:14:44.707955 32737 net.cpp:86] Creating Layer ip3
I0428 20:14:44.707959 32737 net.cpp:408] ip3 <- ip2
I0428 20:14:44.707967 32737 net.cpp:382] ip3 -> ip3
I0428 20:14:44.708086 32737 net.cpp:124] Setting up ip3
I0428 20:14:44.708094 32737 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:44.708097 32737 net.cpp:139] Memory required for data: 14830800
I0428 20:14:44.708106 32737 layer_factory.hpp:77] Creating layer relu3
I0428 20:14:44.708112 32737 net.cpp:86] Creating Layer relu3
I0428 20:14:44.708115 32737 net.cpp:408] relu3 <- ip3
I0428 20:14:44.708122 32737 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:14:44.709055 32737 net.cpp:124] Setting up relu3
I0428 20:14:44.709069 32737 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:44.709074 32737 net.cpp:139] Memory required for data: 14834800
I0428 20:14:44.709077 32737 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:14:44.709084 32737 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:14:44.709089 32737 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:14:44.709095 32737 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:14:44.709102 32737 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:14:44.709148 32737 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:14:44.709157 32737 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:44.709161 32737 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:14:44.709164 32737 net.cpp:139] Memory required for data: 14842800
I0428 20:14:44.709168 32737 layer_factory.hpp:77] Creating layer accuracy
I0428 20:14:44.709174 32737 net.cpp:86] Creating Layer accuracy
I0428 20:14:44.709178 32737 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:14:44.709192 32737 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:14:44.709197 32737 net.cpp:382] accuracy -> accuracy
I0428 20:14:44.709205 32737 net.cpp:124] Setting up accuracy
I0428 20:14:44.709211 32737 net.cpp:131] Top shape: (1)
I0428 20:14:44.709215 32737 net.cpp:139] Memory required for data: 14842804
I0428 20:14:44.709218 32737 layer_factory.hpp:77] Creating layer loss
I0428 20:14:44.709225 32737 net.cpp:86] Creating Layer loss
I0428 20:14:44.709229 32737 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:14:44.709240 32737 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:14:44.709251 32737 net.cpp:382] loss -> loss
I0428 20:14:44.709259 32737 layer_factory.hpp:77] Creating layer loss
I0428 20:14:44.709547 32737 net.cpp:124] Setting up loss
I0428 20:14:44.709558 32737 net.cpp:131] Top shape: (1)
I0428 20:14:44.709561 32737 net.cpp:134]     with loss weight 1
I0428 20:14:44.709580 32737 net.cpp:139] Memory required for data: 14842808
I0428 20:14:44.709584 32737 net.cpp:200] loss needs backward computation.
I0428 20:14:44.709595 32737 net.cpp:202] accuracy does not need backward computation.
I0428 20:14:44.709600 32737 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:14:44.709604 32737 net.cpp:200] relu3 needs backward computation.
I0428 20:14:44.709607 32737 net.cpp:200] ip3 needs backward computation.
I0428 20:14:44.709611 32737 net.cpp:200] relu2 needs backward computation.
I0428 20:14:44.709615 32737 net.cpp:200] ip2 needs backward computation.
I0428 20:14:44.709619 32737 net.cpp:200] relu1 needs backward computation.
I0428 20:14:44.709621 32737 net.cpp:200] ip1 needs backward computation.
I0428 20:14:44.709626 32737 net.cpp:200] pool1 needs backward computation.
I0428 20:14:44.709630 32737 net.cpp:200] conv1 needs backward computation.
I0428 20:14:44.709635 32737 net.cpp:200] pool0 needs backward computation.
I0428 20:14:44.709637 32737 net.cpp:200] conv0 needs backward computation.
I0428 20:14:44.709642 32737 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:14:44.709646 32737 net.cpp:202] mnist does not need backward computation.
I0428 20:14:44.709650 32737 net.cpp:244] This network produces output accuracy
I0428 20:14:44.709655 32737 net.cpp:244] This network produces output loss
I0428 20:14:44.709668 32737 net.cpp:257] Network initialization done.
I0428 20:14:44.709715 32737 solver.cpp:56] Solver scaffolding done.
I0428 20:14:44.710124 32737 caffe.cpp:248] Starting Optimization
I0428 20:14:44.710131 32737 solver.cpp:273] Solving LeNet
I0428 20:14:44.710134 32737 solver.cpp:274] Learning Rate Policy: inv
I0428 20:14:44.711069 32737 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:14:44.717675 32737 blocking_queue.cpp:49] Waiting for data
I0428 20:14:44.786973 32744 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:44.787761 32737 solver.cpp:398]     Test net output #0: accuracy = 0.1243
I0428 20:14:44.787796 32737 solver.cpp:398]     Test net output #1: loss = 2.30584 (* 1 = 2.30584 loss)
I0428 20:14:44.791996 32737 solver.cpp:219] Iteration 0 (0 iter/s, 0.0818289s/100 iters), loss = 2.30017
I0428 20:14:44.792019 32737 solver.cpp:238]     Train net output #0: loss = 2.30017 (* 1 = 2.30017 loss)
I0428 20:14:44.792031 32737 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:14:44.906879 32737 solver.cpp:219] Iteration 100 (870.718 iter/s, 0.114848s/100 iters), loss = 0.805784
I0428 20:14:44.906919 32737 solver.cpp:238]     Train net output #0: loss = 0.805784 (* 1 = 0.805784 loss)
I0428 20:14:44.906926 32737 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:14:45.034142 32737 solver.cpp:219] Iteration 200 (785.991 iter/s, 0.127228s/100 iters), loss = 0.847715
I0428 20:14:45.034186 32737 solver.cpp:238]     Train net output #0: loss = 0.847715 (* 1 = 0.847715 loss)
I0428 20:14:45.034193 32737 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:14:45.149361 32737 solver.cpp:219] Iteration 300 (868.318 iter/s, 0.115165s/100 iters), loss = 0.455427
I0428 20:14:45.149405 32737 solver.cpp:238]     Train net output #0: loss = 0.455427 (* 1 = 0.455427 loss)
I0428 20:14:45.149411 32737 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:14:45.262025 32737 solver.cpp:219] Iteration 400 (887.88 iter/s, 0.112628s/100 iters), loss = 0.439887
I0428 20:14:45.262065 32737 solver.cpp:238]     Train net output #0: loss = 0.439887 (* 1 = 0.439887 loss)
I0428 20:14:45.262073 32737 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:14:45.372504 32737 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:14:45.447396 32744 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:45.448501 32737 solver.cpp:398]     Test net output #0: accuracy = 0.9212
I0428 20:14:45.448540 32737 solver.cpp:398]     Test net output #1: loss = 0.249889 (* 1 = 0.249889 loss)
I0428 20:14:45.449712 32737 solver.cpp:219] Iteration 500 (532.916 iter/s, 0.187647s/100 iters), loss = 0.238834
I0428 20:14:45.449753 32737 solver.cpp:238]     Train net output #0: loss = 0.238834 (* 1 = 0.238834 loss)
I0428 20:14:45.449761 32737 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:14:45.568820 32737 solver.cpp:219] Iteration 600 (839.959 iter/s, 0.119053s/100 iters), loss = 0.223386
I0428 20:14:45.568862 32737 solver.cpp:238]     Train net output #0: loss = 0.223386 (* 1 = 0.223386 loss)
I0428 20:14:45.568869 32737 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:14:45.681218 32737 solver.cpp:219] Iteration 700 (889.993 iter/s, 0.11236s/100 iters), loss = 0.301663
I0428 20:14:45.681258 32737 solver.cpp:238]     Train net output #0: loss = 0.301663 (* 1 = 0.301663 loss)
I0428 20:14:45.681264 32737 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:14:45.794726 32737 solver.cpp:219] Iteration 800 (881.263 iter/s, 0.113474s/100 iters), loss = 0.392893
I0428 20:14:45.794766 32737 solver.cpp:238]     Train net output #0: loss = 0.392893 (* 1 = 0.392893 loss)
I0428 20:14:45.794773 32737 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:14:45.907578 32737 solver.cpp:219] Iteration 900 (886.39 iter/s, 0.112817s/100 iters), loss = 0.310643
I0428 20:14:45.907620 32737 solver.cpp:238]     Train net output #0: loss = 0.310643 (* 1 = 0.310643 loss)
I0428 20:14:45.907626 32737 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:14:45.944939 32743 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:46.018651 32737 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:14:46.019618 32737 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:14:46.020303 32737 solver.cpp:311] Iteration 1000, loss = 0.192017
I0428 20:14:46.020318 32737 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:14:46.094279 32744 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:14:46.095158 32737 solver.cpp:398]     Test net output #0: accuracy = 0.9545
I0428 20:14:46.095193 32737 solver.cpp:398]     Test net output #1: loss = 0.146214 (* 1 = 0.146214 loss)
I0428 20:14:46.095199 32737 solver.cpp:316] Optimization Done.
I0428 20:14:46.095202 32737 caffe.cpp:259] Optimization Done.
