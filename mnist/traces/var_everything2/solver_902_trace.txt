I0428 20:01:24.034844 29718 caffe.cpp:218] Using GPUs 0
I0428 20:01:24.072027 29718 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:24.526461 29718 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test902.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:24.526587 29718 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test902.prototxt
I0428 20:01:24.526901 29718 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:24.526916 29718 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:24.526988 29718 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:01:24.527050 29718 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:24.527151 29718 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:24.527187 29718 net.cpp:86] Creating Layer mnist
I0428 20:01:24.527194 29718 net.cpp:382] mnist -> data
I0428 20:01:24.527212 29718 net.cpp:382] mnist -> label
I0428 20:01:24.528148 29718 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:24.530539 29718 net.cpp:124] Setting up mnist
I0428 20:01:24.530570 29718 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:24.530575 29718 net.cpp:131] Top shape: 64 (64)
I0428 20:01:24.530577 29718 net.cpp:139] Memory required for data: 200960
I0428 20:01:24.530583 29718 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:24.530597 29718 net.cpp:86] Creating Layer conv0
I0428 20:01:24.530602 29718 net.cpp:408] conv0 <- data
I0428 20:01:24.530613 29718 net.cpp:382] conv0 -> conv0
I0428 20:01:24.758368 29718 net.cpp:124] Setting up conv0
I0428 20:01:24.758410 29718 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:24.758414 29718 net.cpp:139] Memory required for data: 1675520
I0428 20:01:24.758463 29718 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:24.758476 29718 net.cpp:86] Creating Layer pool0
I0428 20:01:24.758481 29718 net.cpp:408] pool0 <- conv0
I0428 20:01:24.758486 29718 net.cpp:382] pool0 -> pool0
I0428 20:01:24.758533 29718 net.cpp:124] Setting up pool0
I0428 20:01:24.758540 29718 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:24.758543 29718 net.cpp:139] Memory required for data: 2044160
I0428 20:01:24.758546 29718 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:24.758556 29718 net.cpp:86] Creating Layer conv1
I0428 20:01:24.758560 29718 net.cpp:408] conv1 <- pool0
I0428 20:01:24.758564 29718 net.cpp:382] conv1 -> conv1
I0428 20:01:24.761492 29718 net.cpp:124] Setting up conv1
I0428 20:01:24.761521 29718 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:01:24.761524 29718 net.cpp:139] Memory required for data: 2863360
I0428 20:01:24.761533 29718 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:24.761539 29718 net.cpp:86] Creating Layer pool1
I0428 20:01:24.761543 29718 net.cpp:408] pool1 <- conv1
I0428 20:01:24.761548 29718 net.cpp:382] pool1 -> pool1
I0428 20:01:24.761598 29718 net.cpp:124] Setting up pool1
I0428 20:01:24.761605 29718 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:01:24.761607 29718 net.cpp:139] Memory required for data: 3068160
I0428 20:01:24.761610 29718 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:24.761616 29718 net.cpp:86] Creating Layer ip1
I0428 20:01:24.761620 29718 net.cpp:408] ip1 <- pool1
I0428 20:01:24.761625 29718 net.cpp:382] ip1 -> ip1
I0428 20:01:24.761772 29718 net.cpp:124] Setting up ip1
I0428 20:01:24.761780 29718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:24.761783 29718 net.cpp:139] Memory required for data: 3070720
I0428 20:01:24.761790 29718 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:24.761795 29718 net.cpp:86] Creating Layer relu1
I0428 20:01:24.761798 29718 net.cpp:408] relu1 <- ip1
I0428 20:01:24.761802 29718 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:24.761950 29718 net.cpp:124] Setting up relu1
I0428 20:01:24.761957 29718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:24.761960 29718 net.cpp:139] Memory required for data: 3073280
I0428 20:01:24.761963 29718 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:24.761968 29718 net.cpp:86] Creating Layer ip2
I0428 20:01:24.761971 29718 net.cpp:408] ip2 <- ip1
I0428 20:01:24.761976 29718 net.cpp:382] ip2 -> ip2
I0428 20:01:24.762060 29718 net.cpp:124] Setting up ip2
I0428 20:01:24.762068 29718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:24.762070 29718 net.cpp:139] Memory required for data: 3075840
I0428 20:01:24.762075 29718 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:24.762081 29718 net.cpp:86] Creating Layer relu2
I0428 20:01:24.762084 29718 net.cpp:408] relu2 <- ip2
I0428 20:01:24.762087 29718 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:24.762873 29718 net.cpp:124] Setting up relu2
I0428 20:01:24.762887 29718 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:24.762892 29718 net.cpp:139] Memory required for data: 3078400
I0428 20:01:24.762894 29718 layer_factory.hpp:77] Creating layer loss
I0428 20:01:24.762902 29718 net.cpp:86] Creating Layer loss
I0428 20:01:24.762905 29718 net.cpp:408] loss <- ip2
I0428 20:01:24.762912 29718 net.cpp:408] loss <- label
I0428 20:01:24.762917 29718 net.cpp:382] loss -> loss
I0428 20:01:24.762935 29718 layer_factory.hpp:77] Creating layer loss
I0428 20:01:24.763206 29718 net.cpp:124] Setting up loss
I0428 20:01:24.763216 29718 net.cpp:131] Top shape: (1)
I0428 20:01:24.763219 29718 net.cpp:134]     with loss weight 1
I0428 20:01:24.763232 29718 net.cpp:139] Memory required for data: 3078404
I0428 20:01:24.763236 29718 net.cpp:200] loss needs backward computation.
I0428 20:01:24.763239 29718 net.cpp:200] relu2 needs backward computation.
I0428 20:01:24.763242 29718 net.cpp:200] ip2 needs backward computation.
I0428 20:01:24.763245 29718 net.cpp:200] relu1 needs backward computation.
I0428 20:01:24.763247 29718 net.cpp:200] ip1 needs backward computation.
I0428 20:01:24.763260 29718 net.cpp:200] pool1 needs backward computation.
I0428 20:01:24.763263 29718 net.cpp:200] conv1 needs backward computation.
I0428 20:01:24.763267 29718 net.cpp:200] pool0 needs backward computation.
I0428 20:01:24.763269 29718 net.cpp:200] conv0 needs backward computation.
I0428 20:01:24.763273 29718 net.cpp:202] mnist does not need backward computation.
I0428 20:01:24.763275 29718 net.cpp:244] This network produces output loss
I0428 20:01:24.763283 29718 net.cpp:257] Network initialization done.
I0428 20:01:24.763589 29718 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test902.prototxt
I0428 20:01:24.763614 29718 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:24.763711 29718 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:01:24.763789 29718 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:24.763836 29718 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:24.763865 29718 net.cpp:86] Creating Layer mnist
I0428 20:01:24.763870 29718 net.cpp:382] mnist -> data
I0428 20:01:24.763878 29718 net.cpp:382] mnist -> label
I0428 20:01:24.763984 29718 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:24.766291 29718 net.cpp:124] Setting up mnist
I0428 20:01:24.766329 29718 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:24.766348 29718 net.cpp:131] Top shape: 100 (100)
I0428 20:01:24.766351 29718 net.cpp:139] Memory required for data: 314000
I0428 20:01:24.766355 29718 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:24.766362 29718 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:24.766366 29718 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:24.766371 29718 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:24.766376 29718 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:24.766469 29718 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:24.766486 29718 net.cpp:131] Top shape: 100 (100)
I0428 20:01:24.766491 29718 net.cpp:131] Top shape: 100 (100)
I0428 20:01:24.766494 29718 net.cpp:139] Memory required for data: 314800
I0428 20:01:24.766497 29718 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:24.766505 29718 net.cpp:86] Creating Layer conv0
I0428 20:01:24.766508 29718 net.cpp:408] conv0 <- data
I0428 20:01:24.766515 29718 net.cpp:382] conv0 -> conv0
I0428 20:01:24.768215 29718 net.cpp:124] Setting up conv0
I0428 20:01:24.768259 29718 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:24.768262 29718 net.cpp:139] Memory required for data: 2618800
I0428 20:01:24.768270 29718 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:24.768277 29718 net.cpp:86] Creating Layer pool0
I0428 20:01:24.768280 29718 net.cpp:408] pool0 <- conv0
I0428 20:01:24.768285 29718 net.cpp:382] pool0 -> pool0
I0428 20:01:24.768317 29718 net.cpp:124] Setting up pool0
I0428 20:01:24.768323 29718 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:24.768326 29718 net.cpp:139] Memory required for data: 3194800
I0428 20:01:24.768328 29718 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:24.768337 29718 net.cpp:86] Creating Layer conv1
I0428 20:01:24.768339 29718 net.cpp:408] conv1 <- pool0
I0428 20:01:24.768344 29718 net.cpp:382] conv1 -> conv1
I0428 20:01:24.769970 29718 net.cpp:124] Setting up conv1
I0428 20:01:24.770000 29718 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:01:24.770020 29718 net.cpp:139] Memory required for data: 4474800
I0428 20:01:24.770028 29718 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:24.770038 29718 net.cpp:86] Creating Layer pool1
I0428 20:01:24.770041 29718 net.cpp:408] pool1 <- conv1
I0428 20:01:24.770047 29718 net.cpp:382] pool1 -> pool1
I0428 20:01:24.770083 29718 net.cpp:124] Setting up pool1
I0428 20:01:24.770089 29718 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:01:24.770093 29718 net.cpp:139] Memory required for data: 4794800
I0428 20:01:24.770097 29718 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:24.770102 29718 net.cpp:86] Creating Layer ip1
I0428 20:01:24.770105 29718 net.cpp:408] ip1 <- pool1
I0428 20:01:24.770112 29718 net.cpp:382] ip1 -> ip1
I0428 20:01:24.770275 29718 net.cpp:124] Setting up ip1
I0428 20:01:24.770284 29718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:24.770287 29718 net.cpp:139] Memory required for data: 4798800
I0428 20:01:24.770293 29718 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:24.770299 29718 net.cpp:86] Creating Layer relu1
I0428 20:01:24.770303 29718 net.cpp:408] relu1 <- ip1
I0428 20:01:24.770308 29718 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:24.770457 29718 net.cpp:124] Setting up relu1
I0428 20:01:24.770465 29718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:24.770469 29718 net.cpp:139] Memory required for data: 4802800
I0428 20:01:24.770473 29718 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:24.770479 29718 net.cpp:86] Creating Layer ip2
I0428 20:01:24.770483 29718 net.cpp:408] ip2 <- ip1
I0428 20:01:24.770488 29718 net.cpp:382] ip2 -> ip2
I0428 20:01:24.770589 29718 net.cpp:124] Setting up ip2
I0428 20:01:24.770596 29718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:24.770599 29718 net.cpp:139] Memory required for data: 4806800
I0428 20:01:24.770606 29718 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:24.770611 29718 net.cpp:86] Creating Layer relu2
I0428 20:01:24.770613 29718 net.cpp:408] relu2 <- ip2
I0428 20:01:24.770617 29718 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:24.770845 29718 net.cpp:124] Setting up relu2
I0428 20:01:24.770854 29718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:24.770859 29718 net.cpp:139] Memory required for data: 4810800
I0428 20:01:24.770861 29718 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:01:24.770866 29718 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:01:24.770870 29718 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:01:24.770874 29718 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:01:24.770890 29718 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:01:24.770929 29718 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:01:24.770936 29718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:24.770941 29718 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:24.770943 29718 net.cpp:139] Memory required for data: 4818800
I0428 20:01:24.770946 29718 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:24.770952 29718 net.cpp:86] Creating Layer accuracy
I0428 20:01:24.770956 29718 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:01:24.770959 29718 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:24.770964 29718 net.cpp:382] accuracy -> accuracy
I0428 20:01:24.770972 29718 net.cpp:124] Setting up accuracy
I0428 20:01:24.770977 29718 net.cpp:131] Top shape: (1)
I0428 20:01:24.770978 29718 net.cpp:139] Memory required for data: 4818804
I0428 20:01:24.770982 29718 layer_factory.hpp:77] Creating layer loss
I0428 20:01:24.770985 29718 net.cpp:86] Creating Layer loss
I0428 20:01:24.770989 29718 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:01:24.770993 29718 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:24.770998 29718 net.cpp:382] loss -> loss
I0428 20:01:24.771003 29718 layer_factory.hpp:77] Creating layer loss
I0428 20:01:24.771224 29718 net.cpp:124] Setting up loss
I0428 20:01:24.771234 29718 net.cpp:131] Top shape: (1)
I0428 20:01:24.771237 29718 net.cpp:134]     with loss weight 1
I0428 20:01:24.771244 29718 net.cpp:139] Memory required for data: 4818808
I0428 20:01:24.771247 29718 net.cpp:200] loss needs backward computation.
I0428 20:01:24.771251 29718 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:24.771255 29718 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:01:24.771260 29718 net.cpp:200] relu2 needs backward computation.
I0428 20:01:24.771262 29718 net.cpp:200] ip2 needs backward computation.
I0428 20:01:24.771265 29718 net.cpp:200] relu1 needs backward computation.
I0428 20:01:24.771268 29718 net.cpp:200] ip1 needs backward computation.
I0428 20:01:24.771272 29718 net.cpp:200] pool1 needs backward computation.
I0428 20:01:24.771275 29718 net.cpp:200] conv1 needs backward computation.
I0428 20:01:24.771280 29718 net.cpp:200] pool0 needs backward computation.
I0428 20:01:24.771282 29718 net.cpp:200] conv0 needs backward computation.
I0428 20:01:24.771291 29718 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:24.771296 29718 net.cpp:202] mnist does not need backward computation.
I0428 20:01:24.771297 29718 net.cpp:244] This network produces output accuracy
I0428 20:01:24.771301 29718 net.cpp:244] This network produces output loss
I0428 20:01:24.771311 29718 net.cpp:257] Network initialization done.
I0428 20:01:24.771363 29718 solver.cpp:56] Solver scaffolding done.
I0428 20:01:24.771627 29718 caffe.cpp:248] Starting Optimization
I0428 20:01:24.771633 29718 solver.cpp:273] Solving LeNet
I0428 20:01:24.771636 29718 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:24.771875 29718 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:24.776486 29718 blocking_queue.cpp:49] Waiting for data
I0428 20:01:24.839586 29725 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:24.840091 29718 solver.cpp:398]     Test net output #0: accuracy = 0.1023
I0428 20:01:24.840124 29718 solver.cpp:398]     Test net output #1: loss = 2.34567 (* 1 = 2.34567 loss)
I0428 20:01:24.843091 29718 solver.cpp:219] Iteration 0 (0 iter/s, 0.0714281s/100 iters), loss = 2.37599
I0428 20:01:24.843127 29718 solver.cpp:238]     Train net output #0: loss = 2.37599 (* 1 = 2.37599 loss)
I0428 20:01:24.843142 29718 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:24.953243 29718 solver.cpp:219] Iteration 100 (908.109 iter/s, 0.110119s/100 iters), loss = 0.535113
I0428 20:01:24.953297 29718 solver.cpp:238]     Train net output #0: loss = 0.535113 (* 1 = 0.535113 loss)
I0428 20:01:24.953305 29718 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:25.059795 29718 solver.cpp:219] Iteration 200 (938.966 iter/s, 0.1065s/100 iters), loss = 0.30162
I0428 20:01:25.059849 29718 solver.cpp:238]     Train net output #0: loss = 0.30162 (* 1 = 0.30162 loss)
I0428 20:01:25.059859 29718 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:25.168401 29718 solver.cpp:219] Iteration 300 (921.287 iter/s, 0.108544s/100 iters), loss = 0.222116
I0428 20:01:25.168431 29718 solver.cpp:238]     Train net output #0: loss = 0.222116 (* 1 = 0.222116 loss)
I0428 20:01:25.168437 29718 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:25.274891 29718 solver.cpp:219] Iteration 400 (939.409 iter/s, 0.10645s/100 iters), loss = 0.115593
I0428 20:01:25.274924 29718 solver.cpp:238]     Train net output #0: loss = 0.115593 (* 1 = 0.115593 loss)
I0428 20:01:25.274931 29718 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:25.378736 29718 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:25.453138 29725 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:25.453686 29718 solver.cpp:398]     Test net output #0: accuracy = 0.954
I0428 20:01:25.453706 29718 solver.cpp:398]     Test net output #1: loss = 0.149386 (* 1 = 0.149386 loss)
I0428 20:01:25.454723 29718 solver.cpp:219] Iteration 500 (556.214 iter/s, 0.179787s/100 iters), loss = 0.185859
I0428 20:01:25.454772 29718 solver.cpp:238]     Train net output #0: loss = 0.185859 (* 1 = 0.185859 loss)
I0428 20:01:25.454778 29718 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:25.561520 29718 solver.cpp:219] Iteration 600 (936.885 iter/s, 0.106737s/100 iters), loss = 0.0691706
I0428 20:01:25.561558 29718 solver.cpp:238]     Train net output #0: loss = 0.0691707 (* 1 = 0.0691707 loss)
I0428 20:01:25.561568 29718 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:25.662807 29718 solver.cpp:219] Iteration 700 (987.754 iter/s, 0.10124s/100 iters), loss = 0.151182
I0428 20:01:25.662837 29718 solver.cpp:238]     Train net output #0: loss = 0.151182 (* 1 = 0.151182 loss)
I0428 20:01:25.662845 29718 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:25.765775 29718 solver.cpp:219] Iteration 800 (971.569 iter/s, 0.102926s/100 iters), loss = 0.236417
I0428 20:01:25.765806 29718 solver.cpp:238]     Train net output #0: loss = 0.236418 (* 1 = 0.236418 loss)
I0428 20:01:25.765815 29718 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:25.870398 29718 solver.cpp:219] Iteration 900 (956.204 iter/s, 0.10458s/100 iters), loss = 0.224155
I0428 20:01:25.870431 29718 solver.cpp:238]     Train net output #0: loss = 0.224155 (* 1 = 0.224155 loss)
I0428 20:01:25.870440 29718 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:25.905202 29724 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:25.973896 29718 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:25.975107 29718 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:25.975993 29718 solver.cpp:311] Iteration 1000, loss = 0.149402
I0428 20:01:25.976029 29718 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:26.034162 29725 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:26.034730 29718 solver.cpp:398]     Test net output #0: accuracy = 0.9734
I0428 20:01:26.034761 29718 solver.cpp:398]     Test net output #1: loss = 0.0846421 (* 1 = 0.0846421 loss)
I0428 20:01:26.034770 29718 solver.cpp:316] Optimization Done.
I0428 20:01:26.034775 29718 caffe.cpp:259] Optimization Done.
