I0428 20:20:23.772943  1543 caffe.cpp:218] Using GPUs 0
I0428 20:20:23.810556  1543 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:24.337882  1543 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1362.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:24.338104  1543 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1362.prototxt
I0428 20:20:24.338703  1543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:24.338739  1543 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:24.338907  1543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:24.339068  1543 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:24.339251  1543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:24.339295  1543 net.cpp:86] Creating Layer mnist
I0428 20:20:24.339313  1543 net.cpp:382] mnist -> data
I0428 20:20:24.339356  1543 net.cpp:382] mnist -> label
I0428 20:20:24.341126  1543 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:24.344784  1543 net.cpp:124] Setting up mnist
I0428 20:20:24.344830  1543 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:24.344846  1543 net.cpp:131] Top shape: 64 (64)
I0428 20:20:24.344856  1543 net.cpp:139] Memory required for data: 200960
I0428 20:20:24.344871  1543 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:24.344905  1543 net.cpp:86] Creating Layer conv0
I0428 20:20:24.344939  1543 net.cpp:408] conv0 <- data
I0428 20:20:24.344967  1543 net.cpp:382] conv0 -> conv0
I0428 20:20:24.648146  1543 net.cpp:124] Setting up conv0
I0428 20:20:24.648186  1543 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:24.648193  1543 net.cpp:139] Memory required for data: 7573760
I0428 20:20:24.648217  1543 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:24.648238  1543 net.cpp:86] Creating Layer pool0
I0428 20:20:24.648257  1543 net.cpp:408] pool0 <- conv0
I0428 20:20:24.648268  1543 net.cpp:382] pool0 -> pool0
I0428 20:20:24.648334  1543 net.cpp:124] Setting up pool0
I0428 20:20:24.648344  1543 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:24.648350  1543 net.cpp:139] Memory required for data: 9416960
I0428 20:20:24.648357  1543 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:24.648375  1543 net.cpp:86] Creating Layer conv1
I0428 20:20:24.648385  1543 net.cpp:408] conv1 <- pool0
I0428 20:20:24.648394  1543 net.cpp:382] conv1 -> conv1
I0428 20:20:24.650760  1543 net.cpp:124] Setting up conv1
I0428 20:20:24.650781  1543 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:24.650789  1543 net.cpp:139] Memory required for data: 9826560
I0428 20:20:24.650804  1543 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:24.650818  1543 net.cpp:86] Creating Layer pool1
I0428 20:20:24.650825  1543 net.cpp:408] pool1 <- conv1
I0428 20:20:24.650835  1543 net.cpp:382] pool1 -> pool1
I0428 20:20:24.650887  1543 net.cpp:124] Setting up pool1
I0428 20:20:24.650899  1543 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:24.650905  1543 net.cpp:139] Memory required for data: 9928960
I0428 20:20:24.650912  1543 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:24.650924  1543 net.cpp:86] Creating Layer ip1
I0428 20:20:24.650931  1543 net.cpp:408] ip1 <- pool1
I0428 20:20:24.650941  1543 net.cpp:382] ip1 -> ip1
I0428 20:20:24.651206  1543 net.cpp:124] Setting up ip1
I0428 20:20:24.651217  1543 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:24.651223  1543 net.cpp:139] Memory required for data: 9941760
I0428 20:20:24.651238  1543 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:24.651252  1543 net.cpp:86] Creating Layer relu1
I0428 20:20:24.651263  1543 net.cpp:408] relu1 <- ip1
I0428 20:20:24.651273  1543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:24.651476  1543 net.cpp:124] Setting up relu1
I0428 20:20:24.651489  1543 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:24.651494  1543 net.cpp:139] Memory required for data: 9954560
I0428 20:20:24.651501  1543 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:24.651513  1543 net.cpp:86] Creating Layer ip2
I0428 20:20:24.651520  1543 net.cpp:408] ip2 <- ip1
I0428 20:20:24.651530  1543 net.cpp:382] ip2 -> ip2
I0428 20:20:24.651672  1543 net.cpp:124] Setting up ip2
I0428 20:20:24.651684  1543 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:24.651690  1543 net.cpp:139] Memory required for data: 9967360
I0428 20:20:24.651700  1543 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:24.651712  1543 net.cpp:86] Creating Layer relu2
I0428 20:20:24.651720  1543 net.cpp:408] relu2 <- ip2
I0428 20:20:24.651728  1543 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:24.652582  1543 net.cpp:124] Setting up relu2
I0428 20:20:24.652600  1543 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:24.652606  1543 net.cpp:139] Memory required for data: 9980160
I0428 20:20:24.652614  1543 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:24.652627  1543 net.cpp:86] Creating Layer ip3
I0428 20:20:24.652633  1543 net.cpp:408] ip3 <- ip2
I0428 20:20:24.652645  1543 net.cpp:382] ip3 -> ip3
I0428 20:20:24.652775  1543 net.cpp:124] Setting up ip3
I0428 20:20:24.652786  1543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:24.652792  1543 net.cpp:139] Memory required for data: 9982720
I0428 20:20:24.652814  1543 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:24.652825  1543 net.cpp:86] Creating Layer relu3
I0428 20:20:24.652832  1543 net.cpp:408] relu3 <- ip3
I0428 20:20:24.652842  1543 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:24.653050  1543 net.cpp:124] Setting up relu3
I0428 20:20:24.653064  1543 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:24.653069  1543 net.cpp:139] Memory required for data: 9985280
I0428 20:20:24.653076  1543 layer_factory.hpp:77] Creating layer loss
I0428 20:20:24.653086  1543 net.cpp:86] Creating Layer loss
I0428 20:20:24.653093  1543 net.cpp:408] loss <- ip3
I0428 20:20:24.653101  1543 net.cpp:408] loss <- label
I0428 20:20:24.653111  1543 net.cpp:382] loss -> loss
I0428 20:20:24.653139  1543 layer_factory.hpp:77] Creating layer loss
I0428 20:20:24.653434  1543 net.cpp:124] Setting up loss
I0428 20:20:24.653445  1543 net.cpp:131] Top shape: (1)
I0428 20:20:24.653451  1543 net.cpp:134]     with loss weight 1
I0428 20:20:24.653475  1543 net.cpp:139] Memory required for data: 9985284
I0428 20:20:24.653482  1543 net.cpp:200] loss needs backward computation.
I0428 20:20:24.653489  1543 net.cpp:200] relu3 needs backward computation.
I0428 20:20:24.653496  1543 net.cpp:200] ip3 needs backward computation.
I0428 20:20:24.653501  1543 net.cpp:200] relu2 needs backward computation.
I0428 20:20:24.653506  1543 net.cpp:200] ip2 needs backward computation.
I0428 20:20:24.653512  1543 net.cpp:200] relu1 needs backward computation.
I0428 20:20:24.653518  1543 net.cpp:200] ip1 needs backward computation.
I0428 20:20:24.653524  1543 net.cpp:200] pool1 needs backward computation.
I0428 20:20:24.653530  1543 net.cpp:200] conv1 needs backward computation.
I0428 20:20:24.653537  1543 net.cpp:200] pool0 needs backward computation.
I0428 20:20:24.653542  1543 net.cpp:200] conv0 needs backward computation.
I0428 20:20:24.653548  1543 net.cpp:202] mnist does not need backward computation.
I0428 20:20:24.653554  1543 net.cpp:244] This network produces output loss
I0428 20:20:24.653573  1543 net.cpp:257] Network initialization done.
I0428 20:20:24.653970  1543 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1362.prototxt
I0428 20:20:24.654011  1543 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:24.654132  1543 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:24.654284  1543 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:24.654356  1543 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:24.654377  1543 net.cpp:86] Creating Layer mnist
I0428 20:20:24.654386  1543 net.cpp:382] mnist -> data
I0428 20:20:24.654400  1543 net.cpp:382] mnist -> label
I0428 20:20:24.654548  1543 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:24.656941  1543 net.cpp:124] Setting up mnist
I0428 20:20:24.656960  1543 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:24.656971  1543 net.cpp:131] Top shape: 100 (100)
I0428 20:20:24.656977  1543 net.cpp:139] Memory required for data: 314000
I0428 20:20:24.656985  1543 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:24.656996  1543 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:24.657003  1543 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:24.657012  1543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:24.657025  1543 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:24.657162  1543 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:24.657174  1543 net.cpp:131] Top shape: 100 (100)
I0428 20:20:24.657181  1543 net.cpp:131] Top shape: 100 (100)
I0428 20:20:24.657187  1543 net.cpp:139] Memory required for data: 314800
I0428 20:20:24.657193  1543 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:24.657212  1543 net.cpp:86] Creating Layer conv0
I0428 20:20:24.657219  1543 net.cpp:408] conv0 <- data
I0428 20:20:24.657233  1543 net.cpp:382] conv0 -> conv0
I0428 20:20:24.658987  1543 net.cpp:124] Setting up conv0
I0428 20:20:24.659005  1543 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:24.659013  1543 net.cpp:139] Memory required for data: 11834800
I0428 20:20:24.659029  1543 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:24.659044  1543 net.cpp:86] Creating Layer pool0
I0428 20:20:24.659052  1543 net.cpp:408] pool0 <- conv0
I0428 20:20:24.659062  1543 net.cpp:382] pool0 -> pool0
I0428 20:20:24.659129  1543 net.cpp:124] Setting up pool0
I0428 20:20:24.659142  1543 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:24.659148  1543 net.cpp:139] Memory required for data: 14714800
I0428 20:20:24.659154  1543 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:24.659173  1543 net.cpp:86] Creating Layer conv1
I0428 20:20:24.659181  1543 net.cpp:408] conv1 <- pool0
I0428 20:20:24.659194  1543 net.cpp:382] conv1 -> conv1
I0428 20:20:24.661283  1543 net.cpp:124] Setting up conv1
I0428 20:20:24.661301  1543 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:24.661309  1543 net.cpp:139] Memory required for data: 15354800
I0428 20:20:24.661326  1543 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:24.661337  1543 net.cpp:86] Creating Layer pool1
I0428 20:20:24.661345  1543 net.cpp:408] pool1 <- conv1
I0428 20:20:24.661360  1543 net.cpp:382] pool1 -> pool1
I0428 20:20:24.661417  1543 net.cpp:124] Setting up pool1
I0428 20:20:24.661429  1543 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:24.661435  1543 net.cpp:139] Memory required for data: 15514800
I0428 20:20:24.661442  1543 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:24.661456  1543 net.cpp:86] Creating Layer ip1
I0428 20:20:24.661464  1543 net.cpp:408] ip1 <- pool1
I0428 20:20:24.661478  1543 net.cpp:382] ip1 -> ip1
I0428 20:20:24.661751  1543 net.cpp:124] Setting up ip1
I0428 20:20:24.661762  1543 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:24.661782  1543 net.cpp:139] Memory required for data: 15534800
I0428 20:20:24.661798  1543 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:24.661809  1543 net.cpp:86] Creating Layer relu1
I0428 20:20:24.661816  1543 net.cpp:408] relu1 <- ip1
I0428 20:20:24.661829  1543 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:24.662081  1543 net.cpp:124] Setting up relu1
I0428 20:20:24.662094  1543 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:24.662101  1543 net.cpp:139] Memory required for data: 15554800
I0428 20:20:24.662106  1543 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:24.662119  1543 net.cpp:86] Creating Layer ip2
I0428 20:20:24.662127  1543 net.cpp:408] ip2 <- ip1
I0428 20:20:24.662138  1543 net.cpp:382] ip2 -> ip2
I0428 20:20:24.662292  1543 net.cpp:124] Setting up ip2
I0428 20:20:24.662302  1543 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:24.662309  1543 net.cpp:139] Memory required for data: 15574800
I0428 20:20:24.662320  1543 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:24.662330  1543 net.cpp:86] Creating Layer relu2
I0428 20:20:24.662336  1543 net.cpp:408] relu2 <- ip2
I0428 20:20:24.662348  1543 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:24.662547  1543 net.cpp:124] Setting up relu2
I0428 20:20:24.662559  1543 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:24.662565  1543 net.cpp:139] Memory required for data: 15594800
I0428 20:20:24.662571  1543 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:24.662585  1543 net.cpp:86] Creating Layer ip3
I0428 20:20:24.662590  1543 net.cpp:408] ip3 <- ip2
I0428 20:20:24.662600  1543 net.cpp:382] ip3 -> ip3
I0428 20:20:24.662734  1543 net.cpp:124] Setting up ip3
I0428 20:20:24.662745  1543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:24.662752  1543 net.cpp:139] Memory required for data: 15598800
I0428 20:20:24.662770  1543 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:24.662782  1543 net.cpp:86] Creating Layer relu3
I0428 20:20:24.662789  1543 net.cpp:408] relu3 <- ip3
I0428 20:20:24.662798  1543 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:24.663740  1543 net.cpp:124] Setting up relu3
I0428 20:20:24.663758  1543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:24.663765  1543 net.cpp:139] Memory required for data: 15602800
I0428 20:20:24.663772  1543 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:24.663781  1543 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:24.663789  1543 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:24.663797  1543 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:24.663810  1543 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:24.663864  1543 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:24.663875  1543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:24.663882  1543 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:24.663888  1543 net.cpp:139] Memory required for data: 15610800
I0428 20:20:24.663894  1543 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:24.663909  1543 net.cpp:86] Creating Layer accuracy
I0428 20:20:24.663918  1543 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:24.663926  1543 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:24.663938  1543 net.cpp:382] accuracy -> accuracy
I0428 20:20:24.663954  1543 net.cpp:124] Setting up accuracy
I0428 20:20:24.663964  1543 net.cpp:131] Top shape: (1)
I0428 20:20:24.663970  1543 net.cpp:139] Memory required for data: 15610804
I0428 20:20:24.663976  1543 layer_factory.hpp:77] Creating layer loss
I0428 20:20:24.663987  1543 net.cpp:86] Creating Layer loss
I0428 20:20:24.663995  1543 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:24.664003  1543 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:24.664012  1543 net.cpp:382] loss -> loss
I0428 20:20:24.664024  1543 layer_factory.hpp:77] Creating layer loss
I0428 20:20:24.664330  1543 net.cpp:124] Setting up loss
I0428 20:20:24.664345  1543 net.cpp:131] Top shape: (1)
I0428 20:20:24.664350  1543 net.cpp:134]     with loss weight 1
I0428 20:20:24.664373  1543 net.cpp:139] Memory required for data: 15610808
I0428 20:20:24.664381  1543 net.cpp:200] loss needs backward computation.
I0428 20:20:24.664389  1543 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:24.664397  1543 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:24.664402  1543 net.cpp:200] relu3 needs backward computation.
I0428 20:20:24.664408  1543 net.cpp:200] ip3 needs backward computation.
I0428 20:20:24.664415  1543 net.cpp:200] relu2 needs backward computation.
I0428 20:20:24.664422  1543 net.cpp:200] ip2 needs backward computation.
I0428 20:20:24.664427  1543 net.cpp:200] relu1 needs backward computation.
I0428 20:20:24.664433  1543 net.cpp:200] ip1 needs backward computation.
I0428 20:20:24.664439  1543 net.cpp:200] pool1 needs backward computation.
I0428 20:20:24.664446  1543 net.cpp:200] conv1 needs backward computation.
I0428 20:20:24.664453  1543 net.cpp:200] pool0 needs backward computation.
I0428 20:20:24.664459  1543 net.cpp:200] conv0 needs backward computation.
I0428 20:20:24.664468  1543 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:24.664476  1543 net.cpp:202] mnist does not need backward computation.
I0428 20:20:24.664482  1543 net.cpp:244] This network produces output accuracy
I0428 20:20:24.664494  1543 net.cpp:244] This network produces output loss
I0428 20:20:24.664516  1543 net.cpp:257] Network initialization done.
I0428 20:20:24.664575  1543 solver.cpp:56] Solver scaffolding done.
I0428 20:20:24.665050  1543 caffe.cpp:248] Starting Optimization
I0428 20:20:24.665060  1543 solver.cpp:273] Solving LeNet
I0428 20:20:24.665066  1543 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:24.665979  1543 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:24.673595  1543 blocking_queue.cpp:49] Waiting for data
I0428 20:20:24.747071  1550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:24.748028  1543 solver.cpp:398]     Test net output #0: accuracy = 0.0806
I0428 20:20:24.748054  1543 solver.cpp:398]     Test net output #1: loss = 2.3257 (* 1 = 2.3257 loss)
I0428 20:20:24.752861  1543 solver.cpp:219] Iteration 0 (0 iter/s, 0.0877556s/100 iters), loss = 2.33151
I0428 20:20:24.752897  1543 solver.cpp:238]     Train net output #0: loss = 2.33151 (* 1 = 2.33151 loss)
I0428 20:20:24.752917  1543 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:24.893049  1543 solver.cpp:219] Iteration 100 (713.579 iter/s, 0.140139s/100 iters), loss = 1.00466
I0428 20:20:24.893087  1543 solver.cpp:238]     Train net output #0: loss = 1.00466 (* 1 = 1.00466 loss)
I0428 20:20:24.893100  1543 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:25.032002  1543 solver.cpp:219] Iteration 200 (719.919 iter/s, 0.138905s/100 iters), loss = 0.728217
I0428 20:20:25.032039  1543 solver.cpp:238]     Train net output #0: loss = 0.728217 (* 1 = 0.728217 loss)
I0428 20:20:25.032052  1543 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:25.175691  1543 solver.cpp:219] Iteration 300 (696.177 iter/s, 0.143642s/100 iters), loss = 0.784762
I0428 20:20:25.175740  1543 solver.cpp:238]     Train net output #0: loss = 0.784762 (* 1 = 0.784762 loss)
I0428 20:20:25.175755  1543 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:25.331699  1543 solver.cpp:219] Iteration 400 (641.227 iter/s, 0.155951s/100 iters), loss = 0.931329
I0428 20:20:25.331753  1543 solver.cpp:238]     Train net output #0: loss = 0.931329 (* 1 = 0.931329 loss)
I0428 20:20:25.331771  1543 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:25.487695  1543 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:25.564635  1550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:25.567121  1543 solver.cpp:398]     Test net output #0: accuracy = 0.7819
I0428 20:20:25.567149  1543 solver.cpp:398]     Test net output #1: loss = 0.550842 (* 1 = 0.550842 loss)
I0428 20:20:25.568487  1543 solver.cpp:219] Iteration 500 (422.429 iter/s, 0.236726s/100 iters), loss = 0.59273
I0428 20:20:25.568545  1543 solver.cpp:238]     Train net output #0: loss = 0.59273 (* 1 = 0.59273 loss)
I0428 20:20:25.568559  1543 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:25.717838  1543 solver.cpp:219] Iteration 600 (669.866 iter/s, 0.149284s/100 iters), loss = 0.556503
I0428 20:20:25.717881  1543 solver.cpp:238]     Train net output #0: loss = 0.556503 (* 1 = 0.556503 loss)
I0428 20:20:25.717902  1543 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:25.871973  1543 solver.cpp:219] Iteration 700 (649.008 iter/s, 0.154081s/100 iters), loss = 0.341413
I0428 20:20:25.872020  1543 solver.cpp:238]     Train net output #0: loss = 0.341413 (* 1 = 0.341413 loss)
I0428 20:20:25.872036  1543 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:26.027344  1543 solver.cpp:219] Iteration 800 (643.848 iter/s, 0.155316s/100 iters), loss = 0.561559
I0428 20:20:26.027390  1543 solver.cpp:238]     Train net output #0: loss = 0.561559 (* 1 = 0.561559 loss)
I0428 20:20:26.027411  1543 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:26.181830  1543 solver.cpp:219] Iteration 900 (647.532 iter/s, 0.154433s/100 iters), loss = 0.263273
I0428 20:20:26.181876  1543 solver.cpp:238]     Train net output #0: loss = 0.263273 (* 1 = 0.263273 loss)
I0428 20:20:26.181901  1543 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:26.232427  1549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:26.333670  1543 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:26.335889  1543 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:26.337257  1543 solver.cpp:311] Iteration 1000, loss = 0.288057
I0428 20:20:26.337283  1543 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:26.410843  1550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:26.413367  1543 solver.cpp:398]     Test net output #0: accuracy = 0.8829
I0428 20:20:26.413393  1543 solver.cpp:398]     Test net output #1: loss = 0.297755 (* 1 = 0.297755 loss)
I0428 20:20:26.413414  1543 solver.cpp:316] Optimization Done.
I0428 20:20:26.413420  1543 caffe.cpp:259] Optimization Done.
