I0428 19:33:32.244532 23125 caffe.cpp:218] Using GPUs 0
I0428 19:33:32.284646 23125 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:32.805421 23125 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test182.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:32.805593 23125 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test182.prototxt
I0428 19:33:32.805956 23125 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:32.805977 23125 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:32.806071 23125 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:32.806169 23125 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:32.806303 23125 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:32.806336 23125 net.cpp:86] Creating Layer mnist
I0428 19:33:32.806349 23125 net.cpp:382] mnist -> data
I0428 19:33:32.806380 23125 net.cpp:382] mnist -> label
I0428 19:33:32.807613 23125 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:32.810101 23125 net.cpp:124] Setting up mnist
I0428 19:33:32.810122 23125 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:32.810132 23125 net.cpp:131] Top shape: 64 (64)
I0428 19:33:32.810137 23125 net.cpp:139] Memory required for data: 200960
I0428 19:33:32.810148 23125 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:32.810171 23125 net.cpp:86] Creating Layer conv0
I0428 19:33:32.810183 23125 net.cpp:408] conv0 <- data
I0428 19:33:32.810199 23125 net.cpp:382] conv0 -> conv0
I0428 19:33:33.099582 23125 net.cpp:124] Setting up conv0
I0428 19:33:33.099611 23125 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:33.099617 23125 net.cpp:139] Memory required for data: 3887360
I0428 19:33:33.099639 23125 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:33.099658 23125 net.cpp:86] Creating Layer pool0
I0428 19:33:33.099685 23125 net.cpp:408] pool0 <- conv0
I0428 19:33:33.099696 23125 net.cpp:382] pool0 -> pool0
I0428 19:33:33.099756 23125 net.cpp:124] Setting up pool0
I0428 19:33:33.099766 23125 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:33.099771 23125 net.cpp:139] Memory required for data: 4808960
I0428 19:33:33.099776 23125 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:33.099788 23125 net.cpp:86] Creating Layer ip1
I0428 19:33:33.099799 23125 net.cpp:408] ip1 <- pool0
I0428 19:33:33.099808 23125 net.cpp:382] ip1 -> ip1
I0428 19:33:33.101372 23125 net.cpp:124] Setting up ip1
I0428 19:33:33.101387 23125 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:33.101393 23125 net.cpp:139] Memory required for data: 4815360
I0428 19:33:33.101408 23125 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:33.101419 23125 net.cpp:86] Creating Layer relu1
I0428 19:33:33.101431 23125 net.cpp:408] relu1 <- ip1
I0428 19:33:33.101440 23125 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:33.101622 23125 net.cpp:124] Setting up relu1
I0428 19:33:33.101634 23125 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:33.101639 23125 net.cpp:139] Memory required for data: 4821760
I0428 19:33:33.101645 23125 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:33.101657 23125 net.cpp:86] Creating Layer ip2
I0428 19:33:33.101665 23125 net.cpp:408] ip2 <- ip1
I0428 19:33:33.101673 23125 net.cpp:382] ip2 -> ip2
I0428 19:33:33.101784 23125 net.cpp:124] Setting up ip2
I0428 19:33:33.101794 23125 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:33.101799 23125 net.cpp:139] Memory required for data: 4828160
I0428 19:33:33.101812 23125 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:33.101824 23125 net.cpp:86] Creating Layer relu2
I0428 19:33:33.101831 23125 net.cpp:408] relu2 <- ip2
I0428 19:33:33.101840 23125 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:33.102609 23125 net.cpp:124] Setting up relu2
I0428 19:33:33.102624 23125 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:33.102630 23125 net.cpp:139] Memory required for data: 4834560
I0428 19:33:33.102636 23125 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:33.102648 23125 net.cpp:86] Creating Layer ip3
I0428 19:33:33.102653 23125 net.cpp:408] ip3 <- ip2
I0428 19:33:33.102663 23125 net.cpp:382] ip3 -> ip3
I0428 19:33:33.102769 23125 net.cpp:124] Setting up ip3
I0428 19:33:33.102779 23125 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:33.102784 23125 net.cpp:139] Memory required for data: 4837120
I0428 19:33:33.102794 23125 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:33.102805 23125 net.cpp:86] Creating Layer relu3
I0428 19:33:33.102813 23125 net.cpp:408] relu3 <- ip3
I0428 19:33:33.102819 23125 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:33.102982 23125 net.cpp:124] Setting up relu3
I0428 19:33:33.102993 23125 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:33.102999 23125 net.cpp:139] Memory required for data: 4839680
I0428 19:33:33.103004 23125 layer_factory.hpp:77] Creating layer loss
I0428 19:33:33.103014 23125 net.cpp:86] Creating Layer loss
I0428 19:33:33.103019 23125 net.cpp:408] loss <- ip3
I0428 19:33:33.103027 23125 net.cpp:408] loss <- label
I0428 19:33:33.103036 23125 net.cpp:382] loss -> loss
I0428 19:33:33.103060 23125 layer_factory.hpp:77] Creating layer loss
I0428 19:33:33.103305 23125 net.cpp:124] Setting up loss
I0428 19:33:33.103317 23125 net.cpp:131] Top shape: (1)
I0428 19:33:33.103322 23125 net.cpp:134]     with loss weight 1
I0428 19:33:33.103343 23125 net.cpp:139] Memory required for data: 4839684
I0428 19:33:33.103349 23125 net.cpp:200] loss needs backward computation.
I0428 19:33:33.103355 23125 net.cpp:200] relu3 needs backward computation.
I0428 19:33:33.103361 23125 net.cpp:200] ip3 needs backward computation.
I0428 19:33:33.103366 23125 net.cpp:200] relu2 needs backward computation.
I0428 19:33:33.103371 23125 net.cpp:200] ip2 needs backward computation.
I0428 19:33:33.103376 23125 net.cpp:200] relu1 needs backward computation.
I0428 19:33:33.103381 23125 net.cpp:200] ip1 needs backward computation.
I0428 19:33:33.103400 23125 net.cpp:200] pool0 needs backward computation.
I0428 19:33:33.103406 23125 net.cpp:200] conv0 needs backward computation.
I0428 19:33:33.103413 23125 net.cpp:202] mnist does not need backward computation.
I0428 19:33:33.103418 23125 net.cpp:244] This network produces output loss
I0428 19:33:33.103431 23125 net.cpp:257] Network initialization done.
I0428 19:33:33.103734 23125 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test182.prototxt
I0428 19:33:33.103767 23125 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:33.103858 23125 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:33.103960 23125 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:33.104018 23125 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:33.104041 23125 net.cpp:86] Creating Layer mnist
I0428 19:33:33.104049 23125 net.cpp:382] mnist -> data
I0428 19:33:33.104061 23125 net.cpp:382] mnist -> label
I0428 19:33:33.104184 23125 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:33.105428 23125 net.cpp:124] Setting up mnist
I0428 19:33:33.105444 23125 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:33.105453 23125 net.cpp:131] Top shape: 100 (100)
I0428 19:33:33.105458 23125 net.cpp:139] Memory required for data: 314000
I0428 19:33:33.105465 23125 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:33.105490 23125 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:33.105497 23125 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:33.105505 23125 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:33.105516 23125 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:33.105589 23125 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:33.105599 23125 net.cpp:131] Top shape: 100 (100)
I0428 19:33:33.105605 23125 net.cpp:131] Top shape: 100 (100)
I0428 19:33:33.105612 23125 net.cpp:139] Memory required for data: 314800
I0428 19:33:33.105629 23125 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:33.105644 23125 net.cpp:86] Creating Layer conv0
I0428 19:33:33.105651 23125 net.cpp:408] conv0 <- data
I0428 19:33:33.105660 23125 net.cpp:382] conv0 -> conv0
I0428 19:33:33.107192 23125 net.cpp:124] Setting up conv0
I0428 19:33:33.107208 23125 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:33.107214 23125 net.cpp:139] Memory required for data: 6074800
I0428 19:33:33.107228 23125 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:33.107239 23125 net.cpp:86] Creating Layer pool0
I0428 19:33:33.107245 23125 net.cpp:408] pool0 <- conv0
I0428 19:33:33.107254 23125 net.cpp:382] pool0 -> pool0
I0428 19:33:33.107295 23125 net.cpp:124] Setting up pool0
I0428 19:33:33.107305 23125 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:33.107311 23125 net.cpp:139] Memory required for data: 7514800
I0428 19:33:33.107316 23125 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:33.107326 23125 net.cpp:86] Creating Layer ip1
I0428 19:33:33.107332 23125 net.cpp:408] ip1 <- pool0
I0428 19:33:33.107342 23125 net.cpp:382] ip1 -> ip1
I0428 19:33:33.108021 23125 net.cpp:124] Setting up ip1
I0428 19:33:33.108031 23125 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:33.108037 23125 net.cpp:139] Memory required for data: 7524800
I0428 19:33:33.108049 23125 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:33.108059 23125 net.cpp:86] Creating Layer relu1
I0428 19:33:33.108065 23125 net.cpp:408] relu1 <- ip1
I0428 19:33:33.108073 23125 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:33.108243 23125 net.cpp:124] Setting up relu1
I0428 19:33:33.108254 23125 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:33.108259 23125 net.cpp:139] Memory required for data: 7534800
I0428 19:33:33.108264 23125 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:33.108274 23125 net.cpp:86] Creating Layer ip2
I0428 19:33:33.108280 23125 net.cpp:408] ip2 <- ip1
I0428 19:33:33.108289 23125 net.cpp:382] ip2 -> ip2
I0428 19:33:33.108395 23125 net.cpp:124] Setting up ip2
I0428 19:33:33.108404 23125 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:33.108409 23125 net.cpp:139] Memory required for data: 7544800
I0428 19:33:33.108422 23125 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:33.108430 23125 net.cpp:86] Creating Layer relu2
I0428 19:33:33.108438 23125 net.cpp:408] relu2 <- ip2
I0428 19:33:33.108445 23125 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:33.109237 23125 net.cpp:124] Setting up relu2
I0428 19:33:33.109252 23125 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:33.109258 23125 net.cpp:139] Memory required for data: 7554800
I0428 19:33:33.109263 23125 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:33.109277 23125 net.cpp:86] Creating Layer ip3
I0428 19:33:33.109282 23125 net.cpp:408] ip3 <- ip2
I0428 19:33:33.109292 23125 net.cpp:382] ip3 -> ip3
I0428 19:33:33.109431 23125 net.cpp:124] Setting up ip3
I0428 19:33:33.109441 23125 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:33.109447 23125 net.cpp:139] Memory required for data: 7558800
I0428 19:33:33.109457 23125 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:33.109465 23125 net.cpp:86] Creating Layer relu3
I0428 19:33:33.109472 23125 net.cpp:408] relu3 <- ip3
I0428 19:33:33.109480 23125 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:33.109663 23125 net.cpp:124] Setting up relu3
I0428 19:33:33.109673 23125 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:33.109678 23125 net.cpp:139] Memory required for data: 7562800
I0428 19:33:33.109683 23125 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:33.109691 23125 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:33.109697 23125 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:33.109706 23125 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:33.109717 23125 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:33.109760 23125 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:33.109769 23125 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:33.109776 23125 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:33.109793 23125 net.cpp:139] Memory required for data: 7570800
I0428 19:33:33.109804 23125 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:33.109813 23125 net.cpp:86] Creating Layer accuracy
I0428 19:33:33.109819 23125 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:33.109827 23125 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:33.109835 23125 net.cpp:382] accuracy -> accuracy
I0428 19:33:33.109846 23125 net.cpp:124] Setting up accuracy
I0428 19:33:33.109854 23125 net.cpp:131] Top shape: (1)
I0428 19:33:33.109859 23125 net.cpp:139] Memory required for data: 7570804
I0428 19:33:33.109865 23125 layer_factory.hpp:77] Creating layer loss
I0428 19:33:33.109874 23125 net.cpp:86] Creating Layer loss
I0428 19:33:33.109879 23125 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:33.109886 23125 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:33.109894 23125 net.cpp:382] loss -> loss
I0428 19:33:33.109904 23125 layer_factory.hpp:77] Creating layer loss
I0428 19:33:33.110141 23125 net.cpp:124] Setting up loss
I0428 19:33:33.110152 23125 net.cpp:131] Top shape: (1)
I0428 19:33:33.110158 23125 net.cpp:134]     with loss weight 1
I0428 19:33:33.110167 23125 net.cpp:139] Memory required for data: 7570808
I0428 19:33:33.110174 23125 net.cpp:200] loss needs backward computation.
I0428 19:33:33.110182 23125 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:33.110188 23125 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:33.110193 23125 net.cpp:200] relu3 needs backward computation.
I0428 19:33:33.110198 23125 net.cpp:200] ip3 needs backward computation.
I0428 19:33:33.110203 23125 net.cpp:200] relu2 needs backward computation.
I0428 19:33:33.110208 23125 net.cpp:200] ip2 needs backward computation.
I0428 19:33:33.110214 23125 net.cpp:200] relu1 needs backward computation.
I0428 19:33:33.110219 23125 net.cpp:200] ip1 needs backward computation.
I0428 19:33:33.110224 23125 net.cpp:200] pool0 needs backward computation.
I0428 19:33:33.110230 23125 net.cpp:200] conv0 needs backward computation.
I0428 19:33:33.110236 23125 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:33.110244 23125 net.cpp:202] mnist does not need backward computation.
I0428 19:33:33.110249 23125 net.cpp:244] This network produces output accuracy
I0428 19:33:33.110254 23125 net.cpp:244] This network produces output loss
I0428 19:33:33.110270 23125 net.cpp:257] Network initialization done.
I0428 19:33:33.110313 23125 solver.cpp:56] Solver scaffolding done.
I0428 19:33:33.110584 23125 caffe.cpp:248] Starting Optimization
I0428 19:33:33.110591 23125 solver.cpp:273] Solving LeNet
I0428 19:33:33.110596 23125 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:33.111413 23125 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:33.118255 23125 blocking_queue.cpp:49] Waiting for data
I0428 19:33:33.189366 23132 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:33.190136 23125 solver.cpp:398]     Test net output #0: accuracy = 0.0938
I0428 19:33:33.190156 23125 solver.cpp:398]     Test net output #1: loss = 2.29762 (* 1 = 2.29762 loss)
I0428 19:33:33.193789 23125 solver.cpp:219] Iteration 0 (-1.27188e-31 iter/s, 0.0831541s/100 iters), loss = 2.29463
I0428 19:33:33.193816 23125 solver.cpp:238]     Train net output #0: loss = 2.29463 (* 1 = 2.29463 loss)
I0428 19:33:33.193850 23125 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:33.294715 23125 solver.cpp:219] Iteration 100 (991.172 iter/s, 0.100891s/100 iters), loss = 1.13678
I0428 19:33:33.294749 23125 solver.cpp:238]     Train net output #0: loss = 1.13678 (* 1 = 1.13678 loss)
I0428 19:33:33.294775 23125 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:33.398118 23125 solver.cpp:219] Iteration 200 (967.487 iter/s, 0.103361s/100 iters), loss = 1.47806
I0428 19:33:33.398144 23125 solver.cpp:238]     Train net output #0: loss = 1.47806 (* 1 = 1.47806 loss)
I0428 19:33:33.398170 23125 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:33.503504 23125 solver.cpp:219] Iteration 300 (949.206 iter/s, 0.105351s/100 iters), loss = 1.38315
I0428 19:33:33.503530 23125 solver.cpp:238]     Train net output #0: loss = 1.38315 (* 1 = 1.38315 loss)
I0428 19:33:33.503556 23125 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:33.607205 23125 solver.cpp:219] Iteration 400 (964.658 iter/s, 0.103664s/100 iters), loss = 1.42688
I0428 19:33:33.607247 23125 solver.cpp:238]     Train net output #0: loss = 1.42688 (* 1 = 1.42688 loss)
I0428 19:33:33.607264 23125 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:33.706194 23125 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:33.769389 23132 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:33.771550 23125 solver.cpp:398]     Test net output #0: accuracy = 0.4848
I0428 19:33:33.771572 23125 solver.cpp:398]     Test net output #1: loss = 1.26973 (* 1 = 1.26973 loss)
I0428 19:33:33.772526 23125 solver.cpp:219] Iteration 500 (605.061 iter/s, 0.165273s/100 iters), loss = 1.32688
I0428 19:33:33.772552 23125 solver.cpp:238]     Train net output #0: loss = 1.32688 (* 1 = 1.32688 loss)
I0428 19:33:33.772562 23125 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:33.875166 23125 solver.cpp:219] Iteration 600 (974.613 iter/s, 0.102605s/100 iters), loss = 1.23459
I0428 19:33:33.875193 23125 solver.cpp:238]     Train net output #0: loss = 1.23459 (* 1 = 1.23459 loss)
I0428 19:33:33.875219 23125 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:33.976333 23125 solver.cpp:219] Iteration 700 (988.804 iter/s, 0.101132s/100 iters), loss = 1.0878
I0428 19:33:33.976361 23125 solver.cpp:238]     Train net output #0: loss = 1.0878 (* 1 = 1.0878 loss)
I0428 19:33:33.976387 23125 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:34.078392 23125 solver.cpp:219] Iteration 800 (980.169 iter/s, 0.102023s/100 iters), loss = 1.14247
I0428 19:33:34.078418 23125 solver.cpp:238]     Train net output #0: loss = 1.14247 (* 1 = 1.14247 loss)
I0428 19:33:34.078446 23125 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:34.179580 23125 solver.cpp:219] Iteration 900 (988.736 iter/s, 0.101139s/100 iters), loss = 1.07272
I0428 19:33:34.179608 23125 solver.cpp:238]     Train net output #0: loss = 1.07272 (* 1 = 1.07272 loss)
I0428 19:33:34.179633 23125 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:34.212232 23131 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:34.277118 23125 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:34.278823 23125 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:34.280225 23125 solver.cpp:311] Iteration 1000, loss = 0.84642
I0428 19:33:34.280241 23125 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:34.342900 23132 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:34.345062 23125 solver.cpp:398]     Test net output #0: accuracy = 0.5834
I0428 19:33:34.345082 23125 solver.cpp:398]     Test net output #1: loss = 1.0218 (* 1 = 1.0218 loss)
I0428 19:33:34.345106 23125 solver.cpp:316] Optimization Done.
I0428 19:33:34.345111 23125 caffe.cpp:259] Optimization Done.
