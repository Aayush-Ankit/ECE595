I0428 19:35:47.255270 23593 caffe.cpp:218] Using GPUs 0
I0428 19:35:47.297302 23593 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:47.813513 23593 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test232.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:47.813649 23593 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test232.prototxt
I0428 19:35:47.814026 23593 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:47.814045 23593 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:47.814132 23593 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:47.814210 23593 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:47.814313 23593 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:47.814337 23593 net.cpp:86] Creating Layer mnist
I0428 19:35:47.814345 23593 net.cpp:382] mnist -> data
I0428 19:35:47.814368 23593 net.cpp:382] mnist -> label
I0428 19:35:47.815469 23593 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:47.818150 23593 net.cpp:124] Setting up mnist
I0428 19:35:47.818168 23593 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:47.818174 23593 net.cpp:131] Top shape: 64 (64)
I0428 19:35:47.818178 23593 net.cpp:139] Memory required for data: 200960
I0428 19:35:47.818186 23593 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:47.818203 23593 net.cpp:86] Creating Layer conv0
I0428 19:35:47.818209 23593 net.cpp:408] conv0 <- data
I0428 19:35:47.818222 23593 net.cpp:382] conv0 -> conv0
I0428 19:35:48.110172 23593 net.cpp:124] Setting up conv0
I0428 19:35:48.110201 23593 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:48.110206 23593 net.cpp:139] Memory required for data: 7573760
I0428 19:35:48.110224 23593 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:48.110239 23593 net.cpp:86] Creating Layer pool0
I0428 19:35:48.110265 23593 net.cpp:408] pool0 <- conv0
I0428 19:35:48.110272 23593 net.cpp:382] pool0 -> pool0
I0428 19:35:48.110328 23593 net.cpp:124] Setting up pool0
I0428 19:35:48.110339 23593 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:48.110343 23593 net.cpp:139] Memory required for data: 9416960
I0428 19:35:48.110347 23593 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:48.110355 23593 net.cpp:86] Creating Layer ip1
I0428 19:35:48.110359 23593 net.cpp:408] ip1 <- pool0
I0428 19:35:48.110365 23593 net.cpp:382] ip1 -> ip1
I0428 19:35:48.113730 23593 net.cpp:124] Setting up ip1
I0428 19:35:48.113745 23593 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:48.113749 23593 net.cpp:139] Memory required for data: 9429760
I0428 19:35:48.113759 23593 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:48.113767 23593 net.cpp:86] Creating Layer relu1
I0428 19:35:48.113770 23593 net.cpp:408] relu1 <- ip1
I0428 19:35:48.113776 23593 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:48.113971 23593 net.cpp:124] Setting up relu1
I0428 19:35:48.113981 23593 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:48.113986 23593 net.cpp:139] Memory required for data: 9442560
I0428 19:35:48.113989 23593 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:48.113996 23593 net.cpp:86] Creating Layer ip2
I0428 19:35:48.114001 23593 net.cpp:408] ip2 <- ip1
I0428 19:35:48.114006 23593 net.cpp:382] ip2 -> ip2
I0428 19:35:48.114132 23593 net.cpp:124] Setting up ip2
I0428 19:35:48.114140 23593 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:48.114143 23593 net.cpp:139] Memory required for data: 9455360
I0428 19:35:48.114151 23593 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:48.114157 23593 net.cpp:86] Creating Layer relu2
I0428 19:35:48.114161 23593 net.cpp:408] relu2 <- ip2
I0428 19:35:48.114166 23593 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:48.115012 23593 net.cpp:124] Setting up relu2
I0428 19:35:48.115026 23593 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:48.115031 23593 net.cpp:139] Memory required for data: 9468160
I0428 19:35:48.115034 23593 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:48.115042 23593 net.cpp:86] Creating Layer ip3
I0428 19:35:48.115046 23593 net.cpp:408] ip3 <- ip2
I0428 19:35:48.115052 23593 net.cpp:382] ip3 -> ip3
I0428 19:35:48.115166 23593 net.cpp:124] Setting up ip3
I0428 19:35:48.115175 23593 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:48.115178 23593 net.cpp:139] Memory required for data: 9470720
I0428 19:35:48.115185 23593 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:48.115192 23593 net.cpp:86] Creating Layer relu3
I0428 19:35:48.115196 23593 net.cpp:408] relu3 <- ip3
I0428 19:35:48.115201 23593 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:48.115371 23593 net.cpp:124] Setting up relu3
I0428 19:35:48.115381 23593 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:48.115383 23593 net.cpp:139] Memory required for data: 9473280
I0428 19:35:48.115387 23593 layer_factory.hpp:77] Creating layer loss
I0428 19:35:48.115393 23593 net.cpp:86] Creating Layer loss
I0428 19:35:48.115397 23593 net.cpp:408] loss <- ip3
I0428 19:35:48.115401 23593 net.cpp:408] loss <- label
I0428 19:35:48.115407 23593 net.cpp:382] loss -> loss
I0428 19:35:48.115427 23593 layer_factory.hpp:77] Creating layer loss
I0428 19:35:48.115687 23593 net.cpp:124] Setting up loss
I0428 19:35:48.115697 23593 net.cpp:131] Top shape: (1)
I0428 19:35:48.115701 23593 net.cpp:134]     with loss weight 1
I0428 19:35:48.115717 23593 net.cpp:139] Memory required for data: 9473284
I0428 19:35:48.115721 23593 net.cpp:200] loss needs backward computation.
I0428 19:35:48.115725 23593 net.cpp:200] relu3 needs backward computation.
I0428 19:35:48.115730 23593 net.cpp:200] ip3 needs backward computation.
I0428 19:35:48.115732 23593 net.cpp:200] relu2 needs backward computation.
I0428 19:35:48.115736 23593 net.cpp:200] ip2 needs backward computation.
I0428 19:35:48.115738 23593 net.cpp:200] relu1 needs backward computation.
I0428 19:35:48.115741 23593 net.cpp:200] ip1 needs backward computation.
I0428 19:35:48.115757 23593 net.cpp:200] pool0 needs backward computation.
I0428 19:35:48.115761 23593 net.cpp:200] conv0 needs backward computation.
I0428 19:35:48.115766 23593 net.cpp:202] mnist does not need backward computation.
I0428 19:35:48.115768 23593 net.cpp:244] This network produces output loss
I0428 19:35:48.115777 23593 net.cpp:257] Network initialization done.
I0428 19:35:48.116096 23593 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test232.prototxt
I0428 19:35:48.116124 23593 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:48.116215 23593 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:48.116286 23593 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:48.116336 23593 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:48.116350 23593 net.cpp:86] Creating Layer mnist
I0428 19:35:48.116355 23593 net.cpp:382] mnist -> data
I0428 19:35:48.116364 23593 net.cpp:382] mnist -> label
I0428 19:35:48.116457 23593 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:48.118561 23593 net.cpp:124] Setting up mnist
I0428 19:35:48.118577 23593 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:48.118582 23593 net.cpp:131] Top shape: 100 (100)
I0428 19:35:48.118587 23593 net.cpp:139] Memory required for data: 314000
I0428 19:35:48.118590 23593 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:48.118602 23593 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:48.118607 23593 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:48.118612 23593 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:48.118619 23593 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:48.118715 23593 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:48.118723 23593 net.cpp:131] Top shape: 100 (100)
I0428 19:35:48.118727 23593 net.cpp:131] Top shape: 100 (100)
I0428 19:35:48.118731 23593 net.cpp:139] Memory required for data: 314800
I0428 19:35:48.118746 23593 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:48.118757 23593 net.cpp:86] Creating Layer conv0
I0428 19:35:48.118760 23593 net.cpp:408] conv0 <- data
I0428 19:35:48.118767 23593 net.cpp:382] conv0 -> conv0
I0428 19:35:48.120553 23593 net.cpp:124] Setting up conv0
I0428 19:35:48.120569 23593 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:48.120573 23593 net.cpp:139] Memory required for data: 11834800
I0428 19:35:48.120584 23593 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:48.120591 23593 net.cpp:86] Creating Layer pool0
I0428 19:35:48.120595 23593 net.cpp:408] pool0 <- conv0
I0428 19:35:48.120601 23593 net.cpp:382] pool0 -> pool0
I0428 19:35:48.120642 23593 net.cpp:124] Setting up pool0
I0428 19:35:48.120651 23593 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:48.120654 23593 net.cpp:139] Memory required for data: 14714800
I0428 19:35:48.120657 23593 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:48.120666 23593 net.cpp:86] Creating Layer ip1
I0428 19:35:48.120669 23593 net.cpp:408] ip1 <- pool0
I0428 19:35:48.120674 23593 net.cpp:382] ip1 -> ip1
I0428 19:35:48.123109 23593 net.cpp:124] Setting up ip1
I0428 19:35:48.123119 23593 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:48.123122 23593 net.cpp:139] Memory required for data: 14734800
I0428 19:35:48.123131 23593 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:48.123137 23593 net.cpp:86] Creating Layer relu1
I0428 19:35:48.123141 23593 net.cpp:408] relu1 <- ip1
I0428 19:35:48.123145 23593 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:48.123332 23593 net.cpp:124] Setting up relu1
I0428 19:35:48.123342 23593 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:48.123345 23593 net.cpp:139] Memory required for data: 14754800
I0428 19:35:48.123348 23593 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:48.123354 23593 net.cpp:86] Creating Layer ip2
I0428 19:35:48.123358 23593 net.cpp:408] ip2 <- ip1
I0428 19:35:48.123364 23593 net.cpp:382] ip2 -> ip2
I0428 19:35:48.123493 23593 net.cpp:124] Setting up ip2
I0428 19:35:48.123500 23593 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:48.123504 23593 net.cpp:139] Memory required for data: 14774800
I0428 19:35:48.123512 23593 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:48.123519 23593 net.cpp:86] Creating Layer relu2
I0428 19:35:48.123522 23593 net.cpp:408] relu2 <- ip2
I0428 19:35:48.123528 23593 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:48.124393 23593 net.cpp:124] Setting up relu2
I0428 19:35:48.124408 23593 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:48.124411 23593 net.cpp:139] Memory required for data: 14794800
I0428 19:35:48.124415 23593 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:48.124424 23593 net.cpp:86] Creating Layer ip3
I0428 19:35:48.124428 23593 net.cpp:408] ip3 <- ip2
I0428 19:35:48.124434 23593 net.cpp:382] ip3 -> ip3
I0428 19:35:48.124599 23593 net.cpp:124] Setting up ip3
I0428 19:35:48.124608 23593 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:48.124613 23593 net.cpp:139] Memory required for data: 14798800
I0428 19:35:48.124619 23593 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:48.124625 23593 net.cpp:86] Creating Layer relu3
I0428 19:35:48.124629 23593 net.cpp:408] relu3 <- ip3
I0428 19:35:48.124634 23593 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:48.124820 23593 net.cpp:124] Setting up relu3
I0428 19:35:48.124830 23593 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:48.124835 23593 net.cpp:139] Memory required for data: 14802800
I0428 19:35:48.124838 23593 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:48.124846 23593 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:48.124850 23593 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:48.124855 23593 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:48.124861 23593 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:48.124905 23593 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:48.124912 23593 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:48.124930 23593 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:48.124934 23593 net.cpp:139] Memory required for data: 14810800
I0428 19:35:48.124955 23593 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:48.124961 23593 net.cpp:86] Creating Layer accuracy
I0428 19:35:48.124965 23593 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:48.124970 23593 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:48.124977 23593 net.cpp:382] accuracy -> accuracy
I0428 19:35:48.124991 23593 net.cpp:124] Setting up accuracy
I0428 19:35:48.124997 23593 net.cpp:131] Top shape: (1)
I0428 19:35:48.125000 23593 net.cpp:139] Memory required for data: 14810804
I0428 19:35:48.125003 23593 layer_factory.hpp:77] Creating layer loss
I0428 19:35:48.125008 23593 net.cpp:86] Creating Layer loss
I0428 19:35:48.125012 23593 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:48.125017 23593 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:48.125023 23593 net.cpp:382] loss -> loss
I0428 19:35:48.125030 23593 layer_factory.hpp:77] Creating layer loss
I0428 19:35:48.125304 23593 net.cpp:124] Setting up loss
I0428 19:35:48.125315 23593 net.cpp:131] Top shape: (1)
I0428 19:35:48.125319 23593 net.cpp:134]     with loss weight 1
I0428 19:35:48.125326 23593 net.cpp:139] Memory required for data: 14810808
I0428 19:35:48.125330 23593 net.cpp:200] loss needs backward computation.
I0428 19:35:48.125334 23593 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:48.125339 23593 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:48.125342 23593 net.cpp:200] relu3 needs backward computation.
I0428 19:35:48.125345 23593 net.cpp:200] ip3 needs backward computation.
I0428 19:35:48.125349 23593 net.cpp:200] relu2 needs backward computation.
I0428 19:35:48.125351 23593 net.cpp:200] ip2 needs backward computation.
I0428 19:35:48.125355 23593 net.cpp:200] relu1 needs backward computation.
I0428 19:35:48.125357 23593 net.cpp:200] ip1 needs backward computation.
I0428 19:35:48.125360 23593 net.cpp:200] pool0 needs backward computation.
I0428 19:35:48.125365 23593 net.cpp:200] conv0 needs backward computation.
I0428 19:35:48.125368 23593 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:48.125372 23593 net.cpp:202] mnist does not need backward computation.
I0428 19:35:48.125375 23593 net.cpp:244] This network produces output accuracy
I0428 19:35:48.125380 23593 net.cpp:244] This network produces output loss
I0428 19:35:48.125391 23593 net.cpp:257] Network initialization done.
I0428 19:35:48.125433 23593 solver.cpp:56] Solver scaffolding done.
I0428 19:35:48.125741 23593 caffe.cpp:248] Starting Optimization
I0428 19:35:48.125746 23593 solver.cpp:273] Solving LeNet
I0428 19:35:48.125749 23593 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:48.127805 23593 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:48.227958 23600 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:48.230446 23593 solver.cpp:398]     Test net output #0: accuracy = 0.1719
I0428 19:35:48.230480 23593 solver.cpp:398]     Test net output #1: loss = 2.28505 (* 1 = 2.28505 loss)
I0428 19:35:48.234969 23593 solver.cpp:219] Iteration 0 (0 iter/s, 0.109189s/100 iters), loss = 2.27037
I0428 19:35:48.234992 23593 solver.cpp:238]     Train net output #0: loss = 2.27037 (* 1 = 2.27037 loss)
I0428 19:35:48.235004 23593 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:48.384595 23593 solver.cpp:219] Iteration 100 (668.572 iter/s, 0.149573s/100 iters), loss = 0.592154
I0428 19:35:48.384639 23593 solver.cpp:238]     Train net output #0: loss = 0.592154 (* 1 = 0.592154 loss)
I0428 19:35:48.384646 23593 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:48.533324 23593 solver.cpp:219] Iteration 200 (672.619 iter/s, 0.148673s/100 iters), loss = 0.172566
I0428 19:35:48.533345 23593 solver.cpp:238]     Train net output #0: loss = 0.172566 (* 1 = 0.172566 loss)
I0428 19:35:48.533351 23593 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:48.684373 23593 solver.cpp:219] Iteration 300 (662.188 iter/s, 0.151014s/100 iters), loss = 0.240804
I0428 19:35:48.684422 23593 solver.cpp:238]     Train net output #0: loss = 0.240804 (* 1 = 0.240804 loss)
I0428 19:35:48.684427 23593 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:48.832979 23593 solver.cpp:219] Iteration 400 (673.157 iter/s, 0.148554s/100 iters), loss = 0.10963
I0428 19:35:48.833019 23593 solver.cpp:238]     Train net output #0: loss = 0.10963 (* 1 = 0.10963 loss)
I0428 19:35:48.833025 23593 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:48.977983 23593 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:49.074604 23600 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:49.077107 23593 solver.cpp:398]     Test net output #0: accuracy = 0.9549
I0428 19:35:49.077128 23593 solver.cpp:398]     Test net output #1: loss = 0.143344 (* 1 = 0.143344 loss)
I0428 19:35:49.078600 23593 solver.cpp:219] Iteration 500 (407.225 iter/s, 0.245564s/100 iters), loss = 0.251428
I0428 19:35:49.078635 23593 solver.cpp:238]     Train net output #0: loss = 0.251428 (* 1 = 0.251428 loss)
I0428 19:35:49.078642 23593 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:49.227877 23593 solver.cpp:219] Iteration 600 (670.113 iter/s, 0.149229s/100 iters), loss = 0.128673
I0428 19:35:49.227901 23593 solver.cpp:238]     Train net output #0: loss = 0.128673 (* 1 = 0.128673 loss)
I0428 19:35:49.227906 23593 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:49.375640 23593 solver.cpp:219] Iteration 700 (676.927 iter/s, 0.147726s/100 iters), loss = 0.299533
I0428 19:35:49.375665 23593 solver.cpp:238]     Train net output #0: loss = 0.299533 (* 1 = 0.299533 loss)
I0428 19:35:49.375671 23593 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:49.520609 23593 solver.cpp:219] Iteration 800 (689.983 iter/s, 0.144931s/100 iters), loss = 0.308376
I0428 19:35:49.520633 23593 solver.cpp:238]     Train net output #0: loss = 0.308376 (* 1 = 0.308376 loss)
I0428 19:35:49.520654 23593 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:49.664403 23593 solver.cpp:219] Iteration 900 (695.622 iter/s, 0.143756s/100 iters), loss = 0.139214
I0428 19:35:49.664427 23593 solver.cpp:238]     Train net output #0: loss = 0.139214 (* 1 = 0.139214 loss)
I0428 19:35:49.664449 23593 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:49.712066 23599 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:49.805827 23593 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:49.811444 23593 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:49.814949 23593 solver.cpp:311] Iteration 1000, loss = 0.144424
I0428 19:35:49.814963 23593 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:49.912984 23600 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:49.915765 23593 solver.cpp:398]     Test net output #0: accuracy = 0.9704
I0428 19:35:49.915798 23593 solver.cpp:398]     Test net output #1: loss = 0.0903901 (* 1 = 0.0903901 loss)
I0428 19:35:49.915803 23593 solver.cpp:316] Optimization Done.
I0428 19:35:49.915807 23593 caffe.cpp:259] Optimization Done.
