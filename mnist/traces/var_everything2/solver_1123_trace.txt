I0428 20:09:58.756270 31742 caffe.cpp:218] Using GPUs 0
I0428 20:09:58.794289 31742 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:59.304792 31742 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1123.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:59.304935 31742 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1123.prototxt
I0428 20:09:59.305336 31742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:59.305354 31742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:59.305451 31742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:59.305526 31742 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:59.305626 31742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:59.305649 31742 net.cpp:86] Creating Layer mnist
I0428 20:09:59.305657 31742 net.cpp:382] mnist -> data
I0428 20:09:59.305680 31742 net.cpp:382] mnist -> label
I0428 20:09:59.306774 31742 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:59.309219 31742 net.cpp:124] Setting up mnist
I0428 20:09:59.309238 31742 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:59.309244 31742 net.cpp:131] Top shape: 64 (64)
I0428 20:09:59.309248 31742 net.cpp:139] Memory required for data: 200960
I0428 20:09:59.309255 31742 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:59.309272 31742 net.cpp:86] Creating Layer conv0
I0428 20:09:59.309293 31742 net.cpp:408] conv0 <- data
I0428 20:09:59.309304 31742 net.cpp:382] conv0 -> conv0
I0428 20:09:59.588699 31742 net.cpp:124] Setting up conv0
I0428 20:09:59.588727 31742 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:59.588732 31742 net.cpp:139] Memory required for data: 3887360
I0428 20:09:59.588745 31742 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:59.588757 31742 net.cpp:86] Creating Layer pool0
I0428 20:09:59.588762 31742 net.cpp:408] pool0 <- conv0
I0428 20:09:59.588768 31742 net.cpp:382] pool0 -> pool0
I0428 20:09:59.588816 31742 net.cpp:124] Setting up pool0
I0428 20:09:59.588824 31742 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:59.588827 31742 net.cpp:139] Memory required for data: 4808960
I0428 20:09:59.588830 31742 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:59.588841 31742 net.cpp:86] Creating Layer conv1
I0428 20:09:59.588845 31742 net.cpp:408] conv1 <- pool0
I0428 20:09:59.588850 31742 net.cpp:382] conv1 -> conv1
I0428 20:09:59.591521 31742 net.cpp:124] Setting up conv1
I0428 20:09:59.591536 31742 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:59.591539 31742 net.cpp:139] Memory required for data: 5218560
I0428 20:09:59.591547 31742 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:59.591572 31742 net.cpp:86] Creating Layer pool1
I0428 20:09:59.591576 31742 net.cpp:408] pool1 <- conv1
I0428 20:09:59.591581 31742 net.cpp:382] pool1 -> pool1
I0428 20:09:59.591632 31742 net.cpp:124] Setting up pool1
I0428 20:09:59.591640 31742 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:59.591644 31742 net.cpp:139] Memory required for data: 5320960
I0428 20:09:59.591646 31742 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:59.591653 31742 net.cpp:86] Creating Layer ip1
I0428 20:09:59.591656 31742 net.cpp:408] ip1 <- pool1
I0428 20:09:59.591661 31742 net.cpp:382] ip1 -> ip1
I0428 20:09:59.591905 31742 net.cpp:124] Setting up ip1
I0428 20:09:59.591912 31742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:59.591915 31742 net.cpp:139] Memory required for data: 5333760
I0428 20:09:59.591922 31742 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:59.591928 31742 net.cpp:86] Creating Layer relu1
I0428 20:09:59.591931 31742 net.cpp:408] relu1 <- ip1
I0428 20:09:59.591935 31742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:59.592092 31742 net.cpp:124] Setting up relu1
I0428 20:09:59.592099 31742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:09:59.592103 31742 net.cpp:139] Memory required for data: 5346560
I0428 20:09:59.592105 31742 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:59.592111 31742 net.cpp:86] Creating Layer ip2
I0428 20:09:59.592114 31742 net.cpp:408] ip2 <- ip1
I0428 20:09:59.592119 31742 net.cpp:382] ip2 -> ip2
I0428 20:09:59.592212 31742 net.cpp:124] Setting up ip2
I0428 20:09:59.592219 31742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:59.592222 31742 net.cpp:139] Memory required for data: 5349120
I0428 20:09:59.592227 31742 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:59.592233 31742 net.cpp:86] Creating Layer relu2
I0428 20:09:59.592236 31742 net.cpp:408] relu2 <- ip2
I0428 20:09:59.592241 31742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:59.592929 31742 net.cpp:124] Setting up relu2
I0428 20:09:59.592941 31742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:59.592944 31742 net.cpp:139] Memory required for data: 5351680
I0428 20:09:59.592947 31742 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:59.592954 31742 net.cpp:86] Creating Layer ip3
I0428 20:09:59.592957 31742 net.cpp:408] ip3 <- ip2
I0428 20:09:59.592962 31742 net.cpp:382] ip3 -> ip3
I0428 20:09:59.593060 31742 net.cpp:124] Setting up ip3
I0428 20:09:59.593067 31742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:59.593070 31742 net.cpp:139] Memory required for data: 5354240
I0428 20:09:59.593077 31742 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:59.593082 31742 net.cpp:86] Creating Layer relu3
I0428 20:09:59.593086 31742 net.cpp:408] relu3 <- ip3
I0428 20:09:59.593089 31742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:59.593256 31742 net.cpp:124] Setting up relu3
I0428 20:09:59.593264 31742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:59.593267 31742 net.cpp:139] Memory required for data: 5356800
I0428 20:09:59.593271 31742 layer_factory.hpp:77] Creating layer loss
I0428 20:09:59.593276 31742 net.cpp:86] Creating Layer loss
I0428 20:09:59.593279 31742 net.cpp:408] loss <- ip3
I0428 20:09:59.593282 31742 net.cpp:408] loss <- label
I0428 20:09:59.593288 31742 net.cpp:382] loss -> loss
I0428 20:09:59.593305 31742 layer_factory.hpp:77] Creating layer loss
I0428 20:09:59.593538 31742 net.cpp:124] Setting up loss
I0428 20:09:59.593545 31742 net.cpp:131] Top shape: (1)
I0428 20:09:59.593549 31742 net.cpp:134]     with loss weight 1
I0428 20:09:59.593564 31742 net.cpp:139] Memory required for data: 5356804
I0428 20:09:59.593567 31742 net.cpp:200] loss needs backward computation.
I0428 20:09:59.593571 31742 net.cpp:200] relu3 needs backward computation.
I0428 20:09:59.593575 31742 net.cpp:200] ip3 needs backward computation.
I0428 20:09:59.593576 31742 net.cpp:200] relu2 needs backward computation.
I0428 20:09:59.593580 31742 net.cpp:200] ip2 needs backward computation.
I0428 20:09:59.593582 31742 net.cpp:200] relu1 needs backward computation.
I0428 20:09:59.593585 31742 net.cpp:200] ip1 needs backward computation.
I0428 20:09:59.593587 31742 net.cpp:200] pool1 needs backward computation.
I0428 20:09:59.593590 31742 net.cpp:200] conv1 needs backward computation.
I0428 20:09:59.593593 31742 net.cpp:200] pool0 needs backward computation.
I0428 20:09:59.593596 31742 net.cpp:200] conv0 needs backward computation.
I0428 20:09:59.593600 31742 net.cpp:202] mnist does not need backward computation.
I0428 20:09:59.593602 31742 net.cpp:244] This network produces output loss
I0428 20:09:59.593611 31742 net.cpp:257] Network initialization done.
I0428 20:09:59.593958 31742 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1123.prototxt
I0428 20:09:59.594000 31742 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:59.594105 31742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:59.594182 31742 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:59.594224 31742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:59.594238 31742 net.cpp:86] Creating Layer mnist
I0428 20:09:59.594244 31742 net.cpp:382] mnist -> data
I0428 20:09:59.594250 31742 net.cpp:382] mnist -> label
I0428 20:09:59.594333 31742 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:59.596160 31742 net.cpp:124] Setting up mnist
I0428 20:09:59.596192 31742 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:59.596197 31742 net.cpp:131] Top shape: 100 (100)
I0428 20:09:59.596200 31742 net.cpp:139] Memory required for data: 314000
I0428 20:09:59.596204 31742 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:59.596215 31742 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:59.596217 31742 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:59.596222 31742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:59.596228 31742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:59.596305 31742 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:59.596312 31742 net.cpp:131] Top shape: 100 (100)
I0428 20:09:59.596316 31742 net.cpp:131] Top shape: 100 (100)
I0428 20:09:59.596318 31742 net.cpp:139] Memory required for data: 314800
I0428 20:09:59.596321 31742 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:59.596331 31742 net.cpp:86] Creating Layer conv0
I0428 20:09:59.596335 31742 net.cpp:408] conv0 <- data
I0428 20:09:59.596343 31742 net.cpp:382] conv0 -> conv0
I0428 20:09:59.597934 31742 net.cpp:124] Setting up conv0
I0428 20:09:59.597962 31742 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:59.597966 31742 net.cpp:139] Memory required for data: 6074800
I0428 20:09:59.597975 31742 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:59.597985 31742 net.cpp:86] Creating Layer pool0
I0428 20:09:59.597988 31742 net.cpp:408] pool0 <- conv0
I0428 20:09:59.597993 31742 net.cpp:382] pool0 -> pool0
I0428 20:09:59.598032 31742 net.cpp:124] Setting up pool0
I0428 20:09:59.598045 31742 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:59.598048 31742 net.cpp:139] Memory required for data: 7514800
I0428 20:09:59.598052 31742 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:59.598060 31742 net.cpp:86] Creating Layer conv1
I0428 20:09:59.598064 31742 net.cpp:408] conv1 <- pool0
I0428 20:09:59.598070 31742 net.cpp:382] conv1 -> conv1
I0428 20:09:59.600056 31742 net.cpp:124] Setting up conv1
I0428 20:09:59.600069 31742 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:59.600088 31742 net.cpp:139] Memory required for data: 8154800
I0428 20:09:59.600098 31742 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:59.600105 31742 net.cpp:86] Creating Layer pool1
I0428 20:09:59.600107 31742 net.cpp:408] pool1 <- conv1
I0428 20:09:59.600128 31742 net.cpp:382] pool1 -> pool1
I0428 20:09:59.600165 31742 net.cpp:124] Setting up pool1
I0428 20:09:59.600188 31742 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:59.600190 31742 net.cpp:139] Memory required for data: 8314800
I0428 20:09:59.600194 31742 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:59.600201 31742 net.cpp:86] Creating Layer ip1
I0428 20:09:59.600208 31742 net.cpp:408] ip1 <- pool1
I0428 20:09:59.600229 31742 net.cpp:382] ip1 -> ip1
I0428 20:09:59.600509 31742 net.cpp:124] Setting up ip1
I0428 20:09:59.600517 31742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:59.600544 31742 net.cpp:139] Memory required for data: 8334800
I0428 20:09:59.600553 31742 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:59.600559 31742 net.cpp:86] Creating Layer relu1
I0428 20:09:59.600563 31742 net.cpp:408] relu1 <- ip1
I0428 20:09:59.600566 31742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:59.600736 31742 net.cpp:124] Setting up relu1
I0428 20:09:59.600745 31742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:09:59.600749 31742 net.cpp:139] Memory required for data: 8354800
I0428 20:09:59.600751 31742 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:59.600759 31742 net.cpp:86] Creating Layer ip2
I0428 20:09:59.600764 31742 net.cpp:408] ip2 <- ip1
I0428 20:09:59.600769 31742 net.cpp:382] ip2 -> ip2
I0428 20:09:59.600878 31742 net.cpp:124] Setting up ip2
I0428 20:09:59.600886 31742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:59.600889 31742 net.cpp:139] Memory required for data: 8358800
I0428 20:09:59.600894 31742 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:59.600899 31742 net.cpp:86] Creating Layer relu2
I0428 20:09:59.600903 31742 net.cpp:408] relu2 <- ip2
I0428 20:09:59.600906 31742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:59.601063 31742 net.cpp:124] Setting up relu2
I0428 20:09:59.601071 31742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:59.601075 31742 net.cpp:139] Memory required for data: 8362800
I0428 20:09:59.601078 31742 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:59.601083 31742 net.cpp:86] Creating Layer ip3
I0428 20:09:59.601086 31742 net.cpp:408] ip3 <- ip2
I0428 20:09:59.601099 31742 net.cpp:382] ip3 -> ip3
I0428 20:09:59.601196 31742 net.cpp:124] Setting up ip3
I0428 20:09:59.601202 31742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:59.601204 31742 net.cpp:139] Memory required for data: 8366800
I0428 20:09:59.601224 31742 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:59.601230 31742 net.cpp:86] Creating Layer relu3
I0428 20:09:59.601233 31742 net.cpp:408] relu3 <- ip3
I0428 20:09:59.601238 31742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:59.602010 31742 net.cpp:124] Setting up relu3
I0428 20:09:59.602021 31742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:59.602041 31742 net.cpp:139] Memory required for data: 8370800
I0428 20:09:59.602046 31742 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:59.602051 31742 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:59.602053 31742 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:59.602059 31742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:59.602066 31742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:59.602123 31742 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:59.602128 31742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:59.602131 31742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:59.602134 31742 net.cpp:139] Memory required for data: 8378800
I0428 20:09:59.602136 31742 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:59.602149 31742 net.cpp:86] Creating Layer accuracy
I0428 20:09:59.602151 31742 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:59.602155 31742 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:59.602161 31742 net.cpp:382] accuracy -> accuracy
I0428 20:09:59.602169 31742 net.cpp:124] Setting up accuracy
I0428 20:09:59.602172 31742 net.cpp:131] Top shape: (1)
I0428 20:09:59.602175 31742 net.cpp:139] Memory required for data: 8378804
I0428 20:09:59.602177 31742 layer_factory.hpp:77] Creating layer loss
I0428 20:09:59.602182 31742 net.cpp:86] Creating Layer loss
I0428 20:09:59.602185 31742 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:59.602190 31742 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:59.602193 31742 net.cpp:382] loss -> loss
I0428 20:09:59.602198 31742 layer_factory.hpp:77] Creating layer loss
I0428 20:09:59.602434 31742 net.cpp:124] Setting up loss
I0428 20:09:59.602442 31742 net.cpp:131] Top shape: (1)
I0428 20:09:59.602445 31742 net.cpp:134]     with loss weight 1
I0428 20:09:59.602463 31742 net.cpp:139] Memory required for data: 8378808
I0428 20:09:59.602466 31742 net.cpp:200] loss needs backward computation.
I0428 20:09:59.602470 31742 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:59.602474 31742 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:59.602478 31742 net.cpp:200] relu3 needs backward computation.
I0428 20:09:59.602479 31742 net.cpp:200] ip3 needs backward computation.
I0428 20:09:59.602483 31742 net.cpp:200] relu2 needs backward computation.
I0428 20:09:59.602486 31742 net.cpp:200] ip2 needs backward computation.
I0428 20:09:59.602489 31742 net.cpp:200] relu1 needs backward computation.
I0428 20:09:59.602491 31742 net.cpp:200] ip1 needs backward computation.
I0428 20:09:59.602494 31742 net.cpp:200] pool1 needs backward computation.
I0428 20:09:59.602507 31742 net.cpp:200] conv1 needs backward computation.
I0428 20:09:59.602510 31742 net.cpp:200] pool0 needs backward computation.
I0428 20:09:59.602514 31742 net.cpp:200] conv0 needs backward computation.
I0428 20:09:59.602517 31742 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:59.602521 31742 net.cpp:202] mnist does not need backward computation.
I0428 20:09:59.602524 31742 net.cpp:244] This network produces output accuracy
I0428 20:09:59.602527 31742 net.cpp:244] This network produces output loss
I0428 20:09:59.602538 31742 net.cpp:257] Network initialization done.
I0428 20:09:59.602579 31742 solver.cpp:56] Solver scaffolding done.
I0428 20:09:59.602911 31742 caffe.cpp:248] Starting Optimization
I0428 20:09:59.602917 31742 solver.cpp:273] Solving LeNet
I0428 20:09:59.602921 31742 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:59.603741 31742 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:59.609362 31742 blocking_queue.cpp:49] Waiting for data
I0428 20:09:59.676391 31749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:59.677085 31742 solver.cpp:398]     Test net output #0: accuracy = 0.095
I0428 20:09:59.677120 31742 solver.cpp:398]     Test net output #1: loss = 2.31053 (* 1 = 2.31053 loss)
I0428 20:09:59.680632 31742 solver.cpp:219] Iteration 0 (-1.04677e-42 iter/s, 0.0776714s/100 iters), loss = 2.31417
I0428 20:09:59.680671 31742 solver.cpp:238]     Train net output #0: loss = 2.31417 (* 1 = 2.31417 loss)
I0428 20:09:59.680682 31742 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:59.786880 31742 solver.cpp:219] Iteration 100 (941.519 iter/s, 0.106211s/100 iters), loss = 1.62337
I0428 20:09:59.786906 31742 solver.cpp:238]     Train net output #0: loss = 1.62337 (* 1 = 1.62337 loss)
I0428 20:09:59.786913 31742 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:59.891662 31742 solver.cpp:219] Iteration 200 (954.691 iter/s, 0.104746s/100 iters), loss = 1.11627
I0428 20:09:59.891701 31742 solver.cpp:238]     Train net output #0: loss = 1.11627 (* 1 = 1.11627 loss)
I0428 20:09:59.891707 31742 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:59.997858 31742 solver.cpp:219] Iteration 300 (942.1 iter/s, 0.106146s/100 iters), loss = 0.796122
I0428 20:09:59.997897 31742 solver.cpp:238]     Train net output #0: loss = 0.796122 (* 1 = 0.796122 loss)
I0428 20:09:59.997903 31742 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:00.100726 31742 solver.cpp:219] Iteration 400 (972.43 iter/s, 0.102835s/100 iters), loss = 1.15454
I0428 20:10:00.100765 31742 solver.cpp:238]     Train net output #0: loss = 1.15454 (* 1 = 1.15454 loss)
I0428 20:10:00.100771 31742 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:00.200986 31742 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:00.254670 31749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:00.256485 31742 solver.cpp:398]     Test net output #0: accuracy = 0.5804
I0428 20:10:00.256505 31742 solver.cpp:398]     Test net output #1: loss = 1.04635 (* 1 = 1.04635 loss)
I0428 20:10:00.257472 31742 solver.cpp:219] Iteration 500 (638.13 iter/s, 0.156708s/100 iters), loss = 1.30894
I0428 20:10:00.257527 31742 solver.cpp:238]     Train net output #0: loss = 1.30894 (* 1 = 1.30894 loss)
I0428 20:10:00.257534 31742 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:00.359051 31742 solver.cpp:219] Iteration 600 (984.926 iter/s, 0.10153s/100 iters), loss = 1.04027
I0428 20:10:00.359093 31742 solver.cpp:238]     Train net output #0: loss = 1.04027 (* 1 = 1.04027 loss)
I0428 20:10:00.359099 31742 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:00.463264 31742 solver.cpp:219] Iteration 700 (959.927 iter/s, 0.104175s/100 iters), loss = 1.07014
I0428 20:10:00.463295 31742 solver.cpp:238]     Train net output #0: loss = 1.07014 (* 1 = 1.07014 loss)
I0428 20:10:00.463302 31742 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:00.570821 31742 solver.cpp:219] Iteration 800 (930.103 iter/s, 0.107515s/100 iters), loss = 1.03463
I0428 20:10:00.570861 31742 solver.cpp:238]     Train net output #0: loss = 1.03463 (* 1 = 1.03463 loss)
I0428 20:10:00.570868 31742 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:00.671465 31742 solver.cpp:219] Iteration 900 (994.09 iter/s, 0.100594s/100 iters), loss = 0.932351
I0428 20:10:00.671506 31742 solver.cpp:238]     Train net output #0: loss = 0.932351 (* 1 = 0.932351 loss)
I0428 20:10:00.671514 31742 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:00.705127 31748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:00.771525 31742 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:00.773665 31742 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:00.774971 31742 solver.cpp:311] Iteration 1000, loss = 0.993965
I0428 20:10:00.774999 31742 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:00.841743 31749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:00.843806 31742 solver.cpp:398]     Test net output #0: accuracy = 0.5901
I0428 20:10:00.843832 31742 solver.cpp:398]     Test net output #1: loss = 0.990154 (* 1 = 0.990154 loss)
I0428 20:10:00.843848 31742 solver.cpp:316] Optimization Done.
I0428 20:10:00.843852 31742 caffe.cpp:259] Optimization Done.
