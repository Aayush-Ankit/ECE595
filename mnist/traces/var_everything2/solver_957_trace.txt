I0428 20:03:42.601744 30230 caffe.cpp:218] Using GPUs 0
I0428 20:03:42.639400 30230 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:43.152510 30230 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test957.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:43.152655 30230 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test957.prototxt
I0428 20:03:43.153085 30230 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:43.153106 30230 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:43.153209 30230 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:43.153290 30230 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:43.153393 30230 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:43.153416 30230 net.cpp:86] Creating Layer mnist
I0428 20:03:43.153426 30230 net.cpp:382] mnist -> data
I0428 20:03:43.153448 30230 net.cpp:382] mnist -> label
I0428 20:03:43.154538 30230 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:43.157009 30230 net.cpp:124] Setting up mnist
I0428 20:03:43.157028 30230 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:43.157037 30230 net.cpp:131] Top shape: 64 (64)
I0428 20:03:43.157039 30230 net.cpp:139] Memory required for data: 200960
I0428 20:03:43.157047 30230 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:43.157063 30230 net.cpp:86] Creating Layer conv0
I0428 20:03:43.157084 30230 net.cpp:408] conv0 <- data
I0428 20:03:43.157097 30230 net.cpp:382] conv0 -> conv0
I0428 20:03:43.428153 30230 net.cpp:124] Setting up conv0
I0428 20:03:43.428180 30230 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:43.428184 30230 net.cpp:139] Memory required for data: 1675520
I0428 20:03:43.428198 30230 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:43.428211 30230 net.cpp:86] Creating Layer pool0
I0428 20:03:43.428215 30230 net.cpp:408] pool0 <- conv0
I0428 20:03:43.428220 30230 net.cpp:382] pool0 -> pool0
I0428 20:03:43.428279 30230 net.cpp:124] Setting up pool0
I0428 20:03:43.428289 30230 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:43.428292 30230 net.cpp:139] Memory required for data: 2044160
I0428 20:03:43.428294 30230 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:43.428305 30230 net.cpp:86] Creating Layer conv1
I0428 20:03:43.428308 30230 net.cpp:408] conv1 <- pool0
I0428 20:03:43.428313 30230 net.cpp:382] conv1 -> conv1
I0428 20:03:43.430323 30230 net.cpp:124] Setting up conv1
I0428 20:03:43.430354 30230 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:43.430358 30230 net.cpp:139] Memory required for data: 3682560
I0428 20:03:43.430366 30230 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:43.430374 30230 net.cpp:86] Creating Layer pool1
I0428 20:03:43.430378 30230 net.cpp:408] pool1 <- conv1
I0428 20:03:43.430383 30230 net.cpp:382] pool1 -> pool1
I0428 20:03:43.430419 30230 net.cpp:124] Setting up pool1
I0428 20:03:43.430425 30230 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:43.430428 30230 net.cpp:139] Memory required for data: 4092160
I0428 20:03:43.430431 30230 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:43.430438 30230 net.cpp:86] Creating Layer ip1
I0428 20:03:43.430441 30230 net.cpp:408] ip1 <- pool1
I0428 20:03:43.430446 30230 net.cpp:382] ip1 -> ip1
I0428 20:03:43.430794 30230 net.cpp:124] Setting up ip1
I0428 20:03:43.430801 30230 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:43.430820 30230 net.cpp:139] Memory required for data: 4098560
I0428 20:03:43.430829 30230 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:43.430833 30230 net.cpp:86] Creating Layer relu1
I0428 20:03:43.430836 30230 net.cpp:408] relu1 <- ip1
I0428 20:03:43.430840 30230 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:43.430996 30230 net.cpp:124] Setting up relu1
I0428 20:03:43.431005 30230 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:03:43.431007 30230 net.cpp:139] Memory required for data: 4104960
I0428 20:03:43.431010 30230 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:43.431016 30230 net.cpp:86] Creating Layer ip2
I0428 20:03:43.431020 30230 net.cpp:408] ip2 <- ip1
I0428 20:03:43.431023 30230 net.cpp:382] ip2 -> ip2
I0428 20:03:43.431109 30230 net.cpp:124] Setting up ip2
I0428 20:03:43.431116 30230 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:43.431119 30230 net.cpp:139] Memory required for data: 4107520
I0428 20:03:43.431124 30230 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:43.431129 30230 net.cpp:86] Creating Layer relu2
I0428 20:03:43.431149 30230 net.cpp:408] relu2 <- ip2
I0428 20:03:43.431152 30230 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:43.431874 30230 net.cpp:124] Setting up relu2
I0428 20:03:43.431886 30230 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:43.431905 30230 net.cpp:139] Memory required for data: 4110080
I0428 20:03:43.431910 30230 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:43.431916 30230 net.cpp:86] Creating Layer ip3
I0428 20:03:43.431921 30230 net.cpp:408] ip3 <- ip2
I0428 20:03:43.431926 30230 net.cpp:382] ip3 -> ip3
I0428 20:03:43.432019 30230 net.cpp:124] Setting up ip3
I0428 20:03:43.432027 30230 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:43.432030 30230 net.cpp:139] Memory required for data: 4112640
I0428 20:03:43.432037 30230 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:43.432042 30230 net.cpp:86] Creating Layer relu3
I0428 20:03:43.432045 30230 net.cpp:408] relu3 <- ip3
I0428 20:03:43.432049 30230 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:43.432209 30230 net.cpp:124] Setting up relu3
I0428 20:03:43.432219 30230 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:43.432221 30230 net.cpp:139] Memory required for data: 4115200
I0428 20:03:43.432224 30230 layer_factory.hpp:77] Creating layer loss
I0428 20:03:43.432230 30230 net.cpp:86] Creating Layer loss
I0428 20:03:43.432234 30230 net.cpp:408] loss <- ip3
I0428 20:03:43.432252 30230 net.cpp:408] loss <- label
I0428 20:03:43.432258 30230 net.cpp:382] loss -> loss
I0428 20:03:43.432276 30230 layer_factory.hpp:77] Creating layer loss
I0428 20:03:43.432485 30230 net.cpp:124] Setting up loss
I0428 20:03:43.432493 30230 net.cpp:131] Top shape: (1)
I0428 20:03:43.432497 30230 net.cpp:134]     with loss weight 1
I0428 20:03:43.432510 30230 net.cpp:139] Memory required for data: 4115204
I0428 20:03:43.432514 30230 net.cpp:200] loss needs backward computation.
I0428 20:03:43.432518 30230 net.cpp:200] relu3 needs backward computation.
I0428 20:03:43.432520 30230 net.cpp:200] ip3 needs backward computation.
I0428 20:03:43.432523 30230 net.cpp:200] relu2 needs backward computation.
I0428 20:03:43.432525 30230 net.cpp:200] ip2 needs backward computation.
I0428 20:03:43.432528 30230 net.cpp:200] relu1 needs backward computation.
I0428 20:03:43.432531 30230 net.cpp:200] ip1 needs backward computation.
I0428 20:03:43.432534 30230 net.cpp:200] pool1 needs backward computation.
I0428 20:03:43.432538 30230 net.cpp:200] conv1 needs backward computation.
I0428 20:03:43.432540 30230 net.cpp:200] pool0 needs backward computation.
I0428 20:03:43.432543 30230 net.cpp:200] conv0 needs backward computation.
I0428 20:03:43.432546 30230 net.cpp:202] mnist does not need backward computation.
I0428 20:03:43.432548 30230 net.cpp:244] This network produces output loss
I0428 20:03:43.432557 30230 net.cpp:257] Network initialization done.
I0428 20:03:43.432921 30230 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test957.prototxt
I0428 20:03:43.432965 30230 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:43.433056 30230 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:43.433136 30230 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:43.433197 30230 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:43.433224 30230 net.cpp:86] Creating Layer mnist
I0428 20:03:43.433229 30230 net.cpp:382] mnist -> data
I0428 20:03:43.433236 30230 net.cpp:382] mnist -> label
I0428 20:03:43.433317 30230 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:43.435258 30230 net.cpp:124] Setting up mnist
I0428 20:03:43.435303 30230 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:43.435308 30230 net.cpp:131] Top shape: 100 (100)
I0428 20:03:43.435328 30230 net.cpp:139] Memory required for data: 314000
I0428 20:03:43.435331 30230 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:43.435341 30230 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:43.435345 30230 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:43.435366 30230 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:43.435374 30230 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:43.435446 30230 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:43.435454 30230 net.cpp:131] Top shape: 100 (100)
I0428 20:03:43.435458 30230 net.cpp:131] Top shape: 100 (100)
I0428 20:03:43.435461 30230 net.cpp:139] Memory required for data: 314800
I0428 20:03:43.435464 30230 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:43.435473 30230 net.cpp:86] Creating Layer conv0
I0428 20:03:43.435477 30230 net.cpp:408] conv0 <- data
I0428 20:03:43.435482 30230 net.cpp:382] conv0 -> conv0
I0428 20:03:43.436992 30230 net.cpp:124] Setting up conv0
I0428 20:03:43.437006 30230 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:43.437026 30230 net.cpp:139] Memory required for data: 2618800
I0428 20:03:43.437036 30230 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:43.437043 30230 net.cpp:86] Creating Layer pool0
I0428 20:03:43.437047 30230 net.cpp:408] pool0 <- conv0
I0428 20:03:43.437052 30230 net.cpp:382] pool0 -> pool0
I0428 20:03:43.437098 30230 net.cpp:124] Setting up pool0
I0428 20:03:43.437103 30230 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:43.437106 30230 net.cpp:139] Memory required for data: 3194800
I0428 20:03:43.437109 30230 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:43.437120 30230 net.cpp:86] Creating Layer conv1
I0428 20:03:43.437124 30230 net.cpp:408] conv1 <- pool0
I0428 20:03:43.437129 30230 net.cpp:382] conv1 -> conv1
I0428 20:03:43.438731 30230 net.cpp:124] Setting up conv1
I0428 20:03:43.438760 30230 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:43.438763 30230 net.cpp:139] Memory required for data: 5754800
I0428 20:03:43.438788 30230 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:43.438796 30230 net.cpp:86] Creating Layer pool1
I0428 20:03:43.438799 30230 net.cpp:408] pool1 <- conv1
I0428 20:03:43.438804 30230 net.cpp:382] pool1 -> pool1
I0428 20:03:43.438843 30230 net.cpp:124] Setting up pool1
I0428 20:03:43.438848 30230 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:43.438850 30230 net.cpp:139] Memory required for data: 6394800
I0428 20:03:43.438853 30230 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:43.438860 30230 net.cpp:86] Creating Layer ip1
I0428 20:03:43.438866 30230 net.cpp:408] ip1 <- pool1
I0428 20:03:43.438871 30230 net.cpp:382] ip1 -> ip1
I0428 20:03:43.439268 30230 net.cpp:124] Setting up ip1
I0428 20:03:43.439277 30230 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:43.439306 30230 net.cpp:139] Memory required for data: 6404800
I0428 20:03:43.439313 30230 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:43.439321 30230 net.cpp:86] Creating Layer relu1
I0428 20:03:43.439323 30230 net.cpp:408] relu1 <- ip1
I0428 20:03:43.439328 30230 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:43.439484 30230 net.cpp:124] Setting up relu1
I0428 20:03:43.439493 30230 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:03:43.439496 30230 net.cpp:139] Memory required for data: 6414800
I0428 20:03:43.439499 30230 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:43.439509 30230 net.cpp:86] Creating Layer ip2
I0428 20:03:43.439512 30230 net.cpp:408] ip2 <- ip1
I0428 20:03:43.439518 30230 net.cpp:382] ip2 -> ip2
I0428 20:03:43.439631 30230 net.cpp:124] Setting up ip2
I0428 20:03:43.439656 30230 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:43.439658 30230 net.cpp:139] Memory required for data: 6418800
I0428 20:03:43.439663 30230 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:43.439668 30230 net.cpp:86] Creating Layer relu2
I0428 20:03:43.439671 30230 net.cpp:408] relu2 <- ip2
I0428 20:03:43.439676 30230 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:43.439872 30230 net.cpp:124] Setting up relu2
I0428 20:03:43.439882 30230 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:43.439885 30230 net.cpp:139] Memory required for data: 6422800
I0428 20:03:43.439888 30230 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:43.439893 30230 net.cpp:86] Creating Layer ip3
I0428 20:03:43.439896 30230 net.cpp:408] ip3 <- ip2
I0428 20:03:43.439903 30230 net.cpp:382] ip3 -> ip3
I0428 20:03:43.440024 30230 net.cpp:124] Setting up ip3
I0428 20:03:43.440032 30230 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:43.440035 30230 net.cpp:139] Memory required for data: 6426800
I0428 20:03:43.440043 30230 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:43.440048 30230 net.cpp:86] Creating Layer relu3
I0428 20:03:43.440052 30230 net.cpp:408] relu3 <- ip3
I0428 20:03:43.440057 30230 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:43.440850 30230 net.cpp:124] Setting up relu3
I0428 20:03:43.440878 30230 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:43.440881 30230 net.cpp:139] Memory required for data: 6430800
I0428 20:03:43.440886 30230 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:43.440907 30230 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:43.440909 30230 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:43.440917 30230 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:43.440923 30230 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:43.440963 30230 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:43.440969 30230 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:43.440973 30230 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:43.440976 30230 net.cpp:139] Memory required for data: 6438800
I0428 20:03:43.440979 30230 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:43.440985 30230 net.cpp:86] Creating Layer accuracy
I0428 20:03:43.440989 30230 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:43.440994 30230 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:43.440997 30230 net.cpp:382] accuracy -> accuracy
I0428 20:03:43.441004 30230 net.cpp:124] Setting up accuracy
I0428 20:03:43.441010 30230 net.cpp:131] Top shape: (1)
I0428 20:03:43.441015 30230 net.cpp:139] Memory required for data: 6438804
I0428 20:03:43.441017 30230 layer_factory.hpp:77] Creating layer loss
I0428 20:03:43.441022 30230 net.cpp:86] Creating Layer loss
I0428 20:03:43.441025 30230 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:43.441030 30230 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:43.441033 30230 net.cpp:382] loss -> loss
I0428 20:03:43.441040 30230 layer_factory.hpp:77] Creating layer loss
I0428 20:03:43.441400 30230 net.cpp:124] Setting up loss
I0428 20:03:43.441409 30230 net.cpp:131] Top shape: (1)
I0428 20:03:43.441427 30230 net.cpp:134]     with loss weight 1
I0428 20:03:43.441444 30230 net.cpp:139] Memory required for data: 6438808
I0428 20:03:43.441448 30230 net.cpp:200] loss needs backward computation.
I0428 20:03:43.441452 30230 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:43.441455 30230 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:43.441458 30230 net.cpp:200] relu3 needs backward computation.
I0428 20:03:43.441462 30230 net.cpp:200] ip3 needs backward computation.
I0428 20:03:43.441463 30230 net.cpp:200] relu2 needs backward computation.
I0428 20:03:43.441467 30230 net.cpp:200] ip2 needs backward computation.
I0428 20:03:43.441468 30230 net.cpp:200] relu1 needs backward computation.
I0428 20:03:43.441471 30230 net.cpp:200] ip1 needs backward computation.
I0428 20:03:43.441474 30230 net.cpp:200] pool1 needs backward computation.
I0428 20:03:43.441478 30230 net.cpp:200] conv1 needs backward computation.
I0428 20:03:43.441481 30230 net.cpp:200] pool0 needs backward computation.
I0428 20:03:43.441484 30230 net.cpp:200] conv0 needs backward computation.
I0428 20:03:43.441488 30230 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:43.441491 30230 net.cpp:202] mnist does not need backward computation.
I0428 20:03:43.441493 30230 net.cpp:244] This network produces output accuracy
I0428 20:03:43.441498 30230 net.cpp:244] This network produces output loss
I0428 20:03:43.441507 30230 net.cpp:257] Network initialization done.
I0428 20:03:43.441547 30230 solver.cpp:56] Solver scaffolding done.
I0428 20:03:43.441910 30230 caffe.cpp:248] Starting Optimization
I0428 20:03:43.441915 30230 solver.cpp:273] Solving LeNet
I0428 20:03:43.441917 30230 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:43.442128 30230 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:43.485555 30230 blocking_queue.cpp:49] Waiting for data
I0428 20:03:43.500772 30237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:43.501482 30230 solver.cpp:398]     Test net output #0: accuracy = 0.1014
I0428 20:03:43.501514 30230 solver.cpp:398]     Test net output #1: loss = 2.33699 (* 1 = 2.33699 loss)
I0428 20:03:43.505121 30230 solver.cpp:219] Iteration 0 (-3.20262e-31 iter/s, 0.0631624s/100 iters), loss = 2.35575
I0428 20:03:43.505177 30230 solver.cpp:238]     Train net output #0: loss = 2.35575 (* 1 = 2.35575 loss)
I0428 20:03:43.505187 30230 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:43.663460 30230 solver.cpp:219] Iteration 100 (631.835 iter/s, 0.158269s/100 iters), loss = 0.432493
I0428 20:03:43.663486 30230 solver.cpp:238]     Train net output #0: loss = 0.432493 (* 1 = 0.432493 loss)
I0428 20:03:43.663493 30230 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:43.816922 30230 solver.cpp:219] Iteration 200 (651.798 iter/s, 0.153422s/100 iters), loss = 0.196769
I0428 20:03:43.816951 30230 solver.cpp:238]     Train net output #0: loss = 0.196769 (* 1 = 0.196769 loss)
I0428 20:03:43.816957 30230 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:43.978590 30230 solver.cpp:219] Iteration 300 (618.712 iter/s, 0.161626s/100 iters), loss = 0.280017
I0428 20:03:43.978633 30230 solver.cpp:238]     Train net output #0: loss = 0.280017 (* 1 = 0.280017 loss)
I0428 20:03:43.978641 30230 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:44.144443 30230 solver.cpp:219] Iteration 400 (603.17 iter/s, 0.165791s/100 iters), loss = 0.105369
I0428 20:03:44.144487 30230 solver.cpp:238]     Train net output #0: loss = 0.105369 (* 1 = 0.105369 loss)
I0428 20:03:44.144500 30230 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:44.312716 30230 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:44.388855 30237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:44.389498 30230 solver.cpp:398]     Test net output #0: accuracy = 0.9607
I0428 20:03:44.389520 30230 solver.cpp:398]     Test net output #1: loss = 0.130134 (* 1 = 0.130134 loss)
I0428 20:03:44.391171 30230 solver.cpp:219] Iteration 500 (405.399 iter/s, 0.24667s/100 iters), loss = 0.0908462
I0428 20:03:44.391223 30230 solver.cpp:238]     Train net output #0: loss = 0.0908462 (* 1 = 0.0908462 loss)
I0428 20:03:44.391235 30230 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:44.553901 30230 solver.cpp:219] Iteration 600 (614.766 iter/s, 0.162664s/100 iters), loss = 0.144772
I0428 20:03:44.553937 30230 solver.cpp:238]     Train net output #0: loss = 0.144772 (* 1 = 0.144772 loss)
I0428 20:03:44.553944 30230 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:44.709834 30230 solver.cpp:219] Iteration 700 (641.513 iter/s, 0.155881s/100 iters), loss = 0.165384
I0428 20:03:44.709893 30230 solver.cpp:238]     Train net output #0: loss = 0.165384 (* 1 = 0.165384 loss)
I0428 20:03:44.709902 30230 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:44.864118 30230 solver.cpp:219] Iteration 800 (648.46 iter/s, 0.154211s/100 iters), loss = 0.308386
I0428 20:03:44.864147 30230 solver.cpp:238]     Train net output #0: loss = 0.308386 (* 1 = 0.308386 loss)
I0428 20:03:44.864153 30230 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:45.017343 30230 solver.cpp:219] Iteration 900 (652.809 iter/s, 0.153184s/100 iters), loss = 0.157292
I0428 20:03:45.017371 30230 solver.cpp:238]     Train net output #0: loss = 0.157292 (* 1 = 0.157292 loss)
I0428 20:03:45.017379 30230 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:45.068155 30236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:45.168071 30230 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:45.170289 30230 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:45.171347 30230 solver.cpp:311] Iteration 1000, loss = 0.0861697
I0428 20:03:45.171366 30230 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:45.243530 30237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:45.244175 30230 solver.cpp:398]     Test net output #0: accuracy = 0.9721
I0428 20:03:45.244211 30230 solver.cpp:398]     Test net output #1: loss = 0.0911683 (* 1 = 0.0911683 loss)
I0428 20:03:45.244217 30230 solver.cpp:316] Optimization Done.
I0428 20:03:45.244220 30230 caffe.cpp:259] Optimization Done.
