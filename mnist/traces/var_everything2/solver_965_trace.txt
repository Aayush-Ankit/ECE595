I0428 20:04:06.040197 30320 caffe.cpp:218] Using GPUs 0
I0428 20:04:06.068958 30320 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:06.520220 30320 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test965.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:06.520367 30320 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test965.prototxt
I0428 20:04:06.520709 30320 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:06.520723 30320 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:06.520802 30320 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:06.520889 30320 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:06.520975 30320 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:06.520994 30320 net.cpp:86] Creating Layer mnist
I0428 20:04:06.521000 30320 net.cpp:382] mnist -> data
I0428 20:04:06.521019 30320 net.cpp:382] mnist -> label
I0428 20:04:06.521940 30320 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:06.524320 30320 net.cpp:124] Setting up mnist
I0428 20:04:06.524351 30320 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:06.524356 30320 net.cpp:131] Top shape: 64 (64)
I0428 20:04:06.524359 30320 net.cpp:139] Memory required for data: 200960
I0428 20:04:06.524364 30320 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:06.524379 30320 net.cpp:86] Creating Layer conv0
I0428 20:04:06.524394 30320 net.cpp:408] conv0 <- data
I0428 20:04:06.524405 30320 net.cpp:382] conv0 -> conv0
I0428 20:04:06.756381 30320 net.cpp:124] Setting up conv0
I0428 20:04:06.756407 30320 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:06.756412 30320 net.cpp:139] Memory required for data: 1675520
I0428 20:04:06.756425 30320 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:06.756453 30320 net.cpp:86] Creating Layer pool0
I0428 20:04:06.756456 30320 net.cpp:408] pool0 <- conv0
I0428 20:04:06.756461 30320 net.cpp:382] pool0 -> pool0
I0428 20:04:06.756505 30320 net.cpp:124] Setting up pool0
I0428 20:04:06.756521 30320 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:06.756525 30320 net.cpp:139] Memory required for data: 2044160
I0428 20:04:06.756527 30320 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:06.756537 30320 net.cpp:86] Creating Layer conv1
I0428 20:04:06.756541 30320 net.cpp:408] conv1 <- pool0
I0428 20:04:06.756544 30320 net.cpp:382] conv1 -> conv1
I0428 20:04:06.758518 30320 net.cpp:124] Setting up conv1
I0428 20:04:06.758533 30320 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:06.758538 30320 net.cpp:139] Memory required for data: 3682560
I0428 20:04:06.758545 30320 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:06.758553 30320 net.cpp:86] Creating Layer pool1
I0428 20:04:06.758556 30320 net.cpp:408] pool1 <- conv1
I0428 20:04:06.758576 30320 net.cpp:382] pool1 -> pool1
I0428 20:04:06.758626 30320 net.cpp:124] Setting up pool1
I0428 20:04:06.758637 30320 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:06.758641 30320 net.cpp:139] Memory required for data: 4092160
I0428 20:04:06.758643 30320 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:06.758651 30320 net.cpp:86] Creating Layer ip1
I0428 20:04:06.758653 30320 net.cpp:408] ip1 <- pool1
I0428 20:04:06.758657 30320 net.cpp:382] ip1 -> ip1
I0428 20:04:06.759018 30320 net.cpp:124] Setting up ip1
I0428 20:04:06.759027 30320 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:06.759044 30320 net.cpp:139] Memory required for data: 4098560
I0428 20:04:06.759052 30320 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:06.759057 30320 net.cpp:86] Creating Layer relu1
I0428 20:04:06.759061 30320 net.cpp:408] relu1 <- ip1
I0428 20:04:06.759065 30320 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:06.759223 30320 net.cpp:124] Setting up relu1
I0428 20:04:06.759232 30320 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:06.759237 30320 net.cpp:139] Memory required for data: 4104960
I0428 20:04:06.759239 30320 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:06.759245 30320 net.cpp:86] Creating Layer ip2
I0428 20:04:06.759248 30320 net.cpp:408] ip2 <- ip1
I0428 20:04:06.759268 30320 net.cpp:382] ip2 -> ip2
I0428 20:04:06.760376 30320 net.cpp:124] Setting up ip2
I0428 20:04:06.760388 30320 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:06.760408 30320 net.cpp:139] Memory required for data: 4117760
I0428 20:04:06.760414 30320 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:06.760421 30320 net.cpp:86] Creating Layer relu2
I0428 20:04:06.760424 30320 net.cpp:408] relu2 <- ip2
I0428 20:04:06.760428 30320 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:06.761229 30320 net.cpp:124] Setting up relu2
I0428 20:04:06.761242 30320 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:06.761260 30320 net.cpp:139] Memory required for data: 4130560
I0428 20:04:06.761265 30320 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:06.761271 30320 net.cpp:86] Creating Layer ip3
I0428 20:04:06.761274 30320 net.cpp:408] ip3 <- ip2
I0428 20:04:06.761279 30320 net.cpp:382] ip3 -> ip3
I0428 20:04:06.761379 30320 net.cpp:124] Setting up ip3
I0428 20:04:06.761386 30320 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:06.761389 30320 net.cpp:139] Memory required for data: 4133120
I0428 20:04:06.761397 30320 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:06.761402 30320 net.cpp:86] Creating Layer relu3
I0428 20:04:06.761405 30320 net.cpp:408] relu3 <- ip3
I0428 20:04:06.761425 30320 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:06.761579 30320 net.cpp:124] Setting up relu3
I0428 20:04:06.761587 30320 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:06.761590 30320 net.cpp:139] Memory required for data: 4135680
I0428 20:04:06.761593 30320 layer_factory.hpp:77] Creating layer loss
I0428 20:04:06.761600 30320 net.cpp:86] Creating Layer loss
I0428 20:04:06.761602 30320 net.cpp:408] loss <- ip3
I0428 20:04:06.761605 30320 net.cpp:408] loss <- label
I0428 20:04:06.761610 30320 net.cpp:382] loss -> loss
I0428 20:04:06.761641 30320 layer_factory.hpp:77] Creating layer loss
I0428 20:04:06.761859 30320 net.cpp:124] Setting up loss
I0428 20:04:06.761869 30320 net.cpp:131] Top shape: (1)
I0428 20:04:06.761873 30320 net.cpp:134]     with loss weight 1
I0428 20:04:06.761888 30320 net.cpp:139] Memory required for data: 4135684
I0428 20:04:06.761890 30320 net.cpp:200] loss needs backward computation.
I0428 20:04:06.761894 30320 net.cpp:200] relu3 needs backward computation.
I0428 20:04:06.761898 30320 net.cpp:200] ip3 needs backward computation.
I0428 20:04:06.761900 30320 net.cpp:200] relu2 needs backward computation.
I0428 20:04:06.761904 30320 net.cpp:200] ip2 needs backward computation.
I0428 20:04:06.761906 30320 net.cpp:200] relu1 needs backward computation.
I0428 20:04:06.761909 30320 net.cpp:200] ip1 needs backward computation.
I0428 20:04:06.761912 30320 net.cpp:200] pool1 needs backward computation.
I0428 20:04:06.761915 30320 net.cpp:200] conv1 needs backward computation.
I0428 20:04:06.761919 30320 net.cpp:200] pool0 needs backward computation.
I0428 20:04:06.761921 30320 net.cpp:200] conv0 needs backward computation.
I0428 20:04:06.761925 30320 net.cpp:202] mnist does not need backward computation.
I0428 20:04:06.761929 30320 net.cpp:244] This network produces output loss
I0428 20:04:06.761951 30320 net.cpp:257] Network initialization done.
I0428 20:04:06.762298 30320 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test965.prototxt
I0428 20:04:06.762339 30320 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:06.762431 30320 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:06.762524 30320 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:06.762568 30320 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:06.762580 30320 net.cpp:86] Creating Layer mnist
I0428 20:04:06.762584 30320 net.cpp:382] mnist -> data
I0428 20:04:06.762593 30320 net.cpp:382] mnist -> label
I0428 20:04:06.762672 30320 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:06.764669 30320 net.cpp:124] Setting up mnist
I0428 20:04:06.764714 30320 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:06.764719 30320 net.cpp:131] Top shape: 100 (100)
I0428 20:04:06.764739 30320 net.cpp:139] Memory required for data: 314000
I0428 20:04:06.764742 30320 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:06.764763 30320 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:06.764767 30320 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:06.764771 30320 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:06.764778 30320 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:06.764936 30320 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:06.764946 30320 net.cpp:131] Top shape: 100 (100)
I0428 20:04:06.764950 30320 net.cpp:131] Top shape: 100 (100)
I0428 20:04:06.764953 30320 net.cpp:139] Memory required for data: 314800
I0428 20:04:06.764957 30320 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:06.764966 30320 net.cpp:86] Creating Layer conv0
I0428 20:04:06.764969 30320 net.cpp:408] conv0 <- data
I0428 20:04:06.764976 30320 net.cpp:382] conv0 -> conv0
I0428 20:04:06.766618 30320 net.cpp:124] Setting up conv0
I0428 20:04:06.766645 30320 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:06.766649 30320 net.cpp:139] Memory required for data: 2618800
I0428 20:04:06.766657 30320 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:06.766664 30320 net.cpp:86] Creating Layer pool0
I0428 20:04:06.766667 30320 net.cpp:408] pool0 <- conv0
I0428 20:04:06.766671 30320 net.cpp:382] pool0 -> pool0
I0428 20:04:06.766705 30320 net.cpp:124] Setting up pool0
I0428 20:04:06.766710 30320 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:06.766713 30320 net.cpp:139] Memory required for data: 3194800
I0428 20:04:06.766716 30320 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:06.766724 30320 net.cpp:86] Creating Layer conv1
I0428 20:04:06.766726 30320 net.cpp:408] conv1 <- pool0
I0428 20:04:06.766731 30320 net.cpp:382] conv1 -> conv1
I0428 20:04:06.768332 30320 net.cpp:124] Setting up conv1
I0428 20:04:06.768348 30320 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:06.768352 30320 net.cpp:139] Memory required for data: 5754800
I0428 20:04:06.768362 30320 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:06.768368 30320 net.cpp:86] Creating Layer pool1
I0428 20:04:06.768370 30320 net.cpp:408] pool1 <- conv1
I0428 20:04:06.768376 30320 net.cpp:382] pool1 -> pool1
I0428 20:04:06.768411 30320 net.cpp:124] Setting up pool1
I0428 20:04:06.768417 30320 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:06.768420 30320 net.cpp:139] Memory required for data: 6394800
I0428 20:04:06.768424 30320 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:06.768430 30320 net.cpp:86] Creating Layer ip1
I0428 20:04:06.768434 30320 net.cpp:408] ip1 <- pool1
I0428 20:04:06.768437 30320 net.cpp:382] ip1 -> ip1
I0428 20:04:06.768779 30320 net.cpp:124] Setting up ip1
I0428 20:04:06.768788 30320 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:06.768802 30320 net.cpp:139] Memory required for data: 6404800
I0428 20:04:06.768833 30320 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:06.768838 30320 net.cpp:86] Creating Layer relu1
I0428 20:04:06.768842 30320 net.cpp:408] relu1 <- ip1
I0428 20:04:06.768846 30320 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:06.768998 30320 net.cpp:124] Setting up relu1
I0428 20:04:06.769007 30320 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:06.769011 30320 net.cpp:139] Memory required for data: 6414800
I0428 20:04:06.769016 30320 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:06.769022 30320 net.cpp:86] Creating Layer ip2
I0428 20:04:06.769026 30320 net.cpp:408] ip2 <- ip1
I0428 20:04:06.769031 30320 net.cpp:382] ip2 -> ip2
I0428 20:04:06.769177 30320 net.cpp:124] Setting up ip2
I0428 20:04:06.769191 30320 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:06.769194 30320 net.cpp:139] Memory required for data: 6434800
I0428 20:04:06.769199 30320 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:06.769204 30320 net.cpp:86] Creating Layer relu2
I0428 20:04:06.769207 30320 net.cpp:408] relu2 <- ip2
I0428 20:04:06.769212 30320 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:06.769438 30320 net.cpp:124] Setting up relu2
I0428 20:04:06.769448 30320 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:06.769451 30320 net.cpp:139] Memory required for data: 6454800
I0428 20:04:06.769454 30320 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:06.769460 30320 net.cpp:86] Creating Layer ip3
I0428 20:04:06.769464 30320 net.cpp:408] ip3 <- ip2
I0428 20:04:06.769469 30320 net.cpp:382] ip3 -> ip3
I0428 20:04:06.769563 30320 net.cpp:124] Setting up ip3
I0428 20:04:06.769572 30320 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:06.769575 30320 net.cpp:139] Memory required for data: 6458800
I0428 20:04:06.769583 30320 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:06.769587 30320 net.cpp:86] Creating Layer relu3
I0428 20:04:06.769590 30320 net.cpp:408] relu3 <- ip3
I0428 20:04:06.769594 30320 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:06.770401 30320 net.cpp:124] Setting up relu3
I0428 20:04:06.770413 30320 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:06.770417 30320 net.cpp:139] Memory required for data: 6462800
I0428 20:04:06.770421 30320 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:06.770426 30320 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:06.770428 30320 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:06.770433 30320 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:06.770439 30320 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:06.770489 30320 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:06.770496 30320 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:06.770500 30320 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:06.770503 30320 net.cpp:139] Memory required for data: 6470800
I0428 20:04:06.770505 30320 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:06.770510 30320 net.cpp:86] Creating Layer accuracy
I0428 20:04:06.770514 30320 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:06.770517 30320 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:06.770521 30320 net.cpp:382] accuracy -> accuracy
I0428 20:04:06.770530 30320 net.cpp:124] Setting up accuracy
I0428 20:04:06.770537 30320 net.cpp:131] Top shape: (1)
I0428 20:04:06.770541 30320 net.cpp:139] Memory required for data: 6470804
I0428 20:04:06.770545 30320 layer_factory.hpp:77] Creating layer loss
I0428 20:04:06.770548 30320 net.cpp:86] Creating Layer loss
I0428 20:04:06.770551 30320 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:06.770555 30320 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:06.770560 30320 net.cpp:382] loss -> loss
I0428 20:04:06.770566 30320 layer_factory.hpp:77] Creating layer loss
I0428 20:04:06.770779 30320 net.cpp:124] Setting up loss
I0428 20:04:06.770788 30320 net.cpp:131] Top shape: (1)
I0428 20:04:06.770792 30320 net.cpp:134]     with loss weight 1
I0428 20:04:06.770808 30320 net.cpp:139] Memory required for data: 6470808
I0428 20:04:06.770822 30320 net.cpp:200] loss needs backward computation.
I0428 20:04:06.770825 30320 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:06.770829 30320 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:06.770833 30320 net.cpp:200] relu3 needs backward computation.
I0428 20:04:06.770835 30320 net.cpp:200] ip3 needs backward computation.
I0428 20:04:06.770838 30320 net.cpp:200] relu2 needs backward computation.
I0428 20:04:06.770841 30320 net.cpp:200] ip2 needs backward computation.
I0428 20:04:06.770844 30320 net.cpp:200] relu1 needs backward computation.
I0428 20:04:06.770848 30320 net.cpp:200] ip1 needs backward computation.
I0428 20:04:06.770850 30320 net.cpp:200] pool1 needs backward computation.
I0428 20:04:06.770853 30320 net.cpp:200] conv1 needs backward computation.
I0428 20:04:06.770856 30320 net.cpp:200] pool0 needs backward computation.
I0428 20:04:06.770859 30320 net.cpp:200] conv0 needs backward computation.
I0428 20:04:06.770864 30320 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:06.770869 30320 net.cpp:202] mnist does not need backward computation.
I0428 20:04:06.770870 30320 net.cpp:244] This network produces output accuracy
I0428 20:04:06.770874 30320 net.cpp:244] This network produces output loss
I0428 20:04:06.770884 30320 net.cpp:257] Network initialization done.
I0428 20:04:06.770931 30320 solver.cpp:56] Solver scaffolding done.
I0428 20:04:06.771239 30320 caffe.cpp:248] Starting Optimization
I0428 20:04:06.771247 30320 solver.cpp:273] Solving LeNet
I0428 20:04:06.771250 30320 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:06.772080 30320 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:06.777495 30320 blocking_queue.cpp:49] Waiting for data
I0428 20:04:06.846917 30327 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:06.847545 30320 solver.cpp:398]     Test net output #0: accuracy = 0.1028
I0428 20:04:06.847580 30320 solver.cpp:398]     Test net output #1: loss = 2.31673 (* 1 = 2.31673 loss)
I0428 20:04:06.851285 30320 solver.cpp:219] Iteration 0 (-1.36903e-30 iter/s, 0.0800113s/100 iters), loss = 2.32174
I0428 20:04:06.851323 30320 solver.cpp:238]     Train net output #0: loss = 2.32174 (* 1 = 2.32174 loss)
I0428 20:04:06.851335 30320 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:07.003715 30320 solver.cpp:219] Iteration 100 (656.195 iter/s, 0.152394s/100 iters), loss = 1.25914
I0428 20:04:07.003753 30320 solver.cpp:238]     Train net output #0: loss = 1.25914 (* 1 = 1.25914 loss)
I0428 20:04:07.003759 30320 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:07.156306 30320 solver.cpp:219] Iteration 200 (655.504 iter/s, 0.152554s/100 iters), loss = 1.20701
I0428 20:04:07.156347 30320 solver.cpp:238]     Train net output #0: loss = 1.20701 (* 1 = 1.20701 loss)
I0428 20:04:07.156353 30320 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:07.307420 30320 solver.cpp:219] Iteration 300 (661.986 iter/s, 0.15106s/100 iters), loss = 0.862266
I0428 20:04:07.307446 30320 solver.cpp:238]     Train net output #0: loss = 0.862266 (* 1 = 0.862266 loss)
I0428 20:04:07.307451 30320 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:07.459651 30320 solver.cpp:219] Iteration 400 (657.056 iter/s, 0.152194s/100 iters), loss = 0.621849
I0428 20:04:07.459693 30320 solver.cpp:238]     Train net output #0: loss = 0.621849 (* 1 = 0.621849 loss)
I0428 20:04:07.459699 30320 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:07.608336 30320 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:07.664034 30327 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:07.665953 30320 solver.cpp:398]     Test net output #0: accuracy = 0.7758
I0428 20:04:07.665976 30320 solver.cpp:398]     Test net output #1: loss = 0.58472 (* 1 = 0.58472 loss)
I0428 20:04:07.667527 30320 solver.cpp:219] Iteration 500 (481.153 iter/s, 0.207834s/100 iters), loss = 0.568565
I0428 20:04:07.667564 30320 solver.cpp:238]     Train net output #0: loss = 0.568565 (* 1 = 0.568565 loss)
I0428 20:04:07.667587 30320 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:07.821087 30320 solver.cpp:219] Iteration 600 (651.489 iter/s, 0.153495s/100 iters), loss = 0.539909
I0428 20:04:07.821113 30320 solver.cpp:238]     Train net output #0: loss = 0.539909 (* 1 = 0.539909 loss)
I0428 20:04:07.821136 30320 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:07.974169 30320 solver.cpp:219] Iteration 700 (653.407 iter/s, 0.153044s/100 iters), loss = 0.447072
I0428 20:04:07.974210 30320 solver.cpp:238]     Train net output #0: loss = 0.447072 (* 1 = 0.447072 loss)
I0428 20:04:07.974215 30320 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:08.127259 30320 solver.cpp:219] Iteration 800 (653.372 iter/s, 0.153052s/100 iters), loss = 0.473273
I0428 20:04:08.127298 30320 solver.cpp:238]     Train net output #0: loss = 0.473273 (* 1 = 0.473273 loss)
I0428 20:04:08.127305 30320 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:08.283493 30320 solver.cpp:219] Iteration 900 (640.218 iter/s, 0.156197s/100 iters), loss = 0.194179
I0428 20:04:08.283527 30320 solver.cpp:238]     Train net output #0: loss = 0.194179 (* 1 = 0.194179 loss)
I0428 20:04:08.283535 30320 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:08.334895 30326 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:08.437049 30320 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:08.438992 30320 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:08.440050 30320 solver.cpp:311] Iteration 1000, loss = 0.352879
I0428 20:04:08.440065 30320 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:08.494953 30327 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:08.496845 30320 solver.cpp:398]     Test net output #0: accuracy = 0.8816
I0428 20:04:08.496878 30320 solver.cpp:398]     Test net output #1: loss = 0.303154 (* 1 = 0.303154 loss)
I0428 20:04:08.496883 30320 solver.cpp:316] Optimization Done.
I0428 20:04:08.496886 30320 caffe.cpp:259] Optimization Done.
