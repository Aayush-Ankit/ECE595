I0428 19:29:27.261307 22025 caffe.cpp:218] Using GPUs 0
I0428 19:29:27.299991 22025 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:27.815038 22025 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test59.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:27.815191 22025 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test59.prototxt
I0428 19:29:27.815548 22025 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:27.815562 22025 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:27.815646 22025 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:27.815711 22025 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:27.815809 22025 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:27.815836 22025 net.cpp:86] Creating Layer mnist
I0428 19:29:27.815846 22025 net.cpp:382] mnist -> data
I0428 19:29:27.815870 22025 net.cpp:382] mnist -> label
I0428 19:29:27.816967 22025 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:27.819425 22025 net.cpp:124] Setting up mnist
I0428 19:29:27.819444 22025 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:27.819453 22025 net.cpp:131] Top shape: 64 (64)
I0428 19:29:27.819458 22025 net.cpp:139] Memory required for data: 200960
I0428 19:29:27.819464 22025 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:27.819480 22025 net.cpp:86] Creating Layer conv0
I0428 19:29:27.819488 22025 net.cpp:408] conv0 <- data
I0428 19:29:27.819499 22025 net.cpp:382] conv0 -> conv0
I0428 19:29:28.103221 22025 net.cpp:124] Setting up conv0
I0428 19:29:28.103250 22025 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:28.103253 22025 net.cpp:139] Memory required for data: 495872
I0428 19:29:28.103268 22025 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:28.103282 22025 net.cpp:86] Creating Layer pool0
I0428 19:29:28.103305 22025 net.cpp:408] pool0 <- conv0
I0428 19:29:28.103312 22025 net.cpp:382] pool0 -> pool0
I0428 19:29:28.103358 22025 net.cpp:124] Setting up pool0
I0428 19:29:28.103366 22025 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:28.103370 22025 net.cpp:139] Memory required for data: 569600
I0428 19:29:28.103374 22025 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:28.103381 22025 net.cpp:86] Creating Layer ip1
I0428 19:29:28.103384 22025 net.cpp:408] ip1 <- pool0
I0428 19:29:28.103389 22025 net.cpp:382] ip1 -> ip1
I0428 19:29:28.104317 22025 net.cpp:124] Setting up ip1
I0428 19:29:28.104347 22025 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:28.104351 22025 net.cpp:139] Memory required for data: 572160
I0428 19:29:28.104359 22025 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:28.104367 22025 net.cpp:86] Creating Layer relu1
I0428 19:29:28.104370 22025 net.cpp:408] relu1 <- ip1
I0428 19:29:28.104374 22025 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:28.104564 22025 net.cpp:124] Setting up relu1
I0428 19:29:28.104574 22025 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:28.104578 22025 net.cpp:139] Memory required for data: 574720
I0428 19:29:28.104581 22025 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:28.104604 22025 net.cpp:86] Creating Layer ip2
I0428 19:29:28.104606 22025 net.cpp:408] ip2 <- ip1
I0428 19:29:28.104612 22025 net.cpp:382] ip2 -> ip2
I0428 19:29:28.104717 22025 net.cpp:124] Setting up ip2
I0428 19:29:28.104725 22025 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:28.104728 22025 net.cpp:139] Memory required for data: 587520
I0428 19:29:28.104735 22025 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:28.104740 22025 net.cpp:86] Creating Layer relu2
I0428 19:29:28.104743 22025 net.cpp:408] relu2 <- ip2
I0428 19:29:28.104748 22025 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:28.105607 22025 net.cpp:124] Setting up relu2
I0428 19:29:28.105620 22025 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:28.105624 22025 net.cpp:139] Memory required for data: 600320
I0428 19:29:28.105628 22025 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:28.105634 22025 net.cpp:86] Creating Layer ip3
I0428 19:29:28.105638 22025 net.cpp:408] ip3 <- ip2
I0428 19:29:28.105643 22025 net.cpp:382] ip3 -> ip3
I0428 19:29:28.105741 22025 net.cpp:124] Setting up ip3
I0428 19:29:28.105748 22025 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:28.105751 22025 net.cpp:139] Memory required for data: 602880
I0428 19:29:28.105757 22025 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:28.105763 22025 net.cpp:86] Creating Layer relu3
I0428 19:29:28.105767 22025 net.cpp:408] relu3 <- ip3
I0428 19:29:28.105770 22025 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:28.105917 22025 net.cpp:124] Setting up relu3
I0428 19:29:28.105927 22025 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:28.105931 22025 net.cpp:139] Memory required for data: 605440
I0428 19:29:28.105934 22025 layer_factory.hpp:77] Creating layer loss
I0428 19:29:28.105940 22025 net.cpp:86] Creating Layer loss
I0428 19:29:28.105943 22025 net.cpp:408] loss <- ip3
I0428 19:29:28.105947 22025 net.cpp:408] loss <- label
I0428 19:29:28.105952 22025 net.cpp:382] loss -> loss
I0428 19:29:28.105970 22025 layer_factory.hpp:77] Creating layer loss
I0428 19:29:28.106189 22025 net.cpp:124] Setting up loss
I0428 19:29:28.106199 22025 net.cpp:131] Top shape: (1)
I0428 19:29:28.106202 22025 net.cpp:134]     with loss weight 1
I0428 19:29:28.106216 22025 net.cpp:139] Memory required for data: 605444
I0428 19:29:28.106220 22025 net.cpp:200] loss needs backward computation.
I0428 19:29:28.106223 22025 net.cpp:200] relu3 needs backward computation.
I0428 19:29:28.106226 22025 net.cpp:200] ip3 needs backward computation.
I0428 19:29:28.106230 22025 net.cpp:200] relu2 needs backward computation.
I0428 19:29:28.106232 22025 net.cpp:200] ip2 needs backward computation.
I0428 19:29:28.106235 22025 net.cpp:200] relu1 needs backward computation.
I0428 19:29:28.106237 22025 net.cpp:200] ip1 needs backward computation.
I0428 19:29:28.106251 22025 net.cpp:200] pool0 needs backward computation.
I0428 19:29:28.106254 22025 net.cpp:200] conv0 needs backward computation.
I0428 19:29:28.106257 22025 net.cpp:202] mnist does not need backward computation.
I0428 19:29:28.106261 22025 net.cpp:244] This network produces output loss
I0428 19:29:28.106268 22025 net.cpp:257] Network initialization done.
I0428 19:29:28.106576 22025 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test59.prototxt
I0428 19:29:28.106603 22025 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:28.106688 22025 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:28.106778 22025 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:28.106819 22025 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:28.106832 22025 net.cpp:86] Creating Layer mnist
I0428 19:29:28.106835 22025 net.cpp:382] mnist -> data
I0428 19:29:28.106842 22025 net.cpp:382] mnist -> label
I0428 19:29:28.106925 22025 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:28.108824 22025 net.cpp:124] Setting up mnist
I0428 19:29:28.108853 22025 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:28.108858 22025 net.cpp:131] Top shape: 100 (100)
I0428 19:29:28.108861 22025 net.cpp:139] Memory required for data: 314000
I0428 19:29:28.108866 22025 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:28.108892 22025 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:28.108896 22025 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:28.108901 22025 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:28.108908 22025 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:28.108947 22025 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:28.108952 22025 net.cpp:131] Top shape: 100 (100)
I0428 19:29:28.108955 22025 net.cpp:131] Top shape: 100 (100)
I0428 19:29:28.108973 22025 net.cpp:139] Memory required for data: 314800
I0428 19:29:28.108985 22025 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:28.108994 22025 net.cpp:86] Creating Layer conv0
I0428 19:29:28.108997 22025 net.cpp:408] conv0 <- data
I0428 19:29:28.109002 22025 net.cpp:382] conv0 -> conv0
I0428 19:29:28.110782 22025 net.cpp:124] Setting up conv0
I0428 19:29:28.110796 22025 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:28.110801 22025 net.cpp:139] Memory required for data: 775600
I0428 19:29:28.110810 22025 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:28.110816 22025 net.cpp:86] Creating Layer pool0
I0428 19:29:28.110821 22025 net.cpp:408] pool0 <- conv0
I0428 19:29:28.110824 22025 net.cpp:382] pool0 -> pool0
I0428 19:29:28.110859 22025 net.cpp:124] Setting up pool0
I0428 19:29:28.110864 22025 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:28.110867 22025 net.cpp:139] Memory required for data: 890800
I0428 19:29:28.110870 22025 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:28.110877 22025 net.cpp:86] Creating Layer ip1
I0428 19:29:28.110880 22025 net.cpp:408] ip1 <- pool0
I0428 19:29:28.110884 22025 net.cpp:382] ip1 -> ip1
I0428 19:29:28.110988 22025 net.cpp:124] Setting up ip1
I0428 19:29:28.110996 22025 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:28.110999 22025 net.cpp:139] Memory required for data: 894800
I0428 19:29:28.111006 22025 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:28.111011 22025 net.cpp:86] Creating Layer relu1
I0428 19:29:28.111013 22025 net.cpp:408] relu1 <- ip1
I0428 19:29:28.111018 22025 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:28.111171 22025 net.cpp:124] Setting up relu1
I0428 19:29:28.111181 22025 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:28.111183 22025 net.cpp:139] Memory required for data: 898800
I0428 19:29:28.111186 22025 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:28.111192 22025 net.cpp:86] Creating Layer ip2
I0428 19:29:28.111196 22025 net.cpp:408] ip2 <- ip1
I0428 19:29:28.111201 22025 net.cpp:382] ip2 -> ip2
I0428 19:29:28.111297 22025 net.cpp:124] Setting up ip2
I0428 19:29:28.111304 22025 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:28.111307 22025 net.cpp:139] Memory required for data: 918800
I0428 19:29:28.111315 22025 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:28.111318 22025 net.cpp:86] Creating Layer relu2
I0428 19:29:28.111322 22025 net.cpp:408] relu2 <- ip2
I0428 19:29:28.111326 22025 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:28.112238 22025 net.cpp:124] Setting up relu2
I0428 19:29:28.112251 22025 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:28.112256 22025 net.cpp:139] Memory required for data: 938800
I0428 19:29:28.112259 22025 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:28.112267 22025 net.cpp:86] Creating Layer ip3
I0428 19:29:28.112270 22025 net.cpp:408] ip3 <- ip2
I0428 19:29:28.112277 22025 net.cpp:382] ip3 -> ip3
I0428 19:29:28.112437 22025 net.cpp:124] Setting up ip3
I0428 19:29:28.112445 22025 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:28.112448 22025 net.cpp:139] Memory required for data: 942800
I0428 19:29:28.112454 22025 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:28.112458 22025 net.cpp:86] Creating Layer relu3
I0428 19:29:28.112462 22025 net.cpp:408] relu3 <- ip3
I0428 19:29:28.112467 22025 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:28.112614 22025 net.cpp:124] Setting up relu3
I0428 19:29:28.112623 22025 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:28.112627 22025 net.cpp:139] Memory required for data: 946800
I0428 19:29:28.112629 22025 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:28.112634 22025 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:28.112637 22025 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:28.112642 22025 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:28.112648 22025 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:28.112681 22025 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:28.112686 22025 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:28.112691 22025 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:28.112704 22025 net.cpp:139] Memory required for data: 954800
I0428 19:29:28.112706 22025 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:28.112711 22025 net.cpp:86] Creating Layer accuracy
I0428 19:29:28.112715 22025 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:28.112720 22025 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:28.112725 22025 net.cpp:382] accuracy -> accuracy
I0428 19:29:28.112740 22025 net.cpp:124] Setting up accuracy
I0428 19:29:28.112745 22025 net.cpp:131] Top shape: (1)
I0428 19:29:28.112752 22025 net.cpp:139] Memory required for data: 954804
I0428 19:29:28.112756 22025 layer_factory.hpp:77] Creating layer loss
I0428 19:29:28.112761 22025 net.cpp:86] Creating Layer loss
I0428 19:29:28.112763 22025 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:28.112766 22025 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:28.112771 22025 net.cpp:382] loss -> loss
I0428 19:29:28.112777 22025 layer_factory.hpp:77] Creating layer loss
I0428 19:29:28.113107 22025 net.cpp:124] Setting up loss
I0428 19:29:28.113118 22025 net.cpp:131] Top shape: (1)
I0428 19:29:28.113123 22025 net.cpp:134]     with loss weight 1
I0428 19:29:28.113129 22025 net.cpp:139] Memory required for data: 954808
I0428 19:29:28.113134 22025 net.cpp:200] loss needs backward computation.
I0428 19:29:28.113139 22025 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:28.113144 22025 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:28.113147 22025 net.cpp:200] relu3 needs backward computation.
I0428 19:29:28.113150 22025 net.cpp:200] ip3 needs backward computation.
I0428 19:29:28.113153 22025 net.cpp:200] relu2 needs backward computation.
I0428 19:29:28.113157 22025 net.cpp:200] ip2 needs backward computation.
I0428 19:29:28.113160 22025 net.cpp:200] relu1 needs backward computation.
I0428 19:29:28.113163 22025 net.cpp:200] ip1 needs backward computation.
I0428 19:29:28.113174 22025 net.cpp:200] pool0 needs backward computation.
I0428 19:29:28.113178 22025 net.cpp:200] conv0 needs backward computation.
I0428 19:29:28.113181 22025 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:28.113186 22025 net.cpp:202] mnist does not need backward computation.
I0428 19:29:28.113189 22025 net.cpp:244] This network produces output accuracy
I0428 19:29:28.113193 22025 net.cpp:244] This network produces output loss
I0428 19:29:28.113204 22025 net.cpp:257] Network initialization done.
I0428 19:29:28.113257 22025 solver.cpp:56] Solver scaffolding done.
I0428 19:29:28.113554 22025 caffe.cpp:248] Starting Optimization
I0428 19:29:28.113559 22025 solver.cpp:273] Solving LeNet
I0428 19:29:28.113564 22025 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:28.115013 22025 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:28.116906 22025 blocking_queue.cpp:49] Waiting for data
I0428 19:29:28.186417 22032 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:28.186946 22025 solver.cpp:398]     Test net output #0: accuracy = 0.0835
I0428 19:29:28.186980 22025 solver.cpp:398]     Test net output #1: loss = 2.32338 (* 1 = 2.32338 loss)
I0428 19:29:28.189229 22025 solver.cpp:219] Iteration 0 (0 iter/s, 0.0756245s/100 iters), loss = 2.31415
I0428 19:29:28.189267 22025 solver.cpp:238]     Train net output #0: loss = 2.31415 (* 1 = 2.31415 loss)
I0428 19:29:28.189287 22025 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:28.256501 22025 solver.cpp:219] Iteration 100 (1487.49 iter/s, 0.0672275s/100 iters), loss = 1.14714
I0428 19:29:28.256536 22025 solver.cpp:238]     Train net output #0: loss = 1.14714 (* 1 = 1.14714 loss)
I0428 19:29:28.256544 22025 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:28.315454 22025 solver.cpp:219] Iteration 200 (1697.45 iter/s, 0.0589119s/100 iters), loss = 0.799418
I0428 19:29:28.315482 22025 solver.cpp:238]     Train net output #0: loss = 0.799418 (* 1 = 0.799418 loss)
I0428 19:29:28.315490 22025 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:28.371234 22025 solver.cpp:219] Iteration 300 (1793.9 iter/s, 0.0557445s/100 iters), loss = 0.886705
I0428 19:29:28.371271 22025 solver.cpp:238]     Train net output #0: loss = 0.886705 (* 1 = 0.886705 loss)
I0428 19:29:28.371279 22025 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:28.425221 22025 solver.cpp:219] Iteration 400 (1853.83 iter/s, 0.0539423s/100 iters), loss = 0.901302
I0428 19:29:28.425245 22025 solver.cpp:238]     Train net output #0: loss = 0.901302 (* 1 = 0.901302 loss)
I0428 19:29:28.425251 22025 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:28.477879 22025 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:28.530601 22032 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:28.531070 22025 solver.cpp:398]     Test net output #0: accuracy = 0.7987
I0428 19:29:28.531090 22025 solver.cpp:398]     Test net output #1: loss = 0.79363 (* 1 = 0.79363 loss)
I0428 19:29:28.531762 22025 solver.cpp:219] Iteration 500 (938.894 iter/s, 0.106508s/100 iters), loss = 0.89506
I0428 19:29:28.531786 22025 solver.cpp:238]     Train net output #0: loss = 0.89506 (* 1 = 0.89506 loss)
I0428 19:29:28.531793 22025 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:28.588490 22025 solver.cpp:219] Iteration 600 (1763.83 iter/s, 0.0566948s/100 iters), loss = 0.703891
I0428 19:29:28.588516 22025 solver.cpp:238]     Train net output #0: loss = 0.703891 (* 1 = 0.703891 loss)
I0428 19:29:28.588541 22025 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:28.644228 22025 solver.cpp:219] Iteration 700 (1795.15 iter/s, 0.0557056s/100 iters), loss = 0.868403
I0428 19:29:28.644274 22025 solver.cpp:238]     Train net output #0: loss = 0.868403 (* 1 = 0.868403 loss)
I0428 19:29:28.644284 22025 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:28.697932 22025 solver.cpp:219] Iteration 800 (1863.33 iter/s, 0.0536675s/100 iters), loss = 0.858147
I0428 19:29:28.697957 22025 solver.cpp:238]     Train net output #0: loss = 0.858147 (* 1 = 0.858147 loss)
I0428 19:29:28.697979 22025 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:28.756469 22025 solver.cpp:219] Iteration 900 (1709.34 iter/s, 0.0585021s/100 iters), loss = 0.889924
I0428 19:29:28.756500 22025 solver.cpp:238]     Train net output #0: loss = 0.889924 (* 1 = 0.889924 loss)
I0428 19:29:28.756510 22025 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:28.778564 22031 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:28.818372 22025 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:28.819129 22025 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:28.819583 22025 solver.cpp:311] Iteration 1000, loss = 0.766063
I0428 19:29:28.819604 22025 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:28.892045 22032 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:28.892606 22025 solver.cpp:398]     Test net output #0: accuracy = 0.814
I0428 19:29:28.892637 22025 solver.cpp:398]     Test net output #1: loss = 0.693391 (* 1 = 0.693391 loss)
I0428 19:29:28.892645 22025 solver.cpp:316] Optimization Done.
I0428 19:29:28.892666 22025 caffe.cpp:259] Optimization Done.
