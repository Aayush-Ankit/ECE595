I0428 19:56:48.572027 28525 caffe.cpp:218] Using GPUs 0
I0428 19:56:48.602280 28525 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:49.117879 28525 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test770.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:49.118016 28525 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test770.prototxt
I0428 19:56:49.118428 28525 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:49.118446 28525 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:49.118546 28525 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:49.118625 28525 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:49.118726 28525 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:49.118748 28525 net.cpp:86] Creating Layer mnist
I0428 19:56:49.118755 28525 net.cpp:382] mnist -> data
I0428 19:56:49.118778 28525 net.cpp:382] mnist -> label
I0428 19:56:49.119840 28525 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:49.122289 28525 net.cpp:124] Setting up mnist
I0428 19:56:49.122308 28525 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:49.122314 28525 net.cpp:131] Top shape: 64 (64)
I0428 19:56:49.122318 28525 net.cpp:139] Memory required for data: 200960
I0428 19:56:49.122324 28525 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:49.122340 28525 net.cpp:86] Creating Layer conv0
I0428 19:56:49.122360 28525 net.cpp:408] conv0 <- data
I0428 19:56:49.122372 28525 net.cpp:382] conv0 -> conv0
I0428 19:56:49.410915 28525 net.cpp:124] Setting up conv0
I0428 19:56:49.410945 28525 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:49.410950 28525 net.cpp:139] Memory required for data: 1675520
I0428 19:56:49.410969 28525 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:49.410982 28525 net.cpp:86] Creating Layer pool0
I0428 19:56:49.410986 28525 net.cpp:408] pool0 <- conv0
I0428 19:56:49.410993 28525 net.cpp:382] pool0 -> pool0
I0428 19:56:49.411046 28525 net.cpp:124] Setting up pool0
I0428 19:56:49.411054 28525 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:49.411057 28525 net.cpp:139] Memory required for data: 2044160
I0428 19:56:49.411062 28525 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:49.411073 28525 net.cpp:86] Creating Layer conv1
I0428 19:56:49.411082 28525 net.cpp:408] conv1 <- pool0
I0428 19:56:49.411087 28525 net.cpp:382] conv1 -> conv1
I0428 19:56:49.413216 28525 net.cpp:124] Setting up conv1
I0428 19:56:49.413233 28525 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:49.413238 28525 net.cpp:139] Memory required for data: 2076928
I0428 19:56:49.413247 28525 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:49.413256 28525 net.cpp:86] Creating Layer pool1
I0428 19:56:49.413260 28525 net.cpp:408] pool1 <- conv1
I0428 19:56:49.413266 28525 net.cpp:382] pool1 -> pool1
I0428 19:56:49.413310 28525 net.cpp:124] Setting up pool1
I0428 19:56:49.413317 28525 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:49.413321 28525 net.cpp:139] Memory required for data: 2085120
I0428 19:56:49.413324 28525 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:49.413333 28525 net.cpp:86] Creating Layer ip1
I0428 19:56:49.413336 28525 net.cpp:408] ip1 <- pool1
I0428 19:56:49.413342 28525 net.cpp:382] ip1 -> ip1
I0428 19:56:49.413460 28525 net.cpp:124] Setting up ip1
I0428 19:56:49.413467 28525 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:49.413471 28525 net.cpp:139] Memory required for data: 2091520
I0428 19:56:49.413480 28525 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:49.413486 28525 net.cpp:86] Creating Layer relu1
I0428 19:56:49.413489 28525 net.cpp:408] relu1 <- ip1
I0428 19:56:49.413494 28525 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:49.413688 28525 net.cpp:124] Setting up relu1
I0428 19:56:49.413698 28525 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:49.413702 28525 net.cpp:139] Memory required for data: 2097920
I0428 19:56:49.413705 28525 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:49.413712 28525 net.cpp:86] Creating Layer ip2
I0428 19:56:49.413717 28525 net.cpp:408] ip2 <- ip1
I0428 19:56:49.413722 28525 net.cpp:382] ip2 -> ip2
I0428 19:56:49.414814 28525 net.cpp:124] Setting up ip2
I0428 19:56:49.414829 28525 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:49.414834 28525 net.cpp:139] Memory required for data: 2110720
I0428 19:56:49.414840 28525 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:49.414849 28525 net.cpp:86] Creating Layer relu2
I0428 19:56:49.414854 28525 net.cpp:408] relu2 <- ip2
I0428 19:56:49.414860 28525 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:49.415707 28525 net.cpp:124] Setting up relu2
I0428 19:56:49.415721 28525 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:49.415725 28525 net.cpp:139] Memory required for data: 2123520
I0428 19:56:49.415730 28525 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:49.415738 28525 net.cpp:86] Creating Layer ip3
I0428 19:56:49.415742 28525 net.cpp:408] ip3 <- ip2
I0428 19:56:49.415748 28525 net.cpp:382] ip3 -> ip3
I0428 19:56:49.415868 28525 net.cpp:124] Setting up ip3
I0428 19:56:49.415876 28525 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:49.415879 28525 net.cpp:139] Memory required for data: 2126080
I0428 19:56:49.415889 28525 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:49.415895 28525 net.cpp:86] Creating Layer relu3
I0428 19:56:49.415899 28525 net.cpp:408] relu3 <- ip3
I0428 19:56:49.415904 28525 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:49.416107 28525 net.cpp:124] Setting up relu3
I0428 19:56:49.416117 28525 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:49.416121 28525 net.cpp:139] Memory required for data: 2128640
I0428 19:56:49.416126 28525 layer_factory.hpp:77] Creating layer loss
I0428 19:56:49.416132 28525 net.cpp:86] Creating Layer loss
I0428 19:56:49.416136 28525 net.cpp:408] loss <- ip3
I0428 19:56:49.416141 28525 net.cpp:408] loss <- label
I0428 19:56:49.416147 28525 net.cpp:382] loss -> loss
I0428 19:56:49.416168 28525 layer_factory.hpp:77] Creating layer loss
I0428 19:56:49.416432 28525 net.cpp:124] Setting up loss
I0428 19:56:49.416442 28525 net.cpp:131] Top shape: (1)
I0428 19:56:49.416446 28525 net.cpp:134]     with loss weight 1
I0428 19:56:49.416461 28525 net.cpp:139] Memory required for data: 2128644
I0428 19:56:49.416465 28525 net.cpp:200] loss needs backward computation.
I0428 19:56:49.416470 28525 net.cpp:200] relu3 needs backward computation.
I0428 19:56:49.416472 28525 net.cpp:200] ip3 needs backward computation.
I0428 19:56:49.416476 28525 net.cpp:200] relu2 needs backward computation.
I0428 19:56:49.416479 28525 net.cpp:200] ip2 needs backward computation.
I0428 19:56:49.416482 28525 net.cpp:200] relu1 needs backward computation.
I0428 19:56:49.416486 28525 net.cpp:200] ip1 needs backward computation.
I0428 19:56:49.416489 28525 net.cpp:200] pool1 needs backward computation.
I0428 19:56:49.416492 28525 net.cpp:200] conv1 needs backward computation.
I0428 19:56:49.416496 28525 net.cpp:200] pool0 needs backward computation.
I0428 19:56:49.416501 28525 net.cpp:200] conv0 needs backward computation.
I0428 19:56:49.416504 28525 net.cpp:202] mnist does not need backward computation.
I0428 19:56:49.416507 28525 net.cpp:244] This network produces output loss
I0428 19:56:49.416518 28525 net.cpp:257] Network initialization done.
I0428 19:56:49.416909 28525 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test770.prototxt
I0428 19:56:49.416940 28525 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:49.417055 28525 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:49.417148 28525 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:49.417197 28525 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:49.417212 28525 net.cpp:86] Creating Layer mnist
I0428 19:56:49.417217 28525 net.cpp:382] mnist -> data
I0428 19:56:49.417227 28525 net.cpp:382] mnist -> label
I0428 19:56:49.417325 28525 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:49.419474 28525 net.cpp:124] Setting up mnist
I0428 19:56:49.419489 28525 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:49.419495 28525 net.cpp:131] Top shape: 100 (100)
I0428 19:56:49.419500 28525 net.cpp:139] Memory required for data: 314000
I0428 19:56:49.419505 28525 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:49.419517 28525 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:49.419522 28525 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:49.419528 28525 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:49.419534 28525 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:49.419608 28525 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:49.419617 28525 net.cpp:131] Top shape: 100 (100)
I0428 19:56:49.419621 28525 net.cpp:131] Top shape: 100 (100)
I0428 19:56:49.419625 28525 net.cpp:139] Memory required for data: 314800
I0428 19:56:49.419628 28525 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:49.419638 28525 net.cpp:86] Creating Layer conv0
I0428 19:56:49.419647 28525 net.cpp:408] conv0 <- data
I0428 19:56:49.419653 28525 net.cpp:382] conv0 -> conv0
I0428 19:56:49.421490 28525 net.cpp:124] Setting up conv0
I0428 19:56:49.421506 28525 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:49.421511 28525 net.cpp:139] Memory required for data: 2618800
I0428 19:56:49.421521 28525 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:49.421530 28525 net.cpp:86] Creating Layer pool0
I0428 19:56:49.421533 28525 net.cpp:408] pool0 <- conv0
I0428 19:56:49.421540 28525 net.cpp:382] pool0 -> pool0
I0428 19:56:49.421581 28525 net.cpp:124] Setting up pool0
I0428 19:56:49.421588 28525 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:49.421592 28525 net.cpp:139] Memory required for data: 3194800
I0428 19:56:49.421596 28525 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:49.421605 28525 net.cpp:86] Creating Layer conv1
I0428 19:56:49.421609 28525 net.cpp:408] conv1 <- pool0
I0428 19:56:49.421615 28525 net.cpp:382] conv1 -> conv1
I0428 19:56:49.423892 28525 net.cpp:124] Setting up conv1
I0428 19:56:49.423905 28525 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:49.423910 28525 net.cpp:139] Memory required for data: 3246000
I0428 19:56:49.423920 28525 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:49.423928 28525 net.cpp:86] Creating Layer pool1
I0428 19:56:49.423931 28525 net.cpp:408] pool1 <- conv1
I0428 19:56:49.423938 28525 net.cpp:382] pool1 -> pool1
I0428 19:56:49.423986 28525 net.cpp:124] Setting up pool1
I0428 19:56:49.423995 28525 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:49.424000 28525 net.cpp:139] Memory required for data: 3258800
I0428 19:56:49.424003 28525 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:49.424010 28525 net.cpp:86] Creating Layer ip1
I0428 19:56:49.424013 28525 net.cpp:408] ip1 <- pool1
I0428 19:56:49.424019 28525 net.cpp:382] ip1 -> ip1
I0428 19:56:49.424173 28525 net.cpp:124] Setting up ip1
I0428 19:56:49.424182 28525 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:49.424201 28525 net.cpp:139] Memory required for data: 3268800
I0428 19:56:49.424209 28525 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:49.424216 28525 net.cpp:86] Creating Layer relu1
I0428 19:56:49.424219 28525 net.cpp:408] relu1 <- ip1
I0428 19:56:49.424226 28525 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:49.424414 28525 net.cpp:124] Setting up relu1
I0428 19:56:49.424425 28525 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:49.424429 28525 net.cpp:139] Memory required for data: 3278800
I0428 19:56:49.424433 28525 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:49.424440 28525 net.cpp:86] Creating Layer ip2
I0428 19:56:49.424444 28525 net.cpp:408] ip2 <- ip1
I0428 19:56:49.424451 28525 net.cpp:382] ip2 -> ip2
I0428 19:56:49.424584 28525 net.cpp:124] Setting up ip2
I0428 19:56:49.424593 28525 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:49.424597 28525 net.cpp:139] Memory required for data: 3298800
I0428 19:56:49.424603 28525 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:49.424608 28525 net.cpp:86] Creating Layer relu2
I0428 19:56:49.424612 28525 net.cpp:408] relu2 <- ip2
I0428 19:56:49.424618 28525 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:49.424793 28525 net.cpp:124] Setting up relu2
I0428 19:56:49.424803 28525 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:49.424806 28525 net.cpp:139] Memory required for data: 3318800
I0428 19:56:49.424816 28525 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:49.424823 28525 net.cpp:86] Creating Layer ip3
I0428 19:56:49.424827 28525 net.cpp:408] ip3 <- ip2
I0428 19:56:49.424834 28525 net.cpp:382] ip3 -> ip3
I0428 19:56:49.424963 28525 net.cpp:124] Setting up ip3
I0428 19:56:49.424971 28525 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:49.424974 28525 net.cpp:139] Memory required for data: 3322800
I0428 19:56:49.424983 28525 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:49.424988 28525 net.cpp:86] Creating Layer relu3
I0428 19:56:49.424993 28525 net.cpp:408] relu3 <- ip3
I0428 19:56:49.424998 28525 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:49.425935 28525 net.cpp:124] Setting up relu3
I0428 19:56:49.425950 28525 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:49.425953 28525 net.cpp:139] Memory required for data: 3326800
I0428 19:56:49.425957 28525 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:49.425964 28525 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:49.425968 28525 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:49.425974 28525 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:49.425982 28525 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:49.426024 28525 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:49.426031 28525 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:49.426036 28525 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:49.426039 28525 net.cpp:139] Memory required for data: 3334800
I0428 19:56:49.426043 28525 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:49.426050 28525 net.cpp:86] Creating Layer accuracy
I0428 19:56:49.426054 28525 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:49.426059 28525 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:49.426064 28525 net.cpp:382] accuracy -> accuracy
I0428 19:56:49.426072 28525 net.cpp:124] Setting up accuracy
I0428 19:56:49.426076 28525 net.cpp:131] Top shape: (1)
I0428 19:56:49.426080 28525 net.cpp:139] Memory required for data: 3334804
I0428 19:56:49.426084 28525 layer_factory.hpp:77] Creating layer loss
I0428 19:56:49.426089 28525 net.cpp:86] Creating Layer loss
I0428 19:56:49.426092 28525 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:49.426097 28525 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:49.426102 28525 net.cpp:382] loss -> loss
I0428 19:56:49.426110 28525 layer_factory.hpp:77] Creating layer loss
I0428 19:56:49.426374 28525 net.cpp:124] Setting up loss
I0428 19:56:49.426383 28525 net.cpp:131] Top shape: (1)
I0428 19:56:49.426388 28525 net.cpp:134]     with loss weight 1
I0428 19:56:49.426395 28525 net.cpp:139] Memory required for data: 3334808
I0428 19:56:49.426411 28525 net.cpp:200] loss needs backward computation.
I0428 19:56:49.426416 28525 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:49.426420 28525 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:49.426424 28525 net.cpp:200] relu3 needs backward computation.
I0428 19:56:49.426435 28525 net.cpp:200] ip3 needs backward computation.
I0428 19:56:49.426440 28525 net.cpp:200] relu2 needs backward computation.
I0428 19:56:49.426442 28525 net.cpp:200] ip2 needs backward computation.
I0428 19:56:49.426446 28525 net.cpp:200] relu1 needs backward computation.
I0428 19:56:49.426450 28525 net.cpp:200] ip1 needs backward computation.
I0428 19:56:49.426453 28525 net.cpp:200] pool1 needs backward computation.
I0428 19:56:49.426463 28525 net.cpp:200] conv1 needs backward computation.
I0428 19:56:49.426468 28525 net.cpp:200] pool0 needs backward computation.
I0428 19:56:49.426471 28525 net.cpp:200] conv0 needs backward computation.
I0428 19:56:49.426476 28525 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:49.426481 28525 net.cpp:202] mnist does not need backward computation.
I0428 19:56:49.426486 28525 net.cpp:244] This network produces output accuracy
I0428 19:56:49.426489 28525 net.cpp:244] This network produces output loss
I0428 19:56:49.426501 28525 net.cpp:257] Network initialization done.
I0428 19:56:49.426551 28525 solver.cpp:56] Solver scaffolding done.
I0428 19:56:49.426981 28525 caffe.cpp:248] Starting Optimization
I0428 19:56:49.426988 28525 solver.cpp:273] Solving LeNet
I0428 19:56:49.426991 28525 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:49.427945 28525 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:49.431890 28525 blocking_queue.cpp:49] Waiting for data
I0428 19:56:49.502238 28532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:49.502770 28525 solver.cpp:398]     Test net output #0: accuracy = 0.1361
I0428 19:56:49.502794 28525 solver.cpp:398]     Test net output #1: loss = 2.30008 (* 1 = 2.30008 loss)
I0428 19:56:49.505417 28525 solver.cpp:219] Iteration 0 (0 iter/s, 0.0783954s/100 iters), loss = 2.299
I0428 19:56:49.505445 28525 solver.cpp:238]     Train net output #0: loss = 2.299 (* 1 = 2.299 loss)
I0428 19:56:49.505457 28525 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:49.582248 28525 solver.cpp:219] Iteration 100 (1302.18 iter/s, 0.0767941s/100 iters), loss = 1.86419
I0428 19:56:49.582279 28525 solver.cpp:238]     Train net output #0: loss = 1.86419 (* 1 = 1.86419 loss)
I0428 19:56:49.582286 28525 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:49.658267 28525 solver.cpp:219] Iteration 200 (1316.16 iter/s, 0.0759786s/100 iters), loss = 1.27926
I0428 19:56:49.658295 28525 solver.cpp:238]     Train net output #0: loss = 1.27926 (* 1 = 1.27926 loss)
I0428 19:56:49.658303 28525 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:49.734335 28525 solver.cpp:219] Iteration 300 (1315.27 iter/s, 0.07603s/100 iters), loss = 1.46006
I0428 19:56:49.734366 28525 solver.cpp:238]     Train net output #0: loss = 1.46006 (* 1 = 1.46006 loss)
I0428 19:56:49.734375 28525 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:49.810295 28525 solver.cpp:219] Iteration 400 (1317.19 iter/s, 0.0759194s/100 iters), loss = 1.11876
I0428 19:56:49.810324 28525 solver.cpp:238]     Train net output #0: loss = 1.11876 (* 1 = 1.11876 loss)
I0428 19:56:49.810331 28525 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:49.883307 28525 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:49.935852 28532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:49.936388 28525 solver.cpp:398]     Test net output #0: accuracy = 0.4731
I0428 19:56:49.936422 28525 solver.cpp:398]     Test net output #1: loss = 1.29076 (* 1 = 1.29076 loss)
I0428 19:56:49.937239 28525 solver.cpp:219] Iteration 500 (787.995 iter/s, 0.126904s/100 iters), loss = 1.36867
I0428 19:56:49.937284 28525 solver.cpp:238]     Train net output #0: loss = 1.36867 (* 1 = 1.36867 loss)
I0428 19:56:49.937307 28525 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:50.010208 28525 solver.cpp:219] Iteration 600 (1371.46 iter/s, 0.072915s/100 iters), loss = 1.37823
I0428 19:56:50.010247 28525 solver.cpp:238]     Train net output #0: loss = 1.37823 (* 1 = 1.37823 loss)
I0428 19:56:50.010253 28525 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:50.083214 28525 solver.cpp:219] Iteration 700 (1370.36 iter/s, 0.0729733s/100 iters), loss = 1.19085
I0428 19:56:50.083253 28525 solver.cpp:238]     Train net output #0: loss = 1.19085 (* 1 = 1.19085 loss)
I0428 19:56:50.083259 28525 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:50.156469 28525 solver.cpp:219] Iteration 800 (1365.71 iter/s, 0.0732222s/100 iters), loss = 1.30523
I0428 19:56:50.156508 28525 solver.cpp:238]     Train net output #0: loss = 1.30523 (* 1 = 1.30523 loss)
I0428 19:56:50.156515 28525 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:50.228438 28525 solver.cpp:219] Iteration 900 (1390.1 iter/s, 0.071937s/100 iters), loss = 1.11891
I0428 19:56:50.228478 28525 solver.cpp:238]     Train net output #0: loss = 1.11891 (* 1 = 1.11891 loss)
I0428 19:56:50.228484 28525 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:50.252486 28531 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:50.300264 28525 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:50.300993 28525 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:50.301425 28525 solver.cpp:311] Iteration 1000, loss = 1.15849
I0428 19:56:50.301455 28525 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:50.360115 28532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:50.360651 28525 solver.cpp:398]     Test net output #0: accuracy = 0.5885
I0428 19:56:50.360687 28525 solver.cpp:398]     Test net output #1: loss = 1.00902 (* 1 = 1.00902 loss)
I0428 19:56:50.360692 28525 solver.cpp:316] Optimization Done.
I0428 19:56:50.360695 28525 caffe.cpp:259] Optimization Done.
