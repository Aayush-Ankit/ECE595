I0428 19:39:32.142700 24323 caffe.cpp:218] Using GPUs 0
I0428 19:39:32.182986 24323 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:32.697990 24323 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test307.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:32.698163 24323 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test307.prototxt
I0428 19:39:32.698590 24323 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:32.698612 24323 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:32.698729 24323 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:32.698846 24323 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:32.698976 24323 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:32.699009 24323 net.cpp:86] Creating Layer mnist
I0428 19:39:32.699024 24323 net.cpp:382] mnist -> data
I0428 19:39:32.699054 24323 net.cpp:382] mnist -> label
I0428 19:39:32.700320 24323 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:32.702806 24323 net.cpp:124] Setting up mnist
I0428 19:39:32.702829 24323 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:32.702841 24323 net.cpp:131] Top shape: 64 (64)
I0428 19:39:32.702847 24323 net.cpp:139] Memory required for data: 200960
I0428 19:39:32.702857 24323 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:32.702880 24323 net.cpp:86] Creating Layer conv0
I0428 19:39:32.702904 24323 net.cpp:408] conv0 <- data
I0428 19:39:32.702924 24323 net.cpp:382] conv0 -> conv0
I0428 19:39:32.985153 24323 net.cpp:124] Setting up conv0
I0428 19:39:32.985183 24323 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:32.985190 24323 net.cpp:139] Memory required for data: 495872
I0428 19:39:32.985210 24323 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:32.985227 24323 net.cpp:86] Creating Layer pool0
I0428 19:39:32.985241 24323 net.cpp:408] pool0 <- conv0
I0428 19:39:32.985251 24323 net.cpp:382] pool0 -> pool0
I0428 19:39:32.985308 24323 net.cpp:124] Setting up pool0
I0428 19:39:32.985318 24323 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:32.985333 24323 net.cpp:139] Memory required for data: 569600
I0428 19:39:32.985338 24323 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:32.985353 24323 net.cpp:86] Creating Layer conv1
I0428 19:39:32.985360 24323 net.cpp:408] conv1 <- pool0
I0428 19:39:32.985369 24323 net.cpp:382] conv1 -> conv1
I0428 19:39:32.987140 24323 net.cpp:124] Setting up conv1
I0428 19:39:32.987155 24323 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:32.987161 24323 net.cpp:139] Memory required for data: 602368
I0428 19:39:32.987175 24323 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:32.987186 24323 net.cpp:86] Creating Layer pool1
I0428 19:39:32.987191 24323 net.cpp:408] pool1 <- conv1
I0428 19:39:32.987201 24323 net.cpp:382] pool1 -> pool1
I0428 19:39:32.987251 24323 net.cpp:124] Setting up pool1
I0428 19:39:32.987259 24323 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:32.987265 24323 net.cpp:139] Memory required for data: 610560
I0428 19:39:32.987269 24323 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:32.987282 24323 net.cpp:86] Creating Layer ip1
I0428 19:39:32.987289 24323 net.cpp:408] ip1 <- pool1
I0428 19:39:32.987298 24323 net.cpp:382] ip1 -> ip1
I0428 19:39:32.988247 24323 net.cpp:124] Setting up ip1
I0428 19:39:32.988261 24323 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:32.988266 24323 net.cpp:139] Memory required for data: 623360
I0428 19:39:32.988279 24323 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:32.988289 24323 net.cpp:86] Creating Layer relu1
I0428 19:39:32.988301 24323 net.cpp:408] relu1 <- ip1
I0428 19:39:32.988308 24323 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:32.988487 24323 net.cpp:124] Setting up relu1
I0428 19:39:32.988497 24323 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:32.988502 24323 net.cpp:139] Memory required for data: 636160
I0428 19:39:32.988507 24323 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:32.988519 24323 net.cpp:86] Creating Layer ip2
I0428 19:39:32.988524 24323 net.cpp:408] ip2 <- ip1
I0428 19:39:32.988533 24323 net.cpp:382] ip2 -> ip2
I0428 19:39:32.988643 24323 net.cpp:124] Setting up ip2
I0428 19:39:32.988652 24323 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:32.988657 24323 net.cpp:139] Memory required for data: 642560
I0428 19:39:32.988665 24323 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:32.988675 24323 net.cpp:86] Creating Layer relu2
I0428 19:39:32.988682 24323 net.cpp:408] relu2 <- ip2
I0428 19:39:32.988687 24323 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:32.989447 24323 net.cpp:124] Setting up relu2
I0428 19:39:32.989461 24323 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:32.989467 24323 net.cpp:139] Memory required for data: 648960
I0428 19:39:32.989472 24323 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:32.989485 24323 net.cpp:86] Creating Layer ip3
I0428 19:39:32.989490 24323 net.cpp:408] ip3 <- ip2
I0428 19:39:32.989500 24323 net.cpp:382] ip3 -> ip3
I0428 19:39:32.989608 24323 net.cpp:124] Setting up ip3
I0428 19:39:32.989616 24323 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:32.989621 24323 net.cpp:139] Memory required for data: 651520
I0428 19:39:32.989634 24323 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:32.989642 24323 net.cpp:86] Creating Layer relu3
I0428 19:39:32.989648 24323 net.cpp:408] relu3 <- ip3
I0428 19:39:32.989656 24323 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:32.989828 24323 net.cpp:124] Setting up relu3
I0428 19:39:32.989838 24323 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:32.989843 24323 net.cpp:139] Memory required for data: 654080
I0428 19:39:32.989848 24323 layer_factory.hpp:77] Creating layer loss
I0428 19:39:32.989857 24323 net.cpp:86] Creating Layer loss
I0428 19:39:32.989862 24323 net.cpp:408] loss <- ip3
I0428 19:39:32.989869 24323 net.cpp:408] loss <- label
I0428 19:39:32.989878 24323 net.cpp:382] loss -> loss
I0428 19:39:32.989900 24323 layer_factory.hpp:77] Creating layer loss
I0428 19:39:32.990185 24323 net.cpp:124] Setting up loss
I0428 19:39:32.990196 24323 net.cpp:131] Top shape: (1)
I0428 19:39:32.990201 24323 net.cpp:134]     with loss weight 1
I0428 19:39:32.990221 24323 net.cpp:139] Memory required for data: 654084
I0428 19:39:32.990227 24323 net.cpp:200] loss needs backward computation.
I0428 19:39:32.990233 24323 net.cpp:200] relu3 needs backward computation.
I0428 19:39:32.990237 24323 net.cpp:200] ip3 needs backward computation.
I0428 19:39:32.990242 24323 net.cpp:200] relu2 needs backward computation.
I0428 19:39:32.990247 24323 net.cpp:200] ip2 needs backward computation.
I0428 19:39:32.990267 24323 net.cpp:200] relu1 needs backward computation.
I0428 19:39:32.990270 24323 net.cpp:200] ip1 needs backward computation.
I0428 19:39:32.990275 24323 net.cpp:200] pool1 needs backward computation.
I0428 19:39:32.990279 24323 net.cpp:200] conv1 needs backward computation.
I0428 19:39:32.990284 24323 net.cpp:200] pool0 needs backward computation.
I0428 19:39:32.990289 24323 net.cpp:200] conv0 needs backward computation.
I0428 19:39:32.990294 24323 net.cpp:202] mnist does not need backward computation.
I0428 19:39:32.990299 24323 net.cpp:244] This network produces output loss
I0428 19:39:32.990314 24323 net.cpp:257] Network initialization done.
I0428 19:39:32.990631 24323 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test307.prototxt
I0428 19:39:32.990664 24323 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:32.990761 24323 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:32.990875 24323 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:32.990933 24323 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:32.990952 24323 net.cpp:86] Creating Layer mnist
I0428 19:39:32.990958 24323 net.cpp:382] mnist -> data
I0428 19:39:32.990972 24323 net.cpp:382] mnist -> label
I0428 19:39:32.991091 24323 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:32.993206 24323 net.cpp:124] Setting up mnist
I0428 19:39:32.993221 24323 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:32.993229 24323 net.cpp:131] Top shape: 100 (100)
I0428 19:39:32.993234 24323 net.cpp:139] Memory required for data: 314000
I0428 19:39:32.993239 24323 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:32.993263 24323 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:32.993270 24323 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:32.993278 24323 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:32.993291 24323 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:32.993381 24323 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:32.993391 24323 net.cpp:131] Top shape: 100 (100)
I0428 19:39:32.993397 24323 net.cpp:131] Top shape: 100 (100)
I0428 19:39:32.993402 24323 net.cpp:139] Memory required for data: 314800
I0428 19:39:32.993408 24323 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:32.993424 24323 net.cpp:86] Creating Layer conv0
I0428 19:39:32.993445 24323 net.cpp:408] conv0 <- data
I0428 19:39:32.993454 24323 net.cpp:382] conv0 -> conv0
I0428 19:39:32.995081 24323 net.cpp:124] Setting up conv0
I0428 19:39:32.995097 24323 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:32.995102 24323 net.cpp:139] Memory required for data: 775600
I0428 19:39:32.995115 24323 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:32.995127 24323 net.cpp:86] Creating Layer pool0
I0428 19:39:32.995133 24323 net.cpp:408] pool0 <- conv0
I0428 19:39:32.995142 24323 net.cpp:382] pool0 -> pool0
I0428 19:39:32.995184 24323 net.cpp:124] Setting up pool0
I0428 19:39:32.995193 24323 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:32.995198 24323 net.cpp:139] Memory required for data: 890800
I0428 19:39:32.995203 24323 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:32.995218 24323 net.cpp:86] Creating Layer conv1
I0428 19:39:32.995223 24323 net.cpp:408] conv1 <- pool0
I0428 19:39:32.995234 24323 net.cpp:382] conv1 -> conv1
I0428 19:39:32.996925 24323 net.cpp:124] Setting up conv1
I0428 19:39:32.996942 24323 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:32.996948 24323 net.cpp:139] Memory required for data: 942000
I0428 19:39:32.996978 24323 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:32.997004 24323 net.cpp:86] Creating Layer pool1
I0428 19:39:32.997010 24323 net.cpp:408] pool1 <- conv1
I0428 19:39:32.997020 24323 net.cpp:382] pool1 -> pool1
I0428 19:39:32.997067 24323 net.cpp:124] Setting up pool1
I0428 19:39:32.997076 24323 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:32.997081 24323 net.cpp:139] Memory required for data: 954800
I0428 19:39:32.997087 24323 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:32.997099 24323 net.cpp:86] Creating Layer ip1
I0428 19:39:32.997120 24323 net.cpp:408] ip1 <- pool1
I0428 19:39:32.997130 24323 net.cpp:382] ip1 -> ip1
I0428 19:39:32.997248 24323 net.cpp:124] Setting up ip1
I0428 19:39:32.997258 24323 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:32.997275 24323 net.cpp:139] Memory required for data: 974800
I0428 19:39:32.997288 24323 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:32.997298 24323 net.cpp:86] Creating Layer relu1
I0428 19:39:32.997303 24323 net.cpp:408] relu1 <- ip1
I0428 19:39:32.997313 24323 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:32.997506 24323 net.cpp:124] Setting up relu1
I0428 19:39:32.997517 24323 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:32.997524 24323 net.cpp:139] Memory required for data: 994800
I0428 19:39:32.997529 24323 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:32.997540 24323 net.cpp:86] Creating Layer ip2
I0428 19:39:32.997545 24323 net.cpp:408] ip2 <- ip1
I0428 19:39:32.997556 24323 net.cpp:382] ip2 -> ip2
I0428 19:39:32.997694 24323 net.cpp:124] Setting up ip2
I0428 19:39:32.997702 24323 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:32.997707 24323 net.cpp:139] Memory required for data: 1004800
I0428 19:39:32.997715 24323 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:32.997723 24323 net.cpp:86] Creating Layer relu2
I0428 19:39:32.997728 24323 net.cpp:408] relu2 <- ip2
I0428 19:39:32.997737 24323 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:32.998054 24323 net.cpp:124] Setting up relu2
I0428 19:39:32.998065 24323 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:32.998085 24323 net.cpp:139] Memory required for data: 1014800
I0428 19:39:32.998090 24323 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:32.998101 24323 net.cpp:86] Creating Layer ip3
I0428 19:39:32.998107 24323 net.cpp:408] ip3 <- ip2
I0428 19:39:32.998116 24323 net.cpp:382] ip3 -> ip3
I0428 19:39:32.998226 24323 net.cpp:124] Setting up ip3
I0428 19:39:32.998235 24323 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:32.998241 24323 net.cpp:139] Memory required for data: 1018800
I0428 19:39:32.998255 24323 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:32.998266 24323 net.cpp:86] Creating Layer relu3
I0428 19:39:32.998272 24323 net.cpp:408] relu3 <- ip3
I0428 19:39:32.998280 24323 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:32.999197 24323 net.cpp:124] Setting up relu3
I0428 19:39:32.999212 24323 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:32.999217 24323 net.cpp:139] Memory required for data: 1022800
I0428 19:39:32.999222 24323 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:32.999230 24323 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:32.999235 24323 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:32.999243 24323 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:32.999253 24323 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:32.999299 24323 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:32.999306 24323 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:32.999313 24323 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:32.999317 24323 net.cpp:139] Memory required for data: 1030800
I0428 19:39:32.999325 24323 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:32.999332 24323 net.cpp:86] Creating Layer accuracy
I0428 19:39:32.999337 24323 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:32.999351 24323 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:32.999359 24323 net.cpp:382] accuracy -> accuracy
I0428 19:39:32.999372 24323 net.cpp:124] Setting up accuracy
I0428 19:39:32.999380 24323 net.cpp:131] Top shape: (1)
I0428 19:39:32.999384 24323 net.cpp:139] Memory required for data: 1030804
I0428 19:39:32.999390 24323 layer_factory.hpp:77] Creating layer loss
I0428 19:39:32.999398 24323 net.cpp:86] Creating Layer loss
I0428 19:39:32.999404 24323 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:32.999410 24323 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:32.999418 24323 net.cpp:382] loss -> loss
I0428 19:39:32.999433 24323 layer_factory.hpp:77] Creating layer loss
I0428 19:39:32.999675 24323 net.cpp:124] Setting up loss
I0428 19:39:32.999686 24323 net.cpp:131] Top shape: (1)
I0428 19:39:32.999692 24323 net.cpp:134]     with loss weight 1
I0428 19:39:32.999701 24323 net.cpp:139] Memory required for data: 1030808
I0428 19:39:32.999717 24323 net.cpp:200] loss needs backward computation.
I0428 19:39:32.999724 24323 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:32.999730 24323 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:32.999735 24323 net.cpp:200] relu3 needs backward computation.
I0428 19:39:32.999740 24323 net.cpp:200] ip3 needs backward computation.
I0428 19:39:32.999745 24323 net.cpp:200] relu2 needs backward computation.
I0428 19:39:32.999749 24323 net.cpp:200] ip2 needs backward computation.
I0428 19:39:32.999754 24323 net.cpp:200] relu1 needs backward computation.
I0428 19:39:32.999758 24323 net.cpp:200] ip1 needs backward computation.
I0428 19:39:32.999763 24323 net.cpp:200] pool1 needs backward computation.
I0428 19:39:32.999768 24323 net.cpp:200] conv1 needs backward computation.
I0428 19:39:32.999773 24323 net.cpp:200] pool0 needs backward computation.
I0428 19:39:32.999778 24323 net.cpp:200] conv0 needs backward computation.
I0428 19:39:32.999784 24323 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:32.999790 24323 net.cpp:202] mnist does not need backward computation.
I0428 19:39:32.999794 24323 net.cpp:244] This network produces output accuracy
I0428 19:39:32.999799 24323 net.cpp:244] This network produces output loss
I0428 19:39:32.999817 24323 net.cpp:257] Network initialization done.
I0428 19:39:32.999864 24323 solver.cpp:56] Solver scaffolding done.
I0428 19:39:33.000267 24323 caffe.cpp:248] Starting Optimization
I0428 19:39:33.000289 24323 solver.cpp:273] Solving LeNet
I0428 19:39:33.000293 24323 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:33.000576 24323 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:33.003895 24323 blocking_queue.cpp:49] Waiting for data
I0428 19:39:33.075130 24330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:33.075575 24323 solver.cpp:398]     Test net output #0: accuracy = 0.0948
I0428 19:39:33.075597 24323 solver.cpp:398]     Test net output #1: loss = 2.30638 (* 1 = 2.30638 loss)
I0428 19:39:33.077417 24323 solver.cpp:219] Iteration 0 (0 iter/s, 0.0770837s/100 iters), loss = 2.32256
I0428 19:39:33.077468 24323 solver.cpp:238]     Train net output #0: loss = 2.32256 (* 1 = 2.32256 loss)
I0428 19:39:33.077487 24323 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:33.147883 24323 solver.cpp:219] Iteration 100 (1419.96 iter/s, 0.0704244s/100 iters), loss = 1.36675
I0428 19:39:33.147912 24323 solver.cpp:238]     Train net output #0: loss = 1.36675 (* 1 = 1.36675 loss)
I0428 19:39:33.147938 24323 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:33.216063 24323 solver.cpp:219] Iteration 200 (1467.46 iter/s, 0.0681451s/100 iters), loss = 1.41663
I0428 19:39:33.216091 24323 solver.cpp:238]     Train net output #0: loss = 1.41663 (* 1 = 1.41663 loss)
I0428 19:39:33.216116 24323 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:33.284025 24323 solver.cpp:219] Iteration 300 (1472.17 iter/s, 0.067927s/100 iters), loss = 1.21274
I0428 19:39:33.284054 24323 solver.cpp:238]     Train net output #0: loss = 1.21274 (* 1 = 1.21274 loss)
I0428 19:39:33.284077 24323 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:33.353734 24323 solver.cpp:219] Iteration 400 (1435.26 iter/s, 0.069674s/100 iters), loss = 1.07731
I0428 19:39:33.353762 24323 solver.cpp:238]     Train net output #0: loss = 1.07731 (* 1 = 1.07731 loss)
I0428 19:39:33.353772 24323 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:33.424197 24323 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:33.478970 24330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:33.479398 24323 solver.cpp:398]     Test net output #0: accuracy = 0.711
I0428 19:39:33.479419 24323 solver.cpp:398]     Test net output #1: loss = 0.949424 (* 1 = 0.949424 loss)
I0428 19:39:33.480155 24323 solver.cpp:219] Iteration 500 (791.238 iter/s, 0.126384s/100 iters), loss = 1.08067
I0428 19:39:33.480183 24323 solver.cpp:238]     Train net output #0: loss = 1.08067 (* 1 = 1.08067 loss)
I0428 19:39:33.480211 24323 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:33.551606 24323 solver.cpp:219] Iteration 600 (1400.23 iter/s, 0.0714168s/100 iters), loss = 0.750903
I0428 19:39:33.551635 24323 solver.cpp:238]     Train net output #0: loss = 0.750903 (* 1 = 0.750903 loss)
I0428 19:39:33.551646 24323 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:33.620504 24323 solver.cpp:219] Iteration 700 (1452.16 iter/s, 0.068863s/100 iters), loss = 1.03565
I0428 19:39:33.620532 24323 solver.cpp:238]     Train net output #0: loss = 1.03565 (* 1 = 1.03565 loss)
I0428 19:39:33.620543 24323 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:33.688328 24323 solver.cpp:219] Iteration 800 (1475.17 iter/s, 0.0677888s/100 iters), loss = 1.12846
I0428 19:39:33.688355 24323 solver.cpp:238]     Train net output #0: loss = 1.12846 (* 1 = 1.12846 loss)
I0428 19:39:33.688365 24323 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:33.757943 24323 solver.cpp:219] Iteration 900 (1437.16 iter/s, 0.0695818s/100 iters), loss = 0.639597
I0428 19:39:33.757971 24323 solver.cpp:238]     Train net output #0: loss = 0.639597 (* 1 = 0.639597 loss)
I0428 19:39:33.757979 24323 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:33.781550 24329 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:33.827162 24323 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:33.827822 24323 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:33.828265 24323 solver.cpp:311] Iteration 1000, loss = 0.671265
I0428 19:39:33.828284 24323 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:33.902811 24330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:33.903246 24323 solver.cpp:398]     Test net output #0: accuracy = 0.812
I0428 19:39:33.903270 24323 solver.cpp:398]     Test net output #1: loss = 0.674205 (* 1 = 0.674205 loss)
I0428 19:39:33.903280 24323 solver.cpp:316] Optimization Done.
I0428 19:39:33.903286 24323 caffe.cpp:259] Optimization Done.
