I0428 20:07:25.431128 31100 caffe.cpp:218] Using GPUs 0
I0428 20:07:25.467494 31100 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:25.979099 31100 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1055.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:25.979243 31100 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1055.prototxt
I0428 20:07:25.979578 31100 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:25.979593 31100 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:25.979672 31100 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:07:25.979735 31100 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:25.979835 31100 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:25.979857 31100 net.cpp:86] Creating Layer mnist
I0428 20:07:25.979864 31100 net.cpp:382] mnist -> data
I0428 20:07:25.979887 31100 net.cpp:382] mnist -> label
I0428 20:07:25.981065 31100 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:25.985035 31100 net.cpp:124] Setting up mnist
I0428 20:07:25.985071 31100 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:25.985090 31100 net.cpp:131] Top shape: 64 (64)
I0428 20:07:25.985102 31100 net.cpp:139] Memory required for data: 200960
I0428 20:07:25.985121 31100 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:25.985160 31100 net.cpp:86] Creating Layer conv0
I0428 20:07:25.985180 31100 net.cpp:408] conv0 <- data
I0428 20:07:25.985210 31100 net.cpp:382] conv0 -> conv0
I0428 20:07:26.303298 31100 net.cpp:124] Setting up conv0
I0428 20:07:26.303331 31100 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:26.303339 31100 net.cpp:139] Memory required for data: 3887360
I0428 20:07:26.303364 31100 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:26.303383 31100 net.cpp:86] Creating Layer pool0
I0428 20:07:26.303391 31100 net.cpp:408] pool0 <- conv0
I0428 20:07:26.303403 31100 net.cpp:382] pool0 -> pool0
I0428 20:07:26.303474 31100 net.cpp:124] Setting up pool0
I0428 20:07:26.303485 31100 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:26.303514 31100 net.cpp:139] Memory required for data: 4808960
I0428 20:07:26.303521 31100 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:26.303540 31100 net.cpp:86] Creating Layer conv1
I0428 20:07:26.303549 31100 net.cpp:408] conv1 <- pool0
I0428 20:07:26.303560 31100 net.cpp:382] conv1 -> conv1
I0428 20:07:26.306790 31100 net.cpp:124] Setting up conv1
I0428 20:07:26.306813 31100 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:26.306820 31100 net.cpp:139] Memory required for data: 4972800
I0428 20:07:26.306836 31100 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:26.306850 31100 net.cpp:86] Creating Layer pool1
I0428 20:07:26.306857 31100 net.cpp:408] pool1 <- conv1
I0428 20:07:26.306869 31100 net.cpp:382] pool1 -> pool1
I0428 20:07:26.306931 31100 net.cpp:124] Setting up pool1
I0428 20:07:26.306941 31100 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:26.306947 31100 net.cpp:139] Memory required for data: 5013760
I0428 20:07:26.306953 31100 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:26.306969 31100 net.cpp:86] Creating Layer ip1
I0428 20:07:26.306978 31100 net.cpp:408] ip1 <- pool1
I0428 20:07:26.306990 31100 net.cpp:382] ip1 -> ip1
I0428 20:07:26.308104 31100 net.cpp:124] Setting up ip1
I0428 20:07:26.308121 31100 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:26.308127 31100 net.cpp:139] Memory required for data: 5016320
I0428 20:07:26.308143 31100 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:26.308157 31100 net.cpp:86] Creating Layer relu1
I0428 20:07:26.308171 31100 net.cpp:408] relu1 <- ip1
I0428 20:07:26.308181 31100 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:26.308408 31100 net.cpp:124] Setting up relu1
I0428 20:07:26.308423 31100 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:26.308429 31100 net.cpp:139] Memory required for data: 5018880
I0428 20:07:26.308435 31100 layer_factory.hpp:77] Creating layer loss
I0428 20:07:26.308445 31100 net.cpp:86] Creating Layer loss
I0428 20:07:26.308451 31100 net.cpp:408] loss <- ip1
I0428 20:07:26.308460 31100 net.cpp:408] loss <- label
I0428 20:07:26.308470 31100 net.cpp:382] loss -> loss
I0428 20:07:26.308492 31100 layer_factory.hpp:77] Creating layer loss
I0428 20:07:26.309475 31100 net.cpp:124] Setting up loss
I0428 20:07:26.309492 31100 net.cpp:131] Top shape: (1)
I0428 20:07:26.309499 31100 net.cpp:134]     with loss weight 1
I0428 20:07:26.309528 31100 net.cpp:139] Memory required for data: 5018884
I0428 20:07:26.309536 31100 net.cpp:200] loss needs backward computation.
I0428 20:07:26.309543 31100 net.cpp:200] relu1 needs backward computation.
I0428 20:07:26.309550 31100 net.cpp:200] ip1 needs backward computation.
I0428 20:07:26.309556 31100 net.cpp:200] pool1 needs backward computation.
I0428 20:07:26.309562 31100 net.cpp:200] conv1 needs backward computation.
I0428 20:07:26.309568 31100 net.cpp:200] pool0 needs backward computation.
I0428 20:07:26.309574 31100 net.cpp:200] conv0 needs backward computation.
I0428 20:07:26.309581 31100 net.cpp:202] mnist does not need backward computation.
I0428 20:07:26.309587 31100 net.cpp:244] This network produces output loss
I0428 20:07:26.309604 31100 net.cpp:257] Network initialization done.
I0428 20:07:26.309917 31100 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1055.prototxt
I0428 20:07:26.309954 31100 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:26.310050 31100 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:07:26.310178 31100 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:26.310248 31100 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:26.310269 31100 net.cpp:86] Creating Layer mnist
I0428 20:07:26.310281 31100 net.cpp:382] mnist -> data
I0428 20:07:26.310295 31100 net.cpp:382] mnist -> label
I0428 20:07:26.310446 31100 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:26.312975 31100 net.cpp:124] Setting up mnist
I0428 20:07:26.312994 31100 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:26.313004 31100 net.cpp:131] Top shape: 100 (100)
I0428 20:07:26.313010 31100 net.cpp:139] Memory required for data: 314000
I0428 20:07:26.313016 31100 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:26.313050 31100 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:26.313057 31100 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:26.313066 31100 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:26.313079 31100 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:26.313218 31100 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:26.313235 31100 net.cpp:131] Top shape: 100 (100)
I0428 20:07:26.313243 31100 net.cpp:131] Top shape: 100 (100)
I0428 20:07:26.313249 31100 net.cpp:139] Memory required for data: 314800
I0428 20:07:26.313256 31100 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:26.313268 31100 net.cpp:86] Creating Layer conv0
I0428 20:07:26.313272 31100 net.cpp:408] conv0 <- data
I0428 20:07:26.313280 31100 net.cpp:382] conv0 -> conv0
I0428 20:07:26.314241 31100 net.cpp:124] Setting up conv0
I0428 20:07:26.314256 31100 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:26.314260 31100 net.cpp:139] Memory required for data: 6074800
I0428 20:07:26.314271 31100 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:26.314281 31100 net.cpp:86] Creating Layer pool0
I0428 20:07:26.314285 31100 net.cpp:408] pool0 <- conv0
I0428 20:07:26.314291 31100 net.cpp:382] pool0 -> pool0
I0428 20:07:26.314334 31100 net.cpp:124] Setting up pool0
I0428 20:07:26.314343 31100 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:26.314347 31100 net.cpp:139] Memory required for data: 7514800
I0428 20:07:26.314350 31100 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:26.314360 31100 net.cpp:86] Creating Layer conv1
I0428 20:07:26.314364 31100 net.cpp:408] conv1 <- pool0
I0428 20:07:26.314371 31100 net.cpp:382] conv1 -> conv1
I0428 20:07:26.316790 31100 net.cpp:124] Setting up conv1
I0428 20:07:26.316805 31100 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:26.316819 31100 net.cpp:139] Memory required for data: 7770800
I0428 20:07:26.316833 31100 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:26.316839 31100 net.cpp:86] Creating Layer pool1
I0428 20:07:26.316860 31100 net.cpp:408] pool1 <- conv1
I0428 20:07:26.316869 31100 net.cpp:382] pool1 -> pool1
I0428 20:07:26.316944 31100 net.cpp:124] Setting up pool1
I0428 20:07:26.316953 31100 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:26.316957 31100 net.cpp:139] Memory required for data: 7834800
I0428 20:07:26.316961 31100 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:26.316969 31100 net.cpp:86] Creating Layer ip1
I0428 20:07:26.316973 31100 net.cpp:408] ip1 <- pool1
I0428 20:07:26.316979 31100 net.cpp:382] ip1 -> ip1
I0428 20:07:26.317113 31100 net.cpp:124] Setting up ip1
I0428 20:07:26.317122 31100 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:26.317126 31100 net.cpp:139] Memory required for data: 7838800
I0428 20:07:26.317136 31100 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:26.317145 31100 net.cpp:86] Creating Layer relu1
I0428 20:07:26.317149 31100 net.cpp:408] relu1 <- ip1
I0428 20:07:26.317154 31100 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:26.318087 31100 net.cpp:124] Setting up relu1
I0428 20:07:26.318101 31100 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:26.318105 31100 net.cpp:139] Memory required for data: 7842800
I0428 20:07:26.318109 31100 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:07:26.318117 31100 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:07:26.318121 31100 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:07:26.318127 31100 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:07:26.318136 31100 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:07:26.318186 31100 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:07:26.318192 31100 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:26.318195 31100 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:26.318199 31100 net.cpp:139] Memory required for data: 7850800
I0428 20:07:26.318202 31100 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:26.318210 31100 net.cpp:86] Creating Layer accuracy
I0428 20:07:26.318214 31100 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:07:26.318225 31100 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:26.318230 31100 net.cpp:382] accuracy -> accuracy
I0428 20:07:26.318239 31100 net.cpp:124] Setting up accuracy
I0428 20:07:26.318243 31100 net.cpp:131] Top shape: (1)
I0428 20:07:26.318255 31100 net.cpp:139] Memory required for data: 7850804
I0428 20:07:26.318261 31100 layer_factory.hpp:77] Creating layer loss
I0428 20:07:26.318267 31100 net.cpp:86] Creating Layer loss
I0428 20:07:26.318271 31100 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:07:26.318276 31100 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:26.318281 31100 net.cpp:382] loss -> loss
I0428 20:07:26.318289 31100 layer_factory.hpp:77] Creating layer loss
I0428 20:07:26.318583 31100 net.cpp:124] Setting up loss
I0428 20:07:26.318593 31100 net.cpp:131] Top shape: (1)
I0428 20:07:26.318598 31100 net.cpp:134]     with loss weight 1
I0428 20:07:26.318604 31100 net.cpp:139] Memory required for data: 7850808
I0428 20:07:26.318608 31100 net.cpp:200] loss needs backward computation.
I0428 20:07:26.318612 31100 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:26.318616 31100 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:07:26.318620 31100 net.cpp:200] relu1 needs backward computation.
I0428 20:07:26.318624 31100 net.cpp:200] ip1 needs backward computation.
I0428 20:07:26.318627 31100 net.cpp:200] pool1 needs backward computation.
I0428 20:07:26.318631 31100 net.cpp:200] conv1 needs backward computation.
I0428 20:07:26.318642 31100 net.cpp:200] pool0 needs backward computation.
I0428 20:07:26.318645 31100 net.cpp:200] conv0 needs backward computation.
I0428 20:07:26.318650 31100 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:26.318655 31100 net.cpp:202] mnist does not need backward computation.
I0428 20:07:26.318657 31100 net.cpp:244] This network produces output accuracy
I0428 20:07:26.318661 31100 net.cpp:244] This network produces output loss
I0428 20:07:26.318686 31100 net.cpp:257] Network initialization done.
I0428 20:07:26.318729 31100 solver.cpp:56] Solver scaffolding done.
I0428 20:07:26.318984 31100 caffe.cpp:248] Starting Optimization
I0428 20:07:26.318991 31100 solver.cpp:273] Solving LeNet
I0428 20:07:26.318995 31100 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:26.319890 31100 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:26.324267 31100 blocking_queue.cpp:49] Waiting for data
I0428 20:07:26.395617 31107 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:26.396198 31100 solver.cpp:398]     Test net output #0: accuracy = 0.123
I0428 20:07:26.396226 31100 solver.cpp:398]     Test net output #1: loss = 2.326 (* 1 = 2.326 loss)
I0428 20:07:26.400218 31100 solver.cpp:219] Iteration 0 (-3.13614e-34 iter/s, 0.0811896s/100 iters), loss = 2.32053
I0428 20:07:26.400255 31100 solver.cpp:238]     Train net output #0: loss = 2.32053 (* 1 = 2.32053 loss)
I0428 20:07:26.400270 31100 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:26.486598 31100 solver.cpp:219] Iteration 100 (1158.34 iter/s, 0.0863307s/100 iters), loss = 0.319395
I0428 20:07:26.486629 31100 solver.cpp:238]     Train net output #0: loss = 0.319395 (* 1 = 0.319395 loss)
I0428 20:07:26.486637 31100 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:26.568457 31100 solver.cpp:219] Iteration 200 (1222.29 iter/s, 0.0818135s/100 iters), loss = 0.188772
I0428 20:07:26.568490 31100 solver.cpp:238]     Train net output #0: loss = 0.188772 (* 1 = 0.188772 loss)
I0428 20:07:26.568497 31100 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:26.649912 31100 solver.cpp:219] Iteration 300 (1228.3 iter/s, 0.0814131s/100 iters), loss = 0.220726
I0428 20:07:26.649943 31100 solver.cpp:238]     Train net output #0: loss = 0.220726 (* 1 = 0.220726 loss)
I0428 20:07:26.649951 31100 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:26.734161 31100 solver.cpp:219] Iteration 400 (1187.6 iter/s, 0.0842035s/100 iters), loss = 0.164075
I0428 20:07:26.734215 31100 solver.cpp:238]     Train net output #0: loss = 0.164075 (* 1 = 0.164075 loss)
I0428 20:07:26.734227 31100 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:26.822028 31100 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:26.898699 31107 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:26.899272 31100 solver.cpp:398]     Test net output #0: accuracy = 0.9608
I0428 20:07:26.899303 31100 solver.cpp:398]     Test net output #1: loss = 0.137895 (* 1 = 0.137895 loss)
I0428 20:07:26.900190 31100 solver.cpp:219] Iteration 500 (602.533 iter/s, 0.165966s/100 iters), loss = 0.252469
I0428 20:07:26.900230 31100 solver.cpp:238]     Train net output #0: loss = 0.252469 (* 1 = 0.252469 loss)
I0428 20:07:26.900240 31100 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:26.989714 31100 solver.cpp:219] Iteration 600 (1117.67 iter/s, 0.0894721s/100 iters), loss = 0.101518
I0428 20:07:26.989744 31100 solver.cpp:238]     Train net output #0: loss = 0.101518 (* 1 = 0.101518 loss)
I0428 20:07:26.989753 31100 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:27.071032 31100 solver.cpp:219] Iteration 700 (1230.35 iter/s, 0.0812778s/100 iters), loss = 0.171606
I0428 20:07:27.071063 31100 solver.cpp:238]     Train net output #0: loss = 0.171606 (* 1 = 0.171606 loss)
I0428 20:07:27.071070 31100 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:27.152375 31100 solver.cpp:219] Iteration 800 (1229.96 iter/s, 0.0813036s/100 iters), loss = 0.294616
I0428 20:07:27.152407 31100 solver.cpp:238]     Train net output #0: loss = 0.294616 (* 1 = 0.294616 loss)
I0428 20:07:27.152415 31100 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:27.233839 31100 solver.cpp:219] Iteration 900 (1228.18 iter/s, 0.0814213s/100 iters), loss = 0.145545
I0428 20:07:27.233870 31100 solver.cpp:238]     Train net output #0: loss = 0.145545 (* 1 = 0.145545 loss)
I0428 20:07:27.233877 31100 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:27.261035 31106 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:27.313899 31100 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:27.314692 31100 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:27.315243 31100 solver.cpp:311] Iteration 1000, loss = 0.113906
I0428 20:07:27.315264 31100 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:27.391194 31107 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:27.391778 31100 solver.cpp:398]     Test net output #0: accuracy = 0.9719
I0428 20:07:27.391804 31100 solver.cpp:398]     Test net output #1: loss = 0.0876482 (* 1 = 0.0876482 loss)
I0428 20:07:27.391810 31100 solver.cpp:316] Optimization Done.
I0428 20:07:27.391814 31100 caffe.cpp:259] Optimization Done.
