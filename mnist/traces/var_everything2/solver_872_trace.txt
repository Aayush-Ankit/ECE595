I0428 20:00:17.199882 29441 caffe.cpp:218] Using GPUs 0
I0428 20:00:17.228540 29441 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:17.674788 29441 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test872.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:17.674917 29441 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test872.prototxt
I0428 20:00:17.675256 29441 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:17.675271 29441 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:17.675348 29441 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:17.675424 29441 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:17.675511 29441 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:17.675531 29441 net.cpp:86] Creating Layer mnist
I0428 20:00:17.675537 29441 net.cpp:382] mnist -> data
I0428 20:00:17.675556 29441 net.cpp:382] mnist -> label
I0428 20:00:17.676548 29441 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:17.679090 29441 net.cpp:124] Setting up mnist
I0428 20:00:17.679121 29441 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:17.679126 29441 net.cpp:131] Top shape: 64 (64)
I0428 20:00:17.679129 29441 net.cpp:139] Memory required for data: 200960
I0428 20:00:17.679136 29441 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:17.679148 29441 net.cpp:86] Creating Layer conv0
I0428 20:00:17.679165 29441 net.cpp:408] conv0 <- data
I0428 20:00:17.679177 29441 net.cpp:382] conv0 -> conv0
I0428 20:00:17.907054 29441 net.cpp:124] Setting up conv0
I0428 20:00:17.907080 29441 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:17.907085 29441 net.cpp:139] Memory required for data: 1675520
I0428 20:00:17.907100 29441 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:17.907114 29441 net.cpp:86] Creating Layer pool0
I0428 20:00:17.907117 29441 net.cpp:408] pool0 <- conv0
I0428 20:00:17.907138 29441 net.cpp:382] pool0 -> pool0
I0428 20:00:17.907184 29441 net.cpp:124] Setting up pool0
I0428 20:00:17.907198 29441 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:17.907202 29441 net.cpp:139] Memory required for data: 2044160
I0428 20:00:17.907205 29441 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:17.907217 29441 net.cpp:86] Creating Layer conv1
I0428 20:00:17.907220 29441 net.cpp:408] conv1 <- pool0
I0428 20:00:17.907225 29441 net.cpp:382] conv1 -> conv1
I0428 20:00:17.910053 29441 net.cpp:124] Setting up conv1
I0428 20:00:17.910082 29441 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:17.910086 29441 net.cpp:139] Memory required for data: 2453760
I0428 20:00:17.910095 29441 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:17.910104 29441 net.cpp:86] Creating Layer pool1
I0428 20:00:17.910109 29441 net.cpp:408] pool1 <- conv1
I0428 20:00:17.910114 29441 net.cpp:382] pool1 -> pool1
I0428 20:00:17.910167 29441 net.cpp:124] Setting up pool1
I0428 20:00:17.910173 29441 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:17.910177 29441 net.cpp:139] Memory required for data: 2556160
I0428 20:00:17.910181 29441 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:17.910203 29441 net.cpp:86] Creating Layer ip1
I0428 20:00:17.910208 29441 net.cpp:408] ip1 <- pool1
I0428 20:00:17.910213 29441 net.cpp:382] ip1 -> ip1
I0428 20:00:17.911185 29441 net.cpp:124] Setting up ip1
I0428 20:00:17.911197 29441 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:17.911217 29441 net.cpp:139] Memory required for data: 2558720
I0428 20:00:17.911242 29441 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:17.911248 29441 net.cpp:86] Creating Layer relu1
I0428 20:00:17.911252 29441 net.cpp:408] relu1 <- ip1
I0428 20:00:17.911258 29441 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:17.911461 29441 net.cpp:124] Setting up relu1
I0428 20:00:17.911471 29441 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:17.911475 29441 net.cpp:139] Memory required for data: 2561280
I0428 20:00:17.911479 29441 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:17.911486 29441 net.cpp:86] Creating Layer ip2
I0428 20:00:17.911489 29441 net.cpp:408] ip2 <- ip1
I0428 20:00:17.911495 29441 net.cpp:382] ip2 -> ip2
I0428 20:00:17.911600 29441 net.cpp:124] Setting up ip2
I0428 20:00:17.911608 29441 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:17.911612 29441 net.cpp:139] Memory required for data: 2563840
I0428 20:00:17.911617 29441 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:17.911624 29441 net.cpp:86] Creating Layer relu2
I0428 20:00:17.911628 29441 net.cpp:408] relu2 <- ip2
I0428 20:00:17.911633 29441 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:17.912433 29441 net.cpp:124] Setting up relu2
I0428 20:00:17.912446 29441 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:17.912464 29441 net.cpp:139] Memory required for data: 2566400
I0428 20:00:17.912468 29441 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:17.912492 29441 net.cpp:86] Creating Layer ip3
I0428 20:00:17.912509 29441 net.cpp:408] ip3 <- ip2
I0428 20:00:17.912515 29441 net.cpp:382] ip3 -> ip3
I0428 20:00:17.912613 29441 net.cpp:124] Setting up ip3
I0428 20:00:17.912621 29441 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:17.912626 29441 net.cpp:139] Memory required for data: 2568960
I0428 20:00:17.912633 29441 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:17.912638 29441 net.cpp:86] Creating Layer relu3
I0428 20:00:17.912642 29441 net.cpp:408] relu3 <- ip3
I0428 20:00:17.912647 29441 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:17.912848 29441 net.cpp:124] Setting up relu3
I0428 20:00:17.912859 29441 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:17.912863 29441 net.cpp:139] Memory required for data: 2571520
I0428 20:00:17.912868 29441 layer_factory.hpp:77] Creating layer loss
I0428 20:00:17.912873 29441 net.cpp:86] Creating Layer loss
I0428 20:00:17.912892 29441 net.cpp:408] loss <- ip3
I0428 20:00:17.912897 29441 net.cpp:408] loss <- label
I0428 20:00:17.912904 29441 net.cpp:382] loss -> loss
I0428 20:00:17.912919 29441 layer_factory.hpp:77] Creating layer loss
I0428 20:00:17.913199 29441 net.cpp:124] Setting up loss
I0428 20:00:17.913220 29441 net.cpp:131] Top shape: (1)
I0428 20:00:17.913239 29441 net.cpp:134]     with loss weight 1
I0428 20:00:17.913266 29441 net.cpp:139] Memory required for data: 2571524
I0428 20:00:17.913281 29441 net.cpp:200] loss needs backward computation.
I0428 20:00:17.913285 29441 net.cpp:200] relu3 needs backward computation.
I0428 20:00:17.913288 29441 net.cpp:200] ip3 needs backward computation.
I0428 20:00:17.913291 29441 net.cpp:200] relu2 needs backward computation.
I0428 20:00:17.913295 29441 net.cpp:200] ip2 needs backward computation.
I0428 20:00:17.913297 29441 net.cpp:200] relu1 needs backward computation.
I0428 20:00:17.913300 29441 net.cpp:200] ip1 needs backward computation.
I0428 20:00:17.913303 29441 net.cpp:200] pool1 needs backward computation.
I0428 20:00:17.913306 29441 net.cpp:200] conv1 needs backward computation.
I0428 20:00:17.913310 29441 net.cpp:200] pool0 needs backward computation.
I0428 20:00:17.913312 29441 net.cpp:200] conv0 needs backward computation.
I0428 20:00:17.913316 29441 net.cpp:202] mnist does not need backward computation.
I0428 20:00:17.913318 29441 net.cpp:244] This network produces output loss
I0428 20:00:17.913343 29441 net.cpp:257] Network initialization done.
I0428 20:00:17.913749 29441 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test872.prototxt
I0428 20:00:17.913790 29441 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:17.913882 29441 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:17.913964 29441 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:17.914005 29441 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:17.914019 29441 net.cpp:86] Creating Layer mnist
I0428 20:00:17.914026 29441 net.cpp:382] mnist -> data
I0428 20:00:17.914033 29441 net.cpp:382] mnist -> label
I0428 20:00:17.914116 29441 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:17.916182 29441 net.cpp:124] Setting up mnist
I0428 20:00:17.916194 29441 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:17.916199 29441 net.cpp:131] Top shape: 100 (100)
I0428 20:00:17.916203 29441 net.cpp:139] Memory required for data: 314000
I0428 20:00:17.916206 29441 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:17.916213 29441 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:17.916216 29441 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:17.916223 29441 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:17.916229 29441 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:17.916282 29441 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:17.916290 29441 net.cpp:131] Top shape: 100 (100)
I0428 20:00:17.916293 29441 net.cpp:131] Top shape: 100 (100)
I0428 20:00:17.916296 29441 net.cpp:139] Memory required for data: 314800
I0428 20:00:17.916301 29441 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:17.916308 29441 net.cpp:86] Creating Layer conv0
I0428 20:00:17.916312 29441 net.cpp:408] conv0 <- data
I0428 20:00:17.916332 29441 net.cpp:382] conv0 -> conv0
I0428 20:00:17.918157 29441 net.cpp:124] Setting up conv0
I0428 20:00:17.918170 29441 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:17.918174 29441 net.cpp:139] Memory required for data: 2618800
I0428 20:00:17.918184 29441 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:17.918190 29441 net.cpp:86] Creating Layer pool0
I0428 20:00:17.918193 29441 net.cpp:408] pool0 <- conv0
I0428 20:00:17.918200 29441 net.cpp:382] pool0 -> pool0
I0428 20:00:17.918234 29441 net.cpp:124] Setting up pool0
I0428 20:00:17.918239 29441 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:17.918242 29441 net.cpp:139] Memory required for data: 3194800
I0428 20:00:17.918246 29441 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:17.918256 29441 net.cpp:86] Creating Layer conv1
I0428 20:00:17.918258 29441 net.cpp:408] conv1 <- pool0
I0428 20:00:17.918264 29441 net.cpp:382] conv1 -> conv1
I0428 20:00:17.920480 29441 net.cpp:124] Setting up conv1
I0428 20:00:17.920493 29441 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:17.920498 29441 net.cpp:139] Memory required for data: 3834800
I0428 20:00:17.920531 29441 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:17.920538 29441 net.cpp:86] Creating Layer pool1
I0428 20:00:17.920542 29441 net.cpp:408] pool1 <- conv1
I0428 20:00:17.920548 29441 net.cpp:382] pool1 -> pool1
I0428 20:00:17.920589 29441 net.cpp:124] Setting up pool1
I0428 20:00:17.920611 29441 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:17.920614 29441 net.cpp:139] Memory required for data: 3994800
I0428 20:00:17.920617 29441 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:17.920624 29441 net.cpp:86] Creating Layer ip1
I0428 20:00:17.920626 29441 net.cpp:408] ip1 <- pool1
I0428 20:00:17.920634 29441 net.cpp:382] ip1 -> ip1
I0428 20:00:17.920775 29441 net.cpp:124] Setting up ip1
I0428 20:00:17.920784 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.920796 29441 net.cpp:139] Memory required for data: 3998800
I0428 20:00:17.920804 29441 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:17.920814 29441 net.cpp:86] Creating Layer relu1
I0428 20:00:17.920846 29441 net.cpp:408] relu1 <- ip1
I0428 20:00:17.920852 29441 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:17.921125 29441 net.cpp:124] Setting up relu1
I0428 20:00:17.921135 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.921139 29441 net.cpp:139] Memory required for data: 4002800
I0428 20:00:17.921142 29441 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:17.921166 29441 net.cpp:86] Creating Layer ip2
I0428 20:00:17.921175 29441 net.cpp:408] ip2 <- ip1
I0428 20:00:17.921182 29441 net.cpp:382] ip2 -> ip2
I0428 20:00:17.921308 29441 net.cpp:124] Setting up ip2
I0428 20:00:17.921314 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.921317 29441 net.cpp:139] Memory required for data: 4006800
I0428 20:00:17.921324 29441 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:17.921329 29441 net.cpp:86] Creating Layer relu2
I0428 20:00:17.921331 29441 net.cpp:408] relu2 <- ip2
I0428 20:00:17.921336 29441 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:17.921481 29441 net.cpp:124] Setting up relu2
I0428 20:00:17.921490 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.921499 29441 net.cpp:139] Memory required for data: 4010800
I0428 20:00:17.921504 29441 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:17.921509 29441 net.cpp:86] Creating Layer ip3
I0428 20:00:17.921514 29441 net.cpp:408] ip3 <- ip2
I0428 20:00:17.921533 29441 net.cpp:382] ip3 -> ip3
I0428 20:00:17.921645 29441 net.cpp:124] Setting up ip3
I0428 20:00:17.921653 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.921672 29441 net.cpp:139] Memory required for data: 4014800
I0428 20:00:17.921681 29441 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:17.921687 29441 net.cpp:86] Creating Layer relu3
I0428 20:00:17.921691 29441 net.cpp:408] relu3 <- ip3
I0428 20:00:17.921696 29441 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:17.922612 29441 net.cpp:124] Setting up relu3
I0428 20:00:17.922626 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.922629 29441 net.cpp:139] Memory required for data: 4018800
I0428 20:00:17.922633 29441 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:17.922653 29441 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:17.922657 29441 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:17.922673 29441 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:17.922682 29441 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:17.922731 29441 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:17.922737 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.922742 29441 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:17.922745 29441 net.cpp:139] Memory required for data: 4026800
I0428 20:00:17.922749 29441 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:17.922755 29441 net.cpp:86] Creating Layer accuracy
I0428 20:00:17.922758 29441 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:17.922762 29441 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:17.922767 29441 net.cpp:382] accuracy -> accuracy
I0428 20:00:17.922775 29441 net.cpp:124] Setting up accuracy
I0428 20:00:17.922780 29441 net.cpp:131] Top shape: (1)
I0428 20:00:17.922783 29441 net.cpp:139] Memory required for data: 4026804
I0428 20:00:17.922786 29441 layer_factory.hpp:77] Creating layer loss
I0428 20:00:17.922792 29441 net.cpp:86] Creating Layer loss
I0428 20:00:17.922796 29441 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:17.922806 29441 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:17.922811 29441 net.cpp:382] loss -> loss
I0428 20:00:17.922817 29441 layer_factory.hpp:77] Creating layer loss
I0428 20:00:17.923069 29441 net.cpp:124] Setting up loss
I0428 20:00:17.923079 29441 net.cpp:131] Top shape: (1)
I0428 20:00:17.923081 29441 net.cpp:134]     with loss weight 1
I0428 20:00:17.923097 29441 net.cpp:139] Memory required for data: 4026808
I0428 20:00:17.923101 29441 net.cpp:200] loss needs backward computation.
I0428 20:00:17.923105 29441 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:17.923110 29441 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:17.923112 29441 net.cpp:200] relu3 needs backward computation.
I0428 20:00:17.923115 29441 net.cpp:200] ip3 needs backward computation.
I0428 20:00:17.923140 29441 net.cpp:200] relu2 needs backward computation.
I0428 20:00:17.923162 29441 net.cpp:200] ip2 needs backward computation.
I0428 20:00:17.923166 29441 net.cpp:200] relu1 needs backward computation.
I0428 20:00:17.923169 29441 net.cpp:200] ip1 needs backward computation.
I0428 20:00:17.923172 29441 net.cpp:200] pool1 needs backward computation.
I0428 20:00:17.923177 29441 net.cpp:200] conv1 needs backward computation.
I0428 20:00:17.923180 29441 net.cpp:200] pool0 needs backward computation.
I0428 20:00:17.923183 29441 net.cpp:200] conv0 needs backward computation.
I0428 20:00:17.923198 29441 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:17.923203 29441 net.cpp:202] mnist does not need backward computation.
I0428 20:00:17.923213 29441 net.cpp:244] This network produces output accuracy
I0428 20:00:17.923218 29441 net.cpp:244] This network produces output loss
I0428 20:00:17.923229 29441 net.cpp:257] Network initialization done.
I0428 20:00:17.923274 29441 solver.cpp:56] Solver scaffolding done.
I0428 20:00:17.923660 29441 caffe.cpp:248] Starting Optimization
I0428 20:00:17.923666 29441 solver.cpp:273] Solving LeNet
I0428 20:00:17.923671 29441 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:17.923889 29441 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:17.928257 29441 blocking_queue.cpp:49] Waiting for data
I0428 20:00:17.999757 29451 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:18.000375 29441 solver.cpp:398]     Test net output #0: accuracy = 0.1099
I0428 20:00:18.000396 29441 solver.cpp:398]     Test net output #1: loss = 2.30382 (* 1 = 2.30382 loss)
I0428 20:00:18.002910 29441 solver.cpp:219] Iteration 0 (0 iter/s, 0.0792136s/100 iters), loss = 2.30911
I0428 20:00:18.002949 29441 solver.cpp:238]     Train net output #0: loss = 2.30911 (* 1 = 2.30911 loss)
I0428 20:00:18.002977 29441 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:18.105818 29441 solver.cpp:219] Iteration 100 (972.159 iter/s, 0.102864s/100 iters), loss = 1.16434
I0428 20:00:18.105870 29441 solver.cpp:238]     Train net output #0: loss = 1.16434 (* 1 = 1.16434 loss)
I0428 20:00:18.105885 29441 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:18.207623 29441 solver.cpp:219] Iteration 200 (982.852 iter/s, 0.101745s/100 iters), loss = 1.21678
I0428 20:00:18.207659 29441 solver.cpp:238]     Train net output #0: loss = 1.21678 (* 1 = 1.21678 loss)
I0428 20:00:18.207669 29441 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:18.300122 29441 solver.cpp:219] Iteration 300 (1081.62 iter/s, 0.0924539s/100 iters), loss = 0.593213
I0428 20:00:18.300153 29441 solver.cpp:238]     Train net output #0: loss = 0.593213 (* 1 = 0.593213 loss)
I0428 20:00:18.300163 29441 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:18.392045 29441 solver.cpp:219] Iteration 400 (1088.36 iter/s, 0.0918815s/100 iters), loss = 0.552235
I0428 20:00:18.392077 29441 solver.cpp:238]     Train net output #0: loss = 0.552235 (* 1 = 0.552235 loss)
I0428 20:00:18.392086 29441 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:18.483155 29441 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:18.553091 29451 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:18.553665 29441 solver.cpp:398]     Test net output #0: accuracy = 0.8386
I0428 20:00:18.553694 29441 solver.cpp:398]     Test net output #1: loss = 0.46437 (* 1 = 0.46437 loss)
I0428 20:00:18.554668 29441 solver.cpp:219] Iteration 500 (615.103 iter/s, 0.162574s/100 iters), loss = 0.486375
I0428 20:00:18.554708 29441 solver.cpp:238]     Train net output #0: loss = 0.486375 (* 1 = 0.486375 loss)
I0428 20:00:18.554738 29441 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:18.663981 29441 solver.cpp:219] Iteration 600 (915.292 iter/s, 0.109255s/100 iters), loss = 0.541591
I0428 20:00:18.664034 29441 solver.cpp:238]     Train net output #0: loss = 0.541591 (* 1 = 0.541591 loss)
I0428 20:00:18.664048 29441 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:18.765597 29441 solver.cpp:219] Iteration 700 (984.675 iter/s, 0.101556s/100 iters), loss = 0.264955
I0428 20:00:18.765631 29441 solver.cpp:238]     Train net output #0: loss = 0.264955 (* 1 = 0.264955 loss)
I0428 20:00:18.765640 29441 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:18.869119 29441 solver.cpp:219] Iteration 800 (966.423 iter/s, 0.103474s/100 iters), loss = 0.606898
I0428 20:00:18.869163 29441 solver.cpp:238]     Train net output #0: loss = 0.606897 (* 1 = 0.606897 loss)
I0428 20:00:18.869175 29441 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:18.975286 29441 solver.cpp:219] Iteration 900 (942.418 iter/s, 0.10611s/100 iters), loss = 0.693614
I0428 20:00:18.975339 29441 solver.cpp:238]     Train net output #0: loss = 0.693614 (* 1 = 0.693614 loss)
I0428 20:00:18.975353 29441 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:19.010380 29450 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:19.073284 29441 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:19.074326 29441 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:19.075114 29441 solver.cpp:311] Iteration 1000, loss = 0.263592
I0428 20:00:19.075147 29441 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:19.150164 29451 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:19.150707 29441 solver.cpp:398]     Test net output #0: accuracy = 0.9528
I0428 20:00:19.150729 29441 solver.cpp:398]     Test net output #1: loss = 0.186721 (* 1 = 0.186721 loss)
I0428 20:00:19.150737 29441 solver.cpp:316] Optimization Done.
I0428 20:00:19.150739 29441 caffe.cpp:259] Optimization Done.
