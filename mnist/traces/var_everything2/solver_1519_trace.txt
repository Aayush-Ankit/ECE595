I0428 20:29:16.307423  3501 caffe.cpp:218] Using GPUs 0
I0428 20:29:16.345082  3501 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:16.855670  3501 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1519.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:16.855818  3501 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1519.prototxt
I0428 20:29:16.856240  3501 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:16.856257  3501 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:16.856360  3501 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:29:16.856439  3501 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:16.856535  3501 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:16.856560  3501 net.cpp:86] Creating Layer mnist
I0428 20:29:16.856570  3501 net.cpp:382] mnist -> data
I0428 20:29:16.856591  3501 net.cpp:382] mnist -> label
I0428 20:29:16.857692  3501 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:16.860146  3501 net.cpp:124] Setting up mnist
I0428 20:29:16.860163  3501 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:16.860169  3501 net.cpp:131] Top shape: 64 (64)
I0428 20:29:16.860172  3501 net.cpp:139] Memory required for data: 200960
I0428 20:29:16.860179  3501 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:16.860219  3501 net.cpp:86] Creating Layer conv0
I0428 20:29:16.860241  3501 net.cpp:408] conv0 <- data
I0428 20:29:16.860255  3501 net.cpp:382] conv0 -> conv0
I0428 20:29:17.124064  3501 net.cpp:124] Setting up conv0
I0428 20:29:17.124106  3501 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:17.124110  3501 net.cpp:139] Memory required for data: 14946560
I0428 20:29:17.124125  3501 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:17.124138  3501 net.cpp:86] Creating Layer pool0
I0428 20:29:17.124141  3501 net.cpp:408] pool0 <- conv0
I0428 20:29:17.124146  3501 net.cpp:382] pool0 -> pool0
I0428 20:29:17.124207  3501 net.cpp:124] Setting up pool0
I0428 20:29:17.124213  3501 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:17.124215  3501 net.cpp:139] Memory required for data: 18632960
I0428 20:29:17.124219  3501 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:17.124229  3501 net.cpp:86] Creating Layer conv1
I0428 20:29:17.124233  3501 net.cpp:408] conv1 <- pool0
I0428 20:29:17.124238  3501 net.cpp:382] conv1 -> conv1
I0428 20:29:17.127240  3501 net.cpp:124] Setting up conv1
I0428 20:29:17.127254  3501 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:29:17.127257  3501 net.cpp:139] Memory required for data: 18714880
I0428 20:29:17.127265  3501 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:17.127287  3501 net.cpp:86] Creating Layer pool1
I0428 20:29:17.127291  3501 net.cpp:408] pool1 <- conv1
I0428 20:29:17.127296  3501 net.cpp:382] pool1 -> pool1
I0428 20:29:17.127331  3501 net.cpp:124] Setting up pool1
I0428 20:29:17.127338  3501 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:29:17.127341  3501 net.cpp:139] Memory required for data: 18735360
I0428 20:29:17.127344  3501 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:17.127351  3501 net.cpp:86] Creating Layer ip1
I0428 20:29:17.127353  3501 net.cpp:408] ip1 <- pool1
I0428 20:29:17.127358  3501 net.cpp:382] ip1 -> ip1
I0428 20:29:17.127475  3501 net.cpp:124] Setting up ip1
I0428 20:29:17.127481  3501 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:29:17.127483  3501 net.cpp:139] Memory required for data: 18748160
I0428 20:29:17.127490  3501 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:17.127496  3501 net.cpp:86] Creating Layer relu1
I0428 20:29:17.127499  3501 net.cpp:408] relu1 <- ip1
I0428 20:29:17.127503  3501 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:17.127679  3501 net.cpp:124] Setting up relu1
I0428 20:29:17.127688  3501 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:29:17.127691  3501 net.cpp:139] Memory required for data: 18760960
I0428 20:29:17.127694  3501 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:17.127701  3501 net.cpp:86] Creating Layer ip2
I0428 20:29:17.127704  3501 net.cpp:408] ip2 <- ip1
I0428 20:29:17.127708  3501 net.cpp:382] ip2 -> ip2
I0428 20:29:17.127813  3501 net.cpp:124] Setting up ip2
I0428 20:29:17.127820  3501 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:29:17.127823  3501 net.cpp:139] Memory required for data: 18773760
I0428 20:29:17.127830  3501 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:17.127835  3501 net.cpp:86] Creating Layer relu2
I0428 20:29:17.127837  3501 net.cpp:408] relu2 <- ip2
I0428 20:29:17.127841  3501 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:17.128656  3501 net.cpp:124] Setting up relu2
I0428 20:29:17.128669  3501 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:29:17.128689  3501 net.cpp:139] Memory required for data: 18786560
I0428 20:29:17.128691  3501 layer_factory.hpp:77] Creating layer ip3
I0428 20:29:17.128698  3501 net.cpp:86] Creating Layer ip3
I0428 20:29:17.128701  3501 net.cpp:408] ip3 <- ip2
I0428 20:29:17.128707  3501 net.cpp:382] ip3 -> ip3
I0428 20:29:17.128815  3501 net.cpp:124] Setting up ip3
I0428 20:29:17.128834  3501 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:17.128837  3501 net.cpp:139] Memory required for data: 18789120
I0428 20:29:17.128845  3501 layer_factory.hpp:77] Creating layer relu3
I0428 20:29:17.128851  3501 net.cpp:86] Creating Layer relu3
I0428 20:29:17.128854  3501 net.cpp:408] relu3 <- ip3
I0428 20:29:17.128859  3501 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:29:17.129050  3501 net.cpp:124] Setting up relu3
I0428 20:29:17.129058  3501 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:17.129062  3501 net.cpp:139] Memory required for data: 18791680
I0428 20:29:17.129065  3501 layer_factory.hpp:77] Creating layer loss
I0428 20:29:17.129071  3501 net.cpp:86] Creating Layer loss
I0428 20:29:17.129075  3501 net.cpp:408] loss <- ip3
I0428 20:29:17.129078  3501 net.cpp:408] loss <- label
I0428 20:29:17.129083  3501 net.cpp:382] loss -> loss
I0428 20:29:17.129102  3501 layer_factory.hpp:77] Creating layer loss
I0428 20:29:17.129353  3501 net.cpp:124] Setting up loss
I0428 20:29:17.129360  3501 net.cpp:131] Top shape: (1)
I0428 20:29:17.129364  3501 net.cpp:134]     with loss weight 1
I0428 20:29:17.129379  3501 net.cpp:139] Memory required for data: 18791684
I0428 20:29:17.129381  3501 net.cpp:200] loss needs backward computation.
I0428 20:29:17.129384  3501 net.cpp:200] relu3 needs backward computation.
I0428 20:29:17.129387  3501 net.cpp:200] ip3 needs backward computation.
I0428 20:29:17.129390  3501 net.cpp:200] relu2 needs backward computation.
I0428 20:29:17.129392  3501 net.cpp:200] ip2 needs backward computation.
I0428 20:29:17.129395  3501 net.cpp:200] relu1 needs backward computation.
I0428 20:29:17.129397  3501 net.cpp:200] ip1 needs backward computation.
I0428 20:29:17.129400  3501 net.cpp:200] pool1 needs backward computation.
I0428 20:29:17.129403  3501 net.cpp:200] conv1 needs backward computation.
I0428 20:29:17.129406  3501 net.cpp:200] pool0 needs backward computation.
I0428 20:29:17.129410  3501 net.cpp:200] conv0 needs backward computation.
I0428 20:29:17.129412  3501 net.cpp:202] mnist does not need backward computation.
I0428 20:29:17.129415  3501 net.cpp:244] This network produces output loss
I0428 20:29:17.129423  3501 net.cpp:257] Network initialization done.
I0428 20:29:17.129791  3501 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1519.prototxt
I0428 20:29:17.129819  3501 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:17.129925  3501 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:29:17.130017  3501 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:17.130079  3501 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:17.130091  3501 net.cpp:86] Creating Layer mnist
I0428 20:29:17.130097  3501 net.cpp:382] mnist -> data
I0428 20:29:17.130105  3501 net.cpp:382] mnist -> label
I0428 20:29:17.130195  3501 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:17.132189  3501 net.cpp:124] Setting up mnist
I0428 20:29:17.132217  3501 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:17.132222  3501 net.cpp:131] Top shape: 100 (100)
I0428 20:29:17.132225  3501 net.cpp:139] Memory required for data: 314000
I0428 20:29:17.132230  3501 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:17.132236  3501 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:17.132239  3501 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:17.132268  3501 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:17.132274  3501 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:17.132318  3501 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:17.132325  3501 net.cpp:131] Top shape: 100 (100)
I0428 20:29:17.132328  3501 net.cpp:131] Top shape: 100 (100)
I0428 20:29:17.132331  3501 net.cpp:139] Memory required for data: 314800
I0428 20:29:17.132334  3501 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:17.132342  3501 net.cpp:86] Creating Layer conv0
I0428 20:29:17.132346  3501 net.cpp:408] conv0 <- data
I0428 20:29:17.132351  3501 net.cpp:382] conv0 -> conv0
I0428 20:29:17.134280  3501 net.cpp:124] Setting up conv0
I0428 20:29:17.134310  3501 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:17.134315  3501 net.cpp:139] Memory required for data: 23354800
I0428 20:29:17.134323  3501 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:17.134330  3501 net.cpp:86] Creating Layer pool0
I0428 20:29:17.134333  3501 net.cpp:408] pool0 <- conv0
I0428 20:29:17.134340  3501 net.cpp:382] pool0 -> pool0
I0428 20:29:17.134378  3501 net.cpp:124] Setting up pool0
I0428 20:29:17.134383  3501 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:17.134387  3501 net.cpp:139] Memory required for data: 29114800
I0428 20:29:17.134388  3501 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:17.134399  3501 net.cpp:86] Creating Layer conv1
I0428 20:29:17.134402  3501 net.cpp:408] conv1 <- pool0
I0428 20:29:17.134407  3501 net.cpp:382] conv1 -> conv1
I0428 20:29:17.136193  3501 net.cpp:124] Setting up conv1
I0428 20:29:17.136206  3501 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:29:17.136212  3501 net.cpp:139] Memory required for data: 29242800
I0428 20:29:17.136222  3501 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:17.136229  3501 net.cpp:86] Creating Layer pool1
I0428 20:29:17.136234  3501 net.cpp:408] pool1 <- conv1
I0428 20:29:17.136238  3501 net.cpp:382] pool1 -> pool1
I0428 20:29:17.136278  3501 net.cpp:124] Setting up pool1
I0428 20:29:17.136292  3501 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:29:17.136296  3501 net.cpp:139] Memory required for data: 29274800
I0428 20:29:17.136298  3501 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:17.136306  3501 net.cpp:86] Creating Layer ip1
I0428 20:29:17.136308  3501 net.cpp:408] ip1 <- pool1
I0428 20:29:17.136314  3501 net.cpp:382] ip1 -> ip1
I0428 20:29:17.136477  3501 net.cpp:124] Setting up ip1
I0428 20:29:17.136485  3501 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:29:17.136502  3501 net.cpp:139] Memory required for data: 29294800
I0428 20:29:17.136510  3501 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:17.136518  3501 net.cpp:86] Creating Layer relu1
I0428 20:29:17.136520  3501 net.cpp:408] relu1 <- ip1
I0428 20:29:17.136525  3501 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:17.136732  3501 net.cpp:124] Setting up relu1
I0428 20:29:17.136741  3501 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:29:17.136744  3501 net.cpp:139] Memory required for data: 29314800
I0428 20:29:17.136747  3501 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:17.136756  3501 net.cpp:86] Creating Layer ip2
I0428 20:29:17.136759  3501 net.cpp:408] ip2 <- ip1
I0428 20:29:17.136765  3501 net.cpp:382] ip2 -> ip2
I0428 20:29:17.136934  3501 net.cpp:124] Setting up ip2
I0428 20:29:17.136942  3501 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:29:17.136946  3501 net.cpp:139] Memory required for data: 29334800
I0428 20:29:17.136952  3501 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:17.136957  3501 net.cpp:86] Creating Layer relu2
I0428 20:29:17.136961  3501 net.cpp:408] relu2 <- ip2
I0428 20:29:17.136965  3501 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:17.137245  3501 net.cpp:124] Setting up relu2
I0428 20:29:17.137257  3501 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:29:17.137260  3501 net.cpp:139] Memory required for data: 29354800
I0428 20:29:17.137264  3501 layer_factory.hpp:77] Creating layer ip3
I0428 20:29:17.137270  3501 net.cpp:86] Creating Layer ip3
I0428 20:29:17.137274  3501 net.cpp:408] ip3 <- ip2
I0428 20:29:17.137279  3501 net.cpp:382] ip3 -> ip3
I0428 20:29:17.137387  3501 net.cpp:124] Setting up ip3
I0428 20:29:17.137394  3501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:17.137397  3501 net.cpp:139] Memory required for data: 29358800
I0428 20:29:17.137404  3501 layer_factory.hpp:77] Creating layer relu3
I0428 20:29:17.137410  3501 net.cpp:86] Creating Layer relu3
I0428 20:29:17.137413  3501 net.cpp:408] relu3 <- ip3
I0428 20:29:17.137432  3501 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:29:17.138278  3501 net.cpp:124] Setting up relu3
I0428 20:29:17.138288  3501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:17.138293  3501 net.cpp:139] Memory required for data: 29362800
I0428 20:29:17.138296  3501 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:29:17.138301  3501 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:29:17.138304  3501 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:29:17.138310  3501 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:29:17.138316  3501 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:29:17.138372  3501 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:29:17.138378  3501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:17.138383  3501 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:17.138387  3501 net.cpp:139] Memory required for data: 29370800
I0428 20:29:17.138394  3501 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:17.138403  3501 net.cpp:86] Creating Layer accuracy
I0428 20:29:17.138407  3501 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:29:17.138411  3501 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:17.138415  3501 net.cpp:382] accuracy -> accuracy
I0428 20:29:17.138422  3501 net.cpp:124] Setting up accuracy
I0428 20:29:17.138427  3501 net.cpp:131] Top shape: (1)
I0428 20:29:17.138429  3501 net.cpp:139] Memory required for data: 29370804
I0428 20:29:17.138432  3501 layer_factory.hpp:77] Creating layer loss
I0428 20:29:17.138438  3501 net.cpp:86] Creating Layer loss
I0428 20:29:17.138445  3501 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:29:17.138449  3501 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:17.138468  3501 net.cpp:382] loss -> loss
I0428 20:29:17.138474  3501 layer_factory.hpp:77] Creating layer loss
I0428 20:29:17.138778  3501 net.cpp:124] Setting up loss
I0428 20:29:17.138788  3501 net.cpp:131] Top shape: (1)
I0428 20:29:17.138792  3501 net.cpp:134]     with loss weight 1
I0428 20:29:17.138808  3501 net.cpp:139] Memory required for data: 29370808
I0428 20:29:17.138813  3501 net.cpp:200] loss needs backward computation.
I0428 20:29:17.138816  3501 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:17.138820  3501 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:29:17.138823  3501 net.cpp:200] relu3 needs backward computation.
I0428 20:29:17.138826  3501 net.cpp:200] ip3 needs backward computation.
I0428 20:29:17.138829  3501 net.cpp:200] relu2 needs backward computation.
I0428 20:29:17.138833  3501 net.cpp:200] ip2 needs backward computation.
I0428 20:29:17.138835  3501 net.cpp:200] relu1 needs backward computation.
I0428 20:29:17.138839  3501 net.cpp:200] ip1 needs backward computation.
I0428 20:29:17.138841  3501 net.cpp:200] pool1 needs backward computation.
I0428 20:29:17.138859  3501 net.cpp:200] conv1 needs backward computation.
I0428 20:29:17.138862  3501 net.cpp:200] pool0 needs backward computation.
I0428 20:29:17.138865  3501 net.cpp:200] conv0 needs backward computation.
I0428 20:29:17.138869  3501 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:17.138872  3501 net.cpp:202] mnist does not need backward computation.
I0428 20:29:17.138875  3501 net.cpp:244] This network produces output accuracy
I0428 20:29:17.138880  3501 net.cpp:244] This network produces output loss
I0428 20:29:17.138891  3501 net.cpp:257] Network initialization done.
I0428 20:29:17.138933  3501 solver.cpp:56] Solver scaffolding done.
I0428 20:29:17.139276  3501 caffe.cpp:248] Starting Optimization
I0428 20:29:17.139283  3501 solver.cpp:273] Solving LeNet
I0428 20:29:17.139286  3501 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:17.140177  3501 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:17.248571  3512 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:17.251425  3501 solver.cpp:398]     Test net output #0: accuracy = 0.0958
I0428 20:29:17.251456  3501 solver.cpp:398]     Test net output #1: loss = 2.33231 (* 1 = 2.33231 loss)
I0428 20:29:17.256911  3501 solver.cpp:219] Iteration 0 (0 iter/s, 0.117587s/100 iters), loss = 2.32103
I0428 20:29:17.256947  3501 solver.cpp:238]     Train net output #0: loss = 2.32103 (* 1 = 2.32103 loss)
I0428 20:29:17.256963  3501 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:17.479085  3501 solver.cpp:219] Iteration 100 (450.244 iter/s, 0.222102s/100 iters), loss = 0.733108
I0428 20:29:17.479146  3501 solver.cpp:238]     Train net output #0: loss = 0.733108 (* 1 = 0.733108 loss)
I0428 20:29:17.479161  3501 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:17.698904  3501 solver.cpp:219] Iteration 200 (455.072 iter/s, 0.219745s/100 iters), loss = 0.508366
I0428 20:29:17.698938  3501 solver.cpp:238]     Train net output #0: loss = 0.508366 (* 1 = 0.508366 loss)
I0428 20:29:17.698947  3501 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:17.908596  3501 solver.cpp:219] Iteration 300 (477.003 iter/s, 0.209642s/100 iters), loss = 0.336179
I0428 20:29:17.908632  3501 solver.cpp:238]     Train net output #0: loss = 0.336179 (* 1 = 0.336179 loss)
I0428 20:29:17.908641  3501 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:18.119524  3501 solver.cpp:219] Iteration 400 (474.216 iter/s, 0.210874s/100 iters), loss = 0.199445
I0428 20:29:18.119560  3501 solver.cpp:238]     Train net output #0: loss = 0.199445 (* 1 = 0.199445 loss)
I0428 20:29:18.119568  3501 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:18.334118  3501 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:18.439463  3512 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:18.443032  3501 solver.cpp:398]     Test net output #0: accuracy = 0.9527
I0428 20:29:18.443059  3501 solver.cpp:398]     Test net output #1: loss = 0.147989 (* 1 = 0.147989 loss)
I0428 20:29:18.445006  3501 solver.cpp:219] Iteration 500 (307.287 iter/s, 0.325428s/100 iters), loss = 0.137616
I0428 20:29:18.445037  3501 solver.cpp:238]     Train net output #0: loss = 0.137616 (* 1 = 0.137616 loss)
I0428 20:29:18.445065  3501 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:18.653599  3501 solver.cpp:219] Iteration 600 (479.523 iter/s, 0.208541s/100 iters), loss = 0.132914
I0428 20:29:18.653645  3501 solver.cpp:238]     Train net output #0: loss = 0.132914 (* 1 = 0.132914 loss)
I0428 20:29:18.653653  3501 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:18.866053  3501 solver.cpp:219] Iteration 700 (470.825 iter/s, 0.212393s/100 iters), loss = 0.137684
I0428 20:29:18.866093  3501 solver.cpp:238]     Train net output #0: loss = 0.137684 (* 1 = 0.137684 loss)
I0428 20:29:18.866102  3501 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:19.083539  3501 solver.cpp:219] Iteration 800 (459.922 iter/s, 0.217428s/100 iters), loss = 0.25257
I0428 20:29:19.083582  3501 solver.cpp:238]     Train net output #0: loss = 0.25257 (* 1 = 0.25257 loss)
I0428 20:29:19.083595  3501 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:19.303956  3501 solver.cpp:219] Iteration 900 (453.814 iter/s, 0.220355s/100 iters), loss = 0.246594
I0428 20:29:19.304003  3501 solver.cpp:238]     Train net output #0: loss = 0.246594 (* 1 = 0.246594 loss)
I0428 20:29:19.304014  3501 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:19.378351  3508 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:19.524518  3501 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:19.526578  3501 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:19.527878  3501 solver.cpp:311] Iteration 1000, loss = 0.0600574
I0428 20:29:19.527906  3501 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:19.630782  3512 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:19.633572  3501 solver.cpp:398]     Test net output #0: accuracy = 0.9674
I0428 20:29:19.633596  3501 solver.cpp:398]     Test net output #1: loss = 0.103 (* 1 = 0.103 loss)
I0428 20:29:19.633604  3501 solver.cpp:316] Optimization Done.
I0428 20:29:19.633606  3501 caffe.cpp:259] Optimization Done.
