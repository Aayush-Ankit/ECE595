I0428 19:52:16.097393 27475 caffe.cpp:218] Using GPUs 0
I0428 19:52:16.133807 27475 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:16.585542 27475 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test657.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:16.585672 27475 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test657.prototxt
I0428 19:52:16.586007 27475 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:16.586022 27475 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:16.586099 27475 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:16.586174 27475 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:16.586256 27475 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:16.586274 27475 net.cpp:86] Creating Layer mnist
I0428 19:52:16.586280 27475 net.cpp:382] mnist -> data
I0428 19:52:16.586298 27475 net.cpp:382] mnist -> label
I0428 19:52:16.587224 27475 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:16.589465 27475 net.cpp:124] Setting up mnist
I0428 19:52:16.589506 27475 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:16.589512 27475 net.cpp:131] Top shape: 64 (64)
I0428 19:52:16.589530 27475 net.cpp:139] Memory required for data: 200960
I0428 19:52:16.589536 27475 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:16.589550 27475 net.cpp:86] Creating Layer conv0
I0428 19:52:16.589566 27475 net.cpp:408] conv0 <- data
I0428 19:52:16.589576 27475 net.cpp:382] conv0 -> conv0
I0428 19:52:16.815502 27475 net.cpp:124] Setting up conv0
I0428 19:52:16.815543 27475 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:16.815548 27475 net.cpp:139] Memory required for data: 938240
I0428 19:52:16.815563 27475 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:16.815575 27475 net.cpp:86] Creating Layer pool0
I0428 19:52:16.815579 27475 net.cpp:408] pool0 <- conv0
I0428 19:52:16.815584 27475 net.cpp:382] pool0 -> pool0
I0428 19:52:16.815647 27475 net.cpp:124] Setting up pool0
I0428 19:52:16.815654 27475 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:16.815656 27475 net.cpp:139] Memory required for data: 1122560
I0428 19:52:16.815659 27475 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:16.815670 27475 net.cpp:86] Creating Layer conv1
I0428 19:52:16.815673 27475 net.cpp:408] conv1 <- pool0
I0428 19:52:16.815677 27475 net.cpp:382] conv1 -> conv1
I0428 19:52:16.818450 27475 net.cpp:124] Setting up conv1
I0428 19:52:16.818466 27475 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:16.818470 27475 net.cpp:139] Memory required for data: 1532160
I0428 19:52:16.818477 27475 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:16.818486 27475 net.cpp:86] Creating Layer pool1
I0428 19:52:16.818490 27475 net.cpp:408] pool1 <- conv1
I0428 19:52:16.818509 27475 net.cpp:382] pool1 -> pool1
I0428 19:52:16.818549 27475 net.cpp:124] Setting up pool1
I0428 19:52:16.818554 27475 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:16.818557 27475 net.cpp:139] Memory required for data: 1634560
I0428 19:52:16.818560 27475 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:16.818572 27475 net.cpp:86] Creating Layer ip1
I0428 19:52:16.818575 27475 net.cpp:408] ip1 <- pool1
I0428 19:52:16.818579 27475 net.cpp:382] ip1 -> ip1
I0428 19:52:16.818796 27475 net.cpp:124] Setting up ip1
I0428 19:52:16.818804 27475 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:16.818806 27475 net.cpp:139] Memory required for data: 1647360
I0428 19:52:16.818814 27475 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:16.818819 27475 net.cpp:86] Creating Layer relu1
I0428 19:52:16.818823 27475 net.cpp:408] relu1 <- ip1
I0428 19:52:16.818827 27475 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:16.819016 27475 net.cpp:124] Setting up relu1
I0428 19:52:16.819025 27475 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:16.819028 27475 net.cpp:139] Memory required for data: 1660160
I0428 19:52:16.819031 27475 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:16.819038 27475 net.cpp:86] Creating Layer ip2
I0428 19:52:16.819041 27475 net.cpp:408] ip2 <- ip1
I0428 19:52:16.819046 27475 net.cpp:382] ip2 -> ip2
I0428 19:52:16.819162 27475 net.cpp:124] Setting up ip2
I0428 19:52:16.819169 27475 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:16.819172 27475 net.cpp:139] Memory required for data: 1666560
I0428 19:52:16.819177 27475 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:16.819183 27475 net.cpp:86] Creating Layer relu2
I0428 19:52:16.819187 27475 net.cpp:408] relu2 <- ip2
I0428 19:52:16.819192 27475 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:16.819921 27475 net.cpp:124] Setting up relu2
I0428 19:52:16.819934 27475 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:16.819937 27475 net.cpp:139] Memory required for data: 1672960
I0428 19:52:16.819941 27475 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:16.819949 27475 net.cpp:86] Creating Layer ip3
I0428 19:52:16.819952 27475 net.cpp:408] ip3 <- ip2
I0428 19:52:16.819957 27475 net.cpp:382] ip3 -> ip3
I0428 19:52:16.820057 27475 net.cpp:124] Setting up ip3
I0428 19:52:16.820065 27475 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:16.820068 27475 net.cpp:139] Memory required for data: 1675520
I0428 19:52:16.820075 27475 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:16.820082 27475 net.cpp:86] Creating Layer relu3
I0428 19:52:16.820085 27475 net.cpp:408] relu3 <- ip3
I0428 19:52:16.820088 27475 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:16.820274 27475 net.cpp:124] Setting up relu3
I0428 19:52:16.820282 27475 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:16.820286 27475 net.cpp:139] Memory required for data: 1678080
I0428 19:52:16.820288 27475 layer_factory.hpp:77] Creating layer loss
I0428 19:52:16.820294 27475 net.cpp:86] Creating Layer loss
I0428 19:52:16.820298 27475 net.cpp:408] loss <- ip3
I0428 19:52:16.820302 27475 net.cpp:408] loss <- label
I0428 19:52:16.820307 27475 net.cpp:382] loss -> loss
I0428 19:52:16.820324 27475 layer_factory.hpp:77] Creating layer loss
I0428 19:52:16.820544 27475 net.cpp:124] Setting up loss
I0428 19:52:16.820552 27475 net.cpp:131] Top shape: (1)
I0428 19:52:16.820555 27475 net.cpp:134]     with loss weight 1
I0428 19:52:16.820569 27475 net.cpp:139] Memory required for data: 1678084
I0428 19:52:16.820571 27475 net.cpp:200] loss needs backward computation.
I0428 19:52:16.820575 27475 net.cpp:200] relu3 needs backward computation.
I0428 19:52:16.820578 27475 net.cpp:200] ip3 needs backward computation.
I0428 19:52:16.820580 27475 net.cpp:200] relu2 needs backward computation.
I0428 19:52:16.820583 27475 net.cpp:200] ip2 needs backward computation.
I0428 19:52:16.820587 27475 net.cpp:200] relu1 needs backward computation.
I0428 19:52:16.820590 27475 net.cpp:200] ip1 needs backward computation.
I0428 19:52:16.820592 27475 net.cpp:200] pool1 needs backward computation.
I0428 19:52:16.820595 27475 net.cpp:200] conv1 needs backward computation.
I0428 19:52:16.820598 27475 net.cpp:200] pool0 needs backward computation.
I0428 19:52:16.820601 27475 net.cpp:200] conv0 needs backward computation.
I0428 19:52:16.820605 27475 net.cpp:202] mnist does not need backward computation.
I0428 19:52:16.820607 27475 net.cpp:244] This network produces output loss
I0428 19:52:16.820616 27475 net.cpp:257] Network initialization done.
I0428 19:52:16.820966 27475 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test657.prototxt
I0428 19:52:16.820996 27475 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:16.821092 27475 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:16.821204 27475 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:16.821245 27475 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:16.821257 27475 net.cpp:86] Creating Layer mnist
I0428 19:52:16.821262 27475 net.cpp:382] mnist -> data
I0428 19:52:16.821285 27475 net.cpp:382] mnist -> label
I0428 19:52:16.821365 27475 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:16.823520 27475 net.cpp:124] Setting up mnist
I0428 19:52:16.823549 27475 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:16.823570 27475 net.cpp:131] Top shape: 100 (100)
I0428 19:52:16.823572 27475 net.cpp:139] Memory required for data: 314000
I0428 19:52:16.823576 27475 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:16.823586 27475 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:16.823590 27475 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:16.823596 27475 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:16.823602 27475 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:16.823673 27475 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:16.823680 27475 net.cpp:131] Top shape: 100 (100)
I0428 19:52:16.823684 27475 net.cpp:131] Top shape: 100 (100)
I0428 19:52:16.823688 27475 net.cpp:139] Memory required for data: 314800
I0428 19:52:16.823690 27475 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:16.823701 27475 net.cpp:86] Creating Layer conv0
I0428 19:52:16.823705 27475 net.cpp:408] conv0 <- data
I0428 19:52:16.823710 27475 net.cpp:382] conv0 -> conv0
I0428 19:52:16.825377 27475 net.cpp:124] Setting up conv0
I0428 19:52:16.825393 27475 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:16.825412 27475 net.cpp:139] Memory required for data: 1466800
I0428 19:52:16.825423 27475 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:16.825446 27475 net.cpp:86] Creating Layer pool0
I0428 19:52:16.825450 27475 net.cpp:408] pool0 <- conv0
I0428 19:52:16.825456 27475 net.cpp:382] pool0 -> pool0
I0428 19:52:16.825494 27475 net.cpp:124] Setting up pool0
I0428 19:52:16.825498 27475 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:16.825502 27475 net.cpp:139] Memory required for data: 1754800
I0428 19:52:16.825505 27475 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:16.825515 27475 net.cpp:86] Creating Layer conv1
I0428 19:52:16.825518 27475 net.cpp:408] conv1 <- pool0
I0428 19:52:16.825523 27475 net.cpp:382] conv1 -> conv1
I0428 19:52:16.827782 27475 net.cpp:124] Setting up conv1
I0428 19:52:16.827795 27475 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:16.827798 27475 net.cpp:139] Memory required for data: 2394800
I0428 19:52:16.827810 27475 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:16.827816 27475 net.cpp:86] Creating Layer pool1
I0428 19:52:16.827818 27475 net.cpp:408] pool1 <- conv1
I0428 19:52:16.827839 27475 net.cpp:382] pool1 -> pool1
I0428 19:52:16.827930 27475 net.cpp:124] Setting up pool1
I0428 19:52:16.827937 27475 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:16.827940 27475 net.cpp:139] Memory required for data: 2554800
I0428 19:52:16.827944 27475 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:16.827950 27475 net.cpp:86] Creating Layer ip1
I0428 19:52:16.827953 27475 net.cpp:408] ip1 <- pool1
I0428 19:52:16.827960 27475 net.cpp:382] ip1 -> ip1
I0428 19:52:16.828176 27475 net.cpp:124] Setting up ip1
I0428 19:52:16.828183 27475 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:16.828197 27475 net.cpp:139] Memory required for data: 2574800
I0428 19:52:16.828204 27475 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:16.828212 27475 net.cpp:86] Creating Layer relu1
I0428 19:52:16.828214 27475 net.cpp:408] relu1 <- ip1
I0428 19:52:16.828219 27475 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:16.828413 27475 net.cpp:124] Setting up relu1
I0428 19:52:16.828423 27475 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:16.828425 27475 net.cpp:139] Memory required for data: 2594800
I0428 19:52:16.828428 27475 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:16.828436 27475 net.cpp:86] Creating Layer ip2
I0428 19:52:16.828439 27475 net.cpp:408] ip2 <- ip1
I0428 19:52:16.828444 27475 net.cpp:382] ip2 -> ip2
I0428 19:52:16.828552 27475 net.cpp:124] Setting up ip2
I0428 19:52:16.828558 27475 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:16.828562 27475 net.cpp:139] Memory required for data: 2604800
I0428 19:52:16.828567 27475 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:16.828572 27475 net.cpp:86] Creating Layer relu2
I0428 19:52:16.828574 27475 net.cpp:408] relu2 <- ip2
I0428 19:52:16.828578 27475 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:16.828760 27475 net.cpp:124] Setting up relu2
I0428 19:52:16.828768 27475 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:16.828771 27475 net.cpp:139] Memory required for data: 2614800
I0428 19:52:16.828774 27475 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:16.828780 27475 net.cpp:86] Creating Layer ip3
I0428 19:52:16.828783 27475 net.cpp:408] ip3 <- ip2
I0428 19:52:16.828791 27475 net.cpp:382] ip3 -> ip3
I0428 19:52:16.828933 27475 net.cpp:124] Setting up ip3
I0428 19:52:16.828940 27475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:16.828944 27475 net.cpp:139] Memory required for data: 2618800
I0428 19:52:16.828953 27475 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:16.828971 27475 net.cpp:86] Creating Layer relu3
I0428 19:52:16.828974 27475 net.cpp:408] relu3 <- ip3
I0428 19:52:16.828979 27475 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:16.829761 27475 net.cpp:124] Setting up relu3
I0428 19:52:16.829772 27475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:16.829777 27475 net.cpp:139] Memory required for data: 2622800
I0428 19:52:16.829779 27475 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:16.829784 27475 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:16.829788 27475 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:16.829794 27475 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:16.829800 27475 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:16.829838 27475 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:16.829845 27475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:16.829850 27475 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:16.829854 27475 net.cpp:139] Memory required for data: 2630800
I0428 19:52:16.829856 27475 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:16.829861 27475 net.cpp:86] Creating Layer accuracy
I0428 19:52:16.829864 27475 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:16.829867 27475 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:16.829872 27475 net.cpp:382] accuracy -> accuracy
I0428 19:52:16.829879 27475 net.cpp:124] Setting up accuracy
I0428 19:52:16.829882 27475 net.cpp:131] Top shape: (1)
I0428 19:52:16.829885 27475 net.cpp:139] Memory required for data: 2630804
I0428 19:52:16.829888 27475 layer_factory.hpp:77] Creating layer loss
I0428 19:52:16.829893 27475 net.cpp:86] Creating Layer loss
I0428 19:52:16.829897 27475 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:16.829900 27475 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:16.829905 27475 net.cpp:382] loss -> loss
I0428 19:52:16.829910 27475 layer_factory.hpp:77] Creating layer loss
I0428 19:52:16.830332 27475 net.cpp:124] Setting up loss
I0428 19:52:16.830341 27475 net.cpp:131] Top shape: (1)
I0428 19:52:16.830344 27475 net.cpp:134]     with loss weight 1
I0428 19:52:16.830350 27475 net.cpp:139] Memory required for data: 2630808
I0428 19:52:16.830363 27475 net.cpp:200] loss needs backward computation.
I0428 19:52:16.830368 27475 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:16.830371 27475 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:16.830374 27475 net.cpp:200] relu3 needs backward computation.
I0428 19:52:16.830377 27475 net.cpp:200] ip3 needs backward computation.
I0428 19:52:16.830380 27475 net.cpp:200] relu2 needs backward computation.
I0428 19:52:16.830382 27475 net.cpp:200] ip2 needs backward computation.
I0428 19:52:16.830385 27475 net.cpp:200] relu1 needs backward computation.
I0428 19:52:16.830389 27475 net.cpp:200] ip1 needs backward computation.
I0428 19:52:16.830391 27475 net.cpp:200] pool1 needs backward computation.
I0428 19:52:16.830394 27475 net.cpp:200] conv1 needs backward computation.
I0428 19:52:16.830397 27475 net.cpp:200] pool0 needs backward computation.
I0428 19:52:16.830399 27475 net.cpp:200] conv0 needs backward computation.
I0428 19:52:16.830404 27475 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:16.830407 27475 net.cpp:202] mnist does not need backward computation.
I0428 19:52:16.830410 27475 net.cpp:244] This network produces output accuracy
I0428 19:52:16.830412 27475 net.cpp:244] This network produces output loss
I0428 19:52:16.830425 27475 net.cpp:257] Network initialization done.
I0428 19:52:16.830464 27475 solver.cpp:56] Solver scaffolding done.
I0428 19:52:16.830801 27475 caffe.cpp:248] Starting Optimization
I0428 19:52:16.830806 27475 solver.cpp:273] Solving LeNet
I0428 19:52:16.830811 27475 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:16.831001 27475 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:16.864583 27475 blocking_queue.cpp:49] Waiting for data
I0428 19:52:16.878737 27482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:16.879333 27475 solver.cpp:398]     Test net output #0: accuracy = 0.1203
I0428 19:52:16.879366 27475 solver.cpp:398]     Test net output #1: loss = 2.30162 (* 1 = 2.30162 loss)
I0428 19:52:16.881860 27475 solver.cpp:219] Iteration 0 (0 iter/s, 0.0510249s/100 iters), loss = 2.29637
I0428 19:52:16.881897 27475 solver.cpp:238]     Train net output #0: loss = 2.29637 (* 1 = 2.29637 loss)
I0428 19:52:16.881923 27475 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:16.966330 27475 solver.cpp:219] Iteration 100 (1184.56 iter/s, 0.0844194s/100 iters), loss = 0.422636
I0428 19:52:16.966369 27475 solver.cpp:238]     Train net output #0: loss = 0.422636 (* 1 = 0.422636 loss)
I0428 19:52:16.966377 27475 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:17.050254 27475 solver.cpp:219] Iteration 200 (1192.01 iter/s, 0.0838922s/100 iters), loss = 0.26648
I0428 19:52:17.050293 27475 solver.cpp:238]     Train net output #0: loss = 0.26648 (* 1 = 0.26648 loss)
I0428 19:52:17.050299 27475 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:17.134477 27475 solver.cpp:219] Iteration 300 (1187.79 iter/s, 0.0841902s/100 iters), loss = 0.305667
I0428 19:52:17.134516 27475 solver.cpp:238]     Train net output #0: loss = 0.305667 (* 1 = 0.305667 loss)
I0428 19:52:17.134522 27475 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:17.219046 27475 solver.cpp:219] Iteration 400 (1182.94 iter/s, 0.0845353s/100 iters), loss = 0.14694
I0428 19:52:17.219070 27475 solver.cpp:238]     Train net output #0: loss = 0.14694 (* 1 = 0.14694 loss)
I0428 19:52:17.219076 27475 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:17.301906 27475 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:17.348778 27482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:17.349315 27475 solver.cpp:398]     Test net output #0: accuracy = 0.9644
I0428 19:52:17.349349 27475 solver.cpp:398]     Test net output #1: loss = 0.111755 (* 1 = 0.111755 loss)
I0428 19:52:17.350283 27475 solver.cpp:219] Iteration 500 (762.188 iter/s, 0.131201s/100 iters), loss = 0.0799218
I0428 19:52:17.350327 27475 solver.cpp:238]     Train net output #0: loss = 0.0799218 (* 1 = 0.0799218 loss)
I0428 19:52:17.350348 27475 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:17.446615 27475 solver.cpp:219] Iteration 600 (1038.63 iter/s, 0.0962809s/100 iters), loss = 0.118405
I0428 19:52:17.446658 27475 solver.cpp:238]     Train net output #0: loss = 0.118405 (* 1 = 0.118405 loss)
I0428 19:52:17.446679 27475 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:17.533519 27475 solver.cpp:219] Iteration 700 (1151.17 iter/s, 0.0868679s/100 iters), loss = 0.129774
I0428 19:52:17.533560 27475 solver.cpp:238]     Train net output #0: loss = 0.129774 (* 1 = 0.129774 loss)
I0428 19:52:17.533566 27475 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:17.618031 27475 solver.cpp:219] Iteration 800 (1183.74 iter/s, 0.0844778s/100 iters), loss = 0.526217
I0428 19:52:17.618072 27475 solver.cpp:238]     Train net output #0: loss = 0.526217 (* 1 = 0.526217 loss)
I0428 19:52:17.618078 27475 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:17.703233 27475 solver.cpp:219] Iteration 900 (1174.16 iter/s, 0.0851671s/100 iters), loss = 0.180515
I0428 19:52:17.703289 27475 solver.cpp:238]     Train net output #0: loss = 0.180515 (* 1 = 0.180515 loss)
I0428 19:52:17.703296 27475 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:17.731307 27481 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:17.786782 27475 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:17.787896 27475 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:17.788521 27475 solver.cpp:311] Iteration 1000, loss = 0.141144
I0428 19:52:17.788537 27475 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:17.832536 27482 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:17.833765 27475 solver.cpp:398]     Test net output #0: accuracy = 0.9765
I0428 19:52:17.833806 27475 solver.cpp:398]     Test net output #1: loss = 0.0747715 (* 1 = 0.0747715 loss)
I0428 19:52:17.833814 27475 solver.cpp:316] Optimization Done.
I0428 19:52:17.833818 27475 caffe.cpp:259] Optimization Done.
