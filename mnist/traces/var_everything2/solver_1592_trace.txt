I0428 20:33:39.569681  4326 caffe.cpp:218] Using GPUs 0
I0428 20:33:39.613528  4326 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:40.130761  4326 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1592.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:40.130928  4326 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1592.prototxt
I0428 20:33:40.131577  4326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:40.131606  4326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:40.131770  4326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:40.131889  4326 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:40.132025  4326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:40.132061  4326 net.cpp:86] Creating Layer mnist
I0428 20:33:40.132076  4326 net.cpp:382] mnist -> data
I0428 20:33:40.132107  4326 net.cpp:382] mnist -> label
I0428 20:33:40.133667  4326 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:40.136730  4326 net.cpp:124] Setting up mnist
I0428 20:33:40.136749  4326 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:40.136756  4326 net.cpp:131] Top shape: 64 (64)
I0428 20:33:40.136759  4326 net.cpp:139] Memory required for data: 200960
I0428 20:33:40.136767  4326 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:40.136785  4326 net.cpp:86] Creating Layer conv0
I0428 20:33:40.136819  4326 net.cpp:408] conv0 <- data
I0428 20:33:40.136840  4326 net.cpp:382] conv0 -> conv0
I0428 20:33:40.429154  4326 net.cpp:124] Setting up conv0
I0428 20:33:40.429186  4326 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:40.429191  4326 net.cpp:139] Memory required for data: 14946560
I0428 20:33:40.429208  4326 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:40.429224  4326 net.cpp:86] Creating Layer pool0
I0428 20:33:40.429229  4326 net.cpp:408] pool0 <- conv0
I0428 20:33:40.429234  4326 net.cpp:382] pool0 -> pool0
I0428 20:33:40.429304  4326 net.cpp:124] Setting up pool0
I0428 20:33:40.429319  4326 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:40.429325  4326 net.cpp:139] Memory required for data: 18632960
I0428 20:33:40.429332  4326 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:40.429349  4326 net.cpp:86] Creating Layer conv1
I0428 20:33:40.429356  4326 net.cpp:408] conv1 <- pool0
I0428 20:33:40.429365  4326 net.cpp:382] conv1 -> conv1
I0428 20:33:40.432468  4326 net.cpp:124] Setting up conv1
I0428 20:33:40.432487  4326 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:40.432490  4326 net.cpp:139] Memory required for data: 19042560
I0428 20:33:40.432500  4326 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:40.432509  4326 net.cpp:86] Creating Layer pool1
I0428 20:33:40.432513  4326 net.cpp:408] pool1 <- conv1
I0428 20:33:40.432519  4326 net.cpp:382] pool1 -> pool1
I0428 20:33:40.432572  4326 net.cpp:124] Setting up pool1
I0428 20:33:40.432585  4326 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:40.432590  4326 net.cpp:139] Memory required for data: 19144960
I0428 20:33:40.432596  4326 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:40.432610  4326 net.cpp:86] Creating Layer ip1
I0428 20:33:40.432616  4326 net.cpp:408] ip1 <- pool1
I0428 20:33:40.432626  4326 net.cpp:382] ip1 -> ip1
I0428 20:33:40.433039  4326 net.cpp:124] Setting up ip1
I0428 20:33:40.433053  4326 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:40.433059  4326 net.cpp:139] Memory required for data: 19157760
I0428 20:33:40.433073  4326 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:40.433082  4326 net.cpp:86] Creating Layer relu1
I0428 20:33:40.433089  4326 net.cpp:408] relu1 <- ip1
I0428 20:33:40.433097  4326 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:40.433348  4326 net.cpp:124] Setting up relu1
I0428 20:33:40.433363  4326 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:40.433370  4326 net.cpp:139] Memory required for data: 19170560
I0428 20:33:40.433377  4326 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:40.433387  4326 net.cpp:86] Creating Layer ip2
I0428 20:33:40.433394  4326 net.cpp:408] ip2 <- ip1
I0428 20:33:40.433404  4326 net.cpp:382] ip2 -> ip2
I0428 20:33:40.433557  4326 net.cpp:124] Setting up ip2
I0428 20:33:40.433570  4326 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:40.433576  4326 net.cpp:139] Memory required for data: 19173120
I0428 20:33:40.433586  4326 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:40.433598  4326 net.cpp:86] Creating Layer relu2
I0428 20:33:40.433604  4326 net.cpp:408] relu2 <- ip2
I0428 20:33:40.433612  4326 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:40.434767  4326 net.cpp:124] Setting up relu2
I0428 20:33:40.434785  4326 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:40.434792  4326 net.cpp:139] Memory required for data: 19175680
I0428 20:33:40.434799  4326 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:40.434810  4326 net.cpp:86] Creating Layer ip3
I0428 20:33:40.434818  4326 net.cpp:408] ip3 <- ip2
I0428 20:33:40.434828  4326 net.cpp:382] ip3 -> ip3
I0428 20:33:40.434975  4326 net.cpp:124] Setting up ip3
I0428 20:33:40.434990  4326 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:40.434996  4326 net.cpp:139] Memory required for data: 19178240
I0428 20:33:40.435010  4326 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:40.435019  4326 net.cpp:86] Creating Layer relu3
I0428 20:33:40.435025  4326 net.cpp:408] relu3 <- ip3
I0428 20:33:40.435034  4326 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:40.435281  4326 net.cpp:124] Setting up relu3
I0428 20:33:40.435295  4326 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:40.435302  4326 net.cpp:139] Memory required for data: 19180800
I0428 20:33:40.435308  4326 layer_factory.hpp:77] Creating layer loss
I0428 20:33:40.435317  4326 net.cpp:86] Creating Layer loss
I0428 20:33:40.435323  4326 net.cpp:408] loss <- ip3
I0428 20:33:40.435330  4326 net.cpp:408] loss <- label
I0428 20:33:40.435339  4326 net.cpp:382] loss -> loss
I0428 20:33:40.435365  4326 layer_factory.hpp:77] Creating layer loss
I0428 20:33:40.435720  4326 net.cpp:124] Setting up loss
I0428 20:33:40.435735  4326 net.cpp:131] Top shape: (1)
I0428 20:33:40.435742  4326 net.cpp:134]     with loss weight 1
I0428 20:33:40.435763  4326 net.cpp:139] Memory required for data: 19180804
I0428 20:33:40.435770  4326 net.cpp:200] loss needs backward computation.
I0428 20:33:40.435777  4326 net.cpp:200] relu3 needs backward computation.
I0428 20:33:40.435783  4326 net.cpp:200] ip3 needs backward computation.
I0428 20:33:40.435789  4326 net.cpp:200] relu2 needs backward computation.
I0428 20:33:40.435796  4326 net.cpp:200] ip2 needs backward computation.
I0428 20:33:40.435801  4326 net.cpp:200] relu1 needs backward computation.
I0428 20:33:40.435807  4326 net.cpp:200] ip1 needs backward computation.
I0428 20:33:40.435812  4326 net.cpp:200] pool1 needs backward computation.
I0428 20:33:40.435818  4326 net.cpp:200] conv1 needs backward computation.
I0428 20:33:40.435825  4326 net.cpp:200] pool0 needs backward computation.
I0428 20:33:40.435832  4326 net.cpp:200] conv0 needs backward computation.
I0428 20:33:40.435837  4326 net.cpp:202] mnist does not need backward computation.
I0428 20:33:40.435843  4326 net.cpp:244] This network produces output loss
I0428 20:33:40.435859  4326 net.cpp:257] Network initialization done.
I0428 20:33:40.436415  4326 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1592.prototxt
I0428 20:33:40.436461  4326 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:40.436621  4326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:40.436750  4326 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:40.436821  4326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:40.436841  4326 net.cpp:86] Creating Layer mnist
I0428 20:33:40.436849  4326 net.cpp:382] mnist -> data
I0428 20:33:40.436862  4326 net.cpp:382] mnist -> label
I0428 20:33:40.436992  4326 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:40.439577  4326 net.cpp:124] Setting up mnist
I0428 20:33:40.439592  4326 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:40.439597  4326 net.cpp:131] Top shape: 100 (100)
I0428 20:33:40.439601  4326 net.cpp:139] Memory required for data: 314000
I0428 20:33:40.439605  4326 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:40.439613  4326 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:40.439617  4326 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:40.439622  4326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:40.439630  4326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:40.439749  4326 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:40.439764  4326 net.cpp:131] Top shape: 100 (100)
I0428 20:33:40.439770  4326 net.cpp:131] Top shape: 100 (100)
I0428 20:33:40.439776  4326 net.cpp:139] Memory required for data: 314800
I0428 20:33:40.439782  4326 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:40.439797  4326 net.cpp:86] Creating Layer conv0
I0428 20:33:40.439803  4326 net.cpp:408] conv0 <- data
I0428 20:33:40.439813  4326 net.cpp:382] conv0 -> conv0
I0428 20:33:40.441970  4326 net.cpp:124] Setting up conv0
I0428 20:33:40.441987  4326 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:40.441990  4326 net.cpp:139] Memory required for data: 23354800
I0428 20:33:40.442001  4326 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:40.442008  4326 net.cpp:86] Creating Layer pool0
I0428 20:33:40.442013  4326 net.cpp:408] pool0 <- conv0
I0428 20:33:40.442018  4326 net.cpp:382] pool0 -> pool0
I0428 20:33:40.442070  4326 net.cpp:124] Setting up pool0
I0428 20:33:40.442081  4326 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:40.442086  4326 net.cpp:139] Memory required for data: 29114800
I0428 20:33:40.442093  4326 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:40.442108  4326 net.cpp:86] Creating Layer conv1
I0428 20:33:40.442114  4326 net.cpp:408] conv1 <- pool0
I0428 20:33:40.442124  4326 net.cpp:382] conv1 -> conv1
I0428 20:33:40.444695  4326 net.cpp:124] Setting up conv1
I0428 20:33:40.444711  4326 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:40.444715  4326 net.cpp:139] Memory required for data: 29754800
I0428 20:33:40.444725  4326 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:40.444732  4326 net.cpp:86] Creating Layer pool1
I0428 20:33:40.444737  4326 net.cpp:408] pool1 <- conv1
I0428 20:33:40.444743  4326 net.cpp:382] pool1 -> pool1
I0428 20:33:40.444793  4326 net.cpp:124] Setting up pool1
I0428 20:33:40.444805  4326 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:40.444820  4326 net.cpp:139] Memory required for data: 29914800
I0428 20:33:40.444828  4326 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:40.444842  4326 net.cpp:86] Creating Layer ip1
I0428 20:33:40.444849  4326 net.cpp:408] ip1 <- pool1
I0428 20:33:40.444859  4326 net.cpp:382] ip1 -> ip1
I0428 20:33:40.445258  4326 net.cpp:124] Setting up ip1
I0428 20:33:40.445282  4326 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:40.445303  4326 net.cpp:139] Memory required for data: 29934800
I0428 20:33:40.445314  4326 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:40.445322  4326 net.cpp:86] Creating Layer relu1
I0428 20:33:40.445328  4326 net.cpp:408] relu1 <- ip1
I0428 20:33:40.445335  4326 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:40.445649  4326 net.cpp:124] Setting up relu1
I0428 20:33:40.445678  4326 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:40.445699  4326 net.cpp:139] Memory required for data: 29954800
I0428 20:33:40.445705  4326 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:40.445727  4326 net.cpp:86] Creating Layer ip2
I0428 20:33:40.445734  4326 net.cpp:408] ip2 <- ip1
I0428 20:33:40.445744  4326 net.cpp:382] ip2 -> ip2
I0428 20:33:40.445894  4326 net.cpp:124] Setting up ip2
I0428 20:33:40.445905  4326 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:40.445911  4326 net.cpp:139] Memory required for data: 29958800
I0428 20:33:40.445920  4326 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:40.445947  4326 net.cpp:86] Creating Layer relu2
I0428 20:33:40.445967  4326 net.cpp:408] relu2 <- ip2
I0428 20:33:40.445976  4326 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:40.446192  4326 net.cpp:124] Setting up relu2
I0428 20:33:40.446203  4326 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:40.446209  4326 net.cpp:139] Memory required for data: 29962800
I0428 20:33:40.446215  4326 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:40.446223  4326 net.cpp:86] Creating Layer ip3
I0428 20:33:40.446229  4326 net.cpp:408] ip3 <- ip2
I0428 20:33:40.446238  4326 net.cpp:382] ip3 -> ip3
I0428 20:33:40.446363  4326 net.cpp:124] Setting up ip3
I0428 20:33:40.446374  4326 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:40.446379  4326 net.cpp:139] Memory required for data: 29966800
I0428 20:33:40.446391  4326 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:40.446399  4326 net.cpp:86] Creating Layer relu3
I0428 20:33:40.446405  4326 net.cpp:408] relu3 <- ip3
I0428 20:33:40.446413  4326 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:40.447558  4326 net.cpp:124] Setting up relu3
I0428 20:33:40.447592  4326 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:40.447597  4326 net.cpp:139] Memory required for data: 29970800
I0428 20:33:40.447603  4326 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:40.447626  4326 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:40.447633  4326 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:40.447639  4326 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:40.447649  4326 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:40.447698  4326 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:40.447710  4326 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:40.447715  4326 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:40.447721  4326 net.cpp:139] Memory required for data: 29978800
I0428 20:33:40.447726  4326 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:40.447733  4326 net.cpp:86] Creating Layer accuracy
I0428 20:33:40.447738  4326 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:40.447746  4326 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:40.447752  4326 net.cpp:382] accuracy -> accuracy
I0428 20:33:40.447762  4326 net.cpp:124] Setting up accuracy
I0428 20:33:40.447769  4326 net.cpp:131] Top shape: (1)
I0428 20:33:40.447774  4326 net.cpp:139] Memory required for data: 29978804
I0428 20:33:40.447779  4326 layer_factory.hpp:77] Creating layer loss
I0428 20:33:40.447787  4326 net.cpp:86] Creating Layer loss
I0428 20:33:40.447791  4326 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:40.447798  4326 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:40.447804  4326 net.cpp:382] loss -> loss
I0428 20:33:40.447813  4326 layer_factory.hpp:77] Creating layer loss
I0428 20:33:40.448202  4326 net.cpp:124] Setting up loss
I0428 20:33:40.448231  4326 net.cpp:131] Top shape: (1)
I0428 20:33:40.448237  4326 net.cpp:134]     with loss weight 1
I0428 20:33:40.448258  4326 net.cpp:139] Memory required for data: 29978808
I0428 20:33:40.448266  4326 net.cpp:200] loss needs backward computation.
I0428 20:33:40.448272  4326 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:40.448278  4326 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:40.448284  4326 net.cpp:200] relu3 needs backward computation.
I0428 20:33:40.448288  4326 net.cpp:200] ip3 needs backward computation.
I0428 20:33:40.448294  4326 net.cpp:200] relu2 needs backward computation.
I0428 20:33:40.448299  4326 net.cpp:200] ip2 needs backward computation.
I0428 20:33:40.448305  4326 net.cpp:200] relu1 needs backward computation.
I0428 20:33:40.448310  4326 net.cpp:200] ip1 needs backward computation.
I0428 20:33:40.448315  4326 net.cpp:200] pool1 needs backward computation.
I0428 20:33:40.448320  4326 net.cpp:200] conv1 needs backward computation.
I0428 20:33:40.448326  4326 net.cpp:200] pool0 needs backward computation.
I0428 20:33:40.448331  4326 net.cpp:200] conv0 needs backward computation.
I0428 20:33:40.448338  4326 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:40.448344  4326 net.cpp:202] mnist does not need backward computation.
I0428 20:33:40.448348  4326 net.cpp:244] This network produces output accuracy
I0428 20:33:40.448354  4326 net.cpp:244] This network produces output loss
I0428 20:33:40.448370  4326 net.cpp:257] Network initialization done.
I0428 20:33:40.448429  4326 solver.cpp:56] Solver scaffolding done.
I0428 20:33:40.448911  4326 caffe.cpp:248] Starting Optimization
I0428 20:33:40.448937  4326 solver.cpp:273] Solving LeNet
I0428 20:33:40.448957  4326 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:40.450153  4326 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:40.548580  4333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:40.551301  4326 solver.cpp:398]     Test net output #0: accuracy = 0.0814
I0428 20:33:40.551352  4326 solver.cpp:398]     Test net output #1: loss = 2.32316 (* 1 = 2.32316 loss)
I0428 20:33:40.556147  4326 solver.cpp:219] Iteration 0 (-1.73488e-31 iter/s, 0.107161s/100 iters), loss = 2.30761
I0428 20:33:40.556186  4326 solver.cpp:238]     Train net output #0: loss = 2.30761 (* 1 = 2.30761 loss)
I0428 20:33:40.556197  4326 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:40.779203  4326 solver.cpp:219] Iteration 100 (448.405 iter/s, 0.223013s/100 iters), loss = 0.52303
I0428 20:33:40.779249  4326 solver.cpp:238]     Train net output #0: loss = 0.52303 (* 1 = 0.52303 loss)
I0428 20:33:40.779261  4326 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:41.007613  4326 solver.cpp:219] Iteration 200 (437.93 iter/s, 0.228347s/100 iters), loss = 0.23473
I0428 20:33:41.007661  4326 solver.cpp:238]     Train net output #0: loss = 0.23473 (* 1 = 0.23473 loss)
I0428 20:33:41.007674  4326 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:41.236831  4326 solver.cpp:219] Iteration 300 (436.394 iter/s, 0.229151s/100 iters), loss = 0.197283
I0428 20:33:41.236879  4326 solver.cpp:238]     Train net output #0: loss = 0.197283 (* 1 = 0.197283 loss)
I0428 20:33:41.236891  4326 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:41.465601  4326 solver.cpp:219] Iteration 400 (437.25 iter/s, 0.228702s/100 iters), loss = 0.102618
I0428 20:33:41.465646  4326 solver.cpp:238]     Train net output #0: loss = 0.102618 (* 1 = 0.102618 loss)
I0428 20:33:41.465657  4326 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:41.688490  4326 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:41.791929  4333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:41.794886  4326 solver.cpp:398]     Test net output #0: accuracy = 0.9688
I0428 20:33:41.794916  4326 solver.cpp:398]     Test net output #1: loss = 0.102446 (* 1 = 0.102446 loss)
I0428 20:33:41.797067  4326 solver.cpp:219] Iteration 500 (301.748 iter/s, 0.331402s/100 iters), loss = 0.114362
I0428 20:33:41.797097  4326 solver.cpp:238]     Train net output #0: loss = 0.114362 (* 1 = 0.114362 loss)
I0428 20:33:41.797123  4326 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:42.013809  4326 solver.cpp:219] Iteration 600 (461.476 iter/s, 0.216696s/100 iters), loss = 0.0780187
I0428 20:33:42.013844  4326 solver.cpp:238]     Train net output #0: loss = 0.0780189 (* 1 = 0.0780189 loss)
I0428 20:33:42.013854  4326 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:42.235718  4326 solver.cpp:219] Iteration 700 (450.743 iter/s, 0.221856s/100 iters), loss = 0.128144
I0428 20:33:42.235756  4326 solver.cpp:238]     Train net output #0: loss = 0.128144 (* 1 = 0.128144 loss)
I0428 20:33:42.235766  4326 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:42.453573  4326 solver.cpp:219] Iteration 800 (459.131 iter/s, 0.217803s/100 iters), loss = 0.235712
I0428 20:33:42.453608  4326 solver.cpp:238]     Train net output #0: loss = 0.235712 (* 1 = 0.235712 loss)
I0428 20:33:42.453615  4326 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:42.666126  4326 solver.cpp:219] Iteration 900 (470.594 iter/s, 0.212497s/100 iters), loss = 0.128512
I0428 20:33:42.666172  4326 solver.cpp:238]     Train net output #0: loss = 0.128512 (* 1 = 0.128512 loss)
I0428 20:33:42.666180  4326 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:42.737243  4332 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:42.880163  4326 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:42.883478  4326 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:42.885890  4326 solver.cpp:311] Iteration 1000, loss = 0.0885945
I0428 20:33:42.885915  4326 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:42.985836  4333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:42.988751  4326 solver.cpp:398]     Test net output #0: accuracy = 0.9777
I0428 20:33:42.988777  4326 solver.cpp:398]     Test net output #1: loss = 0.0711741 (* 1 = 0.0711741 loss)
I0428 20:33:42.988785  4326 solver.cpp:316] Optimization Done.
I0428 20:33:42.988791  4326 caffe.cpp:259] Optimization Done.
