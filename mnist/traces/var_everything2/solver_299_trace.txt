I0428 19:39:16.299486 24256 caffe.cpp:218] Using GPUs 0
I0428 19:39:16.336263 24256 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:16.796124 24256 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test299.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:16.796306 24256 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test299.prototxt
I0428 19:39:16.797220 24256 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:16.797238 24256 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:16.797319 24256 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:16.797401 24256 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:16.797502 24256 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:16.797524 24256 net.cpp:86] Creating Layer mnist
I0428 19:39:16.797534 24256 net.cpp:382] mnist -> data
I0428 19:39:16.797554 24256 net.cpp:382] mnist -> label
I0428 19:39:16.798557 24256 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:16.800875 24256 net.cpp:124] Setting up mnist
I0428 19:39:16.800891 24256 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:16.800896 24256 net.cpp:131] Top shape: 64 (64)
I0428 19:39:16.800899 24256 net.cpp:139] Memory required for data: 200960
I0428 19:39:16.800905 24256 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:16.800921 24256 net.cpp:86] Creating Layer conv0
I0428 19:39:16.800940 24256 net.cpp:408] conv0 <- data
I0428 19:39:16.800967 24256 net.cpp:382] conv0 -> conv0
I0428 19:39:17.031949 24256 net.cpp:124] Setting up conv0
I0428 19:39:17.031975 24256 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:17.031978 24256 net.cpp:139] Memory required for data: 495872
I0428 19:39:17.031992 24256 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:17.032019 24256 net.cpp:86] Creating Layer pool0
I0428 19:39:17.032023 24256 net.cpp:408] pool0 <- conv0
I0428 19:39:17.032028 24256 net.cpp:382] pool0 -> pool0
I0428 19:39:17.032089 24256 net.cpp:124] Setting up pool0
I0428 19:39:17.032095 24256 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:17.032097 24256 net.cpp:139] Memory required for data: 569600
I0428 19:39:17.032100 24256 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:17.032111 24256 net.cpp:86] Creating Layer conv1
I0428 19:39:17.032114 24256 net.cpp:408] conv1 <- pool0
I0428 19:39:17.032119 24256 net.cpp:382] conv1 -> conv1
I0428 19:39:17.034006 24256 net.cpp:124] Setting up conv1
I0428 19:39:17.034037 24256 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:17.034041 24256 net.cpp:139] Memory required for data: 602368
I0428 19:39:17.034049 24256 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:17.034057 24256 net.cpp:86] Creating Layer pool1
I0428 19:39:17.034061 24256 net.cpp:408] pool1 <- conv1
I0428 19:39:17.034066 24256 net.cpp:382] pool1 -> pool1
I0428 19:39:17.034104 24256 net.cpp:124] Setting up pool1
I0428 19:39:17.034111 24256 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:17.034114 24256 net.cpp:139] Memory required for data: 610560
I0428 19:39:17.034117 24256 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:17.034124 24256 net.cpp:86] Creating Layer ip1
I0428 19:39:17.034127 24256 net.cpp:408] ip1 <- pool1
I0428 19:39:17.034132 24256 net.cpp:382] ip1 -> ip1
I0428 19:39:17.034247 24256 net.cpp:124] Setting up ip1
I0428 19:39:17.034256 24256 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:17.034260 24256 net.cpp:139] Memory required for data: 616960
I0428 19:39:17.034267 24256 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:17.034278 24256 net.cpp:86] Creating Layer relu1
I0428 19:39:17.034282 24256 net.cpp:408] relu1 <- ip1
I0428 19:39:17.034287 24256 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:17.034466 24256 net.cpp:124] Setting up relu1
I0428 19:39:17.034474 24256 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:17.034478 24256 net.cpp:139] Memory required for data: 623360
I0428 19:39:17.034482 24256 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:17.034488 24256 net.cpp:86] Creating Layer ip2
I0428 19:39:17.034492 24256 net.cpp:408] ip2 <- ip1
I0428 19:39:17.034498 24256 net.cpp:382] ip2 -> ip2
I0428 19:39:17.034608 24256 net.cpp:124] Setting up ip2
I0428 19:39:17.034615 24256 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:17.034620 24256 net.cpp:139] Memory required for data: 629760
I0428 19:39:17.034624 24256 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:17.034631 24256 net.cpp:86] Creating Layer relu2
I0428 19:39:17.034633 24256 net.cpp:408] relu2 <- ip2
I0428 19:39:17.034637 24256 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:17.035432 24256 net.cpp:124] Setting up relu2
I0428 19:39:17.035444 24256 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:39:17.035465 24256 net.cpp:139] Memory required for data: 636160
I0428 19:39:17.035467 24256 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:17.035475 24256 net.cpp:86] Creating Layer ip3
I0428 19:39:17.035480 24256 net.cpp:408] ip3 <- ip2
I0428 19:39:17.035485 24256 net.cpp:382] ip3 -> ip3
I0428 19:39:17.035584 24256 net.cpp:124] Setting up ip3
I0428 19:39:17.035593 24256 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:17.035595 24256 net.cpp:139] Memory required for data: 638720
I0428 19:39:17.035604 24256 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:17.035609 24256 net.cpp:86] Creating Layer relu3
I0428 19:39:17.035612 24256 net.cpp:408] relu3 <- ip3
I0428 19:39:17.035616 24256 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:17.035794 24256 net.cpp:124] Setting up relu3
I0428 19:39:17.035804 24256 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:17.035806 24256 net.cpp:139] Memory required for data: 641280
I0428 19:39:17.035809 24256 layer_factory.hpp:77] Creating layer loss
I0428 19:39:17.035815 24256 net.cpp:86] Creating Layer loss
I0428 19:39:17.035818 24256 net.cpp:408] loss <- ip3
I0428 19:39:17.035822 24256 net.cpp:408] loss <- label
I0428 19:39:17.035827 24256 net.cpp:382] loss -> loss
I0428 19:39:17.035845 24256 layer_factory.hpp:77] Creating layer loss
I0428 19:39:17.036098 24256 net.cpp:124] Setting up loss
I0428 19:39:17.036108 24256 net.cpp:131] Top shape: (1)
I0428 19:39:17.036111 24256 net.cpp:134]     with loss weight 1
I0428 19:39:17.036126 24256 net.cpp:139] Memory required for data: 641284
I0428 19:39:17.036129 24256 net.cpp:200] loss needs backward computation.
I0428 19:39:17.036134 24256 net.cpp:200] relu3 needs backward computation.
I0428 19:39:17.036136 24256 net.cpp:200] ip3 needs backward computation.
I0428 19:39:17.036139 24256 net.cpp:200] relu2 needs backward computation.
I0428 19:39:17.036141 24256 net.cpp:200] ip2 needs backward computation.
I0428 19:39:17.036145 24256 net.cpp:200] relu1 needs backward computation.
I0428 19:39:17.036147 24256 net.cpp:200] ip1 needs backward computation.
I0428 19:39:17.036150 24256 net.cpp:200] pool1 needs backward computation.
I0428 19:39:17.036154 24256 net.cpp:200] conv1 needs backward computation.
I0428 19:39:17.036156 24256 net.cpp:200] pool0 needs backward computation.
I0428 19:39:17.036159 24256 net.cpp:200] conv0 needs backward computation.
I0428 19:39:17.036164 24256 net.cpp:202] mnist does not need backward computation.
I0428 19:39:17.036165 24256 net.cpp:244] This network produces output loss
I0428 19:39:17.036175 24256 net.cpp:257] Network initialization done.
I0428 19:39:17.036551 24256 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test299.prototxt
I0428 19:39:17.036593 24256 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:17.036696 24256 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:17.036788 24256 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:17.036851 24256 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:17.036864 24256 net.cpp:86] Creating Layer mnist
I0428 19:39:17.036870 24256 net.cpp:382] mnist -> data
I0428 19:39:17.036876 24256 net.cpp:382] mnist -> label
I0428 19:39:17.036981 24256 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:17.039002 24256 net.cpp:124] Setting up mnist
I0428 19:39:17.039047 24256 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:17.039068 24256 net.cpp:131] Top shape: 100 (100)
I0428 19:39:17.039072 24256 net.cpp:139] Memory required for data: 314000
I0428 19:39:17.039075 24256 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:17.039082 24256 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:17.039086 24256 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:17.039090 24256 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:17.039098 24256 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:17.039146 24256 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:17.039151 24256 net.cpp:131] Top shape: 100 (100)
I0428 19:39:17.039155 24256 net.cpp:131] Top shape: 100 (100)
I0428 19:39:17.039158 24256 net.cpp:139] Memory required for data: 314800
I0428 19:39:17.039161 24256 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:17.039170 24256 net.cpp:86] Creating Layer conv0
I0428 19:39:17.039173 24256 net.cpp:408] conv0 <- data
I0428 19:39:17.039180 24256 net.cpp:382] conv0 -> conv0
I0428 19:39:17.041018 24256 net.cpp:124] Setting up conv0
I0428 19:39:17.041046 24256 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:17.041050 24256 net.cpp:139] Memory required for data: 775600
I0428 19:39:17.041070 24256 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:17.041081 24256 net.cpp:86] Creating Layer pool0
I0428 19:39:17.041085 24256 net.cpp:408] pool0 <- conv0
I0428 19:39:17.041090 24256 net.cpp:382] pool0 -> pool0
I0428 19:39:17.041128 24256 net.cpp:124] Setting up pool0
I0428 19:39:17.041134 24256 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:17.041137 24256 net.cpp:139] Memory required for data: 890800
I0428 19:39:17.041154 24256 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:17.041163 24256 net.cpp:86] Creating Layer conv1
I0428 19:39:17.041167 24256 net.cpp:408] conv1 <- pool0
I0428 19:39:17.041172 24256 net.cpp:382] conv1 -> conv1
I0428 19:39:17.042778 24256 net.cpp:124] Setting up conv1
I0428 19:39:17.042807 24256 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:17.042811 24256 net.cpp:139] Memory required for data: 942000
I0428 19:39:17.042820 24256 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:17.042829 24256 net.cpp:86] Creating Layer pool1
I0428 19:39:17.042832 24256 net.cpp:408] pool1 <- conv1
I0428 19:39:17.042839 24256 net.cpp:382] pool1 -> pool1
I0428 19:39:17.042878 24256 net.cpp:124] Setting up pool1
I0428 19:39:17.042884 24256 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:17.042893 24256 net.cpp:139] Memory required for data: 954800
I0428 19:39:17.042897 24256 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:17.042904 24256 net.cpp:86] Creating Layer ip1
I0428 19:39:17.042908 24256 net.cpp:408] ip1 <- pool1
I0428 19:39:17.042913 24256 net.cpp:382] ip1 -> ip1
I0428 19:39:17.043020 24256 net.cpp:124] Setting up ip1
I0428 19:39:17.043028 24256 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:17.043047 24256 net.cpp:139] Memory required for data: 964800
I0428 19:39:17.043056 24256 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:17.043061 24256 net.cpp:86] Creating Layer relu1
I0428 19:39:17.043064 24256 net.cpp:408] relu1 <- ip1
I0428 19:39:17.043068 24256 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:17.043236 24256 net.cpp:124] Setting up relu1
I0428 19:39:17.043246 24256 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:17.043249 24256 net.cpp:139] Memory required for data: 974800
I0428 19:39:17.043252 24256 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:17.043259 24256 net.cpp:86] Creating Layer ip2
I0428 19:39:17.043263 24256 net.cpp:408] ip2 <- ip1
I0428 19:39:17.043269 24256 net.cpp:382] ip2 -> ip2
I0428 19:39:17.043390 24256 net.cpp:124] Setting up ip2
I0428 19:39:17.043398 24256 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:17.043401 24256 net.cpp:139] Memory required for data: 984800
I0428 19:39:17.043406 24256 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:17.043411 24256 net.cpp:86] Creating Layer relu2
I0428 19:39:17.043414 24256 net.cpp:408] relu2 <- ip2
I0428 19:39:17.043421 24256 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:17.043648 24256 net.cpp:124] Setting up relu2
I0428 19:39:17.043658 24256 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:39:17.043661 24256 net.cpp:139] Memory required for data: 994800
I0428 19:39:17.043664 24256 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:17.043670 24256 net.cpp:86] Creating Layer ip3
I0428 19:39:17.043689 24256 net.cpp:408] ip3 <- ip2
I0428 19:39:17.043694 24256 net.cpp:382] ip3 -> ip3
I0428 19:39:17.043818 24256 net.cpp:124] Setting up ip3
I0428 19:39:17.043826 24256 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:17.043829 24256 net.cpp:139] Memory required for data: 998800
I0428 19:39:17.043838 24256 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:17.043843 24256 net.cpp:86] Creating Layer relu3
I0428 19:39:17.043845 24256 net.cpp:408] relu3 <- ip3
I0428 19:39:17.043850 24256 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:17.044654 24256 net.cpp:124] Setting up relu3
I0428 19:39:17.044683 24256 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:17.044687 24256 net.cpp:139] Memory required for data: 1002800
I0428 19:39:17.044690 24256 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:17.044697 24256 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:17.044701 24256 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:17.044706 24256 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:17.044713 24256 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:17.044777 24256 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:17.044785 24256 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:17.044790 24256 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:17.044792 24256 net.cpp:139] Memory required for data: 1010800
I0428 19:39:17.044795 24256 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:17.044800 24256 net.cpp:86] Creating Layer accuracy
I0428 19:39:17.044803 24256 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:17.044807 24256 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:17.044834 24256 net.cpp:382] accuracy -> accuracy
I0428 19:39:17.044842 24256 net.cpp:124] Setting up accuracy
I0428 19:39:17.044847 24256 net.cpp:131] Top shape: (1)
I0428 19:39:17.044849 24256 net.cpp:139] Memory required for data: 1010804
I0428 19:39:17.044852 24256 layer_factory.hpp:77] Creating layer loss
I0428 19:39:17.044857 24256 net.cpp:86] Creating Layer loss
I0428 19:39:17.044859 24256 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:17.044863 24256 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:17.044868 24256 net.cpp:382] loss -> loss
I0428 19:39:17.044875 24256 layer_factory.hpp:77] Creating layer loss
I0428 19:39:17.045126 24256 net.cpp:124] Setting up loss
I0428 19:39:17.045136 24256 net.cpp:131] Top shape: (1)
I0428 19:39:17.045140 24256 net.cpp:134]     with loss weight 1
I0428 19:39:17.045162 24256 net.cpp:139] Memory required for data: 1010808
I0428 19:39:17.045189 24256 net.cpp:200] loss needs backward computation.
I0428 19:39:17.045193 24256 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:17.045197 24256 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:17.045200 24256 net.cpp:200] relu3 needs backward computation.
I0428 19:39:17.045202 24256 net.cpp:200] ip3 needs backward computation.
I0428 19:39:17.045205 24256 net.cpp:200] relu2 needs backward computation.
I0428 19:39:17.045208 24256 net.cpp:200] ip2 needs backward computation.
I0428 19:39:17.045212 24256 net.cpp:200] relu1 needs backward computation.
I0428 19:39:17.045230 24256 net.cpp:200] ip1 needs backward computation.
I0428 19:39:17.045240 24256 net.cpp:200] pool1 needs backward computation.
I0428 19:39:17.045243 24256 net.cpp:200] conv1 needs backward computation.
I0428 19:39:17.045246 24256 net.cpp:200] pool0 needs backward computation.
I0428 19:39:17.045249 24256 net.cpp:200] conv0 needs backward computation.
I0428 19:39:17.045253 24256 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:17.045258 24256 net.cpp:202] mnist does not need backward computation.
I0428 19:39:17.045259 24256 net.cpp:244] This network produces output accuracy
I0428 19:39:17.045264 24256 net.cpp:244] This network produces output loss
I0428 19:39:17.045286 24256 net.cpp:257] Network initialization done.
I0428 19:39:17.045328 24256 solver.cpp:56] Solver scaffolding done.
I0428 19:39:17.045688 24256 caffe.cpp:248] Starting Optimization
I0428 19:39:17.045693 24256 solver.cpp:273] Solving LeNet
I0428 19:39:17.045696 24256 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:17.046587 24256 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:17.049262 24256 blocking_queue.cpp:49] Waiting for data
I0428 19:39:17.121939 24263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:17.122371 24256 solver.cpp:398]     Test net output #0: accuracy = 0.0961
I0428 19:39:17.122390 24256 solver.cpp:398]     Test net output #1: loss = 2.30585 (* 1 = 2.30585 loss)
I0428 19:39:17.124063 24256 solver.cpp:219] Iteration 0 (0 iter/s, 0.0783196s/100 iters), loss = 2.30361
I0428 19:39:17.124099 24256 solver.cpp:238]     Train net output #0: loss = 2.30361 (* 1 = 2.30361 loss)
I0428 19:39:17.124111 24256 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:17.192859 24256 solver.cpp:219] Iteration 100 (1454.55 iter/s, 0.0687496s/100 iters), loss = 1.795
I0428 19:39:17.192899 24256 solver.cpp:238]     Train net output #0: loss = 1.795 (* 1 = 1.795 loss)
I0428 19:39:17.192905 24256 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:17.262827 24256 solver.cpp:219] Iteration 200 (1430.19 iter/s, 0.0699208s/100 iters), loss = 0.985013
I0428 19:39:17.262866 24256 solver.cpp:238]     Train net output #0: loss = 0.985013 (* 1 = 0.985013 loss)
I0428 19:39:17.262873 24256 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:17.331140 24256 solver.cpp:219] Iteration 300 (1464.53 iter/s, 0.0682813s/100 iters), loss = 0.935596
I0428 19:39:17.331163 24256 solver.cpp:238]     Train net output #0: loss = 0.935596 (* 1 = 0.935596 loss)
I0428 19:39:17.331169 24256 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:17.399219 24256 solver.cpp:219] Iteration 400 (1469.58 iter/s, 0.0680468s/100 iters), loss = 0.857979
I0428 19:39:17.399257 24256 solver.cpp:238]     Train net output #0: loss = 0.857979 (* 1 = 0.857979 loss)
I0428 19:39:17.399263 24256 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:17.468011 24256 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:17.543915 24263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:17.544385 24256 solver.cpp:398]     Test net output #0: accuracy = 0.62
I0428 19:39:17.544420 24256 solver.cpp:398]     Test net output #1: loss = 1.01168 (* 1 = 1.01168 loss)
I0428 19:39:17.545167 24256 solver.cpp:219] Iteration 500 (685.341 iter/s, 0.145913s/100 iters), loss = 1.07135
I0428 19:39:17.545207 24256 solver.cpp:238]     Train net output #0: loss = 1.07135 (* 1 = 1.07135 loss)
I0428 19:39:17.545228 24256 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:17.615269 24256 solver.cpp:219] Iteration 600 (1427.47 iter/s, 0.0700539s/100 iters), loss = 1.21913
I0428 19:39:17.615309 24256 solver.cpp:238]     Train net output #0: loss = 1.21913 (* 1 = 1.21913 loss)
I0428 19:39:17.615314 24256 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:17.683198 24256 solver.cpp:219] Iteration 700 (1473.15 iter/s, 0.067882s/100 iters), loss = 0.933944
I0428 19:39:17.683236 24256 solver.cpp:238]     Train net output #0: loss = 0.933944 (* 1 = 0.933944 loss)
I0428 19:39:17.683243 24256 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:17.750140 24256 solver.cpp:219] Iteration 800 (1494.54 iter/s, 0.0669103s/100 iters), loss = 0.794819
I0428 19:39:17.750180 24256 solver.cpp:238]     Train net output #0: loss = 0.794819 (* 1 = 0.794819 loss)
I0428 19:39:17.750185 24256 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:17.817837 24256 solver.cpp:219] Iteration 900 (1478.23 iter/s, 0.0676485s/100 iters), loss = 0.666398
I0428 19:39:17.817878 24256 solver.cpp:238]     Train net output #0: loss = 0.666398 (* 1 = 0.666398 loss)
I0428 19:39:17.817885 24256 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:17.840313 24262 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:17.883991 24256 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:17.884649 24256 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:17.885082 24256 solver.cpp:311] Iteration 1000, loss = 0.545695
I0428 19:39:17.885126 24256 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:17.960661 24263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:17.961125 24256 solver.cpp:398]     Test net output #0: accuracy = 0.801
I0428 19:39:17.961161 24256 solver.cpp:398]     Test net output #1: loss = 0.56513 (* 1 = 0.56513 loss)
I0428 19:39:17.961166 24256 solver.cpp:316] Optimization Done.
I0428 19:39:17.961170 24256 caffe.cpp:259] Optimization Done.
