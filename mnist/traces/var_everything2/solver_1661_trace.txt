I0428 20:38:09.130314  5083 caffe.cpp:218] Using GPUs 0
I0428 20:38:09.167753  5083 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:09.623215  5083 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1661.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:09.623349  5083 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1661.prototxt
I0428 20:38:09.623698  5083 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:09.623728  5083 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:09.623824  5083 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:09.623888  5083 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:09.623966  5083 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:09.623986  5083 net.cpp:86] Creating Layer mnist
I0428 20:38:09.623991  5083 net.cpp:382] mnist -> data
I0428 20:38:09.624011  5083 net.cpp:382] mnist -> label
I0428 20:38:09.625026  5083 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:09.627158  5083 net.cpp:124] Setting up mnist
I0428 20:38:09.627188  5083 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:09.627193  5083 net.cpp:131] Top shape: 64 (64)
I0428 20:38:09.627197  5083 net.cpp:139] Memory required for data: 200960
I0428 20:38:09.627202  5083 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:09.627216  5083 net.cpp:86] Creating Layer conv0
I0428 20:38:09.627233  5083 net.cpp:408] conv0 <- data
I0428 20:38:09.627243  5083 net.cpp:382] conv0 -> conv0
I0428 20:38:09.851007  5083 net.cpp:124] Setting up conv0
I0428 20:38:09.851047  5083 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:09.851052  5083 net.cpp:139] Memory required for data: 14946560
I0428 20:38:09.851066  5083 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:09.851078  5083 net.cpp:86] Creating Layer pool0
I0428 20:38:09.851083  5083 net.cpp:408] pool0 <- conv0
I0428 20:38:09.851088  5083 net.cpp:382] pool0 -> pool0
I0428 20:38:09.851150  5083 net.cpp:124] Setting up pool0
I0428 20:38:09.851155  5083 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:09.851157  5083 net.cpp:139] Memory required for data: 18632960
I0428 20:38:09.851161  5083 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:09.851171  5083 net.cpp:86] Creating Layer conv1
I0428 20:38:09.851174  5083 net.cpp:408] conv1 <- pool0
I0428 20:38:09.851178  5083 net.cpp:382] conv1 -> conv1
I0428 20:38:09.855473  5083 net.cpp:124] Setting up conv1
I0428 20:38:09.855501  5083 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:09.855504  5083 net.cpp:139] Memory required for data: 20271360
I0428 20:38:09.855512  5083 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:09.855535  5083 net.cpp:86] Creating Layer pool1
I0428 20:38:09.855538  5083 net.cpp:408] pool1 <- conv1
I0428 20:38:09.855543  5083 net.cpp:382] pool1 -> pool1
I0428 20:38:09.855594  5083 net.cpp:124] Setting up pool1
I0428 20:38:09.855599  5083 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:09.855602  5083 net.cpp:139] Memory required for data: 20680960
I0428 20:38:09.855605  5083 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:09.855612  5083 net.cpp:86] Creating Layer ip1
I0428 20:38:09.855615  5083 net.cpp:408] ip1 <- pool1
I0428 20:38:09.855619  5083 net.cpp:382] ip1 -> ip1
I0428 20:38:09.855960  5083 net.cpp:124] Setting up ip1
I0428 20:38:09.855967  5083 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:09.855985  5083 net.cpp:139] Memory required for data: 20687360
I0428 20:38:09.855993  5083 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:09.855998  5083 net.cpp:86] Creating Layer relu1
I0428 20:38:09.856001  5083 net.cpp:408] relu1 <- ip1
I0428 20:38:09.856005  5083 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:09.856173  5083 net.cpp:124] Setting up relu1
I0428 20:38:09.856180  5083 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:09.856184  5083 net.cpp:139] Memory required for data: 20693760
I0428 20:38:09.856186  5083 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:09.856194  5083 net.cpp:86] Creating Layer ip2
I0428 20:38:09.856196  5083 net.cpp:408] ip2 <- ip1
I0428 20:38:09.856200  5083 net.cpp:382] ip2 -> ip2
I0428 20:38:09.856290  5083 net.cpp:124] Setting up ip2
I0428 20:38:09.856297  5083 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:09.856300  5083 net.cpp:139] Memory required for data: 20696320
I0428 20:38:09.856307  5083 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:09.856312  5083 net.cpp:86] Creating Layer relu2
I0428 20:38:09.856314  5083 net.cpp:408] relu2 <- ip2
I0428 20:38:09.856318  5083 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:09.857018  5083 net.cpp:124] Setting up relu2
I0428 20:38:09.857029  5083 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:09.857048  5083 net.cpp:139] Memory required for data: 20698880
I0428 20:38:09.857051  5083 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:09.857074  5083 net.cpp:86] Creating Layer ip3
I0428 20:38:09.857077  5083 net.cpp:408] ip3 <- ip2
I0428 20:38:09.857084  5083 net.cpp:382] ip3 -> ip3
I0428 20:38:09.857210  5083 net.cpp:124] Setting up ip3
I0428 20:38:09.857218  5083 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:09.857221  5083 net.cpp:139] Memory required for data: 20701440
I0428 20:38:09.857230  5083 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:09.857235  5083 net.cpp:86] Creating Layer relu3
I0428 20:38:09.857239  5083 net.cpp:408] relu3 <- ip3
I0428 20:38:09.857259  5083 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:09.857412  5083 net.cpp:124] Setting up relu3
I0428 20:38:09.857421  5083 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:09.857424  5083 net.cpp:139] Memory required for data: 20704000
I0428 20:38:09.857427  5083 layer_factory.hpp:77] Creating layer loss
I0428 20:38:09.857453  5083 net.cpp:86] Creating Layer loss
I0428 20:38:09.857456  5083 net.cpp:408] loss <- ip3
I0428 20:38:09.857460  5083 net.cpp:408] loss <- label
I0428 20:38:09.857466  5083 net.cpp:382] loss -> loss
I0428 20:38:09.857508  5083 layer_factory.hpp:77] Creating layer loss
I0428 20:38:09.857707  5083 net.cpp:124] Setting up loss
I0428 20:38:09.857717  5083 net.cpp:131] Top shape: (1)
I0428 20:38:09.857719  5083 net.cpp:134]     with loss weight 1
I0428 20:38:09.857733  5083 net.cpp:139] Memory required for data: 20704004
I0428 20:38:09.857735  5083 net.cpp:200] loss needs backward computation.
I0428 20:38:09.857739  5083 net.cpp:200] relu3 needs backward computation.
I0428 20:38:09.857743  5083 net.cpp:200] ip3 needs backward computation.
I0428 20:38:09.857745  5083 net.cpp:200] relu2 needs backward computation.
I0428 20:38:09.857748  5083 net.cpp:200] ip2 needs backward computation.
I0428 20:38:09.857750  5083 net.cpp:200] relu1 needs backward computation.
I0428 20:38:09.857753  5083 net.cpp:200] ip1 needs backward computation.
I0428 20:38:09.857756  5083 net.cpp:200] pool1 needs backward computation.
I0428 20:38:09.857759  5083 net.cpp:200] conv1 needs backward computation.
I0428 20:38:09.857762  5083 net.cpp:200] pool0 needs backward computation.
I0428 20:38:09.857765  5083 net.cpp:200] conv0 needs backward computation.
I0428 20:38:09.857769  5083 net.cpp:202] mnist does not need backward computation.
I0428 20:38:09.857771  5083 net.cpp:244] This network produces output loss
I0428 20:38:09.857779  5083 net.cpp:257] Network initialization done.
I0428 20:38:09.858130  5083 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1661.prototxt
I0428 20:38:09.858158  5083 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:09.858278  5083 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:09.858376  5083 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:09.858417  5083 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:09.858428  5083 net.cpp:86] Creating Layer mnist
I0428 20:38:09.858433  5083 net.cpp:382] mnist -> data
I0428 20:38:09.858440  5083 net.cpp:382] mnist -> label
I0428 20:38:09.858520  5083 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:09.860560  5083 net.cpp:124] Setting up mnist
I0428 20:38:09.860574  5083 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:09.860580  5083 net.cpp:131] Top shape: 100 (100)
I0428 20:38:09.860584  5083 net.cpp:139] Memory required for data: 314000
I0428 20:38:09.860587  5083 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:09.860594  5083 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:09.860597  5083 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:09.860602  5083 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:09.860620  5083 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:09.860669  5083 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:09.860676  5083 net.cpp:131] Top shape: 100 (100)
I0428 20:38:09.860679  5083 net.cpp:131] Top shape: 100 (100)
I0428 20:38:09.860682  5083 net.cpp:139] Memory required for data: 314800
I0428 20:38:09.860685  5083 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:09.860695  5083 net.cpp:86] Creating Layer conv0
I0428 20:38:09.860699  5083 net.cpp:408] conv0 <- data
I0428 20:38:09.860704  5083 net.cpp:382] conv0 -> conv0
I0428 20:38:09.862614  5083 net.cpp:124] Setting up conv0
I0428 20:38:09.862628  5083 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:09.862632  5083 net.cpp:139] Memory required for data: 23354800
I0428 20:38:09.862643  5083 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:09.862649  5083 net.cpp:86] Creating Layer pool0
I0428 20:38:09.862653  5083 net.cpp:408] pool0 <- conv0
I0428 20:38:09.862658  5083 net.cpp:382] pool0 -> pool0
I0428 20:38:09.862709  5083 net.cpp:124] Setting up pool0
I0428 20:38:09.862716  5083 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:09.862720  5083 net.cpp:139] Memory required for data: 29114800
I0428 20:38:09.862721  5083 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:09.862731  5083 net.cpp:86] Creating Layer conv1
I0428 20:38:09.862735  5083 net.cpp:408] conv1 <- pool0
I0428 20:38:09.862740  5083 net.cpp:382] conv1 -> conv1
I0428 20:38:09.865824  5083 net.cpp:124] Setting up conv1
I0428 20:38:09.865839  5083 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:09.865844  5083 net.cpp:139] Memory required for data: 31674800
I0428 20:38:09.865852  5083 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:09.865859  5083 net.cpp:86] Creating Layer pool1
I0428 20:38:09.865883  5083 net.cpp:408] pool1 <- conv1
I0428 20:38:09.865888  5083 net.cpp:382] pool1 -> pool1
I0428 20:38:09.865942  5083 net.cpp:124] Setting up pool1
I0428 20:38:09.865948  5083 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:09.865952  5083 net.cpp:139] Memory required for data: 32314800
I0428 20:38:09.865954  5083 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:09.865962  5083 net.cpp:86] Creating Layer ip1
I0428 20:38:09.865970  5083 net.cpp:408] ip1 <- pool1
I0428 20:38:09.865986  5083 net.cpp:382] ip1 -> ip1
I0428 20:38:09.866370  5083 net.cpp:124] Setting up ip1
I0428 20:38:09.866400  5083 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:09.866403  5083 net.cpp:139] Memory required for data: 32324800
I0428 20:38:09.866411  5083 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:09.866418  5083 net.cpp:86] Creating Layer relu1
I0428 20:38:09.866427  5083 net.cpp:408] relu1 <- ip1
I0428 20:38:09.866432  5083 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:09.866612  5083 net.cpp:124] Setting up relu1
I0428 20:38:09.866621  5083 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:09.866624  5083 net.cpp:139] Memory required for data: 32334800
I0428 20:38:09.866627  5083 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:09.866634  5083 net.cpp:86] Creating Layer ip2
I0428 20:38:09.866638  5083 net.cpp:408] ip2 <- ip1
I0428 20:38:09.866643  5083 net.cpp:382] ip2 -> ip2
I0428 20:38:09.866753  5083 net.cpp:124] Setting up ip2
I0428 20:38:09.866762  5083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:09.866771  5083 net.cpp:139] Memory required for data: 32338800
I0428 20:38:09.866777  5083 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:09.866781  5083 net.cpp:86] Creating Layer relu2
I0428 20:38:09.866785  5083 net.cpp:408] relu2 <- ip2
I0428 20:38:09.866788  5083 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:09.867020  5083 net.cpp:124] Setting up relu2
I0428 20:38:09.867030  5083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:09.867039  5083 net.cpp:139] Memory required for data: 32342800
I0428 20:38:09.867043  5083 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:09.867048  5083 net.cpp:86] Creating Layer ip3
I0428 20:38:09.867056  5083 net.cpp:408] ip3 <- ip2
I0428 20:38:09.867063  5083 net.cpp:382] ip3 -> ip3
I0428 20:38:09.867211  5083 net.cpp:124] Setting up ip3
I0428 20:38:09.867218  5083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:09.867221  5083 net.cpp:139] Memory required for data: 32346800
I0428 20:38:09.867230  5083 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:09.867235  5083 net.cpp:86] Creating Layer relu3
I0428 20:38:09.867238  5083 net.cpp:408] relu3 <- ip3
I0428 20:38:09.867244  5083 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:09.867998  5083 net.cpp:124] Setting up relu3
I0428 20:38:09.868010  5083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:09.868013  5083 net.cpp:139] Memory required for data: 32350800
I0428 20:38:09.868016  5083 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:09.868021  5083 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:09.868024  5083 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:09.868031  5083 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:09.868037  5083 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:09.868077  5083 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:09.868083  5083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:09.868085  5083 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:09.868089  5083 net.cpp:139] Memory required for data: 32358800
I0428 20:38:09.868091  5083 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:09.868098  5083 net.cpp:86] Creating Layer accuracy
I0428 20:38:09.868101  5083 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:09.868105  5083 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:09.868109  5083 net.cpp:382] accuracy -> accuracy
I0428 20:38:09.868116  5083 net.cpp:124] Setting up accuracy
I0428 20:38:09.868120  5083 net.cpp:131] Top shape: (1)
I0428 20:38:09.868124  5083 net.cpp:139] Memory required for data: 32358804
I0428 20:38:09.868125  5083 layer_factory.hpp:77] Creating layer loss
I0428 20:38:09.868130  5083 net.cpp:86] Creating Layer loss
I0428 20:38:09.868134  5083 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:09.868136  5083 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:09.868140  5083 net.cpp:382] loss -> loss
I0428 20:38:09.868146  5083 layer_factory.hpp:77] Creating layer loss
I0428 20:38:09.868450  5083 net.cpp:124] Setting up loss
I0428 20:38:09.868460  5083 net.cpp:131] Top shape: (1)
I0428 20:38:09.868463  5083 net.cpp:134]     with loss weight 1
I0428 20:38:09.868479  5083 net.cpp:139] Memory required for data: 32358808
I0428 20:38:09.868484  5083 net.cpp:200] loss needs backward computation.
I0428 20:38:09.868487  5083 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:09.868491  5083 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:09.868510  5083 net.cpp:200] relu3 needs backward computation.
I0428 20:38:09.868512  5083 net.cpp:200] ip3 needs backward computation.
I0428 20:38:09.868515  5083 net.cpp:200] relu2 needs backward computation.
I0428 20:38:09.868517  5083 net.cpp:200] ip2 needs backward computation.
I0428 20:38:09.868521  5083 net.cpp:200] relu1 needs backward computation.
I0428 20:38:09.868531  5083 net.cpp:200] ip1 needs backward computation.
I0428 20:38:09.868535  5083 net.cpp:200] pool1 needs backward computation.
I0428 20:38:09.868537  5083 net.cpp:200] conv1 needs backward computation.
I0428 20:38:09.868541  5083 net.cpp:200] pool0 needs backward computation.
I0428 20:38:09.868543  5083 net.cpp:200] conv0 needs backward computation.
I0428 20:38:09.868547  5083 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:09.868551  5083 net.cpp:202] mnist does not need backward computation.
I0428 20:38:09.868554  5083 net.cpp:244] This network produces output accuracy
I0428 20:38:09.868572  5083 net.cpp:244] This network produces output loss
I0428 20:38:09.868588  5083 net.cpp:257] Network initialization done.
I0428 20:38:09.868629  5083 solver.cpp:56] Solver scaffolding done.
I0428 20:38:09.868999  5083 caffe.cpp:248] Starting Optimization
I0428 20:38:09.869005  5083 solver.cpp:273] Solving LeNet
I0428 20:38:09.869009  5083 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:09.869894  5083 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:09.999336  5090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:10.002921  5083 solver.cpp:398]     Test net output #0: accuracy = 0.1199
I0428 20:38:10.002955  5083 solver.cpp:398]     Test net output #1: loss = 2.30396 (* 1 = 2.30396 loss)
I0428 20:38:10.008334  5083 solver.cpp:219] Iteration 0 (-2.62744e-31 iter/s, 0.139297s/100 iters), loss = 2.30367
I0428 20:38:10.008358  5083 solver.cpp:238]     Train net output #0: loss = 2.30367 (* 1 = 2.30367 loss)
I0428 20:38:10.008368  5083 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:10.280876  5083 solver.cpp:219] Iteration 100 (366.977 iter/s, 0.272497s/100 iters), loss = 0.338913
I0428 20:38:10.280902  5083 solver.cpp:238]     Train net output #0: loss = 0.338913 (* 1 = 0.338913 loss)
I0428 20:38:10.280910  5083 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:10.559484  5083 solver.cpp:219] Iteration 200 (358.988 iter/s, 0.278561s/100 iters), loss = 0.207348
I0428 20:38:10.559521  5083 solver.cpp:238]     Train net output #0: loss = 0.207348 (* 1 = 0.207348 loss)
I0428 20:38:10.559530  5083 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:10.839251  5083 solver.cpp:219] Iteration 300 (357.512 iter/s, 0.279711s/100 iters), loss = 0.165774
I0428 20:38:10.839294  5083 solver.cpp:238]     Train net output #0: loss = 0.165774 (* 1 = 0.165774 loss)
I0428 20:38:10.839301  5083 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:11.118660  5083 solver.cpp:219] Iteration 400 (357.979 iter/s, 0.279346s/100 iters), loss = 0.155654
I0428 20:38:11.118690  5083 solver.cpp:238]     Train net output #0: loss = 0.155654 (* 1 = 0.155654 loss)
I0428 20:38:11.118696  5083 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:11.388906  5083 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:11.515261  5090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:11.518800  5083 solver.cpp:398]     Test net output #0: accuracy = 0.964
I0428 20:38:11.518836  5083 solver.cpp:398]     Test net output #1: loss = 0.115683 (* 1 = 0.115683 loss)
I0428 20:38:11.521518  5083 solver.cpp:219] Iteration 500 (248.259 iter/s, 0.402805s/100 iters), loss = 0.095923
I0428 20:38:11.521543  5083 solver.cpp:238]     Train net output #0: loss = 0.095923 (* 1 = 0.095923 loss)
I0428 20:38:11.521574  5083 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:11.800110  5083 solver.cpp:219] Iteration 600 (359.003 iter/s, 0.278549s/100 iters), loss = 0.092521
I0428 20:38:11.800137  5083 solver.cpp:238]     Train net output #0: loss = 0.092521 (* 1 = 0.092521 loss)
I0428 20:38:11.800142  5083 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:12.081653  5083 solver.cpp:219] Iteration 700 (355.242 iter/s, 0.281499s/100 iters), loss = 0.150831
I0428 20:38:12.081681  5083 solver.cpp:238]     Train net output #0: loss = 0.150831 (* 1 = 0.150831 loss)
I0428 20:38:12.081686  5083 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:12.368410  5083 solver.cpp:219] Iteration 800 (348.782 iter/s, 0.286712s/100 iters), loss = 0.193424
I0428 20:38:12.368438  5083 solver.cpp:238]     Train net output #0: loss = 0.193424 (* 1 = 0.193424 loss)
I0428 20:38:12.368444  5083 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:12.658596  5083 solver.cpp:219] Iteration 900 (344.667 iter/s, 0.290135s/100 iters), loss = 0.185096
I0428 20:38:12.658644  5083 solver.cpp:238]     Train net output #0: loss = 0.185096 (* 1 = 0.185096 loss)
I0428 20:38:12.658651  5083 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:12.756073  5089 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:12.947096  5083 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:12.952663  5083 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:12.955880  5083 solver.cpp:311] Iteration 1000, loss = 0.0715681
I0428 20:38:12.955898  5083 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:13.085911  5090 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:13.089288  5083 solver.cpp:398]     Test net output #0: accuracy = 0.9772
I0428 20:38:13.089324  5083 solver.cpp:398]     Test net output #1: loss = 0.0723211 (* 1 = 0.0723211 loss)
I0428 20:38:13.089330  5083 solver.cpp:316] Optimization Done.
I0428 20:38:13.089332  5083 caffe.cpp:259] Optimization Done.
