I0428 19:28:16.699187 21583 caffe.cpp:218] Using GPUs 0
I0428 19:28:16.738317 21583 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:17.252086 21583 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test20.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:17.252216 21583 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test20.prototxt
I0428 19:28:17.252516 21583 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:17.252532 21583 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:17.252602 21583 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:17.252662 21583 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:17.252763 21583 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:17.252787 21583 net.cpp:86] Creating Layer mnist
I0428 19:28:17.252794 21583 net.cpp:382] mnist -> data
I0428 19:28:17.252822 21583 net.cpp:382] mnist -> label
I0428 19:28:17.253906 21583 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:17.256333 21583 net.cpp:124] Setting up mnist
I0428 19:28:17.256350 21583 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:17.256356 21583 net.cpp:131] Top shape: 64 (64)
I0428 19:28:17.256361 21583 net.cpp:139] Memory required for data: 200960
I0428 19:28:17.256367 21583 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:17.256378 21583 net.cpp:86] Creating Layer ip1
I0428 19:28:17.256383 21583 net.cpp:408] ip1 <- data
I0428 19:28:17.256394 21583 net.cpp:382] ip1 -> ip1
I0428 19:28:17.257685 21583 net.cpp:124] Setting up ip1
I0428 19:28:17.257700 21583 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:17.257704 21583 net.cpp:139] Memory required for data: 203520
I0428 19:28:17.257719 21583 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:17.257727 21583 net.cpp:86] Creating Layer relu1
I0428 19:28:17.257732 21583 net.cpp:408] relu1 <- ip1
I0428 19:28:17.257737 21583 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:17.547128 21583 net.cpp:124] Setting up relu1
I0428 19:28:17.547160 21583 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:17.547164 21583 net.cpp:139] Memory required for data: 206080
I0428 19:28:17.547171 21583 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:17.547186 21583 net.cpp:86] Creating Layer ip2
I0428 19:28:17.547212 21583 net.cpp:408] ip2 <- ip1
I0428 19:28:17.547222 21583 net.cpp:382] ip2 -> ip2
I0428 19:28:17.548390 21583 net.cpp:124] Setting up ip2
I0428 19:28:17.548405 21583 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:17.548409 21583 net.cpp:139] Memory required for data: 218880
I0428 19:28:17.548422 21583 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:17.548431 21583 net.cpp:86] Creating Layer relu2
I0428 19:28:17.548436 21583 net.cpp:408] relu2 <- ip2
I0428 19:28:17.548441 21583 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:17.549315 21583 net.cpp:124] Setting up relu2
I0428 19:28:17.549330 21583 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:17.549335 21583 net.cpp:139] Memory required for data: 231680
I0428 19:28:17.549340 21583 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:17.549347 21583 net.cpp:86] Creating Layer ip3
I0428 19:28:17.549351 21583 net.cpp:408] ip3 <- ip2
I0428 19:28:17.549358 21583 net.cpp:382] ip3 -> ip3
I0428 19:28:17.549479 21583 net.cpp:124] Setting up ip3
I0428 19:28:17.549487 21583 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:17.549491 21583 net.cpp:139] Memory required for data: 234240
I0428 19:28:17.549500 21583 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:17.549507 21583 net.cpp:86] Creating Layer relu3
I0428 19:28:17.549511 21583 net.cpp:408] relu3 <- ip3
I0428 19:28:17.549516 21583 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:17.549695 21583 net.cpp:124] Setting up relu3
I0428 19:28:17.549705 21583 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:17.549707 21583 net.cpp:139] Memory required for data: 236800
I0428 19:28:17.549711 21583 layer_factory.hpp:77] Creating layer loss
I0428 19:28:17.549720 21583 net.cpp:86] Creating Layer loss
I0428 19:28:17.549722 21583 net.cpp:408] loss <- ip3
I0428 19:28:17.549727 21583 net.cpp:408] loss <- label
I0428 19:28:17.549733 21583 net.cpp:382] loss -> loss
I0428 19:28:17.549752 21583 layer_factory.hpp:77] Creating layer loss
I0428 19:28:17.550015 21583 net.cpp:124] Setting up loss
I0428 19:28:17.550026 21583 net.cpp:131] Top shape: (1)
I0428 19:28:17.550030 21583 net.cpp:134]     with loss weight 1
I0428 19:28:17.550046 21583 net.cpp:139] Memory required for data: 236804
I0428 19:28:17.550050 21583 net.cpp:200] loss needs backward computation.
I0428 19:28:17.550055 21583 net.cpp:200] relu3 needs backward computation.
I0428 19:28:17.550058 21583 net.cpp:200] ip3 needs backward computation.
I0428 19:28:17.550061 21583 net.cpp:200] relu2 needs backward computation.
I0428 19:28:17.550066 21583 net.cpp:200] ip2 needs backward computation.
I0428 19:28:17.550070 21583 net.cpp:200] relu1 needs backward computation.
I0428 19:28:17.550072 21583 net.cpp:200] ip1 needs backward computation.
I0428 19:28:17.550077 21583 net.cpp:202] mnist does not need backward computation.
I0428 19:28:17.550081 21583 net.cpp:244] This network produces output loss
I0428 19:28:17.550089 21583 net.cpp:257] Network initialization done.
I0428 19:28:17.550377 21583 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test20.prototxt
I0428 19:28:17.550406 21583 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:17.550488 21583 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:17.550571 21583 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:17.550624 21583 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:17.550638 21583 net.cpp:86] Creating Layer mnist
I0428 19:28:17.550644 21583 net.cpp:382] mnist -> data
I0428 19:28:17.550653 21583 net.cpp:382] mnist -> label
I0428 19:28:17.550757 21583 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:17.552934 21583 net.cpp:124] Setting up mnist
I0428 19:28:17.552950 21583 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:17.552956 21583 net.cpp:131] Top shape: 100 (100)
I0428 19:28:17.552960 21583 net.cpp:139] Memory required for data: 314000
I0428 19:28:17.552965 21583 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:17.552978 21583 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:17.552983 21583 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:17.552987 21583 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:17.552995 21583 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:17.553078 21583 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:17.553087 21583 net.cpp:131] Top shape: 100 (100)
I0428 19:28:17.553092 21583 net.cpp:131] Top shape: 100 (100)
I0428 19:28:17.553095 21583 net.cpp:139] Memory required for data: 314800
I0428 19:28:17.553100 21583 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:17.553108 21583 net.cpp:86] Creating Layer ip1
I0428 19:28:17.553112 21583 net.cpp:408] ip1 <- data
I0428 19:28:17.553117 21583 net.cpp:382] ip1 -> ip1
I0428 19:28:17.553318 21583 net.cpp:124] Setting up ip1
I0428 19:28:17.553328 21583 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:17.553330 21583 net.cpp:139] Memory required for data: 318800
I0428 19:28:17.553341 21583 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:17.553347 21583 net.cpp:86] Creating Layer relu1
I0428 19:28:17.553351 21583 net.cpp:408] relu1 <- ip1
I0428 19:28:17.553356 21583 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:17.554399 21583 net.cpp:124] Setting up relu1
I0428 19:28:17.554414 21583 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:17.554419 21583 net.cpp:139] Memory required for data: 322800
I0428 19:28:17.554422 21583 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:17.554431 21583 net.cpp:86] Creating Layer ip2
I0428 19:28:17.554435 21583 net.cpp:408] ip2 <- ip1
I0428 19:28:17.554442 21583 net.cpp:382] ip2 -> ip2
I0428 19:28:17.554558 21583 net.cpp:124] Setting up ip2
I0428 19:28:17.554567 21583 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:17.554571 21583 net.cpp:139] Memory required for data: 342800
I0428 19:28:17.554580 21583 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:17.554586 21583 net.cpp:86] Creating Layer relu2
I0428 19:28:17.554590 21583 net.cpp:408] relu2 <- ip2
I0428 19:28:17.554594 21583 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:17.554780 21583 net.cpp:124] Setting up relu2
I0428 19:28:17.554788 21583 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:17.554792 21583 net.cpp:139] Memory required for data: 362800
I0428 19:28:17.554796 21583 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:17.554803 21583 net.cpp:86] Creating Layer ip3
I0428 19:28:17.554807 21583 net.cpp:408] ip3 <- ip2
I0428 19:28:17.554812 21583 net.cpp:382] ip3 -> ip3
I0428 19:28:17.554941 21583 net.cpp:124] Setting up ip3
I0428 19:28:17.554950 21583 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:17.554955 21583 net.cpp:139] Memory required for data: 366800
I0428 19:28:17.554963 21583 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:17.554968 21583 net.cpp:86] Creating Layer relu3
I0428 19:28:17.554972 21583 net.cpp:408] relu3 <- ip3
I0428 19:28:17.554977 21583 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:17.555217 21583 net.cpp:124] Setting up relu3
I0428 19:28:17.555227 21583 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:17.555230 21583 net.cpp:139] Memory required for data: 370800
I0428 19:28:17.555234 21583 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:17.555243 21583 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:17.555246 21583 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:17.555251 21583 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:17.555258 21583 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:17.555327 21583 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:17.555335 21583 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:17.555341 21583 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:17.555349 21583 net.cpp:139] Memory required for data: 378800
I0428 19:28:17.555353 21583 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:17.555359 21583 net.cpp:86] Creating Layer accuracy
I0428 19:28:17.555363 21583 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:17.555368 21583 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:17.555373 21583 net.cpp:382] accuracy -> accuracy
I0428 19:28:17.555382 21583 net.cpp:124] Setting up accuracy
I0428 19:28:17.555388 21583 net.cpp:131] Top shape: (1)
I0428 19:28:17.555392 21583 net.cpp:139] Memory required for data: 378804
I0428 19:28:17.555395 21583 layer_factory.hpp:77] Creating layer loss
I0428 19:28:17.555400 21583 net.cpp:86] Creating Layer loss
I0428 19:28:17.555409 21583 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:17.555413 21583 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:17.555418 21583 net.cpp:382] loss -> loss
I0428 19:28:17.555426 21583 layer_factory.hpp:77] Creating layer loss
I0428 19:28:17.555721 21583 net.cpp:124] Setting up loss
I0428 19:28:17.555730 21583 net.cpp:131] Top shape: (1)
I0428 19:28:17.555735 21583 net.cpp:134]     with loss weight 1
I0428 19:28:17.555742 21583 net.cpp:139] Memory required for data: 378808
I0428 19:28:17.555747 21583 net.cpp:200] loss needs backward computation.
I0428 19:28:17.555752 21583 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:17.555757 21583 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:17.555759 21583 net.cpp:200] relu3 needs backward computation.
I0428 19:28:17.555763 21583 net.cpp:200] ip3 needs backward computation.
I0428 19:28:17.555768 21583 net.cpp:200] relu2 needs backward computation.
I0428 19:28:17.555770 21583 net.cpp:200] ip2 needs backward computation.
I0428 19:28:17.555774 21583 net.cpp:200] relu1 needs backward computation.
I0428 19:28:17.555778 21583 net.cpp:200] ip1 needs backward computation.
I0428 19:28:17.555783 21583 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:17.555786 21583 net.cpp:202] mnist does not need backward computation.
I0428 19:28:17.555790 21583 net.cpp:244] This network produces output accuracy
I0428 19:28:17.555794 21583 net.cpp:244] This network produces output loss
I0428 19:28:17.555806 21583 net.cpp:257] Network initialization done.
I0428 19:28:17.555842 21583 solver.cpp:56] Solver scaffolding done.
I0428 19:28:17.556082 21583 caffe.cpp:248] Starting Optimization
I0428 19:28:17.556087 21583 solver.cpp:273] Solving LeNet
I0428 19:28:17.556090 21583 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:17.556929 21583 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:17.557909 21583 blocking_queue.cpp:49] Waiting for data
I0428 19:28:17.637425 21590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:17.637859 21583 solver.cpp:398]     Test net output #0: accuracy = 0.0807
I0428 19:28:17.637884 21583 solver.cpp:398]     Test net output #1: loss = 2.30521 (* 1 = 2.30521 loss)
I0428 19:28:17.639225 21583 solver.cpp:219] Iteration 0 (-9.78106e-43 iter/s, 0.0831057s/100 iters), loss = 2.30445
I0428 19:28:17.639253 21583 solver.cpp:238]     Train net output #0: loss = 2.30445 (* 1 = 2.30445 loss)
I0428 19:28:17.639268 21583 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:17.685497 21583 solver.cpp:219] Iteration 100 (2162.88 iter/s, 0.0462346s/100 iters), loss = 1.14415
I0428 19:28:17.685523 21583 solver.cpp:238]     Train net output #0: loss = 1.14415 (* 1 = 1.14415 loss)
I0428 19:28:17.685528 21583 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:17.728463 21583 solver.cpp:219] Iteration 200 (2329.09 iter/s, 0.0429353s/100 iters), loss = 0.749773
I0428 19:28:17.728484 21583 solver.cpp:238]     Train net output #0: loss = 0.749773 (* 1 = 0.749773 loss)
I0428 19:28:17.728489 21583 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:17.771124 21583 solver.cpp:219] Iteration 300 (2346.38 iter/s, 0.0426188s/100 iters), loss = 0.815229
I0428 19:28:17.771159 21583 solver.cpp:238]     Train net output #0: loss = 0.815229 (* 1 = 0.815229 loss)
I0428 19:28:17.771164 21583 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:17.814018 21583 solver.cpp:219] Iteration 400 (2332.81 iter/s, 0.0428667s/100 iters), loss = 0.944856
I0428 19:28:17.814052 21583 solver.cpp:238]     Train net output #0: loss = 0.944856 (* 1 = 0.944856 loss)
I0428 19:28:17.814056 21583 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:17.856936 21583 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:17.913707 21590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:17.914151 21583 solver.cpp:398]     Test net output #0: accuracy = 0.7397
I0428 19:28:17.914182 21583 solver.cpp:398]     Test net output #1: loss = 0.752763 (* 1 = 0.752763 loss)
I0428 19:28:17.914710 21583 solver.cpp:219] Iteration 500 (993.441 iter/s, 0.10066s/100 iters), loss = 0.983229
I0428 19:28:17.914741 21583 solver.cpp:238]     Train net output #0: loss = 0.983229 (* 1 = 0.983229 loss)
I0428 19:28:17.914752 21583 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:17.966265 21583 solver.cpp:219] Iteration 600 (1941.09 iter/s, 0.0515174s/100 iters), loss = 0.543446
I0428 19:28:17.966295 21583 solver.cpp:238]     Train net output #0: loss = 0.543446 (* 1 = 0.543446 loss)
I0428 19:28:17.966302 21583 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:18.013126 21583 solver.cpp:219] Iteration 700 (2135.73 iter/s, 0.0468224s/100 iters), loss = 0.754431
I0428 19:28:18.013149 21583 solver.cpp:238]     Train net output #0: loss = 0.754431 (* 1 = 0.754431 loss)
I0428 19:28:18.013156 21583 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:18.055178 21583 solver.cpp:219] Iteration 800 (2379.77 iter/s, 0.0420209s/100 iters), loss = 0.665835
I0428 19:28:18.055198 21583 solver.cpp:238]     Train net output #0: loss = 0.665835 (* 1 = 0.665835 loss)
I0428 19:28:18.055204 21583 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:18.096966 21583 solver.cpp:219] Iteration 900 (2394.65 iter/s, 0.0417597s/100 iters), loss = 0.699274
I0428 19:28:18.097002 21583 solver.cpp:238]     Train net output #0: loss = 0.699274 (* 1 = 0.699274 loss)
I0428 19:28:18.097007 21583 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:18.112586 21589 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:18.140425 21583 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:18.141115 21583 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:18.141585 21583 solver.cpp:311] Iteration 1000, loss = 0.546062
I0428 19:28:18.141599 21583 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:18.187772 21590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:18.188191 21583 solver.cpp:398]     Test net output #0: accuracy = 0.8243
I0428 19:28:18.188223 21583 solver.cpp:398]     Test net output #1: loss = 0.534578 (* 1 = 0.534578 loss)
I0428 19:28:18.188228 21583 solver.cpp:316] Optimization Done.
I0428 19:28:18.188231 21583 caffe.cpp:259] Optimization Done.
