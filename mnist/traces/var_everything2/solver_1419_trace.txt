I0428 20:23:18.799554  2217 caffe.cpp:218] Using GPUs 0
I0428 20:23:18.835772  2217 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:19.290150  2217 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1419.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:19.290283  2217 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1419.prototxt
I0428 20:23:19.290607  2217 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:19.290622  2217 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:19.290717  2217 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:19.290784  2217 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:19.290864  2217 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:19.290886  2217 net.cpp:86] Creating Layer mnist
I0428 20:23:19.290892  2217 net.cpp:382] mnist -> data
I0428 20:23:19.290910  2217 net.cpp:382] mnist -> label
I0428 20:23:19.291908  2217 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:19.294173  2217 net.cpp:124] Setting up mnist
I0428 20:23:19.294199  2217 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:19.294208  2217 net.cpp:131] Top shape: 64 (64)
I0428 20:23:19.294210  2217 net.cpp:139] Memory required for data: 200960
I0428 20:23:19.294216  2217 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:19.294229  2217 net.cpp:86] Creating Layer conv0
I0428 20:23:19.294257  2217 net.cpp:408] conv0 <- data
I0428 20:23:19.294268  2217 net.cpp:382] conv0 -> conv0
I0428 20:23:19.524169  2217 net.cpp:124] Setting up conv0
I0428 20:23:19.524196  2217 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:19.524200  2217 net.cpp:139] Memory required for data: 7573760
I0428 20:23:19.524214  2217 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:19.524241  2217 net.cpp:86] Creating Layer pool0
I0428 20:23:19.524245  2217 net.cpp:408] pool0 <- conv0
I0428 20:23:19.524250  2217 net.cpp:382] pool0 -> pool0
I0428 20:23:19.524294  2217 net.cpp:124] Setting up pool0
I0428 20:23:19.524309  2217 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:19.524312  2217 net.cpp:139] Memory required for data: 9416960
I0428 20:23:19.524315  2217 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:19.524325  2217 net.cpp:86] Creating Layer conv1
I0428 20:23:19.524328  2217 net.cpp:408] conv1 <- pool0
I0428 20:23:19.524333  2217 net.cpp:382] conv1 -> conv1
I0428 20:23:19.527891  2217 net.cpp:124] Setting up conv1
I0428 20:23:19.527905  2217 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:19.527925  2217 net.cpp:139] Memory required for data: 11055360
I0428 20:23:19.527933  2217 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:19.527940  2217 net.cpp:86] Creating Layer pool1
I0428 20:23:19.527945  2217 net.cpp:408] pool1 <- conv1
I0428 20:23:19.527950  2217 net.cpp:382] pool1 -> pool1
I0428 20:23:19.528002  2217 net.cpp:124] Setting up pool1
I0428 20:23:19.528007  2217 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:19.528009  2217 net.cpp:139] Memory required for data: 11464960
I0428 20:23:19.528012  2217 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:19.528020  2217 net.cpp:86] Creating Layer ip1
I0428 20:23:19.528023  2217 net.cpp:408] ip1 <- pool1
I0428 20:23:19.528028  2217 net.cpp:382] ip1 -> ip1
I0428 20:23:19.529100  2217 net.cpp:124] Setting up ip1
I0428 20:23:19.529114  2217 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:19.529134  2217 net.cpp:139] Memory required for data: 11467520
I0428 20:23:19.529141  2217 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:19.529147  2217 net.cpp:86] Creating Layer relu1
I0428 20:23:19.529151  2217 net.cpp:408] relu1 <- ip1
I0428 20:23:19.529156  2217 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:19.529357  2217 net.cpp:124] Setting up relu1
I0428 20:23:19.529381  2217 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:19.529383  2217 net.cpp:139] Memory required for data: 11470080
I0428 20:23:19.529386  2217 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:19.529392  2217 net.cpp:86] Creating Layer ip2
I0428 20:23:19.529397  2217 net.cpp:408] ip2 <- ip1
I0428 20:23:19.529400  2217 net.cpp:382] ip2 -> ip2
I0428 20:23:19.529491  2217 net.cpp:124] Setting up ip2
I0428 20:23:19.529498  2217 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:19.529501  2217 net.cpp:139] Memory required for data: 11476480
I0428 20:23:19.529506  2217 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:19.529511  2217 net.cpp:86] Creating Layer relu2
I0428 20:23:19.529515  2217 net.cpp:408] relu2 <- ip2
I0428 20:23:19.529518  2217 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:19.530344  2217 net.cpp:124] Setting up relu2
I0428 20:23:19.530355  2217 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:19.530375  2217 net.cpp:139] Memory required for data: 11482880
I0428 20:23:19.530378  2217 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:19.530385  2217 net.cpp:86] Creating Layer ip3
I0428 20:23:19.530388  2217 net.cpp:408] ip3 <- ip2
I0428 20:23:19.530393  2217 net.cpp:382] ip3 -> ip3
I0428 20:23:19.530488  2217 net.cpp:124] Setting up ip3
I0428 20:23:19.530496  2217 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:19.530499  2217 net.cpp:139] Memory required for data: 11485440
I0428 20:23:19.530506  2217 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:19.530511  2217 net.cpp:86] Creating Layer relu3
I0428 20:23:19.530514  2217 net.cpp:408] relu3 <- ip3
I0428 20:23:19.530519  2217 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:19.530685  2217 net.cpp:124] Setting up relu3
I0428 20:23:19.530694  2217 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:19.530697  2217 net.cpp:139] Memory required for data: 11488000
I0428 20:23:19.530700  2217 layer_factory.hpp:77] Creating layer loss
I0428 20:23:19.530706  2217 net.cpp:86] Creating Layer loss
I0428 20:23:19.530709  2217 net.cpp:408] loss <- ip3
I0428 20:23:19.530712  2217 net.cpp:408] loss <- label
I0428 20:23:19.530717  2217 net.cpp:382] loss -> loss
I0428 20:23:19.530735  2217 layer_factory.hpp:77] Creating layer loss
I0428 20:23:19.530954  2217 net.cpp:124] Setting up loss
I0428 20:23:19.530963  2217 net.cpp:131] Top shape: (1)
I0428 20:23:19.530966  2217 net.cpp:134]     with loss weight 1
I0428 20:23:19.530980  2217 net.cpp:139] Memory required for data: 11488004
I0428 20:23:19.530983  2217 net.cpp:200] loss needs backward computation.
I0428 20:23:19.530987  2217 net.cpp:200] relu3 needs backward computation.
I0428 20:23:19.530990  2217 net.cpp:200] ip3 needs backward computation.
I0428 20:23:19.530993  2217 net.cpp:200] relu2 needs backward computation.
I0428 20:23:19.530995  2217 net.cpp:200] ip2 needs backward computation.
I0428 20:23:19.530999  2217 net.cpp:200] relu1 needs backward computation.
I0428 20:23:19.531002  2217 net.cpp:200] ip1 needs backward computation.
I0428 20:23:19.531005  2217 net.cpp:200] pool1 needs backward computation.
I0428 20:23:19.531008  2217 net.cpp:200] conv1 needs backward computation.
I0428 20:23:19.531011  2217 net.cpp:200] pool0 needs backward computation.
I0428 20:23:19.531013  2217 net.cpp:200] conv0 needs backward computation.
I0428 20:23:19.531018  2217 net.cpp:202] mnist does not need backward computation.
I0428 20:23:19.531034  2217 net.cpp:244] This network produces output loss
I0428 20:23:19.531044  2217 net.cpp:257] Network initialization done.
I0428 20:23:19.531432  2217 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1419.prototxt
I0428 20:23:19.531473  2217 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:19.531563  2217 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:19.531641  2217 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:19.531682  2217 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:19.531694  2217 net.cpp:86] Creating Layer mnist
I0428 20:23:19.531698  2217 net.cpp:382] mnist -> data
I0428 20:23:19.531707  2217 net.cpp:382] mnist -> label
I0428 20:23:19.531788  2217 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:19.532953  2217 net.cpp:124] Setting up mnist
I0428 20:23:19.532981  2217 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:19.532994  2217 net.cpp:131] Top shape: 100 (100)
I0428 20:23:19.532997  2217 net.cpp:139] Memory required for data: 314000
I0428 20:23:19.533000  2217 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:19.533037  2217 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:19.533041  2217 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:19.533046  2217 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:19.533052  2217 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:19.533095  2217 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:19.533100  2217 net.cpp:131] Top shape: 100 (100)
I0428 20:23:19.533104  2217 net.cpp:131] Top shape: 100 (100)
I0428 20:23:19.533107  2217 net.cpp:139] Memory required for data: 314800
I0428 20:23:19.533110  2217 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:19.533118  2217 net.cpp:86] Creating Layer conv0
I0428 20:23:19.533121  2217 net.cpp:408] conv0 <- data
I0428 20:23:19.533125  2217 net.cpp:382] conv0 -> conv0
I0428 20:23:19.534982  2217 net.cpp:124] Setting up conv0
I0428 20:23:19.534997  2217 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:19.535002  2217 net.cpp:139] Memory required for data: 11834800
I0428 20:23:19.535012  2217 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:19.535019  2217 net.cpp:86] Creating Layer pool0
I0428 20:23:19.535023  2217 net.cpp:408] pool0 <- conv0
I0428 20:23:19.535027  2217 net.cpp:382] pool0 -> pool0
I0428 20:23:19.535066  2217 net.cpp:124] Setting up pool0
I0428 20:23:19.535073  2217 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:19.535075  2217 net.cpp:139] Memory required for data: 14714800
I0428 20:23:19.535079  2217 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:19.535087  2217 net.cpp:86] Creating Layer conv1
I0428 20:23:19.535090  2217 net.cpp:408] conv1 <- pool0
I0428 20:23:19.535097  2217 net.cpp:382] conv1 -> conv1
I0428 20:23:19.538385  2217 net.cpp:124] Setting up conv1
I0428 20:23:19.538399  2217 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:19.538408  2217 net.cpp:139] Memory required for data: 17274800
I0428 20:23:19.538416  2217 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:19.538444  2217 net.cpp:86] Creating Layer pool1
I0428 20:23:19.538446  2217 net.cpp:408] pool1 <- conv1
I0428 20:23:19.538451  2217 net.cpp:382] pool1 -> pool1
I0428 20:23:19.538488  2217 net.cpp:124] Setting up pool1
I0428 20:23:19.538494  2217 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:19.538496  2217 net.cpp:139] Memory required for data: 17914800
I0428 20:23:19.538499  2217 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:19.538506  2217 net.cpp:86] Creating Layer ip1
I0428 20:23:19.538511  2217 net.cpp:408] ip1 <- pool1
I0428 20:23:19.538516  2217 net.cpp:382] ip1 -> ip1
I0428 20:23:19.538689  2217 net.cpp:124] Setting up ip1
I0428 20:23:19.538707  2217 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:19.538709  2217 net.cpp:139] Memory required for data: 17918800
I0428 20:23:19.538717  2217 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:19.538722  2217 net.cpp:86] Creating Layer relu1
I0428 20:23:19.538725  2217 net.cpp:408] relu1 <- ip1
I0428 20:23:19.538729  2217 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:19.538934  2217 net.cpp:124] Setting up relu1
I0428 20:23:19.538944  2217 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:19.538946  2217 net.cpp:139] Memory required for data: 17922800
I0428 20:23:19.538950  2217 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:19.538957  2217 net.cpp:86] Creating Layer ip2
I0428 20:23:19.538960  2217 net.cpp:408] ip2 <- ip1
I0428 20:23:19.538966  2217 net.cpp:382] ip2 -> ip2
I0428 20:23:19.539062  2217 net.cpp:124] Setting up ip2
I0428 20:23:19.539086  2217 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:19.539089  2217 net.cpp:139] Memory required for data: 17932800
I0428 20:23:19.539094  2217 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:19.539099  2217 net.cpp:86] Creating Layer relu2
I0428 20:23:19.539109  2217 net.cpp:408] relu2 <- ip2
I0428 20:23:19.539113  2217 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:19.539258  2217 net.cpp:124] Setting up relu2
I0428 20:23:19.539265  2217 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:19.539274  2217 net.cpp:139] Memory required for data: 17942800
I0428 20:23:19.539278  2217 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:19.539283  2217 net.cpp:86] Creating Layer ip3
I0428 20:23:19.539286  2217 net.cpp:408] ip3 <- ip2
I0428 20:23:19.539291  2217 net.cpp:382] ip3 -> ip3
I0428 20:23:19.539417  2217 net.cpp:124] Setting up ip3
I0428 20:23:19.539423  2217 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:19.539427  2217 net.cpp:139] Memory required for data: 17946800
I0428 20:23:19.539434  2217 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:19.539438  2217 net.cpp:86] Creating Layer relu3
I0428 20:23:19.539441  2217 net.cpp:408] relu3 <- ip3
I0428 20:23:19.539451  2217 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:19.540336  2217 net.cpp:124] Setting up relu3
I0428 20:23:19.540349  2217 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:19.540354  2217 net.cpp:139] Memory required for data: 17950800
I0428 20:23:19.540356  2217 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:19.540361  2217 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:19.540364  2217 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:19.540369  2217 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:19.540375  2217 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:19.540422  2217 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:19.540428  2217 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:19.540431  2217 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:19.540434  2217 net.cpp:139] Memory required for data: 17958800
I0428 20:23:19.540437  2217 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:19.540441  2217 net.cpp:86] Creating Layer accuracy
I0428 20:23:19.540444  2217 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:19.540449  2217 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:19.540453  2217 net.cpp:382] accuracy -> accuracy
I0428 20:23:19.540459  2217 net.cpp:124] Setting up accuracy
I0428 20:23:19.540468  2217 net.cpp:131] Top shape: (1)
I0428 20:23:19.540472  2217 net.cpp:139] Memory required for data: 17958804
I0428 20:23:19.540474  2217 layer_factory.hpp:77] Creating layer loss
I0428 20:23:19.540479  2217 net.cpp:86] Creating Layer loss
I0428 20:23:19.540482  2217 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:19.540487  2217 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:19.540489  2217 net.cpp:382] loss -> loss
I0428 20:23:19.540495  2217 layer_factory.hpp:77] Creating layer loss
I0428 20:23:19.540731  2217 net.cpp:124] Setting up loss
I0428 20:23:19.540740  2217 net.cpp:131] Top shape: (1)
I0428 20:23:19.540743  2217 net.cpp:134]     with loss weight 1
I0428 20:23:19.540772  2217 net.cpp:139] Memory required for data: 17958808
I0428 20:23:19.540791  2217 net.cpp:200] loss needs backward computation.
I0428 20:23:19.540794  2217 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:19.540797  2217 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:19.540801  2217 net.cpp:200] relu3 needs backward computation.
I0428 20:23:19.540803  2217 net.cpp:200] ip3 needs backward computation.
I0428 20:23:19.540805  2217 net.cpp:200] relu2 needs backward computation.
I0428 20:23:19.540808  2217 net.cpp:200] ip2 needs backward computation.
I0428 20:23:19.540834  2217 net.cpp:200] relu1 needs backward computation.
I0428 20:23:19.540837  2217 net.cpp:200] ip1 needs backward computation.
I0428 20:23:19.540846  2217 net.cpp:200] pool1 needs backward computation.
I0428 20:23:19.540849  2217 net.cpp:200] conv1 needs backward computation.
I0428 20:23:19.540853  2217 net.cpp:200] pool0 needs backward computation.
I0428 20:23:19.540870  2217 net.cpp:200] conv0 needs backward computation.
I0428 20:23:19.540874  2217 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:19.540877  2217 net.cpp:202] mnist does not need backward computation.
I0428 20:23:19.540880  2217 net.cpp:244] This network produces output accuracy
I0428 20:23:19.540884  2217 net.cpp:244] This network produces output loss
I0428 20:23:19.540896  2217 net.cpp:257] Network initialization done.
I0428 20:23:19.540954  2217 solver.cpp:56] Solver scaffolding done.
I0428 20:23:19.541386  2217 caffe.cpp:248] Starting Optimization
I0428 20:23:19.541393  2217 solver.cpp:273] Solving LeNet
I0428 20:23:19.541395  2217 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:19.541585  2217 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:19.552623  2217 blocking_queue.cpp:49] Waiting for data
I0428 20:23:19.633144  2226 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:19.634399  2217 solver.cpp:398]     Test net output #0: accuracy = 0.0809
I0428 20:23:19.634418  2217 solver.cpp:398]     Test net output #1: loss = 2.35531 (* 1 = 2.35531 loss)
I0428 20:23:19.641755  2217 solver.cpp:219] Iteration 0 (0 iter/s, 0.100334s/100 iters), loss = 2.42077
I0428 20:23:19.641777  2217 solver.cpp:238]     Train net output #0: loss = 2.42077 (* 1 = 2.42077 loss)
I0428 20:23:19.641803  2217 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:19.877485  2217 solver.cpp:219] Iteration 100 (424.303 iter/s, 0.235681s/100 iters), loss = 1.34702
I0428 20:23:19.877527  2217 solver.cpp:238]     Train net output #0: loss = 1.34702 (* 1 = 1.34702 loss)
I0428 20:23:19.877538  2217 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:20.123173  2217 solver.cpp:219] Iteration 200 (407.118 iter/s, 0.245629s/100 iters), loss = 0.542647
I0428 20:23:20.123217  2217 solver.cpp:238]     Train net output #0: loss = 0.542647 (* 1 = 0.542647 loss)
I0428 20:23:20.123229  2217 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:20.369330  2217 solver.cpp:219] Iteration 300 (406.347 iter/s, 0.246095s/100 iters), loss = 0.304824
I0428 20:23:20.369372  2217 solver.cpp:238]     Train net output #0: loss = 0.304824 (* 1 = 0.304824 loss)
I0428 20:23:20.369385  2217 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:20.613220  2217 solver.cpp:219] Iteration 400 (410.126 iter/s, 0.243828s/100 iters), loss = 0.188616
I0428 20:23:20.613268  2217 solver.cpp:238]     Train net output #0: loss = 0.188616 (* 1 = 0.188616 loss)
I0428 20:23:20.613281  2217 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:20.854926  2217 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:20.951475  2226 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:20.953820  2217 solver.cpp:398]     Test net output #0: accuracy = 0.9385
I0428 20:23:20.953850  2217 solver.cpp:398]     Test net output #1: loss = 0.19761 (* 1 = 0.19761 loss)
I0428 20:23:20.956001  2217 solver.cpp:219] Iteration 500 (291.788 iter/s, 0.342714s/100 iters), loss = 0.19428
I0428 20:23:20.956048  2217 solver.cpp:238]     Train net output #0: loss = 0.19428 (* 1 = 0.19428 loss)
I0428 20:23:20.956056  2217 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:21.182801  2217 solver.cpp:219] Iteration 600 (441.041 iter/s, 0.226736s/100 iters), loss = 0.152236
I0428 20:23:21.182837  2217 solver.cpp:238]     Train net output #0: loss = 0.152236 (* 1 = 0.152236 loss)
I0428 20:23:21.182847  2217 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:21.416754  2217 solver.cpp:219] Iteration 700 (427.535 iter/s, 0.233899s/100 iters), loss = 0.133887
I0428 20:23:21.416795  2217 solver.cpp:238]     Train net output #0: loss = 0.133887 (* 1 = 0.133887 loss)
I0428 20:23:21.416823  2217 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:21.652094  2217 solver.cpp:219] Iteration 800 (425.028 iter/s, 0.235278s/100 iters), loss = 0.283196
I0428 20:23:21.652142  2217 solver.cpp:238]     Train net output #0: loss = 0.283196 (* 1 = 0.283196 loss)
I0428 20:23:21.652153  2217 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:21.888465  2217 solver.cpp:219] Iteration 900 (423.178 iter/s, 0.236307s/100 iters), loss = 0.135631
I0428 20:23:21.888509  2217 solver.cpp:238]     Train net output #0: loss = 0.135631 (* 1 = 0.135631 loss)
I0428 20:23:21.888520  2217 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:21.966560  2225 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:22.122422  2217 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:22.128670  2217 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:22.131211  2217 solver.cpp:311] Iteration 1000, loss = 0.106295
I0428 20:23:22.131238  2217 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:22.223187  2226 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:22.225473  2217 solver.cpp:398]     Test net output #0: accuracy = 0.9723
I0428 20:23:22.225497  2217 solver.cpp:398]     Test net output #1: loss = 0.0863939 (* 1 = 0.0863939 loss)
I0428 20:23:22.225503  2217 solver.cpp:316] Optimization Done.
I0428 20:23:22.225507  2217 caffe.cpp:259] Optimization Done.
