I0428 19:31:08.496923 22503 caffe.cpp:218] Using GPUs 0
I0428 19:31:08.531229 22503 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:08.981801 22503 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test113.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:08.981946 22503 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test113.prototxt
I0428 19:31:08.982272 22503 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:08.982302 22503 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:08.982375 22503 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:08.982437 22503 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:08.982532 22503 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:08.982552 22503 net.cpp:86] Creating Layer mnist
I0428 19:31:08.982559 22503 net.cpp:382] mnist -> data
I0428 19:31:08.982578 22503 net.cpp:382] mnist -> label
I0428 19:31:08.983605 22503 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:08.985921 22503 net.cpp:124] Setting up mnist
I0428 19:31:08.985954 22503 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:08.985970 22503 net.cpp:131] Top shape: 64 (64)
I0428 19:31:08.985972 22503 net.cpp:139] Memory required for data: 200960
I0428 19:31:08.985978 22503 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:08.985991 22503 net.cpp:86] Creating Layer conv0
I0428 19:31:08.986002 22503 net.cpp:408] conv0 <- data
I0428 19:31:08.986012 22503 net.cpp:382] conv0 -> conv0
I0428 19:31:09.214392 22503 net.cpp:124] Setting up conv0
I0428 19:31:09.214437 22503 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:09.214440 22503 net.cpp:139] Memory required for data: 938240
I0428 19:31:09.214455 22503 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:09.214483 22503 net.cpp:86] Creating Layer pool0
I0428 19:31:09.214507 22503 net.cpp:408] pool0 <- conv0
I0428 19:31:09.214514 22503 net.cpp:382] pool0 -> pool0
I0428 19:31:09.214562 22503 net.cpp:124] Setting up pool0
I0428 19:31:09.214570 22503 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:09.214572 22503 net.cpp:139] Memory required for data: 1122560
I0428 19:31:09.214576 22503 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:09.214583 22503 net.cpp:86] Creating Layer ip1
I0428 19:31:09.214586 22503 net.cpp:408] ip1 <- pool0
I0428 19:31:09.214591 22503 net.cpp:382] ip1 -> ip1
I0428 19:31:09.214912 22503 net.cpp:124] Setting up ip1
I0428 19:31:09.214920 22503 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:09.214938 22503 net.cpp:139] Memory required for data: 1135360
I0428 19:31:09.214946 22503 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:09.214951 22503 net.cpp:86] Creating Layer relu1
I0428 19:31:09.214954 22503 net.cpp:408] relu1 <- ip1
I0428 19:31:09.214958 22503 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:09.215111 22503 net.cpp:124] Setting up relu1
I0428 19:31:09.215119 22503 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:09.215122 22503 net.cpp:139] Memory required for data: 1148160
I0428 19:31:09.215126 22503 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:09.215131 22503 net.cpp:86] Creating Layer ip2
I0428 19:31:09.215134 22503 net.cpp:408] ip2 <- ip1
I0428 19:31:09.215139 22503 net.cpp:382] ip2 -> ip2
I0428 19:31:09.216188 22503 net.cpp:124] Setting up ip2
I0428 19:31:09.216202 22503 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:09.216220 22503 net.cpp:139] Memory required for data: 1154560
I0428 19:31:09.216229 22503 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:09.216234 22503 net.cpp:86] Creating Layer relu2
I0428 19:31:09.216238 22503 net.cpp:408] relu2 <- ip2
I0428 19:31:09.216243 22503 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:09.217087 22503 net.cpp:124] Setting up relu2
I0428 19:31:09.217099 22503 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:09.217118 22503 net.cpp:139] Memory required for data: 1160960
I0428 19:31:09.217123 22503 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:09.217130 22503 net.cpp:86] Creating Layer ip3
I0428 19:31:09.217133 22503 net.cpp:408] ip3 <- ip2
I0428 19:31:09.217139 22503 net.cpp:382] ip3 -> ip3
I0428 19:31:09.217234 22503 net.cpp:124] Setting up ip3
I0428 19:31:09.217242 22503 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:09.217244 22503 net.cpp:139] Memory required for data: 1163520
I0428 19:31:09.217249 22503 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:09.217255 22503 net.cpp:86] Creating Layer relu3
I0428 19:31:09.217258 22503 net.cpp:408] relu3 <- ip3
I0428 19:31:09.217263 22503 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:09.217406 22503 net.cpp:124] Setting up relu3
I0428 19:31:09.217414 22503 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:09.217417 22503 net.cpp:139] Memory required for data: 1166080
I0428 19:31:09.217420 22503 layer_factory.hpp:77] Creating layer loss
I0428 19:31:09.217427 22503 net.cpp:86] Creating Layer loss
I0428 19:31:09.217429 22503 net.cpp:408] loss <- ip3
I0428 19:31:09.217448 22503 net.cpp:408] loss <- label
I0428 19:31:09.217454 22503 net.cpp:382] loss -> loss
I0428 19:31:09.217474 22503 layer_factory.hpp:77] Creating layer loss
I0428 19:31:09.217782 22503 net.cpp:124] Setting up loss
I0428 19:31:09.217793 22503 net.cpp:131] Top shape: (1)
I0428 19:31:09.217813 22503 net.cpp:134]     with loss weight 1
I0428 19:31:09.217828 22503 net.cpp:139] Memory required for data: 1166084
I0428 19:31:09.217831 22503 net.cpp:200] loss needs backward computation.
I0428 19:31:09.217835 22503 net.cpp:200] relu3 needs backward computation.
I0428 19:31:09.217839 22503 net.cpp:200] ip3 needs backward computation.
I0428 19:31:09.217842 22503 net.cpp:200] relu2 needs backward computation.
I0428 19:31:09.217845 22503 net.cpp:200] ip2 needs backward computation.
I0428 19:31:09.217849 22503 net.cpp:200] relu1 needs backward computation.
I0428 19:31:09.217851 22503 net.cpp:200] ip1 needs backward computation.
I0428 19:31:09.217866 22503 net.cpp:200] pool0 needs backward computation.
I0428 19:31:09.217869 22503 net.cpp:200] conv0 needs backward computation.
I0428 19:31:09.217874 22503 net.cpp:202] mnist does not need backward computation.
I0428 19:31:09.217876 22503 net.cpp:244] This network produces output loss
I0428 19:31:09.217886 22503 net.cpp:257] Network initialization done.
I0428 19:31:09.218228 22503 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test113.prototxt
I0428 19:31:09.218268 22503 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:09.218345 22503 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:09.218405 22503 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:09.218464 22503 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:09.218492 22503 net.cpp:86] Creating Layer mnist
I0428 19:31:09.218497 22503 net.cpp:382] mnist -> data
I0428 19:31:09.218503 22503 net.cpp:382] mnist -> label
I0428 19:31:09.218582 22503 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:09.220590 22503 net.cpp:124] Setting up mnist
I0428 19:31:09.220619 22503 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:09.220625 22503 net.cpp:131] Top shape: 100 (100)
I0428 19:31:09.220628 22503 net.cpp:139] Memory required for data: 314000
I0428 19:31:09.220633 22503 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:09.220650 22503 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:09.220654 22503 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:09.220674 22503 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:09.220681 22503 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:09.220778 22503 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:09.220787 22503 net.cpp:131] Top shape: 100 (100)
I0428 19:31:09.220790 22503 net.cpp:131] Top shape: 100 (100)
I0428 19:31:09.220794 22503 net.cpp:139] Memory required for data: 314800
I0428 19:31:09.220806 22503 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:09.220825 22503 net.cpp:86] Creating Layer conv0
I0428 19:31:09.220829 22503 net.cpp:408] conv0 <- data
I0428 19:31:09.220851 22503 net.cpp:382] conv0 -> conv0
I0428 19:31:09.222394 22503 net.cpp:124] Setting up conv0
I0428 19:31:09.222407 22503 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:09.222411 22503 net.cpp:139] Memory required for data: 1466800
I0428 19:31:09.222420 22503 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:09.222426 22503 net.cpp:86] Creating Layer pool0
I0428 19:31:09.222429 22503 net.cpp:408] pool0 <- conv0
I0428 19:31:09.222434 22503 net.cpp:382] pool0 -> pool0
I0428 19:31:09.222467 22503 net.cpp:124] Setting up pool0
I0428 19:31:09.222472 22503 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:09.222474 22503 net.cpp:139] Memory required for data: 1754800
I0428 19:31:09.222477 22503 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:09.222486 22503 net.cpp:86] Creating Layer ip1
I0428 19:31:09.222488 22503 net.cpp:408] ip1 <- pool0
I0428 19:31:09.222493 22503 net.cpp:382] ip1 -> ip1
I0428 19:31:09.222784 22503 net.cpp:124] Setting up ip1
I0428 19:31:09.222791 22503 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:09.222795 22503 net.cpp:139] Memory required for data: 1774800
I0428 19:31:09.222802 22503 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:09.222807 22503 net.cpp:86] Creating Layer relu1
I0428 19:31:09.222810 22503 net.cpp:408] relu1 <- ip1
I0428 19:31:09.222815 22503 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:09.223153 22503 net.cpp:124] Setting up relu1
I0428 19:31:09.223163 22503 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:09.223166 22503 net.cpp:139] Memory required for data: 1794800
I0428 19:31:09.223170 22503 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:09.223178 22503 net.cpp:86] Creating Layer ip2
I0428 19:31:09.223181 22503 net.cpp:408] ip2 <- ip1
I0428 19:31:09.223202 22503 net.cpp:382] ip2 -> ip2
I0428 19:31:09.223346 22503 net.cpp:124] Setting up ip2
I0428 19:31:09.223354 22503 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:09.223358 22503 net.cpp:139] Memory required for data: 1804800
I0428 19:31:09.223366 22503 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:09.223371 22503 net.cpp:86] Creating Layer relu2
I0428 19:31:09.223373 22503 net.cpp:408] relu2 <- ip2
I0428 19:31:09.223399 22503 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:09.224241 22503 net.cpp:124] Setting up relu2
I0428 19:31:09.224253 22503 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:09.224257 22503 net.cpp:139] Memory required for data: 1814800
I0428 19:31:09.224261 22503 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:09.224270 22503 net.cpp:86] Creating Layer ip3
I0428 19:31:09.224274 22503 net.cpp:408] ip3 <- ip2
I0428 19:31:09.224282 22503 net.cpp:382] ip3 -> ip3
I0428 19:31:09.224421 22503 net.cpp:124] Setting up ip3
I0428 19:31:09.224429 22503 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:09.224432 22503 net.cpp:139] Memory required for data: 1818800
I0428 19:31:09.224438 22503 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:09.224443 22503 net.cpp:86] Creating Layer relu3
I0428 19:31:09.224447 22503 net.cpp:408] relu3 <- ip3
I0428 19:31:09.224450 22503 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:09.224722 22503 net.cpp:124] Setting up relu3
I0428 19:31:09.224732 22503 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:09.224742 22503 net.cpp:139] Memory required for data: 1822800
I0428 19:31:09.224745 22503 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:09.224750 22503 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:09.224758 22503 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:09.224764 22503 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:09.224771 22503 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:09.224819 22503 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:09.224825 22503 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:09.224835 22503 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:09.224864 22503 net.cpp:139] Memory required for data: 1830800
I0428 19:31:09.224867 22503 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:09.224875 22503 net.cpp:86] Creating Layer accuracy
I0428 19:31:09.224879 22503 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:09.224884 22503 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:09.224889 22503 net.cpp:382] accuracy -> accuracy
I0428 19:31:09.224903 22503 net.cpp:124] Setting up accuracy
I0428 19:31:09.224913 22503 net.cpp:131] Top shape: (1)
I0428 19:31:09.224916 22503 net.cpp:139] Memory required for data: 1830804
I0428 19:31:09.224920 22503 layer_factory.hpp:77] Creating layer loss
I0428 19:31:09.224923 22503 net.cpp:86] Creating Layer loss
I0428 19:31:09.224927 22503 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:09.224931 22503 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:09.224936 22503 net.cpp:382] loss -> loss
I0428 19:31:09.224942 22503 layer_factory.hpp:77] Creating layer loss
I0428 19:31:09.225215 22503 net.cpp:124] Setting up loss
I0428 19:31:09.225226 22503 net.cpp:131] Top shape: (1)
I0428 19:31:09.225229 22503 net.cpp:134]     with loss weight 1
I0428 19:31:09.225235 22503 net.cpp:139] Memory required for data: 1830808
I0428 19:31:09.225239 22503 net.cpp:200] loss needs backward computation.
I0428 19:31:09.225242 22503 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:09.225246 22503 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:09.225265 22503 net.cpp:200] relu3 needs backward computation.
I0428 19:31:09.225268 22503 net.cpp:200] ip3 needs backward computation.
I0428 19:31:09.225271 22503 net.cpp:200] relu2 needs backward computation.
I0428 19:31:09.225286 22503 net.cpp:200] ip2 needs backward computation.
I0428 19:31:09.225289 22503 net.cpp:200] relu1 needs backward computation.
I0428 19:31:09.225292 22503 net.cpp:200] ip1 needs backward computation.
I0428 19:31:09.225317 22503 net.cpp:200] pool0 needs backward computation.
I0428 19:31:09.225319 22503 net.cpp:200] conv0 needs backward computation.
I0428 19:31:09.225323 22503 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:09.225330 22503 net.cpp:202] mnist does not need backward computation.
I0428 19:31:09.225333 22503 net.cpp:244] This network produces output accuracy
I0428 19:31:09.225337 22503 net.cpp:244] This network produces output loss
I0428 19:31:09.225347 22503 net.cpp:257] Network initialization done.
I0428 19:31:09.225400 22503 solver.cpp:56] Solver scaffolding done.
I0428 19:31:09.225731 22503 caffe.cpp:248] Starting Optimization
I0428 19:31:09.225738 22503 solver.cpp:273] Solving LeNet
I0428 19:31:09.225747 22503 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:09.226548 22503 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:09.230618 22503 blocking_queue.cpp:49] Waiting for data
I0428 19:31:09.301848 22510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:09.302299 22503 solver.cpp:398]     Test net output #0: accuracy = 0.0432
I0428 19:31:09.302319 22503 solver.cpp:398]     Test net output #1: loss = 2.33013 (* 1 = 2.33013 loss)
I0428 19:31:09.304003 22503 solver.cpp:219] Iteration 0 (0 iter/s, 0.0782295s/100 iters), loss = 2.32544
I0428 19:31:09.304067 22503 solver.cpp:238]     Train net output #0: loss = 2.32544 (* 1 = 2.32544 loss)
I0428 19:31:09.304083 22503 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:09.384634 22503 solver.cpp:219] Iteration 100 (1241.44 iter/s, 0.0805515s/100 iters), loss = 0.629466
I0428 19:31:09.384658 22503 solver.cpp:238]     Train net output #0: loss = 0.629466 (* 1 = 0.629466 loss)
I0428 19:31:09.384680 22503 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:09.446477 22503 solver.cpp:219] Iteration 200 (1617.87 iter/s, 0.0618097s/100 iters), loss = 0.274887
I0428 19:31:09.446522 22503 solver.cpp:238]     Train net output #0: loss = 0.274887 (* 1 = 0.274887 loss)
I0428 19:31:09.446543 22503 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:09.507323 22503 solver.cpp:219] Iteration 300 (1644.54 iter/s, 0.0608073s/100 iters), loss = 0.258973
I0428 19:31:09.507346 22503 solver.cpp:238]     Train net output #0: loss = 0.258973 (* 1 = 0.258973 loss)
I0428 19:31:09.507352 22503 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:09.567170 22503 solver.cpp:219] Iteration 400 (1671.8 iter/s, 0.0598159s/100 iters), loss = 0.124572
I0428 19:31:09.567209 22503 solver.cpp:238]     Train net output #0: loss = 0.124573 (* 1 = 0.124573 loss)
I0428 19:31:09.567214 22503 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:09.626703 22503 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:09.695345 22510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:09.695879 22503 solver.cpp:398]     Test net output #0: accuracy = 0.9421
I0428 19:31:09.695927 22503 solver.cpp:398]     Test net output #1: loss = 0.185441 (* 1 = 0.185441 loss)
I0428 19:31:09.696730 22503 solver.cpp:219] Iteration 500 (772.059 iter/s, 0.129524s/100 iters), loss = 0.303927
I0428 19:31:09.696765 22503 solver.cpp:238]     Train net output #0: loss = 0.303927 (* 1 = 0.303927 loss)
I0428 19:31:09.696782 22503 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:09.768457 22503 solver.cpp:219] Iteration 600 (1395.01 iter/s, 0.0716841s/100 iters), loss = 0.191695
I0428 19:31:09.768491 22503 solver.cpp:238]     Train net output #0: loss = 0.191695 (* 1 = 0.191695 loss)
I0428 19:31:09.768498 22503 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:09.834019 22503 solver.cpp:219] Iteration 700 (1526.26 iter/s, 0.0655196s/100 iters), loss = 0.329044
I0428 19:31:09.834049 22503 solver.cpp:238]     Train net output #0: loss = 0.329044 (* 1 = 0.329044 loss)
I0428 19:31:09.834059 22503 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:09.899206 22503 solver.cpp:219] Iteration 800 (1534.97 iter/s, 0.0651479s/100 iters), loss = 0.323397
I0428 19:31:09.899235 22503 solver.cpp:238]     Train net output #0: loss = 0.323397 (* 1 = 0.323397 loss)
I0428 19:31:09.899242 22503 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:09.964295 22503 solver.cpp:219] Iteration 900 (1537.26 iter/s, 0.0650506s/100 iters), loss = 0.205706
I0428 19:31:09.964323 22503 solver.cpp:238]     Train net output #0: loss = 0.205706 (* 1 = 0.205706 loss)
I0428 19:31:09.964330 22503 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:09.986156 22509 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:10.028555 22503 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:10.029819 22503 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:10.030742 22503 solver.cpp:311] Iteration 1000, loss = 0.142565
I0428 19:31:10.030774 22503 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:10.105805 22510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:10.106369 22503 solver.cpp:398]     Test net output #0: accuracy = 0.9649
I0428 19:31:10.106405 22503 solver.cpp:398]     Test net output #1: loss = 0.116723 (* 1 = 0.116723 loss)
I0428 19:31:10.106415 22503 solver.cpp:316] Optimization Done.
I0428 19:31:10.106421 22503 caffe.cpp:259] Optimization Done.
