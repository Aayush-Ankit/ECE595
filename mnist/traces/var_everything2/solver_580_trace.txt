I0428 19:49:37.003741 26809 caffe.cpp:218] Using GPUs 0
I0428 19:49:37.034155 26809 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:37.521924 26809 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test580.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:37.522070 26809 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test580.prototxt
I0428 19:49:37.522420 26809 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:37.522450 26809 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:37.522548 26809 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:37.522611 26809 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:37.522739 26809 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:37.522763 26809 net.cpp:86] Creating Layer mnist
I0428 19:49:37.522768 26809 net.cpp:382] mnist -> data
I0428 19:49:37.522789 26809 net.cpp:382] mnist -> label
I0428 19:49:37.523763 26809 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:37.525867 26809 net.cpp:124] Setting up mnist
I0428 19:49:37.525898 26809 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:37.525904 26809 net.cpp:131] Top shape: 64 (64)
I0428 19:49:37.525907 26809 net.cpp:139] Memory required for data: 200960
I0428 19:49:37.525913 26809 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:37.525945 26809 net.cpp:86] Creating Layer conv0
I0428 19:49:37.525974 26809 net.cpp:408] conv0 <- data
I0428 19:49:37.525985 26809 net.cpp:382] conv0 -> conv0
I0428 19:49:37.750823 26809 net.cpp:124] Setting up conv0
I0428 19:49:37.750865 26809 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:37.750869 26809 net.cpp:139] Memory required for data: 938240
I0428 19:49:37.750885 26809 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:37.750896 26809 net.cpp:86] Creating Layer pool0
I0428 19:49:37.750900 26809 net.cpp:408] pool0 <- conv0
I0428 19:49:37.750921 26809 net.cpp:382] pool0 -> pool0
I0428 19:49:37.750982 26809 net.cpp:124] Setting up pool0
I0428 19:49:37.751009 26809 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:37.751013 26809 net.cpp:139] Memory required for data: 1122560
I0428 19:49:37.751015 26809 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:37.751024 26809 net.cpp:86] Creating Layer conv1
I0428 19:49:37.751027 26809 net.cpp:408] conv1 <- pool0
I0428 19:49:37.751032 26809 net.cpp:382] conv1 -> conv1
I0428 19:49:37.752786 26809 net.cpp:124] Setting up conv1
I0428 19:49:37.752821 26809 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:37.752825 26809 net.cpp:139] Memory required for data: 1204480
I0428 19:49:37.752835 26809 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:37.752856 26809 net.cpp:86] Creating Layer pool1
I0428 19:49:37.752861 26809 net.cpp:408] pool1 <- conv1
I0428 19:49:37.752866 26809 net.cpp:382] pool1 -> pool1
I0428 19:49:37.752904 26809 net.cpp:124] Setting up pool1
I0428 19:49:37.752909 26809 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:37.752912 26809 net.cpp:139] Memory required for data: 1224960
I0428 19:49:37.752915 26809 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:37.752923 26809 net.cpp:86] Creating Layer ip1
I0428 19:49:37.752925 26809 net.cpp:408] ip1 <- pool1
I0428 19:49:37.752930 26809 net.cpp:382] ip1 -> ip1
I0428 19:49:37.753937 26809 net.cpp:124] Setting up ip1
I0428 19:49:37.753949 26809 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:37.753968 26809 net.cpp:139] Memory required for data: 1237760
I0428 19:49:37.753976 26809 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:37.753983 26809 net.cpp:86] Creating Layer relu1
I0428 19:49:37.753988 26809 net.cpp:408] relu1 <- ip1
I0428 19:49:37.753991 26809 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:37.754169 26809 net.cpp:124] Setting up relu1
I0428 19:49:37.754179 26809 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:37.754181 26809 net.cpp:139] Memory required for data: 1250560
I0428 19:49:37.754184 26809 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:37.754191 26809 net.cpp:86] Creating Layer ip2
I0428 19:49:37.754194 26809 net.cpp:408] ip2 <- ip1
I0428 19:49:37.754200 26809 net.cpp:382] ip2 -> ip2
I0428 19:49:37.754317 26809 net.cpp:124] Setting up ip2
I0428 19:49:37.754323 26809 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:37.754326 26809 net.cpp:139] Memory required for data: 1256960
I0428 19:49:37.754331 26809 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:37.754338 26809 net.cpp:86] Creating Layer relu2
I0428 19:49:37.754340 26809 net.cpp:408] relu2 <- ip2
I0428 19:49:37.754343 26809 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:37.755067 26809 net.cpp:124] Setting up relu2
I0428 19:49:37.755080 26809 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:37.755100 26809 net.cpp:139] Memory required for data: 1263360
I0428 19:49:37.755102 26809 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:37.755110 26809 net.cpp:86] Creating Layer ip3
I0428 19:49:37.755113 26809 net.cpp:408] ip3 <- ip2
I0428 19:49:37.755120 26809 net.cpp:382] ip3 -> ip3
I0428 19:49:37.755223 26809 net.cpp:124] Setting up ip3
I0428 19:49:37.755229 26809 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:37.755233 26809 net.cpp:139] Memory required for data: 1265920
I0428 19:49:37.755239 26809 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:37.755245 26809 net.cpp:86] Creating Layer relu3
I0428 19:49:37.755249 26809 net.cpp:408] relu3 <- ip3
I0428 19:49:37.755252 26809 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:37.755436 26809 net.cpp:124] Setting up relu3
I0428 19:49:37.755445 26809 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:37.755448 26809 net.cpp:139] Memory required for data: 1268480
I0428 19:49:37.755451 26809 layer_factory.hpp:77] Creating layer loss
I0428 19:49:37.755456 26809 net.cpp:86] Creating Layer loss
I0428 19:49:37.755460 26809 net.cpp:408] loss <- ip3
I0428 19:49:37.755462 26809 net.cpp:408] loss <- label
I0428 19:49:37.755468 26809 net.cpp:382] loss -> loss
I0428 19:49:37.755486 26809 layer_factory.hpp:77] Creating layer loss
I0428 19:49:37.755760 26809 net.cpp:124] Setting up loss
I0428 19:49:37.755769 26809 net.cpp:131] Top shape: (1)
I0428 19:49:37.755771 26809 net.cpp:134]     with loss weight 1
I0428 19:49:37.755784 26809 net.cpp:139] Memory required for data: 1268484
I0428 19:49:37.755787 26809 net.cpp:200] loss needs backward computation.
I0428 19:49:37.755791 26809 net.cpp:200] relu3 needs backward computation.
I0428 19:49:37.755794 26809 net.cpp:200] ip3 needs backward computation.
I0428 19:49:37.755796 26809 net.cpp:200] relu2 needs backward computation.
I0428 19:49:37.755800 26809 net.cpp:200] ip2 needs backward computation.
I0428 19:49:37.755802 26809 net.cpp:200] relu1 needs backward computation.
I0428 19:49:37.755805 26809 net.cpp:200] ip1 needs backward computation.
I0428 19:49:37.755807 26809 net.cpp:200] pool1 needs backward computation.
I0428 19:49:37.755810 26809 net.cpp:200] conv1 needs backward computation.
I0428 19:49:37.755813 26809 net.cpp:200] pool0 needs backward computation.
I0428 19:49:37.755815 26809 net.cpp:200] conv0 needs backward computation.
I0428 19:49:37.755820 26809 net.cpp:202] mnist does not need backward computation.
I0428 19:49:37.755821 26809 net.cpp:244] This network produces output loss
I0428 19:49:37.755831 26809 net.cpp:257] Network initialization done.
I0428 19:49:37.756184 26809 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test580.prototxt
I0428 19:49:37.756225 26809 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:37.756315 26809 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:37.756424 26809 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:37.756464 26809 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:37.756475 26809 net.cpp:86] Creating Layer mnist
I0428 19:49:37.756480 26809 net.cpp:382] mnist -> data
I0428 19:49:37.756487 26809 net.cpp:382] mnist -> label
I0428 19:49:37.756582 26809 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:37.758536 26809 net.cpp:124] Setting up mnist
I0428 19:49:37.758566 26809 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:37.758571 26809 net.cpp:131] Top shape: 100 (100)
I0428 19:49:37.758574 26809 net.cpp:139] Memory required for data: 314000
I0428 19:49:37.758577 26809 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:37.758589 26809 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:37.758591 26809 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:37.758595 26809 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:37.758601 26809 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:37.758705 26809 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:37.758713 26809 net.cpp:131] Top shape: 100 (100)
I0428 19:49:37.758716 26809 net.cpp:131] Top shape: 100 (100)
I0428 19:49:37.758718 26809 net.cpp:139] Memory required for data: 314800
I0428 19:49:37.758721 26809 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:37.758730 26809 net.cpp:86] Creating Layer conv0
I0428 19:49:37.758733 26809 net.cpp:408] conv0 <- data
I0428 19:49:37.758739 26809 net.cpp:382] conv0 -> conv0
I0428 19:49:37.760361 26809 net.cpp:124] Setting up conv0
I0428 19:49:37.760375 26809 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:37.760393 26809 net.cpp:139] Memory required for data: 1466800
I0428 19:49:37.760401 26809 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:37.760408 26809 net.cpp:86] Creating Layer pool0
I0428 19:49:37.760411 26809 net.cpp:408] pool0 <- conv0
I0428 19:49:37.760417 26809 net.cpp:382] pool0 -> pool0
I0428 19:49:37.760452 26809 net.cpp:124] Setting up pool0
I0428 19:49:37.760457 26809 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:37.760459 26809 net.cpp:139] Memory required for data: 1754800
I0428 19:49:37.760462 26809 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:37.760470 26809 net.cpp:86] Creating Layer conv1
I0428 19:49:37.760473 26809 net.cpp:408] conv1 <- pool0
I0428 19:49:37.760479 26809 net.cpp:382] conv1 -> conv1
I0428 19:49:37.762629 26809 net.cpp:124] Setting up conv1
I0428 19:49:37.762641 26809 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:37.762662 26809 net.cpp:139] Memory required for data: 1882800
I0428 19:49:37.762672 26809 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:37.762679 26809 net.cpp:86] Creating Layer pool1
I0428 19:49:37.762682 26809 net.cpp:408] pool1 <- conv1
I0428 19:49:37.762688 26809 net.cpp:382] pool1 -> pool1
I0428 19:49:37.762727 26809 net.cpp:124] Setting up pool1
I0428 19:49:37.762732 26809 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:37.762735 26809 net.cpp:139] Memory required for data: 1914800
I0428 19:49:37.762738 26809 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:37.762744 26809 net.cpp:86] Creating Layer ip1
I0428 19:49:37.762748 26809 net.cpp:408] ip1 <- pool1
I0428 19:49:37.762776 26809 net.cpp:382] ip1 -> ip1
I0428 19:49:37.762900 26809 net.cpp:124] Setting up ip1
I0428 19:49:37.762908 26809 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:37.762920 26809 net.cpp:139] Memory required for data: 1934800
I0428 19:49:37.762928 26809 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:37.762935 26809 net.cpp:86] Creating Layer relu1
I0428 19:49:37.762938 26809 net.cpp:408] relu1 <- ip1
I0428 19:49:37.762943 26809 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:37.763116 26809 net.cpp:124] Setting up relu1
I0428 19:49:37.763142 26809 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:37.763145 26809 net.cpp:139] Memory required for data: 1954800
I0428 19:49:37.763149 26809 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:37.763157 26809 net.cpp:86] Creating Layer ip2
I0428 19:49:37.763161 26809 net.cpp:408] ip2 <- ip1
I0428 19:49:37.763166 26809 net.cpp:382] ip2 -> ip2
I0428 19:49:37.763276 26809 net.cpp:124] Setting up ip2
I0428 19:49:37.763283 26809 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:37.763288 26809 net.cpp:139] Memory required for data: 1964800
I0428 19:49:37.763293 26809 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:37.763298 26809 net.cpp:86] Creating Layer relu2
I0428 19:49:37.763300 26809 net.cpp:408] relu2 <- ip2
I0428 19:49:37.763305 26809 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:37.763495 26809 net.cpp:124] Setting up relu2
I0428 19:49:37.763504 26809 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:37.763506 26809 net.cpp:139] Memory required for data: 1974800
I0428 19:49:37.763509 26809 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:37.763528 26809 net.cpp:86] Creating Layer ip3
I0428 19:49:37.763531 26809 net.cpp:408] ip3 <- ip2
I0428 19:49:37.763537 26809 net.cpp:382] ip3 -> ip3
I0428 19:49:37.763674 26809 net.cpp:124] Setting up ip3
I0428 19:49:37.763680 26809 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:37.763684 26809 net.cpp:139] Memory required for data: 1978800
I0428 19:49:37.763691 26809 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:37.763696 26809 net.cpp:86] Creating Layer relu3
I0428 19:49:37.763700 26809 net.cpp:408] relu3 <- ip3
I0428 19:49:37.763703 26809 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:37.764544 26809 net.cpp:124] Setting up relu3
I0428 19:49:37.764559 26809 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:37.764578 26809 net.cpp:139] Memory required for data: 1982800
I0428 19:49:37.764582 26809 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:37.764590 26809 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:37.764592 26809 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:37.764597 26809 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:37.764603 26809 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:37.764642 26809 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:37.764647 26809 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:37.764650 26809 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:37.764653 26809 net.cpp:139] Memory required for data: 1990800
I0428 19:49:37.764657 26809 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:37.764662 26809 net.cpp:86] Creating Layer accuracy
I0428 19:49:37.764664 26809 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:37.764667 26809 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:37.764673 26809 net.cpp:382] accuracy -> accuracy
I0428 19:49:37.764679 26809 net.cpp:124] Setting up accuracy
I0428 19:49:37.764683 26809 net.cpp:131] Top shape: (1)
I0428 19:49:37.764686 26809 net.cpp:139] Memory required for data: 1990804
I0428 19:49:37.764689 26809 layer_factory.hpp:77] Creating layer loss
I0428 19:49:37.764693 26809 net.cpp:86] Creating Layer loss
I0428 19:49:37.764698 26809 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:37.764700 26809 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:37.764705 26809 net.cpp:382] loss -> loss
I0428 19:49:37.764713 26809 layer_factory.hpp:77] Creating layer loss
I0428 19:49:37.764986 26809 net.cpp:124] Setting up loss
I0428 19:49:37.764995 26809 net.cpp:131] Top shape: (1)
I0428 19:49:37.764998 26809 net.cpp:134]     with loss weight 1
I0428 19:49:37.765005 26809 net.cpp:139] Memory required for data: 1990808
I0428 19:49:37.765017 26809 net.cpp:200] loss needs backward computation.
I0428 19:49:37.765022 26809 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:37.765025 26809 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:37.765028 26809 net.cpp:200] relu3 needs backward computation.
I0428 19:49:37.765031 26809 net.cpp:200] ip3 needs backward computation.
I0428 19:49:37.765034 26809 net.cpp:200] relu2 needs backward computation.
I0428 19:49:37.765036 26809 net.cpp:200] ip2 needs backward computation.
I0428 19:49:37.765039 26809 net.cpp:200] relu1 needs backward computation.
I0428 19:49:37.765041 26809 net.cpp:200] ip1 needs backward computation.
I0428 19:49:37.765044 26809 net.cpp:200] pool1 needs backward computation.
I0428 19:49:37.765048 26809 net.cpp:200] conv1 needs backward computation.
I0428 19:49:37.765050 26809 net.cpp:200] pool0 needs backward computation.
I0428 19:49:37.765054 26809 net.cpp:200] conv0 needs backward computation.
I0428 19:49:37.765058 26809 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:37.765061 26809 net.cpp:202] mnist does not need backward computation.
I0428 19:49:37.765064 26809 net.cpp:244] This network produces output accuracy
I0428 19:49:37.765067 26809 net.cpp:244] This network produces output loss
I0428 19:49:37.765079 26809 net.cpp:257] Network initialization done.
I0428 19:49:37.765120 26809 solver.cpp:56] Solver scaffolding done.
I0428 19:49:37.765487 26809 caffe.cpp:248] Starting Optimization
I0428 19:49:37.765492 26809 solver.cpp:273] Solving LeNet
I0428 19:49:37.765496 26809 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:37.766407 26809 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:37.769950 26809 blocking_queue.cpp:49] Waiting for data
I0428 19:49:37.837940 26816 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:37.838434 26809 solver.cpp:398]     Test net output #0: accuracy = 0.071
I0428 19:49:37.838464 26809 solver.cpp:398]     Test net output #1: loss = 2.30772 (* 1 = 2.30772 loss)
I0428 19:49:37.840229 26809 solver.cpp:219] Iteration 0 (0 iter/s, 0.0746885s/100 iters), loss = 2.2998
I0428 19:49:37.840273 26809 solver.cpp:238]     Train net output #0: loss = 2.2998 (* 1 = 2.2998 loss)
I0428 19:49:37.840286 26809 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:37.913307 26809 solver.cpp:219] Iteration 100 (1369.7 iter/s, 0.0730085s/100 iters), loss = 0.687688
I0428 19:49:37.913347 26809 solver.cpp:238]     Train net output #0: loss = 0.687688 (* 1 = 0.687688 loss)
I0428 19:49:37.913353 26809 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:37.984719 26809 solver.cpp:219] Iteration 200 (1401.27 iter/s, 0.0713636s/100 iters), loss = 0.222523
I0428 19:49:37.984757 26809 solver.cpp:238]     Train net output #0: loss = 0.222523 (* 1 = 0.222523 loss)
I0428 19:49:37.984763 26809 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:38.056676 26809 solver.cpp:219] Iteration 300 (1390.34 iter/s, 0.0719247s/100 iters), loss = 0.354827
I0428 19:49:38.056713 26809 solver.cpp:238]     Train net output #0: loss = 0.354827 (* 1 = 0.354827 loss)
I0428 19:49:38.056720 26809 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:38.136930 26809 solver.cpp:219] Iteration 400 (1246.52 iter/s, 0.0802232s/100 iters), loss = 0.0715746
I0428 19:49:38.136968 26809 solver.cpp:238]     Train net output #0: loss = 0.0715746 (* 1 = 0.0715746 loss)
I0428 19:49:38.136975 26809 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:38.209280 26809 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:38.277735 26816 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:38.278240 26809 solver.cpp:398]     Test net output #0: accuracy = 0.9453
I0428 19:49:38.278273 26809 solver.cpp:398]     Test net output #1: loss = 0.169575 (* 1 = 0.169575 loss)
I0428 19:49:38.279090 26809 solver.cpp:219] Iteration 500 (703.61 iter/s, 0.142124s/100 iters), loss = 0.191783
I0428 19:49:38.279144 26809 solver.cpp:238]     Train net output #0: loss = 0.191783 (* 1 = 0.191783 loss)
I0428 19:49:38.279182 26809 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:38.355957 26809 solver.cpp:219] Iteration 600 (1301.99 iter/s, 0.0768055s/100 iters), loss = 0.198755
I0428 19:49:38.355994 26809 solver.cpp:238]     Train net output #0: loss = 0.198755 (* 1 = 0.198755 loss)
I0428 19:49:38.356001 26809 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:38.431385 26809 solver.cpp:219] Iteration 700 (1326.58 iter/s, 0.0753818s/100 iters), loss = 0.241502
I0428 19:49:38.431424 26809 solver.cpp:238]     Train net output #0: loss = 0.241502 (* 1 = 0.241502 loss)
I0428 19:49:38.431447 26809 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:38.506690 26809 solver.cpp:219] Iteration 800 (1328.8 iter/s, 0.0752558s/100 iters), loss = 0.226905
I0428 19:49:38.506728 26809 solver.cpp:238]     Train net output #0: loss = 0.226905 (* 1 = 0.226905 loss)
I0428 19:49:38.506736 26809 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:38.584636 26809 solver.cpp:219] Iteration 900 (1283.55 iter/s, 0.0779089s/100 iters), loss = 0.198129
I0428 19:49:38.584697 26809 solver.cpp:238]     Train net output #0: loss = 0.198129 (* 1 = 0.198129 loss)
I0428 19:49:38.584710 26809 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:38.618228 26815 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:38.673959 26809 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:38.674798 26809 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:38.675336 26809 solver.cpp:311] Iteration 1000, loss = 0.140097
I0428 19:49:38.675355 26809 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:38.749882 26816 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:38.750836 26809 solver.cpp:398]     Test net output #0: accuracy = 0.9679
I0428 19:49:38.750880 26809 solver.cpp:398]     Test net output #1: loss = 0.100083 (* 1 = 0.100083 loss)
I0428 19:49:38.750895 26809 solver.cpp:316] Optimization Done.
I0428 19:49:38.750901 26809 caffe.cpp:259] Optimization Done.
