I0428 19:57:55.198135 28845 caffe.cpp:218] Using GPUs 0
I0428 19:57:55.234685 28845 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:57:55.688647 28845 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test803.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:57:55.688783 28845 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test803.prototxt
I0428 19:57:55.689169 28845 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:57:55.689203 28845 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:57:55.689301 28845 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:55.689368 28845 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:55.689447 28845 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:57:55.689466 28845 net.cpp:86] Creating Layer mnist
I0428 19:57:55.689473 28845 net.cpp:382] mnist -> data
I0428 19:57:55.689492 28845 net.cpp:382] mnist -> label
I0428 19:57:55.690469 28845 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:57:55.692684 28845 net.cpp:124] Setting up mnist
I0428 19:57:55.692714 28845 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:57:55.692719 28845 net.cpp:131] Top shape: 64 (64)
I0428 19:57:55.692723 28845 net.cpp:139] Memory required for data: 200960
I0428 19:57:55.692728 28845 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:55.692742 28845 net.cpp:86] Creating Layer conv0
I0428 19:57:55.692781 28845 net.cpp:408] conv0 <- data
I0428 19:57:55.692793 28845 net.cpp:382] conv0 -> conv0
I0428 19:57:55.920308 28845 net.cpp:124] Setting up conv0
I0428 19:57:55.920334 28845 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:57:55.920338 28845 net.cpp:139] Memory required for data: 1675520
I0428 19:57:55.920352 28845 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:55.920364 28845 net.cpp:86] Creating Layer pool0
I0428 19:57:55.920368 28845 net.cpp:408] pool0 <- conv0
I0428 19:57:55.920373 28845 net.cpp:382] pool0 -> pool0
I0428 19:57:55.920433 28845 net.cpp:124] Setting up pool0
I0428 19:57:55.920439 28845 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:57:55.920441 28845 net.cpp:139] Memory required for data: 2044160
I0428 19:57:55.920444 28845 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:55.920454 28845 net.cpp:86] Creating Layer conv1
I0428 19:57:55.920457 28845 net.cpp:408] conv1 <- pool0
I0428 19:57:55.920462 28845 net.cpp:382] conv1 -> conv1
I0428 19:57:55.923230 28845 net.cpp:124] Setting up conv1
I0428 19:57:55.923260 28845 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:57:55.923264 28845 net.cpp:139] Memory required for data: 2126080
I0428 19:57:55.923272 28845 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:55.923280 28845 net.cpp:86] Creating Layer pool1
I0428 19:57:55.923283 28845 net.cpp:408] pool1 <- conv1
I0428 19:57:55.923290 28845 net.cpp:382] pool1 -> pool1
I0428 19:57:55.923344 28845 net.cpp:124] Setting up pool1
I0428 19:57:55.923349 28845 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:57:55.923352 28845 net.cpp:139] Memory required for data: 2146560
I0428 19:57:55.923355 28845 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:55.923363 28845 net.cpp:86] Creating Layer ip1
I0428 19:57:55.923367 28845 net.cpp:408] ip1 <- pool1
I0428 19:57:55.923372 28845 net.cpp:382] ip1 -> ip1
I0428 19:57:55.923496 28845 net.cpp:124] Setting up ip1
I0428 19:57:55.923506 28845 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:55.923508 28845 net.cpp:139] Memory required for data: 2152960
I0428 19:57:55.923514 28845 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:55.923521 28845 net.cpp:86] Creating Layer relu1
I0428 19:57:55.923523 28845 net.cpp:408] relu1 <- ip1
I0428 19:57:55.923527 28845 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:55.923692 28845 net.cpp:124] Setting up relu1
I0428 19:57:55.923701 28845 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:55.923703 28845 net.cpp:139] Memory required for data: 2159360
I0428 19:57:55.923707 28845 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:55.923713 28845 net.cpp:86] Creating Layer ip2
I0428 19:57:55.923717 28845 net.cpp:408] ip2 <- ip1
I0428 19:57:55.923722 28845 net.cpp:382] ip2 -> ip2
I0428 19:57:55.923815 28845 net.cpp:124] Setting up ip2
I0428 19:57:55.923821 28845 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:55.923825 28845 net.cpp:139] Memory required for data: 2161920
I0428 19:57:55.923830 28845 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:55.923835 28845 net.cpp:86] Creating Layer relu2
I0428 19:57:55.923837 28845 net.cpp:408] relu2 <- ip2
I0428 19:57:55.923841 28845 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:55.924655 28845 net.cpp:124] Setting up relu2
I0428 19:57:55.924681 28845 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:55.924700 28845 net.cpp:139] Memory required for data: 2164480
I0428 19:57:55.924705 28845 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:55.924711 28845 net.cpp:86] Creating Layer ip3
I0428 19:57:55.924715 28845 net.cpp:408] ip3 <- ip2
I0428 19:57:55.924722 28845 net.cpp:382] ip3 -> ip3
I0428 19:57:55.924844 28845 net.cpp:124] Setting up ip3
I0428 19:57:55.924852 28845 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:55.924855 28845 net.cpp:139] Memory required for data: 2167040
I0428 19:57:55.924880 28845 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:55.924885 28845 net.cpp:86] Creating Layer relu3
I0428 19:57:55.924888 28845 net.cpp:408] relu3 <- ip3
I0428 19:57:55.924893 28845 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:55.925077 28845 net.cpp:124] Setting up relu3
I0428 19:57:55.925086 28845 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:55.925091 28845 net.cpp:139] Memory required for data: 2169600
I0428 19:57:55.925093 28845 layer_factory.hpp:77] Creating layer loss
I0428 19:57:55.925101 28845 net.cpp:86] Creating Layer loss
I0428 19:57:55.925104 28845 net.cpp:408] loss <- ip3
I0428 19:57:55.925108 28845 net.cpp:408] loss <- label
I0428 19:57:55.925124 28845 net.cpp:382] loss -> loss
I0428 19:57:55.925143 28845 layer_factory.hpp:77] Creating layer loss
I0428 19:57:55.925400 28845 net.cpp:124] Setting up loss
I0428 19:57:55.925410 28845 net.cpp:131] Top shape: (1)
I0428 19:57:55.925412 28845 net.cpp:134]     with loss weight 1
I0428 19:57:55.925426 28845 net.cpp:139] Memory required for data: 2169604
I0428 19:57:55.925429 28845 net.cpp:200] loss needs backward computation.
I0428 19:57:55.925433 28845 net.cpp:200] relu3 needs backward computation.
I0428 19:57:55.925436 28845 net.cpp:200] ip3 needs backward computation.
I0428 19:57:55.925439 28845 net.cpp:200] relu2 needs backward computation.
I0428 19:57:55.925442 28845 net.cpp:200] ip2 needs backward computation.
I0428 19:57:55.925446 28845 net.cpp:200] relu1 needs backward computation.
I0428 19:57:55.925448 28845 net.cpp:200] ip1 needs backward computation.
I0428 19:57:55.925451 28845 net.cpp:200] pool1 needs backward computation.
I0428 19:57:55.925454 28845 net.cpp:200] conv1 needs backward computation.
I0428 19:57:55.925457 28845 net.cpp:200] pool0 needs backward computation.
I0428 19:57:55.925460 28845 net.cpp:200] conv0 needs backward computation.
I0428 19:57:55.925464 28845 net.cpp:202] mnist does not need backward computation.
I0428 19:57:55.925467 28845 net.cpp:244] This network produces output loss
I0428 19:57:55.925477 28845 net.cpp:257] Network initialization done.
I0428 19:57:55.925832 28845 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test803.prototxt
I0428 19:57:55.925874 28845 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:57:55.925964 28845 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:55.926060 28845 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:55.926102 28845 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:57:55.926115 28845 net.cpp:86] Creating Layer mnist
I0428 19:57:55.926120 28845 net.cpp:382] mnist -> data
I0428 19:57:55.926129 28845 net.cpp:382] mnist -> label
I0428 19:57:55.926213 28845 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:57:55.928532 28845 net.cpp:124] Setting up mnist
I0428 19:57:55.928560 28845 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:57:55.928565 28845 net.cpp:131] Top shape: 100 (100)
I0428 19:57:55.928568 28845 net.cpp:139] Memory required for data: 314000
I0428 19:57:55.928572 28845 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:57:55.928609 28845 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:57:55.928613 28845 net.cpp:408] label_mnist_1_split <- label
I0428 19:57:55.928634 28845 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:57:55.928642 28845 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:57:55.928683 28845 net.cpp:124] Setting up label_mnist_1_split
I0428 19:57:55.928689 28845 net.cpp:131] Top shape: 100 (100)
I0428 19:57:55.928692 28845 net.cpp:131] Top shape: 100 (100)
I0428 19:57:55.928695 28845 net.cpp:139] Memory required for data: 314800
I0428 19:57:55.928697 28845 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:55.928709 28845 net.cpp:86] Creating Layer conv0
I0428 19:57:55.928711 28845 net.cpp:408] conv0 <- data
I0428 19:57:55.928716 28845 net.cpp:382] conv0 -> conv0
I0428 19:57:55.930588 28845 net.cpp:124] Setting up conv0
I0428 19:57:55.930603 28845 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:57:55.930605 28845 net.cpp:139] Memory required for data: 2618800
I0428 19:57:55.930616 28845 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:55.930622 28845 net.cpp:86] Creating Layer pool0
I0428 19:57:55.930625 28845 net.cpp:408] pool0 <- conv0
I0428 19:57:55.930630 28845 net.cpp:382] pool0 -> pool0
I0428 19:57:55.930665 28845 net.cpp:124] Setting up pool0
I0428 19:57:55.930671 28845 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:57:55.930675 28845 net.cpp:139] Memory required for data: 3194800
I0428 19:57:55.930676 28845 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:55.930701 28845 net.cpp:86] Creating Layer conv1
I0428 19:57:55.930703 28845 net.cpp:408] conv1 <- pool0
I0428 19:57:55.930708 28845 net.cpp:382] conv1 -> conv1
I0428 19:57:55.932971 28845 net.cpp:124] Setting up conv1
I0428 19:57:55.932984 28845 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:57:55.932988 28845 net.cpp:139] Memory required for data: 3322800
I0428 19:57:55.932997 28845 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:55.933022 28845 net.cpp:86] Creating Layer pool1
I0428 19:57:55.933025 28845 net.cpp:408] pool1 <- conv1
I0428 19:57:55.933030 28845 net.cpp:382] pool1 -> pool1
I0428 19:57:55.933071 28845 net.cpp:124] Setting up pool1
I0428 19:57:55.933078 28845 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:57:55.933080 28845 net.cpp:139] Memory required for data: 3354800
I0428 19:57:55.933082 28845 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:55.933089 28845 net.cpp:86] Creating Layer ip1
I0428 19:57:55.933092 28845 net.cpp:408] ip1 <- pool1
I0428 19:57:55.933097 28845 net.cpp:382] ip1 -> ip1
I0428 19:57:55.933259 28845 net.cpp:124] Setting up ip1
I0428 19:57:55.933267 28845 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:55.933280 28845 net.cpp:139] Memory required for data: 3364800
I0428 19:57:55.933302 28845 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:55.933307 28845 net.cpp:86] Creating Layer relu1
I0428 19:57:55.933310 28845 net.cpp:408] relu1 <- ip1
I0428 19:57:55.933316 28845 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:55.933554 28845 net.cpp:124] Setting up relu1
I0428 19:57:55.933563 28845 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:55.933568 28845 net.cpp:139] Memory required for data: 3374800
I0428 19:57:55.933570 28845 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:55.933578 28845 net.cpp:86] Creating Layer ip2
I0428 19:57:55.933581 28845 net.cpp:408] ip2 <- ip1
I0428 19:57:55.933586 28845 net.cpp:382] ip2 -> ip2
I0428 19:57:55.933697 28845 net.cpp:124] Setting up ip2
I0428 19:57:55.933704 28845 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:55.933707 28845 net.cpp:139] Memory required for data: 3378800
I0428 19:57:55.933712 28845 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:55.933723 28845 net.cpp:86] Creating Layer relu2
I0428 19:57:55.933727 28845 net.cpp:408] relu2 <- ip2
I0428 19:57:55.933732 28845 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:55.933883 28845 net.cpp:124] Setting up relu2
I0428 19:57:55.933892 28845 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:55.933894 28845 net.cpp:139] Memory required for data: 3382800
I0428 19:57:55.933897 28845 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:55.933903 28845 net.cpp:86] Creating Layer ip3
I0428 19:57:55.933907 28845 net.cpp:408] ip3 <- ip2
I0428 19:57:55.933910 28845 net.cpp:382] ip3 -> ip3
I0428 19:57:55.934016 28845 net.cpp:124] Setting up ip3
I0428 19:57:55.934023 28845 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:55.934026 28845 net.cpp:139] Memory required for data: 3386800
I0428 19:57:55.934036 28845 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:55.934039 28845 net.cpp:86] Creating Layer relu3
I0428 19:57:55.934042 28845 net.cpp:408] relu3 <- ip3
I0428 19:57:55.934046 28845 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:55.934891 28845 net.cpp:124] Setting up relu3
I0428 19:57:55.934907 28845 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:55.934911 28845 net.cpp:139] Memory required for data: 3390800
I0428 19:57:55.934914 28845 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:57:55.934921 28845 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:57:55.934924 28845 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:57:55.934929 28845 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:57:55.934937 28845 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:57:55.934983 28845 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:57:55.934988 28845 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:55.934993 28845 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:55.934994 28845 net.cpp:139] Memory required for data: 3398800
I0428 19:57:55.934998 28845 layer_factory.hpp:77] Creating layer accuracy
I0428 19:57:55.935003 28845 net.cpp:86] Creating Layer accuracy
I0428 19:57:55.935006 28845 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:57:55.935010 28845 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:57:55.935015 28845 net.cpp:382] accuracy -> accuracy
I0428 19:57:55.935021 28845 net.cpp:124] Setting up accuracy
I0428 19:57:55.935026 28845 net.cpp:131] Top shape: (1)
I0428 19:57:55.935029 28845 net.cpp:139] Memory required for data: 3398804
I0428 19:57:55.935031 28845 layer_factory.hpp:77] Creating layer loss
I0428 19:57:55.935036 28845 net.cpp:86] Creating Layer loss
I0428 19:57:55.935045 28845 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:57:55.935048 28845 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:57:55.935053 28845 net.cpp:382] loss -> loss
I0428 19:57:55.935060 28845 layer_factory.hpp:77] Creating layer loss
I0428 19:57:55.935325 28845 net.cpp:124] Setting up loss
I0428 19:57:55.935334 28845 net.cpp:131] Top shape: (1)
I0428 19:57:55.935343 28845 net.cpp:134]     with loss weight 1
I0428 19:57:55.935350 28845 net.cpp:139] Memory required for data: 3398808
I0428 19:57:55.935362 28845 net.cpp:200] loss needs backward computation.
I0428 19:57:55.935366 28845 net.cpp:202] accuracy does not need backward computation.
I0428 19:57:55.935370 28845 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:57:55.935374 28845 net.cpp:200] relu3 needs backward computation.
I0428 19:57:55.935376 28845 net.cpp:200] ip3 needs backward computation.
I0428 19:57:55.935385 28845 net.cpp:200] relu2 needs backward computation.
I0428 19:57:55.935389 28845 net.cpp:200] ip2 needs backward computation.
I0428 19:57:55.935391 28845 net.cpp:200] relu1 needs backward computation.
I0428 19:57:55.935400 28845 net.cpp:200] ip1 needs backward computation.
I0428 19:57:55.935402 28845 net.cpp:200] pool1 needs backward computation.
I0428 19:57:55.935405 28845 net.cpp:200] conv1 needs backward computation.
I0428 19:57:55.935408 28845 net.cpp:200] pool0 needs backward computation.
I0428 19:57:55.935416 28845 net.cpp:200] conv0 needs backward computation.
I0428 19:57:55.935420 28845 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:57:55.935423 28845 net.cpp:202] mnist does not need backward computation.
I0428 19:57:55.935426 28845 net.cpp:244] This network produces output accuracy
I0428 19:57:55.935431 28845 net.cpp:244] This network produces output loss
I0428 19:57:55.935441 28845 net.cpp:257] Network initialization done.
I0428 19:57:55.935501 28845 solver.cpp:56] Solver scaffolding done.
I0428 19:57:55.935847 28845 caffe.cpp:248] Starting Optimization
I0428 19:57:55.935855 28845 solver.cpp:273] Solving LeNet
I0428 19:57:55.935864 28845 solver.cpp:274] Learning Rate Policy: inv
I0428 19:57:55.936038 28845 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:57:55.940376 28845 blocking_queue.cpp:49] Waiting for data
I0428 19:57:56.011440 28852 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:56.011960 28845 solver.cpp:398]     Test net output #0: accuracy = 0.0994
I0428 19:57:56.011978 28845 solver.cpp:398]     Test net output #1: loss = 2.32087 (* 1 = 2.32087 loss)
I0428 19:57:56.014523 28845 solver.cpp:219] Iteration 0 (-6.95016e-31 iter/s, 0.0786319s/100 iters), loss = 2.31107
I0428 19:57:56.014547 28845 solver.cpp:238]     Train net output #0: loss = 2.31107 (* 1 = 2.31107 loss)
I0428 19:57:56.014575 28845 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:57:56.099320 28845 solver.cpp:219] Iteration 100 (1179.77 iter/s, 0.0847626s/100 iters), loss = 0.961542
I0428 19:57:56.099344 28845 solver.cpp:238]     Train net output #0: loss = 0.961542 (* 1 = 0.961542 loss)
I0428 19:57:56.099366 28845 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:57:56.175947 28845 solver.cpp:219] Iteration 200 (1305.63 iter/s, 0.0765911s/100 iters), loss = 0.539993
I0428 19:57:56.175971 28845 solver.cpp:238]     Train net output #0: loss = 0.539993 (* 1 = 0.539993 loss)
I0428 19:57:56.175992 28845 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:57:56.251013 28845 solver.cpp:219] Iteration 300 (1332.74 iter/s, 0.0750336s/100 iters), loss = 0.702888
I0428 19:57:56.251035 28845 solver.cpp:238]     Train net output #0: loss = 0.702888 (* 1 = 0.702888 loss)
I0428 19:57:56.251057 28845 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:57:56.327322 28845 solver.cpp:219] Iteration 400 (1311.01 iter/s, 0.0762768s/100 iters), loss = 0.465456
I0428 19:57:56.327347 28845 solver.cpp:238]     Train net output #0: loss = 0.465456 (* 1 = 0.465456 loss)
I0428 19:57:56.327353 28845 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:57:56.400794 28845 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:57:56.475793 28852 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:56.476312 28845 solver.cpp:398]     Test net output #0: accuracy = 0.8105
I0428 19:57:56.476331 28845 solver.cpp:398]     Test net output #1: loss = 0.514624 (* 1 = 0.514624 loss)
I0428 19:57:56.477151 28845 solver.cpp:219] Iteration 500 (667.589 iter/s, 0.149793s/100 iters), loss = 0.646005
I0428 19:57:56.477190 28845 solver.cpp:238]     Train net output #0: loss = 0.646005 (* 1 = 0.646005 loss)
I0428 19:57:56.477196 28845 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:57:56.557976 28845 solver.cpp:219] Iteration 600 (1237.97 iter/s, 0.0807772s/100 iters), loss = 0.624692
I0428 19:57:56.557999 28845 solver.cpp:238]     Train net output #0: loss = 0.624692 (* 1 = 0.624692 loss)
I0428 19:57:56.558006 28845 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:57:56.639286 28845 solver.cpp:219] Iteration 700 (1230.35 iter/s, 0.081278s/100 iters), loss = 0.433512
I0428 19:57:56.639310 28845 solver.cpp:238]     Train net output #0: loss = 0.433512 (* 1 = 0.433512 loss)
I0428 19:57:56.639333 28845 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:57:56.721482 28845 solver.cpp:219] Iteration 800 (1217.11 iter/s, 0.0821616s/100 iters), loss = 0.444671
I0428 19:57:56.721504 28845 solver.cpp:238]     Train net output #0: loss = 0.444671 (* 1 = 0.444671 loss)
I0428 19:57:56.721526 28845 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:57:56.796831 28845 solver.cpp:219] Iteration 900 (1328.08 iter/s, 0.0752968s/100 iters), loss = 0.556544
I0428 19:57:56.796856 28845 solver.cpp:238]     Train net output #0: loss = 0.556544 (* 1 = 0.556544 loss)
I0428 19:57:56.796864 28845 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:57:56.821359 28851 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:56.869516 28845 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:57:56.870263 28845 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:57:56.870770 28845 solver.cpp:311] Iteration 1000, loss = 0.405372
I0428 19:57:56.870784 28845 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:57:56.923277 28852 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:56.923794 28845 solver.cpp:398]     Test net output #0: accuracy = 0.8496
I0428 19:57:56.923828 28845 solver.cpp:398]     Test net output #1: loss = 0.390656 (* 1 = 0.390656 loss)
I0428 19:57:56.923833 28845 solver.cpp:316] Optimization Done.
I0428 19:57:56.923837 28845 caffe.cpp:259] Optimization Done.
