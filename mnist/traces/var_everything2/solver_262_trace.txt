I0428 19:37:41.165815 23854 caffe.cpp:218] Using GPUs 0
I0428 19:37:41.207372 23854 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:41.728499 23854 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test262.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:41.728660 23854 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test262.prototxt
I0428 19:37:41.729041 23854 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:41.729056 23854 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:41.729145 23854 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:41.729220 23854 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:41.729320 23854 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:41.729343 23854 net.cpp:86] Creating Layer mnist
I0428 19:37:41.729352 23854 net.cpp:382] mnist -> data
I0428 19:37:41.729374 23854 net.cpp:382] mnist -> label
I0428 19:37:41.730473 23854 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:41.732941 23854 net.cpp:124] Setting up mnist
I0428 19:37:41.732960 23854 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:41.732969 23854 net.cpp:131] Top shape: 64 (64)
I0428 19:37:41.732971 23854 net.cpp:139] Memory required for data: 200960
I0428 19:37:41.732980 23854 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:41.732995 23854 net.cpp:86] Creating Layer conv0
I0428 19:37:41.733000 23854 net.cpp:408] conv0 <- data
I0428 19:37:41.733013 23854 net.cpp:382] conv0 -> conv0
I0428 19:37:42.023767 23854 net.cpp:124] Setting up conv0
I0428 19:37:42.023799 23854 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:42.023805 23854 net.cpp:139] Memory required for data: 14946560
I0428 19:37:42.023823 23854 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:42.023838 23854 net.cpp:86] Creating Layer pool0
I0428 19:37:42.023866 23854 net.cpp:408] pool0 <- conv0
I0428 19:37:42.023874 23854 net.cpp:382] pool0 -> pool0
I0428 19:37:42.023933 23854 net.cpp:124] Setting up pool0
I0428 19:37:42.023942 23854 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:42.023947 23854 net.cpp:139] Memory required for data: 18632960
I0428 19:37:42.023950 23854 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:42.023959 23854 net.cpp:86] Creating Layer ip1
I0428 19:37:42.023963 23854 net.cpp:408] ip1 <- pool0
I0428 19:37:42.023968 23854 net.cpp:382] ip1 -> ip1
I0428 19:37:42.027472 23854 net.cpp:124] Setting up ip1
I0428 19:37:42.027487 23854 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:42.027492 23854 net.cpp:139] Memory required for data: 18639360
I0428 19:37:42.027501 23854 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:42.027509 23854 net.cpp:86] Creating Layer relu1
I0428 19:37:42.027515 23854 net.cpp:408] relu1 <- ip1
I0428 19:37:42.027521 23854 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:42.027743 23854 net.cpp:124] Setting up relu1
I0428 19:37:42.027755 23854 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:42.027760 23854 net.cpp:139] Memory required for data: 18645760
I0428 19:37:42.027763 23854 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:42.027771 23854 net.cpp:86] Creating Layer ip2
I0428 19:37:42.027776 23854 net.cpp:408] ip2 <- ip1
I0428 19:37:42.027782 23854 net.cpp:382] ip2 -> ip2
I0428 19:37:42.027920 23854 net.cpp:124] Setting up ip2
I0428 19:37:42.027928 23854 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:42.027932 23854 net.cpp:139] Memory required for data: 18658560
I0428 19:37:42.027941 23854 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:42.027947 23854 net.cpp:86] Creating Layer relu2
I0428 19:37:42.027951 23854 net.cpp:408] relu2 <- ip2
I0428 19:37:42.027958 23854 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:42.028832 23854 net.cpp:124] Setting up relu2
I0428 19:37:42.028848 23854 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:42.028852 23854 net.cpp:139] Memory required for data: 18671360
I0428 19:37:42.028856 23854 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:42.028865 23854 net.cpp:86] Creating Layer ip3
I0428 19:37:42.028869 23854 net.cpp:408] ip3 <- ip2
I0428 19:37:42.028877 23854 net.cpp:382] ip3 -> ip3
I0428 19:37:42.029003 23854 net.cpp:124] Setting up ip3
I0428 19:37:42.029012 23854 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:42.029026 23854 net.cpp:139] Memory required for data: 18673920
I0428 19:37:42.029032 23854 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:42.029040 23854 net.cpp:86] Creating Layer relu3
I0428 19:37:42.029043 23854 net.cpp:408] relu3 <- ip3
I0428 19:37:42.029050 23854 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:42.029240 23854 net.cpp:124] Setting up relu3
I0428 19:37:42.029251 23854 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:42.029255 23854 net.cpp:139] Memory required for data: 18676480
I0428 19:37:42.029258 23854 layer_factory.hpp:77] Creating layer loss
I0428 19:37:42.029266 23854 net.cpp:86] Creating Layer loss
I0428 19:37:42.029270 23854 net.cpp:408] loss <- ip3
I0428 19:37:42.029275 23854 net.cpp:408] loss <- label
I0428 19:37:42.029281 23854 net.cpp:382] loss -> loss
I0428 19:37:42.029301 23854 layer_factory.hpp:77] Creating layer loss
I0428 19:37:42.029590 23854 net.cpp:124] Setting up loss
I0428 19:37:42.029600 23854 net.cpp:131] Top shape: (1)
I0428 19:37:42.029604 23854 net.cpp:134]     with loss weight 1
I0428 19:37:42.029619 23854 net.cpp:139] Memory required for data: 18676484
I0428 19:37:42.029623 23854 net.cpp:200] loss needs backward computation.
I0428 19:37:42.029628 23854 net.cpp:200] relu3 needs backward computation.
I0428 19:37:42.029633 23854 net.cpp:200] ip3 needs backward computation.
I0428 19:37:42.029635 23854 net.cpp:200] relu2 needs backward computation.
I0428 19:37:42.029639 23854 net.cpp:200] ip2 needs backward computation.
I0428 19:37:42.029641 23854 net.cpp:200] relu1 needs backward computation.
I0428 19:37:42.029644 23854 net.cpp:200] ip1 needs backward computation.
I0428 19:37:42.029660 23854 net.cpp:200] pool0 needs backward computation.
I0428 19:37:42.029664 23854 net.cpp:200] conv0 needs backward computation.
I0428 19:37:42.029669 23854 net.cpp:202] mnist does not need backward computation.
I0428 19:37:42.029671 23854 net.cpp:244] This network produces output loss
I0428 19:37:42.029685 23854 net.cpp:257] Network initialization done.
I0428 19:37:42.030025 23854 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test262.prototxt
I0428 19:37:42.030055 23854 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:42.030149 23854 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:42.030228 23854 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:42.030279 23854 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:42.030297 23854 net.cpp:86] Creating Layer mnist
I0428 19:37:42.030303 23854 net.cpp:382] mnist -> data
I0428 19:37:42.030313 23854 net.cpp:382] mnist -> label
I0428 19:37:42.030416 23854 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:42.032621 23854 net.cpp:124] Setting up mnist
I0428 19:37:42.032636 23854 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:42.032642 23854 net.cpp:131] Top shape: 100 (100)
I0428 19:37:42.032646 23854 net.cpp:139] Memory required for data: 314000
I0428 19:37:42.032650 23854 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:42.032676 23854 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:42.032682 23854 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:42.032690 23854 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:42.032698 23854 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:42.032750 23854 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:42.032759 23854 net.cpp:131] Top shape: 100 (100)
I0428 19:37:42.032763 23854 net.cpp:131] Top shape: 100 (100)
I0428 19:37:42.032768 23854 net.cpp:139] Memory required for data: 314800
I0428 19:37:42.032783 23854 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:42.032794 23854 net.cpp:86] Creating Layer conv0
I0428 19:37:42.032799 23854 net.cpp:408] conv0 <- data
I0428 19:37:42.032806 23854 net.cpp:382] conv0 -> conv0
I0428 19:37:42.034764 23854 net.cpp:124] Setting up conv0
I0428 19:37:42.034781 23854 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:42.034786 23854 net.cpp:139] Memory required for data: 23354800
I0428 19:37:42.034797 23854 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:42.034804 23854 net.cpp:86] Creating Layer pool0
I0428 19:37:42.034809 23854 net.cpp:408] pool0 <- conv0
I0428 19:37:42.034816 23854 net.cpp:382] pool0 -> pool0
I0428 19:37:42.034860 23854 net.cpp:124] Setting up pool0
I0428 19:37:42.034868 23854 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:42.034870 23854 net.cpp:139] Memory required for data: 29114800
I0428 19:37:42.034873 23854 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:42.034883 23854 net.cpp:86] Creating Layer ip1
I0428 19:37:42.034888 23854 net.cpp:408] ip1 <- pool0
I0428 19:37:42.034893 23854 net.cpp:382] ip1 -> ip1
I0428 19:37:42.037426 23854 net.cpp:124] Setting up ip1
I0428 19:37:42.037438 23854 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:42.037443 23854 net.cpp:139] Memory required for data: 29124800
I0428 19:37:42.037451 23854 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:42.037457 23854 net.cpp:86] Creating Layer relu1
I0428 19:37:42.037461 23854 net.cpp:408] relu1 <- ip1
I0428 19:37:42.037467 23854 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:42.037672 23854 net.cpp:124] Setting up relu1
I0428 19:37:42.037683 23854 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:42.037688 23854 net.cpp:139] Memory required for data: 29134800
I0428 19:37:42.037693 23854 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:42.037699 23854 net.cpp:86] Creating Layer ip2
I0428 19:37:42.037703 23854 net.cpp:408] ip2 <- ip1
I0428 19:37:42.037711 23854 net.cpp:382] ip2 -> ip2
I0428 19:37:42.037866 23854 net.cpp:124] Setting up ip2
I0428 19:37:42.037875 23854 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:42.037878 23854 net.cpp:139] Memory required for data: 29154800
I0428 19:37:42.037889 23854 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:42.037894 23854 net.cpp:86] Creating Layer relu2
I0428 19:37:42.037897 23854 net.cpp:408] relu2 <- ip2
I0428 19:37:42.037904 23854 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:42.038863 23854 net.cpp:124] Setting up relu2
I0428 19:37:42.038878 23854 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:42.038882 23854 net.cpp:139] Memory required for data: 29174800
I0428 19:37:42.038887 23854 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:42.038897 23854 net.cpp:86] Creating Layer ip3
I0428 19:37:42.038902 23854 net.cpp:408] ip3 <- ip2
I0428 19:37:42.038908 23854 net.cpp:382] ip3 -> ip3
I0428 19:37:42.039039 23854 net.cpp:124] Setting up ip3
I0428 19:37:42.039049 23854 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:42.039053 23854 net.cpp:139] Memory required for data: 29178800
I0428 19:37:42.039059 23854 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:42.039067 23854 net.cpp:86] Creating Layer relu3
I0428 19:37:42.039070 23854 net.cpp:408] relu3 <- ip3
I0428 19:37:42.039075 23854 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:42.039266 23854 net.cpp:124] Setting up relu3
I0428 19:37:42.039276 23854 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:42.039280 23854 net.cpp:139] Memory required for data: 29182800
I0428 19:37:42.039284 23854 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:42.039291 23854 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:42.039294 23854 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:42.039299 23854 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:42.039306 23854 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:42.039351 23854 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:42.039361 23854 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:42.039379 23854 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:42.039383 23854 net.cpp:139] Memory required for data: 29190800
I0428 19:37:42.039386 23854 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:42.039392 23854 net.cpp:86] Creating Layer accuracy
I0428 19:37:42.039397 23854 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:42.039402 23854 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:42.039408 23854 net.cpp:382] accuracy -> accuracy
I0428 19:37:42.039417 23854 net.cpp:124] Setting up accuracy
I0428 19:37:42.039422 23854 net.cpp:131] Top shape: (1)
I0428 19:37:42.039427 23854 net.cpp:139] Memory required for data: 29190804
I0428 19:37:42.039429 23854 layer_factory.hpp:77] Creating layer loss
I0428 19:37:42.039435 23854 net.cpp:86] Creating Layer loss
I0428 19:37:42.039439 23854 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:42.039451 23854 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:42.039458 23854 net.cpp:382] loss -> loss
I0428 19:37:42.039468 23854 layer_factory.hpp:77] Creating layer loss
I0428 19:37:42.039804 23854 net.cpp:124] Setting up loss
I0428 19:37:42.039815 23854 net.cpp:131] Top shape: (1)
I0428 19:37:42.039819 23854 net.cpp:134]     with loss weight 1
I0428 19:37:42.039826 23854 net.cpp:139] Memory required for data: 29190808
I0428 19:37:42.039830 23854 net.cpp:200] loss needs backward computation.
I0428 19:37:42.039834 23854 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:42.039839 23854 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:42.039842 23854 net.cpp:200] relu3 needs backward computation.
I0428 19:37:42.039846 23854 net.cpp:200] ip3 needs backward computation.
I0428 19:37:42.039849 23854 net.cpp:200] relu2 needs backward computation.
I0428 19:37:42.039852 23854 net.cpp:200] ip2 needs backward computation.
I0428 19:37:42.039856 23854 net.cpp:200] relu1 needs backward computation.
I0428 19:37:42.039860 23854 net.cpp:200] ip1 needs backward computation.
I0428 19:37:42.039862 23854 net.cpp:200] pool0 needs backward computation.
I0428 19:37:42.039866 23854 net.cpp:200] conv0 needs backward computation.
I0428 19:37:42.039870 23854 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:42.039875 23854 net.cpp:202] mnist does not need backward computation.
I0428 19:37:42.039877 23854 net.cpp:244] This network produces output accuracy
I0428 19:37:42.039881 23854 net.cpp:244] This network produces output loss
I0428 19:37:42.039894 23854 net.cpp:257] Network initialization done.
I0428 19:37:42.039937 23854 solver.cpp:56] Solver scaffolding done.
I0428 19:37:42.040256 23854 caffe.cpp:248] Starting Optimization
I0428 19:37:42.040268 23854 solver.cpp:273] Solving LeNet
I0428 19:37:42.040272 23854 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:42.042433 23854 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:42.204752 23861 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:42.209235 23854 solver.cpp:398]     Test net output #0: accuracy = 0.1031
I0428 19:37:42.209256 23854 solver.cpp:398]     Test net output #1: loss = 2.32786 (* 1 = 2.32786 loss)
I0428 19:37:42.214412 23854 solver.cpp:219] Iteration 0 (0 iter/s, 0.174106s/100 iters), loss = 2.31603
I0428 19:37:42.214452 23854 solver.cpp:238]     Train net output #0: loss = 2.31603 (* 1 = 2.31603 loss)
I0428 19:37:42.214465 23854 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:42.444030 23854 solver.cpp:219] Iteration 100 (435.592 iter/s, 0.229573s/100 iters), loss = 0.692711
I0428 19:37:42.444059 23854 solver.cpp:238]     Train net output #0: loss = 0.692711 (* 1 = 0.692711 loss)
I0428 19:37:42.444067 23854 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:42.676336 23854 solver.cpp:219] Iteration 200 (430.554 iter/s, 0.232259s/100 iters), loss = 0.558052
I0428 19:37:42.676362 23854 solver.cpp:238]     Train net output #0: loss = 0.558052 (* 1 = 0.558052 loss)
I0428 19:37:42.676368 23854 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:42.906548 23854 solver.cpp:219] Iteration 300 (434.462 iter/s, 0.23017s/100 iters), loss = 0.431814
I0428 19:37:42.906608 23854 solver.cpp:238]     Train net output #0: loss = 0.431814 (* 1 = 0.431814 loss)
I0428 19:37:42.906616 23854 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:43.133491 23854 solver.cpp:219] Iteration 400 (440.786 iter/s, 0.226867s/100 iters), loss = 0.427692
I0428 19:37:43.133517 23854 solver.cpp:238]     Train net output #0: loss = 0.427692 (* 1 = 0.427692 loss)
I0428 19:37:43.133524 23854 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:43.357221 23854 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:43.515697 23861 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:43.521627 23854 solver.cpp:398]     Test net output #0: accuracy = 0.9457
I0428 19:37:43.521647 23854 solver.cpp:398]     Test net output #1: loss = 0.183341 (* 1 = 0.183341 loss)
I0428 19:37:43.523820 23854 solver.cpp:219] Iteration 500 (256.228 iter/s, 0.390278s/100 iters), loss = 0.207512
I0428 19:37:43.523857 23854 solver.cpp:238]     Train net output #0: loss = 0.207512 (* 1 = 0.207512 loss)
I0428 19:37:43.523870 23854 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:43.752580 23854 solver.cpp:219] Iteration 600 (437.216 iter/s, 0.22872s/100 iters), loss = 0.140898
I0428 19:37:43.752606 23854 solver.cpp:238]     Train net output #0: loss = 0.140898 (* 1 = 0.140898 loss)
I0428 19:37:43.752612 23854 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:43.981513 23854 solver.cpp:219] Iteration 700 (436.892 iter/s, 0.22889s/100 iters), loss = 0.246993
I0428 19:37:43.981554 23854 solver.cpp:238]     Train net output #0: loss = 0.246993 (* 1 = 0.246993 loss)
I0428 19:37:43.981560 23854 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:44.208976 23854 solver.cpp:219] Iteration 800 (439.717 iter/s, 0.227419s/100 iters), loss = 0.233556
I0428 19:37:44.209002 23854 solver.cpp:238]     Train net output #0: loss = 0.233556 (* 1 = 0.233556 loss)
I0428 19:37:44.209007 23854 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:44.434547 23854 solver.cpp:219] Iteration 900 (443.402 iter/s, 0.225529s/100 iters), loss = 0.165057
I0428 19:37:44.434583 23854 solver.cpp:238]     Train net output #0: loss = 0.165057 (* 1 = 0.165057 loss)
I0428 19:37:44.434589 23854 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:44.511323 23860 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:44.674104 23854 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:44.682273 23854 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:44.687397 23854 solver.cpp:311] Iteration 1000, loss = 0.0873215
I0428 19:37:44.687422 23854 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:44.852062 23861 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:44.858230 23854 solver.cpp:398]     Test net output #0: accuracy = 0.9676
I0428 19:37:44.858270 23854 solver.cpp:398]     Test net output #1: loss = 0.102474 (* 1 = 0.102474 loss)
I0428 19:37:44.858276 23854 solver.cpp:316] Optimization Done.
I0428 19:37:44.858290 23854 caffe.cpp:259] Optimization Done.
