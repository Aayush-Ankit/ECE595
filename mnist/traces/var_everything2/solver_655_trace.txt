I0428 19:52:11.706444 27459 caffe.cpp:218] Using GPUs 0
I0428 19:52:11.742446 27459 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:12.251655 27459 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test655.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:12.251798 27459 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test655.prototxt
I0428 19:52:12.252219 27459 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:12.252238 27459 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:12.252341 27459 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:12.252421 27459 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:12.252521 27459 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:12.252544 27459 net.cpp:86] Creating Layer mnist
I0428 19:52:12.252552 27459 net.cpp:382] mnist -> data
I0428 19:52:12.252575 27459 net.cpp:382] mnist -> label
I0428 19:52:12.253679 27459 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:12.256119 27459 net.cpp:124] Setting up mnist
I0428 19:52:12.256139 27459 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:12.256145 27459 net.cpp:131] Top shape: 64 (64)
I0428 19:52:12.256148 27459 net.cpp:139] Memory required for data: 200960
I0428 19:52:12.256156 27459 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:12.256173 27459 net.cpp:86] Creating Layer conv0
I0428 19:52:12.256196 27459 net.cpp:408] conv0 <- data
I0428 19:52:12.256208 27459 net.cpp:382] conv0 -> conv0
I0428 19:52:12.533787 27459 net.cpp:124] Setting up conv0
I0428 19:52:12.533815 27459 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:12.533820 27459 net.cpp:139] Memory required for data: 938240
I0428 19:52:12.533834 27459 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:12.533846 27459 net.cpp:86] Creating Layer pool0
I0428 19:52:12.533850 27459 net.cpp:408] pool0 <- conv0
I0428 19:52:12.533856 27459 net.cpp:382] pool0 -> pool0
I0428 19:52:12.533928 27459 net.cpp:124] Setting up pool0
I0428 19:52:12.533933 27459 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:12.533936 27459 net.cpp:139] Memory required for data: 1122560
I0428 19:52:12.533939 27459 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:12.533951 27459 net.cpp:86] Creating Layer conv1
I0428 19:52:12.533954 27459 net.cpp:408] conv1 <- pool0
I0428 19:52:12.533958 27459 net.cpp:382] conv1 -> conv1
I0428 19:52:12.536633 27459 net.cpp:124] Setting up conv1
I0428 19:52:12.536646 27459 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:12.536650 27459 net.cpp:139] Memory required for data: 1532160
I0428 19:52:12.536659 27459 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:12.536681 27459 net.cpp:86] Creating Layer pool1
I0428 19:52:12.536684 27459 net.cpp:408] pool1 <- conv1
I0428 19:52:12.536689 27459 net.cpp:382] pool1 -> pool1
I0428 19:52:12.536725 27459 net.cpp:124] Setting up pool1
I0428 19:52:12.536732 27459 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:12.536736 27459 net.cpp:139] Memory required for data: 1634560
I0428 19:52:12.536738 27459 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:12.536746 27459 net.cpp:86] Creating Layer ip1
I0428 19:52:12.536748 27459 net.cpp:408] ip1 <- pool1
I0428 19:52:12.536752 27459 net.cpp:382] ip1 -> ip1
I0428 19:52:12.537017 27459 net.cpp:124] Setting up ip1
I0428 19:52:12.537025 27459 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:12.537029 27459 net.cpp:139] Memory required for data: 1647360
I0428 19:52:12.537037 27459 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:12.537044 27459 net.cpp:86] Creating Layer relu1
I0428 19:52:12.537046 27459 net.cpp:408] relu1 <- ip1
I0428 19:52:12.537051 27459 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:12.537295 27459 net.cpp:124] Setting up relu1
I0428 19:52:12.537309 27459 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:12.537312 27459 net.cpp:139] Memory required for data: 1660160
I0428 19:52:12.537317 27459 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:12.537322 27459 net.cpp:86] Creating Layer ip2
I0428 19:52:12.537324 27459 net.cpp:408] ip2 <- ip1
I0428 19:52:12.537329 27459 net.cpp:382] ip2 -> ip2
I0428 19:52:12.537433 27459 net.cpp:124] Setting up ip2
I0428 19:52:12.537439 27459 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:12.537442 27459 net.cpp:139] Memory required for data: 1662720
I0428 19:52:12.537447 27459 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:12.537453 27459 net.cpp:86] Creating Layer relu2
I0428 19:52:12.537456 27459 net.cpp:408] relu2 <- ip2
I0428 19:52:12.537461 27459 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:12.538203 27459 net.cpp:124] Setting up relu2
I0428 19:52:12.538216 27459 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:12.538219 27459 net.cpp:139] Memory required for data: 1665280
I0428 19:52:12.538223 27459 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:12.538229 27459 net.cpp:86] Creating Layer ip3
I0428 19:52:12.538233 27459 net.cpp:408] ip3 <- ip2
I0428 19:52:12.538238 27459 net.cpp:382] ip3 -> ip3
I0428 19:52:12.538331 27459 net.cpp:124] Setting up ip3
I0428 19:52:12.538337 27459 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:12.538341 27459 net.cpp:139] Memory required for data: 1667840
I0428 19:52:12.538347 27459 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:12.538352 27459 net.cpp:86] Creating Layer relu3
I0428 19:52:12.538357 27459 net.cpp:408] relu3 <- ip3
I0428 19:52:12.538359 27459 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:12.538548 27459 net.cpp:124] Setting up relu3
I0428 19:52:12.538558 27459 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:12.538560 27459 net.cpp:139] Memory required for data: 1670400
I0428 19:52:12.538563 27459 layer_factory.hpp:77] Creating layer loss
I0428 19:52:12.538569 27459 net.cpp:86] Creating Layer loss
I0428 19:52:12.538573 27459 net.cpp:408] loss <- ip3
I0428 19:52:12.538576 27459 net.cpp:408] loss <- label
I0428 19:52:12.538580 27459 net.cpp:382] loss -> loss
I0428 19:52:12.538599 27459 layer_factory.hpp:77] Creating layer loss
I0428 19:52:12.538823 27459 net.cpp:124] Setting up loss
I0428 19:52:12.538831 27459 net.cpp:131] Top shape: (1)
I0428 19:52:12.538835 27459 net.cpp:134]     with loss weight 1
I0428 19:52:12.538849 27459 net.cpp:139] Memory required for data: 1670404
I0428 19:52:12.538852 27459 net.cpp:200] loss needs backward computation.
I0428 19:52:12.538856 27459 net.cpp:200] relu3 needs backward computation.
I0428 19:52:12.538858 27459 net.cpp:200] ip3 needs backward computation.
I0428 19:52:12.538861 27459 net.cpp:200] relu2 needs backward computation.
I0428 19:52:12.538864 27459 net.cpp:200] ip2 needs backward computation.
I0428 19:52:12.538866 27459 net.cpp:200] relu1 needs backward computation.
I0428 19:52:12.538869 27459 net.cpp:200] ip1 needs backward computation.
I0428 19:52:12.538872 27459 net.cpp:200] pool1 needs backward computation.
I0428 19:52:12.538874 27459 net.cpp:200] conv1 needs backward computation.
I0428 19:52:12.538877 27459 net.cpp:200] pool0 needs backward computation.
I0428 19:52:12.538879 27459 net.cpp:200] conv0 needs backward computation.
I0428 19:52:12.538883 27459 net.cpp:202] mnist does not need backward computation.
I0428 19:52:12.538885 27459 net.cpp:244] This network produces output loss
I0428 19:52:12.538894 27459 net.cpp:257] Network initialization done.
I0428 19:52:12.539197 27459 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test655.prototxt
I0428 19:52:12.539223 27459 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:12.539330 27459 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:12.539425 27459 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:12.539469 27459 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:12.539479 27459 net.cpp:86] Creating Layer mnist
I0428 19:52:12.539484 27459 net.cpp:382] mnist -> data
I0428 19:52:12.539491 27459 net.cpp:382] mnist -> label
I0428 19:52:12.539574 27459 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:12.541796 27459 net.cpp:124] Setting up mnist
I0428 19:52:12.541810 27459 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:12.541815 27459 net.cpp:131] Top shape: 100 (100)
I0428 19:52:12.541832 27459 net.cpp:139] Memory required for data: 314000
I0428 19:52:12.541836 27459 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:12.541846 27459 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:12.541851 27459 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:12.541877 27459 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:12.541883 27459 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:12.541924 27459 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:12.541947 27459 net.cpp:131] Top shape: 100 (100)
I0428 19:52:12.541954 27459 net.cpp:131] Top shape: 100 (100)
I0428 19:52:12.541956 27459 net.cpp:139] Memory required for data: 314800
I0428 19:52:12.541960 27459 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:12.541970 27459 net.cpp:86] Creating Layer conv0
I0428 19:52:12.541972 27459 net.cpp:408] conv0 <- data
I0428 19:52:12.541977 27459 net.cpp:382] conv0 -> conv0
I0428 19:52:12.543627 27459 net.cpp:124] Setting up conv0
I0428 19:52:12.543639 27459 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:12.543659 27459 net.cpp:139] Memory required for data: 1466800
I0428 19:52:12.543668 27459 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:12.543673 27459 net.cpp:86] Creating Layer pool0
I0428 19:52:12.543676 27459 net.cpp:408] pool0 <- conv0
I0428 19:52:12.543697 27459 net.cpp:382] pool0 -> pool0
I0428 19:52:12.543766 27459 net.cpp:124] Setting up pool0
I0428 19:52:12.543772 27459 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:12.543776 27459 net.cpp:139] Memory required for data: 1754800
I0428 19:52:12.543778 27459 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:12.543789 27459 net.cpp:86] Creating Layer conv1
I0428 19:52:12.543792 27459 net.cpp:408] conv1 <- pool0
I0428 19:52:12.543797 27459 net.cpp:382] conv1 -> conv1
I0428 19:52:12.546135 27459 net.cpp:124] Setting up conv1
I0428 19:52:12.546150 27459 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:12.546171 27459 net.cpp:139] Memory required for data: 2394800
I0428 19:52:12.546181 27459 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:12.546203 27459 net.cpp:86] Creating Layer pool1
I0428 19:52:12.546206 27459 net.cpp:408] pool1 <- conv1
I0428 19:52:12.546211 27459 net.cpp:382] pool1 -> pool1
I0428 19:52:12.546300 27459 net.cpp:124] Setting up pool1
I0428 19:52:12.546308 27459 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:12.546310 27459 net.cpp:139] Memory required for data: 2554800
I0428 19:52:12.546314 27459 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:12.546319 27459 net.cpp:86] Creating Layer ip1
I0428 19:52:12.546324 27459 net.cpp:408] ip1 <- pool1
I0428 19:52:12.546329 27459 net.cpp:382] ip1 -> ip1
I0428 19:52:12.546598 27459 net.cpp:124] Setting up ip1
I0428 19:52:12.546607 27459 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:12.546618 27459 net.cpp:139] Memory required for data: 2574800
I0428 19:52:12.546627 27459 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:12.546632 27459 net.cpp:86] Creating Layer relu1
I0428 19:52:12.546635 27459 net.cpp:408] relu1 <- ip1
I0428 19:52:12.546643 27459 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:12.546810 27459 net.cpp:124] Setting up relu1
I0428 19:52:12.546819 27459 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:12.546823 27459 net.cpp:139] Memory required for data: 2594800
I0428 19:52:12.546825 27459 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:12.546833 27459 net.cpp:86] Creating Layer ip2
I0428 19:52:12.546836 27459 net.cpp:408] ip2 <- ip1
I0428 19:52:12.546842 27459 net.cpp:382] ip2 -> ip2
I0428 19:52:12.546946 27459 net.cpp:124] Setting up ip2
I0428 19:52:12.546953 27459 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:12.546957 27459 net.cpp:139] Memory required for data: 2598800
I0428 19:52:12.546962 27459 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:12.546967 27459 net.cpp:86] Creating Layer relu2
I0428 19:52:12.546970 27459 net.cpp:408] relu2 <- ip2
I0428 19:52:12.546974 27459 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:12.547147 27459 net.cpp:124] Setting up relu2
I0428 19:52:12.547157 27459 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:12.547159 27459 net.cpp:139] Memory required for data: 2602800
I0428 19:52:12.547163 27459 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:12.547168 27459 net.cpp:86] Creating Layer ip3
I0428 19:52:12.547171 27459 net.cpp:408] ip3 <- ip2
I0428 19:52:12.547178 27459 net.cpp:382] ip3 -> ip3
I0428 19:52:12.547293 27459 net.cpp:124] Setting up ip3
I0428 19:52:12.547299 27459 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:12.547302 27459 net.cpp:139] Memory required for data: 2606800
I0428 19:52:12.547310 27459 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:12.547315 27459 net.cpp:86] Creating Layer relu3
I0428 19:52:12.547318 27459 net.cpp:408] relu3 <- ip3
I0428 19:52:12.547323 27459 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:12.548166 27459 net.cpp:124] Setting up relu3
I0428 19:52:12.548177 27459 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:12.548182 27459 net.cpp:139] Memory required for data: 2610800
I0428 19:52:12.548185 27459 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:12.548205 27459 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:12.548209 27459 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:12.548214 27459 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:12.548221 27459 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:12.548260 27459 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:12.548266 27459 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:12.548269 27459 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:12.548272 27459 net.cpp:139] Memory required for data: 2618800
I0428 19:52:12.548275 27459 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:12.548281 27459 net.cpp:86] Creating Layer accuracy
I0428 19:52:12.548285 27459 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:12.548290 27459 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:12.548293 27459 net.cpp:382] accuracy -> accuracy
I0428 19:52:12.548300 27459 net.cpp:124] Setting up accuracy
I0428 19:52:12.548305 27459 net.cpp:131] Top shape: (1)
I0428 19:52:12.548307 27459 net.cpp:139] Memory required for data: 2618804
I0428 19:52:12.548310 27459 layer_factory.hpp:77] Creating layer loss
I0428 19:52:12.548316 27459 net.cpp:86] Creating Layer loss
I0428 19:52:12.548318 27459 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:12.548322 27459 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:12.548326 27459 net.cpp:382] loss -> loss
I0428 19:52:12.548333 27459 layer_factory.hpp:77] Creating layer loss
I0428 19:52:12.548609 27459 net.cpp:124] Setting up loss
I0428 19:52:12.548619 27459 net.cpp:131] Top shape: (1)
I0428 19:52:12.548622 27459 net.cpp:134]     with loss weight 1
I0428 19:52:12.548629 27459 net.cpp:139] Memory required for data: 2618808
I0428 19:52:12.548640 27459 net.cpp:200] loss needs backward computation.
I0428 19:52:12.548645 27459 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:12.548648 27459 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:12.548651 27459 net.cpp:200] relu3 needs backward computation.
I0428 19:52:12.548655 27459 net.cpp:200] ip3 needs backward computation.
I0428 19:52:12.548657 27459 net.cpp:200] relu2 needs backward computation.
I0428 19:52:12.548660 27459 net.cpp:200] ip2 needs backward computation.
I0428 19:52:12.548662 27459 net.cpp:200] relu1 needs backward computation.
I0428 19:52:12.548665 27459 net.cpp:200] ip1 needs backward computation.
I0428 19:52:12.548667 27459 net.cpp:200] pool1 needs backward computation.
I0428 19:52:12.548671 27459 net.cpp:200] conv1 needs backward computation.
I0428 19:52:12.548673 27459 net.cpp:200] pool0 needs backward computation.
I0428 19:52:12.548676 27459 net.cpp:200] conv0 needs backward computation.
I0428 19:52:12.548681 27459 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:12.548686 27459 net.cpp:202] mnist does not need backward computation.
I0428 19:52:12.548687 27459 net.cpp:244] This network produces output accuracy
I0428 19:52:12.548691 27459 net.cpp:244] This network produces output loss
I0428 19:52:12.548702 27459 net.cpp:257] Network initialization done.
I0428 19:52:12.548741 27459 solver.cpp:56] Solver scaffolding done.
I0428 19:52:12.549115 27459 caffe.cpp:248] Starting Optimization
I0428 19:52:12.549121 27459 solver.cpp:273] Solving LeNet
I0428 19:52:12.549124 27459 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:12.550050 27459 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:12.553915 27459 blocking_queue.cpp:49] Waiting for data
I0428 19:52:12.622264 27466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:12.622822 27459 solver.cpp:398]     Test net output #0: accuracy = 0.1265
I0428 19:52:12.622854 27459 solver.cpp:398]     Test net output #1: loss = 2.30345 (* 1 = 2.30345 loss)
I0428 19:52:12.625329 27459 solver.cpp:219] Iteration 0 (-1.72619e-30 iter/s, 0.0761764s/100 iters), loss = 2.32345
I0428 19:52:12.625365 27459 solver.cpp:238]     Train net output #0: loss = 2.32345 (* 1 = 2.32345 loss)
I0428 19:52:12.625376 27459 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:12.721480 27459 solver.cpp:219] Iteration 100 (1040.41 iter/s, 0.0961157s/100 iters), loss = 1.26565
I0428 19:52:12.721521 27459 solver.cpp:238]     Train net output #0: loss = 1.26565 (* 1 = 1.26565 loss)
I0428 19:52:12.721527 27459 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:12.807965 27459 solver.cpp:219] Iteration 200 (1156.72 iter/s, 0.086451s/100 iters), loss = 0.754734
I0428 19:52:12.808007 27459 solver.cpp:238]     Train net output #0: loss = 0.754734 (* 1 = 0.754734 loss)
I0428 19:52:12.808012 27459 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:12.897001 27459 solver.cpp:219] Iteration 300 (1123.61 iter/s, 0.0889989s/100 iters), loss = 0.460686
I0428 19:52:12.897053 27459 solver.cpp:238]     Train net output #0: loss = 0.460686 (* 1 = 0.460686 loss)
I0428 19:52:12.897060 27459 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:12.995205 27459 solver.cpp:219] Iteration 400 (1018.86 iter/s, 0.0981494s/100 iters), loss = 0.28342
I0428 19:52:12.995256 27459 solver.cpp:238]     Train net output #0: loss = 0.28342 (* 1 = 0.28342 loss)
I0428 19:52:12.995267 27459 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:13.089874 27459 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:13.143537 27466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:13.144093 27459 solver.cpp:398]     Test net output #0: accuracy = 0.8415
I0428 19:52:13.144116 27459 solver.cpp:398]     Test net output #1: loss = 0.420751 (* 1 = 0.420751 loss)
I0428 19:52:13.145043 27459 solver.cpp:219] Iteration 500 (667.667 iter/s, 0.149775s/100 iters), loss = 0.38681
I0428 19:52:13.145102 27459 solver.cpp:238]     Train net output #0: loss = 0.38681 (* 1 = 0.38681 loss)
I0428 19:52:13.145112 27459 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:13.248291 27459 solver.cpp:219] Iteration 600 (969.2 iter/s, 0.103178s/100 iters), loss = 0.527322
I0428 19:52:13.248327 27459 solver.cpp:238]     Train net output #0: loss = 0.527322 (* 1 = 0.527322 loss)
I0428 19:52:13.248335 27459 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:13.338690 27459 solver.cpp:219] Iteration 700 (1106.75 iter/s, 0.0903547s/100 iters), loss = 0.404325
I0428 19:52:13.338717 27459 solver.cpp:238]     Train net output #0: loss = 0.404325 (* 1 = 0.404325 loss)
I0428 19:52:13.338726 27459 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:13.426107 27459 solver.cpp:219] Iteration 800 (1144.44 iter/s, 0.0873789s/100 iters), loss = 0.409847
I0428 19:52:13.426136 27459 solver.cpp:238]     Train net output #0: loss = 0.409847 (* 1 = 0.409847 loss)
I0428 19:52:13.426143 27459 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:13.514011 27459 solver.cpp:219] Iteration 900 (1138.09 iter/s, 0.0878664s/100 iters), loss = 0.441705
I0428 19:52:13.514039 27459 solver.cpp:238]     Train net output #0: loss = 0.441705 (* 1 = 0.441705 loss)
I0428 19:52:13.514047 27459 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:13.543350 27465 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:13.601754 27459 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:13.602958 27459 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:13.603865 27459 solver.cpp:311] Iteration 1000, loss = 0.36283
I0428 19:52:13.603899 27459 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:13.665599 27466 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:13.667399 27459 solver.cpp:398]     Test net output #0: accuracy = 0.8604
I0428 19:52:13.667426 27459 solver.cpp:398]     Test net output #1: loss = 0.34481 (* 1 = 0.34481 loss)
I0428 19:52:13.667433 27459 solver.cpp:316] Optimization Done.
I0428 19:52:13.667438 27459 caffe.cpp:259] Optimization Done.
