I0428 20:05:24.930420 30610 caffe.cpp:218] Using GPUs 0
I0428 20:05:24.959655 30610 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:25.396255 30610 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test999.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:25.396387 30610 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test999.prototxt
I0428 20:05:25.396714 30610 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:25.396728 30610 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:25.396808 30610 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:25.396913 30610 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:25.396997 30610 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:25.397017 30610 net.cpp:86] Creating Layer mnist
I0428 20:05:25.397023 30610 net.cpp:382] mnist -> data
I0428 20:05:25.397043 30610 net.cpp:382] mnist -> label
I0428 20:05:25.397964 30610 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:25.400053 30610 net.cpp:124] Setting up mnist
I0428 20:05:25.400068 30610 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:25.400074 30610 net.cpp:131] Top shape: 64 (64)
I0428 20:05:25.400076 30610 net.cpp:139] Memory required for data: 200960
I0428 20:05:25.400081 30610 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:25.400112 30610 net.cpp:86] Creating Layer conv0
I0428 20:05:25.400130 30610 net.cpp:408] conv0 <- data
I0428 20:05:25.400140 30610 net.cpp:382] conv0 -> conv0
I0428 20:05:25.621832 30610 net.cpp:124] Setting up conv0
I0428 20:05:25.621875 30610 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:25.621878 30610 net.cpp:139] Memory required for data: 3887360
I0428 20:05:25.621893 30610 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:25.621906 30610 net.cpp:86] Creating Layer pool0
I0428 20:05:25.621909 30610 net.cpp:408] pool0 <- conv0
I0428 20:05:25.621914 30610 net.cpp:382] pool0 -> pool0
I0428 20:05:25.621974 30610 net.cpp:124] Setting up pool0
I0428 20:05:25.621980 30610 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:25.621983 30610 net.cpp:139] Memory required for data: 4808960
I0428 20:05:25.621985 30610 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:25.621996 30610 net.cpp:86] Creating Layer conv1
I0428 20:05:25.621999 30610 net.cpp:408] conv1 <- pool0
I0428 20:05:25.622004 30610 net.cpp:382] conv1 -> conv1
I0428 20:05:25.624935 30610 net.cpp:124] Setting up conv1
I0428 20:05:25.624965 30610 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:25.624969 30610 net.cpp:139] Memory required for data: 4841728
I0428 20:05:25.624979 30610 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:25.624987 30610 net.cpp:86] Creating Layer pool1
I0428 20:05:25.624990 30610 net.cpp:408] pool1 <- conv1
I0428 20:05:25.624995 30610 net.cpp:382] pool1 -> pool1
I0428 20:05:25.625047 30610 net.cpp:124] Setting up pool1
I0428 20:05:25.625053 30610 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:25.625056 30610 net.cpp:139] Memory required for data: 4849920
I0428 20:05:25.625061 30610 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:25.625067 30610 net.cpp:86] Creating Layer ip1
I0428 20:05:25.625071 30610 net.cpp:408] ip1 <- pool1
I0428 20:05:25.625074 30610 net.cpp:382] ip1 -> ip1
I0428 20:05:25.625187 30610 net.cpp:124] Setting up ip1
I0428 20:05:25.625195 30610 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:25.625197 30610 net.cpp:139] Memory required for data: 4856320
I0428 20:05:25.625205 30610 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:25.625211 30610 net.cpp:86] Creating Layer relu1
I0428 20:05:25.625213 30610 net.cpp:408] relu1 <- ip1
I0428 20:05:25.625217 30610 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:25.625402 30610 net.cpp:124] Setting up relu1
I0428 20:05:25.625411 30610 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:25.625414 30610 net.cpp:139] Memory required for data: 4862720
I0428 20:05:25.625417 30610 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:25.625423 30610 net.cpp:86] Creating Layer ip2
I0428 20:05:25.625427 30610 net.cpp:408] ip2 <- ip1
I0428 20:05:25.625430 30610 net.cpp:382] ip2 -> ip2
I0428 20:05:25.625524 30610 net.cpp:124] Setting up ip2
I0428 20:05:25.625531 30610 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:25.625535 30610 net.cpp:139] Memory required for data: 4869120
I0428 20:05:25.625540 30610 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:25.625546 30610 net.cpp:86] Creating Layer relu2
I0428 20:05:25.625550 30610 net.cpp:408] relu2 <- ip2
I0428 20:05:25.625553 30610 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:25.626305 30610 net.cpp:124] Setting up relu2
I0428 20:05:25.626332 30610 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:25.626338 30610 net.cpp:139] Memory required for data: 4875520
I0428 20:05:25.626358 30610 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:25.626368 30610 net.cpp:86] Creating Layer ip3
I0428 20:05:25.626384 30610 net.cpp:408] ip3 <- ip2
I0428 20:05:25.626390 30610 net.cpp:382] ip3 -> ip3
I0428 20:05:25.626499 30610 net.cpp:124] Setting up ip3
I0428 20:05:25.626507 30610 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:25.626510 30610 net.cpp:139] Memory required for data: 4878080
I0428 20:05:25.626518 30610 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:25.626523 30610 net.cpp:86] Creating Layer relu3
I0428 20:05:25.626526 30610 net.cpp:408] relu3 <- ip3
I0428 20:05:25.626530 30610 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:25.626700 30610 net.cpp:124] Setting up relu3
I0428 20:05:25.626710 30610 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:25.626713 30610 net.cpp:139] Memory required for data: 4880640
I0428 20:05:25.626716 30610 layer_factory.hpp:77] Creating layer loss
I0428 20:05:25.626724 30610 net.cpp:86] Creating Layer loss
I0428 20:05:25.626726 30610 net.cpp:408] loss <- ip3
I0428 20:05:25.626730 30610 net.cpp:408] loss <- label
I0428 20:05:25.626735 30610 net.cpp:382] loss -> loss
I0428 20:05:25.626766 30610 layer_factory.hpp:77] Creating layer loss
I0428 20:05:25.627017 30610 net.cpp:124] Setting up loss
I0428 20:05:25.627027 30610 net.cpp:131] Top shape: (1)
I0428 20:05:25.627029 30610 net.cpp:134]     with loss weight 1
I0428 20:05:25.627043 30610 net.cpp:139] Memory required for data: 4880644
I0428 20:05:25.627045 30610 net.cpp:200] loss needs backward computation.
I0428 20:05:25.627049 30610 net.cpp:200] relu3 needs backward computation.
I0428 20:05:25.627051 30610 net.cpp:200] ip3 needs backward computation.
I0428 20:05:25.627054 30610 net.cpp:200] relu2 needs backward computation.
I0428 20:05:25.627058 30610 net.cpp:200] ip2 needs backward computation.
I0428 20:05:25.627059 30610 net.cpp:200] relu1 needs backward computation.
I0428 20:05:25.627063 30610 net.cpp:200] ip1 needs backward computation.
I0428 20:05:25.627065 30610 net.cpp:200] pool1 needs backward computation.
I0428 20:05:25.627068 30610 net.cpp:200] conv1 needs backward computation.
I0428 20:05:25.627070 30610 net.cpp:200] pool0 needs backward computation.
I0428 20:05:25.627074 30610 net.cpp:200] conv0 needs backward computation.
I0428 20:05:25.627076 30610 net.cpp:202] mnist does not need backward computation.
I0428 20:05:25.627079 30610 net.cpp:244] This network produces output loss
I0428 20:05:25.627090 30610 net.cpp:257] Network initialization done.
I0428 20:05:25.627507 30610 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test999.prototxt
I0428 20:05:25.627565 30610 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:25.627689 30610 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:25.627773 30610 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:25.627826 30610 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:25.627840 30610 net.cpp:86] Creating Layer mnist
I0428 20:05:25.627845 30610 net.cpp:382] mnist -> data
I0428 20:05:25.627866 30610 net.cpp:382] mnist -> label
I0428 20:05:25.627952 30610 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:25.630172 30610 net.cpp:124] Setting up mnist
I0428 20:05:25.630187 30610 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:25.630192 30610 net.cpp:131] Top shape: 100 (100)
I0428 20:05:25.630194 30610 net.cpp:139] Memory required for data: 314000
I0428 20:05:25.630198 30610 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:25.630204 30610 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:25.630208 30610 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:25.630213 30610 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:25.630220 30610 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:25.630314 30610 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:25.630322 30610 net.cpp:131] Top shape: 100 (100)
I0428 20:05:25.630326 30610 net.cpp:131] Top shape: 100 (100)
I0428 20:05:25.630328 30610 net.cpp:139] Memory required for data: 314800
I0428 20:05:25.630331 30610 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:25.630342 30610 net.cpp:86] Creating Layer conv0
I0428 20:05:25.630344 30610 net.cpp:408] conv0 <- data
I0428 20:05:25.630349 30610 net.cpp:382] conv0 -> conv0
I0428 20:05:25.632141 30610 net.cpp:124] Setting up conv0
I0428 20:05:25.632155 30610 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:25.632169 30610 net.cpp:139] Memory required for data: 6074800
I0428 20:05:25.632179 30610 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:25.632186 30610 net.cpp:86] Creating Layer pool0
I0428 20:05:25.632190 30610 net.cpp:408] pool0 <- conv0
I0428 20:05:25.632199 30610 net.cpp:382] pool0 -> pool0
I0428 20:05:25.632249 30610 net.cpp:124] Setting up pool0
I0428 20:05:25.632257 30610 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:25.632259 30610 net.cpp:139] Memory required for data: 7514800
I0428 20:05:25.632262 30610 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:25.632272 30610 net.cpp:86] Creating Layer conv1
I0428 20:05:25.632274 30610 net.cpp:408] conv1 <- pool0
I0428 20:05:25.632280 30610 net.cpp:382] conv1 -> conv1
I0428 20:05:25.634529 30610 net.cpp:124] Setting up conv1
I0428 20:05:25.634544 30610 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:25.634548 30610 net.cpp:139] Memory required for data: 7566000
I0428 20:05:25.634578 30610 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:25.634588 30610 net.cpp:86] Creating Layer pool1
I0428 20:05:25.634591 30610 net.cpp:408] pool1 <- conv1
I0428 20:05:25.634596 30610 net.cpp:382] pool1 -> pool1
I0428 20:05:25.634635 30610 net.cpp:124] Setting up pool1
I0428 20:05:25.634645 30610 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:25.634649 30610 net.cpp:139] Memory required for data: 7578800
I0428 20:05:25.634652 30610 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:25.634657 30610 net.cpp:86] Creating Layer ip1
I0428 20:05:25.634661 30610 net.cpp:408] ip1 <- pool1
I0428 20:05:25.634667 30610 net.cpp:382] ip1 -> ip1
I0428 20:05:25.634784 30610 net.cpp:124] Setting up ip1
I0428 20:05:25.634793 30610 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:25.634805 30610 net.cpp:139] Memory required for data: 7588800
I0428 20:05:25.634814 30610 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:25.634819 30610 net.cpp:86] Creating Layer relu1
I0428 20:05:25.634821 30610 net.cpp:408] relu1 <- ip1
I0428 20:05:25.634826 30610 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:25.635082 30610 net.cpp:124] Setting up relu1
I0428 20:05:25.635092 30610 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:25.635095 30610 net.cpp:139] Memory required for data: 7598800
I0428 20:05:25.635098 30610 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:25.635115 30610 net.cpp:86] Creating Layer ip2
I0428 20:05:25.635118 30610 net.cpp:408] ip2 <- ip1
I0428 20:05:25.635128 30610 net.cpp:382] ip2 -> ip2
I0428 20:05:25.635249 30610 net.cpp:124] Setting up ip2
I0428 20:05:25.635257 30610 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:25.635260 30610 net.cpp:139] Memory required for data: 7608800
I0428 20:05:25.635267 30610 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:25.635270 30610 net.cpp:86] Creating Layer relu2
I0428 20:05:25.635279 30610 net.cpp:408] relu2 <- ip2
I0428 20:05:25.635284 30610 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:25.635448 30610 net.cpp:124] Setting up relu2
I0428 20:05:25.635457 30610 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:25.635459 30610 net.cpp:139] Memory required for data: 7618800
I0428 20:05:25.635463 30610 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:25.635470 30610 net.cpp:86] Creating Layer ip3
I0428 20:05:25.635474 30610 net.cpp:408] ip3 <- ip2
I0428 20:05:25.635478 30610 net.cpp:382] ip3 -> ip3
I0428 20:05:25.635623 30610 net.cpp:124] Setting up ip3
I0428 20:05:25.635632 30610 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:25.635634 30610 net.cpp:139] Memory required for data: 7622800
I0428 20:05:25.635644 30610 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:25.635651 30610 net.cpp:86] Creating Layer relu3
I0428 20:05:25.635655 30610 net.cpp:408] relu3 <- ip3
I0428 20:05:25.635659 30610 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:25.636538 30610 net.cpp:124] Setting up relu3
I0428 20:05:25.636549 30610 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:25.636554 30610 net.cpp:139] Memory required for data: 7626800
I0428 20:05:25.636557 30610 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:25.636564 30610 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:25.636581 30610 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:25.636585 30610 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:25.636592 30610 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:25.636634 30610 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:25.636641 30610 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:25.636646 30610 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:25.636648 30610 net.cpp:139] Memory required for data: 7634800
I0428 20:05:25.636651 30610 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:25.636660 30610 net.cpp:86] Creating Layer accuracy
I0428 20:05:25.636663 30610 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:25.636667 30610 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:25.636672 30610 net.cpp:382] accuracy -> accuracy
I0428 20:05:25.636678 30610 net.cpp:124] Setting up accuracy
I0428 20:05:25.636682 30610 net.cpp:131] Top shape: (1)
I0428 20:05:25.636684 30610 net.cpp:139] Memory required for data: 7634804
I0428 20:05:25.636687 30610 layer_factory.hpp:77] Creating layer loss
I0428 20:05:25.636692 30610 net.cpp:86] Creating Layer loss
I0428 20:05:25.636694 30610 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:25.636698 30610 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:25.636703 30610 net.cpp:382] loss -> loss
I0428 20:05:25.636709 30610 layer_factory.hpp:77] Creating layer loss
I0428 20:05:25.636968 30610 net.cpp:124] Setting up loss
I0428 20:05:25.636979 30610 net.cpp:131] Top shape: (1)
I0428 20:05:25.636982 30610 net.cpp:134]     with loss weight 1
I0428 20:05:25.636988 30610 net.cpp:139] Memory required for data: 7634808
I0428 20:05:25.637001 30610 net.cpp:200] loss needs backward computation.
I0428 20:05:25.637006 30610 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:25.637011 30610 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:25.637020 30610 net.cpp:200] relu3 needs backward computation.
I0428 20:05:25.637023 30610 net.cpp:200] ip3 needs backward computation.
I0428 20:05:25.637027 30610 net.cpp:200] relu2 needs backward computation.
I0428 20:05:25.637029 30610 net.cpp:200] ip2 needs backward computation.
I0428 20:05:25.637032 30610 net.cpp:200] relu1 needs backward computation.
I0428 20:05:25.637035 30610 net.cpp:200] ip1 needs backward computation.
I0428 20:05:25.637038 30610 net.cpp:200] pool1 needs backward computation.
I0428 20:05:25.637060 30610 net.cpp:200] conv1 needs backward computation.
I0428 20:05:25.637063 30610 net.cpp:200] pool0 needs backward computation.
I0428 20:05:25.637066 30610 net.cpp:200] conv0 needs backward computation.
I0428 20:05:25.637070 30610 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:25.637074 30610 net.cpp:202] mnist does not need backward computation.
I0428 20:05:25.637076 30610 net.cpp:244] This network produces output accuracy
I0428 20:05:25.637080 30610 net.cpp:244] This network produces output loss
I0428 20:05:25.637107 30610 net.cpp:257] Network initialization done.
I0428 20:05:25.637167 30610 solver.cpp:56] Solver scaffolding done.
I0428 20:05:25.637537 30610 caffe.cpp:248] Starting Optimization
I0428 20:05:25.637544 30610 solver.cpp:273] Solving LeNet
I0428 20:05:25.637547 30610 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:25.638393 30610 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:25.643625 30610 blocking_queue.cpp:49] Waiting for data
I0428 20:05:25.715689 30617 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:25.716296 30610 solver.cpp:398]     Test net output #0: accuracy = 0.1411
I0428 20:05:25.716334 30610 solver.cpp:398]     Test net output #1: loss = 2.3089 (* 1 = 2.3089 loss)
I0428 20:05:25.719480 30610 solver.cpp:219] Iteration 0 (-1.45087e-31 iter/s, 0.0818852s/100 iters), loss = 2.30405
I0428 20:05:25.719518 30610 solver.cpp:238]     Train net output #0: loss = 2.30405 (* 1 = 2.30405 loss)
I0428 20:05:25.719543 30610 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:25.807755 30610 solver.cpp:219] Iteration 100 (1133.47 iter/s, 0.0882248s/100 iters), loss = 0.435712
I0428 20:05:25.807796 30610 solver.cpp:238]     Train net output #0: loss = 0.435712 (* 1 = 0.435712 loss)
I0428 20:05:25.807801 30610 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:25.893772 30610 solver.cpp:219] Iteration 200 (1163.23 iter/s, 0.0859679s/100 iters), loss = 0.280428
I0428 20:05:25.893812 30610 solver.cpp:238]     Train net output #0: loss = 0.280428 (* 1 = 0.280428 loss)
I0428 20:05:25.893818 30610 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:25.979074 30610 solver.cpp:219] Iteration 300 (1172.79 iter/s, 0.0852666s/100 iters), loss = 0.393958
I0428 20:05:25.979112 30610 solver.cpp:238]     Train net output #0: loss = 0.393958 (* 1 = 0.393958 loss)
I0428 20:05:25.979118 30610 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:26.064501 30610 solver.cpp:219] Iteration 400 (1171.05 iter/s, 0.0853934s/100 iters), loss = 0.156993
I0428 20:05:26.064540 30610 solver.cpp:238]     Train net output #0: loss = 0.156993 (* 1 = 0.156993 loss)
I0428 20:05:26.064546 30610 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:26.160733 30610 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:26.214776 30617 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:26.215384 30610 solver.cpp:398]     Test net output #0: accuracy = 0.9336
I0428 20:05:26.215404 30610 solver.cpp:398]     Test net output #1: loss = 0.220583 (* 1 = 0.220583 loss)
I0428 20:05:26.216192 30610 solver.cpp:219] Iteration 500 (659.394 iter/s, 0.151654s/100 iters), loss = 0.271567
I0428 20:05:26.216249 30610 solver.cpp:238]     Train net output #0: loss = 0.271568 (* 1 = 0.271568 loss)
I0428 20:05:26.216258 30610 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:26.308256 30610 solver.cpp:219] Iteration 600 (1086.96 iter/s, 0.0919995s/100 iters), loss = 0.0749529
I0428 20:05:26.308297 30610 solver.cpp:238]     Train net output #0: loss = 0.0749529 (* 1 = 0.0749529 loss)
I0428 20:05:26.308305 30610 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:26.395475 30610 solver.cpp:219] Iteration 700 (1147.2 iter/s, 0.087169s/100 iters), loss = 0.203511
I0428 20:05:26.395514 30610 solver.cpp:238]     Train net output #0: loss = 0.203511 (* 1 = 0.203511 loss)
I0428 20:05:26.395534 30610 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:26.483883 30610 solver.cpp:219] Iteration 800 (1131.53 iter/s, 0.0883762s/100 iters), loss = 0.478387
I0428 20:05:26.483922 30610 solver.cpp:238]     Train net output #0: loss = 0.478387 (* 1 = 0.478387 loss)
I0428 20:05:26.483928 30610 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:26.571259 30610 solver.cpp:219] Iteration 900 (1145.12 iter/s, 0.0873267s/100 iters), loss = 0.254049
I0428 20:05:26.571297 30610 solver.cpp:238]     Train net output #0: loss = 0.254049 (* 1 = 0.254049 loss)
I0428 20:05:26.571302 30610 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:26.600484 30616 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:26.656091 30610 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:26.656919 30610 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:26.657477 30610 solver.cpp:311] Iteration 1000, loss = 0.134326
I0428 20:05:26.657491 30610 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:26.711802 30617 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:26.712357 30610 solver.cpp:398]     Test net output #0: accuracy = 0.9543
I0428 20:05:26.712385 30610 solver.cpp:398]     Test net output #1: loss = 0.152043 (* 1 = 0.152043 loss)
I0428 20:05:26.712389 30610 solver.cpp:316] Optimization Done.
I0428 20:05:26.712393 30610 caffe.cpp:259] Optimization Done.
