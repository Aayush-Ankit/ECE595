I0428 20:32:09.392935  4060 caffe.cpp:218] Using GPUs 0
I0428 20:32:09.433995  4060 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:09.954111  4060 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1567.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:09.954252  4060 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1567.prototxt
I0428 20:32:09.954629  4060 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:09.954646  4060 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:09.954735  4060 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:09.954812  4060 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:09.954907  4060 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:09.954933  4060 net.cpp:86] Creating Layer mnist
I0428 20:32:09.954942  4060 net.cpp:382] mnist -> data
I0428 20:32:09.954970  4060 net.cpp:382] mnist -> label
I0428 20:32:09.956073  4060 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:09.958529  4060 net.cpp:124] Setting up mnist
I0428 20:32:09.958549  4060 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:09.958554  4060 net.cpp:131] Top shape: 64 (64)
I0428 20:32:09.958557  4060 net.cpp:139] Memory required for data: 200960
I0428 20:32:09.958564  4060 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:09.958581  4060 net.cpp:86] Creating Layer conv0
I0428 20:32:09.958587  4060 net.cpp:408] conv0 <- data
I0428 20:32:09.958598  4060 net.cpp:382] conv0 -> conv0
I0428 20:32:10.243783  4060 net.cpp:124] Setting up conv0
I0428 20:32:10.243810  4060 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:10.243814  4060 net.cpp:139] Memory required for data: 14946560
I0428 20:32:10.243849  4060 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:10.243862  4060 net.cpp:86] Creating Layer pool0
I0428 20:32:10.243866  4060 net.cpp:408] pool0 <- conv0
I0428 20:32:10.243872  4060 net.cpp:382] pool0 -> pool0
I0428 20:32:10.243921  4060 net.cpp:124] Setting up pool0
I0428 20:32:10.243927  4060 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:10.243930  4060 net.cpp:139] Memory required for data: 18632960
I0428 20:32:10.243934  4060 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:10.243945  4060 net.cpp:86] Creating Layer conv1
I0428 20:32:10.243950  4060 net.cpp:408] conv1 <- pool0
I0428 20:32:10.243957  4060 net.cpp:382] conv1 -> conv1
I0428 20:32:10.246284  4060 net.cpp:124] Setting up conv1
I0428 20:32:10.246299  4060 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:10.246302  4060 net.cpp:139] Memory required for data: 19042560
I0428 20:32:10.246310  4060 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:10.246320  4060 net.cpp:86] Creating Layer pool1
I0428 20:32:10.246322  4060 net.cpp:408] pool1 <- conv1
I0428 20:32:10.246326  4060 net.cpp:382] pool1 -> pool1
I0428 20:32:10.246364  4060 net.cpp:124] Setting up pool1
I0428 20:32:10.246369  4060 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:10.246372  4060 net.cpp:139] Memory required for data: 19144960
I0428 20:32:10.246374  4060 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:10.246381  4060 net.cpp:86] Creating Layer ip1
I0428 20:32:10.246384  4060 net.cpp:408] ip1 <- pool1
I0428 20:32:10.246390  4060 net.cpp:382] ip1 -> ip1
I0428 20:32:10.247488  4060 net.cpp:124] Setting up ip1
I0428 20:32:10.247499  4060 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:10.247519  4060 net.cpp:139] Memory required for data: 19151360
I0428 20:32:10.247526  4060 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:10.247534  4060 net.cpp:86] Creating Layer relu1
I0428 20:32:10.247536  4060 net.cpp:408] relu1 <- ip1
I0428 20:32:10.247541  4060 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:10.247730  4060 net.cpp:124] Setting up relu1
I0428 20:32:10.247738  4060 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:10.247741  4060 net.cpp:139] Memory required for data: 19157760
I0428 20:32:10.247745  4060 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:10.247751  4060 net.cpp:86] Creating Layer ip2
I0428 20:32:10.247756  4060 net.cpp:408] ip2 <- ip1
I0428 20:32:10.247759  4060 net.cpp:382] ip2 -> ip2
I0428 20:32:10.247906  4060 net.cpp:124] Setting up ip2
I0428 20:32:10.247913  4060 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:10.247916  4060 net.cpp:139] Memory required for data: 19160320
I0428 20:32:10.247922  4060 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:10.247930  4060 net.cpp:86] Creating Layer relu2
I0428 20:32:10.247932  4060 net.cpp:408] relu2 <- ip2
I0428 20:32:10.247938  4060 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:10.248723  4060 net.cpp:124] Setting up relu2
I0428 20:32:10.248734  4060 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:10.248738  4060 net.cpp:139] Memory required for data: 19162880
I0428 20:32:10.248740  4060 layer_factory.hpp:77] Creating layer loss
I0428 20:32:10.248746  4060 net.cpp:86] Creating Layer loss
I0428 20:32:10.248750  4060 net.cpp:408] loss <- ip2
I0428 20:32:10.248755  4060 net.cpp:408] loss <- label
I0428 20:32:10.248760  4060 net.cpp:382] loss -> loss
I0428 20:32:10.248780  4060 layer_factory.hpp:77] Creating layer loss
I0428 20:32:10.249099  4060 net.cpp:124] Setting up loss
I0428 20:32:10.249109  4060 net.cpp:131] Top shape: (1)
I0428 20:32:10.249114  4060 net.cpp:134]     with loss weight 1
I0428 20:32:10.249128  4060 net.cpp:139] Memory required for data: 19162884
I0428 20:32:10.249132  4060 net.cpp:200] loss needs backward computation.
I0428 20:32:10.249136  4060 net.cpp:200] relu2 needs backward computation.
I0428 20:32:10.249140  4060 net.cpp:200] ip2 needs backward computation.
I0428 20:32:10.249142  4060 net.cpp:200] relu1 needs backward computation.
I0428 20:32:10.249145  4060 net.cpp:200] ip1 needs backward computation.
I0428 20:32:10.249188  4060 net.cpp:200] pool1 needs backward computation.
I0428 20:32:10.249191  4060 net.cpp:200] conv1 needs backward computation.
I0428 20:32:10.249194  4060 net.cpp:200] pool0 needs backward computation.
I0428 20:32:10.249197  4060 net.cpp:200] conv0 needs backward computation.
I0428 20:32:10.249200  4060 net.cpp:202] mnist does not need backward computation.
I0428 20:32:10.249203  4060 net.cpp:244] This network produces output loss
I0428 20:32:10.249213  4060 net.cpp:257] Network initialization done.
I0428 20:32:10.249513  4060 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1567.prototxt
I0428 20:32:10.249538  4060 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:10.249620  4060 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:10.249686  4060 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:10.249728  4060 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:10.249740  4060 net.cpp:86] Creating Layer mnist
I0428 20:32:10.249745  4060 net.cpp:382] mnist -> data
I0428 20:32:10.249753  4060 net.cpp:382] mnist -> label
I0428 20:32:10.249840  4060 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:10.251734  4060 net.cpp:124] Setting up mnist
I0428 20:32:10.251745  4060 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:10.251750  4060 net.cpp:131] Top shape: 100 (100)
I0428 20:32:10.251754  4060 net.cpp:139] Memory required for data: 314000
I0428 20:32:10.251756  4060 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:10.251763  4060 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:10.251766  4060 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:10.251771  4060 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:10.251778  4060 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:10.251838  4060 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:10.251843  4060 net.cpp:131] Top shape: 100 (100)
I0428 20:32:10.251847  4060 net.cpp:131] Top shape: 100 (100)
I0428 20:32:10.251850  4060 net.cpp:139] Memory required for data: 314800
I0428 20:32:10.251853  4060 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:10.251863  4060 net.cpp:86] Creating Layer conv0
I0428 20:32:10.251866  4060 net.cpp:408] conv0 <- data
I0428 20:32:10.251870  4060 net.cpp:382] conv0 -> conv0
I0428 20:32:10.253662  4060 net.cpp:124] Setting up conv0
I0428 20:32:10.253676  4060 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:10.253680  4060 net.cpp:139] Memory required for data: 23354800
I0428 20:32:10.253690  4060 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:10.253696  4060 net.cpp:86] Creating Layer pool0
I0428 20:32:10.253700  4060 net.cpp:408] pool0 <- conv0
I0428 20:32:10.253705  4060 net.cpp:382] pool0 -> pool0
I0428 20:32:10.253739  4060 net.cpp:124] Setting up pool0
I0428 20:32:10.253746  4060 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:10.253749  4060 net.cpp:139] Memory required for data: 29114800
I0428 20:32:10.253752  4060 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:10.253762  4060 net.cpp:86] Creating Layer conv1
I0428 20:32:10.253764  4060 net.cpp:408] conv1 <- pool0
I0428 20:32:10.253768  4060 net.cpp:382] conv1 -> conv1
I0428 20:32:10.255849  4060 net.cpp:124] Setting up conv1
I0428 20:32:10.255878  4060 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:10.255882  4060 net.cpp:139] Memory required for data: 29754800
I0428 20:32:10.255892  4060 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:10.255900  4060 net.cpp:86] Creating Layer pool1
I0428 20:32:10.255903  4060 net.cpp:408] pool1 <- conv1
I0428 20:32:10.255908  4060 net.cpp:382] pool1 -> pool1
I0428 20:32:10.255971  4060 net.cpp:124] Setting up pool1
I0428 20:32:10.255988  4060 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:10.255991  4060 net.cpp:139] Memory required for data: 29914800
I0428 20:32:10.255995  4060 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:10.256006  4060 net.cpp:86] Creating Layer ip1
I0428 20:32:10.256009  4060 net.cpp:408] ip1 <- pool1
I0428 20:32:10.256014  4060 net.cpp:382] ip1 -> ip1
I0428 20:32:10.256172  4060 net.cpp:124] Setting up ip1
I0428 20:32:10.256181  4060 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:10.256183  4060 net.cpp:139] Memory required for data: 29924800
I0428 20:32:10.256191  4060 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:10.256197  4060 net.cpp:86] Creating Layer relu1
I0428 20:32:10.256201  4060 net.cpp:408] relu1 <- ip1
I0428 20:32:10.256204  4060 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:10.256367  4060 net.cpp:124] Setting up relu1
I0428 20:32:10.256376  4060 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:10.256378  4060 net.cpp:139] Memory required for data: 29934800
I0428 20:32:10.256381  4060 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:10.256389  4060 net.cpp:86] Creating Layer ip2
I0428 20:32:10.256392  4060 net.cpp:408] ip2 <- ip1
I0428 20:32:10.256398  4060 net.cpp:382] ip2 -> ip2
I0428 20:32:10.256500  4060 net.cpp:124] Setting up ip2
I0428 20:32:10.256507  4060 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:10.256511  4060 net.cpp:139] Memory required for data: 29938800
I0428 20:32:10.256516  4060 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:10.256521  4060 net.cpp:86] Creating Layer relu2
I0428 20:32:10.256525  4060 net.cpp:408] relu2 <- ip2
I0428 20:32:10.256528  4060 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:10.256716  4060 net.cpp:124] Setting up relu2
I0428 20:32:10.256723  4060 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:10.256726  4060 net.cpp:139] Memory required for data: 29942800
I0428 20:32:10.256729  4060 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:32:10.256733  4060 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:32:10.256736  4060 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:32:10.256742  4060 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:32:10.256757  4060 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:32:10.256796  4060 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:32:10.256803  4060 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:10.256808  4060 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:10.256832  4060 net.cpp:139] Memory required for data: 29950800
I0428 20:32:10.256835  4060 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:10.256845  4060 net.cpp:86] Creating Layer accuracy
I0428 20:32:10.256850  4060 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:32:10.256853  4060 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:10.256857  4060 net.cpp:382] accuracy -> accuracy
I0428 20:32:10.256880  4060 net.cpp:124] Setting up accuracy
I0428 20:32:10.256902  4060 net.cpp:131] Top shape: (1)
I0428 20:32:10.256907  4060 net.cpp:139] Memory required for data: 29950804
I0428 20:32:10.256912  4060 layer_factory.hpp:77] Creating layer loss
I0428 20:32:10.256919  4060 net.cpp:86] Creating Layer loss
I0428 20:32:10.256923  4060 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:32:10.256927  4060 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:10.256932  4060 net.cpp:382] loss -> loss
I0428 20:32:10.256937  4060 layer_factory.hpp:77] Creating layer loss
I0428 20:32:10.257225  4060 net.cpp:124] Setting up loss
I0428 20:32:10.257235  4060 net.cpp:131] Top shape: (1)
I0428 20:32:10.257237  4060 net.cpp:134]     with loss weight 1
I0428 20:32:10.257244  4060 net.cpp:139] Memory required for data: 29950808
I0428 20:32:10.257247  4060 net.cpp:200] loss needs backward computation.
I0428 20:32:10.257251  4060 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:10.257254  4060 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:32:10.257264  4060 net.cpp:200] relu2 needs backward computation.
I0428 20:32:10.257267  4060 net.cpp:200] ip2 needs backward computation.
I0428 20:32:10.257271  4060 net.cpp:200] relu1 needs backward computation.
I0428 20:32:10.257273  4060 net.cpp:200] ip1 needs backward computation.
I0428 20:32:10.257277  4060 net.cpp:200] pool1 needs backward computation.
I0428 20:32:10.257284  4060 net.cpp:200] conv1 needs backward computation.
I0428 20:32:10.257292  4060 net.cpp:200] pool0 needs backward computation.
I0428 20:32:10.257294  4060 net.cpp:200] conv0 needs backward computation.
I0428 20:32:10.257298  4060 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:10.257302  4060 net.cpp:202] mnist does not need backward computation.
I0428 20:32:10.257304  4060 net.cpp:244] This network produces output accuracy
I0428 20:32:10.257308  4060 net.cpp:244] This network produces output loss
I0428 20:32:10.257319  4060 net.cpp:257] Network initialization done.
I0428 20:32:10.257357  4060 solver.cpp:56] Solver scaffolding done.
I0428 20:32:10.257638  4060 caffe.cpp:248] Starting Optimization
I0428 20:32:10.257644  4060 solver.cpp:273] Solving LeNet
I0428 20:32:10.257647  4060 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:10.257840  4060 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:10.352772  4067 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:10.354218  4060 solver.cpp:398]     Test net output #0: accuracy = 0.11
I0428 20:32:10.354254  4060 solver.cpp:398]     Test net output #1: loss = 2.29205 (* 1 = 2.29205 loss)
I0428 20:32:10.358917  4060 solver.cpp:219] Iteration 0 (-5.58871e-31 iter/s, 0.101225s/100 iters), loss = 2.27685
I0428 20:32:10.358956  4060 solver.cpp:238]     Train net output #0: loss = 2.27685 (* 1 = 2.27685 loss)
I0428 20:32:10.358968  4060 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:10.569339  4060 solver.cpp:219] Iteration 100 (475.35 iter/s, 0.210371s/100 iters), loss = 0.268127
I0428 20:32:10.569391  4060 solver.cpp:238]     Train net output #0: loss = 0.268127 (* 1 = 0.268127 loss)
I0428 20:32:10.569402  4060 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:10.790295  4060 solver.cpp:219] Iteration 200 (452.714 iter/s, 0.22089s/100 iters), loss = 0.176246
I0428 20:32:10.790371  4060 solver.cpp:238]     Train net output #0: loss = 0.176246 (* 1 = 0.176246 loss)
I0428 20:32:10.790385  4060 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:11.011618  4060 solver.cpp:219] Iteration 300 (452.016 iter/s, 0.221231s/100 iters), loss = 0.194497
I0428 20:32:11.011669  4060 solver.cpp:238]     Train net output #0: loss = 0.194497 (* 1 = 0.194497 loss)
I0428 20:32:11.011682  4060 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:11.232144  4060 solver.cpp:219] Iteration 400 (453.601 iter/s, 0.220458s/100 iters), loss = 0.0667054
I0428 20:32:11.232197  4060 solver.cpp:238]     Train net output #0: loss = 0.0667054 (* 1 = 0.0667054 loss)
I0428 20:32:11.232209  4060 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:11.449053  4060 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:11.550590  4067 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:11.552899  4060 solver.cpp:398]     Test net output #0: accuracy = 0.9684
I0428 20:32:11.552927  4060 solver.cpp:398]     Test net output #1: loss = 0.0962615 (* 1 = 0.0962615 loss)
I0428 20:32:11.554880  4060 solver.cpp:219] Iteration 500 (309.918 iter/s, 0.322666s/100 iters), loss = 0.141797
I0428 20:32:11.554908  4060 solver.cpp:238]     Train net output #0: loss = 0.141797 (* 1 = 0.141797 loss)
I0428 20:32:11.554915  4060 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:11.777850  4060 solver.cpp:219] Iteration 600 (448.59 iter/s, 0.222921s/100 iters), loss = 0.098697
I0428 20:32:11.777905  4060 solver.cpp:238]     Train net output #0: loss = 0.0986969 (* 1 = 0.0986969 loss)
I0428 20:32:11.777920  4060 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:12.005151  4060 solver.cpp:219] Iteration 700 (440.089 iter/s, 0.227227s/100 iters), loss = 0.114707
I0428 20:32:12.005203  4060 solver.cpp:238]     Train net output #0: loss = 0.114707 (* 1 = 0.114707 loss)
I0428 20:32:12.005215  4060 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:12.229776  4060 solver.cpp:219] Iteration 800 (445.323 iter/s, 0.224556s/100 iters), loss = 0.241542
I0428 20:32:12.229827  4060 solver.cpp:238]     Train net output #0: loss = 0.241542 (* 1 = 0.241542 loss)
I0428 20:32:12.229840  4060 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:12.455737  4060 solver.cpp:219] Iteration 900 (442.693 iter/s, 0.22589s/100 iters), loss = 0.0959181
I0428 20:32:12.455790  4060 solver.cpp:238]     Train net output #0: loss = 0.0959181 (* 1 = 0.0959181 loss)
I0428 20:32:12.455802  4060 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:12.530580  4066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:12.676654  4060 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:12.679957  4060 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:12.681936  4060 solver.cpp:311] Iteration 1000, loss = 0.0874254
I0428 20:32:12.681968  4060 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:12.783707  4067 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:12.786036  4060 solver.cpp:398]     Test net output #0: accuracy = 0.9765
I0428 20:32:12.786063  4060 solver.cpp:398]     Test net output #1: loss = 0.0716372 (* 1 = 0.0716372 loss)
I0428 20:32:12.786072  4060 solver.cpp:316] Optimization Done.
I0428 20:32:12.786074  4060 caffe.cpp:259] Optimization Done.
