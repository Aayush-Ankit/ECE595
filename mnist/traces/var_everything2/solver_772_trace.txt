I0428 19:56:52.871273 28541 caffe.cpp:218] Using GPUs 0
I0428 19:56:52.907692 28541 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:53.360170 28541 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test772.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:53.360302 28541 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test772.prototxt
I0428 19:56:53.360637 28541 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:53.360668 28541 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:53.360749 28541 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:53.360834 28541 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:53.360930 28541 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:53.360950 28541 net.cpp:86] Creating Layer mnist
I0428 19:56:53.360956 28541 net.cpp:382] mnist -> data
I0428 19:56:53.360976 28541 net.cpp:382] mnist -> label
I0428 19:56:53.361953 28541 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:53.364222 28541 net.cpp:124] Setting up mnist
I0428 19:56:53.364251 28541 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:53.364256 28541 net.cpp:131] Top shape: 64 (64)
I0428 19:56:53.364259 28541 net.cpp:139] Memory required for data: 200960
I0428 19:56:53.364265 28541 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:53.364279 28541 net.cpp:86] Creating Layer conv0
I0428 19:56:53.364296 28541 net.cpp:408] conv0 <- data
I0428 19:56:53.364322 28541 net.cpp:382] conv0 -> conv0
I0428 19:56:53.590700 28541 net.cpp:124] Setting up conv0
I0428 19:56:53.590726 28541 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:53.590730 28541 net.cpp:139] Memory required for data: 1675520
I0428 19:56:53.590744 28541 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:53.590756 28541 net.cpp:86] Creating Layer pool0
I0428 19:56:53.590759 28541 net.cpp:408] pool0 <- conv0
I0428 19:56:53.590764 28541 net.cpp:382] pool0 -> pool0
I0428 19:56:53.590822 28541 net.cpp:124] Setting up pool0
I0428 19:56:53.590843 28541 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:53.590845 28541 net.cpp:139] Memory required for data: 2044160
I0428 19:56:53.590848 28541 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:53.590859 28541 net.cpp:86] Creating Layer conv1
I0428 19:56:53.590862 28541 net.cpp:408] conv1 <- pool0
I0428 19:56:53.590867 28541 net.cpp:382] conv1 -> conv1
I0428 19:56:53.592715 28541 net.cpp:124] Setting up conv1
I0428 19:56:53.592746 28541 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:53.592749 28541 net.cpp:139] Memory required for data: 2076928
I0428 19:56:53.592758 28541 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:53.592782 28541 net.cpp:86] Creating Layer pool1
I0428 19:56:53.592784 28541 net.cpp:408] pool1 <- conv1
I0428 19:56:53.592789 28541 net.cpp:382] pool1 -> pool1
I0428 19:56:53.592844 28541 net.cpp:124] Setting up pool1
I0428 19:56:53.592851 28541 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:53.592855 28541 net.cpp:139] Memory required for data: 2085120
I0428 19:56:53.592859 28541 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:53.592865 28541 net.cpp:86] Creating Layer ip1
I0428 19:56:53.592869 28541 net.cpp:408] ip1 <- pool1
I0428 19:56:53.592875 28541 net.cpp:382] ip1 -> ip1
I0428 19:56:53.593945 28541 net.cpp:124] Setting up ip1
I0428 19:56:53.593956 28541 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:53.593976 28541 net.cpp:139] Memory required for data: 2097920
I0428 19:56:53.593983 28541 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:53.593991 28541 net.cpp:86] Creating Layer relu1
I0428 19:56:53.593993 28541 net.cpp:408] relu1 <- ip1
I0428 19:56:53.593997 28541 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:53.594163 28541 net.cpp:124] Setting up relu1
I0428 19:56:53.594172 28541 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:53.594175 28541 net.cpp:139] Memory required for data: 2110720
I0428 19:56:53.594178 28541 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:53.594185 28541 net.cpp:86] Creating Layer ip2
I0428 19:56:53.594188 28541 net.cpp:408] ip2 <- ip1
I0428 19:56:53.594193 28541 net.cpp:382] ip2 -> ip2
I0428 19:56:53.594316 28541 net.cpp:124] Setting up ip2
I0428 19:56:53.594322 28541 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:53.594326 28541 net.cpp:139] Memory required for data: 2113280
I0428 19:56:53.594331 28541 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:53.594336 28541 net.cpp:86] Creating Layer relu2
I0428 19:56:53.594338 28541 net.cpp:408] relu2 <- ip2
I0428 19:56:53.594342 28541 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:53.595119 28541 net.cpp:124] Setting up relu2
I0428 19:56:53.595131 28541 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:53.595150 28541 net.cpp:139] Memory required for data: 2115840
I0428 19:56:53.595154 28541 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:53.595160 28541 net.cpp:86] Creating Layer ip3
I0428 19:56:53.595165 28541 net.cpp:408] ip3 <- ip2
I0428 19:56:53.595170 28541 net.cpp:382] ip3 -> ip3
I0428 19:56:53.595260 28541 net.cpp:124] Setting up ip3
I0428 19:56:53.595268 28541 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:53.595270 28541 net.cpp:139] Memory required for data: 2118400
I0428 19:56:53.595278 28541 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:53.595283 28541 net.cpp:86] Creating Layer relu3
I0428 19:56:53.595285 28541 net.cpp:408] relu3 <- ip3
I0428 19:56:53.595289 28541 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:53.595458 28541 net.cpp:124] Setting up relu3
I0428 19:56:53.595468 28541 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:53.595470 28541 net.cpp:139] Memory required for data: 2120960
I0428 19:56:53.595474 28541 layer_factory.hpp:77] Creating layer loss
I0428 19:56:53.595479 28541 net.cpp:86] Creating Layer loss
I0428 19:56:53.595481 28541 net.cpp:408] loss <- ip3
I0428 19:56:53.595485 28541 net.cpp:408] loss <- label
I0428 19:56:53.595490 28541 net.cpp:382] loss -> loss
I0428 19:56:53.595504 28541 layer_factory.hpp:77] Creating layer loss
I0428 19:56:53.595731 28541 net.cpp:124] Setting up loss
I0428 19:56:53.595741 28541 net.cpp:131] Top shape: (1)
I0428 19:56:53.595743 28541 net.cpp:134]     with loss weight 1
I0428 19:56:53.595757 28541 net.cpp:139] Memory required for data: 2120964
I0428 19:56:53.595762 28541 net.cpp:200] loss needs backward computation.
I0428 19:56:53.595764 28541 net.cpp:200] relu3 needs backward computation.
I0428 19:56:53.595767 28541 net.cpp:200] ip3 needs backward computation.
I0428 19:56:53.595770 28541 net.cpp:200] relu2 needs backward computation.
I0428 19:56:53.595772 28541 net.cpp:200] ip2 needs backward computation.
I0428 19:56:53.595775 28541 net.cpp:200] relu1 needs backward computation.
I0428 19:56:53.595777 28541 net.cpp:200] ip1 needs backward computation.
I0428 19:56:53.595780 28541 net.cpp:200] pool1 needs backward computation.
I0428 19:56:53.595783 28541 net.cpp:200] conv1 needs backward computation.
I0428 19:56:53.595785 28541 net.cpp:200] pool0 needs backward computation.
I0428 19:56:53.595788 28541 net.cpp:200] conv0 needs backward computation.
I0428 19:56:53.595791 28541 net.cpp:202] mnist does not need backward computation.
I0428 19:56:53.595794 28541 net.cpp:244] This network produces output loss
I0428 19:56:53.595803 28541 net.cpp:257] Network initialization done.
I0428 19:56:53.596153 28541 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test772.prototxt
I0428 19:56:53.596207 28541 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:53.596309 28541 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:53.596386 28541 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:53.596429 28541 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:53.596441 28541 net.cpp:86] Creating Layer mnist
I0428 19:56:53.596447 28541 net.cpp:382] mnist -> data
I0428 19:56:53.596454 28541 net.cpp:382] mnist -> label
I0428 19:56:53.596532 28541 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:53.598604 28541 net.cpp:124] Setting up mnist
I0428 19:56:53.598633 28541 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:53.598636 28541 net.cpp:131] Top shape: 100 (100)
I0428 19:56:53.598639 28541 net.cpp:139] Memory required for data: 314000
I0428 19:56:53.598644 28541 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:53.598649 28541 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:53.598652 28541 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:53.598672 28541 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:53.598678 28541 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:53.598716 28541 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:53.598721 28541 net.cpp:131] Top shape: 100 (100)
I0428 19:56:53.598724 28541 net.cpp:131] Top shape: 100 (100)
I0428 19:56:53.598727 28541 net.cpp:139] Memory required for data: 314800
I0428 19:56:53.598729 28541 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:53.598738 28541 net.cpp:86] Creating Layer conv0
I0428 19:56:53.598742 28541 net.cpp:408] conv0 <- data
I0428 19:56:53.598745 28541 net.cpp:382] conv0 -> conv0
I0428 19:56:53.600378 28541 net.cpp:124] Setting up conv0
I0428 19:56:53.600390 28541 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:53.600394 28541 net.cpp:139] Memory required for data: 2618800
I0428 19:56:53.600402 28541 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:53.600419 28541 net.cpp:86] Creating Layer pool0
I0428 19:56:53.600422 28541 net.cpp:408] pool0 <- conv0
I0428 19:56:53.600428 28541 net.cpp:382] pool0 -> pool0
I0428 19:56:53.600464 28541 net.cpp:124] Setting up pool0
I0428 19:56:53.600469 28541 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:53.600472 28541 net.cpp:139] Memory required for data: 3194800
I0428 19:56:53.600486 28541 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:53.600497 28541 net.cpp:86] Creating Layer conv1
I0428 19:56:53.600499 28541 net.cpp:408] conv1 <- pool0
I0428 19:56:53.600503 28541 net.cpp:382] conv1 -> conv1
I0428 19:56:53.602701 28541 net.cpp:124] Setting up conv1
I0428 19:56:53.602716 28541 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:53.602722 28541 net.cpp:139] Memory required for data: 3246000
I0428 19:56:53.602731 28541 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:53.602741 28541 net.cpp:86] Creating Layer pool1
I0428 19:56:53.602743 28541 net.cpp:408] pool1 <- conv1
I0428 19:56:53.602749 28541 net.cpp:382] pool1 -> pool1
I0428 19:56:53.602795 28541 net.cpp:124] Setting up pool1
I0428 19:56:53.602802 28541 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:53.602805 28541 net.cpp:139] Memory required for data: 3258800
I0428 19:56:53.602808 28541 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:53.602823 28541 net.cpp:86] Creating Layer ip1
I0428 19:56:53.602828 28541 net.cpp:408] ip1 <- pool1
I0428 19:56:53.602849 28541 net.cpp:382] ip1 -> ip1
I0428 19:56:53.602993 28541 net.cpp:124] Setting up ip1
I0428 19:56:53.603000 28541 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:53.603013 28541 net.cpp:139] Memory required for data: 3278800
I0428 19:56:53.603021 28541 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:53.603025 28541 net.cpp:86] Creating Layer relu1
I0428 19:56:53.603029 28541 net.cpp:408] relu1 <- ip1
I0428 19:56:53.603034 28541 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:53.603288 28541 net.cpp:124] Setting up relu1
I0428 19:56:53.603297 28541 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:53.603302 28541 net.cpp:139] Memory required for data: 3298800
I0428 19:56:53.603304 28541 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:53.603312 28541 net.cpp:86] Creating Layer ip2
I0428 19:56:53.603315 28541 net.cpp:408] ip2 <- ip1
I0428 19:56:53.603322 28541 net.cpp:382] ip2 -> ip2
I0428 19:56:53.603426 28541 net.cpp:124] Setting up ip2
I0428 19:56:53.603435 28541 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:53.603437 28541 net.cpp:139] Memory required for data: 3302800
I0428 19:56:53.603442 28541 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:53.603448 28541 net.cpp:86] Creating Layer relu2
I0428 19:56:53.603451 28541 net.cpp:408] relu2 <- ip2
I0428 19:56:53.603456 28541 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:53.603621 28541 net.cpp:124] Setting up relu2
I0428 19:56:53.603631 28541 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:53.603633 28541 net.cpp:139] Memory required for data: 3306800
I0428 19:56:53.603637 28541 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:53.603651 28541 net.cpp:86] Creating Layer ip3
I0428 19:56:53.603653 28541 net.cpp:408] ip3 <- ip2
I0428 19:56:53.603659 28541 net.cpp:382] ip3 -> ip3
I0428 19:56:53.603760 28541 net.cpp:124] Setting up ip3
I0428 19:56:53.603766 28541 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:53.603770 28541 net.cpp:139] Memory required for data: 3310800
I0428 19:56:53.603777 28541 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:53.603785 28541 net.cpp:86] Creating Layer relu3
I0428 19:56:53.603788 28541 net.cpp:408] relu3 <- ip3
I0428 19:56:53.603792 28541 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:53.604589 28541 net.cpp:124] Setting up relu3
I0428 19:56:53.604601 28541 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:53.604604 28541 net.cpp:139] Memory required for data: 3314800
I0428 19:56:53.604609 28541 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:53.604614 28541 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:53.604617 28541 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:53.604622 28541 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:53.604629 28541 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:53.604697 28541 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:53.604704 28541 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:53.604708 28541 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:53.604712 28541 net.cpp:139] Memory required for data: 3322800
I0428 19:56:53.604714 28541 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:53.604727 28541 net.cpp:86] Creating Layer accuracy
I0428 19:56:53.604730 28541 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:53.604734 28541 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:53.604738 28541 net.cpp:382] accuracy -> accuracy
I0428 19:56:53.604746 28541 net.cpp:124] Setting up accuracy
I0428 19:56:53.604750 28541 net.cpp:131] Top shape: (1)
I0428 19:56:53.604753 28541 net.cpp:139] Memory required for data: 3322804
I0428 19:56:53.604756 28541 layer_factory.hpp:77] Creating layer loss
I0428 19:56:53.604768 28541 net.cpp:86] Creating Layer loss
I0428 19:56:53.604771 28541 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:53.604775 28541 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:53.604779 28541 net.cpp:382] loss -> loss
I0428 19:56:53.604785 28541 layer_factory.hpp:77] Creating layer loss
I0428 19:56:53.605079 28541 net.cpp:124] Setting up loss
I0428 19:56:53.605090 28541 net.cpp:131] Top shape: (1)
I0428 19:56:53.605101 28541 net.cpp:134]     with loss weight 1
I0428 19:56:53.605108 28541 net.cpp:139] Memory required for data: 3322808
I0428 19:56:53.605137 28541 net.cpp:200] loss needs backward computation.
I0428 19:56:53.605141 28541 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:53.605145 28541 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:53.605149 28541 net.cpp:200] relu3 needs backward computation.
I0428 19:56:53.605151 28541 net.cpp:200] ip3 needs backward computation.
I0428 19:56:53.605155 28541 net.cpp:200] relu2 needs backward computation.
I0428 19:56:53.605172 28541 net.cpp:200] ip2 needs backward computation.
I0428 19:56:53.605176 28541 net.cpp:200] relu1 needs backward computation.
I0428 19:56:53.605198 28541 net.cpp:200] ip1 needs backward computation.
I0428 19:56:53.605201 28541 net.cpp:200] pool1 needs backward computation.
I0428 19:56:53.605204 28541 net.cpp:200] conv1 needs backward computation.
I0428 19:56:53.605207 28541 net.cpp:200] pool0 needs backward computation.
I0428 19:56:53.605211 28541 net.cpp:200] conv0 needs backward computation.
I0428 19:56:53.605214 28541 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:53.605218 28541 net.cpp:202] mnist does not need backward computation.
I0428 19:56:53.605221 28541 net.cpp:244] This network produces output accuracy
I0428 19:56:53.605224 28541 net.cpp:244] This network produces output loss
I0428 19:56:53.605235 28541 net.cpp:257] Network initialization done.
I0428 19:56:53.605276 28541 solver.cpp:56] Solver scaffolding done.
I0428 19:56:53.605617 28541 caffe.cpp:248] Starting Optimization
I0428 19:56:53.605623 28541 solver.cpp:273] Solving LeNet
I0428 19:56:53.605625 28541 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:53.606467 28541 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:53.610168 28541 blocking_queue.cpp:49] Waiting for data
I0428 19:56:53.678133 28549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:53.678640 28541 solver.cpp:398]     Test net output #0: accuracy = 0.0701
I0428 19:56:53.678658 28541 solver.cpp:398]     Test net output #1: loss = 2.40262 (* 1 = 2.40262 loss)
I0428 19:56:53.681121 28541 solver.cpp:219] Iteration 0 (0 iter/s, 0.0754708s/100 iters), loss = 2.36804
I0428 19:56:53.681145 28541 solver.cpp:238]     Train net output #0: loss = 2.36804 (* 1 = 2.36804 loss)
I0428 19:56:53.681174 28541 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:53.754918 28541 solver.cpp:219] Iteration 100 (1355.72 iter/s, 0.0737618s/100 iters), loss = 0.819921
I0428 19:56:53.754943 28541 solver.cpp:238]     Train net output #0: loss = 0.819921 (* 1 = 0.819921 loss)
I0428 19:56:53.754950 28541 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:53.827929 28541 solver.cpp:219] Iteration 200 (1370.27 iter/s, 0.0729784s/100 iters), loss = 0.598521
I0428 19:56:53.827967 28541 solver.cpp:238]     Train net output #0: loss = 0.598521 (* 1 = 0.598521 loss)
I0428 19:56:53.827973 28541 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:53.901957 28541 solver.cpp:219] Iteration 300 (1351.7 iter/s, 0.0739809s/100 iters), loss = 0.361885
I0428 19:56:53.901999 28541 solver.cpp:238]     Train net output #0: loss = 0.361885 (* 1 = 0.361885 loss)
I0428 19:56:53.902011 28541 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:53.976092 28541 solver.cpp:219] Iteration 400 (1349.53 iter/s, 0.0740997s/100 iters), loss = 0.203512
I0428 19:56:53.976133 28541 solver.cpp:238]     Train net output #0: loss = 0.203512 (* 1 = 0.203512 loss)
I0428 19:56:53.976138 28541 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:54.053509 28541 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:54.127599 28549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:54.128152 28541 solver.cpp:398]     Test net output #0: accuracy = 0.9129
I0428 19:56:54.128190 28541 solver.cpp:398]     Test net output #1: loss = 0.281546 (* 1 = 0.281546 loss)
I0428 19:56:54.129031 28541 solver.cpp:219] Iteration 500 (654.02 iter/s, 0.152901s/100 iters), loss = 0.37381
I0428 19:56:54.129058 28541 solver.cpp:238]     Train net output #0: loss = 0.37381 (* 1 = 0.37381 loss)
I0428 19:56:54.129081 28541 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:54.207504 28541 solver.cpp:219] Iteration 600 (1274.89 iter/s, 0.0784384s/100 iters), loss = 0.144493
I0428 19:56:54.207528 28541 solver.cpp:238]     Train net output #0: loss = 0.144493 (* 1 = 0.144493 loss)
I0428 19:56:54.207535 28541 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:54.282377 28541 solver.cpp:219] Iteration 700 (1336.2 iter/s, 0.074839s/100 iters), loss = 0.350286
I0428 19:56:54.282415 28541 solver.cpp:238]     Train net output #0: loss = 0.350286 (* 1 = 0.350286 loss)
I0428 19:56:54.282421 28541 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:54.355583 28541 solver.cpp:219] Iteration 800 (1366.59 iter/s, 0.073175s/100 iters), loss = 0.366643
I0428 19:56:54.355623 28541 solver.cpp:238]     Train net output #0: loss = 0.366643 (* 1 = 0.366643 loss)
I0428 19:56:54.355629 28541 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:54.428949 28541 solver.cpp:219] Iteration 900 (1363.69 iter/s, 0.0733307s/100 iters), loss = 0.347659
I0428 19:56:54.428993 28541 solver.cpp:238]     Train net output #0: loss = 0.347659 (* 1 = 0.347659 loss)
I0428 19:56:54.428999 28541 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:54.453631 28548 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:54.501103 28541 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:54.501812 28541 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:54.502277 28541 solver.cpp:311] Iteration 1000, loss = 0.245342
I0428 19:56:54.502292 28541 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:54.578655 28549 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:54.579217 28541 solver.cpp:398]     Test net output #0: accuracy = 0.9445
I0428 19:56:54.579252 28541 solver.cpp:398]     Test net output #1: loss = 0.18529 (* 1 = 0.18529 loss)
I0428 19:56:54.579257 28541 solver.cpp:316] Optimization Done.
I0428 19:56:54.579260 28541 caffe.cpp:259] Optimization Done.
