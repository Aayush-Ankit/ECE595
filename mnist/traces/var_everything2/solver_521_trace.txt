I0428 19:47:38.283946 26246 caffe.cpp:218] Using GPUs 0
I0428 19:47:38.323282 26246 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:38.862529 26246 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test521.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:38.862673 26246 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test521.prototxt
I0428 19:47:38.863087 26246 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:38.863107 26246 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:38.863210 26246 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:38.863289 26246 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:38.863404 26246 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:38.863428 26246 net.cpp:86] Creating Layer mnist
I0428 19:47:38.863437 26246 net.cpp:382] mnist -> data
I0428 19:47:38.863459 26246 net.cpp:382] mnist -> label
I0428 19:47:38.864552 26246 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:38.866998 26246 net.cpp:124] Setting up mnist
I0428 19:47:38.867015 26246 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:38.867022 26246 net.cpp:131] Top shape: 64 (64)
I0428 19:47:38.867025 26246 net.cpp:139] Memory required for data: 200960
I0428 19:47:38.867033 26246 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:38.867048 26246 net.cpp:86] Creating Layer conv0
I0428 19:47:38.867069 26246 net.cpp:408] conv0 <- data
I0428 19:47:38.867081 26246 net.cpp:382] conv0 -> conv0
I0428 19:47:39.159809 26246 net.cpp:124] Setting up conv0
I0428 19:47:39.159842 26246 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:39.159847 26246 net.cpp:139] Memory required for data: 938240
I0428 19:47:39.159867 26246 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:39.159880 26246 net.cpp:86] Creating Layer pool0
I0428 19:47:39.159885 26246 net.cpp:408] pool0 <- conv0
I0428 19:47:39.159893 26246 net.cpp:382] pool0 -> pool0
I0428 19:47:39.159948 26246 net.cpp:124] Setting up pool0
I0428 19:47:39.159958 26246 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:39.159962 26246 net.cpp:139] Memory required for data: 1122560
I0428 19:47:39.159966 26246 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:39.159979 26246 net.cpp:86] Creating Layer conv1
I0428 19:47:39.159983 26246 net.cpp:408] conv1 <- pool0
I0428 19:47:39.159989 26246 net.cpp:382] conv1 -> conv1
I0428 19:47:39.162130 26246 net.cpp:124] Setting up conv1
I0428 19:47:39.162148 26246 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:39.162153 26246 net.cpp:139] Memory required for data: 1155328
I0428 19:47:39.162163 26246 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:39.162173 26246 net.cpp:86] Creating Layer pool1
I0428 19:47:39.162178 26246 net.cpp:408] pool1 <- conv1
I0428 19:47:39.162184 26246 net.cpp:382] pool1 -> pool1
I0428 19:47:39.162227 26246 net.cpp:124] Setting up pool1
I0428 19:47:39.162237 26246 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:39.162240 26246 net.cpp:139] Memory required for data: 1163520
I0428 19:47:39.162245 26246 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:39.162252 26246 net.cpp:86] Creating Layer ip1
I0428 19:47:39.162256 26246 net.cpp:408] ip1 <- pool1
I0428 19:47:39.162261 26246 net.cpp:382] ip1 -> ip1
I0428 19:47:39.162379 26246 net.cpp:124] Setting up ip1
I0428 19:47:39.162387 26246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:39.162391 26246 net.cpp:139] Memory required for data: 1166080
I0428 19:47:39.162400 26246 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:39.162407 26246 net.cpp:86] Creating Layer relu1
I0428 19:47:39.162411 26246 net.cpp:408] relu1 <- ip1
I0428 19:47:39.162416 26246 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:39.162618 26246 net.cpp:124] Setting up relu1
I0428 19:47:39.162629 26246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:39.162633 26246 net.cpp:139] Memory required for data: 1168640
I0428 19:47:39.162637 26246 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:39.162644 26246 net.cpp:86] Creating Layer ip2
I0428 19:47:39.162648 26246 net.cpp:408] ip2 <- ip1
I0428 19:47:39.162654 26246 net.cpp:382] ip2 -> ip2
I0428 19:47:39.162765 26246 net.cpp:124] Setting up ip2
I0428 19:47:39.162773 26246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:39.162777 26246 net.cpp:139] Memory required for data: 1171200
I0428 19:47:39.162783 26246 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:39.162791 26246 net.cpp:86] Creating Layer relu2
I0428 19:47:39.162796 26246 net.cpp:408] relu2 <- ip2
I0428 19:47:39.162801 26246 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:39.163638 26246 net.cpp:124] Setting up relu2
I0428 19:47:39.163653 26246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:39.163657 26246 net.cpp:139] Memory required for data: 1173760
I0428 19:47:39.163663 26246 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:39.163671 26246 net.cpp:86] Creating Layer ip3
I0428 19:47:39.163676 26246 net.cpp:408] ip3 <- ip2
I0428 19:47:39.163682 26246 net.cpp:382] ip3 -> ip3
I0428 19:47:39.163797 26246 net.cpp:124] Setting up ip3
I0428 19:47:39.163807 26246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:39.163811 26246 net.cpp:139] Memory required for data: 1176320
I0428 19:47:39.163820 26246 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:39.163826 26246 net.cpp:86] Creating Layer relu3
I0428 19:47:39.163830 26246 net.cpp:408] relu3 <- ip3
I0428 19:47:39.163836 26246 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:39.164033 26246 net.cpp:124] Setting up relu3
I0428 19:47:39.164043 26246 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:39.164047 26246 net.cpp:139] Memory required for data: 1178880
I0428 19:47:39.164052 26246 layer_factory.hpp:77] Creating layer loss
I0428 19:47:39.164059 26246 net.cpp:86] Creating Layer loss
I0428 19:47:39.164062 26246 net.cpp:408] loss <- ip3
I0428 19:47:39.164067 26246 net.cpp:408] loss <- label
I0428 19:47:39.164074 26246 net.cpp:382] loss -> loss
I0428 19:47:39.164090 26246 layer_factory.hpp:77] Creating layer loss
I0428 19:47:39.164355 26246 net.cpp:124] Setting up loss
I0428 19:47:39.164366 26246 net.cpp:131] Top shape: (1)
I0428 19:47:39.164369 26246 net.cpp:134]     with loss weight 1
I0428 19:47:39.164388 26246 net.cpp:139] Memory required for data: 1178884
I0428 19:47:39.164392 26246 net.cpp:200] loss needs backward computation.
I0428 19:47:39.164397 26246 net.cpp:200] relu3 needs backward computation.
I0428 19:47:39.164400 26246 net.cpp:200] ip3 needs backward computation.
I0428 19:47:39.164404 26246 net.cpp:200] relu2 needs backward computation.
I0428 19:47:39.164407 26246 net.cpp:200] ip2 needs backward computation.
I0428 19:47:39.164412 26246 net.cpp:200] relu1 needs backward computation.
I0428 19:47:39.164414 26246 net.cpp:200] ip1 needs backward computation.
I0428 19:47:39.164418 26246 net.cpp:200] pool1 needs backward computation.
I0428 19:47:39.164422 26246 net.cpp:200] conv1 needs backward computation.
I0428 19:47:39.164427 26246 net.cpp:200] pool0 needs backward computation.
I0428 19:47:39.164430 26246 net.cpp:200] conv0 needs backward computation.
I0428 19:47:39.164434 26246 net.cpp:202] mnist does not need backward computation.
I0428 19:47:39.164438 26246 net.cpp:244] This network produces output loss
I0428 19:47:39.164448 26246 net.cpp:257] Network initialization done.
I0428 19:47:39.164839 26246 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test521.prototxt
I0428 19:47:39.164872 26246 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:39.164981 26246 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:39.165076 26246 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:39.165129 26246 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:39.165143 26246 net.cpp:86] Creating Layer mnist
I0428 19:47:39.165148 26246 net.cpp:382] mnist -> data
I0428 19:47:39.165158 26246 net.cpp:382] mnist -> label
I0428 19:47:39.165261 26246 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:39.167676 26246 net.cpp:124] Setting up mnist
I0428 19:47:39.167692 26246 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:39.167699 26246 net.cpp:131] Top shape: 100 (100)
I0428 19:47:39.167703 26246 net.cpp:139] Memory required for data: 314000
I0428 19:47:39.167707 26246 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:39.167716 26246 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:39.167719 26246 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:39.167726 26246 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:39.167733 26246 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:39.167809 26246 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:39.167819 26246 net.cpp:131] Top shape: 100 (100)
I0428 19:47:39.167824 26246 net.cpp:131] Top shape: 100 (100)
I0428 19:47:39.167827 26246 net.cpp:139] Memory required for data: 314800
I0428 19:47:39.167831 26246 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:39.167841 26246 net.cpp:86] Creating Layer conv0
I0428 19:47:39.167845 26246 net.cpp:408] conv0 <- data
I0428 19:47:39.167851 26246 net.cpp:382] conv0 -> conv0
I0428 19:47:39.169541 26246 net.cpp:124] Setting up conv0
I0428 19:47:39.169559 26246 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:39.169565 26246 net.cpp:139] Memory required for data: 1466800
I0428 19:47:39.169577 26246 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:39.169585 26246 net.cpp:86] Creating Layer pool0
I0428 19:47:39.169589 26246 net.cpp:408] pool0 <- conv0
I0428 19:47:39.169595 26246 net.cpp:382] pool0 -> pool0
I0428 19:47:39.169639 26246 net.cpp:124] Setting up pool0
I0428 19:47:39.169647 26246 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:39.169651 26246 net.cpp:139] Memory required for data: 1754800
I0428 19:47:39.169656 26246 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:39.169667 26246 net.cpp:86] Creating Layer conv1
I0428 19:47:39.169670 26246 net.cpp:408] conv1 <- pool0
I0428 19:47:39.169677 26246 net.cpp:382] conv1 -> conv1
I0428 19:47:39.171921 26246 net.cpp:124] Setting up conv1
I0428 19:47:39.171936 26246 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:39.171941 26246 net.cpp:139] Memory required for data: 1806000
I0428 19:47:39.171952 26246 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:39.171960 26246 net.cpp:86] Creating Layer pool1
I0428 19:47:39.171964 26246 net.cpp:408] pool1 <- conv1
I0428 19:47:39.171970 26246 net.cpp:382] pool1 -> pool1
I0428 19:47:39.172021 26246 net.cpp:124] Setting up pool1
I0428 19:47:39.172029 26246 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:39.172034 26246 net.cpp:139] Memory required for data: 1818800
I0428 19:47:39.172037 26246 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:39.172045 26246 net.cpp:86] Creating Layer ip1
I0428 19:47:39.172049 26246 net.cpp:408] ip1 <- pool1
I0428 19:47:39.172055 26246 net.cpp:382] ip1 -> ip1
I0428 19:47:39.172204 26246 net.cpp:124] Setting up ip1
I0428 19:47:39.172214 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.172233 26246 net.cpp:139] Memory required for data: 1822800
I0428 19:47:39.172243 26246 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:39.172250 26246 net.cpp:86] Creating Layer relu1
I0428 19:47:39.172253 26246 net.cpp:408] relu1 <- ip1
I0428 19:47:39.172260 26246 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:39.172451 26246 net.cpp:124] Setting up relu1
I0428 19:47:39.172461 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.172464 26246 net.cpp:139] Memory required for data: 1826800
I0428 19:47:39.172469 26246 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:39.172477 26246 net.cpp:86] Creating Layer ip2
I0428 19:47:39.172482 26246 net.cpp:408] ip2 <- ip1
I0428 19:47:39.172487 26246 net.cpp:382] ip2 -> ip2
I0428 19:47:39.172600 26246 net.cpp:124] Setting up ip2
I0428 19:47:39.172608 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.172612 26246 net.cpp:139] Memory required for data: 1830800
I0428 19:47:39.172618 26246 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:39.172624 26246 net.cpp:86] Creating Layer relu2
I0428 19:47:39.172627 26246 net.cpp:408] relu2 <- ip2
I0428 19:47:39.172632 26246 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:39.172804 26246 net.cpp:124] Setting up relu2
I0428 19:47:39.172821 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.172825 26246 net.cpp:139] Memory required for data: 1834800
I0428 19:47:39.172829 26246 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:39.172837 26246 net.cpp:86] Creating Layer ip3
I0428 19:47:39.172839 26246 net.cpp:408] ip3 <- ip2
I0428 19:47:39.172845 26246 net.cpp:382] ip3 -> ip3
I0428 19:47:39.172965 26246 net.cpp:124] Setting up ip3
I0428 19:47:39.172972 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.172976 26246 net.cpp:139] Memory required for data: 1838800
I0428 19:47:39.172986 26246 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:39.172991 26246 net.cpp:86] Creating Layer relu3
I0428 19:47:39.172994 26246 net.cpp:408] relu3 <- ip3
I0428 19:47:39.172999 26246 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:39.173943 26246 net.cpp:124] Setting up relu3
I0428 19:47:39.173957 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.173962 26246 net.cpp:139] Memory required for data: 1842800
I0428 19:47:39.173967 26246 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:39.173974 26246 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:39.173977 26246 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:39.173984 26246 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:39.173991 26246 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:39.174036 26246 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:39.174043 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.174048 26246 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:39.174052 26246 net.cpp:139] Memory required for data: 1850800
I0428 19:47:39.174057 26246 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:39.174062 26246 net.cpp:86] Creating Layer accuracy
I0428 19:47:39.174065 26246 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:39.174070 26246 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:39.174077 26246 net.cpp:382] accuracy -> accuracy
I0428 19:47:39.174084 26246 net.cpp:124] Setting up accuracy
I0428 19:47:39.174088 26246 net.cpp:131] Top shape: (1)
I0428 19:47:39.174093 26246 net.cpp:139] Memory required for data: 1850804
I0428 19:47:39.174096 26246 layer_factory.hpp:77] Creating layer loss
I0428 19:47:39.174103 26246 net.cpp:86] Creating Layer loss
I0428 19:47:39.174105 26246 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:39.174110 26246 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:39.174115 26246 net.cpp:382] loss -> loss
I0428 19:47:39.174121 26246 layer_factory.hpp:77] Creating layer loss
I0428 19:47:39.174387 26246 net.cpp:124] Setting up loss
I0428 19:47:39.174397 26246 net.cpp:131] Top shape: (1)
I0428 19:47:39.174402 26246 net.cpp:134]     with loss weight 1
I0428 19:47:39.174410 26246 net.cpp:139] Memory required for data: 1850808
I0428 19:47:39.174427 26246 net.cpp:200] loss needs backward computation.
I0428 19:47:39.174432 26246 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:39.174437 26246 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:39.174440 26246 net.cpp:200] relu3 needs backward computation.
I0428 19:47:39.174443 26246 net.cpp:200] ip3 needs backward computation.
I0428 19:47:39.174448 26246 net.cpp:200] relu2 needs backward computation.
I0428 19:47:39.174451 26246 net.cpp:200] ip2 needs backward computation.
I0428 19:47:39.174455 26246 net.cpp:200] relu1 needs backward computation.
I0428 19:47:39.174458 26246 net.cpp:200] ip1 needs backward computation.
I0428 19:47:39.174463 26246 net.cpp:200] pool1 needs backward computation.
I0428 19:47:39.174466 26246 net.cpp:200] conv1 needs backward computation.
I0428 19:47:39.174470 26246 net.cpp:200] pool0 needs backward computation.
I0428 19:47:39.174474 26246 net.cpp:200] conv0 needs backward computation.
I0428 19:47:39.174479 26246 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:39.174484 26246 net.cpp:202] mnist does not need backward computation.
I0428 19:47:39.174487 26246 net.cpp:244] This network produces output accuracy
I0428 19:47:39.174492 26246 net.cpp:244] This network produces output loss
I0428 19:47:39.174505 26246 net.cpp:257] Network initialization done.
I0428 19:47:39.174554 26246 solver.cpp:56] Solver scaffolding done.
I0428 19:47:39.174978 26246 caffe.cpp:248] Starting Optimization
I0428 19:47:39.174985 26246 solver.cpp:273] Solving LeNet
I0428 19:47:39.174989 26246 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:39.175840 26246 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:39.179656 26246 blocking_queue.cpp:49] Waiting for data
I0428 19:47:39.249884 26253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:39.250422 26246 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 19:47:39.250450 26246 solver.cpp:398]     Test net output #1: loss = 2.31645 (* 1 = 2.31645 loss)
I0428 19:47:39.252512 26246 solver.cpp:219] Iteration 0 (-1.06639e-42 iter/s, 0.0774922s/100 iters), loss = 2.32833
I0428 19:47:39.252544 26246 solver.cpp:238]     Train net output #0: loss = 2.32833 (* 1 = 2.32833 loss)
I0428 19:47:39.252562 26246 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:39.326930 26246 solver.cpp:219] Iteration 100 (1344.52 iter/s, 0.0743762s/100 iters), loss = 1.72999
I0428 19:47:39.326963 26246 solver.cpp:238]     Train net output #0: loss = 1.72999 (* 1 = 1.72999 loss)
I0428 19:47:39.326970 26246 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:39.400588 26246 solver.cpp:219] Iteration 200 (1358.41 iter/s, 0.0736154s/100 iters), loss = 0.965576
I0428 19:47:39.400621 26246 solver.cpp:238]     Train net output #0: loss = 0.965576 (* 1 = 0.965576 loss)
I0428 19:47:39.400629 26246 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:39.473909 26246 solver.cpp:219] Iteration 300 (1364.62 iter/s, 0.0732805s/100 iters), loss = 0.771868
I0428 19:47:39.473937 26246 solver.cpp:238]     Train net output #0: loss = 0.771868 (* 1 = 0.771868 loss)
I0428 19:47:39.473944 26246 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:39.542980 26246 solver.cpp:219] Iteration 400 (1448.5 iter/s, 0.0690371s/100 iters), loss = 0.597576
I0428 19:47:39.543020 26246 solver.cpp:238]     Train net output #0: loss = 0.597576 (* 1 = 0.597576 loss)
I0428 19:47:39.543027 26246 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:39.610694 26246 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:39.669116 26253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:39.670764 26246 solver.cpp:398]     Test net output #0: accuracy = 0.885
I0428 19:47:39.670801 26246 solver.cpp:398]     Test net output #1: loss = 0.383386 (* 1 = 0.383386 loss)
I0428 19:47:39.671643 26246 solver.cpp:219] Iteration 500 (777.451 iter/s, 0.128626s/100 iters), loss = 0.375014
I0428 19:47:39.671680 26246 solver.cpp:238]     Train net output #0: loss = 0.375014 (* 1 = 0.375014 loss)
I0428 19:47:39.671713 26246 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:39.751579 26246 solver.cpp:219] Iteration 600 (1251.7 iter/s, 0.0798915s/100 iters), loss = 0.375944
I0428 19:47:39.751610 26246 solver.cpp:238]     Train net output #0: loss = 0.375944 (* 1 = 0.375944 loss)
I0428 19:47:39.751618 26246 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:39.824949 26246 solver.cpp:219] Iteration 700 (1363.74 iter/s, 0.0733278s/100 iters), loss = 0.292372
I0428 19:47:39.824980 26246 solver.cpp:238]     Train net output #0: loss = 0.292372 (* 1 = 0.292372 loss)
I0428 19:47:39.824987 26246 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:39.898176 26246 solver.cpp:219] Iteration 800 (1366.34 iter/s, 0.0731884s/100 iters), loss = 0.388213
I0428 19:47:39.898207 26246 solver.cpp:238]     Train net output #0: loss = 0.388213 (* 1 = 0.388213 loss)
I0428 19:47:39.898216 26246 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:39.971285 26246 solver.cpp:219] Iteration 900 (1368.56 iter/s, 0.0730696s/100 iters), loss = 0.348764
I0428 19:47:39.971315 26246 solver.cpp:238]     Train net output #0: loss = 0.348764 (* 1 = 0.348764 loss)
I0428 19:47:39.971323 26246 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:39.995839 26252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:40.043779 26246 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:40.044445 26246 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:40.044881 26246 solver.cpp:311] Iteration 1000, loss = 0.175794
I0428 19:47:40.044899 26246 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:40.097684 26253 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:40.098197 26246 solver.cpp:398]     Test net output #0: accuracy = 0.9315
I0428 19:47:40.098227 26246 solver.cpp:398]     Test net output #1: loss = 0.239598 (* 1 = 0.239598 loss)
I0428 19:47:40.098235 26246 solver.cpp:316] Optimization Done.
I0428 19:47:40.098239 26246 caffe.cpp:259] Optimization Done.
