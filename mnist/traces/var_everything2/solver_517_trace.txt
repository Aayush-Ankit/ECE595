I0428 19:47:30.450695 26211 caffe.cpp:218] Using GPUs 0
I0428 19:47:30.487622 26211 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:31.006003 26211 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test517.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:31.006175 26211 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test517.prototxt
I0428 19:47:31.006568 26211 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:31.006592 26211 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:31.006697 26211 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:31.006808 26211 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:31.006939 26211 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:31.006973 26211 net.cpp:86] Creating Layer mnist
I0428 19:47:31.006985 26211 net.cpp:382] mnist -> data
I0428 19:47:31.007016 26211 net.cpp:382] mnist -> label
I0428 19:47:31.008250 26211 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:31.010752 26211 net.cpp:124] Setting up mnist
I0428 19:47:31.010772 26211 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:31.010784 26211 net.cpp:131] Top shape: 64 (64)
I0428 19:47:31.010790 26211 net.cpp:139] Memory required for data: 200960
I0428 19:47:31.010802 26211 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:31.010826 26211 net.cpp:86] Creating Layer conv0
I0428 19:47:31.010838 26211 net.cpp:408] conv0 <- data
I0428 19:47:31.010859 26211 net.cpp:382] conv0 -> conv0
I0428 19:47:31.293753 26211 net.cpp:124] Setting up conv0
I0428 19:47:31.293782 26211 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:31.293788 26211 net.cpp:139] Memory required for data: 938240
I0428 19:47:31.293831 26211 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:31.293869 26211 net.cpp:86] Creating Layer pool0
I0428 19:47:31.293877 26211 net.cpp:408] pool0 <- conv0
I0428 19:47:31.293886 26211 net.cpp:382] pool0 -> pool0
I0428 19:47:31.293946 26211 net.cpp:124] Setting up pool0
I0428 19:47:31.293954 26211 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:31.293959 26211 net.cpp:139] Memory required for data: 1122560
I0428 19:47:31.293965 26211 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:31.293982 26211 net.cpp:86] Creating Layer conv1
I0428 19:47:31.293987 26211 net.cpp:408] conv1 <- pool0
I0428 19:47:31.293997 26211 net.cpp:382] conv1 -> conv1
I0428 19:47:31.295863 26211 net.cpp:124] Setting up conv1
I0428 19:47:31.295881 26211 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:31.295887 26211 net.cpp:139] Memory required for data: 1155328
I0428 19:47:31.295900 26211 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:31.295912 26211 net.cpp:86] Creating Layer pool1
I0428 19:47:31.295924 26211 net.cpp:408] pool1 <- conv1
I0428 19:47:31.295933 26211 net.cpp:382] pool1 -> pool1
I0428 19:47:31.295982 26211 net.cpp:124] Setting up pool1
I0428 19:47:31.295991 26211 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:31.295997 26211 net.cpp:139] Memory required for data: 1163520
I0428 19:47:31.296002 26211 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:31.296015 26211 net.cpp:86] Creating Layer ip1
I0428 19:47:31.296036 26211 net.cpp:408] ip1 <- pool1
I0428 19:47:31.296043 26211 net.cpp:382] ip1 -> ip1
I0428 19:47:31.297112 26211 net.cpp:124] Setting up ip1
I0428 19:47:31.297127 26211 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:31.297133 26211 net.cpp:139] Memory required for data: 1176320
I0428 19:47:31.297147 26211 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:31.297155 26211 net.cpp:86] Creating Layer relu1
I0428 19:47:31.297161 26211 net.cpp:408] relu1 <- ip1
I0428 19:47:31.297169 26211 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:31.297340 26211 net.cpp:124] Setting up relu1
I0428 19:47:31.297350 26211 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:31.297356 26211 net.cpp:139] Memory required for data: 1189120
I0428 19:47:31.297361 26211 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:31.297371 26211 net.cpp:86] Creating Layer ip2
I0428 19:47:31.297377 26211 net.cpp:408] ip2 <- ip1
I0428 19:47:31.297386 26211 net.cpp:382] ip2 -> ip2
I0428 19:47:31.297490 26211 net.cpp:124] Setting up ip2
I0428 19:47:31.297500 26211 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:31.297505 26211 net.cpp:139] Memory required for data: 1191680
I0428 19:47:31.297514 26211 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:31.297523 26211 net.cpp:86] Creating Layer relu2
I0428 19:47:31.297531 26211 net.cpp:408] relu2 <- ip2
I0428 19:47:31.297554 26211 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:31.298324 26211 net.cpp:124] Setting up relu2
I0428 19:47:31.298349 26211 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:31.298354 26211 net.cpp:139] Memory required for data: 1194240
I0428 19:47:31.298360 26211 layer_factory.hpp:77] Creating layer loss
I0428 19:47:31.298370 26211 net.cpp:86] Creating Layer loss
I0428 19:47:31.298375 26211 net.cpp:408] loss <- ip2
I0428 19:47:31.298383 26211 net.cpp:408] loss <- label
I0428 19:47:31.298393 26211 net.cpp:382] loss -> loss
I0428 19:47:31.298418 26211 layer_factory.hpp:77] Creating layer loss
I0428 19:47:31.298674 26211 net.cpp:124] Setting up loss
I0428 19:47:31.298686 26211 net.cpp:131] Top shape: (1)
I0428 19:47:31.298691 26211 net.cpp:134]     with loss weight 1
I0428 19:47:31.298710 26211 net.cpp:139] Memory required for data: 1194244
I0428 19:47:31.298717 26211 net.cpp:200] loss needs backward computation.
I0428 19:47:31.298723 26211 net.cpp:200] relu2 needs backward computation.
I0428 19:47:31.298728 26211 net.cpp:200] ip2 needs backward computation.
I0428 19:47:31.298733 26211 net.cpp:200] relu1 needs backward computation.
I0428 19:47:31.298738 26211 net.cpp:200] ip1 needs backward computation.
I0428 19:47:31.298743 26211 net.cpp:200] pool1 needs backward computation.
I0428 19:47:31.298761 26211 net.cpp:200] conv1 needs backward computation.
I0428 19:47:31.298768 26211 net.cpp:200] pool0 needs backward computation.
I0428 19:47:31.298774 26211 net.cpp:200] conv0 needs backward computation.
I0428 19:47:31.298779 26211 net.cpp:202] mnist does not need backward computation.
I0428 19:47:31.298784 26211 net.cpp:244] This network produces output loss
I0428 19:47:31.298796 26211 net.cpp:257] Network initialization done.
I0428 19:47:31.299108 26211 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test517.prototxt
I0428 19:47:31.299141 26211 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:31.299247 26211 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:31.299342 26211 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:31.299398 26211 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:31.299419 26211 net.cpp:86] Creating Layer mnist
I0428 19:47:31.299427 26211 net.cpp:382] mnist -> data
I0428 19:47:31.299438 26211 net.cpp:382] mnist -> label
I0428 19:47:31.299553 26211 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:31.301767 26211 net.cpp:124] Setting up mnist
I0428 19:47:31.301784 26211 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:31.301791 26211 net.cpp:131] Top shape: 100 (100)
I0428 19:47:31.301796 26211 net.cpp:139] Memory required for data: 314000
I0428 19:47:31.301802 26211 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:31.301817 26211 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:31.301837 26211 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:31.301846 26211 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:31.301857 26211 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:31.301944 26211 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:31.301962 26211 net.cpp:131] Top shape: 100 (100)
I0428 19:47:31.301970 26211 net.cpp:131] Top shape: 100 (100)
I0428 19:47:31.301975 26211 net.cpp:139] Memory required for data: 314800
I0428 19:47:31.301981 26211 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:31.301995 26211 net.cpp:86] Creating Layer conv0
I0428 19:47:31.302001 26211 net.cpp:408] conv0 <- data
I0428 19:47:31.302011 26211 net.cpp:382] conv0 -> conv0
I0428 19:47:31.303423 26211 net.cpp:124] Setting up conv0
I0428 19:47:31.303439 26211 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:31.303445 26211 net.cpp:139] Memory required for data: 1466800
I0428 19:47:31.303459 26211 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:31.303469 26211 net.cpp:86] Creating Layer pool0
I0428 19:47:31.303477 26211 net.cpp:408] pool0 <- conv0
I0428 19:47:31.303484 26211 net.cpp:382] pool0 -> pool0
I0428 19:47:31.303525 26211 net.cpp:124] Setting up pool0
I0428 19:47:31.303534 26211 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:31.303539 26211 net.cpp:139] Memory required for data: 1754800
I0428 19:47:31.303545 26211 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:31.303557 26211 net.cpp:86] Creating Layer conv1
I0428 19:47:31.303565 26211 net.cpp:408] conv1 <- pool0
I0428 19:47:31.303573 26211 net.cpp:382] conv1 -> conv1
I0428 19:47:31.305753 26211 net.cpp:124] Setting up conv1
I0428 19:47:31.305768 26211 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:31.305775 26211 net.cpp:139] Memory required for data: 1806000
I0428 19:47:31.305788 26211 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:31.305799 26211 net.cpp:86] Creating Layer pool1
I0428 19:47:31.305805 26211 net.cpp:408] pool1 <- conv1
I0428 19:47:31.305814 26211 net.cpp:382] pool1 -> pool1
I0428 19:47:31.305871 26211 net.cpp:124] Setting up pool1
I0428 19:47:31.305881 26211 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:31.305886 26211 net.cpp:139] Memory required for data: 1818800
I0428 19:47:31.305891 26211 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:31.305901 26211 net.cpp:86] Creating Layer ip1
I0428 19:47:31.305912 26211 net.cpp:408] ip1 <- pool1
I0428 19:47:31.305919 26211 net.cpp:382] ip1 -> ip1
I0428 19:47:31.306054 26211 net.cpp:124] Setting up ip1
I0428 19:47:31.306066 26211 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:31.306084 26211 net.cpp:139] Memory required for data: 1838800
I0428 19:47:31.306097 26211 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:31.306107 26211 net.cpp:86] Creating Layer relu1
I0428 19:47:31.306114 26211 net.cpp:408] relu1 <- ip1
I0428 19:47:31.306123 26211 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:31.306301 26211 net.cpp:124] Setting up relu1
I0428 19:47:31.306313 26211 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:31.306318 26211 net.cpp:139] Memory required for data: 1858800
I0428 19:47:31.306324 26211 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:31.306334 26211 net.cpp:86] Creating Layer ip2
I0428 19:47:31.306339 26211 net.cpp:408] ip2 <- ip1
I0428 19:47:31.306349 26211 net.cpp:382] ip2 -> ip2
I0428 19:47:31.306452 26211 net.cpp:124] Setting up ip2
I0428 19:47:31.306459 26211 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:31.306465 26211 net.cpp:139] Memory required for data: 1862800
I0428 19:47:31.306474 26211 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:31.306481 26211 net.cpp:86] Creating Layer relu2
I0428 19:47:31.306488 26211 net.cpp:408] relu2 <- ip2
I0428 19:47:31.306494 26211 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:31.306712 26211 net.cpp:124] Setting up relu2
I0428 19:47:31.306721 26211 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:31.306727 26211 net.cpp:139] Memory required for data: 1866800
I0428 19:47:31.306732 26211 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:47:31.306740 26211 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:47:31.306746 26211 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:47:31.306753 26211 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:47:31.306776 26211 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:47:31.306821 26211 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:47:31.306830 26211 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:31.306838 26211 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:31.306843 26211 net.cpp:139] Memory required for data: 1874800
I0428 19:47:31.306848 26211 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:31.306856 26211 net.cpp:86] Creating Layer accuracy
I0428 19:47:31.306861 26211 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:47:31.306869 26211 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:31.306876 26211 net.cpp:382] accuracy -> accuracy
I0428 19:47:31.306887 26211 net.cpp:124] Setting up accuracy
I0428 19:47:31.306895 26211 net.cpp:131] Top shape: (1)
I0428 19:47:31.306900 26211 net.cpp:139] Memory required for data: 1874804
I0428 19:47:31.306905 26211 layer_factory.hpp:77] Creating layer loss
I0428 19:47:31.306913 26211 net.cpp:86] Creating Layer loss
I0428 19:47:31.306920 26211 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:47:31.306926 26211 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:31.306932 26211 net.cpp:382] loss -> loss
I0428 19:47:31.306942 26211 layer_factory.hpp:77] Creating layer loss
I0428 19:47:31.307168 26211 net.cpp:124] Setting up loss
I0428 19:47:31.307179 26211 net.cpp:131] Top shape: (1)
I0428 19:47:31.307185 26211 net.cpp:134]     with loss weight 1
I0428 19:47:31.307195 26211 net.cpp:139] Memory required for data: 1874808
I0428 19:47:31.307200 26211 net.cpp:200] loss needs backward computation.
I0428 19:47:31.307207 26211 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:31.307214 26211 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:47:31.307219 26211 net.cpp:200] relu2 needs backward computation.
I0428 19:47:31.307224 26211 net.cpp:200] ip2 needs backward computation.
I0428 19:47:31.307230 26211 net.cpp:200] relu1 needs backward computation.
I0428 19:47:31.307235 26211 net.cpp:200] ip1 needs backward computation.
I0428 19:47:31.307241 26211 net.cpp:200] pool1 needs backward computation.
I0428 19:47:31.307246 26211 net.cpp:200] conv1 needs backward computation.
I0428 19:47:31.307252 26211 net.cpp:200] pool0 needs backward computation.
I0428 19:47:31.307258 26211 net.cpp:200] conv0 needs backward computation.
I0428 19:47:31.307265 26211 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:31.307271 26211 net.cpp:202] mnist does not need backward computation.
I0428 19:47:31.307274 26211 net.cpp:244] This network produces output accuracy
I0428 19:47:31.307281 26211 net.cpp:244] This network produces output loss
I0428 19:47:31.307296 26211 net.cpp:257] Network initialization done.
I0428 19:47:31.307338 26211 solver.cpp:56] Solver scaffolding done.
I0428 19:47:31.307631 26211 caffe.cpp:248] Starting Optimization
I0428 19:47:31.307638 26211 solver.cpp:273] Solving LeNet
I0428 19:47:31.307642 26211 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:31.308468 26211 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:31.311678 26211 blocking_queue.cpp:49] Waiting for data
I0428 19:47:31.381718 26218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:31.382169 26211 solver.cpp:398]     Test net output #0: accuracy = 0.1072
I0428 19:47:31.382190 26211 solver.cpp:398]     Test net output #1: loss = 2.31436 (* 1 = 2.31436 loss)
I0428 19:47:31.383877 26211 solver.cpp:219] Iteration 0 (-2.04052e-35 iter/s, 0.0761999s/100 iters), loss = 2.31379
I0428 19:47:31.383913 26211 solver.cpp:238]     Train net output #0: loss = 2.31379 (* 1 = 2.31379 loss)
I0428 19:47:31.383946 26211 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:31.446607 26211 solver.cpp:219] Iteration 100 (1595.13 iter/s, 0.062691s/100 iters), loss = 1.1031
I0428 19:47:31.446635 26211 solver.cpp:238]     Train net output #0: loss = 1.1031 (* 1 = 1.1031 loss)
I0428 19:47:31.446645 26211 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:31.508971 26211 solver.cpp:219] Iteration 200 (1604.37 iter/s, 0.0623298s/100 iters), loss = 0.773907
I0428 19:47:31.509011 26211 solver.cpp:238]     Train net output #0: loss = 0.773907 (* 1 = 0.773907 loss)
I0428 19:47:31.509037 26211 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:31.571737 26211 solver.cpp:219] Iteration 300 (1594.37 iter/s, 0.0627208s/100 iters), loss = 0.891403
I0428 19:47:31.571763 26211 solver.cpp:238]     Train net output #0: loss = 0.891403 (* 1 = 0.891403 loss)
I0428 19:47:31.571789 26211 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:31.634572 26211 solver.cpp:219] Iteration 400 (1592.28 iter/s, 0.0628029s/100 iters), loss = 0.460134
I0428 19:47:31.634598 26211 solver.cpp:238]     Train net output #0: loss = 0.460134 (* 1 = 0.460134 loss)
I0428 19:47:31.634608 26211 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:31.695827 26211 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:31.739670 26218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:31.740108 26211 solver.cpp:398]     Test net output #0: accuracy = 0.8374
I0428 19:47:31.740129 26211 solver.cpp:398]     Test net output #1: loss = 0.481322 (* 1 = 0.481322 loss)
I0428 19:47:31.740797 26211 solver.cpp:219] Iteration 500 (941.7 iter/s, 0.106191s/100 iters), loss = 0.523395
I0428 19:47:31.740842 26211 solver.cpp:238]     Train net output #0: loss = 0.523395 (* 1 = 0.523395 loss)
I0428 19:47:31.740855 26211 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:31.803365 26211 solver.cpp:219] Iteration 600 (1599.53 iter/s, 0.0625183s/100 iters), loss = 0.459066
I0428 19:47:31.803391 26211 solver.cpp:238]     Train net output #0: loss = 0.459066 (* 1 = 0.459066 loss)
I0428 19:47:31.803416 26211 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:31.864454 26211 solver.cpp:219] Iteration 700 (1637.84 iter/s, 0.061056s/100 iters), loss = 0.516132
I0428 19:47:31.864480 26211 solver.cpp:238]     Train net output #0: loss = 0.516132 (* 1 = 0.516132 loss)
I0428 19:47:31.864506 26211 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:31.925559 26211 solver.cpp:219] Iteration 800 (1637.43 iter/s, 0.0610714s/100 iters), loss = 0.489244
I0428 19:47:31.925585 26211 solver.cpp:238]     Train net output #0: loss = 0.489244 (* 1 = 0.489244 loss)
I0428 19:47:31.925608 26211 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:31.987967 26211 solver.cpp:219] Iteration 900 (1603.16 iter/s, 0.062377s/100 iters), loss = 0.544602
I0428 19:47:31.987993 26211 solver.cpp:238]     Train net output #0: loss = 0.544602 (* 1 = 0.544602 loss)
I0428 19:47:31.988018 26211 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:32.009044 26217 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:32.050091 26211 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:32.050704 26211 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:32.051095 26211 solver.cpp:311] Iteration 1000, loss = 0.439558
I0428 19:47:32.051110 26211 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:32.094512 26218 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:32.094959 26211 solver.cpp:398]     Test net output #0: accuracy = 0.8632
I0428 19:47:32.094976 26211 solver.cpp:398]     Test net output #1: loss = 0.386086 (* 1 = 0.386086 loss)
I0428 19:47:32.094990 26211 solver.cpp:316] Optimization Done.
I0428 19:47:32.094995 26211 caffe.cpp:259] Optimization Done.
