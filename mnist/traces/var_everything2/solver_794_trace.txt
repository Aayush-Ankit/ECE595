I0428 19:57:36.871024 28726 caffe.cpp:218] Using GPUs 0
I0428 19:57:36.900233 28726 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:57:37.344451 28726 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test794.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:57:37.344583 28726 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test794.prototxt
I0428 19:57:37.344965 28726 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:57:37.344997 28726 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:57:37.345096 28726 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:37.345175 28726 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:37.345255 28726 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:57:37.345275 28726 net.cpp:86] Creating Layer mnist
I0428 19:57:37.345281 28726 net.cpp:382] mnist -> data
I0428 19:57:37.345300 28726 net.cpp:382] mnist -> label
I0428 19:57:37.346406 28726 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:57:37.348716 28726 net.cpp:124] Setting up mnist
I0428 19:57:37.348747 28726 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:57:37.348752 28726 net.cpp:131] Top shape: 64 (64)
I0428 19:57:37.348754 28726 net.cpp:139] Memory required for data: 200960
I0428 19:57:37.348760 28726 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:37.348773 28726 net.cpp:86] Creating Layer conv0
I0428 19:57:37.348791 28726 net.cpp:408] conv0 <- data
I0428 19:57:37.348801 28726 net.cpp:382] conv0 -> conv0
I0428 19:57:37.576597 28726 net.cpp:124] Setting up conv0
I0428 19:57:37.576624 28726 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:57:37.576627 28726 net.cpp:139] Memory required for data: 1675520
I0428 19:57:37.576642 28726 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:37.576653 28726 net.cpp:86] Creating Layer pool0
I0428 19:57:37.576658 28726 net.cpp:408] pool0 <- conv0
I0428 19:57:37.576663 28726 net.cpp:382] pool0 -> pool0
I0428 19:57:37.576721 28726 net.cpp:124] Setting up pool0
I0428 19:57:37.576726 28726 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:57:37.576730 28726 net.cpp:139] Memory required for data: 2044160
I0428 19:57:37.576732 28726 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:37.576742 28726 net.cpp:86] Creating Layer conv1
I0428 19:57:37.576746 28726 net.cpp:408] conv1 <- pool0
I0428 19:57:37.576750 28726 net.cpp:382] conv1 -> conv1
I0428 19:57:37.579656 28726 net.cpp:124] Setting up conv1
I0428 19:57:37.579685 28726 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:57:37.579689 28726 net.cpp:139] Memory required for data: 2126080
I0428 19:57:37.579697 28726 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:37.579704 28726 net.cpp:86] Creating Layer pool1
I0428 19:57:37.579708 28726 net.cpp:408] pool1 <- conv1
I0428 19:57:37.579713 28726 net.cpp:382] pool1 -> pool1
I0428 19:57:37.579776 28726 net.cpp:124] Setting up pool1
I0428 19:57:37.579780 28726 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:57:37.579783 28726 net.cpp:139] Memory required for data: 2146560
I0428 19:57:37.579787 28726 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:37.579792 28726 net.cpp:86] Creating Layer ip1
I0428 19:57:37.579795 28726 net.cpp:408] ip1 <- pool1
I0428 19:57:37.579800 28726 net.cpp:382] ip1 -> ip1
I0428 19:57:37.579910 28726 net.cpp:124] Setting up ip1
I0428 19:57:37.579917 28726 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:37.579921 28726 net.cpp:139] Memory required for data: 2149120
I0428 19:57:37.579927 28726 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:37.579932 28726 net.cpp:86] Creating Layer relu1
I0428 19:57:37.579936 28726 net.cpp:408] relu1 <- ip1
I0428 19:57:37.579939 28726 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:37.580098 28726 net.cpp:124] Setting up relu1
I0428 19:57:37.580107 28726 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:37.580111 28726 net.cpp:139] Memory required for data: 2151680
I0428 19:57:37.580113 28726 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:37.580119 28726 net.cpp:86] Creating Layer ip2
I0428 19:57:37.580122 28726 net.cpp:408] ip2 <- ip1
I0428 19:57:37.580127 28726 net.cpp:382] ip2 -> ip2
I0428 19:57:37.580231 28726 net.cpp:124] Setting up ip2
I0428 19:57:37.580238 28726 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:37.580240 28726 net.cpp:139] Memory required for data: 2154240
I0428 19:57:37.580246 28726 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:37.580251 28726 net.cpp:86] Creating Layer relu2
I0428 19:57:37.580255 28726 net.cpp:408] relu2 <- ip2
I0428 19:57:37.580258 28726 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:37.581066 28726 net.cpp:124] Setting up relu2
I0428 19:57:37.581079 28726 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:37.581097 28726 net.cpp:139] Memory required for data: 2156800
I0428 19:57:37.581100 28726 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:37.581122 28726 net.cpp:86] Creating Layer ip3
I0428 19:57:37.581126 28726 net.cpp:408] ip3 <- ip2
I0428 19:57:37.581131 28726 net.cpp:382] ip3 -> ip3
I0428 19:57:37.581225 28726 net.cpp:124] Setting up ip3
I0428 19:57:37.581233 28726 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:37.581235 28726 net.cpp:139] Memory required for data: 2159360
I0428 19:57:37.581243 28726 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:37.581248 28726 net.cpp:86] Creating Layer relu3
I0428 19:57:37.581250 28726 net.cpp:408] relu3 <- ip3
I0428 19:57:37.581255 28726 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:37.581429 28726 net.cpp:124] Setting up relu3
I0428 19:57:37.581437 28726 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:37.581440 28726 net.cpp:139] Memory required for data: 2161920
I0428 19:57:37.581444 28726 layer_factory.hpp:77] Creating layer loss
I0428 19:57:37.581449 28726 net.cpp:86] Creating Layer loss
I0428 19:57:37.581452 28726 net.cpp:408] loss <- ip3
I0428 19:57:37.581456 28726 net.cpp:408] loss <- label
I0428 19:57:37.581461 28726 net.cpp:382] loss -> loss
I0428 19:57:37.581475 28726 layer_factory.hpp:77] Creating layer loss
I0428 19:57:37.581712 28726 net.cpp:124] Setting up loss
I0428 19:57:37.581722 28726 net.cpp:131] Top shape: (1)
I0428 19:57:37.581724 28726 net.cpp:134]     with loss weight 1
I0428 19:57:37.581738 28726 net.cpp:139] Memory required for data: 2161924
I0428 19:57:37.581743 28726 net.cpp:200] loss needs backward computation.
I0428 19:57:37.581745 28726 net.cpp:200] relu3 needs backward computation.
I0428 19:57:37.581748 28726 net.cpp:200] ip3 needs backward computation.
I0428 19:57:37.581751 28726 net.cpp:200] relu2 needs backward computation.
I0428 19:57:37.581754 28726 net.cpp:200] ip2 needs backward computation.
I0428 19:57:37.581758 28726 net.cpp:200] relu1 needs backward computation.
I0428 19:57:37.581760 28726 net.cpp:200] ip1 needs backward computation.
I0428 19:57:37.581763 28726 net.cpp:200] pool1 needs backward computation.
I0428 19:57:37.581766 28726 net.cpp:200] conv1 needs backward computation.
I0428 19:57:37.581769 28726 net.cpp:200] pool0 needs backward computation.
I0428 19:57:37.581773 28726 net.cpp:200] conv0 needs backward computation.
I0428 19:57:37.581776 28726 net.cpp:202] mnist does not need backward computation.
I0428 19:57:37.581779 28726 net.cpp:244] This network produces output loss
I0428 19:57:37.581802 28726 net.cpp:257] Network initialization done.
I0428 19:57:37.582139 28726 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test794.prototxt
I0428 19:57:37.582180 28726 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:57:37.582264 28726 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:57:37.582341 28726 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:37.582399 28726 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:57:37.582412 28726 net.cpp:86] Creating Layer mnist
I0428 19:57:37.582417 28726 net.cpp:382] mnist -> data
I0428 19:57:37.582423 28726 net.cpp:382] mnist -> label
I0428 19:57:37.582500 28726 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:57:37.584806 28726 net.cpp:124] Setting up mnist
I0428 19:57:37.584839 28726 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:57:37.584861 28726 net.cpp:131] Top shape: 100 (100)
I0428 19:57:37.584863 28726 net.cpp:139] Memory required for data: 314000
I0428 19:57:37.584867 28726 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:57:37.584873 28726 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:57:37.584877 28726 net.cpp:408] label_mnist_1_split <- label
I0428 19:57:37.584897 28726 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:57:37.584904 28726 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:57:37.584980 28726 net.cpp:124] Setting up label_mnist_1_split
I0428 19:57:37.584985 28726 net.cpp:131] Top shape: 100 (100)
I0428 19:57:37.584990 28726 net.cpp:131] Top shape: 100 (100)
I0428 19:57:37.584992 28726 net.cpp:139] Memory required for data: 314800
I0428 19:57:37.584995 28726 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:37.585003 28726 net.cpp:86] Creating Layer conv0
I0428 19:57:37.585007 28726 net.cpp:408] conv0 <- data
I0428 19:57:37.585012 28726 net.cpp:382] conv0 -> conv0
I0428 19:57:37.586639 28726 net.cpp:124] Setting up conv0
I0428 19:57:37.586652 28726 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:57:37.586655 28726 net.cpp:139] Memory required for data: 2618800
I0428 19:57:37.586663 28726 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:37.586669 28726 net.cpp:86] Creating Layer pool0
I0428 19:57:37.586688 28726 net.cpp:408] pool0 <- conv0
I0428 19:57:37.586693 28726 net.cpp:382] pool0 -> pool0
I0428 19:57:37.586726 28726 net.cpp:124] Setting up pool0
I0428 19:57:37.586731 28726 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:57:37.586735 28726 net.cpp:139] Memory required for data: 3194800
I0428 19:57:37.586737 28726 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:37.586745 28726 net.cpp:86] Creating Layer conv1
I0428 19:57:37.586748 28726 net.cpp:408] conv1 <- pool0
I0428 19:57:37.586752 28726 net.cpp:382] conv1 -> conv1
I0428 19:57:37.588809 28726 net.cpp:124] Setting up conv1
I0428 19:57:37.588826 28726 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:57:37.588830 28726 net.cpp:139] Memory required for data: 3322800
I0428 19:57:37.588855 28726 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:37.588860 28726 net.cpp:86] Creating Layer pool1
I0428 19:57:37.588878 28726 net.cpp:408] pool1 <- conv1
I0428 19:57:37.588883 28726 net.cpp:382] pool1 -> pool1
I0428 19:57:37.588937 28726 net.cpp:124] Setting up pool1
I0428 19:57:37.588943 28726 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:57:37.588946 28726 net.cpp:139] Memory required for data: 3354800
I0428 19:57:37.588949 28726 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:37.588954 28726 net.cpp:86] Creating Layer ip1
I0428 19:57:37.588958 28726 net.cpp:408] ip1 <- pool1
I0428 19:57:37.588963 28726 net.cpp:382] ip1 -> ip1
I0428 19:57:37.589058 28726 net.cpp:124] Setting up ip1
I0428 19:57:37.589066 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.589081 28726 net.cpp:139] Memory required for data: 3358800
I0428 19:57:37.589088 28726 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:37.589107 28726 net.cpp:86] Creating Layer relu1
I0428 19:57:37.589112 28726 net.cpp:408] relu1 <- ip1
I0428 19:57:37.589115 28726 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:37.589267 28726 net.cpp:124] Setting up relu1
I0428 19:57:37.589274 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.589277 28726 net.cpp:139] Memory required for data: 3362800
I0428 19:57:37.589280 28726 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:37.589287 28726 net.cpp:86] Creating Layer ip2
I0428 19:57:37.589292 28726 net.cpp:408] ip2 <- ip1
I0428 19:57:37.589295 28726 net.cpp:382] ip2 -> ip2
I0428 19:57:37.589445 28726 net.cpp:124] Setting up ip2
I0428 19:57:37.589452 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.589455 28726 net.cpp:139] Memory required for data: 3366800
I0428 19:57:37.589460 28726 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:37.589471 28726 net.cpp:86] Creating Layer relu2
I0428 19:57:37.589474 28726 net.cpp:408] relu2 <- ip2
I0428 19:57:37.589478 28726 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:37.589622 28726 net.cpp:124] Setting up relu2
I0428 19:57:37.589629 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.589632 28726 net.cpp:139] Memory required for data: 3370800
I0428 19:57:37.589650 28726 layer_factory.hpp:77] Creating layer ip3
I0428 19:57:37.589655 28726 net.cpp:86] Creating Layer ip3
I0428 19:57:37.589658 28726 net.cpp:408] ip3 <- ip2
I0428 19:57:37.589663 28726 net.cpp:382] ip3 -> ip3
I0428 19:57:37.589757 28726 net.cpp:124] Setting up ip3
I0428 19:57:37.589763 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.589766 28726 net.cpp:139] Memory required for data: 3374800
I0428 19:57:37.589774 28726 layer_factory.hpp:77] Creating layer relu3
I0428 19:57:37.589785 28726 net.cpp:86] Creating Layer relu3
I0428 19:57:37.589788 28726 net.cpp:408] relu3 <- ip3
I0428 19:57:37.589797 28726 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:57:37.590708 28726 net.cpp:124] Setting up relu3
I0428 19:57:37.590734 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.590737 28726 net.cpp:139] Memory required for data: 3378800
I0428 19:57:37.590741 28726 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:57:37.590746 28726 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:57:37.590750 28726 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:57:37.590755 28726 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:57:37.590762 28726 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:57:37.590821 28726 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:57:37.590826 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.590831 28726 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:37.590833 28726 net.cpp:139] Memory required for data: 3386800
I0428 19:57:37.590837 28726 layer_factory.hpp:77] Creating layer accuracy
I0428 19:57:37.590842 28726 net.cpp:86] Creating Layer accuracy
I0428 19:57:37.590844 28726 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:57:37.590849 28726 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:57:37.590854 28726 net.cpp:382] accuracy -> accuracy
I0428 19:57:37.590860 28726 net.cpp:124] Setting up accuracy
I0428 19:57:37.590865 28726 net.cpp:131] Top shape: (1)
I0428 19:57:37.590868 28726 net.cpp:139] Memory required for data: 3386804
I0428 19:57:37.590872 28726 layer_factory.hpp:77] Creating layer loss
I0428 19:57:37.590875 28726 net.cpp:86] Creating Layer loss
I0428 19:57:37.590884 28726 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:57:37.590888 28726 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:57:37.590893 28726 net.cpp:382] loss -> loss
I0428 19:57:37.590899 28726 layer_factory.hpp:77] Creating layer loss
I0428 19:57:37.591140 28726 net.cpp:124] Setting up loss
I0428 19:57:37.591148 28726 net.cpp:131] Top shape: (1)
I0428 19:57:37.591158 28726 net.cpp:134]     with loss weight 1
I0428 19:57:37.591164 28726 net.cpp:139] Memory required for data: 3386808
I0428 19:57:37.591178 28726 net.cpp:200] loss needs backward computation.
I0428 19:57:37.591182 28726 net.cpp:202] accuracy does not need backward computation.
I0428 19:57:37.591187 28726 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:57:37.591189 28726 net.cpp:200] relu3 needs backward computation.
I0428 19:57:37.591192 28726 net.cpp:200] ip3 needs backward computation.
I0428 19:57:37.591194 28726 net.cpp:200] relu2 needs backward computation.
I0428 19:57:37.591198 28726 net.cpp:200] ip2 needs backward computation.
I0428 19:57:37.591207 28726 net.cpp:200] relu1 needs backward computation.
I0428 19:57:37.591210 28726 net.cpp:200] ip1 needs backward computation.
I0428 19:57:37.591213 28726 net.cpp:200] pool1 needs backward computation.
I0428 19:57:37.591217 28726 net.cpp:200] conv1 needs backward computation.
I0428 19:57:37.591220 28726 net.cpp:200] pool0 needs backward computation.
I0428 19:57:37.591238 28726 net.cpp:200] conv0 needs backward computation.
I0428 19:57:37.591243 28726 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:57:37.591245 28726 net.cpp:202] mnist does not need backward computation.
I0428 19:57:37.591248 28726 net.cpp:244] This network produces output accuracy
I0428 19:57:37.591258 28726 net.cpp:244] This network produces output loss
I0428 19:57:37.591267 28726 net.cpp:257] Network initialization done.
I0428 19:57:37.591313 28726 solver.cpp:56] Solver scaffolding done.
I0428 19:57:37.591698 28726 caffe.cpp:248] Starting Optimization
I0428 19:57:37.591706 28726 solver.cpp:273] Solving LeNet
I0428 19:57:37.591709 28726 solver.cpp:274] Learning Rate Policy: inv
I0428 19:57:37.592512 28726 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:57:37.595937 28726 blocking_queue.cpp:49] Waiting for data
I0428 19:57:37.668859 28733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:37.669411 28726 solver.cpp:398]     Test net output #0: accuracy = 0.088
I0428 19:57:37.669443 28726 solver.cpp:398]     Test net output #1: loss = 2.32281 (* 1 = 2.32281 loss)
I0428 19:57:37.671881 28726 solver.cpp:219] Iteration 0 (-1.04436e+21 iter/s, 0.0801475s/100 iters), loss = 2.33149
I0428 19:57:37.671905 28726 solver.cpp:238]     Train net output #0: loss = 2.33149 (* 1 = 2.33149 loss)
I0428 19:57:37.671931 28726 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:57:37.749171 28726 solver.cpp:219] Iteration 100 (1294.37 iter/s, 0.0772577s/100 iters), loss = 1.33787
I0428 19:57:37.749197 28726 solver.cpp:238]     Train net output #0: loss = 1.33787 (* 1 = 1.33787 loss)
I0428 19:57:37.749203 28726 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:57:37.822773 28726 solver.cpp:219] Iteration 200 (1359.3 iter/s, 0.0735672s/100 iters), loss = 0.975381
I0428 19:57:37.822794 28726 solver.cpp:238]     Train net output #0: loss = 0.975381 (* 1 = 0.975381 loss)
I0428 19:57:37.822800 28726 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:57:37.898768 28726 solver.cpp:219] Iteration 300 (1316.39 iter/s, 0.0759654s/100 iters), loss = 0.813169
I0428 19:57:37.898792 28726 solver.cpp:238]     Train net output #0: loss = 0.813169 (* 1 = 0.813169 loss)
I0428 19:57:37.898797 28726 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:57:37.973453 28726 solver.cpp:219] Iteration 400 (1339.54 iter/s, 0.0746527s/100 iters), loss = 0.778044
I0428 19:57:37.973476 28726 solver.cpp:238]     Train net output #0: loss = 0.778044 (* 1 = 0.778044 loss)
I0428 19:57:37.973482 28726 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:57:38.048254 28726 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:57:38.101806 28733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:38.102305 28726 solver.cpp:398]     Test net output #0: accuracy = 0.8741
I0428 19:57:38.102324 28726 solver.cpp:398]     Test net output #1: loss = 0.475507 (* 1 = 0.475507 loss)
I0428 19:57:38.103121 28726 solver.cpp:219] Iteration 500 (771.413 iter/s, 0.129632s/100 iters), loss = 0.62488
I0428 19:57:38.103154 28726 solver.cpp:238]     Train net output #0: loss = 0.62488 (* 1 = 0.62488 loss)
I0428 19:57:38.103190 28726 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:57:38.184958 28726 solver.cpp:219] Iteration 600 (1222.58 iter/s, 0.081794s/100 iters), loss = 0.261591
I0428 19:57:38.184981 28726 solver.cpp:238]     Train net output #0: loss = 0.261591 (* 1 = 0.261591 loss)
I0428 19:57:38.185003 28726 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:57:38.261265 28726 solver.cpp:219] Iteration 700 (1311.07 iter/s, 0.0762735s/100 iters), loss = 0.547015
I0428 19:57:38.261288 28726 solver.cpp:238]     Train net output #0: loss = 0.547015 (* 1 = 0.547015 loss)
I0428 19:57:38.261312 28726 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:57:38.335500 28726 solver.cpp:219] Iteration 800 (1347.67 iter/s, 0.0742021s/100 iters), loss = 0.245624
I0428 19:57:38.335536 28726 solver.cpp:238]     Train net output #0: loss = 0.245624 (* 1 = 0.245624 loss)
I0428 19:57:38.335542 28726 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:57:38.411281 28726 solver.cpp:219] Iteration 900 (1320.11 iter/s, 0.0757514s/100 iters), loss = 0.395312
I0428 19:57:38.411319 28726 solver.cpp:238]     Train net output #0: loss = 0.395312 (* 1 = 0.395312 loss)
I0428 19:57:38.411325 28726 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:57:38.436596 28732 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:38.493304 28726 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:57:38.493947 28726 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:57:38.494408 28726 solver.cpp:311] Iteration 1000, loss = 0.210701
I0428 19:57:38.494423 28726 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:57:38.569145 28733 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:38.569671 28726 solver.cpp:398]     Test net output #0: accuracy = 0.9427
I0428 19:57:38.569692 28726 solver.cpp:398]     Test net output #1: loss = 0.197876 (* 1 = 0.197876 loss)
I0428 19:57:38.569697 28726 solver.cpp:316] Optimization Done.
I0428 19:57:38.569700 28726 caffe.cpp:259] Optimization Done.
