I0428 20:02:52.167853 30070 caffe.cpp:218] Using GPUs 0
I0428 20:02:52.206028 30070 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:52.717723 30070 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test939.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:52.717866 30070 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test939.prototxt
I0428 20:02:52.718250 30070 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:52.718266 30070 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:52.718359 30070 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:02:52.718436 30070 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:52.718535 30070 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:52.718560 30070 net.cpp:86] Creating Layer mnist
I0428 20:02:52.718569 30070 net.cpp:382] mnist -> data
I0428 20:02:52.718591 30070 net.cpp:382] mnist -> label
I0428 20:02:52.719696 30070 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:52.722196 30070 net.cpp:124] Setting up mnist
I0428 20:02:52.722216 30070 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:52.722223 30070 net.cpp:131] Top shape: 64 (64)
I0428 20:02:52.722226 30070 net.cpp:139] Memory required for data: 200960
I0428 20:02:52.722234 30070 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:52.722249 30070 net.cpp:86] Creating Layer conv0
I0428 20:02:52.722255 30070 net.cpp:408] conv0 <- data
I0428 20:02:52.722267 30070 net.cpp:382] conv0 -> conv0
I0428 20:02:53.012666 30070 net.cpp:124] Setting up conv0
I0428 20:02:53.012699 30070 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:53.012706 30070 net.cpp:139] Memory required for data: 1675520
I0428 20:02:53.012744 30070 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:53.012760 30070 net.cpp:86] Creating Layer pool0
I0428 20:02:53.012765 30070 net.cpp:408] pool0 <- conv0
I0428 20:02:53.012773 30070 net.cpp:382] pool0 -> pool0
I0428 20:02:53.012835 30070 net.cpp:124] Setting up pool0
I0428 20:02:53.012843 30070 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:53.012847 30070 net.cpp:139] Memory required for data: 2044160
I0428 20:02:53.012851 30070 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:53.012864 30070 net.cpp:86] Creating Layer conv1
I0428 20:02:53.012868 30070 net.cpp:408] conv1 <- pool0
I0428 20:02:53.012874 30070 net.cpp:382] conv1 -> conv1
I0428 20:02:53.015182 30070 net.cpp:124] Setting up conv1
I0428 20:02:53.015200 30070 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:02:53.015204 30070 net.cpp:139] Memory required for data: 3682560
I0428 20:02:53.015214 30070 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:53.015223 30070 net.cpp:86] Creating Layer pool1
I0428 20:02:53.015228 30070 net.cpp:408] pool1 <- conv1
I0428 20:02:53.015233 30070 net.cpp:382] pool1 -> pool1
I0428 20:02:53.015277 30070 net.cpp:124] Setting up pool1
I0428 20:02:53.015283 30070 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:02:53.015287 30070 net.cpp:139] Memory required for data: 4092160
I0428 20:02:53.015290 30070 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:53.015300 30070 net.cpp:86] Creating Layer ip1
I0428 20:02:53.015302 30070 net.cpp:408] ip1 <- pool1
I0428 20:02:53.015308 30070 net.cpp:382] ip1 -> ip1
I0428 20:02:53.016495 30070 net.cpp:124] Setting up ip1
I0428 20:02:53.016510 30070 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:53.016515 30070 net.cpp:139] Memory required for data: 4094720
I0428 20:02:53.016525 30070 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:53.016531 30070 net.cpp:86] Creating Layer relu1
I0428 20:02:53.016536 30070 net.cpp:408] relu1 <- ip1
I0428 20:02:53.016541 30070 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:53.016744 30070 net.cpp:124] Setting up relu1
I0428 20:02:53.016755 30070 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:53.016759 30070 net.cpp:139] Memory required for data: 4097280
I0428 20:02:53.016762 30070 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:53.016770 30070 net.cpp:86] Creating Layer ip2
I0428 20:02:53.016774 30070 net.cpp:408] ip2 <- ip1
I0428 20:02:53.016780 30070 net.cpp:382] ip2 -> ip2
I0428 20:02:53.016903 30070 net.cpp:124] Setting up ip2
I0428 20:02:53.016912 30070 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:53.016916 30070 net.cpp:139] Memory required for data: 4099840
I0428 20:02:53.016923 30070 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:53.016930 30070 net.cpp:86] Creating Layer relu2
I0428 20:02:53.016934 30070 net.cpp:408] relu2 <- ip2
I0428 20:02:53.016939 30070 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:53.017792 30070 net.cpp:124] Setting up relu2
I0428 20:02:53.017807 30070 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:53.017812 30070 net.cpp:139] Memory required for data: 4102400
I0428 20:02:53.017817 30070 layer_factory.hpp:77] Creating layer loss
I0428 20:02:53.017823 30070 net.cpp:86] Creating Layer loss
I0428 20:02:53.017827 30070 net.cpp:408] loss <- ip2
I0428 20:02:53.017833 30070 net.cpp:408] loss <- label
I0428 20:02:53.017839 30070 net.cpp:382] loss -> loss
I0428 20:02:53.017863 30070 layer_factory.hpp:77] Creating layer loss
I0428 20:02:53.018138 30070 net.cpp:124] Setting up loss
I0428 20:02:53.018151 30070 net.cpp:131] Top shape: (1)
I0428 20:02:53.018154 30070 net.cpp:134]     with loss weight 1
I0428 20:02:53.018172 30070 net.cpp:139] Memory required for data: 4102404
I0428 20:02:53.018175 30070 net.cpp:200] loss needs backward computation.
I0428 20:02:53.018179 30070 net.cpp:200] relu2 needs backward computation.
I0428 20:02:53.018183 30070 net.cpp:200] ip2 needs backward computation.
I0428 20:02:53.018187 30070 net.cpp:200] relu1 needs backward computation.
I0428 20:02:53.018190 30070 net.cpp:200] ip1 needs backward computation.
I0428 20:02:53.018205 30070 net.cpp:200] pool1 needs backward computation.
I0428 20:02:53.018209 30070 net.cpp:200] conv1 needs backward computation.
I0428 20:02:53.018213 30070 net.cpp:200] pool0 needs backward computation.
I0428 20:02:53.018218 30070 net.cpp:200] conv0 needs backward computation.
I0428 20:02:53.018221 30070 net.cpp:202] mnist does not need backward computation.
I0428 20:02:53.018225 30070 net.cpp:244] This network produces output loss
I0428 20:02:53.018235 30070 net.cpp:257] Network initialization done.
I0428 20:02:53.018580 30070 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test939.prototxt
I0428 20:02:53.018610 30070 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:53.018708 30070 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:02:53.018784 30070 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:53.018839 30070 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:53.018857 30070 net.cpp:86] Creating Layer mnist
I0428 20:02:53.018862 30070 net.cpp:382] mnist -> data
I0428 20:02:53.018872 30070 net.cpp:382] mnist -> label
I0428 20:02:53.018973 30070 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:53.021160 30070 net.cpp:124] Setting up mnist
I0428 20:02:53.021176 30070 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:53.021183 30070 net.cpp:131] Top shape: 100 (100)
I0428 20:02:53.021186 30070 net.cpp:139] Memory required for data: 314000
I0428 20:02:53.021191 30070 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:53.021199 30070 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:53.021203 30070 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:53.021209 30070 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:53.021216 30070 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:53.021281 30070 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:53.021288 30070 net.cpp:131] Top shape: 100 (100)
I0428 20:02:53.021292 30070 net.cpp:131] Top shape: 100 (100)
I0428 20:02:53.021296 30070 net.cpp:139] Memory required for data: 314800
I0428 20:02:53.021299 30070 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:53.021309 30070 net.cpp:86] Creating Layer conv0
I0428 20:02:53.021313 30070 net.cpp:408] conv0 <- data
I0428 20:02:53.021319 30070 net.cpp:382] conv0 -> conv0
I0428 20:02:53.023011 30070 net.cpp:124] Setting up conv0
I0428 20:02:53.023030 30070 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:53.023035 30070 net.cpp:139] Memory required for data: 2618800
I0428 20:02:53.023046 30070 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:53.023054 30070 net.cpp:86] Creating Layer pool0
I0428 20:02:53.023061 30070 net.cpp:408] pool0 <- conv0
I0428 20:02:53.023067 30070 net.cpp:382] pool0 -> pool0
I0428 20:02:53.023114 30070 net.cpp:124] Setting up pool0
I0428 20:02:53.023120 30070 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:53.023124 30070 net.cpp:139] Memory required for data: 3194800
I0428 20:02:53.023128 30070 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:53.023141 30070 net.cpp:86] Creating Layer conv1
I0428 20:02:53.023149 30070 net.cpp:408] conv1 <- pool0
I0428 20:02:53.023155 30070 net.cpp:382] conv1 -> conv1
I0428 20:02:53.025019 30070 net.cpp:124] Setting up conv1
I0428 20:02:53.025038 30070 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:02:53.025041 30070 net.cpp:139] Memory required for data: 5754800
I0428 20:02:53.025053 30070 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:53.025061 30070 net.cpp:86] Creating Layer pool1
I0428 20:02:53.025068 30070 net.cpp:408] pool1 <- conv1
I0428 20:02:53.025074 30070 net.cpp:382] pool1 -> pool1
I0428 20:02:53.025125 30070 net.cpp:124] Setting up pool1
I0428 20:02:53.025132 30070 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:02:53.025135 30070 net.cpp:139] Memory required for data: 6394800
I0428 20:02:53.025146 30070 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:53.025154 30070 net.cpp:86] Creating Layer ip1
I0428 20:02:53.025158 30070 net.cpp:408] ip1 <- pool1
I0428 20:02:53.025163 30070 net.cpp:382] ip1 -> ip1
I0428 20:02:53.025389 30070 net.cpp:124] Setting up ip1
I0428 20:02:53.025399 30070 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:53.025403 30070 net.cpp:139] Memory required for data: 6398800
I0428 20:02:53.025411 30070 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:53.025418 30070 net.cpp:86] Creating Layer relu1
I0428 20:02:53.025421 30070 net.cpp:408] relu1 <- ip1
I0428 20:02:53.025427 30070 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:53.025670 30070 net.cpp:124] Setting up relu1
I0428 20:02:53.025687 30070 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:53.025691 30070 net.cpp:139] Memory required for data: 6402800
I0428 20:02:53.025694 30070 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:53.025703 30070 net.cpp:86] Creating Layer ip2
I0428 20:02:53.025707 30070 net.cpp:408] ip2 <- ip1
I0428 20:02:53.025713 30070 net.cpp:382] ip2 -> ip2
I0428 20:02:53.025861 30070 net.cpp:124] Setting up ip2
I0428 20:02:53.025869 30070 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:53.025873 30070 net.cpp:139] Memory required for data: 6406800
I0428 20:02:53.025879 30070 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:53.025887 30070 net.cpp:86] Creating Layer relu2
I0428 20:02:53.025890 30070 net.cpp:408] relu2 <- ip2
I0428 20:02:53.025895 30070 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:53.026082 30070 net.cpp:124] Setting up relu2
I0428 20:02:53.026090 30070 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:53.026094 30070 net.cpp:139] Memory required for data: 6410800
I0428 20:02:53.026098 30070 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:02:53.026105 30070 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:02:53.026109 30070 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:02:53.026114 30070 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:02:53.026134 30070 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:02:53.026176 30070 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:02:53.026185 30070 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:53.026188 30070 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:53.026196 30070 net.cpp:139] Memory required for data: 6418800
I0428 20:02:53.026198 30070 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:53.026204 30070 net.cpp:86] Creating Layer accuracy
I0428 20:02:53.026208 30070 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:02:53.026212 30070 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:53.026219 30070 net.cpp:382] accuracy -> accuracy
I0428 20:02:53.026228 30070 net.cpp:124] Setting up accuracy
I0428 20:02:53.026232 30070 net.cpp:131] Top shape: (1)
I0428 20:02:53.026237 30070 net.cpp:139] Memory required for data: 6418804
I0428 20:02:53.026239 30070 layer_factory.hpp:77] Creating layer loss
I0428 20:02:53.026244 30070 net.cpp:86] Creating Layer loss
I0428 20:02:53.026248 30070 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:02:53.026252 30070 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:53.026259 30070 net.cpp:382] loss -> loss
I0428 20:02:53.026266 30070 layer_factory.hpp:77] Creating layer loss
I0428 20:02:53.026551 30070 net.cpp:124] Setting up loss
I0428 20:02:53.026561 30070 net.cpp:131] Top shape: (1)
I0428 20:02:53.026564 30070 net.cpp:134]     with loss weight 1
I0428 20:02:53.026572 30070 net.cpp:139] Memory required for data: 6418808
I0428 20:02:53.026577 30070 net.cpp:200] loss needs backward computation.
I0428 20:02:53.026582 30070 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:53.026587 30070 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:02:53.026590 30070 net.cpp:200] relu2 needs backward computation.
I0428 20:02:53.026593 30070 net.cpp:200] ip2 needs backward computation.
I0428 20:02:53.026597 30070 net.cpp:200] relu1 needs backward computation.
I0428 20:02:53.026600 30070 net.cpp:200] ip1 needs backward computation.
I0428 20:02:53.026604 30070 net.cpp:200] pool1 needs backward computation.
I0428 20:02:53.026608 30070 net.cpp:200] conv1 needs backward computation.
I0428 20:02:53.026612 30070 net.cpp:200] pool0 needs backward computation.
I0428 20:02:53.026615 30070 net.cpp:200] conv0 needs backward computation.
I0428 20:02:53.026619 30070 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:53.026623 30070 net.cpp:202] mnist does not need backward computation.
I0428 20:02:53.026626 30070 net.cpp:244] This network produces output accuracy
I0428 20:02:53.026630 30070 net.cpp:244] This network produces output loss
I0428 20:02:53.026643 30070 net.cpp:257] Network initialization done.
I0428 20:02:53.026686 30070 solver.cpp:56] Solver scaffolding done.
I0428 20:02:53.027004 30070 caffe.cpp:248] Starting Optimization
I0428 20:02:53.027011 30070 solver.cpp:273] Solving LeNet
I0428 20:02:53.027014 30070 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:53.027187 30070 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:53.033272 30070 blocking_queue.cpp:49] Waiting for data
I0428 20:02:53.103606 30077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:53.104243 30070 solver.cpp:398]     Test net output #0: accuracy = 0.0864
I0428 20:02:53.104270 30070 solver.cpp:398]     Test net output #1: loss = 2.32745 (* 1 = 2.32745 loss)
I0428 20:02:53.108301 30070 solver.cpp:219] Iteration 0 (-8.03169e-31 iter/s, 0.0812563s/100 iters), loss = 2.33482
I0428 20:02:53.108333 30070 solver.cpp:238]     Train net output #0: loss = 2.33482 (* 1 = 2.33482 loss)
I0428 20:02:53.108346 30070 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:53.263669 30070 solver.cpp:219] Iteration 100 (643.848 iter/s, 0.155316s/100 iters), loss = 0.521501
I0428 20:02:53.263705 30070 solver.cpp:238]     Train net output #0: loss = 0.521501 (* 1 = 0.521501 loss)
I0428 20:02:53.263713 30070 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:53.418463 30070 solver.cpp:219] Iteration 200 (646.221 iter/s, 0.154746s/100 iters), loss = 0.321798
I0428 20:02:53.418498 30070 solver.cpp:238]     Train net output #0: loss = 0.321798 (* 1 = 0.321798 loss)
I0428 20:02:53.418506 30070 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:53.576108 30070 solver.cpp:219] Iteration 300 (634.531 iter/s, 0.157597s/100 iters), loss = 0.47726
I0428 20:02:53.576139 30070 solver.cpp:238]     Train net output #0: loss = 0.47726 (* 1 = 0.47726 loss)
I0428 20:02:53.576148 30070 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:53.730057 30070 solver.cpp:219] Iteration 400 (649.755 iter/s, 0.153904s/100 iters), loss = 0.400937
I0428 20:02:53.730098 30070 solver.cpp:238]     Train net output #0: loss = 0.400937 (* 1 = 0.400937 loss)
I0428 20:02:53.730106 30070 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:53.883690 30070 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:53.938385 30077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:53.940217 30070 solver.cpp:398]     Test net output #0: accuracy = 0.8656
I0428 20:02:53.940251 30070 solver.cpp:398]     Test net output #1: loss = 0.379849 (* 1 = 0.379849 loss)
I0428 20:02:53.941689 30070 solver.cpp:219] Iteration 500 (472.623 iter/s, 0.211585s/100 iters), loss = 0.329618
I0428 20:02:53.941725 30070 solver.cpp:238]     Train net output #0: loss = 0.329618 (* 1 = 0.329618 loss)
I0428 20:02:53.941731 30070 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:54.092161 30070 solver.cpp:219] Iteration 600 (664.749 iter/s, 0.150433s/100 iters), loss = 0.360179
I0428 20:02:54.092206 30070 solver.cpp:238]     Train net output #0: loss = 0.360179 (* 1 = 0.360179 loss)
I0428 20:02:54.092214 30070 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:54.246542 30070 solver.cpp:219] Iteration 700 (647.944 iter/s, 0.154334s/100 iters), loss = 0.496352
I0428 20:02:54.246582 30070 solver.cpp:238]     Train net output #0: loss = 0.496352 (* 1 = 0.496352 loss)
I0428 20:02:54.246589 30070 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:54.390935 30070 solver.cpp:219] Iteration 800 (692.76 iter/s, 0.14435s/100 iters), loss = 0.572721
I0428 20:02:54.390980 30070 solver.cpp:238]     Train net output #0: loss = 0.572721 (* 1 = 0.572721 loss)
I0428 20:02:54.390986 30070 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:54.543766 30070 solver.cpp:219] Iteration 900 (654.571 iter/s, 0.152772s/100 iters), loss = 0.548579
I0428 20:02:54.543798 30070 solver.cpp:238]     Train net output #0: loss = 0.548579 (* 1 = 0.548579 loss)
I0428 20:02:54.543807 30070 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:54.590533 30076 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:54.684729 30070 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:54.686612 30070 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:54.687618 30070 solver.cpp:311] Iteration 1000, loss = 0.357718
I0428 20:02:54.687664 30070 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:54.763084 30077 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:54.763756 30070 solver.cpp:398]     Test net output #0: accuracy = 0.88
I0428 20:02:54.763782 30070 solver.cpp:398]     Test net output #1: loss = 0.314437 (* 1 = 0.314437 loss)
I0428 20:02:54.763789 30070 solver.cpp:316] Optimization Done.
I0428 20:02:54.763793 30070 caffe.cpp:259] Optimization Done.
