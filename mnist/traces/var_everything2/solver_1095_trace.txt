I0428 20:08:53.198042 31507 caffe.cpp:218] Using GPUs 0
I0428 20:08:53.238549 31507 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:53.757102 31507 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1095.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:53.757272 31507 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1095.prototxt
I0428 20:08:53.757649 31507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:53.757670 31507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:53.757766 31507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:08:53.757864 31507 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:53.757997 31507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:53.758031 31507 net.cpp:86] Creating Layer mnist
I0428 20:08:53.758044 31507 net.cpp:382] mnist -> data
I0428 20:08:53.758074 31507 net.cpp:382] mnist -> label
I0428 20:08:53.759312 31507 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:53.761786 31507 net.cpp:124] Setting up mnist
I0428 20:08:53.761808 31507 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:53.761819 31507 net.cpp:131] Top shape: 64 (64)
I0428 20:08:53.761826 31507 net.cpp:139] Memory required for data: 200960
I0428 20:08:53.761837 31507 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:53.761859 31507 net.cpp:86] Creating Layer conv0
I0428 20:08:53.761870 31507 net.cpp:408] conv0 <- data
I0428 20:08:53.761889 31507 net.cpp:382] conv0 -> conv0
I0428 20:08:54.050451 31507 net.cpp:124] Setting up conv0
I0428 20:08:54.050482 31507 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:54.050488 31507 net.cpp:139] Memory required for data: 3887360
I0428 20:08:54.050534 31507 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:54.050556 31507 net.cpp:86] Creating Layer pool0
I0428 20:08:54.050564 31507 net.cpp:408] pool0 <- conv0
I0428 20:08:54.050573 31507 net.cpp:382] pool0 -> pool0
I0428 20:08:54.050627 31507 net.cpp:124] Setting up pool0
I0428 20:08:54.050637 31507 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:54.050642 31507 net.cpp:139] Memory required for data: 4808960
I0428 20:08:54.050647 31507 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:54.050664 31507 net.cpp:86] Creating Layer conv1
I0428 20:08:54.050671 31507 net.cpp:408] conv1 <- pool0
I0428 20:08:54.050680 31507 net.cpp:382] conv1 -> conv1
I0428 20:08:54.053503 31507 net.cpp:124] Setting up conv1
I0428 20:08:54.053519 31507 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:08:54.053526 31507 net.cpp:139] Memory required for data: 5218560
I0428 20:08:54.053540 31507 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:54.053552 31507 net.cpp:86] Creating Layer pool1
I0428 20:08:54.053560 31507 net.cpp:408] pool1 <- conv1
I0428 20:08:54.053567 31507 net.cpp:382] pool1 -> pool1
I0428 20:08:54.053613 31507 net.cpp:124] Setting up pool1
I0428 20:08:54.053623 31507 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:08:54.053629 31507 net.cpp:139] Memory required for data: 5320960
I0428 20:08:54.053635 31507 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:54.053647 31507 net.cpp:86] Creating Layer ip1
I0428 20:08:54.053653 31507 net.cpp:408] ip1 <- pool1
I0428 20:08:54.053660 31507 net.cpp:382] ip1 -> ip1
I0428 20:08:54.054612 31507 net.cpp:124] Setting up ip1
I0428 20:08:54.054627 31507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:54.054633 31507 net.cpp:139] Memory required for data: 5323520
I0428 20:08:54.054647 31507 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:54.054657 31507 net.cpp:86] Creating Layer relu1
I0428 20:08:54.054667 31507 net.cpp:408] relu1 <- ip1
I0428 20:08:54.054677 31507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:54.054855 31507 net.cpp:124] Setting up relu1
I0428 20:08:54.054865 31507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:54.054872 31507 net.cpp:139] Memory required for data: 5326080
I0428 20:08:54.054877 31507 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:54.054888 31507 net.cpp:86] Creating Layer ip2
I0428 20:08:54.054893 31507 net.cpp:408] ip2 <- ip1
I0428 20:08:54.054903 31507 net.cpp:382] ip2 -> ip2
I0428 20:08:54.055006 31507 net.cpp:124] Setting up ip2
I0428 20:08:54.055016 31507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:54.055022 31507 net.cpp:139] Memory required for data: 5328640
I0428 20:08:54.055030 31507 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:54.055040 31507 net.cpp:86] Creating Layer relu2
I0428 20:08:54.055052 31507 net.cpp:408] relu2 <- ip2
I0428 20:08:54.055059 31507 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:54.055805 31507 net.cpp:124] Setting up relu2
I0428 20:08:54.055820 31507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:54.055826 31507 net.cpp:139] Memory required for data: 5331200
I0428 20:08:54.055832 31507 layer_factory.hpp:77] Creating layer loss
I0428 20:08:54.055841 31507 net.cpp:86] Creating Layer loss
I0428 20:08:54.055847 31507 net.cpp:408] loss <- ip2
I0428 20:08:54.055855 31507 net.cpp:408] loss <- label
I0428 20:08:54.055865 31507 net.cpp:382] loss -> loss
I0428 20:08:54.055891 31507 layer_factory.hpp:77] Creating layer loss
I0428 20:08:54.056134 31507 net.cpp:124] Setting up loss
I0428 20:08:54.056146 31507 net.cpp:131] Top shape: (1)
I0428 20:08:54.056152 31507 net.cpp:134]     with loss weight 1
I0428 20:08:54.056172 31507 net.cpp:139] Memory required for data: 5331204
I0428 20:08:54.056179 31507 net.cpp:200] loss needs backward computation.
I0428 20:08:54.056185 31507 net.cpp:200] relu2 needs backward computation.
I0428 20:08:54.056190 31507 net.cpp:200] ip2 needs backward computation.
I0428 20:08:54.056196 31507 net.cpp:200] relu1 needs backward computation.
I0428 20:08:54.056201 31507 net.cpp:200] ip1 needs backward computation.
I0428 20:08:54.056221 31507 net.cpp:200] pool1 needs backward computation.
I0428 20:08:54.056227 31507 net.cpp:200] conv1 needs backward computation.
I0428 20:08:54.056233 31507 net.cpp:200] pool0 needs backward computation.
I0428 20:08:54.056239 31507 net.cpp:200] conv0 needs backward computation.
I0428 20:08:54.056246 31507 net.cpp:202] mnist does not need backward computation.
I0428 20:08:54.056252 31507 net.cpp:244] This network produces output loss
I0428 20:08:54.056265 31507 net.cpp:257] Network initialization done.
I0428 20:08:54.056571 31507 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1095.prototxt
I0428 20:08:54.056605 31507 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:54.056696 31507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:08:54.056795 31507 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:54.056864 31507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:54.056882 31507 net.cpp:86] Creating Layer mnist
I0428 20:08:54.056890 31507 net.cpp:382] mnist -> data
I0428 20:08:54.056903 31507 net.cpp:382] mnist -> label
I0428 20:08:54.057024 31507 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:54.059062 31507 net.cpp:124] Setting up mnist
I0428 20:08:54.059078 31507 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:54.059087 31507 net.cpp:131] Top shape: 100 (100)
I0428 20:08:54.059092 31507 net.cpp:139] Memory required for data: 314000
I0428 20:08:54.059098 31507 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:54.059128 31507 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:54.059135 31507 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:54.059144 31507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:54.059154 31507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:54.059252 31507 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:54.059262 31507 net.cpp:131] Top shape: 100 (100)
I0428 20:08:54.059269 31507 net.cpp:131] Top shape: 100 (100)
I0428 20:08:54.059274 31507 net.cpp:139] Memory required for data: 314800
I0428 20:08:54.059279 31507 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:54.059293 31507 net.cpp:86] Creating Layer conv0
I0428 20:08:54.059300 31507 net.cpp:408] conv0 <- data
I0428 20:08:54.059309 31507 net.cpp:382] conv0 -> conv0
I0428 20:08:54.060992 31507 net.cpp:124] Setting up conv0
I0428 20:08:54.061009 31507 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:54.061017 31507 net.cpp:139] Memory required for data: 6074800
I0428 20:08:54.061031 31507 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:54.061041 31507 net.cpp:86] Creating Layer pool0
I0428 20:08:54.061064 31507 net.cpp:408] pool0 <- conv0
I0428 20:08:54.061072 31507 net.cpp:382] pool0 -> pool0
I0428 20:08:54.061115 31507 net.cpp:124] Setting up pool0
I0428 20:08:54.061125 31507 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:54.061130 31507 net.cpp:139] Memory required for data: 7514800
I0428 20:08:54.061136 31507 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:54.061148 31507 net.cpp:86] Creating Layer conv1
I0428 20:08:54.061156 31507 net.cpp:408] conv1 <- pool0
I0428 20:08:54.061164 31507 net.cpp:382] conv1 -> conv1
I0428 20:08:54.063338 31507 net.cpp:124] Setting up conv1
I0428 20:08:54.063354 31507 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:08:54.063369 31507 net.cpp:139] Memory required for data: 8154800
I0428 20:08:54.063382 31507 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:54.063400 31507 net.cpp:86] Creating Layer pool1
I0428 20:08:54.063408 31507 net.cpp:408] pool1 <- conv1
I0428 20:08:54.063417 31507 net.cpp:382] pool1 -> pool1
I0428 20:08:54.063467 31507 net.cpp:124] Setting up pool1
I0428 20:08:54.063475 31507 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:08:54.063480 31507 net.cpp:139] Memory required for data: 8314800
I0428 20:08:54.063485 31507 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:54.063495 31507 net.cpp:86] Creating Layer ip1
I0428 20:08:54.063501 31507 net.cpp:408] ip1 <- pool1
I0428 20:08:54.063511 31507 net.cpp:382] ip1 -> ip1
I0428 20:08:54.063697 31507 net.cpp:124] Setting up ip1
I0428 20:08:54.063709 31507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:54.063714 31507 net.cpp:139] Memory required for data: 8318800
I0428 20:08:54.063725 31507 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:54.063735 31507 net.cpp:86] Creating Layer relu1
I0428 20:08:54.063741 31507 net.cpp:408] relu1 <- ip1
I0428 20:08:54.063751 31507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:54.063931 31507 net.cpp:124] Setting up relu1
I0428 20:08:54.063942 31507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:54.063948 31507 net.cpp:139] Memory required for data: 8322800
I0428 20:08:54.063954 31507 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:54.063967 31507 net.cpp:86] Creating Layer ip2
I0428 20:08:54.063974 31507 net.cpp:408] ip2 <- ip1
I0428 20:08:54.063985 31507 net.cpp:382] ip2 -> ip2
I0428 20:08:54.064096 31507 net.cpp:124] Setting up ip2
I0428 20:08:54.064105 31507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:54.064111 31507 net.cpp:139] Memory required for data: 8326800
I0428 20:08:54.064121 31507 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:54.064131 31507 net.cpp:86] Creating Layer relu2
I0428 20:08:54.064138 31507 net.cpp:408] relu2 <- ip2
I0428 20:08:54.064146 31507 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:54.064321 31507 net.cpp:124] Setting up relu2
I0428 20:08:54.064332 31507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:54.064337 31507 net.cpp:139] Memory required for data: 8330800
I0428 20:08:54.064342 31507 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:08:54.064353 31507 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:08:54.064359 31507 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:08:54.064368 31507 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:08:54.064388 31507 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:08:54.064436 31507 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:08:54.064445 31507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:54.064452 31507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:54.064457 31507 net.cpp:139] Memory required for data: 8338800
I0428 20:08:54.064463 31507 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:54.064471 31507 net.cpp:86] Creating Layer accuracy
I0428 20:08:54.064477 31507 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:08:54.064484 31507 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:54.064493 31507 net.cpp:382] accuracy -> accuracy
I0428 20:08:54.064505 31507 net.cpp:124] Setting up accuracy
I0428 20:08:54.064513 31507 net.cpp:131] Top shape: (1)
I0428 20:08:54.064518 31507 net.cpp:139] Memory required for data: 8338804
I0428 20:08:54.064523 31507 layer_factory.hpp:77] Creating layer loss
I0428 20:08:54.064532 31507 net.cpp:86] Creating Layer loss
I0428 20:08:54.064537 31507 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:08:54.064543 31507 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:54.064553 31507 net.cpp:382] loss -> loss
I0428 20:08:54.064563 31507 layer_factory.hpp:77] Creating layer loss
I0428 20:08:54.064890 31507 net.cpp:124] Setting up loss
I0428 20:08:54.064903 31507 net.cpp:131] Top shape: (1)
I0428 20:08:54.064908 31507 net.cpp:134]     with loss weight 1
I0428 20:08:54.064918 31507 net.cpp:139] Memory required for data: 8338808
I0428 20:08:54.064925 31507 net.cpp:200] loss needs backward computation.
I0428 20:08:54.064931 31507 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:54.064939 31507 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:08:54.064944 31507 net.cpp:200] relu2 needs backward computation.
I0428 20:08:54.064949 31507 net.cpp:200] ip2 needs backward computation.
I0428 20:08:54.064954 31507 net.cpp:200] relu1 needs backward computation.
I0428 20:08:54.064960 31507 net.cpp:200] ip1 needs backward computation.
I0428 20:08:54.064965 31507 net.cpp:200] pool1 needs backward computation.
I0428 20:08:54.064971 31507 net.cpp:200] conv1 needs backward computation.
I0428 20:08:54.064977 31507 net.cpp:200] pool0 needs backward computation.
I0428 20:08:54.064983 31507 net.cpp:200] conv0 needs backward computation.
I0428 20:08:54.064990 31507 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:54.064996 31507 net.cpp:202] mnist does not need backward computation.
I0428 20:08:54.065001 31507 net.cpp:244] This network produces output accuracy
I0428 20:08:54.065006 31507 net.cpp:244] This network produces output loss
I0428 20:08:54.065024 31507 net.cpp:257] Network initialization done.
I0428 20:08:54.065071 31507 solver.cpp:56] Solver scaffolding done.
I0428 20:08:54.065374 31507 caffe.cpp:248] Starting Optimization
I0428 20:08:54.065382 31507 solver.cpp:273] Solving LeNet
I0428 20:08:54.065387 31507 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:54.066185 31507 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:54.071213 31507 blocking_queue.cpp:49] Waiting for data
I0428 20:08:54.141326 31514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:54.141921 31507 solver.cpp:398]     Test net output #0: accuracy = 0.1048
I0428 20:08:54.141943 31507 solver.cpp:398]     Test net output #1: loss = 2.30385 (* 1 = 2.30385 loss)
I0428 20:08:54.145617 31507 solver.cpp:219] Iteration 0 (-3.65004e-31 iter/s, 0.0802003s/100 iters), loss = 2.30806
I0428 20:08:54.145644 31507 solver.cpp:238]     Train net output #0: loss = 2.30806 (* 1 = 2.30806 loss)
I0428 20:08:54.145675 31507 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:54.253329 31507 solver.cpp:219] Iteration 100 (928.736 iter/s, 0.107673s/100 iters), loss = 0.813043
I0428 20:08:54.253371 31507 solver.cpp:238]     Train net output #0: loss = 0.813043 (* 1 = 0.813043 loss)
I0428 20:08:54.253382 31507 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:54.356639 31507 solver.cpp:219] Iteration 200 (968.292 iter/s, 0.103275s/100 iters), loss = 0.634492
I0428 20:08:54.356667 31507 solver.cpp:238]     Train net output #0: loss = 0.634492 (* 1 = 0.634492 loss)
I0428 20:08:54.356678 31507 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:54.450953 31507 solver.cpp:219] Iteration 300 (1060.71 iter/s, 0.0942766s/100 iters), loss = 0.730412
I0428 20:08:54.450989 31507 solver.cpp:238]     Train net output #0: loss = 0.730412 (* 1 = 0.730412 loss)
I0428 20:08:54.451014 31507 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:54.547320 31507 solver.cpp:219] Iteration 400 (1038.17 iter/s, 0.0963236s/100 iters), loss = 1.07524
I0428 20:08:54.547351 31507 solver.cpp:238]     Train net output #0: loss = 1.07524 (* 1 = 1.07524 loss)
I0428 20:08:54.547363 31507 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:54.641182 31507 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:54.717207 31514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:54.717823 31507 solver.cpp:398]     Test net output #0: accuracy = 0.6852
I0428 20:08:54.717845 31507 solver.cpp:398]     Test net output #1: loss = 0.7924 (* 1 = 0.7924 loss)
I0428 20:08:54.718909 31507 solver.cpp:219] Iteration 500 (582.932 iter/s, 0.171547s/100 iters), loss = 0.952874
I0428 20:08:54.718936 31507 solver.cpp:238]     Train net output #0: loss = 0.952874 (* 1 = 0.952874 loss)
I0428 20:08:54.718952 31507 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:54.824378 31507 solver.cpp:219] Iteration 600 (948.467 iter/s, 0.105433s/100 iters), loss = 0.735088
I0428 20:08:54.824410 31507 solver.cpp:238]     Train net output #0: loss = 0.735088 (* 1 = 0.735088 loss)
I0428 20:08:54.824435 31507 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:54.929028 31507 solver.cpp:219] Iteration 700 (955.943 iter/s, 0.104609s/100 iters), loss = 0.814626
I0428 20:08:54.929059 31507 solver.cpp:238]     Train net output #0: loss = 0.814626 (* 1 = 0.814626 loss)
I0428 20:08:54.929085 31507 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:55.022986 31507 solver.cpp:219] Iteration 800 (1064.73 iter/s, 0.0939203s/100 iters), loss = 0.867161
I0428 20:08:55.023015 31507 solver.cpp:238]     Train net output #0: loss = 0.867161 (* 1 = 0.867161 loss)
I0428 20:08:55.023039 31507 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:55.117117 31507 solver.cpp:219] Iteration 900 (1062.75 iter/s, 0.0940954s/100 iters), loss = 0.607236
I0428 20:08:55.117144 31507 solver.cpp:238]     Train net output #0: loss = 0.607235 (* 1 = 0.607235 loss)
I0428 20:08:55.117171 31507 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:55.149025 31513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:55.211388 31507 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:55.212442 31507 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:55.213088 31507 solver.cpp:311] Iteration 1000, loss = 0.672085
I0428 20:08:55.213104 31507 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:55.288521 31514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:55.289125 31507 solver.cpp:398]     Test net output #0: accuracy = 0.6917
I0428 20:08:55.289161 31507 solver.cpp:398]     Test net output #1: loss = 0.753524 (* 1 = 0.753524 loss)
I0428 20:08:55.289170 31507 solver.cpp:316] Optimization Done.
I0428 20:08:55.289175 31507 caffe.cpp:259] Optimization Done.
