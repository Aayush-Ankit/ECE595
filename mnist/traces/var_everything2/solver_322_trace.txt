I0428 19:40:01.388203 24447 caffe.cpp:218] Using GPUs 0
I0428 19:40:01.426012 24447 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:01.946684 24447 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test322.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:01.946825 24447 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test322.prototxt
I0428 19:40:01.947192 24447 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:01.947209 24447 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:01.947296 24447 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:40:01.947366 24447 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:01.947463 24447 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:01.947487 24447 net.cpp:86] Creating Layer mnist
I0428 19:40:01.947494 24447 net.cpp:382] mnist -> data
I0428 19:40:01.947517 24447 net.cpp:382] mnist -> label
I0428 19:40:01.948601 24447 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:01.951050 24447 net.cpp:124] Setting up mnist
I0428 19:40:01.951066 24447 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:01.951073 24447 net.cpp:131] Top shape: 64 (64)
I0428 19:40:01.951077 24447 net.cpp:139] Memory required for data: 200960
I0428 19:40:01.951084 24447 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:01.951099 24447 net.cpp:86] Creating Layer conv0
I0428 19:40:01.951105 24447 net.cpp:408] conv0 <- data
I0428 19:40:01.951115 24447 net.cpp:382] conv0 -> conv0
I0428 19:40:02.234477 24447 net.cpp:124] Setting up conv0
I0428 19:40:02.234504 24447 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:02.234508 24447 net.cpp:139] Memory required for data: 495872
I0428 19:40:02.234541 24447 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:02.234553 24447 net.cpp:86] Creating Layer pool0
I0428 19:40:02.234557 24447 net.cpp:408] pool0 <- conv0
I0428 19:40:02.234563 24447 net.cpp:382] pool0 -> pool0
I0428 19:40:02.234609 24447 net.cpp:124] Setting up pool0
I0428 19:40:02.234616 24447 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:02.234619 24447 net.cpp:139] Memory required for data: 569600
I0428 19:40:02.234622 24447 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:02.234634 24447 net.cpp:86] Creating Layer conv1
I0428 19:40:02.234637 24447 net.cpp:408] conv1 <- pool0
I0428 19:40:02.234642 24447 net.cpp:382] conv1 -> conv1
I0428 19:40:02.236413 24447 net.cpp:124] Setting up conv1
I0428 19:40:02.236428 24447 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:02.236431 24447 net.cpp:139] Memory required for data: 651520
I0428 19:40:02.236440 24447 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:02.236464 24447 net.cpp:86] Creating Layer pool1
I0428 19:40:02.236467 24447 net.cpp:408] pool1 <- conv1
I0428 19:40:02.236474 24447 net.cpp:382] pool1 -> pool1
I0428 19:40:02.236511 24447 net.cpp:124] Setting up pool1
I0428 19:40:02.236518 24447 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:02.236521 24447 net.cpp:139] Memory required for data: 672000
I0428 19:40:02.236523 24447 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:02.236531 24447 net.cpp:86] Creating Layer ip1
I0428 19:40:02.236533 24447 net.cpp:408] ip1 <- pool1
I0428 19:40:02.236539 24447 net.cpp:382] ip1 -> ip1
I0428 19:40:02.237517 24447 net.cpp:124] Setting up ip1
I0428 19:40:02.237531 24447 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:02.237534 24447 net.cpp:139] Memory required for data: 684800
I0428 19:40:02.237560 24447 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:02.237565 24447 net.cpp:86] Creating Layer relu1
I0428 19:40:02.237570 24447 net.cpp:408] relu1 <- ip1
I0428 19:40:02.237573 24447 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:02.237754 24447 net.cpp:124] Setting up relu1
I0428 19:40:02.237763 24447 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:02.237766 24447 net.cpp:139] Memory required for data: 697600
I0428 19:40:02.237769 24447 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:02.237777 24447 net.cpp:86] Creating Layer ip2
I0428 19:40:02.237781 24447 net.cpp:408] ip2 <- ip1
I0428 19:40:02.237787 24447 net.cpp:382] ip2 -> ip2
I0428 19:40:02.237890 24447 net.cpp:124] Setting up ip2
I0428 19:40:02.237897 24447 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:02.237900 24447 net.cpp:139] Memory required for data: 700160
I0428 19:40:02.237905 24447 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:02.237911 24447 net.cpp:86] Creating Layer relu2
I0428 19:40:02.237915 24447 net.cpp:408] relu2 <- ip2
I0428 19:40:02.237918 24447 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:02.238657 24447 net.cpp:124] Setting up relu2
I0428 19:40:02.238669 24447 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:02.238672 24447 net.cpp:139] Memory required for data: 702720
I0428 19:40:02.238675 24447 layer_factory.hpp:77] Creating layer loss
I0428 19:40:02.238682 24447 net.cpp:86] Creating Layer loss
I0428 19:40:02.238684 24447 net.cpp:408] loss <- ip2
I0428 19:40:02.238688 24447 net.cpp:408] loss <- label
I0428 19:40:02.238694 24447 net.cpp:382] loss -> loss
I0428 19:40:02.238713 24447 layer_factory.hpp:77] Creating layer loss
I0428 19:40:02.239006 24447 net.cpp:124] Setting up loss
I0428 19:40:02.239015 24447 net.cpp:131] Top shape: (1)
I0428 19:40:02.239018 24447 net.cpp:134]     with loss weight 1
I0428 19:40:02.239032 24447 net.cpp:139] Memory required for data: 702724
I0428 19:40:02.239034 24447 net.cpp:200] loss needs backward computation.
I0428 19:40:02.239038 24447 net.cpp:200] relu2 needs backward computation.
I0428 19:40:02.239042 24447 net.cpp:200] ip2 needs backward computation.
I0428 19:40:02.239044 24447 net.cpp:200] relu1 needs backward computation.
I0428 19:40:02.239048 24447 net.cpp:200] ip1 needs backward computation.
I0428 19:40:02.239050 24447 net.cpp:200] pool1 needs backward computation.
I0428 19:40:02.239063 24447 net.cpp:200] conv1 needs backward computation.
I0428 19:40:02.239068 24447 net.cpp:200] pool0 needs backward computation.
I0428 19:40:02.239070 24447 net.cpp:200] conv0 needs backward computation.
I0428 19:40:02.239073 24447 net.cpp:202] mnist does not need backward computation.
I0428 19:40:02.239076 24447 net.cpp:244] This network produces output loss
I0428 19:40:02.239100 24447 net.cpp:257] Network initialization done.
I0428 19:40:02.239385 24447 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test322.prototxt
I0428 19:40:02.239409 24447 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:02.239504 24447 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:40:02.239572 24447 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:02.239619 24447 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:02.239630 24447 net.cpp:86] Creating Layer mnist
I0428 19:40:02.239634 24447 net.cpp:382] mnist -> data
I0428 19:40:02.239644 24447 net.cpp:382] mnist -> label
I0428 19:40:02.239732 24447 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:02.241875 24447 net.cpp:124] Setting up mnist
I0428 19:40:02.241888 24447 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:02.241894 24447 net.cpp:131] Top shape: 100 (100)
I0428 19:40:02.241896 24447 net.cpp:139] Memory required for data: 314000
I0428 19:40:02.241899 24447 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:02.241919 24447 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:02.241922 24447 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:02.241927 24447 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:02.241935 24447 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:02.241977 24447 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:02.241993 24447 net.cpp:131] Top shape: 100 (100)
I0428 19:40:02.241997 24447 net.cpp:131] Top shape: 100 (100)
I0428 19:40:02.241999 24447 net.cpp:139] Memory required for data: 314800
I0428 19:40:02.242002 24447 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:02.242013 24447 net.cpp:86] Creating Layer conv0
I0428 19:40:02.242017 24447 net.cpp:408] conv0 <- data
I0428 19:40:02.242022 24447 net.cpp:382] conv0 -> conv0
I0428 19:40:02.243628 24447 net.cpp:124] Setting up conv0
I0428 19:40:02.243641 24447 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:02.243645 24447 net.cpp:139] Memory required for data: 775600
I0428 19:40:02.243655 24447 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:02.243661 24447 net.cpp:86] Creating Layer pool0
I0428 19:40:02.243664 24447 net.cpp:408] pool0 <- conv0
I0428 19:40:02.243670 24447 net.cpp:382] pool0 -> pool0
I0428 19:40:02.243705 24447 net.cpp:124] Setting up pool0
I0428 19:40:02.243715 24447 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:02.243717 24447 net.cpp:139] Memory required for data: 890800
I0428 19:40:02.243721 24447 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:02.243729 24447 net.cpp:86] Creating Layer conv1
I0428 19:40:02.243732 24447 net.cpp:408] conv1 <- pool0
I0428 19:40:02.243738 24447 net.cpp:382] conv1 -> conv1
I0428 19:40:02.245343 24447 net.cpp:124] Setting up conv1
I0428 19:40:02.245357 24447 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:02.245362 24447 net.cpp:139] Memory required for data: 1018800
I0428 19:40:02.245370 24447 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:02.245378 24447 net.cpp:86] Creating Layer pool1
I0428 19:40:02.245386 24447 net.cpp:408] pool1 <- conv1
I0428 19:40:02.245393 24447 net.cpp:382] pool1 -> pool1
I0428 19:40:02.245434 24447 net.cpp:124] Setting up pool1
I0428 19:40:02.245440 24447 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:02.245443 24447 net.cpp:139] Memory required for data: 1050800
I0428 19:40:02.245446 24447 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:02.245452 24447 net.cpp:86] Creating Layer ip1
I0428 19:40:02.245455 24447 net.cpp:408] ip1 <- pool1
I0428 19:40:02.245460 24447 net.cpp:382] ip1 -> ip1
I0428 19:40:02.245581 24447 net.cpp:124] Setting up ip1
I0428 19:40:02.245589 24447 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:02.245592 24447 net.cpp:139] Memory required for data: 1070800
I0428 19:40:02.245599 24447 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:02.245604 24447 net.cpp:86] Creating Layer relu1
I0428 19:40:02.245607 24447 net.cpp:408] relu1 <- ip1
I0428 19:40:02.245621 24447 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:02.245851 24447 net.cpp:124] Setting up relu1
I0428 19:40:02.245858 24447 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:02.245862 24447 net.cpp:139] Memory required for data: 1090800
I0428 19:40:02.245865 24447 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:02.245878 24447 net.cpp:86] Creating Layer ip2
I0428 19:40:02.245882 24447 net.cpp:408] ip2 <- ip1
I0428 19:40:02.245888 24447 net.cpp:382] ip2 -> ip2
I0428 19:40:02.246044 24447 net.cpp:124] Setting up ip2
I0428 19:40:02.246052 24447 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:02.246055 24447 net.cpp:139] Memory required for data: 1094800
I0428 19:40:02.246062 24447 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:02.246065 24447 net.cpp:86] Creating Layer relu2
I0428 19:40:02.246068 24447 net.cpp:408] relu2 <- ip2
I0428 19:40:02.246073 24447 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:02.246228 24447 net.cpp:124] Setting up relu2
I0428 19:40:02.246237 24447 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:02.246239 24447 net.cpp:139] Memory required for data: 1098800
I0428 19:40:02.246243 24447 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:40:02.246248 24447 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:40:02.246250 24447 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:40:02.246264 24447 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:40:02.246279 24447 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:40:02.246315 24447 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:40:02.246321 24447 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:02.246325 24447 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:02.246335 24447 net.cpp:139] Memory required for data: 1106800
I0428 19:40:02.246338 24447 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:02.246343 24447 net.cpp:86] Creating Layer accuracy
I0428 19:40:02.246346 24447 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:40:02.246354 24447 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:02.246361 24447 net.cpp:382] accuracy -> accuracy
I0428 19:40:02.246367 24447 net.cpp:124] Setting up accuracy
I0428 19:40:02.246371 24447 net.cpp:131] Top shape: (1)
I0428 19:40:02.246374 24447 net.cpp:139] Memory required for data: 1106804
I0428 19:40:02.246377 24447 layer_factory.hpp:77] Creating layer loss
I0428 19:40:02.246382 24447 net.cpp:86] Creating Layer loss
I0428 19:40:02.246386 24447 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:40:02.246389 24447 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:02.246393 24447 net.cpp:382] loss -> loss
I0428 19:40:02.246399 24447 layer_factory.hpp:77] Creating layer loss
I0428 19:40:02.246712 24447 net.cpp:124] Setting up loss
I0428 19:40:02.246721 24447 net.cpp:131] Top shape: (1)
I0428 19:40:02.246723 24447 net.cpp:134]     with loss weight 1
I0428 19:40:02.246729 24447 net.cpp:139] Memory required for data: 1106808
I0428 19:40:02.246733 24447 net.cpp:200] loss needs backward computation.
I0428 19:40:02.246737 24447 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:02.246745 24447 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:40:02.246748 24447 net.cpp:200] relu2 needs backward computation.
I0428 19:40:02.246752 24447 net.cpp:200] ip2 needs backward computation.
I0428 19:40:02.246754 24447 net.cpp:200] relu1 needs backward computation.
I0428 19:40:02.246757 24447 net.cpp:200] ip1 needs backward computation.
I0428 19:40:02.246760 24447 net.cpp:200] pool1 needs backward computation.
I0428 19:40:02.246763 24447 net.cpp:200] conv1 needs backward computation.
I0428 19:40:02.246767 24447 net.cpp:200] pool0 needs backward computation.
I0428 19:40:02.246769 24447 net.cpp:200] conv0 needs backward computation.
I0428 19:40:02.246773 24447 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:02.246775 24447 net.cpp:202] mnist does not need backward computation.
I0428 19:40:02.246778 24447 net.cpp:244] This network produces output accuracy
I0428 19:40:02.246785 24447 net.cpp:244] This network produces output loss
I0428 19:40:02.246798 24447 net.cpp:257] Network initialization done.
I0428 19:40:02.246834 24447 solver.cpp:56] Solver scaffolding done.
I0428 19:40:02.247092 24447 caffe.cpp:248] Starting Optimization
I0428 19:40:02.247098 24447 solver.cpp:273] Solving LeNet
I0428 19:40:02.247102 24447 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:02.247854 24447 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:02.250617 24447 blocking_queue.cpp:49] Waiting for data
I0428 19:40:02.303197 24454 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:02.303611 24447 solver.cpp:398]     Test net output #0: accuracy = 0.0874
I0428 19:40:02.303629 24447 solver.cpp:398]     Test net output #1: loss = 2.31699 (* 1 = 2.31699 loss)
I0428 19:40:02.305469 24447 solver.cpp:219] Iteration 0 (-4.2577e-37 iter/s, 0.0583436s/100 iters), loss = 2.31911
I0428 19:40:02.305508 24447 solver.cpp:238]     Train net output #0: loss = 2.31911 (* 1 = 2.31911 loss)
I0428 19:40:02.305534 24447 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:02.373875 24447 solver.cpp:219] Iteration 100 (1462.95 iter/s, 0.0683551s/100 iters), loss = 0.698665
I0428 19:40:02.373900 24447 solver.cpp:238]     Train net output #0: loss = 0.698665 (* 1 = 0.698665 loss)
I0428 19:40:02.373906 24447 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:02.435252 24447 solver.cpp:219] Iteration 200 (1630.3 iter/s, 0.0613385s/100 iters), loss = 0.553862
I0428 19:40:02.435304 24447 solver.cpp:238]     Train net output #0: loss = 0.553862 (* 1 = 0.553862 loss)
I0428 19:40:02.435312 24447 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:02.503859 24447 solver.cpp:219] Iteration 300 (1458.88 iter/s, 0.0685455s/100 iters), loss = 0.329823
I0428 19:40:02.503900 24447 solver.cpp:238]     Train net output #0: loss = 0.329823 (* 1 = 0.329823 loss)
I0428 19:40:02.503906 24447 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:02.566470 24447 solver.cpp:219] Iteration 400 (1598.46 iter/s, 0.0625603s/100 iters), loss = 0.342028
I0428 19:40:02.566493 24447 solver.cpp:238]     Train net output #0: loss = 0.342028 (* 1 = 0.342028 loss)
I0428 19:40:02.566499 24447 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:02.631280 24447 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:02.686378 24454 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:02.686816 24447 solver.cpp:398]     Test net output #0: accuracy = 0.8338
I0428 19:40:02.686836 24447 solver.cpp:398]     Test net output #1: loss = 0.441104 (* 1 = 0.441104 loss)
I0428 19:40:02.687526 24447 solver.cpp:219] Iteration 500 (826.3 iter/s, 0.121021s/100 iters), loss = 0.476218
I0428 19:40:02.687567 24447 solver.cpp:238]     Train net output #0: loss = 0.476218 (* 1 = 0.476218 loss)
I0428 19:40:02.687575 24447 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:02.756508 24447 solver.cpp:219] Iteration 600 (1450.76 iter/s, 0.0689295s/100 iters), loss = 0.552049
I0428 19:40:02.756534 24447 solver.cpp:238]     Train net output #0: loss = 0.552049 (* 1 = 0.552049 loss)
I0428 19:40:02.756558 24447 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:02.819433 24447 solver.cpp:219] Iteration 700 (1590.16 iter/s, 0.0628869s/100 iters), loss = 0.312978
I0428 19:40:02.819474 24447 solver.cpp:238]     Train net output #0: loss = 0.312978 (* 1 = 0.312978 loss)
I0428 19:40:02.819481 24447 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:02.882386 24447 solver.cpp:219] Iteration 800 (1589.87 iter/s, 0.0628982s/100 iters), loss = 0.301204
I0428 19:40:02.882427 24447 solver.cpp:238]     Train net output #0: loss = 0.301204 (* 1 = 0.301204 loss)
I0428 19:40:02.882434 24447 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:02.945839 24447 solver.cpp:219] Iteration 900 (1577.26 iter/s, 0.063401s/100 iters), loss = 0.27626
I0428 19:40:02.945879 24447 solver.cpp:238]     Train net output #0: loss = 0.27626 (* 1 = 0.27626 loss)
I0428 19:40:02.945885 24447 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:02.966655 24453 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:03.007113 24447 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:03.007760 24447 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:03.008167 24447 solver.cpp:311] Iteration 1000, loss = 0.204957
I0428 19:40:03.008183 24447 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:03.062129 24454 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:03.062554 24447 solver.cpp:398]     Test net output #0: accuracy = 0.9576
I0428 19:40:03.062577 24447 solver.cpp:398]     Test net output #1: loss = 0.138096 (* 1 = 0.138096 loss)
I0428 19:40:03.062594 24447 solver.cpp:316] Optimization Done.
I0428 19:40:03.062597 24447 caffe.cpp:259] Optimization Done.
