I0428 19:38:48.408553 24138 caffe.cpp:218] Using GPUs 0
I0428 19:38:48.448707 24138 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:48.960872 24138 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test285.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:48.961010 24138 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test285.prototxt
I0428 19:38:48.961431 24138 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:48.961449 24138 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:48.961551 24138 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:48.961632 24138 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:48.961735 24138 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:48.961761 24138 net.cpp:86] Creating Layer mnist
I0428 19:38:48.961771 24138 net.cpp:382] mnist -> data
I0428 19:38:48.961794 24138 net.cpp:382] mnist -> label
I0428 19:38:48.962898 24138 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:48.965375 24138 net.cpp:124] Setting up mnist
I0428 19:38:48.965414 24138 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:48.965422 24138 net.cpp:131] Top shape: 64 (64)
I0428 19:38:48.965426 24138 net.cpp:139] Memory required for data: 200960
I0428 19:38:48.965435 24138 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:48.965452 24138 net.cpp:86] Creating Layer conv0
I0428 19:38:48.965474 24138 net.cpp:408] conv0 <- data
I0428 19:38:48.965487 24138 net.cpp:382] conv0 -> conv0
I0428 19:38:49.232005 24138 net.cpp:124] Setting up conv0
I0428 19:38:49.232048 24138 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:49.232051 24138 net.cpp:139] Memory required for data: 495872
I0428 19:38:49.232067 24138 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:49.232095 24138 net.cpp:86] Creating Layer pool0
I0428 19:38:49.232100 24138 net.cpp:408] pool0 <- conv0
I0428 19:38:49.232105 24138 net.cpp:382] pool0 -> pool0
I0428 19:38:49.232167 24138 net.cpp:124] Setting up pool0
I0428 19:38:49.232173 24138 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:49.232177 24138 net.cpp:139] Memory required for data: 569600
I0428 19:38:49.232179 24138 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:49.232189 24138 net.cpp:86] Creating Layer conv1
I0428 19:38:49.232192 24138 net.cpp:408] conv1 <- pool0
I0428 19:38:49.232211 24138 net.cpp:382] conv1 -> conv1
I0428 19:38:49.234084 24138 net.cpp:124] Setting up conv1
I0428 19:38:49.234114 24138 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:49.234119 24138 net.cpp:139] Memory required for data: 602368
I0428 19:38:49.234127 24138 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:49.234135 24138 net.cpp:86] Creating Layer pool1
I0428 19:38:49.234139 24138 net.cpp:408] pool1 <- conv1
I0428 19:38:49.234144 24138 net.cpp:382] pool1 -> pool1
I0428 19:38:49.234180 24138 net.cpp:124] Setting up pool1
I0428 19:38:49.234185 24138 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:49.234189 24138 net.cpp:139] Memory required for data: 610560
I0428 19:38:49.234191 24138 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:49.234199 24138 net.cpp:86] Creating Layer ip1
I0428 19:38:49.234201 24138 net.cpp:408] ip1 <- pool1
I0428 19:38:49.234206 24138 net.cpp:382] ip1 -> ip1
I0428 19:38:49.234314 24138 net.cpp:124] Setting up ip1
I0428 19:38:49.234321 24138 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:49.234324 24138 net.cpp:139] Memory required for data: 613120
I0428 19:38:49.234331 24138 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:49.234336 24138 net.cpp:86] Creating Layer relu1
I0428 19:38:49.234340 24138 net.cpp:408] relu1 <- ip1
I0428 19:38:49.234344 24138 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:49.234520 24138 net.cpp:124] Setting up relu1
I0428 19:38:49.234529 24138 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:49.234532 24138 net.cpp:139] Memory required for data: 615680
I0428 19:38:49.234536 24138 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:49.234542 24138 net.cpp:86] Creating Layer ip2
I0428 19:38:49.234545 24138 net.cpp:408] ip2 <- ip1
I0428 19:38:49.234550 24138 net.cpp:382] ip2 -> ip2
I0428 19:38:49.234643 24138 net.cpp:124] Setting up ip2
I0428 19:38:49.234650 24138 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:49.234653 24138 net.cpp:139] Memory required for data: 618240
I0428 19:38:49.234659 24138 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:49.234664 24138 net.cpp:86] Creating Layer relu2
I0428 19:38:49.234668 24138 net.cpp:408] relu2 <- ip2
I0428 19:38:49.234673 24138 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:49.235427 24138 net.cpp:124] Setting up relu2
I0428 19:38:49.235440 24138 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:49.235458 24138 net.cpp:139] Memory required for data: 620800
I0428 19:38:49.235461 24138 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:49.235468 24138 net.cpp:86] Creating Layer ip3
I0428 19:38:49.235472 24138 net.cpp:408] ip3 <- ip2
I0428 19:38:49.235477 24138 net.cpp:382] ip3 -> ip3
I0428 19:38:49.235569 24138 net.cpp:124] Setting up ip3
I0428 19:38:49.235591 24138 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:49.235594 24138 net.cpp:139] Memory required for data: 623360
I0428 19:38:49.235617 24138 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:49.235626 24138 net.cpp:86] Creating Layer relu3
I0428 19:38:49.235630 24138 net.cpp:408] relu3 <- ip3
I0428 19:38:49.235635 24138 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:49.235798 24138 net.cpp:124] Setting up relu3
I0428 19:38:49.235806 24138 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:49.235810 24138 net.cpp:139] Memory required for data: 625920
I0428 19:38:49.235813 24138 layer_factory.hpp:77] Creating layer loss
I0428 19:38:49.235819 24138 net.cpp:86] Creating Layer loss
I0428 19:38:49.235823 24138 net.cpp:408] loss <- ip3
I0428 19:38:49.235827 24138 net.cpp:408] loss <- label
I0428 19:38:49.235832 24138 net.cpp:382] loss -> loss
I0428 19:38:49.235852 24138 layer_factory.hpp:77] Creating layer loss
I0428 19:38:49.236100 24138 net.cpp:124] Setting up loss
I0428 19:38:49.236110 24138 net.cpp:131] Top shape: (1)
I0428 19:38:49.236114 24138 net.cpp:134]     with loss weight 1
I0428 19:38:49.236129 24138 net.cpp:139] Memory required for data: 625924
I0428 19:38:49.236131 24138 net.cpp:200] loss needs backward computation.
I0428 19:38:49.236135 24138 net.cpp:200] relu3 needs backward computation.
I0428 19:38:49.236138 24138 net.cpp:200] ip3 needs backward computation.
I0428 19:38:49.236140 24138 net.cpp:200] relu2 needs backward computation.
I0428 19:38:49.236143 24138 net.cpp:200] ip2 needs backward computation.
I0428 19:38:49.236146 24138 net.cpp:200] relu1 needs backward computation.
I0428 19:38:49.236148 24138 net.cpp:200] ip1 needs backward computation.
I0428 19:38:49.236151 24138 net.cpp:200] pool1 needs backward computation.
I0428 19:38:49.236155 24138 net.cpp:200] conv1 needs backward computation.
I0428 19:38:49.236157 24138 net.cpp:200] pool0 needs backward computation.
I0428 19:38:49.236160 24138 net.cpp:200] conv0 needs backward computation.
I0428 19:38:49.236163 24138 net.cpp:202] mnist does not need backward computation.
I0428 19:38:49.236166 24138 net.cpp:244] This network produces output loss
I0428 19:38:49.236176 24138 net.cpp:257] Network initialization done.
I0428 19:38:49.236548 24138 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test285.prototxt
I0428 19:38:49.236591 24138 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:49.236696 24138 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:38:49.236773 24138 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:49.236835 24138 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:49.236862 24138 net.cpp:86] Creating Layer mnist
I0428 19:38:49.236870 24138 net.cpp:382] mnist -> data
I0428 19:38:49.236877 24138 net.cpp:382] mnist -> label
I0428 19:38:49.236963 24138 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:49.239163 24138 net.cpp:124] Setting up mnist
I0428 19:38:49.239192 24138 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:49.239212 24138 net.cpp:131] Top shape: 100 (100)
I0428 19:38:49.239215 24138 net.cpp:139] Memory required for data: 314000
I0428 19:38:49.239218 24138 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:49.239231 24138 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:49.239235 24138 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:49.239241 24138 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:49.239248 24138 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:49.239311 24138 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:49.239316 24138 net.cpp:131] Top shape: 100 (100)
I0428 19:38:49.239320 24138 net.cpp:131] Top shape: 100 (100)
I0428 19:38:49.239322 24138 net.cpp:139] Memory required for data: 314800
I0428 19:38:49.239326 24138 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:49.239336 24138 net.cpp:86] Creating Layer conv0
I0428 19:38:49.239339 24138 net.cpp:408] conv0 <- data
I0428 19:38:49.239343 24138 net.cpp:382] conv0 -> conv0
I0428 19:38:49.241166 24138 net.cpp:124] Setting up conv0
I0428 19:38:49.241180 24138 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:49.241199 24138 net.cpp:139] Memory required for data: 775600
I0428 19:38:49.241210 24138 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:49.241219 24138 net.cpp:86] Creating Layer pool0
I0428 19:38:49.241222 24138 net.cpp:408] pool0 <- conv0
I0428 19:38:49.241228 24138 net.cpp:382] pool0 -> pool0
I0428 19:38:49.241264 24138 net.cpp:124] Setting up pool0
I0428 19:38:49.241271 24138 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:49.241274 24138 net.cpp:139] Memory required for data: 890800
I0428 19:38:49.241277 24138 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:49.241286 24138 net.cpp:86] Creating Layer conv1
I0428 19:38:49.241289 24138 net.cpp:408] conv1 <- pool0
I0428 19:38:49.241294 24138 net.cpp:382] conv1 -> conv1
I0428 19:38:49.243036 24138 net.cpp:124] Setting up conv1
I0428 19:38:49.243063 24138 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:49.243067 24138 net.cpp:139] Memory required for data: 942000
I0428 19:38:49.243089 24138 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:49.243098 24138 net.cpp:86] Creating Layer pool1
I0428 19:38:49.243101 24138 net.cpp:408] pool1 <- conv1
I0428 19:38:49.243108 24138 net.cpp:382] pool1 -> pool1
I0428 19:38:49.243146 24138 net.cpp:124] Setting up pool1
I0428 19:38:49.243151 24138 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:49.243155 24138 net.cpp:139] Memory required for data: 954800
I0428 19:38:49.243157 24138 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:49.243165 24138 net.cpp:86] Creating Layer ip1
I0428 19:38:49.243175 24138 net.cpp:408] ip1 <- pool1
I0428 19:38:49.243181 24138 net.cpp:382] ip1 -> ip1
I0428 19:38:49.243281 24138 net.cpp:124] Setting up ip1
I0428 19:38:49.243289 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.243309 24138 net.cpp:139] Memory required for data: 958800
I0428 19:38:49.243316 24138 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:49.243322 24138 net.cpp:86] Creating Layer relu1
I0428 19:38:49.243325 24138 net.cpp:408] relu1 <- ip1
I0428 19:38:49.243331 24138 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:49.243510 24138 net.cpp:124] Setting up relu1
I0428 19:38:49.243520 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.243522 24138 net.cpp:139] Memory required for data: 962800
I0428 19:38:49.243525 24138 layer_factory.hpp:77] Creating layer ip2
I0428 19:38:49.243535 24138 net.cpp:86] Creating Layer ip2
I0428 19:38:49.243538 24138 net.cpp:408] ip2 <- ip1
I0428 19:38:49.243543 24138 net.cpp:382] ip2 -> ip2
I0428 19:38:49.243641 24138 net.cpp:124] Setting up ip2
I0428 19:38:49.243649 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.243652 24138 net.cpp:139] Memory required for data: 966800
I0428 19:38:49.243657 24138 layer_factory.hpp:77] Creating layer relu2
I0428 19:38:49.243664 24138 net.cpp:86] Creating Layer relu2
I0428 19:38:49.243667 24138 net.cpp:408] relu2 <- ip2
I0428 19:38:49.243672 24138 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:38:49.243862 24138 net.cpp:124] Setting up relu2
I0428 19:38:49.243872 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.243875 24138 net.cpp:139] Memory required for data: 970800
I0428 19:38:49.243878 24138 layer_factory.hpp:77] Creating layer ip3
I0428 19:38:49.243885 24138 net.cpp:86] Creating Layer ip3
I0428 19:38:49.243890 24138 net.cpp:408] ip3 <- ip2
I0428 19:38:49.243894 24138 net.cpp:382] ip3 -> ip3
I0428 19:38:49.244103 24138 net.cpp:124] Setting up ip3
I0428 19:38:49.244112 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.244115 24138 net.cpp:139] Memory required for data: 974800
I0428 19:38:49.244123 24138 layer_factory.hpp:77] Creating layer relu3
I0428 19:38:49.244132 24138 net.cpp:86] Creating Layer relu3
I0428 19:38:49.244140 24138 net.cpp:408] relu3 <- ip3
I0428 19:38:49.244145 24138 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:38:49.244976 24138 net.cpp:124] Setting up relu3
I0428 19:38:49.244987 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.244997 24138 net.cpp:139] Memory required for data: 978800
I0428 19:38:49.245002 24138 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:38:49.245018 24138 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:38:49.245020 24138 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:38:49.245025 24138 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:38:49.245045 24138 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:38:49.245110 24138 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:38:49.245117 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.245121 24138 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:49.245123 24138 net.cpp:139] Memory required for data: 986800
I0428 19:38:49.245127 24138 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:49.245133 24138 net.cpp:86] Creating Layer accuracy
I0428 19:38:49.245136 24138 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:38:49.245141 24138 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:49.245146 24138 net.cpp:382] accuracy -> accuracy
I0428 19:38:49.245157 24138 net.cpp:124] Setting up accuracy
I0428 19:38:49.245162 24138 net.cpp:131] Top shape: (1)
I0428 19:38:49.245164 24138 net.cpp:139] Memory required for data: 986804
I0428 19:38:49.245167 24138 layer_factory.hpp:77] Creating layer loss
I0428 19:38:49.245173 24138 net.cpp:86] Creating Layer loss
I0428 19:38:49.245177 24138 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:38:49.245182 24138 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:49.245185 24138 net.cpp:382] loss -> loss
I0428 19:38:49.245192 24138 layer_factory.hpp:77] Creating layer loss
I0428 19:38:49.245434 24138 net.cpp:124] Setting up loss
I0428 19:38:49.245443 24138 net.cpp:131] Top shape: (1)
I0428 19:38:49.245447 24138 net.cpp:134]     with loss weight 1
I0428 19:38:49.245452 24138 net.cpp:139] Memory required for data: 986808
I0428 19:38:49.245465 24138 net.cpp:200] loss needs backward computation.
I0428 19:38:49.245471 24138 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:49.245473 24138 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:38:49.245476 24138 net.cpp:200] relu3 needs backward computation.
I0428 19:38:49.245479 24138 net.cpp:200] ip3 needs backward computation.
I0428 19:38:49.245497 24138 net.cpp:200] relu2 needs backward computation.
I0428 19:38:49.245501 24138 net.cpp:200] ip2 needs backward computation.
I0428 19:38:49.245503 24138 net.cpp:200] relu1 needs backward computation.
I0428 19:38:49.245506 24138 net.cpp:200] ip1 needs backward computation.
I0428 19:38:49.245508 24138 net.cpp:200] pool1 needs backward computation.
I0428 19:38:49.245512 24138 net.cpp:200] conv1 needs backward computation.
I0428 19:38:49.245514 24138 net.cpp:200] pool0 needs backward computation.
I0428 19:38:49.245517 24138 net.cpp:200] conv0 needs backward computation.
I0428 19:38:49.245520 24138 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:49.245524 24138 net.cpp:202] mnist does not need backward computation.
I0428 19:38:49.245527 24138 net.cpp:244] This network produces output accuracy
I0428 19:38:49.245530 24138 net.cpp:244] This network produces output loss
I0428 19:38:49.245558 24138 net.cpp:257] Network initialization done.
I0428 19:38:49.245600 24138 solver.cpp:56] Solver scaffolding done.
I0428 19:38:49.246008 24138 caffe.cpp:248] Starting Optimization
I0428 19:38:49.246014 24138 solver.cpp:273] Solving LeNet
I0428 19:38:49.246017 24138 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:49.246891 24138 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:49.249631 24138 blocking_queue.cpp:49] Waiting for data
I0428 19:38:49.318094 24147 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:49.318567 24138 solver.cpp:398]     Test net output #0: accuracy = 0.0886
I0428 19:38:49.318599 24138 solver.cpp:398]     Test net output #1: loss = 2.31936 (* 1 = 2.31936 loss)
I0428 19:38:49.320428 24138 solver.cpp:219] Iteration 0 (-8.54925e-31 iter/s, 0.074367s/100 iters), loss = 2.31234
I0428 19:38:49.320472 24138 solver.cpp:238]     Train net output #0: loss = 2.31234 (* 1 = 2.31234 loss)
I0428 19:38:49.320484 24138 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:49.402218 24138 solver.cpp:219] Iteration 100 (1223.49 iter/s, 0.0817334s/100 iters), loss = 1.91737
I0428 19:38:49.402247 24138 solver.cpp:238]     Train net output #0: loss = 1.91737 (* 1 = 1.91737 loss)
I0428 19:38:49.402256 24138 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:49.471971 24138 solver.cpp:219] Iteration 200 (1434.43 iter/s, 0.0697139s/100 iters), loss = 1.20528
I0428 19:38:49.471995 24138 solver.cpp:238]     Train net output #0: loss = 1.20528 (* 1 = 1.20528 loss)
I0428 19:38:49.472002 24138 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:49.540966 24138 solver.cpp:219] Iteration 300 (1450.09 iter/s, 0.0689613s/100 iters), loss = 0.589448
I0428 19:38:49.541007 24138 solver.cpp:238]     Train net output #0: loss = 0.589448 (* 1 = 0.589448 loss)
I0428 19:38:49.541013 24138 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:49.606716 24138 solver.cpp:219] Iteration 400 (1521.67 iter/s, 0.0657173s/100 iters), loss = 0.449758
I0428 19:38:49.606755 24138 solver.cpp:238]     Train net output #0: loss = 0.449758 (* 1 = 0.449758 loss)
I0428 19:38:49.606760 24138 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:49.672540 24138 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:49.725806 24147 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:49.726263 24138 solver.cpp:398]     Test net output #0: accuracy = 0.8723
I0428 19:38:49.726297 24138 solver.cpp:398]     Test net output #1: loss = 0.438872 (* 1 = 0.438872 loss)
I0428 19:38:49.727051 24138 solver.cpp:219] Iteration 500 (831.258 iter/s, 0.1203s/100 iters), loss = 0.561365
I0428 19:38:49.727088 24138 solver.cpp:238]     Train net output #0: loss = 0.561365 (* 1 = 0.561365 loss)
I0428 19:38:49.727113 24138 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:49.793006 24138 solver.cpp:219] Iteration 600 (1516.87 iter/s, 0.0659251s/100 iters), loss = 0.340712
I0428 19:38:49.793045 24138 solver.cpp:238]     Train net output #0: loss = 0.340712 (* 1 = 0.340712 loss)
I0428 19:38:49.793051 24138 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:49.859163 24138 solver.cpp:219] Iteration 700 (1512.29 iter/s, 0.0661248s/100 iters), loss = 0.563868
I0428 19:38:49.859200 24138 solver.cpp:238]     Train net output #0: loss = 0.563868 (* 1 = 0.563868 loss)
I0428 19:38:49.859206 24138 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:49.925133 24138 solver.cpp:219] Iteration 800 (1516.54 iter/s, 0.0659395s/100 iters), loss = 0.492434
I0428 19:38:49.925156 24138 solver.cpp:238]     Train net output #0: loss = 0.492434 (* 1 = 0.492434 loss)
I0428 19:38:49.925163 24138 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:49.991827 24138 solver.cpp:219] Iteration 900 (1500.35 iter/s, 0.0666511s/100 iters), loss = 0.494118
I0428 19:38:49.991850 24138 solver.cpp:238]     Train net output #0: loss = 0.494118 (* 1 = 0.494118 loss)
I0428 19:38:49.991856 24138 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:50.013754 24146 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:50.077885 24138 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:50.078728 24138 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:50.079295 24138 solver.cpp:311] Iteration 1000, loss = 0.356141
I0428 19:38:50.079319 24138 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:50.132737 24147 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:50.133225 24138 solver.cpp:398]     Test net output #0: accuracy = 0.9038
I0428 19:38:50.133252 24138 solver.cpp:398]     Test net output #1: loss = 0.312855 (* 1 = 0.312855 loss)
I0428 19:38:50.133261 24138 solver.cpp:316] Optimization Done.
I0428 19:38:50.133265 24138 caffe.cpp:259] Optimization Done.
