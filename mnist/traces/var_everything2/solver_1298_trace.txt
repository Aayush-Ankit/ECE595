I0428 20:17:34.985186   903 caffe.cpp:218] Using GPUs 0
I0428 20:17:35.021970   903 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:35.532331   903 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1298.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:35.532485   903 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1298.prototxt
I0428 20:17:35.532878   903 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:35.532897   903 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:35.532989   903 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:17:35.533061   903 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:35.533159   903 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:35.533184   903 net.cpp:86] Creating Layer mnist
I0428 20:17:35.533190   903 net.cpp:382] mnist -> data
I0428 20:17:35.533211   903 net.cpp:382] mnist -> label
I0428 20:17:35.534301   903 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:35.536773   903 net.cpp:124] Setting up mnist
I0428 20:17:35.536792   903 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:35.536799   903 net.cpp:131] Top shape: 64 (64)
I0428 20:17:35.536803   903 net.cpp:139] Memory required for data: 200960
I0428 20:17:35.536816   903 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:35.536833   903 net.cpp:86] Creating Layer conv0
I0428 20:17:35.536839   903 net.cpp:408] conv0 <- data
I0428 20:17:35.536852   903 net.cpp:382] conv0 -> conv0
I0428 20:17:35.812587   903 net.cpp:124] Setting up conv0
I0428 20:17:35.812613   903 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:35.812618   903 net.cpp:139] Memory required for data: 7573760
I0428 20:17:35.812649   903 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:35.812661   903 net.cpp:86] Creating Layer pool0
I0428 20:17:35.812665   903 net.cpp:408] pool0 <- conv0
I0428 20:17:35.812670   903 net.cpp:382] pool0 -> pool0
I0428 20:17:35.812716   903 net.cpp:124] Setting up pool0
I0428 20:17:35.812721   903 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:35.812723   903 net.cpp:139] Memory required for data: 9416960
I0428 20:17:35.812726   903 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:35.812736   903 net.cpp:86] Creating Layer conv1
I0428 20:17:35.812739   903 net.cpp:408] conv1 <- pool0
I0428 20:17:35.812744   903 net.cpp:382] conv1 -> conv1
I0428 20:17:35.815687   903 net.cpp:124] Setting up conv1
I0428 20:17:35.815717   903 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:35.815721   903 net.cpp:139] Memory required for data: 9580800
I0428 20:17:35.815731   903 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:35.815739   903 net.cpp:86] Creating Layer pool1
I0428 20:17:35.815743   903 net.cpp:408] pool1 <- conv1
I0428 20:17:35.815748   903 net.cpp:382] pool1 -> pool1
I0428 20:17:35.815798   903 net.cpp:124] Setting up pool1
I0428 20:17:35.815804   903 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:35.815806   903 net.cpp:139] Memory required for data: 9621760
I0428 20:17:35.815809   903 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:35.815815   903 net.cpp:86] Creating Layer ip1
I0428 20:17:35.815819   903 net.cpp:408] ip1 <- pool1
I0428 20:17:35.815824   903 net.cpp:382] ip1 -> ip1
I0428 20:17:35.815958   903 net.cpp:124] Setting up ip1
I0428 20:17:35.815965   903 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:35.815968   903 net.cpp:139] Memory required for data: 9634560
I0428 20:17:35.815974   903 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:35.815979   903 net.cpp:86] Creating Layer relu1
I0428 20:17:35.815982   903 net.cpp:408] relu1 <- ip1
I0428 20:17:35.815987   903 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:35.816141   903 net.cpp:124] Setting up relu1
I0428 20:17:35.816149   903 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:35.816153   903 net.cpp:139] Memory required for data: 9647360
I0428 20:17:35.816155   903 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:35.816161   903 net.cpp:86] Creating Layer ip2
I0428 20:17:35.816164   903 net.cpp:408] ip2 <- ip1
I0428 20:17:35.816169   903 net.cpp:382] ip2 -> ip2
I0428 20:17:35.816260   903 net.cpp:124] Setting up ip2
I0428 20:17:35.816267   903 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:35.816270   903 net.cpp:139] Memory required for data: 9649920
I0428 20:17:35.816275   903 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:35.816280   903 net.cpp:86] Creating Layer relu2
I0428 20:17:35.816283   903 net.cpp:408] relu2 <- ip2
I0428 20:17:35.816287   903 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:35.817039   903 net.cpp:124] Setting up relu2
I0428 20:17:35.817052   903 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:35.817071   903 net.cpp:139] Memory required for data: 9652480
I0428 20:17:35.817075   903 layer_factory.hpp:77] Creating layer loss
I0428 20:17:35.817081   903 net.cpp:86] Creating Layer loss
I0428 20:17:35.817085   903 net.cpp:408] loss <- ip2
I0428 20:17:35.817090   903 net.cpp:408] loss <- label
I0428 20:17:35.817095   903 net.cpp:382] loss -> loss
I0428 20:17:35.817111   903 layer_factory.hpp:77] Creating layer loss
I0428 20:17:35.817343   903 net.cpp:124] Setting up loss
I0428 20:17:35.817353   903 net.cpp:131] Top shape: (1)
I0428 20:17:35.817356   903 net.cpp:134]     with loss weight 1
I0428 20:17:35.817371   903 net.cpp:139] Memory required for data: 9652484
I0428 20:17:35.817374   903 net.cpp:200] loss needs backward computation.
I0428 20:17:35.817378   903 net.cpp:200] relu2 needs backward computation.
I0428 20:17:35.817381   903 net.cpp:200] ip2 needs backward computation.
I0428 20:17:35.817384   903 net.cpp:200] relu1 needs backward computation.
I0428 20:17:35.817386   903 net.cpp:200] ip1 needs backward computation.
I0428 20:17:35.817399   903 net.cpp:200] pool1 needs backward computation.
I0428 20:17:35.817402   903 net.cpp:200] conv1 needs backward computation.
I0428 20:17:35.817405   903 net.cpp:200] pool0 needs backward computation.
I0428 20:17:35.817409   903 net.cpp:200] conv0 needs backward computation.
I0428 20:17:35.817411   903 net.cpp:202] mnist does not need backward computation.
I0428 20:17:35.817414   903 net.cpp:244] This network produces output loss
I0428 20:17:35.817422   903 net.cpp:257] Network initialization done.
I0428 20:17:35.817739   903 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1298.prototxt
I0428 20:17:35.817765   903 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:35.817863   903 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:17:35.817937   903 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:35.817993   903 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:35.818004   903 net.cpp:86] Creating Layer mnist
I0428 20:17:35.818008   903 net.cpp:382] mnist -> data
I0428 20:17:35.818014   903 net.cpp:382] mnist -> label
I0428 20:17:35.818127   903 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:35.820107   903 net.cpp:124] Setting up mnist
I0428 20:17:35.820137   903 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:35.820142   903 net.cpp:131] Top shape: 100 (100)
I0428 20:17:35.820145   903 net.cpp:139] Memory required for data: 314000
I0428 20:17:35.820148   903 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:35.820169   903 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:35.820173   903 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:35.820191   903 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:35.820197   903 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:35.820318   903 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:35.820327   903 net.cpp:131] Top shape: 100 (100)
I0428 20:17:35.820330   903 net.cpp:131] Top shape: 100 (100)
I0428 20:17:35.820333   903 net.cpp:139] Memory required for data: 314800
I0428 20:17:35.820335   903 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:35.820344   903 net.cpp:86] Creating Layer conv0
I0428 20:17:35.820348   903 net.cpp:408] conv0 <- data
I0428 20:17:35.820351   903 net.cpp:382] conv0 -> conv0
I0428 20:17:35.822310   903 net.cpp:124] Setting up conv0
I0428 20:17:35.822338   903 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:35.822341   903 net.cpp:139] Memory required for data: 11834800
I0428 20:17:35.822350   903 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:35.822355   903 net.cpp:86] Creating Layer pool0
I0428 20:17:35.822358   903 net.cpp:408] pool0 <- conv0
I0428 20:17:35.822365   903 net.cpp:382] pool0 -> pool0
I0428 20:17:35.822399   903 net.cpp:124] Setting up pool0
I0428 20:17:35.822404   903 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:35.822407   903 net.cpp:139] Memory required for data: 14714800
I0428 20:17:35.822409   903 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:35.822419   903 net.cpp:86] Creating Layer conv1
I0428 20:17:35.822422   903 net.cpp:408] conv1 <- pool0
I0428 20:17:35.822427   903 net.cpp:382] conv1 -> conv1
I0428 20:17:35.824108   903 net.cpp:124] Setting up conv1
I0428 20:17:35.824122   903 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:35.824141   903 net.cpp:139] Memory required for data: 14970800
I0428 20:17:35.824149   903 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:35.824157   903 net.cpp:86] Creating Layer pool1
I0428 20:17:35.824162   903 net.cpp:408] pool1 <- conv1
I0428 20:17:35.824167   903 net.cpp:382] pool1 -> pool1
I0428 20:17:35.824219   903 net.cpp:124] Setting up pool1
I0428 20:17:35.824225   903 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:35.824234   903 net.cpp:139] Memory required for data: 15034800
I0428 20:17:35.824237   903 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:35.824244   903 net.cpp:86] Creating Layer ip1
I0428 20:17:35.824246   903 net.cpp:408] ip1 <- pool1
I0428 20:17:35.824252   903 net.cpp:382] ip1 -> ip1
I0428 20:17:35.824401   903 net.cpp:124] Setting up ip1
I0428 20:17:35.824410   903 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:35.824419   903 net.cpp:139] Memory required for data: 15054800
I0428 20:17:35.824427   903 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:35.824432   903 net.cpp:86] Creating Layer relu1
I0428 20:17:35.824435   903 net.cpp:408] relu1 <- ip1
I0428 20:17:35.824441   903 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:35.824669   903 net.cpp:124] Setting up relu1
I0428 20:17:35.824678   903 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:35.824681   903 net.cpp:139] Memory required for data: 15074800
I0428 20:17:35.824686   903 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:35.824693   903 net.cpp:86] Creating Layer ip2
I0428 20:17:35.824697   903 net.cpp:408] ip2 <- ip1
I0428 20:17:35.824702   903 net.cpp:382] ip2 -> ip2
I0428 20:17:35.824805   903 net.cpp:124] Setting up ip2
I0428 20:17:35.824836   903 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:35.824838   903 net.cpp:139] Memory required for data: 15078800
I0428 20:17:35.824856   903 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:35.824862   903 net.cpp:86] Creating Layer relu2
I0428 20:17:35.824864   903 net.cpp:408] relu2 <- ip2
I0428 20:17:35.824870   903 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:35.825053   903 net.cpp:124] Setting up relu2
I0428 20:17:35.825062   903 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:35.825073   903 net.cpp:139] Memory required for data: 15082800
I0428 20:17:35.825075   903 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:17:35.825081   903 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:17:35.825090   903 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:17:35.825096   903 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:17:35.825134   903 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:17:35.825173   903 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:17:35.825179   903 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:35.825182   903 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:35.825186   903 net.cpp:139] Memory required for data: 15090800
I0428 20:17:35.825189   903 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:35.825194   903 net.cpp:86] Creating Layer accuracy
I0428 20:17:35.825197   903 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:17:35.825201   903 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:35.825207   903 net.cpp:382] accuracy -> accuracy
I0428 20:17:35.825214   903 net.cpp:124] Setting up accuracy
I0428 20:17:35.825218   903 net.cpp:131] Top shape: (1)
I0428 20:17:35.825222   903 net.cpp:139] Memory required for data: 15090804
I0428 20:17:35.825224   903 layer_factory.hpp:77] Creating layer loss
I0428 20:17:35.825229   903 net.cpp:86] Creating Layer loss
I0428 20:17:35.825232   903 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:17:35.825237   903 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:35.825240   903 net.cpp:382] loss -> loss
I0428 20:17:35.825247   903 layer_factory.hpp:77] Creating layer loss
I0428 20:17:35.825650   903 net.cpp:124] Setting up loss
I0428 20:17:35.825660   903 net.cpp:131] Top shape: (1)
I0428 20:17:35.825665   903 net.cpp:134]     with loss weight 1
I0428 20:17:35.825670   903 net.cpp:139] Memory required for data: 15090808
I0428 20:17:35.825673   903 net.cpp:200] loss needs backward computation.
I0428 20:17:35.825683   903 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:35.825687   903 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:17:35.825690   903 net.cpp:200] relu2 needs backward computation.
I0428 20:17:35.825692   903 net.cpp:200] ip2 needs backward computation.
I0428 20:17:35.825700   903 net.cpp:200] relu1 needs backward computation.
I0428 20:17:35.825703   903 net.cpp:200] ip1 needs backward computation.
I0428 20:17:35.825706   903 net.cpp:200] pool1 needs backward computation.
I0428 20:17:35.825709   903 net.cpp:200] conv1 needs backward computation.
I0428 20:17:35.825711   903 net.cpp:200] pool0 needs backward computation.
I0428 20:17:35.825721   903 net.cpp:200] conv0 needs backward computation.
I0428 20:17:35.825737   903 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:35.825747   903 net.cpp:202] mnist does not need backward computation.
I0428 20:17:35.825748   903 net.cpp:244] This network produces output accuracy
I0428 20:17:35.825752   903 net.cpp:244] This network produces output loss
I0428 20:17:35.825762   903 net.cpp:257] Network initialization done.
I0428 20:17:35.825798   903 solver.cpp:56] Solver scaffolding done.
I0428 20:17:35.826068   903 caffe.cpp:248] Starting Optimization
I0428 20:17:35.826074   903 solver.cpp:273] Solving LeNet
I0428 20:17:35.826077   903 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:35.826910   903 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:35.832804   903 blocking_queue.cpp:49] Waiting for data
I0428 20:17:35.905875   910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:35.906569   903 solver.cpp:398]     Test net output #0: accuracy = 0.1062
I0428 20:17:35.906589   903 solver.cpp:398]     Test net output #1: loss = 2.32561 (* 1 = 2.32561 loss)
I0428 20:17:35.910871   903 solver.cpp:219] Iteration 0 (-2.53952e-31 iter/s, 0.0847672s/100 iters), loss = 2.32437
I0428 20:17:35.910894   903 solver.cpp:238]     Train net output #0: loss = 2.32437 (* 1 = 2.32437 loss)
I0428 20:17:35.910904   903 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:36.025681   903 solver.cpp:219] Iteration 100 (871.277 iter/s, 0.114774s/100 iters), loss = 0.447473
I0428 20:17:36.025718   903 solver.cpp:238]     Train net output #0: loss = 0.447473 (* 1 = 0.447473 loss)
I0428 20:17:36.025739   903 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:36.139952   903 solver.cpp:219] Iteration 200 (875.48 iter/s, 0.114223s/100 iters), loss = 0.18913
I0428 20:17:36.139977   903 solver.cpp:238]     Train net output #0: loss = 0.18913 (* 1 = 0.18913 loss)
I0428 20:17:36.139983   903 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:36.257514   903 solver.cpp:219] Iteration 300 (850.872 iter/s, 0.117527s/100 iters), loss = 0.321008
I0428 20:17:36.257539   903 solver.cpp:238]     Train net output #0: loss = 0.321008 (* 1 = 0.321008 loss)
I0428 20:17:36.257544   903 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:36.375355   903 solver.cpp:219] Iteration 400 (848.867 iter/s, 0.117804s/100 iters), loss = 0.140816
I0428 20:17:36.375380   903 solver.cpp:238]     Train net output #0: loss = 0.140816 (* 1 = 0.140816 loss)
I0428 20:17:36.375385   903 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:36.491668   903 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:36.554430   910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:36.556641   903 solver.cpp:398]     Test net output #0: accuracy = 0.9618
I0428 20:17:36.556679   903 solver.cpp:398]     Test net output #1: loss = 0.12023 (* 1 = 0.12023 loss)
I0428 20:17:36.557793   903 solver.cpp:219] Iteration 500 (548.286 iter/s, 0.182387s/100 iters), loss = 0.19223
I0428 20:17:36.557816   903 solver.cpp:238]     Train net output #0: loss = 0.19223 (* 1 = 0.19223 loss)
I0428 20:17:36.557822   903 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:36.671596   903 solver.cpp:219] Iteration 600 (878.97 iter/s, 0.113769s/100 iters), loss = 0.0973155
I0428 20:17:36.671619   903 solver.cpp:238]     Train net output #0: loss = 0.0973155 (* 1 = 0.0973155 loss)
I0428 20:17:36.671625   903 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:36.785316   903 solver.cpp:219] Iteration 700 (879.62 iter/s, 0.113686s/100 iters), loss = 0.160157
I0428 20:17:36.785339   903 solver.cpp:238]     Train net output #0: loss = 0.160157 (* 1 = 0.160157 loss)
I0428 20:17:36.785362   903 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:36.898432   903 solver.cpp:219] Iteration 800 (884.311 iter/s, 0.113082s/100 iters), loss = 0.216694
I0428 20:17:36.898455   903 solver.cpp:238]     Train net output #0: loss = 0.216695 (* 1 = 0.216695 loss)
I0428 20:17:36.898461   903 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:37.011023   903 solver.cpp:219] Iteration 900 (888.446 iter/s, 0.112556s/100 iters), loss = 0.196168
I0428 20:17:37.011046   903 solver.cpp:238]     Train net output #0: loss = 0.196168 (* 1 = 0.196168 loss)
I0428 20:17:37.011067   903 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:37.048661   909 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:37.122356   903 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:37.123520   903 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:37.124276   903 solver.cpp:311] Iteration 1000, loss = 0.168296
I0428 20:17:37.124291   903 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:37.185997   910 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:37.188179   903 solver.cpp:398]     Test net output #0: accuracy = 0.9695
I0428 20:17:37.188197   903 solver.cpp:398]     Test net output #1: loss = 0.0895511 (* 1 = 0.0895511 loss)
I0428 20:17:37.188202   903 solver.cpp:316] Optimization Done.
I0428 20:17:37.188205   903 caffe.cpp:259] Optimization Done.
