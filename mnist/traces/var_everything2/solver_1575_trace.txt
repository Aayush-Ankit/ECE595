I0428 20:32:38.568948  4130 caffe.cpp:218] Using GPUs 0
I0428 20:32:38.605825  4130 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:39.055941  4130 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1575.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:39.056098  4130 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1575.prototxt
I0428 20:32:39.056444  4130 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:39.056465  4130 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:39.056550  4130 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:39.056638  4130 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:39.056744  4130 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:39.056769  4130 net.cpp:86] Creating Layer mnist
I0428 20:32:39.056780  4130 net.cpp:382] mnist -> data
I0428 20:32:39.056804  4130 net.cpp:382] mnist -> label
I0428 20:32:39.057947  4130 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:39.060221  4130 net.cpp:124] Setting up mnist
I0428 20:32:39.060252  4130 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:39.060261  4130 net.cpp:131] Top shape: 64 (64)
I0428 20:32:39.060266  4130 net.cpp:139] Memory required for data: 200960
I0428 20:32:39.060273  4130 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:39.060308  4130 net.cpp:86] Creating Layer conv0
I0428 20:32:39.060329  4130 net.cpp:408] conv0 <- data
I0428 20:32:39.060348  4130 net.cpp:382] conv0 -> conv0
I0428 20:32:39.294431  4130 net.cpp:124] Setting up conv0
I0428 20:32:39.294462  4130 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:39.294467  4130 net.cpp:139] Memory required for data: 14946560
I0428 20:32:39.294487  4130 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:39.294503  4130 net.cpp:86] Creating Layer pool0
I0428 20:32:39.294515  4130 net.cpp:408] pool0 <- conv0
I0428 20:32:39.294524  4130 net.cpp:382] pool0 -> pool0
I0428 20:32:39.294579  4130 net.cpp:124] Setting up pool0
I0428 20:32:39.294586  4130 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:39.294591  4130 net.cpp:139] Memory required for data: 18632960
I0428 20:32:39.294596  4130 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:39.294610  4130 net.cpp:86] Creating Layer conv1
I0428 20:32:39.294616  4130 net.cpp:408] conv1 <- pool0
I0428 20:32:39.294625  4130 net.cpp:382] conv1 -> conv1
I0428 20:32:39.296936  4130 net.cpp:124] Setting up conv1
I0428 20:32:39.296953  4130 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:39.296959  4130 net.cpp:139] Memory required for data: 19042560
I0428 20:32:39.296988  4130 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:39.297016  4130 net.cpp:86] Creating Layer pool1
I0428 20:32:39.297022  4130 net.cpp:408] pool1 <- conv1
I0428 20:32:39.297031  4130 net.cpp:382] pool1 -> pool1
I0428 20:32:39.297077  4130 net.cpp:124] Setting up pool1
I0428 20:32:39.297086  4130 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:39.297092  4130 net.cpp:139] Memory required for data: 19144960
I0428 20:32:39.297097  4130 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:39.297109  4130 net.cpp:86] Creating Layer ip1
I0428 20:32:39.297135  4130 net.cpp:408] ip1 <- pool1
I0428 20:32:39.297144  4130 net.cpp:382] ip1 -> ip1
I0428 20:32:39.297291  4130 net.cpp:124] Setting up ip1
I0428 20:32:39.297299  4130 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:39.297304  4130 net.cpp:139] Memory required for data: 19147520
I0428 20:32:39.297330  4130 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:39.297343  4130 net.cpp:86] Creating Layer relu1
I0428 20:32:39.297350  4130 net.cpp:408] relu1 <- ip1
I0428 20:32:39.297358  4130 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:39.297538  4130 net.cpp:124] Setting up relu1
I0428 20:32:39.297547  4130 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:39.297552  4130 net.cpp:139] Memory required for data: 19150080
I0428 20:32:39.297557  4130 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:39.297566  4130 net.cpp:86] Creating Layer ip2
I0428 20:32:39.297572  4130 net.cpp:408] ip2 <- ip1
I0428 20:32:39.297582  4130 net.cpp:382] ip2 -> ip2
I0428 20:32:39.297675  4130 net.cpp:124] Setting up ip2
I0428 20:32:39.297683  4130 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:39.297688  4130 net.cpp:139] Memory required for data: 19156480
I0428 20:32:39.297698  4130 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:39.297706  4130 net.cpp:86] Creating Layer relu2
I0428 20:32:39.297711  4130 net.cpp:408] relu2 <- ip2
I0428 20:32:39.297719  4130 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:39.298393  4130 net.cpp:124] Setting up relu2
I0428 20:32:39.298406  4130 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:32:39.298425  4130 net.cpp:139] Memory required for data: 19162880
I0428 20:32:39.298430  4130 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:39.298456  4130 net.cpp:86] Creating Layer ip3
I0428 20:32:39.298461  4130 net.cpp:408] ip3 <- ip2
I0428 20:32:39.298470  4130 net.cpp:382] ip3 -> ip3
I0428 20:32:39.298599  4130 net.cpp:124] Setting up ip3
I0428 20:32:39.298609  4130 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:39.298614  4130 net.cpp:139] Memory required for data: 19165440
I0428 20:32:39.298629  4130 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:39.298637  4130 net.cpp:86] Creating Layer relu3
I0428 20:32:39.298642  4130 net.cpp:408] relu3 <- ip3
I0428 20:32:39.298650  4130 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:39.298835  4130 net.cpp:124] Setting up relu3
I0428 20:32:39.298846  4130 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:39.298851  4130 net.cpp:139] Memory required for data: 19168000
I0428 20:32:39.298869  4130 layer_factory.hpp:77] Creating layer loss
I0428 20:32:39.298878  4130 net.cpp:86] Creating Layer loss
I0428 20:32:39.298883  4130 net.cpp:408] loss <- ip3
I0428 20:32:39.298889  4130 net.cpp:408] loss <- label
I0428 20:32:39.298897  4130 net.cpp:382] loss -> loss
I0428 20:32:39.298919  4130 layer_factory.hpp:77] Creating layer loss
I0428 20:32:39.299132  4130 net.cpp:124] Setting up loss
I0428 20:32:39.299142  4130 net.cpp:131] Top shape: (1)
I0428 20:32:39.299147  4130 net.cpp:134]     with loss weight 1
I0428 20:32:39.299165  4130 net.cpp:139] Memory required for data: 19168004
I0428 20:32:39.299171  4130 net.cpp:200] loss needs backward computation.
I0428 20:32:39.299177  4130 net.cpp:200] relu3 needs backward computation.
I0428 20:32:39.299181  4130 net.cpp:200] ip3 needs backward computation.
I0428 20:32:39.299202  4130 net.cpp:200] relu2 needs backward computation.
I0428 20:32:39.299222  4130 net.cpp:200] ip2 needs backward computation.
I0428 20:32:39.299227  4130 net.cpp:200] relu1 needs backward computation.
I0428 20:32:39.299232  4130 net.cpp:200] ip1 needs backward computation.
I0428 20:32:39.299237  4130 net.cpp:200] pool1 needs backward computation.
I0428 20:32:39.299242  4130 net.cpp:200] conv1 needs backward computation.
I0428 20:32:39.299249  4130 net.cpp:200] pool0 needs backward computation.
I0428 20:32:39.299254  4130 net.cpp:200] conv0 needs backward computation.
I0428 20:32:39.299259  4130 net.cpp:202] mnist does not need backward computation.
I0428 20:32:39.299264  4130 net.cpp:244] This network produces output loss
I0428 20:32:39.299278  4130 net.cpp:257] Network initialization done.
I0428 20:32:39.299674  4130 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1575.prototxt
I0428 20:32:39.299706  4130 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:39.299798  4130 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:39.299908  4130 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:39.299963  4130 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:39.299985  4130 net.cpp:86] Creating Layer mnist
I0428 20:32:39.299993  4130 net.cpp:382] mnist -> data
I0428 20:32:39.300004  4130 net.cpp:382] mnist -> label
I0428 20:32:39.300118  4130 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:39.302325  4130 net.cpp:124] Setting up mnist
I0428 20:32:39.302356  4130 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:39.302362  4130 net.cpp:131] Top shape: 100 (100)
I0428 20:32:39.302367  4130 net.cpp:139] Memory required for data: 314000
I0428 20:32:39.302373  4130 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:39.302386  4130 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:39.302392  4130 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:39.302399  4130 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:39.302409  4130 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:39.302536  4130 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:39.302546  4130 net.cpp:131] Top shape: 100 (100)
I0428 20:32:39.302552  4130 net.cpp:131] Top shape: 100 (100)
I0428 20:32:39.302557  4130 net.cpp:139] Memory required for data: 314800
I0428 20:32:39.302562  4130 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:39.302577  4130 net.cpp:86] Creating Layer conv0
I0428 20:32:39.302582  4130 net.cpp:408] conv0 <- data
I0428 20:32:39.302592  4130 net.cpp:382] conv0 -> conv0
I0428 20:32:39.304188  4130 net.cpp:124] Setting up conv0
I0428 20:32:39.304203  4130 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:39.304208  4130 net.cpp:139] Memory required for data: 23354800
I0428 20:32:39.304221  4130 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:39.304230  4130 net.cpp:86] Creating Layer pool0
I0428 20:32:39.304237  4130 net.cpp:408] pool0 <- conv0
I0428 20:32:39.304244  4130 net.cpp:382] pool0 -> pool0
I0428 20:32:39.304283  4130 net.cpp:124] Setting up pool0
I0428 20:32:39.304291  4130 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:39.304296  4130 net.cpp:139] Memory required for data: 29114800
I0428 20:32:39.304301  4130 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:39.304313  4130 net.cpp:86] Creating Layer conv1
I0428 20:32:39.304319  4130 net.cpp:408] conv1 <- pool0
I0428 20:32:39.304328  4130 net.cpp:382] conv1 -> conv1
I0428 20:32:39.306274  4130 net.cpp:124] Setting up conv1
I0428 20:32:39.306289  4130 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:39.306296  4130 net.cpp:139] Memory required for data: 29754800
I0428 20:32:39.306325  4130 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:39.306335  4130 net.cpp:86] Creating Layer pool1
I0428 20:32:39.306340  4130 net.cpp:408] pool1 <- conv1
I0428 20:32:39.306349  4130 net.cpp:382] pool1 -> pool1
I0428 20:32:39.306398  4130 net.cpp:124] Setting up pool1
I0428 20:32:39.306406  4130 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:39.306411  4130 net.cpp:139] Memory required for data: 29914800
I0428 20:32:39.306417  4130 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:39.306427  4130 net.cpp:86] Creating Layer ip1
I0428 20:32:39.306432  4130 net.cpp:408] ip1 <- pool1
I0428 20:32:39.306439  4130 net.cpp:382] ip1 -> ip1
I0428 20:32:39.306579  4130 net.cpp:124] Setting up ip1
I0428 20:32:39.306599  4130 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:39.306605  4130 net.cpp:139] Memory required for data: 29918800
I0428 20:32:39.306617  4130 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:39.306627  4130 net.cpp:86] Creating Layer relu1
I0428 20:32:39.306633  4130 net.cpp:408] relu1 <- ip1
I0428 20:32:39.306640  4130 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:39.306823  4130 net.cpp:124] Setting up relu1
I0428 20:32:39.306833  4130 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:39.306839  4130 net.cpp:139] Memory required for data: 29922800
I0428 20:32:39.306844  4130 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:39.306871  4130 net.cpp:86] Creating Layer ip2
I0428 20:32:39.306877  4130 net.cpp:408] ip2 <- ip1
I0428 20:32:39.306886  4130 net.cpp:382] ip2 -> ip2
I0428 20:32:39.306988  4130 net.cpp:124] Setting up ip2
I0428 20:32:39.306998  4130 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:39.307004  4130 net.cpp:139] Memory required for data: 29932800
I0428 20:32:39.307013  4130 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:39.307021  4130 net.cpp:86] Creating Layer relu2
I0428 20:32:39.307029  4130 net.cpp:408] relu2 <- ip2
I0428 20:32:39.307035  4130 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:39.307220  4130 net.cpp:124] Setting up relu2
I0428 20:32:39.307230  4130 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:32:39.307250  4130 net.cpp:139] Memory required for data: 29942800
I0428 20:32:39.307256  4130 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:39.307265  4130 net.cpp:86] Creating Layer ip3
I0428 20:32:39.307288  4130 net.cpp:408] ip3 <- ip2
I0428 20:32:39.307298  4130 net.cpp:382] ip3 -> ip3
I0428 20:32:39.307445  4130 net.cpp:124] Setting up ip3
I0428 20:32:39.307468  4130 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:39.307473  4130 net.cpp:139] Memory required for data: 29946800
I0428 20:32:39.307487  4130 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:39.307497  4130 net.cpp:86] Creating Layer relu3
I0428 20:32:39.307503  4130 net.cpp:408] relu3 <- ip3
I0428 20:32:39.307512  4130 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:39.308395  4130 net.cpp:124] Setting up relu3
I0428 20:32:39.308409  4130 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:39.308415  4130 net.cpp:139] Memory required for data: 29950800
I0428 20:32:39.308421  4130 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:32:39.308429  4130 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:32:39.308435  4130 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:32:39.308444  4130 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:32:39.308454  4130 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:32:39.308509  4130 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:32:39.308517  4130 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:39.308523  4130 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:39.308528  4130 net.cpp:139] Memory required for data: 29958800
I0428 20:32:39.308534  4130 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:39.308542  4130 net.cpp:86] Creating Layer accuracy
I0428 20:32:39.308547  4130 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:32:39.308555  4130 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:39.308569  4130 net.cpp:382] accuracy -> accuracy
I0428 20:32:39.308580  4130 net.cpp:124] Setting up accuracy
I0428 20:32:39.308588  4130 net.cpp:131] Top shape: (1)
I0428 20:32:39.308593  4130 net.cpp:139] Memory required for data: 29958804
I0428 20:32:39.308598  4130 layer_factory.hpp:77] Creating layer loss
I0428 20:32:39.308606  4130 net.cpp:86] Creating Layer loss
I0428 20:32:39.308612  4130 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:32:39.308619  4130 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:39.308625  4130 net.cpp:382] loss -> loss
I0428 20:32:39.308634  4130 layer_factory.hpp:77] Creating layer loss
I0428 20:32:39.308953  4130 net.cpp:124] Setting up loss
I0428 20:32:39.308965  4130 net.cpp:131] Top shape: (1)
I0428 20:32:39.308972  4130 net.cpp:134]     with loss weight 1
I0428 20:32:39.308995  4130 net.cpp:139] Memory required for data: 29958808
I0428 20:32:39.309001  4130 net.cpp:200] loss needs backward computation.
I0428 20:32:39.309008  4130 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:39.309015  4130 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:32:39.309021  4130 net.cpp:200] relu3 needs backward computation.
I0428 20:32:39.309027  4130 net.cpp:200] ip3 needs backward computation.
I0428 20:32:39.309033  4130 net.cpp:200] relu2 needs backward computation.
I0428 20:32:39.309039  4130 net.cpp:200] ip2 needs backward computation.
I0428 20:32:39.309061  4130 net.cpp:200] relu1 needs backward computation.
I0428 20:32:39.309067  4130 net.cpp:200] ip1 needs backward computation.
I0428 20:32:39.309072  4130 net.cpp:200] pool1 needs backward computation.
I0428 20:32:39.309078  4130 net.cpp:200] conv1 needs backward computation.
I0428 20:32:39.309084  4130 net.cpp:200] pool0 needs backward computation.
I0428 20:32:39.309098  4130 net.cpp:200] conv0 needs backward computation.
I0428 20:32:39.309105  4130 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:39.309126  4130 net.cpp:202] mnist does not need backward computation.
I0428 20:32:39.309131  4130 net.cpp:244] This network produces output accuracy
I0428 20:32:39.309152  4130 net.cpp:244] This network produces output loss
I0428 20:32:39.309180  4130 net.cpp:257] Network initialization done.
I0428 20:32:39.309228  4130 solver.cpp:56] Solver scaffolding done.
I0428 20:32:39.309648  4130 caffe.cpp:248] Starting Optimization
I0428 20:32:39.309655  4130 solver.cpp:273] Solving LeNet
I0428 20:32:39.309660  4130 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:39.309880  4130 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:39.407971  4137 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:39.410548  4130 solver.cpp:398]     Test net output #0: accuracy = 0.1075
I0428 20:32:39.410570  4130 solver.cpp:398]     Test net output #1: loss = 2.30788 (* 1 = 2.30788 loss)
I0428 20:32:39.415105  4130 solver.cpp:219] Iteration 0 (0 iter/s, 0.105414s/100 iters), loss = 2.30215
I0428 20:32:39.415148  4130 solver.cpp:238]     Train net output #0: loss = 2.30215 (* 1 = 2.30215 loss)
I0428 20:32:39.415179  4130 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:39.636385  4130 solver.cpp:219] Iteration 100 (452.037 iter/s, 0.221221s/100 iters), loss = 0.350481
I0428 20:32:39.636438  4130 solver.cpp:238]     Train net output #0: loss = 0.350481 (* 1 = 0.350481 loss)
I0428 20:32:39.636456  4130 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:39.870668  4130 solver.cpp:219] Iteration 200 (426.954 iter/s, 0.234217s/100 iters), loss = 0.321866
I0428 20:32:39.870721  4130 solver.cpp:238]     Train net output #0: loss = 0.321866 (* 1 = 0.321866 loss)
I0428 20:32:39.870740  4130 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:40.109642  4130 solver.cpp:219] Iteration 300 (418.571 iter/s, 0.238908s/100 iters), loss = 0.265784
I0428 20:32:40.109697  4130 solver.cpp:238]     Train net output #0: loss = 0.265784 (* 1 = 0.265784 loss)
I0428 20:32:40.109716  4130 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:40.349824  4130 solver.cpp:219] Iteration 400 (416.468 iter/s, 0.240115s/100 iters), loss = 0.124351
I0428 20:32:40.349879  4130 solver.cpp:238]     Train net output #0: loss = 0.124351 (* 1 = 0.124351 loss)
I0428 20:32:40.349898  4130 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:40.581650  4130 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:40.685647  4137 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:40.689268  4130 solver.cpp:398]     Test net output #0: accuracy = 0.963
I0428 20:32:40.689296  4130 solver.cpp:398]     Test net output #1: loss = 0.123737 (* 1 = 0.123737 loss)
I0428 20:32:40.691311  4130 solver.cpp:219] Iteration 500 (292.895 iter/s, 0.341419s/100 iters), loss = 0.116352
I0428 20:32:40.691341  4130 solver.cpp:238]     Train net output #0: loss = 0.116352 (* 1 = 0.116352 loss)
I0428 20:32:40.691371  4130 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:40.908179  4130 solver.cpp:219] Iteration 600 (461.204 iter/s, 0.216824s/100 iters), loss = 0.0729717
I0428 20:32:40.908221  4130 solver.cpp:238]     Train net output #0: loss = 0.0729717 (* 1 = 0.0729717 loss)
I0428 20:32:40.908236  4130 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:41.129427  4130 solver.cpp:219] Iteration 700 (452.093 iter/s, 0.221193s/100 iters), loss = 0.158411
I0428 20:32:41.129473  4130 solver.cpp:238]     Train net output #0: loss = 0.158411 (* 1 = 0.158411 loss)
I0428 20:32:41.129489  4130 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:41.351954  4130 solver.cpp:219] Iteration 800 (449.502 iter/s, 0.222468s/100 iters), loss = 0.242739
I0428 20:32:41.352001  4130 solver.cpp:238]     Train net output #0: loss = 0.242739 (* 1 = 0.242739 loss)
I0428 20:32:41.352018  4130 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:41.572762  4130 solver.cpp:219] Iteration 900 (453.008 iter/s, 0.220747s/100 iters), loss = 0.158435
I0428 20:32:41.572821  4130 solver.cpp:238]     Train net output #0: loss = 0.158435 (* 1 = 0.158435 loss)
I0428 20:32:41.572840  4130 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:41.648217  4136 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:41.799265  4130 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:41.802273  4130 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:41.804213  4130 solver.cpp:311] Iteration 1000, loss = 0.185586
I0428 20:32:41.804241  4130 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:41.908058  4137 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:41.911603  4130 solver.cpp:398]     Test net output #0: accuracy = 0.9741
I0428 20:32:41.911628  4130 solver.cpp:398]     Test net output #1: loss = 0.082842 (* 1 = 0.082842 loss)
I0428 20:32:41.911634  4130 solver.cpp:316] Optimization Done.
I0428 20:32:41.911638  4130 caffe.cpp:259] Optimization Done.
