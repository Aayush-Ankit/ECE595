I0428 20:09:14.444536 31583 caffe.cpp:218] Using GPUs 0
I0428 20:09:14.485486 31583 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:15.001878 31583 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1104.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:15.002046 31583 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1104.prototxt
I0428 20:09:15.002475 31583 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:15.002501 31583 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:15.002615 31583 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:15.002734 31583 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:15.002876 31583 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:15.002909 31583 net.cpp:86] Creating Layer mnist
I0428 20:09:15.002921 31583 net.cpp:382] mnist -> data
I0428 20:09:15.002951 31583 net.cpp:382] mnist -> label
I0428 20:09:15.004232 31583 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:15.006947 31583 net.cpp:124] Setting up mnist
I0428 20:09:15.006968 31583 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:15.006978 31583 net.cpp:131] Top shape: 64 (64)
I0428 20:09:15.006984 31583 net.cpp:139] Memory required for data: 200960
I0428 20:09:15.006995 31583 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:15.007021 31583 net.cpp:86] Creating Layer conv0
I0428 20:09:15.007046 31583 net.cpp:408] conv0 <- data
I0428 20:09:15.007068 31583 net.cpp:382] conv0 -> conv0
I0428 20:09:15.299661 31583 net.cpp:124] Setting up conv0
I0428 20:09:15.299696 31583 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:15.299703 31583 net.cpp:139] Memory required for data: 3887360
I0428 20:09:15.299728 31583 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:15.299751 31583 net.cpp:86] Creating Layer pool0
I0428 20:09:15.299758 31583 net.cpp:408] pool0 <- conv0
I0428 20:09:15.299769 31583 net.cpp:382] pool0 -> pool0
I0428 20:09:15.299841 31583 net.cpp:124] Setting up pool0
I0428 20:09:15.299852 31583 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:15.299859 31583 net.cpp:139] Memory required for data: 4808960
I0428 20:09:15.299865 31583 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:15.299885 31583 net.cpp:86] Creating Layer conv1
I0428 20:09:15.299893 31583 net.cpp:408] conv1 <- pool0
I0428 20:09:15.299903 31583 net.cpp:382] conv1 -> conv1
I0428 20:09:15.303175 31583 net.cpp:124] Setting up conv1
I0428 20:09:15.303195 31583 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:15.303203 31583 net.cpp:139] Memory required for data: 5218560
I0428 20:09:15.303220 31583 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:15.303234 31583 net.cpp:86] Creating Layer pool1
I0428 20:09:15.303241 31583 net.cpp:408] pool1 <- conv1
I0428 20:09:15.303251 31583 net.cpp:382] pool1 -> pool1
I0428 20:09:15.303305 31583 net.cpp:124] Setting up pool1
I0428 20:09:15.303318 31583 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:15.303323 31583 net.cpp:139] Memory required for data: 5320960
I0428 20:09:15.303329 31583 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:15.303342 31583 net.cpp:86] Creating Layer ip1
I0428 20:09:15.303349 31583 net.cpp:408] ip1 <- pool1
I0428 20:09:15.303359 31583 net.cpp:382] ip1 -> ip1
I0428 20:09:15.304486 31583 net.cpp:124] Setting up ip1
I0428 20:09:15.304504 31583 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:15.304512 31583 net.cpp:139] Memory required for data: 5323520
I0428 20:09:15.304527 31583 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:15.304539 31583 net.cpp:86] Creating Layer relu1
I0428 20:09:15.304553 31583 net.cpp:408] relu1 <- ip1
I0428 20:09:15.304563 31583 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:15.304776 31583 net.cpp:124] Setting up relu1
I0428 20:09:15.304790 31583 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:15.304795 31583 net.cpp:139] Memory required for data: 5326080
I0428 20:09:15.304802 31583 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:15.304821 31583 net.cpp:86] Creating Layer ip2
I0428 20:09:15.304827 31583 net.cpp:408] ip2 <- ip1
I0428 20:09:15.304838 31583 net.cpp:382] ip2 -> ip2
I0428 20:09:15.304968 31583 net.cpp:124] Setting up ip2
I0428 20:09:15.304980 31583 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:15.304986 31583 net.cpp:139] Memory required for data: 5328640
I0428 20:09:15.304997 31583 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:15.305009 31583 net.cpp:86] Creating Layer relu2
I0428 20:09:15.305022 31583 net.cpp:408] relu2 <- ip2
I0428 20:09:15.305030 31583 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:15.305901 31583 net.cpp:124] Setting up relu2
I0428 20:09:15.305917 31583 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:15.305924 31583 net.cpp:139] Memory required for data: 5331200
I0428 20:09:15.305932 31583 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:15.305943 31583 net.cpp:86] Creating Layer ip3
I0428 20:09:15.305951 31583 net.cpp:408] ip3 <- ip2
I0428 20:09:15.305963 31583 net.cpp:382] ip3 -> ip3
I0428 20:09:15.306094 31583 net.cpp:124] Setting up ip3
I0428 20:09:15.306107 31583 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:15.306113 31583 net.cpp:139] Memory required for data: 5333760
I0428 20:09:15.306128 31583 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:15.306143 31583 net.cpp:86] Creating Layer relu3
I0428 20:09:15.306154 31583 net.cpp:408] relu3 <- ip3
I0428 20:09:15.306164 31583 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:15.306378 31583 net.cpp:124] Setting up relu3
I0428 20:09:15.306391 31583 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:15.306397 31583 net.cpp:139] Memory required for data: 5336320
I0428 20:09:15.306404 31583 layer_factory.hpp:77] Creating layer loss
I0428 20:09:15.306414 31583 net.cpp:86] Creating Layer loss
I0428 20:09:15.306421 31583 net.cpp:408] loss <- ip3
I0428 20:09:15.306430 31583 net.cpp:408] loss <- label
I0428 20:09:15.306442 31583 net.cpp:382] loss -> loss
I0428 20:09:15.306469 31583 layer_factory.hpp:77] Creating layer loss
I0428 20:09:15.306756 31583 net.cpp:124] Setting up loss
I0428 20:09:15.306771 31583 net.cpp:131] Top shape: (1)
I0428 20:09:15.306777 31583 net.cpp:134]     with loss weight 1
I0428 20:09:15.306800 31583 net.cpp:139] Memory required for data: 5336324
I0428 20:09:15.306808 31583 net.cpp:200] loss needs backward computation.
I0428 20:09:15.306815 31583 net.cpp:200] relu3 needs backward computation.
I0428 20:09:15.306821 31583 net.cpp:200] ip3 needs backward computation.
I0428 20:09:15.306828 31583 net.cpp:200] relu2 needs backward computation.
I0428 20:09:15.306834 31583 net.cpp:200] ip2 needs backward computation.
I0428 20:09:15.306840 31583 net.cpp:200] relu1 needs backward computation.
I0428 20:09:15.306845 31583 net.cpp:200] ip1 needs backward computation.
I0428 20:09:15.306852 31583 net.cpp:200] pool1 needs backward computation.
I0428 20:09:15.306859 31583 net.cpp:200] conv1 needs backward computation.
I0428 20:09:15.306864 31583 net.cpp:200] pool0 needs backward computation.
I0428 20:09:15.306871 31583 net.cpp:200] conv0 needs backward computation.
I0428 20:09:15.306879 31583 net.cpp:202] mnist does not need backward computation.
I0428 20:09:15.306885 31583 net.cpp:244] This network produces output loss
I0428 20:09:15.306901 31583 net.cpp:257] Network initialization done.
I0428 20:09:15.307294 31583 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1104.prototxt
I0428 20:09:15.307337 31583 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:15.307456 31583 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:09:15.307591 31583 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:15.307663 31583 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:15.307685 31583 net.cpp:86] Creating Layer mnist
I0428 20:09:15.307694 31583 net.cpp:382] mnist -> data
I0428 20:09:15.307709 31583 net.cpp:382] mnist -> label
I0428 20:09:15.307854 31583 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:15.310252 31583 net.cpp:124] Setting up mnist
I0428 20:09:15.310271 31583 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:15.310281 31583 net.cpp:131] Top shape: 100 (100)
I0428 20:09:15.310287 31583 net.cpp:139] Memory required for data: 314000
I0428 20:09:15.310295 31583 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:15.310308 31583 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:15.310315 31583 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:15.310324 31583 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:15.310338 31583 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:15.310467 31583 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:15.310478 31583 net.cpp:131] Top shape: 100 (100)
I0428 20:09:15.310487 31583 net.cpp:131] Top shape: 100 (100)
I0428 20:09:15.310493 31583 net.cpp:139] Memory required for data: 314800
I0428 20:09:15.310500 31583 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:15.310516 31583 net.cpp:86] Creating Layer conv0
I0428 20:09:15.310524 31583 net.cpp:408] conv0 <- data
I0428 20:09:15.310535 31583 net.cpp:382] conv0 -> conv0
I0428 20:09:15.312197 31583 net.cpp:124] Setting up conv0
I0428 20:09:15.312216 31583 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:15.312224 31583 net.cpp:139] Memory required for data: 6074800
I0428 20:09:15.312240 31583 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:15.312253 31583 net.cpp:86] Creating Layer pool0
I0428 20:09:15.312260 31583 net.cpp:408] pool0 <- conv0
I0428 20:09:15.312270 31583 net.cpp:382] pool0 -> pool0
I0428 20:09:15.312325 31583 net.cpp:124] Setting up pool0
I0428 20:09:15.312335 31583 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:15.312341 31583 net.cpp:139] Memory required for data: 7514800
I0428 20:09:15.312347 31583 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:15.312363 31583 net.cpp:86] Creating Layer conv1
I0428 20:09:15.312371 31583 net.cpp:408] conv1 <- pool0
I0428 20:09:15.312382 31583 net.cpp:382] conv1 -> conv1
I0428 20:09:15.314915 31583 net.cpp:124] Setting up conv1
I0428 20:09:15.314935 31583 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:15.314942 31583 net.cpp:139] Memory required for data: 8154800
I0428 20:09:15.314960 31583 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:15.314976 31583 net.cpp:86] Creating Layer pool1
I0428 20:09:15.314987 31583 net.cpp:408] pool1 <- conv1
I0428 20:09:15.314997 31583 net.cpp:382] pool1 -> pool1
I0428 20:09:15.315064 31583 net.cpp:124] Setting up pool1
I0428 20:09:15.315075 31583 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:15.315081 31583 net.cpp:139] Memory required for data: 8314800
I0428 20:09:15.315086 31583 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:15.315099 31583 net.cpp:86] Creating Layer ip1
I0428 20:09:15.315104 31583 net.cpp:408] ip1 <- pool1
I0428 20:09:15.315116 31583 net.cpp:382] ip1 -> ip1
I0428 20:09:15.315277 31583 net.cpp:124] Setting up ip1
I0428 20:09:15.315289 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.315310 31583 net.cpp:139] Memory required for data: 8318800
I0428 20:09:15.315330 31583 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:15.315340 31583 net.cpp:86] Creating Layer relu1
I0428 20:09:15.315346 31583 net.cpp:408] relu1 <- ip1
I0428 20:09:15.315357 31583 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:15.315567 31583 net.cpp:124] Setting up relu1
I0428 20:09:15.315579 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.315587 31583 net.cpp:139] Memory required for data: 8322800
I0428 20:09:15.315593 31583 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:15.315608 31583 net.cpp:86] Creating Layer ip2
I0428 20:09:15.315616 31583 net.cpp:408] ip2 <- ip1
I0428 20:09:15.315629 31583 net.cpp:382] ip2 -> ip2
I0428 20:09:15.315755 31583 net.cpp:124] Setting up ip2
I0428 20:09:15.315767 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.315773 31583 net.cpp:139] Memory required for data: 8326800
I0428 20:09:15.315783 31583 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:15.315800 31583 net.cpp:86] Creating Layer relu2
I0428 20:09:15.315809 31583 net.cpp:408] relu2 <- ip2
I0428 20:09:15.315816 31583 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:15.316058 31583 net.cpp:124] Setting up relu2
I0428 20:09:15.316078 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.316084 31583 net.cpp:139] Memory required for data: 8330800
I0428 20:09:15.316090 31583 layer_factory.hpp:77] Creating layer ip3
I0428 20:09:15.316102 31583 net.cpp:86] Creating Layer ip3
I0428 20:09:15.316110 31583 net.cpp:408] ip3 <- ip2
I0428 20:09:15.316120 31583 net.cpp:382] ip3 -> ip3
I0428 20:09:15.316248 31583 net.cpp:124] Setting up ip3
I0428 20:09:15.316258 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.316265 31583 net.cpp:139] Memory required for data: 8334800
I0428 20:09:15.316280 31583 layer_factory.hpp:77] Creating layer relu3
I0428 20:09:15.316293 31583 net.cpp:86] Creating Layer relu3
I0428 20:09:15.316301 31583 net.cpp:408] relu3 <- ip3
I0428 20:09:15.316310 31583 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:09:15.317224 31583 net.cpp:124] Setting up relu3
I0428 20:09:15.317240 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.317247 31583 net.cpp:139] Memory required for data: 8338800
I0428 20:09:15.317255 31583 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:09:15.317263 31583 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:09:15.317270 31583 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:09:15.317279 31583 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:09:15.317293 31583 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:09:15.317348 31583 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:09:15.317358 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.317365 31583 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:15.317370 31583 net.cpp:139] Memory required for data: 8346800
I0428 20:09:15.317378 31583 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:15.317389 31583 net.cpp:86] Creating Layer accuracy
I0428 20:09:15.317394 31583 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:09:15.317402 31583 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:15.317411 31583 net.cpp:382] accuracy -> accuracy
I0428 20:09:15.317425 31583 net.cpp:124] Setting up accuracy
I0428 20:09:15.317435 31583 net.cpp:131] Top shape: (1)
I0428 20:09:15.317440 31583 net.cpp:139] Memory required for data: 8346804
I0428 20:09:15.317446 31583 layer_factory.hpp:77] Creating layer loss
I0428 20:09:15.317457 31583 net.cpp:86] Creating Layer loss
I0428 20:09:15.317464 31583 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:09:15.317471 31583 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:15.317479 31583 net.cpp:382] loss -> loss
I0428 20:09:15.317492 31583 layer_factory.hpp:77] Creating layer loss
I0428 20:09:15.317777 31583 net.cpp:124] Setting up loss
I0428 20:09:15.317790 31583 net.cpp:131] Top shape: (1)
I0428 20:09:15.317796 31583 net.cpp:134]     with loss weight 1
I0428 20:09:15.317821 31583 net.cpp:139] Memory required for data: 8346808
I0428 20:09:15.317828 31583 net.cpp:200] loss needs backward computation.
I0428 20:09:15.317836 31583 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:15.317842 31583 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:09:15.317847 31583 net.cpp:200] relu3 needs backward computation.
I0428 20:09:15.317853 31583 net.cpp:200] ip3 needs backward computation.
I0428 20:09:15.317859 31583 net.cpp:200] relu2 needs backward computation.
I0428 20:09:15.317864 31583 net.cpp:200] ip2 needs backward computation.
I0428 20:09:15.317869 31583 net.cpp:200] relu1 needs backward computation.
I0428 20:09:15.317875 31583 net.cpp:200] ip1 needs backward computation.
I0428 20:09:15.317880 31583 net.cpp:200] pool1 needs backward computation.
I0428 20:09:15.317886 31583 net.cpp:200] conv1 needs backward computation.
I0428 20:09:15.317893 31583 net.cpp:200] pool0 needs backward computation.
I0428 20:09:15.317898 31583 net.cpp:200] conv0 needs backward computation.
I0428 20:09:15.317905 31583 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:15.317912 31583 net.cpp:202] mnist does not need backward computation.
I0428 20:09:15.317922 31583 net.cpp:244] This network produces output accuracy
I0428 20:09:15.317929 31583 net.cpp:244] This network produces output loss
I0428 20:09:15.317947 31583 net.cpp:257] Network initialization done.
I0428 20:09:15.318002 31583 solver.cpp:56] Solver scaffolding done.
I0428 20:09:15.318392 31583 caffe.cpp:248] Starting Optimization
I0428 20:09:15.318401 31583 solver.cpp:273] Solving LeNet
I0428 20:09:15.318406 31583 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:15.319249 31583 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:15.325294 31583 blocking_queue.cpp:49] Waiting for data
I0428 20:09:15.393868 31590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:15.394800 31583 solver.cpp:398]     Test net output #0: accuracy = 0.1036
I0428 20:09:15.394840 31583 solver.cpp:398]     Test net output #1: loss = 2.30701 (* 1 = 2.30701 loss)
I0428 20:09:15.400693 31583 solver.cpp:219] Iteration 0 (0 iter/s, 0.0822467s/100 iters), loss = 2.30291
I0428 20:09:15.400746 31583 solver.cpp:238]     Train net output #0: loss = 2.30291 (* 1 = 2.30291 loss)
I0428 20:09:15.400775 31583 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:15.512980 31583 solver.cpp:219] Iteration 100 (891.066 iter/s, 0.112225s/100 iters), loss = 1.32108
I0428 20:09:15.513023 31583 solver.cpp:238]     Train net output #0: loss = 1.32108 (* 1 = 1.32108 loss)
I0428 20:09:15.513036 31583 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:15.616233 31583 solver.cpp:219] Iteration 200 (968.937 iter/s, 0.103206s/100 iters), loss = 1.21282
I0428 20:09:15.616261 31583 solver.cpp:238]     Train net output #0: loss = 1.21282 (* 1 = 1.21282 loss)
I0428 20:09:15.616271 31583 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:15.728878 31583 solver.cpp:219] Iteration 300 (888.059 iter/s, 0.112605s/100 iters), loss = 0.489921
I0428 20:09:15.728919 31583 solver.cpp:238]     Train net output #0: loss = 0.489921 (* 1 = 0.489921 loss)
I0428 20:09:15.728934 31583 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:15.834787 31583 solver.cpp:219] Iteration 400 (944.643 iter/s, 0.10586s/100 iters), loss = 0.422071
I0428 20:09:15.834817 31583 solver.cpp:238]     Train net output #0: loss = 0.422071 (* 1 = 0.422071 loss)
I0428 20:09:15.834825 31583 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:15.937718 31583 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:15.995378 31590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:15.996717 31583 solver.cpp:398]     Test net output #0: accuracy = 0.9329
I0428 20:09:15.996742 31583 solver.cpp:398]     Test net output #1: loss = 0.236579 (* 1 = 0.236579 loss)
I0428 20:09:15.997951 31583 solver.cpp:219] Iteration 500 (613.041 iter/s, 0.163121s/100 iters), loss = 0.187064
I0428 20:09:15.997977 31583 solver.cpp:238]     Train net output #0: loss = 0.187064 (* 1 = 0.187064 loss)
I0428 20:09:15.998003 31583 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:16.105496 31583 solver.cpp:219] Iteration 600 (930.175 iter/s, 0.107507s/100 iters), loss = 0.21388
I0428 20:09:16.105527 31583 solver.cpp:238]     Train net output #0: loss = 0.21388 (* 1 = 0.21388 loss)
I0428 20:09:16.105535 31583 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:16.210700 31583 solver.cpp:219] Iteration 700 (950.916 iter/s, 0.105162s/100 iters), loss = 0.267691
I0428 20:09:16.210732 31583 solver.cpp:238]     Train net output #0: loss = 0.267691 (* 1 = 0.267691 loss)
I0428 20:09:16.210741 31583 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:16.315585 31583 solver.cpp:219] Iteration 800 (953.814 iter/s, 0.104842s/100 iters), loss = 0.322513
I0428 20:09:16.315616 31583 solver.cpp:238]     Train net output #0: loss = 0.322513 (* 1 = 0.322513 loss)
I0428 20:09:16.315624 31583 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:16.420328 31583 solver.cpp:219] Iteration 900 (955.101 iter/s, 0.104701s/100 iters), loss = 0.195276
I0428 20:09:16.420358 31583 solver.cpp:238]     Train net output #0: loss = 0.195276 (* 1 = 0.195276 loss)
I0428 20:09:16.420367 31583 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:16.455106 31589 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:16.521747 31583 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:16.522948 31583 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:16.523640 31583 solver.cpp:311] Iteration 1000, loss = 0.164227
I0428 20:09:16.523655 31583 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:16.599014 31590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:16.599634 31583 solver.cpp:398]     Test net output #0: accuracy = 0.9637
I0428 20:09:16.599669 31583 solver.cpp:398]     Test net output #1: loss = 0.119774 (* 1 = 0.119774 loss)
I0428 20:09:16.599674 31583 solver.cpp:316] Optimization Done.
I0428 20:09:16.599678 31583 caffe.cpp:259] Optimization Done.
