I0428 19:47:52.863631 26346 caffe.cpp:218] Using GPUs 0
I0428 19:47:52.904834 26346 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:53.347288 26346 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test528.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:53.347406 26346 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test528.prototxt
I0428 19:47:53.347725 26346 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:53.347744 26346 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:53.347847 26346 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:53.347911 26346 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:53.347993 26346 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:53.348013 26346 net.cpp:86] Creating Layer mnist
I0428 19:47:53.348021 26346 net.cpp:382] mnist -> data
I0428 19:47:53.348054 26346 net.cpp:382] mnist -> label
I0428 19:47:53.349064 26346 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:53.351330 26346 net.cpp:124] Setting up mnist
I0428 19:47:53.351359 26346 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:53.351378 26346 net.cpp:131] Top shape: 64 (64)
I0428 19:47:53.351382 26346 net.cpp:139] Memory required for data: 200960
I0428 19:47:53.351387 26346 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:53.351400 26346 net.cpp:86] Creating Layer conv0
I0428 19:47:53.351418 26346 net.cpp:408] conv0 <- data
I0428 19:47:53.351429 26346 net.cpp:382] conv0 -> conv0
I0428 19:47:53.578771 26346 net.cpp:124] Setting up conv0
I0428 19:47:53.578812 26346 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:53.578816 26346 net.cpp:139] Memory required for data: 938240
I0428 19:47:53.578830 26346 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:53.578843 26346 net.cpp:86] Creating Layer pool0
I0428 19:47:53.578847 26346 net.cpp:408] pool0 <- conv0
I0428 19:47:53.578852 26346 net.cpp:382] pool0 -> pool0
I0428 19:47:53.578913 26346 net.cpp:124] Setting up pool0
I0428 19:47:53.578918 26346 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:53.578922 26346 net.cpp:139] Memory required for data: 1122560
I0428 19:47:53.578925 26346 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:53.578935 26346 net.cpp:86] Creating Layer conv1
I0428 19:47:53.578938 26346 net.cpp:408] conv1 <- pool0
I0428 19:47:53.578943 26346 net.cpp:382] conv1 -> conv1
I0428 19:47:53.580844 26346 net.cpp:124] Setting up conv1
I0428 19:47:53.580875 26346 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:53.580879 26346 net.cpp:139] Memory required for data: 1155328
I0428 19:47:53.580888 26346 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:53.580896 26346 net.cpp:86] Creating Layer pool1
I0428 19:47:53.580915 26346 net.cpp:408] pool1 <- conv1
I0428 19:47:53.580935 26346 net.cpp:382] pool1 -> pool1
I0428 19:47:53.581003 26346 net.cpp:124] Setting up pool1
I0428 19:47:53.581019 26346 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:53.581022 26346 net.cpp:139] Memory required for data: 1163520
I0428 19:47:53.581025 26346 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:53.581033 26346 net.cpp:86] Creating Layer ip1
I0428 19:47:53.581037 26346 net.cpp:408] ip1 <- pool1
I0428 19:47:53.581042 26346 net.cpp:382] ip1 -> ip1
I0428 19:47:53.581156 26346 net.cpp:124] Setting up ip1
I0428 19:47:53.581162 26346 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:53.581166 26346 net.cpp:139] Memory required for data: 1169920
I0428 19:47:53.581172 26346 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:53.581178 26346 net.cpp:86] Creating Layer relu1
I0428 19:47:53.581182 26346 net.cpp:408] relu1 <- ip1
I0428 19:47:53.581185 26346 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:53.581372 26346 net.cpp:124] Setting up relu1
I0428 19:47:53.581396 26346 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:53.581399 26346 net.cpp:139] Memory required for data: 1176320
I0428 19:47:53.581403 26346 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:53.581408 26346 net.cpp:86] Creating Layer ip2
I0428 19:47:53.581411 26346 net.cpp:408] ip2 <- ip1
I0428 19:47:53.581418 26346 net.cpp:382] ip2 -> ip2
I0428 19:47:53.581504 26346 net.cpp:124] Setting up ip2
I0428 19:47:53.581511 26346 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:53.581513 26346 net.cpp:139] Memory required for data: 1178880
I0428 19:47:53.581518 26346 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:53.581524 26346 net.cpp:86] Creating Layer relu2
I0428 19:47:53.581527 26346 net.cpp:408] relu2 <- ip2
I0428 19:47:53.581532 26346 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:53.582330 26346 net.cpp:124] Setting up relu2
I0428 19:47:53.582356 26346 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:53.582376 26346 net.cpp:139] Memory required for data: 1181440
I0428 19:47:53.582378 26346 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:53.582386 26346 net.cpp:86] Creating Layer ip3
I0428 19:47:53.582388 26346 net.cpp:408] ip3 <- ip2
I0428 19:47:53.582394 26346 net.cpp:382] ip3 -> ip3
I0428 19:47:53.582484 26346 net.cpp:124] Setting up ip3
I0428 19:47:53.582491 26346 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:53.582494 26346 net.cpp:139] Memory required for data: 1184000
I0428 19:47:53.582501 26346 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:53.582506 26346 net.cpp:86] Creating Layer relu3
I0428 19:47:53.582509 26346 net.cpp:408] relu3 <- ip3
I0428 19:47:53.582512 26346 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:53.582677 26346 net.cpp:124] Setting up relu3
I0428 19:47:53.582685 26346 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:53.582689 26346 net.cpp:139] Memory required for data: 1186560
I0428 19:47:53.582691 26346 layer_factory.hpp:77] Creating layer loss
I0428 19:47:53.582712 26346 net.cpp:86] Creating Layer loss
I0428 19:47:53.582715 26346 net.cpp:408] loss <- ip3
I0428 19:47:53.582720 26346 net.cpp:408] loss <- label
I0428 19:47:53.582725 26346 net.cpp:382] loss -> loss
I0428 19:47:53.582738 26346 layer_factory.hpp:77] Creating layer loss
I0428 19:47:53.582939 26346 net.cpp:124] Setting up loss
I0428 19:47:53.582948 26346 net.cpp:131] Top shape: (1)
I0428 19:47:53.582952 26346 net.cpp:134]     with loss weight 1
I0428 19:47:53.582964 26346 net.cpp:139] Memory required for data: 1186564
I0428 19:47:53.582968 26346 net.cpp:200] loss needs backward computation.
I0428 19:47:53.582972 26346 net.cpp:200] relu3 needs backward computation.
I0428 19:47:53.582974 26346 net.cpp:200] ip3 needs backward computation.
I0428 19:47:53.582976 26346 net.cpp:200] relu2 needs backward computation.
I0428 19:47:53.582979 26346 net.cpp:200] ip2 needs backward computation.
I0428 19:47:53.582983 26346 net.cpp:200] relu1 needs backward computation.
I0428 19:47:53.582984 26346 net.cpp:200] ip1 needs backward computation.
I0428 19:47:53.582988 26346 net.cpp:200] pool1 needs backward computation.
I0428 19:47:53.582990 26346 net.cpp:200] conv1 needs backward computation.
I0428 19:47:53.582993 26346 net.cpp:200] pool0 needs backward computation.
I0428 19:47:53.582995 26346 net.cpp:200] conv0 needs backward computation.
I0428 19:47:53.582999 26346 net.cpp:202] mnist does not need backward computation.
I0428 19:47:53.583003 26346 net.cpp:244] This network produces output loss
I0428 19:47:53.583010 26346 net.cpp:257] Network initialization done.
I0428 19:47:53.583400 26346 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test528.prototxt
I0428 19:47:53.583442 26346 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:53.583570 26346 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:53.583647 26346 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:53.583691 26346 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:53.583703 26346 net.cpp:86] Creating Layer mnist
I0428 19:47:53.583709 26346 net.cpp:382] mnist -> data
I0428 19:47:53.583715 26346 net.cpp:382] mnist -> label
I0428 19:47:53.583792 26346 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:53.585899 26346 net.cpp:124] Setting up mnist
I0428 19:47:53.585928 26346 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:53.585947 26346 net.cpp:131] Top shape: 100 (100)
I0428 19:47:53.585950 26346 net.cpp:139] Memory required for data: 314000
I0428 19:47:53.585953 26346 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:53.585959 26346 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:53.585963 26346 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:53.585968 26346 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:53.585973 26346 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:53.586005 26346 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:53.586010 26346 net.cpp:131] Top shape: 100 (100)
I0428 19:47:53.586014 26346 net.cpp:131] Top shape: 100 (100)
I0428 19:47:53.586016 26346 net.cpp:139] Memory required for data: 314800
I0428 19:47:53.586019 26346 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:53.586026 26346 net.cpp:86] Creating Layer conv0
I0428 19:47:53.586028 26346 net.cpp:408] conv0 <- data
I0428 19:47:53.586033 26346 net.cpp:382] conv0 -> conv0
I0428 19:47:53.587622 26346 net.cpp:124] Setting up conv0
I0428 19:47:53.587635 26346 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:53.587640 26346 net.cpp:139] Memory required for data: 1466800
I0428 19:47:53.587648 26346 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:53.587669 26346 net.cpp:86] Creating Layer pool0
I0428 19:47:53.587673 26346 net.cpp:408] pool0 <- conv0
I0428 19:47:53.587677 26346 net.cpp:382] pool0 -> pool0
I0428 19:47:53.587725 26346 net.cpp:124] Setting up pool0
I0428 19:47:53.587730 26346 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:53.587733 26346 net.cpp:139] Memory required for data: 1754800
I0428 19:47:53.587735 26346 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:53.587743 26346 net.cpp:86] Creating Layer conv1
I0428 19:47:53.587748 26346 net.cpp:408] conv1 <- pool0
I0428 19:47:53.587751 26346 net.cpp:382] conv1 -> conv1
I0428 19:47:53.589808 26346 net.cpp:124] Setting up conv1
I0428 19:47:53.589823 26346 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:53.589826 26346 net.cpp:139] Memory required for data: 1806000
I0428 19:47:53.589835 26346 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:53.589843 26346 net.cpp:86] Creating Layer pool1
I0428 19:47:53.589846 26346 net.cpp:408] pool1 <- conv1
I0428 19:47:53.589851 26346 net.cpp:382] pool1 -> pool1
I0428 19:47:53.589890 26346 net.cpp:124] Setting up pool1
I0428 19:47:53.589910 26346 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:53.589913 26346 net.cpp:139] Memory required for data: 1818800
I0428 19:47:53.589916 26346 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:53.589921 26346 net.cpp:86] Creating Layer ip1
I0428 19:47:53.589925 26346 net.cpp:408] ip1 <- pool1
I0428 19:47:53.589929 26346 net.cpp:382] ip1 -> ip1
I0428 19:47:53.590052 26346 net.cpp:124] Setting up ip1
I0428 19:47:53.590059 26346 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:53.590072 26346 net.cpp:139] Memory required for data: 1828800
I0428 19:47:53.590086 26346 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:53.590091 26346 net.cpp:86] Creating Layer relu1
I0428 19:47:53.590095 26346 net.cpp:408] relu1 <- ip1
I0428 19:47:53.590106 26346 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:53.590255 26346 net.cpp:124] Setting up relu1
I0428 19:47:53.590262 26346 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:53.590265 26346 net.cpp:139] Memory required for data: 1838800
I0428 19:47:53.590268 26346 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:53.590276 26346 net.cpp:86] Creating Layer ip2
I0428 19:47:53.590278 26346 net.cpp:408] ip2 <- ip1
I0428 19:47:53.590282 26346 net.cpp:382] ip2 -> ip2
I0428 19:47:53.590389 26346 net.cpp:124] Setting up ip2
I0428 19:47:53.590395 26346 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:53.590399 26346 net.cpp:139] Memory required for data: 1842800
I0428 19:47:53.590404 26346 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:53.590409 26346 net.cpp:86] Creating Layer relu2
I0428 19:47:53.590411 26346 net.cpp:408] relu2 <- ip2
I0428 19:47:53.590415 26346 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:53.590553 26346 net.cpp:124] Setting up relu2
I0428 19:47:53.590561 26346 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:53.590565 26346 net.cpp:139] Memory required for data: 1846800
I0428 19:47:53.590569 26346 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:53.590574 26346 net.cpp:86] Creating Layer ip3
I0428 19:47:53.590576 26346 net.cpp:408] ip3 <- ip2
I0428 19:47:53.590581 26346 net.cpp:382] ip3 -> ip3
I0428 19:47:53.590667 26346 net.cpp:124] Setting up ip3
I0428 19:47:53.590687 26346 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:53.590705 26346 net.cpp:139] Memory required for data: 1850800
I0428 19:47:53.590737 26346 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:53.590741 26346 net.cpp:86] Creating Layer relu3
I0428 19:47:53.590744 26346 net.cpp:408] relu3 <- ip3
I0428 19:47:53.590749 26346 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:53.591616 26346 net.cpp:124] Setting up relu3
I0428 19:47:53.591627 26346 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:53.591631 26346 net.cpp:139] Memory required for data: 1854800
I0428 19:47:53.591635 26346 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:53.591640 26346 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:53.591644 26346 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:53.591648 26346 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:53.591655 26346 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:53.591693 26346 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:53.591698 26346 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:53.591702 26346 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:53.591704 26346 net.cpp:139] Memory required for data: 1862800
I0428 19:47:53.591707 26346 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:53.591712 26346 net.cpp:86] Creating Layer accuracy
I0428 19:47:53.591714 26346 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:53.591718 26346 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:53.591723 26346 net.cpp:382] accuracy -> accuracy
I0428 19:47:53.591729 26346 net.cpp:124] Setting up accuracy
I0428 19:47:53.591732 26346 net.cpp:131] Top shape: (1)
I0428 19:47:53.591735 26346 net.cpp:139] Memory required for data: 1862804
I0428 19:47:53.591738 26346 layer_factory.hpp:77] Creating layer loss
I0428 19:47:53.591742 26346 net.cpp:86] Creating Layer loss
I0428 19:47:53.591745 26346 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:53.591748 26346 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:53.591753 26346 net.cpp:382] loss -> loss
I0428 19:47:53.591758 26346 layer_factory.hpp:77] Creating layer loss
I0428 19:47:53.591991 26346 net.cpp:124] Setting up loss
I0428 19:47:53.592000 26346 net.cpp:131] Top shape: (1)
I0428 19:47:53.592003 26346 net.cpp:134]     with loss weight 1
I0428 19:47:53.592010 26346 net.cpp:139] Memory required for data: 1862808
I0428 19:47:53.592022 26346 net.cpp:200] loss needs backward computation.
I0428 19:47:53.592026 26346 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:53.592030 26346 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:53.592032 26346 net.cpp:200] relu3 needs backward computation.
I0428 19:47:53.592036 26346 net.cpp:200] ip3 needs backward computation.
I0428 19:47:53.592056 26346 net.cpp:200] relu2 needs backward computation.
I0428 19:47:53.592058 26346 net.cpp:200] ip2 needs backward computation.
I0428 19:47:53.592067 26346 net.cpp:200] relu1 needs backward computation.
I0428 19:47:53.592069 26346 net.cpp:200] ip1 needs backward computation.
I0428 19:47:53.592072 26346 net.cpp:200] pool1 needs backward computation.
I0428 19:47:53.592075 26346 net.cpp:200] conv1 needs backward computation.
I0428 19:47:53.592078 26346 net.cpp:200] pool0 needs backward computation.
I0428 19:47:53.592082 26346 net.cpp:200] conv0 needs backward computation.
I0428 19:47:53.592084 26346 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:53.592087 26346 net.cpp:202] mnist does not need backward computation.
I0428 19:47:53.592090 26346 net.cpp:244] This network produces output accuracy
I0428 19:47:53.592094 26346 net.cpp:244] This network produces output loss
I0428 19:47:53.592103 26346 net.cpp:257] Network initialization done.
I0428 19:47:53.592144 26346 solver.cpp:56] Solver scaffolding done.
I0428 19:47:53.592514 26346 caffe.cpp:248] Starting Optimization
I0428 19:47:53.592521 26346 solver.cpp:273] Solving LeNet
I0428 19:47:53.592523 26346 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:53.593395 26346 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:53.596607 26346 blocking_queue.cpp:49] Waiting for data
I0428 19:47:53.669020 26353 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:53.669529 26346 solver.cpp:398]     Test net output #0: accuracy = 0.0902
I0428 19:47:53.669548 26346 solver.cpp:398]     Test net output #1: loss = 2.32882 (* 1 = 2.32882 loss)
I0428 19:47:53.671324 26346 solver.cpp:219] Iteration 0 (-1.83285e-31 iter/s, 0.0787743s/100 iters), loss = 2.31483
I0428 19:47:53.671380 26346 solver.cpp:238]     Train net output #0: loss = 2.31483 (* 1 = 2.31483 loss)
I0428 19:47:53.671407 26346 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:53.748921 26346 solver.cpp:219] Iteration 100 (1289.76 iter/s, 0.0775338s/100 iters), loss = 0.810044
I0428 19:47:53.748946 26346 solver.cpp:238]     Train net output #0: loss = 0.810044 (* 1 = 0.810044 loss)
I0428 19:47:53.748952 26346 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:53.817240 26346 solver.cpp:219] Iteration 200 (1464.44 iter/s, 0.0682856s/100 iters), loss = 0.442077
I0428 19:47:53.817263 26346 solver.cpp:238]     Train net output #0: loss = 0.442077 (* 1 = 0.442077 loss)
I0428 19:47:53.817286 26346 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:53.886595 26346 solver.cpp:219] Iteration 300 (1442.53 iter/s, 0.0693227s/100 iters), loss = 0.313194
I0428 19:47:53.886620 26346 solver.cpp:238]     Train net output #0: loss = 0.313194 (* 1 = 0.313194 loss)
I0428 19:47:53.886641 26346 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:53.977882 26346 solver.cpp:219] Iteration 400 (1095.88 iter/s, 0.0912507s/100 iters), loss = 0.256833
I0428 19:47:53.977919 26346 solver.cpp:238]     Train net output #0: loss = 0.256833 (* 1 = 0.256833 loss)
I0428 19:47:53.977943 26346 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:54.051748 26346 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:54.099797 26353 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:54.100318 26346 solver.cpp:398]     Test net output #0: accuracy = 0.9103
I0428 19:47:54.100340 26346 solver.cpp:398]     Test net output #1: loss = 0.287759 (* 1 = 0.287759 loss)
I0428 19:47:54.101096 26346 solver.cpp:219] Iteration 500 (811.908 iter/s, 0.123167s/100 iters), loss = 0.23834
I0428 19:47:54.101148 26346 solver.cpp:238]     Train net output #0: loss = 0.238339 (* 1 = 0.238339 loss)
I0428 19:47:54.101172 26346 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:54.177779 26346 solver.cpp:219] Iteration 600 (1305.08 iter/s, 0.0766237s/100 iters), loss = 0.242326
I0428 19:47:54.177821 26346 solver.cpp:238]     Train net output #0: loss = 0.242326 (* 1 = 0.242326 loss)
I0428 19:47:54.177829 26346 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:54.247642 26346 solver.cpp:219] Iteration 700 (1432.41 iter/s, 0.0698122s/100 iters), loss = 0.304629
I0428 19:47:54.247681 26346 solver.cpp:238]     Train net output #0: loss = 0.304629 (* 1 = 0.304629 loss)
I0428 19:47:54.247687 26346 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:54.317343 26346 solver.cpp:219] Iteration 800 (1435.66 iter/s, 0.0696544s/100 iters), loss = 0.232513
I0428 19:47:54.317399 26346 solver.cpp:238]     Train net output #0: loss = 0.232513 (* 1 = 0.232513 loss)
I0428 19:47:54.317420 26346 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:54.387018 26346 solver.cpp:219] Iteration 900 (1436.55 iter/s, 0.0696114s/100 iters), loss = 0.273329
I0428 19:47:54.387059 26346 solver.cpp:238]     Train net output #0: loss = 0.273329 (* 1 = 0.273329 loss)
I0428 19:47:54.387065 26346 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:54.410542 26352 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:54.455857 26346 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:54.456526 26346 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:54.456943 26346 solver.cpp:311] Iteration 1000, loss = 0.181434
I0428 19:47:54.456959 26346 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:54.523782 26353 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:54.524451 26346 solver.cpp:398]     Test net output #0: accuracy = 0.9411
I0428 19:47:54.524487 26346 solver.cpp:398]     Test net output #1: loss = 0.194384 (* 1 = 0.194384 loss)
I0428 19:47:54.524498 26346 solver.cpp:316] Optimization Done.
I0428 19:47:54.524508 26346 caffe.cpp:259] Optimization Done.
