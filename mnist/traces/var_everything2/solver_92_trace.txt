I0428 19:30:29.030755 22300 caffe.cpp:218] Using GPUs 0
I0428 19:30:29.072125 22300 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:29.591292 22300 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test92.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:29.591469 22300 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test92.prototxt
I0428 19:30:29.591835 22300 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:29.591856 22300 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:29.591950 22300 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:29.592049 22300 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:29.592182 22300 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:29.592216 22300 net.cpp:86] Creating Layer mnist
I0428 19:30:29.592228 22300 net.cpp:382] mnist -> data
I0428 19:30:29.592259 22300 net.cpp:382] mnist -> label
I0428 19:30:29.593485 22300 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:29.595948 22300 net.cpp:124] Setting up mnist
I0428 19:30:29.595968 22300 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:29.595979 22300 net.cpp:131] Top shape: 64 (64)
I0428 19:30:29.595985 22300 net.cpp:139] Memory required for data: 200960
I0428 19:30:29.595996 22300 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:29.596019 22300 net.cpp:86] Creating Layer conv0
I0428 19:30:29.596029 22300 net.cpp:408] conv0 <- data
I0428 19:30:29.596046 22300 net.cpp:382] conv0 -> conv0
I0428 19:30:29.887079 22300 net.cpp:124] Setting up conv0
I0428 19:30:29.887111 22300 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:29.887118 22300 net.cpp:139] Memory required for data: 938240
I0428 19:30:29.887142 22300 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:29.887162 22300 net.cpp:86] Creating Layer pool0
I0428 19:30:29.887189 22300 net.cpp:408] pool0 <- conv0
I0428 19:30:29.887202 22300 net.cpp:382] pool0 -> pool0
I0428 19:30:29.887267 22300 net.cpp:124] Setting up pool0
I0428 19:30:29.887279 22300 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:29.887285 22300 net.cpp:139] Memory required for data: 1122560
I0428 19:30:29.887291 22300 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:29.887305 22300 net.cpp:86] Creating Layer ip1
I0428 19:30:29.887311 22300 net.cpp:408] ip1 <- pool0
I0428 19:30:29.887321 22300 net.cpp:382] ip1 -> ip1
I0428 19:30:29.888437 22300 net.cpp:124] Setting up ip1
I0428 19:30:29.888453 22300 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:29.888460 22300 net.cpp:139] Memory required for data: 1125120
I0428 19:30:29.888475 22300 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:29.888487 22300 net.cpp:86] Creating Layer relu1
I0428 19:30:29.888499 22300 net.cpp:408] relu1 <- ip1
I0428 19:30:29.888509 22300 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:29.888716 22300 net.cpp:124] Setting up relu1
I0428 19:30:29.888728 22300 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:29.888734 22300 net.cpp:139] Memory required for data: 1127680
I0428 19:30:29.888741 22300 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:29.888752 22300 net.cpp:86] Creating Layer ip2
I0428 19:30:29.888759 22300 net.cpp:408] ip2 <- ip1
I0428 19:30:29.888769 22300 net.cpp:382] ip2 -> ip2
I0428 19:30:29.888895 22300 net.cpp:124] Setting up ip2
I0428 19:30:29.888906 22300 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:29.888912 22300 net.cpp:139] Memory required for data: 1130240
I0428 19:30:29.888926 22300 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:29.888936 22300 net.cpp:86] Creating Layer relu2
I0428 19:30:29.888942 22300 net.cpp:408] relu2 <- ip2
I0428 19:30:29.888950 22300 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:29.889797 22300 net.cpp:124] Setting up relu2
I0428 19:30:29.889813 22300 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:29.889820 22300 net.cpp:139] Memory required for data: 1132800
I0428 19:30:29.889827 22300 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:29.889838 22300 net.cpp:86] Creating Layer ip3
I0428 19:30:29.889844 22300 net.cpp:408] ip3 <- ip2
I0428 19:30:29.889854 22300 net.cpp:382] ip3 -> ip3
I0428 19:30:29.889971 22300 net.cpp:124] Setting up ip3
I0428 19:30:29.889981 22300 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:29.889986 22300 net.cpp:139] Memory required for data: 1135360
I0428 19:30:29.889997 22300 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:29.890008 22300 net.cpp:86] Creating Layer relu3
I0428 19:30:29.890015 22300 net.cpp:408] relu3 <- ip3
I0428 19:30:29.890023 22300 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:29.890197 22300 net.cpp:124] Setting up relu3
I0428 19:30:29.890209 22300 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:29.890215 22300 net.cpp:139] Memory required for data: 1137920
I0428 19:30:29.890220 22300 layer_factory.hpp:77] Creating layer loss
I0428 19:30:29.890230 22300 net.cpp:86] Creating Layer loss
I0428 19:30:29.890236 22300 net.cpp:408] loss <- ip3
I0428 19:30:29.890244 22300 net.cpp:408] loss <- label
I0428 19:30:29.890254 22300 net.cpp:382] loss -> loss
I0428 19:30:29.890278 22300 layer_factory.hpp:77] Creating layer loss
I0428 19:30:29.890542 22300 net.cpp:124] Setting up loss
I0428 19:30:29.890553 22300 net.cpp:131] Top shape: (1)
I0428 19:30:29.890559 22300 net.cpp:134]     with loss weight 1
I0428 19:30:29.890580 22300 net.cpp:139] Memory required for data: 1137924
I0428 19:30:29.890588 22300 net.cpp:200] loss needs backward computation.
I0428 19:30:29.890594 22300 net.cpp:200] relu3 needs backward computation.
I0428 19:30:29.890600 22300 net.cpp:200] ip3 needs backward computation.
I0428 19:30:29.890605 22300 net.cpp:200] relu2 needs backward computation.
I0428 19:30:29.890611 22300 net.cpp:200] ip2 needs backward computation.
I0428 19:30:29.890616 22300 net.cpp:200] relu1 needs backward computation.
I0428 19:30:29.890622 22300 net.cpp:200] ip1 needs backward computation.
I0428 19:30:29.890642 22300 net.cpp:200] pool0 needs backward computation.
I0428 19:30:29.890648 22300 net.cpp:200] conv0 needs backward computation.
I0428 19:30:29.890655 22300 net.cpp:202] mnist does not need backward computation.
I0428 19:30:29.890661 22300 net.cpp:244] This network produces output loss
I0428 19:30:29.890674 22300 net.cpp:257] Network initialization done.
I0428 19:30:29.890990 22300 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test92.prototxt
I0428 19:30:29.891026 22300 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:29.891120 22300 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:29.891227 22300 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:29.891294 22300 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:29.891314 22300 net.cpp:86] Creating Layer mnist
I0428 19:30:29.891322 22300 net.cpp:382] mnist -> data
I0428 19:30:29.891335 22300 net.cpp:382] mnist -> label
I0428 19:30:29.891463 22300 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:29.893649 22300 net.cpp:124] Setting up mnist
I0428 19:30:29.893666 22300 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:29.893676 22300 net.cpp:131] Top shape: 100 (100)
I0428 19:30:29.893682 22300 net.cpp:139] Memory required for data: 314000
I0428 19:30:29.893688 22300 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:29.893699 22300 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:29.893705 22300 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:29.893714 22300 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:29.893726 22300 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:29.893824 22300 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:29.893834 22300 net.cpp:131] Top shape: 100 (100)
I0428 19:30:29.893841 22300 net.cpp:131] Top shape: 100 (100)
I0428 19:30:29.893847 22300 net.cpp:139] Memory required for data: 314800
I0428 19:30:29.893867 22300 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:29.893883 22300 net.cpp:86] Creating Layer conv0
I0428 19:30:29.893890 22300 net.cpp:408] conv0 <- data
I0428 19:30:29.893899 22300 net.cpp:382] conv0 -> conv0
I0428 19:30:29.895571 22300 net.cpp:124] Setting up conv0
I0428 19:30:29.895589 22300 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:29.895596 22300 net.cpp:139] Memory required for data: 1466800
I0428 19:30:29.895612 22300 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:29.895622 22300 net.cpp:86] Creating Layer pool0
I0428 19:30:29.895630 22300 net.cpp:408] pool0 <- conv0
I0428 19:30:29.895639 22300 net.cpp:382] pool0 -> pool0
I0428 19:30:29.895685 22300 net.cpp:124] Setting up pool0
I0428 19:30:29.895695 22300 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:29.895701 22300 net.cpp:139] Memory required for data: 1754800
I0428 19:30:29.895707 22300 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:29.895720 22300 net.cpp:86] Creating Layer ip1
I0428 19:30:29.895725 22300 net.cpp:408] ip1 <- pool0
I0428 19:30:29.895735 22300 net.cpp:382] ip1 -> ip1
I0428 19:30:29.895894 22300 net.cpp:124] Setting up ip1
I0428 19:30:29.895903 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.895908 22300 net.cpp:139] Memory required for data: 1758800
I0428 19:30:29.895921 22300 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:29.895931 22300 net.cpp:86] Creating Layer relu1
I0428 19:30:29.895937 22300 net.cpp:408] relu1 <- ip1
I0428 19:30:29.895946 22300 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:29.896196 22300 net.cpp:124] Setting up relu1
I0428 19:30:29.896209 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.896214 22300 net.cpp:139] Memory required for data: 1762800
I0428 19:30:29.896219 22300 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:29.896229 22300 net.cpp:86] Creating Layer ip2
I0428 19:30:29.896236 22300 net.cpp:408] ip2 <- ip1
I0428 19:30:29.896245 22300 net.cpp:382] ip2 -> ip2
I0428 19:30:29.896381 22300 net.cpp:124] Setting up ip2
I0428 19:30:29.896390 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.896396 22300 net.cpp:139] Memory required for data: 1766800
I0428 19:30:29.896410 22300 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:29.896420 22300 net.cpp:86] Creating Layer relu2
I0428 19:30:29.896425 22300 net.cpp:408] relu2 <- ip2
I0428 19:30:29.896435 22300 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:29.897258 22300 net.cpp:124] Setting up relu2
I0428 19:30:29.897274 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.897280 22300 net.cpp:139] Memory required for data: 1770800
I0428 19:30:29.897286 22300 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:29.897300 22300 net.cpp:86] Creating Layer ip3
I0428 19:30:29.897305 22300 net.cpp:408] ip3 <- ip2
I0428 19:30:29.897315 22300 net.cpp:382] ip3 -> ip3
I0428 19:30:29.897478 22300 net.cpp:124] Setting up ip3
I0428 19:30:29.897490 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.897496 22300 net.cpp:139] Memory required for data: 1774800
I0428 19:30:29.897507 22300 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:29.897517 22300 net.cpp:86] Creating Layer relu3
I0428 19:30:29.897524 22300 net.cpp:408] relu3 <- ip3
I0428 19:30:29.897533 22300 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:29.897709 22300 net.cpp:124] Setting up relu3
I0428 19:30:29.897722 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.897727 22300 net.cpp:139] Memory required for data: 1778800
I0428 19:30:29.897734 22300 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:29.897742 22300 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:29.897758 22300 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:29.897766 22300 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:29.897778 22300 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:29.897825 22300 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:29.897833 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.897841 22300 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:29.897858 22300 net.cpp:139] Memory required for data: 1786800
I0428 19:30:29.897866 22300 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:29.897876 22300 net.cpp:86] Creating Layer accuracy
I0428 19:30:29.897881 22300 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:29.897889 22300 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:29.897897 22300 net.cpp:382] accuracy -> accuracy
I0428 19:30:29.897910 22300 net.cpp:124] Setting up accuracy
I0428 19:30:29.897919 22300 net.cpp:131] Top shape: (1)
I0428 19:30:29.897925 22300 net.cpp:139] Memory required for data: 1786804
I0428 19:30:29.897936 22300 layer_factory.hpp:77] Creating layer loss
I0428 19:30:29.897946 22300 net.cpp:86] Creating Layer loss
I0428 19:30:29.897953 22300 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:29.897960 22300 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:29.897969 22300 net.cpp:382] loss -> loss
I0428 19:30:29.897979 22300 layer_factory.hpp:77] Creating layer loss
I0428 19:30:29.898250 22300 net.cpp:124] Setting up loss
I0428 19:30:29.898262 22300 net.cpp:131] Top shape: (1)
I0428 19:30:29.898267 22300 net.cpp:134]     with loss weight 1
I0428 19:30:29.898277 22300 net.cpp:139] Memory required for data: 1786808
I0428 19:30:29.898284 22300 net.cpp:200] loss needs backward computation.
I0428 19:30:29.898291 22300 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:29.898298 22300 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:29.898304 22300 net.cpp:200] relu3 needs backward computation.
I0428 19:30:29.898309 22300 net.cpp:200] ip3 needs backward computation.
I0428 19:30:29.898315 22300 net.cpp:200] relu2 needs backward computation.
I0428 19:30:29.898320 22300 net.cpp:200] ip2 needs backward computation.
I0428 19:30:29.898326 22300 net.cpp:200] relu1 needs backward computation.
I0428 19:30:29.898331 22300 net.cpp:200] ip1 needs backward computation.
I0428 19:30:29.898337 22300 net.cpp:200] pool0 needs backward computation.
I0428 19:30:29.898344 22300 net.cpp:200] conv0 needs backward computation.
I0428 19:30:29.898350 22300 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:29.898357 22300 net.cpp:202] mnist does not need backward computation.
I0428 19:30:29.898362 22300 net.cpp:244] This network produces output accuracy
I0428 19:30:29.898370 22300 net.cpp:244] This network produces output loss
I0428 19:30:29.898386 22300 net.cpp:257] Network initialization done.
I0428 19:30:29.898433 22300 solver.cpp:56] Solver scaffolding done.
I0428 19:30:29.898741 22300 caffe.cpp:248] Starting Optimization
I0428 19:30:29.898748 22300 solver.cpp:273] Solving LeNet
I0428 19:30:29.898753 22300 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:29.898900 22300 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:29.902833 22300 blocking_queue.cpp:49] Waiting for data
I0428 19:30:29.973948 22307 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:29.974359 22300 solver.cpp:398]     Test net output #0: accuracy = 0.1073
I0428 19:30:29.974381 22300 solver.cpp:398]     Test net output #1: loss = 2.31312 (* 1 = 2.31312 loss)
I0428 19:30:29.975991 22300 solver.cpp:219] Iteration 0 (-1.07059e-42 iter/s, 0.0772075s/100 iters), loss = 2.33065
I0428 19:30:29.976019 22300 solver.cpp:238]     Train net output #0: loss = 2.33065 (* 1 = 2.33065 loss)
I0428 19:30:29.976038 22300 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:30.033278 22300 solver.cpp:219] Iteration 100 (1746.61 iter/s, 0.0572538s/100 iters), loss = 1.36446
I0428 19:30:30.033306 22300 solver.cpp:238]     Train net output #0: loss = 1.36446 (* 1 = 1.36446 loss)
I0428 19:30:30.033331 22300 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:30.090443 22300 solver.cpp:219] Iteration 200 (1750.36 iter/s, 0.0571311s/100 iters), loss = 0.896817
I0428 19:30:30.090517 22300 solver.cpp:238]     Train net output #0: loss = 0.896817 (* 1 = 0.896817 loss)
I0428 19:30:30.090533 22300 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:30.147045 22300 solver.cpp:219] Iteration 300 (1768.1 iter/s, 0.056558s/100 iters), loss = 0.664591
I0428 19:30:30.147073 22300 solver.cpp:238]     Train net output #0: loss = 0.664591 (* 1 = 0.664591 loss)
I0428 19:30:30.147097 22300 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:30.203076 22300 solver.cpp:219] Iteration 400 (1785.76 iter/s, 0.0559985s/100 iters), loss = 0.469586
I0428 19:30:30.203102 22300 solver.cpp:238]     Train net output #0: loss = 0.469586 (* 1 = 0.469586 loss)
I0428 19:30:30.203127 22300 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:30.258767 22300 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:30.312427 22307 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:30.312847 22300 solver.cpp:398]     Test net output #0: accuracy = 0.8658
I0428 19:30:30.312870 22300 solver.cpp:398]     Test net output #1: loss = 0.430593 (* 1 = 0.430593 loss)
I0428 19:30:30.313537 22300 solver.cpp:219] Iteration 500 (905.583 iter/s, 0.110426s/100 iters), loss = 0.516521
I0428 19:30:30.313562 22300 solver.cpp:238]     Train net output #0: loss = 0.516521 (* 1 = 0.516521 loss)
I0428 19:30:30.313578 22300 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:30.371623 22300 solver.cpp:219] Iteration 600 (1722.51 iter/s, 0.0580547s/100 iters), loss = 0.268773
I0428 19:30:30.371654 22300 solver.cpp:238]     Train net output #0: loss = 0.268773 (* 1 = 0.268773 loss)
I0428 19:30:30.371680 22300 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:30.429844 22300 solver.cpp:219] Iteration 700 (1718.73 iter/s, 0.0581827s/100 iters), loss = 0.374639
I0428 19:30:30.429906 22300 solver.cpp:238]     Train net output #0: loss = 0.374639 (* 1 = 0.374639 loss)
I0428 19:30:30.429916 22300 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:30.487601 22300 solver.cpp:219] Iteration 800 (1733.37 iter/s, 0.057691s/100 iters), loss = 0.357883
I0428 19:30:30.487628 22300 solver.cpp:238]     Train net output #0: loss = 0.357883 (* 1 = 0.357883 loss)
I0428 19:30:30.487654 22300 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:30.545644 22300 solver.cpp:219] Iteration 900 (1723.82 iter/s, 0.0580106s/100 iters), loss = 0.356104
I0428 19:30:30.545671 22300 solver.cpp:238]     Train net output #0: loss = 0.356104 (* 1 = 0.356104 loss)
I0428 19:30:30.545697 22300 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:30.565117 22306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:30.603231 22300 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:30.603855 22300 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:30.604291 22300 solver.cpp:311] Iteration 1000, loss = 0.24584
I0428 19:30:30.604307 22300 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:30.657310 22307 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:30.657716 22300 solver.cpp:398]     Test net output #0: accuracy = 0.9236
I0428 19:30:30.657737 22300 solver.cpp:398]     Test net output #1: loss = 0.253372 (* 1 = 0.253372 loss)
I0428 19:30:30.657747 22300 solver.cpp:316] Optimization Done.
I0428 19:30:30.657752 22300 caffe.cpp:259] Optimization Done.
