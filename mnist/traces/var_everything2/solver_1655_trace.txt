I0428 20:37:43.586359  4988 caffe.cpp:218] Using GPUs 0
I0428 20:37:43.624006  4988 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:44.136047  4988 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1655.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:44.136194  4988 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1655.prototxt
I0428 20:37:44.136620  4988 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:44.136637  4988 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:44.136740  4988 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:44.136832  4988 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:44.136934  4988 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:44.136957  4988 net.cpp:86] Creating Layer mnist
I0428 20:37:44.136967  4988 net.cpp:382] mnist -> data
I0428 20:37:44.136991  4988 net.cpp:382] mnist -> label
I0428 20:37:44.138080  4988 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:44.140911  4988 net.cpp:124] Setting up mnist
I0428 20:37:44.140952  4988 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:44.140967  4988 net.cpp:131] Top shape: 64 (64)
I0428 20:37:44.140972  4988 net.cpp:139] Memory required for data: 200960
I0428 20:37:44.140980  4988 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:44.140997  4988 net.cpp:86] Creating Layer conv0
I0428 20:37:44.141017  4988 net.cpp:408] conv0 <- data
I0428 20:37:44.141034  4988 net.cpp:382] conv0 -> conv0
I0428 20:37:44.404371  4988 net.cpp:124] Setting up conv0
I0428 20:37:44.404412  4988 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:44.404417  4988 net.cpp:139] Memory required for data: 14946560
I0428 20:37:44.404433  4988 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:44.404445  4988 net.cpp:86] Creating Layer pool0
I0428 20:37:44.404449  4988 net.cpp:408] pool0 <- conv0
I0428 20:37:44.404454  4988 net.cpp:382] pool0 -> pool0
I0428 20:37:44.404517  4988 net.cpp:124] Setting up pool0
I0428 20:37:44.404525  4988 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:44.404527  4988 net.cpp:139] Memory required for data: 18632960
I0428 20:37:44.404531  4988 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:44.404541  4988 net.cpp:86] Creating Layer conv1
I0428 20:37:44.404546  4988 net.cpp:408] conv1 <- pool0
I0428 20:37:44.404567  4988 net.cpp:382] conv1 -> conv1
I0428 20:37:44.408613  4988 net.cpp:124] Setting up conv1
I0428 20:37:44.408643  4988 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:44.408648  4988 net.cpp:139] Memory required for data: 20271360
I0428 20:37:44.408655  4988 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:44.408663  4988 net.cpp:86] Creating Layer pool1
I0428 20:37:44.408666  4988 net.cpp:408] pool1 <- conv1
I0428 20:37:44.408670  4988 net.cpp:382] pool1 -> pool1
I0428 20:37:44.408705  4988 net.cpp:124] Setting up pool1
I0428 20:37:44.408710  4988 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:44.408713  4988 net.cpp:139] Memory required for data: 20680960
I0428 20:37:44.408716  4988 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:44.408722  4988 net.cpp:86] Creating Layer ip1
I0428 20:37:44.408725  4988 net.cpp:408] ip1 <- pool1
I0428 20:37:44.408730  4988 net.cpp:382] ip1 -> ip1
I0428 20:37:44.409883  4988 net.cpp:124] Setting up ip1
I0428 20:37:44.409896  4988 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:44.409915  4988 net.cpp:139] Memory required for data: 20683520
I0428 20:37:44.409924  4988 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:44.409930  4988 net.cpp:86] Creating Layer relu1
I0428 20:37:44.409934  4988 net.cpp:408] relu1 <- ip1
I0428 20:37:44.409939  4988 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:44.410114  4988 net.cpp:124] Setting up relu1
I0428 20:37:44.410122  4988 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:44.410126  4988 net.cpp:139] Memory required for data: 20686080
I0428 20:37:44.410130  4988 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:44.410135  4988 net.cpp:86] Creating Layer ip2
I0428 20:37:44.410138  4988 net.cpp:408] ip2 <- ip1
I0428 20:37:44.410143  4988 net.cpp:382] ip2 -> ip2
I0428 20:37:44.410249  4988 net.cpp:124] Setting up ip2
I0428 20:37:44.410256  4988 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:37:44.410260  4988 net.cpp:139] Memory required for data: 20692480
I0428 20:37:44.410265  4988 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:44.410272  4988 net.cpp:86] Creating Layer relu2
I0428 20:37:44.410275  4988 net.cpp:408] relu2 <- ip2
I0428 20:37:44.410279  4988 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:44.411043  4988 net.cpp:124] Setting up relu2
I0428 20:37:44.411056  4988 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:37:44.411074  4988 net.cpp:139] Memory required for data: 20698880
I0428 20:37:44.411077  4988 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:44.411085  4988 net.cpp:86] Creating Layer ip3
I0428 20:37:44.411088  4988 net.cpp:408] ip3 <- ip2
I0428 20:37:44.411093  4988 net.cpp:382] ip3 -> ip3
I0428 20:37:44.411202  4988 net.cpp:124] Setting up ip3
I0428 20:37:44.411209  4988 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:44.411212  4988 net.cpp:139] Memory required for data: 20701440
I0428 20:37:44.411221  4988 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:44.411226  4988 net.cpp:86] Creating Layer relu3
I0428 20:37:44.411228  4988 net.cpp:408] relu3 <- ip3
I0428 20:37:44.411278  4988 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:44.411433  4988 net.cpp:124] Setting up relu3
I0428 20:37:44.411442  4988 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:44.411447  4988 net.cpp:139] Memory required for data: 20704000
I0428 20:37:44.411449  4988 layer_factory.hpp:77] Creating layer loss
I0428 20:37:44.411455  4988 net.cpp:86] Creating Layer loss
I0428 20:37:44.411458  4988 net.cpp:408] loss <- ip3
I0428 20:37:44.411463  4988 net.cpp:408] loss <- label
I0428 20:37:44.411468  4988 net.cpp:382] loss -> loss
I0428 20:37:44.411487  4988 layer_factory.hpp:77] Creating layer loss
I0428 20:37:44.411733  4988 net.cpp:124] Setting up loss
I0428 20:37:44.411742  4988 net.cpp:131] Top shape: (1)
I0428 20:37:44.411746  4988 net.cpp:134]     with loss weight 1
I0428 20:37:44.411761  4988 net.cpp:139] Memory required for data: 20704004
I0428 20:37:44.411764  4988 net.cpp:200] loss needs backward computation.
I0428 20:37:44.411768  4988 net.cpp:200] relu3 needs backward computation.
I0428 20:37:44.411772  4988 net.cpp:200] ip3 needs backward computation.
I0428 20:37:44.411774  4988 net.cpp:200] relu2 needs backward computation.
I0428 20:37:44.411777  4988 net.cpp:200] ip2 needs backward computation.
I0428 20:37:44.411779  4988 net.cpp:200] relu1 needs backward computation.
I0428 20:37:44.411782  4988 net.cpp:200] ip1 needs backward computation.
I0428 20:37:44.411785  4988 net.cpp:200] pool1 needs backward computation.
I0428 20:37:44.411788  4988 net.cpp:200] conv1 needs backward computation.
I0428 20:37:44.411792  4988 net.cpp:200] pool0 needs backward computation.
I0428 20:37:44.411794  4988 net.cpp:200] conv0 needs backward computation.
I0428 20:37:44.411798  4988 net.cpp:202] mnist does not need backward computation.
I0428 20:37:44.411800  4988 net.cpp:244] This network produces output loss
I0428 20:37:44.411809  4988 net.cpp:257] Network initialization done.
I0428 20:37:44.412125  4988 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1655.prototxt
I0428 20:37:44.412180  4988 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:44.412282  4988 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:44.412374  4988 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:44.412417  4988 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:44.412431  4988 net.cpp:86] Creating Layer mnist
I0428 20:37:44.412434  4988 net.cpp:382] mnist -> data
I0428 20:37:44.412441  4988 net.cpp:382] mnist -> label
I0428 20:37:44.412525  4988 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:44.414677  4988 net.cpp:124] Setting up mnist
I0428 20:37:44.414706  4988 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:44.414711  4988 net.cpp:131] Top shape: 100 (100)
I0428 20:37:44.414714  4988 net.cpp:139] Memory required for data: 314000
I0428 20:37:44.414718  4988 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:44.414754  4988 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:44.414759  4988 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:44.414764  4988 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:44.414770  4988 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:44.414899  4988 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:44.414906  4988 net.cpp:131] Top shape: 100 (100)
I0428 20:37:44.414911  4988 net.cpp:131] Top shape: 100 (100)
I0428 20:37:44.414913  4988 net.cpp:139] Memory required for data: 314800
I0428 20:37:44.414916  4988 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:44.414924  4988 net.cpp:86] Creating Layer conv0
I0428 20:37:44.414927  4988 net.cpp:408] conv0 <- data
I0428 20:37:44.414932  4988 net.cpp:382] conv0 -> conv0
I0428 20:37:44.416596  4988 net.cpp:124] Setting up conv0
I0428 20:37:44.416610  4988 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:44.416615  4988 net.cpp:139] Memory required for data: 23354800
I0428 20:37:44.416622  4988 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:44.416628  4988 net.cpp:86] Creating Layer pool0
I0428 20:37:44.416632  4988 net.cpp:408] pool0 <- conv0
I0428 20:37:44.416636  4988 net.cpp:382] pool0 -> pool0
I0428 20:37:44.416671  4988 net.cpp:124] Setting up pool0
I0428 20:37:44.416676  4988 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:44.416678  4988 net.cpp:139] Memory required for data: 29114800
I0428 20:37:44.416681  4988 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:44.416688  4988 net.cpp:86] Creating Layer conv1
I0428 20:37:44.416692  4988 net.cpp:408] conv1 <- pool0
I0428 20:37:44.416697  4988 net.cpp:382] conv1 -> conv1
I0428 20:37:44.419797  4988 net.cpp:124] Setting up conv1
I0428 20:37:44.419811  4988 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:44.419814  4988 net.cpp:139] Memory required for data: 31674800
I0428 20:37:44.419822  4988 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:44.419828  4988 net.cpp:86] Creating Layer pool1
I0428 20:37:44.419832  4988 net.cpp:408] pool1 <- conv1
I0428 20:37:44.419837  4988 net.cpp:382] pool1 -> pool1
I0428 20:37:44.419870  4988 net.cpp:124] Setting up pool1
I0428 20:37:44.419881  4988 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:44.419884  4988 net.cpp:139] Memory required for data: 32314800
I0428 20:37:44.419888  4988 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:44.419893  4988 net.cpp:86] Creating Layer ip1
I0428 20:37:44.419896  4988 net.cpp:408] ip1 <- pool1
I0428 20:37:44.419900  4988 net.cpp:382] ip1 -> ip1
I0428 20:37:44.420089  4988 net.cpp:124] Setting up ip1
I0428 20:37:44.420109  4988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:44.420112  4988 net.cpp:139] Memory required for data: 32318800
I0428 20:37:44.420120  4988 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:44.420125  4988 net.cpp:86] Creating Layer relu1
I0428 20:37:44.420127  4988 net.cpp:408] relu1 <- ip1
I0428 20:37:44.420132  4988 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:44.420281  4988 net.cpp:124] Setting up relu1
I0428 20:37:44.420290  4988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:44.420315  4988 net.cpp:139] Memory required for data: 32322800
I0428 20:37:44.420317  4988 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:44.420323  4988 net.cpp:86] Creating Layer ip2
I0428 20:37:44.420326  4988 net.cpp:408] ip2 <- ip1
I0428 20:37:44.420331  4988 net.cpp:382] ip2 -> ip2
I0428 20:37:44.420419  4988 net.cpp:124] Setting up ip2
I0428 20:37:44.420425  4988 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:37:44.420429  4988 net.cpp:139] Memory required for data: 32332800
I0428 20:37:44.420434  4988 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:44.420439  4988 net.cpp:86] Creating Layer relu2
I0428 20:37:44.420447  4988 net.cpp:408] relu2 <- ip2
I0428 20:37:44.420450  4988 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:44.420585  4988 net.cpp:124] Setting up relu2
I0428 20:37:44.420593  4988 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:37:44.420596  4988 net.cpp:139] Memory required for data: 32342800
I0428 20:37:44.420599  4988 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:44.420604  4988 net.cpp:86] Creating Layer ip3
I0428 20:37:44.420614  4988 net.cpp:408] ip3 <- ip2
I0428 20:37:44.420634  4988 net.cpp:382] ip3 -> ip3
I0428 20:37:44.420728  4988 net.cpp:124] Setting up ip3
I0428 20:37:44.420734  4988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:44.420754  4988 net.cpp:139] Memory required for data: 32346800
I0428 20:37:44.420763  4988 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:44.420766  4988 net.cpp:86] Creating Layer relu3
I0428 20:37:44.420770  4988 net.cpp:408] relu3 <- ip3
I0428 20:37:44.420773  4988 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:44.421656  4988 net.cpp:124] Setting up relu3
I0428 20:37:44.421669  4988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:44.421672  4988 net.cpp:139] Memory required for data: 32350800
I0428 20:37:44.421675  4988 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:44.421687  4988 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:44.421696  4988 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:44.421702  4988 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:44.421708  4988 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:44.421797  4988 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:44.421804  4988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:44.421808  4988 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:44.421811  4988 net.cpp:139] Memory required for data: 32358800
I0428 20:37:44.421814  4988 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:44.421819  4988 net.cpp:86] Creating Layer accuracy
I0428 20:37:44.421828  4988 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:44.421833  4988 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:44.421836  4988 net.cpp:382] accuracy -> accuracy
I0428 20:37:44.421842  4988 net.cpp:124] Setting up accuracy
I0428 20:37:44.421846  4988 net.cpp:131] Top shape: (1)
I0428 20:37:44.421849  4988 net.cpp:139] Memory required for data: 32358804
I0428 20:37:44.421857  4988 layer_factory.hpp:77] Creating layer loss
I0428 20:37:44.421861  4988 net.cpp:86] Creating Layer loss
I0428 20:37:44.421864  4988 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:44.421869  4988 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:44.421877  4988 net.cpp:382] loss -> loss
I0428 20:37:44.421883  4988 layer_factory.hpp:77] Creating layer loss
I0428 20:37:44.422111  4988 net.cpp:124] Setting up loss
I0428 20:37:44.422118  4988 net.cpp:131] Top shape: (1)
I0428 20:37:44.422122  4988 net.cpp:134]     with loss weight 1
I0428 20:37:44.422139  4988 net.cpp:139] Memory required for data: 32358808
I0428 20:37:44.422165  4988 net.cpp:200] loss needs backward computation.
I0428 20:37:44.422169  4988 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:44.422173  4988 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:44.422176  4988 net.cpp:200] relu3 needs backward computation.
I0428 20:37:44.422179  4988 net.cpp:200] ip3 needs backward computation.
I0428 20:37:44.422183  4988 net.cpp:200] relu2 needs backward computation.
I0428 20:37:44.422186  4988 net.cpp:200] ip2 needs backward computation.
I0428 20:37:44.422189  4988 net.cpp:200] relu1 needs backward computation.
I0428 20:37:44.422193  4988 net.cpp:200] ip1 needs backward computation.
I0428 20:37:44.422195  4988 net.cpp:200] pool1 needs backward computation.
I0428 20:37:44.422199  4988 net.cpp:200] conv1 needs backward computation.
I0428 20:37:44.422207  4988 net.cpp:200] pool0 needs backward computation.
I0428 20:37:44.422221  4988 net.cpp:200] conv0 needs backward computation.
I0428 20:37:44.422231  4988 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:44.422235  4988 net.cpp:202] mnist does not need backward computation.
I0428 20:37:44.422238  4988 net.cpp:244] This network produces output accuracy
I0428 20:37:44.422247  4988 net.cpp:244] This network produces output loss
I0428 20:37:44.422258  4988 net.cpp:257] Network initialization done.
I0428 20:37:44.422302  4988 solver.cpp:56] Solver scaffolding done.
I0428 20:37:44.422662  4988 caffe.cpp:248] Starting Optimization
I0428 20:37:44.422669  4988 solver.cpp:273] Solving LeNet
I0428 20:37:44.422672  4988 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:44.423472  4988 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:44.559397  4995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:44.562899  4988 solver.cpp:398]     Test net output #0: accuracy = 0.0853
I0428 20:37:44.562932  4988 solver.cpp:398]     Test net output #1: loss = 2.30886 (* 1 = 2.30886 loss)
I0428 20:37:44.569991  4988 solver.cpp:219] Iteration 0 (-1.39052e-31 iter/s, 0.147292s/100 iters), loss = 2.29986
I0428 20:37:44.570019  4988 solver.cpp:238]     Train net output #0: loss = 2.29986 (* 1 = 2.29986 loss)
I0428 20:37:44.570032  4988 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:44.846714  4988 solver.cpp:219] Iteration 100 (361.437 iter/s, 0.276674s/100 iters), loss = 0.965796
I0428 20:37:44.846752  4988 solver.cpp:238]     Train net output #0: loss = 0.965796 (* 1 = 0.965796 loss)
I0428 20:37:44.846761  4988 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:45.118505  4988 solver.cpp:219] Iteration 200 (368.016 iter/s, 0.271728s/100 iters), loss = 0.468475
I0428 20:37:45.118574  4988 solver.cpp:238]     Train net output #0: loss = 0.468475 (* 1 = 0.468475 loss)
I0428 20:37:45.118588  4988 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:45.388365  4988 solver.cpp:219] Iteration 300 (370.677 iter/s, 0.269777s/100 iters), loss = 0.269776
I0428 20:37:45.388411  4988 solver.cpp:238]     Train net output #0: loss = 0.269776 (* 1 = 0.269776 loss)
I0428 20:37:45.388419  4988 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:45.659425  4988 solver.cpp:219] Iteration 400 (369.013 iter/s, 0.270994s/100 iters), loss = 0.176371
I0428 20:37:45.659476  4988 solver.cpp:238]     Train net output #0: loss = 0.176371 (* 1 = 0.176371 loss)
I0428 20:37:45.659483  4988 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:45.928051  4988 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:46.055629  4995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:46.058929  4988 solver.cpp:398]     Test net output #0: accuracy = 0.9579
I0428 20:37:46.058969  4988 solver.cpp:398]     Test net output #1: loss = 0.142613 (* 1 = 0.142613 loss)
I0428 20:37:46.061570  4988 solver.cpp:219] Iteration 500 (248.702 iter/s, 0.402088s/100 iters), loss = 0.15958
I0428 20:37:46.061609  4988 solver.cpp:238]     Train net output #0: loss = 0.15958 (* 1 = 0.15958 loss)
I0428 20:37:46.061631  4988 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:46.335294  4988 solver.cpp:219] Iteration 600 (365.387 iter/s, 0.273682s/100 iters), loss = 0.0799604
I0428 20:37:46.335322  4988 solver.cpp:238]     Train net output #0: loss = 0.0799604 (* 1 = 0.0799604 loss)
I0428 20:37:46.335346  4988 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:46.610070  4988 solver.cpp:219] Iteration 700 (363.994 iter/s, 0.27473s/100 iters), loss = 0.108877
I0428 20:37:46.610113  4988 solver.cpp:238]     Train net output #0: loss = 0.108877 (* 1 = 0.108877 loss)
I0428 20:37:46.610121  4988 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:46.883218  4988 solver.cpp:219] Iteration 800 (366.183 iter/s, 0.273087s/100 iters), loss = 0.349977
I0428 20:37:46.883261  4988 solver.cpp:238]     Train net output #0: loss = 0.349977 (* 1 = 0.349977 loss)
I0428 20:37:46.883270  4988 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:47.153388  4988 solver.cpp:219] Iteration 900 (370.221 iter/s, 0.270109s/100 iters), loss = 0.152845
I0428 20:37:47.153426  4988 solver.cpp:238]     Train net output #0: loss = 0.152845 (* 1 = 0.152845 loss)
I0428 20:37:47.153434  4988 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:47.242365  4994 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:47.417381  4988 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:47.422061  4988 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:47.424919  4988 solver.cpp:311] Iteration 1000, loss = 0.0998332
I0428 20:37:47.424935  4988 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:47.554430  4995 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:47.558445  4988 solver.cpp:398]     Test net output #0: accuracy = 0.9732
I0428 20:37:47.558480  4988 solver.cpp:398]     Test net output #1: loss = 0.086106 (* 1 = 0.086106 loss)
I0428 20:37:47.558490  4988 solver.cpp:316] Optimization Done.
I0428 20:37:47.558498  4988 caffe.cpp:259] Optimization Done.
