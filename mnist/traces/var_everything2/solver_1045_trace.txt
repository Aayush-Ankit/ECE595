I0428 20:07:03.682243 31016 caffe.cpp:218] Using GPUs 0
I0428 20:07:03.717769 31016 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:04.228349 31016 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1045.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:04.228492 31016 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1045.prototxt
I0428 20:07:04.228907 31016 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:04.228924 31016 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:04.229022 31016 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:04.229097 31016 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:04.229200 31016 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:04.229225 31016 net.cpp:86] Creating Layer mnist
I0428 20:07:04.229234 31016 net.cpp:382] mnist -> data
I0428 20:07:04.229259 31016 net.cpp:382] mnist -> label
I0428 20:07:04.230403 31016 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:04.232956 31016 net.cpp:124] Setting up mnist
I0428 20:07:04.232975 31016 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:04.232981 31016 net.cpp:131] Top shape: 64 (64)
I0428 20:07:04.232986 31016 net.cpp:139] Memory required for data: 200960
I0428 20:07:04.232995 31016 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:04.233009 31016 net.cpp:86] Creating Layer conv0
I0428 20:07:04.233032 31016 net.cpp:408] conv0 <- data
I0428 20:07:04.233044 31016 net.cpp:382] conv0 -> conv0
I0428 20:07:04.510746 31016 net.cpp:124] Setting up conv0
I0428 20:07:04.510773 31016 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:04.510777 31016 net.cpp:139] Memory required for data: 3887360
I0428 20:07:04.510792 31016 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:04.510805 31016 net.cpp:86] Creating Layer pool0
I0428 20:07:04.510808 31016 net.cpp:408] pool0 <- conv0
I0428 20:07:04.510813 31016 net.cpp:382] pool0 -> pool0
I0428 20:07:04.510871 31016 net.cpp:124] Setting up pool0
I0428 20:07:04.510876 31016 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:04.510879 31016 net.cpp:139] Memory required for data: 4808960
I0428 20:07:04.510882 31016 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:04.510892 31016 net.cpp:86] Creating Layer conv1
I0428 20:07:04.510895 31016 net.cpp:408] conv1 <- pool0
I0428 20:07:04.510900 31016 net.cpp:382] conv1 -> conv1
I0428 20:07:04.513617 31016 net.cpp:124] Setting up conv1
I0428 20:07:04.513645 31016 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:04.513649 31016 net.cpp:139] Memory required for data: 4890880
I0428 20:07:04.513659 31016 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:04.513665 31016 net.cpp:86] Creating Layer pool1
I0428 20:07:04.513669 31016 net.cpp:408] pool1 <- conv1
I0428 20:07:04.513674 31016 net.cpp:382] pool1 -> pool1
I0428 20:07:04.513723 31016 net.cpp:124] Setting up pool1
I0428 20:07:04.513728 31016 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:04.513732 31016 net.cpp:139] Memory required for data: 4911360
I0428 20:07:04.513736 31016 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:04.513741 31016 net.cpp:86] Creating Layer ip1
I0428 20:07:04.513744 31016 net.cpp:408] ip1 <- pool1
I0428 20:07:04.513749 31016 net.cpp:382] ip1 -> ip1
I0428 20:07:04.513873 31016 net.cpp:124] Setting up ip1
I0428 20:07:04.513880 31016 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:04.513883 31016 net.cpp:139] Memory required for data: 4924160
I0428 20:07:04.513890 31016 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:04.513895 31016 net.cpp:86] Creating Layer relu1
I0428 20:07:04.513898 31016 net.cpp:408] relu1 <- ip1
I0428 20:07:04.513902 31016 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:04.514052 31016 net.cpp:124] Setting up relu1
I0428 20:07:04.514061 31016 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:04.514065 31016 net.cpp:139] Memory required for data: 4936960
I0428 20:07:04.514067 31016 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:04.514072 31016 net.cpp:86] Creating Layer ip2
I0428 20:07:04.514075 31016 net.cpp:408] ip2 <- ip1
I0428 20:07:04.514081 31016 net.cpp:382] ip2 -> ip2
I0428 20:07:04.514168 31016 net.cpp:124] Setting up ip2
I0428 20:07:04.514175 31016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:04.514178 31016 net.cpp:139] Memory required for data: 4939520
I0428 20:07:04.514183 31016 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:04.514189 31016 net.cpp:86] Creating Layer relu2
I0428 20:07:04.514191 31016 net.cpp:408] relu2 <- ip2
I0428 20:07:04.514195 31016 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:04.515036 31016 net.cpp:124] Setting up relu2
I0428 20:07:04.515048 31016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:04.515066 31016 net.cpp:139] Memory required for data: 4942080
I0428 20:07:04.515070 31016 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:04.515077 31016 net.cpp:86] Creating Layer ip3
I0428 20:07:04.515080 31016 net.cpp:408] ip3 <- ip2
I0428 20:07:04.515085 31016 net.cpp:382] ip3 -> ip3
I0428 20:07:04.515193 31016 net.cpp:124] Setting up ip3
I0428 20:07:04.515200 31016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:04.515203 31016 net.cpp:139] Memory required for data: 4944640
I0428 20:07:04.515210 31016 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:04.515215 31016 net.cpp:86] Creating Layer relu3
I0428 20:07:04.515218 31016 net.cpp:408] relu3 <- ip3
I0428 20:07:04.515223 31016 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:04.515391 31016 net.cpp:124] Setting up relu3
I0428 20:07:04.515401 31016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:04.515404 31016 net.cpp:139] Memory required for data: 4947200
I0428 20:07:04.515408 31016 layer_factory.hpp:77] Creating layer loss
I0428 20:07:04.515413 31016 net.cpp:86] Creating Layer loss
I0428 20:07:04.515416 31016 net.cpp:408] loss <- ip3
I0428 20:07:04.515420 31016 net.cpp:408] loss <- label
I0428 20:07:04.515425 31016 net.cpp:382] loss -> loss
I0428 20:07:04.515442 31016 layer_factory.hpp:77] Creating layer loss
I0428 20:07:04.515658 31016 net.cpp:124] Setting up loss
I0428 20:07:04.515668 31016 net.cpp:131] Top shape: (1)
I0428 20:07:04.515671 31016 net.cpp:134]     with loss weight 1
I0428 20:07:04.515686 31016 net.cpp:139] Memory required for data: 4947204
I0428 20:07:04.515688 31016 net.cpp:200] loss needs backward computation.
I0428 20:07:04.515691 31016 net.cpp:200] relu3 needs backward computation.
I0428 20:07:04.515694 31016 net.cpp:200] ip3 needs backward computation.
I0428 20:07:04.515697 31016 net.cpp:200] relu2 needs backward computation.
I0428 20:07:04.515700 31016 net.cpp:200] ip2 needs backward computation.
I0428 20:07:04.515702 31016 net.cpp:200] relu1 needs backward computation.
I0428 20:07:04.515705 31016 net.cpp:200] ip1 needs backward computation.
I0428 20:07:04.515708 31016 net.cpp:200] pool1 needs backward computation.
I0428 20:07:04.515712 31016 net.cpp:200] conv1 needs backward computation.
I0428 20:07:04.515714 31016 net.cpp:200] pool0 needs backward computation.
I0428 20:07:04.515718 31016 net.cpp:200] conv0 needs backward computation.
I0428 20:07:04.515723 31016 net.cpp:202] mnist does not need backward computation.
I0428 20:07:04.515729 31016 net.cpp:244] This network produces output loss
I0428 20:07:04.515739 31016 net.cpp:257] Network initialization done.
I0428 20:07:04.516109 31016 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1045.prototxt
I0428 20:07:04.516167 31016 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:04.516258 31016 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:04.516335 31016 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:04.516392 31016 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:04.516405 31016 net.cpp:86] Creating Layer mnist
I0428 20:07:04.516409 31016 net.cpp:382] mnist -> data
I0428 20:07:04.516417 31016 net.cpp:382] mnist -> label
I0428 20:07:04.516496 31016 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:04.518543 31016 net.cpp:124] Setting up mnist
I0428 20:07:04.518573 31016 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:04.518592 31016 net.cpp:131] Top shape: 100 (100)
I0428 20:07:04.518595 31016 net.cpp:139] Memory required for data: 314000
I0428 20:07:04.518599 31016 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:04.518611 31016 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:04.518615 31016 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:04.518620 31016 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:04.518626 31016 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:04.518748 31016 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:04.518757 31016 net.cpp:131] Top shape: 100 (100)
I0428 20:07:04.518760 31016 net.cpp:131] Top shape: 100 (100)
I0428 20:07:04.518764 31016 net.cpp:139] Memory required for data: 314800
I0428 20:07:04.518767 31016 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:04.518776 31016 net.cpp:86] Creating Layer conv0
I0428 20:07:04.518779 31016 net.cpp:408] conv0 <- data
I0428 20:07:04.518784 31016 net.cpp:382] conv0 -> conv0
I0428 20:07:04.520210 31016 net.cpp:124] Setting up conv0
I0428 20:07:04.520239 31016 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:04.520243 31016 net.cpp:139] Memory required for data: 6074800
I0428 20:07:04.520252 31016 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:04.520274 31016 net.cpp:86] Creating Layer pool0
I0428 20:07:04.520277 31016 net.cpp:408] pool0 <- conv0
I0428 20:07:04.520282 31016 net.cpp:382] pool0 -> pool0
I0428 20:07:04.520334 31016 net.cpp:124] Setting up pool0
I0428 20:07:04.520350 31016 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:04.520354 31016 net.cpp:139] Memory required for data: 7514800
I0428 20:07:04.520356 31016 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:04.520365 31016 net.cpp:86] Creating Layer conv1
I0428 20:07:04.520368 31016 net.cpp:408] conv1 <- pool0
I0428 20:07:04.520373 31016 net.cpp:382] conv1 -> conv1
I0428 20:07:04.522529 31016 net.cpp:124] Setting up conv1
I0428 20:07:04.522557 31016 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:04.522562 31016 net.cpp:139] Memory required for data: 7642800
I0428 20:07:04.522569 31016 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:04.522577 31016 net.cpp:86] Creating Layer pool1
I0428 20:07:04.522579 31016 net.cpp:408] pool1 <- conv1
I0428 20:07:04.522584 31016 net.cpp:382] pool1 -> pool1
I0428 20:07:04.522646 31016 net.cpp:124] Setting up pool1
I0428 20:07:04.522652 31016 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:04.522655 31016 net.cpp:139] Memory required for data: 7674800
I0428 20:07:04.522658 31016 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:04.522670 31016 net.cpp:86] Creating Layer ip1
I0428 20:07:04.522673 31016 net.cpp:408] ip1 <- pool1
I0428 20:07:04.522678 31016 net.cpp:382] ip1 -> ip1
I0428 20:07:04.522800 31016 net.cpp:124] Setting up ip1
I0428 20:07:04.522809 31016 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:04.522825 31016 net.cpp:139] Memory required for data: 7694800
I0428 20:07:04.522831 31016 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:04.522837 31016 net.cpp:86] Creating Layer relu1
I0428 20:07:04.522840 31016 net.cpp:408] relu1 <- ip1
I0428 20:07:04.522845 31016 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:04.523010 31016 net.cpp:124] Setting up relu1
I0428 20:07:04.523018 31016 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:04.523025 31016 net.cpp:139] Memory required for data: 7714800
I0428 20:07:04.523030 31016 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:04.523037 31016 net.cpp:86] Creating Layer ip2
I0428 20:07:04.523041 31016 net.cpp:408] ip2 <- ip1
I0428 20:07:04.523046 31016 net.cpp:382] ip2 -> ip2
I0428 20:07:04.523146 31016 net.cpp:124] Setting up ip2
I0428 20:07:04.523154 31016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:04.523157 31016 net.cpp:139] Memory required for data: 7718800
I0428 20:07:04.523162 31016 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:04.523166 31016 net.cpp:86] Creating Layer relu2
I0428 20:07:04.523170 31016 net.cpp:408] relu2 <- ip2
I0428 20:07:04.523175 31016 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:04.523334 31016 net.cpp:124] Setting up relu2
I0428 20:07:04.523341 31016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:04.523344 31016 net.cpp:139] Memory required for data: 7722800
I0428 20:07:04.523349 31016 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:04.523355 31016 net.cpp:86] Creating Layer ip3
I0428 20:07:04.523357 31016 net.cpp:408] ip3 <- ip2
I0428 20:07:04.523363 31016 net.cpp:382] ip3 -> ip3
I0428 20:07:04.523468 31016 net.cpp:124] Setting up ip3
I0428 20:07:04.523475 31016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:04.523478 31016 net.cpp:139] Memory required for data: 7726800
I0428 20:07:04.523485 31016 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:04.523490 31016 net.cpp:86] Creating Layer relu3
I0428 20:07:04.523494 31016 net.cpp:408] relu3 <- ip3
I0428 20:07:04.523514 31016 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:04.524412 31016 net.cpp:124] Setting up relu3
I0428 20:07:04.524443 31016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:04.524448 31016 net.cpp:139] Memory required for data: 7730800
I0428 20:07:04.524454 31016 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:04.524462 31016 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:04.524468 31016 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:04.524477 31016 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:04.524487 31016 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:04.524531 31016 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:04.524538 31016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:04.524543 31016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:04.524545 31016 net.cpp:139] Memory required for data: 7738800
I0428 20:07:04.524547 31016 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:04.524554 31016 net.cpp:86] Creating Layer accuracy
I0428 20:07:04.524557 31016 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:04.524567 31016 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:04.524572 31016 net.cpp:382] accuracy -> accuracy
I0428 20:07:04.524595 31016 net.cpp:124] Setting up accuracy
I0428 20:07:04.524600 31016 net.cpp:131] Top shape: (1)
I0428 20:07:04.524603 31016 net.cpp:139] Memory required for data: 7738804
I0428 20:07:04.524606 31016 layer_factory.hpp:77] Creating layer loss
I0428 20:07:04.524611 31016 net.cpp:86] Creating Layer loss
I0428 20:07:04.524615 31016 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:04.524617 31016 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:04.524621 31016 net.cpp:382] loss -> loss
I0428 20:07:04.524627 31016 layer_factory.hpp:77] Creating layer loss
I0428 20:07:04.524917 31016 net.cpp:124] Setting up loss
I0428 20:07:04.524943 31016 net.cpp:131] Top shape: (1)
I0428 20:07:04.524966 31016 net.cpp:134]     with loss weight 1
I0428 20:07:04.524971 31016 net.cpp:139] Memory required for data: 7738808
I0428 20:07:04.524988 31016 net.cpp:200] loss needs backward computation.
I0428 20:07:04.524993 31016 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:04.524997 31016 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:04.525001 31016 net.cpp:200] relu3 needs backward computation.
I0428 20:07:04.525003 31016 net.cpp:200] ip3 needs backward computation.
I0428 20:07:04.525007 31016 net.cpp:200] relu2 needs backward computation.
I0428 20:07:04.525009 31016 net.cpp:200] ip2 needs backward computation.
I0428 20:07:04.525012 31016 net.cpp:200] relu1 needs backward computation.
I0428 20:07:04.525015 31016 net.cpp:200] ip1 needs backward computation.
I0428 20:07:04.525019 31016 net.cpp:200] pool1 needs backward computation.
I0428 20:07:04.525022 31016 net.cpp:200] conv1 needs backward computation.
I0428 20:07:04.525027 31016 net.cpp:200] pool0 needs backward computation.
I0428 20:07:04.525029 31016 net.cpp:200] conv0 needs backward computation.
I0428 20:07:04.525033 31016 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:04.525038 31016 net.cpp:202] mnist does not need backward computation.
I0428 20:07:04.525040 31016 net.cpp:244] This network produces output accuracy
I0428 20:07:04.525044 31016 net.cpp:244] This network produces output loss
I0428 20:07:04.525058 31016 net.cpp:257] Network initialization done.
I0428 20:07:04.525108 31016 solver.cpp:56] Solver scaffolding done.
I0428 20:07:04.525578 31016 caffe.cpp:248] Starting Optimization
I0428 20:07:04.525585 31016 solver.cpp:273] Solving LeNet
I0428 20:07:04.525588 31016 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:04.526330 31016 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:04.531411 31016 blocking_queue.cpp:49] Waiting for data
I0428 20:07:04.601164 31024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:04.601764 31016 solver.cpp:398]     Test net output #0: accuracy = 0.0972
I0428 20:07:04.601801 31016 solver.cpp:398]     Test net output #1: loss = 2.30694 (* 1 = 2.30694 loss)
I0428 20:07:04.605414 31016 solver.cpp:219] Iteration 0 (0 iter/s, 0.0797809s/100 iters), loss = 2.29423
I0428 20:07:04.605453 31016 solver.cpp:238]     Train net output #0: loss = 2.29423 (* 1 = 2.29423 loss)
I0428 20:07:04.605464 31016 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:04.696076 31016 solver.cpp:219] Iteration 100 (1103.42 iter/s, 0.0906271s/100 iters), loss = 1.56691
I0428 20:07:04.696101 31016 solver.cpp:238]     Train net output #0: loss = 1.56691 (* 1 = 1.56691 loss)
I0428 20:07:04.696126 31016 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:04.789173 31016 solver.cpp:219] Iteration 200 (1074.56 iter/s, 0.0930611s/100 iters), loss = 1.21594
I0428 20:07:04.789198 31016 solver.cpp:238]     Train net output #0: loss = 1.21594 (* 1 = 1.21594 loss)
I0428 20:07:04.789222 31016 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:04.876202 31016 solver.cpp:219] Iteration 300 (1149.52 iter/s, 0.086993s/100 iters), loss = 0.901461
I0428 20:07:04.876243 31016 solver.cpp:238]     Train net output #0: loss = 0.901461 (* 1 = 0.901461 loss)
I0428 20:07:04.876251 31016 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:04.963693 31016 solver.cpp:219] Iteration 400 (1143.85 iter/s, 0.087424s/100 iters), loss = 0.687822
I0428 20:07:04.963718 31016 solver.cpp:238]     Train net output #0: loss = 0.687822 (* 1 = 0.687822 loss)
I0428 20:07:04.963724 31016 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:05.050226 31016 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:05.105715 31024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:05.106325 31016 solver.cpp:398]     Test net output #0: accuracy = 0.7438
I0428 20:07:05.106361 31016 solver.cpp:398]     Test net output #1: loss = 0.772456 (* 1 = 0.772456 loss)
I0428 20:07:05.107323 31016 solver.cpp:219] Iteration 500 (696.415 iter/s, 0.143592s/100 iters), loss = 0.734956
I0428 20:07:05.107364 31016 solver.cpp:238]     Train net output #0: loss = 0.734956 (* 1 = 0.734956 loss)
I0428 20:07:05.107389 31016 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:05.204890 31016 solver.cpp:219] Iteration 600 (1025.47 iter/s, 0.0975161s/100 iters), loss = 0.553264
I0428 20:07:05.204929 31016 solver.cpp:238]     Train net output #0: loss = 0.553264 (* 1 = 0.553264 loss)
I0428 20:07:05.204937 31016 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:05.294301 31016 solver.cpp:219] Iteration 700 (1118.86 iter/s, 0.0893768s/100 iters), loss = 0.847866
I0428 20:07:05.294342 31016 solver.cpp:238]     Train net output #0: loss = 0.847866 (* 1 = 0.847866 loss)
I0428 20:07:05.294348 31016 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:05.381851 31016 solver.cpp:219] Iteration 800 (1142.84 iter/s, 0.087501s/100 iters), loss = 0.711868
I0428 20:07:05.381891 31016 solver.cpp:238]     Train net output #0: loss = 0.711868 (* 1 = 0.711868 loss)
I0428 20:07:05.381897 31016 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:05.468761 31016 solver.cpp:219] Iteration 900 (1151.06 iter/s, 0.0868762s/100 iters), loss = 0.555567
I0428 20:07:05.468801 31016 solver.cpp:238]     Train net output #0: loss = 0.555567 (* 1 = 0.555567 loss)
I0428 20:07:05.468807 31016 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:05.498214 31023 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:05.555302 31016 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:05.556146 31016 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:05.556720 31016 solver.cpp:311] Iteration 1000, loss = 0.58768
I0428 20:07:05.556735 31016 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:05.631804 31024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:05.632424 31016 solver.cpp:398]     Test net output #0: accuracy = 0.7769
I0428 20:07:05.632458 31016 solver.cpp:398]     Test net output #1: loss = 0.570608 (* 1 = 0.570608 loss)
I0428 20:07:05.632463 31016 solver.cpp:316] Optimization Done.
I0428 20:07:05.632467 31016 caffe.cpp:259] Optimization Done.
