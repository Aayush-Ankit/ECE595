I0428 19:55:42.174216 28237 caffe.cpp:218] Using GPUs 0
I0428 19:55:42.203749 28237 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:42.654700 28237 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test738.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:42.654860 28237 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test738.prototxt
I0428 19:55:42.655172 28237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:42.655187 28237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:42.655263 28237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:42.655323 28237 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:42.655402 28237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:42.655421 28237 net.cpp:86] Creating Layer mnist
I0428 19:55:42.655427 28237 net.cpp:382] mnist -> data
I0428 19:55:42.655447 28237 net.cpp:382] mnist -> label
I0428 19:55:42.656357 28237 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:42.658578 28237 net.cpp:124] Setting up mnist
I0428 19:55:42.658608 28237 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:42.658615 28237 net.cpp:131] Top shape: 64 (64)
I0428 19:55:42.658618 28237 net.cpp:139] Memory required for data: 200960
I0428 19:55:42.658623 28237 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:42.658637 28237 net.cpp:86] Creating Layer conv0
I0428 19:55:42.658663 28237 net.cpp:408] conv0 <- data
I0428 19:55:42.658674 28237 net.cpp:382] conv0 -> conv0
I0428 19:55:42.887473 28237 net.cpp:124] Setting up conv0
I0428 19:55:42.887514 28237 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:42.887518 28237 net.cpp:139] Memory required for data: 938240
I0428 19:55:42.887533 28237 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:42.887545 28237 net.cpp:86] Creating Layer pool0
I0428 19:55:42.887549 28237 net.cpp:408] pool0 <- conv0
I0428 19:55:42.887554 28237 net.cpp:382] pool0 -> pool0
I0428 19:55:42.887614 28237 net.cpp:124] Setting up pool0
I0428 19:55:42.887619 28237 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:42.887622 28237 net.cpp:139] Memory required for data: 1122560
I0428 19:55:42.887625 28237 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:42.887636 28237 net.cpp:86] Creating Layer conv1
I0428 19:55:42.887639 28237 net.cpp:408] conv1 <- pool0
I0428 19:55:42.887643 28237 net.cpp:382] conv1 -> conv1
I0428 19:55:42.890463 28237 net.cpp:124] Setting up conv1
I0428 19:55:42.890493 28237 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:42.890497 28237 net.cpp:139] Memory required for data: 2760960
I0428 19:55:42.890506 28237 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:42.890513 28237 net.cpp:86] Creating Layer pool1
I0428 19:55:42.890517 28237 net.cpp:408] pool1 <- conv1
I0428 19:55:42.890522 28237 net.cpp:382] pool1 -> pool1
I0428 19:55:42.890579 28237 net.cpp:124] Setting up pool1
I0428 19:55:42.890585 28237 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:42.890588 28237 net.cpp:139] Memory required for data: 3170560
I0428 19:55:42.890590 28237 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:42.890597 28237 net.cpp:86] Creating Layer ip1
I0428 19:55:42.890600 28237 net.cpp:408] ip1 <- pool1
I0428 19:55:42.890605 28237 net.cpp:382] ip1 -> ip1
I0428 19:55:42.892133 28237 net.cpp:124] Setting up ip1
I0428 19:55:42.892145 28237 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:42.892164 28237 net.cpp:139] Memory required for data: 3183360
I0428 19:55:42.892172 28237 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:42.892179 28237 net.cpp:86] Creating Layer relu1
I0428 19:55:42.892181 28237 net.cpp:408] relu1 <- ip1
I0428 19:55:42.892185 28237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:42.892375 28237 net.cpp:124] Setting up relu1
I0428 19:55:42.892385 28237 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:42.892388 28237 net.cpp:139] Memory required for data: 3196160
I0428 19:55:42.892391 28237 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:42.892402 28237 net.cpp:86] Creating Layer ip2
I0428 19:55:42.892405 28237 net.cpp:408] ip2 <- ip1
I0428 19:55:42.892411 28237 net.cpp:382] ip2 -> ip2
I0428 19:55:42.893419 28237 net.cpp:124] Setting up ip2
I0428 19:55:42.893430 28237 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:42.893450 28237 net.cpp:139] Memory required for data: 3208960
I0428 19:55:42.893455 28237 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:42.893463 28237 net.cpp:86] Creating Layer relu2
I0428 19:55:42.893466 28237 net.cpp:408] relu2 <- ip2
I0428 19:55:42.893471 28237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:42.894304 28237 net.cpp:124] Setting up relu2
I0428 19:55:42.894317 28237 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:42.894336 28237 net.cpp:139] Memory required for data: 3221760
I0428 19:55:42.894340 28237 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:42.894346 28237 net.cpp:86] Creating Layer ip3
I0428 19:55:42.894351 28237 net.cpp:408] ip3 <- ip2
I0428 19:55:42.894356 28237 net.cpp:382] ip3 -> ip3
I0428 19:55:42.894466 28237 net.cpp:124] Setting up ip3
I0428 19:55:42.894474 28237 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:42.894476 28237 net.cpp:139] Memory required for data: 3224320
I0428 19:55:42.894484 28237 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:42.894490 28237 net.cpp:86] Creating Layer relu3
I0428 19:55:42.894493 28237 net.cpp:408] relu3 <- ip3
I0428 19:55:42.894496 28237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:42.894687 28237 net.cpp:124] Setting up relu3
I0428 19:55:42.894697 28237 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:42.894701 28237 net.cpp:139] Memory required for data: 3226880
I0428 19:55:42.894703 28237 layer_factory.hpp:77] Creating layer loss
I0428 19:55:42.894711 28237 net.cpp:86] Creating Layer loss
I0428 19:55:42.894713 28237 net.cpp:408] loss <- ip3
I0428 19:55:42.894717 28237 net.cpp:408] loss <- label
I0428 19:55:42.894723 28237 net.cpp:382] loss -> loss
I0428 19:55:42.894742 28237 layer_factory.hpp:77] Creating layer loss
I0428 19:55:42.895009 28237 net.cpp:124] Setting up loss
I0428 19:55:42.895018 28237 net.cpp:131] Top shape: (1)
I0428 19:55:42.895021 28237 net.cpp:134]     with loss weight 1
I0428 19:55:42.895035 28237 net.cpp:139] Memory required for data: 3226884
I0428 19:55:42.895037 28237 net.cpp:200] loss needs backward computation.
I0428 19:55:42.895040 28237 net.cpp:200] relu3 needs backward computation.
I0428 19:55:42.895043 28237 net.cpp:200] ip3 needs backward computation.
I0428 19:55:42.895061 28237 net.cpp:200] relu2 needs backward computation.
I0428 19:55:42.895064 28237 net.cpp:200] ip2 needs backward computation.
I0428 19:55:42.895066 28237 net.cpp:200] relu1 needs backward computation.
I0428 19:55:42.895069 28237 net.cpp:200] ip1 needs backward computation.
I0428 19:55:42.895071 28237 net.cpp:200] pool1 needs backward computation.
I0428 19:55:42.895074 28237 net.cpp:200] conv1 needs backward computation.
I0428 19:55:42.895077 28237 net.cpp:200] pool0 needs backward computation.
I0428 19:55:42.895079 28237 net.cpp:200] conv0 needs backward computation.
I0428 19:55:42.895083 28237 net.cpp:202] mnist does not need backward computation.
I0428 19:55:42.895087 28237 net.cpp:244] This network produces output loss
I0428 19:55:42.895097 28237 net.cpp:257] Network initialization done.
I0428 19:55:42.895455 28237 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test738.prototxt
I0428 19:55:42.895498 28237 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:42.895589 28237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:42.895670 28237 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:42.895714 28237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:42.895727 28237 net.cpp:86] Creating Layer mnist
I0428 19:55:42.895732 28237 net.cpp:382] mnist -> data
I0428 19:55:42.895740 28237 net.cpp:382] mnist -> label
I0428 19:55:42.895838 28237 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:42.896976 28237 net.cpp:124] Setting up mnist
I0428 19:55:42.897007 28237 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:42.897012 28237 net.cpp:131] Top shape: 100 (100)
I0428 19:55:42.897016 28237 net.cpp:139] Memory required for data: 314000
I0428 19:55:42.897018 28237 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:42.897078 28237 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:42.897083 28237 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:42.897089 28237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:42.897095 28237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:42.897198 28237 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:42.897207 28237 net.cpp:131] Top shape: 100 (100)
I0428 19:55:42.897210 28237 net.cpp:131] Top shape: 100 (100)
I0428 19:55:42.897212 28237 net.cpp:139] Memory required for data: 314800
I0428 19:55:42.897215 28237 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:42.897225 28237 net.cpp:86] Creating Layer conv0
I0428 19:55:42.897228 28237 net.cpp:408] conv0 <- data
I0428 19:55:42.897234 28237 net.cpp:382] conv0 -> conv0
I0428 19:55:42.898864 28237 net.cpp:124] Setting up conv0
I0428 19:55:42.898877 28237 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:42.898881 28237 net.cpp:139] Memory required for data: 1466800
I0428 19:55:42.898891 28237 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:42.898898 28237 net.cpp:86] Creating Layer pool0
I0428 19:55:42.898902 28237 net.cpp:408] pool0 <- conv0
I0428 19:55:42.898906 28237 net.cpp:382] pool0 -> pool0
I0428 19:55:42.898946 28237 net.cpp:124] Setting up pool0
I0428 19:55:42.898950 28237 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:42.898953 28237 net.cpp:139] Memory required for data: 1754800
I0428 19:55:42.898957 28237 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:42.898965 28237 net.cpp:86] Creating Layer conv1
I0428 19:55:42.898968 28237 net.cpp:408] conv1 <- pool0
I0428 19:55:42.898974 28237 net.cpp:382] conv1 -> conv1
I0428 19:55:42.900645 28237 net.cpp:124] Setting up conv1
I0428 19:55:42.900657 28237 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:42.900661 28237 net.cpp:139] Memory required for data: 4314800
I0428 19:55:42.900670 28237 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:42.900676 28237 net.cpp:86] Creating Layer pool1
I0428 19:55:42.900679 28237 net.cpp:408] pool1 <- conv1
I0428 19:55:42.900686 28237 net.cpp:382] pool1 -> pool1
I0428 19:55:42.900720 28237 net.cpp:124] Setting up pool1
I0428 19:55:42.900725 28237 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:42.900728 28237 net.cpp:139] Memory required for data: 4954800
I0428 19:55:42.900738 28237 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:42.900743 28237 net.cpp:86] Creating Layer ip1
I0428 19:55:42.900746 28237 net.cpp:408] ip1 <- pool1
I0428 19:55:42.900753 28237 net.cpp:382] ip1 -> ip1
I0428 19:55:42.901382 28237 net.cpp:124] Setting up ip1
I0428 19:55:42.901392 28237 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:42.901407 28237 net.cpp:139] Memory required for data: 4974800
I0428 19:55:42.901414 28237 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:42.901419 28237 net.cpp:86] Creating Layer relu1
I0428 19:55:42.901432 28237 net.cpp:408] relu1 <- ip1
I0428 19:55:42.901435 28237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:42.901629 28237 net.cpp:124] Setting up relu1
I0428 19:55:42.901638 28237 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:42.901641 28237 net.cpp:139] Memory required for data: 4994800
I0428 19:55:42.901644 28237 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:42.901651 28237 net.cpp:86] Creating Layer ip2
I0428 19:55:42.901654 28237 net.cpp:408] ip2 <- ip1
I0428 19:55:42.901660 28237 net.cpp:382] ip2 -> ip2
I0428 19:55:42.901795 28237 net.cpp:124] Setting up ip2
I0428 19:55:42.901803 28237 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:42.901806 28237 net.cpp:139] Memory required for data: 5014800
I0428 19:55:42.901811 28237 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:42.901816 28237 net.cpp:86] Creating Layer relu2
I0428 19:55:42.901819 28237 net.cpp:408] relu2 <- ip2
I0428 19:55:42.901824 28237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:42.902024 28237 net.cpp:124] Setting up relu2
I0428 19:55:42.902034 28237 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:42.902036 28237 net.cpp:139] Memory required for data: 5034800
I0428 19:55:42.902040 28237 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:42.902045 28237 net.cpp:86] Creating Layer ip3
I0428 19:55:42.902070 28237 net.cpp:408] ip3 <- ip2
I0428 19:55:42.902081 28237 net.cpp:382] ip3 -> ip3
I0428 19:55:42.902184 28237 net.cpp:124] Setting up ip3
I0428 19:55:42.902191 28237 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:42.902194 28237 net.cpp:139] Memory required for data: 5038800
I0428 19:55:42.902201 28237 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:42.902211 28237 net.cpp:86] Creating Layer relu3
I0428 19:55:42.902215 28237 net.cpp:408] relu3 <- ip3
I0428 19:55:42.902220 28237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:42.903127 28237 net.cpp:124] Setting up relu3
I0428 19:55:42.903139 28237 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:42.903143 28237 net.cpp:139] Memory required for data: 5042800
I0428 19:55:42.903146 28237 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:42.903152 28237 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:42.903156 28237 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:42.903172 28237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:42.903177 28237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:42.903218 28237 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:42.903223 28237 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:42.903226 28237 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:42.903228 28237 net.cpp:139] Memory required for data: 5050800
I0428 19:55:42.903231 28237 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:42.903235 28237 net.cpp:86] Creating Layer accuracy
I0428 19:55:42.903245 28237 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:42.903249 28237 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:42.903254 28237 net.cpp:382] accuracy -> accuracy
I0428 19:55:42.903261 28237 net.cpp:124] Setting up accuracy
I0428 19:55:42.903264 28237 net.cpp:131] Top shape: (1)
I0428 19:55:42.903267 28237 net.cpp:139] Memory required for data: 5050804
I0428 19:55:42.903270 28237 layer_factory.hpp:77] Creating layer loss
I0428 19:55:42.903275 28237 net.cpp:86] Creating Layer loss
I0428 19:55:42.903277 28237 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:42.903280 28237 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:42.903285 28237 net.cpp:382] loss -> loss
I0428 19:55:42.903290 28237 layer_factory.hpp:77] Creating layer loss
I0428 19:55:42.903522 28237 net.cpp:124] Setting up loss
I0428 19:55:42.903530 28237 net.cpp:131] Top shape: (1)
I0428 19:55:42.903533 28237 net.cpp:134]     with loss weight 1
I0428 19:55:42.903548 28237 net.cpp:139] Memory required for data: 5050808
I0428 19:55:42.903551 28237 net.cpp:200] loss needs backward computation.
I0428 19:55:42.903556 28237 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:42.903559 28237 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:42.903563 28237 net.cpp:200] relu3 needs backward computation.
I0428 19:55:42.903564 28237 net.cpp:200] ip3 needs backward computation.
I0428 19:55:42.903568 28237 net.cpp:200] relu2 needs backward computation.
I0428 19:55:42.903570 28237 net.cpp:200] ip2 needs backward computation.
I0428 19:55:42.903573 28237 net.cpp:200] relu1 needs backward computation.
I0428 19:55:42.903575 28237 net.cpp:200] ip1 needs backward computation.
I0428 19:55:42.903578 28237 net.cpp:200] pool1 needs backward computation.
I0428 19:55:42.903581 28237 net.cpp:200] conv1 needs backward computation.
I0428 19:55:42.903590 28237 net.cpp:200] pool0 needs backward computation.
I0428 19:55:42.903594 28237 net.cpp:200] conv0 needs backward computation.
I0428 19:55:42.903596 28237 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:42.903600 28237 net.cpp:202] mnist does not need backward computation.
I0428 19:55:42.903602 28237 net.cpp:244] This network produces output accuracy
I0428 19:55:42.903611 28237 net.cpp:244] This network produces output loss
I0428 19:55:42.903622 28237 net.cpp:257] Network initialization done.
I0428 19:55:42.903661 28237 solver.cpp:56] Solver scaffolding done.
I0428 19:55:42.904048 28237 caffe.cpp:248] Starting Optimization
I0428 19:55:42.904055 28237 solver.cpp:273] Solving LeNet
I0428 19:55:42.904058 28237 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:42.904889 28237 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:42.910239 28237 blocking_queue.cpp:49] Waiting for data
I0428 19:55:42.980875 28244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:42.981513 28237 solver.cpp:398]     Test net output #0: accuracy = 0.0906
I0428 19:55:42.981534 28237 solver.cpp:398]     Test net output #1: loss = 2.31423 (* 1 = 2.31423 loss)
I0428 19:55:42.985625 28237 solver.cpp:219] Iteration 0 (-2.90447e-36 iter/s, 0.081537s/100 iters), loss = 2.30746
I0428 19:55:42.985651 28237 solver.cpp:238]     Train net output #0: loss = 2.30746 (* 1 = 2.30746 loss)
I0428 19:55:42.985678 28237 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:43.134901 28237 solver.cpp:219] Iteration 100 (670.09 iter/s, 0.149234s/100 iters), loss = 0.823664
I0428 19:55:43.134924 28237 solver.cpp:238]     Train net output #0: loss = 0.823664 (* 1 = 0.823664 loss)
I0428 19:55:43.134930 28237 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:43.290400 28237 solver.cpp:219] Iteration 200 (643.245 iter/s, 0.155462s/100 iters), loss = 0.643667
I0428 19:55:43.290438 28237 solver.cpp:238]     Train net output #0: loss = 0.643667 (* 1 = 0.643667 loss)
I0428 19:55:43.290444 28237 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:43.439999 28237 solver.cpp:219] Iteration 300 (668.686 iter/s, 0.149547s/100 iters), loss = 0.508815
I0428 19:55:43.440042 28237 solver.cpp:238]     Train net output #0: loss = 0.508815 (* 1 = 0.508815 loss)
I0428 19:55:43.440048 28237 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:43.607271 28237 solver.cpp:219] Iteration 400 (598.043 iter/s, 0.167212s/100 iters), loss = 0.434268
I0428 19:55:43.607324 28237 solver.cpp:238]     Train net output #0: loss = 0.434268 (* 1 = 0.434268 loss)
I0428 19:55:43.607343 28237 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:43.784054 28237 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:43.860690 28244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:43.861356 28237 solver.cpp:398]     Test net output #0: accuracy = 0.7908
I0428 19:55:43.861385 28237 solver.cpp:398]     Test net output #1: loss = 0.534398 (* 1 = 0.534398 loss)
I0428 19:55:43.863004 28237 solver.cpp:219] Iteration 500 (391.13 iter/s, 0.255669s/100 iters), loss = 0.641848
I0428 19:55:43.863059 28237 solver.cpp:238]     Train net output #0: loss = 0.641848 (* 1 = 0.641848 loss)
I0428 19:55:43.863075 28237 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:44.027207 28237 solver.cpp:219] Iteration 600 (609.24 iter/s, 0.164139s/100 iters), loss = 0.527763
I0428 19:55:44.027246 28237 solver.cpp:238]     Train net output #0: loss = 0.527763 (* 1 = 0.527763 loss)
I0428 19:55:44.027261 28237 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:44.187192 28237 solver.cpp:219] Iteration 700 (625.256 iter/s, 0.159934s/100 iters), loss = 0.772567
I0428 19:55:44.187238 28237 solver.cpp:238]     Train net output #0: loss = 0.772567 (* 1 = 0.772567 loss)
I0428 19:55:44.187254 28237 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:44.361721 28237 solver.cpp:219] Iteration 800 (573.155 iter/s, 0.174473s/100 iters), loss = 0.818717
I0428 19:55:44.361765 28237 solver.cpp:238]     Train net output #0: loss = 0.818717 (* 1 = 0.818717 loss)
I0428 19:55:44.361780 28237 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:44.522972 28237 solver.cpp:219] Iteration 900 (620.354 iter/s, 0.161198s/100 iters), loss = 0.499602
I0428 19:55:44.523011 28237 solver.cpp:238]     Train net output #0: loss = 0.499602 (* 1 = 0.499602 loss)
I0428 19:55:44.523025 28237 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:44.576946 28243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:44.692571 28237 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:44.695955 28237 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:44.697692 28237 solver.cpp:311] Iteration 1000, loss = 0.3835
I0428 19:55:44.697720 28237 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:44.758265 28244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:44.760157 28237 solver.cpp:398]     Test net output #0: accuracy = 0.8803
I0428 19:55:44.760185 28237 solver.cpp:398]     Test net output #1: loss = 0.313461 (* 1 = 0.313461 loss)
I0428 19:55:44.760195 28237 solver.cpp:316] Optimization Done.
I0428 19:55:44.760200 28237 caffe.cpp:259] Optimization Done.
