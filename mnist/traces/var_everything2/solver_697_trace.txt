I0428 19:53:49.251616 27877 caffe.cpp:218] Using GPUs 0
I0428 19:53:49.295337 27877 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:49.806669 27877 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test697.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:49.806816 27877 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test697.prototxt
I0428 19:53:49.807234 27877 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:49.807255 27877 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:49.807358 27877 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:49.807438 27877 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:49.807535 27877 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:49.807557 27877 net.cpp:86] Creating Layer mnist
I0428 19:53:49.807566 27877 net.cpp:382] mnist -> data
I0428 19:53:49.807588 27877 net.cpp:382] mnist -> label
I0428 19:53:49.808676 27877 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:49.811174 27877 net.cpp:124] Setting up mnist
I0428 19:53:49.811192 27877 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:49.811198 27877 net.cpp:131] Top shape: 64 (64)
I0428 19:53:49.811202 27877 net.cpp:139] Memory required for data: 200960
I0428 19:53:49.811208 27877 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:49.811238 27877 net.cpp:86] Creating Layer conv0
I0428 19:53:49.811259 27877 net.cpp:408] conv0 <- data
I0428 19:53:49.811273 27877 net.cpp:382] conv0 -> conv0
I0428 19:53:50.070855 27877 net.cpp:124] Setting up conv0
I0428 19:53:50.070899 27877 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:50.070902 27877 net.cpp:139] Memory required for data: 938240
I0428 19:53:50.070917 27877 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:50.070930 27877 net.cpp:86] Creating Layer pool0
I0428 19:53:50.070933 27877 net.cpp:408] pool0 <- conv0
I0428 19:53:50.070940 27877 net.cpp:382] pool0 -> pool0
I0428 19:53:50.071022 27877 net.cpp:124] Setting up pool0
I0428 19:53:50.071043 27877 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:50.071048 27877 net.cpp:139] Memory required for data: 1122560
I0428 19:53:50.071053 27877 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:50.071068 27877 net.cpp:86] Creating Layer conv1
I0428 19:53:50.071072 27877 net.cpp:408] conv1 <- pool0
I0428 19:53:50.071079 27877 net.cpp:382] conv1 -> conv1
I0428 19:53:50.073889 27877 net.cpp:124] Setting up conv1
I0428 19:53:50.073920 27877 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:50.073922 27877 net.cpp:139] Memory required for data: 1941760
I0428 19:53:50.073931 27877 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:50.073940 27877 net.cpp:86] Creating Layer pool1
I0428 19:53:50.073943 27877 net.cpp:408] pool1 <- conv1
I0428 19:53:50.073948 27877 net.cpp:382] pool1 -> pool1
I0428 19:53:50.074000 27877 net.cpp:124] Setting up pool1
I0428 19:53:50.074007 27877 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:50.074009 27877 net.cpp:139] Memory required for data: 2146560
I0428 19:53:50.074012 27877 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:50.074019 27877 net.cpp:86] Creating Layer ip1
I0428 19:53:50.074023 27877 net.cpp:408] ip1 <- pool1
I0428 19:53:50.074028 27877 net.cpp:382] ip1 -> ip1
I0428 19:53:50.074369 27877 net.cpp:124] Setting up ip1
I0428 19:53:50.074378 27877 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:50.074395 27877 net.cpp:139] Memory required for data: 2159360
I0428 19:53:50.074403 27877 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:50.074407 27877 net.cpp:86] Creating Layer relu1
I0428 19:53:50.074411 27877 net.cpp:408] relu1 <- ip1
I0428 19:53:50.074415 27877 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:50.074574 27877 net.cpp:124] Setting up relu1
I0428 19:53:50.074584 27877 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:50.074586 27877 net.cpp:139] Memory required for data: 2172160
I0428 19:53:50.074589 27877 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:50.074595 27877 net.cpp:86] Creating Layer ip2
I0428 19:53:50.074599 27877 net.cpp:408] ip2 <- ip1
I0428 19:53:50.074604 27877 net.cpp:382] ip2 -> ip2
I0428 19:53:50.075557 27877 net.cpp:124] Setting up ip2
I0428 19:53:50.075569 27877 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:50.075588 27877 net.cpp:139] Memory required for data: 2178560
I0428 19:53:50.075594 27877 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:50.075618 27877 net.cpp:86] Creating Layer relu2
I0428 19:53:50.075620 27877 net.cpp:408] relu2 <- ip2
I0428 19:53:50.075625 27877 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:50.076396 27877 net.cpp:124] Setting up relu2
I0428 19:53:50.076408 27877 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:50.076426 27877 net.cpp:139] Memory required for data: 2184960
I0428 19:53:50.076431 27877 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:50.076437 27877 net.cpp:86] Creating Layer ip3
I0428 19:53:50.076441 27877 net.cpp:408] ip3 <- ip2
I0428 19:53:50.076447 27877 net.cpp:382] ip3 -> ip3
I0428 19:53:50.076578 27877 net.cpp:124] Setting up ip3
I0428 19:53:50.076586 27877 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:50.076591 27877 net.cpp:139] Memory required for data: 2187520
I0428 19:53:50.076598 27877 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:50.076604 27877 net.cpp:86] Creating Layer relu3
I0428 19:53:50.076607 27877 net.cpp:408] relu3 <- ip3
I0428 19:53:50.076611 27877 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:50.076830 27877 net.cpp:124] Setting up relu3
I0428 19:53:50.076841 27877 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:50.076844 27877 net.cpp:139] Memory required for data: 2190080
I0428 19:53:50.076848 27877 layer_factory.hpp:77] Creating layer loss
I0428 19:53:50.076854 27877 net.cpp:86] Creating Layer loss
I0428 19:53:50.076858 27877 net.cpp:408] loss <- ip3
I0428 19:53:50.076863 27877 net.cpp:408] loss <- label
I0428 19:53:50.076869 27877 net.cpp:382] loss -> loss
I0428 19:53:50.076887 27877 layer_factory.hpp:77] Creating layer loss
I0428 19:53:50.077132 27877 net.cpp:124] Setting up loss
I0428 19:53:50.077142 27877 net.cpp:131] Top shape: (1)
I0428 19:53:50.077145 27877 net.cpp:134]     with loss weight 1
I0428 19:53:50.077160 27877 net.cpp:139] Memory required for data: 2190084
I0428 19:53:50.077164 27877 net.cpp:200] loss needs backward computation.
I0428 19:53:50.077168 27877 net.cpp:200] relu3 needs backward computation.
I0428 19:53:50.077172 27877 net.cpp:200] ip3 needs backward computation.
I0428 19:53:50.077190 27877 net.cpp:200] relu2 needs backward computation.
I0428 19:53:50.077193 27877 net.cpp:200] ip2 needs backward computation.
I0428 19:53:50.077195 27877 net.cpp:200] relu1 needs backward computation.
I0428 19:53:50.077198 27877 net.cpp:200] ip1 needs backward computation.
I0428 19:53:50.077203 27877 net.cpp:200] pool1 needs backward computation.
I0428 19:53:50.077219 27877 net.cpp:200] conv1 needs backward computation.
I0428 19:53:50.077222 27877 net.cpp:200] pool0 needs backward computation.
I0428 19:53:50.077225 27877 net.cpp:200] conv0 needs backward computation.
I0428 19:53:50.077229 27877 net.cpp:202] mnist does not need backward computation.
I0428 19:53:50.077232 27877 net.cpp:244] This network produces output loss
I0428 19:53:50.077241 27877 net.cpp:257] Network initialization done.
I0428 19:53:50.077600 27877 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test697.prototxt
I0428 19:53:50.077642 27877 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:50.077733 27877 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:50.077813 27877 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:50.077857 27877 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:50.077872 27877 net.cpp:86] Creating Layer mnist
I0428 19:53:50.077875 27877 net.cpp:382] mnist -> data
I0428 19:53:50.077883 27877 net.cpp:382] mnist -> label
I0428 19:53:50.077970 27877 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:50.079952 27877 net.cpp:124] Setting up mnist
I0428 19:53:50.079979 27877 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:50.079984 27877 net.cpp:131] Top shape: 100 (100)
I0428 19:53:50.079988 27877 net.cpp:139] Memory required for data: 314000
I0428 19:53:50.079991 27877 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:50.079998 27877 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:50.080001 27877 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:50.080005 27877 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:50.080011 27877 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:50.080076 27877 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:50.080081 27877 net.cpp:131] Top shape: 100 (100)
I0428 19:53:50.080085 27877 net.cpp:131] Top shape: 100 (100)
I0428 19:53:50.080088 27877 net.cpp:139] Memory required for data: 314800
I0428 19:53:50.080091 27877 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:50.080099 27877 net.cpp:86] Creating Layer conv0
I0428 19:53:50.080102 27877 net.cpp:408] conv0 <- data
I0428 19:53:50.080107 27877 net.cpp:382] conv0 -> conv0
I0428 19:53:50.081924 27877 net.cpp:124] Setting up conv0
I0428 19:53:50.081938 27877 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:50.081943 27877 net.cpp:139] Memory required for data: 1466800
I0428 19:53:50.081951 27877 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:50.081957 27877 net.cpp:86] Creating Layer pool0
I0428 19:53:50.081976 27877 net.cpp:408] pool0 <- conv0
I0428 19:53:50.081981 27877 net.cpp:382] pool0 -> pool0
I0428 19:53:50.082016 27877 net.cpp:124] Setting up pool0
I0428 19:53:50.082021 27877 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:50.082025 27877 net.cpp:139] Memory required for data: 1754800
I0428 19:53:50.082027 27877 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:50.082036 27877 net.cpp:86] Creating Layer conv1
I0428 19:53:50.082039 27877 net.cpp:408] conv1 <- pool0
I0428 19:53:50.082044 27877 net.cpp:382] conv1 -> conv1
I0428 19:53:50.083541 27877 net.cpp:124] Setting up conv1
I0428 19:53:50.083556 27877 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:50.083560 27877 net.cpp:139] Memory required for data: 3034800
I0428 19:53:50.083575 27877 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:50.083581 27877 net.cpp:86] Creating Layer pool1
I0428 19:53:50.083585 27877 net.cpp:408] pool1 <- conv1
I0428 19:53:50.083590 27877 net.cpp:382] pool1 -> pool1
I0428 19:53:50.083629 27877 net.cpp:124] Setting up pool1
I0428 19:53:50.083634 27877 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:50.083637 27877 net.cpp:139] Memory required for data: 3354800
I0428 19:53:50.083667 27877 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:50.083673 27877 net.cpp:86] Creating Layer ip1
I0428 19:53:50.083685 27877 net.cpp:408] ip1 <- pool1
I0428 19:53:50.083690 27877 net.cpp:382] ip1 -> ip1
I0428 19:53:50.084051 27877 net.cpp:124] Setting up ip1
I0428 19:53:50.084060 27877 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:50.084080 27877 net.cpp:139] Memory required for data: 3374800
I0428 19:53:50.084089 27877 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:50.084095 27877 net.cpp:86] Creating Layer relu1
I0428 19:53:50.084098 27877 net.cpp:408] relu1 <- ip1
I0428 19:53:50.084102 27877 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:50.084275 27877 net.cpp:124] Setting up relu1
I0428 19:53:50.084283 27877 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:50.084286 27877 net.cpp:139] Memory required for data: 3394800
I0428 19:53:50.084290 27877 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:50.084296 27877 net.cpp:86] Creating Layer ip2
I0428 19:53:50.084300 27877 net.cpp:408] ip2 <- ip1
I0428 19:53:50.084306 27877 net.cpp:382] ip2 -> ip2
I0428 19:53:50.084414 27877 net.cpp:124] Setting up ip2
I0428 19:53:50.084422 27877 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:50.084426 27877 net.cpp:139] Memory required for data: 3404800
I0428 19:53:50.084437 27877 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:50.084442 27877 net.cpp:86] Creating Layer relu2
I0428 19:53:50.084445 27877 net.cpp:408] relu2 <- ip2
I0428 19:53:50.084450 27877 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:50.084611 27877 net.cpp:124] Setting up relu2
I0428 19:53:50.084619 27877 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:50.084622 27877 net.cpp:139] Memory required for data: 3414800
I0428 19:53:50.084625 27877 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:50.084630 27877 net.cpp:86] Creating Layer ip3
I0428 19:53:50.084633 27877 net.cpp:408] ip3 <- ip2
I0428 19:53:50.084638 27877 net.cpp:382] ip3 -> ip3
I0428 19:53:50.084745 27877 net.cpp:124] Setting up ip3
I0428 19:53:50.084753 27877 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:50.084755 27877 net.cpp:139] Memory required for data: 3418800
I0428 19:53:50.084764 27877 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:50.084767 27877 net.cpp:86] Creating Layer relu3
I0428 19:53:50.084770 27877 net.cpp:408] relu3 <- ip3
I0428 19:53:50.084775 27877 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:50.085718 27877 net.cpp:124] Setting up relu3
I0428 19:53:50.085741 27877 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:50.085746 27877 net.cpp:139] Memory required for data: 3422800
I0428 19:53:50.085749 27877 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:50.085754 27877 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:50.085758 27877 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:50.085763 27877 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:50.085769 27877 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:50.085806 27877 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:50.085811 27877 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:50.085815 27877 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:50.085819 27877 net.cpp:139] Memory required for data: 3430800
I0428 19:53:50.085821 27877 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:50.085831 27877 net.cpp:86] Creating Layer accuracy
I0428 19:53:50.085834 27877 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:50.085839 27877 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:50.085844 27877 net.cpp:382] accuracy -> accuracy
I0428 19:53:50.085850 27877 net.cpp:124] Setting up accuracy
I0428 19:53:50.085853 27877 net.cpp:131] Top shape: (1)
I0428 19:53:50.085856 27877 net.cpp:139] Memory required for data: 3430804
I0428 19:53:50.085860 27877 layer_factory.hpp:77] Creating layer loss
I0428 19:53:50.085865 27877 net.cpp:86] Creating Layer loss
I0428 19:53:50.085873 27877 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:50.085877 27877 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:50.085881 27877 net.cpp:382] loss -> loss
I0428 19:53:50.085887 27877 layer_factory.hpp:77] Creating layer loss
I0428 19:53:50.086119 27877 net.cpp:124] Setting up loss
I0428 19:53:50.086128 27877 net.cpp:131] Top shape: (1)
I0428 19:53:50.086133 27877 net.cpp:134]     with loss weight 1
I0428 19:53:50.086150 27877 net.cpp:139] Memory required for data: 3430808
I0428 19:53:50.086163 27877 net.cpp:200] loss needs backward computation.
I0428 19:53:50.086168 27877 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:50.086177 27877 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:50.086180 27877 net.cpp:200] relu3 needs backward computation.
I0428 19:53:50.086184 27877 net.cpp:200] ip3 needs backward computation.
I0428 19:53:50.086186 27877 net.cpp:200] relu2 needs backward computation.
I0428 19:53:50.086194 27877 net.cpp:200] ip2 needs backward computation.
I0428 19:53:50.086197 27877 net.cpp:200] relu1 needs backward computation.
I0428 19:53:50.086200 27877 net.cpp:200] ip1 needs backward computation.
I0428 19:53:50.086203 27877 net.cpp:200] pool1 needs backward computation.
I0428 19:53:50.086206 27877 net.cpp:200] conv1 needs backward computation.
I0428 19:53:50.086210 27877 net.cpp:200] pool0 needs backward computation.
I0428 19:53:50.086212 27877 net.cpp:200] conv0 needs backward computation.
I0428 19:53:50.086216 27877 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:50.086220 27877 net.cpp:202] mnist does not need backward computation.
I0428 19:53:50.086227 27877 net.cpp:244] This network produces output accuracy
I0428 19:53:50.086231 27877 net.cpp:244] This network produces output loss
I0428 19:53:50.086241 27877 net.cpp:257] Network initialization done.
I0428 19:53:50.086297 27877 solver.cpp:56] Solver scaffolding done.
I0428 19:53:50.086642 27877 caffe.cpp:248] Starting Optimization
I0428 19:53:50.086648 27877 solver.cpp:273] Solving LeNet
I0428 19:53:50.086652 27877 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:50.086841 27877 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:50.091755 27877 blocking_queue.cpp:49] Waiting for data
I0428 19:53:50.163241 27884 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:50.163756 27877 solver.cpp:398]     Test net output #0: accuracy = 0.0507
I0428 19:53:50.163777 27877 solver.cpp:398]     Test net output #1: loss = 2.31072 (* 1 = 2.31072 loss)
I0428 19:53:50.166941 27877 solver.cpp:219] Iteration 0 (0 iter/s, 0.0802593s/100 iters), loss = 2.30678
I0428 19:53:50.166965 27877 solver.cpp:238]     Train net output #0: loss = 2.30678 (* 1 = 2.30678 loss)
I0428 19:53:50.166991 27877 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:50.271299 27877 solver.cpp:219] Iteration 100 (958.551 iter/s, 0.104324s/100 iters), loss = 1.4118
I0428 19:53:50.271323 27877 solver.cpp:238]     Train net output #0: loss = 1.4118 (* 1 = 1.4118 loss)
I0428 19:53:50.271329 27877 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:50.387776 27877 solver.cpp:219] Iteration 200 (858.826 iter/s, 0.116438s/100 iters), loss = 1.42143
I0428 19:53:50.387818 27877 solver.cpp:238]     Train net output #0: loss = 1.42143 (* 1 = 1.42143 loss)
I0428 19:53:50.387828 27877 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:50.498019 27877 solver.cpp:219] Iteration 300 (907.503 iter/s, 0.110192s/100 iters), loss = 1.38553
I0428 19:53:50.498052 27877 solver.cpp:238]     Train net output #0: loss = 1.38553 (* 1 = 1.38553 loss)
I0428 19:53:50.498060 27877 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:50.609799 27877 solver.cpp:219] Iteration 400 (894.976 iter/s, 0.111735s/100 iters), loss = 1.03575
I0428 19:53:50.609830 27877 solver.cpp:238]     Train net output #0: loss = 1.03575 (* 1 = 1.03575 loss)
I0428 19:53:50.609838 27877 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:50.720008 27877 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:50.795789 27884 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:50.796337 27877 solver.cpp:398]     Test net output #0: accuracy = 0.4726
I0428 19:53:50.796365 27877 solver.cpp:398]     Test net output #1: loss = 1.26241 (* 1 = 1.26241 loss)
I0428 19:53:50.797492 27877 solver.cpp:219] Iteration 500 (532.918 iter/s, 0.187646s/100 iters), loss = 1.05635
I0428 19:53:50.797533 27877 solver.cpp:238]     Train net output #0: loss = 1.05635 (* 1 = 1.05635 loss)
I0428 19:53:50.797562 27877 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:50.909309 27877 solver.cpp:219] Iteration 600 (894.732 iter/s, 0.111765s/100 iters), loss = 1.54704
I0428 19:53:50.909343 27877 solver.cpp:238]     Train net output #0: loss = 1.54704 (* 1 = 1.54704 loss)
I0428 19:53:50.909368 27877 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:51.017455 27877 solver.cpp:219] Iteration 700 (925.055 iter/s, 0.108102s/100 iters), loss = 1.34788
I0428 19:53:51.017488 27877 solver.cpp:238]     Train net output #0: loss = 1.34788 (* 1 = 1.34788 loss)
I0428 19:53:51.017500 27877 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:51.125650 27877 solver.cpp:219] Iteration 800 (924.635 iter/s, 0.108151s/100 iters), loss = 1.14351
I0428 19:53:51.125682 27877 solver.cpp:238]     Train net output #0: loss = 1.14351 (* 1 = 1.14351 loss)
I0428 19:53:51.125705 27877 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:51.232657 27877 solver.cpp:219] Iteration 900 (934.894 iter/s, 0.106964s/100 iters), loss = 1.45665
I0428 19:53:51.232684 27877 solver.cpp:238]     Train net output #0: loss = 1.45665 (* 1 = 1.45665 loss)
I0428 19:53:51.232692 27877 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:51.268018 27883 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:51.337776 27877 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:51.339299 27877 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:51.340102 27877 solver.cpp:311] Iteration 1000, loss = 1.0238
I0428 19:53:51.340118 27877 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:51.415480 27884 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:51.415999 27877 solver.cpp:398]     Test net output #0: accuracy = 0.5751
I0428 19:53:51.416023 27877 solver.cpp:398]     Test net output #1: loss = 1.02071 (* 1 = 1.02071 loss)
I0428 19:53:51.416028 27877 solver.cpp:316] Optimization Done.
I0428 19:53:51.416033 27877 caffe.cpp:259] Optimization Done.
