I0428 20:10:10.804061 31784 caffe.cpp:218] Using GPUs 0
I0428 20:10:10.842098 31784 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:11.353142 31784 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1128.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:11.353286 31784 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1128.prototxt
I0428 20:10:11.353704 31784 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:11.353724 31784 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:11.353826 31784 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:11.353906 31784 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:11.354007 31784 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:11.354032 31784 net.cpp:86] Creating Layer mnist
I0428 20:10:11.354040 31784 net.cpp:382] mnist -> data
I0428 20:10:11.354064 31784 net.cpp:382] mnist -> label
I0428 20:10:11.355161 31784 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:11.357841 31784 net.cpp:124] Setting up mnist
I0428 20:10:11.357861 31784 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:11.357867 31784 net.cpp:131] Top shape: 64 (64)
I0428 20:10:11.357870 31784 net.cpp:139] Memory required for data: 200960
I0428 20:10:11.357877 31784 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:11.357923 31784 net.cpp:86] Creating Layer conv0
I0428 20:10:11.357945 31784 net.cpp:408] conv0 <- data
I0428 20:10:11.357959 31784 net.cpp:382] conv0 -> conv0
I0428 20:10:11.631089 31784 net.cpp:124] Setting up conv0
I0428 20:10:11.631116 31784 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:11.631120 31784 net.cpp:139] Memory required for data: 3887360
I0428 20:10:11.631134 31784 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:11.631148 31784 net.cpp:86] Creating Layer pool0
I0428 20:10:11.631152 31784 net.cpp:408] pool0 <- conv0
I0428 20:10:11.631160 31784 net.cpp:382] pool0 -> pool0
I0428 20:10:11.631220 31784 net.cpp:124] Setting up pool0
I0428 20:10:11.631225 31784 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:11.631228 31784 net.cpp:139] Memory required for data: 4808960
I0428 20:10:11.631232 31784 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:11.631242 31784 net.cpp:86] Creating Layer conv1
I0428 20:10:11.631245 31784 net.cpp:408] conv1 <- pool0
I0428 20:10:11.631250 31784 net.cpp:382] conv1 -> conv1
I0428 20:10:11.634240 31784 net.cpp:124] Setting up conv1
I0428 20:10:11.634269 31784 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:10:11.634274 31784 net.cpp:139] Memory required for data: 5218560
I0428 20:10:11.634281 31784 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:11.634289 31784 net.cpp:86] Creating Layer pool1
I0428 20:10:11.634292 31784 net.cpp:408] pool1 <- conv1
I0428 20:10:11.634297 31784 net.cpp:382] pool1 -> pool1
I0428 20:10:11.634348 31784 net.cpp:124] Setting up pool1
I0428 20:10:11.634354 31784 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:10:11.634356 31784 net.cpp:139] Memory required for data: 5320960
I0428 20:10:11.634359 31784 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:11.634366 31784 net.cpp:86] Creating Layer ip1
I0428 20:10:11.634369 31784 net.cpp:408] ip1 <- pool1
I0428 20:10:11.634373 31784 net.cpp:382] ip1 -> ip1
I0428 20:10:11.634584 31784 net.cpp:124] Setting up ip1
I0428 20:10:11.634591 31784 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:11.634594 31784 net.cpp:139] Memory required for data: 5333760
I0428 20:10:11.634601 31784 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:11.634606 31784 net.cpp:86] Creating Layer relu1
I0428 20:10:11.634609 31784 net.cpp:408] relu1 <- ip1
I0428 20:10:11.634613 31784 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:11.634759 31784 net.cpp:124] Setting up relu1
I0428 20:10:11.634768 31784 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:11.634771 31784 net.cpp:139] Memory required for data: 5346560
I0428 20:10:11.634773 31784 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:11.634779 31784 net.cpp:86] Creating Layer ip2
I0428 20:10:11.634783 31784 net.cpp:408] ip2 <- ip1
I0428 20:10:11.634786 31784 net.cpp:382] ip2 -> ip2
I0428 20:10:11.635800 31784 net.cpp:124] Setting up ip2
I0428 20:10:11.635812 31784 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:11.635831 31784 net.cpp:139] Memory required for data: 5359360
I0428 20:10:11.635838 31784 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:11.635843 31784 net.cpp:86] Creating Layer relu2
I0428 20:10:11.635848 31784 net.cpp:408] relu2 <- ip2
I0428 20:10:11.635851 31784 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:11.636646 31784 net.cpp:124] Setting up relu2
I0428 20:10:11.636658 31784 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:10:11.636678 31784 net.cpp:139] Memory required for data: 5372160
I0428 20:10:11.636682 31784 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:11.636688 31784 net.cpp:86] Creating Layer ip3
I0428 20:10:11.636693 31784 net.cpp:408] ip3 <- ip2
I0428 20:10:11.636698 31784 net.cpp:382] ip3 -> ip3
I0428 20:10:11.636800 31784 net.cpp:124] Setting up ip3
I0428 20:10:11.636807 31784 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:11.636816 31784 net.cpp:139] Memory required for data: 5374720
I0428 20:10:11.636855 31784 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:11.636862 31784 net.cpp:86] Creating Layer relu3
I0428 20:10:11.636880 31784 net.cpp:408] relu3 <- ip3
I0428 20:10:11.636884 31784 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:11.637065 31784 net.cpp:124] Setting up relu3
I0428 20:10:11.637074 31784 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:11.637078 31784 net.cpp:139] Memory required for data: 5377280
I0428 20:10:11.637081 31784 layer_factory.hpp:77] Creating layer loss
I0428 20:10:11.637087 31784 net.cpp:86] Creating Layer loss
I0428 20:10:11.637090 31784 net.cpp:408] loss <- ip3
I0428 20:10:11.637094 31784 net.cpp:408] loss <- label
I0428 20:10:11.637099 31784 net.cpp:382] loss -> loss
I0428 20:10:11.637117 31784 layer_factory.hpp:77] Creating layer loss
I0428 20:10:11.637399 31784 net.cpp:124] Setting up loss
I0428 20:10:11.637408 31784 net.cpp:131] Top shape: (1)
I0428 20:10:11.637426 31784 net.cpp:134]     with loss weight 1
I0428 20:10:11.637455 31784 net.cpp:139] Memory required for data: 5377284
I0428 20:10:11.637459 31784 net.cpp:200] loss needs backward computation.
I0428 20:10:11.637462 31784 net.cpp:200] relu3 needs backward computation.
I0428 20:10:11.637467 31784 net.cpp:200] ip3 needs backward computation.
I0428 20:10:11.637470 31784 net.cpp:200] relu2 needs backward computation.
I0428 20:10:11.637473 31784 net.cpp:200] ip2 needs backward computation.
I0428 20:10:11.637476 31784 net.cpp:200] relu1 needs backward computation.
I0428 20:10:11.637478 31784 net.cpp:200] ip1 needs backward computation.
I0428 20:10:11.637481 31784 net.cpp:200] pool1 needs backward computation.
I0428 20:10:11.637485 31784 net.cpp:200] conv1 needs backward computation.
I0428 20:10:11.637487 31784 net.cpp:200] pool0 needs backward computation.
I0428 20:10:11.637490 31784 net.cpp:200] conv0 needs backward computation.
I0428 20:10:11.637495 31784 net.cpp:202] mnist does not need backward computation.
I0428 20:10:11.637497 31784 net.cpp:244] This network produces output loss
I0428 20:10:11.637506 31784 net.cpp:257] Network initialization done.
I0428 20:10:11.637837 31784 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1128.prototxt
I0428 20:10:11.637863 31784 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:11.637953 31784 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:11.638031 31784 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:11.638077 31784 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:11.638088 31784 net.cpp:86] Creating Layer mnist
I0428 20:10:11.638093 31784 net.cpp:382] mnist -> data
I0428 20:10:11.638101 31784 net.cpp:382] mnist -> label
I0428 20:10:11.638185 31784 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:11.640208 31784 net.cpp:124] Setting up mnist
I0428 20:10:11.640238 31784 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:11.640241 31784 net.cpp:131] Top shape: 100 (100)
I0428 20:10:11.640246 31784 net.cpp:139] Memory required for data: 314000
I0428 20:10:11.640249 31784 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:11.640286 31784 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:11.640290 31784 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:11.640295 31784 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:11.640301 31784 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:11.640343 31784 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:11.640349 31784 net.cpp:131] Top shape: 100 (100)
I0428 20:10:11.640352 31784 net.cpp:131] Top shape: 100 (100)
I0428 20:10:11.640355 31784 net.cpp:139] Memory required for data: 314800
I0428 20:10:11.640358 31784 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:11.640365 31784 net.cpp:86] Creating Layer conv0
I0428 20:10:11.640368 31784 net.cpp:408] conv0 <- data
I0428 20:10:11.640373 31784 net.cpp:382] conv0 -> conv0
I0428 20:10:11.642277 31784 net.cpp:124] Setting up conv0
I0428 20:10:11.642292 31784 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:11.642295 31784 net.cpp:139] Memory required for data: 6074800
I0428 20:10:11.642303 31784 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:11.642310 31784 net.cpp:86] Creating Layer pool0
I0428 20:10:11.642313 31784 net.cpp:408] pool0 <- conv0
I0428 20:10:11.642318 31784 net.cpp:382] pool0 -> pool0
I0428 20:10:11.642351 31784 net.cpp:124] Setting up pool0
I0428 20:10:11.642356 31784 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:11.642359 31784 net.cpp:139] Memory required for data: 7514800
I0428 20:10:11.642362 31784 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:11.642369 31784 net.cpp:86] Creating Layer conv1
I0428 20:10:11.642372 31784 net.cpp:408] conv1 <- pool0
I0428 20:10:11.642377 31784 net.cpp:382] conv1 -> conv1
I0428 20:10:11.644644 31784 net.cpp:124] Setting up conv1
I0428 20:10:11.644656 31784 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:10:11.644660 31784 net.cpp:139] Memory required for data: 8154800
I0428 20:10:11.644668 31784 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:11.644700 31784 net.cpp:86] Creating Layer pool1
I0428 20:10:11.644703 31784 net.cpp:408] pool1 <- conv1
I0428 20:10:11.644708 31784 net.cpp:382] pool1 -> pool1
I0428 20:10:11.644743 31784 net.cpp:124] Setting up pool1
I0428 20:10:11.644748 31784 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:10:11.644752 31784 net.cpp:139] Memory required for data: 8314800
I0428 20:10:11.644754 31784 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:11.644759 31784 net.cpp:86] Creating Layer ip1
I0428 20:10:11.644762 31784 net.cpp:408] ip1 <- pool1
I0428 20:10:11.644778 31784 net.cpp:382] ip1 -> ip1
I0428 20:10:11.645114 31784 net.cpp:124] Setting up ip1
I0428 20:10:11.645138 31784 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:11.645167 31784 net.cpp:139] Memory required for data: 8334800
I0428 20:10:11.645186 31784 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:11.645191 31784 net.cpp:86] Creating Layer relu1
I0428 20:10:11.645195 31784 net.cpp:408] relu1 <- ip1
I0428 20:10:11.645200 31784 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:11.645370 31784 net.cpp:124] Setting up relu1
I0428 20:10:11.645378 31784 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:11.645382 31784 net.cpp:139] Memory required for data: 8354800
I0428 20:10:11.645385 31784 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:11.645391 31784 net.cpp:86] Creating Layer ip2
I0428 20:10:11.645395 31784 net.cpp:408] ip2 <- ip1
I0428 20:10:11.645400 31784 net.cpp:382] ip2 -> ip2
I0428 20:10:11.645526 31784 net.cpp:124] Setting up ip2
I0428 20:10:11.645534 31784 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:11.645536 31784 net.cpp:139] Memory required for data: 8374800
I0428 20:10:11.645541 31784 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:11.645545 31784 net.cpp:86] Creating Layer relu2
I0428 20:10:11.645548 31784 net.cpp:408] relu2 <- ip2
I0428 20:10:11.645552 31784 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:11.645716 31784 net.cpp:124] Setting up relu2
I0428 20:10:11.645725 31784 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:10:11.645727 31784 net.cpp:139] Memory required for data: 8394800
I0428 20:10:11.645730 31784 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:11.645735 31784 net.cpp:86] Creating Layer ip3
I0428 20:10:11.645738 31784 net.cpp:408] ip3 <- ip2
I0428 20:10:11.645743 31784 net.cpp:382] ip3 -> ip3
I0428 20:10:11.645851 31784 net.cpp:124] Setting up ip3
I0428 20:10:11.645859 31784 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:11.645861 31784 net.cpp:139] Memory required for data: 8398800
I0428 20:10:11.645869 31784 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:11.645874 31784 net.cpp:86] Creating Layer relu3
I0428 20:10:11.645877 31784 net.cpp:408] relu3 <- ip3
I0428 20:10:11.645881 31784 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:11.646728 31784 net.cpp:124] Setting up relu3
I0428 20:10:11.646739 31784 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:11.646744 31784 net.cpp:139] Memory required for data: 8402800
I0428 20:10:11.646746 31784 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:11.646752 31784 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:11.646755 31784 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:11.646760 31784 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:11.646766 31784 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:11.646841 31784 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:11.646848 31784 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:11.646852 31784 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:11.646855 31784 net.cpp:139] Memory required for data: 8410800
I0428 20:10:11.646857 31784 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:11.646868 31784 net.cpp:86] Creating Layer accuracy
I0428 20:10:11.646872 31784 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:11.646877 31784 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:11.646880 31784 net.cpp:382] accuracy -> accuracy
I0428 20:10:11.646893 31784 net.cpp:124] Setting up accuracy
I0428 20:10:11.646896 31784 net.cpp:131] Top shape: (1)
I0428 20:10:11.646899 31784 net.cpp:139] Memory required for data: 8410804
I0428 20:10:11.646903 31784 layer_factory.hpp:77] Creating layer loss
I0428 20:10:11.646906 31784 net.cpp:86] Creating Layer loss
I0428 20:10:11.646909 31784 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:11.646914 31784 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:11.646916 31784 net.cpp:382] loss -> loss
I0428 20:10:11.646927 31784 layer_factory.hpp:77] Creating layer loss
I0428 20:10:11.647194 31784 net.cpp:124] Setting up loss
I0428 20:10:11.647204 31784 net.cpp:131] Top shape: (1)
I0428 20:10:11.647207 31784 net.cpp:134]     with loss weight 1
I0428 20:10:11.647224 31784 net.cpp:139] Memory required for data: 8410808
I0428 20:10:11.647228 31784 net.cpp:200] loss needs backward computation.
I0428 20:10:11.647233 31784 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:11.647236 31784 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:11.647239 31784 net.cpp:200] relu3 needs backward computation.
I0428 20:10:11.647243 31784 net.cpp:200] ip3 needs backward computation.
I0428 20:10:11.647246 31784 net.cpp:200] relu2 needs backward computation.
I0428 20:10:11.647256 31784 net.cpp:200] ip2 needs backward computation.
I0428 20:10:11.647259 31784 net.cpp:200] relu1 needs backward computation.
I0428 20:10:11.647263 31784 net.cpp:200] ip1 needs backward computation.
I0428 20:10:11.647266 31784 net.cpp:200] pool1 needs backward computation.
I0428 20:10:11.647274 31784 net.cpp:200] conv1 needs backward computation.
I0428 20:10:11.647277 31784 net.cpp:200] pool0 needs backward computation.
I0428 20:10:11.647280 31784 net.cpp:200] conv0 needs backward computation.
I0428 20:10:11.647303 31784 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:11.647307 31784 net.cpp:202] mnist does not need backward computation.
I0428 20:10:11.647310 31784 net.cpp:244] This network produces output accuracy
I0428 20:10:11.647313 31784 net.cpp:244] This network produces output loss
I0428 20:10:11.647325 31784 net.cpp:257] Network initialization done.
I0428 20:10:11.647379 31784 solver.cpp:56] Solver scaffolding done.
I0428 20:10:11.647699 31784 caffe.cpp:248] Starting Optimization
I0428 20:10:11.647706 31784 solver.cpp:273] Solving LeNet
I0428 20:10:11.647714 31784 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:11.648620 31784 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:11.654645 31784 blocking_queue.cpp:49] Waiting for data
I0428 20:10:11.724576 31791 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:11.725214 31784 solver.cpp:398]     Test net output #0: accuracy = 0.0886
I0428 20:10:11.725234 31784 solver.cpp:398]     Test net output #1: loss = 2.31882 (* 1 = 2.31882 loss)
I0428 20:10:11.728886 31784 solver.cpp:219] Iteration 0 (-1.00193e-42 iter/s, 0.0811469s/100 iters), loss = 2.30554
I0428 20:10:11.728910 31784 solver.cpp:238]     Train net output #0: loss = 2.30554 (* 1 = 2.30554 loss)
I0428 20:10:11.728936 31784 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:11.835839 31784 solver.cpp:219] Iteration 100 (935.288 iter/s, 0.106919s/100 iters), loss = 0.554812
I0428 20:10:11.835863 31784 solver.cpp:238]     Train net output #0: loss = 0.554812 (* 1 = 0.554812 loss)
I0428 20:10:11.835870 31784 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:11.946039 31784 solver.cpp:219] Iteration 200 (907.738 iter/s, 0.110164s/100 iters), loss = 0.178937
I0428 20:10:11.946079 31784 solver.cpp:238]     Train net output #0: loss = 0.178937 (* 1 = 0.178937 loss)
I0428 20:10:11.946084 31784 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:12.052150 31784 solver.cpp:219] Iteration 300 (942.712 iter/s, 0.106077s/100 iters), loss = 0.194332
I0428 20:10:12.052189 31784 solver.cpp:238]     Train net output #0: loss = 0.194332 (* 1 = 0.194332 loss)
I0428 20:10:12.052196 31784 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:12.157315 31784 solver.cpp:219] Iteration 400 (951.194 iter/s, 0.105131s/100 iters), loss = 0.0975182
I0428 20:10:12.157356 31784 solver.cpp:238]     Train net output #0: loss = 0.0975182 (* 1 = 0.0975182 loss)
I0428 20:10:12.157361 31784 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:12.261518 31784 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:12.337726 31791 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:12.338366 31784 solver.cpp:398]     Test net output #0: accuracy = 0.9679
I0428 20:10:12.338387 31784 solver.cpp:398]     Test net output #1: loss = 0.10295 (* 1 = 0.10295 loss)
I0428 20:10:12.339431 31784 solver.cpp:219] Iteration 500 (549.223 iter/s, 0.182075s/100 iters), loss = 0.107145
I0428 20:10:12.339483 31784 solver.cpp:238]     Train net output #0: loss = 0.107145 (* 1 = 0.107145 loss)
I0428 20:10:12.339496 31784 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:12.448890 31784 solver.cpp:219] Iteration 600 (914.091 iter/s, 0.109398s/100 iters), loss = 0.0615639
I0428 20:10:12.448915 31784 solver.cpp:238]     Train net output #0: loss = 0.0615639 (* 1 = 0.0615639 loss)
I0428 20:10:12.448937 31784 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:12.551857 31784 solver.cpp:219] Iteration 700 (971.53 iter/s, 0.10293s/100 iters), loss = 0.156042
I0428 20:10:12.551880 31784 solver.cpp:238]     Train net output #0: loss = 0.156042 (* 1 = 0.156042 loss)
I0428 20:10:12.551903 31784 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:12.656828 31784 solver.cpp:219] Iteration 800 (952.958 iter/s, 0.104936s/100 iters), loss = 0.179127
I0428 20:10:12.656852 31784 solver.cpp:238]     Train net output #0: loss = 0.179127 (* 1 = 0.179127 loss)
I0428 20:10:12.656858 31784 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:12.762470 31784 solver.cpp:219] Iteration 900 (946.915 iter/s, 0.105606s/100 iters), loss = 0.164146
I0428 20:10:12.762491 31784 solver.cpp:238]     Train net output #0: loss = 0.164146 (* 1 = 0.164146 loss)
I0428 20:10:12.762497 31784 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:12.798135 31790 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:12.866577 31784 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:12.867936 31784 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:12.868777 31784 solver.cpp:311] Iteration 1000, loss = 0.150098
I0428 20:10:12.868793 31784 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:12.944473 31791 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:12.945117 31784 solver.cpp:398]     Test net output #0: accuracy = 0.9768
I0428 20:10:12.945137 31784 solver.cpp:398]     Test net output #1: loss = 0.0730399 (* 1 = 0.0730399 loss)
I0428 20:10:12.945142 31784 solver.cpp:316] Optimization Done.
I0428 20:10:12.945147 31784 caffe.cpp:259] Optimization Done.
