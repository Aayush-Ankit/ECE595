I0428 19:42:50.808611 25204 caffe.cpp:218] Using GPUs 0
I0428 19:42:50.841728 25204 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:51.345165 25204 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test405.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:51.345309 25204 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test405.prototxt
I0428 19:42:51.345728 25204 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:51.345748 25204 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:51.345849 25204 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:51.345929 25204 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:51.346031 25204 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:51.346058 25204 net.cpp:86] Creating Layer mnist
I0428 19:42:51.346067 25204 net.cpp:382] mnist -> data
I0428 19:42:51.346089 25204 net.cpp:382] mnist -> label
I0428 19:42:51.347178 25204 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:51.349660 25204 net.cpp:124] Setting up mnist
I0428 19:42:51.349678 25204 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:51.349684 25204 net.cpp:131] Top shape: 64 (64)
I0428 19:42:51.349687 25204 net.cpp:139] Memory required for data: 200960
I0428 19:42:51.349694 25204 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:51.349740 25204 net.cpp:86] Creating Layer conv0
I0428 19:42:51.349762 25204 net.cpp:408] conv0 <- data
I0428 19:42:51.349776 25204 net.cpp:382] conv0 -> conv0
I0428 19:42:51.639073 25204 net.cpp:124] Setting up conv0
I0428 19:42:51.639106 25204 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:51.639111 25204 net.cpp:139] Memory required for data: 495872
I0428 19:42:51.639130 25204 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:51.639144 25204 net.cpp:86] Creating Layer pool0
I0428 19:42:51.639149 25204 net.cpp:408] pool0 <- conv0
I0428 19:42:51.639155 25204 net.cpp:382] pool0 -> pool0
I0428 19:42:51.639210 25204 net.cpp:124] Setting up pool0
I0428 19:42:51.639217 25204 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:51.639221 25204 net.cpp:139] Memory required for data: 569600
I0428 19:42:51.639225 25204 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:51.639237 25204 net.cpp:86] Creating Layer conv1
I0428 19:42:51.639241 25204 net.cpp:408] conv1 <- pool0
I0428 19:42:51.639247 25204 net.cpp:382] conv1 -> conv1
I0428 19:42:51.642343 25204 net.cpp:124] Setting up conv1
I0428 19:42:51.642361 25204 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:51.642366 25204 net.cpp:139] Memory required for data: 979200
I0428 19:42:51.642376 25204 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:51.642385 25204 net.cpp:86] Creating Layer pool1
I0428 19:42:51.642390 25204 net.cpp:408] pool1 <- conv1
I0428 19:42:51.642396 25204 net.cpp:382] pool1 -> pool1
I0428 19:42:51.642441 25204 net.cpp:124] Setting up pool1
I0428 19:42:51.642446 25204 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:51.642451 25204 net.cpp:139] Memory required for data: 1081600
I0428 19:42:51.642454 25204 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:51.642462 25204 net.cpp:86] Creating Layer ip1
I0428 19:42:51.642465 25204 net.cpp:408] ip1 <- pool1
I0428 19:42:51.642472 25204 net.cpp:382] ip1 -> ip1
I0428 19:42:51.642613 25204 net.cpp:124] Setting up ip1
I0428 19:42:51.642622 25204 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:51.642627 25204 net.cpp:139] Memory required for data: 1084160
I0428 19:42:51.642634 25204 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:51.642640 25204 net.cpp:86] Creating Layer relu1
I0428 19:42:51.642644 25204 net.cpp:408] relu1 <- ip1
I0428 19:42:51.642649 25204 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:51.642843 25204 net.cpp:124] Setting up relu1
I0428 19:42:51.642853 25204 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:51.642856 25204 net.cpp:139] Memory required for data: 1086720
I0428 19:42:51.642859 25204 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:51.642868 25204 net.cpp:86] Creating Layer ip2
I0428 19:42:51.642871 25204 net.cpp:408] ip2 <- ip1
I0428 19:42:51.642877 25204 net.cpp:382] ip2 -> ip2
I0428 19:42:51.642985 25204 net.cpp:124] Setting up ip2
I0428 19:42:51.642993 25204 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:51.642997 25204 net.cpp:139] Memory required for data: 1093120
I0428 19:42:51.643003 25204 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:51.643010 25204 net.cpp:86] Creating Layer relu2
I0428 19:42:51.643014 25204 net.cpp:408] relu2 <- ip2
I0428 19:42:51.643019 25204 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:51.643851 25204 net.cpp:124] Setting up relu2
I0428 19:42:51.643867 25204 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:51.643870 25204 net.cpp:139] Memory required for data: 1099520
I0428 19:42:51.643874 25204 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:51.643882 25204 net.cpp:86] Creating Layer ip3
I0428 19:42:51.643887 25204 net.cpp:408] ip3 <- ip2
I0428 19:42:51.643893 25204 net.cpp:382] ip3 -> ip3
I0428 19:42:51.644007 25204 net.cpp:124] Setting up ip3
I0428 19:42:51.644017 25204 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:51.644021 25204 net.cpp:139] Memory required for data: 1102080
I0428 19:42:51.644029 25204 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:51.644035 25204 net.cpp:86] Creating Layer relu3
I0428 19:42:51.644039 25204 net.cpp:408] relu3 <- ip3
I0428 19:42:51.644044 25204 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:51.644238 25204 net.cpp:124] Setting up relu3
I0428 19:42:51.644249 25204 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:51.644253 25204 net.cpp:139] Memory required for data: 1104640
I0428 19:42:51.644256 25204 layer_factory.hpp:77] Creating layer loss
I0428 19:42:51.644264 25204 net.cpp:86] Creating Layer loss
I0428 19:42:51.644268 25204 net.cpp:408] loss <- ip3
I0428 19:42:51.644273 25204 net.cpp:408] loss <- label
I0428 19:42:51.644279 25204 net.cpp:382] loss -> loss
I0428 19:42:51.644301 25204 layer_factory.hpp:77] Creating layer loss
I0428 19:42:51.644560 25204 net.cpp:124] Setting up loss
I0428 19:42:51.644572 25204 net.cpp:131] Top shape: (1)
I0428 19:42:51.644575 25204 net.cpp:134]     with loss weight 1
I0428 19:42:51.644592 25204 net.cpp:139] Memory required for data: 1104644
I0428 19:42:51.644595 25204 net.cpp:200] loss needs backward computation.
I0428 19:42:51.644599 25204 net.cpp:200] relu3 needs backward computation.
I0428 19:42:51.644603 25204 net.cpp:200] ip3 needs backward computation.
I0428 19:42:51.644608 25204 net.cpp:200] relu2 needs backward computation.
I0428 19:42:51.644610 25204 net.cpp:200] ip2 needs backward computation.
I0428 19:42:51.644613 25204 net.cpp:200] relu1 needs backward computation.
I0428 19:42:51.644618 25204 net.cpp:200] ip1 needs backward computation.
I0428 19:42:51.644620 25204 net.cpp:200] pool1 needs backward computation.
I0428 19:42:51.644623 25204 net.cpp:200] conv1 needs backward computation.
I0428 19:42:51.644628 25204 net.cpp:200] pool0 needs backward computation.
I0428 19:42:51.644630 25204 net.cpp:200] conv0 needs backward computation.
I0428 19:42:51.644634 25204 net.cpp:202] mnist does not need backward computation.
I0428 19:42:51.644637 25204 net.cpp:244] This network produces output loss
I0428 19:42:51.644649 25204 net.cpp:257] Network initialization done.
I0428 19:42:51.645050 25204 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test405.prototxt
I0428 19:42:51.645081 25204 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:51.645186 25204 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:51.645280 25204 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:51.645330 25204 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:51.645349 25204 net.cpp:86] Creating Layer mnist
I0428 19:42:51.645354 25204 net.cpp:382] mnist -> data
I0428 19:42:51.645364 25204 net.cpp:382] mnist -> label
I0428 19:42:51.645462 25204 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:51.647641 25204 net.cpp:124] Setting up mnist
I0428 19:42:51.647665 25204 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:51.647671 25204 net.cpp:131] Top shape: 100 (100)
I0428 19:42:51.647675 25204 net.cpp:139] Memory required for data: 314000
I0428 19:42:51.647680 25204 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:51.647711 25204 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:51.647716 25204 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:51.647722 25204 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:51.647729 25204 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:51.647791 25204 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:51.647799 25204 net.cpp:131] Top shape: 100 (100)
I0428 19:42:51.647802 25204 net.cpp:131] Top shape: 100 (100)
I0428 19:42:51.647805 25204 net.cpp:139] Memory required for data: 314800
I0428 19:42:51.647809 25204 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:51.647819 25204 net.cpp:86] Creating Layer conv0
I0428 19:42:51.647822 25204 net.cpp:408] conv0 <- data
I0428 19:42:51.647828 25204 net.cpp:382] conv0 -> conv0
I0428 19:42:51.649765 25204 net.cpp:124] Setting up conv0
I0428 19:42:51.649783 25204 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:51.649787 25204 net.cpp:139] Memory required for data: 775600
I0428 19:42:51.649798 25204 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:51.649806 25204 net.cpp:86] Creating Layer pool0
I0428 19:42:51.649811 25204 net.cpp:408] pool0 <- conv0
I0428 19:42:51.649816 25204 net.cpp:382] pool0 -> pool0
I0428 19:42:51.649859 25204 net.cpp:124] Setting up pool0
I0428 19:42:51.649865 25204 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:51.649869 25204 net.cpp:139] Memory required for data: 890800
I0428 19:42:51.649873 25204 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:51.649883 25204 net.cpp:86] Creating Layer conv1
I0428 19:42:51.649886 25204 net.cpp:408] conv1 <- pool0
I0428 19:42:51.649893 25204 net.cpp:382] conv1 -> conv1
I0428 19:42:51.651582 25204 net.cpp:124] Setting up conv1
I0428 19:42:51.651598 25204 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:51.651604 25204 net.cpp:139] Memory required for data: 1530800
I0428 19:42:51.651614 25204 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:51.651621 25204 net.cpp:86] Creating Layer pool1
I0428 19:42:51.651626 25204 net.cpp:408] pool1 <- conv1
I0428 19:42:51.651633 25204 net.cpp:382] pool1 -> pool1
I0428 19:42:51.651675 25204 net.cpp:124] Setting up pool1
I0428 19:42:51.651682 25204 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:51.651685 25204 net.cpp:139] Memory required for data: 1690800
I0428 19:42:51.651690 25204 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:51.651695 25204 net.cpp:86] Creating Layer ip1
I0428 19:42:51.651700 25204 net.cpp:408] ip1 <- pool1
I0428 19:42:51.651705 25204 net.cpp:382] ip1 -> ip1
I0428 19:42:51.651841 25204 net.cpp:124] Setting up ip1
I0428 19:42:51.651850 25204 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:51.651867 25204 net.cpp:139] Memory required for data: 1694800
I0428 19:42:51.651876 25204 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:51.651882 25204 net.cpp:86] Creating Layer relu1
I0428 19:42:51.651886 25204 net.cpp:408] relu1 <- ip1
I0428 19:42:51.651891 25204 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:51.652076 25204 net.cpp:124] Setting up relu1
I0428 19:42:51.652086 25204 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:51.652091 25204 net.cpp:139] Memory required for data: 1698800
I0428 19:42:51.652093 25204 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:51.652101 25204 net.cpp:86] Creating Layer ip2
I0428 19:42:51.652107 25204 net.cpp:408] ip2 <- ip1
I0428 19:42:51.652112 25204 net.cpp:382] ip2 -> ip2
I0428 19:42:51.652225 25204 net.cpp:124] Setting up ip2
I0428 19:42:51.652233 25204 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:51.652237 25204 net.cpp:139] Memory required for data: 1708800
I0428 19:42:51.652243 25204 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:51.652248 25204 net.cpp:86] Creating Layer relu2
I0428 19:42:51.652252 25204 net.cpp:408] relu2 <- ip2
I0428 19:42:51.652257 25204 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:51.652433 25204 net.cpp:124] Setting up relu2
I0428 19:42:51.652442 25204 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:51.652446 25204 net.cpp:139] Memory required for data: 1718800
I0428 19:42:51.652451 25204 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:51.652456 25204 net.cpp:86] Creating Layer ip3
I0428 19:42:51.652460 25204 net.cpp:408] ip3 <- ip2
I0428 19:42:51.652467 25204 net.cpp:382] ip3 -> ip3
I0428 19:42:51.652590 25204 net.cpp:124] Setting up ip3
I0428 19:42:51.652598 25204 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:51.652602 25204 net.cpp:139] Memory required for data: 1722800
I0428 19:42:51.652611 25204 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:51.652616 25204 net.cpp:86] Creating Layer relu3
I0428 19:42:51.652621 25204 net.cpp:408] relu3 <- ip3
I0428 19:42:51.652626 25204 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:51.653591 25204 net.cpp:124] Setting up relu3
I0428 19:42:51.653607 25204 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:51.653611 25204 net.cpp:139] Memory required for data: 1726800
I0428 19:42:51.653616 25204 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:51.653623 25204 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:51.653627 25204 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:51.653633 25204 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:51.653640 25204 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:51.653692 25204 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:51.653698 25204 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:51.653704 25204 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:51.653707 25204 net.cpp:139] Memory required for data: 1734800
I0428 19:42:51.653710 25204 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:51.653717 25204 net.cpp:86] Creating Layer accuracy
I0428 19:42:51.653720 25204 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:51.653725 25204 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:51.653738 25204 net.cpp:382] accuracy -> accuracy
I0428 19:42:51.653745 25204 net.cpp:124] Setting up accuracy
I0428 19:42:51.653750 25204 net.cpp:131] Top shape: (1)
I0428 19:42:51.653753 25204 net.cpp:139] Memory required for data: 1734804
I0428 19:42:51.653756 25204 layer_factory.hpp:77] Creating layer loss
I0428 19:42:51.653762 25204 net.cpp:86] Creating Layer loss
I0428 19:42:51.653766 25204 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:51.653770 25204 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:51.653775 25204 net.cpp:382] loss -> loss
I0428 19:42:51.653789 25204 layer_factory.hpp:77] Creating layer loss
I0428 19:42:51.654062 25204 net.cpp:124] Setting up loss
I0428 19:42:51.654074 25204 net.cpp:131] Top shape: (1)
I0428 19:42:51.654078 25204 net.cpp:134]     with loss weight 1
I0428 19:42:51.654086 25204 net.cpp:139] Memory required for data: 1734808
I0428 19:42:51.654103 25204 net.cpp:200] loss needs backward computation.
I0428 19:42:51.654108 25204 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:51.654111 25204 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:51.654115 25204 net.cpp:200] relu3 needs backward computation.
I0428 19:42:51.654119 25204 net.cpp:200] ip3 needs backward computation.
I0428 19:42:51.654122 25204 net.cpp:200] relu2 needs backward computation.
I0428 19:42:51.654126 25204 net.cpp:200] ip2 needs backward computation.
I0428 19:42:51.654129 25204 net.cpp:200] relu1 needs backward computation.
I0428 19:42:51.654132 25204 net.cpp:200] ip1 needs backward computation.
I0428 19:42:51.654136 25204 net.cpp:200] pool1 needs backward computation.
I0428 19:42:51.654139 25204 net.cpp:200] conv1 needs backward computation.
I0428 19:42:51.654144 25204 net.cpp:200] pool0 needs backward computation.
I0428 19:42:51.654147 25204 net.cpp:200] conv0 needs backward computation.
I0428 19:42:51.654165 25204 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:51.654170 25204 net.cpp:202] mnist does not need backward computation.
I0428 19:42:51.654178 25204 net.cpp:244] This network produces output accuracy
I0428 19:42:51.654183 25204 net.cpp:244] This network produces output loss
I0428 19:42:51.654196 25204 net.cpp:257] Network initialization done.
I0428 19:42:51.654245 25204 solver.cpp:56] Solver scaffolding done.
I0428 19:42:51.654641 25204 caffe.cpp:248] Starting Optimization
I0428 19:42:51.654649 25204 solver.cpp:273] Solving LeNet
I0428 19:42:51.654654 25204 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:51.655004 25204 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:51.658938 25204 blocking_queue.cpp:49] Waiting for data
I0428 19:42:51.732847 25211 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:51.733307 25204 solver.cpp:398]     Test net output #0: accuracy = 0.0818
I0428 19:42:51.733331 25204 solver.cpp:398]     Test net output #1: loss = 2.31046 (* 1 = 2.31046 loss)
I0428 19:42:51.734508 25204 solver.cpp:219] Iteration 0 (-3.53653e-31 iter/s, 0.0798187s/100 iters), loss = 2.31763
I0428 19:42:51.734547 25204 solver.cpp:238]     Train net output #0: loss = 2.31763 (* 1 = 2.31763 loss)
I0428 19:42:51.734561 25204 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:51.825485 25204 solver.cpp:219] Iteration 100 (1099.75 iter/s, 0.0909298s/100 iters), loss = 1.26101
I0428 19:42:51.825510 25204 solver.cpp:238]     Train net output #0: loss = 1.26101 (* 1 = 1.26101 loss)
I0428 19:42:51.825532 25204 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:51.908355 25204 solver.cpp:219] Iteration 200 (1207.23 iter/s, 0.0828344s/100 iters), loss = 1.13062
I0428 19:42:51.908396 25204 solver.cpp:238]     Train net output #0: loss = 1.13062 (* 1 = 1.13062 loss)
I0428 19:42:51.908401 25204 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:51.988873 25204 solver.cpp:219] Iteration 300 (1242.52 iter/s, 0.0804815s/100 iters), loss = 0.897366
I0428 19:42:51.988911 25204 solver.cpp:238]     Train net output #0: loss = 0.897366 (* 1 = 0.897366 loss)
I0428 19:42:51.988917 25204 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:52.082813 25204 solver.cpp:219] Iteration 400 (1065.08 iter/s, 0.0938895s/100 iters), loss = 0.762773
I0428 19:42:52.082837 25204 solver.cpp:238]     Train net output #0: loss = 0.762773 (* 1 = 0.762773 loss)
I0428 19:42:52.082844 25204 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:52.164624 25204 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:52.239584 25211 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:52.240118 25204 solver.cpp:398]     Test net output #0: accuracy = 0.664
I0428 19:42:52.240144 25204 solver.cpp:398]     Test net output #1: loss = 0.842381 (* 1 = 0.842381 loss)
I0428 19:42:52.241150 25204 solver.cpp:219] Iteration 500 (631.719 iter/s, 0.158298s/100 iters), loss = 0.719552
I0428 19:42:52.241181 25204 solver.cpp:238]     Train net output #0: loss = 0.719552 (* 1 = 0.719552 loss)
I0428 19:42:52.241215 25204 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:52.331712 25204 solver.cpp:219] Iteration 600 (1104.81 iter/s, 0.0905134s/100 iters), loss = 1.02487
I0428 19:42:52.331738 25204 solver.cpp:238]     Train net output #0: loss = 1.02487 (* 1 = 1.02487 loss)
I0428 19:42:52.331745 25204 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:52.413144 25204 solver.cpp:219] Iteration 700 (1228.6 iter/s, 0.0813937s/100 iters), loss = 0.915716
I0428 19:42:52.413167 25204 solver.cpp:238]     Train net output #0: loss = 0.915716 (* 1 = 0.915716 loss)
I0428 19:42:52.413173 25204 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:52.503819 25204 solver.cpp:219] Iteration 800 (1103.32 iter/s, 0.0906352s/100 iters), loss = 0.938107
I0428 19:42:52.503859 25204 solver.cpp:238]     Train net output #0: loss = 0.938107 (* 1 = 0.938107 loss)
I0428 19:42:52.503865 25204 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:52.586503 25204 solver.cpp:219] Iteration 900 (1210.19 iter/s, 0.0826317s/100 iters), loss = 1.02208
I0428 19:42:52.586542 25204 solver.cpp:238]     Train net output #0: loss = 1.02208 (* 1 = 1.02208 loss)
I0428 19:42:52.586549 25204 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:52.617643 25210 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:52.676776 25204 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:52.677606 25204 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:52.678098 25204 solver.cpp:311] Iteration 1000, loss = 0.764236
I0428 19:42:52.678131 25204 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:52.753571 25211 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:52.754098 25204 solver.cpp:398]     Test net output #0: accuracy = 0.6752
I0428 19:42:52.754123 25204 solver.cpp:398]     Test net output #1: loss = 0.795003 (* 1 = 0.795003 loss)
I0428 19:42:52.754129 25204 solver.cpp:316] Optimization Done.
I0428 19:42:52.754133 25204 caffe.cpp:259] Optimization Done.
