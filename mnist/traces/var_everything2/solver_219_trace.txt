I0428 19:35:09.747509 23457 caffe.cpp:218] Using GPUs 0
I0428 19:35:09.788612 23457 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:10.312870 23457 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test219.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:10.313006 23457 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test219.prototxt
I0428 19:35:10.313372 23457 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:10.313392 23457 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:10.313480 23457 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:10.313557 23457 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:10.313661 23457 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:10.313684 23457 net.cpp:86] Creating Layer mnist
I0428 19:35:10.313694 23457 net.cpp:382] mnist -> data
I0428 19:35:10.313716 23457 net.cpp:382] mnist -> label
I0428 19:35:10.314807 23457 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:10.317493 23457 net.cpp:124] Setting up mnist
I0428 19:35:10.317513 23457 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:10.317538 23457 net.cpp:131] Top shape: 64 (64)
I0428 19:35:10.317543 23457 net.cpp:139] Memory required for data: 200960
I0428 19:35:10.317549 23457 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:10.317565 23457 net.cpp:86] Creating Layer conv0
I0428 19:35:10.317570 23457 net.cpp:408] conv0 <- data
I0428 19:35:10.317584 23457 net.cpp:382] conv0 -> conv0
I0428 19:35:10.639286 23457 net.cpp:124] Setting up conv0
I0428 19:35:10.639318 23457 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:10.639323 23457 net.cpp:139] Memory required for data: 7573760
I0428 19:35:10.639343 23457 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:10.639356 23457 net.cpp:86] Creating Layer pool0
I0428 19:35:10.639382 23457 net.cpp:408] pool0 <- conv0
I0428 19:35:10.639389 23457 net.cpp:382] pool0 -> pool0
I0428 19:35:10.639446 23457 net.cpp:124] Setting up pool0
I0428 19:35:10.639461 23457 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:10.639463 23457 net.cpp:139] Memory required for data: 9416960
I0428 19:35:10.639467 23457 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:10.639477 23457 net.cpp:86] Creating Layer ip1
I0428 19:35:10.639480 23457 net.cpp:408] ip1 <- pool0
I0428 19:35:10.639487 23457 net.cpp:382] ip1 -> ip1
I0428 19:35:10.641782 23457 net.cpp:124] Setting up ip1
I0428 19:35:10.641798 23457 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:10.641801 23457 net.cpp:139] Memory required for data: 9423360
I0428 19:35:10.641811 23457 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:10.641819 23457 net.cpp:86] Creating Layer relu1
I0428 19:35:10.641824 23457 net.cpp:408] relu1 <- ip1
I0428 19:35:10.641829 23457 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:10.642033 23457 net.cpp:124] Setting up relu1
I0428 19:35:10.642045 23457 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:10.642048 23457 net.cpp:139] Memory required for data: 9429760
I0428 19:35:10.642051 23457 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:10.642060 23457 net.cpp:86] Creating Layer ip2
I0428 19:35:10.642063 23457 net.cpp:408] ip2 <- ip1
I0428 19:35:10.642069 23457 net.cpp:382] ip2 -> ip2
I0428 19:35:10.642184 23457 net.cpp:124] Setting up ip2
I0428 19:35:10.642194 23457 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:10.642196 23457 net.cpp:139] Memory required for data: 9436160
I0428 19:35:10.642206 23457 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:10.642211 23457 net.cpp:86] Creating Layer relu2
I0428 19:35:10.642215 23457 net.cpp:408] relu2 <- ip2
I0428 19:35:10.642220 23457 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:10.643076 23457 net.cpp:124] Setting up relu2
I0428 19:35:10.643092 23457 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:10.643096 23457 net.cpp:139] Memory required for data: 9442560
I0428 19:35:10.643100 23457 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:10.643108 23457 net.cpp:86] Creating Layer ip3
I0428 19:35:10.643112 23457 net.cpp:408] ip3 <- ip2
I0428 19:35:10.643120 23457 net.cpp:382] ip3 -> ip3
I0428 19:35:10.643234 23457 net.cpp:124] Setting up ip3
I0428 19:35:10.643244 23457 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:10.643247 23457 net.cpp:139] Memory required for data: 9445120
I0428 19:35:10.643254 23457 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:10.643261 23457 net.cpp:86] Creating Layer relu3
I0428 19:35:10.643265 23457 net.cpp:408] relu3 <- ip3
I0428 19:35:10.643270 23457 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:10.643450 23457 net.cpp:124] Setting up relu3
I0428 19:35:10.643460 23457 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:10.643463 23457 net.cpp:139] Memory required for data: 9447680
I0428 19:35:10.643467 23457 layer_factory.hpp:77] Creating layer loss
I0428 19:35:10.643474 23457 net.cpp:86] Creating Layer loss
I0428 19:35:10.643478 23457 net.cpp:408] loss <- ip3
I0428 19:35:10.643482 23457 net.cpp:408] loss <- label
I0428 19:35:10.643489 23457 net.cpp:382] loss -> loss
I0428 19:35:10.643512 23457 layer_factory.hpp:77] Creating layer loss
I0428 19:35:10.643785 23457 net.cpp:124] Setting up loss
I0428 19:35:10.643796 23457 net.cpp:131] Top shape: (1)
I0428 19:35:10.643800 23457 net.cpp:134]     with loss weight 1
I0428 19:35:10.643817 23457 net.cpp:139] Memory required for data: 9447684
I0428 19:35:10.643821 23457 net.cpp:200] loss needs backward computation.
I0428 19:35:10.643826 23457 net.cpp:200] relu3 needs backward computation.
I0428 19:35:10.643829 23457 net.cpp:200] ip3 needs backward computation.
I0428 19:35:10.643833 23457 net.cpp:200] relu2 needs backward computation.
I0428 19:35:10.643836 23457 net.cpp:200] ip2 needs backward computation.
I0428 19:35:10.643839 23457 net.cpp:200] relu1 needs backward computation.
I0428 19:35:10.643842 23457 net.cpp:200] ip1 needs backward computation.
I0428 19:35:10.643858 23457 net.cpp:200] pool0 needs backward computation.
I0428 19:35:10.643862 23457 net.cpp:200] conv0 needs backward computation.
I0428 19:35:10.643867 23457 net.cpp:202] mnist does not need backward computation.
I0428 19:35:10.643870 23457 net.cpp:244] This network produces output loss
I0428 19:35:10.643879 23457 net.cpp:257] Network initialization done.
I0428 19:35:10.644210 23457 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test219.prototxt
I0428 19:35:10.644242 23457 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:10.644336 23457 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:10.644413 23457 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:10.644470 23457 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:10.644484 23457 net.cpp:86] Creating Layer mnist
I0428 19:35:10.644490 23457 net.cpp:382] mnist -> data
I0428 19:35:10.644500 23457 net.cpp:382] mnist -> label
I0428 19:35:10.644599 23457 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:10.645846 23457 net.cpp:124] Setting up mnist
I0428 19:35:10.645862 23457 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:10.645869 23457 net.cpp:131] Top shape: 100 (100)
I0428 19:35:10.645872 23457 net.cpp:139] Memory required for data: 314000
I0428 19:35:10.645876 23457 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:10.645884 23457 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:10.645889 23457 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:10.645895 23457 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:10.645903 23457 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:10.646009 23457 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:10.646019 23457 net.cpp:131] Top shape: 100 (100)
I0428 19:35:10.646024 23457 net.cpp:131] Top shape: 100 (100)
I0428 19:35:10.646028 23457 net.cpp:139] Memory required for data: 314800
I0428 19:35:10.646044 23457 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:10.646055 23457 net.cpp:86] Creating Layer conv0
I0428 19:35:10.646059 23457 net.cpp:408] conv0 <- data
I0428 19:35:10.646065 23457 net.cpp:382] conv0 -> conv0
I0428 19:35:10.647747 23457 net.cpp:124] Setting up conv0
I0428 19:35:10.647764 23457 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:10.647770 23457 net.cpp:139] Memory required for data: 11834800
I0428 19:35:10.647784 23457 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:10.647792 23457 net.cpp:86] Creating Layer pool0
I0428 19:35:10.647797 23457 net.cpp:408] pool0 <- conv0
I0428 19:35:10.647804 23457 net.cpp:382] pool0 -> pool0
I0428 19:35:10.647847 23457 net.cpp:124] Setting up pool0
I0428 19:35:10.647855 23457 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:10.647858 23457 net.cpp:139] Memory required for data: 14714800
I0428 19:35:10.647862 23457 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:10.647871 23457 net.cpp:86] Creating Layer ip1
I0428 19:35:10.647874 23457 net.cpp:408] ip1 <- pool0
I0428 19:35:10.647881 23457 net.cpp:382] ip1 -> ip1
I0428 19:35:10.650197 23457 net.cpp:124] Setting up ip1
I0428 19:35:10.650212 23457 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:10.650216 23457 net.cpp:139] Memory required for data: 14724800
I0428 19:35:10.650226 23457 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:10.650233 23457 net.cpp:86] Creating Layer relu1
I0428 19:35:10.650236 23457 net.cpp:408] relu1 <- ip1
I0428 19:35:10.650243 23457 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:10.650439 23457 net.cpp:124] Setting up relu1
I0428 19:35:10.650450 23457 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:10.650454 23457 net.cpp:139] Memory required for data: 14734800
I0428 19:35:10.650459 23457 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:10.650465 23457 net.cpp:86] Creating Layer ip2
I0428 19:35:10.650468 23457 net.cpp:408] ip2 <- ip1
I0428 19:35:10.650476 23457 net.cpp:382] ip2 -> ip2
I0428 19:35:10.650609 23457 net.cpp:124] Setting up ip2
I0428 19:35:10.650616 23457 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:10.650620 23457 net.cpp:139] Memory required for data: 14744800
I0428 19:35:10.650629 23457 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:10.650635 23457 net.cpp:86] Creating Layer relu2
I0428 19:35:10.650637 23457 net.cpp:408] relu2 <- ip2
I0428 19:35:10.650642 23457 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:10.651497 23457 net.cpp:124] Setting up relu2
I0428 19:35:10.651512 23457 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:10.651516 23457 net.cpp:139] Memory required for data: 14754800
I0428 19:35:10.651520 23457 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:10.651530 23457 net.cpp:86] Creating Layer ip3
I0428 19:35:10.651533 23457 net.cpp:408] ip3 <- ip2
I0428 19:35:10.651540 23457 net.cpp:382] ip3 -> ip3
I0428 19:35:10.651660 23457 net.cpp:124] Setting up ip3
I0428 19:35:10.651669 23457 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:10.651674 23457 net.cpp:139] Memory required for data: 14758800
I0428 19:35:10.651680 23457 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:10.651685 23457 net.cpp:86] Creating Layer relu3
I0428 19:35:10.651690 23457 net.cpp:408] relu3 <- ip3
I0428 19:35:10.651695 23457 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:10.651871 23457 net.cpp:124] Setting up relu3
I0428 19:35:10.651881 23457 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:10.651885 23457 net.cpp:139] Memory required for data: 14762800
I0428 19:35:10.651888 23457 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:10.651893 23457 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:10.651897 23457 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:10.651902 23457 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:10.651909 23457 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:10.651950 23457 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:10.651958 23457 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:10.651976 23457 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:10.651980 23457 net.cpp:139] Memory required for data: 14770800
I0428 19:35:10.651983 23457 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:10.651989 23457 net.cpp:86] Creating Layer accuracy
I0428 19:35:10.651993 23457 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:10.651998 23457 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:10.652004 23457 net.cpp:382] accuracy -> accuracy
I0428 19:35:10.652012 23457 net.cpp:124] Setting up accuracy
I0428 19:35:10.652016 23457 net.cpp:131] Top shape: (1)
I0428 19:35:10.652019 23457 net.cpp:139] Memory required for data: 14770804
I0428 19:35:10.652024 23457 layer_factory.hpp:77] Creating layer loss
I0428 19:35:10.652029 23457 net.cpp:86] Creating Layer loss
I0428 19:35:10.652031 23457 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:10.652036 23457 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:10.652041 23457 net.cpp:382] loss -> loss
I0428 19:35:10.652048 23457 layer_factory.hpp:77] Creating layer loss
I0428 19:35:10.652317 23457 net.cpp:124] Setting up loss
I0428 19:35:10.652326 23457 net.cpp:131] Top shape: (1)
I0428 19:35:10.652330 23457 net.cpp:134]     with loss weight 1
I0428 19:35:10.652338 23457 net.cpp:139] Memory required for data: 14770808
I0428 19:35:10.652343 23457 net.cpp:200] loss needs backward computation.
I0428 19:35:10.652346 23457 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:10.652351 23457 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:10.652354 23457 net.cpp:200] relu3 needs backward computation.
I0428 19:35:10.652357 23457 net.cpp:200] ip3 needs backward computation.
I0428 19:35:10.652361 23457 net.cpp:200] relu2 needs backward computation.
I0428 19:35:10.652364 23457 net.cpp:200] ip2 needs backward computation.
I0428 19:35:10.652369 23457 net.cpp:200] relu1 needs backward computation.
I0428 19:35:10.652371 23457 net.cpp:200] ip1 needs backward computation.
I0428 19:35:10.652375 23457 net.cpp:200] pool0 needs backward computation.
I0428 19:35:10.652379 23457 net.cpp:200] conv0 needs backward computation.
I0428 19:35:10.652384 23457 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:10.652387 23457 net.cpp:202] mnist does not need backward computation.
I0428 19:35:10.652390 23457 net.cpp:244] This network produces output accuracy
I0428 19:35:10.652395 23457 net.cpp:244] This network produces output loss
I0428 19:35:10.652406 23457 net.cpp:257] Network initialization done.
I0428 19:35:10.652451 23457 solver.cpp:56] Solver scaffolding done.
I0428 19:35:10.652762 23457 caffe.cpp:248] Starting Optimization
I0428 19:35:10.652770 23457 solver.cpp:273] Solving LeNet
I0428 19:35:10.652773 23457 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:10.654268 23457 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:10.758492 23464 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:10.761323 23457 solver.cpp:398]     Test net output #0: accuracy = 0.1048
I0428 19:35:10.761350 23457 solver.cpp:398]     Test net output #1: loss = 2.30955 (* 1 = 2.30955 loss)
I0428 19:35:10.767251 23457 solver.cpp:219] Iteration 0 (-7.10458e-43 iter/s, 0.114449s/100 iters), loss = 2.28936
I0428 19:35:10.767282 23457 solver.cpp:238]     Train net output #0: loss = 2.28936 (* 1 = 2.28936 loss)
I0428 19:35:10.767295 23457 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:10.920640 23457 solver.cpp:219] Iteration 100 (652.124 iter/s, 0.153345s/100 iters), loss = 1.34955
I0428 19:35:10.920673 23457 solver.cpp:238]     Train net output #0: loss = 1.34955 (* 1 = 1.34955 loss)
I0428 19:35:10.920680 23457 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:11.069139 23457 solver.cpp:219] Iteration 200 (673.608 iter/s, 0.148454s/100 iters), loss = 1.31758
I0428 19:35:11.069171 23457 solver.cpp:238]     Train net output #0: loss = 1.31758 (* 1 = 1.31758 loss)
I0428 19:35:11.069178 23457 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:11.217633 23457 solver.cpp:219] Iteration 300 (673.631 iter/s, 0.148449s/100 iters), loss = 0.984445
I0428 19:35:11.217680 23457 solver.cpp:238]     Train net output #0: loss = 0.984445 (* 1 = 0.984445 loss)
I0428 19:35:11.217689 23457 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:11.364920 23457 solver.cpp:219] Iteration 400 (679.211 iter/s, 0.14723s/100 iters), loss = 1.26435
I0428 19:35:11.364946 23457 solver.cpp:238]     Train net output #0: loss = 1.26435 (* 1 = 1.26435 loss)
I0428 19:35:11.364953 23457 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:11.504138 23457 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:11.602470 23464 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:11.605259 23457 solver.cpp:398]     Test net output #0: accuracy = 0.562
I0428 19:35:11.605283 23457 solver.cpp:398]     Test net output #1: loss = 1.11128 (* 1 = 1.11128 loss)
I0428 19:35:11.606667 23457 solver.cpp:219] Iteration 500 (413.731 iter/s, 0.241703s/100 iters), loss = 1.31251
I0428 19:35:11.606706 23457 solver.cpp:238]     Train net output #0: loss = 1.31251 (* 1 = 1.31251 loss)
I0428 19:35:11.606714 23457 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:11.751636 23457 solver.cpp:219] Iteration 600 (689.975 iter/s, 0.144933s/100 iters), loss = 1.20274
I0428 19:35:11.751675 23457 solver.cpp:238]     Train net output #0: loss = 1.20274 (* 1 = 1.20274 loss)
I0428 19:35:11.751682 23457 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:11.893312 23457 solver.cpp:219] Iteration 700 (706.012 iter/s, 0.141641s/100 iters), loss = 0.963133
I0428 19:35:11.893352 23457 solver.cpp:238]     Train net output #0: loss = 0.963133 (* 1 = 0.963133 loss)
I0428 19:35:11.893359 23457 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:12.034468 23457 solver.cpp:219] Iteration 800 (708.619 iter/s, 0.141119s/100 iters), loss = 1.18883
I0428 19:35:12.034508 23457 solver.cpp:238]     Train net output #0: loss = 1.18883 (* 1 = 1.18883 loss)
I0428 19:35:12.034514 23457 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:12.176957 23457 solver.cpp:219] Iteration 900 (701.992 iter/s, 0.142452s/100 iters), loss = 1.33901
I0428 19:35:12.176980 23457 solver.cpp:238]     Train net output #0: loss = 1.33901 (* 1 = 1.33901 loss)
I0428 19:35:12.176986 23457 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:12.223729 23463 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:12.316671 23457 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:12.320963 23457 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:12.323196 23457 solver.cpp:311] Iteration 1000, loss = 0.935302
I0428 19:35:12.323213 23457 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:12.418694 23464 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:12.421349 23457 solver.cpp:398]     Test net output #0: accuracy = 0.5712
I0428 19:35:12.421381 23457 solver.cpp:398]     Test net output #1: loss = 1.05679 (* 1 = 1.05679 loss)
I0428 19:35:12.421386 23457 solver.cpp:316] Optimization Done.
I0428 19:35:12.421389 23457 caffe.cpp:259] Optimization Done.
