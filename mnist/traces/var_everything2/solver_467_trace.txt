I0428 19:45:13.359140 25763 caffe.cpp:218] Using GPUs 0
I0428 19:45:13.399999 25763 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:13.920898 25763 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test467.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:13.921030 25763 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test467.prototxt
I0428 19:45:13.921429 25763 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:13.921448 25763 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:13.921543 25763 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:45:13.921618 25763 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:13.921728 25763 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:13.921752 25763 net.cpp:86] Creating Layer mnist
I0428 19:45:13.921761 25763 net.cpp:382] mnist -> data
I0428 19:45:13.921783 25763 net.cpp:382] mnist -> label
I0428 19:45:13.922886 25763 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:13.925340 25763 net.cpp:124] Setting up mnist
I0428 19:45:13.925359 25763 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:13.925364 25763 net.cpp:131] Top shape: 64 (64)
I0428 19:45:13.925369 25763 net.cpp:139] Memory required for data: 200960
I0428 19:45:13.925375 25763 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:13.925390 25763 net.cpp:86] Creating Layer conv0
I0428 19:45:13.925411 25763 net.cpp:408] conv0 <- data
I0428 19:45:13.925423 25763 net.cpp:382] conv0 -> conv0
I0428 19:45:14.199460 25763 net.cpp:124] Setting up conv0
I0428 19:45:14.199486 25763 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:14.199489 25763 net.cpp:139] Memory required for data: 495872
I0428 19:45:14.199502 25763 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:14.199514 25763 net.cpp:86] Creating Layer pool0
I0428 19:45:14.199518 25763 net.cpp:408] pool0 <- conv0
I0428 19:45:14.199523 25763 net.cpp:382] pool0 -> pool0
I0428 19:45:14.199599 25763 net.cpp:124] Setting up pool0
I0428 19:45:14.199604 25763 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:14.199606 25763 net.cpp:139] Memory required for data: 569600
I0428 19:45:14.199609 25763 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:14.199620 25763 net.cpp:86] Creating Layer conv1
I0428 19:45:14.199622 25763 net.cpp:408] conv1 <- pool0
I0428 19:45:14.199626 25763 net.cpp:382] conv1 -> conv1
I0428 19:45:14.202438 25763 net.cpp:124] Setting up conv1
I0428 19:45:14.202468 25763 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:45:14.202472 25763 net.cpp:139] Memory required for data: 1388800
I0428 19:45:14.202481 25763 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:14.202487 25763 net.cpp:86] Creating Layer pool1
I0428 19:45:14.202491 25763 net.cpp:408] pool1 <- conv1
I0428 19:45:14.202497 25763 net.cpp:382] pool1 -> pool1
I0428 19:45:14.202563 25763 net.cpp:124] Setting up pool1
I0428 19:45:14.202567 25763 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:45:14.202570 25763 net.cpp:139] Memory required for data: 1593600
I0428 19:45:14.202572 25763 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:14.202580 25763 net.cpp:86] Creating Layer ip1
I0428 19:45:14.202582 25763 net.cpp:408] ip1 <- pool1
I0428 19:45:14.202587 25763 net.cpp:382] ip1 -> ip1
I0428 19:45:14.202927 25763 net.cpp:124] Setting up ip1
I0428 19:45:14.202934 25763 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:45:14.202952 25763 net.cpp:139] Memory required for data: 1606400
I0428 19:45:14.202960 25763 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:14.202965 25763 net.cpp:86] Creating Layer relu1
I0428 19:45:14.202968 25763 net.cpp:408] relu1 <- ip1
I0428 19:45:14.202973 25763 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:14.203142 25763 net.cpp:124] Setting up relu1
I0428 19:45:14.203150 25763 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:45:14.203153 25763 net.cpp:139] Memory required for data: 1619200
I0428 19:45:14.203156 25763 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:14.203162 25763 net.cpp:86] Creating Layer ip2
I0428 19:45:14.203166 25763 net.cpp:408] ip2 <- ip1
I0428 19:45:14.203171 25763 net.cpp:382] ip2 -> ip2
I0428 19:45:14.203275 25763 net.cpp:124] Setting up ip2
I0428 19:45:14.203281 25763 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:45:14.203284 25763 net.cpp:139] Memory required for data: 1632000
I0428 19:45:14.203289 25763 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:14.203295 25763 net.cpp:86] Creating Layer relu2
I0428 19:45:14.203299 25763 net.cpp:408] relu2 <- ip2
I0428 19:45:14.203302 25763 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:14.204022 25763 net.cpp:124] Setting up relu2
I0428 19:45:14.204035 25763 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:45:14.204054 25763 net.cpp:139] Memory required for data: 1644800
I0428 19:45:14.204058 25763 layer_factory.hpp:77] Creating layer ip3
I0428 19:45:14.204080 25763 net.cpp:86] Creating Layer ip3
I0428 19:45:14.204084 25763 net.cpp:408] ip3 <- ip2
I0428 19:45:14.204089 25763 net.cpp:382] ip3 -> ip3
I0428 19:45:14.204223 25763 net.cpp:124] Setting up ip3
I0428 19:45:14.204231 25763 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:14.204233 25763 net.cpp:139] Memory required for data: 1647360
I0428 19:45:14.204241 25763 layer_factory.hpp:77] Creating layer relu3
I0428 19:45:14.204246 25763 net.cpp:86] Creating Layer relu3
I0428 19:45:14.204249 25763 net.cpp:408] relu3 <- ip3
I0428 19:45:14.204253 25763 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:45:14.204413 25763 net.cpp:124] Setting up relu3
I0428 19:45:14.204421 25763 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:14.204426 25763 net.cpp:139] Memory required for data: 1649920
I0428 19:45:14.204428 25763 layer_factory.hpp:77] Creating layer loss
I0428 19:45:14.204433 25763 net.cpp:86] Creating Layer loss
I0428 19:45:14.204437 25763 net.cpp:408] loss <- ip3
I0428 19:45:14.204442 25763 net.cpp:408] loss <- label
I0428 19:45:14.204447 25763 net.cpp:382] loss -> loss
I0428 19:45:14.204464 25763 layer_factory.hpp:77] Creating layer loss
I0428 19:45:14.204682 25763 net.cpp:124] Setting up loss
I0428 19:45:14.204691 25763 net.cpp:131] Top shape: (1)
I0428 19:45:14.204694 25763 net.cpp:134]     with loss weight 1
I0428 19:45:14.204708 25763 net.cpp:139] Memory required for data: 1649924
I0428 19:45:14.204712 25763 net.cpp:200] loss needs backward computation.
I0428 19:45:14.204716 25763 net.cpp:200] relu3 needs backward computation.
I0428 19:45:14.204720 25763 net.cpp:200] ip3 needs backward computation.
I0428 19:45:14.204722 25763 net.cpp:200] relu2 needs backward computation.
I0428 19:45:14.204725 25763 net.cpp:200] ip2 needs backward computation.
I0428 19:45:14.204727 25763 net.cpp:200] relu1 needs backward computation.
I0428 19:45:14.204730 25763 net.cpp:200] ip1 needs backward computation.
I0428 19:45:14.204733 25763 net.cpp:200] pool1 needs backward computation.
I0428 19:45:14.204736 25763 net.cpp:200] conv1 needs backward computation.
I0428 19:45:14.204740 25763 net.cpp:200] pool0 needs backward computation.
I0428 19:45:14.204742 25763 net.cpp:200] conv0 needs backward computation.
I0428 19:45:14.204746 25763 net.cpp:202] mnist does not need backward computation.
I0428 19:45:14.204748 25763 net.cpp:244] This network produces output loss
I0428 19:45:14.204757 25763 net.cpp:257] Network initialization done.
I0428 19:45:14.205196 25763 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test467.prototxt
I0428 19:45:14.205286 25763 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:14.205374 25763 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:45:14.205452 25763 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:14.205497 25763 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:14.205512 25763 net.cpp:86] Creating Layer mnist
I0428 19:45:14.205516 25763 net.cpp:382] mnist -> data
I0428 19:45:14.205524 25763 net.cpp:382] mnist -> label
I0428 19:45:14.205603 25763 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:14.207662 25763 net.cpp:124] Setting up mnist
I0428 19:45:14.207684 25763 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:14.207687 25763 net.cpp:131] Top shape: 100 (100)
I0428 19:45:14.207691 25763 net.cpp:139] Memory required for data: 314000
I0428 19:45:14.207695 25763 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:14.207701 25763 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:14.207705 25763 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:14.207708 25763 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:14.207715 25763 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:14.207769 25763 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:14.207774 25763 net.cpp:131] Top shape: 100 (100)
I0428 19:45:14.207778 25763 net.cpp:131] Top shape: 100 (100)
I0428 19:45:14.207782 25763 net.cpp:139] Memory required for data: 314800
I0428 19:45:14.207783 25763 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:14.207792 25763 net.cpp:86] Creating Layer conv0
I0428 19:45:14.207794 25763 net.cpp:408] conv0 <- data
I0428 19:45:14.207798 25763 net.cpp:382] conv0 -> conv0
I0428 19:45:14.209408 25763 net.cpp:124] Setting up conv0
I0428 19:45:14.209421 25763 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:14.209425 25763 net.cpp:139] Memory required for data: 775600
I0428 19:45:14.209434 25763 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:14.209455 25763 net.cpp:86] Creating Layer pool0
I0428 19:45:14.209460 25763 net.cpp:408] pool0 <- conv0
I0428 19:45:14.209463 25763 net.cpp:382] pool0 -> pool0
I0428 19:45:14.209498 25763 net.cpp:124] Setting up pool0
I0428 19:45:14.209503 25763 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:14.209506 25763 net.cpp:139] Memory required for data: 890800
I0428 19:45:14.209509 25763 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:14.209517 25763 net.cpp:86] Creating Layer conv1
I0428 19:45:14.209520 25763 net.cpp:408] conv1 <- pool0
I0428 19:45:14.209525 25763 net.cpp:382] conv1 -> conv1
I0428 19:45:14.211064 25763 net.cpp:124] Setting up conv1
I0428 19:45:14.211092 25763 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:45:14.211097 25763 net.cpp:139] Memory required for data: 2170800
I0428 19:45:14.211104 25763 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:14.211110 25763 net.cpp:86] Creating Layer pool1
I0428 19:45:14.211113 25763 net.cpp:408] pool1 <- conv1
I0428 19:45:14.211119 25763 net.cpp:382] pool1 -> pool1
I0428 19:45:14.211151 25763 net.cpp:124] Setting up pool1
I0428 19:45:14.211156 25763 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:45:14.211159 25763 net.cpp:139] Memory required for data: 2490800
I0428 19:45:14.211163 25763 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:14.211174 25763 net.cpp:86] Creating Layer ip1
I0428 19:45:14.211177 25763 net.cpp:408] ip1 <- pool1
I0428 19:45:14.211181 25763 net.cpp:382] ip1 -> ip1
I0428 19:45:14.211513 25763 net.cpp:124] Setting up ip1
I0428 19:45:14.211537 25763 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:45:14.211554 25763 net.cpp:139] Memory required for data: 2510800
I0428 19:45:14.211561 25763 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:14.211566 25763 net.cpp:86] Creating Layer relu1
I0428 19:45:14.211570 25763 net.cpp:408] relu1 <- ip1
I0428 19:45:14.211575 25763 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:14.211760 25763 net.cpp:124] Setting up relu1
I0428 19:45:14.211768 25763 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:45:14.211772 25763 net.cpp:139] Memory required for data: 2530800
I0428 19:45:14.211776 25763 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:14.211782 25763 net.cpp:86] Creating Layer ip2
I0428 19:45:14.211786 25763 net.cpp:408] ip2 <- ip1
I0428 19:45:14.211791 25763 net.cpp:382] ip2 -> ip2
I0428 19:45:14.211915 25763 net.cpp:124] Setting up ip2
I0428 19:45:14.211921 25763 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:45:14.211925 25763 net.cpp:139] Memory required for data: 2550800
I0428 19:45:14.211930 25763 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:14.211935 25763 net.cpp:86] Creating Layer relu2
I0428 19:45:14.211946 25763 net.cpp:408] relu2 <- ip2
I0428 19:45:14.211951 25763 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:14.212162 25763 net.cpp:124] Setting up relu2
I0428 19:45:14.212170 25763 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:45:14.212174 25763 net.cpp:139] Memory required for data: 2570800
I0428 19:45:14.212183 25763 layer_factory.hpp:77] Creating layer ip3
I0428 19:45:14.212188 25763 net.cpp:86] Creating Layer ip3
I0428 19:45:14.212193 25763 net.cpp:408] ip3 <- ip2
I0428 19:45:14.212198 25763 net.cpp:382] ip3 -> ip3
I0428 19:45:14.212378 25763 net.cpp:124] Setting up ip3
I0428 19:45:14.212385 25763 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:14.212388 25763 net.cpp:139] Memory required for data: 2574800
I0428 19:45:14.212409 25763 layer_factory.hpp:77] Creating layer relu3
I0428 19:45:14.212414 25763 net.cpp:86] Creating Layer relu3
I0428 19:45:14.212435 25763 net.cpp:408] relu3 <- ip3
I0428 19:45:14.212445 25763 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:45:14.213361 25763 net.cpp:124] Setting up relu3
I0428 19:45:14.213374 25763 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:14.213378 25763 net.cpp:139] Memory required for data: 2578800
I0428 19:45:14.213382 25763 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:45:14.213387 25763 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:45:14.213390 25763 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:45:14.213395 25763 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:45:14.213402 25763 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:45:14.213479 25763 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:45:14.213485 25763 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:14.213500 25763 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:14.213502 25763 net.cpp:139] Memory required for data: 2586800
I0428 19:45:14.213506 25763 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:14.213510 25763 net.cpp:86] Creating Layer accuracy
I0428 19:45:14.213513 25763 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:45:14.213517 25763 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:14.213522 25763 net.cpp:382] accuracy -> accuracy
I0428 19:45:14.213529 25763 net.cpp:124] Setting up accuracy
I0428 19:45:14.213532 25763 net.cpp:131] Top shape: (1)
I0428 19:45:14.213536 25763 net.cpp:139] Memory required for data: 2586804
I0428 19:45:14.213538 25763 layer_factory.hpp:77] Creating layer loss
I0428 19:45:14.213542 25763 net.cpp:86] Creating Layer loss
I0428 19:45:14.213546 25763 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:45:14.213548 25763 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:14.213553 25763 net.cpp:382] loss -> loss
I0428 19:45:14.213558 25763 layer_factory.hpp:77] Creating layer loss
I0428 19:45:14.213812 25763 net.cpp:124] Setting up loss
I0428 19:45:14.213820 25763 net.cpp:131] Top shape: (1)
I0428 19:45:14.213824 25763 net.cpp:134]     with loss weight 1
I0428 19:45:14.213829 25763 net.cpp:139] Memory required for data: 2586808
I0428 19:45:14.213855 25763 net.cpp:200] loss needs backward computation.
I0428 19:45:14.213860 25763 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:14.213863 25763 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:45:14.213867 25763 net.cpp:200] relu3 needs backward computation.
I0428 19:45:14.213878 25763 net.cpp:200] ip3 needs backward computation.
I0428 19:45:14.213881 25763 net.cpp:200] relu2 needs backward computation.
I0428 19:45:14.213884 25763 net.cpp:200] ip2 needs backward computation.
I0428 19:45:14.213893 25763 net.cpp:200] relu1 needs backward computation.
I0428 19:45:14.213896 25763 net.cpp:200] ip1 needs backward computation.
I0428 19:45:14.213899 25763 net.cpp:200] pool1 needs backward computation.
I0428 19:45:14.213902 25763 net.cpp:200] conv1 needs backward computation.
I0428 19:45:14.213912 25763 net.cpp:200] pool0 needs backward computation.
I0428 19:45:14.213914 25763 net.cpp:200] conv0 needs backward computation.
I0428 19:45:14.213918 25763 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:14.213922 25763 net.cpp:202] mnist does not need backward computation.
I0428 19:45:14.213930 25763 net.cpp:244] This network produces output accuracy
I0428 19:45:14.213934 25763 net.cpp:244] This network produces output loss
I0428 19:45:14.213944 25763 net.cpp:257] Network initialization done.
I0428 19:45:14.213994 25763 solver.cpp:56] Solver scaffolding done.
I0428 19:45:14.214334 25763 caffe.cpp:248] Starting Optimization
I0428 19:45:14.214339 25763 solver.cpp:273] Solving LeNet
I0428 19:45:14.214342 25763 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:14.215147 25763 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:14.218883 25763 blocking_queue.cpp:49] Waiting for data
I0428 19:45:14.291466 25770 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:14.292008 25763 solver.cpp:398]     Test net output #0: accuracy = 0.1251
I0428 19:45:14.292028 25763 solver.cpp:398]     Test net output #1: loss = 2.30069 (* 1 = 2.30069 loss)
I0428 19:45:14.294926 25763 solver.cpp:219] Iteration 0 (0 iter/s, 0.0805601s/100 iters), loss = 2.28809
I0428 19:45:14.294950 25763 solver.cpp:238]     Train net output #0: loss = 2.28809 (* 1 = 2.28809 loss)
I0428 19:45:14.294976 25763 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:14.406018 25763 solver.cpp:219] Iteration 100 (900.431 iter/s, 0.111058s/100 iters), loss = 0.483564
I0428 19:45:14.406042 25763 solver.cpp:238]     Train net output #0: loss = 0.483564 (* 1 = 0.483564 loss)
I0428 19:45:14.406064 25763 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:14.510949 25763 solver.cpp:219] Iteration 200 (953.33 iter/s, 0.104895s/100 iters), loss = 0.72433
I0428 19:45:14.510974 25763 solver.cpp:238]     Train net output #0: loss = 0.72433 (* 1 = 0.72433 loss)
I0428 19:45:14.510996 25763 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:14.621384 25763 solver.cpp:219] Iteration 300 (905.835 iter/s, 0.110395s/100 iters), loss = 0.187128
I0428 19:45:14.621420 25763 solver.cpp:238]     Train net output #0: loss = 0.187128 (* 1 = 0.187128 loss)
I0428 19:45:14.621431 25763 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:14.734132 25763 solver.cpp:219] Iteration 400 (887.301 iter/s, 0.112701s/100 iters), loss = 0.0992779
I0428 19:45:14.734163 25763 solver.cpp:238]     Train net output #0: loss = 0.0992778 (* 1 = 0.0992778 loss)
I0428 19:45:14.734171 25763 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:14.839296 25763 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:14.903806 25770 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:14.904302 25763 solver.cpp:398]     Test net output #0: accuracy = 0.9607
I0428 19:45:14.904325 25763 solver.cpp:398]     Test net output #1: loss = 0.122638 (* 1 = 0.122638 loss)
I0428 19:45:14.905378 25763 solver.cpp:219] Iteration 500 (584.103 iter/s, 0.171203s/100 iters), loss = 0.114783
I0428 19:45:14.905416 25763 solver.cpp:238]     Train net output #0: loss = 0.114783 (* 1 = 0.114783 loss)
I0428 19:45:14.905439 25763 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:15.015430 25763 solver.cpp:219] Iteration 600 (909.045 iter/s, 0.110005s/100 iters), loss = 0.108784
I0428 19:45:15.015455 25763 solver.cpp:238]     Train net output #0: loss = 0.108784 (* 1 = 0.108784 loss)
I0428 19:45:15.015480 25763 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:15.120487 25763 solver.cpp:219] Iteration 700 (952.224 iter/s, 0.105017s/100 iters), loss = 0.213918
I0428 19:45:15.120527 25763 solver.cpp:238]     Train net output #0: loss = 0.213918 (* 1 = 0.213918 loss)
I0428 19:45:15.120539 25763 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:15.240320 25763 solver.cpp:219] Iteration 800 (834.854 iter/s, 0.119781s/100 iters), loss = 0.233189
I0428 19:45:15.240357 25763 solver.cpp:238]     Train net output #0: loss = 0.233189 (* 1 = 0.233189 loss)
I0428 19:45:15.240368 25763 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:15.348062 25763 solver.cpp:219] Iteration 900 (928.574 iter/s, 0.107692s/100 iters), loss = 0.221883
I0428 19:45:15.348099 25763 solver.cpp:238]     Train net output #0: loss = 0.221883 (* 1 = 0.221883 loss)
I0428 19:45:15.348109 25763 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:15.383658 25769 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:15.453673 25763 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:15.455231 25763 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:15.456276 25763 solver.cpp:311] Iteration 1000, loss = 0.22658
I0428 19:45:15.456310 25763 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:15.511548 25770 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:15.512085 25763 solver.cpp:398]     Test net output #0: accuracy = 0.9713
I0428 19:45:15.512115 25763 solver.cpp:398]     Test net output #1: loss = 0.0929442 (* 1 = 0.0929442 loss)
I0428 19:45:15.512122 25763 solver.cpp:316] Optimization Done.
I0428 19:45:15.512127 25763 caffe.cpp:259] Optimization Done.
