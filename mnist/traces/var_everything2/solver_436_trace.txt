I0428 19:43:59.101886 25506 caffe.cpp:218] Using GPUs 0
I0428 19:43:59.139391 25506 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:59.657064 25506 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test436.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:59.657235 25506 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test436.prototxt
I0428 19:43:59.657618 25506 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:59.657642 25506 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:59.657742 25506 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:43:59.657850 25506 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:59.657984 25506 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:59.658023 25506 net.cpp:86] Creating Layer mnist
I0428 19:43:59.658035 25506 net.cpp:382] mnist -> data
I0428 19:43:59.658068 25506 net.cpp:382] mnist -> label
I0428 19:43:59.659293 25506 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:59.661762 25506 net.cpp:124] Setting up mnist
I0428 19:43:59.661784 25506 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:59.661795 25506 net.cpp:131] Top shape: 64 (64)
I0428 19:43:59.661801 25506 net.cpp:139] Memory required for data: 200960
I0428 19:43:59.661813 25506 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:59.661836 25506 net.cpp:86] Creating Layer conv0
I0428 19:43:59.661846 25506 net.cpp:408] conv0 <- data
I0428 19:43:59.661864 25506 net.cpp:382] conv0 -> conv0
I0428 19:43:59.947636 25506 net.cpp:124] Setting up conv0
I0428 19:43:59.947666 25506 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:59.947672 25506 net.cpp:139] Memory required for data: 495872
I0428 19:43:59.947718 25506 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:59.947738 25506 net.cpp:86] Creating Layer pool0
I0428 19:43:59.947747 25506 net.cpp:408] pool0 <- conv0
I0428 19:43:59.947757 25506 net.cpp:382] pool0 -> pool0
I0428 19:43:59.947816 25506 net.cpp:124] Setting up pool0
I0428 19:43:59.947826 25506 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:59.947831 25506 net.cpp:139] Memory required for data: 569600
I0428 19:43:59.947837 25506 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:59.947870 25506 net.cpp:86] Creating Layer conv1
I0428 19:43:59.947877 25506 net.cpp:408] conv1 <- pool0
I0428 19:43:59.947886 25506 net.cpp:382] conv1 -> conv1
I0428 19:43:59.950598 25506 net.cpp:124] Setting up conv1
I0428 19:43:59.950614 25506 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:43:59.950621 25506 net.cpp:139] Memory required for data: 1388800
I0428 19:43:59.950635 25506 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:59.950647 25506 net.cpp:86] Creating Layer pool1
I0428 19:43:59.950654 25506 net.cpp:408] pool1 <- conv1
I0428 19:43:59.950661 25506 net.cpp:382] pool1 -> pool1
I0428 19:43:59.950706 25506 net.cpp:124] Setting up pool1
I0428 19:43:59.950716 25506 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:43:59.950721 25506 net.cpp:139] Memory required for data: 1593600
I0428 19:43:59.950726 25506 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:59.950737 25506 net.cpp:86] Creating Layer ip1
I0428 19:43:59.950743 25506 net.cpp:408] ip1 <- pool1
I0428 19:43:59.950752 25506 net.cpp:382] ip1 -> ip1
I0428 19:43:59.950970 25506 net.cpp:124] Setting up ip1
I0428 19:43:59.950980 25506 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:59.950985 25506 net.cpp:139] Memory required for data: 1600000
I0428 19:43:59.950999 25506 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:59.951010 25506 net.cpp:86] Creating Layer relu1
I0428 19:43:59.951020 25506 net.cpp:408] relu1 <- ip1
I0428 19:43:59.951027 25506 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:59.951201 25506 net.cpp:124] Setting up relu1
I0428 19:43:59.951212 25506 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:59.951217 25506 net.cpp:139] Memory required for data: 1606400
I0428 19:43:59.951222 25506 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:59.951232 25506 net.cpp:86] Creating Layer ip2
I0428 19:43:59.951238 25506 net.cpp:408] ip2 <- ip1
I0428 19:43:59.951246 25506 net.cpp:382] ip2 -> ip2
I0428 19:43:59.951352 25506 net.cpp:124] Setting up ip2
I0428 19:43:59.951361 25506 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:59.951366 25506 net.cpp:139] Memory required for data: 1608960
I0428 19:43:59.951376 25506 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:59.951386 25506 net.cpp:86] Creating Layer relu2
I0428 19:43:59.951392 25506 net.cpp:408] relu2 <- ip2
I0428 19:43:59.951400 25506 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:59.952136 25506 net.cpp:124] Setting up relu2
I0428 19:43:59.952152 25506 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:59.952157 25506 net.cpp:139] Memory required for data: 1611520
I0428 19:43:59.952162 25506 layer_factory.hpp:77] Creating layer loss
I0428 19:43:59.952172 25506 net.cpp:86] Creating Layer loss
I0428 19:43:59.952178 25506 net.cpp:408] loss <- ip2
I0428 19:43:59.952185 25506 net.cpp:408] loss <- label
I0428 19:43:59.952194 25506 net.cpp:382] loss -> loss
I0428 19:43:59.952220 25506 layer_factory.hpp:77] Creating layer loss
I0428 19:43:59.952471 25506 net.cpp:124] Setting up loss
I0428 19:43:59.952483 25506 net.cpp:131] Top shape: (1)
I0428 19:43:59.952489 25506 net.cpp:134]     with loss weight 1
I0428 19:43:59.952509 25506 net.cpp:139] Memory required for data: 1611524
I0428 19:43:59.952515 25506 net.cpp:200] loss needs backward computation.
I0428 19:43:59.952522 25506 net.cpp:200] relu2 needs backward computation.
I0428 19:43:59.952527 25506 net.cpp:200] ip2 needs backward computation.
I0428 19:43:59.952533 25506 net.cpp:200] relu1 needs backward computation.
I0428 19:43:59.952538 25506 net.cpp:200] ip1 needs backward computation.
I0428 19:43:59.952555 25506 net.cpp:200] pool1 needs backward computation.
I0428 19:43:59.952561 25506 net.cpp:200] conv1 needs backward computation.
I0428 19:43:59.952567 25506 net.cpp:200] pool0 needs backward computation.
I0428 19:43:59.952572 25506 net.cpp:200] conv0 needs backward computation.
I0428 19:43:59.952579 25506 net.cpp:202] mnist does not need backward computation.
I0428 19:43:59.952584 25506 net.cpp:244] This network produces output loss
I0428 19:43:59.952597 25506 net.cpp:257] Network initialization done.
I0428 19:43:59.952921 25506 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test436.prototxt
I0428 19:43:59.952956 25506 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:59.953052 25506 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:43:59.953166 25506 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:59.953225 25506 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:59.953243 25506 net.cpp:86] Creating Layer mnist
I0428 19:43:59.953251 25506 net.cpp:382] mnist -> data
I0428 19:43:59.953263 25506 net.cpp:382] mnist -> label
I0428 19:43:59.953385 25506 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:59.955411 25506 net.cpp:124] Setting up mnist
I0428 19:43:59.955426 25506 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:59.955435 25506 net.cpp:131] Top shape: 100 (100)
I0428 19:43:59.955440 25506 net.cpp:139] Memory required for data: 314000
I0428 19:43:59.955446 25506 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:59.955457 25506 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:59.955463 25506 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:59.955471 25506 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:59.955482 25506 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:59.955579 25506 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:59.955598 25506 net.cpp:131] Top shape: 100 (100)
I0428 19:43:59.955605 25506 net.cpp:131] Top shape: 100 (100)
I0428 19:43:59.955610 25506 net.cpp:139] Memory required for data: 314800
I0428 19:43:59.955616 25506 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:59.955631 25506 net.cpp:86] Creating Layer conv0
I0428 19:43:59.955637 25506 net.cpp:408] conv0 <- data
I0428 19:43:59.955647 25506 net.cpp:382] conv0 -> conv0
I0428 19:43:59.957249 25506 net.cpp:124] Setting up conv0
I0428 19:43:59.957265 25506 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:59.957271 25506 net.cpp:139] Memory required for data: 775600
I0428 19:43:59.957286 25506 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:59.957296 25506 net.cpp:86] Creating Layer pool0
I0428 19:43:59.957304 25506 net.cpp:408] pool0 <- conv0
I0428 19:43:59.957314 25506 net.cpp:382] pool0 -> pool0
I0428 19:43:59.957355 25506 net.cpp:124] Setting up pool0
I0428 19:43:59.957365 25506 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:59.957370 25506 net.cpp:139] Memory required for data: 890800
I0428 19:43:59.957375 25506 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:59.957388 25506 net.cpp:86] Creating Layer conv1
I0428 19:43:59.957396 25506 net.cpp:408] conv1 <- pool0
I0428 19:43:59.957404 25506 net.cpp:382] conv1 -> conv1
I0428 19:43:59.958947 25506 net.cpp:124] Setting up conv1
I0428 19:43:59.958962 25506 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:43:59.958968 25506 net.cpp:139] Memory required for data: 2170800
I0428 19:43:59.958982 25506 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:59.958992 25506 net.cpp:86] Creating Layer pool1
I0428 19:43:59.958999 25506 net.cpp:408] pool1 <- conv1
I0428 19:43:59.959008 25506 net.cpp:382] pool1 -> pool1
I0428 19:43:59.959084 25506 net.cpp:124] Setting up pool1
I0428 19:43:59.959092 25506 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:43:59.959098 25506 net.cpp:139] Memory required for data: 2490800
I0428 19:43:59.959103 25506 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:59.959113 25506 net.cpp:86] Creating Layer ip1
I0428 19:43:59.959120 25506 net.cpp:408] ip1 <- pool1
I0428 19:43:59.959127 25506 net.cpp:382] ip1 -> ip1
I0428 19:43:59.959352 25506 net.cpp:124] Setting up ip1
I0428 19:43:59.959362 25506 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:59.959367 25506 net.cpp:139] Memory required for data: 2500800
I0428 19:43:59.959378 25506 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:59.959388 25506 net.cpp:86] Creating Layer relu1
I0428 19:43:59.959395 25506 net.cpp:408] relu1 <- ip1
I0428 19:43:59.959403 25506 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:59.959570 25506 net.cpp:124] Setting up relu1
I0428 19:43:59.959581 25506 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:59.959586 25506 net.cpp:139] Memory required for data: 2510800
I0428 19:43:59.959591 25506 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:59.959604 25506 net.cpp:86] Creating Layer ip2
I0428 19:43:59.959609 25506 net.cpp:408] ip2 <- ip1
I0428 19:43:59.959617 25506 net.cpp:382] ip2 -> ip2
I0428 19:43:59.959770 25506 net.cpp:124] Setting up ip2
I0428 19:43:59.959779 25506 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:59.959784 25506 net.cpp:139] Memory required for data: 2514800
I0428 19:43:59.959794 25506 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:59.959801 25506 net.cpp:86] Creating Layer relu2
I0428 19:43:59.959806 25506 net.cpp:408] relu2 <- ip2
I0428 19:43:59.959813 25506 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:59.960019 25506 net.cpp:124] Setting up relu2
I0428 19:43:59.960031 25506 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:59.960036 25506 net.cpp:139] Memory required for data: 2518800
I0428 19:43:59.960041 25506 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:43:59.960048 25506 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:43:59.960054 25506 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:43:59.960077 25506 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:43:59.960101 25506 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:43:59.960162 25506 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:43:59.960171 25506 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:59.960178 25506 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:59.960183 25506 net.cpp:139] Memory required for data: 2526800
I0428 19:43:59.960189 25506 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:59.960197 25506 net.cpp:86] Creating Layer accuracy
I0428 19:43:59.960212 25506 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:43:59.960219 25506 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:59.960227 25506 net.cpp:382] accuracy -> accuracy
I0428 19:43:59.960239 25506 net.cpp:124] Setting up accuracy
I0428 19:43:59.960248 25506 net.cpp:131] Top shape: (1)
I0428 19:43:59.960253 25506 net.cpp:139] Memory required for data: 2526804
I0428 19:43:59.960259 25506 layer_factory.hpp:77] Creating layer loss
I0428 19:43:59.960266 25506 net.cpp:86] Creating Layer loss
I0428 19:43:59.960273 25506 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:43:59.960279 25506 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:59.960301 25506 net.cpp:382] loss -> loss
I0428 19:43:59.960311 25506 layer_factory.hpp:77] Creating layer loss
I0428 19:43:59.960549 25506 net.cpp:124] Setting up loss
I0428 19:43:59.960561 25506 net.cpp:131] Top shape: (1)
I0428 19:43:59.960566 25506 net.cpp:134]     with loss weight 1
I0428 19:43:59.960574 25506 net.cpp:139] Memory required for data: 2526808
I0428 19:43:59.960580 25506 net.cpp:200] loss needs backward computation.
I0428 19:43:59.960587 25506 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:59.960594 25506 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:43:59.960599 25506 net.cpp:200] relu2 needs backward computation.
I0428 19:43:59.960604 25506 net.cpp:200] ip2 needs backward computation.
I0428 19:43:59.960609 25506 net.cpp:200] relu1 needs backward computation.
I0428 19:43:59.960614 25506 net.cpp:200] ip1 needs backward computation.
I0428 19:43:59.960619 25506 net.cpp:200] pool1 needs backward computation.
I0428 19:43:59.960624 25506 net.cpp:200] conv1 needs backward computation.
I0428 19:43:59.960638 25506 net.cpp:200] pool0 needs backward computation.
I0428 19:43:59.960644 25506 net.cpp:200] conv0 needs backward computation.
I0428 19:43:59.960649 25506 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:59.960655 25506 net.cpp:202] mnist does not need backward computation.
I0428 19:43:59.960659 25506 net.cpp:244] This network produces output accuracy
I0428 19:43:59.960666 25506 net.cpp:244] This network produces output loss
I0428 19:43:59.960681 25506 net.cpp:257] Network initialization done.
I0428 19:43:59.960727 25506 solver.cpp:56] Solver scaffolding done.
I0428 19:43:59.961052 25506 caffe.cpp:248] Starting Optimization
I0428 19:43:59.961061 25506 solver.cpp:273] Solving LeNet
I0428 19:43:59.961064 25506 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:59.961295 25506 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:59.965250 25506 blocking_queue.cpp:49] Waiting for data
I0428 19:44:00.035717 25513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:00.036176 25506 solver.cpp:398]     Test net output #0: accuracy = 0.1354
I0428 19:44:00.036196 25506 solver.cpp:398]     Test net output #1: loss = 2.30133 (* 1 = 2.30133 loss)
I0428 19:44:00.038174 25506 solver.cpp:219] Iteration 0 (-1.05378e-42 iter/s, 0.0770785s/100 iters), loss = 2.29692
I0428 19:44:00.038231 25506 solver.cpp:238]     Train net output #0: loss = 2.29692 (* 1 = 2.29692 loss)
I0428 19:44:00.038247 25506 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:00.148206 25506 solver.cpp:219] Iteration 100 (909.343 iter/s, 0.109969s/100 iters), loss = 0.837156
I0428 19:44:00.148234 25506 solver.cpp:238]     Train net output #0: loss = 0.837156 (* 1 = 0.837156 loss)
I0428 19:44:00.148243 25506 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:00.253561 25506 solver.cpp:219] Iteration 200 (949.511 iter/s, 0.105317s/100 iters), loss = 0.776888
I0428 19:44:00.253628 25506 solver.cpp:238]     Train net output #0: loss = 0.776888 (* 1 = 0.776888 loss)
I0428 19:44:00.253638 25506 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:00.352577 25506 solver.cpp:219] Iteration 300 (1010.72 iter/s, 0.0989389s/100 iters), loss = 0.738817
I0428 19:44:00.352614 25506 solver.cpp:238]     Train net output #0: loss = 0.738817 (* 1 = 0.738817 loss)
I0428 19:44:00.352624 25506 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:00.445525 25506 solver.cpp:219] Iteration 400 (1076.36 iter/s, 0.0929054s/100 iters), loss = 0.671857
I0428 19:44:00.445552 25506 solver.cpp:238]     Train net output #0: loss = 0.671857 (* 1 = 0.671857 loss)
I0428 19:44:00.445577 25506 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:00.541785 25506 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:00.617044 25513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:00.617496 25506 solver.cpp:398]     Test net output #0: accuracy = 0.8394
I0428 19:44:00.617521 25506 solver.cpp:398]     Test net output #1: loss = 0.614672 (* 1 = 0.614672 loss)
I0428 19:44:00.618507 25506 solver.cpp:219] Iteration 500 (578.227 iter/s, 0.172942s/100 iters), loss = 0.543946
I0428 19:44:00.618546 25506 solver.cpp:238]     Train net output #0: loss = 0.543946 (* 1 = 0.543946 loss)
I0428 19:44:00.618556 25506 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:00.722618 25506 solver.cpp:219] Iteration 600 (960.948 iter/s, 0.104064s/100 iters), loss = 0.442057
I0428 19:44:00.722650 25506 solver.cpp:238]     Train net output #0: loss = 0.442057 (* 1 = 0.442057 loss)
I0428 19:44:00.722659 25506 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:00.814949 25506 solver.cpp:219] Iteration 700 (1083.53 iter/s, 0.092291s/100 iters), loss = 0.861977
I0428 19:44:00.814998 25506 solver.cpp:238]     Train net output #0: loss = 0.861977 (* 1 = 0.861977 loss)
I0428 19:44:00.815011 25506 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:00.909103 25506 solver.cpp:219] Iteration 800 (1062.49 iter/s, 0.0941189s/100 iters), loss = 0.602327
I0428 19:44:00.909129 25506 solver.cpp:238]     Train net output #0: loss = 0.602327 (* 1 = 0.602327 loss)
I0428 19:44:00.909154 25506 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:01.005637 25506 solver.cpp:219] Iteration 900 (1036.3 iter/s, 0.0964976s/100 iters), loss = 0.607243
I0428 19:44:01.005663 25506 solver.cpp:238]     Train net output #0: loss = 0.607243 (* 1 = 0.607243 loss)
I0428 19:44:01.005688 25506 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:01.040240 25512 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:01.106679 25506 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:01.107924 25506 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:01.108579 25506 solver.cpp:311] Iteration 1000, loss = 0.782892
I0428 19:44:01.108597 25506 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:01.183320 25513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:01.183868 25506 solver.cpp:398]     Test net output #0: accuracy = 0.8665
I0428 19:44:01.183899 25506 solver.cpp:398]     Test net output #1: loss = 0.566889 (* 1 = 0.566889 loss)
I0428 19:44:01.183914 25506 solver.cpp:316] Optimization Done.
I0428 19:44:01.183921 25506 caffe.cpp:259] Optimization Done.
