I0428 20:20:12.668995  1506 caffe.cpp:218] Using GPUs 0
I0428 20:20:12.698722  1506 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:13.146112  1506 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1358.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:13.146245  1506 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1358.prototxt
I0428 20:20:13.146592  1506 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:13.146607  1506 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:13.146689  1506 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:13.146754  1506 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:13.146848  1506 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:13.146867  1506 net.cpp:86] Creating Layer mnist
I0428 20:20:13.146873  1506 net.cpp:382] mnist -> data
I0428 20:20:13.146891  1506 net.cpp:382] mnist -> label
I0428 20:20:13.147785  1506 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:13.150112  1506 net.cpp:124] Setting up mnist
I0428 20:20:13.150143  1506 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:13.150149  1506 net.cpp:131] Top shape: 64 (64)
I0428 20:20:13.150151  1506 net.cpp:139] Memory required for data: 200960
I0428 20:20:13.150157  1506 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:13.150172  1506 net.cpp:86] Creating Layer conv0
I0428 20:20:13.150190  1506 net.cpp:408] conv0 <- data
I0428 20:20:13.150202  1506 net.cpp:382] conv0 -> conv0
I0428 20:20:13.377003  1506 net.cpp:124] Setting up conv0
I0428 20:20:13.377045  1506 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:13.377049  1506 net.cpp:139] Memory required for data: 7573760
I0428 20:20:13.377064  1506 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:13.377076  1506 net.cpp:86] Creating Layer pool0
I0428 20:20:13.377080  1506 net.cpp:408] pool0 <- conv0
I0428 20:20:13.377085  1506 net.cpp:382] pool0 -> pool0
I0428 20:20:13.377159  1506 net.cpp:124] Setting up pool0
I0428 20:20:13.377164  1506 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:13.377167  1506 net.cpp:139] Memory required for data: 9416960
I0428 20:20:13.377171  1506 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:13.377180  1506 net.cpp:86] Creating Layer conv1
I0428 20:20:13.377183  1506 net.cpp:408] conv1 <- pool0
I0428 20:20:13.377203  1506 net.cpp:382] conv1 -> conv1
I0428 20:20:13.379339  1506 net.cpp:124] Setting up conv1
I0428 20:20:13.379369  1506 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:13.379371  1506 net.cpp:139] Memory required for data: 9826560
I0428 20:20:13.379395  1506 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:13.379405  1506 net.cpp:86] Creating Layer pool1
I0428 20:20:13.379407  1506 net.cpp:408] pool1 <- conv1
I0428 20:20:13.379413  1506 net.cpp:382] pool1 -> pool1
I0428 20:20:13.379479  1506 net.cpp:124] Setting up pool1
I0428 20:20:13.379485  1506 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:13.379487  1506 net.cpp:139] Memory required for data: 9928960
I0428 20:20:13.379492  1506 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:13.379499  1506 net.cpp:86] Creating Layer ip1
I0428 20:20:13.379503  1506 net.cpp:408] ip1 <- pool1
I0428 20:20:13.379506  1506 net.cpp:382] ip1 -> ip1
I0428 20:20:13.379750  1506 net.cpp:124] Setting up ip1
I0428 20:20:13.379757  1506 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:13.379760  1506 net.cpp:139] Memory required for data: 9941760
I0428 20:20:13.379767  1506 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:13.379775  1506 net.cpp:86] Creating Layer relu1
I0428 20:20:13.379777  1506 net.cpp:408] relu1 <- ip1
I0428 20:20:13.379781  1506 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:13.379961  1506 net.cpp:124] Setting up relu1
I0428 20:20:13.379984  1506 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:13.379987  1506 net.cpp:139] Memory required for data: 9954560
I0428 20:20:13.379992  1506 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:13.379997  1506 net.cpp:86] Creating Layer ip2
I0428 20:20:13.380000  1506 net.cpp:408] ip2 <- ip1
I0428 20:20:13.380005  1506 net.cpp:382] ip2 -> ip2
I0428 20:20:13.380106  1506 net.cpp:124] Setting up ip2
I0428 20:20:13.380112  1506 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:13.380115  1506 net.cpp:139] Memory required for data: 9957120
I0428 20:20:13.380121  1506 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:13.380127  1506 net.cpp:86] Creating Layer relu2
I0428 20:20:13.380131  1506 net.cpp:408] relu2 <- ip2
I0428 20:20:13.380134  1506 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:13.380919  1506 net.cpp:124] Setting up relu2
I0428 20:20:13.380949  1506 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:13.380951  1506 net.cpp:139] Memory required for data: 9959680
I0428 20:20:13.380954  1506 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:13.380961  1506 net.cpp:86] Creating Layer ip3
I0428 20:20:13.380964  1506 net.cpp:408] ip3 <- ip2
I0428 20:20:13.380970  1506 net.cpp:382] ip3 -> ip3
I0428 20:20:13.381073  1506 net.cpp:124] Setting up ip3
I0428 20:20:13.381080  1506 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:13.381083  1506 net.cpp:139] Memory required for data: 9962240
I0428 20:20:13.381091  1506 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:13.381096  1506 net.cpp:86] Creating Layer relu3
I0428 20:20:13.381099  1506 net.cpp:408] relu3 <- ip3
I0428 20:20:13.381104  1506 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:13.381319  1506 net.cpp:124] Setting up relu3
I0428 20:20:13.381327  1506 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:13.381330  1506 net.cpp:139] Memory required for data: 9964800
I0428 20:20:13.381333  1506 layer_factory.hpp:77] Creating layer loss
I0428 20:20:13.381343  1506 net.cpp:86] Creating Layer loss
I0428 20:20:13.381347  1506 net.cpp:408] loss <- ip3
I0428 20:20:13.381351  1506 net.cpp:408] loss <- label
I0428 20:20:13.381356  1506 net.cpp:382] loss -> loss
I0428 20:20:13.381368  1506 layer_factory.hpp:77] Creating layer loss
I0428 20:20:13.381610  1506 net.cpp:124] Setting up loss
I0428 20:20:13.381619  1506 net.cpp:131] Top shape: (1)
I0428 20:20:13.381623  1506 net.cpp:134]     with loss weight 1
I0428 20:20:13.381636  1506 net.cpp:139] Memory required for data: 9964804
I0428 20:20:13.381640  1506 net.cpp:200] loss needs backward computation.
I0428 20:20:13.381644  1506 net.cpp:200] relu3 needs backward computation.
I0428 20:20:13.381646  1506 net.cpp:200] ip3 needs backward computation.
I0428 20:20:13.381649  1506 net.cpp:200] relu2 needs backward computation.
I0428 20:20:13.381652  1506 net.cpp:200] ip2 needs backward computation.
I0428 20:20:13.381655  1506 net.cpp:200] relu1 needs backward computation.
I0428 20:20:13.381659  1506 net.cpp:200] ip1 needs backward computation.
I0428 20:20:13.381661  1506 net.cpp:200] pool1 needs backward computation.
I0428 20:20:13.381664  1506 net.cpp:200] conv1 needs backward computation.
I0428 20:20:13.381681  1506 net.cpp:200] pool0 needs backward computation.
I0428 20:20:13.381685  1506 net.cpp:200] conv0 needs backward computation.
I0428 20:20:13.381687  1506 net.cpp:202] mnist does not need backward computation.
I0428 20:20:13.381690  1506 net.cpp:244] This network produces output loss
I0428 20:20:13.381700  1506 net.cpp:257] Network initialization done.
I0428 20:20:13.382095  1506 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1358.prototxt
I0428 20:20:13.382151  1506 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:13.382256  1506 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:13.382335  1506 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:13.382376  1506 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:13.382390  1506 net.cpp:86] Creating Layer mnist
I0428 20:20:13.382393  1506 net.cpp:382] mnist -> data
I0428 20:20:13.382400  1506 net.cpp:382] mnist -> label
I0428 20:20:13.382483  1506 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:13.384519  1506 net.cpp:124] Setting up mnist
I0428 20:20:13.384532  1506 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:13.384552  1506 net.cpp:131] Top shape: 100 (100)
I0428 20:20:13.384555  1506 net.cpp:139] Memory required for data: 314000
I0428 20:20:13.384558  1506 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:13.384579  1506 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:13.384583  1506 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:13.384588  1506 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:13.384595  1506 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:13.384639  1506 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:13.384644  1506 net.cpp:131] Top shape: 100 (100)
I0428 20:20:13.384649  1506 net.cpp:131] Top shape: 100 (100)
I0428 20:20:13.384650  1506 net.cpp:139] Memory required for data: 314800
I0428 20:20:13.384654  1506 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:13.384662  1506 net.cpp:86] Creating Layer conv0
I0428 20:20:13.384665  1506 net.cpp:408] conv0 <- data
I0428 20:20:13.384671  1506 net.cpp:382] conv0 -> conv0
I0428 20:20:13.386562  1506 net.cpp:124] Setting up conv0
I0428 20:20:13.386590  1506 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:13.386595  1506 net.cpp:139] Memory required for data: 11834800
I0428 20:20:13.386605  1506 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:13.386611  1506 net.cpp:86] Creating Layer pool0
I0428 20:20:13.386615  1506 net.cpp:408] pool0 <- conv0
I0428 20:20:13.386620  1506 net.cpp:382] pool0 -> pool0
I0428 20:20:13.386654  1506 net.cpp:124] Setting up pool0
I0428 20:20:13.386659  1506 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:13.386662  1506 net.cpp:139] Memory required for data: 14714800
I0428 20:20:13.386664  1506 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:13.386673  1506 net.cpp:86] Creating Layer conv1
I0428 20:20:13.386677  1506 net.cpp:408] conv1 <- pool0
I0428 20:20:13.386682  1506 net.cpp:382] conv1 -> conv1
I0428 20:20:13.388556  1506 net.cpp:124] Setting up conv1
I0428 20:20:13.388584  1506 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:13.388588  1506 net.cpp:139] Memory required for data: 15354800
I0428 20:20:13.388599  1506 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:13.388622  1506 net.cpp:86] Creating Layer pool1
I0428 20:20:13.388625  1506 net.cpp:408] pool1 <- conv1
I0428 20:20:13.388631  1506 net.cpp:382] pool1 -> pool1
I0428 20:20:13.388669  1506 net.cpp:124] Setting up pool1
I0428 20:20:13.388675  1506 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:13.388692  1506 net.cpp:139] Memory required for data: 15514800
I0428 20:20:13.388695  1506 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:13.388703  1506 net.cpp:86] Creating Layer ip1
I0428 20:20:13.388706  1506 net.cpp:408] ip1 <- pool1
I0428 20:20:13.388711  1506 net.cpp:382] ip1 -> ip1
I0428 20:20:13.388952  1506 net.cpp:124] Setting up ip1
I0428 20:20:13.388962  1506 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:13.388975  1506 net.cpp:139] Memory required for data: 15534800
I0428 20:20:13.388983  1506 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:13.388990  1506 net.cpp:86] Creating Layer relu1
I0428 20:20:13.388993  1506 net.cpp:408] relu1 <- ip1
I0428 20:20:13.388998  1506 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:13.389243  1506 net.cpp:124] Setting up relu1
I0428 20:20:13.389268  1506 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:13.389272  1506 net.cpp:139] Memory required for data: 15554800
I0428 20:20:13.389276  1506 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:13.389283  1506 net.cpp:86] Creating Layer ip2
I0428 20:20:13.389287  1506 net.cpp:408] ip2 <- ip1
I0428 20:20:13.389293  1506 net.cpp:382] ip2 -> ip2
I0428 20:20:13.389447  1506 net.cpp:124] Setting up ip2
I0428 20:20:13.389456  1506 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:13.389459  1506 net.cpp:139] Memory required for data: 15558800
I0428 20:20:13.389467  1506 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:13.389472  1506 net.cpp:86] Creating Layer relu2
I0428 20:20:13.389474  1506 net.cpp:408] relu2 <- ip2
I0428 20:20:13.389479  1506 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:13.389657  1506 net.cpp:124] Setting up relu2
I0428 20:20:13.389665  1506 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:13.389668  1506 net.cpp:139] Memory required for data: 15562800
I0428 20:20:13.389672  1506 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:13.389678  1506 net.cpp:86] Creating Layer ip3
I0428 20:20:13.389688  1506 net.cpp:408] ip3 <- ip2
I0428 20:20:13.389693  1506 net.cpp:382] ip3 -> ip3
I0428 20:20:13.389824  1506 net.cpp:124] Setting up ip3
I0428 20:20:13.389832  1506 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:13.389834  1506 net.cpp:139] Memory required for data: 15566800
I0428 20:20:13.389842  1506 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:13.389848  1506 net.cpp:86] Creating Layer relu3
I0428 20:20:13.389853  1506 net.cpp:408] relu3 <- ip3
I0428 20:20:13.389856  1506 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:13.390708  1506 net.cpp:124] Setting up relu3
I0428 20:20:13.390718  1506 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:13.390738  1506 net.cpp:139] Memory required for data: 15570800
I0428 20:20:13.390741  1506 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:13.390746  1506 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:13.390749  1506 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:13.390756  1506 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:13.390763  1506 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:13.390843  1506 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:13.390851  1506 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:13.390854  1506 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:13.390857  1506 net.cpp:139] Memory required for data: 15578800
I0428 20:20:13.390861  1506 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:13.390866  1506 net.cpp:86] Creating Layer accuracy
I0428 20:20:13.390868  1506 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:13.390872  1506 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:13.390878  1506 net.cpp:382] accuracy -> accuracy
I0428 20:20:13.390885  1506 net.cpp:124] Setting up accuracy
I0428 20:20:13.390889  1506 net.cpp:131] Top shape: (1)
I0428 20:20:13.390892  1506 net.cpp:139] Memory required for data: 15578804
I0428 20:20:13.390895  1506 layer_factory.hpp:77] Creating layer loss
I0428 20:20:13.390899  1506 net.cpp:86] Creating Layer loss
I0428 20:20:13.390903  1506 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:13.390907  1506 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:13.390911  1506 net.cpp:382] loss -> loss
I0428 20:20:13.390916  1506 layer_factory.hpp:77] Creating layer loss
I0428 20:20:13.391188  1506 net.cpp:124] Setting up loss
I0428 20:20:13.391198  1506 net.cpp:131] Top shape: (1)
I0428 20:20:13.391202  1506 net.cpp:134]     with loss weight 1
I0428 20:20:13.391218  1506 net.cpp:139] Memory required for data: 15578808
I0428 20:20:13.391222  1506 net.cpp:200] loss needs backward computation.
I0428 20:20:13.391227  1506 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:13.391230  1506 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:13.391233  1506 net.cpp:200] relu3 needs backward computation.
I0428 20:20:13.391237  1506 net.cpp:200] ip3 needs backward computation.
I0428 20:20:13.391240  1506 net.cpp:200] relu2 needs backward computation.
I0428 20:20:13.391243  1506 net.cpp:200] ip2 needs backward computation.
I0428 20:20:13.391247  1506 net.cpp:200] relu1 needs backward computation.
I0428 20:20:13.391249  1506 net.cpp:200] ip1 needs backward computation.
I0428 20:20:13.391252  1506 net.cpp:200] pool1 needs backward computation.
I0428 20:20:13.391270  1506 net.cpp:200] conv1 needs backward computation.
I0428 20:20:13.391273  1506 net.cpp:200] pool0 needs backward computation.
I0428 20:20:13.391276  1506 net.cpp:200] conv0 needs backward computation.
I0428 20:20:13.391280  1506 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:13.391284  1506 net.cpp:202] mnist does not need backward computation.
I0428 20:20:13.391294  1506 net.cpp:244] This network produces output accuracy
I0428 20:20:13.391297  1506 net.cpp:244] This network produces output loss
I0428 20:20:13.391324  1506 net.cpp:257] Network initialization done.
I0428 20:20:13.391363  1506 solver.cpp:56] Solver scaffolding done.
I0428 20:20:13.391748  1506 caffe.cpp:248] Starting Optimization
I0428 20:20:13.391754  1506 solver.cpp:273] Solving LeNet
I0428 20:20:13.391757  1506 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:13.392802  1506 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:13.399308  1506 blocking_queue.cpp:49] Waiting for data
I0428 20:20:13.469259  1513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:13.470010  1506 solver.cpp:398]     Test net output #0: accuracy = 0.1039
I0428 20:20:13.470046  1506 solver.cpp:398]     Test net output #1: loss = 2.30564 (* 1 = 2.30564 loss)
I0428 20:20:13.474596  1506 solver.cpp:219] Iteration 0 (-9.99126e-43 iter/s, 0.0827796s/100 iters), loss = 2.28379
I0428 20:20:13.474643  1506 solver.cpp:238]     Train net output #0: loss = 2.28379 (* 1 = 2.28379 loss)
I0428 20:20:13.474655  1506 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:13.616430  1506 solver.cpp:219] Iteration 100 (705.369 iter/s, 0.14177s/100 iters), loss = 0.451221
I0428 20:20:13.616466  1506 solver.cpp:238]     Train net output #0: loss = 0.451221 (* 1 = 0.451221 loss)
I0428 20:20:13.616475  1506 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:13.756182  1506 solver.cpp:219] Iteration 200 (715.812 iter/s, 0.139701s/100 iters), loss = 0.228988
I0428 20:20:13.756211  1506 solver.cpp:238]     Train net output #0: loss = 0.228988 (* 1 = 0.228988 loss)
I0428 20:20:13.756217  1506 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:13.892782  1506 solver.cpp:219] Iteration 300 (732.275 iter/s, 0.136561s/100 iters), loss = 0.197966
I0428 20:20:13.892807  1506 solver.cpp:238]     Train net output #0: loss = 0.197966 (* 1 = 0.197966 loss)
I0428 20:20:13.892837  1506 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:14.027549  1506 solver.cpp:219] Iteration 400 (742.227 iter/s, 0.13473s/100 iters), loss = 0.0882782
I0428 20:20:14.027573  1506 solver.cpp:238]     Train net output #0: loss = 0.0882782 (* 1 = 0.0882782 loss)
I0428 20:20:14.027580  1506 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:14.173817  1506 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:14.251368  1513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:14.252243  1506 solver.cpp:398]     Test net output #0: accuracy = 0.9648
I0428 20:20:14.252269  1506 solver.cpp:398]     Test net output #1: loss = 0.112291 (* 1 = 0.112291 loss)
I0428 20:20:14.253666  1506 solver.cpp:219] Iteration 500 (442.328 iter/s, 0.226077s/100 iters), loss = 0.0692198
I0428 20:20:14.253724  1506 solver.cpp:238]     Train net output #0: loss = 0.0692199 (* 1 = 0.0692199 loss)
I0428 20:20:14.253732  1506 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:14.393375  1506 solver.cpp:219] Iteration 600 (716.044 iter/s, 0.139656s/100 iters), loss = 0.104551
I0428 20:20:14.393401  1506 solver.cpp:238]     Train net output #0: loss = 0.104551 (* 1 = 0.104551 loss)
I0428 20:20:14.393407  1506 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:14.535084  1506 solver.cpp:219] Iteration 700 (705.9 iter/s, 0.141663s/100 iters), loss = 0.192494
I0428 20:20:14.535159  1506 solver.cpp:238]     Train net output #0: loss = 0.192494 (* 1 = 0.192494 loss)
I0428 20:20:14.535187  1506 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:14.693496  1506 solver.cpp:219] Iteration 800 (631.585 iter/s, 0.158332s/100 iters), loss = 0.422732
I0428 20:20:14.693531  1506 solver.cpp:238]     Train net output #0: loss = 0.422732 (* 1 = 0.422732 loss)
I0428 20:20:14.693552  1506 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:14.836679  1506 solver.cpp:219] Iteration 900 (698.628 iter/s, 0.143138s/100 iters), loss = 0.154602
I0428 20:20:14.836705  1506 solver.cpp:238]     Train net output #0: loss = 0.154602 (* 1 = 0.154602 loss)
I0428 20:20:14.836727  1506 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:14.883970  1512 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:14.979110  1506 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:14.981323  1506 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:14.982566  1506 solver.cpp:311] Iteration 1000, loss = 0.0990194
I0428 20:20:14.982589  1506 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:15.060102  1513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:15.061089  1506 solver.cpp:398]     Test net output #0: accuracy = 0.9748
I0428 20:20:15.061112  1506 solver.cpp:398]     Test net output #1: loss = 0.0743263 (* 1 = 0.0743263 loss)
I0428 20:20:15.061120  1506 solver.cpp:316] Optimization Done.
I0428 20:20:15.061123  1506 caffe.cpp:259] Optimization Done.
