I0428 20:05:18.372352 30584 caffe.cpp:218] Using GPUs 0
I0428 20:05:18.416200 30584 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:18.977613 30584 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test996.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:18.977768 30584 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test996.prototxt
I0428 20:05:18.978171 30584 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:18.978189 30584 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:18.978286 30584 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:18.978360 30584 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:18.978462 30584 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:18.978487 30584 net.cpp:86] Creating Layer mnist
I0428 20:05:18.978494 30584 net.cpp:382] mnist -> data
I0428 20:05:18.978516 30584 net.cpp:382] mnist -> label
I0428 20:05:18.979609 30584 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:18.982059 30584 net.cpp:124] Setting up mnist
I0428 20:05:18.982076 30584 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:18.982084 30584 net.cpp:131] Top shape: 64 (64)
I0428 20:05:18.982087 30584 net.cpp:139] Memory required for data: 200960
I0428 20:05:18.982095 30584 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:18.982110 30584 net.cpp:86] Creating Layer conv0
I0428 20:05:18.982130 30584 net.cpp:408] conv0 <- data
I0428 20:05:18.982144 30584 net.cpp:382] conv0 -> conv0
I0428 20:05:19.244396 30584 net.cpp:124] Setting up conv0
I0428 20:05:19.244423 30584 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:19.244426 30584 net.cpp:139] Memory required for data: 3887360
I0428 20:05:19.244441 30584 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:19.244451 30584 net.cpp:86] Creating Layer pool0
I0428 20:05:19.244455 30584 net.cpp:408] pool0 <- conv0
I0428 20:05:19.244460 30584 net.cpp:382] pool0 -> pool0
I0428 20:05:19.244534 30584 net.cpp:124] Setting up pool0
I0428 20:05:19.244539 30584 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:19.244541 30584 net.cpp:139] Memory required for data: 4808960
I0428 20:05:19.244544 30584 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:19.244554 30584 net.cpp:86] Creating Layer conv1
I0428 20:05:19.244557 30584 net.cpp:408] conv1 <- pool0
I0428 20:05:19.244562 30584 net.cpp:382] conv1 -> conv1
I0428 20:05:19.247205 30584 net.cpp:124] Setting up conv1
I0428 20:05:19.247220 30584 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:19.247223 30584 net.cpp:139] Memory required for data: 4841728
I0428 20:05:19.247231 30584 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:19.247238 30584 net.cpp:86] Creating Layer pool1
I0428 20:05:19.247256 30584 net.cpp:408] pool1 <- conv1
I0428 20:05:19.247262 30584 net.cpp:382] pool1 -> pool1
I0428 20:05:19.247326 30584 net.cpp:124] Setting up pool1
I0428 20:05:19.247333 30584 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:19.247335 30584 net.cpp:139] Memory required for data: 4849920
I0428 20:05:19.247339 30584 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:19.247345 30584 net.cpp:86] Creating Layer ip1
I0428 20:05:19.247349 30584 net.cpp:408] ip1 <- pool1
I0428 20:05:19.247352 30584 net.cpp:382] ip1 -> ip1
I0428 20:05:19.247447 30584 net.cpp:124] Setting up ip1
I0428 20:05:19.247454 30584 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:19.247457 30584 net.cpp:139] Memory required for data: 4856320
I0428 20:05:19.247463 30584 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:19.247468 30584 net.cpp:86] Creating Layer relu1
I0428 20:05:19.247473 30584 net.cpp:408] relu1 <- ip1
I0428 20:05:19.247476 30584 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:19.247654 30584 net.cpp:124] Setting up relu1
I0428 20:05:19.247663 30584 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:19.247665 30584 net.cpp:139] Memory required for data: 4862720
I0428 20:05:19.247668 30584 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:19.247673 30584 net.cpp:86] Creating Layer ip2
I0428 20:05:19.247676 30584 net.cpp:408] ip2 <- ip1
I0428 20:05:19.247681 30584 net.cpp:382] ip2 -> ip2
I0428 20:05:19.247768 30584 net.cpp:124] Setting up ip2
I0428 20:05:19.247776 30584 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:19.247779 30584 net.cpp:139] Memory required for data: 4865280
I0428 20:05:19.247784 30584 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:19.247789 30584 net.cpp:86] Creating Layer relu2
I0428 20:05:19.247792 30584 net.cpp:408] relu2 <- ip2
I0428 20:05:19.247797 30584 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:19.248543 30584 net.cpp:124] Setting up relu2
I0428 20:05:19.248555 30584 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:19.248559 30584 net.cpp:139] Memory required for data: 4867840
I0428 20:05:19.248577 30584 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:19.248584 30584 net.cpp:86] Creating Layer ip3
I0428 20:05:19.248587 30584 net.cpp:408] ip3 <- ip2
I0428 20:05:19.248594 30584 net.cpp:382] ip3 -> ip3
I0428 20:05:19.248708 30584 net.cpp:124] Setting up ip3
I0428 20:05:19.248714 30584 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:19.248718 30584 net.cpp:139] Memory required for data: 4870400
I0428 20:05:19.248724 30584 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:19.248729 30584 net.cpp:86] Creating Layer relu3
I0428 20:05:19.248733 30584 net.cpp:408] relu3 <- ip3
I0428 20:05:19.248736 30584 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:19.248940 30584 net.cpp:124] Setting up relu3
I0428 20:05:19.248950 30584 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:19.248952 30584 net.cpp:139] Memory required for data: 4872960
I0428 20:05:19.248956 30584 layer_factory.hpp:77] Creating layer loss
I0428 20:05:19.248962 30584 net.cpp:86] Creating Layer loss
I0428 20:05:19.248965 30584 net.cpp:408] loss <- ip3
I0428 20:05:19.248970 30584 net.cpp:408] loss <- label
I0428 20:05:19.248975 30584 net.cpp:382] loss -> loss
I0428 20:05:19.248988 30584 layer_factory.hpp:77] Creating layer loss
I0428 20:05:19.249235 30584 net.cpp:124] Setting up loss
I0428 20:05:19.249243 30584 net.cpp:131] Top shape: (1)
I0428 20:05:19.249248 30584 net.cpp:134]     with loss weight 1
I0428 20:05:19.249261 30584 net.cpp:139] Memory required for data: 4872964
I0428 20:05:19.249264 30584 net.cpp:200] loss needs backward computation.
I0428 20:05:19.249269 30584 net.cpp:200] relu3 needs backward computation.
I0428 20:05:19.249271 30584 net.cpp:200] ip3 needs backward computation.
I0428 20:05:19.249275 30584 net.cpp:200] relu2 needs backward computation.
I0428 20:05:19.249277 30584 net.cpp:200] ip2 needs backward computation.
I0428 20:05:19.249280 30584 net.cpp:200] relu1 needs backward computation.
I0428 20:05:19.249284 30584 net.cpp:200] ip1 needs backward computation.
I0428 20:05:19.249286 30584 net.cpp:200] pool1 needs backward computation.
I0428 20:05:19.249289 30584 net.cpp:200] conv1 needs backward computation.
I0428 20:05:19.249292 30584 net.cpp:200] pool0 needs backward computation.
I0428 20:05:19.249295 30584 net.cpp:200] conv0 needs backward computation.
I0428 20:05:19.249300 30584 net.cpp:202] mnist does not need backward computation.
I0428 20:05:19.249302 30584 net.cpp:244] This network produces output loss
I0428 20:05:19.249310 30584 net.cpp:257] Network initialization done.
I0428 20:05:19.249683 30584 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test996.prototxt
I0428 20:05:19.249711 30584 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:19.249817 30584 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:19.249892 30584 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:19.249938 30584 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:19.249964 30584 net.cpp:86] Creating Layer mnist
I0428 20:05:19.249969 30584 net.cpp:382] mnist -> data
I0428 20:05:19.249976 30584 net.cpp:382] mnist -> label
I0428 20:05:19.250066 30584 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:19.251919 30584 net.cpp:124] Setting up mnist
I0428 20:05:19.251947 30584 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:19.251966 30584 net.cpp:131] Top shape: 100 (100)
I0428 20:05:19.251969 30584 net.cpp:139] Memory required for data: 314000
I0428 20:05:19.251972 30584 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:19.251978 30584 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:19.251981 30584 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:19.251986 30584 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:19.251992 30584 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:19.252025 30584 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:19.252030 30584 net.cpp:131] Top shape: 100 (100)
I0428 20:05:19.252033 30584 net.cpp:131] Top shape: 100 (100)
I0428 20:05:19.252037 30584 net.cpp:139] Memory required for data: 314800
I0428 20:05:19.252038 30584 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:19.252046 30584 net.cpp:86] Creating Layer conv0
I0428 20:05:19.252049 30584 net.cpp:408] conv0 <- data
I0428 20:05:19.252053 30584 net.cpp:382] conv0 -> conv0
I0428 20:05:19.253706 30584 net.cpp:124] Setting up conv0
I0428 20:05:19.253720 30584 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:19.253723 30584 net.cpp:139] Memory required for data: 6074800
I0428 20:05:19.253731 30584 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:19.253737 30584 net.cpp:86] Creating Layer pool0
I0428 20:05:19.253756 30584 net.cpp:408] pool0 <- conv0
I0428 20:05:19.253762 30584 net.cpp:382] pool0 -> pool0
I0428 20:05:19.253795 30584 net.cpp:124] Setting up pool0
I0428 20:05:19.253800 30584 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:19.253803 30584 net.cpp:139] Memory required for data: 7514800
I0428 20:05:19.253805 30584 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:19.253813 30584 net.cpp:86] Creating Layer conv1
I0428 20:05:19.253831 30584 net.cpp:408] conv1 <- pool0
I0428 20:05:19.253836 30584 net.cpp:382] conv1 -> conv1
I0428 20:05:19.255869 30584 net.cpp:124] Setting up conv1
I0428 20:05:19.255897 30584 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:19.255899 30584 net.cpp:139] Memory required for data: 7566000
I0428 20:05:19.255908 30584 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:19.255928 30584 net.cpp:86] Creating Layer pool1
I0428 20:05:19.255934 30584 net.cpp:408] pool1 <- conv1
I0428 20:05:19.255937 30584 net.cpp:382] pool1 -> pool1
I0428 20:05:19.255972 30584 net.cpp:124] Setting up pool1
I0428 20:05:19.255988 30584 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:19.255998 30584 net.cpp:139] Memory required for data: 7578800
I0428 20:05:19.256000 30584 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:19.256021 30584 net.cpp:86] Creating Layer ip1
I0428 20:05:19.256031 30584 net.cpp:408] ip1 <- pool1
I0428 20:05:19.256036 30584 net.cpp:382] ip1 -> ip1
I0428 20:05:19.256134 30584 net.cpp:124] Setting up ip1
I0428 20:05:19.256142 30584 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:19.256155 30584 net.cpp:139] Memory required for data: 7588800
I0428 20:05:19.256162 30584 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:19.256173 30584 net.cpp:86] Creating Layer relu1
I0428 20:05:19.256176 30584 net.cpp:408] relu1 <- ip1
I0428 20:05:19.256186 30584 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:19.256366 30584 net.cpp:124] Setting up relu1
I0428 20:05:19.256374 30584 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:19.256377 30584 net.cpp:139] Memory required for data: 7598800
I0428 20:05:19.256386 30584 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:19.256393 30584 net.cpp:86] Creating Layer ip2
I0428 20:05:19.256397 30584 net.cpp:408] ip2 <- ip1
I0428 20:05:19.256407 30584 net.cpp:382] ip2 -> ip2
I0428 20:05:19.256494 30584 net.cpp:124] Setting up ip2
I0428 20:05:19.256501 30584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:19.256505 30584 net.cpp:139] Memory required for data: 7602800
I0428 20:05:19.256508 30584 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:19.256513 30584 net.cpp:86] Creating Layer relu2
I0428 20:05:19.256515 30584 net.cpp:408] relu2 <- ip2
I0428 20:05:19.256520 30584 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:19.256656 30584 net.cpp:124] Setting up relu2
I0428 20:05:19.256664 30584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:19.256666 30584 net.cpp:139] Memory required for data: 7606800
I0428 20:05:19.256669 30584 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:19.256686 30584 net.cpp:86] Creating Layer ip3
I0428 20:05:19.256690 30584 net.cpp:408] ip3 <- ip2
I0428 20:05:19.256700 30584 net.cpp:382] ip3 -> ip3
I0428 20:05:19.256783 30584 net.cpp:124] Setting up ip3
I0428 20:05:19.256789 30584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:19.256793 30584 net.cpp:139] Memory required for data: 7610800
I0428 20:05:19.256799 30584 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:19.256815 30584 net.cpp:86] Creating Layer relu3
I0428 20:05:19.256834 30584 net.cpp:408] relu3 <- ip3
I0428 20:05:19.256839 30584 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:19.257710 30584 net.cpp:124] Setting up relu3
I0428 20:05:19.257722 30584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:19.257726 30584 net.cpp:139] Memory required for data: 7614800
I0428 20:05:19.257730 30584 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:19.257735 30584 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:19.257738 30584 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:19.257743 30584 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:19.257750 30584 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:19.257796 30584 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:19.257800 30584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:19.257804 30584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:19.257808 30584 net.cpp:139] Memory required for data: 7622800
I0428 20:05:19.257810 30584 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:19.257815 30584 net.cpp:86] Creating Layer accuracy
I0428 20:05:19.257819 30584 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:19.257822 30584 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:19.257827 30584 net.cpp:382] accuracy -> accuracy
I0428 20:05:19.257833 30584 net.cpp:124] Setting up accuracy
I0428 20:05:19.257838 30584 net.cpp:131] Top shape: (1)
I0428 20:05:19.257840 30584 net.cpp:139] Memory required for data: 7622804
I0428 20:05:19.257843 30584 layer_factory.hpp:77] Creating layer loss
I0428 20:05:19.257848 30584 net.cpp:86] Creating Layer loss
I0428 20:05:19.257850 30584 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:19.257860 30584 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:19.257865 30584 net.cpp:382] loss -> loss
I0428 20:05:19.257870 30584 layer_factory.hpp:77] Creating layer loss
I0428 20:05:19.258107 30584 net.cpp:124] Setting up loss
I0428 20:05:19.258116 30584 net.cpp:131] Top shape: (1)
I0428 20:05:19.258121 30584 net.cpp:134]     with loss weight 1
I0428 20:05:19.258126 30584 net.cpp:139] Memory required for data: 7622808
I0428 20:05:19.258139 30584 net.cpp:200] loss needs backward computation.
I0428 20:05:19.258143 30584 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:19.258158 30584 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:19.258162 30584 net.cpp:200] relu3 needs backward computation.
I0428 20:05:19.258163 30584 net.cpp:200] ip3 needs backward computation.
I0428 20:05:19.258172 30584 net.cpp:200] relu2 needs backward computation.
I0428 20:05:19.258175 30584 net.cpp:200] ip2 needs backward computation.
I0428 20:05:19.258178 30584 net.cpp:200] relu1 needs backward computation.
I0428 20:05:19.258180 30584 net.cpp:200] ip1 needs backward computation.
I0428 20:05:19.258188 30584 net.cpp:200] pool1 needs backward computation.
I0428 20:05:19.258191 30584 net.cpp:200] conv1 needs backward computation.
I0428 20:05:19.258210 30584 net.cpp:200] pool0 needs backward computation.
I0428 20:05:19.258219 30584 net.cpp:200] conv0 needs backward computation.
I0428 20:05:19.258222 30584 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:19.258225 30584 net.cpp:202] mnist does not need backward computation.
I0428 20:05:19.258234 30584 net.cpp:244] This network produces output accuracy
I0428 20:05:19.258237 30584 net.cpp:244] This network produces output loss
I0428 20:05:19.258246 30584 net.cpp:257] Network initialization done.
I0428 20:05:19.258291 30584 solver.cpp:56] Solver scaffolding done.
I0428 20:05:19.258627 30584 caffe.cpp:248] Starting Optimization
I0428 20:05:19.258635 30584 solver.cpp:273] Solving LeNet
I0428 20:05:19.258637 30584 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:19.259469 30584 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:19.264606 30584 blocking_queue.cpp:49] Waiting for data
I0428 20:05:19.336491 30591 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:19.337090 30584 solver.cpp:398]     Test net output #0: accuracy = 0.1059
I0428 20:05:19.337107 30584 solver.cpp:398]     Test net output #1: loss = 2.32209 (* 1 = 2.32209 loss)
I0428 20:05:19.340070 30584 solver.cpp:219] Iteration 0 (-9.99126e-43 iter/s, 0.081402s/100 iters), loss = 2.33961
I0428 20:05:19.340092 30584 solver.cpp:238]     Train net output #0: loss = 2.33961 (* 1 = 2.33961 loss)
I0428 20:05:19.340118 30584 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:19.428303 30584 solver.cpp:219] Iteration 100 (1133.77 iter/s, 0.0882013s/100 iters), loss = 1.70738
I0428 20:05:19.428326 30584 solver.cpp:238]     Train net output #0: loss = 1.70738 (* 1 = 1.70738 loss)
I0428 20:05:19.428331 30584 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:19.514637 30584 solver.cpp:219] Iteration 200 (1158.74 iter/s, 0.0863008s/100 iters), loss = 1.14171
I0428 20:05:19.514660 30584 solver.cpp:238]     Train net output #0: loss = 1.14171 (* 1 = 1.14171 loss)
I0428 20:05:19.514665 30584 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:19.601315 30584 solver.cpp:219] Iteration 300 (1154.12 iter/s, 0.0866458s/100 iters), loss = 0.867774
I0428 20:05:19.601338 30584 solver.cpp:238]     Train net output #0: loss = 0.867774 (* 1 = 0.867774 loss)
I0428 20:05:19.601343 30584 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:19.689278 30584 solver.cpp:219] Iteration 400 (1137.26 iter/s, 0.087931s/100 iters), loss = 0.874822
I0428 20:05:19.689301 30584 solver.cpp:238]     Train net output #0: loss = 0.874822 (* 1 = 0.874822 loss)
I0428 20:05:19.689306 30584 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:19.776629 30584 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:19.830992 30591 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:19.831567 30584 solver.cpp:398]     Test net output #0: accuracy = 0.847
I0428 20:05:19.831585 30584 solver.cpp:398]     Test net output #1: loss = 0.581311 (* 1 = 0.581311 loss)
I0428 20:05:19.832463 30584 solver.cpp:219] Iteration 500 (698.568 iter/s, 0.14315s/100 iters), loss = 0.648635
I0428 20:05:19.832511 30584 solver.cpp:238]     Train net output #0: loss = 0.648635 (* 1 = 0.648635 loss)
I0428 20:05:19.832532 30584 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:19.929535 30584 solver.cpp:219] Iteration 600 (1030.77 iter/s, 0.0970144s/100 iters), loss = 0.599223
I0428 20:05:19.929587 30584 solver.cpp:238]     Train net output #0: loss = 0.599223 (* 1 = 0.599223 loss)
I0428 20:05:19.929608 30584 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:20.016963 30584 solver.cpp:219] Iteration 700 (1144.64 iter/s, 0.0873637s/100 iters), loss = 0.492704
I0428 20:05:20.017014 30584 solver.cpp:238]     Train net output #0: loss = 0.492704 (* 1 = 0.492704 loss)
I0428 20:05:20.017035 30584 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:20.102224 30584 solver.cpp:219] Iteration 800 (1173.7 iter/s, 0.0852009s/100 iters), loss = 0.515234
I0428 20:05:20.102247 30584 solver.cpp:238]     Train net output #0: loss = 0.515234 (* 1 = 0.515234 loss)
I0428 20:05:20.102253 30584 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:20.186744 30584 solver.cpp:219] Iteration 900 (1183.61 iter/s, 0.0844872s/100 iters), loss = 0.526705
I0428 20:05:20.186767 30584 solver.cpp:238]     Train net output #0: loss = 0.526705 (* 1 = 0.526705 loss)
I0428 20:05:20.186789 30584 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:20.215108 30590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:20.278766 30584 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:20.279482 30584 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:20.280019 30584 solver.cpp:311] Iteration 1000, loss = 0.455081
I0428 20:05:20.280035 30584 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:20.354418 30591 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:20.355000 30584 solver.cpp:398]     Test net output #0: accuracy = 0.9242
I0428 20:05:20.355018 30584 solver.cpp:398]     Test net output #1: loss = 0.424688 (* 1 = 0.424688 loss)
I0428 20:05:20.355024 30584 solver.cpp:316] Optimization Done.
I0428 20:05:20.355027 30584 caffe.cpp:259] Optimization Done.
