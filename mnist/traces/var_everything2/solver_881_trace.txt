I0428 20:00:37.265476 29517 caffe.cpp:218] Using GPUs 0
I0428 20:00:37.302626 29517 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:37.822695 29517 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test881.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:37.822844 29517 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test881.prototxt
I0428 20:00:37.823261 29517 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:37.823282 29517 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:37.823382 29517 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:37.823465 29517 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:37.823580 29517 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:37.823602 29517 net.cpp:86] Creating Layer mnist
I0428 20:00:37.823611 29517 net.cpp:382] mnist -> data
I0428 20:00:37.823632 29517 net.cpp:382] mnist -> label
I0428 20:00:37.824720 29517 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:37.827174 29517 net.cpp:124] Setting up mnist
I0428 20:00:37.827193 29517 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:37.827199 29517 net.cpp:131] Top shape: 64 (64)
I0428 20:00:37.827203 29517 net.cpp:139] Memory required for data: 200960
I0428 20:00:37.827210 29517 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:37.827227 29517 net.cpp:86] Creating Layer conv0
I0428 20:00:37.827249 29517 net.cpp:408] conv0 <- data
I0428 20:00:37.827261 29517 net.cpp:382] conv0 -> conv0
I0428 20:00:38.116827 29517 net.cpp:124] Setting up conv0
I0428 20:00:38.116858 29517 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:38.116863 29517 net.cpp:139] Memory required for data: 1675520
I0428 20:00:38.116881 29517 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:38.116899 29517 net.cpp:86] Creating Layer pool0
I0428 20:00:38.116907 29517 net.cpp:408] pool0 <- conv0
I0428 20:00:38.116925 29517 net.cpp:382] pool0 -> pool0
I0428 20:00:38.116979 29517 net.cpp:124] Setting up pool0
I0428 20:00:38.116991 29517 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:38.116994 29517 net.cpp:139] Memory required for data: 2044160
I0428 20:00:38.116998 29517 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:38.117010 29517 net.cpp:86] Creating Layer conv1
I0428 20:00:38.117014 29517 net.cpp:408] conv1 <- pool0
I0428 20:00:38.117020 29517 net.cpp:382] conv1 -> conv1
I0428 20:00:38.120146 29517 net.cpp:124] Setting up conv1
I0428 20:00:38.120162 29517 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:38.120167 29517 net.cpp:139] Memory required for data: 2453760
I0428 20:00:38.120178 29517 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:38.120187 29517 net.cpp:86] Creating Layer pool1
I0428 20:00:38.120193 29517 net.cpp:408] pool1 <- conv1
I0428 20:00:38.120198 29517 net.cpp:382] pool1 -> pool1
I0428 20:00:38.120242 29517 net.cpp:124] Setting up pool1
I0428 20:00:38.120249 29517 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:38.120252 29517 net.cpp:139] Memory required for data: 2556160
I0428 20:00:38.120256 29517 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:38.120265 29517 net.cpp:86] Creating Layer ip1
I0428 20:00:38.120268 29517 net.cpp:408] ip1 <- pool1
I0428 20:00:38.120275 29517 net.cpp:382] ip1 -> ip1
I0428 20:00:38.120450 29517 net.cpp:124] Setting up ip1
I0428 20:00:38.120458 29517 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:38.120462 29517 net.cpp:139] Memory required for data: 2562560
I0428 20:00:38.120471 29517 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:38.120477 29517 net.cpp:86] Creating Layer relu1
I0428 20:00:38.120481 29517 net.cpp:408] relu1 <- ip1
I0428 20:00:38.120486 29517 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:38.120674 29517 net.cpp:124] Setting up relu1
I0428 20:00:38.120684 29517 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:38.120688 29517 net.cpp:139] Memory required for data: 2568960
I0428 20:00:38.120692 29517 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:38.120700 29517 net.cpp:86] Creating Layer ip2
I0428 20:00:38.120703 29517 net.cpp:408] ip2 <- ip1
I0428 20:00:38.120709 29517 net.cpp:382] ip2 -> ip2
I0428 20:00:38.120826 29517 net.cpp:124] Setting up ip2
I0428 20:00:38.120834 29517 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:38.120838 29517 net.cpp:139] Memory required for data: 2571520
I0428 20:00:38.120846 29517 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:38.120852 29517 net.cpp:86] Creating Layer relu2
I0428 20:00:38.120857 29517 net.cpp:408] relu2 <- ip2
I0428 20:00:38.120862 29517 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:38.121791 29517 net.cpp:124] Setting up relu2
I0428 20:00:38.121806 29517 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:38.121810 29517 net.cpp:139] Memory required for data: 2574080
I0428 20:00:38.121815 29517 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:38.121824 29517 net.cpp:86] Creating Layer ip3
I0428 20:00:38.121827 29517 net.cpp:408] ip3 <- ip2
I0428 20:00:38.121834 29517 net.cpp:382] ip3 -> ip3
I0428 20:00:38.121953 29517 net.cpp:124] Setting up ip3
I0428 20:00:38.121961 29517 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:38.121965 29517 net.cpp:139] Memory required for data: 2576640
I0428 20:00:38.121975 29517 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:38.121981 29517 net.cpp:86] Creating Layer relu3
I0428 20:00:38.121985 29517 net.cpp:408] relu3 <- ip3
I0428 20:00:38.121990 29517 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:38.122184 29517 net.cpp:124] Setting up relu3
I0428 20:00:38.122193 29517 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:38.122197 29517 net.cpp:139] Memory required for data: 2579200
I0428 20:00:38.122201 29517 layer_factory.hpp:77] Creating layer loss
I0428 20:00:38.122210 29517 net.cpp:86] Creating Layer loss
I0428 20:00:38.122213 29517 net.cpp:408] loss <- ip3
I0428 20:00:38.122217 29517 net.cpp:408] loss <- label
I0428 20:00:38.122225 29517 net.cpp:382] loss -> loss
I0428 20:00:38.122246 29517 layer_factory.hpp:77] Creating layer loss
I0428 20:00:38.122524 29517 net.cpp:124] Setting up loss
I0428 20:00:38.122535 29517 net.cpp:131] Top shape: (1)
I0428 20:00:38.122540 29517 net.cpp:134]     with loss weight 1
I0428 20:00:38.122555 29517 net.cpp:139] Memory required for data: 2579204
I0428 20:00:38.122560 29517 net.cpp:200] loss needs backward computation.
I0428 20:00:38.122565 29517 net.cpp:200] relu3 needs backward computation.
I0428 20:00:38.122568 29517 net.cpp:200] ip3 needs backward computation.
I0428 20:00:38.122573 29517 net.cpp:200] relu2 needs backward computation.
I0428 20:00:38.122576 29517 net.cpp:200] ip2 needs backward computation.
I0428 20:00:38.122581 29517 net.cpp:200] relu1 needs backward computation.
I0428 20:00:38.122583 29517 net.cpp:200] ip1 needs backward computation.
I0428 20:00:38.122587 29517 net.cpp:200] pool1 needs backward computation.
I0428 20:00:38.122591 29517 net.cpp:200] conv1 needs backward computation.
I0428 20:00:38.122594 29517 net.cpp:200] pool0 needs backward computation.
I0428 20:00:38.122598 29517 net.cpp:200] conv0 needs backward computation.
I0428 20:00:38.122602 29517 net.cpp:202] mnist does not need backward computation.
I0428 20:00:38.122606 29517 net.cpp:244] This network produces output loss
I0428 20:00:38.122617 29517 net.cpp:257] Network initialization done.
I0428 20:00:38.122995 29517 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test881.prototxt
I0428 20:00:38.123028 29517 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:38.123134 29517 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:38.123229 29517 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:38.123282 29517 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:38.123296 29517 net.cpp:86] Creating Layer mnist
I0428 20:00:38.123302 29517 net.cpp:382] mnist -> data
I0428 20:00:38.123311 29517 net.cpp:382] mnist -> label
I0428 20:00:38.123409 29517 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:38.125627 29517 net.cpp:124] Setting up mnist
I0428 20:00:38.125643 29517 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:38.125649 29517 net.cpp:131] Top shape: 100 (100)
I0428 20:00:38.125653 29517 net.cpp:139] Memory required for data: 314000
I0428 20:00:38.125658 29517 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:38.125666 29517 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:38.125670 29517 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:38.125676 29517 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:38.125684 29517 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:38.125735 29517 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:38.125751 29517 net.cpp:131] Top shape: 100 (100)
I0428 20:00:38.125756 29517 net.cpp:131] Top shape: 100 (100)
I0428 20:00:38.125759 29517 net.cpp:139] Memory required for data: 314800
I0428 20:00:38.125763 29517 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:38.125773 29517 net.cpp:86] Creating Layer conv0
I0428 20:00:38.125777 29517 net.cpp:408] conv0 <- data
I0428 20:00:38.125783 29517 net.cpp:382] conv0 -> conv0
I0428 20:00:38.127658 29517 net.cpp:124] Setting up conv0
I0428 20:00:38.127676 29517 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:38.127679 29517 net.cpp:139] Memory required for data: 2618800
I0428 20:00:38.127691 29517 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:38.127698 29517 net.cpp:86] Creating Layer pool0
I0428 20:00:38.127702 29517 net.cpp:408] pool0 <- conv0
I0428 20:00:38.127708 29517 net.cpp:382] pool0 -> pool0
I0428 20:00:38.127749 29517 net.cpp:124] Setting up pool0
I0428 20:00:38.127756 29517 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:38.127759 29517 net.cpp:139] Memory required for data: 3194800
I0428 20:00:38.127763 29517 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:38.127774 29517 net.cpp:86] Creating Layer conv1
I0428 20:00:38.127777 29517 net.cpp:408] conv1 <- pool0
I0428 20:00:38.127782 29517 net.cpp:382] conv1 -> conv1
I0428 20:00:38.130074 29517 net.cpp:124] Setting up conv1
I0428 20:00:38.130090 29517 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:38.130095 29517 net.cpp:139] Memory required for data: 3834800
I0428 20:00:38.130106 29517 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:38.130113 29517 net.cpp:86] Creating Layer pool1
I0428 20:00:38.130117 29517 net.cpp:408] pool1 <- conv1
I0428 20:00:38.130125 29517 net.cpp:382] pool1 -> pool1
I0428 20:00:38.130173 29517 net.cpp:124] Setting up pool1
I0428 20:00:38.130179 29517 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:38.130183 29517 net.cpp:139] Memory required for data: 3994800
I0428 20:00:38.130187 29517 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:38.130193 29517 net.cpp:86] Creating Layer ip1
I0428 20:00:38.130198 29517 net.cpp:408] ip1 <- pool1
I0428 20:00:38.130203 29517 net.cpp:382] ip1 -> ip1
I0428 20:00:38.130395 29517 net.cpp:124] Setting up ip1
I0428 20:00:38.130405 29517 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:38.130422 29517 net.cpp:139] Memory required for data: 4004800
I0428 20:00:38.130432 29517 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:38.130439 29517 net.cpp:86] Creating Layer relu1
I0428 20:00:38.130442 29517 net.cpp:408] relu1 <- ip1
I0428 20:00:38.130447 29517 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:38.130636 29517 net.cpp:124] Setting up relu1
I0428 20:00:38.130646 29517 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:38.130650 29517 net.cpp:139] Memory required for data: 4014800
I0428 20:00:38.130656 29517 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:38.130663 29517 net.cpp:86] Creating Layer ip2
I0428 20:00:38.130667 29517 net.cpp:408] ip2 <- ip1
I0428 20:00:38.130674 29517 net.cpp:382] ip2 -> ip2
I0428 20:00:38.130785 29517 net.cpp:124] Setting up ip2
I0428 20:00:38.130795 29517 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:38.130797 29517 net.cpp:139] Memory required for data: 4018800
I0428 20:00:38.130805 29517 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:38.130810 29517 net.cpp:86] Creating Layer relu2
I0428 20:00:38.130813 29517 net.cpp:408] relu2 <- ip2
I0428 20:00:38.130818 29517 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:38.130990 29517 net.cpp:124] Setting up relu2
I0428 20:00:38.131000 29517 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:38.131002 29517 net.cpp:139] Memory required for data: 4022800
I0428 20:00:38.131006 29517 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:38.131013 29517 net.cpp:86] Creating Layer ip3
I0428 20:00:38.131017 29517 net.cpp:408] ip3 <- ip2
I0428 20:00:38.131023 29517 net.cpp:382] ip3 -> ip3
I0428 20:00:38.131137 29517 net.cpp:124] Setting up ip3
I0428 20:00:38.131145 29517 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:38.131150 29517 net.cpp:139] Memory required for data: 4026800
I0428 20:00:38.131158 29517 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:38.131163 29517 net.cpp:86] Creating Layer relu3
I0428 20:00:38.131167 29517 net.cpp:408] relu3 <- ip3
I0428 20:00:38.131172 29517 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:38.132127 29517 net.cpp:124] Setting up relu3
I0428 20:00:38.132140 29517 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:38.132144 29517 net.cpp:139] Memory required for data: 4030800
I0428 20:00:38.132148 29517 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:38.132156 29517 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:38.132160 29517 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:38.132166 29517 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:38.132175 29517 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:38.132223 29517 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:38.132230 29517 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:38.132235 29517 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:38.132238 29517 net.cpp:139] Memory required for data: 4038800
I0428 20:00:38.132241 29517 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:38.132253 29517 net.cpp:86] Creating Layer accuracy
I0428 20:00:38.132257 29517 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:38.132262 29517 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:38.132268 29517 net.cpp:382] accuracy -> accuracy
I0428 20:00:38.132277 29517 net.cpp:124] Setting up accuracy
I0428 20:00:38.132282 29517 net.cpp:131] Top shape: (1)
I0428 20:00:38.132285 29517 net.cpp:139] Memory required for data: 4038804
I0428 20:00:38.132289 29517 layer_factory.hpp:77] Creating layer loss
I0428 20:00:38.132295 29517 net.cpp:86] Creating Layer loss
I0428 20:00:38.132299 29517 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:38.132304 29517 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:38.132309 29517 net.cpp:382] loss -> loss
I0428 20:00:38.132316 29517 layer_factory.hpp:77] Creating layer loss
I0428 20:00:38.132575 29517 net.cpp:124] Setting up loss
I0428 20:00:38.132586 29517 net.cpp:131] Top shape: (1)
I0428 20:00:38.132589 29517 net.cpp:134]     with loss weight 1
I0428 20:00:38.132614 29517 net.cpp:139] Memory required for data: 4038808
I0428 20:00:38.132619 29517 net.cpp:200] loss needs backward computation.
I0428 20:00:38.132624 29517 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:38.132629 29517 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:38.132633 29517 net.cpp:200] relu3 needs backward computation.
I0428 20:00:38.132647 29517 net.cpp:200] ip3 needs backward computation.
I0428 20:00:38.132649 29517 net.cpp:200] relu2 needs backward computation.
I0428 20:00:38.132653 29517 net.cpp:200] ip2 needs backward computation.
I0428 20:00:38.132658 29517 net.cpp:200] relu1 needs backward computation.
I0428 20:00:38.132661 29517 net.cpp:200] ip1 needs backward computation.
I0428 20:00:38.132665 29517 net.cpp:200] pool1 needs backward computation.
I0428 20:00:38.132669 29517 net.cpp:200] conv1 needs backward computation.
I0428 20:00:38.132673 29517 net.cpp:200] pool0 needs backward computation.
I0428 20:00:38.132676 29517 net.cpp:200] conv0 needs backward computation.
I0428 20:00:38.132681 29517 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:38.132686 29517 net.cpp:202] mnist does not need backward computation.
I0428 20:00:38.132689 29517 net.cpp:244] This network produces output accuracy
I0428 20:00:38.132694 29517 net.cpp:244] This network produces output loss
I0428 20:00:38.132707 29517 net.cpp:257] Network initialization done.
I0428 20:00:38.132757 29517 solver.cpp:56] Solver scaffolding done.
I0428 20:00:38.133183 29517 caffe.cpp:248] Starting Optimization
I0428 20:00:38.133191 29517 solver.cpp:273] Solving LeNet
I0428 20:00:38.133194 29517 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:38.133477 29517 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:38.138723 29517 blocking_queue.cpp:49] Waiting for data
I0428 20:00:38.211175 29526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:38.211725 29517 solver.cpp:398]     Test net output #0: accuracy = 0.0691
I0428 20:00:38.211748 29517 solver.cpp:398]     Test net output #1: loss = 2.3193 (* 1 = 2.3193 loss)
I0428 20:00:38.214423 29517 solver.cpp:219] Iteration 0 (0 iter/s, 0.0811981s/100 iters), loss = 2.3327
I0428 20:00:38.214452 29517 solver.cpp:238]     Train net output #0: loss = 2.3327 (* 1 = 2.3327 loss)
I0428 20:00:38.214464 29517 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:38.302953 29517 solver.cpp:219] Iteration 100 (1130.05 iter/s, 0.088492s/100 iters), loss = 1.48179
I0428 20:00:38.302978 29517 solver.cpp:238]     Train net output #0: loss = 1.48179 (* 1 = 1.48179 loss)
I0428 20:00:38.302983 29517 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:38.389495 29517 solver.cpp:219] Iteration 200 (1155.94 iter/s, 0.0865096s/100 iters), loss = 1.18463
I0428 20:00:38.389534 29517 solver.cpp:238]     Train net output #0: loss = 1.18463 (* 1 = 1.18463 loss)
I0428 20:00:38.389540 29517 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:38.476063 29517 solver.cpp:219] Iteration 300 (1155.61 iter/s, 0.0865341s/100 iters), loss = 0.600014
I0428 20:00:38.476101 29517 solver.cpp:238]     Train net output #0: loss = 0.600014 (* 1 = 0.600014 loss)
I0428 20:00:38.476106 29517 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:38.563709 29517 solver.cpp:219] Iteration 400 (1141.38 iter/s, 0.0876134s/100 iters), loss = 0.911826
I0428 20:00:38.563748 29517 solver.cpp:238]     Train net output #0: loss = 0.911826 (* 1 = 0.911826 loss)
I0428 20:00:38.563755 29517 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:38.650085 29517 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:38.696214 29526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:38.697487 29517 solver.cpp:398]     Test net output #0: accuracy = 0.7255
I0428 20:00:38.697525 29517 solver.cpp:398]     Test net output #1: loss = 0.8742 (* 1 = 0.8742 loss)
I0428 20:00:38.698406 29517 solver.cpp:219] Iteration 500 (742.605 iter/s, 0.134661s/100 iters), loss = 0.938272
I0428 20:00:38.698444 29517 solver.cpp:238]     Train net output #0: loss = 0.938272 (* 1 = 0.938272 loss)
I0428 20:00:38.698465 29517 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:38.798327 29517 solver.cpp:219] Iteration 600 (1001.11 iter/s, 0.0998892s/100 iters), loss = 0.830927
I0428 20:00:38.798369 29517 solver.cpp:238]     Train net output #0: loss = 0.830927 (* 1 = 0.830927 loss)
I0428 20:00:38.798375 29517 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:38.893882 29517 solver.cpp:219] Iteration 700 (1046.93 iter/s, 0.0955178s/100 iters), loss = 1.04042
I0428 20:00:38.893921 29517 solver.cpp:238]     Train net output #0: loss = 1.04042 (* 1 = 1.04042 loss)
I0428 20:00:38.893929 29517 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:38.984194 29517 solver.cpp:219] Iteration 800 (1107.7 iter/s, 0.0902769s/100 iters), loss = 0.810754
I0428 20:00:38.984222 29517 solver.cpp:238]     Train net output #0: loss = 0.810754 (* 1 = 0.810754 loss)
I0428 20:00:38.984230 29517 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:39.072970 29517 solver.cpp:219] Iteration 900 (1126.92 iter/s, 0.0887378s/100 iters), loss = 0.757241
I0428 20:00:39.073009 29517 solver.cpp:238]     Train net output #0: loss = 0.757241 (* 1 = 0.757241 loss)
I0428 20:00:39.073015 29517 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:39.104136 29523 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:39.163398 29517 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:39.164402 29517 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:39.164980 29517 solver.cpp:311] Iteration 1000, loss = 0.911437
I0428 20:00:39.164997 29517 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:39.238906 29526 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:39.239475 29517 solver.cpp:398]     Test net output #0: accuracy = 0.7656
I0428 20:00:39.239509 29517 solver.cpp:398]     Test net output #1: loss = 0.797566 (* 1 = 0.797566 loss)
I0428 20:00:39.239514 29517 solver.cpp:316] Optimization Done.
I0428 20:00:39.239517 29517 caffe.cpp:259] Optimization Done.
