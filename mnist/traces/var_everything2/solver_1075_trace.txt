I0428 20:08:08.716701 31316 caffe.cpp:218] Using GPUs 0
I0428 20:08:08.753576 31316 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:09.206746 31316 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1075.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:09.206887 31316 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1075.prototxt
I0428 20:08:09.207276 31316 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:09.207306 31316 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:09.207413 31316 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:09.207473 31316 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:09.207551 31316 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:09.207571 31316 net.cpp:86] Creating Layer mnist
I0428 20:08:09.207576 31316 net.cpp:382] mnist -> data
I0428 20:08:09.207594 31316 net.cpp:382] mnist -> label
I0428 20:08:09.208498 31316 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:09.210729 31316 net.cpp:124] Setting up mnist
I0428 20:08:09.210758 31316 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:09.210777 31316 net.cpp:131] Top shape: 64 (64)
I0428 20:08:09.210780 31316 net.cpp:139] Memory required for data: 200960
I0428 20:08:09.210786 31316 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:09.210808 31316 net.cpp:86] Creating Layer conv0
I0428 20:08:09.210824 31316 net.cpp:408] conv0 <- data
I0428 20:08:09.210834 31316 net.cpp:382] conv0 -> conv0
I0428 20:08:09.446101 31316 net.cpp:124] Setting up conv0
I0428 20:08:09.446127 31316 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:09.446131 31316 net.cpp:139] Memory required for data: 3887360
I0428 20:08:09.446144 31316 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:09.446157 31316 net.cpp:86] Creating Layer pool0
I0428 20:08:09.446161 31316 net.cpp:408] pool0 <- conv0
I0428 20:08:09.446166 31316 net.cpp:382] pool0 -> pool0
I0428 20:08:09.446239 31316 net.cpp:124] Setting up pool0
I0428 20:08:09.446245 31316 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:09.446247 31316 net.cpp:139] Memory required for data: 4808960
I0428 20:08:09.446250 31316 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:09.446261 31316 net.cpp:86] Creating Layer conv1
I0428 20:08:09.446264 31316 net.cpp:408] conv1 <- pool0
I0428 20:08:09.446269 31316 net.cpp:382] conv1 -> conv1
I0428 20:08:09.449293 31316 net.cpp:124] Setting up conv1
I0428 20:08:09.449322 31316 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:09.449326 31316 net.cpp:139] Memory required for data: 4972800
I0428 20:08:09.449334 31316 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:09.449342 31316 net.cpp:86] Creating Layer pool1
I0428 20:08:09.449345 31316 net.cpp:408] pool1 <- conv1
I0428 20:08:09.449352 31316 net.cpp:382] pool1 -> pool1
I0428 20:08:09.449404 31316 net.cpp:124] Setting up pool1
I0428 20:08:09.449409 31316 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:09.449411 31316 net.cpp:139] Memory required for data: 5013760
I0428 20:08:09.449414 31316 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:09.449421 31316 net.cpp:86] Creating Layer ip1
I0428 20:08:09.449425 31316 net.cpp:408] ip1 <- pool1
I0428 20:08:09.449430 31316 net.cpp:382] ip1 -> ip1
I0428 20:08:09.450424 31316 net.cpp:124] Setting up ip1
I0428 20:08:09.450435 31316 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:09.450454 31316 net.cpp:139] Memory required for data: 5020160
I0428 20:08:09.450462 31316 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:09.450469 31316 net.cpp:86] Creating Layer relu1
I0428 20:08:09.450474 31316 net.cpp:408] relu1 <- ip1
I0428 20:08:09.450477 31316 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:09.450696 31316 net.cpp:124] Setting up relu1
I0428 20:08:09.450706 31316 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:09.450709 31316 net.cpp:139] Memory required for data: 5026560
I0428 20:08:09.450712 31316 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:09.450718 31316 net.cpp:86] Creating Layer ip2
I0428 20:08:09.450721 31316 net.cpp:408] ip2 <- ip1
I0428 20:08:09.450727 31316 net.cpp:382] ip2 -> ip2
I0428 20:08:09.450821 31316 net.cpp:124] Setting up ip2
I0428 20:08:09.450829 31316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:09.450831 31316 net.cpp:139] Memory required for data: 5029120
I0428 20:08:09.450836 31316 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:09.450844 31316 net.cpp:86] Creating Layer relu2
I0428 20:08:09.450846 31316 net.cpp:408] relu2 <- ip2
I0428 20:08:09.450851 31316 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:09.451611 31316 net.cpp:124] Setting up relu2
I0428 20:08:09.451638 31316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:09.451642 31316 net.cpp:139] Memory required for data: 5031680
I0428 20:08:09.451659 31316 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:09.451666 31316 net.cpp:86] Creating Layer ip3
I0428 20:08:09.451669 31316 net.cpp:408] ip3 <- ip2
I0428 20:08:09.451675 31316 net.cpp:382] ip3 -> ip3
I0428 20:08:09.451792 31316 net.cpp:124] Setting up ip3
I0428 20:08:09.451800 31316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:09.451803 31316 net.cpp:139] Memory required for data: 5034240
I0428 20:08:09.451812 31316 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:09.451817 31316 net.cpp:86] Creating Layer relu3
I0428 20:08:09.451820 31316 net.cpp:408] relu3 <- ip3
I0428 20:08:09.451824 31316 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:09.451993 31316 net.cpp:124] Setting up relu3
I0428 20:08:09.452003 31316 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:09.452005 31316 net.cpp:139] Memory required for data: 5036800
I0428 20:08:09.452008 31316 layer_factory.hpp:77] Creating layer loss
I0428 20:08:09.452015 31316 net.cpp:86] Creating Layer loss
I0428 20:08:09.452018 31316 net.cpp:408] loss <- ip3
I0428 20:08:09.452021 31316 net.cpp:408] loss <- label
I0428 20:08:09.452026 31316 net.cpp:382] loss -> loss
I0428 20:08:09.452059 31316 layer_factory.hpp:77] Creating layer loss
I0428 20:08:09.452287 31316 net.cpp:124] Setting up loss
I0428 20:08:09.452296 31316 net.cpp:131] Top shape: (1)
I0428 20:08:09.452299 31316 net.cpp:134]     with loss weight 1
I0428 20:08:09.452313 31316 net.cpp:139] Memory required for data: 5036804
I0428 20:08:09.452316 31316 net.cpp:200] loss needs backward computation.
I0428 20:08:09.452320 31316 net.cpp:200] relu3 needs backward computation.
I0428 20:08:09.452322 31316 net.cpp:200] ip3 needs backward computation.
I0428 20:08:09.452325 31316 net.cpp:200] relu2 needs backward computation.
I0428 20:08:09.452328 31316 net.cpp:200] ip2 needs backward computation.
I0428 20:08:09.452330 31316 net.cpp:200] relu1 needs backward computation.
I0428 20:08:09.452333 31316 net.cpp:200] ip1 needs backward computation.
I0428 20:08:09.452335 31316 net.cpp:200] pool1 needs backward computation.
I0428 20:08:09.452338 31316 net.cpp:200] conv1 needs backward computation.
I0428 20:08:09.452342 31316 net.cpp:200] pool0 needs backward computation.
I0428 20:08:09.452344 31316 net.cpp:200] conv0 needs backward computation.
I0428 20:08:09.452347 31316 net.cpp:202] mnist does not need backward computation.
I0428 20:08:09.452352 31316 net.cpp:244] This network produces output loss
I0428 20:08:09.452360 31316 net.cpp:257] Network initialization done.
I0428 20:08:09.452689 31316 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1075.prototxt
I0428 20:08:09.452744 31316 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:09.452863 31316 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:09.452973 31316 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:09.453033 31316 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:09.453047 31316 net.cpp:86] Creating Layer mnist
I0428 20:08:09.453052 31316 net.cpp:382] mnist -> data
I0428 20:08:09.453060 31316 net.cpp:382] mnist -> label
I0428 20:08:09.453146 31316 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:09.455334 31316 net.cpp:124] Setting up mnist
I0428 20:08:09.455363 31316 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:09.455382 31316 net.cpp:131] Top shape: 100 (100)
I0428 20:08:09.455385 31316 net.cpp:139] Memory required for data: 314000
I0428 20:08:09.455389 31316 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:09.455423 31316 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:09.455428 31316 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:09.455435 31316 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:09.455440 31316 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:09.455482 31316 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:09.455493 31316 net.cpp:131] Top shape: 100 (100)
I0428 20:08:09.455497 31316 net.cpp:131] Top shape: 100 (100)
I0428 20:08:09.455499 31316 net.cpp:139] Memory required for data: 314800
I0428 20:08:09.455502 31316 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:09.455512 31316 net.cpp:86] Creating Layer conv0
I0428 20:08:09.455514 31316 net.cpp:408] conv0 <- data
I0428 20:08:09.455520 31316 net.cpp:382] conv0 -> conv0
I0428 20:08:09.457365 31316 net.cpp:124] Setting up conv0
I0428 20:08:09.457406 31316 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:09.457409 31316 net.cpp:139] Memory required for data: 6074800
I0428 20:08:09.457418 31316 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:09.457427 31316 net.cpp:86] Creating Layer pool0
I0428 20:08:09.457429 31316 net.cpp:408] pool0 <- conv0
I0428 20:08:09.457435 31316 net.cpp:382] pool0 -> pool0
I0428 20:08:09.457471 31316 net.cpp:124] Setting up pool0
I0428 20:08:09.457476 31316 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:09.457479 31316 net.cpp:139] Memory required for data: 7514800
I0428 20:08:09.457482 31316 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:09.457492 31316 net.cpp:86] Creating Layer conv1
I0428 20:08:09.457495 31316 net.cpp:408] conv1 <- pool0
I0428 20:08:09.457500 31316 net.cpp:382] conv1 -> conv1
I0428 20:08:09.459734 31316 net.cpp:124] Setting up conv1
I0428 20:08:09.459761 31316 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:09.459765 31316 net.cpp:139] Memory required for data: 7770800
I0428 20:08:09.459774 31316 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:09.459779 31316 net.cpp:86] Creating Layer pool1
I0428 20:08:09.459782 31316 net.cpp:408] pool1 <- conv1
I0428 20:08:09.459789 31316 net.cpp:382] pool1 -> pool1
I0428 20:08:09.459841 31316 net.cpp:124] Setting up pool1
I0428 20:08:09.459847 31316 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:09.459849 31316 net.cpp:139] Memory required for data: 7834800
I0428 20:08:09.459852 31316 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:09.459859 31316 net.cpp:86] Creating Layer ip1
I0428 20:08:09.459862 31316 net.cpp:408] ip1 <- pool1
I0428 20:08:09.459867 31316 net.cpp:382] ip1 -> ip1
I0428 20:08:09.460007 31316 net.cpp:124] Setting up ip1
I0428 20:08:09.460026 31316 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:09.460039 31316 net.cpp:139] Memory required for data: 7844800
I0428 20:08:09.460047 31316 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:09.460052 31316 net.cpp:86] Creating Layer relu1
I0428 20:08:09.460054 31316 net.cpp:408] relu1 <- ip1
I0428 20:08:09.460060 31316 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:09.460222 31316 net.cpp:124] Setting up relu1
I0428 20:08:09.460232 31316 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:09.460234 31316 net.cpp:139] Memory required for data: 7854800
I0428 20:08:09.460238 31316 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:09.460245 31316 net.cpp:86] Creating Layer ip2
I0428 20:08:09.460249 31316 net.cpp:408] ip2 <- ip1
I0428 20:08:09.460253 31316 net.cpp:382] ip2 -> ip2
I0428 20:08:09.460350 31316 net.cpp:124] Setting up ip2
I0428 20:08:09.460356 31316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:09.460360 31316 net.cpp:139] Memory required for data: 7858800
I0428 20:08:09.460366 31316 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:09.460369 31316 net.cpp:86] Creating Layer relu2
I0428 20:08:09.460373 31316 net.cpp:408] relu2 <- ip2
I0428 20:08:09.460378 31316 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:09.460541 31316 net.cpp:124] Setting up relu2
I0428 20:08:09.460549 31316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:09.460552 31316 net.cpp:139] Memory required for data: 7862800
I0428 20:08:09.460556 31316 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:09.460561 31316 net.cpp:86] Creating Layer ip3
I0428 20:08:09.460564 31316 net.cpp:408] ip3 <- ip2
I0428 20:08:09.460568 31316 net.cpp:382] ip3 -> ip3
I0428 20:08:09.460664 31316 net.cpp:124] Setting up ip3
I0428 20:08:09.460671 31316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:09.460675 31316 net.cpp:139] Memory required for data: 7866800
I0428 20:08:09.460682 31316 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:09.460688 31316 net.cpp:86] Creating Layer relu3
I0428 20:08:09.460691 31316 net.cpp:408] relu3 <- ip3
I0428 20:08:09.460695 31316 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:09.461565 31316 net.cpp:124] Setting up relu3
I0428 20:08:09.461593 31316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:09.461596 31316 net.cpp:139] Memory required for data: 7870800
I0428 20:08:09.461616 31316 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:09.461621 31316 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:09.461624 31316 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:09.461629 31316 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:09.461635 31316 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:09.461712 31316 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:09.461720 31316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:09.461724 31316 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:09.461732 31316 net.cpp:139] Memory required for data: 7878800
I0428 20:08:09.461735 31316 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:09.461740 31316 net.cpp:86] Creating Layer accuracy
I0428 20:08:09.461743 31316 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:09.461748 31316 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:09.461755 31316 net.cpp:382] accuracy -> accuracy
I0428 20:08:09.461763 31316 net.cpp:124] Setting up accuracy
I0428 20:08:09.461767 31316 net.cpp:131] Top shape: (1)
I0428 20:08:09.461771 31316 net.cpp:139] Memory required for data: 7878804
I0428 20:08:09.461778 31316 layer_factory.hpp:77] Creating layer loss
I0428 20:08:09.461784 31316 net.cpp:86] Creating Layer loss
I0428 20:08:09.461787 31316 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:09.461791 31316 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:09.461796 31316 net.cpp:382] loss -> loss
I0428 20:08:09.461802 31316 layer_factory.hpp:77] Creating layer loss
I0428 20:08:09.462055 31316 net.cpp:124] Setting up loss
I0428 20:08:09.462064 31316 net.cpp:131] Top shape: (1)
I0428 20:08:09.462067 31316 net.cpp:134]     with loss weight 1
I0428 20:08:09.462083 31316 net.cpp:139] Memory required for data: 7878808
I0428 20:08:09.462087 31316 net.cpp:200] loss needs backward computation.
I0428 20:08:09.462091 31316 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:09.462100 31316 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:09.462105 31316 net.cpp:200] relu3 needs backward computation.
I0428 20:08:09.462106 31316 net.cpp:200] ip3 needs backward computation.
I0428 20:08:09.462110 31316 net.cpp:200] relu2 needs backward computation.
I0428 20:08:09.462112 31316 net.cpp:200] ip2 needs backward computation.
I0428 20:08:09.462116 31316 net.cpp:200] relu1 needs backward computation.
I0428 20:08:09.462117 31316 net.cpp:200] ip1 needs backward computation.
I0428 20:08:09.462121 31316 net.cpp:200] pool1 needs backward computation.
I0428 20:08:09.462123 31316 net.cpp:200] conv1 needs backward computation.
I0428 20:08:09.462126 31316 net.cpp:200] pool0 needs backward computation.
I0428 20:08:09.462129 31316 net.cpp:200] conv0 needs backward computation.
I0428 20:08:09.462133 31316 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:09.462137 31316 net.cpp:202] mnist does not need backward computation.
I0428 20:08:09.462139 31316 net.cpp:244] This network produces output accuracy
I0428 20:08:09.462142 31316 net.cpp:244] This network produces output loss
I0428 20:08:09.462154 31316 net.cpp:257] Network initialization done.
I0428 20:08:09.462194 31316 solver.cpp:56] Solver scaffolding done.
I0428 20:08:09.462533 31316 caffe.cpp:248] Starting Optimization
I0428 20:08:09.462539 31316 solver.cpp:273] Solving LeNet
I0428 20:08:09.462543 31316 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:09.463456 31316 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:09.467941 31316 blocking_queue.cpp:49] Waiting for data
I0428 20:08:09.538180 31323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:09.538784 31316 solver.cpp:398]     Test net output #0: accuracy = 0.1097
I0428 20:08:09.538823 31316 solver.cpp:398]     Test net output #1: loss = 2.30321 (* 1 = 2.30321 loss)
I0428 20:08:09.542443 31316 solver.cpp:219] Iteration 0 (0 iter/s, 0.079858s/100 iters), loss = 2.31509
I0428 20:08:09.542482 31316 solver.cpp:238]     Train net output #0: loss = 2.31509 (* 1 = 2.31509 loss)
I0428 20:08:09.542493 31316 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:09.633533 31316 solver.cpp:219] Iteration 100 (1098.23 iter/s, 0.0910558s/100 iters), loss = 1.09809
I0428 20:08:09.633574 31316 solver.cpp:238]     Train net output #0: loss = 1.09809 (* 1 = 1.09809 loss)
I0428 20:08:09.633580 31316 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:09.723677 31316 solver.cpp:219] Iteration 200 (1109.94 iter/s, 0.0900946s/100 iters), loss = 0.592776
I0428 20:08:09.723703 31316 solver.cpp:238]     Train net output #0: loss = 0.592776 (* 1 = 0.592776 loss)
I0428 20:08:09.723711 31316 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:09.820639 31316 solver.cpp:219] Iteration 300 (1031.72 iter/s, 0.0969257s/100 iters), loss = 0.890386
I0428 20:08:09.820682 31316 solver.cpp:238]     Train net output #0: loss = 0.890386 (* 1 = 0.890386 loss)
I0428 20:08:09.820688 31316 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:09.910744 31316 solver.cpp:219] Iteration 400 (1110.44 iter/s, 0.0900545s/100 iters), loss = 0.758149
I0428 20:08:09.910784 31316 solver.cpp:238]     Train net output #0: loss = 0.758149 (* 1 = 0.758149 loss)
I0428 20:08:09.910789 31316 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:09.999145 31316 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:10.073092 31323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:10.073678 31316 solver.cpp:398]     Test net output #0: accuracy = 0.7627
I0428 20:08:10.073714 31316 solver.cpp:398]     Test net output #1: loss = 0.649861 (* 1 = 0.649861 loss)
I0428 20:08:10.074726 31316 solver.cpp:219] Iteration 500 (609.966 iter/s, 0.163943s/100 iters), loss = 0.612645
I0428 20:08:10.074782 31316 solver.cpp:238]     Train net output #0: loss = 0.612645 (* 1 = 0.612645 loss)
I0428 20:08:10.074790 31316 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:10.172973 31316 solver.cpp:219] Iteration 600 (1018.49 iter/s, 0.0981842s/100 iters), loss = 0.584496
I0428 20:08:10.172997 31316 solver.cpp:238]     Train net output #0: loss = 0.584496 (* 1 = 0.584496 loss)
I0428 20:08:10.173004 31316 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:10.264363 31316 solver.cpp:219] Iteration 700 (1094.63 iter/s, 0.0913552s/100 iters), loss = 0.547668
I0428 20:08:10.264386 31316 solver.cpp:238]     Train net output #0: loss = 0.547668 (* 1 = 0.547668 loss)
I0428 20:08:10.264392 31316 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:10.354077 31316 solver.cpp:219] Iteration 800 (1115.06 iter/s, 0.0896809s/100 iters), loss = 0.878199
I0428 20:08:10.354131 31316 solver.cpp:238]     Train net output #0: loss = 0.878199 (* 1 = 0.878199 loss)
I0428 20:08:10.354137 31316 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:10.444905 31316 solver.cpp:219] Iteration 900 (1101.77 iter/s, 0.0907633s/100 iters), loss = 0.771479
I0428 20:08:10.444944 31316 solver.cpp:238]     Train net output #0: loss = 0.771479 (* 1 = 0.771479 loss)
I0428 20:08:10.444950 31316 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:10.475395 31322 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:10.535673 31316 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:10.536597 31316 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:10.537251 31316 solver.cpp:311] Iteration 1000, loss = 0.61154
I0428 20:08:10.537266 31316 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:10.614578 31323 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:10.615181 31316 solver.cpp:398]     Test net output #0: accuracy = 0.7734
I0428 20:08:10.615216 31316 solver.cpp:398]     Test net output #1: loss = 0.565445 (* 1 = 0.565445 loss)
I0428 20:08:10.615221 31316 solver.cpp:316] Optimization Done.
I0428 20:08:10.615224 31316 caffe.cpp:259] Optimization Done.
