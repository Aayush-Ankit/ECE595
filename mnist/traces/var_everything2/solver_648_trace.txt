I0428 19:51:56.806267 27399 caffe.cpp:218] Using GPUs 0
I0428 19:51:56.835336 27399 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:57.281072 27399 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test648.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:57.281225 27399 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test648.prototxt
I0428 19:51:57.281601 27399 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:57.281631 27399 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:57.281724 27399 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:57.281785 27399 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:57.281864 27399 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:57.281883 27399 net.cpp:86] Creating Layer mnist
I0428 19:51:57.281890 27399 net.cpp:382] mnist -> data
I0428 19:51:57.281908 27399 net.cpp:382] mnist -> label
I0428 19:51:57.282862 27399 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:57.285058 27399 net.cpp:124] Setting up mnist
I0428 19:51:57.285089 27399 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:57.285094 27399 net.cpp:131] Top shape: 64 (64)
I0428 19:51:57.285096 27399 net.cpp:139] Memory required for data: 200960
I0428 19:51:57.285101 27399 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:57.285126 27399 net.cpp:86] Creating Layer conv0
I0428 19:51:57.285158 27399 net.cpp:408] conv0 <- data
I0428 19:51:57.285169 27399 net.cpp:382] conv0 -> conv0
I0428 19:51:57.512497 27399 net.cpp:124] Setting up conv0
I0428 19:51:57.512522 27399 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:57.512526 27399 net.cpp:139] Memory required for data: 938240
I0428 19:51:57.512540 27399 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:57.512552 27399 net.cpp:86] Creating Layer pool0
I0428 19:51:57.512557 27399 net.cpp:408] pool0 <- conv0
I0428 19:51:57.512562 27399 net.cpp:382] pool0 -> pool0
I0428 19:51:57.512621 27399 net.cpp:124] Setting up pool0
I0428 19:51:57.512629 27399 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:57.512632 27399 net.cpp:139] Memory required for data: 1122560
I0428 19:51:57.512651 27399 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:57.512661 27399 net.cpp:86] Creating Layer conv1
I0428 19:51:57.512665 27399 net.cpp:408] conv1 <- pool0
I0428 19:51:57.512670 27399 net.cpp:382] conv1 -> conv1
I0428 19:51:57.515419 27399 net.cpp:124] Setting up conv1
I0428 19:51:57.515434 27399 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:57.515437 27399 net.cpp:139] Memory required for data: 1532160
I0428 19:51:57.515445 27399 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:57.515452 27399 net.cpp:86] Creating Layer pool1
I0428 19:51:57.515455 27399 net.cpp:408] pool1 <- conv1
I0428 19:51:57.515460 27399 net.cpp:382] pool1 -> pool1
I0428 19:51:57.515496 27399 net.cpp:124] Setting up pool1
I0428 19:51:57.515502 27399 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:57.515506 27399 net.cpp:139] Memory required for data: 1634560
I0428 19:51:57.515508 27399 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:57.515534 27399 net.cpp:86] Creating Layer ip1
I0428 19:51:57.515538 27399 net.cpp:408] ip1 <- pool1
I0428 19:51:57.515558 27399 net.cpp:382] ip1 -> ip1
I0428 19:51:57.516521 27399 net.cpp:124] Setting up ip1
I0428 19:51:57.516533 27399 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:57.516552 27399 net.cpp:139] Memory required for data: 1640960
I0428 19:51:57.516561 27399 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:57.516567 27399 net.cpp:86] Creating Layer relu1
I0428 19:51:57.516571 27399 net.cpp:408] relu1 <- ip1
I0428 19:51:57.516575 27399 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:57.516749 27399 net.cpp:124] Setting up relu1
I0428 19:51:57.516757 27399 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:57.516760 27399 net.cpp:139] Memory required for data: 1647360
I0428 19:51:57.516763 27399 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:57.516772 27399 net.cpp:86] Creating Layer ip2
I0428 19:51:57.516790 27399 net.cpp:408] ip2 <- ip1
I0428 19:51:57.516795 27399 net.cpp:382] ip2 -> ip2
I0428 19:51:57.516963 27399 net.cpp:124] Setting up ip2
I0428 19:51:57.516971 27399 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:57.516974 27399 net.cpp:139] Memory required for data: 1653760
I0428 19:51:57.516980 27399 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:57.516986 27399 net.cpp:86] Creating Layer relu2
I0428 19:51:57.516989 27399 net.cpp:408] relu2 <- ip2
I0428 19:51:57.516994 27399 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:57.517809 27399 net.cpp:124] Setting up relu2
I0428 19:51:57.517820 27399 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:57.517839 27399 net.cpp:139] Memory required for data: 1660160
I0428 19:51:57.517843 27399 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:57.517849 27399 net.cpp:86] Creating Layer ip3
I0428 19:51:57.517853 27399 net.cpp:408] ip3 <- ip2
I0428 19:51:57.517858 27399 net.cpp:382] ip3 -> ip3
I0428 19:51:57.517967 27399 net.cpp:124] Setting up ip3
I0428 19:51:57.517974 27399 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:57.517977 27399 net.cpp:139] Memory required for data: 1662720
I0428 19:51:57.517984 27399 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:57.517990 27399 net.cpp:86] Creating Layer relu3
I0428 19:51:57.517993 27399 net.cpp:408] relu3 <- ip3
I0428 19:51:57.517997 27399 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:57.518149 27399 net.cpp:124] Setting up relu3
I0428 19:51:57.518157 27399 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:57.518160 27399 net.cpp:139] Memory required for data: 1665280
I0428 19:51:57.518163 27399 layer_factory.hpp:77] Creating layer loss
I0428 19:51:57.518169 27399 net.cpp:86] Creating Layer loss
I0428 19:51:57.518172 27399 net.cpp:408] loss <- ip3
I0428 19:51:57.518177 27399 net.cpp:408] loss <- label
I0428 19:51:57.518182 27399 net.cpp:382] loss -> loss
I0428 19:51:57.518198 27399 layer_factory.hpp:77] Creating layer loss
I0428 19:51:57.518405 27399 net.cpp:124] Setting up loss
I0428 19:51:57.518414 27399 net.cpp:131] Top shape: (1)
I0428 19:51:57.518417 27399 net.cpp:134]     with loss weight 1
I0428 19:51:57.518432 27399 net.cpp:139] Memory required for data: 1665284
I0428 19:51:57.518435 27399 net.cpp:200] loss needs backward computation.
I0428 19:51:57.518438 27399 net.cpp:200] relu3 needs backward computation.
I0428 19:51:57.518442 27399 net.cpp:200] ip3 needs backward computation.
I0428 19:51:57.518445 27399 net.cpp:200] relu2 needs backward computation.
I0428 19:51:57.518447 27399 net.cpp:200] ip2 needs backward computation.
I0428 19:51:57.518450 27399 net.cpp:200] relu1 needs backward computation.
I0428 19:51:57.518453 27399 net.cpp:200] ip1 needs backward computation.
I0428 19:51:57.518456 27399 net.cpp:200] pool1 needs backward computation.
I0428 19:51:57.518460 27399 net.cpp:200] conv1 needs backward computation.
I0428 19:51:57.518462 27399 net.cpp:200] pool0 needs backward computation.
I0428 19:51:57.518465 27399 net.cpp:200] conv0 needs backward computation.
I0428 19:51:57.518468 27399 net.cpp:202] mnist does not need backward computation.
I0428 19:51:57.518471 27399 net.cpp:244] This network produces output loss
I0428 19:51:57.518481 27399 net.cpp:257] Network initialization done.
I0428 19:51:57.518863 27399 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test648.prototxt
I0428 19:51:57.518919 27399 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:57.519006 27399 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:57.519081 27399 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:57.519124 27399 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:57.519153 27399 net.cpp:86] Creating Layer mnist
I0428 19:51:57.519158 27399 net.cpp:382] mnist -> data
I0428 19:51:57.519165 27399 net.cpp:382] mnist -> label
I0428 19:51:57.519243 27399 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:57.521425 27399 net.cpp:124] Setting up mnist
I0428 19:51:57.521438 27399 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:57.521445 27399 net.cpp:131] Top shape: 100 (100)
I0428 19:51:57.521447 27399 net.cpp:139] Memory required for data: 314000
I0428 19:51:57.521450 27399 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:57.521484 27399 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:57.521489 27399 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:57.521509 27399 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:57.521517 27399 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:57.521555 27399 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:57.521562 27399 net.cpp:131] Top shape: 100 (100)
I0428 19:51:57.521582 27399 net.cpp:131] Top shape: 100 (100)
I0428 19:51:57.521584 27399 net.cpp:139] Memory required for data: 314800
I0428 19:51:57.521587 27399 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:57.521595 27399 net.cpp:86] Creating Layer conv0
I0428 19:51:57.521598 27399 net.cpp:408] conv0 <- data
I0428 19:51:57.521603 27399 net.cpp:382] conv0 -> conv0
I0428 19:51:57.523187 27399 net.cpp:124] Setting up conv0
I0428 19:51:57.523216 27399 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:57.523219 27399 net.cpp:139] Memory required for data: 1466800
I0428 19:51:57.523243 27399 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:57.523249 27399 net.cpp:86] Creating Layer pool0
I0428 19:51:57.523252 27399 net.cpp:408] pool0 <- conv0
I0428 19:51:57.523257 27399 net.cpp:382] pool0 -> pool0
I0428 19:51:57.523289 27399 net.cpp:124] Setting up pool0
I0428 19:51:57.523294 27399 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:57.523298 27399 net.cpp:139] Memory required for data: 1754800
I0428 19:51:57.523300 27399 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:57.523308 27399 net.cpp:86] Creating Layer conv1
I0428 19:51:57.523310 27399 net.cpp:408] conv1 <- pool0
I0428 19:51:57.523315 27399 net.cpp:382] conv1 -> conv1
I0428 19:51:57.525455 27399 net.cpp:124] Setting up conv1
I0428 19:51:57.525483 27399 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:57.525487 27399 net.cpp:139] Memory required for data: 2394800
I0428 19:51:57.525496 27399 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:57.525516 27399 net.cpp:86] Creating Layer pool1
I0428 19:51:57.525519 27399 net.cpp:408] pool1 <- conv1
I0428 19:51:57.525524 27399 net.cpp:382] pool1 -> pool1
I0428 19:51:57.525594 27399 net.cpp:124] Setting up pool1
I0428 19:51:57.525601 27399 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:57.525604 27399 net.cpp:139] Memory required for data: 2554800
I0428 19:51:57.525607 27399 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:57.525612 27399 net.cpp:86] Creating Layer ip1
I0428 19:51:57.525615 27399 net.cpp:408] ip1 <- pool1
I0428 19:51:57.525619 27399 net.cpp:382] ip1 -> ip1
I0428 19:51:57.525786 27399 net.cpp:124] Setting up ip1
I0428 19:51:57.525795 27399 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:57.525809 27399 net.cpp:139] Memory required for data: 2564800
I0428 19:51:57.525815 27399 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:57.525820 27399 net.cpp:86] Creating Layer relu1
I0428 19:51:57.525823 27399 net.cpp:408] relu1 <- ip1
I0428 19:51:57.525828 27399 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:57.525980 27399 net.cpp:124] Setting up relu1
I0428 19:51:57.525988 27399 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:57.525991 27399 net.cpp:139] Memory required for data: 2574800
I0428 19:51:57.525995 27399 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:57.526007 27399 net.cpp:86] Creating Layer ip2
I0428 19:51:57.526010 27399 net.cpp:408] ip2 <- ip1
I0428 19:51:57.526015 27399 net.cpp:382] ip2 -> ip2
I0428 19:51:57.526129 27399 net.cpp:124] Setting up ip2
I0428 19:51:57.526136 27399 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:57.526140 27399 net.cpp:139] Memory required for data: 2584800
I0428 19:51:57.526145 27399 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:57.526150 27399 net.cpp:86] Creating Layer relu2
I0428 19:51:57.526154 27399 net.cpp:408] relu2 <- ip2
I0428 19:51:57.526157 27399 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:57.526319 27399 net.cpp:124] Setting up relu2
I0428 19:51:57.526327 27399 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:57.526331 27399 net.cpp:139] Memory required for data: 2594800
I0428 19:51:57.526335 27399 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:57.526340 27399 net.cpp:86] Creating Layer ip3
I0428 19:51:57.526342 27399 net.cpp:408] ip3 <- ip2
I0428 19:51:57.526348 27399 net.cpp:382] ip3 -> ip3
I0428 19:51:57.526456 27399 net.cpp:124] Setting up ip3
I0428 19:51:57.526463 27399 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:57.526466 27399 net.cpp:139] Memory required for data: 2598800
I0428 19:51:57.526474 27399 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:57.526479 27399 net.cpp:86] Creating Layer relu3
I0428 19:51:57.526481 27399 net.cpp:408] relu3 <- ip3
I0428 19:51:57.526485 27399 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:57.527343 27399 net.cpp:124] Setting up relu3
I0428 19:51:57.527354 27399 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:57.527372 27399 net.cpp:139] Memory required for data: 2602800
I0428 19:51:57.527375 27399 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:57.527380 27399 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:57.527384 27399 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:57.527390 27399 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:57.527396 27399 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:57.527460 27399 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:57.527473 27399 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:57.527477 27399 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:57.527480 27399 net.cpp:139] Memory required for data: 2610800
I0428 19:51:57.527483 27399 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:57.527488 27399 net.cpp:86] Creating Layer accuracy
I0428 19:51:57.527493 27399 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:57.527495 27399 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:57.527500 27399 net.cpp:382] accuracy -> accuracy
I0428 19:51:57.527506 27399 net.cpp:124] Setting up accuracy
I0428 19:51:57.527510 27399 net.cpp:131] Top shape: (1)
I0428 19:51:57.527514 27399 net.cpp:139] Memory required for data: 2610804
I0428 19:51:57.527516 27399 layer_factory.hpp:77] Creating layer loss
I0428 19:51:57.527520 27399 net.cpp:86] Creating Layer loss
I0428 19:51:57.527523 27399 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:57.527528 27399 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:57.527537 27399 net.cpp:382] loss -> loss
I0428 19:51:57.527544 27399 layer_factory.hpp:77] Creating layer loss
I0428 19:51:57.527773 27399 net.cpp:124] Setting up loss
I0428 19:51:57.527781 27399 net.cpp:131] Top shape: (1)
I0428 19:51:57.527786 27399 net.cpp:134]     with loss weight 1
I0428 19:51:57.527791 27399 net.cpp:139] Memory required for data: 2610808
I0428 19:51:57.527804 27399 net.cpp:200] loss needs backward computation.
I0428 19:51:57.527808 27399 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:57.527812 27399 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:57.527815 27399 net.cpp:200] relu3 needs backward computation.
I0428 19:51:57.527819 27399 net.cpp:200] ip3 needs backward computation.
I0428 19:51:57.527822 27399 net.cpp:200] relu2 needs backward computation.
I0428 19:51:57.527824 27399 net.cpp:200] ip2 needs backward computation.
I0428 19:51:57.527828 27399 net.cpp:200] relu1 needs backward computation.
I0428 19:51:57.527830 27399 net.cpp:200] ip1 needs backward computation.
I0428 19:51:57.527840 27399 net.cpp:200] pool1 needs backward computation.
I0428 19:51:57.527843 27399 net.cpp:200] conv1 needs backward computation.
I0428 19:51:57.527847 27399 net.cpp:200] pool0 needs backward computation.
I0428 19:51:57.527849 27399 net.cpp:200] conv0 needs backward computation.
I0428 19:51:57.527853 27399 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:57.527858 27399 net.cpp:202] mnist does not need backward computation.
I0428 19:51:57.527860 27399 net.cpp:244] This network produces output accuracy
I0428 19:51:57.527863 27399 net.cpp:244] This network produces output loss
I0428 19:51:57.527873 27399 net.cpp:257] Network initialization done.
I0428 19:51:57.527912 27399 solver.cpp:56] Solver scaffolding done.
I0428 19:51:57.528255 27399 caffe.cpp:248] Starting Optimization
I0428 19:51:57.528260 27399 solver.cpp:273] Solving LeNet
I0428 19:51:57.528264 27399 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:57.529153 27399 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:57.532784 27399 blocking_queue.cpp:49] Waiting for data
I0428 19:51:57.604964 27406 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:57.605568 27399 solver.cpp:398]     Test net output #0: accuracy = 0.113
I0428 19:51:57.605603 27399 solver.cpp:398]     Test net output #1: loss = 2.30277 (* 1 = 2.30277 loss)
I0428 19:51:57.607307 27399 solver.cpp:219] Iteration 0 (0 iter/s, 0.0789883s/100 iters), loss = 2.30847
I0428 19:51:57.607353 27399 solver.cpp:238]     Train net output #0: loss = 2.30847 (* 1 = 2.30847 loss)
I0428 19:51:57.607365 27399 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:57.702693 27399 solver.cpp:219] Iteration 100 (1048.99 iter/s, 0.09533s/100 iters), loss = 1.12919
I0428 19:51:57.702738 27399 solver.cpp:238]     Train net output #0: loss = 1.12919 (* 1 = 1.12919 loss)
I0428 19:51:57.702759 27399 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:57.792606 27399 solver.cpp:219] Iteration 200 (1112.84 iter/s, 0.0898601s/100 iters), loss = 0.893577
I0428 19:51:57.792647 27399 solver.cpp:238]     Train net output #0: loss = 0.893577 (* 1 = 0.893577 loss)
I0428 19:51:57.792654 27399 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:57.877761 27399 solver.cpp:219] Iteration 300 (1174.8 iter/s, 0.085121s/100 iters), loss = 0.463756
I0428 19:51:57.877802 27399 solver.cpp:238]     Train net output #0: loss = 0.463756 (* 1 = 0.463756 loss)
I0428 19:51:57.877810 27399 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:57.962719 27399 solver.cpp:219] Iteration 400 (1177.53 iter/s, 0.0849235s/100 iters), loss = 0.190366
I0428 19:51:57.962760 27399 solver.cpp:238]     Train net output #0: loss = 0.190366 (* 1 = 0.190366 loss)
I0428 19:51:57.962766 27399 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:58.045471 27399 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:58.098752 27406 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:58.099306 27399 solver.cpp:398]     Test net output #0: accuracy = 0.9485
I0428 19:51:58.099344 27399 solver.cpp:398]     Test net output #1: loss = 0.171668 (* 1 = 0.171668 loss)
I0428 19:51:58.100221 27399 solver.cpp:219] Iteration 500 (727.546 iter/s, 0.137448s/100 iters), loss = 0.152801
I0428 19:51:58.100260 27399 solver.cpp:238]     Train net output #0: loss = 0.152801 (* 1 = 0.152801 loss)
I0428 19:51:58.100302 27399 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:58.189167 27399 solver.cpp:219] Iteration 600 (1124.85 iter/s, 0.088901s/100 iters), loss = 0.160627
I0428 19:51:58.189209 27399 solver.cpp:238]     Train net output #0: loss = 0.160627 (* 1 = 0.160627 loss)
I0428 19:51:58.189216 27399 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:58.288872 27399 solver.cpp:219] Iteration 700 (1003.48 iter/s, 0.0996534s/100 iters), loss = 0.195094
I0428 19:51:58.288915 27399 solver.cpp:238]     Train net output #0: loss = 0.195094 (* 1 = 0.195094 loss)
I0428 19:51:58.288923 27399 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:58.380055 27399 solver.cpp:219] Iteration 800 (1097.32 iter/s, 0.0911309s/100 iters), loss = 0.293653
I0428 19:51:58.380097 27399 solver.cpp:238]     Train net output #0: loss = 0.293653 (* 1 = 0.293653 loss)
I0428 19:51:58.380103 27399 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:58.465121 27399 solver.cpp:219] Iteration 900 (1176.3 iter/s, 0.0850125s/100 iters), loss = 0.261233
I0428 19:51:58.465145 27399 solver.cpp:238]     Train net output #0: loss = 0.261233 (* 1 = 0.261233 loss)
I0428 19:51:58.465152 27399 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:58.492611 27405 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:58.547654 27399 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:58.548617 27399 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:58.549121 27399 solver.cpp:311] Iteration 1000, loss = 0.185666
I0428 19:51:58.549139 27399 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:58.602557 27406 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:58.603092 27399 solver.cpp:398]     Test net output #0: accuracy = 0.9705
I0428 19:51:58.603128 27399 solver.cpp:398]     Test net output #1: loss = 0.0960254 (* 1 = 0.0960254 loss)
I0428 19:51:58.603133 27399 solver.cpp:316] Optimization Done.
I0428 19:51:58.603137 27399 caffe.cpp:259] Optimization Done.
