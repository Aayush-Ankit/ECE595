I0428 20:00:06.466058 29401 caffe.cpp:218] Using GPUs 0
I0428 20:00:06.496994 29401 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:07.002810 29401 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test867.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:07.002979 29401 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test867.prototxt
I0428 20:00:07.003363 29401 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:07.003387 29401 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:07.003491 29401 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:00:07.003600 29401 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:07.003738 29401 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:07.003772 29401 net.cpp:86] Creating Layer mnist
I0428 20:00:07.003785 29401 net.cpp:382] mnist -> data
I0428 20:00:07.003815 29401 net.cpp:382] mnist -> label
I0428 20:00:07.005051 29401 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:07.007511 29401 net.cpp:124] Setting up mnist
I0428 20:00:07.007531 29401 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:07.007561 29401 net.cpp:131] Top shape: 64 (64)
I0428 20:00:07.007570 29401 net.cpp:139] Memory required for data: 200960
I0428 20:00:07.007580 29401 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:07.007602 29401 net.cpp:86] Creating Layer conv0
I0428 20:00:07.007612 29401 net.cpp:408] conv0 <- data
I0428 20:00:07.007632 29401 net.cpp:382] conv0 -> conv0
I0428 20:00:07.247941 29401 net.cpp:124] Setting up conv0
I0428 20:00:07.247970 29401 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:07.247975 29401 net.cpp:139] Memory required for data: 1675520
I0428 20:00:07.248034 29401 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:07.248054 29401 net.cpp:86] Creating Layer pool0
I0428 20:00:07.248062 29401 net.cpp:408] pool0 <- conv0
I0428 20:00:07.248071 29401 net.cpp:382] pool0 -> pool0
I0428 20:00:07.248123 29401 net.cpp:124] Setting up pool0
I0428 20:00:07.248131 29401 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:07.248136 29401 net.cpp:139] Memory required for data: 2044160
I0428 20:00:07.248142 29401 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:07.248157 29401 net.cpp:86] Creating Layer conv1
I0428 20:00:07.248164 29401 net.cpp:408] conv1 <- pool0
I0428 20:00:07.248172 29401 net.cpp:382] conv1 -> conv1
I0428 20:00:07.251003 29401 net.cpp:124] Setting up conv1
I0428 20:00:07.251018 29401 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:07.251024 29401 net.cpp:139] Memory required for data: 2453760
I0428 20:00:07.251049 29401 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:07.251060 29401 net.cpp:86] Creating Layer pool1
I0428 20:00:07.251066 29401 net.cpp:408] pool1 <- conv1
I0428 20:00:07.251075 29401 net.cpp:382] pool1 -> pool1
I0428 20:00:07.251117 29401 net.cpp:124] Setting up pool1
I0428 20:00:07.251127 29401 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:07.251130 29401 net.cpp:139] Memory required for data: 2556160
I0428 20:00:07.251135 29401 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:07.251147 29401 net.cpp:86] Creating Layer ip1
I0428 20:00:07.251155 29401 net.cpp:408] ip1 <- pool1
I0428 20:00:07.251163 29401 net.cpp:382] ip1 -> ip1
I0428 20:00:07.251392 29401 net.cpp:124] Setting up ip1
I0428 20:00:07.251402 29401 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:07.251407 29401 net.cpp:139] Memory required for data: 2568960
I0428 20:00:07.251418 29401 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:07.251430 29401 net.cpp:86] Creating Layer relu1
I0428 20:00:07.251436 29401 net.cpp:408] relu1 <- ip1
I0428 20:00:07.251443 29401 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:07.251626 29401 net.cpp:124] Setting up relu1
I0428 20:00:07.251651 29401 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:07.251654 29401 net.cpp:139] Memory required for data: 2581760
I0428 20:00:07.251658 29401 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:07.251669 29401 net.cpp:86] Creating Layer ip2
I0428 20:00:07.251674 29401 net.cpp:408] ip2 <- ip1
I0428 20:00:07.251683 29401 net.cpp:382] ip2 -> ip2
I0428 20:00:07.251780 29401 net.cpp:124] Setting up ip2
I0428 20:00:07.251788 29401 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:07.251793 29401 net.cpp:139] Memory required for data: 2584320
I0428 20:00:07.251801 29401 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:07.251809 29401 net.cpp:86] Creating Layer relu2
I0428 20:00:07.251816 29401 net.cpp:408] relu2 <- ip2
I0428 20:00:07.251821 29401 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:07.252511 29401 net.cpp:124] Setting up relu2
I0428 20:00:07.252524 29401 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:07.252529 29401 net.cpp:139] Memory required for data: 2586880
I0428 20:00:07.252534 29401 layer_factory.hpp:77] Creating layer loss
I0428 20:00:07.252562 29401 net.cpp:86] Creating Layer loss
I0428 20:00:07.252566 29401 net.cpp:408] loss <- ip2
I0428 20:00:07.252573 29401 net.cpp:408] loss <- label
I0428 20:00:07.252583 29401 net.cpp:382] loss -> loss
I0428 20:00:07.252619 29401 layer_factory.hpp:77] Creating layer loss
I0428 20:00:07.252971 29401 net.cpp:124] Setting up loss
I0428 20:00:07.252985 29401 net.cpp:131] Top shape: (1)
I0428 20:00:07.252990 29401 net.cpp:134]     with loss weight 1
I0428 20:00:07.253010 29401 net.cpp:139] Memory required for data: 2586884
I0428 20:00:07.253016 29401 net.cpp:200] loss needs backward computation.
I0428 20:00:07.253022 29401 net.cpp:200] relu2 needs backward computation.
I0428 20:00:07.253027 29401 net.cpp:200] ip2 needs backward computation.
I0428 20:00:07.253036 29401 net.cpp:200] relu1 needs backward computation.
I0428 20:00:07.253039 29401 net.cpp:200] ip1 needs backward computation.
I0428 20:00:07.253057 29401 net.cpp:200] pool1 needs backward computation.
I0428 20:00:07.253063 29401 net.cpp:200] conv1 needs backward computation.
I0428 20:00:07.253068 29401 net.cpp:200] pool0 needs backward computation.
I0428 20:00:07.253073 29401 net.cpp:200] conv0 needs backward computation.
I0428 20:00:07.253079 29401 net.cpp:202] mnist does not need backward computation.
I0428 20:00:07.253084 29401 net.cpp:244] This network produces output loss
I0428 20:00:07.253098 29401 net.cpp:257] Network initialization done.
I0428 20:00:07.253480 29401 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test867.prototxt
I0428 20:00:07.253512 29401 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:07.253605 29401 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:00:07.253720 29401 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:07.253793 29401 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:07.253810 29401 net.cpp:86] Creating Layer mnist
I0428 20:00:07.253818 29401 net.cpp:382] mnist -> data
I0428 20:00:07.253829 29401 net.cpp:382] mnist -> label
I0428 20:00:07.253955 29401 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:07.256219 29401 net.cpp:124] Setting up mnist
I0428 20:00:07.256248 29401 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:07.256258 29401 net.cpp:131] Top shape: 100 (100)
I0428 20:00:07.256263 29401 net.cpp:139] Memory required for data: 314000
I0428 20:00:07.256268 29401 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:07.256278 29401 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:07.256283 29401 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:07.256290 29401 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:07.256300 29401 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:07.256402 29401 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:07.256412 29401 net.cpp:131] Top shape: 100 (100)
I0428 20:00:07.256417 29401 net.cpp:131] Top shape: 100 (100)
I0428 20:00:07.256422 29401 net.cpp:139] Memory required for data: 314800
I0428 20:00:07.256428 29401 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:07.256443 29401 net.cpp:86] Creating Layer conv0
I0428 20:00:07.256449 29401 net.cpp:408] conv0 <- data
I0428 20:00:07.256459 29401 net.cpp:382] conv0 -> conv0
I0428 20:00:07.258163 29401 net.cpp:124] Setting up conv0
I0428 20:00:07.258178 29401 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:07.258184 29401 net.cpp:139] Memory required for data: 2618800
I0428 20:00:07.258198 29401 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:07.258208 29401 net.cpp:86] Creating Layer pool0
I0428 20:00:07.258214 29401 net.cpp:408] pool0 <- conv0
I0428 20:00:07.258222 29401 net.cpp:382] pool0 -> pool0
I0428 20:00:07.258265 29401 net.cpp:124] Setting up pool0
I0428 20:00:07.258273 29401 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:07.258277 29401 net.cpp:139] Memory required for data: 3194800
I0428 20:00:07.258282 29401 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:07.258296 29401 net.cpp:86] Creating Layer conv1
I0428 20:00:07.258302 29401 net.cpp:408] conv1 <- pool0
I0428 20:00:07.258312 29401 net.cpp:382] conv1 -> conv1
I0428 20:00:07.260548 29401 net.cpp:124] Setting up conv1
I0428 20:00:07.260562 29401 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:07.260568 29401 net.cpp:139] Memory required for data: 3834800
I0428 20:00:07.260597 29401 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:07.260608 29401 net.cpp:86] Creating Layer pool1
I0428 20:00:07.260620 29401 net.cpp:408] pool1 <- conv1
I0428 20:00:07.260630 29401 net.cpp:382] pool1 -> pool1
I0428 20:00:07.260676 29401 net.cpp:124] Setting up pool1
I0428 20:00:07.260684 29401 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:07.260689 29401 net.cpp:139] Memory required for data: 3994800
I0428 20:00:07.260694 29401 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:07.260704 29401 net.cpp:86] Creating Layer ip1
I0428 20:00:07.260710 29401 net.cpp:408] ip1 <- pool1
I0428 20:00:07.260717 29401 net.cpp:382] ip1 -> ip1
I0428 20:00:07.261025 29401 net.cpp:124] Setting up ip1
I0428 20:00:07.261036 29401 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:07.261041 29401 net.cpp:139] Memory required for data: 4014800
I0428 20:00:07.261054 29401 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:07.261063 29401 net.cpp:86] Creating Layer relu1
I0428 20:00:07.261070 29401 net.cpp:408] relu1 <- ip1
I0428 20:00:07.261078 29401 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:07.261281 29401 net.cpp:124] Setting up relu1
I0428 20:00:07.261291 29401 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:07.261297 29401 net.cpp:139] Memory required for data: 4034800
I0428 20:00:07.261301 29401 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:07.261314 29401 net.cpp:86] Creating Layer ip2
I0428 20:00:07.261335 29401 net.cpp:408] ip2 <- ip1
I0428 20:00:07.261344 29401 net.cpp:382] ip2 -> ip2
I0428 20:00:07.261452 29401 net.cpp:124] Setting up ip2
I0428 20:00:07.261461 29401 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:07.261464 29401 net.cpp:139] Memory required for data: 4038800
I0428 20:00:07.261473 29401 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:07.261482 29401 net.cpp:86] Creating Layer relu2
I0428 20:00:07.261488 29401 net.cpp:408] relu2 <- ip2
I0428 20:00:07.261494 29401 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:07.261675 29401 net.cpp:124] Setting up relu2
I0428 20:00:07.261685 29401 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:07.261690 29401 net.cpp:139] Memory required for data: 4042800
I0428 20:00:07.261696 29401 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:00:07.261703 29401 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:00:07.261708 29401 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:00:07.261715 29401 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:00:07.261737 29401 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:00:07.261785 29401 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:00:07.261792 29401 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:07.261798 29401 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:07.261803 29401 net.cpp:139] Memory required for data: 4050800
I0428 20:00:07.261808 29401 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:07.261817 29401 net.cpp:86] Creating Layer accuracy
I0428 20:00:07.261822 29401 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:00:07.261829 29401 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:07.261837 29401 net.cpp:382] accuracy -> accuracy
I0428 20:00:07.261847 29401 net.cpp:124] Setting up accuracy
I0428 20:00:07.261854 29401 net.cpp:131] Top shape: (1)
I0428 20:00:07.261860 29401 net.cpp:139] Memory required for data: 4050804
I0428 20:00:07.261865 29401 layer_factory.hpp:77] Creating layer loss
I0428 20:00:07.261873 29401 net.cpp:86] Creating Layer loss
I0428 20:00:07.261879 29401 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:00:07.261885 29401 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:07.261893 29401 net.cpp:382] loss -> loss
I0428 20:00:07.261901 29401 layer_factory.hpp:77] Creating layer loss
I0428 20:00:07.262198 29401 net.cpp:124] Setting up loss
I0428 20:00:07.262225 29401 net.cpp:131] Top shape: (1)
I0428 20:00:07.262230 29401 net.cpp:134]     with loss weight 1
I0428 20:00:07.262240 29401 net.cpp:139] Memory required for data: 4050808
I0428 20:00:07.262248 29401 net.cpp:200] loss needs backward computation.
I0428 20:00:07.262255 29401 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:07.262261 29401 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:00:07.262266 29401 net.cpp:200] relu2 needs backward computation.
I0428 20:00:07.262279 29401 net.cpp:200] ip2 needs backward computation.
I0428 20:00:07.262285 29401 net.cpp:200] relu1 needs backward computation.
I0428 20:00:07.262291 29401 net.cpp:200] ip1 needs backward computation.
I0428 20:00:07.262296 29401 net.cpp:200] pool1 needs backward computation.
I0428 20:00:07.262302 29401 net.cpp:200] conv1 needs backward computation.
I0428 20:00:07.262308 29401 net.cpp:200] pool0 needs backward computation.
I0428 20:00:07.262313 29401 net.cpp:200] conv0 needs backward computation.
I0428 20:00:07.262320 29401 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:07.262328 29401 net.cpp:202] mnist does not need backward computation.
I0428 20:00:07.262339 29401 net.cpp:244] This network produces output accuracy
I0428 20:00:07.262352 29401 net.cpp:244] This network produces output loss
I0428 20:00:07.262369 29401 net.cpp:257] Network initialization done.
I0428 20:00:07.262414 29401 solver.cpp:56] Solver scaffolding done.
I0428 20:00:07.262722 29401 caffe.cpp:248] Starting Optimization
I0428 20:00:07.262728 29401 solver.cpp:273] Solving LeNet
I0428 20:00:07.262733 29401 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:07.263622 29401 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:07.267251 29401 blocking_queue.cpp:49] Waiting for data
I0428 20:00:07.340011 29408 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:07.340519 29401 solver.cpp:398]     Test net output #0: accuracy = 0.1219
I0428 20:00:07.340541 29401 solver.cpp:398]     Test net output #1: loss = 2.31334 (* 1 = 2.31334 loss)
I0428 20:00:07.343005 29401 solver.cpp:219] Iteration 0 (0 iter/s, 0.0802335s/100 iters), loss = 2.2956
I0428 20:00:07.343039 29401 solver.cpp:238]     Train net output #0: loss = 2.2956 (* 1 = 2.2956 loss)
I0428 20:00:07.343062 29401 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:07.441424 29401 solver.cpp:219] Iteration 100 (1016.55 iter/s, 0.0983718s/100 iters), loss = 0.55863
I0428 20:00:07.441453 29401 solver.cpp:238]     Train net output #0: loss = 0.55863 (* 1 = 0.55863 loss)
I0428 20:00:07.441479 29401 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:07.525797 29401 solver.cpp:219] Iteration 200 (1185.91 iter/s, 0.0843233s/100 iters), loss = 0.619357
I0428 20:00:07.525838 29401 solver.cpp:238]     Train net output #0: loss = 0.619357 (* 1 = 0.619357 loss)
I0428 20:00:07.525863 29401 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:07.611011 29401 solver.cpp:219] Iteration 300 (1174.16 iter/s, 0.0851671s/100 iters), loss = 0.378309
I0428 20:00:07.611039 29401 solver.cpp:238]     Train net output #0: loss = 0.378309 (* 1 = 0.378309 loss)
I0428 20:00:07.611064 29401 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:07.703661 29401 solver.cpp:219] Iteration 400 (1079.74 iter/s, 0.0926145s/100 iters), loss = 0.37519
I0428 20:00:07.703691 29401 solver.cpp:238]     Train net output #0: loss = 0.37519 (* 1 = 0.37519 loss)
I0428 20:00:07.703701 29401 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:07.786453 29401 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:07.863168 29408 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:07.863688 29401 solver.cpp:398]     Test net output #0: accuracy = 0.8707
I0428 20:00:07.863709 29401 solver.cpp:398]     Test net output #1: loss = 0.340584 (* 1 = 0.340584 loss)
I0428 20:00:07.864579 29401 solver.cpp:219] Iteration 500 (621.595 iter/s, 0.160877s/100 iters), loss = 0.266775
I0428 20:00:07.864614 29401 solver.cpp:238]     Train net output #0: loss = 0.266775 (* 1 = 0.266775 loss)
I0428 20:00:07.864655 29401 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:07.959465 29401 solver.cpp:219] Iteration 600 (1054.4 iter/s, 0.0948408s/100 iters), loss = 0.443791
I0428 20:00:07.959493 29401 solver.cpp:238]     Train net output #0: loss = 0.443791 (* 1 = 0.443791 loss)
I0428 20:00:07.959518 29401 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:08.044649 29401 solver.cpp:219] Iteration 700 (1174.4 iter/s, 0.0851496s/100 iters), loss = 0.286448
I0428 20:00:08.044678 29401 solver.cpp:238]     Train net output #0: loss = 0.286448 (* 1 = 0.286448 loss)
I0428 20:00:08.044704 29401 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:08.129585 29401 solver.cpp:219] Iteration 800 (1177.89 iter/s, 0.0848978s/100 iters), loss = 0.485447
I0428 20:00:08.129613 29401 solver.cpp:238]     Train net output #0: loss = 0.485447 (* 1 = 0.485447 loss)
I0428 20:00:08.129638 29401 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:08.214252 29401 solver.cpp:219] Iteration 900 (1181.59 iter/s, 0.0846316s/100 iters), loss = 0.633309
I0428 20:00:08.214282 29401 solver.cpp:238]     Train net output #0: loss = 0.63331 (* 1 = 0.63331 loss)
I0428 20:00:08.214306 29401 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:08.242384 29407 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:08.297238 29401 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:08.298336 29401 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:08.299015 29401 solver.cpp:311] Iteration 1000, loss = 0.381356
I0428 20:00:08.299031 29401 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:08.374853 29408 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:08.375389 29401 solver.cpp:398]     Test net output #0: accuracy = 0.873
I0428 20:00:08.375411 29401 solver.cpp:398]     Test net output #1: loss = 0.319094 (* 1 = 0.319094 loss)
I0428 20:00:08.375419 29401 solver.cpp:316] Optimization Done.
I0428 20:00:08.375424 29401 caffe.cpp:259] Optimization Done.
