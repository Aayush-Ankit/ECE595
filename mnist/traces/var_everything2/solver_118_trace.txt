I0428 19:31:18.271637 22544 caffe.cpp:218] Using GPUs 0
I0428 19:31:18.312832 22544 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:18.826532 22544 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test118.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:18.826706 22544 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test118.prototxt
I0428 19:31:18.827002 22544 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:18.827018 22544 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:18.827100 22544 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:31:18.827180 22544 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:18.827316 22544 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:18.827349 22544 net.cpp:86] Creating Layer mnist
I0428 19:31:18.827361 22544 net.cpp:382] mnist -> data
I0428 19:31:18.827394 22544 net.cpp:382] mnist -> label
I0428 19:31:18.828528 22544 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:18.831001 22544 net.cpp:124] Setting up mnist
I0428 19:31:18.831020 22544 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:18.831032 22544 net.cpp:131] Top shape: 64 (64)
I0428 19:31:18.831038 22544 net.cpp:139] Memory required for data: 200960
I0428 19:31:18.831049 22544 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:18.831073 22544 net.cpp:86] Creating Layer conv0
I0428 19:31:18.831084 22544 net.cpp:408] conv0 <- data
I0428 19:31:18.831101 22544 net.cpp:382] conv0 -> conv0
I0428 19:31:19.118222 22544 net.cpp:124] Setting up conv0
I0428 19:31:19.118252 22544 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:19.118258 22544 net.cpp:139] Memory required for data: 1675520
I0428 19:31:19.118278 22544 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:19.118295 22544 net.cpp:86] Creating Layer pool0
I0428 19:31:19.118311 22544 net.cpp:408] pool0 <- conv0
I0428 19:31:19.118321 22544 net.cpp:382] pool0 -> pool0
I0428 19:31:19.118379 22544 net.cpp:124] Setting up pool0
I0428 19:31:19.118388 22544 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:19.118393 22544 net.cpp:139] Memory required for data: 2044160
I0428 19:31:19.118398 22544 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:19.118409 22544 net.cpp:86] Creating Layer ip1
I0428 19:31:19.118415 22544 net.cpp:408] ip1 <- pool0
I0428 19:31:19.118423 22544 net.cpp:382] ip1 -> ip1
I0428 19:31:19.119426 22544 net.cpp:124] Setting up ip1
I0428 19:31:19.119441 22544 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:19.119469 22544 net.cpp:139] Memory required for data: 2046720
I0428 19:31:19.119483 22544 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:19.119495 22544 net.cpp:86] Creating Layer relu1
I0428 19:31:19.119504 22544 net.cpp:408] relu1 <- ip1
I0428 19:31:19.119513 22544 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:19.119678 22544 net.cpp:124] Setting up relu1
I0428 19:31:19.119689 22544 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:19.119694 22544 net.cpp:139] Memory required for data: 2049280
I0428 19:31:19.119699 22544 layer_factory.hpp:77] Creating layer loss
I0428 19:31:19.119709 22544 net.cpp:86] Creating Layer loss
I0428 19:31:19.119714 22544 net.cpp:408] loss <- ip1
I0428 19:31:19.119720 22544 net.cpp:408] loss <- label
I0428 19:31:19.119729 22544 net.cpp:382] loss -> loss
I0428 19:31:19.119751 22544 layer_factory.hpp:77] Creating layer loss
I0428 19:31:19.120674 22544 net.cpp:124] Setting up loss
I0428 19:31:19.120688 22544 net.cpp:131] Top shape: (1)
I0428 19:31:19.120694 22544 net.cpp:134]     with loss weight 1
I0428 19:31:19.120714 22544 net.cpp:139] Memory required for data: 2049284
I0428 19:31:19.120720 22544 net.cpp:200] loss needs backward computation.
I0428 19:31:19.120728 22544 net.cpp:200] relu1 needs backward computation.
I0428 19:31:19.120733 22544 net.cpp:200] ip1 needs backward computation.
I0428 19:31:19.120738 22544 net.cpp:200] pool0 needs backward computation.
I0428 19:31:19.120743 22544 net.cpp:200] conv0 needs backward computation.
I0428 19:31:19.120749 22544 net.cpp:202] mnist does not need backward computation.
I0428 19:31:19.120754 22544 net.cpp:244] This network produces output loss
I0428 19:31:19.120765 22544 net.cpp:257] Network initialization done.
I0428 19:31:19.120991 22544 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test118.prototxt
I0428 19:31:19.121021 22544 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:19.121090 22544 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:31:19.121170 22544 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:19.121232 22544 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:19.121249 22544 net.cpp:86] Creating Layer mnist
I0428 19:31:19.121256 22544 net.cpp:382] mnist -> data
I0428 19:31:19.121269 22544 net.cpp:382] mnist -> label
I0428 19:31:19.121387 22544 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:19.123467 22544 net.cpp:124] Setting up mnist
I0428 19:31:19.123482 22544 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:19.123491 22544 net.cpp:131] Top shape: 100 (100)
I0428 19:31:19.123495 22544 net.cpp:139] Memory required for data: 314000
I0428 19:31:19.123513 22544 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:19.123523 22544 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:19.123529 22544 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:19.123538 22544 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:19.123548 22544 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:19.123636 22544 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:19.123643 22544 net.cpp:131] Top shape: 100 (100)
I0428 19:31:19.123651 22544 net.cpp:131] Top shape: 100 (100)
I0428 19:31:19.123654 22544 net.cpp:139] Memory required for data: 314800
I0428 19:31:19.123661 22544 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:19.123673 22544 net.cpp:86] Creating Layer conv0
I0428 19:31:19.123679 22544 net.cpp:408] conv0 <- data
I0428 19:31:19.123688 22544 net.cpp:382] conv0 -> conv0
I0428 19:31:19.125253 22544 net.cpp:124] Setting up conv0
I0428 19:31:19.125268 22544 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:19.125274 22544 net.cpp:139] Memory required for data: 2618800
I0428 19:31:19.125288 22544 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:19.125298 22544 net.cpp:86] Creating Layer pool0
I0428 19:31:19.125304 22544 net.cpp:408] pool0 <- conv0
I0428 19:31:19.125311 22544 net.cpp:382] pool0 -> pool0
I0428 19:31:19.125354 22544 net.cpp:124] Setting up pool0
I0428 19:31:19.125361 22544 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:19.125366 22544 net.cpp:139] Memory required for data: 3194800
I0428 19:31:19.125371 22544 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:19.125382 22544 net.cpp:86] Creating Layer ip1
I0428 19:31:19.125388 22544 net.cpp:408] ip1 <- pool0
I0428 19:31:19.125396 22544 net.cpp:382] ip1 -> ip1
I0428 19:31:19.125571 22544 net.cpp:124] Setting up ip1
I0428 19:31:19.125581 22544 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:19.125586 22544 net.cpp:139] Memory required for data: 3198800
I0428 19:31:19.125597 22544 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:19.125604 22544 net.cpp:86] Creating Layer relu1
I0428 19:31:19.125610 22544 net.cpp:408] relu1 <- ip1
I0428 19:31:19.125617 22544 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:19.125807 22544 net.cpp:124] Setting up relu1
I0428 19:31:19.125833 22544 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:19.125838 22544 net.cpp:139] Memory required for data: 3202800
I0428 19:31:19.125844 22544 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:31:19.125852 22544 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:31:19.125859 22544 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:31:19.125866 22544 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:31:19.125876 22544 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:31:19.125929 22544 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:31:19.125938 22544 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:19.125946 22544 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:19.125952 22544 net.cpp:139] Memory required for data: 3210800
I0428 19:31:19.125957 22544 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:19.125967 22544 net.cpp:86] Creating Layer accuracy
I0428 19:31:19.125972 22544 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:31:19.125979 22544 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:19.125988 22544 net.cpp:382] accuracy -> accuracy
I0428 19:31:19.125999 22544 net.cpp:124] Setting up accuracy
I0428 19:31:19.126008 22544 net.cpp:131] Top shape: (1)
I0428 19:31:19.126013 22544 net.cpp:139] Memory required for data: 3210804
I0428 19:31:19.126019 22544 layer_factory.hpp:77] Creating layer loss
I0428 19:31:19.126029 22544 net.cpp:86] Creating Layer loss
I0428 19:31:19.126035 22544 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:31:19.126042 22544 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:19.126051 22544 net.cpp:382] loss -> loss
I0428 19:31:19.126062 22544 layer_factory.hpp:77] Creating layer loss
I0428 19:31:19.126345 22544 net.cpp:124] Setting up loss
I0428 19:31:19.126366 22544 net.cpp:131] Top shape: (1)
I0428 19:31:19.126372 22544 net.cpp:134]     with loss weight 1
I0428 19:31:19.126382 22544 net.cpp:139] Memory required for data: 3210808
I0428 19:31:19.126389 22544 net.cpp:200] loss needs backward computation.
I0428 19:31:19.126394 22544 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:19.126415 22544 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:31:19.126420 22544 net.cpp:200] relu1 needs backward computation.
I0428 19:31:19.126425 22544 net.cpp:200] ip1 needs backward computation.
I0428 19:31:19.126431 22544 net.cpp:200] pool0 needs backward computation.
I0428 19:31:19.126436 22544 net.cpp:200] conv0 needs backward computation.
I0428 19:31:19.126442 22544 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:19.126449 22544 net.cpp:202] mnist does not need backward computation.
I0428 19:31:19.126454 22544 net.cpp:244] This network produces output accuracy
I0428 19:31:19.126461 22544 net.cpp:244] This network produces output loss
I0428 19:31:19.126484 22544 net.cpp:257] Network initialization done.
I0428 19:31:19.126520 22544 solver.cpp:56] Solver scaffolding done.
I0428 19:31:19.126682 22544 caffe.cpp:248] Starting Optimization
I0428 19:31:19.126688 22544 solver.cpp:273] Solving LeNet
I0428 19:31:19.126693 22544 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:19.126775 22544 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:19.126845 22544 blocking_queue.cpp:49] Waiting for data
I0428 19:31:19.205029 22551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:19.205499 22544 solver.cpp:398]     Test net output #0: accuracy = 0.0784
I0428 19:31:19.205523 22544 solver.cpp:398]     Test net output #1: loss = 2.3546 (* 1 = 2.3546 loss)
I0428 19:31:19.207682 22544 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809595s/100 iters), loss = 2.32291
I0428 19:31:19.207738 22544 solver.cpp:238]     Train net output #0: loss = 2.32291 (* 1 = 2.32291 loss)
I0428 19:31:19.207757 22544 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:19.263304 22544 solver.cpp:219] Iteration 100 (1799.28 iter/s, 0.0555779s/100 iters), loss = 0.858502
I0428 19:31:19.263336 22544 solver.cpp:238]     Train net output #0: loss = 0.858502 (* 1 = 0.858502 loss)
I0428 19:31:19.263362 22544 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:19.311926 22544 solver.cpp:219] Iteration 200 (2058.13 iter/s, 0.0485877s/100 iters), loss = 0.947726
I0428 19:31:19.311954 22544 solver.cpp:238]     Train net output #0: loss = 0.947726 (* 1 = 0.947726 loss)
I0428 19:31:19.311980 22544 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:19.366684 22544 solver.cpp:219] Iteration 300 (1827.37 iter/s, 0.0547235s/100 iters), loss = 0.794598
I0428 19:31:19.366725 22544 solver.cpp:238]     Train net output #0: loss = 0.794598 (* 1 = 0.794598 loss)
I0428 19:31:19.366751 22544 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:19.421445 22544 solver.cpp:219] Iteration 400 (1827.19 iter/s, 0.0547287s/100 iters), loss = 0.435277
I0428 19:31:19.421473 22544 solver.cpp:238]     Train net output #0: loss = 0.435277 (* 1 = 0.435277 loss)
I0428 19:31:19.421499 22544 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:19.475514 22544 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:19.550254 22551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:19.550806 22544 solver.cpp:398]     Test net output #0: accuracy = 0.9237
I0428 19:31:19.550842 22544 solver.cpp:398]     Test net output #1: loss = 0.275485 (* 1 = 0.275485 loss)
I0428 19:31:19.551540 22544 solver.cpp:219] Iteration 500 (768.917 iter/s, 0.130053s/100 iters), loss = 0.362743
I0428 19:31:19.551580 22544 solver.cpp:238]     Train net output #0: loss = 0.362743 (* 1 = 0.362743 loss)
I0428 19:31:19.551609 22544 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:19.607517 22544 solver.cpp:219] Iteration 600 (1787.86 iter/s, 0.0559329s/100 iters), loss = 0.203158
I0428 19:31:19.607589 22544 solver.cpp:238]     Train net output #0: loss = 0.203158 (* 1 = 0.203158 loss)
I0428 19:31:19.607609 22544 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:19.658532 22544 solver.cpp:219] Iteration 700 (1963.02 iter/s, 0.050942s/100 iters), loss = 0.329685
I0428 19:31:19.658566 22544 solver.cpp:238]     Train net output #0: loss = 0.329685 (* 1 = 0.329685 loss)
I0428 19:31:19.658577 22544 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:19.715023 22544 solver.cpp:219] Iteration 800 (1771.35 iter/s, 0.0564541s/100 iters), loss = 0.348419
I0428 19:31:19.715054 22544 solver.cpp:238]     Train net output #0: loss = 0.348418 (* 1 = 0.348418 loss)
I0428 19:31:19.715064 22544 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:19.763959 22544 solver.cpp:219] Iteration 900 (2044.86 iter/s, 0.0489032s/100 iters), loss = 0.321362
I0428 19:31:19.763995 22544 solver.cpp:238]     Train net output #0: loss = 0.321362 (* 1 = 0.321362 loss)
I0428 19:31:19.764006 22544 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:19.780778 22550 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:19.811074 22544 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:19.811800 22544 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:19.812412 22544 solver.cpp:311] Iteration 1000, loss = 0.246565
I0428 19:31:19.812435 22544 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:19.890575 22551 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:19.891197 22544 solver.cpp:398]     Test net output #0: accuracy = 0.9532
I0428 19:31:19.891240 22544 solver.cpp:398]     Test net output #1: loss = 0.16258 (* 1 = 0.16258 loss)
I0428 19:31:19.891252 22544 solver.cpp:316] Optimization Done.
I0428 19:31:19.891258 22544 caffe.cpp:259] Optimization Done.
