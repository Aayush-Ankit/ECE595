I0428 19:42:55.136862 25220 caffe.cpp:218] Using GPUs 0
I0428 19:42:55.171767 25220 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:55.683346 25220 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test407.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:55.683487 25220 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test407.prototxt
I0428 19:42:55.683910 25220 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:55.683929 25220 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:55.684034 25220 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:55.684113 25220 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:55.684211 25220 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:55.684233 25220 net.cpp:86] Creating Layer mnist
I0428 19:42:55.684242 25220 net.cpp:382] mnist -> data
I0428 19:42:55.684265 25220 net.cpp:382] mnist -> label
I0428 19:42:55.685397 25220 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:55.687854 25220 net.cpp:124] Setting up mnist
I0428 19:42:55.687871 25220 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:55.687877 25220 net.cpp:131] Top shape: 64 (64)
I0428 19:42:55.687880 25220 net.cpp:139] Memory required for data: 200960
I0428 19:42:55.687887 25220 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:55.687904 25220 net.cpp:86] Creating Layer conv0
I0428 19:42:55.687927 25220 net.cpp:408] conv0 <- data
I0428 19:42:55.687940 25220 net.cpp:382] conv0 -> conv0
I0428 19:42:55.969521 25220 net.cpp:124] Setting up conv0
I0428 19:42:55.969547 25220 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:55.969552 25220 net.cpp:139] Memory required for data: 495872
I0428 19:42:55.969568 25220 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:55.969581 25220 net.cpp:86] Creating Layer pool0
I0428 19:42:55.969585 25220 net.cpp:408] pool0 <- conv0
I0428 19:42:55.969591 25220 net.cpp:382] pool0 -> pool0
I0428 19:42:55.969638 25220 net.cpp:124] Setting up pool0
I0428 19:42:55.969646 25220 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:55.969650 25220 net.cpp:139] Memory required for data: 569600
I0428 19:42:55.969652 25220 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:55.969663 25220 net.cpp:86] Creating Layer conv1
I0428 19:42:55.969668 25220 net.cpp:408] conv1 <- pool0
I0428 19:42:55.969673 25220 net.cpp:382] conv1 -> conv1
I0428 19:42:55.972352 25220 net.cpp:124] Setting up conv1
I0428 19:42:55.972367 25220 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:55.972370 25220 net.cpp:139] Memory required for data: 979200
I0428 19:42:55.972379 25220 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:55.972388 25220 net.cpp:86] Creating Layer pool1
I0428 19:42:55.972391 25220 net.cpp:408] pool1 <- conv1
I0428 19:42:55.972396 25220 net.cpp:382] pool1 -> pool1
I0428 19:42:55.972434 25220 net.cpp:124] Setting up pool1
I0428 19:42:55.972440 25220 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:55.972450 25220 net.cpp:139] Memory required for data: 1081600
I0428 19:42:55.972452 25220 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:55.972460 25220 net.cpp:86] Creating Layer ip1
I0428 19:42:55.972463 25220 net.cpp:408] ip1 <- pool1
I0428 19:42:55.972468 25220 net.cpp:382] ip1 -> ip1
I0428 19:42:55.972596 25220 net.cpp:124] Setting up ip1
I0428 19:42:55.972604 25220 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:55.972607 25220 net.cpp:139] Memory required for data: 1084160
I0428 19:42:55.972615 25220 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:55.972621 25220 net.cpp:86] Creating Layer relu1
I0428 19:42:55.972625 25220 net.cpp:408] relu1 <- ip1
I0428 19:42:55.972630 25220 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:55.972793 25220 net.cpp:124] Setting up relu1
I0428 19:42:55.972802 25220 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:55.972805 25220 net.cpp:139] Memory required for data: 1086720
I0428 19:42:55.972817 25220 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:55.972838 25220 net.cpp:86] Creating Layer ip2
I0428 19:42:55.972842 25220 net.cpp:408] ip2 <- ip1
I0428 19:42:55.972847 25220 net.cpp:382] ip2 -> ip2
I0428 19:42:55.972955 25220 net.cpp:124] Setting up ip2
I0428 19:42:55.972964 25220 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:55.972966 25220 net.cpp:139] Memory required for data: 1093120
I0428 19:42:55.972972 25220 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:55.972978 25220 net.cpp:86] Creating Layer relu2
I0428 19:42:55.972981 25220 net.cpp:408] relu2 <- ip2
I0428 19:42:55.972986 25220 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:55.973740 25220 net.cpp:124] Setting up relu2
I0428 19:42:55.973753 25220 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:42:55.973773 25220 net.cpp:139] Memory required for data: 1099520
I0428 19:42:55.973776 25220 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:55.973783 25220 net.cpp:86] Creating Layer ip3
I0428 19:42:55.973786 25220 net.cpp:408] ip3 <- ip2
I0428 19:42:55.973793 25220 net.cpp:382] ip3 -> ip3
I0428 19:42:55.973897 25220 net.cpp:124] Setting up ip3
I0428 19:42:55.973906 25220 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:55.973908 25220 net.cpp:139] Memory required for data: 1102080
I0428 19:42:55.973917 25220 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:55.973922 25220 net.cpp:86] Creating Layer relu3
I0428 19:42:55.973924 25220 net.cpp:408] relu3 <- ip3
I0428 19:42:55.973928 25220 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:55.974114 25220 net.cpp:124] Setting up relu3
I0428 19:42:55.974123 25220 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:55.974126 25220 net.cpp:139] Memory required for data: 1104640
I0428 19:42:55.974130 25220 layer_factory.hpp:77] Creating layer loss
I0428 19:42:55.974135 25220 net.cpp:86] Creating Layer loss
I0428 19:42:55.974138 25220 net.cpp:408] loss <- ip3
I0428 19:42:55.974143 25220 net.cpp:408] loss <- label
I0428 19:42:55.974148 25220 net.cpp:382] loss -> loss
I0428 19:42:55.974161 25220 layer_factory.hpp:77] Creating layer loss
I0428 19:42:55.974377 25220 net.cpp:124] Setting up loss
I0428 19:42:55.974386 25220 net.cpp:131] Top shape: (1)
I0428 19:42:55.974390 25220 net.cpp:134]     with loss weight 1
I0428 19:42:55.974403 25220 net.cpp:139] Memory required for data: 1104644
I0428 19:42:55.974407 25220 net.cpp:200] loss needs backward computation.
I0428 19:42:55.974411 25220 net.cpp:200] relu3 needs backward computation.
I0428 19:42:55.974414 25220 net.cpp:200] ip3 needs backward computation.
I0428 19:42:55.974416 25220 net.cpp:200] relu2 needs backward computation.
I0428 19:42:55.974419 25220 net.cpp:200] ip2 needs backward computation.
I0428 19:42:55.974422 25220 net.cpp:200] relu1 needs backward computation.
I0428 19:42:55.974424 25220 net.cpp:200] ip1 needs backward computation.
I0428 19:42:55.974427 25220 net.cpp:200] pool1 needs backward computation.
I0428 19:42:55.974431 25220 net.cpp:200] conv1 needs backward computation.
I0428 19:42:55.974433 25220 net.cpp:200] pool0 needs backward computation.
I0428 19:42:55.974437 25220 net.cpp:200] conv0 needs backward computation.
I0428 19:42:55.974441 25220 net.cpp:202] mnist does not need backward computation.
I0428 19:42:55.974443 25220 net.cpp:244] This network produces output loss
I0428 19:42:55.974452 25220 net.cpp:257] Network initialization done.
I0428 19:42:55.974766 25220 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test407.prototxt
I0428 19:42:55.974792 25220 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:55.974880 25220 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:55.974975 25220 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:55.975019 25220 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:55.975033 25220 net.cpp:86] Creating Layer mnist
I0428 19:42:55.975038 25220 net.cpp:382] mnist -> data
I0428 19:42:55.975044 25220 net.cpp:382] mnist -> label
I0428 19:42:55.975142 25220 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:55.977216 25220 net.cpp:124] Setting up mnist
I0428 19:42:55.977231 25220 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:55.977236 25220 net.cpp:131] Top shape: 100 (100)
I0428 19:42:55.977238 25220 net.cpp:139] Memory required for data: 314000
I0428 19:42:55.977242 25220 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:55.977248 25220 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:55.977252 25220 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:55.977257 25220 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:55.977263 25220 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:55.977326 25220 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:55.977332 25220 net.cpp:131] Top shape: 100 (100)
I0428 19:42:55.977336 25220 net.cpp:131] Top shape: 100 (100)
I0428 19:42:55.977339 25220 net.cpp:139] Memory required for data: 314800
I0428 19:42:55.977342 25220 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:55.977350 25220 net.cpp:86] Creating Layer conv0
I0428 19:42:55.977354 25220 net.cpp:408] conv0 <- data
I0428 19:42:55.977358 25220 net.cpp:382] conv0 -> conv0
I0428 19:42:55.978988 25220 net.cpp:124] Setting up conv0
I0428 19:42:55.979002 25220 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:55.979007 25220 net.cpp:139] Memory required for data: 775600
I0428 19:42:55.979015 25220 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:55.979038 25220 net.cpp:86] Creating Layer pool0
I0428 19:42:55.979040 25220 net.cpp:408] pool0 <- conv0
I0428 19:42:55.979045 25220 net.cpp:382] pool0 -> pool0
I0428 19:42:55.979082 25220 net.cpp:124] Setting up pool0
I0428 19:42:55.979087 25220 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:55.979090 25220 net.cpp:139] Memory required for data: 890800
I0428 19:42:55.979094 25220 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:55.979112 25220 net.cpp:86] Creating Layer conv1
I0428 19:42:55.979115 25220 net.cpp:408] conv1 <- pool0
I0428 19:42:55.979120 25220 net.cpp:382] conv1 -> conv1
I0428 19:42:55.980670 25220 net.cpp:124] Setting up conv1
I0428 19:42:55.980685 25220 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:55.980690 25220 net.cpp:139] Memory required for data: 1530800
I0428 19:42:55.980698 25220 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:55.980705 25220 net.cpp:86] Creating Layer pool1
I0428 19:42:55.980708 25220 net.cpp:408] pool1 <- conv1
I0428 19:42:55.980713 25220 net.cpp:382] pool1 -> pool1
I0428 19:42:55.980751 25220 net.cpp:124] Setting up pool1
I0428 19:42:55.980756 25220 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:55.980765 25220 net.cpp:139] Memory required for data: 1690800
I0428 19:42:55.980768 25220 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:55.980775 25220 net.cpp:86] Creating Layer ip1
I0428 19:42:55.980778 25220 net.cpp:408] ip1 <- pool1
I0428 19:42:55.980783 25220 net.cpp:382] ip1 -> ip1
I0428 19:42:55.980986 25220 net.cpp:124] Setting up ip1
I0428 19:42:55.980996 25220 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:55.981012 25220 net.cpp:139] Memory required for data: 1694800
I0428 19:42:55.981021 25220 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:55.981029 25220 net.cpp:86] Creating Layer relu1
I0428 19:42:55.981032 25220 net.cpp:408] relu1 <- ip1
I0428 19:42:55.981041 25220 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:55.981235 25220 net.cpp:124] Setting up relu1
I0428 19:42:55.981258 25220 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:55.981262 25220 net.cpp:139] Memory required for data: 1698800
I0428 19:42:55.981266 25220 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:55.981272 25220 net.cpp:86] Creating Layer ip2
I0428 19:42:55.981292 25220 net.cpp:408] ip2 <- ip1
I0428 19:42:55.981297 25220 net.cpp:382] ip2 -> ip2
I0428 19:42:55.981395 25220 net.cpp:124] Setting up ip2
I0428 19:42:55.981403 25220 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:55.981406 25220 net.cpp:139] Memory required for data: 1708800
I0428 19:42:55.981411 25220 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:55.981416 25220 net.cpp:86] Creating Layer relu2
I0428 19:42:55.981420 25220 net.cpp:408] relu2 <- ip2
I0428 19:42:55.981423 25220 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:55.981652 25220 net.cpp:124] Setting up relu2
I0428 19:42:55.981676 25220 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:42:55.981679 25220 net.cpp:139] Memory required for data: 1718800
I0428 19:42:55.981683 25220 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:55.981688 25220 net.cpp:86] Creating Layer ip3
I0428 19:42:55.981691 25220 net.cpp:408] ip3 <- ip2
I0428 19:42:55.981696 25220 net.cpp:382] ip3 -> ip3
I0428 19:42:55.981839 25220 net.cpp:124] Setting up ip3
I0428 19:42:55.981848 25220 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:55.981850 25220 net.cpp:139] Memory required for data: 1722800
I0428 19:42:55.981858 25220 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:55.981863 25220 net.cpp:86] Creating Layer relu3
I0428 19:42:55.981866 25220 net.cpp:408] relu3 <- ip3
I0428 19:42:55.981871 25220 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:55.982781 25220 net.cpp:124] Setting up relu3
I0428 19:42:55.982795 25220 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:55.982797 25220 net.cpp:139] Memory required for data: 1726800
I0428 19:42:55.982801 25220 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:55.982806 25220 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:55.982810 25220 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:55.982816 25220 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:55.982823 25220 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:55.982885 25220 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:55.982893 25220 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:55.982898 25220 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:55.982902 25220 net.cpp:139] Memory required for data: 1734800
I0428 19:42:55.982904 25220 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:55.982909 25220 net.cpp:86] Creating Layer accuracy
I0428 19:42:55.982913 25220 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:55.982918 25220 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:55.982921 25220 net.cpp:382] accuracy -> accuracy
I0428 19:42:55.982929 25220 net.cpp:124] Setting up accuracy
I0428 19:42:55.982933 25220 net.cpp:131] Top shape: (1)
I0428 19:42:55.982936 25220 net.cpp:139] Memory required for data: 1734804
I0428 19:42:55.982939 25220 layer_factory.hpp:77] Creating layer loss
I0428 19:42:55.982944 25220 net.cpp:86] Creating Layer loss
I0428 19:42:55.982949 25220 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:55.982952 25220 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:55.982956 25220 net.cpp:382] loss -> loss
I0428 19:42:55.982962 25220 layer_factory.hpp:77] Creating layer loss
I0428 19:42:55.983260 25220 net.cpp:124] Setting up loss
I0428 19:42:55.983270 25220 net.cpp:131] Top shape: (1)
I0428 19:42:55.983273 25220 net.cpp:134]     with loss weight 1
I0428 19:42:55.983280 25220 net.cpp:139] Memory required for data: 1734808
I0428 19:42:55.983294 25220 net.cpp:200] loss needs backward computation.
I0428 19:42:55.983305 25220 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:55.983314 25220 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:55.983327 25220 net.cpp:200] relu3 needs backward computation.
I0428 19:42:55.983330 25220 net.cpp:200] ip3 needs backward computation.
I0428 19:42:55.983333 25220 net.cpp:200] relu2 needs backward computation.
I0428 19:42:55.983335 25220 net.cpp:200] ip2 needs backward computation.
I0428 19:42:55.983343 25220 net.cpp:200] relu1 needs backward computation.
I0428 19:42:55.983356 25220 net.cpp:200] ip1 needs backward computation.
I0428 19:42:55.983359 25220 net.cpp:200] pool1 needs backward computation.
I0428 19:42:55.983362 25220 net.cpp:200] conv1 needs backward computation.
I0428 19:42:55.983366 25220 net.cpp:200] pool0 needs backward computation.
I0428 19:42:55.983371 25220 net.cpp:200] conv0 needs backward computation.
I0428 19:42:55.983374 25220 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:55.983378 25220 net.cpp:202] mnist does not need backward computation.
I0428 19:42:55.983397 25220 net.cpp:244] This network produces output accuracy
I0428 19:42:55.983400 25220 net.cpp:244] This network produces output loss
I0428 19:42:55.983412 25220 net.cpp:257] Network initialization done.
I0428 19:42:55.983484 25220 solver.cpp:56] Solver scaffolding done.
I0428 19:42:55.983877 25220 caffe.cpp:248] Starting Optimization
I0428 19:42:55.983883 25220 solver.cpp:273] Solving LeNet
I0428 19:42:55.983886 25220 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:55.984112 25220 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:55.988173 25220 blocking_queue.cpp:49] Waiting for data
I0428 19:42:56.060407 25227 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:56.060852 25220 solver.cpp:398]     Test net output #0: accuracy = 0.098
I0428 19:42:56.060870 25220 solver.cpp:398]     Test net output #1: loss = 2.32784 (* 1 = 2.32784 loss)
I0428 19:42:56.062065 25220 solver.cpp:219] Iteration 0 (2.91295 iter/s, 0.0781507s/100 iters), loss = 2.32934
I0428 19:42:56.062104 25220 solver.cpp:238]     Train net output #0: loss = 2.32934 (* 1 = 2.32934 loss)
I0428 19:42:56.062117 25220 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:56.152981 25220 solver.cpp:219] Iteration 100 (1100.52 iter/s, 0.0908663s/100 iters), loss = 1.04788
I0428 19:42:56.153007 25220 solver.cpp:238]     Train net output #0: loss = 1.04788 (* 1 = 1.04788 loss)
I0428 19:42:56.153014 25220 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:56.241453 25220 solver.cpp:219] Iteration 200 (1131 iter/s, 0.0884173s/100 iters), loss = 0.98019
I0428 19:42:56.241477 25220 solver.cpp:238]     Train net output #0: loss = 0.98019 (* 1 = 0.98019 loss)
I0428 19:42:56.241498 25220 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:56.323096 25220 solver.cpp:219] Iteration 300 (1225.38 iter/s, 0.0816076s/100 iters), loss = 1.2087
I0428 19:42:56.323120 25220 solver.cpp:238]     Train net output #0: loss = 1.2087 (* 1 = 1.2087 loss)
I0428 19:42:56.323143 25220 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:56.404414 25220 solver.cpp:219] Iteration 400 (1230.3 iter/s, 0.081281s/100 iters), loss = 0.94653
I0428 19:42:56.404438 25220 solver.cpp:238]     Train net output #0: loss = 0.94653 (* 1 = 0.94653 loss)
I0428 19:42:56.404460 25220 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:56.484668 25220 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:56.561013 25227 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:56.561520 25220 solver.cpp:398]     Test net output #0: accuracy = 0.7247
I0428 19:42:56.561556 25220 solver.cpp:398]     Test net output #1: loss = 0.882033 (* 1 = 0.882033 loss)
I0428 19:42:56.562476 25220 solver.cpp:219] Iteration 500 (632.817 iter/s, 0.158024s/100 iters), loss = 0.747172
I0428 19:42:56.562500 25220 solver.cpp:238]     Train net output #0: loss = 0.747172 (* 1 = 0.747172 loss)
I0428 19:42:56.562523 25220 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:56.659590 25220 solver.cpp:219] Iteration 600 (1030.15 iter/s, 0.0970732s/100 iters), loss = 0.45265
I0428 19:42:56.659622 25220 solver.cpp:238]     Train net output #0: loss = 0.45265 (* 1 = 0.45265 loss)
I0428 19:42:56.659631 25220 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:56.749904 25220 solver.cpp:219] Iteration 700 (1107.78 iter/s, 0.0902707s/100 iters), loss = 0.686626
I0428 19:42:56.749932 25220 solver.cpp:238]     Train net output #0: loss = 0.686626 (* 1 = 0.686626 loss)
I0428 19:42:56.749938 25220 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:56.842916 25220 solver.cpp:219] Iteration 800 (1075.59 iter/s, 0.0929721s/100 iters), loss = 0.942508
I0428 19:42:56.842955 25220 solver.cpp:238]     Train net output #0: loss = 0.942508 (* 1 = 0.942508 loss)
I0428 19:42:56.842962 25220 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:56.932852 25220 solver.cpp:219] Iteration 900 (1112.37 iter/s, 0.0898981s/100 iters), loss = 0.561836
I0428 19:42:56.932895 25220 solver.cpp:238]     Train net output #0: loss = 0.561836 (* 1 = 0.561836 loss)
I0428 19:42:56.932916 25220 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:56.960834 25226 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:57.015410 25220 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:57.016206 25220 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:57.016649 25220 solver.cpp:311] Iteration 1000, loss = 0.575948
I0428 19:42:57.016664 25220 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:57.093022 25227 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:57.093504 25220 solver.cpp:398]     Test net output #0: accuracy = 0.8608
I0428 19:42:57.093540 25220 solver.cpp:398]     Test net output #1: loss = 0.391061 (* 1 = 0.391061 loss)
I0428 19:42:57.093545 25220 solver.cpp:316] Optimization Done.
I0428 19:42:57.093549 25220 caffe.cpp:259] Optimization Done.
