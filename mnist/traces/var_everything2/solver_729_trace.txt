I0428 19:55:17.251740 28155 caffe.cpp:218] Using GPUs 0
I0428 19:55:17.286918 28155 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:55:17.740181 28155 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test729.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:55:17.740312 28155 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test729.prototxt
I0428 19:55:17.740649 28155 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:55:17.740664 28155 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:55:17.740756 28155 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:17.740835 28155 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:17.740933 28155 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:55:17.740953 28155 net.cpp:86] Creating Layer mnist
I0428 19:55:17.740959 28155 net.cpp:382] mnist -> data
I0428 19:55:17.740978 28155 net.cpp:382] mnist -> label
I0428 19:55:17.741925 28155 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:55:17.744225 28155 net.cpp:124] Setting up mnist
I0428 19:55:17.744256 28155 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:55:17.744261 28155 net.cpp:131] Top shape: 64 (64)
I0428 19:55:17.744264 28155 net.cpp:139] Memory required for data: 200960
I0428 19:55:17.744271 28155 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:17.744285 28155 net.cpp:86] Creating Layer conv0
I0428 19:55:17.744303 28155 net.cpp:408] conv0 <- data
I0428 19:55:17.744313 28155 net.cpp:382] conv0 -> conv0
I0428 19:55:17.973559 28155 net.cpp:124] Setting up conv0
I0428 19:55:17.973599 28155 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:55:17.973604 28155 net.cpp:139] Memory required for data: 938240
I0428 19:55:17.973618 28155 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:17.973631 28155 net.cpp:86] Creating Layer pool0
I0428 19:55:17.973635 28155 net.cpp:408] pool0 <- conv0
I0428 19:55:17.973641 28155 net.cpp:382] pool0 -> pool0
I0428 19:55:17.973690 28155 net.cpp:124] Setting up pool0
I0428 19:55:17.973695 28155 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:55:17.973697 28155 net.cpp:139] Memory required for data: 1122560
I0428 19:55:17.973701 28155 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:17.973711 28155 net.cpp:86] Creating Layer conv1
I0428 19:55:17.973714 28155 net.cpp:408] conv1 <- pool0
I0428 19:55:17.973719 28155 net.cpp:382] conv1 -> conv1
I0428 19:55:17.976399 28155 net.cpp:124] Setting up conv1
I0428 19:55:17.976413 28155 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:55:17.976416 28155 net.cpp:139] Memory required for data: 2760960
I0428 19:55:17.976424 28155 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:17.976431 28155 net.cpp:86] Creating Layer pool1
I0428 19:55:17.976434 28155 net.cpp:408] pool1 <- conv1
I0428 19:55:17.976439 28155 net.cpp:382] pool1 -> pool1
I0428 19:55:17.976491 28155 net.cpp:124] Setting up pool1
I0428 19:55:17.976496 28155 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:55:17.976500 28155 net.cpp:139] Memory required for data: 3170560
I0428 19:55:17.976502 28155 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:17.976513 28155 net.cpp:86] Creating Layer ip1
I0428 19:55:17.976516 28155 net.cpp:408] ip1 <- pool1
I0428 19:55:17.976521 28155 net.cpp:382] ip1 -> ip1
I0428 19:55:17.976913 28155 net.cpp:124] Setting up ip1
I0428 19:55:17.976922 28155 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:17.976925 28155 net.cpp:139] Memory required for data: 3176960
I0428 19:55:17.976933 28155 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:17.976938 28155 net.cpp:86] Creating Layer relu1
I0428 19:55:17.976941 28155 net.cpp:408] relu1 <- ip1
I0428 19:55:17.976946 28155 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:17.977113 28155 net.cpp:124] Setting up relu1
I0428 19:55:17.977121 28155 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:55:17.977124 28155 net.cpp:139] Memory required for data: 3183360
I0428 19:55:17.977128 28155 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:17.977134 28155 net.cpp:86] Creating Layer ip2
I0428 19:55:17.977138 28155 net.cpp:408] ip2 <- ip1
I0428 19:55:17.977143 28155 net.cpp:382] ip2 -> ip2
I0428 19:55:17.978142 28155 net.cpp:124] Setting up ip2
I0428 19:55:17.978168 28155 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:17.978186 28155 net.cpp:139] Memory required for data: 3196160
I0428 19:55:17.978193 28155 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:17.978199 28155 net.cpp:86] Creating Layer relu2
I0428 19:55:17.978202 28155 net.cpp:408] relu2 <- ip2
I0428 19:55:17.978207 28155 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:17.978886 28155 net.cpp:124] Setting up relu2
I0428 19:55:17.978898 28155 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:55:17.978916 28155 net.cpp:139] Memory required for data: 3208960
I0428 19:55:17.978920 28155 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:17.978942 28155 net.cpp:86] Creating Layer ip3
I0428 19:55:17.978945 28155 net.cpp:408] ip3 <- ip2
I0428 19:55:17.978951 28155 net.cpp:382] ip3 -> ip3
I0428 19:55:17.979051 28155 net.cpp:124] Setting up ip3
I0428 19:55:17.979058 28155 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:17.979061 28155 net.cpp:139] Memory required for data: 3211520
I0428 19:55:17.979068 28155 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:17.979074 28155 net.cpp:86] Creating Layer relu3
I0428 19:55:17.979076 28155 net.cpp:408] relu3 <- ip3
I0428 19:55:17.979080 28155 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:17.979239 28155 net.cpp:124] Setting up relu3
I0428 19:55:17.979262 28155 net.cpp:131] Top shape: 64 10 (640)
I0428 19:55:17.979265 28155 net.cpp:139] Memory required for data: 3214080
I0428 19:55:17.979269 28155 layer_factory.hpp:77] Creating layer loss
I0428 19:55:17.979274 28155 net.cpp:86] Creating Layer loss
I0428 19:55:17.979276 28155 net.cpp:408] loss <- ip3
I0428 19:55:17.979280 28155 net.cpp:408] loss <- label
I0428 19:55:17.979285 28155 net.cpp:382] loss -> loss
I0428 19:55:17.979301 28155 layer_factory.hpp:77] Creating layer loss
I0428 19:55:17.979523 28155 net.cpp:124] Setting up loss
I0428 19:55:17.979532 28155 net.cpp:131] Top shape: (1)
I0428 19:55:17.979535 28155 net.cpp:134]     with loss weight 1
I0428 19:55:17.979548 28155 net.cpp:139] Memory required for data: 3214084
I0428 19:55:17.979552 28155 net.cpp:200] loss needs backward computation.
I0428 19:55:17.979554 28155 net.cpp:200] relu3 needs backward computation.
I0428 19:55:17.979557 28155 net.cpp:200] ip3 needs backward computation.
I0428 19:55:17.979559 28155 net.cpp:200] relu2 needs backward computation.
I0428 19:55:17.979562 28155 net.cpp:200] ip2 needs backward computation.
I0428 19:55:17.979564 28155 net.cpp:200] relu1 needs backward computation.
I0428 19:55:17.979568 28155 net.cpp:200] ip1 needs backward computation.
I0428 19:55:17.979570 28155 net.cpp:200] pool1 needs backward computation.
I0428 19:55:17.979573 28155 net.cpp:200] conv1 needs backward computation.
I0428 19:55:17.979575 28155 net.cpp:200] pool0 needs backward computation.
I0428 19:55:17.979578 28155 net.cpp:200] conv0 needs backward computation.
I0428 19:55:17.979581 28155 net.cpp:202] mnist does not need backward computation.
I0428 19:55:17.979583 28155 net.cpp:244] This network produces output loss
I0428 19:55:17.979593 28155 net.cpp:257] Network initialization done.
I0428 19:55:17.979969 28155 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test729.prototxt
I0428 19:55:17.980011 28155 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:55:17.980139 28155 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:55:17.980222 28155 layer_factory.hpp:77] Creating layer mnist
I0428 19:55:17.980270 28155 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:55:17.980283 28155 net.cpp:86] Creating Layer mnist
I0428 19:55:17.980288 28155 net.cpp:382] mnist -> data
I0428 19:55:17.980296 28155 net.cpp:382] mnist -> label
I0428 19:55:17.980398 28155 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:55:17.982301 28155 net.cpp:124] Setting up mnist
I0428 19:55:17.982331 28155 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:55:17.982336 28155 net.cpp:131] Top shape: 100 (100)
I0428 19:55:17.982338 28155 net.cpp:139] Memory required for data: 314000
I0428 19:55:17.982342 28155 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:55:17.982417 28155 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:55:17.982422 28155 net.cpp:408] label_mnist_1_split <- label
I0428 19:55:17.982427 28155 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:55:17.982434 28155 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:55:17.982484 28155 net.cpp:124] Setting up label_mnist_1_split
I0428 19:55:17.982491 28155 net.cpp:131] Top shape: 100 (100)
I0428 19:55:17.982496 28155 net.cpp:131] Top shape: 100 (100)
I0428 19:55:17.982512 28155 net.cpp:139] Memory required for data: 314800
I0428 19:55:17.982516 28155 layer_factory.hpp:77] Creating layer conv0
I0428 19:55:17.982524 28155 net.cpp:86] Creating Layer conv0
I0428 19:55:17.982527 28155 net.cpp:408] conv0 <- data
I0428 19:55:17.982533 28155 net.cpp:382] conv0 -> conv0
I0428 19:55:17.984393 28155 net.cpp:124] Setting up conv0
I0428 19:55:17.984407 28155 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:55:17.984411 28155 net.cpp:139] Memory required for data: 1466800
I0428 19:55:17.984422 28155 layer_factory.hpp:77] Creating layer pool0
I0428 19:55:17.984444 28155 net.cpp:86] Creating Layer pool0
I0428 19:55:17.984448 28155 net.cpp:408] pool0 <- conv0
I0428 19:55:17.984452 28155 net.cpp:382] pool0 -> pool0
I0428 19:55:17.984508 28155 net.cpp:124] Setting up pool0
I0428 19:55:17.984513 28155 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:55:17.984516 28155 net.cpp:139] Memory required for data: 1754800
I0428 19:55:17.984519 28155 layer_factory.hpp:77] Creating layer conv1
I0428 19:55:17.984529 28155 net.cpp:86] Creating Layer conv1
I0428 19:55:17.984531 28155 net.cpp:408] conv1 <- pool0
I0428 19:55:17.984537 28155 net.cpp:382] conv1 -> conv1
I0428 19:55:17.986302 28155 net.cpp:124] Setting up conv1
I0428 19:55:17.986316 28155 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:55:17.986320 28155 net.cpp:139] Memory required for data: 4314800
I0428 19:55:17.986330 28155 layer_factory.hpp:77] Creating layer pool1
I0428 19:55:17.986337 28155 net.cpp:86] Creating Layer pool1
I0428 19:55:17.986340 28155 net.cpp:408] pool1 <- conv1
I0428 19:55:17.986347 28155 net.cpp:382] pool1 -> pool1
I0428 19:55:17.986384 28155 net.cpp:124] Setting up pool1
I0428 19:55:17.986390 28155 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:55:17.986399 28155 net.cpp:139] Memory required for data: 4954800
I0428 19:55:17.986402 28155 layer_factory.hpp:77] Creating layer ip1
I0428 19:55:17.986409 28155 net.cpp:86] Creating Layer ip1
I0428 19:55:17.986413 28155 net.cpp:408] ip1 <- pool1
I0428 19:55:17.986418 28155 net.cpp:382] ip1 -> ip1
I0428 19:55:17.986783 28155 net.cpp:124] Setting up ip1
I0428 19:55:17.986791 28155 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:17.986805 28155 net.cpp:139] Memory required for data: 4964800
I0428 19:55:17.986812 28155 layer_factory.hpp:77] Creating layer relu1
I0428 19:55:17.986820 28155 net.cpp:86] Creating Layer relu1
I0428 19:55:17.986824 28155 net.cpp:408] relu1 <- ip1
I0428 19:55:17.986829 28155 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:55:17.987015 28155 net.cpp:124] Setting up relu1
I0428 19:55:17.987023 28155 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:55:17.987026 28155 net.cpp:139] Memory required for data: 4974800
I0428 19:55:17.987030 28155 layer_factory.hpp:77] Creating layer ip2
I0428 19:55:17.987038 28155 net.cpp:86] Creating Layer ip2
I0428 19:55:17.987041 28155 net.cpp:408] ip2 <- ip1
I0428 19:55:17.987049 28155 net.cpp:382] ip2 -> ip2
I0428 19:55:17.987179 28155 net.cpp:124] Setting up ip2
I0428 19:55:17.987186 28155 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:17.987190 28155 net.cpp:139] Memory required for data: 4994800
I0428 19:55:17.987195 28155 layer_factory.hpp:77] Creating layer relu2
I0428 19:55:17.987200 28155 net.cpp:86] Creating Layer relu2
I0428 19:55:17.987203 28155 net.cpp:408] relu2 <- ip2
I0428 19:55:17.987207 28155 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:55:17.987452 28155 net.cpp:124] Setting up relu2
I0428 19:55:17.987460 28155 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:55:17.987463 28155 net.cpp:139] Memory required for data: 5014800
I0428 19:55:17.987467 28155 layer_factory.hpp:77] Creating layer ip3
I0428 19:55:17.987471 28155 net.cpp:86] Creating Layer ip3
I0428 19:55:17.987474 28155 net.cpp:408] ip3 <- ip2
I0428 19:55:17.987480 28155 net.cpp:382] ip3 -> ip3
I0428 19:55:17.987586 28155 net.cpp:124] Setting up ip3
I0428 19:55:17.987592 28155 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:17.987596 28155 net.cpp:139] Memory required for data: 5018800
I0428 19:55:17.987603 28155 layer_factory.hpp:77] Creating layer relu3
I0428 19:55:17.987607 28155 net.cpp:86] Creating Layer relu3
I0428 19:55:17.987610 28155 net.cpp:408] relu3 <- ip3
I0428 19:55:17.987615 28155 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:55:17.988404 28155 net.cpp:124] Setting up relu3
I0428 19:55:17.988415 28155 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:17.988418 28155 net.cpp:139] Memory required for data: 5022800
I0428 19:55:17.988422 28155 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:55:17.988427 28155 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:55:17.988430 28155 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:55:17.988436 28155 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:55:17.988442 28155 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:55:17.988486 28155 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:55:17.988490 28155 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:17.988494 28155 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:55:17.988497 28155 net.cpp:139] Memory required for data: 5030800
I0428 19:55:17.988500 28155 layer_factory.hpp:77] Creating layer accuracy
I0428 19:55:17.988507 28155 net.cpp:86] Creating Layer accuracy
I0428 19:55:17.988509 28155 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:55:17.988513 28155 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:55:17.988518 28155 net.cpp:382] accuracy -> accuracy
I0428 19:55:17.988525 28155 net.cpp:124] Setting up accuracy
I0428 19:55:17.988528 28155 net.cpp:131] Top shape: (1)
I0428 19:55:17.988531 28155 net.cpp:139] Memory required for data: 5030804
I0428 19:55:17.988534 28155 layer_factory.hpp:77] Creating layer loss
I0428 19:55:17.988538 28155 net.cpp:86] Creating Layer loss
I0428 19:55:17.988541 28155 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:55:17.988545 28155 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:55:17.988548 28155 net.cpp:382] loss -> loss
I0428 19:55:17.988554 28155 layer_factory.hpp:77] Creating layer loss
I0428 19:55:17.988827 28155 net.cpp:124] Setting up loss
I0428 19:55:17.988837 28155 net.cpp:131] Top shape: (1)
I0428 19:55:17.988842 28155 net.cpp:134]     with loss weight 1
I0428 19:55:17.988857 28155 net.cpp:139] Memory required for data: 5030808
I0428 19:55:17.988862 28155 net.cpp:200] loss needs backward computation.
I0428 19:55:17.988865 28155 net.cpp:202] accuracy does not need backward computation.
I0428 19:55:17.988869 28155 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:55:17.988873 28155 net.cpp:200] relu3 needs backward computation.
I0428 19:55:17.988875 28155 net.cpp:200] ip3 needs backward computation.
I0428 19:55:17.988878 28155 net.cpp:200] relu2 needs backward computation.
I0428 19:55:17.988880 28155 net.cpp:200] ip2 needs backward computation.
I0428 19:55:17.988883 28155 net.cpp:200] relu1 needs backward computation.
I0428 19:55:17.988886 28155 net.cpp:200] ip1 needs backward computation.
I0428 19:55:17.988889 28155 net.cpp:200] pool1 needs backward computation.
I0428 19:55:17.988893 28155 net.cpp:200] conv1 needs backward computation.
I0428 19:55:17.988895 28155 net.cpp:200] pool0 needs backward computation.
I0428 19:55:17.988905 28155 net.cpp:200] conv0 needs backward computation.
I0428 19:55:17.988909 28155 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:55:17.988914 28155 net.cpp:202] mnist does not need backward computation.
I0428 19:55:17.988915 28155 net.cpp:244] This network produces output accuracy
I0428 19:55:17.988919 28155 net.cpp:244] This network produces output loss
I0428 19:55:17.988931 28155 net.cpp:257] Network initialization done.
I0428 19:55:17.988973 28155 solver.cpp:56] Solver scaffolding done.
I0428 19:55:17.989323 28155 caffe.cpp:248] Starting Optimization
I0428 19:55:17.989336 28155 solver.cpp:273] Solving LeNet
I0428 19:55:17.989339 28155 solver.cpp:274] Learning Rate Policy: inv
I0428 19:55:17.990154 28155 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:55:17.995578 28155 blocking_queue.cpp:49] Waiting for data
I0428 19:55:18.061941 28162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:18.062551 28155 solver.cpp:398]     Test net output #0: accuracy = 0.0734
I0428 19:55:18.062567 28155 solver.cpp:398]     Test net output #1: loss = 2.32035 (* 1 = 2.32035 loss)
I0428 19:55:18.066460 28155 solver.cpp:219] Iteration 0 (-1.46013e-30 iter/s, 0.0770969s/100 iters), loss = 2.32052
I0428 19:55:18.066483 28155 solver.cpp:238]     Train net output #0: loss = 2.32052 (* 1 = 2.32052 loss)
I0428 19:55:18.066494 28155 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:55:18.216805 28155 solver.cpp:219] Iteration 100 (665.314 iter/s, 0.150305s/100 iters), loss = 1.63468
I0428 19:55:18.216840 28155 solver.cpp:238]     Train net output #0: loss = 1.63468 (* 1 = 1.63468 loss)
I0428 19:55:18.216847 28155 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:55:18.364969 28155 solver.cpp:219] Iteration 200 (675.154 iter/s, 0.148114s/100 iters), loss = 0.919966
I0428 19:55:18.364992 28155 solver.cpp:238]     Train net output #0: loss = 0.919966 (* 1 = 0.919966 loss)
I0428 19:55:18.364998 28155 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:55:18.536638 28155 solver.cpp:219] Iteration 300 (582.661 iter/s, 0.171626s/100 iters), loss = 0.92253
I0428 19:55:18.536705 28155 solver.cpp:238]     Train net output #0: loss = 0.92253 (* 1 = 0.92253 loss)
I0428 19:55:18.536717 28155 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:55:18.721082 28155 solver.cpp:219] Iteration 400 (542.42 iter/s, 0.184359s/100 iters), loss = 0.544811
I0428 19:55:18.721127 28155 solver.cpp:238]     Train net output #0: loss = 0.544811 (* 1 = 0.544811 loss)
I0428 19:55:18.721139 28155 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:55:18.905570 28155 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:55:18.969460 28162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:18.971498 28155 solver.cpp:398]     Test net output #0: accuracy = 0.7648
I0428 19:55:18.971527 28155 solver.cpp:398]     Test net output #1: loss = 0.605369 (* 1 = 0.605369 loss)
I0428 19:55:18.973105 28155 solver.cpp:219] Iteration 500 (396.886 iter/s, 0.251961s/100 iters), loss = 0.46969
I0428 19:55:18.973160 28155 solver.cpp:238]     Train net output #0: loss = 0.46969 (* 1 = 0.46969 loss)
I0428 19:55:18.973170 28155 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:55:19.140857 28155 solver.cpp:219] Iteration 600 (596.373 iter/s, 0.16768s/100 iters), loss = 0.583107
I0428 19:55:19.140908 28155 solver.cpp:238]     Train net output #0: loss = 0.583107 (* 1 = 0.583107 loss)
I0428 19:55:19.140919 28155 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:55:19.322790 28155 solver.cpp:219] Iteration 700 (549.841 iter/s, 0.181871s/100 iters), loss = 0.759958
I0428 19:55:19.322834 28155 solver.cpp:238]     Train net output #0: loss = 0.759958 (* 1 = 0.759958 loss)
I0428 19:55:19.322845 28155 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:55:19.503075 28155 solver.cpp:219] Iteration 800 (554.859 iter/s, 0.180226s/100 iters), loss = 0.449671
I0428 19:55:19.503119 28155 solver.cpp:238]     Train net output #0: loss = 0.449671 (* 1 = 0.449671 loss)
I0428 19:55:19.503132 28155 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:55:19.687855 28155 solver.cpp:219] Iteration 900 (541.356 iter/s, 0.184721s/100 iters), loss = 0.496597
I0428 19:55:19.687902 28155 solver.cpp:238]     Train net output #0: loss = 0.496597 (* 1 = 0.496597 loss)
I0428 19:55:19.687917 28155 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:55:19.748932 28161 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:19.871242 28155 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:55:19.874028 28155 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:55:19.875437 28155 solver.cpp:311] Iteration 1000, loss = 0.116093
I0428 19:55:19.875463 28155 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:55:19.940778 28162 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:55:19.941613 28155 solver.cpp:398]     Test net output #0: accuracy = 0.9687
I0428 19:55:19.941642 28155 solver.cpp:398]     Test net output #1: loss = 0.106753 (* 1 = 0.106753 loss)
I0428 19:55:19.941650 28155 solver.cpp:316] Optimization Done.
I0428 19:55:19.941654 28155 caffe.cpp:259] Optimization Done.
