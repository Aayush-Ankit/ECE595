I0428 19:49:23.280891 26750 caffe.cpp:218] Using GPUs 0
I0428 19:49:23.317297 26750 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:23.768712 26750 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test573.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:23.768864 26750 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test573.prototxt
I0428 19:49:23.769213 26750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:23.769243 26750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:23.769356 26750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:23.769423 26750 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:23.769503 26750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:23.769525 26750 net.cpp:86] Creating Layer mnist
I0428 19:49:23.769531 26750 net.cpp:382] mnist -> data
I0428 19:49:23.769549 26750 net.cpp:382] mnist -> label
I0428 19:49:23.770455 26750 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:23.772639 26750 net.cpp:124] Setting up mnist
I0428 19:49:23.772682 26750 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:23.772688 26750 net.cpp:131] Top shape: 64 (64)
I0428 19:49:23.772691 26750 net.cpp:139] Memory required for data: 200960
I0428 19:49:23.772697 26750 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:23.772712 26750 net.cpp:86] Creating Layer conv0
I0428 19:49:23.772729 26750 net.cpp:408] conv0 <- data
I0428 19:49:23.772739 26750 net.cpp:382] conv0 -> conv0
I0428 19:49:24.005388 26750 net.cpp:124] Setting up conv0
I0428 19:49:24.005414 26750 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:24.005417 26750 net.cpp:139] Memory required for data: 938240
I0428 19:49:24.005431 26750 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:24.005444 26750 net.cpp:86] Creating Layer pool0
I0428 19:49:24.005447 26750 net.cpp:408] pool0 <- conv0
I0428 19:49:24.005453 26750 net.cpp:382] pool0 -> pool0
I0428 19:49:24.005512 26750 net.cpp:124] Setting up pool0
I0428 19:49:24.005517 26750 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:24.005520 26750 net.cpp:139] Memory required for data: 1122560
I0428 19:49:24.005523 26750 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:24.005533 26750 net.cpp:86] Creating Layer conv1
I0428 19:49:24.005537 26750 net.cpp:408] conv1 <- pool0
I0428 19:49:24.005542 26750 net.cpp:382] conv1 -> conv1
I0428 19:49:24.007339 26750 net.cpp:124] Setting up conv1
I0428 19:49:24.007369 26750 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:24.007372 26750 net.cpp:139] Memory required for data: 1204480
I0428 19:49:24.007380 26750 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:24.007388 26750 net.cpp:86] Creating Layer pool1
I0428 19:49:24.007392 26750 net.cpp:408] pool1 <- conv1
I0428 19:49:24.007397 26750 net.cpp:382] pool1 -> pool1
I0428 19:49:24.007432 26750 net.cpp:124] Setting up pool1
I0428 19:49:24.007437 26750 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:24.007441 26750 net.cpp:139] Memory required for data: 1224960
I0428 19:49:24.007443 26750 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:24.007450 26750 net.cpp:86] Creating Layer ip1
I0428 19:49:24.007453 26750 net.cpp:408] ip1 <- pool1
I0428 19:49:24.007458 26750 net.cpp:382] ip1 -> ip1
I0428 19:49:24.008435 26750 net.cpp:124] Setting up ip1
I0428 19:49:24.008445 26750 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:24.008466 26750 net.cpp:139] Memory required for data: 1231360
I0428 19:49:24.008473 26750 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:24.008479 26750 net.cpp:86] Creating Layer relu1
I0428 19:49:24.008483 26750 net.cpp:408] relu1 <- ip1
I0428 19:49:24.008487 26750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:24.008653 26750 net.cpp:124] Setting up relu1
I0428 19:49:24.008666 26750 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:24.008669 26750 net.cpp:139] Memory required for data: 1237760
I0428 19:49:24.008672 26750 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:24.008678 26750 net.cpp:86] Creating Layer ip2
I0428 19:49:24.008682 26750 net.cpp:408] ip2 <- ip1
I0428 19:49:24.008687 26750 net.cpp:382] ip2 -> ip2
I0428 19:49:24.008796 26750 net.cpp:124] Setting up ip2
I0428 19:49:24.008803 26750 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:24.008806 26750 net.cpp:139] Memory required for data: 1250560
I0428 19:49:24.008827 26750 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:24.008849 26750 net.cpp:86] Creating Layer relu2
I0428 19:49:24.008852 26750 net.cpp:408] relu2 <- ip2
I0428 19:49:24.008857 26750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:24.009641 26750 net.cpp:124] Setting up relu2
I0428 19:49:24.009654 26750 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:24.009672 26750 net.cpp:139] Memory required for data: 1263360
I0428 19:49:24.009675 26750 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:24.009682 26750 net.cpp:86] Creating Layer ip3
I0428 19:49:24.009686 26750 net.cpp:408] ip3 <- ip2
I0428 19:49:24.009691 26750 net.cpp:382] ip3 -> ip3
I0428 19:49:24.009802 26750 net.cpp:124] Setting up ip3
I0428 19:49:24.009810 26750 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:24.009814 26750 net.cpp:139] Memory required for data: 1265920
I0428 19:49:24.009820 26750 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:24.009825 26750 net.cpp:86] Creating Layer relu3
I0428 19:49:24.009829 26750 net.cpp:408] relu3 <- ip3
I0428 19:49:24.009832 26750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:24.009989 26750 net.cpp:124] Setting up relu3
I0428 19:49:24.009997 26750 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:24.010000 26750 net.cpp:139] Memory required for data: 1268480
I0428 19:49:24.010004 26750 layer_factory.hpp:77] Creating layer loss
I0428 19:49:24.010010 26750 net.cpp:86] Creating Layer loss
I0428 19:49:24.010027 26750 net.cpp:408] loss <- ip3
I0428 19:49:24.010031 26750 net.cpp:408] loss <- label
I0428 19:49:24.010037 26750 net.cpp:382] loss -> loss
I0428 19:49:24.010051 26750 layer_factory.hpp:77] Creating layer loss
I0428 19:49:24.010270 26750 net.cpp:124] Setting up loss
I0428 19:49:24.010279 26750 net.cpp:131] Top shape: (1)
I0428 19:49:24.010282 26750 net.cpp:134]     with loss weight 1
I0428 19:49:24.010295 26750 net.cpp:139] Memory required for data: 1268484
I0428 19:49:24.010299 26750 net.cpp:200] loss needs backward computation.
I0428 19:49:24.010303 26750 net.cpp:200] relu3 needs backward computation.
I0428 19:49:24.010306 26750 net.cpp:200] ip3 needs backward computation.
I0428 19:49:24.010309 26750 net.cpp:200] relu2 needs backward computation.
I0428 19:49:24.010313 26750 net.cpp:200] ip2 needs backward computation.
I0428 19:49:24.010315 26750 net.cpp:200] relu1 needs backward computation.
I0428 19:49:24.010318 26750 net.cpp:200] ip1 needs backward computation.
I0428 19:49:24.010321 26750 net.cpp:200] pool1 needs backward computation.
I0428 19:49:24.010324 26750 net.cpp:200] conv1 needs backward computation.
I0428 19:49:24.010327 26750 net.cpp:200] pool0 needs backward computation.
I0428 19:49:24.010330 26750 net.cpp:200] conv0 needs backward computation.
I0428 19:49:24.010334 26750 net.cpp:202] mnist does not need backward computation.
I0428 19:49:24.010352 26750 net.cpp:244] This network produces output loss
I0428 19:49:24.010365 26750 net.cpp:257] Network initialization done.
I0428 19:49:24.010671 26750 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test573.prototxt
I0428 19:49:24.010712 26750 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:24.010799 26750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:24.010872 26750 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:24.010917 26750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:24.010929 26750 net.cpp:86] Creating Layer mnist
I0428 19:49:24.010934 26750 net.cpp:382] mnist -> data
I0428 19:49:24.010941 26750 net.cpp:382] mnist -> label
I0428 19:49:24.011018 26750 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:24.012949 26750 net.cpp:124] Setting up mnist
I0428 19:49:24.012979 26750 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:24.013000 26750 net.cpp:131] Top shape: 100 (100)
I0428 19:49:24.013002 26750 net.cpp:139] Memory required for data: 314000
I0428 19:49:24.013006 26750 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:24.013012 26750 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:24.013016 26750 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:24.013021 26750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:24.013027 26750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:24.013073 26750 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:24.013079 26750 net.cpp:131] Top shape: 100 (100)
I0428 19:49:24.013082 26750 net.cpp:131] Top shape: 100 (100)
I0428 19:49:24.013085 26750 net.cpp:139] Memory required for data: 314800
I0428 19:49:24.013088 26750 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:24.013097 26750 net.cpp:86] Creating Layer conv0
I0428 19:49:24.013099 26750 net.cpp:408] conv0 <- data
I0428 19:49:24.013104 26750 net.cpp:382] conv0 -> conv0
I0428 19:49:24.014789 26750 net.cpp:124] Setting up conv0
I0428 19:49:24.014818 26750 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:24.014822 26750 net.cpp:139] Memory required for data: 1466800
I0428 19:49:24.014832 26750 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:24.014837 26750 net.cpp:86] Creating Layer pool0
I0428 19:49:24.014842 26750 net.cpp:408] pool0 <- conv0
I0428 19:49:24.014845 26750 net.cpp:382] pool0 -> pool0
I0428 19:49:24.014880 26750 net.cpp:124] Setting up pool0
I0428 19:49:24.014885 26750 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:24.014889 26750 net.cpp:139] Memory required for data: 1754800
I0428 19:49:24.014891 26750 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:24.014899 26750 net.cpp:86] Creating Layer conv1
I0428 19:49:24.014904 26750 net.cpp:408] conv1 <- pool0
I0428 19:49:24.014907 26750 net.cpp:382] conv1 -> conv1
I0428 19:49:24.017033 26750 net.cpp:124] Setting up conv1
I0428 19:49:24.017046 26750 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:24.017067 26750 net.cpp:139] Memory required for data: 1882800
I0428 19:49:24.017076 26750 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:24.017082 26750 net.cpp:86] Creating Layer pool1
I0428 19:49:24.017086 26750 net.cpp:408] pool1 <- conv1
I0428 19:49:24.017091 26750 net.cpp:382] pool1 -> pool1
I0428 19:49:24.017164 26750 net.cpp:124] Setting up pool1
I0428 19:49:24.017185 26750 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:24.017189 26750 net.cpp:139] Memory required for data: 1914800
I0428 19:49:24.017191 26750 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:24.017196 26750 net.cpp:86] Creating Layer ip1
I0428 19:49:24.017199 26750 net.cpp:408] ip1 <- pool1
I0428 19:49:24.017204 26750 net.cpp:382] ip1 -> ip1
I0428 19:49:24.017312 26750 net.cpp:124] Setting up ip1
I0428 19:49:24.017319 26750 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:24.017339 26750 net.cpp:139] Memory required for data: 1924800
I0428 19:49:24.017348 26750 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:24.017351 26750 net.cpp:86] Creating Layer relu1
I0428 19:49:24.017354 26750 net.cpp:408] relu1 <- ip1
I0428 19:49:24.017359 26750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:24.017563 26750 net.cpp:124] Setting up relu1
I0428 19:49:24.017572 26750 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:24.017575 26750 net.cpp:139] Memory required for data: 1934800
I0428 19:49:24.017578 26750 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:24.017585 26750 net.cpp:86] Creating Layer ip2
I0428 19:49:24.017590 26750 net.cpp:408] ip2 <- ip1
I0428 19:49:24.017594 26750 net.cpp:382] ip2 -> ip2
I0428 19:49:24.017722 26750 net.cpp:124] Setting up ip2
I0428 19:49:24.017730 26750 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:24.017735 26750 net.cpp:139] Memory required for data: 1954800
I0428 19:49:24.017740 26750 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:24.017746 26750 net.cpp:86] Creating Layer relu2
I0428 19:49:24.017750 26750 net.cpp:408] relu2 <- ip2
I0428 19:49:24.017753 26750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:24.017932 26750 net.cpp:124] Setting up relu2
I0428 19:49:24.017940 26750 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:24.017943 26750 net.cpp:139] Memory required for data: 1974800
I0428 19:49:24.017947 26750 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:24.017953 26750 net.cpp:86] Creating Layer ip3
I0428 19:49:24.017956 26750 net.cpp:408] ip3 <- ip2
I0428 19:49:24.017962 26750 net.cpp:382] ip3 -> ip3
I0428 19:49:24.018102 26750 net.cpp:124] Setting up ip3
I0428 19:49:24.018111 26750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:24.018115 26750 net.cpp:139] Memory required for data: 1978800
I0428 19:49:24.018121 26750 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:24.018126 26750 net.cpp:86] Creating Layer relu3
I0428 19:49:24.018129 26750 net.cpp:408] relu3 <- ip3
I0428 19:49:24.018133 26750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:24.018929 26750 net.cpp:124] Setting up relu3
I0428 19:49:24.018940 26750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:24.018960 26750 net.cpp:139] Memory required for data: 1982800
I0428 19:49:24.018963 26750 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:24.018968 26750 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:24.018975 26750 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:24.018986 26750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:24.018993 26750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:24.019037 26750 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:24.019042 26750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:24.019047 26750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:24.019049 26750 net.cpp:139] Memory required for data: 1990800
I0428 19:49:24.019052 26750 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:24.019062 26750 net.cpp:86] Creating Layer accuracy
I0428 19:49:24.019067 26750 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:24.019070 26750 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:24.019075 26750 net.cpp:382] accuracy -> accuracy
I0428 19:49:24.019083 26750 net.cpp:124] Setting up accuracy
I0428 19:49:24.019086 26750 net.cpp:131] Top shape: (1)
I0428 19:49:24.019089 26750 net.cpp:139] Memory required for data: 1990804
I0428 19:49:24.019093 26750 layer_factory.hpp:77] Creating layer loss
I0428 19:49:24.019099 26750 net.cpp:86] Creating Layer loss
I0428 19:49:24.019104 26750 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:24.019106 26750 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:24.019111 26750 net.cpp:382] loss -> loss
I0428 19:49:24.019117 26750 layer_factory.hpp:77] Creating layer loss
I0428 19:49:24.019378 26750 net.cpp:124] Setting up loss
I0428 19:49:24.019387 26750 net.cpp:131] Top shape: (1)
I0428 19:49:24.019390 26750 net.cpp:134]     with loss weight 1
I0428 19:49:24.019397 26750 net.cpp:139] Memory required for data: 1990808
I0428 19:49:24.019408 26750 net.cpp:200] loss needs backward computation.
I0428 19:49:24.019412 26750 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:24.019417 26750 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:24.019419 26750 net.cpp:200] relu3 needs backward computation.
I0428 19:49:24.019421 26750 net.cpp:200] ip3 needs backward computation.
I0428 19:49:24.019425 26750 net.cpp:200] relu2 needs backward computation.
I0428 19:49:24.019428 26750 net.cpp:200] ip2 needs backward computation.
I0428 19:49:24.019430 26750 net.cpp:200] relu1 needs backward computation.
I0428 19:49:24.019433 26750 net.cpp:200] ip1 needs backward computation.
I0428 19:49:24.019436 26750 net.cpp:200] pool1 needs backward computation.
I0428 19:49:24.019439 26750 net.cpp:200] conv1 needs backward computation.
I0428 19:49:24.019443 26750 net.cpp:200] pool0 needs backward computation.
I0428 19:49:24.019445 26750 net.cpp:200] conv0 needs backward computation.
I0428 19:49:24.019449 26750 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:24.019459 26750 net.cpp:202] mnist does not need backward computation.
I0428 19:49:24.019460 26750 net.cpp:244] This network produces output accuracy
I0428 19:49:24.019464 26750 net.cpp:244] This network produces output loss
I0428 19:49:24.019479 26750 net.cpp:257] Network initialization done.
I0428 19:49:24.019536 26750 solver.cpp:56] Solver scaffolding done.
I0428 19:49:24.019955 26750 caffe.cpp:248] Starting Optimization
I0428 19:49:24.019961 26750 solver.cpp:273] Solving LeNet
I0428 19:49:24.019963 26750 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:24.020859 26750 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:24.024416 26750 blocking_queue.cpp:49] Waiting for data
I0428 19:49:24.083909 26757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:24.084446 26750 solver.cpp:398]     Test net output #0: accuracy = 0.1105
I0428 19:49:24.084483 26750 solver.cpp:398]     Test net output #1: loss = 2.3315 (* 1 = 2.3315 loss)
I0428 19:49:24.086352 26750 solver.cpp:219] Iteration 0 (0 iter/s, 0.066346s/100 iters), loss = 2.30574
I0428 19:49:24.086391 26750 solver.cpp:238]     Train net output #0: loss = 2.30574 (* 1 = 2.30574 loss)
I0428 19:49:24.086402 26750 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:24.157205 26750 solver.cpp:219] Iteration 100 (1412.07 iter/s, 0.0708178s/100 iters), loss = 0.498934
I0428 19:49:24.157245 26750 solver.cpp:238]     Train net output #0: loss = 0.498934 (* 1 = 0.498934 loss)
I0428 19:49:24.157253 26750 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:24.228071 26750 solver.cpp:219] Iteration 200 (1411.79 iter/s, 0.0708321s/100 iters), loss = 0.211337
I0428 19:49:24.228111 26750 solver.cpp:238]     Train net output #0: loss = 0.211337 (* 1 = 0.211337 loss)
I0428 19:49:24.228118 26750 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:24.298249 26750 solver.cpp:219] Iteration 300 (1425.62 iter/s, 0.070145s/100 iters), loss = 0.307214
I0428 19:49:24.298287 26750 solver.cpp:238]     Train net output #0: loss = 0.307214 (* 1 = 0.307214 loss)
I0428 19:49:24.298293 26750 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:24.368707 26750 solver.cpp:219] Iteration 400 (1419.92 iter/s, 0.0704266s/100 iters), loss = 0.213068
I0428 19:49:24.368732 26750 solver.cpp:238]     Train net output #0: loss = 0.213069 (* 1 = 0.213069 loss)
I0428 19:49:24.368739 26750 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:24.437003 26750 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:24.490553 26757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:24.491050 26750 solver.cpp:398]     Test net output #0: accuracy = 0.9413
I0428 19:49:24.491084 26750 solver.cpp:398]     Test net output #1: loss = 0.193554 (* 1 = 0.193554 loss)
I0428 19:49:24.491827 26750 solver.cpp:219] Iteration 500 (812.462 iter/s, 0.123083s/100 iters), loss = 0.120503
I0428 19:49:24.491866 26750 solver.cpp:238]     Train net output #0: loss = 0.120503 (* 1 = 0.120503 loss)
I0428 19:49:24.491888 26750 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:24.567843 26750 solver.cpp:219] Iteration 600 (1316.28 iter/s, 0.0759716s/100 iters), loss = 0.209288
I0428 19:49:24.567896 26750 solver.cpp:238]     Train net output #0: loss = 0.209288 (* 1 = 0.209288 loss)
I0428 19:49:24.567903 26750 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:24.640434 26750 solver.cpp:219] Iteration 700 (1378.49 iter/s, 0.0725432s/100 iters), loss = 0.208439
I0428 19:49:24.640471 26750 solver.cpp:238]     Train net output #0: loss = 0.208439 (* 1 = 0.208439 loss)
I0428 19:49:24.640477 26750 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:24.711062 26750 solver.cpp:219] Iteration 800 (1416.48 iter/s, 0.0705976s/100 iters), loss = 0.333605
I0428 19:49:24.711102 26750 solver.cpp:238]     Train net output #0: loss = 0.333605 (* 1 = 0.333605 loss)
I0428 19:49:24.711107 26750 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:24.781733 26750 solver.cpp:219] Iteration 900 (1415.64 iter/s, 0.0706396s/100 iters), loss = 0.134199
I0428 19:49:24.781772 26750 solver.cpp:238]     Train net output #0: loss = 0.134199 (* 1 = 0.134199 loss)
I0428 19:49:24.781779 26750 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:24.805375 26756 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:24.851867 26750 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:24.852629 26750 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:24.853150 26750 solver.cpp:311] Iteration 1000, loss = 0.185677
I0428 19:49:24.853185 26750 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:24.927618 26757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:24.928140 26750 solver.cpp:398]     Test net output #0: accuracy = 0.9645
I0428 19:49:24.928174 26750 solver.cpp:398]     Test net output #1: loss = 0.114137 (* 1 = 0.114137 loss)
I0428 19:49:24.928179 26750 solver.cpp:316] Optimization Done.
I0428 19:49:24.928182 26750 caffe.cpp:259] Optimization Done.
