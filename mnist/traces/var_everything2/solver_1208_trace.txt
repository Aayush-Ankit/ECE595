I0428 20:13:53.453474 32562 caffe.cpp:218] Using GPUs 0
I0428 20:13:53.482784 32562 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:53.930066 32562 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1208.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:53.930215 32562 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1208.prototxt
I0428 20:13:53.930570 32562 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:53.930588 32562 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:53.930667 32562 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:53.930735 32562 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:53.930829 32562 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:53.930847 32562 net.cpp:86] Creating Layer mnist
I0428 20:13:53.930855 32562 net.cpp:382] mnist -> data
I0428 20:13:53.930872 32562 net.cpp:382] mnist -> label
I0428 20:13:53.931787 32562 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:53.934063 32562 net.cpp:124] Setting up mnist
I0428 20:13:53.934094 32562 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:53.934099 32562 net.cpp:131] Top shape: 64 (64)
I0428 20:13:53.934101 32562 net.cpp:139] Memory required for data: 200960
I0428 20:13:53.934108 32562 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:53.934121 32562 net.cpp:86] Creating Layer conv0
I0428 20:13:53.934146 32562 net.cpp:408] conv0 <- data
I0428 20:13:53.934157 32562 net.cpp:382] conv0 -> conv0
I0428 20:13:54.164945 32562 net.cpp:124] Setting up conv0
I0428 20:13:54.164988 32562 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:54.165006 32562 net.cpp:139] Memory required for data: 3887360
I0428 20:13:54.165021 32562 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:54.165050 32562 net.cpp:86] Creating Layer pool0
I0428 20:13:54.165055 32562 net.cpp:408] pool0 <- conv0
I0428 20:13:54.165060 32562 net.cpp:382] pool0 -> pool0
I0428 20:13:54.165103 32562 net.cpp:124] Setting up pool0
I0428 20:13:54.165110 32562 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:54.165113 32562 net.cpp:139] Memory required for data: 4808960
I0428 20:13:54.165117 32562 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:54.165127 32562 net.cpp:86] Creating Layer conv1
I0428 20:13:54.165132 32562 net.cpp:408] conv1 <- pool0
I0428 20:13:54.165151 32562 net.cpp:382] conv1 -> conv1
I0428 20:13:54.167390 32562 net.cpp:124] Setting up conv1
I0428 20:13:54.167404 32562 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:54.167408 32562 net.cpp:139] Memory required for data: 6447360
I0428 20:13:54.167417 32562 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:54.167439 32562 net.cpp:86] Creating Layer pool1
I0428 20:13:54.167443 32562 net.cpp:408] pool1 <- conv1
I0428 20:13:54.167448 32562 net.cpp:382] pool1 -> pool1
I0428 20:13:54.167482 32562 net.cpp:124] Setting up pool1
I0428 20:13:54.167488 32562 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:54.167491 32562 net.cpp:139] Memory required for data: 6856960
I0428 20:13:54.167495 32562 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:54.167501 32562 net.cpp:86] Creating Layer ip1
I0428 20:13:54.167505 32562 net.cpp:408] ip1 <- pool1
I0428 20:13:54.167510 32562 net.cpp:382] ip1 -> ip1
I0428 20:13:54.168942 32562 net.cpp:124] Setting up ip1
I0428 20:13:54.168972 32562 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:54.168975 32562 net.cpp:139] Memory required for data: 6869760
I0428 20:13:54.168983 32562 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:54.168989 32562 net.cpp:86] Creating Layer relu1
I0428 20:13:54.168993 32562 net.cpp:408] relu1 <- ip1
I0428 20:13:54.168998 32562 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:54.169221 32562 net.cpp:124] Setting up relu1
I0428 20:13:54.169230 32562 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:54.169234 32562 net.cpp:139] Memory required for data: 6882560
I0428 20:13:54.169236 32562 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:54.169244 32562 net.cpp:86] Creating Layer ip2
I0428 20:13:54.169246 32562 net.cpp:408] ip2 <- ip1
I0428 20:13:54.169251 32562 net.cpp:382] ip2 -> ip2
I0428 20:13:54.170194 32562 net.cpp:124] Setting up ip2
I0428 20:13:54.170207 32562 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:54.170225 32562 net.cpp:139] Memory required for data: 6895360
I0428 20:13:54.170233 32562 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:54.170238 32562 net.cpp:86] Creating Layer relu2
I0428 20:13:54.170243 32562 net.cpp:408] relu2 <- ip2
I0428 20:13:54.170262 32562 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:54.171129 32562 net.cpp:124] Setting up relu2
I0428 20:13:54.171141 32562 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:54.171161 32562 net.cpp:139] Memory required for data: 6908160
I0428 20:13:54.171164 32562 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:54.171172 32562 net.cpp:86] Creating Layer ip3
I0428 20:13:54.171175 32562 net.cpp:408] ip3 <- ip2
I0428 20:13:54.171180 32562 net.cpp:382] ip3 -> ip3
I0428 20:13:54.171293 32562 net.cpp:124] Setting up ip3
I0428 20:13:54.171300 32562 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:54.171303 32562 net.cpp:139] Memory required for data: 6910720
I0428 20:13:54.171311 32562 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:54.171316 32562 net.cpp:86] Creating Layer relu3
I0428 20:13:54.171319 32562 net.cpp:408] relu3 <- ip3
I0428 20:13:54.171324 32562 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:54.171502 32562 net.cpp:124] Setting up relu3
I0428 20:13:54.171511 32562 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:54.171515 32562 net.cpp:139] Memory required for data: 6913280
I0428 20:13:54.171519 32562 layer_factory.hpp:77] Creating layer loss
I0428 20:13:54.171524 32562 net.cpp:86] Creating Layer loss
I0428 20:13:54.171526 32562 net.cpp:408] loss <- ip3
I0428 20:13:54.171531 32562 net.cpp:408] loss <- label
I0428 20:13:54.171536 32562 net.cpp:382] loss -> loss
I0428 20:13:54.171555 32562 layer_factory.hpp:77] Creating layer loss
I0428 20:13:54.171808 32562 net.cpp:124] Setting up loss
I0428 20:13:54.171816 32562 net.cpp:131] Top shape: (1)
I0428 20:13:54.171819 32562 net.cpp:134]     with loss weight 1
I0428 20:13:54.171833 32562 net.cpp:139] Memory required for data: 6913284
I0428 20:13:54.171838 32562 net.cpp:200] loss needs backward computation.
I0428 20:13:54.171840 32562 net.cpp:200] relu3 needs backward computation.
I0428 20:13:54.171844 32562 net.cpp:200] ip3 needs backward computation.
I0428 20:13:54.171845 32562 net.cpp:200] relu2 needs backward computation.
I0428 20:13:54.171849 32562 net.cpp:200] ip2 needs backward computation.
I0428 20:13:54.171850 32562 net.cpp:200] relu1 needs backward computation.
I0428 20:13:54.171854 32562 net.cpp:200] ip1 needs backward computation.
I0428 20:13:54.171856 32562 net.cpp:200] pool1 needs backward computation.
I0428 20:13:54.171859 32562 net.cpp:200] conv1 needs backward computation.
I0428 20:13:54.171861 32562 net.cpp:200] pool0 needs backward computation.
I0428 20:13:54.171864 32562 net.cpp:200] conv0 needs backward computation.
I0428 20:13:54.171867 32562 net.cpp:202] mnist does not need backward computation.
I0428 20:13:54.171869 32562 net.cpp:244] This network produces output loss
I0428 20:13:54.171880 32562 net.cpp:257] Network initialization done.
I0428 20:13:54.172204 32562 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1208.prototxt
I0428 20:13:54.172247 32562 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:54.172336 32562 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:54.172467 32562 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:54.172519 32562 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:54.172531 32562 net.cpp:86] Creating Layer mnist
I0428 20:13:54.172538 32562 net.cpp:382] mnist -> data
I0428 20:13:54.172545 32562 net.cpp:382] mnist -> label
I0428 20:13:54.172636 32562 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:54.173840 32562 net.cpp:124] Setting up mnist
I0428 20:13:54.173868 32562 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:54.173873 32562 net.cpp:131] Top shape: 100 (100)
I0428 20:13:54.173877 32562 net.cpp:139] Memory required for data: 314000
I0428 20:13:54.173879 32562 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:54.173885 32562 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:54.173916 32562 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:54.173923 32562 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:54.173928 32562 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:54.173970 32562 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:54.173977 32562 net.cpp:131] Top shape: 100 (100)
I0428 20:13:54.173981 32562 net.cpp:131] Top shape: 100 (100)
I0428 20:13:54.173985 32562 net.cpp:139] Memory required for data: 314800
I0428 20:13:54.173986 32562 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:54.173995 32562 net.cpp:86] Creating Layer conv0
I0428 20:13:54.173998 32562 net.cpp:408] conv0 <- data
I0428 20:13:54.174005 32562 net.cpp:382] conv0 -> conv0
I0428 20:13:54.175561 32562 net.cpp:124] Setting up conv0
I0428 20:13:54.175575 32562 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:54.175580 32562 net.cpp:139] Memory required for data: 6074800
I0428 20:13:54.175603 32562 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:54.175609 32562 net.cpp:86] Creating Layer pool0
I0428 20:13:54.175612 32562 net.cpp:408] pool0 <- conv0
I0428 20:13:54.175618 32562 net.cpp:382] pool0 -> pool0
I0428 20:13:54.175678 32562 net.cpp:124] Setting up pool0
I0428 20:13:54.175684 32562 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:54.175686 32562 net.cpp:139] Memory required for data: 7514800
I0428 20:13:54.175689 32562 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:54.175700 32562 net.cpp:86] Creating Layer conv1
I0428 20:13:54.175704 32562 net.cpp:408] conv1 <- pool0
I0428 20:13:54.175709 32562 net.cpp:382] conv1 -> conv1
I0428 20:13:54.177747 32562 net.cpp:124] Setting up conv1
I0428 20:13:54.177763 32562 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:54.177767 32562 net.cpp:139] Memory required for data: 10074800
I0428 20:13:54.177776 32562 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:54.177783 32562 net.cpp:86] Creating Layer pool1
I0428 20:13:54.177786 32562 net.cpp:408] pool1 <- conv1
I0428 20:13:54.177791 32562 net.cpp:382] pool1 -> pool1
I0428 20:13:54.177845 32562 net.cpp:124] Setting up pool1
I0428 20:13:54.177852 32562 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:54.177855 32562 net.cpp:139] Memory required for data: 10714800
I0428 20:13:54.177858 32562 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:54.177865 32562 net.cpp:86] Creating Layer ip1
I0428 20:13:54.177868 32562 net.cpp:408] ip1 <- pool1
I0428 20:13:54.177875 32562 net.cpp:382] ip1 -> ip1
I0428 20:13:54.178417 32562 net.cpp:124] Setting up ip1
I0428 20:13:54.178426 32562 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:54.178439 32562 net.cpp:139] Memory required for data: 10734800
I0428 20:13:54.178447 32562 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:54.178452 32562 net.cpp:86] Creating Layer relu1
I0428 20:13:54.178455 32562 net.cpp:408] relu1 <- ip1
I0428 20:13:54.178459 32562 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:54.178645 32562 net.cpp:124] Setting up relu1
I0428 20:13:54.178655 32562 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:54.178658 32562 net.cpp:139] Memory required for data: 10754800
I0428 20:13:54.178661 32562 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:54.178668 32562 net.cpp:86] Creating Layer ip2
I0428 20:13:54.178671 32562 net.cpp:408] ip2 <- ip1
I0428 20:13:54.178678 32562 net.cpp:382] ip2 -> ip2
I0428 20:13:54.178799 32562 net.cpp:124] Setting up ip2
I0428 20:13:54.178807 32562 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:54.178809 32562 net.cpp:139] Memory required for data: 10774800
I0428 20:13:54.178814 32562 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:54.178819 32562 net.cpp:86] Creating Layer relu2
I0428 20:13:54.178822 32562 net.cpp:408] relu2 <- ip2
I0428 20:13:54.178828 32562 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:54.179002 32562 net.cpp:124] Setting up relu2
I0428 20:13:54.179009 32562 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:54.179013 32562 net.cpp:139] Memory required for data: 10794800
I0428 20:13:54.179015 32562 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:54.179020 32562 net.cpp:86] Creating Layer ip3
I0428 20:13:54.179023 32562 net.cpp:408] ip3 <- ip2
I0428 20:13:54.179029 32562 net.cpp:382] ip3 -> ip3
I0428 20:13:54.179132 32562 net.cpp:124] Setting up ip3
I0428 20:13:54.179139 32562 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:54.179142 32562 net.cpp:139] Memory required for data: 10798800
I0428 20:13:54.179149 32562 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:54.179155 32562 net.cpp:86] Creating Layer relu3
I0428 20:13:54.179158 32562 net.cpp:408] relu3 <- ip3
I0428 20:13:54.179163 32562 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:54.179889 32562 net.cpp:124] Setting up relu3
I0428 20:13:54.179903 32562 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:54.179905 32562 net.cpp:139] Memory required for data: 10802800
I0428 20:13:54.179908 32562 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:54.179914 32562 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:54.179918 32562 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:54.179922 32562 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:54.179929 32562 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:54.179966 32562 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:54.179972 32562 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:54.179976 32562 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:54.179980 32562 net.cpp:139] Memory required for data: 10810800
I0428 20:13:54.179981 32562 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:54.179989 32562 net.cpp:86] Creating Layer accuracy
I0428 20:13:54.179994 32562 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:54.179998 32562 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:54.180003 32562 net.cpp:382] accuracy -> accuracy
I0428 20:13:54.180009 32562 net.cpp:124] Setting up accuracy
I0428 20:13:54.180030 32562 net.cpp:131] Top shape: (1)
I0428 20:13:54.180033 32562 net.cpp:139] Memory required for data: 10810804
I0428 20:13:54.180037 32562 layer_factory.hpp:77] Creating layer loss
I0428 20:13:54.180040 32562 net.cpp:86] Creating Layer loss
I0428 20:13:54.180043 32562 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:54.180048 32562 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:54.180052 32562 net.cpp:382] loss -> loss
I0428 20:13:54.180058 32562 layer_factory.hpp:77] Creating layer loss
I0428 20:13:54.180302 32562 net.cpp:124] Setting up loss
I0428 20:13:54.180311 32562 net.cpp:131] Top shape: (1)
I0428 20:13:54.180315 32562 net.cpp:134]     with loss weight 1
I0428 20:13:54.180330 32562 net.cpp:139] Memory required for data: 10810808
I0428 20:13:54.180335 32562 net.cpp:200] loss needs backward computation.
I0428 20:13:54.180338 32562 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:54.180357 32562 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:54.180362 32562 net.cpp:200] relu3 needs backward computation.
I0428 20:13:54.180366 32562 net.cpp:200] ip3 needs backward computation.
I0428 20:13:54.180368 32562 net.cpp:200] relu2 needs backward computation.
I0428 20:13:54.180371 32562 net.cpp:200] ip2 needs backward computation.
I0428 20:13:54.180373 32562 net.cpp:200] relu1 needs backward computation.
I0428 20:13:54.180375 32562 net.cpp:200] ip1 needs backward computation.
I0428 20:13:54.180378 32562 net.cpp:200] pool1 needs backward computation.
I0428 20:13:54.180382 32562 net.cpp:200] conv1 needs backward computation.
I0428 20:13:54.180384 32562 net.cpp:200] pool0 needs backward computation.
I0428 20:13:54.180387 32562 net.cpp:200] conv0 needs backward computation.
I0428 20:13:54.180390 32562 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:54.180394 32562 net.cpp:202] mnist does not need backward computation.
I0428 20:13:54.180397 32562 net.cpp:244] This network produces output accuracy
I0428 20:13:54.180399 32562 net.cpp:244] This network produces output loss
I0428 20:13:54.180410 32562 net.cpp:257] Network initialization done.
I0428 20:13:54.180452 32562 solver.cpp:56] Solver scaffolding done.
I0428 20:13:54.180763 32562 caffe.cpp:248] Starting Optimization
I0428 20:13:54.180768 32562 solver.cpp:273] Solving LeNet
I0428 20:13:54.180771 32562 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:54.181551 32562 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:54.189537 32562 blocking_queue.cpp:49] Waiting for data
I0428 20:13:54.257866 32569 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:54.258718 32562 solver.cpp:398]     Test net output #0: accuracy = 0.0582
I0428 20:13:54.258738 32562 solver.cpp:398]     Test net output #1: loss = 2.31657 (* 1 = 2.31657 loss)
I0428 20:13:54.263584 32562 solver.cpp:219] Iteration 0 (-9.99126e-43 iter/s, 0.0827861s/100 iters), loss = 2.30333
I0428 20:13:54.263608 32562 solver.cpp:238]     Train net output #0: loss = 2.30333 (* 1 = 2.30333 loss)
I0428 20:13:54.263634 32562 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:54.433167 32562 solver.cpp:219] Iteration 100 (589.822 iter/s, 0.169543s/100 iters), loss = 0.25876
I0428 20:13:54.433193 32562 solver.cpp:238]     Train net output #0: loss = 0.25876 (* 1 = 0.25876 loss)
I0428 20:13:54.433218 32562 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:54.598441 32562 solver.cpp:219] Iteration 200 (605.211 iter/s, 0.165232s/100 iters), loss = 0.204908
I0428 20:13:54.598489 32562 solver.cpp:238]     Train net output #0: loss = 0.204908 (* 1 = 0.204908 loss)
I0428 20:13:54.598496 32562 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:54.767573 32562 solver.cpp:219] Iteration 300 (591.469 iter/s, 0.169071s/100 iters), loss = 0.156967
I0428 20:13:54.767617 32562 solver.cpp:238]     Train net output #0: loss = 0.156967 (* 1 = 0.156967 loss)
I0428 20:13:54.767624 32562 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:54.935130 32562 solver.cpp:219] Iteration 400 (597.012 iter/s, 0.167501s/100 iters), loss = 0.0867806
I0428 20:13:54.935173 32562 solver.cpp:238]     Train net output #0: loss = 0.0867807 (* 1 = 0.0867807 loss)
I0428 20:13:54.935179 32562 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:55.100424 32562 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:55.178140 32569 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:55.179111 32562 solver.cpp:398]     Test net output #0: accuracy = 0.9687
I0428 20:13:55.179133 32562 solver.cpp:398]     Test net output #1: loss = 0.101092 (* 1 = 0.101092 loss)
I0428 20:13:55.181046 32562 solver.cpp:219] Iteration 500 (406.716 iter/s, 0.245872s/100 iters), loss = 0.098755
I0428 20:13:55.181089 32562 solver.cpp:238]     Train net output #0: loss = 0.0987551 (* 1 = 0.0987551 loss)
I0428 20:13:55.181113 32562 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:55.350903 32562 solver.cpp:219] Iteration 600 (588.925 iter/s, 0.169801s/100 iters), loss = 0.0684296
I0428 20:13:55.350942 32562 solver.cpp:238]     Train net output #0: loss = 0.0684297 (* 1 = 0.0684297 loss)
I0428 20:13:55.350950 32562 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:55.514571 32562 solver.cpp:219] Iteration 700 (611.185 iter/s, 0.163617s/100 iters), loss = 0.0937393
I0428 20:13:55.514612 32562 solver.cpp:238]     Train net output #0: loss = 0.0937394 (* 1 = 0.0937394 loss)
I0428 20:13:55.514618 32562 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:55.679508 32562 solver.cpp:219] Iteration 800 (606.436 iter/s, 0.164898s/100 iters), loss = 0.211709
I0428 20:13:55.679550 32562 solver.cpp:238]     Train net output #0: loss = 0.21171 (* 1 = 0.21171 loss)
I0428 20:13:55.679558 32562 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:55.846758 32562 solver.cpp:219] Iteration 900 (598.105 iter/s, 0.167195s/100 iters), loss = 0.151551
I0428 20:13:55.846786 32562 solver.cpp:238]     Train net output #0: loss = 0.151551 (* 1 = 0.151551 loss)
I0428 20:13:55.846791 32562 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:55.904325 32568 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:56.015048 32562 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:56.018226 32562 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:56.019927 32562 solver.cpp:311] Iteration 1000, loss = 0.100282
I0428 20:13:56.019943 32562 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:56.096807 32569 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:56.097710 32562 solver.cpp:398]     Test net output #0: accuracy = 0.9763
I0428 20:13:56.097733 32562 solver.cpp:398]     Test net output #1: loss = 0.0699447 (* 1 = 0.0699447 loss)
I0428 20:13:56.097738 32562 solver.cpp:316] Optimization Done.
I0428 20:13:56.097741 32562 caffe.cpp:259] Optimization Done.
