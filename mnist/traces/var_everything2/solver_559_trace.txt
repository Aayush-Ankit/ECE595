I0428 19:48:55.565743 26629 caffe.cpp:218] Using GPUs 0
I0428 19:48:55.606490 26629 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:56.096710 26629 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test559.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:56.096876 26629 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test559.prototxt
I0428 19:48:56.097223 26629 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:56.097254 26629 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:56.097368 26629 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:56.097434 26629 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:56.097518 26629 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:56.097538 26629 net.cpp:86] Creating Layer mnist
I0428 19:48:56.097544 26629 net.cpp:382] mnist -> data
I0428 19:48:56.097563 26629 net.cpp:382] mnist -> label
I0428 19:48:56.098510 26629 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:56.100735 26629 net.cpp:124] Setting up mnist
I0428 19:48:56.100766 26629 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:56.100771 26629 net.cpp:131] Top shape: 64 (64)
I0428 19:48:56.100775 26629 net.cpp:139] Memory required for data: 200960
I0428 19:48:56.100780 26629 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:56.100795 26629 net.cpp:86] Creating Layer conv0
I0428 19:48:56.100833 26629 net.cpp:408] conv0 <- data
I0428 19:48:56.100862 26629 net.cpp:382] conv0 -> conv0
I0428 19:48:56.325662 26629 net.cpp:124] Setting up conv0
I0428 19:48:56.325705 26629 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:56.325708 26629 net.cpp:139] Memory required for data: 938240
I0428 19:48:56.325723 26629 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:56.325736 26629 net.cpp:86] Creating Layer pool0
I0428 19:48:56.325739 26629 net.cpp:408] pool0 <- conv0
I0428 19:48:56.325744 26629 net.cpp:382] pool0 -> pool0
I0428 19:48:56.325808 26629 net.cpp:124] Setting up pool0
I0428 19:48:56.325812 26629 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:56.325816 26629 net.cpp:139] Memory required for data: 1122560
I0428 19:48:56.325819 26629 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:56.325829 26629 net.cpp:86] Creating Layer conv1
I0428 19:48:56.325832 26629 net.cpp:408] conv1 <- pool0
I0428 19:48:56.325836 26629 net.cpp:382] conv1 -> conv1
I0428 19:48:56.327785 26629 net.cpp:124] Setting up conv1
I0428 19:48:56.327813 26629 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:48:56.327817 26629 net.cpp:139] Memory required for data: 1204480
I0428 19:48:56.327826 26629 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:56.327848 26629 net.cpp:86] Creating Layer pool1
I0428 19:48:56.327852 26629 net.cpp:408] pool1 <- conv1
I0428 19:48:56.327857 26629 net.cpp:382] pool1 -> pool1
I0428 19:48:56.327911 26629 net.cpp:124] Setting up pool1
I0428 19:48:56.327916 26629 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:48:56.327919 26629 net.cpp:139] Memory required for data: 1224960
I0428 19:48:56.327924 26629 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:56.327930 26629 net.cpp:86] Creating Layer ip1
I0428 19:48:56.327934 26629 net.cpp:408] ip1 <- pool1
I0428 19:48:56.327939 26629 net.cpp:382] ip1 -> ip1
I0428 19:48:56.328055 26629 net.cpp:124] Setting up ip1
I0428 19:48:56.328063 26629 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:56.328066 26629 net.cpp:139] Memory required for data: 1227520
I0428 19:48:56.328073 26629 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:56.328078 26629 net.cpp:86] Creating Layer relu1
I0428 19:48:56.328083 26629 net.cpp:408] relu1 <- ip1
I0428 19:48:56.328086 26629 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:56.328289 26629 net.cpp:124] Setting up relu1
I0428 19:48:56.328297 26629 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:56.328300 26629 net.cpp:139] Memory required for data: 1230080
I0428 19:48:56.328303 26629 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:56.328310 26629 net.cpp:86] Creating Layer ip2
I0428 19:48:56.328313 26629 net.cpp:408] ip2 <- ip1
I0428 19:48:56.328318 26629 net.cpp:382] ip2 -> ip2
I0428 19:48:56.328411 26629 net.cpp:124] Setting up ip2
I0428 19:48:56.328418 26629 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:56.328421 26629 net.cpp:139] Memory required for data: 1232640
I0428 19:48:56.328426 26629 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:56.328433 26629 net.cpp:86] Creating Layer relu2
I0428 19:48:56.328436 26629 net.cpp:408] relu2 <- ip2
I0428 19:48:56.328440 26629 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:56.329330 26629 net.cpp:124] Setting up relu2
I0428 19:48:56.329342 26629 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:56.329361 26629 net.cpp:139] Memory required for data: 1235200
I0428 19:48:56.329365 26629 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:56.329371 26629 net.cpp:86] Creating Layer ip3
I0428 19:48:56.329375 26629 net.cpp:408] ip3 <- ip2
I0428 19:48:56.329380 26629 net.cpp:382] ip3 -> ip3
I0428 19:48:56.329471 26629 net.cpp:124] Setting up ip3
I0428 19:48:56.329478 26629 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:56.329481 26629 net.cpp:139] Memory required for data: 1237760
I0428 19:48:56.329489 26629 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:56.329494 26629 net.cpp:86] Creating Layer relu3
I0428 19:48:56.329497 26629 net.cpp:408] relu3 <- ip3
I0428 19:48:56.329500 26629 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:56.329679 26629 net.cpp:124] Setting up relu3
I0428 19:48:56.329687 26629 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:56.329691 26629 net.cpp:139] Memory required for data: 1240320
I0428 19:48:56.329694 26629 layer_factory.hpp:77] Creating layer loss
I0428 19:48:56.329704 26629 net.cpp:86] Creating Layer loss
I0428 19:48:56.329708 26629 net.cpp:408] loss <- ip3
I0428 19:48:56.329712 26629 net.cpp:408] loss <- label
I0428 19:48:56.329717 26629 net.cpp:382] loss -> loss
I0428 19:48:56.329730 26629 layer_factory.hpp:77] Creating layer loss
I0428 19:48:56.329993 26629 net.cpp:124] Setting up loss
I0428 19:48:56.330018 26629 net.cpp:131] Top shape: (1)
I0428 19:48:56.330021 26629 net.cpp:134]     with loss weight 1
I0428 19:48:56.330041 26629 net.cpp:139] Memory required for data: 1240324
I0428 19:48:56.330044 26629 net.cpp:200] loss needs backward computation.
I0428 19:48:56.330049 26629 net.cpp:200] relu3 needs backward computation.
I0428 19:48:56.330051 26629 net.cpp:200] ip3 needs backward computation.
I0428 19:48:56.330054 26629 net.cpp:200] relu2 needs backward computation.
I0428 19:48:56.330057 26629 net.cpp:200] ip2 needs backward computation.
I0428 19:48:56.330060 26629 net.cpp:200] relu1 needs backward computation.
I0428 19:48:56.330077 26629 net.cpp:200] ip1 needs backward computation.
I0428 19:48:56.330080 26629 net.cpp:200] pool1 needs backward computation.
I0428 19:48:56.330083 26629 net.cpp:200] conv1 needs backward computation.
I0428 19:48:56.330102 26629 net.cpp:200] pool0 needs backward computation.
I0428 19:48:56.330106 26629 net.cpp:200] conv0 needs backward computation.
I0428 19:48:56.330108 26629 net.cpp:202] mnist does not need backward computation.
I0428 19:48:56.330111 26629 net.cpp:244] This network produces output loss
I0428 19:48:56.330121 26629 net.cpp:257] Network initialization done.
I0428 19:48:56.330503 26629 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test559.prototxt
I0428 19:48:56.330557 26629 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:56.330643 26629 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:48:56.330723 26629 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:56.330765 26629 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:56.330778 26629 net.cpp:86] Creating Layer mnist
I0428 19:48:56.330783 26629 net.cpp:382] mnist -> data
I0428 19:48:56.330790 26629 net.cpp:382] mnist -> label
I0428 19:48:56.330885 26629 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:56.332911 26629 net.cpp:124] Setting up mnist
I0428 19:48:56.332957 26629 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:56.332962 26629 net.cpp:131] Top shape: 100 (100)
I0428 19:48:56.332980 26629 net.cpp:139] Memory required for data: 314000
I0428 19:48:56.332984 26629 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:56.332991 26629 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:56.332994 26629 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:56.333000 26629 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:56.333006 26629 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:56.333081 26629 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:56.333088 26629 net.cpp:131] Top shape: 100 (100)
I0428 19:48:56.333092 26629 net.cpp:131] Top shape: 100 (100)
I0428 19:48:56.333096 26629 net.cpp:139] Memory required for data: 314800
I0428 19:48:56.333098 26629 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:56.333107 26629 net.cpp:86] Creating Layer conv0
I0428 19:48:56.333112 26629 net.cpp:408] conv0 <- data
I0428 19:48:56.333117 26629 net.cpp:382] conv0 -> conv0
I0428 19:48:56.334836 26629 net.cpp:124] Setting up conv0
I0428 19:48:56.334864 26629 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:56.334868 26629 net.cpp:139] Memory required for data: 1466800
I0428 19:48:56.334877 26629 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:56.334883 26629 net.cpp:86] Creating Layer pool0
I0428 19:48:56.334887 26629 net.cpp:408] pool0 <- conv0
I0428 19:48:56.334892 26629 net.cpp:382] pool0 -> pool0
I0428 19:48:56.334925 26629 net.cpp:124] Setting up pool0
I0428 19:48:56.334931 26629 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:56.334934 26629 net.cpp:139] Memory required for data: 1754800
I0428 19:48:56.334936 26629 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:56.334944 26629 net.cpp:86] Creating Layer conv1
I0428 19:48:56.334949 26629 net.cpp:408] conv1 <- pool0
I0428 19:48:56.334952 26629 net.cpp:382] conv1 -> conv1
I0428 19:48:56.337200 26629 net.cpp:124] Setting up conv1
I0428 19:48:56.337213 26629 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:48:56.337232 26629 net.cpp:139] Memory required for data: 1882800
I0428 19:48:56.337240 26629 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:56.337246 26629 net.cpp:86] Creating Layer pool1
I0428 19:48:56.337250 26629 net.cpp:408] pool1 <- conv1
I0428 19:48:56.337255 26629 net.cpp:382] pool1 -> pool1
I0428 19:48:56.337330 26629 net.cpp:124] Setting up pool1
I0428 19:48:56.337343 26629 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:48:56.337347 26629 net.cpp:139] Memory required for data: 1914800
I0428 19:48:56.337349 26629 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:56.337355 26629 net.cpp:86] Creating Layer ip1
I0428 19:48:56.337358 26629 net.cpp:408] ip1 <- pool1
I0428 19:48:56.337363 26629 net.cpp:382] ip1 -> ip1
I0428 19:48:56.337507 26629 net.cpp:124] Setting up ip1
I0428 19:48:56.337514 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.337528 26629 net.cpp:139] Memory required for data: 1918800
I0428 19:48:56.337537 26629 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:56.337541 26629 net.cpp:86] Creating Layer relu1
I0428 19:48:56.337545 26629 net.cpp:408] relu1 <- ip1
I0428 19:48:56.337550 26629 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:56.337729 26629 net.cpp:124] Setting up relu1
I0428 19:48:56.337738 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.337741 26629 net.cpp:139] Memory required for data: 1922800
I0428 19:48:56.337745 26629 layer_factory.hpp:77] Creating layer ip2
I0428 19:48:56.337752 26629 net.cpp:86] Creating Layer ip2
I0428 19:48:56.337756 26629 net.cpp:408] ip2 <- ip1
I0428 19:48:56.337760 26629 net.cpp:382] ip2 -> ip2
I0428 19:48:56.337853 26629 net.cpp:124] Setting up ip2
I0428 19:48:56.337860 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.337863 26629 net.cpp:139] Memory required for data: 1926800
I0428 19:48:56.337868 26629 layer_factory.hpp:77] Creating layer relu2
I0428 19:48:56.337872 26629 net.cpp:86] Creating Layer relu2
I0428 19:48:56.337875 26629 net.cpp:408] relu2 <- ip2
I0428 19:48:56.337879 26629 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:48:56.338032 26629 net.cpp:124] Setting up relu2
I0428 19:48:56.338054 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.338065 26629 net.cpp:139] Memory required for data: 1930800
I0428 19:48:56.338068 26629 layer_factory.hpp:77] Creating layer ip3
I0428 19:48:56.338078 26629 net.cpp:86] Creating Layer ip3
I0428 19:48:56.338081 26629 net.cpp:408] ip3 <- ip2
I0428 19:48:56.338085 26629 net.cpp:382] ip3 -> ip3
I0428 19:48:56.338173 26629 net.cpp:124] Setting up ip3
I0428 19:48:56.338181 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.338184 26629 net.cpp:139] Memory required for data: 1934800
I0428 19:48:56.338191 26629 layer_factory.hpp:77] Creating layer relu3
I0428 19:48:56.338196 26629 net.cpp:86] Creating Layer relu3
I0428 19:48:56.338199 26629 net.cpp:408] relu3 <- ip3
I0428 19:48:56.338202 26629 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:48:56.338937 26629 net.cpp:124] Setting up relu3
I0428 19:48:56.338948 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.338965 26629 net.cpp:139] Memory required for data: 1938800
I0428 19:48:56.338969 26629 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:48:56.338974 26629 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:48:56.338977 26629 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:48:56.338997 26629 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:48:56.339004 26629 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:48:56.339059 26629 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:48:56.339064 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.339068 26629 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:56.339071 26629 net.cpp:139] Memory required for data: 1946800
I0428 19:48:56.339074 26629 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:56.339078 26629 net.cpp:86] Creating Layer accuracy
I0428 19:48:56.339082 26629 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:48:56.339087 26629 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:56.339090 26629 net.cpp:382] accuracy -> accuracy
I0428 19:48:56.339097 26629 net.cpp:124] Setting up accuracy
I0428 19:48:56.339102 26629 net.cpp:131] Top shape: (1)
I0428 19:48:56.339104 26629 net.cpp:139] Memory required for data: 1946804
I0428 19:48:56.339107 26629 layer_factory.hpp:77] Creating layer loss
I0428 19:48:56.339112 26629 net.cpp:86] Creating Layer loss
I0428 19:48:56.339114 26629 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:48:56.339118 26629 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:56.339138 26629 net.cpp:382] loss -> loss
I0428 19:48:56.339144 26629 layer_factory.hpp:77] Creating layer loss
I0428 19:48:56.339392 26629 net.cpp:124] Setting up loss
I0428 19:48:56.339402 26629 net.cpp:131] Top shape: (1)
I0428 19:48:56.339406 26629 net.cpp:134]     with loss weight 1
I0428 19:48:56.339426 26629 net.cpp:139] Memory required for data: 1946808
I0428 19:48:56.339440 26629 net.cpp:200] loss needs backward computation.
I0428 19:48:56.339444 26629 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:56.339447 26629 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:48:56.339450 26629 net.cpp:200] relu3 needs backward computation.
I0428 19:48:56.339462 26629 net.cpp:200] ip3 needs backward computation.
I0428 19:48:56.339464 26629 net.cpp:200] relu2 needs backward computation.
I0428 19:48:56.339468 26629 net.cpp:200] ip2 needs backward computation.
I0428 19:48:56.339470 26629 net.cpp:200] relu1 needs backward computation.
I0428 19:48:56.339473 26629 net.cpp:200] ip1 needs backward computation.
I0428 19:48:56.339475 26629 net.cpp:200] pool1 needs backward computation.
I0428 19:48:56.339478 26629 net.cpp:200] conv1 needs backward computation.
I0428 19:48:56.339486 26629 net.cpp:200] pool0 needs backward computation.
I0428 19:48:56.339489 26629 net.cpp:200] conv0 needs backward computation.
I0428 19:48:56.339493 26629 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:56.339498 26629 net.cpp:202] mnist does not need backward computation.
I0428 19:48:56.339499 26629 net.cpp:244] This network produces output accuracy
I0428 19:48:56.339504 26629 net.cpp:244] This network produces output loss
I0428 19:48:56.339514 26629 net.cpp:257] Network initialization done.
I0428 19:48:56.339555 26629 solver.cpp:56] Solver scaffolding done.
I0428 19:48:56.339917 26629 caffe.cpp:248] Starting Optimization
I0428 19:48:56.339923 26629 solver.cpp:273] Solving LeNet
I0428 19:48:56.339926 26629 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:56.340705 26629 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:56.344337 26629 blocking_queue.cpp:49] Waiting for data
I0428 19:48:56.417937 26636 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:56.418426 26629 solver.cpp:398]     Test net output #0: accuracy = 0.08
I0428 19:48:56.418445 26629 solver.cpp:398]     Test net output #1: loss = 2.30497 (* 1 = 2.30497 loss)
I0428 19:48:56.420234 26629 solver.cpp:219] Iteration 0 (0 iter/s, 0.0802683s/100 iters), loss = 2.28894
I0428 19:48:56.420281 26629 solver.cpp:238]     Train net output #0: loss = 2.28894 (* 1 = 2.28894 loss)
I0428 19:48:56.420295 26629 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:56.492303 26629 solver.cpp:219] Iteration 100 (1388.6 iter/s, 0.0720148s/100 iters), loss = 1.00747
I0428 19:48:56.492346 26629 solver.cpp:238]     Train net output #0: loss = 1.00747 (* 1 = 1.00747 loss)
I0428 19:48:56.492352 26629 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:56.565085 26629 solver.cpp:219] Iteration 200 (1374.91 iter/s, 0.0727318s/100 iters), loss = 0.97146
I0428 19:48:56.565126 26629 solver.cpp:238]     Train net output #0: loss = 0.97146 (* 1 = 0.97146 loss)
I0428 19:48:56.565148 26629 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:56.637117 26629 solver.cpp:219] Iteration 300 (1389.22 iter/s, 0.071983s/100 iters), loss = 0.885182
I0428 19:48:56.637158 26629 solver.cpp:238]     Train net output #0: loss = 0.885182 (* 1 = 0.885182 loss)
I0428 19:48:56.637164 26629 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:56.712730 26629 solver.cpp:219] Iteration 400 (1323.11 iter/s, 0.0755794s/100 iters), loss = 0.587642
I0428 19:48:56.712770 26629 solver.cpp:238]     Train net output #0: loss = 0.587642 (* 1 = 0.587642 loss)
I0428 19:48:56.712776 26629 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:56.785650 26629 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:56.840176 26636 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:56.840692 26629 solver.cpp:398]     Test net output #0: accuracy = 0.8179
I0428 19:48:56.840725 26629 solver.cpp:398]     Test net output #1: loss = 0.547235 (* 1 = 0.547235 loss)
I0428 19:48:56.841506 26629 solver.cpp:219] Iteration 500 (776.856 iter/s, 0.128724s/100 iters), loss = 0.342295
I0428 19:48:56.841553 26629 solver.cpp:238]     Train net output #0: loss = 0.342295 (* 1 = 0.342295 loss)
I0428 19:48:56.841576 26629 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:56.916079 26629 solver.cpp:219] Iteration 600 (1341.94 iter/s, 0.0745187s/100 iters), loss = 0.462076
I0428 19:48:56.916119 26629 solver.cpp:238]     Train net output #0: loss = 0.462076 (* 1 = 0.462076 loss)
I0428 19:48:56.916126 26629 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:56.988937 26629 solver.cpp:219] Iteration 700 (1373.18 iter/s, 0.0728238s/100 iters), loss = 0.39861
I0428 19:48:56.988978 26629 solver.cpp:238]     Train net output #0: loss = 0.39861 (* 1 = 0.39861 loss)
I0428 19:48:56.988986 26629 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:57.060477 26629 solver.cpp:219] Iteration 800 (1398.51 iter/s, 0.0715049s/100 iters), loss = 0.437015
I0428 19:48:57.060516 26629 solver.cpp:238]     Train net output #0: loss = 0.437015 (* 1 = 0.437015 loss)
I0428 19:48:57.060523 26629 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:57.132197 26629 solver.cpp:219] Iteration 900 (1394.95 iter/s, 0.0716872s/100 iters), loss = 0.336358
I0428 19:48:57.132241 26629 solver.cpp:238]     Train net output #0: loss = 0.336358 (* 1 = 0.336358 loss)
I0428 19:48:57.132248 26629 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:57.157856 26635 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:57.203963 26629 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:57.204708 26629 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:57.205147 26629 solver.cpp:311] Iteration 1000, loss = 0.194526
I0428 19:48:57.205160 26629 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:57.261760 26636 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:57.262300 26629 solver.cpp:398]     Test net output #0: accuracy = 0.9358
I0428 19:48:57.262333 26629 solver.cpp:398]     Test net output #1: loss = 0.220261 (* 1 = 0.220261 loss)
I0428 19:48:57.262338 26629 solver.cpp:316] Optimization Done.
I0428 19:48:57.262342 26629 caffe.cpp:259] Optimization Done.
