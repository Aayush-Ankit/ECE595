I0428 19:47:34.261241 26230 caffe.cpp:218] Using GPUs 0
I0428 19:47:34.297353 26230 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:34.810232 26230 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test519.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:34.810402 26230 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test519.prototxt
I0428 19:47:34.810829 26230 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:34.810855 26230 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:34.810971 26230 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:34.811086 26230 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:34.811223 26230 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:34.811254 26230 net.cpp:86] Creating Layer mnist
I0428 19:47:34.811269 26230 net.cpp:382] mnist -> data
I0428 19:47:34.811298 26230 net.cpp:382] mnist -> label
I0428 19:47:34.812568 26230 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:34.815035 26230 net.cpp:124] Setting up mnist
I0428 19:47:34.815057 26230 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:34.815066 26230 net.cpp:131] Top shape: 64 (64)
I0428 19:47:34.815071 26230 net.cpp:139] Memory required for data: 200960
I0428 19:47:34.815083 26230 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:34.815107 26230 net.cpp:86] Creating Layer conv0
I0428 19:47:34.815132 26230 net.cpp:408] conv0 <- data
I0428 19:47:34.815155 26230 net.cpp:382] conv0 -> conv0
I0428 19:47:35.100549 26230 net.cpp:124] Setting up conv0
I0428 19:47:35.100595 26230 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:35.100601 26230 net.cpp:139] Memory required for data: 938240
I0428 19:47:35.100623 26230 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:35.100641 26230 net.cpp:86] Creating Layer pool0
I0428 19:47:35.100648 26230 net.cpp:408] pool0 <- conv0
I0428 19:47:35.100658 26230 net.cpp:382] pool0 -> pool0
I0428 19:47:35.100724 26230 net.cpp:124] Setting up pool0
I0428 19:47:35.100734 26230 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:35.100739 26230 net.cpp:139] Memory required for data: 1122560
I0428 19:47:35.100745 26230 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:35.100762 26230 net.cpp:86] Creating Layer conv1
I0428 19:47:35.100769 26230 net.cpp:408] conv1 <- pool0
I0428 19:47:35.100780 26230 net.cpp:382] conv1 -> conv1
I0428 19:47:35.102684 26230 net.cpp:124] Setting up conv1
I0428 19:47:35.102701 26230 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:35.102707 26230 net.cpp:139] Memory required for data: 1155328
I0428 19:47:35.102721 26230 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:35.102733 26230 net.cpp:86] Creating Layer pool1
I0428 19:47:35.102740 26230 net.cpp:408] pool1 <- conv1
I0428 19:47:35.102748 26230 net.cpp:382] pool1 -> pool1
I0428 19:47:35.102795 26230 net.cpp:124] Setting up pool1
I0428 19:47:35.102805 26230 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:35.102810 26230 net.cpp:139] Memory required for data: 1163520
I0428 19:47:35.102816 26230 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:35.102828 26230 net.cpp:86] Creating Layer ip1
I0428 19:47:35.102833 26230 net.cpp:408] ip1 <- pool1
I0428 19:47:35.102841 26230 net.cpp:382] ip1 -> ip1
I0428 19:47:35.102954 26230 net.cpp:124] Setting up ip1
I0428 19:47:35.102964 26230 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:35.102969 26230 net.cpp:139] Memory required for data: 1166080
I0428 19:47:35.102982 26230 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:35.102996 26230 net.cpp:86] Creating Layer relu1
I0428 19:47:35.103005 26230 net.cpp:408] relu1 <- ip1
I0428 19:47:35.103013 26230 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:35.103193 26230 net.cpp:124] Setting up relu1
I0428 19:47:35.103204 26230 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:35.103209 26230 net.cpp:139] Memory required for data: 1168640
I0428 19:47:35.103214 26230 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:35.103225 26230 net.cpp:86] Creating Layer ip2
I0428 19:47:35.103230 26230 net.cpp:408] ip2 <- ip1
I0428 19:47:35.103240 26230 net.cpp:382] ip2 -> ip2
I0428 19:47:35.103344 26230 net.cpp:124] Setting up ip2
I0428 19:47:35.103353 26230 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:35.103359 26230 net.cpp:139] Memory required for data: 1171200
I0428 19:47:35.103369 26230 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:35.103379 26230 net.cpp:86] Creating Layer relu2
I0428 19:47:35.103385 26230 net.cpp:408] relu2 <- ip2
I0428 19:47:35.103392 26230 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:35.104152 26230 net.cpp:124] Setting up relu2
I0428 19:47:35.104167 26230 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:35.104173 26230 net.cpp:139] Memory required for data: 1173760
I0428 19:47:35.104179 26230 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:35.104190 26230 net.cpp:86] Creating Layer ip3
I0428 19:47:35.104197 26230 net.cpp:408] ip3 <- ip2
I0428 19:47:35.104207 26230 net.cpp:382] ip3 -> ip3
I0428 19:47:35.104316 26230 net.cpp:124] Setting up ip3
I0428 19:47:35.104327 26230 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:35.104332 26230 net.cpp:139] Memory required for data: 1176320
I0428 19:47:35.104346 26230 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:35.104357 26230 net.cpp:86] Creating Layer relu3
I0428 19:47:35.104363 26230 net.cpp:408] relu3 <- ip3
I0428 19:47:35.104372 26230 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:35.104550 26230 net.cpp:124] Setting up relu3
I0428 19:47:35.104560 26230 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:35.104565 26230 net.cpp:139] Memory required for data: 1178880
I0428 19:47:35.104571 26230 layer_factory.hpp:77] Creating layer loss
I0428 19:47:35.104580 26230 net.cpp:86] Creating Layer loss
I0428 19:47:35.104586 26230 net.cpp:408] loss <- ip3
I0428 19:47:35.104593 26230 net.cpp:408] loss <- label
I0428 19:47:35.104602 26230 net.cpp:382] loss -> loss
I0428 19:47:35.104624 26230 layer_factory.hpp:77] Creating layer loss
I0428 19:47:35.104872 26230 net.cpp:124] Setting up loss
I0428 19:47:35.104885 26230 net.cpp:131] Top shape: (1)
I0428 19:47:35.104890 26230 net.cpp:134]     with loss weight 1
I0428 19:47:35.104912 26230 net.cpp:139] Memory required for data: 1178884
I0428 19:47:35.104918 26230 net.cpp:200] loss needs backward computation.
I0428 19:47:35.104925 26230 net.cpp:200] relu3 needs backward computation.
I0428 19:47:35.104930 26230 net.cpp:200] ip3 needs backward computation.
I0428 19:47:35.104936 26230 net.cpp:200] relu2 needs backward computation.
I0428 19:47:35.104941 26230 net.cpp:200] ip2 needs backward computation.
I0428 19:47:35.104948 26230 net.cpp:200] relu1 needs backward computation.
I0428 19:47:35.104953 26230 net.cpp:200] ip1 needs backward computation.
I0428 19:47:35.104959 26230 net.cpp:200] pool1 needs backward computation.
I0428 19:47:35.104964 26230 net.cpp:200] conv1 needs backward computation.
I0428 19:47:35.104969 26230 net.cpp:200] pool0 needs backward computation.
I0428 19:47:35.104975 26230 net.cpp:200] conv0 needs backward computation.
I0428 19:47:35.104981 26230 net.cpp:202] mnist does not need backward computation.
I0428 19:47:35.104987 26230 net.cpp:244] This network produces output loss
I0428 19:47:35.105017 26230 net.cpp:257] Network initialization done.
I0428 19:47:35.105388 26230 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test519.prototxt
I0428 19:47:35.105424 26230 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:35.105528 26230 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:35.105648 26230 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:35.105712 26230 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:35.105731 26230 net.cpp:86] Creating Layer mnist
I0428 19:47:35.105738 26230 net.cpp:382] mnist -> data
I0428 19:47:35.105751 26230 net.cpp:382] mnist -> label
I0428 19:47:35.105876 26230 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:35.108000 26230 net.cpp:124] Setting up mnist
I0428 19:47:35.108016 26230 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:35.108026 26230 net.cpp:131] Top shape: 100 (100)
I0428 19:47:35.108031 26230 net.cpp:139] Memory required for data: 314000
I0428 19:47:35.108037 26230 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:35.108049 26230 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:35.108055 26230 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:35.108063 26230 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:35.108074 26230 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:35.108131 26230 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:35.108141 26230 net.cpp:131] Top shape: 100 (100)
I0428 19:47:35.108148 26230 net.cpp:131] Top shape: 100 (100)
I0428 19:47:35.108153 26230 net.cpp:139] Memory required for data: 314800
I0428 19:47:35.108160 26230 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:35.108173 26230 net.cpp:86] Creating Layer conv0
I0428 19:47:35.108180 26230 net.cpp:408] conv0 <- data
I0428 19:47:35.108191 26230 net.cpp:382] conv0 -> conv0
I0428 19:47:35.109786 26230 net.cpp:124] Setting up conv0
I0428 19:47:35.109803 26230 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:35.109809 26230 net.cpp:139] Memory required for data: 1466800
I0428 19:47:35.109824 26230 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:35.109835 26230 net.cpp:86] Creating Layer pool0
I0428 19:47:35.109843 26230 net.cpp:408] pool0 <- conv0
I0428 19:47:35.109851 26230 net.cpp:382] pool0 -> pool0
I0428 19:47:35.109895 26230 net.cpp:124] Setting up pool0
I0428 19:47:35.109905 26230 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:35.109910 26230 net.cpp:139] Memory required for data: 1754800
I0428 19:47:35.109915 26230 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:35.109928 26230 net.cpp:86] Creating Layer conv1
I0428 19:47:35.109935 26230 net.cpp:408] conv1 <- pool0
I0428 19:47:35.109944 26230 net.cpp:382] conv1 -> conv1
I0428 19:47:35.111966 26230 net.cpp:124] Setting up conv1
I0428 19:47:35.111982 26230 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:35.111989 26230 net.cpp:139] Memory required for data: 1806000
I0428 19:47:35.112004 26230 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:35.112015 26230 net.cpp:86] Creating Layer pool1
I0428 19:47:35.112027 26230 net.cpp:408] pool1 <- conv1
I0428 19:47:35.112036 26230 net.cpp:382] pool1 -> pool1
I0428 19:47:35.112082 26230 net.cpp:124] Setting up pool1
I0428 19:47:35.112092 26230 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:35.112097 26230 net.cpp:139] Memory required for data: 1818800
I0428 19:47:35.112103 26230 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:35.112112 26230 net.cpp:86] Creating Layer ip1
I0428 19:47:35.112118 26230 net.cpp:408] ip1 <- pool1
I0428 19:47:35.112126 26230 net.cpp:382] ip1 -> ip1
I0428 19:47:35.112257 26230 net.cpp:124] Setting up ip1
I0428 19:47:35.112265 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.112282 26230 net.cpp:139] Memory required for data: 1822800
I0428 19:47:35.112296 26230 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:35.112305 26230 net.cpp:86] Creating Layer relu1
I0428 19:47:35.112311 26230 net.cpp:408] relu1 <- ip1
I0428 19:47:35.112319 26230 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:35.112489 26230 net.cpp:124] Setting up relu1
I0428 19:47:35.112500 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.112505 26230 net.cpp:139] Memory required for data: 1826800
I0428 19:47:35.112511 26230 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:35.112522 26230 net.cpp:86] Creating Layer ip2
I0428 19:47:35.112529 26230 net.cpp:408] ip2 <- ip1
I0428 19:47:35.112537 26230 net.cpp:382] ip2 -> ip2
I0428 19:47:35.112642 26230 net.cpp:124] Setting up ip2
I0428 19:47:35.112650 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.112656 26230 net.cpp:139] Memory required for data: 1830800
I0428 19:47:35.112666 26230 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:35.112674 26230 net.cpp:86] Creating Layer relu2
I0428 19:47:35.112679 26230 net.cpp:408] relu2 <- ip2
I0428 19:47:35.112687 26230 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:35.112851 26230 net.cpp:124] Setting up relu2
I0428 19:47:35.112862 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.112869 26230 net.cpp:139] Memory required for data: 1834800
I0428 19:47:35.112874 26230 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:35.112882 26230 net.cpp:86] Creating Layer ip3
I0428 19:47:35.112887 26230 net.cpp:408] ip3 <- ip2
I0428 19:47:35.112896 26230 net.cpp:382] ip3 -> ip3
I0428 19:47:35.112999 26230 net.cpp:124] Setting up ip3
I0428 19:47:35.113008 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.113013 26230 net.cpp:139] Memory required for data: 1838800
I0428 19:47:35.113042 26230 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:35.113052 26230 net.cpp:86] Creating Layer relu3
I0428 19:47:35.113059 26230 net.cpp:408] relu3 <- ip3
I0428 19:47:35.113065 26230 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:35.113874 26230 net.cpp:124] Setting up relu3
I0428 19:47:35.113888 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.113893 26230 net.cpp:139] Memory required for data: 1842800
I0428 19:47:35.113899 26230 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:35.113907 26230 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:35.113914 26230 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:35.113922 26230 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:35.113932 26230 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:35.113991 26230 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:35.113998 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.114006 26230 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:35.114011 26230 net.cpp:139] Memory required for data: 1850800
I0428 19:47:35.114017 26230 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:35.114024 26230 net.cpp:86] Creating Layer accuracy
I0428 19:47:35.114030 26230 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:35.114038 26230 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:35.114048 26230 net.cpp:382] accuracy -> accuracy
I0428 19:47:35.114059 26230 net.cpp:124] Setting up accuracy
I0428 19:47:35.114068 26230 net.cpp:131] Top shape: (1)
I0428 19:47:35.114074 26230 net.cpp:139] Memory required for data: 1850804
I0428 19:47:35.114080 26230 layer_factory.hpp:77] Creating layer loss
I0428 19:47:35.114087 26230 net.cpp:86] Creating Layer loss
I0428 19:47:35.114094 26230 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:35.114100 26230 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:35.114107 26230 net.cpp:382] loss -> loss
I0428 19:47:35.114117 26230 layer_factory.hpp:77] Creating layer loss
I0428 19:47:35.114356 26230 net.cpp:124] Setting up loss
I0428 19:47:35.114367 26230 net.cpp:131] Top shape: (1)
I0428 19:47:35.114373 26230 net.cpp:134]     with loss weight 1
I0428 19:47:35.114383 26230 net.cpp:139] Memory required for data: 1850808
I0428 19:47:35.114401 26230 net.cpp:200] loss needs backward computation.
I0428 19:47:35.114408 26230 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:35.114415 26230 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:35.114421 26230 net.cpp:200] relu3 needs backward computation.
I0428 19:47:35.114428 26230 net.cpp:200] ip3 needs backward computation.
I0428 19:47:35.114434 26230 net.cpp:200] relu2 needs backward computation.
I0428 19:47:35.114439 26230 net.cpp:200] ip2 needs backward computation.
I0428 19:47:35.114445 26230 net.cpp:200] relu1 needs backward computation.
I0428 19:47:35.114450 26230 net.cpp:200] ip1 needs backward computation.
I0428 19:47:35.114455 26230 net.cpp:200] pool1 needs backward computation.
I0428 19:47:35.114461 26230 net.cpp:200] conv1 needs backward computation.
I0428 19:47:35.114469 26230 net.cpp:200] pool0 needs backward computation.
I0428 19:47:35.114475 26230 net.cpp:200] conv0 needs backward computation.
I0428 19:47:35.114481 26230 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:35.114487 26230 net.cpp:202] mnist does not need backward computation.
I0428 19:47:35.114492 26230 net.cpp:244] This network produces output accuracy
I0428 19:47:35.114498 26230 net.cpp:244] This network produces output loss
I0428 19:47:35.114516 26230 net.cpp:257] Network initialization done.
I0428 19:47:35.114580 26230 solver.cpp:56] Solver scaffolding done.
I0428 19:47:35.114984 26230 caffe.cpp:248] Starting Optimization
I0428 19:47:35.114991 26230 solver.cpp:273] Solving LeNet
I0428 19:47:35.114996 26230 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:35.115741 26230 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:35.119262 26230 blocking_queue.cpp:49] Waiting for data
I0428 19:47:35.189345 26237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:35.189839 26230 solver.cpp:398]     Test net output #0: accuracy = 0.0957
I0428 19:47:35.189862 26230 solver.cpp:398]     Test net output #1: loss = 2.30094 (* 1 = 2.30094 loss)
I0428 19:47:35.191612 26230 solver.cpp:219] Iteration 0 (0 iter/s, 0.0765829s/100 iters), loss = 2.29526
I0428 19:47:35.191669 26230 solver.cpp:238]     Train net output #0: loss = 2.29526 (* 1 = 2.29526 loss)
I0428 19:47:35.191687 26230 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:35.261606 26230 solver.cpp:219] Iteration 100 (1429.88 iter/s, 0.0699361s/100 iters), loss = 1.95386
I0428 19:47:35.261633 26230 solver.cpp:238]     Train net output #0: loss = 1.95386 (* 1 = 1.95386 loss)
I0428 19:47:35.261643 26230 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:35.332087 26230 solver.cpp:219] Iteration 200 (1419.53 iter/s, 0.0704461s/100 iters), loss = 1.37118
I0428 19:47:35.332113 26230 solver.cpp:238]     Train net output #0: loss = 1.37118 (* 1 = 1.37118 loss)
I0428 19:47:35.332137 26230 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:35.401690 26230 solver.cpp:219] Iteration 300 (1437.41 iter/s, 0.0695695s/100 iters), loss = 1.63621
I0428 19:47:35.401717 26230 solver.cpp:238]     Train net output #0: loss = 1.63621 (* 1 = 1.63621 loss)
I0428 19:47:35.401727 26230 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:35.470993 26230 solver.cpp:219] Iteration 400 (1443.66 iter/s, 0.0692685s/100 iters), loss = 1.16965
I0428 19:47:35.471020 26230 solver.cpp:238]     Train net output #0: loss = 1.16965 (* 1 = 1.16965 loss)
I0428 19:47:35.471030 26230 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:35.538609 26230 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:35.585642 26237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:35.586135 26230 solver.cpp:398]     Test net output #0: accuracy = 0.7092
I0428 19:47:35.586156 26230 solver.cpp:398]     Test net output #1: loss = 1.05334 (* 1 = 1.05334 loss)
I0428 19:47:35.586863 26230 solver.cpp:219] Iteration 500 (863.305 iter/s, 0.115834s/100 iters), loss = 0.982191
I0428 19:47:35.586889 26230 solver.cpp:238]     Train net output #0: loss = 0.982191 (* 1 = 0.982191 loss)
I0428 19:47:35.586921 26230 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:35.662039 26230 solver.cpp:219] Iteration 600 (1330.81 iter/s, 0.0751421s/100 iters), loss = 1.28381
I0428 19:47:35.662065 26230 solver.cpp:238]     Train net output #0: loss = 1.28381 (* 1 = 1.28381 loss)
I0428 19:47:35.662075 26230 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:35.732589 26230 solver.cpp:219] Iteration 700 (1418.08 iter/s, 0.0705179s/100 iters), loss = 0.891665
I0428 19:47:35.732617 26230 solver.cpp:238]     Train net output #0: loss = 0.891665 (* 1 = 0.891665 loss)
I0428 19:47:35.732627 26230 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:35.803467 26230 solver.cpp:219] Iteration 800 (1411.58 iter/s, 0.0708424s/100 iters), loss = 1.13446
I0428 19:47:35.803498 26230 solver.cpp:238]     Train net output #0: loss = 1.13446 (* 1 = 1.13446 loss)
I0428 19:47:35.803505 26230 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:35.876689 26230 solver.cpp:219] Iteration 900 (1366.45 iter/s, 0.0731823s/100 iters), loss = 1.13655
I0428 19:47:35.876719 26230 solver.cpp:238]     Train net output #0: loss = 1.13655 (* 1 = 1.13655 loss)
I0428 19:47:35.876727 26230 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:35.900502 26236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:35.959882 26230 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:35.960795 26230 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:35.961424 26230 solver.cpp:311] Iteration 1000, loss = 1.15398
I0428 19:47:35.961450 26230 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:36.014077 26237 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:36.015724 26230 solver.cpp:398]     Test net output #0: accuracy = 0.7031
I0428 19:47:36.015748 26230 solver.cpp:398]     Test net output #1: loss = 1.03068 (* 1 = 1.03068 loss)
I0428 19:47:36.015765 26230 solver.cpp:316] Optimization Done.
I0428 19:47:36.015769 26230 caffe.cpp:259] Optimization Done.
