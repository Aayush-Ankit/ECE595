I0428 20:00:30.544320 29493 caffe.cpp:218] Using GPUs 0
I0428 20:00:30.576648 29493 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:31.056222 29493 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test878.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:31.056391 29493 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test878.prototxt
I0428 20:00:31.056777 29493 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:31.056807 29493 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:31.056926 29493 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:31.056991 29493 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:31.057075 29493 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:31.057093 29493 net.cpp:86] Creating Layer mnist
I0428 20:00:31.057099 29493 net.cpp:382] mnist -> data
I0428 20:00:31.057119 29493 net.cpp:382] mnist -> label
I0428 20:00:31.058043 29493 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:31.060281 29493 net.cpp:124] Setting up mnist
I0428 20:00:31.060312 29493 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:31.060317 29493 net.cpp:131] Top shape: 64 (64)
I0428 20:00:31.060320 29493 net.cpp:139] Memory required for data: 200960
I0428 20:00:31.060325 29493 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:31.060339 29493 net.cpp:86] Creating Layer conv0
I0428 20:00:31.060356 29493 net.cpp:408] conv0 <- data
I0428 20:00:31.060366 29493 net.cpp:382] conv0 -> conv0
I0428 20:00:31.291373 29493 net.cpp:124] Setting up conv0
I0428 20:00:31.291398 29493 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:31.291401 29493 net.cpp:139] Memory required for data: 1675520
I0428 20:00:31.291415 29493 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:31.291426 29493 net.cpp:86] Creating Layer pool0
I0428 20:00:31.291430 29493 net.cpp:408] pool0 <- conv0
I0428 20:00:31.291435 29493 net.cpp:382] pool0 -> pool0
I0428 20:00:31.291493 29493 net.cpp:124] Setting up pool0
I0428 20:00:31.291498 29493 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:31.291501 29493 net.cpp:139] Memory required for data: 2044160
I0428 20:00:31.291504 29493 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:31.291514 29493 net.cpp:86] Creating Layer conv1
I0428 20:00:31.291517 29493 net.cpp:408] conv1 <- pool0
I0428 20:00:31.291522 29493 net.cpp:382] conv1 -> conv1
I0428 20:00:31.294386 29493 net.cpp:124] Setting up conv1
I0428 20:00:31.294415 29493 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:31.294420 29493 net.cpp:139] Memory required for data: 2453760
I0428 20:00:31.294427 29493 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:31.294435 29493 net.cpp:86] Creating Layer pool1
I0428 20:00:31.294437 29493 net.cpp:408] pool1 <- conv1
I0428 20:00:31.294442 29493 net.cpp:382] pool1 -> pool1
I0428 20:00:31.294492 29493 net.cpp:124] Setting up pool1
I0428 20:00:31.294497 29493 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:31.294500 29493 net.cpp:139] Memory required for data: 2556160
I0428 20:00:31.294503 29493 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:31.294509 29493 net.cpp:86] Creating Layer ip1
I0428 20:00:31.294512 29493 net.cpp:408] ip1 <- pool1
I0428 20:00:31.294517 29493 net.cpp:382] ip1 -> ip1
I0428 20:00:31.295481 29493 net.cpp:124] Setting up ip1
I0428 20:00:31.295493 29493 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:31.295512 29493 net.cpp:139] Memory required for data: 2558720
I0428 20:00:31.295521 29493 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:31.295542 29493 net.cpp:86] Creating Layer relu1
I0428 20:00:31.295545 29493 net.cpp:408] relu1 <- ip1
I0428 20:00:31.295549 29493 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:31.295725 29493 net.cpp:124] Setting up relu1
I0428 20:00:31.295734 29493 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:31.295738 29493 net.cpp:139] Memory required for data: 2561280
I0428 20:00:31.295742 29493 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:31.295763 29493 net.cpp:86] Creating Layer ip2
I0428 20:00:31.295765 29493 net.cpp:408] ip2 <- ip1
I0428 20:00:31.295770 29493 net.cpp:382] ip2 -> ip2
I0428 20:00:31.295881 29493 net.cpp:124] Setting up ip2
I0428 20:00:31.295886 29493 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:31.295889 29493 net.cpp:139] Memory required for data: 2574080
I0428 20:00:31.295894 29493 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:31.295899 29493 net.cpp:86] Creating Layer relu2
I0428 20:00:31.295902 29493 net.cpp:408] relu2 <- ip2
I0428 20:00:31.295907 29493 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:31.296695 29493 net.cpp:124] Setting up relu2
I0428 20:00:31.296707 29493 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:31.296721 29493 net.cpp:139] Memory required for data: 2586880
I0428 20:00:31.296725 29493 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:31.296731 29493 net.cpp:86] Creating Layer ip3
I0428 20:00:31.296751 29493 net.cpp:408] ip3 <- ip2
I0428 20:00:31.296756 29493 net.cpp:382] ip3 -> ip3
I0428 20:00:31.296877 29493 net.cpp:124] Setting up ip3
I0428 20:00:31.296885 29493 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:31.296888 29493 net.cpp:139] Memory required for data: 2589440
I0428 20:00:31.296896 29493 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:31.296901 29493 net.cpp:86] Creating Layer relu3
I0428 20:00:31.296905 29493 net.cpp:408] relu3 <- ip3
I0428 20:00:31.296908 29493 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:31.297121 29493 net.cpp:124] Setting up relu3
I0428 20:00:31.297129 29493 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:31.297132 29493 net.cpp:139] Memory required for data: 2592000
I0428 20:00:31.297135 29493 layer_factory.hpp:77] Creating layer loss
I0428 20:00:31.297140 29493 net.cpp:86] Creating Layer loss
I0428 20:00:31.297144 29493 net.cpp:408] loss <- ip3
I0428 20:00:31.297148 29493 net.cpp:408] loss <- label
I0428 20:00:31.297153 29493 net.cpp:382] loss -> loss
I0428 20:00:31.297168 29493 layer_factory.hpp:77] Creating layer loss
I0428 20:00:31.297406 29493 net.cpp:124] Setting up loss
I0428 20:00:31.297415 29493 net.cpp:131] Top shape: (1)
I0428 20:00:31.297418 29493 net.cpp:134]     with loss weight 1
I0428 20:00:31.297431 29493 net.cpp:139] Memory required for data: 2592004
I0428 20:00:31.297435 29493 net.cpp:200] loss needs backward computation.
I0428 20:00:31.297438 29493 net.cpp:200] relu3 needs backward computation.
I0428 20:00:31.297456 29493 net.cpp:200] ip3 needs backward computation.
I0428 20:00:31.297458 29493 net.cpp:200] relu2 needs backward computation.
I0428 20:00:31.297461 29493 net.cpp:200] ip2 needs backward computation.
I0428 20:00:31.297464 29493 net.cpp:200] relu1 needs backward computation.
I0428 20:00:31.297466 29493 net.cpp:200] ip1 needs backward computation.
I0428 20:00:31.297469 29493 net.cpp:200] pool1 needs backward computation.
I0428 20:00:31.297472 29493 net.cpp:200] conv1 needs backward computation.
I0428 20:00:31.297475 29493 net.cpp:200] pool0 needs backward computation.
I0428 20:00:31.297478 29493 net.cpp:200] conv0 needs backward computation.
I0428 20:00:31.297482 29493 net.cpp:202] mnist does not need backward computation.
I0428 20:00:31.297484 29493 net.cpp:244] This network produces output loss
I0428 20:00:31.297492 29493 net.cpp:257] Network initialization done.
I0428 20:00:31.297857 29493 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test878.prototxt
I0428 20:00:31.297899 29493 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:31.298014 29493 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:31.298090 29493 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:31.298132 29493 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:31.298144 29493 net.cpp:86] Creating Layer mnist
I0428 20:00:31.298164 29493 net.cpp:382] mnist -> data
I0428 20:00:31.298171 29493 net.cpp:382] mnist -> label
I0428 20:00:31.298254 29493 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:31.300249 29493 net.cpp:124] Setting up mnist
I0428 20:00:31.300277 29493 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:31.300283 29493 net.cpp:131] Top shape: 100 (100)
I0428 20:00:31.300287 29493 net.cpp:139] Memory required for data: 314000
I0428 20:00:31.300290 29493 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:31.300297 29493 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:31.300300 29493 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:31.300304 29493 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:31.300312 29493 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:31.300375 29493 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:31.300381 29493 net.cpp:131] Top shape: 100 (100)
I0428 20:00:31.300384 29493 net.cpp:131] Top shape: 100 (100)
I0428 20:00:31.300387 29493 net.cpp:139] Memory required for data: 314800
I0428 20:00:31.300390 29493 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:31.300401 29493 net.cpp:86] Creating Layer conv0
I0428 20:00:31.300418 29493 net.cpp:408] conv0 <- data
I0428 20:00:31.300423 29493 net.cpp:382] conv0 -> conv0
I0428 20:00:31.302292 29493 net.cpp:124] Setting up conv0
I0428 20:00:31.302306 29493 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:31.302310 29493 net.cpp:139] Memory required for data: 2618800
I0428 20:00:31.302320 29493 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:31.302325 29493 net.cpp:86] Creating Layer pool0
I0428 20:00:31.302328 29493 net.cpp:408] pool0 <- conv0
I0428 20:00:31.302332 29493 net.cpp:382] pool0 -> pool0
I0428 20:00:31.302366 29493 net.cpp:124] Setting up pool0
I0428 20:00:31.302371 29493 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:31.302373 29493 net.cpp:139] Memory required for data: 3194800
I0428 20:00:31.302376 29493 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:31.302384 29493 net.cpp:86] Creating Layer conv1
I0428 20:00:31.302387 29493 net.cpp:408] conv1 <- pool0
I0428 20:00:31.302392 29493 net.cpp:382] conv1 -> conv1
I0428 20:00:31.304621 29493 net.cpp:124] Setting up conv1
I0428 20:00:31.304636 29493 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:31.304639 29493 net.cpp:139] Memory required for data: 3834800
I0428 20:00:31.304647 29493 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:31.304668 29493 net.cpp:86] Creating Layer pool1
I0428 20:00:31.304672 29493 net.cpp:408] pool1 <- conv1
I0428 20:00:31.304685 29493 net.cpp:382] pool1 -> pool1
I0428 20:00:31.304738 29493 net.cpp:124] Setting up pool1
I0428 20:00:31.304749 29493 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:31.304751 29493 net.cpp:139] Memory required for data: 3994800
I0428 20:00:31.304760 29493 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:31.304767 29493 net.cpp:86] Creating Layer ip1
I0428 20:00:31.304770 29493 net.cpp:408] ip1 <- pool1
I0428 20:00:31.304780 29493 net.cpp:382] ip1 -> ip1
I0428 20:00:31.304976 29493 net.cpp:124] Setting up ip1
I0428 20:00:31.304986 29493 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:31.305004 29493 net.cpp:139] Memory required for data: 3998800
I0428 20:00:31.305012 29493 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:31.305018 29493 net.cpp:86] Creating Layer relu1
I0428 20:00:31.305022 29493 net.cpp:408] relu1 <- ip1
I0428 20:00:31.305027 29493 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:31.305330 29493 net.cpp:124] Setting up relu1
I0428 20:00:31.305341 29493 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:31.305349 29493 net.cpp:139] Memory required for data: 4002800
I0428 20:00:31.305352 29493 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:31.305358 29493 net.cpp:86] Creating Layer ip2
I0428 20:00:31.305367 29493 net.cpp:408] ip2 <- ip1
I0428 20:00:31.305372 29493 net.cpp:382] ip2 -> ip2
I0428 20:00:31.305491 29493 net.cpp:124] Setting up ip2
I0428 20:00:31.305498 29493 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:31.305507 29493 net.cpp:139] Memory required for data: 4022800
I0428 20:00:31.305512 29493 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:31.305516 29493 net.cpp:86] Creating Layer relu2
I0428 20:00:31.305519 29493 net.cpp:408] relu2 <- ip2
I0428 20:00:31.305523 29493 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:31.305696 29493 net.cpp:124] Setting up relu2
I0428 20:00:31.305703 29493 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:31.305706 29493 net.cpp:139] Memory required for data: 4042800
I0428 20:00:31.305709 29493 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:31.305727 29493 net.cpp:86] Creating Layer ip3
I0428 20:00:31.305729 29493 net.cpp:408] ip3 <- ip2
I0428 20:00:31.305742 29493 net.cpp:382] ip3 -> ip3
I0428 20:00:31.305878 29493 net.cpp:124] Setting up ip3
I0428 20:00:31.305886 29493 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:31.305889 29493 net.cpp:139] Memory required for data: 4046800
I0428 20:00:31.305897 29493 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:31.305902 29493 net.cpp:86] Creating Layer relu3
I0428 20:00:31.305905 29493 net.cpp:408] relu3 <- ip3
I0428 20:00:31.305922 29493 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:31.306788 29493 net.cpp:124] Setting up relu3
I0428 20:00:31.306800 29493 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:31.306803 29493 net.cpp:139] Memory required for data: 4050800
I0428 20:00:31.306807 29493 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:31.306821 29493 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:31.306824 29493 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:31.306830 29493 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:31.306838 29493 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:31.306893 29493 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:31.306905 29493 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:31.306910 29493 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:31.306912 29493 net.cpp:139] Memory required for data: 4058800
I0428 20:00:31.306921 29493 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:31.306941 29493 net.cpp:86] Creating Layer accuracy
I0428 20:00:31.306944 29493 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:31.306954 29493 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:31.306958 29493 net.cpp:382] accuracy -> accuracy
I0428 20:00:31.306965 29493 net.cpp:124] Setting up accuracy
I0428 20:00:31.306969 29493 net.cpp:131] Top shape: (1)
I0428 20:00:31.306972 29493 net.cpp:139] Memory required for data: 4058804
I0428 20:00:31.306975 29493 layer_factory.hpp:77] Creating layer loss
I0428 20:00:31.306993 29493 net.cpp:86] Creating Layer loss
I0428 20:00:31.306998 29493 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:31.307000 29493 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:31.307005 29493 net.cpp:382] loss -> loss
I0428 20:00:31.307010 29493 layer_factory.hpp:77] Creating layer loss
I0428 20:00:31.307270 29493 net.cpp:124] Setting up loss
I0428 20:00:31.307278 29493 net.cpp:131] Top shape: (1)
I0428 20:00:31.307282 29493 net.cpp:134]     with loss weight 1
I0428 20:00:31.307312 29493 net.cpp:139] Memory required for data: 4058808
I0428 20:00:31.307314 29493 net.cpp:200] loss needs backward computation.
I0428 20:00:31.307318 29493 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:31.307322 29493 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:31.307324 29493 net.cpp:200] relu3 needs backward computation.
I0428 20:00:31.307327 29493 net.cpp:200] ip3 needs backward computation.
I0428 20:00:31.307329 29493 net.cpp:200] relu2 needs backward computation.
I0428 20:00:31.307332 29493 net.cpp:200] ip2 needs backward computation.
I0428 20:00:31.307341 29493 net.cpp:200] relu1 needs backward computation.
I0428 20:00:31.307344 29493 net.cpp:200] ip1 needs backward computation.
I0428 20:00:31.307348 29493 net.cpp:200] pool1 needs backward computation.
I0428 20:00:31.307350 29493 net.cpp:200] conv1 needs backward computation.
I0428 20:00:31.307353 29493 net.cpp:200] pool0 needs backward computation.
I0428 20:00:31.307356 29493 net.cpp:200] conv0 needs backward computation.
I0428 20:00:31.307360 29493 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:31.307363 29493 net.cpp:202] mnist does not need backward computation.
I0428 20:00:31.307365 29493 net.cpp:244] This network produces output accuracy
I0428 20:00:31.307368 29493 net.cpp:244] This network produces output loss
I0428 20:00:31.307385 29493 net.cpp:257] Network initialization done.
I0428 20:00:31.307425 29493 solver.cpp:56] Solver scaffolding done.
I0428 20:00:31.307754 29493 caffe.cpp:248] Starting Optimization
I0428 20:00:31.307760 29493 solver.cpp:273] Solving LeNet
I0428 20:00:31.307763 29493 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:31.308627 29493 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:31.312499 29493 blocking_queue.cpp:49] Waiting for data
I0428 20:00:31.383091 29500 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:31.383647 29493 solver.cpp:398]     Test net output #0: accuracy = 0.0999
I0428 20:00:31.383669 29493 solver.cpp:398]     Test net output #1: loss = 2.30948 (* 1 = 2.30948 loss)
I0428 20:00:31.386260 29493 solver.cpp:219] Iteration 0 (0 iter/s, 0.0784682s/100 iters), loss = 2.29616
I0428 20:00:31.386286 29493 solver.cpp:238]     Train net output #0: loss = 2.29616 (* 1 = 2.29616 loss)
I0428 20:00:31.386327 29493 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:31.490701 29493 solver.cpp:219] Iteration 100 (957.827 iter/s, 0.104403s/100 iters), loss = 1.57491
I0428 20:00:31.490727 29493 solver.cpp:238]     Train net output #0: loss = 1.57491 (* 1 = 1.57491 loss)
I0428 20:00:31.490733 29493 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:31.592680 29493 solver.cpp:219] Iteration 200 (980.977 iter/s, 0.101939s/100 iters), loss = 1.38118
I0428 20:00:31.592743 29493 solver.cpp:238]     Train net output #0: loss = 1.38118 (* 1 = 1.38118 loss)
I0428 20:00:31.592757 29493 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:31.691444 29493 solver.cpp:219] Iteration 300 (1013.11 iter/s, 0.0987064s/100 iters), loss = 1.3029
I0428 20:00:31.691486 29493 solver.cpp:238]     Train net output #0: loss = 1.3029 (* 1 = 1.3029 loss)
I0428 20:00:31.691494 29493 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:31.781939 29493 solver.cpp:219] Iteration 400 (1105.55 iter/s, 0.090453s/100 iters), loss = 1.34058
I0428 20:00:31.781968 29493 solver.cpp:238]     Train net output #0: loss = 1.34058 (* 1 = 1.34058 loss)
I0428 20:00:31.781975 29493 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:31.872256 29493 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:31.925818 29500 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:31.926378 29493 solver.cpp:398]     Test net output #0: accuracy = 0.5534
I0428 20:00:31.926405 29493 solver.cpp:398]     Test net output #1: loss = 1.15262 (* 1 = 1.15262 loss)
I0428 20:00:31.927408 29493 solver.cpp:219] Iteration 500 (687.628 iter/s, 0.145428s/100 iters), loss = 1.15601
I0428 20:00:31.927434 29493 solver.cpp:238]     Train net output #0: loss = 1.15601 (* 1 = 1.15601 loss)
I0428 20:00:31.927462 29493 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:32.032351 29493 solver.cpp:219] Iteration 600 (953.269 iter/s, 0.104902s/100 iters), loss = 0.911853
I0428 20:00:32.032392 29493 solver.cpp:238]     Train net output #0: loss = 0.911853 (* 1 = 0.911853 loss)
I0428 20:00:32.032407 29493 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:32.136950 29493 solver.cpp:219] Iteration 700 (956.515 iter/s, 0.104546s/100 iters), loss = 0.675797
I0428 20:00:32.136996 29493 solver.cpp:238]     Train net output #0: loss = 0.675797 (* 1 = 0.675797 loss)
I0428 20:00:32.137009 29493 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:32.240049 29493 solver.cpp:219] Iteration 800 (970.449 iter/s, 0.103045s/100 iters), loss = 0.839705
I0428 20:00:32.240080 29493 solver.cpp:238]     Train net output #0: loss = 0.839705 (* 1 = 0.839705 loss)
I0428 20:00:32.240088 29493 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:32.333458 29493 solver.cpp:219] Iteration 900 (1071.03 iter/s, 0.0933683s/100 iters), loss = 0.868525
I0428 20:00:32.333490 29493 solver.cpp:238]     Train net output #0: loss = 0.868525 (* 1 = 0.868525 loss)
I0428 20:00:32.333501 29493 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:32.364172 29499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:32.427264 29493 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:32.428263 29493 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:32.428880 29493 solver.cpp:311] Iteration 1000, loss = 0.494113
I0428 20:00:32.428900 29493 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:32.499799 29500 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:32.500378 29493 solver.cpp:398]     Test net output #0: accuracy = 0.7688
I0428 20:00:32.500406 29493 solver.cpp:398]     Test net output #1: loss = 0.584527 (* 1 = 0.584527 loss)
I0428 20:00:32.500411 29493 solver.cpp:316] Optimization Done.
I0428 20:00:32.500416 29493 caffe.cpp:259] Optimization Done.
