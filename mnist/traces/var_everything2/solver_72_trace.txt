I0428 19:29:51.574746 22134 caffe.cpp:218] Using GPUs 0
I0428 19:29:51.611055 22134 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:52.118654 22134 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test72.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:52.118795 22134 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test72.prototxt
I0428 19:29:52.119168 22134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:52.119186 22134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:52.119273 22134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:52.119349 22134 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:52.119446 22134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:52.119468 22134 net.cpp:86] Creating Layer mnist
I0428 19:29:52.119475 22134 net.cpp:382] mnist -> data
I0428 19:29:52.119499 22134 net.cpp:382] mnist -> label
I0428 19:29:52.120597 22134 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:52.123059 22134 net.cpp:124] Setting up mnist
I0428 19:29:52.123075 22134 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:52.123082 22134 net.cpp:131] Top shape: 64 (64)
I0428 19:29:52.123085 22134 net.cpp:139] Memory required for data: 200960
I0428 19:29:52.123092 22134 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:52.123133 22134 net.cpp:86] Creating Layer conv0
I0428 19:29:52.123139 22134 net.cpp:408] conv0 <- data
I0428 19:29:52.123152 22134 net.cpp:382] conv0 -> conv0
I0428 19:29:52.372040 22134 net.cpp:124] Setting up conv0
I0428 19:29:52.372067 22134 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:52.372071 22134 net.cpp:139] Memory required for data: 495872
I0428 19:29:52.372086 22134 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:52.372097 22134 net.cpp:86] Creating Layer pool0
I0428 19:29:52.372135 22134 net.cpp:408] pool0 <- conv0
I0428 19:29:52.372141 22134 net.cpp:382] pool0 -> pool0
I0428 19:29:52.372189 22134 net.cpp:124] Setting up pool0
I0428 19:29:52.372197 22134 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:52.372200 22134 net.cpp:139] Memory required for data: 569600
I0428 19:29:52.372203 22134 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:52.372213 22134 net.cpp:86] Creating Layer ip1
I0428 19:29:52.372216 22134 net.cpp:408] ip1 <- pool0
I0428 19:29:52.372220 22134 net.cpp:382] ip1 -> ip1
I0428 19:29:52.373272 22134 net.cpp:124] Setting up ip1
I0428 19:29:52.373286 22134 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:52.373306 22134 net.cpp:139] Memory required for data: 582400
I0428 19:29:52.373313 22134 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:52.373320 22134 net.cpp:86] Creating Layer relu1
I0428 19:29:52.373337 22134 net.cpp:408] relu1 <- ip1
I0428 19:29:52.373342 22134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:52.373517 22134 net.cpp:124] Setting up relu1
I0428 19:29:52.373525 22134 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:52.373528 22134 net.cpp:139] Memory required for data: 595200
I0428 19:29:52.373531 22134 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:52.373538 22134 net.cpp:86] Creating Layer ip2
I0428 19:29:52.373540 22134 net.cpp:408] ip2 <- ip1
I0428 19:29:52.373545 22134 net.cpp:382] ip2 -> ip2
I0428 19:29:52.374547 22134 net.cpp:124] Setting up ip2
I0428 19:29:52.374558 22134 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:52.374577 22134 net.cpp:139] Memory required for data: 601600
I0428 19:29:52.374585 22134 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:52.374590 22134 net.cpp:86] Creating Layer relu2
I0428 19:29:52.374594 22134 net.cpp:408] relu2 <- ip2
I0428 19:29:52.374598 22134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:52.375442 22134 net.cpp:124] Setting up relu2
I0428 19:29:52.375453 22134 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:52.375473 22134 net.cpp:139] Memory required for data: 608000
I0428 19:29:52.375476 22134 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:52.375483 22134 net.cpp:86] Creating Layer ip3
I0428 19:29:52.375486 22134 net.cpp:408] ip3 <- ip2
I0428 19:29:52.375491 22134 net.cpp:382] ip3 -> ip3
I0428 19:29:52.375586 22134 net.cpp:124] Setting up ip3
I0428 19:29:52.375592 22134 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:52.375596 22134 net.cpp:139] Memory required for data: 610560
I0428 19:29:52.375600 22134 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:52.375607 22134 net.cpp:86] Creating Layer relu3
I0428 19:29:52.375609 22134 net.cpp:408] relu3 <- ip3
I0428 19:29:52.375613 22134 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:52.375756 22134 net.cpp:124] Setting up relu3
I0428 19:29:52.375763 22134 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:52.375766 22134 net.cpp:139] Memory required for data: 613120
I0428 19:29:52.375769 22134 layer_factory.hpp:77] Creating layer loss
I0428 19:29:52.375775 22134 net.cpp:86] Creating Layer loss
I0428 19:29:52.375778 22134 net.cpp:408] loss <- ip3
I0428 19:29:52.375782 22134 net.cpp:408] loss <- label
I0428 19:29:52.375787 22134 net.cpp:382] loss -> loss
I0428 19:29:52.375804 22134 layer_factory.hpp:77] Creating layer loss
I0428 19:29:52.376080 22134 net.cpp:124] Setting up loss
I0428 19:29:52.376090 22134 net.cpp:131] Top shape: (1)
I0428 19:29:52.376092 22134 net.cpp:134]     with loss weight 1
I0428 19:29:52.376106 22134 net.cpp:139] Memory required for data: 613124
I0428 19:29:52.376109 22134 net.cpp:200] loss needs backward computation.
I0428 19:29:52.376113 22134 net.cpp:200] relu3 needs backward computation.
I0428 19:29:52.376116 22134 net.cpp:200] ip3 needs backward computation.
I0428 19:29:52.376121 22134 net.cpp:200] relu2 needs backward computation.
I0428 19:29:52.376124 22134 net.cpp:200] ip2 needs backward computation.
I0428 19:29:52.376127 22134 net.cpp:200] relu1 needs backward computation.
I0428 19:29:52.376130 22134 net.cpp:200] ip1 needs backward computation.
I0428 19:29:52.376143 22134 net.cpp:200] pool0 needs backward computation.
I0428 19:29:52.376147 22134 net.cpp:200] conv0 needs backward computation.
I0428 19:29:52.376152 22134 net.cpp:202] mnist does not need backward computation.
I0428 19:29:52.376154 22134 net.cpp:244] This network produces output loss
I0428 19:29:52.376163 22134 net.cpp:257] Network initialization done.
I0428 19:29:52.376495 22134 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test72.prototxt
I0428 19:29:52.376535 22134 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:52.376610 22134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:52.376688 22134 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:52.376731 22134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:52.376742 22134 net.cpp:86] Creating Layer mnist
I0428 19:29:52.376747 22134 net.cpp:382] mnist -> data
I0428 19:29:52.376754 22134 net.cpp:382] mnist -> label
I0428 19:29:52.376865 22134 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:52.378954 22134 net.cpp:124] Setting up mnist
I0428 19:29:52.378998 22134 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:52.379035 22134 net.cpp:131] Top shape: 100 (100)
I0428 19:29:52.379050 22134 net.cpp:139] Memory required for data: 314000
I0428 19:29:52.379055 22134 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:52.379065 22134 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:52.379067 22134 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:52.379072 22134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:52.379079 22134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:52.379169 22134 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:52.379176 22134 net.cpp:131] Top shape: 100 (100)
I0428 19:29:52.379180 22134 net.cpp:131] Top shape: 100 (100)
I0428 19:29:52.379184 22134 net.cpp:139] Memory required for data: 314800
I0428 19:29:52.379196 22134 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:52.379206 22134 net.cpp:86] Creating Layer conv0
I0428 19:29:52.379209 22134 net.cpp:408] conv0 <- data
I0428 19:29:52.379215 22134 net.cpp:382] conv0 -> conv0
I0428 19:29:52.380748 22134 net.cpp:124] Setting up conv0
I0428 19:29:52.380776 22134 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:52.380780 22134 net.cpp:139] Memory required for data: 775600
I0428 19:29:52.380789 22134 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:52.380795 22134 net.cpp:86] Creating Layer pool0
I0428 19:29:52.380798 22134 net.cpp:408] pool0 <- conv0
I0428 19:29:52.380803 22134 net.cpp:382] pool0 -> pool0
I0428 19:29:52.380861 22134 net.cpp:124] Setting up pool0
I0428 19:29:52.380867 22134 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:52.380870 22134 net.cpp:139] Memory required for data: 890800
I0428 19:29:52.380873 22134 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:52.380882 22134 net.cpp:86] Creating Layer ip1
I0428 19:29:52.380884 22134 net.cpp:408] ip1 <- pool0
I0428 19:29:52.380889 22134 net.cpp:382] ip1 -> ip1
I0428 19:29:52.381081 22134 net.cpp:124] Setting up ip1
I0428 19:29:52.381089 22134 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:52.381093 22134 net.cpp:139] Memory required for data: 910800
I0428 19:29:52.381099 22134 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:52.381105 22134 net.cpp:86] Creating Layer relu1
I0428 19:29:52.381108 22134 net.cpp:408] relu1 <- ip1
I0428 19:29:52.381112 22134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:52.381302 22134 net.cpp:124] Setting up relu1
I0428 19:29:52.381326 22134 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:52.381330 22134 net.cpp:139] Memory required for data: 930800
I0428 19:29:52.381333 22134 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:52.381340 22134 net.cpp:86] Creating Layer ip2
I0428 19:29:52.381357 22134 net.cpp:408] ip2 <- ip1
I0428 19:29:52.381363 22134 net.cpp:382] ip2 -> ip2
I0428 19:29:52.381507 22134 net.cpp:124] Setting up ip2
I0428 19:29:52.381515 22134 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:52.381518 22134 net.cpp:139] Memory required for data: 940800
I0428 19:29:52.381526 22134 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:52.381531 22134 net.cpp:86] Creating Layer relu2
I0428 19:29:52.381534 22134 net.cpp:408] relu2 <- ip2
I0428 19:29:52.381539 22134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:52.382442 22134 net.cpp:124] Setting up relu2
I0428 19:29:52.382454 22134 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:52.382473 22134 net.cpp:139] Memory required for data: 950800
I0428 19:29:52.382477 22134 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:52.382483 22134 net.cpp:86] Creating Layer ip3
I0428 19:29:52.382488 22134 net.cpp:408] ip3 <- ip2
I0428 19:29:52.382493 22134 net.cpp:382] ip3 -> ip3
I0428 19:29:52.382632 22134 net.cpp:124] Setting up ip3
I0428 19:29:52.382642 22134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:52.382645 22134 net.cpp:139] Memory required for data: 954800
I0428 19:29:52.382652 22134 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:52.382657 22134 net.cpp:86] Creating Layer relu3
I0428 19:29:52.382660 22134 net.cpp:408] relu3 <- ip3
I0428 19:29:52.382664 22134 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:52.382817 22134 net.cpp:124] Setting up relu3
I0428 19:29:52.382824 22134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:52.382828 22134 net.cpp:139] Memory required for data: 958800
I0428 19:29:52.382833 22134 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:52.382836 22134 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:52.382840 22134 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:52.382845 22134 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:52.382851 22134 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:52.382900 22134 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:52.382906 22134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:52.382910 22134 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:52.382923 22134 net.cpp:139] Memory required for data: 966800
I0428 19:29:52.382927 22134 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:52.382932 22134 net.cpp:86] Creating Layer accuracy
I0428 19:29:52.382936 22134 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:52.382939 22134 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:52.382944 22134 net.cpp:382] accuracy -> accuracy
I0428 19:29:52.382951 22134 net.cpp:124] Setting up accuracy
I0428 19:29:52.382956 22134 net.cpp:131] Top shape: (1)
I0428 19:29:52.382958 22134 net.cpp:139] Memory required for data: 966804
I0428 19:29:52.382961 22134 layer_factory.hpp:77] Creating layer loss
I0428 19:29:52.382966 22134 net.cpp:86] Creating Layer loss
I0428 19:29:52.382969 22134 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:52.382973 22134 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:52.382977 22134 net.cpp:382] loss -> loss
I0428 19:29:52.382983 22134 layer_factory.hpp:77] Creating layer loss
I0428 19:29:52.383208 22134 net.cpp:124] Setting up loss
I0428 19:29:52.383216 22134 net.cpp:131] Top shape: (1)
I0428 19:29:52.383219 22134 net.cpp:134]     with loss weight 1
I0428 19:29:52.383225 22134 net.cpp:139] Memory required for data: 966808
I0428 19:29:52.383229 22134 net.cpp:200] loss needs backward computation.
I0428 19:29:52.383232 22134 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:52.383237 22134 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:52.383240 22134 net.cpp:200] relu3 needs backward computation.
I0428 19:29:52.383244 22134 net.cpp:200] ip3 needs backward computation.
I0428 19:29:52.383247 22134 net.cpp:200] relu2 needs backward computation.
I0428 19:29:52.383250 22134 net.cpp:200] ip2 needs backward computation.
I0428 19:29:52.383254 22134 net.cpp:200] relu1 needs backward computation.
I0428 19:29:52.383255 22134 net.cpp:200] ip1 needs backward computation.
I0428 19:29:52.383260 22134 net.cpp:200] pool0 needs backward computation.
I0428 19:29:52.383270 22134 net.cpp:200] conv0 needs backward computation.
I0428 19:29:52.383273 22134 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:52.383277 22134 net.cpp:202] mnist does not need backward computation.
I0428 19:29:52.383280 22134 net.cpp:244] This network produces output accuracy
I0428 19:29:52.383283 22134 net.cpp:244] This network produces output loss
I0428 19:29:52.383308 22134 net.cpp:257] Network initialization done.
I0428 19:29:52.383347 22134 solver.cpp:56] Solver scaffolding done.
I0428 19:29:52.383687 22134 caffe.cpp:248] Starting Optimization
I0428 19:29:52.383692 22134 solver.cpp:273] Solving LeNet
I0428 19:29:52.383695 22134 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:52.384574 22134 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:52.387135 22134 blocking_queue.cpp:49] Waiting for data
I0428 19:29:52.459030 22141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:52.459525 22134 solver.cpp:398]     Test net output #0: accuracy = 0.1022
I0428 19:29:52.459547 22134 solver.cpp:398]     Test net output #1: loss = 2.30662 (* 1 = 2.30662 loss)
I0428 19:29:52.461153 22134 solver.cpp:219] Iteration 0 (2.94104 iter/s, 0.0774042s/100 iters), loss = 2.31951
I0428 19:29:52.461189 22134 solver.cpp:238]     Train net output #0: loss = 2.31951 (* 1 = 2.31951 loss)
I0428 19:29:52.461202 22134 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:52.519268 22134 solver.cpp:219] Iteration 100 (1721.99 iter/s, 0.0580722s/100 iters), loss = 0.973884
I0428 19:29:52.519309 22134 solver.cpp:238]     Train net output #0: loss = 0.973884 (* 1 = 0.973884 loss)
I0428 19:29:52.519315 22134 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:52.577077 22134 solver.cpp:219] Iteration 200 (1730.85 iter/s, 0.0577751s/100 iters), loss = 0.665569
I0428 19:29:52.577119 22134 solver.cpp:238]     Train net output #0: loss = 0.665569 (* 1 = 0.665569 loss)
I0428 19:29:52.577126 22134 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:52.636364 22134 solver.cpp:219] Iteration 300 (1687.68 iter/s, 0.0592531s/100 iters), loss = 0.256078
I0428 19:29:52.636394 22134 solver.cpp:238]     Train net output #0: loss = 0.256078 (* 1 = 0.256078 loss)
I0428 19:29:52.636415 22134 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:52.693336 22134 solver.cpp:219] Iteration 400 (1756.34 iter/s, 0.0569365s/100 iters), loss = 0.192717
I0428 19:29:52.693362 22134 solver.cpp:238]     Train net output #0: loss = 0.192717 (* 1 = 0.192717 loss)
I0428 19:29:52.693368 22134 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:52.748040 22134 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:52.823432 22141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:52.823971 22134 solver.cpp:398]     Test net output #0: accuracy = 0.9357
I0428 19:29:52.824007 22134 solver.cpp:398]     Test net output #1: loss = 0.21081 (* 1 = 0.21081 loss)
I0428 19:29:52.824841 22134 solver.cpp:219] Iteration 500 (760.678 iter/s, 0.131462s/100 iters), loss = 0.23635
I0428 19:29:52.824894 22134 solver.cpp:238]     Train net output #0: loss = 0.23635 (* 1 = 0.23635 loss)
I0428 19:29:52.824904 22134 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:52.896616 22134 solver.cpp:219] Iteration 600 (1394.45 iter/s, 0.0717128s/100 iters), loss = 0.181111
I0428 19:29:52.896646 22134 solver.cpp:238]     Train net output #0: loss = 0.18111 (* 1 = 0.18111 loss)
I0428 19:29:52.896654 22134 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:52.960870 22134 solver.cpp:219] Iteration 700 (1557.44 iter/s, 0.0642079s/100 iters), loss = 0.39467
I0428 19:29:52.960927 22134 solver.cpp:238]     Train net output #0: loss = 0.39467 (* 1 = 0.39467 loss)
I0428 19:29:52.960942 22134 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:53.044472 22134 solver.cpp:219] Iteration 800 (1197.09 iter/s, 0.0835359s/100 iters), loss = 0.33894
I0428 19:29:53.044526 22134 solver.cpp:238]     Train net output #0: loss = 0.33894 (* 1 = 0.33894 loss)
I0428 19:29:53.044541 22134 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:53.121480 22134 solver.cpp:219] Iteration 900 (1299.59 iter/s, 0.0769476s/100 iters), loss = 0.283966
I0428 19:29:53.121515 22134 solver.cpp:238]     Train net output #0: loss = 0.283966 (* 1 = 0.283966 loss)
I0428 19:29:53.121526 22134 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:53.143182 22140 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:53.183609 22134 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:53.184425 22134 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:53.184944 22134 solver.cpp:311] Iteration 1000, loss = 0.248627
I0428 19:29:53.184963 22134 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:53.260167 22141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:53.260629 22134 solver.cpp:398]     Test net output #0: accuracy = 0.9571
I0428 19:29:53.260653 22134 solver.cpp:398]     Test net output #1: loss = 0.138165 (* 1 = 0.138165 loss)
I0428 19:29:53.260660 22134 solver.cpp:316] Optimization Done.
I0428 19:29:53.260664 22134 caffe.cpp:259] Optimization Done.
