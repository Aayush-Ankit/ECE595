I0428 19:46:23.473173 25993 caffe.cpp:218] Using GPUs 0
I0428 19:46:23.512338 25993 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:24.033329 25993 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test491.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:24.033470 25993 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test491.prototxt
I0428 19:46:24.033871 25993 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:24.033890 25993 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:24.033987 25993 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:24.034060 25993 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:24.034157 25993 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:24.034180 25993 net.cpp:86] Creating Layer mnist
I0428 19:46:24.034188 25993 net.cpp:382] mnist -> data
I0428 19:46:24.034210 25993 net.cpp:382] mnist -> label
I0428 19:46:24.035298 25993 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:24.037765 25993 net.cpp:124] Setting up mnist
I0428 19:46:24.037783 25993 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:24.037789 25993 net.cpp:131] Top shape: 64 (64)
I0428 19:46:24.037793 25993 net.cpp:139] Memory required for data: 200960
I0428 19:46:24.037801 25993 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:24.037817 25993 net.cpp:86] Creating Layer conv0
I0428 19:46:24.037837 25993 net.cpp:408] conv0 <- data
I0428 19:46:24.037848 25993 net.cpp:382] conv0 -> conv0
I0428 19:46:24.327801 25993 net.cpp:124] Setting up conv0
I0428 19:46:24.327834 25993 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:24.327841 25993 net.cpp:139] Memory required for data: 495872
I0428 19:46:24.327858 25993 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:24.327874 25993 net.cpp:86] Creating Layer pool0
I0428 19:46:24.327879 25993 net.cpp:408] pool0 <- conv0
I0428 19:46:24.327886 25993 net.cpp:382] pool0 -> pool0
I0428 19:46:24.327944 25993 net.cpp:124] Setting up pool0
I0428 19:46:24.327953 25993 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:24.327957 25993 net.cpp:139] Memory required for data: 569600
I0428 19:46:24.327960 25993 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:24.327973 25993 net.cpp:86] Creating Layer conv1
I0428 19:46:24.327980 25993 net.cpp:408] conv1 <- pool0
I0428 19:46:24.327986 25993 net.cpp:382] conv1 -> conv1
I0428 19:46:24.331167 25993 net.cpp:124] Setting up conv1
I0428 19:46:24.331185 25993 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:24.331190 25993 net.cpp:139] Memory required for data: 2208000
I0428 19:46:24.331202 25993 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:24.331212 25993 net.cpp:86] Creating Layer pool1
I0428 19:46:24.331218 25993 net.cpp:408] pool1 <- conv1
I0428 19:46:24.331226 25993 net.cpp:382] pool1 -> pool1
I0428 19:46:24.331274 25993 net.cpp:124] Setting up pool1
I0428 19:46:24.331280 25993 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:24.331284 25993 net.cpp:139] Memory required for data: 2617600
I0428 19:46:24.331287 25993 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:24.331297 25993 net.cpp:86] Creating Layer ip1
I0428 19:46:24.331307 25993 net.cpp:408] ip1 <- pool1
I0428 19:46:24.331313 25993 net.cpp:382] ip1 -> ip1
I0428 19:46:24.331708 25993 net.cpp:124] Setting up ip1
I0428 19:46:24.331717 25993 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:24.331720 25993 net.cpp:139] Memory required for data: 2624000
I0428 19:46:24.331729 25993 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:24.331737 25993 net.cpp:86] Creating Layer relu1
I0428 19:46:24.331742 25993 net.cpp:408] relu1 <- ip1
I0428 19:46:24.331746 25993 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:24.331953 25993 net.cpp:124] Setting up relu1
I0428 19:46:24.331964 25993 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:24.331969 25993 net.cpp:139] Memory required for data: 2630400
I0428 19:46:24.331971 25993 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:24.331981 25993 net.cpp:86] Creating Layer ip2
I0428 19:46:24.331984 25993 net.cpp:408] ip2 <- ip1
I0428 19:46:24.331991 25993 net.cpp:382] ip2 -> ip2
I0428 19:46:24.332108 25993 net.cpp:124] Setting up ip2
I0428 19:46:24.332118 25993 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:24.332121 25993 net.cpp:139] Memory required for data: 2632960
I0428 19:46:24.332129 25993 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:24.332136 25993 net.cpp:86] Creating Layer relu2
I0428 19:46:24.332139 25993 net.cpp:408] relu2 <- ip2
I0428 19:46:24.332144 25993 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:24.333005 25993 net.cpp:124] Setting up relu2
I0428 19:46:24.333021 25993 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:24.333026 25993 net.cpp:139] Memory required for data: 2635520
I0428 19:46:24.333030 25993 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:24.333040 25993 net.cpp:86] Creating Layer ip3
I0428 19:46:24.333045 25993 net.cpp:408] ip3 <- ip2
I0428 19:46:24.333051 25993 net.cpp:382] ip3 -> ip3
I0428 19:46:24.333176 25993 net.cpp:124] Setting up ip3
I0428 19:46:24.333185 25993 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:24.333189 25993 net.cpp:139] Memory required for data: 2638080
I0428 19:46:24.333197 25993 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:24.333204 25993 net.cpp:86] Creating Layer relu3
I0428 19:46:24.333207 25993 net.cpp:408] relu3 <- ip3
I0428 19:46:24.333214 25993 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:24.333423 25993 net.cpp:124] Setting up relu3
I0428 19:46:24.333434 25993 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:24.333438 25993 net.cpp:139] Memory required for data: 2640640
I0428 19:46:24.333442 25993 layer_factory.hpp:77] Creating layer loss
I0428 19:46:24.333449 25993 net.cpp:86] Creating Layer loss
I0428 19:46:24.333452 25993 net.cpp:408] loss <- ip3
I0428 19:46:24.333457 25993 net.cpp:408] loss <- label
I0428 19:46:24.333465 25993 net.cpp:382] loss -> loss
I0428 19:46:24.333485 25993 layer_factory.hpp:77] Creating layer loss
I0428 19:46:24.333772 25993 net.cpp:124] Setting up loss
I0428 19:46:24.333783 25993 net.cpp:131] Top shape: (1)
I0428 19:46:24.333787 25993 net.cpp:134]     with loss weight 1
I0428 19:46:24.333802 25993 net.cpp:139] Memory required for data: 2640644
I0428 19:46:24.333806 25993 net.cpp:200] loss needs backward computation.
I0428 19:46:24.333811 25993 net.cpp:200] relu3 needs backward computation.
I0428 19:46:24.333817 25993 net.cpp:200] ip3 needs backward computation.
I0428 19:46:24.333819 25993 net.cpp:200] relu2 needs backward computation.
I0428 19:46:24.333822 25993 net.cpp:200] ip2 needs backward computation.
I0428 19:46:24.333825 25993 net.cpp:200] relu1 needs backward computation.
I0428 19:46:24.333828 25993 net.cpp:200] ip1 needs backward computation.
I0428 19:46:24.333832 25993 net.cpp:200] pool1 needs backward computation.
I0428 19:46:24.333835 25993 net.cpp:200] conv1 needs backward computation.
I0428 19:46:24.333838 25993 net.cpp:200] pool0 needs backward computation.
I0428 19:46:24.333842 25993 net.cpp:200] conv0 needs backward computation.
I0428 19:46:24.333845 25993 net.cpp:202] mnist does not need backward computation.
I0428 19:46:24.333849 25993 net.cpp:244] This network produces output loss
I0428 19:46:24.333860 25993 net.cpp:257] Network initialization done.
I0428 19:46:24.334244 25993 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test491.prototxt
I0428 19:46:24.334277 25993 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:24.334388 25993 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:24.334486 25993 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:24.334543 25993 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:24.334563 25993 net.cpp:86] Creating Layer mnist
I0428 19:46:24.334569 25993 net.cpp:382] mnist -> data
I0428 19:46:24.334578 25993 net.cpp:382] mnist -> label
I0428 19:46:24.334682 25993 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:24.336880 25993 net.cpp:124] Setting up mnist
I0428 19:46:24.336916 25993 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:24.336923 25993 net.cpp:131] Top shape: 100 (100)
I0428 19:46:24.336927 25993 net.cpp:139] Memory required for data: 314000
I0428 19:46:24.336931 25993 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:24.336940 25993 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:24.336943 25993 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:24.336949 25993 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:24.336957 25993 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:24.337049 25993 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:24.337059 25993 net.cpp:131] Top shape: 100 (100)
I0428 19:46:24.337064 25993 net.cpp:131] Top shape: 100 (100)
I0428 19:46:24.337067 25993 net.cpp:139] Memory required for data: 314800
I0428 19:46:24.337070 25993 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:24.337081 25993 net.cpp:86] Creating Layer conv0
I0428 19:46:24.337088 25993 net.cpp:408] conv0 <- data
I0428 19:46:24.337095 25993 net.cpp:382] conv0 -> conv0
I0428 19:46:24.339038 25993 net.cpp:124] Setting up conv0
I0428 19:46:24.339056 25993 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:24.339059 25993 net.cpp:139] Memory required for data: 775600
I0428 19:46:24.339071 25993 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:24.339082 25993 net.cpp:86] Creating Layer pool0
I0428 19:46:24.339085 25993 net.cpp:408] pool0 <- conv0
I0428 19:46:24.339092 25993 net.cpp:382] pool0 -> pool0
I0428 19:46:24.339143 25993 net.cpp:124] Setting up pool0
I0428 19:46:24.339150 25993 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:24.339154 25993 net.cpp:139] Memory required for data: 890800
I0428 19:46:24.339157 25993 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:24.339169 25993 net.cpp:86] Creating Layer conv1
I0428 19:46:24.339172 25993 net.cpp:408] conv1 <- pool0
I0428 19:46:24.339179 25993 net.cpp:382] conv1 -> conv1
I0428 19:46:24.341027 25993 net.cpp:124] Setting up conv1
I0428 19:46:24.341047 25993 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:24.341050 25993 net.cpp:139] Memory required for data: 3450800
I0428 19:46:24.341061 25993 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:24.341069 25993 net.cpp:86] Creating Layer pool1
I0428 19:46:24.341073 25993 net.cpp:408] pool1 <- conv1
I0428 19:46:24.341080 25993 net.cpp:382] pool1 -> pool1
I0428 19:46:24.341126 25993 net.cpp:124] Setting up pool1
I0428 19:46:24.341135 25993 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:24.341138 25993 net.cpp:139] Memory required for data: 4090800
I0428 19:46:24.341141 25993 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:24.341150 25993 net.cpp:86] Creating Layer ip1
I0428 19:46:24.341157 25993 net.cpp:408] ip1 <- pool1
I0428 19:46:24.341166 25993 net.cpp:382] ip1 -> ip1
I0428 19:46:24.341593 25993 net.cpp:124] Setting up ip1
I0428 19:46:24.341604 25993 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:24.341622 25993 net.cpp:139] Memory required for data: 4100800
I0428 19:46:24.341631 25993 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:24.341637 25993 net.cpp:86] Creating Layer relu1
I0428 19:46:24.341641 25993 net.cpp:408] relu1 <- ip1
I0428 19:46:24.341646 25993 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:24.341847 25993 net.cpp:124] Setting up relu1
I0428 19:46:24.341861 25993 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:24.341866 25993 net.cpp:139] Memory required for data: 4110800
I0428 19:46:24.341871 25993 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:24.341878 25993 net.cpp:86] Creating Layer ip2
I0428 19:46:24.341883 25993 net.cpp:408] ip2 <- ip1
I0428 19:46:24.341891 25993 net.cpp:382] ip2 -> ip2
I0428 19:46:24.342015 25993 net.cpp:124] Setting up ip2
I0428 19:46:24.342023 25993 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:24.342026 25993 net.cpp:139] Memory required for data: 4114800
I0428 19:46:24.342033 25993 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:24.342039 25993 net.cpp:86] Creating Layer relu2
I0428 19:46:24.342043 25993 net.cpp:408] relu2 <- ip2
I0428 19:46:24.342049 25993 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:24.342242 25993 net.cpp:124] Setting up relu2
I0428 19:46:24.342254 25993 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:24.342258 25993 net.cpp:139] Memory required for data: 4118800
I0428 19:46:24.342262 25993 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:24.342269 25993 net.cpp:86] Creating Layer ip3
I0428 19:46:24.342272 25993 net.cpp:408] ip3 <- ip2
I0428 19:46:24.342279 25993 net.cpp:382] ip3 -> ip3
I0428 19:46:24.342402 25993 net.cpp:124] Setting up ip3
I0428 19:46:24.342411 25993 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:24.342414 25993 net.cpp:139] Memory required for data: 4122800
I0428 19:46:24.342422 25993 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:24.342428 25993 net.cpp:86] Creating Layer relu3
I0428 19:46:24.342432 25993 net.cpp:408] relu3 <- ip3
I0428 19:46:24.342437 25993 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:24.343391 25993 net.cpp:124] Setting up relu3
I0428 19:46:24.343406 25993 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:24.343410 25993 net.cpp:139] Memory required for data: 4126800
I0428 19:46:24.343415 25993 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:24.343423 25993 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:24.343427 25993 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:24.343433 25993 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:24.343441 25993 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:24.343488 25993 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:24.343497 25993 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:24.343502 25993 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:24.343505 25993 net.cpp:139] Memory required for data: 4134800
I0428 19:46:24.343510 25993 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:24.343516 25993 net.cpp:86] Creating Layer accuracy
I0428 19:46:24.343519 25993 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:24.343524 25993 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:24.343530 25993 net.cpp:382] accuracy -> accuracy
I0428 19:46:24.343539 25993 net.cpp:124] Setting up accuracy
I0428 19:46:24.343544 25993 net.cpp:131] Top shape: (1)
I0428 19:46:24.343547 25993 net.cpp:139] Memory required for data: 4134804
I0428 19:46:24.343551 25993 layer_factory.hpp:77] Creating layer loss
I0428 19:46:24.343556 25993 net.cpp:86] Creating Layer loss
I0428 19:46:24.343560 25993 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:24.343564 25993 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:24.343571 25993 net.cpp:382] loss -> loss
I0428 19:46:24.343578 25993 layer_factory.hpp:77] Creating layer loss
I0428 19:46:24.343870 25993 net.cpp:124] Setting up loss
I0428 19:46:24.343883 25993 net.cpp:131] Top shape: (1)
I0428 19:46:24.343886 25993 net.cpp:134]     with loss weight 1
I0428 19:46:24.343894 25993 net.cpp:139] Memory required for data: 4134808
I0428 19:46:24.343909 25993 net.cpp:200] loss needs backward computation.
I0428 19:46:24.343914 25993 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:24.343919 25993 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:24.343922 25993 net.cpp:200] relu3 needs backward computation.
I0428 19:46:24.343925 25993 net.cpp:200] ip3 needs backward computation.
I0428 19:46:24.343930 25993 net.cpp:200] relu2 needs backward computation.
I0428 19:46:24.343933 25993 net.cpp:200] ip2 needs backward computation.
I0428 19:46:24.343936 25993 net.cpp:200] relu1 needs backward computation.
I0428 19:46:24.343940 25993 net.cpp:200] ip1 needs backward computation.
I0428 19:46:24.343942 25993 net.cpp:200] pool1 needs backward computation.
I0428 19:46:24.343947 25993 net.cpp:200] conv1 needs backward computation.
I0428 19:46:24.343950 25993 net.cpp:200] pool0 needs backward computation.
I0428 19:46:24.343955 25993 net.cpp:200] conv0 needs backward computation.
I0428 19:46:24.343958 25993 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:24.343963 25993 net.cpp:202] mnist does not need backward computation.
I0428 19:46:24.343974 25993 net.cpp:244] This network produces output accuracy
I0428 19:46:24.343978 25993 net.cpp:244] This network produces output loss
I0428 19:46:24.343992 25993 net.cpp:257] Network initialization done.
I0428 19:46:24.344043 25993 solver.cpp:56] Solver scaffolding done.
I0428 19:46:24.344496 25993 caffe.cpp:248] Starting Optimization
I0428 19:46:24.344503 25993 solver.cpp:273] Solving LeNet
I0428 19:46:24.344506 25993 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:24.344804 25993 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:24.350425 25993 blocking_queue.cpp:49] Waiting for data
I0428 19:46:24.417377 26001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:24.418007 25993 solver.cpp:398]     Test net output #0: accuracy = 0.1074
I0428 19:46:24.418032 25993 solver.cpp:398]     Test net output #1: loss = 2.31295 (* 1 = 2.31295 loss)
I0428 19:46:24.422071 25993 solver.cpp:219] Iteration 0 (0 iter/s, 0.0775311s/100 iters), loss = 2.3042
I0428 19:46:24.422101 25993 solver.cpp:238]     Train net output #0: loss = 2.3042 (* 1 = 2.3042 loss)
I0428 19:46:24.422116 25993 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:24.587366 25993 solver.cpp:219] Iteration 100 (605.166 iter/s, 0.165244s/100 iters), loss = 1.12705
I0428 19:46:24.587407 25993 solver.cpp:238]     Train net output #0: loss = 1.12705 (* 1 = 1.12705 loss)
I0428 19:46:24.587417 25993 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:24.760882 25993 solver.cpp:219] Iteration 200 (576.5 iter/s, 0.173461s/100 iters), loss = 1.2169
I0428 19:46:24.760921 25993 solver.cpp:238]     Train net output #0: loss = 1.2169 (* 1 = 1.2169 loss)
I0428 19:46:24.760932 25993 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:24.934662 25993 solver.cpp:219] Iteration 300 (575.623 iter/s, 0.173725s/100 iters), loss = 1.1807
I0428 19:46:24.934705 25993 solver.cpp:238]     Train net output #0: loss = 1.1807 (* 1 = 1.1807 loss)
I0428 19:46:24.934715 25993 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:25.115262 25993 solver.cpp:219] Iteration 400 (553.886 iter/s, 0.180542s/100 iters), loss = 1.40532
I0428 19:46:25.115308 25993 solver.cpp:238]     Train net output #0: loss = 1.40532 (* 1 = 1.40532 loss)
I0428 19:46:25.115319 25993 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:25.297252 25993 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:25.374310 26001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:25.374986 25993 solver.cpp:398]     Test net output #0: accuracy = 0.5982
I0428 19:46:25.375020 25993 solver.cpp:398]     Test net output #1: loss = 1.208 (* 1 = 1.208 loss)
I0428 19:46:25.376675 25993 solver.cpp:219] Iteration 500 (382.63 iter/s, 0.261349s/100 iters), loss = 1.37526
I0428 19:46:25.376710 25993 solver.cpp:238]     Train net output #0: loss = 1.37526 (* 1 = 1.37526 loss)
I0428 19:46:25.376741 25993 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:25.544132 25993 solver.cpp:219] Iteration 600 (597.343 iter/s, 0.167408s/100 iters), loss = 0.949768
I0428 19:46:25.544176 25993 solver.cpp:238]     Train net output #0: loss = 0.949768 (* 1 = 0.949768 loss)
I0428 19:46:25.544185 25993 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:25.716970 25993 solver.cpp:219] Iteration 700 (578.752 iter/s, 0.172786s/100 iters), loss = 1.49423
I0428 19:46:25.717015 25993 solver.cpp:238]     Train net output #0: loss = 1.49423 (* 1 = 1.49423 loss)
I0428 19:46:25.717025 25993 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:25.891741 25993 solver.cpp:219] Iteration 800 (572.361 iter/s, 0.174715s/100 iters), loss = 1.16689
I0428 19:46:25.891782 25993 solver.cpp:238]     Train net output #0: loss = 1.16689 (* 1 = 1.16689 loss)
I0428 19:46:25.891793 25993 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:26.077330 25993 solver.cpp:219] Iteration 900 (538.99 iter/s, 0.185532s/100 iters), loss = 1.09529
I0428 19:46:26.077381 25993 solver.cpp:238]     Train net output #0: loss = 1.09529 (* 1 = 1.09529 loss)
I0428 19:46:26.077392 25993 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:26.139776 26000 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:26.259341 25993 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:26.261833 25993 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:26.263121 25993 solver.cpp:311] Iteration 1000, loss = 1.2057
I0428 19:46:26.263146 25993 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:26.323161 26001 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:26.325114 25993 solver.cpp:398]     Test net output #0: accuracy = 0.6709
I0428 19:46:26.325148 25993 solver.cpp:398]     Test net output #1: loss = 0.9907 (* 1 = 0.9907 loss)
I0428 19:46:26.325155 25993 solver.cpp:316] Optimization Done.
I0428 19:46:26.325158 25993 caffe.cpp:259] Optimization Done.
