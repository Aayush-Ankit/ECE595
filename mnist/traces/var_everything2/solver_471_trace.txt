I0428 19:45:24.434692 25799 caffe.cpp:218] Using GPUs 0
I0428 19:45:24.470082 25799 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:24.981292 25799 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test471.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:24.981432 25799 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test471.prototxt
I0428 19:45:24.981818 25799 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:24.981835 25799 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:24.981927 25799 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:24.982002 25799 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:24.982101 25799 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:24.982126 25799 net.cpp:86] Creating Layer mnist
I0428 19:45:24.982134 25799 net.cpp:382] mnist -> data
I0428 19:45:24.982157 25799 net.cpp:382] mnist -> label
I0428 19:45:24.983243 25799 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:24.985708 25799 net.cpp:124] Setting up mnist
I0428 19:45:24.985726 25799 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:24.985734 25799 net.cpp:131] Top shape: 64 (64)
I0428 19:45:24.985738 25799 net.cpp:139] Memory required for data: 200960
I0428 19:45:24.985744 25799 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:24.985759 25799 net.cpp:86] Creating Layer conv0
I0428 19:45:24.985764 25799 net.cpp:408] conv0 <- data
I0428 19:45:24.985776 25799 net.cpp:382] conv0 -> conv0
I0428 19:45:25.278379 25799 net.cpp:124] Setting up conv0
I0428 19:45:25.278412 25799 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:25.278417 25799 net.cpp:139] Memory required for data: 495872
I0428 19:45:25.278456 25799 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:25.278471 25799 net.cpp:86] Creating Layer pool0
I0428 19:45:25.278476 25799 net.cpp:408] pool0 <- conv0
I0428 19:45:25.278483 25799 net.cpp:382] pool0 -> pool0
I0428 19:45:25.278539 25799 net.cpp:124] Setting up pool0
I0428 19:45:25.278548 25799 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:25.278551 25799 net.cpp:139] Memory required for data: 569600
I0428 19:45:25.278555 25799 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:25.278568 25799 net.cpp:86] Creating Layer conv1
I0428 19:45:25.278586 25799 net.cpp:408] conv1 <- pool0
I0428 19:45:25.278592 25799 net.cpp:382] conv1 -> conv1
I0428 19:45:25.281770 25799 net.cpp:124] Setting up conv1
I0428 19:45:25.281790 25799 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:25.281795 25799 net.cpp:139] Memory required for data: 2208000
I0428 19:45:25.281805 25799 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:25.281813 25799 net.cpp:86] Creating Layer pool1
I0428 19:45:25.281817 25799 net.cpp:408] pool1 <- conv1
I0428 19:45:25.281824 25799 net.cpp:382] pool1 -> pool1
I0428 19:45:25.281878 25799 net.cpp:124] Setting up pool1
I0428 19:45:25.281888 25799 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:25.281890 25799 net.cpp:139] Memory required for data: 2617600
I0428 19:45:25.281895 25799 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:25.281905 25799 net.cpp:86] Creating Layer ip1
I0428 19:45:25.281911 25799 net.cpp:408] ip1 <- pool1
I0428 19:45:25.281918 25799 net.cpp:382] ip1 -> ip1
I0428 19:45:25.282140 25799 net.cpp:124] Setting up ip1
I0428 19:45:25.282148 25799 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:25.282151 25799 net.cpp:139] Memory required for data: 2620160
I0428 19:45:25.282160 25799 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:25.282166 25799 net.cpp:86] Creating Layer relu1
I0428 19:45:25.282171 25799 net.cpp:408] relu1 <- ip1
I0428 19:45:25.282176 25799 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:25.282392 25799 net.cpp:124] Setting up relu1
I0428 19:45:25.282403 25799 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:25.282407 25799 net.cpp:139] Memory required for data: 2622720
I0428 19:45:25.282411 25799 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:25.282420 25799 net.cpp:86] Creating Layer ip2
I0428 19:45:25.282424 25799 net.cpp:408] ip2 <- ip1
I0428 19:45:25.282431 25799 net.cpp:382] ip2 -> ip2
I0428 19:45:25.282552 25799 net.cpp:124] Setting up ip2
I0428 19:45:25.282560 25799 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:25.282563 25799 net.cpp:139] Memory required for data: 2625280
I0428 19:45:25.282570 25799 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:25.282577 25799 net.cpp:86] Creating Layer relu2
I0428 19:45:25.282580 25799 net.cpp:408] relu2 <- ip2
I0428 19:45:25.282585 25799 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:25.283443 25799 net.cpp:124] Setting up relu2
I0428 19:45:25.283459 25799 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:25.283463 25799 net.cpp:139] Memory required for data: 2627840
I0428 19:45:25.283468 25799 layer_factory.hpp:77] Creating layer loss
I0428 19:45:25.283474 25799 net.cpp:86] Creating Layer loss
I0428 19:45:25.283478 25799 net.cpp:408] loss <- ip2
I0428 19:45:25.283483 25799 net.cpp:408] loss <- label
I0428 19:45:25.283490 25799 net.cpp:382] loss -> loss
I0428 19:45:25.283509 25799 layer_factory.hpp:77] Creating layer loss
I0428 19:45:25.283800 25799 net.cpp:124] Setting up loss
I0428 19:45:25.283812 25799 net.cpp:131] Top shape: (1)
I0428 19:45:25.283815 25799 net.cpp:134]     with loss weight 1
I0428 19:45:25.283830 25799 net.cpp:139] Memory required for data: 2627844
I0428 19:45:25.283835 25799 net.cpp:200] loss needs backward computation.
I0428 19:45:25.283839 25799 net.cpp:200] relu2 needs backward computation.
I0428 19:45:25.283843 25799 net.cpp:200] ip2 needs backward computation.
I0428 19:45:25.283846 25799 net.cpp:200] relu1 needs backward computation.
I0428 19:45:25.283849 25799 net.cpp:200] ip1 needs backward computation.
I0428 19:45:25.283865 25799 net.cpp:200] pool1 needs backward computation.
I0428 19:45:25.283869 25799 net.cpp:200] conv1 needs backward computation.
I0428 19:45:25.283872 25799 net.cpp:200] pool0 needs backward computation.
I0428 19:45:25.283875 25799 net.cpp:200] conv0 needs backward computation.
I0428 19:45:25.283879 25799 net.cpp:202] mnist does not need backward computation.
I0428 19:45:25.283882 25799 net.cpp:244] This network produces output loss
I0428 19:45:25.283895 25799 net.cpp:257] Network initialization done.
I0428 19:45:25.284237 25799 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test471.prototxt
I0428 19:45:25.284267 25799 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:25.284369 25799 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:25.284447 25799 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:25.284499 25799 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:25.284513 25799 net.cpp:86] Creating Layer mnist
I0428 19:45:25.284519 25799 net.cpp:382] mnist -> data
I0428 19:45:25.284528 25799 net.cpp:382] mnist -> label
I0428 19:45:25.284636 25799 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:25.286826 25799 net.cpp:124] Setting up mnist
I0428 19:45:25.286854 25799 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:25.286861 25799 net.cpp:131] Top shape: 100 (100)
I0428 19:45:25.286865 25799 net.cpp:139] Memory required for data: 314000
I0428 19:45:25.286870 25799 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:25.286877 25799 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:25.286880 25799 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:25.286886 25799 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:25.286895 25799 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:25.287006 25799 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:25.287027 25799 net.cpp:131] Top shape: 100 (100)
I0428 19:45:25.287032 25799 net.cpp:131] Top shape: 100 (100)
I0428 19:45:25.287035 25799 net.cpp:139] Memory required for data: 314800
I0428 19:45:25.287039 25799 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:25.287050 25799 net.cpp:86] Creating Layer conv0
I0428 19:45:25.287056 25799 net.cpp:408] conv0 <- data
I0428 19:45:25.287065 25799 net.cpp:382] conv0 -> conv0
I0428 19:45:25.288833 25799 net.cpp:124] Setting up conv0
I0428 19:45:25.288851 25799 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:25.288854 25799 net.cpp:139] Memory required for data: 775600
I0428 19:45:25.288866 25799 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:25.288875 25799 net.cpp:86] Creating Layer pool0
I0428 19:45:25.288879 25799 net.cpp:408] pool0 <- conv0
I0428 19:45:25.288887 25799 net.cpp:382] pool0 -> pool0
I0428 19:45:25.288933 25799 net.cpp:124] Setting up pool0
I0428 19:45:25.288940 25799 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:25.288944 25799 net.cpp:139] Memory required for data: 890800
I0428 19:45:25.288947 25799 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:25.288961 25799 net.cpp:86] Creating Layer conv1
I0428 19:45:25.288967 25799 net.cpp:408] conv1 <- pool0
I0428 19:45:25.288975 25799 net.cpp:382] conv1 -> conv1
I0428 19:45:25.290691 25799 net.cpp:124] Setting up conv1
I0428 19:45:25.290706 25799 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:25.290710 25799 net.cpp:139] Memory required for data: 3450800
I0428 19:45:25.290721 25799 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:25.290729 25799 net.cpp:86] Creating Layer pool1
I0428 19:45:25.290740 25799 net.cpp:408] pool1 <- conv1
I0428 19:45:25.290747 25799 net.cpp:382] pool1 -> pool1
I0428 19:45:25.290793 25799 net.cpp:124] Setting up pool1
I0428 19:45:25.290802 25799 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:25.290807 25799 net.cpp:139] Memory required for data: 4090800
I0428 19:45:25.290809 25799 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:25.290818 25799 net.cpp:86] Creating Layer ip1
I0428 19:45:25.290825 25799 net.cpp:408] ip1 <- pool1
I0428 19:45:25.290832 25799 net.cpp:382] ip1 -> ip1
I0428 19:45:25.291057 25799 net.cpp:124] Setting up ip1
I0428 19:45:25.291066 25799 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:25.291070 25799 net.cpp:139] Memory required for data: 4094800
I0428 19:45:25.291079 25799 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:25.291085 25799 net.cpp:86] Creating Layer relu1
I0428 19:45:25.291088 25799 net.cpp:408] relu1 <- ip1
I0428 19:45:25.291093 25799 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:25.291292 25799 net.cpp:124] Setting up relu1
I0428 19:45:25.291307 25799 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:25.291311 25799 net.cpp:139] Memory required for data: 4098800
I0428 19:45:25.291316 25799 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:25.291323 25799 net.cpp:86] Creating Layer ip2
I0428 19:45:25.291327 25799 net.cpp:408] ip2 <- ip1
I0428 19:45:25.291342 25799 net.cpp:382] ip2 -> ip2
I0428 19:45:25.291462 25799 net.cpp:124] Setting up ip2
I0428 19:45:25.291471 25799 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:25.291476 25799 net.cpp:139] Memory required for data: 4102800
I0428 19:45:25.291481 25799 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:25.291486 25799 net.cpp:86] Creating Layer relu2
I0428 19:45:25.291491 25799 net.cpp:408] relu2 <- ip2
I0428 19:45:25.291496 25799 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:25.291750 25799 net.cpp:124] Setting up relu2
I0428 19:45:25.291760 25799 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:25.291764 25799 net.cpp:139] Memory required for data: 4106800
I0428 19:45:25.291769 25799 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:45:25.291774 25799 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:45:25.291777 25799 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:45:25.291785 25799 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:45:25.291802 25799 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:45:25.291853 25799 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:45:25.291860 25799 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:25.291864 25799 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:25.291868 25799 net.cpp:139] Memory required for data: 4114800
I0428 19:45:25.291872 25799 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:25.291877 25799 net.cpp:86] Creating Layer accuracy
I0428 19:45:25.291882 25799 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:45:25.291887 25799 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:25.291891 25799 net.cpp:382] accuracy -> accuracy
I0428 19:45:25.291899 25799 net.cpp:124] Setting up accuracy
I0428 19:45:25.291903 25799 net.cpp:131] Top shape: (1)
I0428 19:45:25.291908 25799 net.cpp:139] Memory required for data: 4114804
I0428 19:45:25.291910 25799 layer_factory.hpp:77] Creating layer loss
I0428 19:45:25.291918 25799 net.cpp:86] Creating Layer loss
I0428 19:45:25.291923 25799 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:45:25.291927 25799 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:25.291931 25799 net.cpp:382] loss -> loss
I0428 19:45:25.291939 25799 layer_factory.hpp:77] Creating layer loss
I0428 19:45:25.292228 25799 net.cpp:124] Setting up loss
I0428 19:45:25.292240 25799 net.cpp:131] Top shape: (1)
I0428 19:45:25.292244 25799 net.cpp:134]     with loss weight 1
I0428 19:45:25.292253 25799 net.cpp:139] Memory required for data: 4114808
I0428 19:45:25.292256 25799 net.cpp:200] loss needs backward computation.
I0428 19:45:25.292260 25799 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:25.292264 25799 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:45:25.292268 25799 net.cpp:200] relu2 needs backward computation.
I0428 19:45:25.292273 25799 net.cpp:200] ip2 needs backward computation.
I0428 19:45:25.292276 25799 net.cpp:200] relu1 needs backward computation.
I0428 19:45:25.292279 25799 net.cpp:200] ip1 needs backward computation.
I0428 19:45:25.292282 25799 net.cpp:200] pool1 needs backward computation.
I0428 19:45:25.292286 25799 net.cpp:200] conv1 needs backward computation.
I0428 19:45:25.292291 25799 net.cpp:200] pool0 needs backward computation.
I0428 19:45:25.292295 25799 net.cpp:200] conv0 needs backward computation.
I0428 19:45:25.292299 25799 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:25.292304 25799 net.cpp:202] mnist does not need backward computation.
I0428 19:45:25.292307 25799 net.cpp:244] This network produces output accuracy
I0428 19:45:25.292311 25799 net.cpp:244] This network produces output loss
I0428 19:45:25.292325 25799 net.cpp:257] Network initialization done.
I0428 19:45:25.292368 25799 solver.cpp:56] Solver scaffolding done.
I0428 19:45:25.292706 25799 caffe.cpp:248] Starting Optimization
I0428 19:45:25.292712 25799 solver.cpp:273] Solving LeNet
I0428 19:45:25.292716 25799 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:25.292924 25799 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:25.298226 25799 blocking_queue.cpp:49] Waiting for data
I0428 19:45:25.372056 25806 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:25.372848 25799 solver.cpp:398]     Test net output #0: accuracy = 0.0607
I0428 19:45:25.372884 25799 solver.cpp:398]     Test net output #1: loss = 2.34958 (* 1 = 2.34958 loss)
I0428 19:45:25.377979 25799 solver.cpp:219] Iteration 0 (-1.00951e-30 iter/s, 0.0852255s/100 iters), loss = 2.33547
I0428 19:45:25.378024 25799 solver.cpp:238]     Train net output #0: loss = 2.33547 (* 1 = 2.33547 loss)
I0428 19:45:25.378043 25799 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:25.541425 25799 solver.cpp:219] Iteration 100 (612.081 iter/s, 0.163377s/100 iters), loss = 0.816303
I0428 19:45:25.541471 25799 solver.cpp:238]     Train net output #0: loss = 0.816303 (* 1 = 0.816303 loss)
I0428 19:45:25.541481 25799 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:25.699268 25799 solver.cpp:219] Iteration 200 (633.777 iter/s, 0.157784s/100 iters), loss = 0.463555
I0428 19:45:25.699327 25799 solver.cpp:238]     Train net output #0: loss = 0.463555 (* 1 = 0.463555 loss)
I0428 19:45:25.699337 25799 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:25.857062 25799 solver.cpp:219] Iteration 300 (634.033 iter/s, 0.157721s/100 iters), loss = 0.553453
I0428 19:45:25.857108 25799 solver.cpp:238]     Train net output #0: loss = 0.553453 (* 1 = 0.553453 loss)
I0428 19:45:25.857120 25799 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:26.017319 25799 solver.cpp:219] Iteration 400 (624.221 iter/s, 0.1602s/100 iters), loss = 0.334544
I0428 19:45:26.017365 25799 solver.cpp:238]     Train net output #0: loss = 0.334544 (* 1 = 0.334544 loss)
I0428 19:45:26.017374 25799 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:26.161193 25799 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:26.237721 25806 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:26.238328 25799 solver.cpp:398]     Test net output #0: accuracy = 0.8669
I0428 19:45:26.238368 25799 solver.cpp:398]     Test net output #1: loss = 0.36789 (* 1 = 0.36789 loss)
I0428 19:45:26.239856 25799 solver.cpp:219] Iteration 500 (449.488 iter/s, 0.222475s/100 iters), loss = 0.366094
I0428 19:45:26.239892 25799 solver.cpp:238]     Train net output #0: loss = 0.366094 (* 1 = 0.366094 loss)
I0428 19:45:26.239900 25799 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:26.384053 25799 solver.cpp:219] Iteration 600 (693.726 iter/s, 0.144149s/100 iters), loss = 0.430692
I0428 19:45:26.384088 25799 solver.cpp:238]     Train net output #0: loss = 0.430692 (* 1 = 0.430692 loss)
I0428 19:45:26.384096 25799 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:26.533725 25799 solver.cpp:219] Iteration 700 (668.347 iter/s, 0.149623s/100 iters), loss = 0.394102
I0428 19:45:26.533756 25799 solver.cpp:238]     Train net output #0: loss = 0.394102 (* 1 = 0.394102 loss)
I0428 19:45:26.533766 25799 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:26.681028 25799 solver.cpp:219] Iteration 800 (679.078 iter/s, 0.147258s/100 iters), loss = 0.58546
I0428 19:45:26.681072 25799 solver.cpp:238]     Train net output #0: loss = 0.58546 (* 1 = 0.58546 loss)
I0428 19:45:26.681080 25799 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:26.828285 25799 solver.cpp:219] Iteration 900 (679.286 iter/s, 0.147213s/100 iters), loss = 0.49661
I0428 19:45:26.828330 25799 solver.cpp:238]     Train net output #0: loss = 0.49661 (* 1 = 0.49661 loss)
I0428 19:45:26.828337 25799 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:26.876893 25805 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:26.973055 25799 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:26.974639 25799 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:26.975507 25799 solver.cpp:311] Iteration 1000, loss = 0.392687
I0428 19:45:26.975539 25799 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:27.052122 25806 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:27.052831 25799 solver.cpp:398]     Test net output #0: accuracy = 0.8759
I0428 19:45:27.052865 25799 solver.cpp:398]     Test net output #1: loss = 0.33203 (* 1 = 0.33203 loss)
I0428 19:45:27.052875 25799 solver.cpp:316] Optimization Done.
I0428 19:45:27.052881 25799 caffe.cpp:259] Optimization Done.
