I0428 20:13:03.587683 32394 caffe.cpp:218] Using GPUs 0
I0428 20:13:03.617058 32394 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:04.074700 32394 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1192.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:04.074831 32394 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1192.prototxt
I0428 20:13:04.075170 32394 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:04.075198 32394 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:04.075274 32394 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:04.075335 32394 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:04.075418 32394 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:04.075439 32394 net.cpp:86] Creating Layer mnist
I0428 20:13:04.075446 32394 net.cpp:382] mnist -> data
I0428 20:13:04.075466 32394 net.cpp:382] mnist -> label
I0428 20:13:04.076395 32394 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:04.078526 32394 net.cpp:124] Setting up mnist
I0428 20:13:04.078541 32394 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:04.078546 32394 net.cpp:131] Top shape: 64 (64)
I0428 20:13:04.078548 32394 net.cpp:139] Memory required for data: 200960
I0428 20:13:04.078554 32394 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:04.078567 32394 net.cpp:86] Creating Layer conv0
I0428 20:13:04.078583 32394 net.cpp:408] conv0 <- data
I0428 20:13:04.078611 32394 net.cpp:382] conv0 -> conv0
I0428 20:13:04.310937 32394 net.cpp:124] Setting up conv0
I0428 20:13:04.310963 32394 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:04.310966 32394 net.cpp:139] Memory required for data: 3887360
I0428 20:13:04.310981 32394 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:04.310992 32394 net.cpp:86] Creating Layer pool0
I0428 20:13:04.310997 32394 net.cpp:408] pool0 <- conv0
I0428 20:13:04.311002 32394 net.cpp:382] pool0 -> pool0
I0428 20:13:04.311043 32394 net.cpp:124] Setting up pool0
I0428 20:13:04.311065 32394 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:04.311069 32394 net.cpp:139] Memory required for data: 4808960
I0428 20:13:04.311086 32394 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:04.311111 32394 net.cpp:86] Creating Layer conv1
I0428 20:13:04.311115 32394 net.cpp:408] conv1 <- pool0
I0428 20:13:04.311120 32394 net.cpp:382] conv1 -> conv1
I0428 20:13:04.313391 32394 net.cpp:124] Setting up conv1
I0428 20:13:04.313421 32394 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:04.313424 32394 net.cpp:139] Memory required for data: 6447360
I0428 20:13:04.313433 32394 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:04.313441 32394 net.cpp:86] Creating Layer pool1
I0428 20:13:04.313446 32394 net.cpp:408] pool1 <- conv1
I0428 20:13:04.313450 32394 net.cpp:382] pool1 -> pool1
I0428 20:13:04.313499 32394 net.cpp:124] Setting up pool1
I0428 20:13:04.313506 32394 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:04.313509 32394 net.cpp:139] Memory required for data: 6856960
I0428 20:13:04.313513 32394 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:04.313520 32394 net.cpp:86] Creating Layer ip1
I0428 20:13:04.313524 32394 net.cpp:408] ip1 <- pool1
I0428 20:13:04.313527 32394 net.cpp:382] ip1 -> ip1
I0428 20:13:04.313863 32394 net.cpp:124] Setting up ip1
I0428 20:13:04.313869 32394 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:04.313887 32394 net.cpp:139] Memory required for data: 6863360
I0428 20:13:04.313894 32394 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:04.313899 32394 net.cpp:86] Creating Layer relu1
I0428 20:13:04.313902 32394 net.cpp:408] relu1 <- ip1
I0428 20:13:04.313906 32394 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:04.314060 32394 net.cpp:124] Setting up relu1
I0428 20:13:04.314069 32394 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:13:04.314071 32394 net.cpp:139] Memory required for data: 6869760
I0428 20:13:04.314074 32394 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:04.314080 32394 net.cpp:86] Creating Layer ip2
I0428 20:13:04.314083 32394 net.cpp:408] ip2 <- ip1
I0428 20:13:04.314088 32394 net.cpp:382] ip2 -> ip2
I0428 20:13:04.314177 32394 net.cpp:124] Setting up ip2
I0428 20:13:04.314182 32394 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:04.314185 32394 net.cpp:139] Memory required for data: 6872320
I0428 20:13:04.314190 32394 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:04.314196 32394 net.cpp:86] Creating Layer relu2
I0428 20:13:04.314199 32394 net.cpp:408] relu2 <- ip2
I0428 20:13:04.314203 32394 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:04.314939 32394 net.cpp:124] Setting up relu2
I0428 20:13:04.314950 32394 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:04.314968 32394 net.cpp:139] Memory required for data: 6874880
I0428 20:13:04.314972 32394 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:04.314978 32394 net.cpp:86] Creating Layer ip3
I0428 20:13:04.314981 32394 net.cpp:408] ip3 <- ip2
I0428 20:13:04.314986 32394 net.cpp:382] ip3 -> ip3
I0428 20:13:04.315075 32394 net.cpp:124] Setting up ip3
I0428 20:13:04.315083 32394 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:04.315085 32394 net.cpp:139] Memory required for data: 6877440
I0428 20:13:04.315093 32394 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:04.315098 32394 net.cpp:86] Creating Layer relu3
I0428 20:13:04.315100 32394 net.cpp:408] relu3 <- ip3
I0428 20:13:04.315105 32394 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:04.315277 32394 net.cpp:124] Setting up relu3
I0428 20:13:04.315286 32394 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:04.315289 32394 net.cpp:139] Memory required for data: 6880000
I0428 20:13:04.315292 32394 layer_factory.hpp:77] Creating layer loss
I0428 20:13:04.315299 32394 net.cpp:86] Creating Layer loss
I0428 20:13:04.315301 32394 net.cpp:408] loss <- ip3
I0428 20:13:04.315305 32394 net.cpp:408] loss <- label
I0428 20:13:04.315311 32394 net.cpp:382] loss -> loss
I0428 20:13:04.315328 32394 layer_factory.hpp:77] Creating layer loss
I0428 20:13:04.315568 32394 net.cpp:124] Setting up loss
I0428 20:13:04.315577 32394 net.cpp:131] Top shape: (1)
I0428 20:13:04.315580 32394 net.cpp:134]     with loss weight 1
I0428 20:13:04.315595 32394 net.cpp:139] Memory required for data: 6880004
I0428 20:13:04.315598 32394 net.cpp:200] loss needs backward computation.
I0428 20:13:04.315618 32394 net.cpp:200] relu3 needs backward computation.
I0428 20:13:04.315620 32394 net.cpp:200] ip3 needs backward computation.
I0428 20:13:04.315623 32394 net.cpp:200] relu2 needs backward computation.
I0428 20:13:04.315626 32394 net.cpp:200] ip2 needs backward computation.
I0428 20:13:04.315629 32394 net.cpp:200] relu1 needs backward computation.
I0428 20:13:04.315631 32394 net.cpp:200] ip1 needs backward computation.
I0428 20:13:04.315634 32394 net.cpp:200] pool1 needs backward computation.
I0428 20:13:04.315637 32394 net.cpp:200] conv1 needs backward computation.
I0428 20:13:04.315640 32394 net.cpp:200] pool0 needs backward computation.
I0428 20:13:04.315644 32394 net.cpp:200] conv0 needs backward computation.
I0428 20:13:04.315647 32394 net.cpp:202] mnist does not need backward computation.
I0428 20:13:04.315649 32394 net.cpp:244] This network produces output loss
I0428 20:13:04.315659 32394 net.cpp:257] Network initialization done.
I0428 20:13:04.316018 32394 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1192.prototxt
I0428 20:13:04.316061 32394 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:04.316184 32394 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:04.316258 32394 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:04.316301 32394 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:04.316331 32394 net.cpp:86] Creating Layer mnist
I0428 20:13:04.316336 32394 net.cpp:382] mnist -> data
I0428 20:13:04.316344 32394 net.cpp:382] mnist -> label
I0428 20:13:04.316423 32394 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:04.318428 32394 net.cpp:124] Setting up mnist
I0428 20:13:04.318456 32394 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:04.318462 32394 net.cpp:131] Top shape: 100 (100)
I0428 20:13:04.318465 32394 net.cpp:139] Memory required for data: 314000
I0428 20:13:04.318469 32394 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:04.318475 32394 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:04.318478 32394 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:04.318482 32394 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:04.318490 32394 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:04.318581 32394 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:04.318588 32394 net.cpp:131] Top shape: 100 (100)
I0428 20:13:04.318593 32394 net.cpp:131] Top shape: 100 (100)
I0428 20:13:04.318595 32394 net.cpp:139] Memory required for data: 314800
I0428 20:13:04.318598 32394 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:04.318606 32394 net.cpp:86] Creating Layer conv0
I0428 20:13:04.318609 32394 net.cpp:408] conv0 <- data
I0428 20:13:04.318614 32394 net.cpp:382] conv0 -> conv0
I0428 20:13:04.320245 32394 net.cpp:124] Setting up conv0
I0428 20:13:04.320258 32394 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:04.320262 32394 net.cpp:139] Memory required for data: 6074800
I0428 20:13:04.320271 32394 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:04.320276 32394 net.cpp:86] Creating Layer pool0
I0428 20:13:04.320279 32394 net.cpp:408] pool0 <- conv0
I0428 20:13:04.320284 32394 net.cpp:382] pool0 -> pool0
I0428 20:13:04.320332 32394 net.cpp:124] Setting up pool0
I0428 20:13:04.320338 32394 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:04.320340 32394 net.cpp:139] Memory required for data: 7514800
I0428 20:13:04.320343 32394 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:04.320351 32394 net.cpp:86] Creating Layer conv1
I0428 20:13:04.320356 32394 net.cpp:408] conv1 <- pool0
I0428 20:13:04.320375 32394 net.cpp:382] conv1 -> conv1
I0428 20:13:04.322314 32394 net.cpp:124] Setting up conv1
I0428 20:13:04.322343 32394 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:04.322347 32394 net.cpp:139] Memory required for data: 10074800
I0428 20:13:04.322355 32394 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:04.322365 32394 net.cpp:86] Creating Layer pool1
I0428 20:13:04.322371 32394 net.cpp:408] pool1 <- conv1
I0428 20:13:04.322379 32394 net.cpp:382] pool1 -> pool1
I0428 20:13:04.322414 32394 net.cpp:124] Setting up pool1
I0428 20:13:04.322422 32394 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:04.322425 32394 net.cpp:139] Memory required for data: 10714800
I0428 20:13:04.322428 32394 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:04.322434 32394 net.cpp:86] Creating Layer ip1
I0428 20:13:04.322438 32394 net.cpp:408] ip1 <- pool1
I0428 20:13:04.322443 32394 net.cpp:382] ip1 -> ip1
I0428 20:13:04.322818 32394 net.cpp:124] Setting up ip1
I0428 20:13:04.322826 32394 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:04.322855 32394 net.cpp:139] Memory required for data: 10724800
I0428 20:13:04.322865 32394 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:04.322870 32394 net.cpp:86] Creating Layer relu1
I0428 20:13:04.322873 32394 net.cpp:408] relu1 <- ip1
I0428 20:13:04.322877 32394 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:04.323096 32394 net.cpp:124] Setting up relu1
I0428 20:13:04.323107 32394 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:13:04.323110 32394 net.cpp:139] Memory required for data: 10734800
I0428 20:13:04.323113 32394 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:04.323120 32394 net.cpp:86] Creating Layer ip2
I0428 20:13:04.323127 32394 net.cpp:408] ip2 <- ip1
I0428 20:13:04.323146 32394 net.cpp:382] ip2 -> ip2
I0428 20:13:04.323249 32394 net.cpp:124] Setting up ip2
I0428 20:13:04.323256 32394 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:04.323261 32394 net.cpp:139] Memory required for data: 10738800
I0428 20:13:04.323266 32394 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:04.323271 32394 net.cpp:86] Creating Layer relu2
I0428 20:13:04.323274 32394 net.cpp:408] relu2 <- ip2
I0428 20:13:04.323279 32394 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:04.323446 32394 net.cpp:124] Setting up relu2
I0428 20:13:04.323468 32394 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:04.323472 32394 net.cpp:139] Memory required for data: 10742800
I0428 20:13:04.323477 32394 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:04.323490 32394 net.cpp:86] Creating Layer ip3
I0428 20:13:04.323509 32394 net.cpp:408] ip3 <- ip2
I0428 20:13:04.323515 32394 net.cpp:382] ip3 -> ip3
I0428 20:13:04.323611 32394 net.cpp:124] Setting up ip3
I0428 20:13:04.323618 32394 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:04.323622 32394 net.cpp:139] Memory required for data: 10746800
I0428 20:13:04.323631 32394 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:04.323652 32394 net.cpp:86] Creating Layer relu3
I0428 20:13:04.323655 32394 net.cpp:408] relu3 <- ip3
I0428 20:13:04.323676 32394 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:04.324512 32394 net.cpp:124] Setting up relu3
I0428 20:13:04.324523 32394 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:04.324542 32394 net.cpp:139] Memory required for data: 10750800
I0428 20:13:04.324544 32394 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:04.324549 32394 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:04.324553 32394 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:04.324559 32394 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:04.324565 32394 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:04.324601 32394 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:04.324607 32394 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:04.324611 32394 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:04.324614 32394 net.cpp:139] Memory required for data: 10758800
I0428 20:13:04.324616 32394 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:04.324625 32394 net.cpp:86] Creating Layer accuracy
I0428 20:13:04.324632 32394 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:04.324636 32394 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:04.324656 32394 net.cpp:382] accuracy -> accuracy
I0428 20:13:04.324662 32394 net.cpp:124] Setting up accuracy
I0428 20:13:04.324666 32394 net.cpp:131] Top shape: (1)
I0428 20:13:04.324669 32394 net.cpp:139] Memory required for data: 10758804
I0428 20:13:04.324672 32394 layer_factory.hpp:77] Creating layer loss
I0428 20:13:04.324676 32394 net.cpp:86] Creating Layer loss
I0428 20:13:04.324679 32394 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:04.324683 32394 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:04.324687 32394 net.cpp:382] loss -> loss
I0428 20:13:04.324692 32394 layer_factory.hpp:77] Creating layer loss
I0428 20:13:04.324991 32394 net.cpp:124] Setting up loss
I0428 20:13:04.325017 32394 net.cpp:131] Top shape: (1)
I0428 20:13:04.325037 32394 net.cpp:134]     with loss weight 1
I0428 20:13:04.325072 32394 net.cpp:139] Memory required for data: 10758808
I0428 20:13:04.325075 32394 net.cpp:200] loss needs backward computation.
I0428 20:13:04.325079 32394 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:04.325095 32394 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:04.325099 32394 net.cpp:200] relu3 needs backward computation.
I0428 20:13:04.325103 32394 net.cpp:200] ip3 needs backward computation.
I0428 20:13:04.325106 32394 net.cpp:200] relu2 needs backward computation.
I0428 20:13:04.325109 32394 net.cpp:200] ip2 needs backward computation.
I0428 20:13:04.325112 32394 net.cpp:200] relu1 needs backward computation.
I0428 20:13:04.325114 32394 net.cpp:200] ip1 needs backward computation.
I0428 20:13:04.325119 32394 net.cpp:200] pool1 needs backward computation.
I0428 20:13:04.325122 32394 net.cpp:200] conv1 needs backward computation.
I0428 20:13:04.325126 32394 net.cpp:200] pool0 needs backward computation.
I0428 20:13:04.325129 32394 net.cpp:200] conv0 needs backward computation.
I0428 20:13:04.325152 32394 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:04.325155 32394 net.cpp:202] mnist does not need backward computation.
I0428 20:13:04.325168 32394 net.cpp:244] This network produces output accuracy
I0428 20:13:04.325172 32394 net.cpp:244] This network produces output loss
I0428 20:13:04.325182 32394 net.cpp:257] Network initialization done.
I0428 20:13:04.325223 32394 solver.cpp:56] Solver scaffolding done.
I0428 20:13:04.325582 32394 caffe.cpp:248] Starting Optimization
I0428 20:13:04.325587 32394 solver.cpp:273] Solving LeNet
I0428 20:13:04.325590 32394 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:04.326580 32394 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:04.333698 32394 blocking_queue.cpp:49] Waiting for data
I0428 20:13:04.405035 32401 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:04.405863 32394 solver.cpp:398]     Test net output #0: accuracy = 0.0883
I0428 20:13:04.405897 32394 solver.cpp:398]     Test net output #1: loss = 2.30409 (* 1 = 2.30409 loss)
I0428 20:13:04.410967 32394 solver.cpp:219] Iteration 0 (0 iter/s, 0.0853432s/100 iters), loss = 2.31461
I0428 20:13:04.411006 32394 solver.cpp:238]     Train net output #0: loss = 2.31461 (* 1 = 2.31461 loss)
I0428 20:13:04.411016 32394 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:04.573850 32394 solver.cpp:219] Iteration 100 (614.136 iter/s, 0.16283s/100 iters), loss = 0.459902
I0428 20:13:04.573878 32394 solver.cpp:238]     Train net output #0: loss = 0.459902 (* 1 = 0.459902 loss)
I0428 20:13:04.573884 32394 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:04.735119 32394 solver.cpp:219] Iteration 200 (620.233 iter/s, 0.16123s/100 iters), loss = 0.225199
I0428 20:13:04.735143 32394 solver.cpp:238]     Train net output #0: loss = 0.225199 (* 1 = 0.225199 loss)
I0428 20:13:04.735149 32394 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:04.897338 32394 solver.cpp:219] Iteration 300 (616.591 iter/s, 0.162182s/100 iters), loss = 0.216556
I0428 20:13:04.897364 32394 solver.cpp:238]     Train net output #0: loss = 0.216556 (* 1 = 0.216556 loss)
I0428 20:13:04.897370 32394 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:05.057770 32394 solver.cpp:219] Iteration 400 (623.472 iter/s, 0.160392s/100 iters), loss = 0.105361
I0428 20:13:05.057807 32394 solver.cpp:238]     Train net output #0: loss = 0.105361 (* 1 = 0.105361 loss)
I0428 20:13:05.057813 32394 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:05.221190 32394 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:05.288806 32401 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:05.291198 32394 solver.cpp:398]     Test net output #0: accuracy = 0.9651
I0428 20:13:05.291219 32394 solver.cpp:398]     Test net output #1: loss = 0.117292 (* 1 = 0.117292 loss)
I0428 20:13:05.292696 32394 solver.cpp:219] Iteration 500 (425.742 iter/s, 0.234884s/100 iters), loss = 0.129326
I0428 20:13:05.292764 32394 solver.cpp:238]     Train net output #0: loss = 0.129326 (* 1 = 0.129326 loss)
I0428 20:13:05.292771 32394 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:05.460144 32394 solver.cpp:219] Iteration 600 (597.436 iter/s, 0.167382s/100 iters), loss = 0.079092
I0428 20:13:05.460186 32394 solver.cpp:238]     Train net output #0: loss = 0.079092 (* 1 = 0.079092 loss)
I0428 20:13:05.460193 32394 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:05.630926 32394 solver.cpp:219] Iteration 700 (585.676 iter/s, 0.170743s/100 iters), loss = 0.142176
I0428 20:13:05.630969 32394 solver.cpp:238]     Train net output #0: loss = 0.142176 (* 1 = 0.142176 loss)
I0428 20:13:05.630975 32394 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:05.821974 32394 solver.cpp:219] Iteration 800 (523.556 iter/s, 0.191002s/100 iters), loss = 0.145698
I0428 20:13:05.822017 32394 solver.cpp:238]     Train net output #0: loss = 0.145698 (* 1 = 0.145698 loss)
I0428 20:13:05.822028 32394 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:06.038228 32394 solver.cpp:219] Iteration 900 (462.547 iter/s, 0.216194s/100 iters), loss = 0.0994852
I0428 20:13:06.038269 32394 solver.cpp:238]     Train net output #0: loss = 0.0994851 (* 1 = 0.0994851 loss)
I0428 20:13:06.038280 32394 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:06.108638 32400 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:06.250440 32394 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:06.254258 32394 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:06.256259 32394 solver.cpp:311] Iteration 1000, loss = 0.114219
I0428 20:13:06.256284 32394 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:06.330245 32401 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:06.332845 32394 solver.cpp:398]     Test net output #0: accuracy = 0.9734
I0428 20:13:06.332870 32394 solver.cpp:398]     Test net output #1: loss = 0.0858432 (* 1 = 0.0858432 loss)
I0428 20:13:06.332875 32394 solver.cpp:316] Optimization Done.
I0428 20:13:06.332880 32394 caffe.cpp:259] Optimization Done.
