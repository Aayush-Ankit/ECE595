I0428 19:51:33.570099 27310 caffe.cpp:218] Using GPUs 0
I0428 19:51:33.599135 27310 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:34.048624 27310 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test637.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:34.048774 27310 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test637.prototxt
I0428 19:51:34.049252 27310 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:34.049283 27310 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:34.049361 27310 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:34.049423 27310 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:34.049504 27310 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:34.049522 27310 net.cpp:86] Creating Layer mnist
I0428 19:51:34.049528 27310 net.cpp:382] mnist -> data
I0428 19:51:34.049548 27310 net.cpp:382] mnist -> label
I0428 19:51:34.050611 27310 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:34.052829 27310 net.cpp:124] Setting up mnist
I0428 19:51:34.052860 27310 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:34.052868 27310 net.cpp:131] Top shape: 64 (64)
I0428 19:51:34.052871 27310 net.cpp:139] Memory required for data: 200960
I0428 19:51:34.052877 27310 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:34.052891 27310 net.cpp:86] Creating Layer conv0
I0428 19:51:34.052907 27310 net.cpp:408] conv0 <- data
I0428 19:51:34.052919 27310 net.cpp:382] conv0 -> conv0
I0428 19:51:34.281891 27310 net.cpp:124] Setting up conv0
I0428 19:51:34.281934 27310 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:34.281937 27310 net.cpp:139] Memory required for data: 938240
I0428 19:51:34.281954 27310 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:34.281965 27310 net.cpp:86] Creating Layer pool0
I0428 19:51:34.281970 27310 net.cpp:408] pool0 <- conv0
I0428 19:51:34.281975 27310 net.cpp:382] pool0 -> pool0
I0428 19:51:34.282035 27310 net.cpp:124] Setting up pool0
I0428 19:51:34.282042 27310 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:34.282044 27310 net.cpp:139] Memory required for data: 1122560
I0428 19:51:34.282047 27310 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:34.282058 27310 net.cpp:86] Creating Layer conv1
I0428 19:51:34.282063 27310 net.cpp:408] conv1 <- pool0
I0428 19:51:34.282068 27310 net.cpp:382] conv1 -> conv1
I0428 19:51:34.284834 27310 net.cpp:124] Setting up conv1
I0428 19:51:34.284865 27310 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:34.284871 27310 net.cpp:139] Memory required for data: 1532160
I0428 19:51:34.284898 27310 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:34.284905 27310 net.cpp:86] Creating Layer pool1
I0428 19:51:34.284909 27310 net.cpp:408] pool1 <- conv1
I0428 19:51:34.284914 27310 net.cpp:382] pool1 -> pool1
I0428 19:51:34.284955 27310 net.cpp:124] Setting up pool1
I0428 19:51:34.284971 27310 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:34.284976 27310 net.cpp:139] Memory required for data: 1634560
I0428 19:51:34.284978 27310 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:34.284986 27310 net.cpp:86] Creating Layer ip1
I0428 19:51:34.284989 27310 net.cpp:408] ip1 <- pool1
I0428 19:51:34.284996 27310 net.cpp:382] ip1 -> ip1
I0428 19:51:34.285120 27310 net.cpp:124] Setting up ip1
I0428 19:51:34.285127 27310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:34.285131 27310 net.cpp:139] Memory required for data: 1637120
I0428 19:51:34.285138 27310 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:34.285145 27310 net.cpp:86] Creating Layer relu1
I0428 19:51:34.285148 27310 net.cpp:408] relu1 <- ip1
I0428 19:51:34.285153 27310 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:34.285347 27310 net.cpp:124] Setting up relu1
I0428 19:51:34.285356 27310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:34.285359 27310 net.cpp:139] Memory required for data: 1639680
I0428 19:51:34.285362 27310 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:34.285383 27310 net.cpp:86] Creating Layer ip2
I0428 19:51:34.285387 27310 net.cpp:408] ip2 <- ip1
I0428 19:51:34.285392 27310 net.cpp:382] ip2 -> ip2
I0428 19:51:34.285480 27310 net.cpp:124] Setting up ip2
I0428 19:51:34.285486 27310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:34.285490 27310 net.cpp:139] Memory required for data: 1642240
I0428 19:51:34.285495 27310 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:34.285501 27310 net.cpp:86] Creating Layer relu2
I0428 19:51:34.285503 27310 net.cpp:408] relu2 <- ip2
I0428 19:51:34.285507 27310 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:34.286228 27310 net.cpp:124] Setting up relu2
I0428 19:51:34.286255 27310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:34.286258 27310 net.cpp:139] Memory required for data: 1644800
I0428 19:51:34.286262 27310 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:34.286270 27310 net.cpp:86] Creating Layer ip3
I0428 19:51:34.286273 27310 net.cpp:408] ip3 <- ip2
I0428 19:51:34.286278 27310 net.cpp:382] ip3 -> ip3
I0428 19:51:34.286387 27310 net.cpp:124] Setting up ip3
I0428 19:51:34.286396 27310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:34.286398 27310 net.cpp:139] Memory required for data: 1647360
I0428 19:51:34.286406 27310 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:34.286412 27310 net.cpp:86] Creating Layer relu3
I0428 19:51:34.286415 27310 net.cpp:408] relu3 <- ip3
I0428 19:51:34.286419 27310 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:34.286582 27310 net.cpp:124] Setting up relu3
I0428 19:51:34.286592 27310 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:34.286594 27310 net.cpp:139] Memory required for data: 1649920
I0428 19:51:34.286597 27310 layer_factory.hpp:77] Creating layer loss
I0428 19:51:34.286603 27310 net.cpp:86] Creating Layer loss
I0428 19:51:34.286607 27310 net.cpp:408] loss <- ip3
I0428 19:51:34.286610 27310 net.cpp:408] loss <- label
I0428 19:51:34.286615 27310 net.cpp:382] loss -> loss
I0428 19:51:34.286633 27310 layer_factory.hpp:77] Creating layer loss
I0428 19:51:34.286864 27310 net.cpp:124] Setting up loss
I0428 19:51:34.286873 27310 net.cpp:131] Top shape: (1)
I0428 19:51:34.286876 27310 net.cpp:134]     with loss weight 1
I0428 19:51:34.286890 27310 net.cpp:139] Memory required for data: 1649924
I0428 19:51:34.286893 27310 net.cpp:200] loss needs backward computation.
I0428 19:51:34.286896 27310 net.cpp:200] relu3 needs backward computation.
I0428 19:51:34.286900 27310 net.cpp:200] ip3 needs backward computation.
I0428 19:51:34.286902 27310 net.cpp:200] relu2 needs backward computation.
I0428 19:51:34.286906 27310 net.cpp:200] ip2 needs backward computation.
I0428 19:51:34.286907 27310 net.cpp:200] relu1 needs backward computation.
I0428 19:51:34.286911 27310 net.cpp:200] ip1 needs backward computation.
I0428 19:51:34.286913 27310 net.cpp:200] pool1 needs backward computation.
I0428 19:51:34.286916 27310 net.cpp:200] conv1 needs backward computation.
I0428 19:51:34.286919 27310 net.cpp:200] pool0 needs backward computation.
I0428 19:51:34.286922 27310 net.cpp:200] conv0 needs backward computation.
I0428 19:51:34.286926 27310 net.cpp:202] mnist does not need backward computation.
I0428 19:51:34.286928 27310 net.cpp:244] This network produces output loss
I0428 19:51:34.286937 27310 net.cpp:257] Network initialization done.
I0428 19:51:34.287298 27310 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test637.prototxt
I0428 19:51:34.287327 27310 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:34.287433 27310 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:34.287510 27310 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:34.287554 27310 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:34.287567 27310 net.cpp:86] Creating Layer mnist
I0428 19:51:34.287572 27310 net.cpp:382] mnist -> data
I0428 19:51:34.287580 27310 net.cpp:382] mnist -> label
I0428 19:51:34.287663 27310 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:34.289965 27310 net.cpp:124] Setting up mnist
I0428 19:51:34.289990 27310 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:34.289996 27310 net.cpp:131] Top shape: 100 (100)
I0428 19:51:34.289999 27310 net.cpp:139] Memory required for data: 314000
I0428 19:51:34.290004 27310 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:34.290040 27310 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:34.290045 27310 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:34.290050 27310 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:34.290055 27310 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:34.290104 27310 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:34.290112 27310 net.cpp:131] Top shape: 100 (100)
I0428 19:51:34.290117 27310 net.cpp:131] Top shape: 100 (100)
I0428 19:51:34.290119 27310 net.cpp:139] Memory required for data: 314800
I0428 19:51:34.290122 27310 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:34.290132 27310 net.cpp:86] Creating Layer conv0
I0428 19:51:34.290134 27310 net.cpp:408] conv0 <- data
I0428 19:51:34.290139 27310 net.cpp:382] conv0 -> conv0
I0428 19:51:34.291939 27310 net.cpp:124] Setting up conv0
I0428 19:51:34.291952 27310 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:34.291956 27310 net.cpp:139] Memory required for data: 1466800
I0428 19:51:34.291966 27310 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:34.291972 27310 net.cpp:86] Creating Layer pool0
I0428 19:51:34.291976 27310 net.cpp:408] pool0 <- conv0
I0428 19:51:34.291981 27310 net.cpp:382] pool0 -> pool0
I0428 19:51:34.292017 27310 net.cpp:124] Setting up pool0
I0428 19:51:34.292038 27310 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:34.292042 27310 net.cpp:139] Memory required for data: 1754800
I0428 19:51:34.292045 27310 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:34.292053 27310 net.cpp:86] Creating Layer conv1
I0428 19:51:34.292057 27310 net.cpp:408] conv1 <- pool0
I0428 19:51:34.292062 27310 net.cpp:382] conv1 -> conv1
I0428 19:51:34.294283 27310 net.cpp:124] Setting up conv1
I0428 19:51:34.294296 27310 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:34.294301 27310 net.cpp:139] Memory required for data: 2394800
I0428 19:51:34.294333 27310 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:34.294340 27310 net.cpp:86] Creating Layer pool1
I0428 19:51:34.294344 27310 net.cpp:408] pool1 <- conv1
I0428 19:51:34.294349 27310 net.cpp:382] pool1 -> pool1
I0428 19:51:34.294389 27310 net.cpp:124] Setting up pool1
I0428 19:51:34.294394 27310 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:34.294409 27310 net.cpp:139] Memory required for data: 2554800
I0428 19:51:34.294411 27310 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:34.294417 27310 net.cpp:86] Creating Layer ip1
I0428 19:51:34.294425 27310 net.cpp:408] ip1 <- pool1
I0428 19:51:34.294430 27310 net.cpp:382] ip1 -> ip1
I0428 19:51:34.294564 27310 net.cpp:124] Setting up ip1
I0428 19:51:34.294572 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.294586 27310 net.cpp:139] Memory required for data: 2558800
I0428 19:51:34.294595 27310 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:34.294600 27310 net.cpp:86] Creating Layer relu1
I0428 19:51:34.294602 27310 net.cpp:408] relu1 <- ip1
I0428 19:51:34.294607 27310 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:34.294868 27310 net.cpp:124] Setting up relu1
I0428 19:51:34.294878 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.294881 27310 net.cpp:139] Memory required for data: 2562800
I0428 19:51:34.294884 27310 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:34.294893 27310 net.cpp:86] Creating Layer ip2
I0428 19:51:34.294895 27310 net.cpp:408] ip2 <- ip1
I0428 19:51:34.294901 27310 net.cpp:382] ip2 -> ip2
I0428 19:51:34.295034 27310 net.cpp:124] Setting up ip2
I0428 19:51:34.295042 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.295050 27310 net.cpp:139] Memory required for data: 2566800
I0428 19:51:34.295056 27310 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:34.295061 27310 net.cpp:86] Creating Layer relu2
I0428 19:51:34.295070 27310 net.cpp:408] relu2 <- ip2
I0428 19:51:34.295074 27310 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:34.295246 27310 net.cpp:124] Setting up relu2
I0428 19:51:34.295254 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.295258 27310 net.cpp:139] Memory required for data: 2570800
I0428 19:51:34.295261 27310 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:34.295266 27310 net.cpp:86] Creating Layer ip3
I0428 19:51:34.295270 27310 net.cpp:408] ip3 <- ip2
I0428 19:51:34.295275 27310 net.cpp:382] ip3 -> ip3
I0428 19:51:34.295390 27310 net.cpp:124] Setting up ip3
I0428 19:51:34.295398 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.295402 27310 net.cpp:139] Memory required for data: 2574800
I0428 19:51:34.295410 27310 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:34.295415 27310 net.cpp:86] Creating Layer relu3
I0428 19:51:34.295418 27310 net.cpp:408] relu3 <- ip3
I0428 19:51:34.295430 27310 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:34.296295 27310 net.cpp:124] Setting up relu3
I0428 19:51:34.296308 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.296311 27310 net.cpp:139] Memory required for data: 2578800
I0428 19:51:34.296314 27310 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:34.296320 27310 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:34.296324 27310 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:34.296329 27310 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:34.296335 27310 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:34.296386 27310 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:34.296392 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.296396 27310 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:34.296398 27310 net.cpp:139] Memory required for data: 2586800
I0428 19:51:34.296401 27310 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:34.296406 27310 net.cpp:86] Creating Layer accuracy
I0428 19:51:34.296411 27310 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:34.296422 27310 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:34.296425 27310 net.cpp:382] accuracy -> accuracy
I0428 19:51:34.296433 27310 net.cpp:124] Setting up accuracy
I0428 19:51:34.296437 27310 net.cpp:131] Top shape: (1)
I0428 19:51:34.296440 27310 net.cpp:139] Memory required for data: 2586804
I0428 19:51:34.296443 27310 layer_factory.hpp:77] Creating layer loss
I0428 19:51:34.296453 27310 net.cpp:86] Creating Layer loss
I0428 19:51:34.296456 27310 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:34.296460 27310 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:34.296465 27310 net.cpp:382] loss -> loss
I0428 19:51:34.296470 27310 layer_factory.hpp:77] Creating layer loss
I0428 19:51:34.296696 27310 net.cpp:124] Setting up loss
I0428 19:51:34.296705 27310 net.cpp:131] Top shape: (1)
I0428 19:51:34.296710 27310 net.cpp:134]     with loss weight 1
I0428 19:51:34.296715 27310 net.cpp:139] Memory required for data: 2586808
I0428 19:51:34.296728 27310 net.cpp:200] loss needs backward computation.
I0428 19:51:34.296732 27310 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:34.296749 27310 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:34.296752 27310 net.cpp:200] relu3 needs backward computation.
I0428 19:51:34.296761 27310 net.cpp:200] ip3 needs backward computation.
I0428 19:51:34.296763 27310 net.cpp:200] relu2 needs backward computation.
I0428 19:51:34.296766 27310 net.cpp:200] ip2 needs backward computation.
I0428 19:51:34.296769 27310 net.cpp:200] relu1 needs backward computation.
I0428 19:51:34.296772 27310 net.cpp:200] ip1 needs backward computation.
I0428 19:51:34.296775 27310 net.cpp:200] pool1 needs backward computation.
I0428 19:51:34.296779 27310 net.cpp:200] conv1 needs backward computation.
I0428 19:51:34.296782 27310 net.cpp:200] pool0 needs backward computation.
I0428 19:51:34.296785 27310 net.cpp:200] conv0 needs backward computation.
I0428 19:51:34.296789 27310 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:34.296793 27310 net.cpp:202] mnist does not need backward computation.
I0428 19:51:34.296795 27310 net.cpp:244] This network produces output accuracy
I0428 19:51:34.296799 27310 net.cpp:244] This network produces output loss
I0428 19:51:34.296815 27310 net.cpp:257] Network initialization done.
I0428 19:51:34.296892 27310 solver.cpp:56] Solver scaffolding done.
I0428 19:51:34.297279 27310 caffe.cpp:248] Starting Optimization
I0428 19:51:34.297286 27310 solver.cpp:273] Solving LeNet
I0428 19:51:34.297289 27310 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:34.297442 27310 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:34.301941 27310 blocking_queue.cpp:49] Waiting for data
I0428 19:51:34.373797 27317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:34.374318 27310 solver.cpp:398]     Test net output #0: accuracy = 0.0789
I0428 19:51:34.374339 27310 solver.cpp:398]     Test net output #1: loss = 2.31088 (* 1 = 2.31088 loss)
I0428 19:51:34.376060 27310 solver.cpp:219] Iteration 0 (-1.01802e-30 iter/s, 0.0787457s/100 iters), loss = 2.30177
I0428 19:51:34.376098 27310 solver.cpp:238]     Train net output #0: loss = 2.30177 (* 1 = 2.30177 loss)
I0428 19:51:34.376113 27310 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:34.471159 27310 solver.cpp:219] Iteration 100 (1052.05 iter/s, 0.0950522s/100 iters), loss = 1.25227
I0428 19:51:34.471200 27310 solver.cpp:238]     Train net output #0: loss = 1.25227 (* 1 = 1.25227 loss)
I0428 19:51:34.471206 27310 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:34.561419 27310 solver.cpp:219] Iteration 200 (1108.34 iter/s, 0.0902248s/100 iters), loss = 0.964698
I0428 19:51:34.561458 27310 solver.cpp:238]     Train net output #0: loss = 0.964698 (* 1 = 0.964698 loss)
I0428 19:51:34.561465 27310 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:34.658766 27310 solver.cpp:219] Iteration 300 (1027.62 iter/s, 0.0973127s/100 iters), loss = 0.418104
I0428 19:51:34.658789 27310 solver.cpp:238]     Train net output #0: loss = 0.418104 (* 1 = 0.418104 loss)
I0428 19:51:34.658795 27310 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:34.748061 27310 solver.cpp:219] Iteration 400 (1120.3 iter/s, 0.0892621s/100 iters), loss = 0.306889
I0428 19:51:34.748085 27310 solver.cpp:238]     Train net output #0: loss = 0.306889 (* 1 = 0.306889 loss)
I0428 19:51:34.748090 27310 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:34.835427 27310 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:34.888968 27317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:34.889469 27310 solver.cpp:398]     Test net output #0: accuracy = 0.9319
I0428 19:51:34.889489 27310 solver.cpp:398]     Test net output #1: loss = 0.224192 (* 1 = 0.224192 loss)
I0428 19:51:34.890384 27310 solver.cpp:219] Iteration 500 (702.806 iter/s, 0.142287s/100 iters), loss = 0.237905
I0428 19:51:34.890449 27310 solver.cpp:238]     Train net output #0: loss = 0.237905 (* 1 = 0.237905 loss)
I0428 19:51:34.890455 27310 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:34.984447 27310 solver.cpp:219] Iteration 600 (1063.95 iter/s, 0.0939891s/100 iters), loss = 0.12715
I0428 19:51:34.984486 27310 solver.cpp:238]     Train net output #0: loss = 0.12715 (* 1 = 0.12715 loss)
I0428 19:51:34.984493 27310 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:35.071926 27310 solver.cpp:219] Iteration 700 (1143.57 iter/s, 0.0874455s/100 iters), loss = 0.197276
I0428 19:51:35.071966 27310 solver.cpp:238]     Train net output #0: loss = 0.197276 (* 1 = 0.197276 loss)
I0428 19:51:35.071972 27310 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:35.154635 27310 solver.cpp:219] Iteration 800 (1209.56 iter/s, 0.0826747s/100 iters), loss = 0.2752
I0428 19:51:35.154673 27310 solver.cpp:238]     Train net output #0: loss = 0.2752 (* 1 = 0.2752 loss)
I0428 19:51:35.154680 27310 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:35.246335 27310 solver.cpp:219] Iteration 900 (1091 iter/s, 0.0916593s/100 iters), loss = 0.195645
I0428 19:51:35.246377 27310 solver.cpp:238]     Train net output #0: loss = 0.195645 (* 1 = 0.195645 loss)
I0428 19:51:35.246386 27310 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:35.277000 27316 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:35.334441 27310 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:35.335273 27310 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:35.335808 27310 solver.cpp:311] Iteration 1000, loss = 0.0875213
I0428 19:51:35.335822 27310 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:35.412145 27317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:35.412681 27310 solver.cpp:398]     Test net output #0: accuracy = 0.9603
I0428 19:51:35.412715 27310 solver.cpp:398]     Test net output #1: loss = 0.127858 (* 1 = 0.127858 loss)
I0428 19:51:35.412720 27310 solver.cpp:316] Optimization Done.
I0428 19:51:35.412734 27310 caffe.cpp:259] Optimization Done.
