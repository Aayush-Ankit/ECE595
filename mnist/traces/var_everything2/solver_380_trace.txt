I0428 19:41:58.138732 24955 caffe.cpp:218] Using GPUs 0
I0428 19:41:58.176988 24955 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:58.696686 24955 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test380.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:58.696836 24955 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test380.prototxt
I0428 19:41:58.697253 24955 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:58.697273 24955 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:58.697377 24955 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:58.697458 24955 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:58.697559 24955 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:58.697583 24955 net.cpp:86] Creating Layer mnist
I0428 19:41:58.697592 24955 net.cpp:382] mnist -> data
I0428 19:41:58.697615 24955 net.cpp:382] mnist -> label
I0428 19:41:58.698714 24955 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:58.701391 24955 net.cpp:124] Setting up mnist
I0428 19:41:58.701411 24955 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:58.701417 24955 net.cpp:131] Top shape: 64 (64)
I0428 19:41:58.701421 24955 net.cpp:139] Memory required for data: 200960
I0428 19:41:58.701427 24955 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:58.701472 24955 net.cpp:86] Creating Layer conv0
I0428 19:41:58.701495 24955 net.cpp:408] conv0 <- data
I0428 19:41:58.701508 24955 net.cpp:382] conv0 -> conv0
I0428 19:41:58.991958 24955 net.cpp:124] Setting up conv0
I0428 19:41:58.991991 24955 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:58.991996 24955 net.cpp:139] Memory required for data: 495872
I0428 19:41:58.992012 24955 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:58.992027 24955 net.cpp:86] Creating Layer pool0
I0428 19:41:58.992033 24955 net.cpp:408] pool0 <- conv0
I0428 19:41:58.992039 24955 net.cpp:382] pool0 -> pool0
I0428 19:41:58.992094 24955 net.cpp:124] Setting up pool0
I0428 19:41:58.992101 24955 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:58.992105 24955 net.cpp:139] Memory required for data: 569600
I0428 19:41:58.992108 24955 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:58.992121 24955 net.cpp:86] Creating Layer conv1
I0428 19:41:58.992125 24955 net.cpp:408] conv1 <- pool0
I0428 19:41:58.992131 24955 net.cpp:382] conv1 -> conv1
I0428 19:41:58.994266 24955 net.cpp:124] Setting up conv1
I0428 19:41:58.994283 24955 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:58.994288 24955 net.cpp:139] Memory required for data: 733440
I0428 19:41:58.994298 24955 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:58.994307 24955 net.cpp:86] Creating Layer pool1
I0428 19:41:58.994313 24955 net.cpp:408] pool1 <- conv1
I0428 19:41:58.994319 24955 net.cpp:382] pool1 -> pool1
I0428 19:41:58.994364 24955 net.cpp:124] Setting up pool1
I0428 19:41:58.994370 24955 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:58.994374 24955 net.cpp:139] Memory required for data: 774400
I0428 19:41:58.994376 24955 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:58.994385 24955 net.cpp:86] Creating Layer ip1
I0428 19:41:58.994390 24955 net.cpp:408] ip1 <- pool1
I0428 19:41:58.994395 24955 net.cpp:382] ip1 -> ip1
I0428 19:41:58.995507 24955 net.cpp:124] Setting up ip1
I0428 19:41:58.995522 24955 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:58.995525 24955 net.cpp:139] Memory required for data: 780800
I0428 19:41:58.995535 24955 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:58.995543 24955 net.cpp:86] Creating Layer relu1
I0428 19:41:58.995548 24955 net.cpp:408] relu1 <- ip1
I0428 19:41:58.995553 24955 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:58.995760 24955 net.cpp:124] Setting up relu1
I0428 19:41:58.995771 24955 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:58.995775 24955 net.cpp:139] Memory required for data: 787200
I0428 19:41:58.995779 24955 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:58.995787 24955 net.cpp:86] Creating Layer ip2
I0428 19:41:58.995791 24955 net.cpp:408] ip2 <- ip1
I0428 19:41:58.995797 24955 net.cpp:382] ip2 -> ip2
I0428 19:41:58.995920 24955 net.cpp:124] Setting up ip2
I0428 19:41:58.995929 24955 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:58.995932 24955 net.cpp:139] Memory required for data: 800000
I0428 19:41:58.995939 24955 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:58.995946 24955 net.cpp:86] Creating Layer relu2
I0428 19:41:58.995949 24955 net.cpp:408] relu2 <- ip2
I0428 19:41:58.995954 24955 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:58.996807 24955 net.cpp:124] Setting up relu2
I0428 19:41:58.996829 24955 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:58.996834 24955 net.cpp:139] Memory required for data: 812800
I0428 19:41:58.996837 24955 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:58.996846 24955 net.cpp:86] Creating Layer ip3
I0428 19:41:58.996850 24955 net.cpp:408] ip3 <- ip2
I0428 19:41:58.996856 24955 net.cpp:382] ip3 -> ip3
I0428 19:41:58.996979 24955 net.cpp:124] Setting up ip3
I0428 19:41:58.996989 24955 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:58.996994 24955 net.cpp:139] Memory required for data: 815360
I0428 19:41:58.997004 24955 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:58.997009 24955 net.cpp:86] Creating Layer relu3
I0428 19:41:58.997014 24955 net.cpp:408] relu3 <- ip3
I0428 19:41:58.997018 24955 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:58.997215 24955 net.cpp:124] Setting up relu3
I0428 19:41:58.997226 24955 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:58.997231 24955 net.cpp:139] Memory required for data: 817920
I0428 19:41:58.997234 24955 layer_factory.hpp:77] Creating layer loss
I0428 19:41:58.997241 24955 net.cpp:86] Creating Layer loss
I0428 19:41:58.997246 24955 net.cpp:408] loss <- ip3
I0428 19:41:58.997251 24955 net.cpp:408] loss <- label
I0428 19:41:58.997256 24955 net.cpp:382] loss -> loss
I0428 19:41:58.997273 24955 layer_factory.hpp:77] Creating layer loss
I0428 19:41:58.997539 24955 net.cpp:124] Setting up loss
I0428 19:41:58.997551 24955 net.cpp:131] Top shape: (1)
I0428 19:41:58.997555 24955 net.cpp:134]     with loss weight 1
I0428 19:41:58.997571 24955 net.cpp:139] Memory required for data: 817924
I0428 19:41:58.997575 24955 net.cpp:200] loss needs backward computation.
I0428 19:41:58.997580 24955 net.cpp:200] relu3 needs backward computation.
I0428 19:41:58.997584 24955 net.cpp:200] ip3 needs backward computation.
I0428 19:41:58.997588 24955 net.cpp:200] relu2 needs backward computation.
I0428 19:41:58.997592 24955 net.cpp:200] ip2 needs backward computation.
I0428 19:41:58.997596 24955 net.cpp:200] relu1 needs backward computation.
I0428 19:41:58.997598 24955 net.cpp:200] ip1 needs backward computation.
I0428 19:41:58.997602 24955 net.cpp:200] pool1 needs backward computation.
I0428 19:41:58.997606 24955 net.cpp:200] conv1 needs backward computation.
I0428 19:41:58.997609 24955 net.cpp:200] pool0 needs backward computation.
I0428 19:41:58.997613 24955 net.cpp:200] conv0 needs backward computation.
I0428 19:41:58.997617 24955 net.cpp:202] mnist does not need backward computation.
I0428 19:41:58.997620 24955 net.cpp:244] This network produces output loss
I0428 19:41:58.997632 24955 net.cpp:257] Network initialization done.
I0428 19:41:58.998018 24955 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test380.prototxt
I0428 19:41:58.998050 24955 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:58.998158 24955 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:58.998253 24955 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:58.998307 24955 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:58.998322 24955 net.cpp:86] Creating Layer mnist
I0428 19:41:58.998327 24955 net.cpp:382] mnist -> data
I0428 19:41:58.998337 24955 net.cpp:382] mnist -> label
I0428 19:41:58.998437 24955 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:59.000633 24955 net.cpp:124] Setting up mnist
I0428 19:41:59.000648 24955 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:59.000654 24955 net.cpp:131] Top shape: 100 (100)
I0428 19:41:59.000658 24955 net.cpp:139] Memory required for data: 314000
I0428 19:41:59.000663 24955 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:59.000671 24955 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:59.000675 24955 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:59.000680 24955 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:59.000689 24955 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:59.000742 24955 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:59.000749 24955 net.cpp:131] Top shape: 100 (100)
I0428 19:41:59.000753 24955 net.cpp:131] Top shape: 100 (100)
I0428 19:41:59.000756 24955 net.cpp:139] Memory required for data: 314800
I0428 19:41:59.000761 24955 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:59.000771 24955 net.cpp:86] Creating Layer conv0
I0428 19:41:59.000773 24955 net.cpp:408] conv0 <- data
I0428 19:41:59.000779 24955 net.cpp:382] conv0 -> conv0
I0428 19:41:59.002790 24955 net.cpp:124] Setting up conv0
I0428 19:41:59.002809 24955 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:59.002813 24955 net.cpp:139] Memory required for data: 775600
I0428 19:41:59.002825 24955 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:59.002831 24955 net.cpp:86] Creating Layer pool0
I0428 19:41:59.002837 24955 net.cpp:408] pool0 <- conv0
I0428 19:41:59.002843 24955 net.cpp:382] pool0 -> pool0
I0428 19:41:59.002887 24955 net.cpp:124] Setting up pool0
I0428 19:41:59.002894 24955 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:59.002898 24955 net.cpp:139] Memory required for data: 890800
I0428 19:41:59.002902 24955 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:59.002913 24955 net.cpp:86] Creating Layer conv1
I0428 19:41:59.002917 24955 net.cpp:408] conv1 <- pool0
I0428 19:41:59.002923 24955 net.cpp:382] conv1 -> conv1
I0428 19:41:59.004667 24955 net.cpp:124] Setting up conv1
I0428 19:41:59.004683 24955 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:59.004688 24955 net.cpp:139] Memory required for data: 1146800
I0428 19:41:59.004698 24955 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:59.004707 24955 net.cpp:86] Creating Layer pool1
I0428 19:41:59.004712 24955 net.cpp:408] pool1 <- conv1
I0428 19:41:59.004719 24955 net.cpp:382] pool1 -> pool1
I0428 19:41:59.004763 24955 net.cpp:124] Setting up pool1
I0428 19:41:59.004770 24955 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:59.004773 24955 net.cpp:139] Memory required for data: 1210800
I0428 19:41:59.004777 24955 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:59.004784 24955 net.cpp:86] Creating Layer ip1
I0428 19:41:59.004788 24955 net.cpp:408] ip1 <- pool1
I0428 19:41:59.004799 24955 net.cpp:382] ip1 -> ip1
I0428 19:41:59.004958 24955 net.cpp:124] Setting up ip1
I0428 19:41:59.004969 24955 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:59.004986 24955 net.cpp:139] Memory required for data: 1220800
I0428 19:41:59.004995 24955 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:59.005003 24955 net.cpp:86] Creating Layer relu1
I0428 19:41:59.005015 24955 net.cpp:408] relu1 <- ip1
I0428 19:41:59.005023 24955 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:59.005214 24955 net.cpp:124] Setting up relu1
I0428 19:41:59.005225 24955 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:59.005229 24955 net.cpp:139] Memory required for data: 1230800
I0428 19:41:59.005234 24955 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:59.005244 24955 net.cpp:86] Creating Layer ip2
I0428 19:41:59.005249 24955 net.cpp:408] ip2 <- ip1
I0428 19:41:59.005270 24955 net.cpp:382] ip2 -> ip2
I0428 19:41:59.005408 24955 net.cpp:124] Setting up ip2
I0428 19:41:59.005416 24955 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:59.005420 24955 net.cpp:139] Memory required for data: 1250800
I0428 19:41:59.005434 24955 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:59.005441 24955 net.cpp:86] Creating Layer relu2
I0428 19:41:59.005445 24955 net.cpp:408] relu2 <- ip2
I0428 19:41:59.005450 24955 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:59.005692 24955 net.cpp:124] Setting up relu2
I0428 19:41:59.005703 24955 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:59.005709 24955 net.cpp:139] Memory required for data: 1270800
I0428 19:41:59.005713 24955 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:59.005719 24955 net.cpp:86] Creating Layer ip3
I0428 19:41:59.005723 24955 net.cpp:408] ip3 <- ip2
I0428 19:41:59.005730 24955 net.cpp:382] ip3 -> ip3
I0428 19:41:59.005880 24955 net.cpp:124] Setting up ip3
I0428 19:41:59.005890 24955 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:59.005893 24955 net.cpp:139] Memory required for data: 1274800
I0428 19:41:59.005903 24955 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:59.005910 24955 net.cpp:86] Creating Layer relu3
I0428 19:41:59.005914 24955 net.cpp:408] relu3 <- ip3
I0428 19:41:59.005918 24955 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:59.006852 24955 net.cpp:124] Setting up relu3
I0428 19:41:59.006867 24955 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:59.006871 24955 net.cpp:139] Memory required for data: 1278800
I0428 19:41:59.006875 24955 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:59.006881 24955 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:59.006886 24955 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:59.006891 24955 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:59.006901 24955 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:59.006963 24955 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:59.006976 24955 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:59.006981 24955 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:59.006984 24955 net.cpp:139] Memory required for data: 1286800
I0428 19:41:59.006988 24955 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:59.006995 24955 net.cpp:86] Creating Layer accuracy
I0428 19:41:59.006999 24955 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:59.007004 24955 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:59.007009 24955 net.cpp:382] accuracy -> accuracy
I0428 19:41:59.007017 24955 net.cpp:124] Setting up accuracy
I0428 19:41:59.007022 24955 net.cpp:131] Top shape: (1)
I0428 19:41:59.007026 24955 net.cpp:139] Memory required for data: 1286804
I0428 19:41:59.007030 24955 layer_factory.hpp:77] Creating layer loss
I0428 19:41:59.007036 24955 net.cpp:86] Creating Layer loss
I0428 19:41:59.007040 24955 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:59.007045 24955 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:59.007050 24955 net.cpp:382] loss -> loss
I0428 19:41:59.007056 24955 layer_factory.hpp:77] Creating layer loss
I0428 19:41:59.007340 24955 net.cpp:124] Setting up loss
I0428 19:41:59.007352 24955 net.cpp:131] Top shape: (1)
I0428 19:41:59.007356 24955 net.cpp:134]     with loss weight 1
I0428 19:41:59.007372 24955 net.cpp:139] Memory required for data: 1286808
I0428 19:41:59.007387 24955 net.cpp:200] loss needs backward computation.
I0428 19:41:59.007392 24955 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:59.007397 24955 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:59.007407 24955 net.cpp:200] relu3 needs backward computation.
I0428 19:41:59.007411 24955 net.cpp:200] ip3 needs backward computation.
I0428 19:41:59.007414 24955 net.cpp:200] relu2 needs backward computation.
I0428 19:41:59.007417 24955 net.cpp:200] ip2 needs backward computation.
I0428 19:41:59.007421 24955 net.cpp:200] relu1 needs backward computation.
I0428 19:41:59.007424 24955 net.cpp:200] ip1 needs backward computation.
I0428 19:41:59.007427 24955 net.cpp:200] pool1 needs backward computation.
I0428 19:41:59.007431 24955 net.cpp:200] conv1 needs backward computation.
I0428 19:41:59.007436 24955 net.cpp:200] pool0 needs backward computation.
I0428 19:41:59.007438 24955 net.cpp:200] conv0 needs backward computation.
I0428 19:41:59.007442 24955 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:59.007448 24955 net.cpp:202] mnist does not need backward computation.
I0428 19:41:59.007452 24955 net.cpp:244] This network produces output accuracy
I0428 19:41:59.007457 24955 net.cpp:244] This network produces output loss
I0428 19:41:59.007468 24955 net.cpp:257] Network initialization done.
I0428 19:41:59.007529 24955 solver.cpp:56] Solver scaffolding done.
I0428 19:41:59.007912 24955 caffe.cpp:248] Starting Optimization
I0428 19:41:59.007920 24955 solver.cpp:273] Solving LeNet
I0428 19:41:59.007931 24955 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:59.008922 24955 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:59.011680 24955 blocking_queue.cpp:49] Waiting for data
I0428 19:41:59.081676 24962 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:59.082121 24955 solver.cpp:398]     Test net output #0: accuracy = 0.1248
I0428 19:41:59.082140 24955 solver.cpp:398]     Test net output #1: loss = 2.31276 (* 1 = 2.31276 loss)
I0428 19:41:59.083986 24955 solver.cpp:219] Iteration 0 (-1.06919e-42 iter/s, 0.0760272s/100 iters), loss = 2.34374
I0428 19:41:59.084012 24955 solver.cpp:238]     Train net output #0: loss = 2.34374 (* 1 = 2.34374 loss)
I0428 19:41:59.084024 24955 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:59.157846 24955 solver.cpp:219] Iteration 100 (1354.62 iter/s, 0.0738216s/100 iters), loss = 1.78512
I0428 19:41:59.157871 24955 solver.cpp:238]     Train net output #0: loss = 1.78512 (* 1 = 1.78512 loss)
I0428 19:41:59.157893 24955 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:59.232547 24955 solver.cpp:219] Iteration 200 (1339.35 iter/s, 0.0746629s/100 iters), loss = 1.40842
I0428 19:41:59.232571 24955 solver.cpp:238]     Train net output #0: loss = 1.40842 (* 1 = 1.40842 loss)
I0428 19:41:59.232597 24955 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:59.306028 24955 solver.cpp:219] Iteration 300 (1361.59 iter/s, 0.0734433s/100 iters), loss = 1.34516
I0428 19:41:59.306067 24955 solver.cpp:238]     Train net output #0: loss = 1.34516 (* 1 = 1.34516 loss)
I0428 19:41:59.306074 24955 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:59.379863 24955 solver.cpp:219] Iteration 400 (1355.05 iter/s, 0.0737979s/100 iters), loss = 1.26773
I0428 19:41:59.379904 24955 solver.cpp:238]     Train net output #0: loss = 1.26773 (* 1 = 1.26773 loss)
I0428 19:41:59.379909 24955 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:59.452289 24955 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:59.506589 24962 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:59.507040 24955 solver.cpp:398]     Test net output #0: accuracy = 0.5196
I0428 19:41:59.507060 24955 solver.cpp:398]     Test net output #1: loss = 1.33974 (* 1 = 1.33974 loss)
I0428 19:41:59.507876 24955 solver.cpp:219] Iteration 500 (781.388 iter/s, 0.127977s/100 iters), loss = 1.26228
I0428 19:41:59.507913 24955 solver.cpp:238]     Train net output #0: loss = 1.26228 (* 1 = 1.26228 loss)
I0428 19:41:59.507936 24955 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:59.583999 24955 solver.cpp:219] Iteration 600 (1314.55 iter/s, 0.0760714s/100 iters), loss = 1.5482
I0428 19:41:59.584026 24955 solver.cpp:238]     Train net output #0: loss = 1.5482 (* 1 = 1.5482 loss)
I0428 19:41:59.584048 24955 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:59.686153 24955 solver.cpp:219] Iteration 700 (979.344 iter/s, 0.102109s/100 iters), loss = 0.937453
I0428 19:41:59.686192 24955 solver.cpp:238]     Train net output #0: loss = 0.937453 (* 1 = 0.937453 loss)
I0428 19:41:59.686202 24955 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:59.766418 24955 solver.cpp:219] Iteration 800 (1246.65 iter/s, 0.080215s/100 iters), loss = 1.06822
I0428 19:41:59.766448 24955 solver.cpp:238]     Train net output #0: loss = 1.06822 (* 1 = 1.06822 loss)
I0428 19:41:59.766455 24955 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:59.843478 24955 solver.cpp:219] Iteration 900 (1298.46 iter/s, 0.077014s/100 iters), loss = 0.706527
I0428 19:41:59.843508 24955 solver.cpp:238]     Train net output #0: loss = 0.706527 (* 1 = 0.706527 loss)
I0428 19:41:59.843514 24955 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:59.869649 24961 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:59.921567 24955 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:59.922353 24955 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:59.922835 24955 solver.cpp:311] Iteration 1000, loss = 0.952914
I0428 19:41:59.922852 24955 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:59.998627 24962 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:59.999254 24955 solver.cpp:398]     Test net output #0: accuracy = 0.7749
I0428 19:41:59.999281 24955 solver.cpp:398]     Test net output #1: loss = 0.798921 (* 1 = 0.798921 loss)
I0428 19:41:59.999289 24955 solver.cpp:316] Optimization Done.
I0428 19:41:59.999294 24955 caffe.cpp:259] Optimization Done.
