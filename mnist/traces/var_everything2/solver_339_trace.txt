I0428 19:40:35.360514 24587 caffe.cpp:218] Using GPUs 0
I0428 19:40:35.397071 24587 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:35.900903 24587 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test339.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:35.901038 24587 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test339.prototxt
I0428 19:40:35.901449 24587 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:35.901466 24587 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:35.901563 24587 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:35.901638 24587 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:35.901734 24587 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:35.901758 24587 net.cpp:86] Creating Layer mnist
I0428 19:40:35.901767 24587 net.cpp:382] mnist -> data
I0428 19:40:35.901788 24587 net.cpp:382] mnist -> label
I0428 19:40:35.902880 24587 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:35.905320 24587 net.cpp:124] Setting up mnist
I0428 19:40:35.905338 24587 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:35.905344 24587 net.cpp:131] Top shape: 64 (64)
I0428 19:40:35.905349 24587 net.cpp:139] Memory required for data: 200960
I0428 19:40:35.905355 24587 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:35.905370 24587 net.cpp:86] Creating Layer conv0
I0428 19:40:35.905392 24587 net.cpp:408] conv0 <- data
I0428 19:40:35.905405 24587 net.cpp:382] conv0 -> conv0
I0428 19:40:36.192580 24587 net.cpp:124] Setting up conv0
I0428 19:40:36.192607 24587 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:36.192612 24587 net.cpp:139] Memory required for data: 495872
I0428 19:40:36.192626 24587 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:36.192641 24587 net.cpp:86] Creating Layer pool0
I0428 19:40:36.192643 24587 net.cpp:408] pool0 <- conv0
I0428 19:40:36.192649 24587 net.cpp:382] pool0 -> pool0
I0428 19:40:36.192695 24587 net.cpp:124] Setting up pool0
I0428 19:40:36.192709 24587 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:36.192713 24587 net.cpp:139] Memory required for data: 569600
I0428 19:40:36.192715 24587 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:36.192725 24587 net.cpp:86] Creating Layer conv1
I0428 19:40:36.192728 24587 net.cpp:408] conv1 <- pool0
I0428 19:40:36.192734 24587 net.cpp:382] conv1 -> conv1
I0428 19:40:36.194530 24587 net.cpp:124] Setting up conv1
I0428 19:40:36.194555 24587 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:36.194560 24587 net.cpp:139] Memory required for data: 651520
I0428 19:40:36.194568 24587 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:36.194592 24587 net.cpp:86] Creating Layer pool1
I0428 19:40:36.194597 24587 net.cpp:408] pool1 <- conv1
I0428 19:40:36.194602 24587 net.cpp:382] pool1 -> pool1
I0428 19:40:36.194641 24587 net.cpp:124] Setting up pool1
I0428 19:40:36.194648 24587 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:36.194651 24587 net.cpp:139] Memory required for data: 672000
I0428 19:40:36.194654 24587 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:36.194661 24587 net.cpp:86] Creating Layer ip1
I0428 19:40:36.194665 24587 net.cpp:408] ip1 <- pool1
I0428 19:40:36.194670 24587 net.cpp:382] ip1 -> ip1
I0428 19:40:36.195663 24587 net.cpp:124] Setting up ip1
I0428 19:40:36.195677 24587 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:36.195696 24587 net.cpp:139] Memory required for data: 678400
I0428 19:40:36.195705 24587 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:36.195713 24587 net.cpp:86] Creating Layer relu1
I0428 19:40:36.195715 24587 net.cpp:408] relu1 <- ip1
I0428 19:40:36.195720 24587 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:36.195929 24587 net.cpp:124] Setting up relu1
I0428 19:40:36.195936 24587 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:36.195940 24587 net.cpp:139] Memory required for data: 684800
I0428 19:40:36.195943 24587 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:36.195950 24587 net.cpp:86] Creating Layer ip2
I0428 19:40:36.195952 24587 net.cpp:408] ip2 <- ip1
I0428 19:40:36.195957 24587 net.cpp:382] ip2 -> ip2
I0428 19:40:36.196063 24587 net.cpp:124] Setting up ip2
I0428 19:40:36.196070 24587 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:36.196074 24587 net.cpp:139] Memory required for data: 697600
I0428 19:40:36.196079 24587 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:36.196085 24587 net.cpp:86] Creating Layer relu2
I0428 19:40:36.196089 24587 net.cpp:408] relu2 <- ip2
I0428 19:40:36.196092 24587 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:36.196825 24587 net.cpp:124] Setting up relu2
I0428 19:40:36.196853 24587 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:36.196873 24587 net.cpp:139] Memory required for data: 710400
I0428 19:40:36.196877 24587 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:36.196885 24587 net.cpp:86] Creating Layer ip3
I0428 19:40:36.196889 24587 net.cpp:408] ip3 <- ip2
I0428 19:40:36.196895 24587 net.cpp:382] ip3 -> ip3
I0428 19:40:36.197019 24587 net.cpp:124] Setting up ip3
I0428 19:40:36.197028 24587 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:36.197031 24587 net.cpp:139] Memory required for data: 712960
I0428 19:40:36.197039 24587 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:36.197044 24587 net.cpp:86] Creating Layer relu3
I0428 19:40:36.197048 24587 net.cpp:408] relu3 <- ip3
I0428 19:40:36.197052 24587 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:36.197254 24587 net.cpp:124] Setting up relu3
I0428 19:40:36.197263 24587 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:36.197265 24587 net.cpp:139] Memory required for data: 715520
I0428 19:40:36.197269 24587 layer_factory.hpp:77] Creating layer loss
I0428 19:40:36.197274 24587 net.cpp:86] Creating Layer loss
I0428 19:40:36.197278 24587 net.cpp:408] loss <- ip3
I0428 19:40:36.197281 24587 net.cpp:408] loss <- label
I0428 19:40:36.197288 24587 net.cpp:382] loss -> loss
I0428 19:40:36.197301 24587 layer_factory.hpp:77] Creating layer loss
I0428 19:40:36.197525 24587 net.cpp:124] Setting up loss
I0428 19:40:36.197533 24587 net.cpp:131] Top shape: (1)
I0428 19:40:36.197536 24587 net.cpp:134]     with loss weight 1
I0428 19:40:36.197551 24587 net.cpp:139] Memory required for data: 715524
I0428 19:40:36.197556 24587 net.cpp:200] loss needs backward computation.
I0428 19:40:36.197558 24587 net.cpp:200] relu3 needs backward computation.
I0428 19:40:36.197562 24587 net.cpp:200] ip3 needs backward computation.
I0428 19:40:36.197564 24587 net.cpp:200] relu2 needs backward computation.
I0428 19:40:36.197567 24587 net.cpp:200] ip2 needs backward computation.
I0428 19:40:36.197571 24587 net.cpp:200] relu1 needs backward computation.
I0428 19:40:36.197573 24587 net.cpp:200] ip1 needs backward computation.
I0428 19:40:36.197576 24587 net.cpp:200] pool1 needs backward computation.
I0428 19:40:36.197579 24587 net.cpp:200] conv1 needs backward computation.
I0428 19:40:36.197582 24587 net.cpp:200] pool0 needs backward computation.
I0428 19:40:36.197585 24587 net.cpp:200] conv0 needs backward computation.
I0428 19:40:36.197588 24587 net.cpp:202] mnist does not need backward computation.
I0428 19:40:36.197592 24587 net.cpp:244] This network produces output loss
I0428 19:40:36.197600 24587 net.cpp:257] Network initialization done.
I0428 19:40:36.197947 24587 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test339.prototxt
I0428 19:40:36.197988 24587 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:36.198091 24587 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:36.198168 24587 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:36.198212 24587 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:36.198225 24587 net.cpp:86] Creating Layer mnist
I0428 19:40:36.198230 24587 net.cpp:382] mnist -> data
I0428 19:40:36.198237 24587 net.cpp:382] mnist -> label
I0428 19:40:36.198318 24587 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:36.200168 24587 net.cpp:124] Setting up mnist
I0428 19:40:36.200181 24587 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:36.200201 24587 net.cpp:131] Top shape: 100 (100)
I0428 19:40:36.200206 24587 net.cpp:139] Memory required for data: 314000
I0428 19:40:36.200208 24587 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:36.200229 24587 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:36.200232 24587 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:36.200237 24587 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:36.200243 24587 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:36.200284 24587 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:36.200290 24587 net.cpp:131] Top shape: 100 (100)
I0428 19:40:36.200294 24587 net.cpp:131] Top shape: 100 (100)
I0428 19:40:36.200296 24587 net.cpp:139] Memory required for data: 314800
I0428 19:40:36.200299 24587 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:36.200307 24587 net.cpp:86] Creating Layer conv0
I0428 19:40:36.200310 24587 net.cpp:408] conv0 <- data
I0428 19:40:36.200315 24587 net.cpp:382] conv0 -> conv0
I0428 19:40:36.201961 24587 net.cpp:124] Setting up conv0
I0428 19:40:36.201975 24587 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:36.201979 24587 net.cpp:139] Memory required for data: 775600
I0428 19:40:36.201988 24587 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:36.201994 24587 net.cpp:86] Creating Layer pool0
I0428 19:40:36.201997 24587 net.cpp:408] pool0 <- conv0
I0428 19:40:36.202003 24587 net.cpp:382] pool0 -> pool0
I0428 19:40:36.202039 24587 net.cpp:124] Setting up pool0
I0428 19:40:36.202044 24587 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:36.202046 24587 net.cpp:139] Memory required for data: 890800
I0428 19:40:36.202049 24587 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:36.202057 24587 net.cpp:86] Creating Layer conv1
I0428 19:40:36.202060 24587 net.cpp:408] conv1 <- pool0
I0428 19:40:36.202065 24587 net.cpp:382] conv1 -> conv1
I0428 19:40:36.203541 24587 net.cpp:124] Setting up conv1
I0428 19:40:36.203554 24587 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:36.203558 24587 net.cpp:139] Memory required for data: 1018800
I0428 19:40:36.203567 24587 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:36.203573 24587 net.cpp:86] Creating Layer pool1
I0428 19:40:36.203577 24587 net.cpp:408] pool1 <- conv1
I0428 19:40:36.203582 24587 net.cpp:382] pool1 -> pool1
I0428 19:40:36.203618 24587 net.cpp:124] Setting up pool1
I0428 19:40:36.203624 24587 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:36.203625 24587 net.cpp:139] Memory required for data: 1050800
I0428 19:40:36.203629 24587 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:36.203634 24587 net.cpp:86] Creating Layer ip1
I0428 19:40:36.203637 24587 net.cpp:408] ip1 <- pool1
I0428 19:40:36.203642 24587 net.cpp:382] ip1 -> ip1
I0428 19:40:36.203749 24587 net.cpp:124] Setting up ip1
I0428 19:40:36.203766 24587 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:36.203781 24587 net.cpp:139] Memory required for data: 1060800
I0428 19:40:36.203789 24587 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:36.203794 24587 net.cpp:86] Creating Layer relu1
I0428 19:40:36.203797 24587 net.cpp:408] relu1 <- ip1
I0428 19:40:36.203801 24587 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:36.203974 24587 net.cpp:124] Setting up relu1
I0428 19:40:36.203982 24587 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:36.203987 24587 net.cpp:139] Memory required for data: 1070800
I0428 19:40:36.203990 24587 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:36.203999 24587 net.cpp:86] Creating Layer ip2
I0428 19:40:36.204001 24587 net.cpp:408] ip2 <- ip1
I0428 19:40:36.204006 24587 net.cpp:382] ip2 -> ip2
I0428 19:40:36.204140 24587 net.cpp:124] Setting up ip2
I0428 19:40:36.204147 24587 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:36.204151 24587 net.cpp:139] Memory required for data: 1090800
I0428 19:40:36.204156 24587 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:36.204161 24587 net.cpp:86] Creating Layer relu2
I0428 19:40:36.204164 24587 net.cpp:408] relu2 <- ip2
I0428 19:40:36.204169 24587 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:36.204457 24587 net.cpp:124] Setting up relu2
I0428 19:40:36.204464 24587 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:36.204468 24587 net.cpp:139] Memory required for data: 1110800
I0428 19:40:36.204488 24587 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:36.204494 24587 net.cpp:86] Creating Layer ip3
I0428 19:40:36.204506 24587 net.cpp:408] ip3 <- ip2
I0428 19:40:36.204511 24587 net.cpp:382] ip3 -> ip3
I0428 19:40:36.204627 24587 net.cpp:124] Setting up ip3
I0428 19:40:36.204633 24587 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:36.204637 24587 net.cpp:139] Memory required for data: 1114800
I0428 19:40:36.204644 24587 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:36.204648 24587 net.cpp:86] Creating Layer relu3
I0428 19:40:36.204653 24587 net.cpp:408] relu3 <- ip3
I0428 19:40:36.204656 24587 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:36.205482 24587 net.cpp:124] Setting up relu3
I0428 19:40:36.205509 24587 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:36.205513 24587 net.cpp:139] Memory required for data: 1118800
I0428 19:40:36.205518 24587 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:36.205523 24587 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:36.205528 24587 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:36.205533 24587 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:36.205538 24587 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:36.205592 24587 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:36.205600 24587 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:36.205603 24587 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:36.205606 24587 net.cpp:139] Memory required for data: 1126800
I0428 19:40:36.205610 24587 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:36.205615 24587 net.cpp:86] Creating Layer accuracy
I0428 19:40:36.205618 24587 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:36.205623 24587 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:36.205627 24587 net.cpp:382] accuracy -> accuracy
I0428 19:40:36.205634 24587 net.cpp:124] Setting up accuracy
I0428 19:40:36.205638 24587 net.cpp:131] Top shape: (1)
I0428 19:40:36.205642 24587 net.cpp:139] Memory required for data: 1126804
I0428 19:40:36.205646 24587 layer_factory.hpp:77] Creating layer loss
I0428 19:40:36.205649 24587 net.cpp:86] Creating Layer loss
I0428 19:40:36.205653 24587 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:36.205657 24587 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:36.205662 24587 net.cpp:382] loss -> loss
I0428 19:40:36.205667 24587 layer_factory.hpp:77] Creating layer loss
I0428 19:40:36.205904 24587 net.cpp:124] Setting up loss
I0428 19:40:36.205912 24587 net.cpp:131] Top shape: (1)
I0428 19:40:36.205916 24587 net.cpp:134]     with loss weight 1
I0428 19:40:36.205922 24587 net.cpp:139] Memory required for data: 1126808
I0428 19:40:36.205938 24587 net.cpp:200] loss needs backward computation.
I0428 19:40:36.205942 24587 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:36.205946 24587 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:36.205950 24587 net.cpp:200] relu3 needs backward computation.
I0428 19:40:36.205952 24587 net.cpp:200] ip3 needs backward computation.
I0428 19:40:36.205955 24587 net.cpp:200] relu2 needs backward computation.
I0428 19:40:36.205958 24587 net.cpp:200] ip2 needs backward computation.
I0428 19:40:36.205961 24587 net.cpp:200] relu1 needs backward computation.
I0428 19:40:36.205965 24587 net.cpp:200] ip1 needs backward computation.
I0428 19:40:36.205967 24587 net.cpp:200] pool1 needs backward computation.
I0428 19:40:36.205971 24587 net.cpp:200] conv1 needs backward computation.
I0428 19:40:36.205973 24587 net.cpp:200] pool0 needs backward computation.
I0428 19:40:36.205977 24587 net.cpp:200] conv0 needs backward computation.
I0428 19:40:36.205981 24587 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:36.205984 24587 net.cpp:202] mnist does not need backward computation.
I0428 19:40:36.205993 24587 net.cpp:244] This network produces output accuracy
I0428 19:40:36.205997 24587 net.cpp:244] This network produces output loss
I0428 19:40:36.206007 24587 net.cpp:257] Network initialization done.
I0428 19:40:36.206049 24587 solver.cpp:56] Solver scaffolding done.
I0428 19:40:36.206398 24587 caffe.cpp:248] Starting Optimization
I0428 19:40:36.206404 24587 solver.cpp:273] Solving LeNet
I0428 19:40:36.206406 24587 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:36.207293 24587 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:36.209853 24587 blocking_queue.cpp:49] Waiting for data
I0428 19:40:36.270836 24594 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:36.271463 24587 solver.cpp:398]     Test net output #0: accuracy = 0.0942
I0428 19:40:36.271502 24587 solver.cpp:398]     Test net output #1: loss = 2.31221 (* 1 = 2.31221 loss)
I0428 19:40:36.274363 24587 solver.cpp:219] Iteration 0 (0 iter/s, 0.0679219s/100 iters), loss = 2.34048
I0428 19:40:36.274408 24587 solver.cpp:238]     Train net output #0: loss = 2.34048 (* 1 = 2.34048 loss)
I0428 19:40:36.274427 24587 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:36.370674 24587 solver.cpp:219] Iteration 100 (1038.9 iter/s, 0.0962559s/100 iters), loss = 0.488783
I0428 19:40:36.370718 24587 solver.cpp:238]     Train net output #0: loss = 0.488783 (* 1 = 0.488783 loss)
I0428 19:40:36.370726 24587 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:36.447731 24587 solver.cpp:219] Iteration 200 (1298.6 iter/s, 0.0770058s/100 iters), loss = 0.264713
I0428 19:40:36.447762 24587 solver.cpp:238]     Train net output #0: loss = 0.264713 (* 1 = 0.264713 loss)
I0428 19:40:36.447768 24587 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:36.523296 24587 solver.cpp:219] Iteration 300 (1324.04 iter/s, 0.0755261s/100 iters), loss = 0.424707
I0428 19:40:36.523326 24587 solver.cpp:238]     Train net output #0: loss = 0.424707 (* 1 = 0.424707 loss)
I0428 19:40:36.523334 24587 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:36.598990 24587 solver.cpp:219] Iteration 400 (1321.79 iter/s, 0.0756552s/100 iters), loss = 0.382069
I0428 19:40:36.599021 24587 solver.cpp:238]     Train net output #0: loss = 0.382069 (* 1 = 0.382069 loss)
I0428 19:40:36.599030 24587 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:36.673751 24587 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:36.726641 24594 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:36.727099 24587 solver.cpp:398]     Test net output #0: accuracy = 0.9405
I0428 19:40:36.727124 24587 solver.cpp:398]     Test net output #1: loss = 0.178953 (* 1 = 0.178953 loss)
I0428 19:40:36.727934 24587 solver.cpp:219] Iteration 500 (775.782 iter/s, 0.128902s/100 iters), loss = 0.0827615
I0428 19:40:36.727972 24587 solver.cpp:238]     Train net output #0: loss = 0.0827615 (* 1 = 0.0827615 loss)
I0428 19:40:36.727999 24587 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:36.805444 24587 solver.cpp:219] Iteration 600 (1290.93 iter/s, 0.0774636s/100 iters), loss = 0.139149
I0428 19:40:36.805474 24587 solver.cpp:238]     Train net output #0: loss = 0.139149 (* 1 = 0.139149 loss)
I0428 19:40:36.805481 24587 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:36.879679 24587 solver.cpp:219] Iteration 700 (1347.76 iter/s, 0.074197s/100 iters), loss = 0.286784
I0428 19:40:36.879707 24587 solver.cpp:238]     Train net output #0: loss = 0.286784 (* 1 = 0.286784 loss)
I0428 19:40:36.879717 24587 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:36.953464 24587 solver.cpp:219] Iteration 800 (1355.96 iter/s, 0.0737485s/100 iters), loss = 0.27263
I0428 19:40:36.953492 24587 solver.cpp:238]     Train net output #0: loss = 0.272629 (* 1 = 0.272629 loss)
I0428 19:40:36.953501 24587 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:37.027303 24587 solver.cpp:219] Iteration 900 (1355 iter/s, 0.0738007s/100 iters), loss = 0.200992
I0428 19:40:37.027331 24587 solver.cpp:238]     Train net output #0: loss = 0.200992 (* 1 = 0.200992 loss)
I0428 19:40:37.027341 24587 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:37.052000 24593 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:37.099171 24587 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:37.099848 24587 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:37.100252 24587 solver.cpp:311] Iteration 1000, loss = 0.108362
I0428 19:40:37.100268 24587 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:37.152464 24594 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:37.152874 24587 solver.cpp:398]     Test net output #0: accuracy = 0.9594
I0428 19:40:37.152891 24587 solver.cpp:398]     Test net output #1: loss = 0.130228 (* 1 = 0.130228 loss)
I0428 19:40:37.152900 24587 solver.cpp:316] Optimization Done.
I0428 19:40:37.152904 24587 caffe.cpp:259] Optimization Done.
