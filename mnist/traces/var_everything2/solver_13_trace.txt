I0428 19:28:04.341457 21526 caffe.cpp:218] Using GPUs 0
I0428 19:28:04.379634 21526 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:04.837832 21526 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test13.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:04.838011 21526 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test13.prototxt
I0428 19:28:04.838263 21526 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:04.838275 21526 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:04.838335 21526 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:04.838389 21526 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:04.838474 21526 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:04.838495 21526 net.cpp:86] Creating Layer mnist
I0428 19:28:04.838500 21526 net.cpp:382] mnist -> data
I0428 19:28:04.838518 21526 net.cpp:382] mnist -> label
I0428 19:28:04.839525 21526 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:04.841771 21526 net.cpp:124] Setting up mnist
I0428 19:28:04.841802 21526 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:04.841809 21526 net.cpp:131] Top shape: 64 (64)
I0428 19:28:04.841811 21526 net.cpp:139] Memory required for data: 200960
I0428 19:28:04.841817 21526 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:04.841838 21526 net.cpp:86] Creating Layer ip1
I0428 19:28:04.841843 21526 net.cpp:408] ip1 <- data
I0428 19:28:04.841855 21526 net.cpp:382] ip1 -> ip1
I0428 19:28:04.843037 21526 net.cpp:124] Setting up ip1
I0428 19:28:04.843050 21526 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:04.843053 21526 net.cpp:139] Memory required for data: 203520
I0428 19:28:04.843065 21526 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:04.843075 21526 net.cpp:86] Creating Layer relu1
I0428 19:28:04.843077 21526 net.cpp:408] relu1 <- ip1
I0428 19:28:04.843082 21526 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:05.080440 21526 net.cpp:124] Setting up relu1
I0428 19:28:05.080484 21526 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:05.080487 21526 net.cpp:139] Memory required for data: 206080
I0428 19:28:05.080492 21526 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:05.080504 21526 net.cpp:86] Creating Layer ip2
I0428 19:28:05.080528 21526 net.cpp:408] ip2 <- ip1
I0428 19:28:05.080535 21526 net.cpp:382] ip2 -> ip2
I0428 19:28:05.080660 21526 net.cpp:124] Setting up ip2
I0428 19:28:05.080669 21526 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:05.080672 21526 net.cpp:139] Memory required for data: 208640
I0428 19:28:05.080682 21526 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:05.080688 21526 net.cpp:86] Creating Layer relu2
I0428 19:28:05.080691 21526 net.cpp:408] relu2 <- ip2
I0428 19:28:05.080695 21526 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:05.081552 21526 net.cpp:124] Setting up relu2
I0428 19:28:05.081579 21526 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:05.081583 21526 net.cpp:139] Memory required for data: 211200
I0428 19:28:05.081588 21526 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:05.081594 21526 net.cpp:86] Creating Layer ip3
I0428 19:28:05.081598 21526 net.cpp:408] ip3 <- ip2
I0428 19:28:05.081619 21526 net.cpp:382] ip3 -> ip3
I0428 19:28:05.081732 21526 net.cpp:124] Setting up ip3
I0428 19:28:05.081740 21526 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:05.081744 21526 net.cpp:139] Memory required for data: 213760
I0428 19:28:05.081768 21526 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:05.081773 21526 net.cpp:86] Creating Layer relu3
I0428 19:28:05.081778 21526 net.cpp:408] relu3 <- ip3
I0428 19:28:05.081781 21526 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:05.081960 21526 net.cpp:124] Setting up relu3
I0428 19:28:05.081969 21526 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:05.081972 21526 net.cpp:139] Memory required for data: 216320
I0428 19:28:05.081975 21526 layer_factory.hpp:77] Creating layer loss
I0428 19:28:05.081981 21526 net.cpp:86] Creating Layer loss
I0428 19:28:05.081984 21526 net.cpp:408] loss <- ip3
I0428 19:28:05.081989 21526 net.cpp:408] loss <- label
I0428 19:28:05.081995 21526 net.cpp:382] loss -> loss
I0428 19:28:05.082013 21526 layer_factory.hpp:77] Creating layer loss
I0428 19:28:05.083309 21526 net.cpp:124] Setting up loss
I0428 19:28:05.083323 21526 net.cpp:131] Top shape: (1)
I0428 19:28:05.083328 21526 net.cpp:134]     with loss weight 1
I0428 19:28:05.083343 21526 net.cpp:139] Memory required for data: 216324
I0428 19:28:05.083348 21526 net.cpp:200] loss needs backward computation.
I0428 19:28:05.083351 21526 net.cpp:200] relu3 needs backward computation.
I0428 19:28:05.083355 21526 net.cpp:200] ip3 needs backward computation.
I0428 19:28:05.083359 21526 net.cpp:200] relu2 needs backward computation.
I0428 19:28:05.083361 21526 net.cpp:200] ip2 needs backward computation.
I0428 19:28:05.083364 21526 net.cpp:200] relu1 needs backward computation.
I0428 19:28:05.083367 21526 net.cpp:200] ip1 needs backward computation.
I0428 19:28:05.083371 21526 net.cpp:202] mnist does not need backward computation.
I0428 19:28:05.083374 21526 net.cpp:244] This network produces output loss
I0428 19:28:05.083384 21526 net.cpp:257] Network initialization done.
I0428 19:28:05.083678 21526 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test13.prototxt
I0428 19:28:05.083700 21526 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:05.083767 21526 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:05.083834 21526 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:05.083880 21526 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:05.083892 21526 net.cpp:86] Creating Layer mnist
I0428 19:28:05.083897 21526 net.cpp:382] mnist -> data
I0428 19:28:05.083904 21526 net.cpp:382] mnist -> label
I0428 19:28:05.083999 21526 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:05.086103 21526 net.cpp:124] Setting up mnist
I0428 19:28:05.086133 21526 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:05.086138 21526 net.cpp:131] Top shape: 100 (100)
I0428 19:28:05.086141 21526 net.cpp:139] Memory required for data: 314000
I0428 19:28:05.086144 21526 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:05.086181 21526 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:05.086186 21526 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:05.086191 21526 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:05.086197 21526 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:05.086246 21526 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:05.086252 21526 net.cpp:131] Top shape: 100 (100)
I0428 19:28:05.086256 21526 net.cpp:131] Top shape: 100 (100)
I0428 19:28:05.086259 21526 net.cpp:139] Memory required for data: 314800
I0428 19:28:05.086262 21526 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:05.086283 21526 net.cpp:86] Creating Layer ip1
I0428 19:28:05.086287 21526 net.cpp:408] ip1 <- data
I0428 19:28:05.086292 21526 net.cpp:382] ip1 -> ip1
I0428 19:28:05.086521 21526 net.cpp:124] Setting up ip1
I0428 19:28:05.086529 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.086532 21526 net.cpp:139] Memory required for data: 318800
I0428 19:28:05.086540 21526 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:05.086545 21526 net.cpp:86] Creating Layer relu1
I0428 19:28:05.086549 21526 net.cpp:408] relu1 <- ip1
I0428 19:28:05.086552 21526 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:05.087343 21526 net.cpp:124] Setting up relu1
I0428 19:28:05.087357 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.087360 21526 net.cpp:139] Memory required for data: 322800
I0428 19:28:05.087364 21526 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:05.087373 21526 net.cpp:86] Creating Layer ip2
I0428 19:28:05.087375 21526 net.cpp:408] ip2 <- ip1
I0428 19:28:05.087381 21526 net.cpp:382] ip2 -> ip2
I0428 19:28:05.087504 21526 net.cpp:124] Setting up ip2
I0428 19:28:05.087512 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.087515 21526 net.cpp:139] Memory required for data: 326800
I0428 19:28:05.087522 21526 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:05.087527 21526 net.cpp:86] Creating Layer relu2
I0428 19:28:05.087530 21526 net.cpp:408] relu2 <- ip2
I0428 19:28:05.087534 21526 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:05.087678 21526 net.cpp:124] Setting up relu2
I0428 19:28:05.087687 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.087704 21526 net.cpp:139] Memory required for data: 330800
I0428 19:28:05.087707 21526 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:05.087713 21526 net.cpp:86] Creating Layer ip3
I0428 19:28:05.087715 21526 net.cpp:408] ip3 <- ip2
I0428 19:28:05.087720 21526 net.cpp:382] ip3 -> ip3
I0428 19:28:05.087812 21526 net.cpp:124] Setting up ip3
I0428 19:28:05.087819 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.087822 21526 net.cpp:139] Memory required for data: 334800
I0428 19:28:05.087828 21526 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:05.087832 21526 net.cpp:86] Creating Layer relu3
I0428 19:28:05.087836 21526 net.cpp:408] relu3 <- ip3
I0428 19:28:05.087841 21526 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:05.087971 21526 net.cpp:124] Setting up relu3
I0428 19:28:05.087980 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.087982 21526 net.cpp:139] Memory required for data: 338800
I0428 19:28:05.087985 21526 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:05.087990 21526 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:05.087993 21526 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:05.087997 21526 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:05.088002 21526 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:05.088033 21526 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:05.088037 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.088042 21526 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:05.088044 21526 net.cpp:139] Memory required for data: 346800
I0428 19:28:05.088047 21526 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:05.088052 21526 net.cpp:86] Creating Layer accuracy
I0428 19:28:05.088054 21526 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:05.088058 21526 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:05.088062 21526 net.cpp:382] accuracy -> accuracy
I0428 19:28:05.088068 21526 net.cpp:124] Setting up accuracy
I0428 19:28:05.088071 21526 net.cpp:131] Top shape: (1)
I0428 19:28:05.088073 21526 net.cpp:139] Memory required for data: 346804
I0428 19:28:05.088076 21526 layer_factory.hpp:77] Creating layer loss
I0428 19:28:05.088080 21526 net.cpp:86] Creating Layer loss
I0428 19:28:05.088083 21526 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:05.088086 21526 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:05.088090 21526 net.cpp:382] loss -> loss
I0428 19:28:05.088095 21526 layer_factory.hpp:77] Creating layer loss
I0428 19:28:05.088305 21526 net.cpp:124] Setting up loss
I0428 19:28:05.088315 21526 net.cpp:131] Top shape: (1)
I0428 19:28:05.088317 21526 net.cpp:134]     with loss weight 1
I0428 19:28:05.088323 21526 net.cpp:139] Memory required for data: 346808
I0428 19:28:05.088326 21526 net.cpp:200] loss needs backward computation.
I0428 19:28:05.088330 21526 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:05.088333 21526 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:05.088336 21526 net.cpp:200] relu3 needs backward computation.
I0428 19:28:05.088340 21526 net.cpp:200] ip3 needs backward computation.
I0428 19:28:05.088342 21526 net.cpp:200] relu2 needs backward computation.
I0428 19:28:05.088345 21526 net.cpp:200] ip2 needs backward computation.
I0428 19:28:05.088347 21526 net.cpp:200] relu1 needs backward computation.
I0428 19:28:05.088351 21526 net.cpp:200] ip1 needs backward computation.
I0428 19:28:05.088353 21526 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:05.088356 21526 net.cpp:202] mnist does not need backward computation.
I0428 19:28:05.088359 21526 net.cpp:244] This network produces output accuracy
I0428 19:28:05.088362 21526 net.cpp:244] This network produces output loss
I0428 19:28:05.088371 21526 net.cpp:257] Network initialization done.
I0428 19:28:05.088398 21526 solver.cpp:56] Solver scaffolding done.
I0428 19:28:05.088596 21526 caffe.cpp:248] Starting Optimization
I0428 19:28:05.088603 21526 solver.cpp:273] Solving LeNet
I0428 19:28:05.088605 21526 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:05.088691 21526 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:05.088784 21526 blocking_queue.cpp:49] Waiting for data
I0428 19:28:05.166254 21533 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:05.166669 21526 solver.cpp:398]     Test net output #0: accuracy = 0.1165
I0428 19:28:05.166689 21526 solver.cpp:398]     Test net output #1: loss = 2.30954 (* 1 = 2.30954 loss)
I0428 19:28:05.167299 21526 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786698s/100 iters), loss = 2.3081
I0428 19:28:05.167320 21526 solver.cpp:238]     Train net output #0: loss = 2.3081 (* 1 = 2.3081 loss)
I0428 19:28:05.167330 21526 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:05.233646 21526 solver.cpp:219] Iteration 100 (1507.95 iter/s, 0.0663153s/100 iters), loss = 1.18657
I0428 19:28:05.233681 21526 solver.cpp:238]     Train net output #0: loss = 1.18657 (* 1 = 1.18657 loss)
I0428 19:28:05.233690 21526 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:05.285228 21526 solver.cpp:219] Iteration 200 (1940.28 iter/s, 0.0515389s/100 iters), loss = 1.36776
I0428 19:28:05.285254 21526 solver.cpp:238]     Train net output #0: loss = 1.36776 (* 1 = 1.36776 loss)
I0428 19:28:05.285264 21526 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:05.331521 21526 solver.cpp:219] Iteration 300 (2161.64 iter/s, 0.0462613s/100 iters), loss = 0.870132
I0428 19:28:05.331544 21526 solver.cpp:238]     Train net output #0: loss = 0.870132 (* 1 = 0.870132 loss)
I0428 19:28:05.331554 21526 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:05.375099 21526 solver.cpp:219] Iteration 400 (2296.28 iter/s, 0.0435487s/100 iters), loss = 0.943328
I0428 19:28:05.375120 21526 solver.cpp:238]     Train net output #0: loss = 0.943328 (* 1 = 0.943328 loss)
I0428 19:28:05.375144 21526 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:05.418305 21526 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:05.475752 21533 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:05.476142 21526 solver.cpp:398]     Test net output #0: accuracy = 0.6571
I0428 19:28:05.476161 21526 solver.cpp:398]     Test net output #1: loss = 0.94971 (* 1 = 0.94971 loss)
I0428 19:28:05.476616 21526 solver.cpp:219] Iteration 500 (985.362 iter/s, 0.101486s/100 iters), loss = 1.02462
I0428 19:28:05.476635 21526 solver.cpp:238]     Train net output #0: loss = 1.02462 (* 1 = 1.02462 loss)
I0428 19:28:05.476642 21526 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:05.534169 21526 solver.cpp:219] Iteration 600 (1738.4 iter/s, 0.0575242s/100 iters), loss = 0.989937
I0428 19:28:05.534194 21526 solver.cpp:238]     Train net output #0: loss = 0.989937 (* 1 = 0.989937 loss)
I0428 19:28:05.534219 21526 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:05.581571 21526 solver.cpp:219] Iteration 700 (2111.03 iter/s, 0.0473702s/100 iters), loss = 1.13581
I0428 19:28:05.581593 21526 solver.cpp:238]     Train net output #0: loss = 1.13581 (* 1 = 1.13581 loss)
I0428 19:28:05.581614 21526 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:05.626241 21526 solver.cpp:219] Iteration 800 (2240.13 iter/s, 0.0446403s/100 iters), loss = 1.17451
I0428 19:28:05.626277 21526 solver.cpp:238]     Train net output #0: loss = 1.17451 (* 1 = 1.17451 loss)
I0428 19:28:05.626301 21526 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:05.636837 21526 blocking_queue.cpp:49] Waiting for data
I0428 19:28:05.670711 21526 solver.cpp:219] Iteration 900 (2250.2 iter/s, 0.0444406s/100 iters), loss = 0.865016
I0428 19:28:05.670732 21526 solver.cpp:238]     Train net output #0: loss = 0.865016 (* 1 = 0.865016 loss)
I0428 19:28:05.670754 21526 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:05.686933 21532 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:05.715597 21526 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:05.716205 21526 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:05.716665 21526 solver.cpp:311] Iteration 1000, loss = 0.756647
I0428 19:28:05.716680 21526 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:05.792981 21533 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:05.793491 21526 solver.cpp:398]     Test net output #0: accuracy = 0.7482
I0428 19:28:05.793524 21526 solver.cpp:398]     Test net output #1: loss = 0.742141 (* 1 = 0.742141 loss)
I0428 19:28:05.793531 21526 solver.cpp:316] Optimization Done.
I0428 19:28:05.793536 21526 caffe.cpp:259] Optimization Done.
