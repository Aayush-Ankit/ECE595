I0428 19:29:23.476289 22009 caffe.cpp:218] Using GPUs 0
I0428 19:29:23.515897 22009 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:24.030838 22009 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test57.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:24.030978 22009 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test57.prototxt
I0428 19:29:24.031342 22009 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:24.031357 22009 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:24.031440 22009 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:24.031507 22009 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:24.031611 22009 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:24.031637 22009 net.cpp:86] Creating Layer mnist
I0428 19:29:24.031646 22009 net.cpp:382] mnist -> data
I0428 19:29:24.031672 22009 net.cpp:382] mnist -> label
I0428 19:29:24.032765 22009 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:24.035223 22009 net.cpp:124] Setting up mnist
I0428 19:29:24.035241 22009 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:24.035248 22009 net.cpp:131] Top shape: 64 (64)
I0428 19:29:24.035253 22009 net.cpp:139] Memory required for data: 200960
I0428 19:29:24.035260 22009 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:24.035276 22009 net.cpp:86] Creating Layer conv0
I0428 19:29:24.035282 22009 net.cpp:408] conv0 <- data
I0428 19:29:24.035293 22009 net.cpp:382] conv0 -> conv0
I0428 19:29:24.314991 22009 net.cpp:124] Setting up conv0
I0428 19:29:24.315018 22009 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:24.315022 22009 net.cpp:139] Memory required for data: 495872
I0428 19:29:24.315053 22009 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:24.315065 22009 net.cpp:86] Creating Layer pool0
I0428 19:29:24.315085 22009 net.cpp:408] pool0 <- conv0
I0428 19:29:24.315091 22009 net.cpp:382] pool0 -> pool0
I0428 19:29:24.315170 22009 net.cpp:124] Setting up pool0
I0428 19:29:24.315178 22009 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:24.315181 22009 net.cpp:139] Memory required for data: 569600
I0428 19:29:24.315184 22009 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:24.315192 22009 net.cpp:86] Creating Layer ip1
I0428 19:29:24.315196 22009 net.cpp:408] ip1 <- pool0
I0428 19:29:24.315201 22009 net.cpp:382] ip1 -> ip1
I0428 19:29:24.316211 22009 net.cpp:124] Setting up ip1
I0428 19:29:24.316226 22009 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:24.316229 22009 net.cpp:139] Memory required for data: 572160
I0428 19:29:24.316238 22009 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:24.316246 22009 net.cpp:86] Creating Layer relu1
I0428 19:29:24.316249 22009 net.cpp:408] relu1 <- ip1
I0428 19:29:24.316254 22009 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:24.316465 22009 net.cpp:124] Setting up relu1
I0428 19:29:24.316474 22009 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:24.316478 22009 net.cpp:139] Memory required for data: 574720
I0428 19:29:24.316480 22009 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:24.316488 22009 net.cpp:86] Creating Layer ip2
I0428 19:29:24.316490 22009 net.cpp:408] ip2 <- ip1
I0428 19:29:24.316494 22009 net.cpp:382] ip2 -> ip2
I0428 19:29:24.316584 22009 net.cpp:124] Setting up ip2
I0428 19:29:24.316591 22009 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:24.316593 22009 net.cpp:139] Memory required for data: 587520
I0428 19:29:24.316601 22009 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:24.316606 22009 net.cpp:86] Creating Layer relu2
I0428 19:29:24.316608 22009 net.cpp:408] relu2 <- ip2
I0428 19:29:24.316612 22009 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:24.317461 22009 net.cpp:124] Setting up relu2
I0428 19:29:24.317474 22009 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:24.317493 22009 net.cpp:139] Memory required for data: 600320
I0428 19:29:24.317497 22009 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:24.317503 22009 net.cpp:86] Creating Layer ip3
I0428 19:29:24.317507 22009 net.cpp:408] ip3 <- ip2
I0428 19:29:24.317512 22009 net.cpp:382] ip3 -> ip3
I0428 19:29:24.317622 22009 net.cpp:124] Setting up ip3
I0428 19:29:24.317629 22009 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:24.317632 22009 net.cpp:139] Memory required for data: 602880
I0428 19:29:24.317637 22009 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:24.317643 22009 net.cpp:86] Creating Layer relu3
I0428 19:29:24.317646 22009 net.cpp:408] relu3 <- ip3
I0428 19:29:24.317651 22009 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:24.317808 22009 net.cpp:124] Setting up relu3
I0428 19:29:24.317817 22009 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:24.317821 22009 net.cpp:139] Memory required for data: 605440
I0428 19:29:24.317823 22009 layer_factory.hpp:77] Creating layer loss
I0428 19:29:24.317829 22009 net.cpp:86] Creating Layer loss
I0428 19:29:24.317832 22009 net.cpp:408] loss <- ip3
I0428 19:29:24.317836 22009 net.cpp:408] loss <- label
I0428 19:29:24.317842 22009 net.cpp:382] loss -> loss
I0428 19:29:24.317860 22009 layer_factory.hpp:77] Creating layer loss
I0428 19:29:24.318106 22009 net.cpp:124] Setting up loss
I0428 19:29:24.318115 22009 net.cpp:131] Top shape: (1)
I0428 19:29:24.318119 22009 net.cpp:134]     with loss weight 1
I0428 19:29:24.318132 22009 net.cpp:139] Memory required for data: 605444
I0428 19:29:24.318151 22009 net.cpp:200] loss needs backward computation.
I0428 19:29:24.318156 22009 net.cpp:200] relu3 needs backward computation.
I0428 19:29:24.318157 22009 net.cpp:200] ip3 needs backward computation.
I0428 19:29:24.318161 22009 net.cpp:200] relu2 needs backward computation.
I0428 19:29:24.318163 22009 net.cpp:200] ip2 needs backward computation.
I0428 19:29:24.318166 22009 net.cpp:200] relu1 needs backward computation.
I0428 19:29:24.318168 22009 net.cpp:200] ip1 needs backward computation.
I0428 19:29:24.318182 22009 net.cpp:200] pool0 needs backward computation.
I0428 19:29:24.318186 22009 net.cpp:200] conv0 needs backward computation.
I0428 19:29:24.318188 22009 net.cpp:202] mnist does not need backward computation.
I0428 19:29:24.318191 22009 net.cpp:244] This network produces output loss
I0428 19:29:24.318198 22009 net.cpp:257] Network initialization done.
I0428 19:29:24.318548 22009 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test57.prototxt
I0428 19:29:24.318588 22009 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:24.318663 22009 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:24.318730 22009 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:24.318770 22009 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:24.318789 22009 net.cpp:86] Creating Layer mnist
I0428 19:29:24.318792 22009 net.cpp:382] mnist -> data
I0428 19:29:24.318799 22009 net.cpp:382] mnist -> label
I0428 19:29:24.318902 22009 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:24.320894 22009 net.cpp:124] Setting up mnist
I0428 19:29:24.320924 22009 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:24.320930 22009 net.cpp:131] Top shape: 100 (100)
I0428 19:29:24.320933 22009 net.cpp:139] Memory required for data: 314000
I0428 19:29:24.320937 22009 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:24.320968 22009 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:24.320974 22009 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:24.320981 22009 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:24.320987 22009 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:24.321069 22009 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:24.321075 22009 net.cpp:131] Top shape: 100 (100)
I0428 19:29:24.321080 22009 net.cpp:131] Top shape: 100 (100)
I0428 19:29:24.321084 22009 net.cpp:139] Memory required for data: 314800
I0428 19:29:24.321097 22009 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:24.321108 22009 net.cpp:86] Creating Layer conv0
I0428 19:29:24.321112 22009 net.cpp:408] conv0 <- data
I0428 19:29:24.321120 22009 net.cpp:382] conv0 -> conv0
I0428 19:29:24.322834 22009 net.cpp:124] Setting up conv0
I0428 19:29:24.322849 22009 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:24.322852 22009 net.cpp:139] Memory required for data: 775600
I0428 19:29:24.322865 22009 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:24.322871 22009 net.cpp:86] Creating Layer pool0
I0428 19:29:24.322875 22009 net.cpp:408] pool0 <- conv0
I0428 19:29:24.322880 22009 net.cpp:382] pool0 -> pool0
I0428 19:29:24.322934 22009 net.cpp:124] Setting up pool0
I0428 19:29:24.322942 22009 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:24.322945 22009 net.cpp:139] Memory required for data: 890800
I0428 19:29:24.322948 22009 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:24.322957 22009 net.cpp:86] Creating Layer ip1
I0428 19:29:24.322960 22009 net.cpp:408] ip1 <- pool0
I0428 19:29:24.322965 22009 net.cpp:382] ip1 -> ip1
I0428 19:29:24.323081 22009 net.cpp:124] Setting up ip1
I0428 19:29:24.323103 22009 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:24.323106 22009 net.cpp:139] Memory required for data: 894800
I0428 19:29:24.323113 22009 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:24.323119 22009 net.cpp:86] Creating Layer relu1
I0428 19:29:24.323122 22009 net.cpp:408] relu1 <- ip1
I0428 19:29:24.323127 22009 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:24.323388 22009 net.cpp:124] Setting up relu1
I0428 19:29:24.323398 22009 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:24.323401 22009 net.cpp:139] Memory required for data: 898800
I0428 19:29:24.323405 22009 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:24.323411 22009 net.cpp:86] Creating Layer ip2
I0428 19:29:24.323415 22009 net.cpp:408] ip2 <- ip1
I0428 19:29:24.323436 22009 net.cpp:382] ip2 -> ip2
I0428 19:29:24.323593 22009 net.cpp:124] Setting up ip2
I0428 19:29:24.323601 22009 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:24.323606 22009 net.cpp:139] Memory required for data: 918800
I0428 19:29:24.323613 22009 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:24.323621 22009 net.cpp:86] Creating Layer relu2
I0428 19:29:24.323623 22009 net.cpp:408] relu2 <- ip2
I0428 19:29:24.323628 22009 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:24.324486 22009 net.cpp:124] Setting up relu2
I0428 19:29:24.324497 22009 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:24.324501 22009 net.cpp:139] Memory required for data: 938800
I0428 19:29:24.324506 22009 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:24.324513 22009 net.cpp:86] Creating Layer ip3
I0428 19:29:24.324517 22009 net.cpp:408] ip3 <- ip2
I0428 19:29:24.324523 22009 net.cpp:382] ip3 -> ip3
I0428 19:29:24.324645 22009 net.cpp:124] Setting up ip3
I0428 19:29:24.324652 22009 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:24.324656 22009 net.cpp:139] Memory required for data: 942800
I0428 19:29:24.324661 22009 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:24.324666 22009 net.cpp:86] Creating Layer relu3
I0428 19:29:24.324669 22009 net.cpp:408] relu3 <- ip3
I0428 19:29:24.324676 22009 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:24.324928 22009 net.cpp:124] Setting up relu3
I0428 19:29:24.324950 22009 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:24.324954 22009 net.cpp:139] Memory required for data: 946800
I0428 19:29:24.324957 22009 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:24.324962 22009 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:24.324966 22009 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:24.324971 22009 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:24.324977 22009 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:24.325032 22009 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:24.325054 22009 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:24.325058 22009 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:24.325073 22009 net.cpp:139] Memory required for data: 954800
I0428 19:29:24.325075 22009 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:24.325081 22009 net.cpp:86] Creating Layer accuracy
I0428 19:29:24.325084 22009 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:24.325088 22009 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:24.325093 22009 net.cpp:382] accuracy -> accuracy
I0428 19:29:24.325101 22009 net.cpp:124] Setting up accuracy
I0428 19:29:24.325106 22009 net.cpp:131] Top shape: (1)
I0428 19:29:24.325109 22009 net.cpp:139] Memory required for data: 954804
I0428 19:29:24.325114 22009 layer_factory.hpp:77] Creating layer loss
I0428 19:29:24.325119 22009 net.cpp:86] Creating Layer loss
I0428 19:29:24.325124 22009 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:24.325127 22009 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:24.325132 22009 net.cpp:382] loss -> loss
I0428 19:29:24.325139 22009 layer_factory.hpp:77] Creating layer loss
I0428 19:29:24.325428 22009 net.cpp:124] Setting up loss
I0428 19:29:24.325436 22009 net.cpp:131] Top shape: (1)
I0428 19:29:24.325439 22009 net.cpp:134]     with loss weight 1
I0428 19:29:24.325445 22009 net.cpp:139] Memory required for data: 954808
I0428 19:29:24.325449 22009 net.cpp:200] loss needs backward computation.
I0428 19:29:24.325453 22009 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:24.325456 22009 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:24.325459 22009 net.cpp:200] relu3 needs backward computation.
I0428 19:29:24.325464 22009 net.cpp:200] ip3 needs backward computation.
I0428 19:29:24.325466 22009 net.cpp:200] relu2 needs backward computation.
I0428 19:29:24.325469 22009 net.cpp:200] ip2 needs backward computation.
I0428 19:29:24.325472 22009 net.cpp:200] relu1 needs backward computation.
I0428 19:29:24.325475 22009 net.cpp:200] ip1 needs backward computation.
I0428 19:29:24.325479 22009 net.cpp:200] pool0 needs backward computation.
I0428 19:29:24.325482 22009 net.cpp:200] conv0 needs backward computation.
I0428 19:29:24.325485 22009 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:24.325489 22009 net.cpp:202] mnist does not need backward computation.
I0428 19:29:24.325491 22009 net.cpp:244] This network produces output accuracy
I0428 19:29:24.325495 22009 net.cpp:244] This network produces output loss
I0428 19:29:24.325505 22009 net.cpp:257] Network initialization done.
I0428 19:29:24.325541 22009 solver.cpp:56] Solver scaffolding done.
I0428 19:29:24.325832 22009 caffe.cpp:248] Starting Optimization
I0428 19:29:24.325839 22009 solver.cpp:273] Solving LeNet
I0428 19:29:24.325841 22009 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:24.327389 22009 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:24.329264 22009 blocking_queue.cpp:49] Waiting for data
I0428 19:29:24.403007 22016 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:24.403406 22009 solver.cpp:398]     Test net output #0: accuracy = 0.0797
I0428 19:29:24.403424 22009 solver.cpp:398]     Test net output #1: loss = 2.31291 (* 1 = 2.31291 loss)
I0428 19:29:24.405123 22009 solver.cpp:219] Iteration 0 (-8.48024e-31 iter/s, 0.0792515s/100 iters), loss = 2.31825
I0428 19:29:24.405187 22009 solver.cpp:238]     Train net output #0: loss = 2.31825 (* 1 = 2.31825 loss)
I0428 19:29:24.405216 22009 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:24.463052 22009 solver.cpp:219] Iteration 100 (1728.01 iter/s, 0.0578701s/100 iters), loss = 1.15412
I0428 19:29:24.463093 22009 solver.cpp:238]     Train net output #0: loss = 1.15412 (* 1 = 1.15412 loss)
I0428 19:29:24.463116 22009 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:24.520010 22009 solver.cpp:219] Iteration 200 (1757.11 iter/s, 0.0569117s/100 iters), loss = 0.487646
I0428 19:29:24.520033 22009 solver.cpp:238]     Train net output #0: loss = 0.487646 (* 1 = 0.487646 loss)
I0428 19:29:24.520040 22009 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:24.575474 22009 solver.cpp:219] Iteration 300 (1804 iter/s, 0.0554323s/100 iters), loss = 0.382614
I0428 19:29:24.575497 22009 solver.cpp:238]     Train net output #0: loss = 0.382614 (* 1 = 0.382614 loss)
I0428 19:29:24.575520 22009 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:24.630281 22009 solver.cpp:219] Iteration 400 (1825.62 iter/s, 0.0547758s/100 iters), loss = 0.340274
I0428 19:29:24.630303 22009 solver.cpp:238]     Train net output #0: loss = 0.340274 (* 1 = 0.340274 loss)
I0428 19:29:24.630309 22009 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:24.684157 22009 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:24.746162 22016 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:24.746556 22009 solver.cpp:398]     Test net output #0: accuracy = 0.9081
I0428 19:29:24.746575 22009 solver.cpp:398]     Test net output #1: loss = 0.30211 (* 1 = 0.30211 loss)
I0428 19:29:24.747217 22009 solver.cpp:219] Iteration 500 (855.411 iter/s, 0.116903s/100 iters), loss = 0.412257
I0428 19:29:24.747242 22009 solver.cpp:238]     Train net output #0: loss = 0.412257 (* 1 = 0.412257 loss)
I0428 19:29:24.747253 22009 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:24.807299 22009 solver.cpp:219] Iteration 600 (1665.3 iter/s, 0.0600493s/100 iters), loss = 0.273178
I0428 19:29:24.807324 22009 solver.cpp:238]     Train net output #0: loss = 0.273178 (* 1 = 0.273178 loss)
I0428 19:29:24.807346 22009 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:24.862689 22009 solver.cpp:219] Iteration 700 (1806.45 iter/s, 0.0553573s/100 iters), loss = 0.414509
I0428 19:29:24.862713 22009 solver.cpp:238]     Train net output #0: loss = 0.414509 (* 1 = 0.414509 loss)
I0428 19:29:24.862735 22009 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:24.918754 22009 solver.cpp:219] Iteration 800 (1784.69 iter/s, 0.0560323s/100 iters), loss = 0.347354
I0428 19:29:24.918777 22009 solver.cpp:238]     Train net output #0: loss = 0.347354 (* 1 = 0.347354 loss)
I0428 19:29:24.918800 22009 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:24.975288 22009 solver.cpp:219] Iteration 900 (1769.84 iter/s, 0.0565023s/100 iters), loss = 0.386266
I0428 19:29:24.975312 22009 solver.cpp:238]     Train net output #0: loss = 0.386266 (* 1 = 0.386266 loss)
I0428 19:29:24.975319 22009 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:24.994177 22015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:25.030632 22009 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:25.031229 22009 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:25.031612 22009 solver.cpp:311] Iteration 1000, loss = 0.28935
I0428 19:29:25.031630 22009 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:25.093118 22016 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:25.093549 22009 solver.cpp:398]     Test net output #0: accuracy = 0.9295
I0428 19:29:25.093569 22009 solver.cpp:398]     Test net output #1: loss = 0.221426 (* 1 = 0.221426 loss)
I0428 19:29:25.093580 22009 solver.cpp:316] Optimization Done.
I0428 19:29:25.093585 22009 caffe.cpp:259] Optimization Done.
