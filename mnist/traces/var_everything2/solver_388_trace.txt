I0428 19:42:14.757839 25021 caffe.cpp:218] Using GPUs 0
I0428 19:42:14.792613 25021 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:15.302656 25021 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test388.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:15.302804 25021 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test388.prototxt
I0428 19:42:15.303220 25021 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:15.303244 25021 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:15.303356 25021 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:15.303465 25021 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:15.303568 25021 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:15.303602 25021 net.cpp:86] Creating Layer mnist
I0428 19:42:15.303614 25021 net.cpp:382] mnist -> data
I0428 19:42:15.303642 25021 net.cpp:382] mnist -> label
I0428 19:42:15.304720 25021 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:15.307173 25021 net.cpp:124] Setting up mnist
I0428 19:42:15.307191 25021 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:15.307204 25021 net.cpp:131] Top shape: 64 (64)
I0428 19:42:15.307219 25021 net.cpp:139] Memory required for data: 200960
I0428 19:42:15.307230 25021 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:15.307260 25021 net.cpp:86] Creating Layer conv0
I0428 19:42:15.307284 25021 net.cpp:408] conv0 <- data
I0428 19:42:15.307306 25021 net.cpp:382] conv0 -> conv0
I0428 19:42:15.587744 25021 net.cpp:124] Setting up conv0
I0428 19:42:15.587774 25021 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:15.587779 25021 net.cpp:139] Memory required for data: 495872
I0428 19:42:15.587800 25021 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:15.587818 25021 net.cpp:86] Creating Layer pool0
I0428 19:42:15.587826 25021 net.cpp:408] pool0 <- conv0
I0428 19:42:15.587836 25021 net.cpp:382] pool0 -> pool0
I0428 19:42:15.587893 25021 net.cpp:124] Setting up pool0
I0428 19:42:15.587903 25021 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:15.587908 25021 net.cpp:139] Memory required for data: 569600
I0428 19:42:15.587913 25021 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:15.587929 25021 net.cpp:86] Creating Layer conv1
I0428 19:42:15.587935 25021 net.cpp:408] conv1 <- pool0
I0428 19:42:15.587944 25021 net.cpp:382] conv1 -> conv1
I0428 19:42:15.589900 25021 net.cpp:124] Setting up conv1
I0428 19:42:15.589916 25021 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:42:15.589922 25021 net.cpp:139] Memory required for data: 733440
I0428 19:42:15.589936 25021 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:15.589951 25021 net.cpp:86] Creating Layer pool1
I0428 19:42:15.589956 25021 net.cpp:408] pool1 <- conv1
I0428 19:42:15.589967 25021 net.cpp:382] pool1 -> pool1
I0428 19:42:15.590031 25021 net.cpp:124] Setting up pool1
I0428 19:42:15.590040 25021 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:42:15.590044 25021 net.cpp:139] Memory required for data: 774400
I0428 19:42:15.590050 25021 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:15.590062 25021 net.cpp:86] Creating Layer ip1
I0428 19:42:15.590071 25021 net.cpp:408] ip1 <- pool1
I0428 19:42:15.590080 25021 net.cpp:382] ip1 -> ip1
I0428 19:42:15.591114 25021 net.cpp:124] Setting up ip1
I0428 19:42:15.591127 25021 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:15.591132 25021 net.cpp:139] Memory required for data: 787200
I0428 19:42:15.591145 25021 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:15.591156 25021 net.cpp:86] Creating Layer relu1
I0428 19:42:15.591167 25021 net.cpp:408] relu1 <- ip1
I0428 19:42:15.591176 25021 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:15.591358 25021 net.cpp:124] Setting up relu1
I0428 19:42:15.591368 25021 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:15.591373 25021 net.cpp:139] Memory required for data: 800000
I0428 19:42:15.591378 25021 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:15.591390 25021 net.cpp:86] Creating Layer ip2
I0428 19:42:15.591397 25021 net.cpp:408] ip2 <- ip1
I0428 19:42:15.591406 25021 net.cpp:382] ip2 -> ip2
I0428 19:42:15.592403 25021 net.cpp:124] Setting up ip2
I0428 19:42:15.592417 25021 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:15.592422 25021 net.cpp:139] Memory required for data: 812800
I0428 19:42:15.592447 25021 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:15.592474 25021 net.cpp:86] Creating Layer relu2
I0428 19:42:15.592481 25021 net.cpp:408] relu2 <- ip2
I0428 19:42:15.592489 25021 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:15.593336 25021 net.cpp:124] Setting up relu2
I0428 19:42:15.593351 25021 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:42:15.593356 25021 net.cpp:139] Memory required for data: 825600
I0428 19:42:15.593361 25021 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:15.593372 25021 net.cpp:86] Creating Layer ip3
I0428 19:42:15.593379 25021 net.cpp:408] ip3 <- ip2
I0428 19:42:15.593389 25021 net.cpp:382] ip3 -> ip3
I0428 19:42:15.593504 25021 net.cpp:124] Setting up ip3
I0428 19:42:15.593514 25021 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:15.593519 25021 net.cpp:139] Memory required for data: 828160
I0428 19:42:15.593531 25021 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:15.593542 25021 net.cpp:86] Creating Layer relu3
I0428 19:42:15.593549 25021 net.cpp:408] relu3 <- ip3
I0428 19:42:15.593559 25021 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:15.593753 25021 net.cpp:124] Setting up relu3
I0428 19:42:15.593763 25021 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:15.593768 25021 net.cpp:139] Memory required for data: 830720
I0428 19:42:15.593773 25021 layer_factory.hpp:77] Creating layer loss
I0428 19:42:15.593785 25021 net.cpp:86] Creating Layer loss
I0428 19:42:15.593789 25021 net.cpp:408] loss <- ip3
I0428 19:42:15.593796 25021 net.cpp:408] loss <- label
I0428 19:42:15.593806 25021 net.cpp:382] loss -> loss
I0428 19:42:15.593828 25021 layer_factory.hpp:77] Creating layer loss
I0428 19:42:15.594149 25021 net.cpp:124] Setting up loss
I0428 19:42:15.594172 25021 net.cpp:131] Top shape: (1)
I0428 19:42:15.594177 25021 net.cpp:134]     with loss weight 1
I0428 19:42:15.594197 25021 net.cpp:139] Memory required for data: 830724
I0428 19:42:15.594202 25021 net.cpp:200] loss needs backward computation.
I0428 19:42:15.594208 25021 net.cpp:200] relu3 needs backward computation.
I0428 19:42:15.594213 25021 net.cpp:200] ip3 needs backward computation.
I0428 19:42:15.594218 25021 net.cpp:200] relu2 needs backward computation.
I0428 19:42:15.594223 25021 net.cpp:200] ip2 needs backward computation.
I0428 19:42:15.594228 25021 net.cpp:200] relu1 needs backward computation.
I0428 19:42:15.594231 25021 net.cpp:200] ip1 needs backward computation.
I0428 19:42:15.594236 25021 net.cpp:200] pool1 needs backward computation.
I0428 19:42:15.594241 25021 net.cpp:200] conv1 needs backward computation.
I0428 19:42:15.594246 25021 net.cpp:200] pool0 needs backward computation.
I0428 19:42:15.594251 25021 net.cpp:200] conv0 needs backward computation.
I0428 19:42:15.594256 25021 net.cpp:202] mnist does not need backward computation.
I0428 19:42:15.594261 25021 net.cpp:244] This network produces output loss
I0428 19:42:15.594279 25021 net.cpp:257] Network initialization done.
I0428 19:42:15.594599 25021 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test388.prototxt
I0428 19:42:15.594633 25021 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:15.594760 25021 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:42:15.594882 25021 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:15.594940 25021 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:15.594959 25021 net.cpp:86] Creating Layer mnist
I0428 19:42:15.594967 25021 net.cpp:382] mnist -> data
I0428 19:42:15.594980 25021 net.cpp:382] mnist -> label
I0428 19:42:15.595100 25021 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:15.597298 25021 net.cpp:124] Setting up mnist
I0428 19:42:15.597313 25021 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:15.597321 25021 net.cpp:131] Top shape: 100 (100)
I0428 19:42:15.597326 25021 net.cpp:139] Memory required for data: 314000
I0428 19:42:15.597332 25021 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:15.597391 25021 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:15.597398 25021 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:15.597404 25021 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:15.597417 25021 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:15.597512 25021 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:15.597519 25021 net.cpp:131] Top shape: 100 (100)
I0428 19:42:15.597527 25021 net.cpp:131] Top shape: 100 (100)
I0428 19:42:15.597530 25021 net.cpp:139] Memory required for data: 314800
I0428 19:42:15.597537 25021 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:15.597550 25021 net.cpp:86] Creating Layer conv0
I0428 19:42:15.597556 25021 net.cpp:408] conv0 <- data
I0428 19:42:15.597568 25021 net.cpp:382] conv0 -> conv0
I0428 19:42:15.599313 25021 net.cpp:124] Setting up conv0
I0428 19:42:15.599330 25021 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:15.599337 25021 net.cpp:139] Memory required for data: 775600
I0428 19:42:15.599354 25021 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:15.599378 25021 net.cpp:86] Creating Layer pool0
I0428 19:42:15.599385 25021 net.cpp:408] pool0 <- conv0
I0428 19:42:15.599393 25021 net.cpp:382] pool0 -> pool0
I0428 19:42:15.599442 25021 net.cpp:124] Setting up pool0
I0428 19:42:15.599450 25021 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:15.599455 25021 net.cpp:139] Memory required for data: 890800
I0428 19:42:15.599462 25021 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:15.599491 25021 net.cpp:86] Creating Layer conv1
I0428 19:42:15.599498 25021 net.cpp:408] conv1 <- pool0
I0428 19:42:15.599508 25021 net.cpp:382] conv1 -> conv1
I0428 19:42:15.601267 25021 net.cpp:124] Setting up conv1
I0428 19:42:15.601300 25021 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:42:15.601306 25021 net.cpp:139] Memory required for data: 1146800
I0428 19:42:15.601320 25021 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:15.601330 25021 net.cpp:86] Creating Layer pool1
I0428 19:42:15.601336 25021 net.cpp:408] pool1 <- conv1
I0428 19:42:15.601347 25021 net.cpp:382] pool1 -> pool1
I0428 19:42:15.601397 25021 net.cpp:124] Setting up pool1
I0428 19:42:15.601408 25021 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:42:15.601414 25021 net.cpp:139] Memory required for data: 1210800
I0428 19:42:15.601420 25021 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:15.601430 25021 net.cpp:86] Creating Layer ip1
I0428 19:42:15.601436 25021 net.cpp:408] ip1 <- pool1
I0428 19:42:15.601447 25021 net.cpp:382] ip1 -> ip1
I0428 19:42:15.601656 25021 net.cpp:124] Setting up ip1
I0428 19:42:15.601665 25021 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:15.601682 25021 net.cpp:139] Memory required for data: 1230800
I0428 19:42:15.601696 25021 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:15.601707 25021 net.cpp:86] Creating Layer relu1
I0428 19:42:15.601717 25021 net.cpp:408] relu1 <- ip1
I0428 19:42:15.601727 25021 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:15.601889 25021 net.cpp:124] Setting up relu1
I0428 19:42:15.601900 25021 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:15.601907 25021 net.cpp:139] Memory required for data: 1250800
I0428 19:42:15.601912 25021 layer_factory.hpp:77] Creating layer ip2
I0428 19:42:15.601925 25021 net.cpp:86] Creating Layer ip2
I0428 19:42:15.601933 25021 net.cpp:408] ip2 <- ip1
I0428 19:42:15.601941 25021 net.cpp:382] ip2 -> ip2
I0428 19:42:15.602110 25021 net.cpp:124] Setting up ip2
I0428 19:42:15.602119 25021 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:15.602124 25021 net.cpp:139] Memory required for data: 1270800
I0428 19:42:15.602133 25021 layer_factory.hpp:77] Creating layer relu2
I0428 19:42:15.602141 25021 net.cpp:86] Creating Layer relu2
I0428 19:42:15.602147 25021 net.cpp:408] relu2 <- ip2
I0428 19:42:15.602156 25021 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:42:15.602432 25021 net.cpp:124] Setting up relu2
I0428 19:42:15.602442 25021 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:42:15.602447 25021 net.cpp:139] Memory required for data: 1290800
I0428 19:42:15.602452 25021 layer_factory.hpp:77] Creating layer ip3
I0428 19:42:15.602461 25021 net.cpp:86] Creating Layer ip3
I0428 19:42:15.602468 25021 net.cpp:408] ip3 <- ip2
I0428 19:42:15.602478 25021 net.cpp:382] ip3 -> ip3
I0428 19:42:15.602609 25021 net.cpp:124] Setting up ip3
I0428 19:42:15.602619 25021 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:15.602624 25021 net.cpp:139] Memory required for data: 1294800
I0428 19:42:15.602638 25021 layer_factory.hpp:77] Creating layer relu3
I0428 19:42:15.602648 25021 net.cpp:86] Creating Layer relu3
I0428 19:42:15.602653 25021 net.cpp:408] relu3 <- ip3
I0428 19:42:15.602660 25021 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:42:15.603523 25021 net.cpp:124] Setting up relu3
I0428 19:42:15.603538 25021 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:15.603543 25021 net.cpp:139] Memory required for data: 1298800
I0428 19:42:15.603549 25021 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:42:15.603560 25021 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:42:15.603566 25021 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:42:15.603575 25021 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:42:15.603586 25021 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:42:15.603667 25021 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:42:15.603675 25021 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:15.603682 25021 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:15.603688 25021 net.cpp:139] Memory required for data: 1306800
I0428 19:42:15.603693 25021 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:15.603703 25021 net.cpp:86] Creating Layer accuracy
I0428 19:42:15.603708 25021 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:42:15.603715 25021 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:15.603725 25021 net.cpp:382] accuracy -> accuracy
I0428 19:42:15.603737 25021 net.cpp:124] Setting up accuracy
I0428 19:42:15.603745 25021 net.cpp:131] Top shape: (1)
I0428 19:42:15.603750 25021 net.cpp:139] Memory required for data: 1306804
I0428 19:42:15.603756 25021 layer_factory.hpp:77] Creating layer loss
I0428 19:42:15.603775 25021 net.cpp:86] Creating Layer loss
I0428 19:42:15.603795 25021 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:42:15.603801 25021 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:15.603809 25021 net.cpp:382] loss -> loss
I0428 19:42:15.603819 25021 layer_factory.hpp:77] Creating layer loss
I0428 19:42:15.604063 25021 net.cpp:124] Setting up loss
I0428 19:42:15.604076 25021 net.cpp:131] Top shape: (1)
I0428 19:42:15.604081 25021 net.cpp:134]     with loss weight 1
I0428 19:42:15.604090 25021 net.cpp:139] Memory required for data: 1306808
I0428 19:42:15.604115 25021 net.cpp:200] loss needs backward computation.
I0428 19:42:15.604136 25021 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:15.604142 25021 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:42:15.604147 25021 net.cpp:200] relu3 needs backward computation.
I0428 19:42:15.604152 25021 net.cpp:200] ip3 needs backward computation.
I0428 19:42:15.604157 25021 net.cpp:200] relu2 needs backward computation.
I0428 19:42:15.604163 25021 net.cpp:200] ip2 needs backward computation.
I0428 19:42:15.604167 25021 net.cpp:200] relu1 needs backward computation.
I0428 19:42:15.604172 25021 net.cpp:200] ip1 needs backward computation.
I0428 19:42:15.604178 25021 net.cpp:200] pool1 needs backward computation.
I0428 19:42:15.604183 25021 net.cpp:200] conv1 needs backward computation.
I0428 19:42:15.604188 25021 net.cpp:200] pool0 needs backward computation.
I0428 19:42:15.604194 25021 net.cpp:200] conv0 needs backward computation.
I0428 19:42:15.604200 25021 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:15.604207 25021 net.cpp:202] mnist does not need backward computation.
I0428 19:42:15.604210 25021 net.cpp:244] This network produces output accuracy
I0428 19:42:15.604216 25021 net.cpp:244] This network produces output loss
I0428 19:42:15.604233 25021 net.cpp:257] Network initialization done.
I0428 19:42:15.604281 25021 solver.cpp:56] Solver scaffolding done.
I0428 19:42:15.604666 25021 caffe.cpp:248] Starting Optimization
I0428 19:42:15.604673 25021 solver.cpp:273] Solving LeNet
I0428 19:42:15.604678 25021 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:15.605564 25021 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:15.608280 25021 blocking_queue.cpp:49] Waiting for data
I0428 19:42:15.676131 25028 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:15.676548 25021 solver.cpp:398]     Test net output #0: accuracy = 0.1003
I0428 19:42:15.676568 25021 solver.cpp:398]     Test net output #1: loss = 2.32613 (* 1 = 2.32613 loss)
I0428 19:42:15.678577 25021 solver.cpp:219] Iteration 0 (0 iter/s, 0.0738633s/100 iters), loss = 2.26808
I0428 19:42:15.678602 25021 solver.cpp:238]     Train net output #0: loss = 2.26808 (* 1 = 2.26808 loss)
I0428 19:42:15.678634 25021 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:15.753788 25021 solver.cpp:219] Iteration 100 (1330.21 iter/s, 0.0751759s/100 iters), loss = 0.93676
I0428 19:42:15.753815 25021 solver.cpp:238]     Train net output #0: loss = 0.93676 (* 1 = 0.93676 loss)
I0428 19:42:15.753840 25021 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:15.828393 25021 solver.cpp:219] Iteration 200 (1341 iter/s, 0.0745709s/100 iters), loss = 0.957942
I0428 19:42:15.828429 25021 solver.cpp:238]     Train net output #0: loss = 0.957942 (* 1 = 0.957942 loss)
I0428 19:42:15.828454 25021 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:15.902535 25021 solver.cpp:219] Iteration 300 (1349.38 iter/s, 0.0741079s/100 iters), loss = 0.931109
I0428 19:42:15.902560 25021 solver.cpp:238]     Train net output #0: loss = 0.931109 (* 1 = 0.931109 loss)
I0428 19:42:15.902585 25021 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:15.977152 25021 solver.cpp:219] Iteration 400 (1340.75 iter/s, 0.0745851s/100 iters), loss = 0.713828
I0428 19:42:15.977179 25021 solver.cpp:238]     Train net output #0: loss = 0.713828 (* 1 = 0.713828 loss)
I0428 19:42:15.977202 25021 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:16.050904 25021 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:16.104141 25028 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:16.104560 25021 solver.cpp:398]     Test net output #0: accuracy = 0.685
I0428 19:42:16.104579 25021 solver.cpp:398]     Test net output #1: loss = 0.820534 (* 1 = 0.820534 loss)
I0428 19:42:16.105401 25021 solver.cpp:219] Iteration 500 (779.959 iter/s, 0.128212s/100 iters), loss = 0.893595
I0428 19:42:16.105434 25021 solver.cpp:238]     Train net output #0: loss = 0.893595 (* 1 = 0.893595 loss)
I0428 19:42:16.105458 25021 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:16.180352 25021 solver.cpp:219] Iteration 600 (1334.94 iter/s, 0.0749097s/100 iters), loss = 0.700261
I0428 19:42:16.180380 25021 solver.cpp:238]     Train net output #0: loss = 0.700261 (* 1 = 0.700261 loss)
I0428 19:42:16.180405 25021 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:16.256165 25021 solver.cpp:219] Iteration 700 (1319.7 iter/s, 0.0757749s/100 iters), loss = 0.861637
I0428 19:42:16.256197 25021 solver.cpp:238]     Train net output #0: loss = 0.861637 (* 1 = 0.861637 loss)
I0428 19:42:16.256206 25021 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:16.335288 25021 solver.cpp:219] Iteration 800 (1264.65 iter/s, 0.0790733s/100 iters), loss = 0.747441
I0428 19:42:16.335316 25021 solver.cpp:238]     Train net output #0: loss = 0.74744 (* 1 = 0.74744 loss)
I0428 19:42:16.335325 25021 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:16.432091 25021 solver.cpp:219] Iteration 900 (1033.5 iter/s, 0.0967588s/100 iters), loss = 0.640584
I0428 19:42:16.432128 25021 solver.cpp:238]     Train net output #0: loss = 0.640584 (* 1 = 0.640584 loss)
I0428 19:42:16.432137 25021 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:16.460739 25027 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:16.514603 25021 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:16.515547 25021 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:16.516136 25021 solver.cpp:311] Iteration 1000, loss = 0.714654
I0428 19:42:16.516155 25021 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:16.592538 25028 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:16.593168 25021 solver.cpp:398]     Test net output #0: accuracy = 0.7883
I0428 19:42:16.593207 25021 solver.cpp:398]     Test net output #1: loss = 0.547723 (* 1 = 0.547723 loss)
I0428 19:42:16.593216 25021 solver.cpp:316] Optimization Done.
I0428 19:42:16.593221 25021 caffe.cpp:259] Optimization Done.
