I0428 20:11:14.763490 32032 caffe.cpp:218] Using GPUs 0
I0428 20:11:14.796646 32032 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:15.302968 32032 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1154.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:15.303107 32032 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1154.prototxt
I0428 20:11:15.303519 32032 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:15.303541 32032 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:15.303644 32032 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:15.303727 32032 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:15.303828 32032 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:15.303850 32032 net.cpp:86] Creating Layer mnist
I0428 20:11:15.303858 32032 net.cpp:382] mnist -> data
I0428 20:11:15.303882 32032 net.cpp:382] mnist -> label
I0428 20:11:15.304975 32032 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:15.307421 32032 net.cpp:124] Setting up mnist
I0428 20:11:15.307453 32032 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:15.307461 32032 net.cpp:131] Top shape: 64 (64)
I0428 20:11:15.307463 32032 net.cpp:139] Memory required for data: 200960
I0428 20:11:15.307471 32032 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:15.307487 32032 net.cpp:86] Creating Layer conv0
I0428 20:11:15.307509 32032 net.cpp:408] conv0 <- data
I0428 20:11:15.307523 32032 net.cpp:382] conv0 -> conv0
I0428 20:11:15.579762 32032 net.cpp:124] Setting up conv0
I0428 20:11:15.579788 32032 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:15.579792 32032 net.cpp:139] Memory required for data: 3887360
I0428 20:11:15.579807 32032 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:15.579819 32032 net.cpp:86] Creating Layer pool0
I0428 20:11:15.579823 32032 net.cpp:408] pool0 <- conv0
I0428 20:11:15.579844 32032 net.cpp:382] pool0 -> pool0
I0428 20:11:15.579886 32032 net.cpp:124] Setting up pool0
I0428 20:11:15.579893 32032 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:15.579896 32032 net.cpp:139] Memory required for data: 4808960
I0428 20:11:15.579900 32032 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:15.579910 32032 net.cpp:86] Creating Layer conv1
I0428 20:11:15.579913 32032 net.cpp:408] conv1 <- pool0
I0428 20:11:15.579918 32032 net.cpp:382] conv1 -> conv1
I0428 20:11:15.582000 32032 net.cpp:124] Setting up conv1
I0428 20:11:15.582015 32032 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:15.582036 32032 net.cpp:139] Memory required for data: 5628160
I0428 20:11:15.582046 32032 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:15.582052 32032 net.cpp:86] Creating Layer pool1
I0428 20:11:15.582056 32032 net.cpp:408] pool1 <- conv1
I0428 20:11:15.582062 32032 net.cpp:382] pool1 -> pool1
I0428 20:11:15.582098 32032 net.cpp:124] Setting up pool1
I0428 20:11:15.582104 32032 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:15.582108 32032 net.cpp:139] Memory required for data: 5832960
I0428 20:11:15.582111 32032 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:15.582118 32032 net.cpp:86] Creating Layer ip1
I0428 20:11:15.582121 32032 net.cpp:408] ip1 <- pool1
I0428 20:11:15.582125 32032 net.cpp:382] ip1 -> ip1
I0428 20:11:15.582346 32032 net.cpp:124] Setting up ip1
I0428 20:11:15.582353 32032 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:15.582356 32032 net.cpp:139] Memory required for data: 5839360
I0428 20:11:15.582363 32032 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:15.582370 32032 net.cpp:86] Creating Layer relu1
I0428 20:11:15.582375 32032 net.cpp:408] relu1 <- ip1
I0428 20:11:15.582378 32032 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:15.582562 32032 net.cpp:124] Setting up relu1
I0428 20:11:15.582571 32032 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:15.582574 32032 net.cpp:139] Memory required for data: 5845760
I0428 20:11:15.582577 32032 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:15.582583 32032 net.cpp:86] Creating Layer ip2
I0428 20:11:15.582587 32032 net.cpp:408] ip2 <- ip1
I0428 20:11:15.582592 32032 net.cpp:382] ip2 -> ip2
I0428 20:11:15.582685 32032 net.cpp:124] Setting up ip2
I0428 20:11:15.582692 32032 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:15.582695 32032 net.cpp:139] Memory required for data: 5848320
I0428 20:11:15.582700 32032 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:15.582707 32032 net.cpp:86] Creating Layer relu2
I0428 20:11:15.582710 32032 net.cpp:408] relu2 <- ip2
I0428 20:11:15.582715 32032 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:15.583485 32032 net.cpp:124] Setting up relu2
I0428 20:11:15.583498 32032 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:15.583518 32032 net.cpp:139] Memory required for data: 5850880
I0428 20:11:15.583521 32032 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:15.583529 32032 net.cpp:86] Creating Layer ip3
I0428 20:11:15.583533 32032 net.cpp:408] ip3 <- ip2
I0428 20:11:15.583537 32032 net.cpp:382] ip3 -> ip3
I0428 20:11:15.583657 32032 net.cpp:124] Setting up ip3
I0428 20:11:15.583664 32032 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:15.583667 32032 net.cpp:139] Memory required for data: 5853440
I0428 20:11:15.583675 32032 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:15.583680 32032 net.cpp:86] Creating Layer relu3
I0428 20:11:15.583683 32032 net.cpp:408] relu3 <- ip3
I0428 20:11:15.583688 32032 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:15.583855 32032 net.cpp:124] Setting up relu3
I0428 20:11:15.583865 32032 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:15.583868 32032 net.cpp:139] Memory required for data: 5856000
I0428 20:11:15.583871 32032 layer_factory.hpp:77] Creating layer loss
I0428 20:11:15.583878 32032 net.cpp:86] Creating Layer loss
I0428 20:11:15.583880 32032 net.cpp:408] loss <- ip3
I0428 20:11:15.583884 32032 net.cpp:408] loss <- label
I0428 20:11:15.583890 32032 net.cpp:382] loss -> loss
I0428 20:11:15.583920 32032 layer_factory.hpp:77] Creating layer loss
I0428 20:11:15.584143 32032 net.cpp:124] Setting up loss
I0428 20:11:15.584152 32032 net.cpp:131] Top shape: (1)
I0428 20:11:15.584156 32032 net.cpp:134]     with loss weight 1
I0428 20:11:15.584168 32032 net.cpp:139] Memory required for data: 5856004
I0428 20:11:15.584172 32032 net.cpp:200] loss needs backward computation.
I0428 20:11:15.584175 32032 net.cpp:200] relu3 needs backward computation.
I0428 20:11:15.584178 32032 net.cpp:200] ip3 needs backward computation.
I0428 20:11:15.584180 32032 net.cpp:200] relu2 needs backward computation.
I0428 20:11:15.584183 32032 net.cpp:200] ip2 needs backward computation.
I0428 20:11:15.584187 32032 net.cpp:200] relu1 needs backward computation.
I0428 20:11:15.584188 32032 net.cpp:200] ip1 needs backward computation.
I0428 20:11:15.584192 32032 net.cpp:200] pool1 needs backward computation.
I0428 20:11:15.584194 32032 net.cpp:200] conv1 needs backward computation.
I0428 20:11:15.584197 32032 net.cpp:200] pool0 needs backward computation.
I0428 20:11:15.584200 32032 net.cpp:200] conv0 needs backward computation.
I0428 20:11:15.584203 32032 net.cpp:202] mnist does not need backward computation.
I0428 20:11:15.584206 32032 net.cpp:244] This network produces output loss
I0428 20:11:15.584215 32032 net.cpp:257] Network initialization done.
I0428 20:11:15.584579 32032 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1154.prototxt
I0428 20:11:15.584622 32032 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:15.584729 32032 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:15.584861 32032 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:15.584913 32032 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:15.584926 32032 net.cpp:86] Creating Layer mnist
I0428 20:11:15.584931 32032 net.cpp:382] mnist -> data
I0428 20:11:15.584940 32032 net.cpp:382] mnist -> label
I0428 20:11:15.585029 32032 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:15.587095 32032 net.cpp:124] Setting up mnist
I0428 20:11:15.587107 32032 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:15.587129 32032 net.cpp:131] Top shape: 100 (100)
I0428 20:11:15.587133 32032 net.cpp:139] Memory required for data: 314000
I0428 20:11:15.587137 32032 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:15.587144 32032 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:15.587147 32032 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:15.587152 32032 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:15.587159 32032 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:15.587262 32032 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:15.587270 32032 net.cpp:131] Top shape: 100 (100)
I0428 20:11:15.587272 32032 net.cpp:131] Top shape: 100 (100)
I0428 20:11:15.587275 32032 net.cpp:139] Memory required for data: 314800
I0428 20:11:15.587278 32032 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:15.587286 32032 net.cpp:86] Creating Layer conv0
I0428 20:11:15.587291 32032 net.cpp:408] conv0 <- data
I0428 20:11:15.587296 32032 net.cpp:382] conv0 -> conv0
I0428 20:11:15.588800 32032 net.cpp:124] Setting up conv0
I0428 20:11:15.588835 32032 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:15.588855 32032 net.cpp:139] Memory required for data: 6074800
I0428 20:11:15.588881 32032 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:15.588887 32032 net.cpp:86] Creating Layer pool0
I0428 20:11:15.588891 32032 net.cpp:408] pool0 <- conv0
I0428 20:11:15.588896 32032 net.cpp:382] pool0 -> pool0
I0428 20:11:15.588945 32032 net.cpp:124] Setting up pool0
I0428 20:11:15.588953 32032 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:15.588955 32032 net.cpp:139] Memory required for data: 7514800
I0428 20:11:15.588958 32032 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:15.588966 32032 net.cpp:86] Creating Layer conv1
I0428 20:11:15.588969 32032 net.cpp:408] conv1 <- pool0
I0428 20:11:15.588974 32032 net.cpp:382] conv1 -> conv1
I0428 20:11:15.590489 32032 net.cpp:124] Setting up conv1
I0428 20:11:15.590502 32032 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:15.590523 32032 net.cpp:139] Memory required for data: 8794800
I0428 20:11:15.590531 32032 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:15.590538 32032 net.cpp:86] Creating Layer pool1
I0428 20:11:15.590540 32032 net.cpp:408] pool1 <- conv1
I0428 20:11:15.590545 32032 net.cpp:382] pool1 -> pool1
I0428 20:11:15.590581 32032 net.cpp:124] Setting up pool1
I0428 20:11:15.590589 32032 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:15.590591 32032 net.cpp:139] Memory required for data: 9114800
I0428 20:11:15.590595 32032 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:15.590600 32032 net.cpp:86] Creating Layer ip1
I0428 20:11:15.590602 32032 net.cpp:408] ip1 <- pool1
I0428 20:11:15.590607 32032 net.cpp:382] ip1 -> ip1
I0428 20:11:15.590878 32032 net.cpp:124] Setting up ip1
I0428 20:11:15.590898 32032 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:15.590921 32032 net.cpp:139] Memory required for data: 9124800
I0428 20:11:15.590929 32032 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:15.590934 32032 net.cpp:86] Creating Layer relu1
I0428 20:11:15.590937 32032 net.cpp:408] relu1 <- ip1
I0428 20:11:15.590943 32032 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:15.591095 32032 net.cpp:124] Setting up relu1
I0428 20:11:15.591104 32032 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:15.591109 32032 net.cpp:139] Memory required for data: 9134800
I0428 20:11:15.591111 32032 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:15.591119 32032 net.cpp:86] Creating Layer ip2
I0428 20:11:15.591130 32032 net.cpp:408] ip2 <- ip1
I0428 20:11:15.591135 32032 net.cpp:382] ip2 -> ip2
I0428 20:11:15.591245 32032 net.cpp:124] Setting up ip2
I0428 20:11:15.591251 32032 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:15.591270 32032 net.cpp:139] Memory required for data: 9138800
I0428 20:11:15.591275 32032 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:15.591280 32032 net.cpp:86] Creating Layer relu2
I0428 20:11:15.591289 32032 net.cpp:408] relu2 <- ip2
I0428 20:11:15.591294 32032 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:15.591442 32032 net.cpp:124] Setting up relu2
I0428 20:11:15.591450 32032 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:15.591454 32032 net.cpp:139] Memory required for data: 9142800
I0428 20:11:15.591456 32032 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:15.591462 32032 net.cpp:86] Creating Layer ip3
I0428 20:11:15.591465 32032 net.cpp:408] ip3 <- ip2
I0428 20:11:15.591470 32032 net.cpp:382] ip3 -> ip3
I0428 20:11:15.591562 32032 net.cpp:124] Setting up ip3
I0428 20:11:15.591568 32032 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:15.591572 32032 net.cpp:139] Memory required for data: 9146800
I0428 20:11:15.591593 32032 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:15.591598 32032 net.cpp:86] Creating Layer relu3
I0428 20:11:15.591600 32032 net.cpp:408] relu3 <- ip3
I0428 20:11:15.591604 32032 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:15.592432 32032 net.cpp:124] Setting up relu3
I0428 20:11:15.592444 32032 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:15.592447 32032 net.cpp:139] Memory required for data: 9150800
I0428 20:11:15.592452 32032 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:15.592456 32032 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:15.592460 32032 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:15.592465 32032 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:15.592473 32032 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:15.592512 32032 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:15.592519 32032 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:15.592522 32032 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:15.592525 32032 net.cpp:139] Memory required for data: 9158800
I0428 20:11:15.592528 32032 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:15.592533 32032 net.cpp:86] Creating Layer accuracy
I0428 20:11:15.592536 32032 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:15.592540 32032 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:15.592545 32032 net.cpp:382] accuracy -> accuracy
I0428 20:11:15.592551 32032 net.cpp:124] Setting up accuracy
I0428 20:11:15.592555 32032 net.cpp:131] Top shape: (1)
I0428 20:11:15.592558 32032 net.cpp:139] Memory required for data: 9158804
I0428 20:11:15.592561 32032 layer_factory.hpp:77] Creating layer loss
I0428 20:11:15.592566 32032 net.cpp:86] Creating Layer loss
I0428 20:11:15.592568 32032 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:15.592572 32032 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:15.592576 32032 net.cpp:382] loss -> loss
I0428 20:11:15.592582 32032 layer_factory.hpp:77] Creating layer loss
I0428 20:11:15.592864 32032 net.cpp:124] Setting up loss
I0428 20:11:15.592875 32032 net.cpp:131] Top shape: (1)
I0428 20:11:15.592895 32032 net.cpp:134]     with loss weight 1
I0428 20:11:15.592913 32032 net.cpp:139] Memory required for data: 9158808
I0428 20:11:15.592933 32032 net.cpp:200] loss needs backward computation.
I0428 20:11:15.592937 32032 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:15.592941 32032 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:15.592957 32032 net.cpp:200] relu3 needs backward computation.
I0428 20:11:15.592960 32032 net.cpp:200] ip3 needs backward computation.
I0428 20:11:15.592964 32032 net.cpp:200] relu2 needs backward computation.
I0428 20:11:15.592967 32032 net.cpp:200] ip2 needs backward computation.
I0428 20:11:15.592970 32032 net.cpp:200] relu1 needs backward computation.
I0428 20:11:15.592973 32032 net.cpp:200] ip1 needs backward computation.
I0428 20:11:15.592977 32032 net.cpp:200] pool1 needs backward computation.
I0428 20:11:15.592980 32032 net.cpp:200] conv1 needs backward computation.
I0428 20:11:15.592983 32032 net.cpp:200] pool0 needs backward computation.
I0428 20:11:15.592988 32032 net.cpp:200] conv0 needs backward computation.
I0428 20:11:15.592993 32032 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:15.592996 32032 net.cpp:202] mnist does not need backward computation.
I0428 20:11:15.592999 32032 net.cpp:244] This network produces output accuracy
I0428 20:11:15.593003 32032 net.cpp:244] This network produces output loss
I0428 20:11:15.593014 32032 net.cpp:257] Network initialization done.
I0428 20:11:15.593065 32032 solver.cpp:56] Solver scaffolding done.
I0428 20:11:15.593426 32032 caffe.cpp:248] Starting Optimization
I0428 20:11:15.593432 32032 solver.cpp:273] Solving LeNet
I0428 20:11:15.593436 32032 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:15.594353 32032 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:15.599879 32032 blocking_queue.cpp:49] Waiting for data
I0428 20:11:15.688467 32039 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:15.689276 32032 solver.cpp:398]     Test net output #0: accuracy = 0.1036
I0428 20:11:15.689306 32032 solver.cpp:398]     Test net output #1: loss = 2.30195 (* 1 = 2.30195 loss)
I0428 20:11:15.693526 32032 solver.cpp:219] Iteration 0 (-4.85146e-31 iter/s, 0.100063s/100 iters), loss = 2.2699
I0428 20:11:15.693558 32032 solver.cpp:238]     Train net output #0: loss = 2.2699 (* 1 = 2.2699 loss)
I0428 20:11:15.693572 32032 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:15.815937 32032 solver.cpp:219] Iteration 100 (817.2 iter/s, 0.122369s/100 iters), loss = 1.1691
I0428 20:11:15.815960 32032 solver.cpp:238]     Train net output #0: loss = 1.1691 (* 1 = 1.1691 loss)
I0428 20:11:15.815966 32032 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:15.941905 32032 solver.cpp:219] Iteration 200 (794.076 iter/s, 0.125933s/100 iters), loss = 0.708723
I0428 20:11:15.941943 32032 solver.cpp:238]     Train net output #0: loss = 0.708723 (* 1 = 0.708723 loss)
I0428 20:11:15.941965 32032 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:16.068673 32032 solver.cpp:219] Iteration 300 (789.046 iter/s, 0.126735s/100 iters), loss = 0.439118
I0428 20:11:16.068713 32032 solver.cpp:238]     Train net output #0: loss = 0.439118 (* 1 = 0.439118 loss)
I0428 20:11:16.068720 32032 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:16.196056 32032 solver.cpp:219] Iteration 400 (785.252 iter/s, 0.127348s/100 iters), loss = 0.538719
I0428 20:11:16.196101 32032 solver.cpp:238]     Train net output #0: loss = 0.538719 (* 1 = 0.538719 loss)
I0428 20:11:16.196107 32032 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:16.322918 32032 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:16.430474 32039 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:16.431183 32032 solver.cpp:398]     Test net output #0: accuracy = 0.9235
I0428 20:11:16.431211 32032 solver.cpp:398]     Test net output #1: loss = 0.372813 (* 1 = 0.372813 loss)
I0428 20:11:16.432555 32032 solver.cpp:219] Iteration 500 (422.948 iter/s, 0.236435s/100 iters), loss = 0.304504
I0428 20:11:16.432612 32032 solver.cpp:238]     Train net output #0: loss = 0.304504 (* 1 = 0.304504 loss)
I0428 20:11:16.432622 32032 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:16.568792 32032 solver.cpp:219] Iteration 600 (734.395 iter/s, 0.136167s/100 iters), loss = 0.273289
I0428 20:11:16.568861 32032 solver.cpp:238]     Train net output #0: loss = 0.273289 (* 1 = 0.273289 loss)
I0428 20:11:16.568873 32032 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:16.698801 32032 solver.cpp:219] Iteration 700 (769.571 iter/s, 0.129943s/100 iters), loss = 0.453589
I0428 20:11:16.698832 32032 solver.cpp:238]     Train net output #0: loss = 0.453589 (* 1 = 0.453589 loss)
I0428 20:11:16.698839 32032 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:16.823084 32032 solver.cpp:219] Iteration 800 (804.887 iter/s, 0.124241s/100 iters), loss = 0.438849
I0428 20:11:16.823115 32032 solver.cpp:238]     Train net output #0: loss = 0.438849 (* 1 = 0.438849 loss)
I0428 20:11:16.823123 32032 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:16.948760 32032 solver.cpp:219] Iteration 900 (795.972 iter/s, 0.125633s/100 iters), loss = 0.358844
I0428 20:11:16.948793 32032 solver.cpp:238]     Train net output #0: loss = 0.358844 (* 1 = 0.358844 loss)
I0428 20:11:16.948801 32032 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:16.992617 32038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:17.078057 32032 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:17.079705 32032 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:17.080773 32032 solver.cpp:311] Iteration 1000, loss = 0.386232
I0428 20:11:17.080792 32032 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:17.188722 32039 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:17.189399 32032 solver.cpp:398]     Test net output #0: accuracy = 0.9548
I0428 20:11:17.189424 32032 solver.cpp:398]     Test net output #1: loss = 0.324939 (* 1 = 0.324939 loss)
I0428 20:11:17.189441 32032 solver.cpp:316] Optimization Done.
I0428 20:11:17.189447 32032 caffe.cpp:259] Optimization Done.
