I0428 19:43:38.508249 25395 caffe.cpp:218] Using GPUs 0
I0428 19:43:38.545529 25395 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:39.064803 25395 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test427.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:39.064985 25395 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test427.prototxt
I0428 19:43:39.065394 25395 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:39.065418 25395 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:39.065529 25395 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:39.065636 25395 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:39.065768 25395 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:39.065801 25395 net.cpp:86] Creating Layer mnist
I0428 19:43:39.065814 25395 net.cpp:382] mnist -> data
I0428 19:43:39.065845 25395 net.cpp:382] mnist -> label
I0428 19:43:39.067123 25395 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:39.069588 25395 net.cpp:124] Setting up mnist
I0428 19:43:39.069610 25395 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:39.069622 25395 net.cpp:131] Top shape: 64 (64)
I0428 19:43:39.069628 25395 net.cpp:139] Memory required for data: 200960
I0428 19:43:39.069639 25395 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:39.069664 25395 net.cpp:86] Creating Layer conv0
I0428 19:43:39.069689 25395 net.cpp:408] conv0 <- data
I0428 19:43:39.069706 25395 net.cpp:382] conv0 -> conv0
I0428 19:43:39.347586 25395 net.cpp:124] Setting up conv0
I0428 19:43:39.347616 25395 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:39.347621 25395 net.cpp:139] Memory required for data: 495872
I0428 19:43:39.347657 25395 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:39.347674 25395 net.cpp:86] Creating Layer pool0
I0428 19:43:39.347688 25395 net.cpp:408] pool0 <- conv0
I0428 19:43:39.347697 25395 net.cpp:382] pool0 -> pool0
I0428 19:43:39.347753 25395 net.cpp:124] Setting up pool0
I0428 19:43:39.347761 25395 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:39.347766 25395 net.cpp:139] Memory required for data: 569600
I0428 19:43:39.347771 25395 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:39.347787 25395 net.cpp:86] Creating Layer conv1
I0428 19:43:39.347795 25395 net.cpp:408] conv1 <- pool0
I0428 19:43:39.347802 25395 net.cpp:382] conv1 -> conv1
I0428 19:43:39.350670 25395 net.cpp:124] Setting up conv1
I0428 19:43:39.350687 25395 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:39.350692 25395 net.cpp:139] Memory required for data: 979200
I0428 19:43:39.350720 25395 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:39.350733 25395 net.cpp:86] Creating Layer pool1
I0428 19:43:39.350738 25395 net.cpp:408] pool1 <- conv1
I0428 19:43:39.350746 25395 net.cpp:382] pool1 -> pool1
I0428 19:43:39.350787 25395 net.cpp:124] Setting up pool1
I0428 19:43:39.350796 25395 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:39.350801 25395 net.cpp:139] Memory required for data: 1081600
I0428 19:43:39.350806 25395 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:39.350817 25395 net.cpp:86] Creating Layer ip1
I0428 19:43:39.350826 25395 net.cpp:408] ip1 <- pool1
I0428 19:43:39.350834 25395 net.cpp:382] ip1 -> ip1
I0428 19:43:39.351059 25395 net.cpp:124] Setting up ip1
I0428 19:43:39.351068 25395 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:39.351073 25395 net.cpp:139] Memory required for data: 1094400
I0428 19:43:39.351085 25395 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:39.351094 25395 net.cpp:86] Creating Layer relu1
I0428 19:43:39.351101 25395 net.cpp:408] relu1 <- ip1
I0428 19:43:39.351109 25395 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:39.351310 25395 net.cpp:124] Setting up relu1
I0428 19:43:39.351320 25395 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:39.351325 25395 net.cpp:139] Memory required for data: 1107200
I0428 19:43:39.351330 25395 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:39.351339 25395 net.cpp:86] Creating Layer ip2
I0428 19:43:39.351346 25395 net.cpp:408] ip2 <- ip1
I0428 19:43:39.351353 25395 net.cpp:382] ip2 -> ip2
I0428 19:43:39.351464 25395 net.cpp:124] Setting up ip2
I0428 19:43:39.351472 25395 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:39.351477 25395 net.cpp:139] Memory required for data: 1120000
I0428 19:43:39.351487 25395 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:39.351496 25395 net.cpp:86] Creating Layer relu2
I0428 19:43:39.351501 25395 net.cpp:408] relu2 <- ip2
I0428 19:43:39.351508 25395 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:39.352282 25395 net.cpp:124] Setting up relu2
I0428 19:43:39.352295 25395 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:39.352301 25395 net.cpp:139] Memory required for data: 1132800
I0428 19:43:39.352308 25395 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:39.352318 25395 net.cpp:86] Creating Layer ip3
I0428 19:43:39.352324 25395 net.cpp:408] ip3 <- ip2
I0428 19:43:39.352349 25395 net.cpp:382] ip3 -> ip3
I0428 19:43:39.352476 25395 net.cpp:124] Setting up ip3
I0428 19:43:39.352486 25395 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:39.352491 25395 net.cpp:139] Memory required for data: 1135360
I0428 19:43:39.352505 25395 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:39.352516 25395 net.cpp:86] Creating Layer relu3
I0428 19:43:39.352524 25395 net.cpp:408] relu3 <- ip3
I0428 19:43:39.352530 25395 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:39.352727 25395 net.cpp:124] Setting up relu3
I0428 19:43:39.352738 25395 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:39.352743 25395 net.cpp:139] Memory required for data: 1137920
I0428 19:43:39.352748 25395 layer_factory.hpp:77] Creating layer loss
I0428 19:43:39.352757 25395 net.cpp:86] Creating Layer loss
I0428 19:43:39.352762 25395 net.cpp:408] loss <- ip3
I0428 19:43:39.352768 25395 net.cpp:408] loss <- label
I0428 19:43:39.352777 25395 net.cpp:382] loss -> loss
I0428 19:43:39.352798 25395 layer_factory.hpp:77] Creating layer loss
I0428 19:43:39.353113 25395 net.cpp:124] Setting up loss
I0428 19:43:39.353126 25395 net.cpp:131] Top shape: (1)
I0428 19:43:39.353132 25395 net.cpp:134]     with loss weight 1
I0428 19:43:39.353153 25395 net.cpp:139] Memory required for data: 1137924
I0428 19:43:39.353160 25395 net.cpp:200] loss needs backward computation.
I0428 19:43:39.353168 25395 net.cpp:200] relu3 needs backward computation.
I0428 19:43:39.353173 25395 net.cpp:200] ip3 needs backward computation.
I0428 19:43:39.353179 25395 net.cpp:200] relu2 needs backward computation.
I0428 19:43:39.353184 25395 net.cpp:200] ip2 needs backward computation.
I0428 19:43:39.353190 25395 net.cpp:200] relu1 needs backward computation.
I0428 19:43:39.353195 25395 net.cpp:200] ip1 needs backward computation.
I0428 19:43:39.353201 25395 net.cpp:200] pool1 needs backward computation.
I0428 19:43:39.353207 25395 net.cpp:200] conv1 needs backward computation.
I0428 19:43:39.353214 25395 net.cpp:200] pool0 needs backward computation.
I0428 19:43:39.353219 25395 net.cpp:200] conv0 needs backward computation.
I0428 19:43:39.353225 25395 net.cpp:202] mnist does not need backward computation.
I0428 19:43:39.353231 25395 net.cpp:244] This network produces output loss
I0428 19:43:39.353246 25395 net.cpp:257] Network initialization done.
I0428 19:43:39.353633 25395 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test427.prototxt
I0428 19:43:39.353667 25395 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:39.353763 25395 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:39.353876 25395 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:39.353936 25395 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:39.353955 25395 net.cpp:86] Creating Layer mnist
I0428 19:43:39.353962 25395 net.cpp:382] mnist -> data
I0428 19:43:39.353974 25395 net.cpp:382] mnist -> label
I0428 19:43:39.354101 25395 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:39.356324 25395 net.cpp:124] Setting up mnist
I0428 19:43:39.356355 25395 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:39.356377 25395 net.cpp:131] Top shape: 100 (100)
I0428 19:43:39.356384 25395 net.cpp:139] Memory required for data: 314000
I0428 19:43:39.356389 25395 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:39.356402 25395 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:39.356410 25395 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:39.356417 25395 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:39.356428 25395 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:39.356523 25395 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:39.356531 25395 net.cpp:131] Top shape: 100 (100)
I0428 19:43:39.356539 25395 net.cpp:131] Top shape: 100 (100)
I0428 19:43:39.356544 25395 net.cpp:139] Memory required for data: 314800
I0428 19:43:39.356549 25395 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:39.356562 25395 net.cpp:86] Creating Layer conv0
I0428 19:43:39.356568 25395 net.cpp:408] conv0 <- data
I0428 19:43:39.356577 25395 net.cpp:382] conv0 -> conv0
I0428 19:43:39.358227 25395 net.cpp:124] Setting up conv0
I0428 19:43:39.358243 25395 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:39.358249 25395 net.cpp:139] Memory required for data: 775600
I0428 19:43:39.358278 25395 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:39.358286 25395 net.cpp:86] Creating Layer pool0
I0428 19:43:39.358292 25395 net.cpp:408] pool0 <- conv0
I0428 19:43:39.358300 25395 net.cpp:382] pool0 -> pool0
I0428 19:43:39.358340 25395 net.cpp:124] Setting up pool0
I0428 19:43:39.358350 25395 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:39.358355 25395 net.cpp:139] Memory required for data: 890800
I0428 19:43:39.358359 25395 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:39.358371 25395 net.cpp:86] Creating Layer conv1
I0428 19:43:39.358378 25395 net.cpp:408] conv1 <- pool0
I0428 19:43:39.358387 25395 net.cpp:382] conv1 -> conv1
I0428 19:43:39.359788 25395 net.cpp:124] Setting up conv1
I0428 19:43:39.359803 25395 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:39.359809 25395 net.cpp:139] Memory required for data: 1530800
I0428 19:43:39.359838 25395 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:39.359848 25395 net.cpp:86] Creating Layer pool1
I0428 19:43:39.359853 25395 net.cpp:408] pool1 <- conv1
I0428 19:43:39.359861 25395 net.cpp:382] pool1 -> pool1
I0428 19:43:39.359946 25395 net.cpp:124] Setting up pool1
I0428 19:43:39.359954 25395 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:39.359961 25395 net.cpp:139] Memory required for data: 1690800
I0428 19:43:39.359966 25395 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:39.359977 25395 net.cpp:86] Creating Layer ip1
I0428 19:43:39.359982 25395 net.cpp:408] ip1 <- pool1
I0428 19:43:39.359992 25395 net.cpp:382] ip1 -> ip1
I0428 19:43:39.360307 25395 net.cpp:124] Setting up ip1
I0428 19:43:39.360333 25395 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:39.360366 25395 net.cpp:139] Memory required for data: 1710800
I0428 19:43:39.360380 25395 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:39.360389 25395 net.cpp:86] Creating Layer relu1
I0428 19:43:39.360395 25395 net.cpp:408] relu1 <- ip1
I0428 19:43:39.360404 25395 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:39.360613 25395 net.cpp:124] Setting up relu1
I0428 19:43:39.360623 25395 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:39.360654 25395 net.cpp:139] Memory required for data: 1730800
I0428 19:43:39.360661 25395 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:39.360672 25395 net.cpp:86] Creating Layer ip2
I0428 19:43:39.360679 25395 net.cpp:408] ip2 <- ip1
I0428 19:43:39.360688 25395 net.cpp:382] ip2 -> ip2
I0428 19:43:39.360815 25395 net.cpp:124] Setting up ip2
I0428 19:43:39.360826 25395 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:39.360831 25395 net.cpp:139] Memory required for data: 1750800
I0428 19:43:39.360841 25395 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:39.360848 25395 net.cpp:86] Creating Layer relu2
I0428 19:43:39.360872 25395 net.cpp:408] relu2 <- ip2
I0428 19:43:39.360879 25395 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:39.361063 25395 net.cpp:124] Setting up relu2
I0428 19:43:39.361088 25395 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:39.361094 25395 net.cpp:139] Memory required for data: 1770800
I0428 19:43:39.361099 25395 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:39.361122 25395 net.cpp:86] Creating Layer ip3
I0428 19:43:39.361136 25395 net.cpp:408] ip3 <- ip2
I0428 19:43:39.361145 25395 net.cpp:382] ip3 -> ip3
I0428 19:43:39.361246 25395 net.cpp:124] Setting up ip3
I0428 19:43:39.361254 25395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:39.361259 25395 net.cpp:139] Memory required for data: 1774800
I0428 19:43:39.361271 25395 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:39.361280 25395 net.cpp:86] Creating Layer relu3
I0428 19:43:39.361286 25395 net.cpp:408] relu3 <- ip3
I0428 19:43:39.361294 25395 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:39.362187 25395 net.cpp:124] Setting up relu3
I0428 19:43:39.362200 25395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:39.362206 25395 net.cpp:139] Memory required for data: 1778800
I0428 19:43:39.362211 25395 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:39.362220 25395 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:39.362224 25395 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:39.362232 25395 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:39.362241 25395 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:39.362287 25395 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:39.362294 25395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:39.362301 25395 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:39.362305 25395 net.cpp:139] Memory required for data: 1786800
I0428 19:43:39.362310 25395 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:39.362318 25395 net.cpp:86] Creating Layer accuracy
I0428 19:43:39.362323 25395 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:39.362330 25395 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:39.362337 25395 net.cpp:382] accuracy -> accuracy
I0428 19:43:39.362349 25395 net.cpp:124] Setting up accuracy
I0428 19:43:39.362356 25395 net.cpp:131] Top shape: (1)
I0428 19:43:39.362361 25395 net.cpp:139] Memory required for data: 1786804
I0428 19:43:39.362366 25395 layer_factory.hpp:77] Creating layer loss
I0428 19:43:39.362388 25395 net.cpp:86] Creating Layer loss
I0428 19:43:39.362393 25395 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:39.362401 25395 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:39.362408 25395 net.cpp:382] loss -> loss
I0428 19:43:39.362418 25395 layer_factory.hpp:77] Creating layer loss
I0428 19:43:39.362646 25395 net.cpp:124] Setting up loss
I0428 19:43:39.362658 25395 net.cpp:131] Top shape: (1)
I0428 19:43:39.362663 25395 net.cpp:134]     with loss weight 1
I0428 19:43:39.362686 25395 net.cpp:139] Memory required for data: 1786808
I0428 19:43:39.362704 25395 net.cpp:200] loss needs backward computation.
I0428 19:43:39.362710 25395 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:39.362716 25395 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:39.362721 25395 net.cpp:200] relu3 needs backward computation.
I0428 19:43:39.362736 25395 net.cpp:200] ip3 needs backward computation.
I0428 19:43:39.362741 25395 net.cpp:200] relu2 needs backward computation.
I0428 19:43:39.362746 25395 net.cpp:200] ip2 needs backward computation.
I0428 19:43:39.362751 25395 net.cpp:200] relu1 needs backward computation.
I0428 19:43:39.362756 25395 net.cpp:200] ip1 needs backward computation.
I0428 19:43:39.362766 25395 net.cpp:200] pool1 needs backward computation.
I0428 19:43:39.362772 25395 net.cpp:200] conv1 needs backward computation.
I0428 19:43:39.362777 25395 net.cpp:200] pool0 needs backward computation.
I0428 19:43:39.362782 25395 net.cpp:200] conv0 needs backward computation.
I0428 19:43:39.362788 25395 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:39.362794 25395 net.cpp:202] mnist does not need backward computation.
I0428 19:43:39.362799 25395 net.cpp:244] This network produces output accuracy
I0428 19:43:39.362817 25395 net.cpp:244] This network produces output loss
I0428 19:43:39.362833 25395 net.cpp:257] Network initialization done.
I0428 19:43:39.362893 25395 solver.cpp:56] Solver scaffolding done.
I0428 19:43:39.363236 25395 caffe.cpp:248] Starting Optimization
I0428 19:43:39.363243 25395 solver.cpp:273] Solving LeNet
I0428 19:43:39.363247 25395 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:39.364032 25395 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:39.366827 25395 blocking_queue.cpp:49] Waiting for data
I0428 19:43:39.437445 25402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:39.438020 25395 solver.cpp:398]     Test net output #0: accuracy = 0.1282
I0428 19:43:39.438056 25395 solver.cpp:398]     Test net output #1: loss = 2.30571 (* 1 = 2.30571 loss)
I0428 19:43:39.439568 25395 solver.cpp:219] Iteration 0 (0 iter/s, 0.0762821s/100 iters), loss = 2.31115
I0428 19:43:39.439611 25395 solver.cpp:238]     Train net output #0: loss = 2.31115 (* 1 = 2.31115 loss)
I0428 19:43:39.439635 25395 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:39.534551 25395 solver.cpp:219] Iteration 100 (1053.35 iter/s, 0.094935s/100 iters), loss = 0.757536
I0428 19:43:39.534586 25395 solver.cpp:238]     Train net output #0: loss = 0.757536 (* 1 = 0.757536 loss)
I0428 19:43:39.534598 25395 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:39.618131 25395 solver.cpp:219] Iteration 200 (1197.05 iter/s, 0.0835389s/100 iters), loss = 0.308541
I0428 19:43:39.618160 25395 solver.cpp:238]     Train net output #0: loss = 0.308541 (* 1 = 0.308541 loss)
I0428 19:43:39.618186 25395 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:39.700620 25395 solver.cpp:219] Iteration 300 (1212.8 iter/s, 0.0824535s/100 iters), loss = 0.277566
I0428 19:43:39.700649 25395 solver.cpp:238]     Train net output #0: loss = 0.277566 (* 1 = 0.277566 loss)
I0428 19:43:39.700659 25395 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:39.802598 25395 solver.cpp:219] Iteration 400 (980.977 iter/s, 0.101939s/100 iters), loss = 0.189059
I0428 19:43:39.802647 25395 solver.cpp:238]     Train net output #0: loss = 0.189059 (* 1 = 0.189059 loss)
I0428 19:43:39.802661 25395 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:39.894230 25395 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:39.970753 25402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:39.971391 25395 solver.cpp:398]     Test net output #0: accuracy = 0.959
I0428 19:43:39.971421 25395 solver.cpp:398]     Test net output #1: loss = 0.131482 (* 1 = 0.131482 loss)
I0428 19:43:39.972587 25395 solver.cpp:219] Iteration 500 (588.493 iter/s, 0.169926s/100 iters), loss = 0.0628797
I0428 19:43:39.972625 25395 solver.cpp:238]     Train net output #0: loss = 0.0628797 (* 1 = 0.0628797 loss)
I0428 19:43:39.972671 25395 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:40.065117 25395 solver.cpp:219] Iteration 600 (1081.26 iter/s, 0.0924848s/100 iters), loss = 0.137492
I0428 19:43:40.065150 25395 solver.cpp:238]     Train net output #0: loss = 0.137492 (* 1 = 0.137492 loss)
I0428 19:43:40.065157 25395 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:40.155764 25395 solver.cpp:219] Iteration 700 (1103.69 iter/s, 0.0906054s/100 iters), loss = 0.175237
I0428 19:43:40.155797 25395 solver.cpp:238]     Train net output #0: loss = 0.175237 (* 1 = 0.175237 loss)
I0428 19:43:40.155805 25395 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:40.246541 25395 solver.cpp:219] Iteration 800 (1102.17 iter/s, 0.0907305s/100 iters), loss = 0.388769
I0428 19:43:40.246573 25395 solver.cpp:238]     Train net output #0: loss = 0.388769 (* 1 = 0.388769 loss)
I0428 19:43:40.246582 25395 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:40.337309 25395 solver.cpp:219] Iteration 900 (1102.25 iter/s, 0.0907233s/100 iters), loss = 0.0981669
I0428 19:43:40.337342 25395 solver.cpp:238]     Train net output #0: loss = 0.0981669 (* 1 = 0.0981669 loss)
I0428 19:43:40.337349 25395 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:40.367645 25401 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:40.426949 25395 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:40.428156 25395 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:40.429028 25395 solver.cpp:311] Iteration 1000, loss = 0.167664
I0428 19:43:40.429061 25395 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:40.484356 25402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:40.484905 25395 solver.cpp:398]     Test net output #0: accuracy = 0.9718
I0428 19:43:40.484933 25395 solver.cpp:398]     Test net output #1: loss = 0.0871339 (* 1 = 0.0871339 loss)
I0428 19:43:40.484941 25395 solver.cpp:316] Optimization Done.
I0428 19:43:40.484946 25395 caffe.cpp:259] Optimization Done.
