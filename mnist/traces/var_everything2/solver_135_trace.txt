I0428 19:31:51.096706 22684 caffe.cpp:218] Using GPUs 0
I0428 19:31:51.133839 22684 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:51.640848 22684 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test135.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:51.641023 22684 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test135.prototxt
I0428 19:31:51.641398 22684 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:51.641417 22684 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:51.641505 22684 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:51.641579 22684 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:51.641677 22684 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:51.641700 22684 net.cpp:86] Creating Layer mnist
I0428 19:31:51.641710 22684 net.cpp:382] mnist -> data
I0428 19:31:51.641731 22684 net.cpp:382] mnist -> label
I0428 19:31:51.642822 22684 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:51.645278 22684 net.cpp:124] Setting up mnist
I0428 19:31:51.645297 22684 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:51.645305 22684 net.cpp:131] Top shape: 64 (64)
I0428 19:31:51.645309 22684 net.cpp:139] Memory required for data: 200960
I0428 19:31:51.645316 22684 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:51.645332 22684 net.cpp:86] Creating Layer conv0
I0428 19:31:51.645337 22684 net.cpp:408] conv0 <- data
I0428 19:31:51.645350 22684 net.cpp:382] conv0 -> conv0
I0428 19:31:51.917106 22684 net.cpp:124] Setting up conv0
I0428 19:31:51.917131 22684 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:51.917135 22684 net.cpp:139] Memory required for data: 1675520
I0428 19:31:51.917150 22684 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:51.917162 22684 net.cpp:86] Creating Layer pool0
I0428 19:31:51.917201 22684 net.cpp:408] pool0 <- conv0
I0428 19:31:51.917207 22684 net.cpp:382] pool0 -> pool0
I0428 19:31:51.917255 22684 net.cpp:124] Setting up pool0
I0428 19:31:51.917263 22684 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:51.917266 22684 net.cpp:139] Memory required for data: 2044160
I0428 19:31:51.917269 22684 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:51.917278 22684 net.cpp:86] Creating Layer ip1
I0428 19:31:51.917284 22684 net.cpp:408] ip1 <- pool0
I0428 19:31:51.917287 22684 net.cpp:382] ip1 -> ip1
I0428 19:31:51.918267 22684 net.cpp:124] Setting up ip1
I0428 19:31:51.918279 22684 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:51.918299 22684 net.cpp:139] Memory required for data: 2046720
I0428 19:31:51.918308 22684 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:51.918313 22684 net.cpp:86] Creating Layer relu1
I0428 19:31:51.918318 22684 net.cpp:408] relu1 <- ip1
I0428 19:31:51.918321 22684 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:51.918476 22684 net.cpp:124] Setting up relu1
I0428 19:31:51.918484 22684 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:51.918488 22684 net.cpp:139] Memory required for data: 2049280
I0428 19:31:51.918490 22684 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:51.918498 22684 net.cpp:86] Creating Layer ip2
I0428 19:31:51.918500 22684 net.cpp:408] ip2 <- ip1
I0428 19:31:51.918505 22684 net.cpp:382] ip2 -> ip2
I0428 19:31:51.918593 22684 net.cpp:124] Setting up ip2
I0428 19:31:51.918601 22684 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:51.918603 22684 net.cpp:139] Memory required for data: 2062080
I0428 19:31:51.918611 22684 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:51.918615 22684 net.cpp:86] Creating Layer relu2
I0428 19:31:51.918620 22684 net.cpp:408] relu2 <- ip2
I0428 19:31:51.918625 22684 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:51.919375 22684 net.cpp:124] Setting up relu2
I0428 19:31:51.919386 22684 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:51.919407 22684 net.cpp:139] Memory required for data: 2074880
I0428 19:31:51.919410 22684 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:51.919417 22684 net.cpp:86] Creating Layer ip3
I0428 19:31:51.919420 22684 net.cpp:408] ip3 <- ip2
I0428 19:31:51.919426 22684 net.cpp:382] ip3 -> ip3
I0428 19:31:51.919519 22684 net.cpp:124] Setting up ip3
I0428 19:31:51.919526 22684 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:51.919529 22684 net.cpp:139] Memory required for data: 2077440
I0428 19:31:51.919534 22684 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:51.919540 22684 net.cpp:86] Creating Layer relu3
I0428 19:31:51.919544 22684 net.cpp:408] relu3 <- ip3
I0428 19:31:51.919548 22684 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:51.919682 22684 net.cpp:124] Setting up relu3
I0428 19:31:51.919689 22684 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:51.919692 22684 net.cpp:139] Memory required for data: 2080000
I0428 19:31:51.919695 22684 layer_factory.hpp:77] Creating layer loss
I0428 19:31:51.919700 22684 net.cpp:86] Creating Layer loss
I0428 19:31:51.919703 22684 net.cpp:408] loss <- ip3
I0428 19:31:51.919708 22684 net.cpp:408] loss <- label
I0428 19:31:51.919713 22684 net.cpp:382] loss -> loss
I0428 19:31:51.919729 22684 layer_factory.hpp:77] Creating layer loss
I0428 19:31:51.919950 22684 net.cpp:124] Setting up loss
I0428 19:31:51.919960 22684 net.cpp:131] Top shape: (1)
I0428 19:31:51.919962 22684 net.cpp:134]     with loss weight 1
I0428 19:31:51.919977 22684 net.cpp:139] Memory required for data: 2080004
I0428 19:31:51.919981 22684 net.cpp:200] loss needs backward computation.
I0428 19:31:51.919984 22684 net.cpp:200] relu3 needs backward computation.
I0428 19:31:51.919987 22684 net.cpp:200] ip3 needs backward computation.
I0428 19:31:51.919991 22684 net.cpp:200] relu2 needs backward computation.
I0428 19:31:51.919993 22684 net.cpp:200] ip2 needs backward computation.
I0428 19:31:51.919996 22684 net.cpp:200] relu1 needs backward computation.
I0428 19:31:51.919998 22684 net.cpp:200] ip1 needs backward computation.
I0428 19:31:51.920011 22684 net.cpp:200] pool0 needs backward computation.
I0428 19:31:51.920014 22684 net.cpp:200] conv0 needs backward computation.
I0428 19:31:51.920017 22684 net.cpp:202] mnist does not need backward computation.
I0428 19:31:51.920020 22684 net.cpp:244] This network produces output loss
I0428 19:31:51.920028 22684 net.cpp:257] Network initialization done.
I0428 19:31:51.920321 22684 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test135.prototxt
I0428 19:31:51.920361 22684 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:51.920435 22684 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:51.920493 22684 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:51.920537 22684 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:51.920552 22684 net.cpp:86] Creating Layer mnist
I0428 19:31:51.920555 22684 net.cpp:382] mnist -> data
I0428 19:31:51.920563 22684 net.cpp:382] mnist -> label
I0428 19:31:51.920640 22684 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:51.922694 22684 net.cpp:124] Setting up mnist
I0428 19:31:51.922724 22684 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:51.922729 22684 net.cpp:131] Top shape: 100 (100)
I0428 19:31:51.922734 22684 net.cpp:139] Memory required for data: 314000
I0428 19:31:51.922736 22684 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:51.922746 22684 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:51.922750 22684 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:51.922755 22684 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:51.922760 22684 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:51.922837 22684 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:51.922844 22684 net.cpp:131] Top shape: 100 (100)
I0428 19:31:51.922848 22684 net.cpp:131] Top shape: 100 (100)
I0428 19:31:51.922852 22684 net.cpp:139] Memory required for data: 314800
I0428 19:31:51.922863 22684 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:51.922871 22684 net.cpp:86] Creating Layer conv0
I0428 19:31:51.922875 22684 net.cpp:408] conv0 <- data
I0428 19:31:51.922880 22684 net.cpp:382] conv0 -> conv0
I0428 19:31:51.924417 22684 net.cpp:124] Setting up conv0
I0428 19:31:51.924432 22684 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:51.924437 22684 net.cpp:139] Memory required for data: 2618800
I0428 19:31:51.924461 22684 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:51.924469 22684 net.cpp:86] Creating Layer pool0
I0428 19:31:51.924474 22684 net.cpp:408] pool0 <- conv0
I0428 19:31:51.924479 22684 net.cpp:382] pool0 -> pool0
I0428 19:31:51.924525 22684 net.cpp:124] Setting up pool0
I0428 19:31:51.924533 22684 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:51.924537 22684 net.cpp:139] Memory required for data: 3194800
I0428 19:31:51.924540 22684 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:51.924562 22684 net.cpp:86] Creating Layer ip1
I0428 19:31:51.924566 22684 net.cpp:408] ip1 <- pool0
I0428 19:31:51.924571 22684 net.cpp:382] ip1 -> ip1
I0428 19:31:51.924746 22684 net.cpp:124] Setting up ip1
I0428 19:31:51.924753 22684 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:51.924757 22684 net.cpp:139] Memory required for data: 3198800
I0428 19:31:51.924764 22684 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:51.924769 22684 net.cpp:86] Creating Layer relu1
I0428 19:31:51.924772 22684 net.cpp:408] relu1 <- ip1
I0428 19:31:51.924777 22684 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:51.924971 22684 net.cpp:124] Setting up relu1
I0428 19:31:51.924983 22684 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:51.924986 22684 net.cpp:139] Memory required for data: 3202800
I0428 19:31:51.924990 22684 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:51.924996 22684 net.cpp:86] Creating Layer ip2
I0428 19:31:51.924999 22684 net.cpp:408] ip2 <- ip1
I0428 19:31:51.925004 22684 net.cpp:382] ip2 -> ip2
I0428 19:31:51.925151 22684 net.cpp:124] Setting up ip2
I0428 19:31:51.925173 22684 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:51.925178 22684 net.cpp:139] Memory required for data: 3222800
I0428 19:31:51.925184 22684 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:51.925190 22684 net.cpp:86] Creating Layer relu2
I0428 19:31:51.925194 22684 net.cpp:408] relu2 <- ip2
I0428 19:31:51.925197 22684 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:51.925997 22684 net.cpp:124] Setting up relu2
I0428 19:31:51.926012 22684 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:51.926023 22684 net.cpp:139] Memory required for data: 3242800
I0428 19:31:51.926031 22684 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:51.926040 22684 net.cpp:86] Creating Layer ip3
I0428 19:31:51.926044 22684 net.cpp:408] ip3 <- ip2
I0428 19:31:51.926066 22684 net.cpp:382] ip3 -> ip3
I0428 19:31:51.926175 22684 net.cpp:124] Setting up ip3
I0428 19:31:51.926183 22684 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:51.926187 22684 net.cpp:139] Memory required for data: 3246800
I0428 19:31:51.926193 22684 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:51.926198 22684 net.cpp:86] Creating Layer relu3
I0428 19:31:51.926203 22684 net.cpp:408] relu3 <- ip3
I0428 19:31:51.926206 22684 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:51.926360 22684 net.cpp:124] Setting up relu3
I0428 19:31:51.926368 22684 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:51.926373 22684 net.cpp:139] Memory required for data: 3250800
I0428 19:31:51.926375 22684 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:51.926396 22684 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:51.926399 22684 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:51.926420 22684 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:51.926427 22684 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:51.926461 22684 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:51.926468 22684 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:51.926472 22684 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:51.926486 22684 net.cpp:139] Memory required for data: 3258800
I0428 19:31:51.926489 22684 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:51.926496 22684 net.cpp:86] Creating Layer accuracy
I0428 19:31:51.926498 22684 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:51.926503 22684 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:51.926508 22684 net.cpp:382] accuracy -> accuracy
I0428 19:31:51.926515 22684 net.cpp:124] Setting up accuracy
I0428 19:31:51.926520 22684 net.cpp:131] Top shape: (1)
I0428 19:31:51.926523 22684 net.cpp:139] Memory required for data: 3258804
I0428 19:31:51.926527 22684 layer_factory.hpp:77] Creating layer loss
I0428 19:31:51.926532 22684 net.cpp:86] Creating Layer loss
I0428 19:31:51.926534 22684 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:51.926538 22684 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:51.926542 22684 net.cpp:382] loss -> loss
I0428 19:31:51.926549 22684 layer_factory.hpp:77] Creating layer loss
I0428 19:31:51.926806 22684 net.cpp:124] Setting up loss
I0428 19:31:51.926817 22684 net.cpp:131] Top shape: (1)
I0428 19:31:51.926826 22684 net.cpp:134]     with loss weight 1
I0428 19:31:51.926839 22684 net.cpp:139] Memory required for data: 3258808
I0428 19:31:51.926843 22684 net.cpp:200] loss needs backward computation.
I0428 19:31:51.926848 22684 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:51.926852 22684 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:51.926856 22684 net.cpp:200] relu3 needs backward computation.
I0428 19:31:51.926858 22684 net.cpp:200] ip3 needs backward computation.
I0428 19:31:51.926862 22684 net.cpp:200] relu2 needs backward computation.
I0428 19:31:51.926865 22684 net.cpp:200] ip2 needs backward computation.
I0428 19:31:51.926868 22684 net.cpp:200] relu1 needs backward computation.
I0428 19:31:51.926872 22684 net.cpp:200] ip1 needs backward computation.
I0428 19:31:51.926874 22684 net.cpp:200] pool0 needs backward computation.
I0428 19:31:51.926878 22684 net.cpp:200] conv0 needs backward computation.
I0428 19:31:51.926882 22684 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:51.926887 22684 net.cpp:202] mnist does not need backward computation.
I0428 19:31:51.926889 22684 net.cpp:244] This network produces output accuracy
I0428 19:31:51.926893 22684 net.cpp:244] This network produces output loss
I0428 19:31:51.926903 22684 net.cpp:257] Network initialization done.
I0428 19:31:51.926940 22684 solver.cpp:56] Solver scaffolding done.
I0428 19:31:51.927229 22684 caffe.cpp:248] Starting Optimization
I0428 19:31:51.927235 22684 solver.cpp:273] Solving LeNet
I0428 19:31:51.927239 22684 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:51.928062 22684 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:51.939573 22684 blocking_queue.cpp:49] Waiting for data
I0428 19:31:51.975673 22691 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:51.976219 22684 solver.cpp:398]     Test net output #0: accuracy = 0.0903
I0428 19:31:51.976238 22684 solver.cpp:398]     Test net output #1: loss = 2.30476 (* 1 = 2.30476 loss)
I0428 19:31:51.979176 22684 solver.cpp:219] Iteration 0 (-1.59328e-42 iter/s, 0.0519097s/100 iters), loss = 2.3156
I0428 19:31:51.979199 22684 solver.cpp:238]     Train net output #0: loss = 2.3156 (* 1 = 2.3156 loss)
I0428 19:31:51.979229 22684 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:52.041914 22684 solver.cpp:219] Iteration 100 (1594.73 iter/s, 0.0627066s/100 iters), loss = 1.55941
I0428 19:31:52.041939 22684 solver.cpp:238]     Train net output #0: loss = 1.55941 (* 1 = 1.55941 loss)
I0428 19:31:52.041960 22684 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:52.104764 22684 solver.cpp:219] Iteration 200 (1591.89 iter/s, 0.0628183s/100 iters), loss = 0.785403
I0428 19:31:52.104789 22684 solver.cpp:238]     Train net output #0: loss = 0.785403 (* 1 = 0.785403 loss)
I0428 19:31:52.104815 22684 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:52.177752 22684 solver.cpp:219] Iteration 300 (1370.71 iter/s, 0.0729548s/100 iters), loss = 0.724872
I0428 19:31:52.177776 22684 solver.cpp:238]     Train net output #0: loss = 0.724872 (* 1 = 0.724872 loss)
I0428 19:31:52.177801 22684 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:52.245688 22684 solver.cpp:219] Iteration 400 (1472.7 iter/s, 0.0679025s/100 iters), loss = 0.503354
I0428 19:31:52.245731 22684 solver.cpp:238]     Train net output #0: loss = 0.503354 (* 1 = 0.503354 loss)
I0428 19:31:52.245739 22684 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:52.316457 22684 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:52.390070 22691 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:52.390990 22684 solver.cpp:398]     Test net output #0: accuracy = 0.8325
I0428 19:31:52.391026 22684 solver.cpp:398]     Test net output #1: loss = 0.478957 (* 1 = 0.478957 loss)
I0428 19:31:52.392006 22684 solver.cpp:219] Iteration 500 (683.641 iter/s, 0.146276s/100 iters), loss = 0.391815
I0428 19:31:52.392050 22684 solver.cpp:238]     Train net output #0: loss = 0.391815 (* 1 = 0.391815 loss)
I0428 19:31:52.392065 22684 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:52.463687 22684 solver.cpp:219] Iteration 600 (1396.03 iter/s, 0.0716319s/100 iters), loss = 0.39388
I0428 19:31:52.463718 22684 solver.cpp:238]     Train net output #0: loss = 0.39388 (* 1 = 0.39388 loss)
I0428 19:31:52.463726 22684 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:52.527778 22684 solver.cpp:219] Iteration 700 (1561.2 iter/s, 0.0640532s/100 iters), loss = 0.645462
I0428 19:31:52.527802 22684 solver.cpp:238]     Train net output #0: loss = 0.645462 (* 1 = 0.645462 loss)
I0428 19:31:52.527808 22684 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:52.592015 22684 solver.cpp:219] Iteration 800 (1557.86 iter/s, 0.0641905s/100 iters), loss = 0.404324
I0428 19:31:52.592054 22684 solver.cpp:238]     Train net output #0: loss = 0.404324 (* 1 = 0.404324 loss)
I0428 19:31:52.592077 22684 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:52.664417 22684 solver.cpp:219] Iteration 900 (1382.1 iter/s, 0.0723538s/100 iters), loss = 0.562145
I0428 19:31:52.664458 22684 solver.cpp:238]     Train net output #0: loss = 0.562145 (* 1 = 0.562145 loss)
I0428 19:31:52.664464 22684 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:52.685991 22690 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:52.727577 22684 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:52.728286 22684 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:52.728852 22684 solver.cpp:311] Iteration 1000, loss = 0.52492
I0428 19:31:52.728868 22684 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:52.803469 22691 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:52.804016 22684 solver.cpp:398]     Test net output #0: accuracy = 0.8527
I0428 19:31:52.804035 22684 solver.cpp:398]     Test net output #1: loss = 0.416903 (* 1 = 0.416903 loss)
I0428 19:31:52.804040 22684 solver.cpp:316] Optimization Done.
I0428 19:31:52.804044 22684 caffe.cpp:259] Optimization Done.
