I0428 19:29:17.808784 21981 caffe.cpp:218] Using GPUs 0
I0428 19:29:17.848021 21981 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:18.364794 21981 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test54.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:18.364943 21981 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test54.prototxt
I0428 19:29:18.365311 21981 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:18.365329 21981 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:18.365417 21981 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:18.365491 21981 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:18.365592 21981 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:18.365617 21981 net.cpp:86] Creating Layer mnist
I0428 19:29:18.365629 21981 net.cpp:382] mnist -> data
I0428 19:29:18.365653 21981 net.cpp:382] mnist -> label
I0428 19:29:18.366768 21981 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:18.369244 21981 net.cpp:124] Setting up mnist
I0428 19:29:18.369262 21981 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:18.369268 21981 net.cpp:131] Top shape: 64 (64)
I0428 19:29:18.369272 21981 net.cpp:139] Memory required for data: 200960
I0428 19:29:18.369279 21981 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:18.369302 21981 net.cpp:86] Creating Layer conv0
I0428 19:29:18.369308 21981 net.cpp:408] conv0 <- data
I0428 19:29:18.369321 21981 net.cpp:382] conv0 -> conv0
I0428 19:29:18.666430 21981 net.cpp:124] Setting up conv0
I0428 19:29:18.666460 21981 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:18.666465 21981 net.cpp:139] Memory required for data: 495872
I0428 19:29:18.666482 21981 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:18.666496 21981 net.cpp:86] Creating Layer pool0
I0428 19:29:18.666519 21981 net.cpp:408] pool0 <- conv0
I0428 19:29:18.666527 21981 net.cpp:382] pool0 -> pool0
I0428 19:29:18.666584 21981 net.cpp:124] Setting up pool0
I0428 19:29:18.666590 21981 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:18.666594 21981 net.cpp:139] Memory required for data: 569600
I0428 19:29:18.666596 21981 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:18.666605 21981 net.cpp:86] Creating Layer ip1
I0428 19:29:18.666609 21981 net.cpp:408] ip1 <- pool0
I0428 19:29:18.666613 21981 net.cpp:382] ip1 -> ip1
I0428 19:29:18.667635 21981 net.cpp:124] Setting up ip1
I0428 19:29:18.667650 21981 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:18.667654 21981 net.cpp:139] Memory required for data: 572160
I0428 19:29:18.667662 21981 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:18.667670 21981 net.cpp:86] Creating Layer relu1
I0428 19:29:18.667673 21981 net.cpp:408] relu1 <- ip1
I0428 19:29:18.667678 21981 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:18.667856 21981 net.cpp:124] Setting up relu1
I0428 19:29:18.667866 21981 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:18.667870 21981 net.cpp:139] Memory required for data: 574720
I0428 19:29:18.667872 21981 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:18.667879 21981 net.cpp:86] Creating Layer ip2
I0428 19:29:18.667882 21981 net.cpp:408] ip2 <- ip1
I0428 19:29:18.667888 21981 net.cpp:382] ip2 -> ip2
I0428 19:29:18.667989 21981 net.cpp:124] Setting up ip2
I0428 19:29:18.667995 21981 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:18.667999 21981 net.cpp:139] Memory required for data: 581120
I0428 19:29:18.668006 21981 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:18.668011 21981 net.cpp:86] Creating Layer relu2
I0428 19:29:18.668015 21981 net.cpp:408] relu2 <- ip2
I0428 19:29:18.668018 21981 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:18.668783 21981 net.cpp:124] Setting up relu2
I0428 19:29:18.668797 21981 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:18.668802 21981 net.cpp:139] Memory required for data: 587520
I0428 19:29:18.668805 21981 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:18.668819 21981 net.cpp:86] Creating Layer ip3
I0428 19:29:18.668823 21981 net.cpp:408] ip3 <- ip2
I0428 19:29:18.668829 21981 net.cpp:382] ip3 -> ip3
I0428 19:29:18.668931 21981 net.cpp:124] Setting up ip3
I0428 19:29:18.668938 21981 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:18.668941 21981 net.cpp:139] Memory required for data: 590080
I0428 19:29:18.668947 21981 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:18.668954 21981 net.cpp:86] Creating Layer relu3
I0428 19:29:18.668957 21981 net.cpp:408] relu3 <- ip3
I0428 19:29:18.668962 21981 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:18.669117 21981 net.cpp:124] Setting up relu3
I0428 19:29:18.669126 21981 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:18.669129 21981 net.cpp:139] Memory required for data: 592640
I0428 19:29:18.669133 21981 layer_factory.hpp:77] Creating layer loss
I0428 19:29:18.669138 21981 net.cpp:86] Creating Layer loss
I0428 19:29:18.669142 21981 net.cpp:408] loss <- ip3
I0428 19:29:18.669147 21981 net.cpp:408] loss <- label
I0428 19:29:18.669152 21981 net.cpp:382] loss -> loss
I0428 19:29:18.669167 21981 layer_factory.hpp:77] Creating layer loss
I0428 19:29:18.669399 21981 net.cpp:124] Setting up loss
I0428 19:29:18.669409 21981 net.cpp:131] Top shape: (1)
I0428 19:29:18.669414 21981 net.cpp:134]     with loss weight 1
I0428 19:29:18.669430 21981 net.cpp:139] Memory required for data: 592644
I0428 19:29:18.669435 21981 net.cpp:200] loss needs backward computation.
I0428 19:29:18.669438 21981 net.cpp:200] relu3 needs backward computation.
I0428 19:29:18.669441 21981 net.cpp:200] ip3 needs backward computation.
I0428 19:29:18.669445 21981 net.cpp:200] relu2 needs backward computation.
I0428 19:29:18.669447 21981 net.cpp:200] ip2 needs backward computation.
I0428 19:29:18.669450 21981 net.cpp:200] relu1 needs backward computation.
I0428 19:29:18.669453 21981 net.cpp:200] ip1 needs backward computation.
I0428 19:29:18.669467 21981 net.cpp:200] pool0 needs backward computation.
I0428 19:29:18.669471 21981 net.cpp:200] conv0 needs backward computation.
I0428 19:29:18.669474 21981 net.cpp:202] mnist does not need backward computation.
I0428 19:29:18.669477 21981 net.cpp:244] This network produces output loss
I0428 19:29:18.669486 21981 net.cpp:257] Network initialization done.
I0428 19:29:18.669781 21981 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test54.prototxt
I0428 19:29:18.669808 21981 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:18.669890 21981 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:18.669955 21981 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:18.670001 21981 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:18.670017 21981 net.cpp:86] Creating Layer mnist
I0428 19:29:18.670022 21981 net.cpp:382] mnist -> data
I0428 19:29:18.670029 21981 net.cpp:382] mnist -> label
I0428 19:29:18.670119 21981 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:18.672116 21981 net.cpp:124] Setting up mnist
I0428 19:29:18.672130 21981 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:18.672137 21981 net.cpp:131] Top shape: 100 (100)
I0428 19:29:18.672139 21981 net.cpp:139] Memory required for data: 314000
I0428 19:29:18.672143 21981 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:18.672150 21981 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:18.672154 21981 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:18.672159 21981 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:18.672166 21981 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:18.672289 21981 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:18.672298 21981 net.cpp:131] Top shape: 100 (100)
I0428 19:29:18.672302 21981 net.cpp:131] Top shape: 100 (100)
I0428 19:29:18.672305 21981 net.cpp:139] Memory required for data: 314800
I0428 19:29:18.672318 21981 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:18.672328 21981 net.cpp:86] Creating Layer conv0
I0428 19:29:18.672333 21981 net.cpp:408] conv0 <- data
I0428 19:29:18.672338 21981 net.cpp:382] conv0 -> conv0
I0428 19:29:18.673898 21981 net.cpp:124] Setting up conv0
I0428 19:29:18.673913 21981 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:18.673918 21981 net.cpp:139] Memory required for data: 775600
I0428 19:29:18.673928 21981 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:18.673934 21981 net.cpp:86] Creating Layer pool0
I0428 19:29:18.673938 21981 net.cpp:408] pool0 <- conv0
I0428 19:29:18.673943 21981 net.cpp:382] pool0 -> pool0
I0428 19:29:18.673981 21981 net.cpp:124] Setting up pool0
I0428 19:29:18.673987 21981 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:18.673990 21981 net.cpp:139] Memory required for data: 890800
I0428 19:29:18.673993 21981 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:18.674000 21981 net.cpp:86] Creating Layer ip1
I0428 19:29:18.674003 21981 net.cpp:408] ip1 <- pool0
I0428 19:29:18.674008 21981 net.cpp:382] ip1 -> ip1
I0428 19:29:18.674119 21981 net.cpp:124] Setting up ip1
I0428 19:29:18.674127 21981 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:18.674131 21981 net.cpp:139] Memory required for data: 894800
I0428 19:29:18.674139 21981 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:18.674144 21981 net.cpp:86] Creating Layer relu1
I0428 19:29:18.674146 21981 net.cpp:408] relu1 <- ip1
I0428 19:29:18.674151 21981 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:18.674405 21981 net.cpp:124] Setting up relu1
I0428 19:29:18.674414 21981 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:18.674419 21981 net.cpp:139] Memory required for data: 898800
I0428 19:29:18.674422 21981 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:18.674428 21981 net.cpp:86] Creating Layer ip2
I0428 19:29:18.674432 21981 net.cpp:408] ip2 <- ip1
I0428 19:29:18.674437 21981 net.cpp:382] ip2 -> ip2
I0428 19:29:18.674582 21981 net.cpp:124] Setting up ip2
I0428 19:29:18.674589 21981 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:18.674593 21981 net.cpp:139] Memory required for data: 908800
I0428 19:29:18.674600 21981 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:18.674605 21981 net.cpp:86] Creating Layer relu2
I0428 19:29:18.674609 21981 net.cpp:408] relu2 <- ip2
I0428 19:29:18.674614 21981 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:18.675449 21981 net.cpp:124] Setting up relu2
I0428 19:29:18.675463 21981 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:18.675467 21981 net.cpp:139] Memory required for data: 918800
I0428 19:29:18.675470 21981 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:18.675478 21981 net.cpp:86] Creating Layer ip3
I0428 19:29:18.675482 21981 net.cpp:408] ip3 <- ip2
I0428 19:29:18.675488 21981 net.cpp:382] ip3 -> ip3
I0428 19:29:18.675614 21981 net.cpp:124] Setting up ip3
I0428 19:29:18.675623 21981 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:18.675627 21981 net.cpp:139] Memory required for data: 922800
I0428 19:29:18.675633 21981 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:18.675638 21981 net.cpp:86] Creating Layer relu3
I0428 19:29:18.675642 21981 net.cpp:408] relu3 <- ip3
I0428 19:29:18.675652 21981 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:18.675812 21981 net.cpp:124] Setting up relu3
I0428 19:29:18.675822 21981 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:18.675825 21981 net.cpp:139] Memory required for data: 926800
I0428 19:29:18.675828 21981 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:18.675833 21981 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:18.675837 21981 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:18.675842 21981 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:18.675848 21981 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:18.675884 21981 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:18.675889 21981 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:18.675894 21981 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:18.675909 21981 net.cpp:139] Memory required for data: 934800
I0428 19:29:18.675916 21981 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:18.675921 21981 net.cpp:86] Creating Layer accuracy
I0428 19:29:18.675925 21981 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:18.675930 21981 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:18.675935 21981 net.cpp:382] accuracy -> accuracy
I0428 19:29:18.675943 21981 net.cpp:124] Setting up accuracy
I0428 19:29:18.675947 21981 net.cpp:131] Top shape: (1)
I0428 19:29:18.675951 21981 net.cpp:139] Memory required for data: 934804
I0428 19:29:18.675953 21981 layer_factory.hpp:77] Creating layer loss
I0428 19:29:18.675957 21981 net.cpp:86] Creating Layer loss
I0428 19:29:18.675961 21981 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:18.675964 21981 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:18.675969 21981 net.cpp:382] loss -> loss
I0428 19:29:18.675976 21981 layer_factory.hpp:77] Creating layer loss
I0428 19:29:18.676235 21981 net.cpp:124] Setting up loss
I0428 19:29:18.676246 21981 net.cpp:131] Top shape: (1)
I0428 19:29:18.676250 21981 net.cpp:134]     with loss weight 1
I0428 19:29:18.676256 21981 net.cpp:139] Memory required for data: 934808
I0428 19:29:18.676260 21981 net.cpp:200] loss needs backward computation.
I0428 19:29:18.676265 21981 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:18.676270 21981 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:18.676273 21981 net.cpp:200] relu3 needs backward computation.
I0428 19:29:18.676277 21981 net.cpp:200] ip3 needs backward computation.
I0428 19:29:18.676280 21981 net.cpp:200] relu2 needs backward computation.
I0428 19:29:18.676283 21981 net.cpp:200] ip2 needs backward computation.
I0428 19:29:18.676286 21981 net.cpp:200] relu1 needs backward computation.
I0428 19:29:18.676290 21981 net.cpp:200] ip1 needs backward computation.
I0428 19:29:18.676292 21981 net.cpp:200] pool0 needs backward computation.
I0428 19:29:18.676296 21981 net.cpp:200] conv0 needs backward computation.
I0428 19:29:18.676307 21981 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:18.676311 21981 net.cpp:202] mnist does not need backward computation.
I0428 19:29:18.676314 21981 net.cpp:244] This network produces output accuracy
I0428 19:29:18.676318 21981 net.cpp:244] This network produces output loss
I0428 19:29:18.676328 21981 net.cpp:257] Network initialization done.
I0428 19:29:18.676368 21981 solver.cpp:56] Solver scaffolding done.
I0428 19:29:18.676730 21981 caffe.cpp:248] Starting Optimization
I0428 19:29:18.676736 21981 solver.cpp:273] Solving LeNet
I0428 19:29:18.676739 21981 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:18.677636 21981 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:18.680691 21981 blocking_queue.cpp:49] Waiting for data
I0428 19:29:18.741040 21990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:18.741468 21981 solver.cpp:398]     Test net output #0: accuracy = 0.1426
I0428 19:29:18.741503 21981 solver.cpp:398]     Test net output #1: loss = 2.29487 (* 1 = 2.29487 loss)
I0428 19:29:18.743118 21981 solver.cpp:219] Iteration 0 (-1.22473e-42 iter/s, 0.0663491s/100 iters), loss = 2.28962
I0428 19:29:18.743155 21981 solver.cpp:238]     Train net output #0: loss = 2.28962 (* 1 = 2.28962 loss)
I0428 19:29:18.743166 21981 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:18.802181 21981 solver.cpp:219] Iteration 100 (1694.35 iter/s, 0.0590197s/100 iters), loss = 1.27784
I0428 19:29:18.802222 21981 solver.cpp:238]     Train net output #0: loss = 1.27784 (* 1 = 1.27784 loss)
I0428 19:29:18.802232 21981 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:18.857681 21981 solver.cpp:219] Iteration 200 (1803.41 iter/s, 0.0554506s/100 iters), loss = 0.689273
I0428 19:29:18.857705 21981 solver.cpp:238]     Train net output #0: loss = 0.689273 (* 1 = 0.689273 loss)
I0428 19:29:18.857712 21981 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:18.912888 21981 solver.cpp:219] Iteration 300 (1812.41 iter/s, 0.0551752s/100 iters), loss = 0.649233
I0428 19:29:18.912911 21981 solver.cpp:238]     Train net output #0: loss = 0.649233 (* 1 = 0.649233 loss)
I0428 19:29:18.912919 21981 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:18.968390 21981 solver.cpp:219] Iteration 400 (1802.74 iter/s, 0.0554711s/100 iters), loss = 0.545198
I0428 19:29:18.968412 21981 solver.cpp:238]     Train net output #0: loss = 0.545198 (* 1 = 0.545198 loss)
I0428 19:29:18.968418 21981 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:19.022594 21981 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:19.096642 21990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:19.097059 21981 solver.cpp:398]     Test net output #0: accuracy = 0.8014
I0428 19:29:19.097077 21981 solver.cpp:398]     Test net output #1: loss = 0.569592 (* 1 = 0.569592 loss)
I0428 19:29:19.097712 21981 solver.cpp:219] Iteration 500 (773.466 iter/s, 0.129288s/100 iters), loss = 0.659109
I0428 19:29:19.097751 21981 solver.cpp:238]     Train net output #0: loss = 0.659109 (* 1 = 0.659109 loss)
I0428 19:29:19.097774 21981 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:19.157377 21981 solver.cpp:219] Iteration 600 (1677.37 iter/s, 0.0596173s/100 iters), loss = 0.521231
I0428 19:29:19.157418 21981 solver.cpp:238]     Train net output #0: loss = 0.521231 (* 1 = 0.521231 loss)
I0428 19:29:19.157424 21981 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:19.214139 21981 solver.cpp:219] Iteration 700 (1762.75 iter/s, 0.0567296s/100 iters), loss = 0.619549
I0428 19:29:19.214179 21981 solver.cpp:238]     Train net output #0: loss = 0.619549 (* 1 = 0.619549 loss)
I0428 19:29:19.214184 21981 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:19.269408 21981 solver.cpp:219] Iteration 800 (1810.33 iter/s, 0.0552385s/100 iters), loss = 0.753622
I0428 19:29:19.269430 21981 solver.cpp:238]     Train net output #0: loss = 0.753622 (* 1 = 0.753622 loss)
I0428 19:29:19.269436 21981 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:19.324625 21981 solver.cpp:219] Iteration 900 (1812.07 iter/s, 0.0551856s/100 iters), loss = 0.429005
I0428 19:29:19.324661 21981 solver.cpp:238]     Train net output #0: loss = 0.429005 (* 1 = 0.429005 loss)
I0428 19:29:19.324667 21981 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:19.343348 21988 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:19.379897 21981 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:19.380460 21981 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:19.380859 21981 solver.cpp:311] Iteration 1000, loss = 0.321958
I0428 19:29:19.380873 21981 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:19.433137 21990 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:19.433547 21981 solver.cpp:398]     Test net output #0: accuracy = 0.9144
I0428 19:29:19.433574 21981 solver.cpp:398]     Test net output #1: loss = 0.298876 (* 1 = 0.298876 loss)
I0428 19:29:19.433579 21981 solver.cpp:316] Optimization Done.
I0428 19:29:19.433583 21981 caffe.cpp:259] Optimization Done.
