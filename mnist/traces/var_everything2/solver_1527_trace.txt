I0428 20:29:44.492319  3579 caffe.cpp:218] Using GPUs 0
I0428 20:29:44.532553  3579 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:45.054376  3579 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1527.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:45.054519  3579 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1527.prototxt
I0428 20:29:45.054903  3579 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:45.054919  3579 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:45.055009  3579 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:29:45.055086  3579 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:45.055188  3579 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:45.055213  3579 net.cpp:86] Creating Layer mnist
I0428 20:29:45.055223  3579 net.cpp:382] mnist -> data
I0428 20:29:45.055245  3579 net.cpp:382] mnist -> label
I0428 20:29:45.056330  3579 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:45.058789  3579 net.cpp:124] Setting up mnist
I0428 20:29:45.058806  3579 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:45.058812  3579 net.cpp:131] Top shape: 64 (64)
I0428 20:29:45.058816  3579 net.cpp:139] Memory required for data: 200960
I0428 20:29:45.058823  3579 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:45.058840  3579 net.cpp:86] Creating Layer conv0
I0428 20:29:45.058850  3579 net.cpp:408] conv0 <- data
I0428 20:29:45.058862  3579 net.cpp:382] conv0 -> conv0
I0428 20:29:45.347688  3579 net.cpp:124] Setting up conv0
I0428 20:29:45.347718  3579 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:45.347723  3579 net.cpp:139] Memory required for data: 14946560
I0428 20:29:45.347761  3579 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:45.347776  3579 net.cpp:86] Creating Layer pool0
I0428 20:29:45.347780  3579 net.cpp:408] pool0 <- conv0
I0428 20:29:45.347787  3579 net.cpp:382] pool0 -> pool0
I0428 20:29:45.347842  3579 net.cpp:124] Setting up pool0
I0428 20:29:45.347851  3579 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:45.347856  3579 net.cpp:139] Memory required for data: 18632960
I0428 20:29:45.347858  3579 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:45.347872  3579 net.cpp:86] Creating Layer conv1
I0428 20:29:45.347877  3579 net.cpp:408] conv1 <- pool0
I0428 20:29:45.347883  3579 net.cpp:382] conv1 -> conv1
I0428 20:29:45.350108  3579 net.cpp:124] Setting up conv1
I0428 20:29:45.350124  3579 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:29:45.350128  3579 net.cpp:139] Memory required for data: 18796800
I0428 20:29:45.350138  3579 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:45.350147  3579 net.cpp:86] Creating Layer pool1
I0428 20:29:45.350150  3579 net.cpp:408] pool1 <- conv1
I0428 20:29:45.350157  3579 net.cpp:382] pool1 -> pool1
I0428 20:29:45.350199  3579 net.cpp:124] Setting up pool1
I0428 20:29:45.350208  3579 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:29:45.350210  3579 net.cpp:139] Memory required for data: 18837760
I0428 20:29:45.350214  3579 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:45.350222  3579 net.cpp:86] Creating Layer ip1
I0428 20:29:45.350226  3579 net.cpp:408] ip1 <- pool1
I0428 20:29:45.350232  3579 net.cpp:382] ip1 -> ip1
I0428 20:29:45.350373  3579 net.cpp:124] Setting up ip1
I0428 20:29:45.350380  3579 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:29:45.350384  3579 net.cpp:139] Memory required for data: 18844160
I0428 20:29:45.350391  3579 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:45.350401  3579 net.cpp:86] Creating Layer relu1
I0428 20:29:45.350405  3579 net.cpp:408] relu1 <- ip1
I0428 20:29:45.350410  3579 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:45.350603  3579 net.cpp:124] Setting up relu1
I0428 20:29:45.350615  3579 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:29:45.350617  3579 net.cpp:139] Memory required for data: 18850560
I0428 20:29:45.350621  3579 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:45.350628  3579 net.cpp:86] Creating Layer ip2
I0428 20:29:45.350634  3579 net.cpp:408] ip2 <- ip1
I0428 20:29:45.350641  3579 net.cpp:382] ip2 -> ip2
I0428 20:29:45.350749  3579 net.cpp:124] Setting up ip2
I0428 20:29:45.350756  3579 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:45.350759  3579 net.cpp:139] Memory required for data: 18853120
I0428 20:29:45.350765  3579 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:45.350772  3579 net.cpp:86] Creating Layer relu2
I0428 20:29:45.350778  3579 net.cpp:408] relu2 <- ip2
I0428 20:29:45.350785  3579 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:45.351577  3579 net.cpp:124] Setting up relu2
I0428 20:29:45.351590  3579 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:45.351594  3579 net.cpp:139] Memory required for data: 18855680
I0428 20:29:45.351598  3579 layer_factory.hpp:77] Creating layer loss
I0428 20:29:45.351604  3579 net.cpp:86] Creating Layer loss
I0428 20:29:45.351608  3579 net.cpp:408] loss <- ip2
I0428 20:29:45.351613  3579 net.cpp:408] loss <- label
I0428 20:29:45.351621  3579 net.cpp:382] loss -> loss
I0428 20:29:45.351641  3579 layer_factory.hpp:77] Creating layer loss
I0428 20:29:45.351915  3579 net.cpp:124] Setting up loss
I0428 20:29:45.351925  3579 net.cpp:131] Top shape: (1)
I0428 20:29:45.351929  3579 net.cpp:134]     with loss weight 1
I0428 20:29:45.351943  3579 net.cpp:139] Memory required for data: 18855684
I0428 20:29:45.351948  3579 net.cpp:200] loss needs backward computation.
I0428 20:29:45.351951  3579 net.cpp:200] relu2 needs backward computation.
I0428 20:29:45.351955  3579 net.cpp:200] ip2 needs backward computation.
I0428 20:29:45.351959  3579 net.cpp:200] relu1 needs backward computation.
I0428 20:29:45.351963  3579 net.cpp:200] ip1 needs backward computation.
I0428 20:29:45.351977  3579 net.cpp:200] pool1 needs backward computation.
I0428 20:29:45.351980  3579 net.cpp:200] conv1 needs backward computation.
I0428 20:29:45.351984  3579 net.cpp:200] pool0 needs backward computation.
I0428 20:29:45.351987  3579 net.cpp:200] conv0 needs backward computation.
I0428 20:29:45.351991  3579 net.cpp:202] mnist does not need backward computation.
I0428 20:29:45.351995  3579 net.cpp:244] This network produces output loss
I0428 20:29:45.352006  3579 net.cpp:257] Network initialization done.
I0428 20:29:45.352326  3579 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1527.prototxt
I0428 20:29:45.352355  3579 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:45.352452  3579 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:29:45.352525  3579 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:45.352572  3579 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:45.352587  3579 net.cpp:86] Creating Layer mnist
I0428 20:29:45.352594  3579 net.cpp:382] mnist -> data
I0428 20:29:45.352604  3579 net.cpp:382] mnist -> label
I0428 20:29:45.352705  3579 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:45.354773  3579 net.cpp:124] Setting up mnist
I0428 20:29:45.354786  3579 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:45.354792  3579 net.cpp:131] Top shape: 100 (100)
I0428 20:29:45.354795  3579 net.cpp:139] Memory required for data: 314000
I0428 20:29:45.354799  3579 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:45.354807  3579 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:45.354810  3579 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:45.354816  3579 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:45.354851  3579 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:45.354909  3579 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:45.354918  3579 net.cpp:131] Top shape: 100 (100)
I0428 20:29:45.354923  3579 net.cpp:131] Top shape: 100 (100)
I0428 20:29:45.354925  3579 net.cpp:139] Memory required for data: 314800
I0428 20:29:45.354929  3579 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:45.354941  3579 net.cpp:86] Creating Layer conv0
I0428 20:29:45.354945  3579 net.cpp:408] conv0 <- data
I0428 20:29:45.354951  3579 net.cpp:382] conv0 -> conv0
I0428 20:29:45.356787  3579 net.cpp:124] Setting up conv0
I0428 20:29:45.356802  3579 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:45.356807  3579 net.cpp:139] Memory required for data: 23354800
I0428 20:29:45.356824  3579 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:45.356832  3579 net.cpp:86] Creating Layer pool0
I0428 20:29:45.356835  3579 net.cpp:408] pool0 <- conv0
I0428 20:29:45.356843  3579 net.cpp:382] pool0 -> pool0
I0428 20:29:45.356884  3579 net.cpp:124] Setting up pool0
I0428 20:29:45.356894  3579 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:45.356897  3579 net.cpp:139] Memory required for data: 29114800
I0428 20:29:45.356900  3579 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:45.356912  3579 net.cpp:86] Creating Layer conv1
I0428 20:29:45.356915  3579 net.cpp:408] conv1 <- pool0
I0428 20:29:45.356921  3579 net.cpp:382] conv1 -> conv1
I0428 20:29:45.358762  3579 net.cpp:124] Setting up conv1
I0428 20:29:45.358775  3579 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:29:45.358779  3579 net.cpp:139] Memory required for data: 29370800
I0428 20:29:45.358789  3579 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:45.358798  3579 net.cpp:86] Creating Layer pool1
I0428 20:29:45.358800  3579 net.cpp:408] pool1 <- conv1
I0428 20:29:45.358808  3579 net.cpp:382] pool1 -> pool1
I0428 20:29:45.358860  3579 net.cpp:124] Setting up pool1
I0428 20:29:45.358868  3579 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:29:45.358872  3579 net.cpp:139] Memory required for data: 29434800
I0428 20:29:45.358875  3579 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:45.358886  3579 net.cpp:86] Creating Layer ip1
I0428 20:29:45.358888  3579 net.cpp:408] ip1 <- pool1
I0428 20:29:45.358896  3579 net.cpp:382] ip1 -> ip1
I0428 20:29:45.359032  3579 net.cpp:124] Setting up ip1
I0428 20:29:45.359040  3579 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:29:45.359045  3579 net.cpp:139] Memory required for data: 29444800
I0428 20:29:45.359058  3579 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:45.359064  3579 net.cpp:86] Creating Layer relu1
I0428 20:29:45.359068  3579 net.cpp:408] relu1 <- ip1
I0428 20:29:45.359074  3579 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:45.359256  3579 net.cpp:124] Setting up relu1
I0428 20:29:45.359264  3579 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:29:45.359268  3579 net.cpp:139] Memory required for data: 29454800
I0428 20:29:45.359272  3579 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:45.359282  3579 net.cpp:86] Creating Layer ip2
I0428 20:29:45.359285  3579 net.cpp:408] ip2 <- ip1
I0428 20:29:45.359292  3579 net.cpp:382] ip2 -> ip2
I0428 20:29:45.359401  3579 net.cpp:124] Setting up ip2
I0428 20:29:45.359410  3579 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:45.359413  3579 net.cpp:139] Memory required for data: 29458800
I0428 20:29:45.359419  3579 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:45.359426  3579 net.cpp:86] Creating Layer relu2
I0428 20:29:45.359429  3579 net.cpp:408] relu2 <- ip2
I0428 20:29:45.359433  3579 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:45.359607  3579 net.cpp:124] Setting up relu2
I0428 20:29:45.359616  3579 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:45.359621  3579 net.cpp:139] Memory required for data: 29462800
I0428 20:29:45.359624  3579 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:29:45.359630  3579 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:29:45.359634  3579 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:29:45.359638  3579 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:29:45.359657  3579 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:29:45.359697  3579 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:29:45.359704  3579 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:45.359707  3579 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:45.359710  3579 net.cpp:139] Memory required for data: 29470800
I0428 20:29:45.359714  3579 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:45.359719  3579 net.cpp:86] Creating Layer accuracy
I0428 20:29:45.359722  3579 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:29:45.359727  3579 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:45.359740  3579 net.cpp:382] accuracy -> accuracy
I0428 20:29:45.359748  3579 net.cpp:124] Setting up accuracy
I0428 20:29:45.359752  3579 net.cpp:131] Top shape: (1)
I0428 20:29:45.359755  3579 net.cpp:139] Memory required for data: 29470804
I0428 20:29:45.359758  3579 layer_factory.hpp:77] Creating layer loss
I0428 20:29:45.359763  3579 net.cpp:86] Creating Layer loss
I0428 20:29:45.359767  3579 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:29:45.359771  3579 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:45.359776  3579 net.cpp:382] loss -> loss
I0428 20:29:45.359783  3579 layer_factory.hpp:77] Creating layer loss
I0428 20:29:45.360157  3579 net.cpp:124] Setting up loss
I0428 20:29:45.360167  3579 net.cpp:131] Top shape: (1)
I0428 20:29:45.360170  3579 net.cpp:134]     with loss weight 1
I0428 20:29:45.360177  3579 net.cpp:139] Memory required for data: 29470808
I0428 20:29:45.360180  3579 net.cpp:200] loss needs backward computation.
I0428 20:29:45.360185  3579 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:45.360190  3579 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:29:45.360193  3579 net.cpp:200] relu2 needs backward computation.
I0428 20:29:45.360196  3579 net.cpp:200] ip2 needs backward computation.
I0428 20:29:45.360199  3579 net.cpp:200] relu1 needs backward computation.
I0428 20:29:45.360203  3579 net.cpp:200] ip1 needs backward computation.
I0428 20:29:45.360206  3579 net.cpp:200] pool1 needs backward computation.
I0428 20:29:45.360209  3579 net.cpp:200] conv1 needs backward computation.
I0428 20:29:45.360213  3579 net.cpp:200] pool0 needs backward computation.
I0428 20:29:45.360222  3579 net.cpp:200] conv0 needs backward computation.
I0428 20:29:45.360227  3579 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:45.360230  3579 net.cpp:202] mnist does not need backward computation.
I0428 20:29:45.360234  3579 net.cpp:244] This network produces output accuracy
I0428 20:29:45.360239  3579 net.cpp:244] This network produces output loss
I0428 20:29:45.360250  3579 net.cpp:257] Network initialization done.
I0428 20:29:45.360291  3579 solver.cpp:56] Solver scaffolding done.
I0428 20:29:45.360587  3579 caffe.cpp:248] Starting Optimization
I0428 20:29:45.360594  3579 solver.cpp:273] Solving LeNet
I0428 20:29:45.360597  3579 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:45.360759  3579 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:45.454792  3587 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:45.456214  3579 solver.cpp:398]     Test net output #0: accuracy = 0.1151
I0428 20:29:45.456233  3579 solver.cpp:398]     Test net output #1: loss = 2.30375 (* 1 = 2.30375 loss)
I0428 20:29:45.461660  3579 solver.cpp:219] Iteration 0 (0 iter/s, 0.101036s/100 iters), loss = 2.27245
I0428 20:29:45.461684  3579 solver.cpp:238]     Train net output #0: loss = 2.27245 (* 1 = 2.27245 loss)
I0428 20:29:45.461696  3579 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:45.672276  3579 solver.cpp:219] Iteration 100 (474.917 iter/s, 0.210563s/100 iters), loss = 0.293945
I0428 20:29:45.672332  3579 solver.cpp:238]     Train net output #0: loss = 0.293945 (* 1 = 0.293945 loss)
I0428 20:29:45.672344  3579 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:45.886073  3579 solver.cpp:219] Iteration 200 (467.882 iter/s, 0.213729s/100 iters), loss = 0.275662
I0428 20:29:45.886142  3579 solver.cpp:238]     Train net output #0: loss = 0.275662 (* 1 = 0.275662 loss)
I0428 20:29:45.886154  3579 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:46.100504  3579 solver.cpp:219] Iteration 300 (466.534 iter/s, 0.214347s/100 iters), loss = 0.192428
I0428 20:29:46.100553  3579 solver.cpp:238]     Train net output #0: loss = 0.192428 (* 1 = 0.192428 loss)
I0428 20:29:46.100564  3579 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:46.314836  3579 solver.cpp:219] Iteration 400 (466.705 iter/s, 0.214268s/100 iters), loss = 0.0979546
I0428 20:29:46.314884  3579 solver.cpp:238]     Train net output #0: loss = 0.0979545 (* 1 = 0.0979545 loss)
I0428 20:29:46.314896  3579 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:46.524632  3579 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:46.624089  3587 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:46.626379  3579 solver.cpp:398]     Test net output #0: accuracy = 0.9671
I0428 20:29:46.626407  3579 solver.cpp:398]     Test net output #1: loss = 0.108446 (* 1 = 0.108446 loss)
I0428 20:29:46.628332  3579 solver.cpp:219] Iteration 500 (319.048 iter/s, 0.313432s/100 iters), loss = 0.159956
I0428 20:29:46.628361  3579 solver.cpp:238]     Train net output #0: loss = 0.159956 (* 1 = 0.159956 loss)
I0428 20:29:46.628370  3579 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:46.843050  3579 solver.cpp:219] Iteration 600 (465.837 iter/s, 0.214667s/100 iters), loss = 0.120622
I0428 20:29:46.843101  3579 solver.cpp:238]     Train net output #0: loss = 0.120621 (* 1 = 0.120621 loss)
I0428 20:29:46.843116  3579 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:47.063575  3579 solver.cpp:219] Iteration 700 (453.601 iter/s, 0.220458s/100 iters), loss = 0.104629
I0428 20:29:47.063628  3579 solver.cpp:238]     Train net output #0: loss = 0.104629 (* 1 = 0.104629 loss)
I0428 20:29:47.063642  3579 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:47.282474  3579 solver.cpp:219] Iteration 800 (456.978 iter/s, 0.218829s/100 iters), loss = 0.267739
I0428 20:29:47.282526  3579 solver.cpp:238]     Train net output #0: loss = 0.267739 (* 1 = 0.267739 loss)
I0428 20:29:47.282539  3579 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:47.501194  3579 solver.cpp:219] Iteration 900 (457.355 iter/s, 0.218649s/100 iters), loss = 0.174597
I0428 20:29:47.501245  3579 solver.cpp:238]     Train net output #0: loss = 0.174596 (* 1 = 0.174596 loss)
I0428 20:29:47.501262  3579 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:47.574803  3586 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:47.720296  3579 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:47.722630  3579 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:47.724073  3579 solver.cpp:311] Iteration 1000, loss = 0.0882035
I0428 20:29:47.724105  3579 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:47.824272  3587 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:47.826900  3579 solver.cpp:398]     Test net output #0: accuracy = 0.974
I0428 20:29:47.826925  3579 solver.cpp:398]     Test net output #1: loss = 0.0818392 (* 1 = 0.0818392 loss)
I0428 20:29:47.826931  3579 solver.cpp:316] Optimization Done.
I0428 20:29:47.826936  3579 caffe.cpp:259] Optimization Done.
