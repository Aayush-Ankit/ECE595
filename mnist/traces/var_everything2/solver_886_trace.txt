I0428 20:00:48.446580 29584 caffe.cpp:218] Using GPUs 0
I0428 20:00:48.479562 29584 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:48.983379 29584 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test886.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:48.983494 29584 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test886.prototxt
I0428 20:00:48.983827 29584 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:48.983842 29584 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:48.983922 29584 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:48.983983 29584 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:48.984069 29584 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:48.984089 29584 net.cpp:86] Creating Layer mnist
I0428 20:00:48.984096 29584 net.cpp:382] mnist -> data
I0428 20:00:48.984114 29584 net.cpp:382] mnist -> label
I0428 20:00:48.985036 29584 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:48.987200 29584 net.cpp:124] Setting up mnist
I0428 20:00:48.987215 29584 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:48.987221 29584 net.cpp:131] Top shape: 64 (64)
I0428 20:00:48.987224 29584 net.cpp:139] Memory required for data: 200960
I0428 20:00:48.987231 29584 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:48.987244 29584 net.cpp:86] Creating Layer conv0
I0428 20:00:48.987262 29584 net.cpp:408] conv0 <- data
I0428 20:00:48.987274 29584 net.cpp:382] conv0 -> conv0
I0428 20:00:49.216624 29584 net.cpp:124] Setting up conv0
I0428 20:00:49.216647 29584 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:49.216651 29584 net.cpp:139] Memory required for data: 1675520
I0428 20:00:49.216666 29584 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:49.216693 29584 net.cpp:86] Creating Layer pool0
I0428 20:00:49.216696 29584 net.cpp:408] pool0 <- conv0
I0428 20:00:49.216701 29584 net.cpp:382] pool0 -> pool0
I0428 20:00:49.216747 29584 net.cpp:124] Setting up pool0
I0428 20:00:49.216756 29584 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:49.216759 29584 net.cpp:139] Memory required for data: 2044160
I0428 20:00:49.216763 29584 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:49.216773 29584 net.cpp:86] Creating Layer conv1
I0428 20:00:49.216775 29584 net.cpp:408] conv1 <- pool0
I0428 20:00:49.216780 29584 net.cpp:382] conv1 -> conv1
I0428 20:00:49.219660 29584 net.cpp:124] Setting up conv1
I0428 20:00:49.219689 29584 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:49.219693 29584 net.cpp:139] Memory required for data: 2453760
I0428 20:00:49.219702 29584 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:49.219709 29584 net.cpp:86] Creating Layer pool1
I0428 20:00:49.219712 29584 net.cpp:408] pool1 <- conv1
I0428 20:00:49.219717 29584 net.cpp:382] pool1 -> pool1
I0428 20:00:49.219768 29584 net.cpp:124] Setting up pool1
I0428 20:00:49.219774 29584 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:49.219776 29584 net.cpp:139] Memory required for data: 2556160
I0428 20:00:49.219779 29584 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:49.219786 29584 net.cpp:86] Creating Layer ip1
I0428 20:00:49.219789 29584 net.cpp:408] ip1 <- pool1
I0428 20:00:49.219794 29584 net.cpp:382] ip1 -> ip1
I0428 20:00:49.219940 29584 net.cpp:124] Setting up ip1
I0428 20:00:49.219949 29584 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:49.219951 29584 net.cpp:139] Memory required for data: 2562560
I0428 20:00:49.219959 29584 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:49.219964 29584 net.cpp:86] Creating Layer relu1
I0428 20:00:49.219966 29584 net.cpp:408] relu1 <- ip1
I0428 20:00:49.219970 29584 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:49.220126 29584 net.cpp:124] Setting up relu1
I0428 20:00:49.220135 29584 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:49.220139 29584 net.cpp:139] Memory required for data: 2568960
I0428 20:00:49.220141 29584 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:49.220147 29584 net.cpp:86] Creating Layer ip2
I0428 20:00:49.220150 29584 net.cpp:408] ip2 <- ip1
I0428 20:00:49.220155 29584 net.cpp:382] ip2 -> ip2
I0428 20:00:49.221207 29584 net.cpp:124] Setting up ip2
I0428 20:00:49.221220 29584 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:49.221225 29584 net.cpp:139] Memory required for data: 2581760
I0428 20:00:49.221230 29584 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:49.221252 29584 net.cpp:86] Creating Layer relu2
I0428 20:00:49.221256 29584 net.cpp:408] relu2 <- ip2
I0428 20:00:49.221261 29584 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:49.222074 29584 net.cpp:124] Setting up relu2
I0428 20:00:49.222087 29584 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:49.222107 29584 net.cpp:139] Memory required for data: 2594560
I0428 20:00:49.222110 29584 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:49.222118 29584 net.cpp:86] Creating Layer ip3
I0428 20:00:49.222121 29584 net.cpp:408] ip3 <- ip2
I0428 20:00:49.222126 29584 net.cpp:382] ip3 -> ip3
I0428 20:00:49.222246 29584 net.cpp:124] Setting up ip3
I0428 20:00:49.222255 29584 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:49.222259 29584 net.cpp:139] Memory required for data: 2597120
I0428 20:00:49.222267 29584 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:49.222272 29584 net.cpp:86] Creating Layer relu3
I0428 20:00:49.222275 29584 net.cpp:408] relu3 <- ip3
I0428 20:00:49.222280 29584 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:49.222453 29584 net.cpp:124] Setting up relu3
I0428 20:00:49.222463 29584 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:49.222467 29584 net.cpp:139] Memory required for data: 2599680
I0428 20:00:49.222470 29584 layer_factory.hpp:77] Creating layer loss
I0428 20:00:49.222476 29584 net.cpp:86] Creating Layer loss
I0428 20:00:49.222479 29584 net.cpp:408] loss <- ip3
I0428 20:00:49.222483 29584 net.cpp:408] loss <- label
I0428 20:00:49.222489 29584 net.cpp:382] loss -> loss
I0428 20:00:49.222503 29584 layer_factory.hpp:77] Creating layer loss
I0428 20:00:49.222756 29584 net.cpp:124] Setting up loss
I0428 20:00:49.222779 29584 net.cpp:131] Top shape: (1)
I0428 20:00:49.222784 29584 net.cpp:134]     with loss weight 1
I0428 20:00:49.222802 29584 net.cpp:139] Memory required for data: 2599684
I0428 20:00:49.222805 29584 net.cpp:200] loss needs backward computation.
I0428 20:00:49.222810 29584 net.cpp:200] relu3 needs backward computation.
I0428 20:00:49.222812 29584 net.cpp:200] ip3 needs backward computation.
I0428 20:00:49.222815 29584 net.cpp:200] relu2 needs backward computation.
I0428 20:00:49.222818 29584 net.cpp:200] ip2 needs backward computation.
I0428 20:00:49.222820 29584 net.cpp:200] relu1 needs backward computation.
I0428 20:00:49.222823 29584 net.cpp:200] ip1 needs backward computation.
I0428 20:00:49.222826 29584 net.cpp:200] pool1 needs backward computation.
I0428 20:00:49.222829 29584 net.cpp:200] conv1 needs backward computation.
I0428 20:00:49.222832 29584 net.cpp:200] pool0 needs backward computation.
I0428 20:00:49.222836 29584 net.cpp:200] conv0 needs backward computation.
I0428 20:00:49.222838 29584 net.cpp:202] mnist does not need backward computation.
I0428 20:00:49.222841 29584 net.cpp:244] This network produces output loss
I0428 20:00:49.222849 29584 net.cpp:257] Network initialization done.
I0428 20:00:49.223173 29584 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test886.prototxt
I0428 20:00:49.223230 29584 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:49.223317 29584 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:49.223408 29584 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:49.223451 29584 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:49.223477 29584 net.cpp:86] Creating Layer mnist
I0428 20:00:49.223482 29584 net.cpp:382] mnist -> data
I0428 20:00:49.223489 29584 net.cpp:382] mnist -> label
I0428 20:00:49.223572 29584 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:49.225693 29584 net.cpp:124] Setting up mnist
I0428 20:00:49.225736 29584 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:49.225756 29584 net.cpp:131] Top shape: 100 (100)
I0428 20:00:49.225759 29584 net.cpp:139] Memory required for data: 314000
I0428 20:00:49.225764 29584 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:49.225797 29584 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:49.225802 29584 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:49.225807 29584 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:49.225813 29584 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:49.225922 29584 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:49.225930 29584 net.cpp:131] Top shape: 100 (100)
I0428 20:00:49.225934 29584 net.cpp:131] Top shape: 100 (100)
I0428 20:00:49.225936 29584 net.cpp:139] Memory required for data: 314800
I0428 20:00:49.225939 29584 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:49.225949 29584 net.cpp:86] Creating Layer conv0
I0428 20:00:49.225951 29584 net.cpp:408] conv0 <- data
I0428 20:00:49.225957 29584 net.cpp:382] conv0 -> conv0
I0428 20:00:49.227831 29584 net.cpp:124] Setting up conv0
I0428 20:00:49.227860 29584 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:49.227864 29584 net.cpp:139] Memory required for data: 2618800
I0428 20:00:49.227874 29584 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:49.227880 29584 net.cpp:86] Creating Layer pool0
I0428 20:00:49.227883 29584 net.cpp:408] pool0 <- conv0
I0428 20:00:49.227887 29584 net.cpp:382] pool0 -> pool0
I0428 20:00:49.227923 29584 net.cpp:124] Setting up pool0
I0428 20:00:49.227928 29584 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:49.227931 29584 net.cpp:139] Memory required for data: 3194800
I0428 20:00:49.227933 29584 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:49.227942 29584 net.cpp:86] Creating Layer conv1
I0428 20:00:49.227946 29584 net.cpp:408] conv1 <- pool0
I0428 20:00:49.227952 29584 net.cpp:382] conv1 -> conv1
I0428 20:00:49.230361 29584 net.cpp:124] Setting up conv1
I0428 20:00:49.230377 29584 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:49.230382 29584 net.cpp:139] Memory required for data: 3834800
I0428 20:00:49.230391 29584 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:49.230412 29584 net.cpp:86] Creating Layer pool1
I0428 20:00:49.230415 29584 net.cpp:408] pool1 <- conv1
I0428 20:00:49.230429 29584 net.cpp:382] pool1 -> pool1
I0428 20:00:49.230469 29584 net.cpp:124] Setting up pool1
I0428 20:00:49.230475 29584 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:49.230484 29584 net.cpp:139] Memory required for data: 3994800
I0428 20:00:49.230487 29584 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:49.230494 29584 net.cpp:86] Creating Layer ip1
I0428 20:00:49.230499 29584 net.cpp:408] ip1 <- pool1
I0428 20:00:49.230509 29584 net.cpp:382] ip1 -> ip1
I0428 20:00:49.230675 29584 net.cpp:124] Setting up ip1
I0428 20:00:49.230684 29584 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:49.230697 29584 net.cpp:139] Memory required for data: 4004800
I0428 20:00:49.230711 29584 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:49.230717 29584 net.cpp:86] Creating Layer relu1
I0428 20:00:49.230720 29584 net.cpp:408] relu1 <- ip1
I0428 20:00:49.230732 29584 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:49.231001 29584 net.cpp:124] Setting up relu1
I0428 20:00:49.231017 29584 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:49.231020 29584 net.cpp:139] Memory required for data: 4014800
I0428 20:00:49.231024 29584 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:49.231030 29584 net.cpp:86] Creating Layer ip2
I0428 20:00:49.231034 29584 net.cpp:408] ip2 <- ip1
I0428 20:00:49.231039 29584 net.cpp:382] ip2 -> ip2
I0428 20:00:49.231192 29584 net.cpp:124] Setting up ip2
I0428 20:00:49.231199 29584 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:49.231204 29584 net.cpp:139] Memory required for data: 4034800
I0428 20:00:49.231209 29584 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:49.231212 29584 net.cpp:86] Creating Layer relu2
I0428 20:00:49.231216 29584 net.cpp:408] relu2 <- ip2
I0428 20:00:49.231220 29584 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:49.231417 29584 net.cpp:124] Setting up relu2
I0428 20:00:49.231427 29584 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:49.231431 29584 net.cpp:139] Memory required for data: 4054800
I0428 20:00:49.231441 29584 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:49.231447 29584 net.cpp:86] Creating Layer ip3
I0428 20:00:49.231456 29584 net.cpp:408] ip3 <- ip2
I0428 20:00:49.231462 29584 net.cpp:382] ip3 -> ip3
I0428 20:00:49.231570 29584 net.cpp:124] Setting up ip3
I0428 20:00:49.231576 29584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:49.231580 29584 net.cpp:139] Memory required for data: 4058800
I0428 20:00:49.231587 29584 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:49.231592 29584 net.cpp:86] Creating Layer relu3
I0428 20:00:49.231596 29584 net.cpp:408] relu3 <- ip3
I0428 20:00:49.231601 29584 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:49.232511 29584 net.cpp:124] Setting up relu3
I0428 20:00:49.232522 29584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:49.232525 29584 net.cpp:139] Memory required for data: 4062800
I0428 20:00:49.232528 29584 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:49.232533 29584 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:49.232537 29584 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:49.232542 29584 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:49.232548 29584 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:49.232606 29584 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:49.232627 29584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:49.232631 29584 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:49.232635 29584 net.cpp:139] Memory required for data: 4070800
I0428 20:00:49.232637 29584 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:49.232641 29584 net.cpp:86] Creating Layer accuracy
I0428 20:00:49.232645 29584 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:49.232648 29584 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:49.232655 29584 net.cpp:382] accuracy -> accuracy
I0428 20:00:49.232661 29584 net.cpp:124] Setting up accuracy
I0428 20:00:49.232664 29584 net.cpp:131] Top shape: (1)
I0428 20:00:49.232667 29584 net.cpp:139] Memory required for data: 4070804
I0428 20:00:49.232671 29584 layer_factory.hpp:77] Creating layer loss
I0428 20:00:49.232681 29584 net.cpp:86] Creating Layer loss
I0428 20:00:49.232684 29584 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:49.232688 29584 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:49.232703 29584 net.cpp:382] loss -> loss
I0428 20:00:49.232709 29584 layer_factory.hpp:77] Creating layer loss
I0428 20:00:49.233048 29584 net.cpp:124] Setting up loss
I0428 20:00:49.233058 29584 net.cpp:131] Top shape: (1)
I0428 20:00:49.233062 29584 net.cpp:134]     with loss weight 1
I0428 20:00:49.233079 29584 net.cpp:139] Memory required for data: 4070808
I0428 20:00:49.233083 29584 net.cpp:200] loss needs backward computation.
I0428 20:00:49.233088 29584 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:49.233091 29584 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:49.233108 29584 net.cpp:200] relu3 needs backward computation.
I0428 20:00:49.233110 29584 net.cpp:200] ip3 needs backward computation.
I0428 20:00:49.233115 29584 net.cpp:200] relu2 needs backward computation.
I0428 20:00:49.233124 29584 net.cpp:200] ip2 needs backward computation.
I0428 20:00:49.233141 29584 net.cpp:200] relu1 needs backward computation.
I0428 20:00:49.233150 29584 net.cpp:200] ip1 needs backward computation.
I0428 20:00:49.233152 29584 net.cpp:200] pool1 needs backward computation.
I0428 20:00:49.233155 29584 net.cpp:200] conv1 needs backward computation.
I0428 20:00:49.233158 29584 net.cpp:200] pool0 needs backward computation.
I0428 20:00:49.233160 29584 net.cpp:200] conv0 needs backward computation.
I0428 20:00:49.233165 29584 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:49.233168 29584 net.cpp:202] mnist does not need backward computation.
I0428 20:00:49.233170 29584 net.cpp:244] This network produces output accuracy
I0428 20:00:49.233175 29584 net.cpp:244] This network produces output loss
I0428 20:00:49.233191 29584 net.cpp:257] Network initialization done.
I0428 20:00:49.233232 29584 solver.cpp:56] Solver scaffolding done.
I0428 20:00:49.233583 29584 caffe.cpp:248] Starting Optimization
I0428 20:00:49.233590 29584 solver.cpp:273] Solving LeNet
I0428 20:00:49.233594 29584 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:49.234432 29584 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:49.238318 29584 blocking_queue.cpp:49] Waiting for data
I0428 20:00:49.310461 29591 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:49.311028 29584 solver.cpp:398]     Test net output #0: accuracy = 0.1108
I0428 20:00:49.311051 29584 solver.cpp:398]     Test net output #1: loss = 2.29304 (* 1 = 2.29304 loss)
I0428 20:00:49.313681 29584 solver.cpp:219] Iteration 0 (-1.03276e-42 iter/s, 0.0800623s/100 iters), loss = 2.29623
I0428 20:00:49.313705 29584 solver.cpp:238]     Train net output #0: loss = 2.29623 (* 1 = 2.29623 loss)
I0428 20:00:49.313731 29584 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:49.414937 29584 solver.cpp:219] Iteration 100 (987.985 iter/s, 0.101216s/100 iters), loss = 0.395343
I0428 20:00:49.414964 29584 solver.cpp:238]     Train net output #0: loss = 0.395343 (* 1 = 0.395343 loss)
I0428 20:00:49.414970 29584 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:49.512073 29584 solver.cpp:219] Iteration 200 (1029.89 iter/s, 0.0970977s/100 iters), loss = 0.225051
I0428 20:00:49.512099 29584 solver.cpp:238]     Train net output #0: loss = 0.225051 (* 1 = 0.225051 loss)
I0428 20:00:49.512106 29584 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:49.605489 29584 solver.cpp:219] Iteration 300 (1070.9 iter/s, 0.0933796s/100 iters), loss = 0.198819
I0428 20:00:49.605526 29584 solver.cpp:238]     Train net output #0: loss = 0.198819 (* 1 = 0.198819 loss)
I0428 20:00:49.605533 29584 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:49.694104 29584 solver.cpp:219] Iteration 400 (1129.08 iter/s, 0.0885677s/100 iters), loss = 0.0947029
I0428 20:00:49.694129 29584 solver.cpp:238]     Train net output #0: loss = 0.0947029 (* 1 = 0.0947029 loss)
I0428 20:00:49.694136 29584 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:49.781359 29584 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:49.843389 29591 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:49.843925 29584 solver.cpp:398]     Test net output #0: accuracy = 0.9593
I0428 20:00:49.843948 29584 solver.cpp:398]     Test net output #1: loss = 0.130337 (* 1 = 0.130337 loss)
I0428 20:00:49.844887 29584 solver.cpp:219] Iteration 500 (663.377 iter/s, 0.150744s/100 iters), loss = 0.179923
I0428 20:00:49.844928 29584 solver.cpp:238]     Train net output #0: loss = 0.179923 (* 1 = 0.179923 loss)
I0428 20:00:49.844936 29584 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:49.942785 29584 solver.cpp:219] Iteration 600 (1021.97 iter/s, 0.0978501s/100 iters), loss = 0.0969973
I0428 20:00:49.942811 29584 solver.cpp:238]     Train net output #0: loss = 0.0969974 (* 1 = 0.0969974 loss)
I0428 20:00:49.942837 29584 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:50.033089 29584 solver.cpp:219] Iteration 700 (1107.8 iter/s, 0.0902687s/100 iters), loss = 0.179568
I0428 20:00:50.033114 29584 solver.cpp:238]     Train net output #0: loss = 0.179568 (* 1 = 0.179568 loss)
I0428 20:00:50.033138 29584 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:50.123189 29584 solver.cpp:219] Iteration 800 (1110.3 iter/s, 0.0900659s/100 iters), loss = 0.325422
I0428 20:00:50.123214 29584 solver.cpp:238]     Train net output #0: loss = 0.325422 (* 1 = 0.325422 loss)
I0428 20:00:50.123237 29584 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:50.212908 29584 solver.cpp:219] Iteration 900 (1115.01 iter/s, 0.0896849s/100 iters), loss = 0.142968
I0428 20:00:50.212934 29584 solver.cpp:238]     Train net output #0: loss = 0.142969 (* 1 = 0.142969 loss)
I0428 20:00:50.212954 29584 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:50.242182 29590 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:50.299926 29584 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:50.300986 29584 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:50.301615 29584 solver.cpp:311] Iteration 1000, loss = 0.186433
I0428 20:00:50.301630 29584 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:50.364693 29591 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:50.365252 29584 solver.cpp:398]     Test net output #0: accuracy = 0.9695
I0428 20:00:50.365288 29584 solver.cpp:398]     Test net output #1: loss = 0.0916148 (* 1 = 0.0916148 loss)
I0428 20:00:50.365293 29584 solver.cpp:316] Optimization Done.
I0428 20:00:50.365305 29584 caffe.cpp:259] Optimization Done.
