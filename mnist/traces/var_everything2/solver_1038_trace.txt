I0428 20:06:48.676957 30960 caffe.cpp:218] Using GPUs 0
I0428 20:06:48.713887 30960 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:49.169039 30960 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1038.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:49.169174 30960 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1038.prototxt
I0428 20:06:49.169531 30960 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:49.169562 30960 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:49.169642 30960 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:49.169706 30960 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:49.169787 30960 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:49.169806 30960 net.cpp:86] Creating Layer mnist
I0428 20:06:49.169813 30960 net.cpp:382] mnist -> data
I0428 20:06:49.169831 30960 net.cpp:382] mnist -> label
I0428 20:06:49.170810 30960 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:49.173027 30960 net.cpp:124] Setting up mnist
I0428 20:06:49.173046 30960 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:49.173054 30960 net.cpp:131] Top shape: 64 (64)
I0428 20:06:49.173059 30960 net.cpp:139] Memory required for data: 200960
I0428 20:06:49.173082 30960 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:49.173099 30960 net.cpp:86] Creating Layer conv0
I0428 20:06:49.173115 30960 net.cpp:408] conv0 <- data
I0428 20:06:49.173125 30960 net.cpp:382] conv0 -> conv0
I0428 20:06:49.401234 30960 net.cpp:124] Setting up conv0
I0428 20:06:49.401260 30960 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:49.401264 30960 net.cpp:139] Memory required for data: 3887360
I0428 20:06:49.401278 30960 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:49.401290 30960 net.cpp:86] Creating Layer pool0
I0428 20:06:49.401293 30960 net.cpp:408] pool0 <- conv0
I0428 20:06:49.401298 30960 net.cpp:382] pool0 -> pool0
I0428 20:06:49.401357 30960 net.cpp:124] Setting up pool0
I0428 20:06:49.401362 30960 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:49.401365 30960 net.cpp:139] Memory required for data: 4808960
I0428 20:06:49.401367 30960 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:49.401377 30960 net.cpp:86] Creating Layer conv1
I0428 20:06:49.401381 30960 net.cpp:408] conv1 <- pool0
I0428 20:06:49.401384 30960 net.cpp:382] conv1 -> conv1
I0428 20:06:49.404182 30960 net.cpp:124] Setting up conv1
I0428 20:06:49.404196 30960 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:49.404201 30960 net.cpp:139] Memory required for data: 4890880
I0428 20:06:49.404211 30960 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:49.404218 30960 net.cpp:86] Creating Layer pool1
I0428 20:06:49.404222 30960 net.cpp:408] pool1 <- conv1
I0428 20:06:49.404227 30960 net.cpp:382] pool1 -> pool1
I0428 20:06:49.404276 30960 net.cpp:124] Setting up pool1
I0428 20:06:49.404281 30960 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:49.404284 30960 net.cpp:139] Memory required for data: 4911360
I0428 20:06:49.404287 30960 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:49.404294 30960 net.cpp:86] Creating Layer ip1
I0428 20:06:49.404296 30960 net.cpp:408] ip1 <- pool1
I0428 20:06:49.404300 30960 net.cpp:382] ip1 -> ip1
I0428 20:06:49.404395 30960 net.cpp:124] Setting up ip1
I0428 20:06:49.404403 30960 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:49.404405 30960 net.cpp:139] Memory required for data: 4917760
I0428 20:06:49.404412 30960 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:49.404417 30960 net.cpp:86] Creating Layer relu1
I0428 20:06:49.404420 30960 net.cpp:408] relu1 <- ip1
I0428 20:06:49.404424 30960 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:49.404574 30960 net.cpp:124] Setting up relu1
I0428 20:06:49.404583 30960 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:49.404587 30960 net.cpp:139] Memory required for data: 4924160
I0428 20:06:49.404588 30960 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:49.404594 30960 net.cpp:86] Creating Layer ip2
I0428 20:06:49.404597 30960 net.cpp:408] ip2 <- ip1
I0428 20:06:49.404602 30960 net.cpp:382] ip2 -> ip2
I0428 20:06:49.404691 30960 net.cpp:124] Setting up ip2
I0428 20:06:49.404697 30960 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:49.404700 30960 net.cpp:139] Memory required for data: 4930560
I0428 20:06:49.404706 30960 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:49.404711 30960 net.cpp:86] Creating Layer relu2
I0428 20:06:49.404713 30960 net.cpp:408] relu2 <- ip2
I0428 20:06:49.404716 30960 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:49.405526 30960 net.cpp:124] Setting up relu2
I0428 20:06:49.405539 30960 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:49.405558 30960 net.cpp:139] Memory required for data: 4936960
I0428 20:06:49.405562 30960 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:49.405570 30960 net.cpp:86] Creating Layer ip3
I0428 20:06:49.405572 30960 net.cpp:408] ip3 <- ip2
I0428 20:06:49.405578 30960 net.cpp:382] ip3 -> ip3
I0428 20:06:49.405673 30960 net.cpp:124] Setting up ip3
I0428 20:06:49.405681 30960 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:49.405684 30960 net.cpp:139] Memory required for data: 4939520
I0428 20:06:49.405692 30960 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:49.405697 30960 net.cpp:86] Creating Layer relu3
I0428 20:06:49.405700 30960 net.cpp:408] relu3 <- ip3
I0428 20:06:49.405704 30960 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:49.405879 30960 net.cpp:124] Setting up relu3
I0428 20:06:49.405889 30960 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:49.405891 30960 net.cpp:139] Memory required for data: 4942080
I0428 20:06:49.405894 30960 layer_factory.hpp:77] Creating layer loss
I0428 20:06:49.405900 30960 net.cpp:86] Creating Layer loss
I0428 20:06:49.405902 30960 net.cpp:408] loss <- ip3
I0428 20:06:49.405906 30960 net.cpp:408] loss <- label
I0428 20:06:49.405911 30960 net.cpp:382] loss -> loss
I0428 20:06:49.405928 30960 layer_factory.hpp:77] Creating layer loss
I0428 20:06:49.406163 30960 net.cpp:124] Setting up loss
I0428 20:06:49.406172 30960 net.cpp:131] Top shape: (1)
I0428 20:06:49.406177 30960 net.cpp:134]     with loss weight 1
I0428 20:06:49.406190 30960 net.cpp:139] Memory required for data: 4942084
I0428 20:06:49.406194 30960 net.cpp:200] loss needs backward computation.
I0428 20:06:49.406198 30960 net.cpp:200] relu3 needs backward computation.
I0428 20:06:49.406200 30960 net.cpp:200] ip3 needs backward computation.
I0428 20:06:49.406203 30960 net.cpp:200] relu2 needs backward computation.
I0428 20:06:49.406206 30960 net.cpp:200] ip2 needs backward computation.
I0428 20:06:49.406209 30960 net.cpp:200] relu1 needs backward computation.
I0428 20:06:49.406211 30960 net.cpp:200] ip1 needs backward computation.
I0428 20:06:49.406214 30960 net.cpp:200] pool1 needs backward computation.
I0428 20:06:49.406217 30960 net.cpp:200] conv1 needs backward computation.
I0428 20:06:49.406220 30960 net.cpp:200] pool0 needs backward computation.
I0428 20:06:49.406224 30960 net.cpp:200] conv0 needs backward computation.
I0428 20:06:49.406227 30960 net.cpp:202] mnist does not need backward computation.
I0428 20:06:49.406230 30960 net.cpp:244] This network produces output loss
I0428 20:06:49.406240 30960 net.cpp:257] Network initialization done.
I0428 20:06:49.406618 30960 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1038.prototxt
I0428 20:06:49.406646 30960 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:49.406734 30960 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:49.406810 30960 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:49.406854 30960 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:49.406869 30960 net.cpp:86] Creating Layer mnist
I0428 20:06:49.406874 30960 net.cpp:382] mnist -> data
I0428 20:06:49.406882 30960 net.cpp:382] mnist -> label
I0428 20:06:49.406961 30960 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:49.408972 30960 net.cpp:124] Setting up mnist
I0428 20:06:49.409018 30960 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:49.409024 30960 net.cpp:131] Top shape: 100 (100)
I0428 20:06:49.409027 30960 net.cpp:139] Memory required for data: 314000
I0428 20:06:49.409031 30960 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:49.409044 30960 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:49.409047 30960 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:49.409056 30960 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:49.409067 30960 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:49.409230 30960 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:49.409240 30960 net.cpp:131] Top shape: 100 (100)
I0428 20:06:49.409243 30960 net.cpp:131] Top shape: 100 (100)
I0428 20:06:49.409245 30960 net.cpp:139] Memory required for data: 314800
I0428 20:06:49.409248 30960 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:49.409257 30960 net.cpp:86] Creating Layer conv0
I0428 20:06:49.409260 30960 net.cpp:408] conv0 <- data
I0428 20:06:49.409265 30960 net.cpp:382] conv0 -> conv0
I0428 20:06:49.410881 30960 net.cpp:124] Setting up conv0
I0428 20:06:49.410895 30960 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:49.410914 30960 net.cpp:139] Memory required for data: 6074800
I0428 20:06:49.410923 30960 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:49.410928 30960 net.cpp:86] Creating Layer pool0
I0428 20:06:49.410933 30960 net.cpp:408] pool0 <- conv0
I0428 20:06:49.410936 30960 net.cpp:382] pool0 -> pool0
I0428 20:06:49.410970 30960 net.cpp:124] Setting up pool0
I0428 20:06:49.410975 30960 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:49.410979 30960 net.cpp:139] Memory required for data: 7514800
I0428 20:06:49.410981 30960 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:49.411005 30960 net.cpp:86] Creating Layer conv1
I0428 20:06:49.411008 30960 net.cpp:408] conv1 <- pool0
I0428 20:06:49.411012 30960 net.cpp:382] conv1 -> conv1
I0428 20:06:49.413108 30960 net.cpp:124] Setting up conv1
I0428 20:06:49.413137 30960 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:49.413141 30960 net.cpp:139] Memory required for data: 7642800
I0428 20:06:49.413166 30960 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:49.413172 30960 net.cpp:86] Creating Layer pool1
I0428 20:06:49.413174 30960 net.cpp:408] pool1 <- conv1
I0428 20:06:49.413180 30960 net.cpp:382] pool1 -> pool1
I0428 20:06:49.413239 30960 net.cpp:124] Setting up pool1
I0428 20:06:49.413244 30960 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:49.413246 30960 net.cpp:139] Memory required for data: 7674800
I0428 20:06:49.413249 30960 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:49.413254 30960 net.cpp:86] Creating Layer ip1
I0428 20:06:49.413257 30960 net.cpp:408] ip1 <- pool1
I0428 20:06:49.413262 30960 net.cpp:382] ip1 -> ip1
I0428 20:06:49.413391 30960 net.cpp:124] Setting up ip1
I0428 20:06:49.413399 30960 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:49.413414 30960 net.cpp:139] Memory required for data: 7684800
I0428 20:06:49.413421 30960 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:49.413425 30960 net.cpp:86] Creating Layer relu1
I0428 20:06:49.413429 30960 net.cpp:408] relu1 <- ip1
I0428 20:06:49.413434 30960 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:49.413611 30960 net.cpp:124] Setting up relu1
I0428 20:06:49.413622 30960 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:49.413626 30960 net.cpp:139] Memory required for data: 7694800
I0428 20:06:49.413630 30960 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:49.413645 30960 net.cpp:86] Creating Layer ip2
I0428 20:06:49.413647 30960 net.cpp:408] ip2 <- ip1
I0428 20:06:49.413653 30960 net.cpp:382] ip2 -> ip2
I0428 20:06:49.413775 30960 net.cpp:124] Setting up ip2
I0428 20:06:49.413784 30960 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:49.413786 30960 net.cpp:139] Memory required for data: 7704800
I0428 20:06:49.413794 30960 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:49.413797 30960 net.cpp:86] Creating Layer relu2
I0428 20:06:49.413801 30960 net.cpp:408] relu2 <- ip2
I0428 20:06:49.413805 30960 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:49.413947 30960 net.cpp:124] Setting up relu2
I0428 20:06:49.413955 30960 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:49.413959 30960 net.cpp:139] Memory required for data: 7714800
I0428 20:06:49.413961 30960 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:49.413967 30960 net.cpp:86] Creating Layer ip3
I0428 20:06:49.413970 30960 net.cpp:408] ip3 <- ip2
I0428 20:06:49.413975 30960 net.cpp:382] ip3 -> ip3
I0428 20:06:49.414083 30960 net.cpp:124] Setting up ip3
I0428 20:06:49.414089 30960 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:49.414093 30960 net.cpp:139] Memory required for data: 7718800
I0428 20:06:49.414101 30960 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:49.414105 30960 net.cpp:86] Creating Layer relu3
I0428 20:06:49.414114 30960 net.cpp:408] relu3 <- ip3
I0428 20:06:49.414121 30960 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:49.414921 30960 net.cpp:124] Setting up relu3
I0428 20:06:49.414932 30960 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:49.414950 30960 net.cpp:139] Memory required for data: 7722800
I0428 20:06:49.414954 30960 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:49.414959 30960 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:49.414963 30960 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:49.414969 30960 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:49.414975 30960 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:49.415050 30960 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:49.415057 30960 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:49.415061 30960 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:49.415065 30960 net.cpp:139] Memory required for data: 7730800
I0428 20:06:49.415067 30960 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:49.415072 30960 net.cpp:86] Creating Layer accuracy
I0428 20:06:49.415076 30960 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:49.415081 30960 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:49.415084 30960 net.cpp:382] accuracy -> accuracy
I0428 20:06:49.415092 30960 net.cpp:124] Setting up accuracy
I0428 20:06:49.415112 30960 net.cpp:131] Top shape: (1)
I0428 20:06:49.415113 30960 net.cpp:139] Memory required for data: 7730804
I0428 20:06:49.415117 30960 layer_factory.hpp:77] Creating layer loss
I0428 20:06:49.415122 30960 net.cpp:86] Creating Layer loss
I0428 20:06:49.415123 30960 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:49.415128 30960 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:49.415132 30960 net.cpp:382] loss -> loss
I0428 20:06:49.415143 30960 layer_factory.hpp:77] Creating layer loss
I0428 20:06:49.415372 30960 net.cpp:124] Setting up loss
I0428 20:06:49.415381 30960 net.cpp:131] Top shape: (1)
I0428 20:06:49.415385 30960 net.cpp:134]     with loss weight 1
I0428 20:06:49.415392 30960 net.cpp:139] Memory required for data: 7730808
I0428 20:06:49.415405 30960 net.cpp:200] loss needs backward computation.
I0428 20:06:49.415410 30960 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:49.415412 30960 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:49.415416 30960 net.cpp:200] relu3 needs backward computation.
I0428 20:06:49.415418 30960 net.cpp:200] ip3 needs backward computation.
I0428 20:06:49.415421 30960 net.cpp:200] relu2 needs backward computation.
I0428 20:06:49.415423 30960 net.cpp:200] ip2 needs backward computation.
I0428 20:06:49.415426 30960 net.cpp:200] relu1 needs backward computation.
I0428 20:06:49.415429 30960 net.cpp:200] ip1 needs backward computation.
I0428 20:06:49.415432 30960 net.cpp:200] pool1 needs backward computation.
I0428 20:06:49.415441 30960 net.cpp:200] conv1 needs backward computation.
I0428 20:06:49.415446 30960 net.cpp:200] pool0 needs backward computation.
I0428 20:06:49.415448 30960 net.cpp:200] conv0 needs backward computation.
I0428 20:06:49.415452 30960 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:49.415460 30960 net.cpp:202] mnist does not need backward computation.
I0428 20:06:49.415462 30960 net.cpp:244] This network produces output accuracy
I0428 20:06:49.415467 30960 net.cpp:244] This network produces output loss
I0428 20:06:49.415475 30960 net.cpp:257] Network initialization done.
I0428 20:06:49.415515 30960 solver.cpp:56] Solver scaffolding done.
I0428 20:06:49.415899 30960 caffe.cpp:248] Starting Optimization
I0428 20:06:49.415921 30960 solver.cpp:273] Solving LeNet
I0428 20:06:49.415940 30960 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:49.416834 30960 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:49.422381 30960 blocking_queue.cpp:49] Waiting for data
I0428 20:06:49.490010 30967 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:49.490623 30960 solver.cpp:398]     Test net output #0: accuracy = 0.1114
I0428 20:06:49.490658 30960 solver.cpp:398]     Test net output #1: loss = 2.30716 (* 1 = 2.30716 loss)
I0428 20:06:49.494309 30960 solver.cpp:219] Iteration 0 (-1.5042e-31 iter/s, 0.078338s/100 iters), loss = 2.31808
I0428 20:06:49.494349 30960 solver.cpp:238]     Train net output #0: loss = 2.31808 (* 1 = 2.31808 loss)
I0428 20:06:49.494361 30960 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:49.593330 30960 solver.cpp:219] Iteration 100 (1010.25 iter/s, 0.0989851s/100 iters), loss = 1.03109
I0428 20:06:49.593356 30960 solver.cpp:238]     Train net output #0: loss = 1.03109 (* 1 = 1.03109 loss)
I0428 20:06:49.593364 30960 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:49.682595 30960 solver.cpp:219] Iteration 200 (1120.71 iter/s, 0.0892293s/100 iters), loss = 0.51688
I0428 20:06:49.682621 30960 solver.cpp:238]     Train net output #0: loss = 0.51688 (* 1 = 0.51688 loss)
I0428 20:06:49.682628 30960 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:49.769768 30960 solver.cpp:219] Iteration 300 (1147.61 iter/s, 0.0871373s/100 iters), loss = 0.534437
I0428 20:06:49.769794 30960 solver.cpp:238]     Train net output #0: loss = 0.534437 (* 1 = 0.534437 loss)
I0428 20:06:49.769819 30960 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:49.865097 30960 solver.cpp:219] Iteration 400 (1049.39 iter/s, 0.0952933s/100 iters), loss = 0.396092
I0428 20:06:49.865146 30960 solver.cpp:238]     Train net output #0: loss = 0.396092 (* 1 = 0.396092 loss)
I0428 20:06:49.865154 30960 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:49.956238 30960 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:50.032032 30967 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:50.032649 30960 solver.cpp:398]     Test net output #0: accuracy = 0.852
I0428 20:06:50.032701 30960 solver.cpp:398]     Test net output #1: loss = 0.425457 (* 1 = 0.425457 loss)
I0428 20:06:50.033653 30960 solver.cpp:219] Iteration 500 (593.464 iter/s, 0.168502s/100 iters), loss = 0.36843
I0428 20:06:50.033718 30960 solver.cpp:238]     Train net output #0: loss = 0.36843 (* 1 = 0.36843 loss)
I0428 20:06:50.033731 30960 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:50.130538 30960 solver.cpp:219] Iteration 600 (1032.92 iter/s, 0.0968128s/100 iters), loss = 0.409311
I0428 20:06:50.130579 30960 solver.cpp:238]     Train net output #0: loss = 0.409311 (* 1 = 0.409311 loss)
I0428 20:06:50.130587 30960 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:50.221770 30960 solver.cpp:219] Iteration 700 (1096.73 iter/s, 0.09118s/100 iters), loss = 0.355373
I0428 20:06:50.221796 30960 solver.cpp:238]     Train net output #0: loss = 0.355373 (* 1 = 0.355373 loss)
I0428 20:06:50.221804 30960 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:50.314460 30960 solver.cpp:219] Iteration 800 (1079.28 iter/s, 0.0926546s/100 iters), loss = 0.469285
I0428 20:06:50.314503 30960 solver.cpp:238]     Train net output #0: loss = 0.469285 (* 1 = 0.469285 loss)
I0428 20:06:50.314512 30960 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:50.401823 30960 solver.cpp:219] Iteration 900 (1145.34 iter/s, 0.0873103s/100 iters), loss = 0.348532
I0428 20:06:50.401865 30960 solver.cpp:238]     Train net output #0: loss = 0.348532 (* 1 = 0.348532 loss)
I0428 20:06:50.401871 30960 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:50.431084 30966 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:50.488104 30960 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:50.488904 30960 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:50.489490 30960 solver.cpp:311] Iteration 1000, loss = 0.364401
I0428 20:06:50.489506 30960 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:50.544324 30967 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:50.544917 30960 solver.cpp:398]     Test net output #0: accuracy = 0.8763
I0428 20:06:50.544950 30960 solver.cpp:398]     Test net output #1: loss = 0.324412 (* 1 = 0.324412 loss)
I0428 20:06:50.544956 30960 solver.cpp:316] Optimization Done.
I0428 20:06:50.544960 30960 caffe.cpp:259] Optimization Done.
