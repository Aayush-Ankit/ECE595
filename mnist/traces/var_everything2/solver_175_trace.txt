I0428 19:33:16.179800 23065 caffe.cpp:218] Using GPUs 0
I0428 19:33:16.217236 23065 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:16.727598 23065 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test175.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:16.727741 23065 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test175.prototxt
I0428 19:33:16.728109 23065 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:16.728127 23065 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:16.728215 23065 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:16.728292 23065 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:16.728392 23065 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:16.728415 23065 net.cpp:86] Creating Layer mnist
I0428 19:33:16.728425 23065 net.cpp:382] mnist -> data
I0428 19:33:16.728446 23065 net.cpp:382] mnist -> label
I0428 19:33:16.729550 23065 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:16.732221 23065 net.cpp:124] Setting up mnist
I0428 19:33:16.732239 23065 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:16.732246 23065 net.cpp:131] Top shape: 64 (64)
I0428 19:33:16.732250 23065 net.cpp:139] Memory required for data: 200960
I0428 19:33:16.732257 23065 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:16.732272 23065 net.cpp:86] Creating Layer conv0
I0428 19:33:16.732278 23065 net.cpp:408] conv0 <- data
I0428 19:33:16.732291 23065 net.cpp:382] conv0 -> conv0
I0428 19:33:17.017608 23065 net.cpp:124] Setting up conv0
I0428 19:33:17.017637 23065 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:17.017640 23065 net.cpp:139] Memory required for data: 3887360
I0428 19:33:17.017655 23065 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:17.017668 23065 net.cpp:86] Creating Layer pool0
I0428 19:33:17.017691 23065 net.cpp:408] pool0 <- conv0
I0428 19:33:17.017698 23065 net.cpp:382] pool0 -> pool0
I0428 19:33:17.017743 23065 net.cpp:124] Setting up pool0
I0428 19:33:17.017750 23065 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:17.017752 23065 net.cpp:139] Memory required for data: 4808960
I0428 19:33:17.017756 23065 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:17.017763 23065 net.cpp:86] Creating Layer ip1
I0428 19:33:17.017767 23065 net.cpp:408] ip1 <- pool0
I0428 19:33:17.017771 23065 net.cpp:382] ip1 -> ip1
I0428 19:33:17.018076 23065 net.cpp:124] Setting up ip1
I0428 19:33:17.018085 23065 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:17.018088 23065 net.cpp:139] Memory required for data: 4811520
I0428 19:33:17.018095 23065 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:17.018101 23065 net.cpp:86] Creating Layer relu1
I0428 19:33:17.018105 23065 net.cpp:408] relu1 <- ip1
I0428 19:33:17.018108 23065 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:17.018270 23065 net.cpp:124] Setting up relu1
I0428 19:33:17.018278 23065 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:17.018281 23065 net.cpp:139] Memory required for data: 4814080
I0428 19:33:17.018285 23065 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:17.018291 23065 net.cpp:86] Creating Layer ip2
I0428 19:33:17.018295 23065 net.cpp:408] ip2 <- ip1
I0428 19:33:17.018299 23065 net.cpp:382] ip2 -> ip2
I0428 19:33:17.018391 23065 net.cpp:124] Setting up ip2
I0428 19:33:17.018399 23065 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:17.018402 23065 net.cpp:139] Memory required for data: 4826880
I0428 19:33:17.018409 23065 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:17.018414 23065 net.cpp:86] Creating Layer relu2
I0428 19:33:17.018417 23065 net.cpp:408] relu2 <- ip2
I0428 19:33:17.018421 23065 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:17.019152 23065 net.cpp:124] Setting up relu2
I0428 19:33:17.019165 23065 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:17.019170 23065 net.cpp:139] Memory required for data: 4839680
I0428 19:33:17.019173 23065 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:17.019181 23065 net.cpp:86] Creating Layer ip3
I0428 19:33:17.019183 23065 net.cpp:408] ip3 <- ip2
I0428 19:33:17.019188 23065 net.cpp:382] ip3 -> ip3
I0428 19:33:17.019289 23065 net.cpp:124] Setting up ip3
I0428 19:33:17.019296 23065 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:17.019299 23065 net.cpp:139] Memory required for data: 4842240
I0428 19:33:17.019305 23065 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:17.019311 23065 net.cpp:86] Creating Layer relu3
I0428 19:33:17.019315 23065 net.cpp:408] relu3 <- ip3
I0428 19:33:17.019320 23065 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:17.019466 23065 net.cpp:124] Setting up relu3
I0428 19:33:17.019475 23065 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:17.019479 23065 net.cpp:139] Memory required for data: 4844800
I0428 19:33:17.019481 23065 layer_factory.hpp:77] Creating layer loss
I0428 19:33:17.019487 23065 net.cpp:86] Creating Layer loss
I0428 19:33:17.019491 23065 net.cpp:408] loss <- ip3
I0428 19:33:17.019496 23065 net.cpp:408] loss <- label
I0428 19:33:17.019501 23065 net.cpp:382] loss -> loss
I0428 19:33:17.019520 23065 layer_factory.hpp:77] Creating layer loss
I0428 19:33:17.019742 23065 net.cpp:124] Setting up loss
I0428 19:33:17.019750 23065 net.cpp:131] Top shape: (1)
I0428 19:33:17.019754 23065 net.cpp:134]     with loss weight 1
I0428 19:33:17.019768 23065 net.cpp:139] Memory required for data: 4844804
I0428 19:33:17.019773 23065 net.cpp:200] loss needs backward computation.
I0428 19:33:17.019776 23065 net.cpp:200] relu3 needs backward computation.
I0428 19:33:17.019778 23065 net.cpp:200] ip3 needs backward computation.
I0428 19:33:17.019783 23065 net.cpp:200] relu2 needs backward computation.
I0428 19:33:17.019784 23065 net.cpp:200] ip2 needs backward computation.
I0428 19:33:17.019788 23065 net.cpp:200] relu1 needs backward computation.
I0428 19:33:17.019790 23065 net.cpp:200] ip1 needs backward computation.
I0428 19:33:17.019804 23065 net.cpp:200] pool0 needs backward computation.
I0428 19:33:17.019809 23065 net.cpp:200] conv0 needs backward computation.
I0428 19:33:17.019811 23065 net.cpp:202] mnist does not need backward computation.
I0428 19:33:17.019814 23065 net.cpp:244] This network produces output loss
I0428 19:33:17.019822 23065 net.cpp:257] Network initialization done.
I0428 19:33:17.020125 23065 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test175.prototxt
I0428 19:33:17.020153 23065 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:17.020248 23065 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:17.020313 23065 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:17.020360 23065 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:17.020373 23065 net.cpp:86] Creating Layer mnist
I0428 19:33:17.020377 23065 net.cpp:382] mnist -> data
I0428 19:33:17.020385 23065 net.cpp:382] mnist -> label
I0428 19:33:17.020467 23065 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:17.022429 23065 net.cpp:124] Setting up mnist
I0428 19:33:17.022442 23065 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:17.022447 23065 net.cpp:131] Top shape: 100 (100)
I0428 19:33:17.022450 23065 net.cpp:139] Memory required for data: 314000
I0428 19:33:17.022454 23065 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:17.022464 23065 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:17.022469 23065 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:17.022474 23065 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:17.022480 23065 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:17.022516 23065 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:17.022521 23065 net.cpp:131] Top shape: 100 (100)
I0428 19:33:17.022523 23065 net.cpp:131] Top shape: 100 (100)
I0428 19:33:17.022526 23065 net.cpp:139] Memory required for data: 314800
I0428 19:33:17.022539 23065 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:17.022548 23065 net.cpp:86] Creating Layer conv0
I0428 19:33:17.022552 23065 net.cpp:408] conv0 <- data
I0428 19:33:17.022557 23065 net.cpp:382] conv0 -> conv0
I0428 19:33:17.024277 23065 net.cpp:124] Setting up conv0
I0428 19:33:17.024292 23065 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:17.024296 23065 net.cpp:139] Memory required for data: 6074800
I0428 19:33:17.024305 23065 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:17.024312 23065 net.cpp:86] Creating Layer pool0
I0428 19:33:17.024315 23065 net.cpp:408] pool0 <- conv0
I0428 19:33:17.024319 23065 net.cpp:382] pool0 -> pool0
I0428 19:33:17.024353 23065 net.cpp:124] Setting up pool0
I0428 19:33:17.024358 23065 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:17.024361 23065 net.cpp:139] Memory required for data: 7514800
I0428 19:33:17.024364 23065 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:17.024371 23065 net.cpp:86] Creating Layer ip1
I0428 19:33:17.024374 23065 net.cpp:408] ip1 <- pool0
I0428 19:33:17.024379 23065 net.cpp:382] ip1 -> ip1
I0428 19:33:17.024675 23065 net.cpp:124] Setting up ip1
I0428 19:33:17.024683 23065 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:17.024688 23065 net.cpp:139] Memory required for data: 7518800
I0428 19:33:17.024694 23065 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:17.024698 23065 net.cpp:86] Creating Layer relu1
I0428 19:33:17.024703 23065 net.cpp:408] relu1 <- ip1
I0428 19:33:17.024706 23065 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:17.024868 23065 net.cpp:124] Setting up relu1
I0428 19:33:17.024893 23065 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:17.024896 23065 net.cpp:139] Memory required for data: 7522800
I0428 19:33:17.024899 23065 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:17.024905 23065 net.cpp:86] Creating Layer ip2
I0428 19:33:17.024924 23065 net.cpp:408] ip2 <- ip1
I0428 19:33:17.024930 23065 net.cpp:382] ip2 -> ip2
I0428 19:33:17.025030 23065 net.cpp:124] Setting up ip2
I0428 19:33:17.025038 23065 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:17.025041 23065 net.cpp:139] Memory required for data: 7542800
I0428 19:33:17.025049 23065 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:17.025053 23065 net.cpp:86] Creating Layer relu2
I0428 19:33:17.025058 23065 net.cpp:408] relu2 <- ip2
I0428 19:33:17.025061 23065 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:17.025972 23065 net.cpp:124] Setting up relu2
I0428 19:33:17.025985 23065 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:17.025988 23065 net.cpp:139] Memory required for data: 7562800
I0428 19:33:17.025993 23065 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:17.026000 23065 net.cpp:86] Creating Layer ip3
I0428 19:33:17.026005 23065 net.cpp:408] ip3 <- ip2
I0428 19:33:17.026010 23065 net.cpp:382] ip3 -> ip3
I0428 19:33:17.026166 23065 net.cpp:124] Setting up ip3
I0428 19:33:17.026176 23065 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:17.026180 23065 net.cpp:139] Memory required for data: 7566800
I0428 19:33:17.026186 23065 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:17.026191 23065 net.cpp:86] Creating Layer relu3
I0428 19:33:17.026195 23065 net.cpp:408] relu3 <- ip3
I0428 19:33:17.026199 23065 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:17.026363 23065 net.cpp:124] Setting up relu3
I0428 19:33:17.026372 23065 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:17.026376 23065 net.cpp:139] Memory required for data: 7570800
I0428 19:33:17.026378 23065 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:17.026383 23065 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:17.026386 23065 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:17.026391 23065 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:17.026396 23065 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:17.026430 23065 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:17.026435 23065 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:17.026438 23065 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:17.026453 23065 net.cpp:139] Memory required for data: 7578800
I0428 19:33:17.026455 23065 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:17.026460 23065 net.cpp:86] Creating Layer accuracy
I0428 19:33:17.026463 23065 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:17.026468 23065 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:17.026471 23065 net.cpp:382] accuracy -> accuracy
I0428 19:33:17.026479 23065 net.cpp:124] Setting up accuracy
I0428 19:33:17.026482 23065 net.cpp:131] Top shape: (1)
I0428 19:33:17.026485 23065 net.cpp:139] Memory required for data: 7578804
I0428 19:33:17.026489 23065 layer_factory.hpp:77] Creating layer loss
I0428 19:33:17.026492 23065 net.cpp:86] Creating Layer loss
I0428 19:33:17.026495 23065 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:17.026499 23065 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:17.026511 23065 net.cpp:382] loss -> loss
I0428 19:33:17.026518 23065 layer_factory.hpp:77] Creating layer loss
I0428 19:33:17.026784 23065 net.cpp:124] Setting up loss
I0428 19:33:17.026795 23065 net.cpp:131] Top shape: (1)
I0428 19:33:17.026798 23065 net.cpp:134]     with loss weight 1
I0428 19:33:17.026804 23065 net.cpp:139] Memory required for data: 7578808
I0428 19:33:17.026808 23065 net.cpp:200] loss needs backward computation.
I0428 19:33:17.026811 23065 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:17.026816 23065 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:17.026819 23065 net.cpp:200] relu3 needs backward computation.
I0428 19:33:17.026823 23065 net.cpp:200] ip3 needs backward computation.
I0428 19:33:17.026825 23065 net.cpp:200] relu2 needs backward computation.
I0428 19:33:17.026829 23065 net.cpp:200] ip2 needs backward computation.
I0428 19:33:17.026831 23065 net.cpp:200] relu1 needs backward computation.
I0428 19:33:17.026834 23065 net.cpp:200] ip1 needs backward computation.
I0428 19:33:17.026836 23065 net.cpp:200] pool0 needs backward computation.
I0428 19:33:17.026839 23065 net.cpp:200] conv0 needs backward computation.
I0428 19:33:17.026844 23065 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:17.026847 23065 net.cpp:202] mnist does not need backward computation.
I0428 19:33:17.026850 23065 net.cpp:244] This network produces output accuracy
I0428 19:33:17.026854 23065 net.cpp:244] This network produces output loss
I0428 19:33:17.026865 23065 net.cpp:257] Network initialization done.
I0428 19:33:17.026903 23065 solver.cpp:56] Solver scaffolding done.
I0428 19:33:17.027194 23065 caffe.cpp:248] Starting Optimization
I0428 19:33:17.027201 23065 solver.cpp:273] Solving LeNet
I0428 19:33:17.027204 23065 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:17.028017 23065 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:17.032418 23065 blocking_queue.cpp:49] Waiting for data
I0428 19:33:17.105643 23072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:17.106349 23065 solver.cpp:398]     Test net output #0: accuracy = 0.1101
I0428 19:33:17.106370 23065 solver.cpp:398]     Test net output #1: loss = 2.28356 (* 1 = 2.28356 loss)
I0428 19:33:17.110529 23065 solver.cpp:219] Iteration 0 (2.733 iter/s, 0.0832963s/100 iters), loss = 2.28113
I0428 19:33:17.110553 23065 solver.cpp:238]     Train net output #0: loss = 2.28113 (* 1 = 2.28113 loss)
I0428 19:33:17.110564 23065 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:17.215499 23065 solver.cpp:219] Iteration 100 (953.003 iter/s, 0.104931s/100 iters), loss = 0.907795
I0428 19:33:17.215541 23065 solver.cpp:238]     Train net output #0: loss = 0.907795 (* 1 = 0.907795 loss)
I0428 19:33:17.215548 23065 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:17.315095 23065 solver.cpp:219] Iteration 200 (1004.6 iter/s, 0.099542s/100 iters), loss = 0.488487
I0428 19:33:17.315120 23065 solver.cpp:238]     Train net output #0: loss = 0.488487 (* 1 = 0.488487 loss)
I0428 19:33:17.315126 23065 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:17.418591 23065 solver.cpp:219] Iteration 300 (966.626 iter/s, 0.103453s/100 iters), loss = 0.450005
I0428 19:33:17.418630 23065 solver.cpp:238]     Train net output #0: loss = 0.450005 (* 1 = 0.450005 loss)
I0428 19:33:17.418637 23065 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:17.518146 23065 solver.cpp:219] Iteration 400 (1004.83 iter/s, 0.0995195s/100 iters), loss = 0.690116
I0428 19:33:17.518184 23065 solver.cpp:238]     Train net output #0: loss = 0.690116 (* 1 = 0.690116 loss)
I0428 19:33:17.518191 23065 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:17.620887 23065 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:17.699362 23072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:17.700127 23065 solver.cpp:398]     Test net output #0: accuracy = 0.8505
I0428 19:33:17.700147 23065 solver.cpp:398]     Test net output #1: loss = 0.430058 (* 1 = 0.430058 loss)
I0428 19:33:17.701169 23065 solver.cpp:219] Iteration 500 (546.537 iter/s, 0.18297s/100 iters), loss = 0.644123
I0428 19:33:17.701210 23065 solver.cpp:238]     Train net output #0: loss = 0.644124 (* 1 = 0.644124 loss)
I0428 19:33:17.701220 23065 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:17.804466 23065 solver.cpp:219] Iteration 600 (968.594 iter/s, 0.103242s/100 iters), loss = 0.236229
I0428 19:33:17.804491 23065 solver.cpp:238]     Train net output #0: loss = 0.23623 (* 1 = 0.23623 loss)
I0428 19:33:17.804512 23065 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:17.902894 23065 solver.cpp:219] Iteration 700 (1016.33 iter/s, 0.0983931s/100 iters), loss = 0.427742
I0428 19:33:17.902918 23065 solver.cpp:238]     Train net output #0: loss = 0.427742 (* 1 = 0.427742 loss)
I0428 19:33:17.902940 23065 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:18.004726 23065 solver.cpp:219] Iteration 800 (982.388 iter/s, 0.101793s/100 iters), loss = 0.523438
I0428 19:33:18.004760 23065 solver.cpp:238]     Train net output #0: loss = 0.523438 (* 1 = 0.523438 loss)
I0428 19:33:18.004770 23065 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:18.102231 23065 solver.cpp:219] Iteration 900 (1026.05 iter/s, 0.0974613s/100 iters), loss = 0.289758
I0428 19:33:18.102257 23065 solver.cpp:238]     Train net output #0: loss = 0.289758 (* 1 = 0.289758 loss)
I0428 19:33:18.102264 23065 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:18.134841 23071 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:18.199800 23065 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:18.201061 23065 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:18.202024 23065 solver.cpp:311] Iteration 1000, loss = 0.241572
I0428 19:33:18.202054 23065 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:18.280091 23072 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:18.280854 23065 solver.cpp:398]     Test net output #0: accuracy = 0.8685
I0428 19:33:18.280874 23065 solver.cpp:398]     Test net output #1: loss = 0.35344 (* 1 = 0.35344 loss)
I0428 19:33:18.280879 23065 solver.cpp:316] Optimization Done.
I0428 19:33:18.280881 23065 caffe.cpp:259] Optimization Done.
