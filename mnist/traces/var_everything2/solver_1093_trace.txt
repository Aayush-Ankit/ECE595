I0428 20:08:48.565836 31491 caffe.cpp:218] Using GPUs 0
I0428 20:08:48.606485 31491 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:49.128017 31491 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1093.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:49.128193 31491 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1093.prototxt
I0428 20:08:49.128549 31491 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:49.128571 31491 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:49.128661 31491 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:08:49.128763 31491 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:49.128903 31491 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:49.128939 31491 net.cpp:86] Creating Layer mnist
I0428 20:08:49.128952 31491 net.cpp:382] mnist -> data
I0428 20:08:49.128985 31491 net.cpp:382] mnist -> label
I0428 20:08:49.130195 31491 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:49.132675 31491 net.cpp:124] Setting up mnist
I0428 20:08:49.132699 31491 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:49.132709 31491 net.cpp:131] Top shape: 64 (64)
I0428 20:08:49.132715 31491 net.cpp:139] Memory required for data: 200960
I0428 20:08:49.132727 31491 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:49.132752 31491 net.cpp:86] Creating Layer conv0
I0428 20:08:49.132763 31491 net.cpp:408] conv0 <- data
I0428 20:08:49.132782 31491 net.cpp:382] conv0 -> conv0
I0428 20:08:49.423082 31491 net.cpp:124] Setting up conv0
I0428 20:08:49.423115 31491 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:49.423121 31491 net.cpp:139] Memory required for data: 3887360
I0428 20:08:49.423143 31491 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:49.423161 31491 net.cpp:86] Creating Layer pool0
I0428 20:08:49.423169 31491 net.cpp:408] pool0 <- conv0
I0428 20:08:49.423179 31491 net.cpp:382] pool0 -> pool0
I0428 20:08:49.423244 31491 net.cpp:124] Setting up pool0
I0428 20:08:49.423254 31491 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:49.423281 31491 net.cpp:139] Memory required for data: 4808960
I0428 20:08:49.423288 31491 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:49.423307 31491 net.cpp:86] Creating Layer conv1
I0428 20:08:49.423315 31491 net.cpp:408] conv1 <- pool0
I0428 20:08:49.423324 31491 net.cpp:382] conv1 -> conv1
I0428 20:08:49.426312 31491 net.cpp:124] Setting up conv1
I0428 20:08:49.426331 31491 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:08:49.426337 31491 net.cpp:139] Memory required for data: 5218560
I0428 20:08:49.426352 31491 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:49.426365 31491 net.cpp:86] Creating Layer pool1
I0428 20:08:49.426373 31491 net.cpp:408] pool1 <- conv1
I0428 20:08:49.426383 31491 net.cpp:382] pool1 -> pool1
I0428 20:08:49.426431 31491 net.cpp:124] Setting up pool1
I0428 20:08:49.426441 31491 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:08:49.426447 31491 net.cpp:139] Memory required for data: 5320960
I0428 20:08:49.426453 31491 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:49.426466 31491 net.cpp:86] Creating Layer ip1
I0428 20:08:49.426477 31491 net.cpp:408] ip1 <- pool1
I0428 20:08:49.426487 31491 net.cpp:382] ip1 -> ip1
I0428 20:08:49.427518 31491 net.cpp:124] Setting up ip1
I0428 20:08:49.427534 31491 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:49.427541 31491 net.cpp:139] Memory required for data: 5323520
I0428 20:08:49.427556 31491 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:49.427567 31491 net.cpp:86] Creating Layer relu1
I0428 20:08:49.427573 31491 net.cpp:408] relu1 <- ip1
I0428 20:08:49.427582 31491 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:49.427784 31491 net.cpp:124] Setting up relu1
I0428 20:08:49.427796 31491 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:49.427803 31491 net.cpp:139] Memory required for data: 5326080
I0428 20:08:49.427809 31491 layer_factory.hpp:77] Creating layer loss
I0428 20:08:49.427819 31491 net.cpp:86] Creating Layer loss
I0428 20:08:49.427825 31491 net.cpp:408] loss <- ip1
I0428 20:08:49.427834 31491 net.cpp:408] loss <- label
I0428 20:08:49.427842 31491 net.cpp:382] loss -> loss
I0428 20:08:49.427865 31491 layer_factory.hpp:77] Creating layer loss
I0428 20:08:49.428761 31491 net.cpp:124] Setting up loss
I0428 20:08:49.428776 31491 net.cpp:131] Top shape: (1)
I0428 20:08:49.428782 31491 net.cpp:134]     with loss weight 1
I0428 20:08:49.428808 31491 net.cpp:139] Memory required for data: 5326084
I0428 20:08:49.428822 31491 net.cpp:200] loss needs backward computation.
I0428 20:08:49.428829 31491 net.cpp:200] relu1 needs backward computation.
I0428 20:08:49.428835 31491 net.cpp:200] ip1 needs backward computation.
I0428 20:08:49.428841 31491 net.cpp:200] pool1 needs backward computation.
I0428 20:08:49.428848 31491 net.cpp:200] conv1 needs backward computation.
I0428 20:08:49.428853 31491 net.cpp:200] pool0 needs backward computation.
I0428 20:08:49.428858 31491 net.cpp:200] conv0 needs backward computation.
I0428 20:08:49.428865 31491 net.cpp:202] mnist does not need backward computation.
I0428 20:08:49.428871 31491 net.cpp:244] This network produces output loss
I0428 20:08:49.428885 31491 net.cpp:257] Network initialization done.
I0428 20:08:49.429173 31491 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1093.prototxt
I0428 20:08:49.429208 31491 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:49.429296 31491 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:08:49.429407 31491 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:49.429471 31491 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:49.429491 31491 net.cpp:86] Creating Layer mnist
I0428 20:08:49.429499 31491 net.cpp:382] mnist -> data
I0428 20:08:49.429512 31491 net.cpp:382] mnist -> label
I0428 20:08:49.429641 31491 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:49.431763 31491 net.cpp:124] Setting up mnist
I0428 20:08:49.431779 31491 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:49.431789 31491 net.cpp:131] Top shape: 100 (100)
I0428 20:08:49.431795 31491 net.cpp:139] Memory required for data: 314000
I0428 20:08:49.431802 31491 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:49.431813 31491 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:49.431819 31491 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:49.431829 31491 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:49.431841 31491 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:49.431948 31491 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:49.431958 31491 net.cpp:131] Top shape: 100 (100)
I0428 20:08:49.431965 31491 net.cpp:131] Top shape: 100 (100)
I0428 20:08:49.431972 31491 net.cpp:139] Memory required for data: 314800
I0428 20:08:49.431977 31491 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:49.431993 31491 net.cpp:86] Creating Layer conv0
I0428 20:08:49.432000 31491 net.cpp:408] conv0 <- data
I0428 20:08:49.432010 31491 net.cpp:382] conv0 -> conv0
I0428 20:08:49.432852 31491 net.cpp:124] Setting up conv0
I0428 20:08:49.432868 31491 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:49.432874 31491 net.cpp:139] Memory required for data: 6074800
I0428 20:08:49.432890 31491 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:49.432901 31491 net.cpp:86] Creating Layer pool0
I0428 20:08:49.432910 31491 net.cpp:408] pool0 <- conv0
I0428 20:08:49.432919 31491 net.cpp:382] pool0 -> pool0
I0428 20:08:49.432965 31491 net.cpp:124] Setting up pool0
I0428 20:08:49.432973 31491 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:49.432979 31491 net.cpp:139] Memory required for data: 7514800
I0428 20:08:49.432986 31491 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:49.432999 31491 net.cpp:86] Creating Layer conv1
I0428 20:08:49.433007 31491 net.cpp:408] conv1 <- pool0
I0428 20:08:49.433017 31491 net.cpp:382] conv1 -> conv1
I0428 20:08:49.435190 31491 net.cpp:124] Setting up conv1
I0428 20:08:49.435206 31491 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:08:49.435212 31491 net.cpp:139] Memory required for data: 8154800
I0428 20:08:49.435227 31491 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:49.435238 31491 net.cpp:86] Creating Layer pool1
I0428 20:08:49.435261 31491 net.cpp:408] pool1 <- conv1
I0428 20:08:49.435271 31491 net.cpp:382] pool1 -> pool1
I0428 20:08:49.435338 31491 net.cpp:124] Setting up pool1
I0428 20:08:49.435348 31491 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:08:49.435354 31491 net.cpp:139] Memory required for data: 8314800
I0428 20:08:49.435360 31491 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:49.435370 31491 net.cpp:86] Creating Layer ip1
I0428 20:08:49.435379 31491 net.cpp:408] ip1 <- pool1
I0428 20:08:49.435389 31491 net.cpp:382] ip1 -> ip1
I0428 20:08:49.435524 31491 net.cpp:124] Setting up ip1
I0428 20:08:49.435534 31491 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:49.435540 31491 net.cpp:139] Memory required for data: 8318800
I0428 20:08:49.435554 31491 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:49.435561 31491 net.cpp:86] Creating Layer relu1
I0428 20:08:49.435569 31491 net.cpp:408] relu1 <- ip1
I0428 20:08:49.435577 31491 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:49.436403 31491 net.cpp:124] Setting up relu1
I0428 20:08:49.436419 31491 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:49.436425 31491 net.cpp:139] Memory required for data: 8322800
I0428 20:08:49.436431 31491 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:08:49.436442 31491 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:08:49.436450 31491 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:08:49.436458 31491 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:08:49.436470 31491 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:08:49.436514 31491 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:08:49.436523 31491 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:49.436532 31491 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:49.436537 31491 net.cpp:139] Memory required for data: 8330800
I0428 20:08:49.436542 31491 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:49.436552 31491 net.cpp:86] Creating Layer accuracy
I0428 20:08:49.436563 31491 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:08:49.436570 31491 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:49.436578 31491 net.cpp:382] accuracy -> accuracy
I0428 20:08:49.436591 31491 net.cpp:124] Setting up accuracy
I0428 20:08:49.436599 31491 net.cpp:131] Top shape: (1)
I0428 20:08:49.436605 31491 net.cpp:139] Memory required for data: 8330804
I0428 20:08:49.436612 31491 layer_factory.hpp:77] Creating layer loss
I0428 20:08:49.436620 31491 net.cpp:86] Creating Layer loss
I0428 20:08:49.436627 31491 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:08:49.436635 31491 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:49.436641 31491 net.cpp:382] loss -> loss
I0428 20:08:49.436652 31491 layer_factory.hpp:77] Creating layer loss
I0428 20:08:49.436923 31491 net.cpp:124] Setting up loss
I0428 20:08:49.436935 31491 net.cpp:131] Top shape: (1)
I0428 20:08:49.436942 31491 net.cpp:134]     with loss weight 1
I0428 20:08:49.436954 31491 net.cpp:139] Memory required for data: 8330808
I0428 20:08:49.436959 31491 net.cpp:200] loss needs backward computation.
I0428 20:08:49.436971 31491 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:49.436980 31491 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:08:49.436986 31491 net.cpp:200] relu1 needs backward computation.
I0428 20:08:49.436991 31491 net.cpp:200] ip1 needs backward computation.
I0428 20:08:49.436997 31491 net.cpp:200] pool1 needs backward computation.
I0428 20:08:49.437003 31491 net.cpp:200] conv1 needs backward computation.
I0428 20:08:49.437010 31491 net.cpp:200] pool0 needs backward computation.
I0428 20:08:49.437016 31491 net.cpp:200] conv0 needs backward computation.
I0428 20:08:49.437028 31491 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:49.437036 31491 net.cpp:202] mnist does not need backward computation.
I0428 20:08:49.437041 31491 net.cpp:244] This network produces output accuracy
I0428 20:08:49.437048 31491 net.cpp:244] This network produces output loss
I0428 20:08:49.437077 31491 net.cpp:257] Network initialization done.
I0428 20:08:49.437119 31491 solver.cpp:56] Solver scaffolding done.
I0428 20:08:49.437350 31491 caffe.cpp:248] Starting Optimization
I0428 20:08:49.437357 31491 solver.cpp:273] Solving LeNet
I0428 20:08:49.437362 31491 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:49.438169 31491 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:49.443013 31491 blocking_queue.cpp:49] Waiting for data
I0428 20:08:49.513098 31498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:49.513659 31491 solver.cpp:398]     Test net output #0: accuracy = 0.0875
I0428 20:08:49.513679 31491 solver.cpp:398]     Test net output #1: loss = 2.34182 (* 1 = 2.34182 loss)
I0428 20:08:49.517119 31491 solver.cpp:219] Iteration 0 (-5.00174e-31 iter/s, 0.0797256s/100 iters), loss = 2.3287
I0428 20:08:49.517160 31491 solver.cpp:238]     Train net output #0: loss = 2.3287 (* 1 = 2.3287 loss)
I0428 20:08:49.517191 31491 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:49.616485 31491 solver.cpp:219] Iteration 100 (1006.89 iter/s, 0.0993157s/100 iters), loss = 1.28828
I0428 20:08:49.616514 31491 solver.cpp:238]     Train net output #0: loss = 1.28828 (* 1 = 1.28828 loss)
I0428 20:08:49.616540 31491 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:49.716817 31491 solver.cpp:219] Iteration 200 (997.104 iter/s, 0.10029s/100 iters), loss = 1.08453
I0428 20:08:49.716845 31491 solver.cpp:238]     Train net output #0: loss = 1.08453 (* 1 = 1.08453 loss)
I0428 20:08:49.716872 31491 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:49.815222 31491 solver.cpp:219] Iteration 300 (1016.57 iter/s, 0.0983695s/100 iters), loss = 0.665164
I0428 20:08:49.815251 31491 solver.cpp:238]     Train net output #0: loss = 0.665164 (* 1 = 0.665164 loss)
I0428 20:08:49.815276 31491 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:49.904032 31491 solver.cpp:219] Iteration 400 (1126.45 iter/s, 0.0887746s/100 iters), loss = 0.878357
I0428 20:08:49.904059 31491 solver.cpp:238]     Train net output #0: loss = 0.878357 (* 1 = 0.878357 loss)
I0428 20:08:49.904084 31491 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:49.989594 31491 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:50.065946 31498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:50.066547 31491 solver.cpp:398]     Test net output #0: accuracy = 0.7758
I0428 20:08:50.066576 31491 solver.cpp:398]     Test net output #1: loss = 0.59329 (* 1 = 0.59329 loss)
I0428 20:08:50.067570 31491 solver.cpp:219] Iteration 500 (611.628 iter/s, 0.163498s/100 iters), loss = 0.737898
I0428 20:08:50.067620 31491 solver.cpp:238]     Train net output #0: loss = 0.737898 (* 1 = 0.737898 loss)
I0428 20:08:50.067634 31491 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:50.166721 31491 solver.cpp:219] Iteration 600 (1009.07 iter/s, 0.0991013s/100 iters), loss = 0.469173
I0428 20:08:50.166751 31491 solver.cpp:238]     Train net output #0: loss = 0.469173 (* 1 = 0.469173 loss)
I0428 20:08:50.166762 31491 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:50.253511 31491 solver.cpp:219] Iteration 700 (1152.69 iter/s, 0.0867533s/100 iters), loss = 0.504378
I0428 20:08:50.253540 31491 solver.cpp:238]     Train net output #0: loss = 0.504378 (* 1 = 0.504378 loss)
I0428 20:08:50.253564 31491 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:50.341814 31491 solver.cpp:219] Iteration 800 (1132.93 iter/s, 0.0882669s/100 iters), loss = 0.525238
I0428 20:08:50.341842 31491 solver.cpp:238]     Train net output #0: loss = 0.525238 (* 1 = 0.525238 loss)
I0428 20:08:50.341868 31491 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:50.431563 31491 solver.cpp:219] Iteration 900 (1114.66 iter/s, 0.0897136s/100 iters), loss = 0.493469
I0428 20:08:50.431593 31491 solver.cpp:238]     Train net output #0: loss = 0.493469 (* 1 = 0.493469 loss)
I0428 20:08:50.431619 31491 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:50.461112 31497 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:50.519520 31491 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:50.520416 31491 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:50.521041 31491 solver.cpp:311] Iteration 1000, loss = 0.174205
I0428 20:08:50.521059 31491 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:50.596818 31498 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:50.597421 31491 solver.cpp:398]     Test net output #0: accuracy = 0.9702
I0428 20:08:50.597443 31491 solver.cpp:398]     Test net output #1: loss = 0.0953525 (* 1 = 0.0953525 loss)
I0428 20:08:50.597452 31491 solver.cpp:316] Optimization Done.
I0428 20:08:50.597457 31491 caffe.cpp:259] Optimization Done.
