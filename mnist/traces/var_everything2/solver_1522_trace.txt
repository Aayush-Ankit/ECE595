I0428 20:29:26.779284  3534 caffe.cpp:218] Using GPUs 0
I0428 20:29:26.818891  3534 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:27.264822  3534 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1522.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:27.264973  3534 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1522.prototxt
I0428 20:29:27.265278  3534 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:27.265295  3534 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:27.265384  3534 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:29:27.265462  3534 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:27.265563  3534 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:27.265588  3534 net.cpp:86] Creating Layer mnist
I0428 20:29:27.265599  3534 net.cpp:382] mnist -> data
I0428 20:29:27.265622  3534 net.cpp:382] mnist -> label
I0428 20:29:27.266616  3534 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:27.268833  3534 net.cpp:124] Setting up mnist
I0428 20:29:27.268868  3534 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:27.268878  3534 net.cpp:131] Top shape: 64 (64)
I0428 20:29:27.268883  3534 net.cpp:139] Memory required for data: 200960
I0428 20:29:27.268908  3534 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:27.268940  3534 net.cpp:86] Creating Layer conv0
I0428 20:29:27.268950  3534 net.cpp:408] conv0 <- data
I0428 20:29:27.268982  3534 net.cpp:382] conv0 -> conv0
I0428 20:29:27.494729  3534 net.cpp:124] Setting up conv0
I0428 20:29:27.494758  3534 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:27.494763  3534 net.cpp:139] Memory required for data: 14946560
I0428 20:29:27.494782  3534 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:27.494798  3534 net.cpp:86] Creating Layer pool0
I0428 20:29:27.494804  3534 net.cpp:408] pool0 <- conv0
I0428 20:29:27.494812  3534 net.cpp:382] pool0 -> pool0
I0428 20:29:27.494868  3534 net.cpp:124] Setting up pool0
I0428 20:29:27.494877  3534 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:27.494899  3534 net.cpp:139] Memory required for data: 18632960
I0428 20:29:27.494904  3534 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:27.494920  3534 net.cpp:86] Creating Layer conv1
I0428 20:29:27.494925  3534 net.cpp:408] conv1 <- pool0
I0428 20:29:27.494933  3534 net.cpp:382] conv1 -> conv1
I0428 20:29:27.496893  3534 net.cpp:124] Setting up conv1
I0428 20:29:27.496909  3534 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:29:27.496915  3534 net.cpp:139] Memory required for data: 18796800
I0428 20:29:27.496944  3534 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:27.496956  3534 net.cpp:86] Creating Layer pool1
I0428 20:29:27.496963  3534 net.cpp:408] pool1 <- conv1
I0428 20:29:27.496970  3534 net.cpp:382] pool1 -> pool1
I0428 20:29:27.497023  3534 net.cpp:124] Setting up pool1
I0428 20:29:27.497032  3534 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:29:27.497037  3534 net.cpp:139] Memory required for data: 18837760
I0428 20:29:27.497042  3534 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:27.497053  3534 net.cpp:86] Creating Layer ip1
I0428 20:29:27.497062  3534 net.cpp:408] ip1 <- pool1
I0428 20:29:27.497073  3534 net.cpp:382] ip1 -> ip1
I0428 20:29:27.497196  3534 net.cpp:124] Setting up ip1
I0428 20:29:27.497205  3534 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:27.497210  3534 net.cpp:139] Memory required for data: 18840320
I0428 20:29:27.497221  3534 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:27.497231  3534 net.cpp:86] Creating Layer relu1
I0428 20:29:27.497236  3534 net.cpp:408] relu1 <- ip1
I0428 20:29:27.497243  3534 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:27.497429  3534 net.cpp:124] Setting up relu1
I0428 20:29:27.497439  3534 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:27.497444  3534 net.cpp:139] Memory required for data: 18842880
I0428 20:29:27.497449  3534 layer_factory.hpp:77] Creating layer loss
I0428 20:29:27.497458  3534 net.cpp:86] Creating Layer loss
I0428 20:29:27.497463  3534 net.cpp:408] loss <- ip1
I0428 20:29:27.497469  3534 net.cpp:408] loss <- label
I0428 20:29:27.497478  3534 net.cpp:382] loss -> loss
I0428 20:29:27.497496  3534 layer_factory.hpp:77] Creating layer loss
I0428 20:29:27.498322  3534 net.cpp:124] Setting up loss
I0428 20:29:27.498337  3534 net.cpp:131] Top shape: (1)
I0428 20:29:27.498358  3534 net.cpp:134]     with loss weight 1
I0428 20:29:27.498376  3534 net.cpp:139] Memory required for data: 18842884
I0428 20:29:27.498383  3534 net.cpp:200] loss needs backward computation.
I0428 20:29:27.498389  3534 net.cpp:200] relu1 needs backward computation.
I0428 20:29:27.498394  3534 net.cpp:200] ip1 needs backward computation.
I0428 20:29:27.498399  3534 net.cpp:200] pool1 needs backward computation.
I0428 20:29:27.498404  3534 net.cpp:200] conv1 needs backward computation.
I0428 20:29:27.498409  3534 net.cpp:200] pool0 needs backward computation.
I0428 20:29:27.498415  3534 net.cpp:200] conv0 needs backward computation.
I0428 20:29:27.498420  3534 net.cpp:202] mnist does not need backward computation.
I0428 20:29:27.498425  3534 net.cpp:244] This network produces output loss
I0428 20:29:27.498440  3534 net.cpp:257] Network initialization done.
I0428 20:29:27.498713  3534 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1522.prototxt
I0428 20:29:27.498741  3534 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:27.498836  3534 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:29:27.498935  3534 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:27.498993  3534 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:27.499011  3534 net.cpp:86] Creating Layer mnist
I0428 20:29:27.499019  3534 net.cpp:382] mnist -> data
I0428 20:29:27.499032  3534 net.cpp:382] mnist -> label
I0428 20:29:27.499160  3534 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:27.501200  3534 net.cpp:124] Setting up mnist
I0428 20:29:27.501215  3534 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:27.501237  3534 net.cpp:131] Top shape: 100 (100)
I0428 20:29:27.501245  3534 net.cpp:139] Memory required for data: 314000
I0428 20:29:27.501250  3534 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:27.501260  3534 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:27.501266  3534 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:27.501272  3534 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:27.501282  3534 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:27.501356  3534 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:27.501365  3534 net.cpp:131] Top shape: 100 (100)
I0428 20:29:27.501371  3534 net.cpp:131] Top shape: 100 (100)
I0428 20:29:27.501376  3534 net.cpp:139] Memory required for data: 314800
I0428 20:29:27.501380  3534 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:27.501394  3534 net.cpp:86] Creating Layer conv0
I0428 20:29:27.501399  3534 net.cpp:408] conv0 <- data
I0428 20:29:27.501407  3534 net.cpp:382] conv0 -> conv0
I0428 20:29:27.502104  3534 net.cpp:124] Setting up conv0
I0428 20:29:27.502116  3534 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:27.502121  3534 net.cpp:139] Memory required for data: 23354800
I0428 20:29:27.502135  3534 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:27.502142  3534 net.cpp:86] Creating Layer pool0
I0428 20:29:27.502147  3534 net.cpp:408] pool0 <- conv0
I0428 20:29:27.502156  3534 net.cpp:382] pool0 -> pool0
I0428 20:29:27.502193  3534 net.cpp:124] Setting up pool0
I0428 20:29:27.502202  3534 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:27.502205  3534 net.cpp:139] Memory required for data: 29114800
I0428 20:29:27.502210  3534 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:27.502221  3534 net.cpp:86] Creating Layer conv1
I0428 20:29:27.502228  3534 net.cpp:408] conv1 <- pool0
I0428 20:29:27.502234  3534 net.cpp:382] conv1 -> conv1
I0428 20:29:27.503890  3534 net.cpp:124] Setting up conv1
I0428 20:29:27.503907  3534 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:29:27.503914  3534 net.cpp:139] Memory required for data: 29370800
I0428 20:29:27.503926  3534 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:27.503937  3534 net.cpp:86] Creating Layer pool1
I0428 20:29:27.503953  3534 net.cpp:408] pool1 <- conv1
I0428 20:29:27.503962  3534 net.cpp:382] pool1 -> pool1
I0428 20:29:27.504004  3534 net.cpp:124] Setting up pool1
I0428 20:29:27.504011  3534 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:29:27.504017  3534 net.cpp:139] Memory required for data: 29434800
I0428 20:29:27.504022  3534 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:27.504031  3534 net.cpp:86] Creating Layer ip1
I0428 20:29:27.504037  3534 net.cpp:408] ip1 <- pool1
I0428 20:29:27.504045  3534 net.cpp:382] ip1 -> ip1
I0428 20:29:27.504179  3534 net.cpp:124] Setting up ip1
I0428 20:29:27.504189  3534 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:27.504194  3534 net.cpp:139] Memory required for data: 29438800
I0428 20:29:27.504205  3534 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:27.504212  3534 net.cpp:86] Creating Layer relu1
I0428 20:29:27.504220  3534 net.cpp:408] relu1 <- ip1
I0428 20:29:27.504226  3534 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:27.505071  3534 net.cpp:124] Setting up relu1
I0428 20:29:27.505086  3534 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:27.505092  3534 net.cpp:139] Memory required for data: 29442800
I0428 20:29:27.505097  3534 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:29:27.505107  3534 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:29:27.505121  3534 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:29:27.505146  3534 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:29:27.505156  3534 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:29:27.505197  3534 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:29:27.505204  3534 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:27.505210  3534 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:27.505215  3534 net.cpp:139] Memory required for data: 29450800
I0428 20:29:27.505231  3534 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:27.505239  3534 net.cpp:86] Creating Layer accuracy
I0428 20:29:27.505245  3534 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:29:27.505252  3534 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:27.505259  3534 net.cpp:382] accuracy -> accuracy
I0428 20:29:27.505271  3534 net.cpp:124] Setting up accuracy
I0428 20:29:27.505285  3534 net.cpp:131] Top shape: (1)
I0428 20:29:27.505290  3534 net.cpp:139] Memory required for data: 29450804
I0428 20:29:27.505293  3534 layer_factory.hpp:77] Creating layer loss
I0428 20:29:27.505300  3534 net.cpp:86] Creating Layer loss
I0428 20:29:27.505306  3534 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:29:27.505317  3534 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:27.505340  3534 net.cpp:382] loss -> loss
I0428 20:29:27.505352  3534 layer_factory.hpp:77] Creating layer loss
I0428 20:29:27.505576  3534 net.cpp:124] Setting up loss
I0428 20:29:27.505587  3534 net.cpp:131] Top shape: (1)
I0428 20:29:27.505592  3534 net.cpp:134]     with loss weight 1
I0428 20:29:27.505601  3534 net.cpp:139] Memory required for data: 29450808
I0428 20:29:27.505616  3534 net.cpp:200] loss needs backward computation.
I0428 20:29:27.505622  3534 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:27.505640  3534 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:29:27.505645  3534 net.cpp:200] relu1 needs backward computation.
I0428 20:29:27.505650  3534 net.cpp:200] ip1 needs backward computation.
I0428 20:29:27.505656  3534 net.cpp:200] pool1 needs backward computation.
I0428 20:29:27.505661  3534 net.cpp:200] conv1 needs backward computation.
I0428 20:29:27.505666  3534 net.cpp:200] pool0 needs backward computation.
I0428 20:29:27.505671  3534 net.cpp:200] conv0 needs backward computation.
I0428 20:29:27.505677  3534 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:27.505691  3534 net.cpp:202] mnist does not need backward computation.
I0428 20:29:27.505695  3534 net.cpp:244] This network produces output accuracy
I0428 20:29:27.505708  3534 net.cpp:244] This network produces output loss
I0428 20:29:27.505731  3534 net.cpp:257] Network initialization done.
I0428 20:29:27.505769  3534 solver.cpp:56] Solver scaffolding done.
I0428 20:29:27.505969  3534 caffe.cpp:248] Starting Optimization
I0428 20:29:27.505975  3534 solver.cpp:273] Solving LeNet
I0428 20:29:27.505980  3534 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:27.506108  3534 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:27.517433  3534 blocking_queue.cpp:49] Waiting for data
I0428 20:29:27.600670  3541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:27.602028  3534 solver.cpp:398]     Test net output #0: accuracy = 0.1012
I0428 20:29:27.602053  3534 solver.cpp:398]     Test net output #1: loss = 2.4073 (* 1 = 2.4073 loss)
I0428 20:29:27.607864  3534 solver.cpp:219] Iteration 0 (0 iter/s, 0.101854s/100 iters), loss = 2.44239
I0428 20:29:27.607923  3534 solver.cpp:238]     Train net output #0: loss = 2.44239 (* 1 = 2.44239 loss)
I0428 20:29:27.607940  3534 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:27.804397  3534 solver.cpp:219] Iteration 100 (508.977 iter/s, 0.196473s/100 iters), loss = 0.264741
I0428 20:29:27.804450  3534 solver.cpp:238]     Train net output #0: loss = 0.264741 (* 1 = 0.264741 loss)
I0428 20:29:27.804466  3534 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:28.011476  3534 solver.cpp:219] Iteration 200 (483.067 iter/s, 0.207011s/100 iters), loss = 0.167116
I0428 20:29:28.011533  3534 solver.cpp:238]     Train net output #0: loss = 0.167116 (* 1 = 0.167116 loss)
I0428 20:29:28.011548  3534 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:28.221606  3534 solver.cpp:219] Iteration 300 (476.065 iter/s, 0.210055s/100 iters), loss = 0.167622
I0428 20:29:28.221662  3534 solver.cpp:238]     Train net output #0: loss = 0.167622 (* 1 = 0.167622 loss)
I0428 20:29:28.221676  3534 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:28.431300  3534 solver.cpp:219] Iteration 400 (477.049 iter/s, 0.209622s/100 iters), loss = 0.125079
I0428 20:29:28.431358  3534 solver.cpp:238]     Train net output #0: loss = 0.125079 (* 1 = 0.125079 loss)
I0428 20:29:28.431371  3534 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:28.638005  3534 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:28.734655  3541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:28.737098  3534 solver.cpp:398]     Test net output #0: accuracy = 0.9655
I0428 20:29:28.737126  3534 solver.cpp:398]     Test net output #1: loss = 0.111413 (* 1 = 0.111413 loss)
I0428 20:29:28.738997  3534 solver.cpp:219] Iteration 500 (325.072 iter/s, 0.307624s/100 iters), loss = 0.145602
I0428 20:29:28.739027  3534 solver.cpp:238]     Train net output #0: loss = 0.145602 (* 1 = 0.145602 loss)
I0428 20:29:28.739035  3534 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:28.938838  3534 solver.cpp:219] Iteration 600 (500.524 iter/s, 0.199791s/100 iters), loss = 0.0961964
I0428 20:29:28.938892  3534 solver.cpp:238]     Train net output #0: loss = 0.0961964 (* 1 = 0.0961964 loss)
I0428 20:29:28.938906  3534 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:29.148542  3534 solver.cpp:219] Iteration 700 (477.021 iter/s, 0.209634s/100 iters), loss = 0.250826
I0428 20:29:29.148593  3534 solver.cpp:238]     Train net output #0: loss = 0.250826 (* 1 = 0.250826 loss)
I0428 20:29:29.148604  3534 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:29.350018  3534 solver.cpp:219] Iteration 800 (496.503 iter/s, 0.201409s/100 iters), loss = 0.245593
I0428 20:29:29.350076  3534 solver.cpp:238]     Train net output #0: loss = 0.245593 (* 1 = 0.245593 loss)
I0428 20:29:29.350090  3534 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:29.560592  3534 solver.cpp:219] Iteration 900 (475.056 iter/s, 0.210502s/100 iters), loss = 0.131333
I0428 20:29:29.560638  3534 solver.cpp:238]     Train net output #0: loss = 0.131333 (* 1 = 0.131333 loss)
I0428 20:29:29.560649  3534 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:29.627423  3540 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:29.764127  3534 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:29.766232  3534 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:29.767622  3534 solver.cpp:311] Iteration 1000, loss = 0.0663908
I0428 20:29:29.767654  3534 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:29.868988  3541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:29.871474  3534 solver.cpp:398]     Test net output #0: accuracy = 0.9735
I0428 20:29:29.871500  3534 solver.cpp:398]     Test net output #1: loss = 0.0766756 (* 1 = 0.0766756 loss)
I0428 20:29:29.871506  3534 solver.cpp:316] Optimization Done.
I0428 20:29:29.871513  3534 caffe.cpp:259] Optimization Done.
