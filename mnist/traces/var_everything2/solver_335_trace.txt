I0428 19:40:27.557121 24555 caffe.cpp:218] Using GPUs 0
I0428 19:40:27.597435 24555 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:28.129652 24555 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test335.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:28.129787 24555 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test335.prototxt
I0428 19:40:28.130209 24555 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:28.130226 24555 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:28.130331 24555 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:28.130411 24555 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:28.130508 24555 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:28.130532 24555 net.cpp:86] Creating Layer mnist
I0428 19:40:28.130539 24555 net.cpp:382] mnist -> data
I0428 19:40:28.130561 24555 net.cpp:382] mnist -> label
I0428 19:40:28.131652 24555 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:28.134124 24555 net.cpp:124] Setting up mnist
I0428 19:40:28.134141 24555 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:28.134147 24555 net.cpp:131] Top shape: 64 (64)
I0428 19:40:28.134150 24555 net.cpp:139] Memory required for data: 200960
I0428 19:40:28.134157 24555 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:28.134174 24555 net.cpp:86] Creating Layer conv0
I0428 19:40:28.134196 24555 net.cpp:408] conv0 <- data
I0428 19:40:28.134209 24555 net.cpp:382] conv0 -> conv0
I0428 19:40:28.426268 24555 net.cpp:124] Setting up conv0
I0428 19:40:28.426301 24555 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:28.426306 24555 net.cpp:139] Memory required for data: 495872
I0428 19:40:28.426323 24555 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:28.426339 24555 net.cpp:86] Creating Layer pool0
I0428 19:40:28.426344 24555 net.cpp:408] pool0 <- conv0
I0428 19:40:28.426350 24555 net.cpp:382] pool0 -> pool0
I0428 19:40:28.426406 24555 net.cpp:124] Setting up pool0
I0428 19:40:28.426419 24555 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:28.426424 24555 net.cpp:139] Memory required for data: 569600
I0428 19:40:28.426427 24555 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:28.426440 24555 net.cpp:86] Creating Layer conv1
I0428 19:40:28.426445 24555 net.cpp:408] conv1 <- pool0
I0428 19:40:28.426450 24555 net.cpp:382] conv1 -> conv1
I0428 19:40:28.428571 24555 net.cpp:124] Setting up conv1
I0428 19:40:28.428589 24555 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:28.428593 24555 net.cpp:139] Memory required for data: 651520
I0428 19:40:28.428603 24555 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:28.428612 24555 net.cpp:86] Creating Layer pool1
I0428 19:40:28.428617 24555 net.cpp:408] pool1 <- conv1
I0428 19:40:28.428623 24555 net.cpp:382] pool1 -> pool1
I0428 19:40:28.428668 24555 net.cpp:124] Setting up pool1
I0428 19:40:28.428674 24555 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:28.428678 24555 net.cpp:139] Memory required for data: 672000
I0428 19:40:28.428681 24555 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:28.428690 24555 net.cpp:86] Creating Layer ip1
I0428 19:40:28.428694 24555 net.cpp:408] ip1 <- pool1
I0428 19:40:28.428699 24555 net.cpp:382] ip1 -> ip1
I0428 19:40:28.429797 24555 net.cpp:124] Setting up ip1
I0428 19:40:28.429812 24555 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:28.429817 24555 net.cpp:139] Memory required for data: 678400
I0428 19:40:28.429827 24555 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:28.429834 24555 net.cpp:86] Creating Layer relu1
I0428 19:40:28.429839 24555 net.cpp:408] relu1 <- ip1
I0428 19:40:28.429844 24555 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:28.430047 24555 net.cpp:124] Setting up relu1
I0428 19:40:28.430058 24555 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:28.430061 24555 net.cpp:139] Memory required for data: 684800
I0428 19:40:28.430065 24555 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:28.430073 24555 net.cpp:86] Creating Layer ip2
I0428 19:40:28.430078 24555 net.cpp:408] ip2 <- ip1
I0428 19:40:28.430083 24555 net.cpp:382] ip2 -> ip2
I0428 19:40:28.430198 24555 net.cpp:124] Setting up ip2
I0428 19:40:28.430207 24555 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:28.430209 24555 net.cpp:139] Memory required for data: 687360
I0428 19:40:28.430217 24555 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:28.430222 24555 net.cpp:86] Creating Layer relu2
I0428 19:40:28.430227 24555 net.cpp:408] relu2 <- ip2
I0428 19:40:28.430232 24555 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:28.431082 24555 net.cpp:124] Setting up relu2
I0428 19:40:28.431097 24555 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:28.431100 24555 net.cpp:139] Memory required for data: 689920
I0428 19:40:28.431104 24555 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:28.431113 24555 net.cpp:86] Creating Layer ip3
I0428 19:40:28.431116 24555 net.cpp:408] ip3 <- ip2
I0428 19:40:28.431123 24555 net.cpp:382] ip3 -> ip3
I0428 19:40:28.431241 24555 net.cpp:124] Setting up ip3
I0428 19:40:28.431251 24555 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:28.431253 24555 net.cpp:139] Memory required for data: 692480
I0428 19:40:28.431263 24555 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:28.431269 24555 net.cpp:86] Creating Layer relu3
I0428 19:40:28.431273 24555 net.cpp:408] relu3 <- ip3
I0428 19:40:28.431278 24555 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:28.431491 24555 net.cpp:124] Setting up relu3
I0428 19:40:28.431501 24555 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:28.431505 24555 net.cpp:139] Memory required for data: 695040
I0428 19:40:28.431509 24555 layer_factory.hpp:77] Creating layer loss
I0428 19:40:28.431520 24555 net.cpp:86] Creating Layer loss
I0428 19:40:28.431524 24555 net.cpp:408] loss <- ip3
I0428 19:40:28.431529 24555 net.cpp:408] loss <- label
I0428 19:40:28.431536 24555 net.cpp:382] loss -> loss
I0428 19:40:28.431552 24555 layer_factory.hpp:77] Creating layer loss
I0428 19:40:28.431833 24555 net.cpp:124] Setting up loss
I0428 19:40:28.431843 24555 net.cpp:131] Top shape: (1)
I0428 19:40:28.431848 24555 net.cpp:134]     with loss weight 1
I0428 19:40:28.431864 24555 net.cpp:139] Memory required for data: 695044
I0428 19:40:28.431867 24555 net.cpp:200] loss needs backward computation.
I0428 19:40:28.431872 24555 net.cpp:200] relu3 needs backward computation.
I0428 19:40:28.431876 24555 net.cpp:200] ip3 needs backward computation.
I0428 19:40:28.431879 24555 net.cpp:200] relu2 needs backward computation.
I0428 19:40:28.431882 24555 net.cpp:200] ip2 needs backward computation.
I0428 19:40:28.431886 24555 net.cpp:200] relu1 needs backward computation.
I0428 19:40:28.431890 24555 net.cpp:200] ip1 needs backward computation.
I0428 19:40:28.431893 24555 net.cpp:200] pool1 needs backward computation.
I0428 19:40:28.431896 24555 net.cpp:200] conv1 needs backward computation.
I0428 19:40:28.431900 24555 net.cpp:200] pool0 needs backward computation.
I0428 19:40:28.431905 24555 net.cpp:200] conv0 needs backward computation.
I0428 19:40:28.431908 24555 net.cpp:202] mnist does not need backward computation.
I0428 19:40:28.431911 24555 net.cpp:244] This network produces output loss
I0428 19:40:28.431922 24555 net.cpp:257] Network initialization done.
I0428 19:40:28.432303 24555 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test335.prototxt
I0428 19:40:28.432335 24555 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:28.432446 24555 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:28.432548 24555 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:28.432600 24555 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:28.432617 24555 net.cpp:86] Creating Layer mnist
I0428 19:40:28.432622 24555 net.cpp:382] mnist -> data
I0428 19:40:28.432631 24555 net.cpp:382] mnist -> label
I0428 19:40:28.432737 24555 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:28.434937 24555 net.cpp:124] Setting up mnist
I0428 19:40:28.434953 24555 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:28.434960 24555 net.cpp:131] Top shape: 100 (100)
I0428 19:40:28.434963 24555 net.cpp:139] Memory required for data: 314000
I0428 19:40:28.434968 24555 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:28.434976 24555 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:28.434979 24555 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:28.434985 24555 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:28.434993 24555 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:28.435050 24555 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:28.435058 24555 net.cpp:131] Top shape: 100 (100)
I0428 19:40:28.435062 24555 net.cpp:131] Top shape: 100 (100)
I0428 19:40:28.435065 24555 net.cpp:139] Memory required for data: 314800
I0428 19:40:28.435070 24555 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:28.435080 24555 net.cpp:86] Creating Layer conv0
I0428 19:40:28.435083 24555 net.cpp:408] conv0 <- data
I0428 19:40:28.435091 24555 net.cpp:382] conv0 -> conv0
I0428 19:40:28.437104 24555 net.cpp:124] Setting up conv0
I0428 19:40:28.437121 24555 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:28.437125 24555 net.cpp:139] Memory required for data: 775600
I0428 19:40:28.437136 24555 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:28.437145 24555 net.cpp:86] Creating Layer pool0
I0428 19:40:28.437150 24555 net.cpp:408] pool0 <- conv0
I0428 19:40:28.437155 24555 net.cpp:382] pool0 -> pool0
I0428 19:40:28.437201 24555 net.cpp:124] Setting up pool0
I0428 19:40:28.437207 24555 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:28.437211 24555 net.cpp:139] Memory required for data: 890800
I0428 19:40:28.437213 24555 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:28.437224 24555 net.cpp:86] Creating Layer conv1
I0428 19:40:28.437228 24555 net.cpp:408] conv1 <- pool0
I0428 19:40:28.437235 24555 net.cpp:382] conv1 -> conv1
I0428 19:40:28.438976 24555 net.cpp:124] Setting up conv1
I0428 19:40:28.438997 24555 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:28.439000 24555 net.cpp:139] Memory required for data: 1018800
I0428 19:40:28.439012 24555 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:28.439018 24555 net.cpp:86] Creating Layer pool1
I0428 19:40:28.439023 24555 net.cpp:408] pool1 <- conv1
I0428 19:40:28.439030 24555 net.cpp:382] pool1 -> pool1
I0428 19:40:28.439076 24555 net.cpp:124] Setting up pool1
I0428 19:40:28.439082 24555 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:28.439086 24555 net.cpp:139] Memory required for data: 1050800
I0428 19:40:28.439090 24555 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:28.439098 24555 net.cpp:86] Creating Layer ip1
I0428 19:40:28.439102 24555 net.cpp:408] ip1 <- pool1
I0428 19:40:28.439107 24555 net.cpp:382] ip1 -> ip1
I0428 19:40:28.439244 24555 net.cpp:124] Setting up ip1
I0428 19:40:28.439252 24555 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:28.439267 24555 net.cpp:139] Memory required for data: 1060800
I0428 19:40:28.439276 24555 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:28.439285 24555 net.cpp:86] Creating Layer relu1
I0428 19:40:28.439290 24555 net.cpp:408] relu1 <- ip1
I0428 19:40:28.439294 24555 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:28.439549 24555 net.cpp:124] Setting up relu1
I0428 19:40:28.439559 24555 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:28.439564 24555 net.cpp:139] Memory required for data: 1070800
I0428 19:40:28.439568 24555 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:28.439576 24555 net.cpp:86] Creating Layer ip2
I0428 19:40:28.439579 24555 net.cpp:408] ip2 <- ip1
I0428 19:40:28.439586 24555 net.cpp:382] ip2 -> ip2
I0428 19:40:28.439725 24555 net.cpp:124] Setting up ip2
I0428 19:40:28.439735 24555 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:28.439740 24555 net.cpp:139] Memory required for data: 1074800
I0428 19:40:28.439746 24555 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:28.439754 24555 net.cpp:86] Creating Layer relu2
I0428 19:40:28.439757 24555 net.cpp:408] relu2 <- ip2
I0428 19:40:28.439762 24555 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:28.439954 24555 net.cpp:124] Setting up relu2
I0428 19:40:28.439963 24555 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:28.439966 24555 net.cpp:139] Memory required for data: 1078800
I0428 19:40:28.439971 24555 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:28.439978 24555 net.cpp:86] Creating Layer ip3
I0428 19:40:28.439982 24555 net.cpp:408] ip3 <- ip2
I0428 19:40:28.439990 24555 net.cpp:382] ip3 -> ip3
I0428 19:40:28.440109 24555 net.cpp:124] Setting up ip3
I0428 19:40:28.440117 24555 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:28.440121 24555 net.cpp:139] Memory required for data: 1082800
I0428 19:40:28.440130 24555 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:28.440136 24555 net.cpp:86] Creating Layer relu3
I0428 19:40:28.440140 24555 net.cpp:408] relu3 <- ip3
I0428 19:40:28.440145 24555 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:28.441087 24555 net.cpp:124] Setting up relu3
I0428 19:40:28.441102 24555 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:28.441105 24555 net.cpp:139] Memory required for data: 1086800
I0428 19:40:28.441109 24555 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:28.441115 24555 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:28.441119 24555 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:28.441126 24555 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:28.441133 24555 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:28.441181 24555 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:28.441189 24555 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:28.441193 24555 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:28.441196 24555 net.cpp:139] Memory required for data: 1094800
I0428 19:40:28.441200 24555 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:28.441206 24555 net.cpp:86] Creating Layer accuracy
I0428 19:40:28.441210 24555 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:28.441215 24555 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:28.441220 24555 net.cpp:382] accuracy -> accuracy
I0428 19:40:28.441227 24555 net.cpp:124] Setting up accuracy
I0428 19:40:28.441231 24555 net.cpp:131] Top shape: (1)
I0428 19:40:28.441236 24555 net.cpp:139] Memory required for data: 1094804
I0428 19:40:28.441239 24555 layer_factory.hpp:77] Creating layer loss
I0428 19:40:28.441246 24555 net.cpp:86] Creating Layer loss
I0428 19:40:28.441249 24555 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:28.441253 24555 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:28.441258 24555 net.cpp:382] loss -> loss
I0428 19:40:28.441265 24555 layer_factory.hpp:77] Creating layer loss
I0428 19:40:28.441565 24555 net.cpp:124] Setting up loss
I0428 19:40:28.441576 24555 net.cpp:131] Top shape: (1)
I0428 19:40:28.441579 24555 net.cpp:134]     with loss weight 1
I0428 19:40:28.441586 24555 net.cpp:139] Memory required for data: 1094808
I0428 19:40:28.441603 24555 net.cpp:200] loss needs backward computation.
I0428 19:40:28.441608 24555 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:28.441613 24555 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:28.441617 24555 net.cpp:200] relu3 needs backward computation.
I0428 19:40:28.441620 24555 net.cpp:200] ip3 needs backward computation.
I0428 19:40:28.441624 24555 net.cpp:200] relu2 needs backward computation.
I0428 19:40:28.441628 24555 net.cpp:200] ip2 needs backward computation.
I0428 19:40:28.441632 24555 net.cpp:200] relu1 needs backward computation.
I0428 19:40:28.441635 24555 net.cpp:200] ip1 needs backward computation.
I0428 19:40:28.441638 24555 net.cpp:200] pool1 needs backward computation.
I0428 19:40:28.441642 24555 net.cpp:200] conv1 needs backward computation.
I0428 19:40:28.441645 24555 net.cpp:200] pool0 needs backward computation.
I0428 19:40:28.441650 24555 net.cpp:200] conv0 needs backward computation.
I0428 19:40:28.441655 24555 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:28.441660 24555 net.cpp:202] mnist does not need backward computation.
I0428 19:40:28.441664 24555 net.cpp:244] This network produces output accuracy
I0428 19:40:28.441668 24555 net.cpp:244] This network produces output loss
I0428 19:40:28.441681 24555 net.cpp:257] Network initialization done.
I0428 19:40:28.441731 24555 solver.cpp:56] Solver scaffolding done.
I0428 19:40:28.442170 24555 caffe.cpp:248] Starting Optimization
I0428 19:40:28.442178 24555 solver.cpp:273] Solving LeNet
I0428 19:40:28.442180 24555 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:28.442479 24555 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:28.446089 24555 blocking_queue.cpp:49] Waiting for data
I0428 19:40:28.517137 24562 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:28.517629 24555 solver.cpp:398]     Test net output #0: accuracy = 0.0938
I0428 19:40:28.517655 24555 solver.cpp:398]     Test net output #1: loss = 2.30611 (* 1 = 2.30611 loss)
I0428 19:40:28.519718 24555 solver.cpp:219] Iteration 0 (0 iter/s, 0.0775025s/100 iters), loss = 2.30828
I0428 19:40:28.519748 24555 solver.cpp:238]     Train net output #0: loss = 2.30828 (* 1 = 2.30828 loss)
I0428 19:40:28.519762 24555 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:28.597729 24555 solver.cpp:219] Iteration 100 (1282.6 iter/s, 0.0779663s/100 iters), loss = 1.78304
I0428 19:40:28.597759 24555 solver.cpp:238]     Train net output #0: loss = 1.78304 (* 1 = 1.78304 loss)
I0428 19:40:28.597766 24555 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:28.668660 24555 solver.cpp:219] Iteration 200 (1410.6 iter/s, 0.0708916s/100 iters), loss = 0.933355
I0428 19:40:28.668684 24555 solver.cpp:238]     Train net output #0: loss = 0.933355 (* 1 = 0.933355 loss)
I0428 19:40:28.668690 24555 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:28.736011 24555 solver.cpp:219] Iteration 300 (1485.49 iter/s, 0.0673178s/100 iters), loss = 0.521209
I0428 19:40:28.736050 24555 solver.cpp:238]     Train net output #0: loss = 0.521209 (* 1 = 0.521209 loss)
I0428 19:40:28.736055 24555 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:28.822927 24555 solver.cpp:219] Iteration 400 (1151.04 iter/s, 0.0868782s/100 iters), loss = 0.394422
I0428 19:40:28.822973 24555 solver.cpp:238]     Train net output #0: loss = 0.394422 (* 1 = 0.394422 loss)
I0428 19:40:28.822983 24555 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:28.909297 24555 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:28.961848 24562 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:28.962296 24555 solver.cpp:398]     Test net output #0: accuracy = 0.919
I0428 19:40:28.962319 24555 solver.cpp:398]     Test net output #1: loss = 0.282289 (* 1 = 0.282289 loss)
I0428 19:40:28.963117 24555 solver.cpp:219] Iteration 500 (713.6 iter/s, 0.140135s/100 iters), loss = 0.459875
I0428 19:40:28.963145 24555 solver.cpp:238]     Train net output #0: loss = 0.459875 (* 1 = 0.459875 loss)
I0428 19:40:28.963174 24555 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:29.039592 24555 solver.cpp:219] Iteration 600 (1308.28 iter/s, 0.0764365s/100 iters), loss = 0.207377
I0428 19:40:29.039619 24555 solver.cpp:238]     Train net output #0: loss = 0.207377 (* 1 = 0.207377 loss)
I0428 19:40:29.039628 24555 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:29.112673 24555 solver.cpp:219] Iteration 700 (1369.02 iter/s, 0.0730449s/100 iters), loss = 0.365425
I0428 19:40:29.112702 24555 solver.cpp:238]     Train net output #0: loss = 0.365425 (* 1 = 0.365425 loss)
I0428 19:40:29.112709 24555 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:29.186578 24555 solver.cpp:219] Iteration 800 (1353.8 iter/s, 0.0738662s/100 iters), loss = 0.35236
I0428 19:40:29.186606 24555 solver.cpp:238]     Train net output #0: loss = 0.35236 (* 1 = 0.35236 loss)
I0428 19:40:29.186614 24555 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:29.261168 24555 solver.cpp:219] Iteration 900 (1341.34 iter/s, 0.0745523s/100 iters), loss = 0.131052
I0428 19:40:29.261198 24555 solver.cpp:238]     Train net output #0: loss = 0.131052 (* 1 = 0.131052 loss)
I0428 19:40:29.261205 24555 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:29.286206 24561 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:29.334545 24555 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:29.335247 24555 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:29.335947 24555 solver.cpp:311] Iteration 1000, loss = 0.204345
I0428 19:40:29.335979 24555 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:29.390203 24562 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:29.391754 24555 solver.cpp:398]     Test net output #0: accuracy = 0.9432
I0428 19:40:29.391794 24555 solver.cpp:398]     Test net output #1: loss = 0.189122 (* 1 = 0.189122 loss)
I0428 19:40:29.391803 24555 solver.cpp:316] Optimization Done.
I0428 19:40:29.391808 24555 caffe.cpp:259] Optimization Done.
