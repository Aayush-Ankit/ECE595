I0428 19:51:37.769457 27326 caffe.cpp:218] Using GPUs 0
I0428 19:51:37.806596 27326 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:38.262569 27326 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test639.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:38.262740 27326 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test639.prototxt
I0428 19:51:38.263108 27326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:38.263139 27326 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:38.263221 27326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:38.263285 27326 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:38.263381 27326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:38.263401 27326 net.cpp:86] Creating Layer mnist
I0428 19:51:38.263408 27326 net.cpp:382] mnist -> data
I0428 19:51:38.263427 27326 net.cpp:382] mnist -> label
I0428 19:51:38.264402 27326 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:38.266649 27326 net.cpp:124] Setting up mnist
I0428 19:51:38.266680 27326 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:38.266685 27326 net.cpp:131] Top shape: 64 (64)
I0428 19:51:38.266688 27326 net.cpp:139] Memory required for data: 200960
I0428 19:51:38.266695 27326 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:38.266710 27326 net.cpp:86] Creating Layer conv0
I0428 19:51:38.266753 27326 net.cpp:408] conv0 <- data
I0428 19:51:38.266782 27326 net.cpp:382] conv0 -> conv0
I0428 19:51:38.504957 27326 net.cpp:124] Setting up conv0
I0428 19:51:38.504998 27326 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:38.505003 27326 net.cpp:139] Memory required for data: 938240
I0428 19:51:38.505018 27326 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:38.505030 27326 net.cpp:86] Creating Layer pool0
I0428 19:51:38.505034 27326 net.cpp:408] pool0 <- conv0
I0428 19:51:38.505040 27326 net.cpp:382] pool0 -> pool0
I0428 19:51:38.505102 27326 net.cpp:124] Setting up pool0
I0428 19:51:38.505120 27326 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:38.505122 27326 net.cpp:139] Memory required for data: 1122560
I0428 19:51:38.505125 27326 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:38.505151 27326 net.cpp:86] Creating Layer conv1
I0428 19:51:38.505153 27326 net.cpp:408] conv1 <- pool0
I0428 19:51:38.505158 27326 net.cpp:382] conv1 -> conv1
I0428 19:51:38.507871 27326 net.cpp:124] Setting up conv1
I0428 19:51:38.507885 27326 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:38.507889 27326 net.cpp:139] Memory required for data: 1532160
I0428 19:51:38.507896 27326 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:38.507905 27326 net.cpp:86] Creating Layer pool1
I0428 19:51:38.507907 27326 net.cpp:408] pool1 <- conv1
I0428 19:51:38.507928 27326 net.cpp:382] pool1 -> pool1
I0428 19:51:38.507966 27326 net.cpp:124] Setting up pool1
I0428 19:51:38.507972 27326 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:38.507974 27326 net.cpp:139] Memory required for data: 1634560
I0428 19:51:38.507977 27326 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:38.507983 27326 net.cpp:86] Creating Layer ip1
I0428 19:51:38.507987 27326 net.cpp:408] ip1 <- pool1
I0428 19:51:38.507992 27326 net.cpp:382] ip1 -> ip1
I0428 19:51:38.508108 27326 net.cpp:124] Setting up ip1
I0428 19:51:38.508116 27326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:38.508117 27326 net.cpp:139] Memory required for data: 1637120
I0428 19:51:38.508124 27326 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:38.508131 27326 net.cpp:86] Creating Layer relu1
I0428 19:51:38.508134 27326 net.cpp:408] relu1 <- ip1
I0428 19:51:38.508138 27326 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:38.508303 27326 net.cpp:124] Setting up relu1
I0428 19:51:38.508311 27326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:38.508316 27326 net.cpp:139] Memory required for data: 1639680
I0428 19:51:38.508318 27326 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:38.508324 27326 net.cpp:86] Creating Layer ip2
I0428 19:51:38.508327 27326 net.cpp:408] ip2 <- ip1
I0428 19:51:38.508332 27326 net.cpp:382] ip2 -> ip2
I0428 19:51:38.508426 27326 net.cpp:124] Setting up ip2
I0428 19:51:38.508433 27326 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:38.508435 27326 net.cpp:139] Memory required for data: 1646080
I0428 19:51:38.508440 27326 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:38.508447 27326 net.cpp:86] Creating Layer relu2
I0428 19:51:38.508450 27326 net.cpp:408] relu2 <- ip2
I0428 19:51:38.508453 27326 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:38.509291 27326 net.cpp:124] Setting up relu2
I0428 19:51:38.509304 27326 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:38.509306 27326 net.cpp:139] Memory required for data: 1652480
I0428 19:51:38.509310 27326 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:38.509318 27326 net.cpp:86] Creating Layer ip3
I0428 19:51:38.509321 27326 net.cpp:408] ip3 <- ip2
I0428 19:51:38.509326 27326 net.cpp:382] ip3 -> ip3
I0428 19:51:38.509423 27326 net.cpp:124] Setting up ip3
I0428 19:51:38.509433 27326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:38.509434 27326 net.cpp:139] Memory required for data: 1655040
I0428 19:51:38.509443 27326 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:38.509448 27326 net.cpp:86] Creating Layer relu3
I0428 19:51:38.509450 27326 net.cpp:408] relu3 <- ip3
I0428 19:51:38.509454 27326 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:38.509658 27326 net.cpp:124] Setting up relu3
I0428 19:51:38.509667 27326 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:38.509670 27326 net.cpp:139] Memory required for data: 1657600
I0428 19:51:38.509673 27326 layer_factory.hpp:77] Creating layer loss
I0428 19:51:38.509680 27326 net.cpp:86] Creating Layer loss
I0428 19:51:38.509682 27326 net.cpp:408] loss <- ip3
I0428 19:51:38.509685 27326 net.cpp:408] loss <- label
I0428 19:51:38.509690 27326 net.cpp:382] loss -> loss
I0428 19:51:38.509709 27326 layer_factory.hpp:77] Creating layer loss
I0428 19:51:38.509984 27326 net.cpp:124] Setting up loss
I0428 19:51:38.509992 27326 net.cpp:131] Top shape: (1)
I0428 19:51:38.509995 27326 net.cpp:134]     with loss weight 1
I0428 19:51:38.510010 27326 net.cpp:139] Memory required for data: 1657604
I0428 19:51:38.510012 27326 net.cpp:200] loss needs backward computation.
I0428 19:51:38.510015 27326 net.cpp:200] relu3 needs backward computation.
I0428 19:51:38.510018 27326 net.cpp:200] ip3 needs backward computation.
I0428 19:51:38.510020 27326 net.cpp:200] relu2 needs backward computation.
I0428 19:51:38.510023 27326 net.cpp:200] ip2 needs backward computation.
I0428 19:51:38.510025 27326 net.cpp:200] relu1 needs backward computation.
I0428 19:51:38.510027 27326 net.cpp:200] ip1 needs backward computation.
I0428 19:51:38.510030 27326 net.cpp:200] pool1 needs backward computation.
I0428 19:51:38.510033 27326 net.cpp:200] conv1 needs backward computation.
I0428 19:51:38.510036 27326 net.cpp:200] pool0 needs backward computation.
I0428 19:51:38.510038 27326 net.cpp:200] conv0 needs backward computation.
I0428 19:51:38.510041 27326 net.cpp:202] mnist does not need backward computation.
I0428 19:51:38.510045 27326 net.cpp:244] This network produces output loss
I0428 19:51:38.510054 27326 net.cpp:257] Network initialization done.
I0428 19:51:38.510396 27326 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test639.prototxt
I0428 19:51:38.510423 27326 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:38.510519 27326 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:38.510601 27326 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:38.510658 27326 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:38.510671 27326 net.cpp:86] Creating Layer mnist
I0428 19:51:38.510677 27326 net.cpp:382] mnist -> data
I0428 19:51:38.510684 27326 net.cpp:382] mnist -> label
I0428 19:51:38.510792 27326 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:38.512755 27326 net.cpp:124] Setting up mnist
I0428 19:51:38.512784 27326 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:38.512789 27326 net.cpp:131] Top shape: 100 (100)
I0428 19:51:38.512792 27326 net.cpp:139] Memory required for data: 314000
I0428 19:51:38.512796 27326 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:38.512802 27326 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:38.512805 27326 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:38.512831 27326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:38.512854 27326 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:38.512955 27326 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:38.512964 27326 net.cpp:131] Top shape: 100 (100)
I0428 19:51:38.512969 27326 net.cpp:131] Top shape: 100 (100)
I0428 19:51:38.512971 27326 net.cpp:139] Memory required for data: 314800
I0428 19:51:38.512974 27326 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:38.512984 27326 net.cpp:86] Creating Layer conv0
I0428 19:51:38.512989 27326 net.cpp:408] conv0 <- data
I0428 19:51:38.512995 27326 net.cpp:382] conv0 -> conv0
I0428 19:51:38.514575 27326 net.cpp:124] Setting up conv0
I0428 19:51:38.514587 27326 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:38.514591 27326 net.cpp:139] Memory required for data: 1466800
I0428 19:51:38.514600 27326 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:38.514607 27326 net.cpp:86] Creating Layer pool0
I0428 19:51:38.514611 27326 net.cpp:408] pool0 <- conv0
I0428 19:51:38.514616 27326 net.cpp:382] pool0 -> pool0
I0428 19:51:38.514658 27326 net.cpp:124] Setting up pool0
I0428 19:51:38.514664 27326 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:38.514667 27326 net.cpp:139] Memory required for data: 1754800
I0428 19:51:38.514670 27326 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:38.514678 27326 net.cpp:86] Creating Layer conv1
I0428 19:51:38.514681 27326 net.cpp:408] conv1 <- pool0
I0428 19:51:38.514688 27326 net.cpp:382] conv1 -> conv1
I0428 19:51:38.516862 27326 net.cpp:124] Setting up conv1
I0428 19:51:38.516875 27326 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:38.516880 27326 net.cpp:139] Memory required for data: 2394800
I0428 19:51:38.516890 27326 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:38.516911 27326 net.cpp:86] Creating Layer pool1
I0428 19:51:38.516914 27326 net.cpp:408] pool1 <- conv1
I0428 19:51:38.516921 27326 net.cpp:382] pool1 -> pool1
I0428 19:51:38.516989 27326 net.cpp:124] Setting up pool1
I0428 19:51:38.516999 27326 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:38.517001 27326 net.cpp:139] Memory required for data: 2554800
I0428 19:51:38.517004 27326 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:38.517010 27326 net.cpp:86] Creating Layer ip1
I0428 19:51:38.517014 27326 net.cpp:408] ip1 <- pool1
I0428 19:51:38.517020 27326 net.cpp:382] ip1 -> ip1
I0428 19:51:38.517191 27326 net.cpp:124] Setting up ip1
I0428 19:51:38.517199 27326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:38.517212 27326 net.cpp:139] Memory required for data: 2558800
I0428 19:51:38.517220 27326 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:38.517226 27326 net.cpp:86] Creating Layer relu1
I0428 19:51:38.517230 27326 net.cpp:408] relu1 <- ip1
I0428 19:51:38.517235 27326 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:38.517400 27326 net.cpp:124] Setting up relu1
I0428 19:51:38.517412 27326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:38.517416 27326 net.cpp:139] Memory required for data: 2562800
I0428 19:51:38.517419 27326 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:38.517427 27326 net.cpp:86] Creating Layer ip2
I0428 19:51:38.517431 27326 net.cpp:408] ip2 <- ip1
I0428 19:51:38.517436 27326 net.cpp:382] ip2 -> ip2
I0428 19:51:38.517549 27326 net.cpp:124] Setting up ip2
I0428 19:51:38.517555 27326 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:38.517559 27326 net.cpp:139] Memory required for data: 2572800
I0428 19:51:38.517565 27326 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:38.517568 27326 net.cpp:86] Creating Layer relu2
I0428 19:51:38.517571 27326 net.cpp:408] relu2 <- ip2
I0428 19:51:38.517576 27326 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:38.517729 27326 net.cpp:124] Setting up relu2
I0428 19:51:38.517737 27326 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:38.517746 27326 net.cpp:139] Memory required for data: 2582800
I0428 19:51:38.517750 27326 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:38.517758 27326 net.cpp:86] Creating Layer ip3
I0428 19:51:38.517762 27326 net.cpp:408] ip3 <- ip2
I0428 19:51:38.517768 27326 net.cpp:382] ip3 -> ip3
I0428 19:51:38.517868 27326 net.cpp:124] Setting up ip3
I0428 19:51:38.517891 27326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:38.517894 27326 net.cpp:139] Memory required for data: 2586800
I0428 19:51:38.517901 27326 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:38.517906 27326 net.cpp:86] Creating Layer relu3
I0428 19:51:38.517910 27326 net.cpp:408] relu3 <- ip3
I0428 19:51:38.517912 27326 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:38.518723 27326 net.cpp:124] Setting up relu3
I0428 19:51:38.518735 27326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:38.518738 27326 net.cpp:139] Memory required for data: 2590800
I0428 19:51:38.518741 27326 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:38.518748 27326 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:38.518751 27326 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:38.518755 27326 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:38.518761 27326 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:38.518807 27326 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:38.518815 27326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:38.518820 27326 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:38.518821 27326 net.cpp:139] Memory required for data: 2598800
I0428 19:51:38.518824 27326 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:38.518829 27326 net.cpp:86] Creating Layer accuracy
I0428 19:51:38.518832 27326 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:38.518836 27326 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:38.518841 27326 net.cpp:382] accuracy -> accuracy
I0428 19:51:38.518854 27326 net.cpp:124] Setting up accuracy
I0428 19:51:38.518858 27326 net.cpp:131] Top shape: (1)
I0428 19:51:38.518860 27326 net.cpp:139] Memory required for data: 2598804
I0428 19:51:38.518863 27326 layer_factory.hpp:77] Creating layer loss
I0428 19:51:38.518868 27326 net.cpp:86] Creating Layer loss
I0428 19:51:38.518872 27326 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:38.518874 27326 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:38.518879 27326 net.cpp:382] loss -> loss
I0428 19:51:38.518885 27326 layer_factory.hpp:77] Creating layer loss
I0428 19:51:38.519112 27326 net.cpp:124] Setting up loss
I0428 19:51:38.519120 27326 net.cpp:131] Top shape: (1)
I0428 19:51:38.519124 27326 net.cpp:134]     with loss weight 1
I0428 19:51:38.519130 27326 net.cpp:139] Memory required for data: 2598808
I0428 19:51:38.519142 27326 net.cpp:200] loss needs backward computation.
I0428 19:51:38.519146 27326 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:38.519155 27326 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:38.519158 27326 net.cpp:200] relu3 needs backward computation.
I0428 19:51:38.519161 27326 net.cpp:200] ip3 needs backward computation.
I0428 19:51:38.519165 27326 net.cpp:200] relu2 needs backward computation.
I0428 19:51:38.519166 27326 net.cpp:200] ip2 needs backward computation.
I0428 19:51:38.519170 27326 net.cpp:200] relu1 needs backward computation.
I0428 19:51:38.519171 27326 net.cpp:200] ip1 needs backward computation.
I0428 19:51:38.519174 27326 net.cpp:200] pool1 needs backward computation.
I0428 19:51:38.519177 27326 net.cpp:200] conv1 needs backward computation.
I0428 19:51:38.519181 27326 net.cpp:200] pool0 needs backward computation.
I0428 19:51:38.519182 27326 net.cpp:200] conv0 needs backward computation.
I0428 19:51:38.519186 27326 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:38.519189 27326 net.cpp:202] mnist does not need backward computation.
I0428 19:51:38.519192 27326 net.cpp:244] This network produces output accuracy
I0428 19:51:38.519196 27326 net.cpp:244] This network produces output loss
I0428 19:51:38.519207 27326 net.cpp:257] Network initialization done.
I0428 19:51:38.519246 27326 solver.cpp:56] Solver scaffolding done.
I0428 19:51:38.519618 27326 caffe.cpp:248] Starting Optimization
I0428 19:51:38.519624 27326 solver.cpp:273] Solving LeNet
I0428 19:51:38.519628 27326 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:38.519857 27326 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:38.524178 27326 blocking_queue.cpp:49] Waiting for data
I0428 19:51:38.594614 27333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:38.595167 27326 solver.cpp:398]     Test net output #0: accuracy = 0.1177
I0428 19:51:38.595201 27326 solver.cpp:398]     Test net output #1: loss = 2.30078 (* 1 = 2.30078 loss)
I0428 19:51:38.597147 27326 solver.cpp:219] Iteration 0 (0 iter/s, 0.0774861s/100 iters), loss = 2.29933
I0428 19:51:38.597172 27326 solver.cpp:238]     Train net output #0: loss = 2.29933 (* 1 = 2.29933 loss)
I0428 19:51:38.597185 27326 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:38.681310 27326 solver.cpp:219] Iteration 100 (1188.71 iter/s, 0.0841249s/100 iters), loss = 1.6222
I0428 19:51:38.681349 27326 solver.cpp:238]     Train net output #0: loss = 1.6222 (* 1 = 1.6222 loss)
I0428 19:51:38.681355 27326 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:38.765141 27326 solver.cpp:219] Iteration 200 (1193.33 iter/s, 0.083799s/100 iters), loss = 1.71409
I0428 19:51:38.765179 27326 solver.cpp:238]     Train net output #0: loss = 1.71409 (* 1 = 1.71409 loss)
I0428 19:51:38.765185 27326 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:38.848821 27326 solver.cpp:219] Iteration 300 (1195.58 iter/s, 0.0836413s/100 iters), loss = 1.57934
I0428 19:51:38.848862 27326 solver.cpp:238]     Train net output #0: loss = 1.57934 (* 1 = 1.57934 loss)
I0428 19:51:38.848868 27326 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:38.932590 27326 solver.cpp:219] Iteration 400 (1194.53 iter/s, 0.0837151s/100 iters), loss = 1.15985
I0428 19:51:38.932643 27326 solver.cpp:238]     Train net output #0: loss = 1.15985 (* 1 = 1.15985 loss)
I0428 19:51:38.932651 27326 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:39.013331 27326 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:39.059240 27333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:39.059784 27326 solver.cpp:398]     Test net output #0: accuracy = 0.7349
I0428 19:51:39.059803 27326 solver.cpp:398]     Test net output #1: loss = 0.789975 (* 1 = 0.789975 loss)
I0428 19:51:39.060645 27326 solver.cpp:219] Iteration 500 (781.3 iter/s, 0.127992s/100 iters), loss = 0.63272
I0428 19:51:39.060694 27326 solver.cpp:238]     Train net output #0: loss = 0.63272 (* 1 = 0.63272 loss)
I0428 19:51:39.060717 27326 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:39.142766 27326 solver.cpp:219] Iteration 600 (1218.54 iter/s, 0.0820653s/100 iters), loss = 0.675442
I0428 19:51:39.142805 27326 solver.cpp:238]     Train net output #0: loss = 0.675442 (* 1 = 0.675442 loss)
I0428 19:51:39.142812 27326 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:39.225311 27326 solver.cpp:219] Iteration 700 (1211.93 iter/s, 0.0825127s/100 iters), loss = 0.588798
I0428 19:51:39.225363 27326 solver.cpp:238]     Train net output #0: loss = 0.588798 (* 1 = 0.588798 loss)
I0428 19:51:39.225369 27326 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:39.307780 27326 solver.cpp:219] Iteration 800 (1213.27 iter/s, 0.0824218s/100 iters), loss = 0.631938
I0428 19:51:39.307817 27326 solver.cpp:238]     Train net output #0: loss = 0.631938 (* 1 = 0.631938 loss)
I0428 19:51:39.307839 27326 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:39.390908 27326 solver.cpp:219] Iteration 900 (1203.45 iter/s, 0.0830947s/100 iters), loss = 0.53147
I0428 19:51:39.390950 27326 solver.cpp:238]     Train net output #0: loss = 0.53147 (* 1 = 0.53147 loss)
I0428 19:51:39.390956 27326 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:39.418567 27332 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:39.472769 27326 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:39.473692 27326 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:39.474211 27326 solver.cpp:311] Iteration 1000, loss = 0.426847
I0428 19:51:39.474226 27326 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:39.521329 27333 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:39.521863 27326 solver.cpp:398]     Test net output #0: accuracy = 0.8604
I0428 19:51:39.521881 27326 solver.cpp:398]     Test net output #1: loss = 0.362095 (* 1 = 0.362095 loss)
I0428 19:51:39.521903 27326 solver.cpp:316] Optimization Done.
I0428 19:51:39.521905 27326 caffe.cpp:259] Optimization Done.
