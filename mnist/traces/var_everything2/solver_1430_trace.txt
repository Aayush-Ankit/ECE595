I0428 20:23:59.193917  2341 caffe.cpp:218] Using GPUs 0
I0428 20:23:59.236464  2341 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:59.800405  2341 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1430.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:59.800564  2341 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1430.prototxt
I0428 20:23:59.800993  2341 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:59.801013  2341 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:59.801141  2341 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:59.801239  2341 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:59.801340  2341 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:59.801364  2341 net.cpp:86] Creating Layer mnist
I0428 20:23:59.801373  2341 net.cpp:382] mnist -> data
I0428 20:23:59.801395  2341 net.cpp:382] mnist -> label
I0428 20:23:59.802551  2341 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:59.805011  2341 net.cpp:124] Setting up mnist
I0428 20:23:59.805030  2341 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:59.805037  2341 net.cpp:131] Top shape: 64 (64)
I0428 20:23:59.805042  2341 net.cpp:139] Memory required for data: 200960
I0428 20:23:59.805048  2341 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:59.805065  2341 net.cpp:86] Creating Layer conv0
I0428 20:23:59.805085  2341 net.cpp:408] conv0 <- data
I0428 20:23:59.805099  2341 net.cpp:382] conv0 -> conv0
I0428 20:24:00.050066  2341 net.cpp:124] Setting up conv0
I0428 20:24:00.050108  2341 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:00.050112  2341 net.cpp:139] Memory required for data: 7573760
I0428 20:24:00.050127  2341 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:00.050140  2341 net.cpp:86] Creating Layer pool0
I0428 20:24:00.050144  2341 net.cpp:408] pool0 <- conv0
I0428 20:24:00.050165  2341 net.cpp:382] pool0 -> pool0
I0428 20:24:00.050213  2341 net.cpp:124] Setting up pool0
I0428 20:24:00.050230  2341 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:00.050232  2341 net.cpp:139] Memory required for data: 9416960
I0428 20:24:00.050235  2341 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:00.050246  2341 net.cpp:86] Creating Layer conv1
I0428 20:24:00.050264  2341 net.cpp:408] conv1 <- pool0
I0428 20:24:00.050268  2341 net.cpp:382] conv1 -> conv1
I0428 20:24:00.053831  2341 net.cpp:124] Setting up conv1
I0428 20:24:00.053860  2341 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:00.053864  2341 net.cpp:139] Memory required for data: 11055360
I0428 20:24:00.053872  2341 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:00.053879  2341 net.cpp:86] Creating Layer pool1
I0428 20:24:00.053899  2341 net.cpp:408] pool1 <- conv1
I0428 20:24:00.053903  2341 net.cpp:382] pool1 -> pool1
I0428 20:24:00.053939  2341 net.cpp:124] Setting up pool1
I0428 20:24:00.053946  2341 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:00.053948  2341 net.cpp:139] Memory required for data: 11464960
I0428 20:24:00.053951  2341 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:00.053957  2341 net.cpp:86] Creating Layer ip1
I0428 20:24:00.053975  2341 net.cpp:408] ip1 <- pool1
I0428 20:24:00.053980  2341 net.cpp:382] ip1 -> ip1
I0428 20:24:00.054330  2341 net.cpp:124] Setting up ip1
I0428 20:24:00.054337  2341 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:00.054355  2341 net.cpp:139] Memory required for data: 11471360
I0428 20:24:00.054363  2341 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:00.054368  2341 net.cpp:86] Creating Layer relu1
I0428 20:24:00.054371  2341 net.cpp:408] relu1 <- ip1
I0428 20:24:00.054375  2341 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:00.054532  2341 net.cpp:124] Setting up relu1
I0428 20:24:00.054540  2341 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:00.054543  2341 net.cpp:139] Memory required for data: 11477760
I0428 20:24:00.054546  2341 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:00.054553  2341 net.cpp:86] Creating Layer ip2
I0428 20:24:00.054555  2341 net.cpp:408] ip2 <- ip1
I0428 20:24:00.054559  2341 net.cpp:382] ip2 -> ip2
I0428 20:24:00.054649  2341 net.cpp:124] Setting up ip2
I0428 20:24:00.054656  2341 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:00.054659  2341 net.cpp:139] Memory required for data: 11484160
I0428 20:24:00.054664  2341 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:00.054671  2341 net.cpp:86] Creating Layer relu2
I0428 20:24:00.054673  2341 net.cpp:408] relu2 <- ip2
I0428 20:24:00.054677  2341 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:00.055480  2341 net.cpp:124] Setting up relu2
I0428 20:24:00.055491  2341 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:24:00.055495  2341 net.cpp:139] Memory required for data: 11490560
I0428 20:24:00.055500  2341 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:00.055505  2341 net.cpp:86] Creating Layer ip3
I0428 20:24:00.055508  2341 net.cpp:408] ip3 <- ip2
I0428 20:24:00.055515  2341 net.cpp:382] ip3 -> ip3
I0428 20:24:00.055608  2341 net.cpp:124] Setting up ip3
I0428 20:24:00.055615  2341 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:00.055619  2341 net.cpp:139] Memory required for data: 11493120
I0428 20:24:00.055626  2341 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:00.055631  2341 net.cpp:86] Creating Layer relu3
I0428 20:24:00.055634  2341 net.cpp:408] relu3 <- ip3
I0428 20:24:00.055637  2341 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:00.055794  2341 net.cpp:124] Setting up relu3
I0428 20:24:00.055804  2341 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:00.055806  2341 net.cpp:139] Memory required for data: 11495680
I0428 20:24:00.055809  2341 layer_factory.hpp:77] Creating layer loss
I0428 20:24:00.055815  2341 net.cpp:86] Creating Layer loss
I0428 20:24:00.055819  2341 net.cpp:408] loss <- ip3
I0428 20:24:00.055821  2341 net.cpp:408] loss <- label
I0428 20:24:00.055826  2341 net.cpp:382] loss -> loss
I0428 20:24:00.055855  2341 layer_factory.hpp:77] Creating layer loss
I0428 20:24:00.056077  2341 net.cpp:124] Setting up loss
I0428 20:24:00.056087  2341 net.cpp:131] Top shape: (1)
I0428 20:24:00.056090  2341 net.cpp:134]     with loss weight 1
I0428 20:24:00.056104  2341 net.cpp:139] Memory required for data: 11495684
I0428 20:24:00.056108  2341 net.cpp:200] loss needs backward computation.
I0428 20:24:00.056113  2341 net.cpp:200] relu3 needs backward computation.
I0428 20:24:00.056115  2341 net.cpp:200] ip3 needs backward computation.
I0428 20:24:00.056118  2341 net.cpp:200] relu2 needs backward computation.
I0428 20:24:00.056121  2341 net.cpp:200] ip2 needs backward computation.
I0428 20:24:00.056124  2341 net.cpp:200] relu1 needs backward computation.
I0428 20:24:00.056126  2341 net.cpp:200] ip1 needs backward computation.
I0428 20:24:00.056129  2341 net.cpp:200] pool1 needs backward computation.
I0428 20:24:00.056133  2341 net.cpp:200] conv1 needs backward computation.
I0428 20:24:00.056136  2341 net.cpp:200] pool0 needs backward computation.
I0428 20:24:00.056139  2341 net.cpp:200] conv0 needs backward computation.
I0428 20:24:00.056143  2341 net.cpp:202] mnist does not need backward computation.
I0428 20:24:00.056145  2341 net.cpp:244] This network produces output loss
I0428 20:24:00.056170  2341 net.cpp:257] Network initialization done.
I0428 20:24:00.056560  2341 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1430.prototxt
I0428 20:24:00.056586  2341 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:00.056706  2341 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:00.056782  2341 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:00.056860  2341 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:00.056879  2341 net.cpp:86] Creating Layer mnist
I0428 20:24:00.056884  2341 net.cpp:382] mnist -> data
I0428 20:24:00.056891  2341 net.cpp:382] mnist -> label
I0428 20:24:00.056977  2341 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:00.058107  2341 net.cpp:124] Setting up mnist
I0428 20:24:00.058136  2341 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:00.058142  2341 net.cpp:131] Top shape: 100 (100)
I0428 20:24:00.058145  2341 net.cpp:139] Memory required for data: 314000
I0428 20:24:00.058149  2341 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:00.058156  2341 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:00.058159  2341 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:00.058164  2341 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:00.058172  2341 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:00.058230  2341 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:00.058238  2341 net.cpp:131] Top shape: 100 (100)
I0428 20:24:00.058241  2341 net.cpp:131] Top shape: 100 (100)
I0428 20:24:00.058244  2341 net.cpp:139] Memory required for data: 314800
I0428 20:24:00.058248  2341 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:00.058259  2341 net.cpp:86] Creating Layer conv0
I0428 20:24:00.058262  2341 net.cpp:408] conv0 <- data
I0428 20:24:00.058267  2341 net.cpp:382] conv0 -> conv0
I0428 20:24:00.059942  2341 net.cpp:124] Setting up conv0
I0428 20:24:00.059957  2341 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:00.059959  2341 net.cpp:139] Memory required for data: 11834800
I0428 20:24:00.059968  2341 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:00.059975  2341 net.cpp:86] Creating Layer pool0
I0428 20:24:00.059978  2341 net.cpp:408] pool0 <- conv0
I0428 20:24:00.059983  2341 net.cpp:382] pool0 -> pool0
I0428 20:24:00.060034  2341 net.cpp:124] Setting up pool0
I0428 20:24:00.060039  2341 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:00.060042  2341 net.cpp:139] Memory required for data: 14714800
I0428 20:24:00.060045  2341 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:00.060055  2341 net.cpp:86] Creating Layer conv1
I0428 20:24:00.060058  2341 net.cpp:408] conv1 <- pool0
I0428 20:24:00.060063  2341 net.cpp:382] conv1 -> conv1
I0428 20:24:00.063246  2341 net.cpp:124] Setting up conv1
I0428 20:24:00.063259  2341 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:00.063264  2341 net.cpp:139] Memory required for data: 17274800
I0428 20:24:00.063278  2341 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:00.063287  2341 net.cpp:86] Creating Layer pool1
I0428 20:24:00.063289  2341 net.cpp:408] pool1 <- conv1
I0428 20:24:00.063295  2341 net.cpp:382] pool1 -> pool1
I0428 20:24:00.063331  2341 net.cpp:124] Setting up pool1
I0428 20:24:00.063336  2341 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:00.063339  2341 net.cpp:139] Memory required for data: 17914800
I0428 20:24:00.063349  2341 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:00.063354  2341 net.cpp:86] Creating Layer ip1
I0428 20:24:00.063359  2341 net.cpp:408] ip1 <- pool1
I0428 20:24:00.063364  2341 net.cpp:382] ip1 -> ip1
I0428 20:24:00.063688  2341 net.cpp:124] Setting up ip1
I0428 20:24:00.063705  2341 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:00.063709  2341 net.cpp:139] Memory required for data: 17924800
I0428 20:24:00.063715  2341 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:00.063721  2341 net.cpp:86] Creating Layer relu1
I0428 20:24:00.063725  2341 net.cpp:408] relu1 <- ip1
I0428 20:24:00.063730  2341 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:00.063905  2341 net.cpp:124] Setting up relu1
I0428 20:24:00.063913  2341 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:00.063916  2341 net.cpp:139] Memory required for data: 17934800
I0428 20:24:00.063920  2341 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:00.063927  2341 net.cpp:86] Creating Layer ip2
I0428 20:24:00.063930  2341 net.cpp:408] ip2 <- ip1
I0428 20:24:00.063936  2341 net.cpp:382] ip2 -> ip2
I0428 20:24:00.064039  2341 net.cpp:124] Setting up ip2
I0428 20:24:00.064046  2341 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:00.064049  2341 net.cpp:139] Memory required for data: 17944800
I0428 20:24:00.064054  2341 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:00.064059  2341 net.cpp:86] Creating Layer relu2
I0428 20:24:00.064061  2341 net.cpp:408] relu2 <- ip2
I0428 20:24:00.064065  2341 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:00.064256  2341 net.cpp:124] Setting up relu2
I0428 20:24:00.064265  2341 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:24:00.064267  2341 net.cpp:139] Memory required for data: 17954800
I0428 20:24:00.064270  2341 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:00.064275  2341 net.cpp:86] Creating Layer ip3
I0428 20:24:00.064278  2341 net.cpp:408] ip3 <- ip2
I0428 20:24:00.064283  2341 net.cpp:382] ip3 -> ip3
I0428 20:24:00.064390  2341 net.cpp:124] Setting up ip3
I0428 20:24:00.064398  2341 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:00.064401  2341 net.cpp:139] Memory required for data: 17958800
I0428 20:24:00.064409  2341 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:00.064412  2341 net.cpp:86] Creating Layer relu3
I0428 20:24:00.064415  2341 net.cpp:408] relu3 <- ip3
I0428 20:24:00.064420  2341 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:00.065340  2341 net.cpp:124] Setting up relu3
I0428 20:24:00.065352  2341 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:00.065356  2341 net.cpp:139] Memory required for data: 17962800
I0428 20:24:00.065359  2341 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:00.065364  2341 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:00.065373  2341 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:00.065378  2341 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:00.065395  2341 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:00.065433  2341 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:00.065438  2341 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:00.065448  2341 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:00.065449  2341 net.cpp:139] Memory required for data: 17970800
I0428 20:24:00.065452  2341 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:00.065459  2341 net.cpp:86] Creating Layer accuracy
I0428 20:24:00.065462  2341 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:00.065465  2341 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:00.065471  2341 net.cpp:382] accuracy -> accuracy
I0428 20:24:00.065477  2341 net.cpp:124] Setting up accuracy
I0428 20:24:00.065481  2341 net.cpp:131] Top shape: (1)
I0428 20:24:00.065485  2341 net.cpp:139] Memory required for data: 17970804
I0428 20:24:00.065492  2341 layer_factory.hpp:77] Creating layer loss
I0428 20:24:00.065496  2341 net.cpp:86] Creating Layer loss
I0428 20:24:00.065500  2341 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:00.065502  2341 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:00.065506  2341 net.cpp:382] loss -> loss
I0428 20:24:00.065512  2341 layer_factory.hpp:77] Creating layer loss
I0428 20:24:00.065774  2341 net.cpp:124] Setting up loss
I0428 20:24:00.065785  2341 net.cpp:131] Top shape: (1)
I0428 20:24:00.065796  2341 net.cpp:134]     with loss weight 1
I0428 20:24:00.065812  2341 net.cpp:139] Memory required for data: 17970808
I0428 20:24:00.065815  2341 net.cpp:200] loss needs backward computation.
I0428 20:24:00.065825  2341 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:00.065829  2341 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:00.065831  2341 net.cpp:200] relu3 needs backward computation.
I0428 20:24:00.065834  2341 net.cpp:200] ip3 needs backward computation.
I0428 20:24:00.065843  2341 net.cpp:200] relu2 needs backward computation.
I0428 20:24:00.065845  2341 net.cpp:200] ip2 needs backward computation.
I0428 20:24:00.065848  2341 net.cpp:200] relu1 needs backward computation.
I0428 20:24:00.065851  2341 net.cpp:200] ip1 needs backward computation.
I0428 20:24:00.065855  2341 net.cpp:200] pool1 needs backward computation.
I0428 20:24:00.065862  2341 net.cpp:200] conv1 needs backward computation.
I0428 20:24:00.065865  2341 net.cpp:200] pool0 needs backward computation.
I0428 20:24:00.065868  2341 net.cpp:200] conv0 needs backward computation.
I0428 20:24:00.065872  2341 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:00.065876  2341 net.cpp:202] mnist does not need backward computation.
I0428 20:24:00.065878  2341 net.cpp:244] This network produces output accuracy
I0428 20:24:00.065887  2341 net.cpp:244] This network produces output loss
I0428 20:24:00.065899  2341 net.cpp:257] Network initialization done.
I0428 20:24:00.065940  2341 solver.cpp:56] Solver scaffolding done.
I0428 20:24:00.066321  2341 caffe.cpp:248] Starting Optimization
I0428 20:24:00.066329  2341 solver.cpp:273] Solving LeNet
I0428 20:24:00.066330  2341 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:00.067145  2341 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:00.078660  2341 blocking_queue.cpp:49] Waiting for data
I0428 20:24:00.157426  2349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:00.158788  2341 solver.cpp:398]     Test net output #0: accuracy = 0.0806
I0428 20:24:00.158823  2341 solver.cpp:398]     Test net output #1: loss = 2.30685 (* 1 = 2.30685 loss)
I0428 20:24:00.164466  2341 solver.cpp:219] Iteration 0 (-1.36736e-31 iter/s, 0.0981105s/100 iters), loss = 2.31191
I0428 20:24:00.164491  2341 solver.cpp:238]     Train net output #0: loss = 2.31191 (* 1 = 2.31191 loss)
I0428 20:24:00.164518  2341 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:00.404759  2341 solver.cpp:219] Iteration 100 (416.251 iter/s, 0.24024s/100 iters), loss = 0.264286
I0428 20:24:00.404824  2341 solver.cpp:238]     Train net output #0: loss = 0.264286 (* 1 = 0.264286 loss)
I0428 20:24:00.404839  2341 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:00.656864  2341 solver.cpp:219] Iteration 200 (396.777 iter/s, 0.252031s/100 iters), loss = 0.168374
I0428 20:24:00.656922  2341 solver.cpp:238]     Train net output #0: loss = 0.168374 (* 1 = 0.168374 loss)
I0428 20:24:00.656935  2341 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:00.903797  2341 solver.cpp:219] Iteration 300 (405.092 iter/s, 0.246858s/100 iters), loss = 0.169724
I0428 20:24:00.903848  2341 solver.cpp:238]     Train net output #0: loss = 0.169724 (* 1 = 0.169724 loss)
I0428 20:24:00.903861  2341 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:01.153302  2341 solver.cpp:219] Iteration 400 (400.904 iter/s, 0.249436s/100 iters), loss = 0.10694
I0428 20:24:01.153350  2341 solver.cpp:238]     Train net output #0: loss = 0.10694 (* 1 = 0.10694 loss)
I0428 20:24:01.153362  2341 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:01.399588  2341 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:01.495440  2349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:01.498575  2341 solver.cpp:398]     Test net output #0: accuracy = 0.9642
I0428 20:24:01.498603  2341 solver.cpp:398]     Test net output #1: loss = 0.113086 (* 1 = 0.113086 loss)
I0428 20:24:01.500824  2341 solver.cpp:219] Iteration 500 (287.807 iter/s, 0.347455s/100 iters), loss = 0.0833759
I0428 20:24:01.500872  2341 solver.cpp:238]     Train net output #0: loss = 0.0833759 (* 1 = 0.0833759 loss)
I0428 20:24:01.500881  2341 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:01.737376  2341 solver.cpp:219] Iteration 600 (422.864 iter/s, 0.236483s/100 iters), loss = 0.0994506
I0428 20:24:01.737426  2341 solver.cpp:238]     Train net output #0: loss = 0.0994506 (* 1 = 0.0994506 loss)
I0428 20:24:01.737438  2341 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:01.990780  2341 solver.cpp:219] Iteration 700 (394.735 iter/s, 0.253335s/100 iters), loss = 0.122096
I0428 20:24:01.990841  2341 solver.cpp:238]     Train net output #0: loss = 0.122096 (* 1 = 0.122096 loss)
I0428 20:24:01.990856  2341 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:02.247354  2341 solver.cpp:219] Iteration 800 (389.872 iter/s, 0.256495s/100 iters), loss = 0.306506
I0428 20:24:02.247406  2341 solver.cpp:238]     Train net output #0: loss = 0.306506 (* 1 = 0.306506 loss)
I0428 20:24:02.247419  2341 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:02.502362  2341 solver.cpp:219] Iteration 900 (392.252 iter/s, 0.254938s/100 iters), loss = 0.116985
I0428 20:24:02.502413  2341 solver.cpp:238]     Train net output #0: loss = 0.116985 (* 1 = 0.116985 loss)
I0428 20:24:02.502426  2341 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:02.586163  2348 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:02.750527  2341 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:02.757405  2341 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:02.760265  2341 solver.cpp:311] Iteration 1000, loss = 0.118602
I0428 20:24:02.760293  2341 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:02.854492  2349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:02.856835  2341 solver.cpp:398]     Test net output #0: accuracy = 0.9779
I0428 20:24:02.856860  2341 solver.cpp:398]     Test net output #1: loss = 0.0680883 (* 1 = 0.0680883 loss)
I0428 20:24:02.856866  2341 solver.cpp:316] Optimization Done.
I0428 20:24:02.856870  2341 caffe.cpp:259] Optimization Done.
