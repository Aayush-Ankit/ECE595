I0428 19:30:11.879132 22225 caffe.cpp:218] Using GPUs 0
I0428 19:30:11.920070 22225 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:12.440081 22225 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test83.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:12.440220 22225 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test83.prototxt
I0428 19:30:12.440551 22225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:12.440567 22225 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:12.440644 22225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:30:12.440717 22225 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:12.440822 22225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:12.440846 22225 net.cpp:86] Creating Layer mnist
I0428 19:30:12.440855 22225 net.cpp:382] mnist -> data
I0428 19:30:12.440877 22225 net.cpp:382] mnist -> label
I0428 19:30:12.441972 22225 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:12.444414 22225 net.cpp:124] Setting up mnist
I0428 19:30:12.444432 22225 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:12.444439 22225 net.cpp:131] Top shape: 64 (64)
I0428 19:30:12.444442 22225 net.cpp:139] Memory required for data: 200960
I0428 19:30:12.444450 22225 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:12.444496 22225 net.cpp:86] Creating Layer conv0
I0428 19:30:12.444504 22225 net.cpp:408] conv0 <- data
I0428 19:30:12.444516 22225 net.cpp:382] conv0 -> conv0
I0428 19:30:12.727491 22225 net.cpp:124] Setting up conv0
I0428 19:30:12.727517 22225 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:12.727522 22225 net.cpp:139] Memory required for data: 938240
I0428 19:30:12.727537 22225 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:12.727550 22225 net.cpp:86] Creating Layer pool0
I0428 19:30:12.727555 22225 net.cpp:408] pool0 <- conv0
I0428 19:30:12.727560 22225 net.cpp:382] pool0 -> pool0
I0428 19:30:12.727605 22225 net.cpp:124] Setting up pool0
I0428 19:30:12.727610 22225 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:12.727613 22225 net.cpp:139] Memory required for data: 1122560
I0428 19:30:12.727632 22225 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:12.727639 22225 net.cpp:86] Creating Layer ip1
I0428 19:30:12.727643 22225 net.cpp:408] ip1 <- pool0
I0428 19:30:12.727648 22225 net.cpp:382] ip1 -> ip1
I0428 19:30:12.728600 22225 net.cpp:124] Setting up ip1
I0428 19:30:12.728612 22225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:12.728616 22225 net.cpp:139] Memory required for data: 1125120
I0428 19:30:12.728624 22225 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:12.728646 22225 net.cpp:86] Creating Layer relu1
I0428 19:30:12.728651 22225 net.cpp:408] relu1 <- ip1
I0428 19:30:12.728655 22225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:12.728853 22225 net.cpp:124] Setting up relu1
I0428 19:30:12.728863 22225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:12.728866 22225 net.cpp:139] Memory required for data: 1127680
I0428 19:30:12.728869 22225 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:12.728876 22225 net.cpp:86] Creating Layer ip2
I0428 19:30:12.728879 22225 net.cpp:408] ip2 <- ip1
I0428 19:30:12.728885 22225 net.cpp:382] ip2 -> ip2
I0428 19:30:12.728988 22225 net.cpp:124] Setting up ip2
I0428 19:30:12.728996 22225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:12.728998 22225 net.cpp:139] Memory required for data: 1130240
I0428 19:30:12.729005 22225 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:12.729010 22225 net.cpp:86] Creating Layer relu2
I0428 19:30:12.729013 22225 net.cpp:408] relu2 <- ip2
I0428 19:30:12.729017 22225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:12.729730 22225 net.cpp:124] Setting up relu2
I0428 19:30:12.729743 22225 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:12.729761 22225 net.cpp:139] Memory required for data: 1132800
I0428 19:30:12.729765 22225 layer_factory.hpp:77] Creating layer loss
I0428 19:30:12.729773 22225 net.cpp:86] Creating Layer loss
I0428 19:30:12.729776 22225 net.cpp:408] loss <- ip2
I0428 19:30:12.729781 22225 net.cpp:408] loss <- label
I0428 19:30:12.729786 22225 net.cpp:382] loss -> loss
I0428 19:30:12.729802 22225 layer_factory.hpp:77] Creating layer loss
I0428 19:30:12.730087 22225 net.cpp:124] Setting up loss
I0428 19:30:12.730096 22225 net.cpp:131] Top shape: (1)
I0428 19:30:12.730099 22225 net.cpp:134]     with loss weight 1
I0428 19:30:12.730113 22225 net.cpp:139] Memory required for data: 1132804
I0428 19:30:12.730118 22225 net.cpp:200] loss needs backward computation.
I0428 19:30:12.730121 22225 net.cpp:200] relu2 needs backward computation.
I0428 19:30:12.730124 22225 net.cpp:200] ip2 needs backward computation.
I0428 19:30:12.730128 22225 net.cpp:200] relu1 needs backward computation.
I0428 19:30:12.730130 22225 net.cpp:200] ip1 needs backward computation.
I0428 19:30:12.730134 22225 net.cpp:200] pool0 needs backward computation.
I0428 19:30:12.730136 22225 net.cpp:200] conv0 needs backward computation.
I0428 19:30:12.730140 22225 net.cpp:202] mnist does not need backward computation.
I0428 19:30:12.730142 22225 net.cpp:244] This network produces output loss
I0428 19:30:12.730150 22225 net.cpp:257] Network initialization done.
I0428 19:30:12.730403 22225 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test83.prototxt
I0428 19:30:12.730428 22225 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:12.730515 22225 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:30:12.730583 22225 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:12.730643 22225 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:12.730655 22225 net.cpp:86] Creating Layer mnist
I0428 19:30:12.730659 22225 net.cpp:382] mnist -> data
I0428 19:30:12.730669 22225 net.cpp:382] mnist -> label
I0428 19:30:12.730749 22225 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:12.732854 22225 net.cpp:124] Setting up mnist
I0428 19:30:12.732884 22225 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:12.732889 22225 net.cpp:131] Top shape: 100 (100)
I0428 19:30:12.732893 22225 net.cpp:139] Memory required for data: 314000
I0428 19:30:12.732897 22225 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:12.732904 22225 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:12.732908 22225 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:12.732913 22225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:12.732919 22225 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:12.732966 22225 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:12.732973 22225 net.cpp:131] Top shape: 100 (100)
I0428 19:30:12.732977 22225 net.cpp:131] Top shape: 100 (100)
I0428 19:30:12.732980 22225 net.cpp:139] Memory required for data: 314800
I0428 19:30:12.732983 22225 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:12.732991 22225 net.cpp:86] Creating Layer conv0
I0428 19:30:12.732995 22225 net.cpp:408] conv0 <- data
I0428 19:30:12.733000 22225 net.cpp:382] conv0 -> conv0
I0428 19:30:12.734771 22225 net.cpp:124] Setting up conv0
I0428 19:30:12.734784 22225 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:12.734787 22225 net.cpp:139] Memory required for data: 1466800
I0428 19:30:12.734797 22225 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:12.734803 22225 net.cpp:86] Creating Layer pool0
I0428 19:30:12.734807 22225 net.cpp:408] pool0 <- conv0
I0428 19:30:12.734812 22225 net.cpp:382] pool0 -> pool0
I0428 19:30:12.734848 22225 net.cpp:124] Setting up pool0
I0428 19:30:12.734853 22225 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:12.734855 22225 net.cpp:139] Memory required for data: 1754800
I0428 19:30:12.734858 22225 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:12.734865 22225 net.cpp:86] Creating Layer ip1
I0428 19:30:12.734869 22225 net.cpp:408] ip1 <- pool0
I0428 19:30:12.734875 22225 net.cpp:382] ip1 -> ip1
I0428 19:30:12.735008 22225 net.cpp:124] Setting up ip1
I0428 19:30:12.735014 22225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:12.735018 22225 net.cpp:139] Memory required for data: 1758800
I0428 19:30:12.735024 22225 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:12.735030 22225 net.cpp:86] Creating Layer relu1
I0428 19:30:12.735033 22225 net.cpp:408] relu1 <- ip1
I0428 19:30:12.735038 22225 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:12.735191 22225 net.cpp:124] Setting up relu1
I0428 19:30:12.735199 22225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:12.735213 22225 net.cpp:139] Memory required for data: 1762800
I0428 19:30:12.735216 22225 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:12.735224 22225 net.cpp:86] Creating Layer ip2
I0428 19:30:12.735226 22225 net.cpp:408] ip2 <- ip1
I0428 19:30:12.735230 22225 net.cpp:382] ip2 -> ip2
I0428 19:30:12.735327 22225 net.cpp:124] Setting up ip2
I0428 19:30:12.735333 22225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:12.735335 22225 net.cpp:139] Memory required for data: 1766800
I0428 19:30:12.735343 22225 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:12.735347 22225 net.cpp:86] Creating Layer relu2
I0428 19:30:12.735350 22225 net.cpp:408] relu2 <- ip2
I0428 19:30:12.735373 22225 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:12.735548 22225 net.cpp:124] Setting up relu2
I0428 19:30:12.735556 22225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:12.735559 22225 net.cpp:139] Memory required for data: 1770800
I0428 19:30:12.735563 22225 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:30:12.735569 22225 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:30:12.735572 22225 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:30:12.735586 22225 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:30:12.735594 22225 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:30:12.735699 22225 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:30:12.735707 22225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:12.735710 22225 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:12.735713 22225 net.cpp:139] Memory required for data: 1778800
I0428 19:30:12.735730 22225 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:12.735735 22225 net.cpp:86] Creating Layer accuracy
I0428 19:30:12.735738 22225 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:30:12.735743 22225 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:12.735747 22225 net.cpp:382] accuracy -> accuracy
I0428 19:30:12.735754 22225 net.cpp:124] Setting up accuracy
I0428 19:30:12.735757 22225 net.cpp:131] Top shape: (1)
I0428 19:30:12.735760 22225 net.cpp:139] Memory required for data: 1778804
I0428 19:30:12.735764 22225 layer_factory.hpp:77] Creating layer loss
I0428 19:30:12.735767 22225 net.cpp:86] Creating Layer loss
I0428 19:30:12.735770 22225 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:30:12.735774 22225 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:12.735780 22225 net.cpp:382] loss -> loss
I0428 19:30:12.735785 22225 layer_factory.hpp:77] Creating layer loss
I0428 19:30:12.736652 22225 net.cpp:124] Setting up loss
I0428 19:30:12.736665 22225 net.cpp:131] Top shape: (1)
I0428 19:30:12.736668 22225 net.cpp:134]     with loss weight 1
I0428 19:30:12.736675 22225 net.cpp:139] Memory required for data: 1778808
I0428 19:30:12.736685 22225 net.cpp:200] loss needs backward computation.
I0428 19:30:12.736688 22225 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:12.736692 22225 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:30:12.736696 22225 net.cpp:200] relu2 needs backward computation.
I0428 19:30:12.736697 22225 net.cpp:200] ip2 needs backward computation.
I0428 19:30:12.736701 22225 net.cpp:200] relu1 needs backward computation.
I0428 19:30:12.736703 22225 net.cpp:200] ip1 needs backward computation.
I0428 19:30:12.736707 22225 net.cpp:200] pool0 needs backward computation.
I0428 19:30:12.736709 22225 net.cpp:200] conv0 needs backward computation.
I0428 19:30:12.736713 22225 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:12.736717 22225 net.cpp:202] mnist does not need backward computation.
I0428 19:30:12.736719 22225 net.cpp:244] This network produces output accuracy
I0428 19:30:12.736723 22225 net.cpp:244] This network produces output loss
I0428 19:30:12.736733 22225 net.cpp:257] Network initialization done.
I0428 19:30:12.736765 22225 solver.cpp:56] Solver scaffolding done.
I0428 19:30:12.737012 22225 caffe.cpp:248] Starting Optimization
I0428 19:30:12.737020 22225 solver.cpp:273] Solving LeNet
I0428 19:30:12.737033 22225 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:12.737139 22225 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:12.737254 22225 blocking_queue.cpp:49] Waiting for data
I0428 19:30:12.814090 22232 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:12.814677 22225 solver.cpp:398]     Test net output #0: accuracy = 0.1086
I0428 19:30:12.814730 22225 solver.cpp:398]     Test net output #1: loss = 2.30616 (* 1 = 2.30616 loss)
I0428 19:30:12.817385 22225 solver.cpp:219] Iteration 0 (-4.8135e-31 iter/s, 0.0803174s/100 iters), loss = 2.30802
I0428 19:30:12.817446 22225 solver.cpp:238]     Train net output #0: loss = 2.30802 (* 1 = 2.30802 loss)
I0428 19:30:12.817467 22225 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:12.886570 22225 solver.cpp:219] Iteration 100 (1446.93 iter/s, 0.0691118s/100 iters), loss = 0.70373
I0428 19:30:12.886607 22225 solver.cpp:238]     Train net output #0: loss = 0.70373 (* 1 = 0.70373 loss)
I0428 19:30:12.886617 22225 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:12.944329 22225 solver.cpp:219] Iteration 200 (1732.67 iter/s, 0.0577145s/100 iters), loss = 0.647252
I0428 19:30:12.944358 22225 solver.cpp:238]     Train net output #0: loss = 0.647252 (* 1 = 0.647252 loss)
I0428 19:30:12.944365 22225 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:12.998968 22225 solver.cpp:219] Iteration 300 (1831.44 iter/s, 0.0546017s/100 iters), loss = 0.300427
I0428 19:30:12.998997 22225 solver.cpp:238]     Train net output #0: loss = 0.300427 (* 1 = 0.300427 loss)
I0428 19:30:12.999004 22225 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:13.052996 22225 solver.cpp:219] Iteration 400 (1852.15 iter/s, 0.0539914s/100 iters), loss = 0.415037
I0428 19:30:13.053023 22225 solver.cpp:238]     Train net output #0: loss = 0.415037 (* 1 = 0.415037 loss)
I0428 19:30:13.053030 22225 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:13.105672 22225 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:13.180017 22232 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:13.180441 22225 solver.cpp:398]     Test net output #0: accuracy = 0.8593
I0428 19:30:13.180467 22225 solver.cpp:398]     Test net output #1: loss = 0.429176 (* 1 = 0.429176 loss)
I0428 19:30:13.181139 22225 solver.cpp:219] Iteration 500 (780.619 iter/s, 0.128103s/100 iters), loss = 0.650228
I0428 19:30:13.181164 22225 solver.cpp:238]     Train net output #0: loss = 0.650228 (* 1 = 0.650228 loss)
I0428 19:30:13.181171 22225 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:13.237076 22225 solver.cpp:219] Iteration 600 (1788.84 iter/s, 0.0559022s/100 iters), loss = 0.395517
I0428 19:30:13.237121 22225 solver.cpp:238]     Train net output #0: loss = 0.395517 (* 1 = 0.395517 loss)
I0428 19:30:13.237129 22225 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:13.291757 22225 solver.cpp:219] Iteration 700 (1830.54 iter/s, 0.0546288s/100 iters), loss = 0.765005
I0428 19:30:13.291798 22225 solver.cpp:238]     Train net output #0: loss = 0.765005 (* 1 = 0.765005 loss)
I0428 19:30:13.291813 22225 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:13.348543 22225 solver.cpp:219] Iteration 800 (1762.76 iter/s, 0.0567292s/100 iters), loss = 0.531425
I0428 19:30:13.348598 22225 solver.cpp:238]     Train net output #0: loss = 0.531425 (* 1 = 0.531425 loss)
I0428 19:30:13.348610 22225 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:13.409862 22225 solver.cpp:219] Iteration 900 (1632.48 iter/s, 0.0612566s/100 iters), loss = 0.410121
I0428 19:30:13.409901 22225 solver.cpp:238]     Train net output #0: loss = 0.410121 (* 1 = 0.410121 loss)
I0428 19:30:13.409909 22225 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:13.428813 22231 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:13.464356 22225 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:13.465023 22225 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:13.465471 22225 solver.cpp:311] Iteration 1000, loss = 0.538645
I0428 19:30:13.465489 22225 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:13.518365 22232 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:13.518777 22225 solver.cpp:398]     Test net output #0: accuracy = 0.8679
I0428 19:30:13.518802 22225 solver.cpp:398]     Test net output #1: loss = 0.376154 (* 1 = 0.376154 loss)
I0428 19:30:13.518808 22225 solver.cpp:316] Optimization Done.
I0428 19:30:13.518812 22225 caffe.cpp:259] Optimization Done.
