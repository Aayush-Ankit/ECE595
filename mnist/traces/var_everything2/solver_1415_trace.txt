I0428 20:23:04.069167  2173 caffe.cpp:218] Using GPUs 0
I0428 20:23:04.106122  2173 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:04.619040  2173 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1415.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:04.619176  2173 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1415.prototxt
I0428 20:23:04.619560  2173 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:04.619577  2173 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:04.619673  2173 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:23:04.619750  2173 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:04.619853  2173 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:04.619879  2173 net.cpp:86] Creating Layer mnist
I0428 20:23:04.619887  2173 net.cpp:382] mnist -> data
I0428 20:23:04.619910  2173 net.cpp:382] mnist -> label
I0428 20:23:04.621033  2173 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:04.623514  2173 net.cpp:124] Setting up mnist
I0428 20:23:04.623534  2173 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:04.623540  2173 net.cpp:131] Top shape: 64 (64)
I0428 20:23:04.623544  2173 net.cpp:139] Memory required for data: 200960
I0428 20:23:04.623551  2173 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:04.623590  2173 net.cpp:86] Creating Layer conv0
I0428 20:23:04.623606  2173 net.cpp:408] conv0 <- data
I0428 20:23:04.623618  2173 net.cpp:382] conv0 -> conv0
I0428 20:23:04.900116  2173 net.cpp:124] Setting up conv0
I0428 20:23:04.900141  2173 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:04.900146  2173 net.cpp:139] Memory required for data: 7573760
I0428 20:23:04.900171  2173 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:04.900184  2173 net.cpp:86] Creating Layer pool0
I0428 20:23:04.900188  2173 net.cpp:408] pool0 <- conv0
I0428 20:23:04.900193  2173 net.cpp:382] pool0 -> pool0
I0428 20:23:04.900254  2173 net.cpp:124] Setting up pool0
I0428 20:23:04.900259  2173 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:04.900262  2173 net.cpp:139] Memory required for data: 9416960
I0428 20:23:04.900265  2173 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:04.900275  2173 net.cpp:86] Creating Layer conv1
I0428 20:23:04.900279  2173 net.cpp:408] conv1 <- pool0
I0428 20:23:04.900285  2173 net.cpp:382] conv1 -> conv1
I0428 20:23:04.903625  2173 net.cpp:124] Setting up conv1
I0428 20:23:04.903654  2173 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:04.903658  2173 net.cpp:139] Memory required for data: 11055360
I0428 20:23:04.903667  2173 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:04.903676  2173 net.cpp:86] Creating Layer pool1
I0428 20:23:04.903679  2173 net.cpp:408] pool1 <- conv1
I0428 20:23:04.903684  2173 net.cpp:382] pool1 -> pool1
I0428 20:23:04.903724  2173 net.cpp:124] Setting up pool1
I0428 20:23:04.903733  2173 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:04.903738  2173 net.cpp:139] Memory required for data: 11464960
I0428 20:23:04.903743  2173 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:04.903750  2173 net.cpp:86] Creating Layer ip1
I0428 20:23:04.903753  2173 net.cpp:408] ip1 <- pool1
I0428 20:23:04.903759  2173 net.cpp:382] ip1 -> ip1
I0428 20:23:04.904284  2173 net.cpp:124] Setting up ip1
I0428 20:23:04.904292  2173 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:04.904311  2173 net.cpp:139] Memory required for data: 11477760
I0428 20:23:04.904319  2173 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:04.904323  2173 net.cpp:86] Creating Layer relu1
I0428 20:23:04.904327  2173 net.cpp:408] relu1 <- ip1
I0428 20:23:04.904331  2173 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:04.904500  2173 net.cpp:124] Setting up relu1
I0428 20:23:04.904510  2173 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:23:04.904513  2173 net.cpp:139] Memory required for data: 11490560
I0428 20:23:04.904516  2173 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:04.904522  2173 net.cpp:86] Creating Layer ip2
I0428 20:23:04.904525  2173 net.cpp:408] ip2 <- ip1
I0428 20:23:04.904531  2173 net.cpp:382] ip2 -> ip2
I0428 20:23:04.904624  2173 net.cpp:124] Setting up ip2
I0428 20:23:04.904631  2173 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:04.904634  2173 net.cpp:139] Memory required for data: 11493120
I0428 20:23:04.904639  2173 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:04.904646  2173 net.cpp:86] Creating Layer relu2
I0428 20:23:04.904649  2173 net.cpp:408] relu2 <- ip2
I0428 20:23:04.904654  2173 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:04.905436  2173 net.cpp:124] Setting up relu2
I0428 20:23:04.905449  2173 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:04.905468  2173 net.cpp:139] Memory required for data: 11495680
I0428 20:23:04.905472  2173 layer_factory.hpp:77] Creating layer loss
I0428 20:23:04.905479  2173 net.cpp:86] Creating Layer loss
I0428 20:23:04.905483  2173 net.cpp:408] loss <- ip2
I0428 20:23:04.905488  2173 net.cpp:408] loss <- label
I0428 20:23:04.905493  2173 net.cpp:382] loss -> loss
I0428 20:23:04.905508  2173 layer_factory.hpp:77] Creating layer loss
I0428 20:23:04.905766  2173 net.cpp:124] Setting up loss
I0428 20:23:04.905777  2173 net.cpp:131] Top shape: (1)
I0428 20:23:04.905781  2173 net.cpp:134]     with loss weight 1
I0428 20:23:04.905794  2173 net.cpp:139] Memory required for data: 11495684
I0428 20:23:04.905797  2173 net.cpp:200] loss needs backward computation.
I0428 20:23:04.905802  2173 net.cpp:200] relu2 needs backward computation.
I0428 20:23:04.905804  2173 net.cpp:200] ip2 needs backward computation.
I0428 20:23:04.905807  2173 net.cpp:200] relu1 needs backward computation.
I0428 20:23:04.905810  2173 net.cpp:200] ip1 needs backward computation.
I0428 20:23:04.905823  2173 net.cpp:200] pool1 needs backward computation.
I0428 20:23:04.905827  2173 net.cpp:200] conv1 needs backward computation.
I0428 20:23:04.905829  2173 net.cpp:200] pool0 needs backward computation.
I0428 20:23:04.905833  2173 net.cpp:200] conv0 needs backward computation.
I0428 20:23:04.905835  2173 net.cpp:202] mnist does not need backward computation.
I0428 20:23:04.905838  2173 net.cpp:244] This network produces output loss
I0428 20:23:04.905846  2173 net.cpp:257] Network initialization done.
I0428 20:23:04.906173  2173 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1415.prototxt
I0428 20:23:04.906229  2173 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:04.906314  2173 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:23:04.906402  2173 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:04.906445  2173 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:04.906458  2173 net.cpp:86] Creating Layer mnist
I0428 20:23:04.906463  2173 net.cpp:382] mnist -> data
I0428 20:23:04.906471  2173 net.cpp:382] mnist -> label
I0428 20:23:04.906550  2173 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:04.907676  2173 net.cpp:124] Setting up mnist
I0428 20:23:04.907719  2173 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:04.907724  2173 net.cpp:131] Top shape: 100 (100)
I0428 20:23:04.907743  2173 net.cpp:139] Memory required for data: 314000
I0428 20:23:04.907747  2173 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:04.907753  2173 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:04.907757  2173 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:04.907778  2173 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:04.907799  2173 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:04.907891  2173 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:04.907901  2173 net.cpp:131] Top shape: 100 (100)
I0428 20:23:04.907904  2173 net.cpp:131] Top shape: 100 (100)
I0428 20:23:04.907907  2173 net.cpp:139] Memory required for data: 314800
I0428 20:23:04.907910  2173 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:04.907920  2173 net.cpp:86] Creating Layer conv0
I0428 20:23:04.907923  2173 net.cpp:408] conv0 <- data
I0428 20:23:04.907929  2173 net.cpp:382] conv0 -> conv0
I0428 20:23:04.909742  2173 net.cpp:124] Setting up conv0
I0428 20:23:04.909771  2173 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:04.909775  2173 net.cpp:139] Memory required for data: 11834800
I0428 20:23:04.909785  2173 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:04.909791  2173 net.cpp:86] Creating Layer pool0
I0428 20:23:04.909795  2173 net.cpp:408] pool0 <- conv0
I0428 20:23:04.909799  2173 net.cpp:382] pool0 -> pool0
I0428 20:23:04.909849  2173 net.cpp:124] Setting up pool0
I0428 20:23:04.909854  2173 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:04.909857  2173 net.cpp:139] Memory required for data: 14714800
I0428 20:23:04.909860  2173 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:04.909868  2173 net.cpp:86] Creating Layer conv1
I0428 20:23:04.909871  2173 net.cpp:408] conv1 <- pool0
I0428 20:23:04.909876  2173 net.cpp:382] conv1 -> conv1
I0428 20:23:04.912863  2173 net.cpp:124] Setting up conv1
I0428 20:23:04.912891  2173 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:04.912896  2173 net.cpp:139] Memory required for data: 17274800
I0428 20:23:04.912904  2173 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:04.912910  2173 net.cpp:86] Creating Layer pool1
I0428 20:23:04.912915  2173 net.cpp:408] pool1 <- conv1
I0428 20:23:04.912920  2173 net.cpp:382] pool1 -> pool1
I0428 20:23:04.912971  2173 net.cpp:124] Setting up pool1
I0428 20:23:04.912977  2173 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:04.912981  2173 net.cpp:139] Memory required for data: 17914800
I0428 20:23:04.912983  2173 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:04.912989  2173 net.cpp:86] Creating Layer ip1
I0428 20:23:04.912993  2173 net.cpp:408] ip1 <- pool1
I0428 20:23:04.912998  2173 net.cpp:382] ip1 -> ip1
I0428 20:23:04.913549  2173 net.cpp:124] Setting up ip1
I0428 20:23:04.913556  2173 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:04.913575  2173 net.cpp:139] Memory required for data: 17934800
I0428 20:23:04.913583  2173 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:04.913588  2173 net.cpp:86] Creating Layer relu1
I0428 20:23:04.913592  2173 net.cpp:408] relu1 <- ip1
I0428 20:23:04.913596  2173 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:04.913755  2173 net.cpp:124] Setting up relu1
I0428 20:23:04.913764  2173 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:23:04.913767  2173 net.cpp:139] Memory required for data: 17954800
I0428 20:23:04.913770  2173 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:04.913777  2173 net.cpp:86] Creating Layer ip2
I0428 20:23:04.913780  2173 net.cpp:408] ip2 <- ip1
I0428 20:23:04.913785  2173 net.cpp:382] ip2 -> ip2
I0428 20:23:04.913893  2173 net.cpp:124] Setting up ip2
I0428 20:23:04.913900  2173 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:04.913903  2173 net.cpp:139] Memory required for data: 17958800
I0428 20:23:04.913909  2173 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:04.913914  2173 net.cpp:86] Creating Layer relu2
I0428 20:23:04.913918  2173 net.cpp:408] relu2 <- ip2
I0428 20:23:04.913921  2173 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:04.914142  2173 net.cpp:124] Setting up relu2
I0428 20:23:04.914152  2173 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:04.914156  2173 net.cpp:139] Memory required for data: 17962800
I0428 20:23:04.914160  2173 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:23:04.914165  2173 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:23:04.914168  2173 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:23:04.914173  2173 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:23:04.914191  2173 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:23:04.914227  2173 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:23:04.914233  2173 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:04.914253  2173 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:04.914257  2173 net.cpp:139] Memory required for data: 17970800
I0428 20:23:04.914264  2173 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:04.914270  2173 net.cpp:86] Creating Layer accuracy
I0428 20:23:04.914273  2173 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:23:04.914283  2173 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:04.914288  2173 net.cpp:382] accuracy -> accuracy
I0428 20:23:04.914309  2173 net.cpp:124] Setting up accuracy
I0428 20:23:04.914314  2173 net.cpp:131] Top shape: (1)
I0428 20:23:04.914316  2173 net.cpp:139] Memory required for data: 17970804
I0428 20:23:04.914319  2173 layer_factory.hpp:77] Creating layer loss
I0428 20:23:04.914324  2173 net.cpp:86] Creating Layer loss
I0428 20:23:04.914327  2173 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:23:04.914331  2173 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:04.914335  2173 net.cpp:382] loss -> loss
I0428 20:23:04.914340  2173 layer_factory.hpp:77] Creating layer loss
I0428 20:23:04.914556  2173 net.cpp:124] Setting up loss
I0428 20:23:04.914566  2173 net.cpp:131] Top shape: (1)
I0428 20:23:04.914569  2173 net.cpp:134]     with loss weight 1
I0428 20:23:04.914575  2173 net.cpp:139] Memory required for data: 17970808
I0428 20:23:04.914579  2173 net.cpp:200] loss needs backward computation.
I0428 20:23:04.914583  2173 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:04.914587  2173 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:23:04.914590  2173 net.cpp:200] relu2 needs backward computation.
I0428 20:23:04.914593  2173 net.cpp:200] ip2 needs backward computation.
I0428 20:23:04.914597  2173 net.cpp:200] relu1 needs backward computation.
I0428 20:23:04.914599  2173 net.cpp:200] ip1 needs backward computation.
I0428 20:23:04.914602  2173 net.cpp:200] pool1 needs backward computation.
I0428 20:23:04.914607  2173 net.cpp:200] conv1 needs backward computation.
I0428 20:23:04.914609  2173 net.cpp:200] pool0 needs backward computation.
I0428 20:23:04.914613  2173 net.cpp:200] conv0 needs backward computation.
I0428 20:23:04.914615  2173 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:04.914626  2173 net.cpp:202] mnist does not need backward computation.
I0428 20:23:04.914629  2173 net.cpp:244] This network produces output accuracy
I0428 20:23:04.914633  2173 net.cpp:244] This network produces output loss
I0428 20:23:04.914645  2173 net.cpp:257] Network initialization done.
I0428 20:23:04.914687  2173 solver.cpp:56] Solver scaffolding done.
I0428 20:23:04.914985  2173 caffe.cpp:248] Starting Optimization
I0428 20:23:04.914991  2173 solver.cpp:273] Solving LeNet
I0428 20:23:04.914994  2173 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:04.915886  2173 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:04.925098  2173 blocking_queue.cpp:49] Waiting for data
I0428 20:23:05.006795  2180 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:05.008091  2173 solver.cpp:398]     Test net output #0: accuracy = 0.0886
I0428 20:23:05.008127  2173 solver.cpp:398]     Test net output #1: loss = 2.3091 (* 1 = 2.3091 loss)
I0428 20:23:05.015627  2173 solver.cpp:219] Iteration 0 (0 iter/s, 0.100578s/100 iters), loss = 2.30259
I0428 20:23:05.015668  2173 solver.cpp:238]     Train net output #0: loss = 2.30259 (* 1 = 2.30259 loss)
I0428 20:23:05.015681  2173 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:05.233199  2173 solver.cpp:219] Iteration 100 (459.76 iter/s, 0.217505s/100 iters), loss = 1.05948
I0428 20:23:05.233238  2173 solver.cpp:238]     Train net output #0: loss = 1.05948 (* 1 = 1.05948 loss)
I0428 20:23:05.233247  2173 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:05.455238  2173 solver.cpp:219] Iteration 200 (450.482 iter/s, 0.221985s/100 iters), loss = 0.682401
I0428 20:23:05.455281  2173 solver.cpp:238]     Train net output #0: loss = 0.682401 (* 1 = 0.682401 loss)
I0428 20:23:05.455291  2173 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:05.673272  2173 solver.cpp:219] Iteration 300 (458.773 iter/s, 0.217973s/100 iters), loss = 0.75702
I0428 20:23:05.673322  2173 solver.cpp:238]     Train net output #0: loss = 0.75702 (* 1 = 0.75702 loss)
I0428 20:23:05.673334  2173 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:05.905869  2173 solver.cpp:219] Iteration 400 (430.05 iter/s, 0.232531s/100 iters), loss = 0.389042
I0428 20:23:05.905905  2173 solver.cpp:238]     Train net output #0: loss = 0.389042 (* 1 = 0.389042 loss)
I0428 20:23:05.905915  2173 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:06.127811  2173 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:06.216089  2180 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:06.217849  2173 solver.cpp:398]     Test net output #0: accuracy = 0.7819
I0428 20:23:06.217878  2173 solver.cpp:398]     Test net output #1: loss = 0.546293 (* 1 = 0.546293 loss)
I0428 20:23:06.220126  2173 solver.cpp:219] Iteration 500 (318.267 iter/s, 0.314202s/100 iters), loss = 0.483068
I0428 20:23:06.220156  2173 solver.cpp:238]     Train net output #0: loss = 0.483068 (* 1 = 0.483068 loss)
I0428 20:23:06.220165  2173 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:06.443428  2173 solver.cpp:219] Iteration 600 (447.917 iter/s, 0.223256s/100 iters), loss = 0.341835
I0428 20:23:06.443462  2173 solver.cpp:238]     Train net output #0: loss = 0.341835 (* 1 = 0.341835 loss)
I0428 20:23:06.443471  2173 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:06.669023  2173 solver.cpp:219] Iteration 700 (443.378 iter/s, 0.225541s/100 iters), loss = 0.450809
I0428 20:23:06.669066  2173 solver.cpp:238]     Train net output #0: loss = 0.450809 (* 1 = 0.450809 loss)
I0428 20:23:06.669075  2173 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:06.887012  2173 solver.cpp:219] Iteration 800 (458.859 iter/s, 0.217932s/100 iters), loss = 0.403926
I0428 20:23:06.887043  2173 solver.cpp:238]     Train net output #0: loss = 0.403926 (* 1 = 0.403926 loss)
I0428 20:23:06.887050  2173 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:07.114814  2173 solver.cpp:219] Iteration 900 (439.07 iter/s, 0.227754s/100 iters), loss = 0.426762
I0428 20:23:07.114850  2173 solver.cpp:238]     Train net output #0: loss = 0.426762 (* 1 = 0.426762 loss)
I0428 20:23:07.114857  2173 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:07.190443  2179 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:07.331794  2173 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:07.339150  2173 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:07.342355  2173 solver.cpp:311] Iteration 1000, loss = 0.336261
I0428 20:23:07.342381  2173 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:07.432013  2180 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:07.435124  2173 solver.cpp:398]     Test net output #0: accuracy = 0.8829
I0428 20:23:07.435150  2173 solver.cpp:398]     Test net output #1: loss = 0.292813 (* 1 = 0.292813 loss)
I0428 20:23:07.435158  2173 solver.cpp:316] Optimization Done.
I0428 20:23:07.435161  2173 caffe.cpp:259] Optimization Done.
