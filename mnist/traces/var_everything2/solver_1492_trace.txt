I0428 20:27:39.412648  3080 caffe.cpp:218] Using GPUs 0
I0428 20:27:39.449546  3080 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:39.960438  3080 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1492.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:39.960583  3080 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1492.prototxt
I0428 20:27:39.960963  3080 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:39.960979  3080 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:39.961066  3080 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:39.961138  3080 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:39.961238  3080 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:39.961266  3080 net.cpp:86] Creating Layer mnist
I0428 20:27:39.961275  3080 net.cpp:382] mnist -> data
I0428 20:27:39.961298  3080 net.cpp:382] mnist -> label
I0428 20:27:39.962388  3080 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:39.964918  3080 net.cpp:124] Setting up mnist
I0428 20:27:39.964936  3080 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:39.964943  3080 net.cpp:131] Top shape: 64 (64)
I0428 20:27:39.964947  3080 net.cpp:139] Memory required for data: 200960
I0428 20:27:39.964954  3080 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:39.964972  3080 net.cpp:86] Creating Layer conv0
I0428 20:27:39.964977  3080 net.cpp:408] conv0 <- data
I0428 20:27:39.964992  3080 net.cpp:382] conv0 -> conv0
I0428 20:27:40.256970  3080 net.cpp:124] Setting up conv0
I0428 20:27:40.257001  3080 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:40.257006  3080 net.cpp:139] Memory required for data: 14946560
I0428 20:27:40.257048  3080 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:40.257063  3080 net.cpp:86] Creating Layer pool0
I0428 20:27:40.257069  3080 net.cpp:408] pool0 <- conv0
I0428 20:27:40.257076  3080 net.cpp:382] pool0 -> pool0
I0428 20:27:40.257140  3080 net.cpp:124] Setting up pool0
I0428 20:27:40.257148  3080 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:40.257151  3080 net.cpp:139] Memory required for data: 18632960
I0428 20:27:40.257155  3080 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:40.257169  3080 net.cpp:86] Creating Layer conv1
I0428 20:27:40.257172  3080 net.cpp:408] conv1 <- pool0
I0428 20:27:40.257177  3080 net.cpp:382] conv1 -> conv1
I0428 20:27:40.260476  3080 net.cpp:124] Setting up conv1
I0428 20:27:40.260495  3080 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:40.260500  3080 net.cpp:139] Memory required for data: 18714880
I0428 20:27:40.260511  3080 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:40.260521  3080 net.cpp:86] Creating Layer pool1
I0428 20:27:40.260526  3080 net.cpp:408] pool1 <- conv1
I0428 20:27:40.260532  3080 net.cpp:382] pool1 -> pool1
I0428 20:27:40.260577  3080 net.cpp:124] Setting up pool1
I0428 20:27:40.260584  3080 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:40.260588  3080 net.cpp:139] Memory required for data: 18735360
I0428 20:27:40.260592  3080 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:40.260601  3080 net.cpp:86] Creating Layer ip1
I0428 20:27:40.260604  3080 net.cpp:408] ip1 <- pool1
I0428 20:27:40.260609  3080 net.cpp:382] ip1 -> ip1
I0428 20:27:40.260758  3080 net.cpp:124] Setting up ip1
I0428 20:27:40.260768  3080 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:27:40.260772  3080 net.cpp:139] Memory required for data: 18748160
I0428 20:27:40.260781  3080 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:40.260787  3080 net.cpp:86] Creating Layer relu1
I0428 20:27:40.260792  3080 net.cpp:408] relu1 <- ip1
I0428 20:27:40.260797  3080 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:40.261011  3080 net.cpp:124] Setting up relu1
I0428 20:27:40.261023  3080 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:27:40.261028  3080 net.cpp:139] Memory required for data: 18760960
I0428 20:27:40.261032  3080 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:40.261040  3080 net.cpp:86] Creating Layer ip2
I0428 20:27:40.261044  3080 net.cpp:408] ip2 <- ip1
I0428 20:27:40.261049  3080 net.cpp:382] ip2 -> ip2
I0428 20:27:40.261168  3080 net.cpp:124] Setting up ip2
I0428 20:27:40.261176  3080 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:40.261180  3080 net.cpp:139] Memory required for data: 18763520
I0428 20:27:40.261186  3080 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:40.261194  3080 net.cpp:86] Creating Layer relu2
I0428 20:27:40.261198  3080 net.cpp:408] relu2 <- ip2
I0428 20:27:40.261204  3080 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:40.262063  3080 net.cpp:124] Setting up relu2
I0428 20:27:40.262079  3080 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:40.262084  3080 net.cpp:139] Memory required for data: 18766080
I0428 20:27:40.262089  3080 layer_factory.hpp:77] Creating layer loss
I0428 20:27:40.262101  3080 net.cpp:86] Creating Layer loss
I0428 20:27:40.262107  3080 net.cpp:408] loss <- ip2
I0428 20:27:40.262117  3080 net.cpp:408] loss <- label
I0428 20:27:40.262127  3080 net.cpp:382] loss -> loss
I0428 20:27:40.262159  3080 layer_factory.hpp:77] Creating layer loss
I0428 20:27:40.262454  3080 net.cpp:124] Setting up loss
I0428 20:27:40.262467  3080 net.cpp:131] Top shape: (1)
I0428 20:27:40.262471  3080 net.cpp:134]     with loss weight 1
I0428 20:27:40.262487  3080 net.cpp:139] Memory required for data: 18766084
I0428 20:27:40.262491  3080 net.cpp:200] loss needs backward computation.
I0428 20:27:40.262495  3080 net.cpp:200] relu2 needs backward computation.
I0428 20:27:40.262500  3080 net.cpp:200] ip2 needs backward computation.
I0428 20:27:40.262503  3080 net.cpp:200] relu1 needs backward computation.
I0428 20:27:40.262506  3080 net.cpp:200] ip1 needs backward computation.
I0428 20:27:40.262523  3080 net.cpp:200] pool1 needs backward computation.
I0428 20:27:40.262527  3080 net.cpp:200] conv1 needs backward computation.
I0428 20:27:40.262531  3080 net.cpp:200] pool0 needs backward computation.
I0428 20:27:40.262536  3080 net.cpp:200] conv0 needs backward computation.
I0428 20:27:40.262539  3080 net.cpp:202] mnist does not need backward computation.
I0428 20:27:40.262543  3080 net.cpp:244] This network produces output loss
I0428 20:27:40.262553  3080 net.cpp:257] Network initialization done.
I0428 20:27:40.262898  3080 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1492.prototxt
I0428 20:27:40.262945  3080 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:40.263067  3080 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:40.263147  3080 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:40.263197  3080 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:40.263216  3080 net.cpp:86] Creating Layer mnist
I0428 20:27:40.263222  3080 net.cpp:382] mnist -> data
I0428 20:27:40.263232  3080 net.cpp:382] mnist -> label
I0428 20:27:40.263332  3080 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:40.265611  3080 net.cpp:124] Setting up mnist
I0428 20:27:40.265628  3080 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:40.265635  3080 net.cpp:131] Top shape: 100 (100)
I0428 20:27:40.265638  3080 net.cpp:139] Memory required for data: 314000
I0428 20:27:40.265642  3080 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:40.265650  3080 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:40.265656  3080 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:40.265662  3080 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:40.265683  3080 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:40.265764  3080 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:40.265777  3080 net.cpp:131] Top shape: 100 (100)
I0428 20:27:40.265785  3080 net.cpp:131] Top shape: 100 (100)
I0428 20:27:40.265791  3080 net.cpp:139] Memory required for data: 314800
I0428 20:27:40.265797  3080 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:40.265817  3080 net.cpp:86] Creating Layer conv0
I0428 20:27:40.265825  3080 net.cpp:408] conv0 <- data
I0428 20:27:40.265833  3080 net.cpp:382] conv0 -> conv0
I0428 20:27:40.267786  3080 net.cpp:124] Setting up conv0
I0428 20:27:40.267803  3080 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:40.267807  3080 net.cpp:139] Memory required for data: 23354800
I0428 20:27:40.267820  3080 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:40.267828  3080 net.cpp:86] Creating Layer pool0
I0428 20:27:40.267832  3080 net.cpp:408] pool0 <- conv0
I0428 20:27:40.267839  3080 net.cpp:382] pool0 -> pool0
I0428 20:27:40.267884  3080 net.cpp:124] Setting up pool0
I0428 20:27:40.267894  3080 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:40.267896  3080 net.cpp:139] Memory required for data: 29114800
I0428 20:27:40.267900  3080 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:40.267911  3080 net.cpp:86] Creating Layer conv1
I0428 20:27:40.267916  3080 net.cpp:408] conv1 <- pool0
I0428 20:27:40.267925  3080 net.cpp:382] conv1 -> conv1
I0428 20:27:40.269937  3080 net.cpp:124] Setting up conv1
I0428 20:27:40.269955  3080 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:40.269966  3080 net.cpp:139] Memory required for data: 29242800
I0428 20:27:40.269980  3080 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:40.269992  3080 net.cpp:86] Creating Layer pool1
I0428 20:27:40.269997  3080 net.cpp:408] pool1 <- conv1
I0428 20:27:40.270006  3080 net.cpp:382] pool1 -> pool1
I0428 20:27:40.270054  3080 net.cpp:124] Setting up pool1
I0428 20:27:40.270071  3080 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:40.270073  3080 net.cpp:139] Memory required for data: 29274800
I0428 20:27:40.270077  3080 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:40.270087  3080 net.cpp:86] Creating Layer ip1
I0428 20:27:40.270090  3080 net.cpp:408] ip1 <- pool1
I0428 20:27:40.270097  3080 net.cpp:382] ip1 -> ip1
I0428 20:27:40.270254  3080 net.cpp:124] Setting up ip1
I0428 20:27:40.270264  3080 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:27:40.270268  3080 net.cpp:139] Memory required for data: 29294800
I0428 20:27:40.270277  3080 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:40.270283  3080 net.cpp:86] Creating Layer relu1
I0428 20:27:40.270288  3080 net.cpp:408] relu1 <- ip1
I0428 20:27:40.270294  3080 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:40.270498  3080 net.cpp:124] Setting up relu1
I0428 20:27:40.270509  3080 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:27:40.270514  3080 net.cpp:139] Memory required for data: 29314800
I0428 20:27:40.270517  3080 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:40.270535  3080 net.cpp:86] Creating Layer ip2
I0428 20:27:40.270545  3080 net.cpp:408] ip2 <- ip1
I0428 20:27:40.270551  3080 net.cpp:382] ip2 -> ip2
I0428 20:27:40.270683  3080 net.cpp:124] Setting up ip2
I0428 20:27:40.270691  3080 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:40.270695  3080 net.cpp:139] Memory required for data: 29318800
I0428 20:27:40.270704  3080 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:40.270714  3080 net.cpp:86] Creating Layer relu2
I0428 20:27:40.270720  3080 net.cpp:408] relu2 <- ip2
I0428 20:27:40.270723  3080 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:40.271034  3080 net.cpp:124] Setting up relu2
I0428 20:27:40.271046  3080 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:40.271050  3080 net.cpp:139] Memory required for data: 29322800
I0428 20:27:40.271054  3080 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:27:40.271062  3080 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:27:40.271066  3080 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:27:40.271072  3080 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:27:40.271091  3080 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:27:40.271139  3080 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:27:40.271147  3080 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:40.271152  3080 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:40.271154  3080 net.cpp:139] Memory required for data: 29330800
I0428 20:27:40.271158  3080 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:40.271164  3080 net.cpp:86] Creating Layer accuracy
I0428 20:27:40.271168  3080 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:27:40.271173  3080 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:40.271179  3080 net.cpp:382] accuracy -> accuracy
I0428 20:27:40.271198  3080 net.cpp:124] Setting up accuracy
I0428 20:27:40.271203  3080 net.cpp:131] Top shape: (1)
I0428 20:27:40.271208  3080 net.cpp:139] Memory required for data: 29330804
I0428 20:27:40.271210  3080 layer_factory.hpp:77] Creating layer loss
I0428 20:27:40.271222  3080 net.cpp:86] Creating Layer loss
I0428 20:27:40.271226  3080 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:27:40.271230  3080 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:40.271237  3080 net.cpp:382] loss -> loss
I0428 20:27:40.271245  3080 layer_factory.hpp:77] Creating layer loss
I0428 20:27:40.271545  3080 net.cpp:124] Setting up loss
I0428 20:27:40.271556  3080 net.cpp:131] Top shape: (1)
I0428 20:27:40.271560  3080 net.cpp:134]     with loss weight 1
I0428 20:27:40.271569  3080 net.cpp:139] Memory required for data: 29330808
I0428 20:27:40.271572  3080 net.cpp:200] loss needs backward computation.
I0428 20:27:40.271579  3080 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:40.271584  3080 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:27:40.271587  3080 net.cpp:200] relu2 needs backward computation.
I0428 20:27:40.271590  3080 net.cpp:200] ip2 needs backward computation.
I0428 20:27:40.271602  3080 net.cpp:200] relu1 needs backward computation.
I0428 20:27:40.271606  3080 net.cpp:200] ip1 needs backward computation.
I0428 20:27:40.271610  3080 net.cpp:200] pool1 needs backward computation.
I0428 20:27:40.271613  3080 net.cpp:200] conv1 needs backward computation.
I0428 20:27:40.271618  3080 net.cpp:200] pool0 needs backward computation.
I0428 20:27:40.271621  3080 net.cpp:200] conv0 needs backward computation.
I0428 20:27:40.271626  3080 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:40.271631  3080 net.cpp:202] mnist does not need backward computation.
I0428 20:27:40.271633  3080 net.cpp:244] This network produces output accuracy
I0428 20:27:40.271639  3080 net.cpp:244] This network produces output loss
I0428 20:27:40.271657  3080 net.cpp:257] Network initialization done.
I0428 20:27:40.271703  3080 solver.cpp:56] Solver scaffolding done.
I0428 20:27:40.272027  3080 caffe.cpp:248] Starting Optimization
I0428 20:27:40.272035  3080 solver.cpp:273] Solving LeNet
I0428 20:27:40.272039  3080 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:40.272974  3080 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:40.366147  3087 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:40.368465  3080 solver.cpp:398]     Test net output #0: accuracy = 0.0769
I0428 20:27:40.368485  3080 solver.cpp:398]     Test net output #1: loss = 2.31632 (* 1 = 2.31632 loss)
I0428 20:27:40.372740  3080 solver.cpp:219] Iteration 0 (2.2613 iter/s, 0.100671s/100 iters), loss = 2.30774
I0428 20:27:40.372763  3080 solver.cpp:238]     Train net output #0: loss = 2.30774 (* 1 = 2.30774 loss)
I0428 20:27:40.372776  3080 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:40.569393  3080 solver.cpp:219] Iteration 100 (508.64 iter/s, 0.196603s/100 iters), loss = 0.447846
I0428 20:27:40.569443  3080 solver.cpp:238]     Train net output #0: loss = 0.447846 (* 1 = 0.447846 loss)
I0428 20:27:40.569454  3080 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:40.780061  3080 solver.cpp:219] Iteration 200 (474.834 iter/s, 0.2106s/100 iters), loss = 0.3639
I0428 20:27:40.780133  3080 solver.cpp:238]     Train net output #0: loss = 0.3639 (* 1 = 0.3639 loss)
I0428 20:27:40.780148  3080 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:40.991024  3080 solver.cpp:219] Iteration 300 (474.214 iter/s, 0.210875s/100 iters), loss = 0.190998
I0428 20:27:40.991071  3080 solver.cpp:238]     Train net output #0: loss = 0.190998 (* 1 = 0.190998 loss)
I0428 20:27:40.991084  3080 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:41.198544  3080 solver.cpp:219] Iteration 400 (482.032 iter/s, 0.207455s/100 iters), loss = 0.101646
I0428 20:27:41.198593  3080 solver.cpp:238]     Train net output #0: loss = 0.101645 (* 1 = 0.101645 loss)
I0428 20:27:41.198606  3080 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:41.407713  3080 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:41.509351  3087 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:41.511539  3080 solver.cpp:398]     Test net output #0: accuracy = 0.96
I0428 20:27:41.511566  3080 solver.cpp:398]     Test net output #1: loss = 0.127066 (* 1 = 0.127066 loss)
I0428 20:27:41.513464  3080 solver.cpp:219] Iteration 500 (317.608 iter/s, 0.314853s/100 iters), loss = 0.170259
I0428 20:27:41.513495  3080 solver.cpp:238]     Train net output #0: loss = 0.170259 (* 1 = 0.170259 loss)
I0428 20:27:41.513504  3080 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:41.713630  3080 solver.cpp:219] Iteration 600 (499.702 iter/s, 0.200119s/100 iters), loss = 0.1779
I0428 20:27:41.713667  3080 solver.cpp:238]     Train net output #0: loss = 0.1779 (* 1 = 0.1779 loss)
I0428 20:27:41.713675  3080 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:41.914775  3080 solver.cpp:219] Iteration 700 (497.29 iter/s, 0.20109s/100 iters), loss = 0.142001
I0428 20:27:41.914815  3080 solver.cpp:238]     Train net output #0: loss = 0.142001 (* 1 = 0.142001 loss)
I0428 20:27:41.914825  3080 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:42.117524  3080 solver.cpp:219] Iteration 800 (493.358 iter/s, 0.202693s/100 iters), loss = 0.382574
I0428 20:27:42.117563  3080 solver.cpp:238]     Train net output #0: loss = 0.382574 (* 1 = 0.382574 loss)
I0428 20:27:42.117573  3080 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:42.326573  3080 solver.cpp:219] Iteration 900 (478.491 iter/s, 0.20899s/100 iters), loss = 0.173613
I0428 20:27:42.326619  3080 solver.cpp:238]     Train net output #0: loss = 0.173613 (* 1 = 0.173613 loss)
I0428 20:27:42.326632  3080 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:42.395622  3086 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:42.539741  3080 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:42.541827  3080 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:42.543203  3080 solver.cpp:311] Iteration 1000, loss = 0.177604
I0428 20:27:42.543236  3080 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:42.644093  3087 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:42.646780  3080 solver.cpp:398]     Test net output #0: accuracy = 0.9724
I0428 20:27:42.646807  3080 solver.cpp:398]     Test net output #1: loss = 0.0901979 (* 1 = 0.0901979 loss)
I0428 20:27:42.646813  3080 solver.cpp:316] Optimization Done.
I0428 20:27:42.646818  3080 caffe.cpp:259] Optimization Done.
