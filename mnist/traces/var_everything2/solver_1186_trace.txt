I0428 20:12:45.084908 32343 caffe.cpp:218] Using GPUs 0
I0428 20:12:45.114589 32343 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:12:45.625672 32343 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1186.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:12:45.625813 32343 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1186.prototxt
I0428 20:12:45.626231 32343 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:12:45.626251 32343 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:12:45.626353 32343 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:45.626433 32343 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:45.626534 32343 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:12:45.626559 32343 net.cpp:86] Creating Layer mnist
I0428 20:12:45.626570 32343 net.cpp:382] mnist -> data
I0428 20:12:45.626596 32343 net.cpp:382] mnist -> label
I0428 20:12:45.627694 32343 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:12:45.630143 32343 net.cpp:124] Setting up mnist
I0428 20:12:45.630162 32343 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:12:45.630167 32343 net.cpp:131] Top shape: 64 (64)
I0428 20:12:45.630172 32343 net.cpp:139] Memory required for data: 200960
I0428 20:12:45.630178 32343 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:45.630219 32343 net.cpp:86] Creating Layer conv0
I0428 20:12:45.630254 32343 net.cpp:408] conv0 <- data
I0428 20:12:45.630267 32343 net.cpp:382] conv0 -> conv0
I0428 20:12:45.920466 32343 net.cpp:124] Setting up conv0
I0428 20:12:45.920498 32343 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:12:45.920503 32343 net.cpp:139] Memory required for data: 3887360
I0428 20:12:45.920521 32343 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:45.920536 32343 net.cpp:86] Creating Layer pool0
I0428 20:12:45.920542 32343 net.cpp:408] pool0 <- conv0
I0428 20:12:45.920548 32343 net.cpp:382] pool0 -> pool0
I0428 20:12:45.920605 32343 net.cpp:124] Setting up pool0
I0428 20:12:45.920614 32343 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:12:45.920617 32343 net.cpp:139] Memory required for data: 4808960
I0428 20:12:45.920621 32343 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:45.920634 32343 net.cpp:86] Creating Layer conv1
I0428 20:12:45.920639 32343 net.cpp:408] conv1 <- pool0
I0428 20:12:45.920644 32343 net.cpp:382] conv1 -> conv1
I0428 20:12:45.923202 32343 net.cpp:124] Setting up conv1
I0428 20:12:45.923220 32343 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:12:45.923224 32343 net.cpp:139] Memory required for data: 6447360
I0428 20:12:45.923235 32343 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:45.923244 32343 net.cpp:86] Creating Layer pool1
I0428 20:12:45.923249 32343 net.cpp:408] pool1 <- conv1
I0428 20:12:45.923254 32343 net.cpp:382] pool1 -> pool1
I0428 20:12:45.923297 32343 net.cpp:124] Setting up pool1
I0428 20:12:45.923310 32343 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:12:45.923313 32343 net.cpp:139] Memory required for data: 6856960
I0428 20:12:45.923317 32343 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:45.923331 32343 net.cpp:86] Creating Layer ip1
I0428 20:12:45.923334 32343 net.cpp:408] ip1 <- pool1
I0428 20:12:45.923339 32343 net.cpp:382] ip1 -> ip1
I0428 20:12:45.924541 32343 net.cpp:124] Setting up ip1
I0428 20:12:45.924557 32343 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:45.924561 32343 net.cpp:139] Memory required for data: 6859520
I0428 20:12:45.924571 32343 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:45.924579 32343 net.cpp:86] Creating Layer relu1
I0428 20:12:45.924583 32343 net.cpp:408] relu1 <- ip1
I0428 20:12:45.924589 32343 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:45.924794 32343 net.cpp:124] Setting up relu1
I0428 20:12:45.924805 32343 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:45.924815 32343 net.cpp:139] Memory required for data: 6862080
I0428 20:12:45.924820 32343 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:45.924829 32343 net.cpp:86] Creating Layer ip2
I0428 20:12:45.924832 32343 net.cpp:408] ip2 <- ip1
I0428 20:12:45.924839 32343 net.cpp:382] ip2 -> ip2
I0428 20:12:45.924950 32343 net.cpp:124] Setting up ip2
I0428 20:12:45.924958 32343 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:12:45.924962 32343 net.cpp:139] Memory required for data: 6868480
I0428 20:12:45.924969 32343 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:45.924976 32343 net.cpp:86] Creating Layer relu2
I0428 20:12:45.924979 32343 net.cpp:408] relu2 <- ip2
I0428 20:12:45.924984 32343 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:45.925837 32343 net.cpp:124] Setting up relu2
I0428 20:12:45.925853 32343 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:12:45.925856 32343 net.cpp:139] Memory required for data: 6874880
I0428 20:12:45.925860 32343 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:45.925869 32343 net.cpp:86] Creating Layer ip3
I0428 20:12:45.925873 32343 net.cpp:408] ip3 <- ip2
I0428 20:12:45.925879 32343 net.cpp:382] ip3 -> ip3
I0428 20:12:45.925992 32343 net.cpp:124] Setting up ip3
I0428 20:12:45.926002 32343 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:45.926004 32343 net.cpp:139] Memory required for data: 6877440
I0428 20:12:45.926014 32343 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:45.926020 32343 net.cpp:86] Creating Layer relu3
I0428 20:12:45.926023 32343 net.cpp:408] relu3 <- ip3
I0428 20:12:45.926028 32343 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:45.926223 32343 net.cpp:124] Setting up relu3
I0428 20:12:45.926234 32343 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:45.926237 32343 net.cpp:139] Memory required for data: 6880000
I0428 20:12:45.926241 32343 layer_factory.hpp:77] Creating layer loss
I0428 20:12:45.926247 32343 net.cpp:86] Creating Layer loss
I0428 20:12:45.926251 32343 net.cpp:408] loss <- ip3
I0428 20:12:45.926256 32343 net.cpp:408] loss <- label
I0428 20:12:45.926262 32343 net.cpp:382] loss -> loss
I0428 20:12:45.926282 32343 layer_factory.hpp:77] Creating layer loss
I0428 20:12:45.926548 32343 net.cpp:124] Setting up loss
I0428 20:12:45.926558 32343 net.cpp:131] Top shape: (1)
I0428 20:12:45.926563 32343 net.cpp:134]     with loss weight 1
I0428 20:12:45.926578 32343 net.cpp:139] Memory required for data: 6880004
I0428 20:12:45.926581 32343 net.cpp:200] loss needs backward computation.
I0428 20:12:45.926585 32343 net.cpp:200] relu3 needs backward computation.
I0428 20:12:45.926589 32343 net.cpp:200] ip3 needs backward computation.
I0428 20:12:45.926594 32343 net.cpp:200] relu2 needs backward computation.
I0428 20:12:45.926596 32343 net.cpp:200] ip2 needs backward computation.
I0428 20:12:45.926600 32343 net.cpp:200] relu1 needs backward computation.
I0428 20:12:45.926604 32343 net.cpp:200] ip1 needs backward computation.
I0428 20:12:45.926607 32343 net.cpp:200] pool1 needs backward computation.
I0428 20:12:45.926611 32343 net.cpp:200] conv1 needs backward computation.
I0428 20:12:45.926615 32343 net.cpp:200] pool0 needs backward computation.
I0428 20:12:45.926618 32343 net.cpp:200] conv0 needs backward computation.
I0428 20:12:45.926622 32343 net.cpp:202] mnist does not need backward computation.
I0428 20:12:45.926626 32343 net.cpp:244] This network produces output loss
I0428 20:12:45.926637 32343 net.cpp:257] Network initialization done.
I0428 20:12:45.927016 32343 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1186.prototxt
I0428 20:12:45.927047 32343 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:12:45.927155 32343 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:45.927248 32343 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:45.927300 32343 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:12:45.927314 32343 net.cpp:86] Creating Layer mnist
I0428 20:12:45.927320 32343 net.cpp:382] mnist -> data
I0428 20:12:45.927330 32343 net.cpp:382] mnist -> label
I0428 20:12:45.927429 32343 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:12:45.929826 32343 net.cpp:124] Setting up mnist
I0428 20:12:45.929843 32343 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:12:45.929849 32343 net.cpp:131] Top shape: 100 (100)
I0428 20:12:45.929853 32343 net.cpp:139] Memory required for data: 314000
I0428 20:12:45.929857 32343 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:12:45.929883 32343 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:12:45.929888 32343 net.cpp:408] label_mnist_1_split <- label
I0428 20:12:45.929893 32343 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:12:45.929901 32343 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:12:45.929953 32343 net.cpp:124] Setting up label_mnist_1_split
I0428 20:12:45.929961 32343 net.cpp:131] Top shape: 100 (100)
I0428 20:12:45.929966 32343 net.cpp:131] Top shape: 100 (100)
I0428 20:12:45.929970 32343 net.cpp:139] Memory required for data: 314800
I0428 20:12:45.929973 32343 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:45.929983 32343 net.cpp:86] Creating Layer conv0
I0428 20:12:45.929987 32343 net.cpp:408] conv0 <- data
I0428 20:12:45.929992 32343 net.cpp:382] conv0 -> conv0
I0428 20:12:45.931879 32343 net.cpp:124] Setting up conv0
I0428 20:12:45.931895 32343 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:12:45.931900 32343 net.cpp:139] Memory required for data: 6074800
I0428 20:12:45.931911 32343 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:45.931920 32343 net.cpp:86] Creating Layer pool0
I0428 20:12:45.931923 32343 net.cpp:408] pool0 <- conv0
I0428 20:12:45.931929 32343 net.cpp:382] pool0 -> pool0
I0428 20:12:45.931972 32343 net.cpp:124] Setting up pool0
I0428 20:12:45.931978 32343 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:12:45.931982 32343 net.cpp:139] Memory required for data: 7514800
I0428 20:12:45.931985 32343 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:45.931995 32343 net.cpp:86] Creating Layer conv1
I0428 20:12:45.931998 32343 net.cpp:408] conv1 <- pool0
I0428 20:12:45.932004 32343 net.cpp:382] conv1 -> conv1
I0428 20:12:45.934130 32343 net.cpp:124] Setting up conv1
I0428 20:12:45.934146 32343 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:12:45.934150 32343 net.cpp:139] Memory required for data: 10074800
I0428 20:12:45.934161 32343 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:45.934168 32343 net.cpp:86] Creating Layer pool1
I0428 20:12:45.934173 32343 net.cpp:408] pool1 <- conv1
I0428 20:12:45.934180 32343 net.cpp:382] pool1 -> pool1
I0428 20:12:45.934222 32343 net.cpp:124] Setting up pool1
I0428 20:12:45.934228 32343 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:12:45.934231 32343 net.cpp:139] Memory required for data: 10714800
I0428 20:12:45.934236 32343 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:45.934242 32343 net.cpp:86] Creating Layer ip1
I0428 20:12:45.934245 32343 net.cpp:408] ip1 <- pool1
I0428 20:12:45.934252 32343 net.cpp:382] ip1 -> ip1
I0428 20:12:45.934463 32343 net.cpp:124] Setting up ip1
I0428 20:12:45.934473 32343 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:45.934489 32343 net.cpp:139] Memory required for data: 10718800
I0428 20:12:45.934499 32343 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:45.934505 32343 net.cpp:86] Creating Layer relu1
I0428 20:12:45.934509 32343 net.cpp:408] relu1 <- ip1
I0428 20:12:45.934514 32343 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:45.934697 32343 net.cpp:124] Setting up relu1
I0428 20:12:45.934708 32343 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:45.934712 32343 net.cpp:139] Memory required for data: 10722800
I0428 20:12:45.934716 32343 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:45.934725 32343 net.cpp:86] Creating Layer ip2
I0428 20:12:45.934728 32343 net.cpp:408] ip2 <- ip1
I0428 20:12:45.934734 32343 net.cpp:382] ip2 -> ip2
I0428 20:12:45.934852 32343 net.cpp:124] Setting up ip2
I0428 20:12:45.934860 32343 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:12:45.934864 32343 net.cpp:139] Memory required for data: 10732800
I0428 20:12:45.934870 32343 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:45.934875 32343 net.cpp:86] Creating Layer relu2
I0428 20:12:45.934880 32343 net.cpp:408] relu2 <- ip2
I0428 20:12:45.934885 32343 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:45.935153 32343 net.cpp:124] Setting up relu2
I0428 20:12:45.935163 32343 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:12:45.935168 32343 net.cpp:139] Memory required for data: 10742800
I0428 20:12:45.935171 32343 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:45.935178 32343 net.cpp:86] Creating Layer ip3
I0428 20:12:45.935183 32343 net.cpp:408] ip3 <- ip2
I0428 20:12:45.935189 32343 net.cpp:382] ip3 -> ip3
I0428 20:12:45.935299 32343 net.cpp:124] Setting up ip3
I0428 20:12:45.935308 32343 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:45.935312 32343 net.cpp:139] Memory required for data: 10746800
I0428 20:12:45.935322 32343 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:45.935335 32343 net.cpp:86] Creating Layer relu3
I0428 20:12:45.935339 32343 net.cpp:408] relu3 <- ip3
I0428 20:12:45.935344 32343 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:45.936249 32343 net.cpp:124] Setting up relu3
I0428 20:12:45.936262 32343 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:45.936266 32343 net.cpp:139] Memory required for data: 10750800
I0428 20:12:45.936271 32343 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:12:45.936277 32343 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:12:45.936281 32343 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:12:45.936287 32343 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:12:45.936295 32343 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:12:45.936349 32343 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:12:45.936357 32343 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:45.936362 32343 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:45.936367 32343 net.cpp:139] Memory required for data: 10758800
I0428 20:12:45.936370 32343 layer_factory.hpp:77] Creating layer accuracy
I0428 20:12:45.936377 32343 net.cpp:86] Creating Layer accuracy
I0428 20:12:45.936380 32343 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:12:45.936385 32343 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:12:45.936390 32343 net.cpp:382] accuracy -> accuracy
I0428 20:12:45.936398 32343 net.cpp:124] Setting up accuracy
I0428 20:12:45.936403 32343 net.cpp:131] Top shape: (1)
I0428 20:12:45.936408 32343 net.cpp:139] Memory required for data: 10758804
I0428 20:12:45.936411 32343 layer_factory.hpp:77] Creating layer loss
I0428 20:12:45.936416 32343 net.cpp:86] Creating Layer loss
I0428 20:12:45.936421 32343 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:12:45.936426 32343 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:12:45.936430 32343 net.cpp:382] loss -> loss
I0428 20:12:45.936437 32343 layer_factory.hpp:77] Creating layer loss
I0428 20:12:45.936702 32343 net.cpp:124] Setting up loss
I0428 20:12:45.936713 32343 net.cpp:131] Top shape: (1)
I0428 20:12:45.936718 32343 net.cpp:134]     with loss weight 1
I0428 20:12:45.936738 32343 net.cpp:139] Memory required for data: 10758808
I0428 20:12:45.936743 32343 net.cpp:200] loss needs backward computation.
I0428 20:12:45.936748 32343 net.cpp:202] accuracy does not need backward computation.
I0428 20:12:45.936751 32343 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:12:45.936756 32343 net.cpp:200] relu3 needs backward computation.
I0428 20:12:45.936759 32343 net.cpp:200] ip3 needs backward computation.
I0428 20:12:45.936764 32343 net.cpp:200] relu2 needs backward computation.
I0428 20:12:45.936767 32343 net.cpp:200] ip2 needs backward computation.
I0428 20:12:45.936770 32343 net.cpp:200] relu1 needs backward computation.
I0428 20:12:45.936774 32343 net.cpp:200] ip1 needs backward computation.
I0428 20:12:45.936777 32343 net.cpp:200] pool1 needs backward computation.
I0428 20:12:45.936782 32343 net.cpp:200] conv1 needs backward computation.
I0428 20:12:45.936785 32343 net.cpp:200] pool0 needs backward computation.
I0428 20:12:45.936790 32343 net.cpp:200] conv0 needs backward computation.
I0428 20:12:45.936795 32343 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:12:45.936800 32343 net.cpp:202] mnist does not need backward computation.
I0428 20:12:45.936803 32343 net.cpp:244] This network produces output accuracy
I0428 20:12:45.936807 32343 net.cpp:244] This network produces output loss
I0428 20:12:45.936828 32343 net.cpp:257] Network initialization done.
I0428 20:12:45.936877 32343 solver.cpp:56] Solver scaffolding done.
I0428 20:12:45.937275 32343 caffe.cpp:248] Starting Optimization
I0428 20:12:45.937283 32343 solver.cpp:273] Solving LeNet
I0428 20:12:45.937286 32343 solver.cpp:274] Learning Rate Policy: inv
I0428 20:12:45.938144 32343 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:12:45.946403 32343 blocking_queue.cpp:49] Waiting for data
I0428 20:12:46.016669 32350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:46.017580 32343 solver.cpp:398]     Test net output #0: accuracy = 0.1083
I0428 20:12:46.017602 32343 solver.cpp:398]     Test net output #1: loss = 2.30225 (* 1 = 2.30225 loss)
I0428 20:12:46.022492 32343 solver.cpp:219] Iteration 0 (-9.54284e-43 iter/s, 0.0851753s/100 iters), loss = 2.30713
I0428 20:12:46.022519 32343 solver.cpp:238]     Train net output #0: loss = 2.30713 (* 1 = 2.30713 loss)
I0428 20:12:46.022531 32343 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:46.176987 32343 solver.cpp:219] Iteration 100 (647.437 iter/s, 0.154455s/100 iters), loss = 0.838397
I0428 20:12:46.177028 32343 solver.cpp:238]     Train net output #0: loss = 0.838397 (* 1 = 0.838397 loss)
I0428 20:12:46.177036 32343 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:46.355952 32343 solver.cpp:219] Iteration 200 (558.892 iter/s, 0.178926s/100 iters), loss = 0.838836
I0428 20:12:46.355993 32343 solver.cpp:238]     Train net output #0: loss = 0.838836 (* 1 = 0.838836 loss)
I0428 20:12:46.355999 32343 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:46.518172 32343 solver.cpp:219] Iteration 300 (616.653 iter/s, 0.162166s/100 iters), loss = 0.722475
I0428 20:12:46.518195 32343 solver.cpp:238]     Train net output #0: loss = 0.722475 (* 1 = 0.722475 loss)
I0428 20:12:46.518201 32343 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:46.673202 32343 solver.cpp:219] Iteration 400 (645.192 iter/s, 0.154993s/100 iters), loss = 0.81062
I0428 20:12:46.673241 32343 solver.cpp:238]     Train net output #0: loss = 0.81062 (* 1 = 0.81062 loss)
I0428 20:12:46.673249 32343 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:46.826972 32343 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:46.891746 32350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:46.893949 32343 solver.cpp:398]     Test net output #0: accuracy = 0.7671
I0428 20:12:46.893968 32343 solver.cpp:398]     Test net output #1: loss = 0.762696 (* 1 = 0.762696 loss)
I0428 20:12:46.895400 32343 solver.cpp:219] Iteration 500 (450.13 iter/s, 0.222158s/100 iters), loss = 0.784883
I0428 20:12:46.895465 32343 solver.cpp:238]     Train net output #0: loss = 0.784883 (* 1 = 0.784883 loss)
I0428 20:12:46.895473 32343 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:47.051285 32343 solver.cpp:219] Iteration 600 (641.817 iter/s, 0.155808s/100 iters), loss = 0.680054
I0428 20:12:47.051326 32343 solver.cpp:238]     Train net output #0: loss = 0.680054 (* 1 = 0.680054 loss)
I0428 20:12:47.051332 32343 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:47.207643 32343 solver.cpp:219] Iteration 700 (639.714 iter/s, 0.15632s/100 iters), loss = 1.05442
I0428 20:12:47.207684 32343 solver.cpp:238]     Train net output #0: loss = 1.05442 (* 1 = 1.05442 loss)
I0428 20:12:47.207690 32343 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:47.360946 32343 solver.cpp:219] Iteration 800 (652.464 iter/s, 0.153265s/100 iters), loss = 0.976814
I0428 20:12:47.360986 32343 solver.cpp:238]     Train net output #0: loss = 0.976814 (* 1 = 0.976814 loss)
I0428 20:12:47.360993 32343 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:47.538178 32343 solver.cpp:219] Iteration 900 (564.412 iter/s, 0.177176s/100 iters), loss = 0.74224
I0428 20:12:47.538223 32343 solver.cpp:238]     Train net output #0: loss = 0.74224 (* 1 = 0.74224 loss)
I0428 20:12:47.538231 32343 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:47.603955 32349 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:47.743463 32343 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:47.746907 32343 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:47.748687 32343 solver.cpp:311] Iteration 1000, loss = 0.925685
I0428 20:12:47.748715 32343 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:47.826252 32350 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:47.828776 32343 solver.cpp:398]     Test net output #0: accuracy = 0.7927
I0428 20:12:47.828801 32343 solver.cpp:398]     Test net output #1: loss = 0.731954 (* 1 = 0.731954 loss)
I0428 20:12:47.828807 32343 solver.cpp:316] Optimization Done.
I0428 20:12:47.828819 32343 caffe.cpp:259] Optimization Done.
