I0428 19:59:43.786689 29311 caffe.cpp:218] Using GPUs 0
I0428 19:59:43.813711 29311 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:44.259186 29311 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test856.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:44.259330 29311 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test856.prototxt
I0428 19:59:44.259680 29311 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:44.259708 29311 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:44.259783 29311 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:44.259841 29311 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:44.259922 29311 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:44.259939 29311 net.cpp:86] Creating Layer mnist
I0428 19:59:44.259945 29311 net.cpp:382] mnist -> data
I0428 19:59:44.259963 29311 net.cpp:382] mnist -> label
I0428 19:59:44.260962 29311 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:44.263682 29311 net.cpp:124] Setting up mnist
I0428 19:59:44.263711 29311 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:44.263725 29311 net.cpp:131] Top shape: 64 (64)
I0428 19:59:44.263727 29311 net.cpp:139] Memory required for data: 200960
I0428 19:59:44.263733 29311 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:44.263746 29311 net.cpp:86] Creating Layer conv0
I0428 19:59:44.263763 29311 net.cpp:408] conv0 <- data
I0428 19:59:44.263773 29311 net.cpp:382] conv0 -> conv0
I0428 19:59:44.499459 29311 net.cpp:124] Setting up conv0
I0428 19:59:44.499485 29311 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:44.499490 29311 net.cpp:139] Memory required for data: 1675520
I0428 19:59:44.499505 29311 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:44.499516 29311 net.cpp:86] Creating Layer pool0
I0428 19:59:44.499519 29311 net.cpp:408] pool0 <- conv0
I0428 19:59:44.499541 29311 net.cpp:382] pool0 -> pool0
I0428 19:59:44.499604 29311 net.cpp:124] Setting up pool0
I0428 19:59:44.499610 29311 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:44.499613 29311 net.cpp:139] Memory required for data: 2044160
I0428 19:59:44.499615 29311 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:44.499626 29311 net.cpp:86] Creating Layer conv1
I0428 19:59:44.499629 29311 net.cpp:408] conv1 <- pool0
I0428 19:59:44.499634 29311 net.cpp:382] conv1 -> conv1
I0428 19:59:44.502645 29311 net.cpp:124] Setting up conv1
I0428 19:59:44.502674 29311 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:44.502677 29311 net.cpp:139] Memory required for data: 2208000
I0428 19:59:44.502686 29311 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:44.502694 29311 net.cpp:86] Creating Layer pool1
I0428 19:59:44.502697 29311 net.cpp:408] pool1 <- conv1
I0428 19:59:44.502702 29311 net.cpp:382] pool1 -> pool1
I0428 19:59:44.502758 29311 net.cpp:124] Setting up pool1
I0428 19:59:44.502763 29311 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:44.502765 29311 net.cpp:139] Memory required for data: 2248960
I0428 19:59:44.502768 29311 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:44.502779 29311 net.cpp:86] Creating Layer ip1
I0428 19:59:44.502782 29311 net.cpp:408] ip1 <- pool1
I0428 19:59:44.502787 29311 net.cpp:382] ip1 -> ip1
I0428 19:59:44.503804 29311 net.cpp:124] Setting up ip1
I0428 19:59:44.503816 29311 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:44.503835 29311 net.cpp:139] Memory required for data: 2261760
I0428 19:59:44.503844 29311 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:44.503850 29311 net.cpp:86] Creating Layer relu1
I0428 19:59:44.503854 29311 net.cpp:408] relu1 <- ip1
I0428 19:59:44.503859 29311 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:44.504060 29311 net.cpp:124] Setting up relu1
I0428 19:59:44.504070 29311 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:44.504072 29311 net.cpp:139] Memory required for data: 2274560
I0428 19:59:44.504075 29311 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:44.504081 29311 net.cpp:86] Creating Layer ip2
I0428 19:59:44.504086 29311 net.cpp:408] ip2 <- ip1
I0428 19:59:44.504089 29311 net.cpp:382] ip2 -> ip2
I0428 19:59:44.504204 29311 net.cpp:124] Setting up ip2
I0428 19:59:44.504210 29311 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:44.504214 29311 net.cpp:139] Memory required for data: 2287360
I0428 19:59:44.504218 29311 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:44.504225 29311 net.cpp:86] Creating Layer relu2
I0428 19:59:44.504227 29311 net.cpp:408] relu2 <- ip2
I0428 19:59:44.504232 29311 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:44.505026 29311 net.cpp:124] Setting up relu2
I0428 19:59:44.505038 29311 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:44.505058 29311 net.cpp:139] Memory required for data: 2300160
I0428 19:59:44.505061 29311 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:44.505069 29311 net.cpp:86] Creating Layer ip3
I0428 19:59:44.505072 29311 net.cpp:408] ip3 <- ip2
I0428 19:59:44.505077 29311 net.cpp:382] ip3 -> ip3
I0428 19:59:44.505193 29311 net.cpp:124] Setting up ip3
I0428 19:59:44.505200 29311 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:44.505203 29311 net.cpp:139] Memory required for data: 2302720
I0428 19:59:44.505209 29311 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:44.505215 29311 net.cpp:86] Creating Layer relu3
I0428 19:59:44.505218 29311 net.cpp:408] relu3 <- ip3
I0428 19:59:44.505223 29311 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:44.505404 29311 net.cpp:124] Setting up relu3
I0428 19:59:44.505414 29311 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:44.505416 29311 net.cpp:139] Memory required for data: 2305280
I0428 19:59:44.505419 29311 layer_factory.hpp:77] Creating layer loss
I0428 19:59:44.505426 29311 net.cpp:86] Creating Layer loss
I0428 19:59:44.505429 29311 net.cpp:408] loss <- ip3
I0428 19:59:44.505434 29311 net.cpp:408] loss <- label
I0428 19:59:44.505439 29311 net.cpp:382] loss -> loss
I0428 19:59:44.505455 29311 layer_factory.hpp:77] Creating layer loss
I0428 19:59:44.505714 29311 net.cpp:124] Setting up loss
I0428 19:59:44.505723 29311 net.cpp:131] Top shape: (1)
I0428 19:59:44.505726 29311 net.cpp:134]     with loss weight 1
I0428 19:59:44.505740 29311 net.cpp:139] Memory required for data: 2305284
I0428 19:59:44.505743 29311 net.cpp:200] loss needs backward computation.
I0428 19:59:44.505748 29311 net.cpp:200] relu3 needs backward computation.
I0428 19:59:44.505750 29311 net.cpp:200] ip3 needs backward computation.
I0428 19:59:44.505753 29311 net.cpp:200] relu2 needs backward computation.
I0428 19:59:44.505756 29311 net.cpp:200] ip2 needs backward computation.
I0428 19:59:44.505759 29311 net.cpp:200] relu1 needs backward computation.
I0428 19:59:44.505762 29311 net.cpp:200] ip1 needs backward computation.
I0428 19:59:44.505765 29311 net.cpp:200] pool1 needs backward computation.
I0428 19:59:44.505769 29311 net.cpp:200] conv1 needs backward computation.
I0428 19:59:44.505770 29311 net.cpp:200] pool0 needs backward computation.
I0428 19:59:44.505774 29311 net.cpp:200] conv0 needs backward computation.
I0428 19:59:44.505776 29311 net.cpp:202] mnist does not need backward computation.
I0428 19:59:44.505779 29311 net.cpp:244] This network produces output loss
I0428 19:59:44.505789 29311 net.cpp:257] Network initialization done.
I0428 19:59:44.506184 29311 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test856.prototxt
I0428 19:59:44.506237 29311 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:44.506325 29311 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:44.506404 29311 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:44.506449 29311 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:44.506460 29311 net.cpp:86] Creating Layer mnist
I0428 19:59:44.506466 29311 net.cpp:382] mnist -> data
I0428 19:59:44.506474 29311 net.cpp:382] mnist -> label
I0428 19:59:44.506556 29311 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:44.508615 29311 net.cpp:124] Setting up mnist
I0428 19:59:44.508642 29311 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:44.508647 29311 net.cpp:131] Top shape: 100 (100)
I0428 19:59:44.508651 29311 net.cpp:139] Memory required for data: 314000
I0428 19:59:44.508654 29311 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:44.508663 29311 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:44.508667 29311 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:44.508672 29311 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:44.508679 29311 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:44.508767 29311 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:44.508775 29311 net.cpp:131] Top shape: 100 (100)
I0428 19:59:44.508779 29311 net.cpp:131] Top shape: 100 (100)
I0428 19:59:44.508781 29311 net.cpp:139] Memory required for data: 314800
I0428 19:59:44.508785 29311 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:44.508795 29311 net.cpp:86] Creating Layer conv0
I0428 19:59:44.508797 29311 net.cpp:408] conv0 <- data
I0428 19:59:44.508842 29311 net.cpp:382] conv0 -> conv0
I0428 19:59:44.510637 29311 net.cpp:124] Setting up conv0
I0428 19:59:44.510665 29311 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:44.510669 29311 net.cpp:139] Memory required for data: 2618800
I0428 19:59:44.510677 29311 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:44.510684 29311 net.cpp:86] Creating Layer pool0
I0428 19:59:44.510689 29311 net.cpp:408] pool0 <- conv0
I0428 19:59:44.510692 29311 net.cpp:382] pool0 -> pool0
I0428 19:59:44.510728 29311 net.cpp:124] Setting up pool0
I0428 19:59:44.510733 29311 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:44.510735 29311 net.cpp:139] Memory required for data: 3194800
I0428 19:59:44.510738 29311 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:44.510746 29311 net.cpp:86] Creating Layer conv1
I0428 19:59:44.510749 29311 net.cpp:408] conv1 <- pool0
I0428 19:59:44.510756 29311 net.cpp:382] conv1 -> conv1
I0428 19:59:44.513068 29311 net.cpp:124] Setting up conv1
I0428 19:59:44.513098 29311 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:44.513100 29311 net.cpp:139] Memory required for data: 3450800
I0428 19:59:44.513110 29311 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:44.513118 29311 net.cpp:86] Creating Layer pool1
I0428 19:59:44.513121 29311 net.cpp:408] pool1 <- conv1
I0428 19:59:44.513147 29311 net.cpp:382] pool1 -> pool1
I0428 19:59:44.513236 29311 net.cpp:124] Setting up pool1
I0428 19:59:44.513244 29311 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:44.513248 29311 net.cpp:139] Memory required for data: 3514800
I0428 19:59:44.513252 29311 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:44.513257 29311 net.cpp:86] Creating Layer ip1
I0428 19:59:44.513262 29311 net.cpp:408] ip1 <- pool1
I0428 19:59:44.513267 29311 net.cpp:382] ip1 -> ip1
I0428 19:59:44.513419 29311 net.cpp:124] Setting up ip1
I0428 19:59:44.513427 29311 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:44.513442 29311 net.cpp:139] Memory required for data: 3534800
I0428 19:59:44.513449 29311 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:44.513455 29311 net.cpp:86] Creating Layer relu1
I0428 19:59:44.513459 29311 net.cpp:408] relu1 <- ip1
I0428 19:59:44.513464 29311 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:44.513674 29311 net.cpp:124] Setting up relu1
I0428 19:59:44.513681 29311 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:44.513684 29311 net.cpp:139] Memory required for data: 3554800
I0428 19:59:44.513687 29311 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:44.513695 29311 net.cpp:86] Creating Layer ip2
I0428 19:59:44.513697 29311 net.cpp:408] ip2 <- ip1
I0428 19:59:44.513703 29311 net.cpp:382] ip2 -> ip2
I0428 19:59:44.513813 29311 net.cpp:124] Setting up ip2
I0428 19:59:44.513819 29311 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:44.513821 29311 net.cpp:139] Memory required for data: 3574800
I0428 19:59:44.513826 29311 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:44.513831 29311 net.cpp:86] Creating Layer relu2
I0428 19:59:44.513834 29311 net.cpp:408] relu2 <- ip2
I0428 19:59:44.513839 29311 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:44.514009 29311 net.cpp:124] Setting up relu2
I0428 19:59:44.514017 29311 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:44.514020 29311 net.cpp:139] Memory required for data: 3594800
I0428 19:59:44.514024 29311 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:44.514029 29311 net.cpp:86] Creating Layer ip3
I0428 19:59:44.514032 29311 net.cpp:408] ip3 <- ip2
I0428 19:59:44.514037 29311 net.cpp:382] ip3 -> ip3
I0428 19:59:44.514153 29311 net.cpp:124] Setting up ip3
I0428 19:59:44.514166 29311 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:44.514168 29311 net.cpp:139] Memory required for data: 3598800
I0428 19:59:44.514176 29311 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:44.514180 29311 net.cpp:86] Creating Layer relu3
I0428 19:59:44.514183 29311 net.cpp:408] relu3 <- ip3
I0428 19:59:44.514188 29311 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:44.515130 29311 net.cpp:124] Setting up relu3
I0428 19:59:44.515143 29311 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:44.515148 29311 net.cpp:139] Memory required for data: 3602800
I0428 19:59:44.515152 29311 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:44.515157 29311 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:44.515167 29311 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:44.515173 29311 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:44.515198 29311 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:44.515266 29311 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:44.515274 29311 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:44.515277 29311 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:44.515280 29311 net.cpp:139] Memory required for data: 3610800
I0428 19:59:44.515282 29311 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:44.515287 29311 net.cpp:86] Creating Layer accuracy
I0428 19:59:44.515290 29311 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:44.515295 29311 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:44.515298 29311 net.cpp:382] accuracy -> accuracy
I0428 19:59:44.515305 29311 net.cpp:124] Setting up accuracy
I0428 19:59:44.515310 29311 net.cpp:131] Top shape: (1)
I0428 19:59:44.515311 29311 net.cpp:139] Memory required for data: 3610804
I0428 19:59:44.515314 29311 layer_factory.hpp:77] Creating layer loss
I0428 19:59:44.515319 29311 net.cpp:86] Creating Layer loss
I0428 19:59:44.515322 29311 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:44.515331 29311 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:44.515334 29311 net.cpp:382] loss -> loss
I0428 19:59:44.515341 29311 layer_factory.hpp:77] Creating layer loss
I0428 19:59:44.515581 29311 net.cpp:124] Setting up loss
I0428 19:59:44.515589 29311 net.cpp:131] Top shape: (1)
I0428 19:59:44.515592 29311 net.cpp:134]     with loss weight 1
I0428 19:59:44.515607 29311 net.cpp:139] Memory required for data: 3610808
I0428 19:59:44.515611 29311 net.cpp:200] loss needs backward computation.
I0428 19:59:44.515615 29311 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:44.515619 29311 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:44.515627 29311 net.cpp:200] relu3 needs backward computation.
I0428 19:59:44.515630 29311 net.cpp:200] ip3 needs backward computation.
I0428 19:59:44.515632 29311 net.cpp:200] relu2 needs backward computation.
I0428 19:59:44.515640 29311 net.cpp:200] ip2 needs backward computation.
I0428 19:59:44.515642 29311 net.cpp:200] relu1 needs backward computation.
I0428 19:59:44.515645 29311 net.cpp:200] ip1 needs backward computation.
I0428 19:59:44.515648 29311 net.cpp:200] pool1 needs backward computation.
I0428 19:59:44.515651 29311 net.cpp:200] conv1 needs backward computation.
I0428 19:59:44.515655 29311 net.cpp:200] pool0 needs backward computation.
I0428 19:59:44.515657 29311 net.cpp:200] conv0 needs backward computation.
I0428 19:59:44.515661 29311 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:44.515666 29311 net.cpp:202] mnist does not need backward computation.
I0428 19:59:44.515668 29311 net.cpp:244] This network produces output accuracy
I0428 19:59:44.515672 29311 net.cpp:244] This network produces output loss
I0428 19:59:44.515683 29311 net.cpp:257] Network initialization done.
I0428 19:59:44.515739 29311 solver.cpp:56] Solver scaffolding done.
I0428 19:59:44.516201 29311 caffe.cpp:248] Starting Optimization
I0428 19:59:44.516207 29311 solver.cpp:273] Solving LeNet
I0428 19:59:44.516211 29311 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:44.517233 29311 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:44.520992 29311 blocking_queue.cpp:49] Waiting for data
I0428 19:59:44.590896 29318 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:44.591428 29311 solver.cpp:398]     Test net output #0: accuracy = 0.0895
I0428 19:59:44.591461 29311 solver.cpp:398]     Test net output #1: loss = 2.30611 (* 1 = 2.30611 loss)
I0428 19:59:44.593950 29311 solver.cpp:219] Iteration 0 (0 iter/s, 0.0777114s/100 iters), loss = 2.30935
I0428 19:59:44.593988 29311 solver.cpp:238]     Train net output #0: loss = 2.30935 (* 1 = 2.30935 loss)
I0428 19:59:44.593998 29311 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:44.675051 29311 solver.cpp:219] Iteration 100 (1233.58 iter/s, 0.0810649s/100 iters), loss = 0.495545
I0428 19:59:44.675091 29311 solver.cpp:238]     Train net output #0: loss = 0.495545 (* 1 = 0.495545 loss)
I0428 19:59:44.675112 29311 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:44.755188 29311 solver.cpp:219] Iteration 200 (1248.39 iter/s, 0.0801034s/100 iters), loss = 0.307512
I0428 19:59:44.755226 29311 solver.cpp:238]     Train net output #0: loss = 0.307512 (* 1 = 0.307512 loss)
I0428 19:59:44.755233 29311 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:44.833873 29311 solver.cpp:219] Iteration 300 (1271.43 iter/s, 0.0786514s/100 iters), loss = 0.318878
I0428 19:59:44.833910 29311 solver.cpp:238]     Train net output #0: loss = 0.318878 (* 1 = 0.318878 loss)
I0428 19:59:44.833916 29311 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:44.912477 29311 solver.cpp:219] Iteration 400 (1272.72 iter/s, 0.0785717s/100 iters), loss = 0.141248
I0428 19:59:44.912515 29311 solver.cpp:238]     Train net output #0: loss = 0.141248 (* 1 = 0.141248 loss)
I0428 19:59:44.912521 29311 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:44.990442 29311 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:45.043826 29318 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:45.044356 29311 solver.cpp:398]     Test net output #0: accuracy = 0.9554
I0428 19:59:45.044391 29311 solver.cpp:398]     Test net output #1: loss = 0.133343 (* 1 = 0.133343 loss)
I0428 19:59:45.045246 29311 solver.cpp:219] Iteration 500 (753.38 iter/s, 0.132735s/100 iters), loss = 0.100895
I0428 19:59:45.045305 29311 solver.cpp:238]     Train net output #0: loss = 0.100895 (* 1 = 0.100895 loss)
I0428 19:59:45.045315 29311 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:45.124585 29311 solver.cpp:219] Iteration 600 (1261.45 iter/s, 0.0792737s/100 iters), loss = 0.0903491
I0428 19:59:45.124624 29311 solver.cpp:238]     Train net output #0: loss = 0.0903491 (* 1 = 0.0903491 loss)
I0428 19:59:45.124629 29311 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:45.203217 29311 solver.cpp:219] Iteration 700 (1272.28 iter/s, 0.0785992s/100 iters), loss = 0.275854
I0428 19:59:45.203258 29311 solver.cpp:238]     Train net output #0: loss = 0.275854 (* 1 = 0.275854 loss)
I0428 19:59:45.203263 29311 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:45.281610 29311 solver.cpp:219] Iteration 800 (1276.17 iter/s, 0.0783596s/100 iters), loss = 0.363384
I0428 19:59:45.281633 29311 solver.cpp:238]     Train net output #0: loss = 0.363384 (* 1 = 0.363384 loss)
I0428 19:59:45.281641 29311 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:45.360165 29311 solver.cpp:219] Iteration 900 (1273.54 iter/s, 0.0785215s/100 iters), loss = 0.109834
I0428 19:59:45.360204 29311 solver.cpp:238]     Train net output #0: loss = 0.109834 (* 1 = 0.109834 loss)
I0428 19:59:45.360209 29311 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:45.386904 29317 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:45.439229 29311 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:45.440178 29311 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:45.440745 29311 solver.cpp:311] Iteration 1000, loss = 0.114759
I0428 19:59:45.440762 29311 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:45.515692 29318 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:45.516291 29311 solver.cpp:398]     Test net output #0: accuracy = 0.9707
I0428 19:59:45.516320 29311 solver.cpp:398]     Test net output #1: loss = 0.092861 (* 1 = 0.092861 loss)
I0428 19:59:45.516327 29311 solver.cpp:316] Optimization Done.
I0428 19:59:45.516332 29311 caffe.cpp:259] Optimization Done.
