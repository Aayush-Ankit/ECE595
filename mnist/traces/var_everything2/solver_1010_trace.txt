I0428 20:05:48.680876 30724 caffe.cpp:218] Using GPUs 0
I0428 20:05:48.709255 30724 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:49.156074 30724 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1010.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:49.156273 30724 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1010.prototxt
I0428 20:05:49.156682 30724 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:49.156697 30724 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:49.156786 30724 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:49.156908 30724 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:49.156993 30724 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:49.157013 30724 net.cpp:86] Creating Layer mnist
I0428 20:05:49.157019 30724 net.cpp:382] mnist -> data
I0428 20:05:49.157039 30724 net.cpp:382] mnist -> label
I0428 20:05:49.157991 30724 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:49.160233 30724 net.cpp:124] Setting up mnist
I0428 20:05:49.160248 30724 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:49.160254 30724 net.cpp:131] Top shape: 64 (64)
I0428 20:05:49.160257 30724 net.cpp:139] Memory required for data: 200960
I0428 20:05:49.160264 30724 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:49.160276 30724 net.cpp:86] Creating Layer conv0
I0428 20:05:49.160295 30724 net.cpp:408] conv0 <- data
I0428 20:05:49.160305 30724 net.cpp:382] conv0 -> conv0
I0428 20:05:49.385116 30724 net.cpp:124] Setting up conv0
I0428 20:05:49.385143 30724 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:49.385146 30724 net.cpp:139] Memory required for data: 3887360
I0428 20:05:49.385160 30724 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:49.385172 30724 net.cpp:86] Creating Layer pool0
I0428 20:05:49.385176 30724 net.cpp:408] pool0 <- conv0
I0428 20:05:49.385182 30724 net.cpp:382] pool0 -> pool0
I0428 20:05:49.385238 30724 net.cpp:124] Setting up pool0
I0428 20:05:49.385244 30724 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:49.385247 30724 net.cpp:139] Memory required for data: 4808960
I0428 20:05:49.385251 30724 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:49.385260 30724 net.cpp:86] Creating Layer conv1
I0428 20:05:49.385263 30724 net.cpp:408] conv1 <- pool0
I0428 20:05:49.385267 30724 net.cpp:382] conv1 -> conv1
I0428 20:05:49.388058 30724 net.cpp:124] Setting up conv1
I0428 20:05:49.388072 30724 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:49.388077 30724 net.cpp:139] Memory required for data: 4841728
I0428 20:05:49.388084 30724 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:49.388092 30724 net.cpp:86] Creating Layer pool1
I0428 20:05:49.388095 30724 net.cpp:408] pool1 <- conv1
I0428 20:05:49.388100 30724 net.cpp:382] pool1 -> pool1
I0428 20:05:49.388149 30724 net.cpp:124] Setting up pool1
I0428 20:05:49.388154 30724 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:49.388156 30724 net.cpp:139] Memory required for data: 4849920
I0428 20:05:49.388159 30724 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:49.388166 30724 net.cpp:86] Creating Layer ip1
I0428 20:05:49.388170 30724 net.cpp:408] ip1 <- pool1
I0428 20:05:49.388173 30724 net.cpp:382] ip1 -> ip1
I0428 20:05:49.388272 30724 net.cpp:124] Setting up ip1
I0428 20:05:49.388278 30724 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:49.388281 30724 net.cpp:139] Memory required for data: 4862720
I0428 20:05:49.388288 30724 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:49.388293 30724 net.cpp:86] Creating Layer relu1
I0428 20:05:49.388296 30724 net.cpp:408] relu1 <- ip1
I0428 20:05:49.388300 30724 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:49.388453 30724 net.cpp:124] Setting up relu1
I0428 20:05:49.388463 30724 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:49.388465 30724 net.cpp:139] Memory required for data: 4875520
I0428 20:05:49.388468 30724 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:49.388473 30724 net.cpp:86] Creating Layer ip2
I0428 20:05:49.388476 30724 net.cpp:408] ip2 <- ip1
I0428 20:05:49.388480 30724 net.cpp:382] ip2 -> ip2
I0428 20:05:49.388573 30724 net.cpp:124] Setting up ip2
I0428 20:05:49.388581 30724 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:49.388583 30724 net.cpp:139] Memory required for data: 4881920
I0428 20:05:49.388588 30724 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:49.388593 30724 net.cpp:86] Creating Layer relu2
I0428 20:05:49.388597 30724 net.cpp:408] relu2 <- ip2
I0428 20:05:49.388600 30724 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:49.389310 30724 net.cpp:124] Setting up relu2
I0428 20:05:49.389322 30724 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:49.389327 30724 net.cpp:139] Memory required for data: 4888320
I0428 20:05:49.389329 30724 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:49.389335 30724 net.cpp:86] Creating Layer ip3
I0428 20:05:49.389339 30724 net.cpp:408] ip3 <- ip2
I0428 20:05:49.389344 30724 net.cpp:382] ip3 -> ip3
I0428 20:05:49.389436 30724 net.cpp:124] Setting up ip3
I0428 20:05:49.389444 30724 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:49.389447 30724 net.cpp:139] Memory required for data: 4890880
I0428 20:05:49.389454 30724 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:49.389459 30724 net.cpp:86] Creating Layer relu3
I0428 20:05:49.389462 30724 net.cpp:408] relu3 <- ip3
I0428 20:05:49.389467 30724 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:49.389621 30724 net.cpp:124] Setting up relu3
I0428 20:05:49.389631 30724 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:49.389633 30724 net.cpp:139] Memory required for data: 4893440
I0428 20:05:49.389636 30724 layer_factory.hpp:77] Creating layer loss
I0428 20:05:49.389642 30724 net.cpp:86] Creating Layer loss
I0428 20:05:49.389644 30724 net.cpp:408] loss <- ip3
I0428 20:05:49.389648 30724 net.cpp:408] loss <- label
I0428 20:05:49.389653 30724 net.cpp:382] loss -> loss
I0428 20:05:49.389669 30724 layer_factory.hpp:77] Creating layer loss
I0428 20:05:49.389914 30724 net.cpp:124] Setting up loss
I0428 20:05:49.389924 30724 net.cpp:131] Top shape: (1)
I0428 20:05:49.389927 30724 net.cpp:134]     with loss weight 1
I0428 20:05:49.389941 30724 net.cpp:139] Memory required for data: 4893444
I0428 20:05:49.389945 30724 net.cpp:200] loss needs backward computation.
I0428 20:05:49.389948 30724 net.cpp:200] relu3 needs backward computation.
I0428 20:05:49.389951 30724 net.cpp:200] ip3 needs backward computation.
I0428 20:05:49.389955 30724 net.cpp:200] relu2 needs backward computation.
I0428 20:05:49.389956 30724 net.cpp:200] ip2 needs backward computation.
I0428 20:05:49.389960 30724 net.cpp:200] relu1 needs backward computation.
I0428 20:05:49.389962 30724 net.cpp:200] ip1 needs backward computation.
I0428 20:05:49.389966 30724 net.cpp:200] pool1 needs backward computation.
I0428 20:05:49.389968 30724 net.cpp:200] conv1 needs backward computation.
I0428 20:05:49.389971 30724 net.cpp:200] pool0 needs backward computation.
I0428 20:05:49.389976 30724 net.cpp:200] conv0 needs backward computation.
I0428 20:05:49.389978 30724 net.cpp:202] mnist does not need backward computation.
I0428 20:05:49.389981 30724 net.cpp:244] This network produces output loss
I0428 20:05:49.389989 30724 net.cpp:257] Network initialization done.
I0428 20:05:49.390321 30724 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1010.prototxt
I0428 20:05:49.390346 30724 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:49.390430 30724 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:49.390524 30724 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:49.390566 30724 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:49.390580 30724 net.cpp:86] Creating Layer mnist
I0428 20:05:49.390584 30724 net.cpp:382] mnist -> data
I0428 20:05:49.390591 30724 net.cpp:382] mnist -> label
I0428 20:05:49.390671 30724 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:49.392777 30724 net.cpp:124] Setting up mnist
I0428 20:05:49.392805 30724 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:49.392827 30724 net.cpp:131] Top shape: 100 (100)
I0428 20:05:49.392830 30724 net.cpp:139] Memory required for data: 314000
I0428 20:05:49.392833 30724 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:49.392840 30724 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:49.392859 30724 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:49.392864 30724 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:49.392870 30724 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:49.392907 30724 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:49.392913 30724 net.cpp:131] Top shape: 100 (100)
I0428 20:05:49.392916 30724 net.cpp:131] Top shape: 100 (100)
I0428 20:05:49.392920 30724 net.cpp:139] Memory required for data: 314800
I0428 20:05:49.392922 30724 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:49.392930 30724 net.cpp:86] Creating Layer conv0
I0428 20:05:49.392933 30724 net.cpp:408] conv0 <- data
I0428 20:05:49.392938 30724 net.cpp:382] conv0 -> conv0
I0428 20:05:49.394763 30724 net.cpp:124] Setting up conv0
I0428 20:05:49.394778 30724 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:49.394781 30724 net.cpp:139] Memory required for data: 6074800
I0428 20:05:49.394789 30724 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:49.394810 30724 net.cpp:86] Creating Layer pool0
I0428 20:05:49.394814 30724 net.cpp:408] pool0 <- conv0
I0428 20:05:49.394819 30724 net.cpp:382] pool0 -> pool0
I0428 20:05:49.394853 30724 net.cpp:124] Setting up pool0
I0428 20:05:49.394858 30724 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:49.394861 30724 net.cpp:139] Memory required for data: 7514800
I0428 20:05:49.394865 30724 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:49.394871 30724 net.cpp:86] Creating Layer conv1
I0428 20:05:49.394876 30724 net.cpp:408] conv1 <- pool0
I0428 20:05:49.394879 30724 net.cpp:382] conv1 -> conv1
I0428 20:05:49.397027 30724 net.cpp:124] Setting up conv1
I0428 20:05:49.397040 30724 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:49.397044 30724 net.cpp:139] Memory required for data: 7566000
I0428 20:05:49.397053 30724 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:49.397074 30724 net.cpp:86] Creating Layer pool1
I0428 20:05:49.397078 30724 net.cpp:408] pool1 <- conv1
I0428 20:05:49.397084 30724 net.cpp:382] pool1 -> pool1
I0428 20:05:49.397122 30724 net.cpp:124] Setting up pool1
I0428 20:05:49.397128 30724 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:49.397130 30724 net.cpp:139] Memory required for data: 7578800
I0428 20:05:49.397133 30724 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:49.397140 30724 net.cpp:86] Creating Layer ip1
I0428 20:05:49.397142 30724 net.cpp:408] ip1 <- pool1
I0428 20:05:49.397147 30724 net.cpp:382] ip1 -> ip1
I0428 20:05:49.397281 30724 net.cpp:124] Setting up ip1
I0428 20:05:49.397289 30724 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:49.397317 30724 net.cpp:139] Memory required for data: 7598800
I0428 20:05:49.397325 30724 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:49.397330 30724 net.cpp:86] Creating Layer relu1
I0428 20:05:49.397333 30724 net.cpp:408] relu1 <- ip1
I0428 20:05:49.397337 30724 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:49.397606 30724 net.cpp:124] Setting up relu1
I0428 20:05:49.397616 30724 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:49.397620 30724 net.cpp:139] Memory required for data: 7618800
I0428 20:05:49.397635 30724 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:49.397644 30724 net.cpp:86] Creating Layer ip2
I0428 20:05:49.397652 30724 net.cpp:408] ip2 <- ip1
I0428 20:05:49.397658 30724 net.cpp:382] ip2 -> ip2
I0428 20:05:49.397774 30724 net.cpp:124] Setting up ip2
I0428 20:05:49.397783 30724 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:49.397786 30724 net.cpp:139] Memory required for data: 7628800
I0428 20:05:49.397794 30724 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:49.397799 30724 net.cpp:86] Creating Layer relu2
I0428 20:05:49.397802 30724 net.cpp:408] relu2 <- ip2
I0428 20:05:49.397820 30724 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:49.397980 30724 net.cpp:124] Setting up relu2
I0428 20:05:49.397999 30724 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:49.398001 30724 net.cpp:139] Memory required for data: 7638800
I0428 20:05:49.398005 30724 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:49.398016 30724 net.cpp:86] Creating Layer ip3
I0428 20:05:49.398020 30724 net.cpp:408] ip3 <- ip2
I0428 20:05:49.398030 30724 net.cpp:382] ip3 -> ip3
I0428 20:05:49.398149 30724 net.cpp:124] Setting up ip3
I0428 20:05:49.398159 30724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:49.398162 30724 net.cpp:139] Memory required for data: 7642800
I0428 20:05:49.398170 30724 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:49.398175 30724 net.cpp:86] Creating Layer relu3
I0428 20:05:49.398180 30724 net.cpp:408] relu3 <- ip3
I0428 20:05:49.398183 30724 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:49.399022 30724 net.cpp:124] Setting up relu3
I0428 20:05:49.399035 30724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:49.399039 30724 net.cpp:139] Memory required for data: 7646800
I0428 20:05:49.399042 30724 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:49.399049 30724 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:49.399051 30724 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:49.399070 30724 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:49.399076 30724 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:49.399116 30724 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:49.399121 30724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:49.399125 30724 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:49.399127 30724 net.cpp:139] Memory required for data: 7654800
I0428 20:05:49.399130 30724 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:49.399140 30724 net.cpp:86] Creating Layer accuracy
I0428 20:05:49.399143 30724 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:49.399147 30724 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:49.399152 30724 net.cpp:382] accuracy -> accuracy
I0428 20:05:49.399164 30724 net.cpp:124] Setting up accuracy
I0428 20:05:49.399168 30724 net.cpp:131] Top shape: (1)
I0428 20:05:49.399170 30724 net.cpp:139] Memory required for data: 7654804
I0428 20:05:49.399173 30724 layer_factory.hpp:77] Creating layer loss
I0428 20:05:49.399178 30724 net.cpp:86] Creating Layer loss
I0428 20:05:49.399180 30724 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:49.399184 30724 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:49.399194 30724 net.cpp:382] loss -> loss
I0428 20:05:49.399199 30724 layer_factory.hpp:77] Creating layer loss
I0428 20:05:49.399420 30724 net.cpp:124] Setting up loss
I0428 20:05:49.399430 30724 net.cpp:131] Top shape: (1)
I0428 20:05:49.399433 30724 net.cpp:134]     with loss weight 1
I0428 20:05:49.399441 30724 net.cpp:139] Memory required for data: 7654808
I0428 20:05:49.399452 30724 net.cpp:200] loss needs backward computation.
I0428 20:05:49.399457 30724 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:49.399461 30724 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:49.399464 30724 net.cpp:200] relu3 needs backward computation.
I0428 20:05:49.399467 30724 net.cpp:200] ip3 needs backward computation.
I0428 20:05:49.399477 30724 net.cpp:200] relu2 needs backward computation.
I0428 20:05:49.399480 30724 net.cpp:200] ip2 needs backward computation.
I0428 20:05:49.399483 30724 net.cpp:200] relu1 needs backward computation.
I0428 20:05:49.399485 30724 net.cpp:200] ip1 needs backward computation.
I0428 20:05:49.399488 30724 net.cpp:200] pool1 needs backward computation.
I0428 20:05:49.399492 30724 net.cpp:200] conv1 needs backward computation.
I0428 20:05:49.399495 30724 net.cpp:200] pool0 needs backward computation.
I0428 20:05:49.399502 30724 net.cpp:200] conv0 needs backward computation.
I0428 20:05:49.399507 30724 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:49.399520 30724 net.cpp:202] mnist does not need backward computation.
I0428 20:05:49.399523 30724 net.cpp:244] This network produces output accuracy
I0428 20:05:49.399528 30724 net.cpp:244] This network produces output loss
I0428 20:05:49.399547 30724 net.cpp:257] Network initialization done.
I0428 20:05:49.399631 30724 solver.cpp:56] Solver scaffolding done.
I0428 20:05:49.400028 30724 caffe.cpp:248] Starting Optimization
I0428 20:05:49.400035 30724 solver.cpp:273] Solving LeNet
I0428 20:05:49.400044 30724 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:49.400871 30724 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:49.405810 30724 blocking_queue.cpp:49] Waiting for data
I0428 20:05:49.472086 30731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:49.472678 30724 solver.cpp:398]     Test net output #0: accuracy = 0.1851
I0428 20:05:49.472697 30724 solver.cpp:398]     Test net output #1: loss = 2.2981 (* 1 = 2.2981 loss)
I0428 20:05:49.475819 30724 solver.cpp:219] Iteration 0 (-1.09161e-42 iter/s, 0.0757494s/100 iters), loss = 2.30813
I0428 20:05:49.475843 30724 solver.cpp:238]     Train net output #0: loss = 2.30813 (* 1 = 2.30813 loss)
I0428 20:05:49.475854 30724 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:49.561946 30724 solver.cpp:219] Iteration 100 (1161.65 iter/s, 0.0860844s/100 iters), loss = 1.24743
I0428 20:05:49.561970 30724 solver.cpp:238]     Train net output #0: loss = 1.24743 (* 1 = 1.24743 loss)
I0428 20:05:49.561976 30724 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:49.647544 30724 solver.cpp:219] Iteration 200 (1168.71 iter/s, 0.0855645s/100 iters), loss = 0.610783
I0428 20:05:49.647567 30724 solver.cpp:238]     Train net output #0: loss = 0.610783 (* 1 = 0.610783 loss)
I0428 20:05:49.647573 30724 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:49.733979 30724 solver.cpp:219] Iteration 300 (1157.38 iter/s, 0.0864019s/100 iters), loss = 1.06645
I0428 20:05:49.734016 30724 solver.cpp:238]     Train net output #0: loss = 1.06645 (* 1 = 1.06645 loss)
I0428 20:05:49.734037 30724 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:49.819816 30724 solver.cpp:219] Iteration 400 (1165.64 iter/s, 0.0857898s/100 iters), loss = 0.63193
I0428 20:05:49.819840 30724 solver.cpp:238]     Train net output #0: loss = 0.63193 (* 1 = 0.63193 loss)
I0428 20:05:49.819847 30724 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:49.904613 30724 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:49.958851 30731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:49.959432 30724 solver.cpp:398]     Test net output #0: accuracy = 0.749
I0428 20:05:49.959450 30724 solver.cpp:398]     Test net output #1: loss = 0.66647 (* 1 = 0.66647 loss)
I0428 20:05:49.960325 30724 solver.cpp:219] Iteration 500 (711.9 iter/s, 0.140469s/100 iters), loss = 0.676192
I0428 20:05:49.960348 30724 solver.cpp:238]     Train net output #0: loss = 0.676192 (* 1 = 0.676192 loss)
I0428 20:05:49.960368 30724 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:50.052384 30724 solver.cpp:219] Iteration 600 (1086.65 iter/s, 0.0920259s/100 iters), loss = 0.605887
I0428 20:05:50.052407 30724 solver.cpp:238]     Train net output #0: loss = 0.605887 (* 1 = 0.605887 loss)
I0428 20:05:50.052429 30724 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:50.138969 30724 solver.cpp:219] Iteration 700 (1155.38 iter/s, 0.0865516s/100 iters), loss = 0.345405
I0428 20:05:50.138993 30724 solver.cpp:238]     Train net output #0: loss = 0.345405 (* 1 = 0.345405 loss)
I0428 20:05:50.139016 30724 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:50.225452 30724 solver.cpp:219] Iteration 800 (1156.74 iter/s, 0.0864502s/100 iters), loss = 0.495886
I0428 20:05:50.225476 30724 solver.cpp:238]     Train net output #0: loss = 0.495886 (* 1 = 0.495886 loss)
I0428 20:05:50.225499 30724 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:50.311564 30724 solver.cpp:219] Iteration 900 (1161.73 iter/s, 0.0860787s/100 iters), loss = 0.439726
I0428 20:05:50.311589 30724 solver.cpp:238]     Train net output #0: loss = 0.439726 (* 1 = 0.439726 loss)
I0428 20:05:50.311611 30724 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:50.340059 30730 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:50.395884 30724 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:50.396644 30724 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:50.397173 30724 solver.cpp:311] Iteration 1000, loss = 0.319065
I0428 20:05:50.397189 30724 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:50.468174 30731 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:50.468758 30724 solver.cpp:398]     Test net output #0: accuracy = 0.8611
I0428 20:05:50.468777 30724 solver.cpp:398]     Test net output #1: loss = 0.373942 (* 1 = 0.373942 loss)
I0428 20:05:50.468782 30724 solver.cpp:316] Optimization Done.
I0428 20:05:50.468786 30724 caffe.cpp:259] Optimization Done.
