I0428 19:58:37.358312 29019 caffe.cpp:218] Using GPUs 0
I0428 19:58:37.390251 29019 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:58:37.936414 29019 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test824.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:58:37.936560 29019 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test824.prototxt
I0428 19:58:37.936971 29019 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:58:37.936990 29019 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:58:37.937085 29019 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:37.937165 29019 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:37.937269 29019 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:58:37.937294 29019 net.cpp:86] Creating Layer mnist
I0428 19:58:37.937304 29019 net.cpp:382] mnist -> data
I0428 19:58:37.937326 29019 net.cpp:382] mnist -> label
I0428 19:58:37.938482 29019 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:58:37.941054 29019 net.cpp:124] Setting up mnist
I0428 19:58:37.941073 29019 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:58:37.941082 29019 net.cpp:131] Top shape: 64 (64)
I0428 19:58:37.941085 29019 net.cpp:139] Memory required for data: 200960
I0428 19:58:37.941092 29019 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:37.941109 29019 net.cpp:86] Creating Layer conv0
I0428 19:58:37.941115 29019 net.cpp:408] conv0 <- data
I0428 19:58:37.941130 29019 net.cpp:382] conv0 -> conv0
I0428 19:58:38.234671 29019 net.cpp:124] Setting up conv0
I0428 19:58:38.234702 29019 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:58:38.234707 29019 net.cpp:139] Memory required for data: 1675520
I0428 19:58:38.234747 29019 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:38.234762 29019 net.cpp:86] Creating Layer pool0
I0428 19:58:38.234767 29019 net.cpp:408] pool0 <- conv0
I0428 19:58:38.234773 29019 net.cpp:382] pool0 -> pool0
I0428 19:58:38.234833 29019 net.cpp:124] Setting up pool0
I0428 19:58:38.234843 29019 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:58:38.234846 29019 net.cpp:139] Memory required for data: 2044160
I0428 19:58:38.234850 29019 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:38.234864 29019 net.cpp:86] Creating Layer conv1
I0428 19:58:38.234869 29019 net.cpp:408] conv1 <- pool0
I0428 19:58:38.234874 29019 net.cpp:382] conv1 -> conv1
I0428 19:58:38.238034 29019 net.cpp:124] Setting up conv1
I0428 19:58:38.238051 29019 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:58:38.238056 29019 net.cpp:139] Memory required for data: 2208000
I0428 19:58:38.238066 29019 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:38.238075 29019 net.cpp:86] Creating Layer pool1
I0428 19:58:38.238081 29019 net.cpp:408] pool1 <- conv1
I0428 19:58:38.238087 29019 net.cpp:382] pool1 -> pool1
I0428 19:58:38.238132 29019 net.cpp:124] Setting up pool1
I0428 19:58:38.238139 29019 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:58:38.238142 29019 net.cpp:139] Memory required for data: 2248960
I0428 19:58:38.238145 29019 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:38.238154 29019 net.cpp:86] Creating Layer ip1
I0428 19:58:38.238157 29019 net.cpp:408] ip1 <- pool1
I0428 19:58:38.238163 29019 net.cpp:382] ip1 -> ip1
I0428 19:58:38.238291 29019 net.cpp:124] Setting up ip1
I0428 19:58:38.238299 29019 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:38.238302 29019 net.cpp:139] Memory required for data: 2251520
I0428 19:58:38.238312 29019 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:38.238318 29019 net.cpp:86] Creating Layer relu1
I0428 19:58:38.238322 29019 net.cpp:408] relu1 <- ip1
I0428 19:58:38.238327 29019 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:38.238523 29019 net.cpp:124] Setting up relu1
I0428 19:58:38.238533 29019 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:38.238538 29019 net.cpp:139] Memory required for data: 2254080
I0428 19:58:38.238540 29019 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:38.238548 29019 net.cpp:86] Creating Layer ip2
I0428 19:58:38.238551 29019 net.cpp:408] ip2 <- ip1
I0428 19:58:38.238557 29019 net.cpp:382] ip2 -> ip2
I0428 19:58:38.238672 29019 net.cpp:124] Setting up ip2
I0428 19:58:38.238679 29019 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:38.238683 29019 net.cpp:139] Memory required for data: 2256640
I0428 19:58:38.238689 29019 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:38.238696 29019 net.cpp:86] Creating Layer relu2
I0428 19:58:38.238700 29019 net.cpp:408] relu2 <- ip2
I0428 19:58:38.238705 29019 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:38.239552 29019 net.cpp:124] Setting up relu2
I0428 19:58:38.239567 29019 net.cpp:131] Top shape: 64 10 (640)
I0428 19:58:38.239570 29019 net.cpp:139] Memory required for data: 2259200
I0428 19:58:38.239574 29019 layer_factory.hpp:77] Creating layer loss
I0428 19:58:38.239588 29019 net.cpp:86] Creating Layer loss
I0428 19:58:38.239593 29019 net.cpp:408] loss <- ip2
I0428 19:58:38.239599 29019 net.cpp:408] loss <- label
I0428 19:58:38.239605 29019 net.cpp:382] loss -> loss
I0428 19:58:38.239624 29019 layer_factory.hpp:77] Creating layer loss
I0428 19:58:38.239902 29019 net.cpp:124] Setting up loss
I0428 19:58:38.239914 29019 net.cpp:131] Top shape: (1)
I0428 19:58:38.239918 29019 net.cpp:134]     with loss weight 1
I0428 19:58:38.239935 29019 net.cpp:139] Memory required for data: 2259204
I0428 19:58:38.239940 29019 net.cpp:200] loss needs backward computation.
I0428 19:58:38.239944 29019 net.cpp:200] relu2 needs backward computation.
I0428 19:58:38.239948 29019 net.cpp:200] ip2 needs backward computation.
I0428 19:58:38.239953 29019 net.cpp:200] relu1 needs backward computation.
I0428 19:58:38.239955 29019 net.cpp:200] ip1 needs backward computation.
I0428 19:58:38.239971 29019 net.cpp:200] pool1 needs backward computation.
I0428 19:58:38.239975 29019 net.cpp:200] conv1 needs backward computation.
I0428 19:58:38.239979 29019 net.cpp:200] pool0 needs backward computation.
I0428 19:58:38.239984 29019 net.cpp:200] conv0 needs backward computation.
I0428 19:58:38.239987 29019 net.cpp:202] mnist does not need backward computation.
I0428 19:58:38.239991 29019 net.cpp:244] This network produces output loss
I0428 19:58:38.240001 29019 net.cpp:257] Network initialization done.
I0428 19:58:38.240345 29019 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test824.prototxt
I0428 19:58:38.240380 29019 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:58:38.240479 29019 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:58:38.240556 29019 layer_factory.hpp:77] Creating layer mnist
I0428 19:58:38.240608 29019 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:58:38.240624 29019 net.cpp:86] Creating Layer mnist
I0428 19:58:38.240629 29019 net.cpp:382] mnist -> data
I0428 19:58:38.240638 29019 net.cpp:382] mnist -> label
I0428 19:58:38.240741 29019 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:58:38.242946 29019 net.cpp:124] Setting up mnist
I0428 19:58:38.242962 29019 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:58:38.242969 29019 net.cpp:131] Top shape: 100 (100)
I0428 19:58:38.242972 29019 net.cpp:139] Memory required for data: 314000
I0428 19:58:38.242977 29019 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:58:38.242985 29019 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:58:38.242990 29019 net.cpp:408] label_mnist_1_split <- label
I0428 19:58:38.242995 29019 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:58:38.243003 29019 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:58:38.243095 29019 net.cpp:124] Setting up label_mnist_1_split
I0428 19:58:38.243118 29019 net.cpp:131] Top shape: 100 (100)
I0428 19:58:38.243122 29019 net.cpp:131] Top shape: 100 (100)
I0428 19:58:38.243126 29019 net.cpp:139] Memory required for data: 314800
I0428 19:58:38.243130 29019 layer_factory.hpp:77] Creating layer conv0
I0428 19:58:38.243140 29019 net.cpp:86] Creating Layer conv0
I0428 19:58:38.243144 29019 net.cpp:408] conv0 <- data
I0428 19:58:38.243150 29019 net.cpp:382] conv0 -> conv0
I0428 19:58:38.245015 29019 net.cpp:124] Setting up conv0
I0428 19:58:38.245033 29019 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:58:38.245038 29019 net.cpp:139] Memory required for data: 2618800
I0428 19:58:38.245049 29019 layer_factory.hpp:77] Creating layer pool0
I0428 19:58:38.245057 29019 net.cpp:86] Creating Layer pool0
I0428 19:58:38.245061 29019 net.cpp:408] pool0 <- conv0
I0428 19:58:38.245067 29019 net.cpp:382] pool0 -> pool0
I0428 19:58:38.245110 29019 net.cpp:124] Setting up pool0
I0428 19:58:38.245115 29019 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:58:38.245120 29019 net.cpp:139] Memory required for data: 3194800
I0428 19:58:38.245122 29019 layer_factory.hpp:77] Creating layer conv1
I0428 19:58:38.245132 29019 net.cpp:86] Creating Layer conv1
I0428 19:58:38.245136 29019 net.cpp:408] conv1 <- pool0
I0428 19:58:38.245141 29019 net.cpp:382] conv1 -> conv1
I0428 19:58:38.247458 29019 net.cpp:124] Setting up conv1
I0428 19:58:38.247475 29019 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:58:38.247479 29019 net.cpp:139] Memory required for data: 3450800
I0428 19:58:38.247490 29019 layer_factory.hpp:77] Creating layer pool1
I0428 19:58:38.247498 29019 net.cpp:86] Creating Layer pool1
I0428 19:58:38.247503 29019 net.cpp:408] pool1 <- conv1
I0428 19:58:38.247509 29019 net.cpp:382] pool1 -> pool1
I0428 19:58:38.247560 29019 net.cpp:124] Setting up pool1
I0428 19:58:38.247566 29019 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:58:38.247570 29019 net.cpp:139] Memory required for data: 3514800
I0428 19:58:38.247575 29019 layer_factory.hpp:77] Creating layer ip1
I0428 19:58:38.247581 29019 net.cpp:86] Creating Layer ip1
I0428 19:58:38.247586 29019 net.cpp:408] ip1 <- pool1
I0428 19:58:38.247591 29019 net.cpp:382] ip1 -> ip1
I0428 19:58:38.247745 29019 net.cpp:124] Setting up ip1
I0428 19:58:38.247755 29019 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:38.247758 29019 net.cpp:139] Memory required for data: 3518800
I0428 19:58:38.247767 29019 layer_factory.hpp:77] Creating layer relu1
I0428 19:58:38.247773 29019 net.cpp:86] Creating Layer relu1
I0428 19:58:38.247777 29019 net.cpp:408] relu1 <- ip1
I0428 19:58:38.247783 29019 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:58:38.247979 29019 net.cpp:124] Setting up relu1
I0428 19:58:38.247990 29019 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:38.247994 29019 net.cpp:139] Memory required for data: 3522800
I0428 19:58:38.247999 29019 layer_factory.hpp:77] Creating layer ip2
I0428 19:58:38.248008 29019 net.cpp:86] Creating Layer ip2
I0428 19:58:38.248011 29019 net.cpp:408] ip2 <- ip1
I0428 19:58:38.248018 29019 net.cpp:382] ip2 -> ip2
I0428 19:58:38.248139 29019 net.cpp:124] Setting up ip2
I0428 19:58:38.248147 29019 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:38.248152 29019 net.cpp:139] Memory required for data: 3526800
I0428 19:58:38.248157 29019 layer_factory.hpp:77] Creating layer relu2
I0428 19:58:38.248163 29019 net.cpp:86] Creating Layer relu2
I0428 19:58:38.248167 29019 net.cpp:408] relu2 <- ip2
I0428 19:58:38.248172 29019 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:58:38.248356 29019 net.cpp:124] Setting up relu2
I0428 19:58:38.248368 29019 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:38.248371 29019 net.cpp:139] Memory required for data: 3530800
I0428 19:58:38.248383 29019 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:58:38.248389 29019 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:58:38.248394 29019 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:58:38.248399 29019 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:58:38.248419 29019 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:58:38.248461 29019 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:58:38.248471 29019 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:38.248474 29019 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:58:38.248478 29019 net.cpp:139] Memory required for data: 3538800
I0428 19:58:38.248481 29019 layer_factory.hpp:77] Creating layer accuracy
I0428 19:58:38.248487 29019 net.cpp:86] Creating Layer accuracy
I0428 19:58:38.248492 29019 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:58:38.248497 29019 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:58:38.248502 29019 net.cpp:382] accuracy -> accuracy
I0428 19:58:38.248510 29019 net.cpp:124] Setting up accuracy
I0428 19:58:38.248515 29019 net.cpp:131] Top shape: (1)
I0428 19:58:38.248518 29019 net.cpp:139] Memory required for data: 3538804
I0428 19:58:38.248522 29019 layer_factory.hpp:77] Creating layer loss
I0428 19:58:38.248527 29019 net.cpp:86] Creating Layer loss
I0428 19:58:38.248530 29019 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:58:38.248534 29019 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:58:38.248539 29019 net.cpp:382] loss -> loss
I0428 19:58:38.248546 29019 layer_factory.hpp:77] Creating layer loss
I0428 19:58:38.248883 29019 net.cpp:124] Setting up loss
I0428 19:58:38.248896 29019 net.cpp:131] Top shape: (1)
I0428 19:58:38.248901 29019 net.cpp:134]     with loss weight 1
I0428 19:58:38.248908 29019 net.cpp:139] Memory required for data: 3538808
I0428 19:58:38.248913 29019 net.cpp:200] loss needs backward computation.
I0428 19:58:38.248919 29019 net.cpp:202] accuracy does not need backward computation.
I0428 19:58:38.248922 29019 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:58:38.248932 29019 net.cpp:200] relu2 needs backward computation.
I0428 19:58:38.248941 29019 net.cpp:200] ip2 needs backward computation.
I0428 19:58:38.248944 29019 net.cpp:200] relu1 needs backward computation.
I0428 19:58:38.248949 29019 net.cpp:200] ip1 needs backward computation.
I0428 19:58:38.248952 29019 net.cpp:200] pool1 needs backward computation.
I0428 19:58:38.248956 29019 net.cpp:200] conv1 needs backward computation.
I0428 19:58:38.248960 29019 net.cpp:200] pool0 needs backward computation.
I0428 19:58:38.248965 29019 net.cpp:200] conv0 needs backward computation.
I0428 19:58:38.248968 29019 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:58:38.248973 29019 net.cpp:202] mnist does not need backward computation.
I0428 19:58:38.248977 29019 net.cpp:244] This network produces output accuracy
I0428 19:58:38.248981 29019 net.cpp:244] This network produces output loss
I0428 19:58:38.248992 29019 net.cpp:257] Network initialization done.
I0428 19:58:38.249037 29019 solver.cpp:56] Solver scaffolding done.
I0428 19:58:38.249357 29019 caffe.cpp:248] Starting Optimization
I0428 19:58:38.249364 29019 solver.cpp:273] Solving LeNet
I0428 19:58:38.249368 29019 solver.cpp:274] Learning Rate Policy: inv
I0428 19:58:38.249521 29019 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:58:38.253916 29019 blocking_queue.cpp:49] Waiting for data
I0428 19:58:38.324889 29026 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:38.325412 29019 solver.cpp:398]     Test net output #0: accuracy = 0.0885
I0428 19:58:38.325438 29019 solver.cpp:398]     Test net output #1: loss = 2.30172 (* 1 = 2.30172 loss)
I0428 19:58:38.328084 29019 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786874s/100 iters), loss = 2.30385
I0428 19:58:38.328114 29019 solver.cpp:238]     Train net output #0: loss = 2.30385 (* 1 = 2.30385 loss)
I0428 19:58:38.328128 29019 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:58:38.404783 29019 solver.cpp:219] Iteration 100 (1304.48 iter/s, 0.0766587s/100 iters), loss = 0.7259
I0428 19:58:38.404822 29019 solver.cpp:238]     Train net output #0: loss = 0.7259 (* 1 = 0.7259 loss)
I0428 19:58:38.404831 29019 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:58:38.480998 29019 solver.cpp:219] Iteration 200 (1312.8 iter/s, 0.0761733s/100 iters), loss = 0.348031
I0428 19:58:38.481046 29019 solver.cpp:238]     Train net output #0: loss = 0.348031 (* 1 = 0.348031 loss)
I0428 19:58:38.481055 29019 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:58:38.556716 29019 solver.cpp:219] Iteration 300 (1321.65 iter/s, 0.0756633s/100 iters), loss = 0.345749
I0428 19:58:38.556748 29019 solver.cpp:238]     Train net output #0: loss = 0.345749 (* 1 = 0.345749 loss)
I0428 19:58:38.556756 29019 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:58:38.631671 29019 solver.cpp:219] Iteration 400 (1334.83 iter/s, 0.0749158s/100 iters), loss = 0.206245
I0428 19:58:38.631698 29019 solver.cpp:238]     Train net output #0: loss = 0.206245 (* 1 = 0.206245 loss)
I0428 19:58:38.631705 29019 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:58:38.702594 29019 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:58:38.756070 29026 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:38.756574 29019 solver.cpp:398]     Test net output #0: accuracy = 0.9451
I0428 19:58:38.756608 29019 solver.cpp:398]     Test net output #1: loss = 0.186112 (* 1 = 0.186112 loss)
I0428 19:58:38.757352 29019 solver.cpp:219] Iteration 500 (795.907 iter/s, 0.125643s/100 iters), loss = 0.13187
I0428 19:58:38.757390 29019 solver.cpp:238]     Train net output #0: loss = 0.13187 (* 1 = 0.13187 loss)
I0428 19:58:38.757396 29019 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:58:38.844717 29019 solver.cpp:219] Iteration 600 (1145.11 iter/s, 0.0873279s/100 iters), loss = 0.164649
I0428 19:58:38.844758 29019 solver.cpp:238]     Train net output #0: loss = 0.164649 (* 1 = 0.164649 loss)
I0428 19:58:38.844766 29019 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:58:38.921178 29019 solver.cpp:219] Iteration 700 (1308.66 iter/s, 0.076414s/100 iters), loss = 0.244333
I0428 19:58:38.921210 29019 solver.cpp:238]     Train net output #0: loss = 0.244333 (* 1 = 0.244333 loss)
I0428 19:58:38.921217 29019 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:58:38.995056 29019 solver.cpp:219] Iteration 800 (1354.31 iter/s, 0.0738386s/100 iters), loss = 0.472407
I0428 19:58:38.995086 29019 solver.cpp:238]     Train net output #0: loss = 0.472408 (* 1 = 0.472408 loss)
I0428 19:58:38.995093 29019 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:58:39.070215 29019 solver.cpp:219] Iteration 900 (1331.19 iter/s, 0.0751206s/100 iters), loss = 0.232878
I0428 19:58:39.070255 29019 solver.cpp:238]     Train net output #0: loss = 0.232878 (* 1 = 0.232878 loss)
I0428 19:58:39.070262 29019 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:58:39.095297 29025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:39.144783 29019 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:58:39.145495 29019 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:58:39.146009 29019 solver.cpp:311] Iteration 1000, loss = 0.161238
I0428 19:58:39.146026 29019 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:58:39.192267 29026 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:58:39.192776 29019 solver.cpp:398]     Test net output #0: accuracy = 0.9665
I0428 19:58:39.192798 29019 solver.cpp:398]     Test net output #1: loss = 0.112237 (* 1 = 0.112237 loss)
I0428 19:58:39.192822 29019 solver.cpp:316] Optimization Done.
I0428 19:58:39.192838 29019 caffe.cpp:259] Optimization Done.
