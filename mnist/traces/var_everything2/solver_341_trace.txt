I0428 19:40:39.298223 24603 caffe.cpp:218] Using GPUs 0
I0428 19:40:39.337014 24603 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:39.775965 24603 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test341.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:39.776098 24603 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test341.prototxt
I0428 19:40:39.776461 24603 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:39.776492 24603 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:39.776574 24603 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:39.776639 24603 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:39.776722 24603 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:39.776757 24603 net.cpp:86] Creating Layer mnist
I0428 19:40:39.776763 24603 net.cpp:382] mnist -> data
I0428 19:40:39.776782 24603 net.cpp:382] mnist -> label
I0428 19:40:39.777761 24603 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:39.780131 24603 net.cpp:124] Setting up mnist
I0428 19:40:39.780163 24603 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:39.780169 24603 net.cpp:131] Top shape: 64 (64)
I0428 19:40:39.780172 24603 net.cpp:139] Memory required for data: 200960
I0428 19:40:39.780179 24603 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:39.780194 24603 net.cpp:86] Creating Layer conv0
I0428 19:40:39.780217 24603 net.cpp:408] conv0 <- data
I0428 19:40:39.780251 24603 net.cpp:382] conv0 -> conv0
I0428 19:40:40.009636 24603 net.cpp:124] Setting up conv0
I0428 19:40:40.009677 24603 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:40.009681 24603 net.cpp:139] Memory required for data: 495872
I0428 19:40:40.009696 24603 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:40.009708 24603 net.cpp:86] Creating Layer pool0
I0428 19:40:40.009712 24603 net.cpp:408] pool0 <- conv0
I0428 19:40:40.009733 24603 net.cpp:382] pool0 -> pool0
I0428 19:40:40.009780 24603 net.cpp:124] Setting up pool0
I0428 19:40:40.009786 24603 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:40.009789 24603 net.cpp:139] Memory required for data: 569600
I0428 19:40:40.009793 24603 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:40.009802 24603 net.cpp:86] Creating Layer conv1
I0428 19:40:40.009805 24603 net.cpp:408] conv1 <- pool0
I0428 19:40:40.009809 24603 net.cpp:382] conv1 -> conv1
I0428 19:40:40.011706 24603 net.cpp:124] Setting up conv1
I0428 19:40:40.011736 24603 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:40.011740 24603 net.cpp:139] Memory required for data: 651520
I0428 19:40:40.011765 24603 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:40.011775 24603 net.cpp:86] Creating Layer pool1
I0428 19:40:40.011780 24603 net.cpp:408] pool1 <- conv1
I0428 19:40:40.011785 24603 net.cpp:382] pool1 -> pool1
I0428 19:40:40.011827 24603 net.cpp:124] Setting up pool1
I0428 19:40:40.011833 24603 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:40.011837 24603 net.cpp:139] Memory required for data: 672000
I0428 19:40:40.011839 24603 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:40.011847 24603 net.cpp:86] Creating Layer ip1
I0428 19:40:40.011850 24603 net.cpp:408] ip1 <- pool1
I0428 19:40:40.011857 24603 net.cpp:382] ip1 -> ip1
I0428 19:40:40.012892 24603 net.cpp:124] Setting up ip1
I0428 19:40:40.012904 24603 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:40.012924 24603 net.cpp:139] Memory required for data: 678400
I0428 19:40:40.012933 24603 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:40.012938 24603 net.cpp:86] Creating Layer relu1
I0428 19:40:40.012943 24603 net.cpp:408] relu1 <- ip1
I0428 19:40:40.012948 24603 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:40.013129 24603 net.cpp:124] Setting up relu1
I0428 19:40:40.013139 24603 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:40.013142 24603 net.cpp:139] Memory required for data: 684800
I0428 19:40:40.013145 24603 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:40.013152 24603 net.cpp:86] Creating Layer ip2
I0428 19:40:40.013155 24603 net.cpp:408] ip2 <- ip1
I0428 19:40:40.013161 24603 net.cpp:382] ip2 -> ip2
I0428 19:40:40.013275 24603 net.cpp:124] Setting up ip2
I0428 19:40:40.013283 24603 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:40.013285 24603 net.cpp:139] Memory required for data: 697600
I0428 19:40:40.013291 24603 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:40.013299 24603 net.cpp:86] Creating Layer relu2
I0428 19:40:40.013303 24603 net.cpp:408] relu2 <- ip2
I0428 19:40:40.013306 24603 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:40.014091 24603 net.cpp:124] Setting up relu2
I0428 19:40:40.014103 24603 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:40:40.014122 24603 net.cpp:139] Memory required for data: 710400
I0428 19:40:40.014125 24603 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:40.014134 24603 net.cpp:86] Creating Layer ip3
I0428 19:40:40.014137 24603 net.cpp:408] ip3 <- ip2
I0428 19:40:40.014143 24603 net.cpp:382] ip3 -> ip3
I0428 19:40:40.014251 24603 net.cpp:124] Setting up ip3
I0428 19:40:40.014261 24603 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:40.014263 24603 net.cpp:139] Memory required for data: 712960
I0428 19:40:40.014271 24603 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:40.014276 24603 net.cpp:86] Creating Layer relu3
I0428 19:40:40.014279 24603 net.cpp:408] relu3 <- ip3
I0428 19:40:40.014283 24603 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:40.014469 24603 net.cpp:124] Setting up relu3
I0428 19:40:40.014478 24603 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:40.014482 24603 net.cpp:139] Memory required for data: 715520
I0428 19:40:40.014484 24603 layer_factory.hpp:77] Creating layer loss
I0428 19:40:40.014489 24603 net.cpp:86] Creating Layer loss
I0428 19:40:40.014492 24603 net.cpp:408] loss <- ip3
I0428 19:40:40.014497 24603 net.cpp:408] loss <- label
I0428 19:40:40.014502 24603 net.cpp:382] loss -> loss
I0428 19:40:40.014518 24603 layer_factory.hpp:77] Creating layer loss
I0428 19:40:40.014785 24603 net.cpp:124] Setting up loss
I0428 19:40:40.014794 24603 net.cpp:131] Top shape: (1)
I0428 19:40:40.014797 24603 net.cpp:134]     with loss weight 1
I0428 19:40:40.014811 24603 net.cpp:139] Memory required for data: 715524
I0428 19:40:40.014816 24603 net.cpp:200] loss needs backward computation.
I0428 19:40:40.014819 24603 net.cpp:200] relu3 needs backward computation.
I0428 19:40:40.014822 24603 net.cpp:200] ip3 needs backward computation.
I0428 19:40:40.014827 24603 net.cpp:200] relu2 needs backward computation.
I0428 19:40:40.014829 24603 net.cpp:200] ip2 needs backward computation.
I0428 19:40:40.014832 24603 net.cpp:200] relu1 needs backward computation.
I0428 19:40:40.014834 24603 net.cpp:200] ip1 needs backward computation.
I0428 19:40:40.014837 24603 net.cpp:200] pool1 needs backward computation.
I0428 19:40:40.014842 24603 net.cpp:200] conv1 needs backward computation.
I0428 19:40:40.014844 24603 net.cpp:200] pool0 needs backward computation.
I0428 19:40:40.014847 24603 net.cpp:200] conv0 needs backward computation.
I0428 19:40:40.014850 24603 net.cpp:202] mnist does not need backward computation.
I0428 19:40:40.014853 24603 net.cpp:244] This network produces output loss
I0428 19:40:40.014863 24603 net.cpp:257] Network initialization done.
I0428 19:40:40.015224 24603 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test341.prototxt
I0428 19:40:40.015269 24603 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:40.015360 24603 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:40.015444 24603 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:40.015487 24603 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:40.015501 24603 net.cpp:86] Creating Layer mnist
I0428 19:40:40.015507 24603 net.cpp:382] mnist -> data
I0428 19:40:40.015514 24603 net.cpp:382] mnist -> label
I0428 19:40:40.015601 24603 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:40.017863 24603 net.cpp:124] Setting up mnist
I0428 19:40:40.017892 24603 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:40.017897 24603 net.cpp:131] Top shape: 100 (100)
I0428 19:40:40.017899 24603 net.cpp:139] Memory required for data: 314000
I0428 19:40:40.017904 24603 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:40.017930 24603 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:40.017935 24603 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:40.017940 24603 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:40.017946 24603 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:40.018033 24603 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:40.018040 24603 net.cpp:131] Top shape: 100 (100)
I0428 19:40:40.018044 24603 net.cpp:131] Top shape: 100 (100)
I0428 19:40:40.018048 24603 net.cpp:139] Memory required for data: 314800
I0428 19:40:40.018050 24603 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:40.018060 24603 net.cpp:86] Creating Layer conv0
I0428 19:40:40.018064 24603 net.cpp:408] conv0 <- data
I0428 19:40:40.018070 24603 net.cpp:382] conv0 -> conv0
I0428 19:40:40.019704 24603 net.cpp:124] Setting up conv0
I0428 19:40:40.019733 24603 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:40.019737 24603 net.cpp:139] Memory required for data: 775600
I0428 19:40:40.019745 24603 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:40.019753 24603 net.cpp:86] Creating Layer pool0
I0428 19:40:40.019757 24603 net.cpp:408] pool0 <- conv0
I0428 19:40:40.019762 24603 net.cpp:382] pool0 -> pool0
I0428 19:40:40.019798 24603 net.cpp:124] Setting up pool0
I0428 19:40:40.019804 24603 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:40.019805 24603 net.cpp:139] Memory required for data: 890800
I0428 19:40:40.019809 24603 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:40.019817 24603 net.cpp:86] Creating Layer conv1
I0428 19:40:40.019820 24603 net.cpp:408] conv1 <- pool0
I0428 19:40:40.019825 24603 net.cpp:382] conv1 -> conv1
I0428 19:40:40.021751 24603 net.cpp:124] Setting up conv1
I0428 19:40:40.021765 24603 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:40.021770 24603 net.cpp:139] Memory required for data: 1018800
I0428 19:40:40.021778 24603 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:40.021785 24603 net.cpp:86] Creating Layer pool1
I0428 19:40:40.021790 24603 net.cpp:408] pool1 <- conv1
I0428 19:40:40.021796 24603 net.cpp:382] pool1 -> pool1
I0428 19:40:40.021836 24603 net.cpp:124] Setting up pool1
I0428 19:40:40.021842 24603 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:40.021844 24603 net.cpp:139] Memory required for data: 1050800
I0428 19:40:40.021848 24603 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:40.021855 24603 net.cpp:86] Creating Layer ip1
I0428 19:40:40.021858 24603 net.cpp:408] ip1 <- pool1
I0428 19:40:40.021865 24603 net.cpp:382] ip1 -> ip1
I0428 19:40:40.022014 24603 net.cpp:124] Setting up ip1
I0428 19:40:40.022023 24603 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:40.022037 24603 net.cpp:139] Memory required for data: 1060800
I0428 19:40:40.022045 24603 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:40.022050 24603 net.cpp:86] Creating Layer relu1
I0428 19:40:40.022054 24603 net.cpp:408] relu1 <- ip1
I0428 19:40:40.022058 24603 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:40.022220 24603 net.cpp:124] Setting up relu1
I0428 19:40:40.022230 24603 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:40.022234 24603 net.cpp:139] Memory required for data: 1070800
I0428 19:40:40.022238 24603 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:40.022243 24603 net.cpp:86] Creating Layer ip2
I0428 19:40:40.022248 24603 net.cpp:408] ip2 <- ip1
I0428 19:40:40.022253 24603 net.cpp:382] ip2 -> ip2
I0428 19:40:40.022434 24603 net.cpp:124] Setting up ip2
I0428 19:40:40.022444 24603 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:40.022446 24603 net.cpp:139] Memory required for data: 1090800
I0428 19:40:40.022451 24603 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:40.022456 24603 net.cpp:86] Creating Layer relu2
I0428 19:40:40.022459 24603 net.cpp:408] relu2 <- ip2
I0428 19:40:40.022465 24603 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:40.022660 24603 net.cpp:124] Setting up relu2
I0428 19:40:40.022670 24603 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:40:40.022673 24603 net.cpp:139] Memory required for data: 1110800
I0428 19:40:40.022676 24603 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:40.022683 24603 net.cpp:86] Creating Layer ip3
I0428 19:40:40.022686 24603 net.cpp:408] ip3 <- ip2
I0428 19:40:40.022691 24603 net.cpp:382] ip3 -> ip3
I0428 19:40:40.022809 24603 net.cpp:124] Setting up ip3
I0428 19:40:40.022816 24603 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:40.022819 24603 net.cpp:139] Memory required for data: 1114800
I0428 19:40:40.022826 24603 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:40.022842 24603 net.cpp:86] Creating Layer relu3
I0428 19:40:40.022845 24603 net.cpp:408] relu3 <- ip3
I0428 19:40:40.022850 24603 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:40.023699 24603 net.cpp:124] Setting up relu3
I0428 19:40:40.023710 24603 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:40.023730 24603 net.cpp:139] Memory required for data: 1118800
I0428 19:40:40.023733 24603 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:40.023741 24603 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:40.023744 24603 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:40.023751 24603 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:40.023756 24603 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:40.023828 24603 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:40.023833 24603 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:40.023836 24603 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:40.023839 24603 net.cpp:139] Memory required for data: 1126800
I0428 19:40:40.023843 24603 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:40.023847 24603 net.cpp:86] Creating Layer accuracy
I0428 19:40:40.023850 24603 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:40.023854 24603 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:40.023860 24603 net.cpp:382] accuracy -> accuracy
I0428 19:40:40.023869 24603 net.cpp:124] Setting up accuracy
I0428 19:40:40.023872 24603 net.cpp:131] Top shape: (1)
I0428 19:40:40.023875 24603 net.cpp:139] Memory required for data: 1126804
I0428 19:40:40.023879 24603 layer_factory.hpp:77] Creating layer loss
I0428 19:40:40.023883 24603 net.cpp:86] Creating Layer loss
I0428 19:40:40.023886 24603 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:40.023890 24603 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:40.023895 24603 net.cpp:382] loss -> loss
I0428 19:40:40.023901 24603 layer_factory.hpp:77] Creating layer loss
I0428 19:40:40.024140 24603 net.cpp:124] Setting up loss
I0428 19:40:40.024150 24603 net.cpp:131] Top shape: (1)
I0428 19:40:40.024153 24603 net.cpp:134]     with loss weight 1
I0428 19:40:40.024159 24603 net.cpp:139] Memory required for data: 1126808
I0428 19:40:40.024171 24603 net.cpp:200] loss needs backward computation.
I0428 19:40:40.024178 24603 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:40.024181 24603 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:40.024184 24603 net.cpp:200] relu3 needs backward computation.
I0428 19:40:40.024202 24603 net.cpp:200] ip3 needs backward computation.
I0428 19:40:40.024205 24603 net.cpp:200] relu2 needs backward computation.
I0428 19:40:40.024209 24603 net.cpp:200] ip2 needs backward computation.
I0428 19:40:40.024211 24603 net.cpp:200] relu1 needs backward computation.
I0428 19:40:40.024214 24603 net.cpp:200] ip1 needs backward computation.
I0428 19:40:40.024217 24603 net.cpp:200] pool1 needs backward computation.
I0428 19:40:40.024220 24603 net.cpp:200] conv1 needs backward computation.
I0428 19:40:40.024224 24603 net.cpp:200] pool0 needs backward computation.
I0428 19:40:40.024226 24603 net.cpp:200] conv0 needs backward computation.
I0428 19:40:40.024230 24603 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:40.024235 24603 net.cpp:202] mnist does not need backward computation.
I0428 19:40:40.024236 24603 net.cpp:244] This network produces output accuracy
I0428 19:40:40.024240 24603 net.cpp:244] This network produces output loss
I0428 19:40:40.024251 24603 net.cpp:257] Network initialization done.
I0428 19:40:40.024291 24603 solver.cpp:56] Solver scaffolding done.
I0428 19:40:40.024711 24603 caffe.cpp:248] Starting Optimization
I0428 19:40:40.024716 24603 solver.cpp:273] Solving LeNet
I0428 19:40:40.024719 24603 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:40.025563 24603 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:40.028252 24603 blocking_queue.cpp:49] Waiting for data
I0428 19:40:40.089646 24610 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:40.090080 24603 solver.cpp:398]     Test net output #0: accuracy = 0.071
I0428 19:40:40.090096 24603 solver.cpp:398]     Test net output #1: loss = 2.31828 (* 1 = 2.31828 loss)
I0428 19:40:40.092088 24603 solver.cpp:219] Iteration 0 (0 iter/s, 0.0673208s/100 iters), loss = 2.31305
I0428 19:40:40.092121 24603 solver.cpp:238]     Train net output #0: loss = 2.31305 (* 1 = 2.31305 loss)
I0428 19:40:40.092149 24603 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:40.163528 24603 solver.cpp:219] Iteration 100 (1400.65 iter/s, 0.0713954s/100 iters), loss = 1.2595
I0428 19:40:40.163568 24603 solver.cpp:238]     Train net output #0: loss = 1.2595 (* 1 = 1.2595 loss)
I0428 19:40:40.163573 24603 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:40.233990 24603 solver.cpp:219] Iteration 200 (1419.86 iter/s, 0.0704297s/100 iters), loss = 0.699577
I0428 19:40:40.234014 24603 solver.cpp:238]     Train net output #0: loss = 0.699577 (* 1 = 0.699577 loss)
I0428 19:40:40.234019 24603 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:40.304131 24603 solver.cpp:219] Iteration 300 (1426.38 iter/s, 0.0701073s/100 iters), loss = 0.643384
I0428 19:40:40.304170 24603 solver.cpp:238]     Train net output #0: loss = 0.643384 (* 1 = 0.643384 loss)
I0428 19:40:40.304177 24603 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:40.373092 24603 solver.cpp:219] Iteration 400 (1450.78 iter/s, 0.0689285s/100 iters), loss = 0.669273
I0428 19:40:40.373131 24603 solver.cpp:238]     Train net output #0: loss = 0.669273 (* 1 = 0.669273 loss)
I0428 19:40:40.373152 24603 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:40.445439 24603 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:40.498184 24610 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:40.498631 24603 solver.cpp:398]     Test net output #0: accuracy = 0.8407
I0428 19:40:40.498669 24603 solver.cpp:398]     Test net output #1: loss = 0.449633 (* 1 = 0.449633 loss)
I0428 19:40:40.499434 24603 solver.cpp:219] Iteration 500 (791.714 iter/s, 0.126308s/100 iters), loss = 0.54349
I0428 19:40:40.499472 24603 solver.cpp:238]     Train net output #0: loss = 0.54349 (* 1 = 0.54349 loss)
I0428 19:40:40.499495 24603 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:40.572542 24603 solver.cpp:219] Iteration 600 (1368.48 iter/s, 0.0730737s/100 iters), loss = 0.210098
I0428 19:40:40.572582 24603 solver.cpp:238]     Train net output #0: loss = 0.210098 (* 1 = 0.210098 loss)
I0428 19:40:40.572587 24603 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:40.644284 24603 solver.cpp:219] Iteration 700 (1394.89 iter/s, 0.0716903s/100 iters), loss = 0.434639
I0428 19:40:40.644323 24603 solver.cpp:238]     Train net output #0: loss = 0.434639 (* 1 = 0.434639 loss)
I0428 19:40:40.644330 24603 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:40.716864 24603 solver.cpp:219] Iteration 800 (1378.74 iter/s, 0.07253s/100 iters), loss = 0.364819
I0428 19:40:40.716912 24603 solver.cpp:238]     Train net output #0: loss = 0.364819 (* 1 = 0.364819 loss)
I0428 19:40:40.716919 24603 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:40.786379 24603 solver.cpp:219] Iteration 900 (1439.85 iter/s, 0.0694518s/100 iters), loss = 0.313341
I0428 19:40:40.786419 24603 solver.cpp:238]     Train net output #0: loss = 0.313341 (* 1 = 0.313341 loss)
I0428 19:40:40.786425 24603 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:40.810677 24609 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:40.857511 24603 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:40.858245 24603 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:40.858809 24603 solver.cpp:311] Iteration 1000, loss = 0.294552
I0428 19:40:40.858824 24603 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:40.933537 24610 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:40.934005 24603 solver.cpp:398]     Test net output #0: accuracy = 0.8672
I0428 19:40:40.934041 24603 solver.cpp:398]     Test net output #1: loss = 0.355796 (* 1 = 0.355796 loss)
I0428 19:40:40.934046 24603 solver.cpp:316] Optimization Done.
I0428 19:40:40.934063 24603 caffe.cpp:259] Optimization Done.
