I0428 19:47:58.728647 26372 caffe.cpp:218] Using GPUs 0
I0428 19:47:58.770171 26372 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:59.292798 26372 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test531.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:59.292942 26372 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test531.prototxt
I0428 19:47:59.293354 26372 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:59.293373 26372 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:59.293475 26372 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:59.293555 26372 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:59.293658 26372 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:59.293684 26372 net.cpp:86] Creating Layer mnist
I0428 19:47:59.293690 26372 net.cpp:382] mnist -> data
I0428 19:47:59.293712 26372 net.cpp:382] mnist -> label
I0428 19:47:59.294808 26372 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:59.297274 26372 net.cpp:124] Setting up mnist
I0428 19:47:59.297292 26372 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:59.297299 26372 net.cpp:131] Top shape: 64 (64)
I0428 19:47:59.297303 26372 net.cpp:139] Memory required for data: 200960
I0428 19:47:59.297310 26372 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:59.297325 26372 net.cpp:86] Creating Layer conv0
I0428 19:47:59.297348 26372 net.cpp:408] conv0 <- data
I0428 19:47:59.297363 26372 net.cpp:382] conv0 -> conv0
I0428 19:47:59.587800 26372 net.cpp:124] Setting up conv0
I0428 19:47:59.587828 26372 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:59.587832 26372 net.cpp:139] Memory required for data: 938240
I0428 19:47:59.587849 26372 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:59.587862 26372 net.cpp:86] Creating Layer pool0
I0428 19:47:59.587867 26372 net.cpp:408] pool0 <- conv0
I0428 19:47:59.587873 26372 net.cpp:382] pool0 -> pool0
I0428 19:47:59.587924 26372 net.cpp:124] Setting up pool0
I0428 19:47:59.587930 26372 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:59.587934 26372 net.cpp:139] Memory required for data: 1122560
I0428 19:47:59.587936 26372 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:59.587949 26372 net.cpp:86] Creating Layer conv1
I0428 19:47:59.587952 26372 net.cpp:408] conv1 <- pool0
I0428 19:47:59.587957 26372 net.cpp:382] conv1 -> conv1
I0428 19:47:59.589934 26372 net.cpp:124] Setting up conv1
I0428 19:47:59.589951 26372 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:59.589954 26372 net.cpp:139] Memory required for data: 1155328
I0428 19:47:59.589963 26372 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:59.589972 26372 net.cpp:86] Creating Layer pool1
I0428 19:47:59.589975 26372 net.cpp:408] pool1 <- conv1
I0428 19:47:59.589980 26372 net.cpp:382] pool1 -> pool1
I0428 19:47:59.590020 26372 net.cpp:124] Setting up pool1
I0428 19:47:59.590025 26372 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:59.590029 26372 net.cpp:139] Memory required for data: 1163520
I0428 19:47:59.590032 26372 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:59.590039 26372 net.cpp:86] Creating Layer ip1
I0428 19:47:59.590044 26372 net.cpp:408] ip1 <- pool1
I0428 19:47:59.590049 26372 net.cpp:382] ip1 -> ip1
I0428 19:47:59.590162 26372 net.cpp:124] Setting up ip1
I0428 19:47:59.590169 26372 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:59.590173 26372 net.cpp:139] Memory required for data: 1169920
I0428 19:47:59.590180 26372 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:59.590186 26372 net.cpp:86] Creating Layer relu1
I0428 19:47:59.590189 26372 net.cpp:408] relu1 <- ip1
I0428 19:47:59.590194 26372 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:59.590373 26372 net.cpp:124] Setting up relu1
I0428 19:47:59.590384 26372 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:59.590387 26372 net.cpp:139] Memory required for data: 1176320
I0428 19:47:59.590390 26372 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:59.590397 26372 net.cpp:86] Creating Layer ip2
I0428 19:47:59.590418 26372 net.cpp:408] ip2 <- ip1
I0428 19:47:59.590423 26372 net.cpp:382] ip2 -> ip2
I0428 19:47:59.590531 26372 net.cpp:124] Setting up ip2
I0428 19:47:59.590538 26372 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:59.590543 26372 net.cpp:139] Memory required for data: 1182720
I0428 19:47:59.590548 26372 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:59.590554 26372 net.cpp:86] Creating Layer relu2
I0428 19:47:59.590557 26372 net.cpp:408] relu2 <- ip2
I0428 19:47:59.590564 26372 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:59.591351 26372 net.cpp:124] Setting up relu2
I0428 19:47:59.591364 26372 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:47:59.591368 26372 net.cpp:139] Memory required for data: 1189120
I0428 19:47:59.591372 26372 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:59.591379 26372 net.cpp:86] Creating Layer ip3
I0428 19:47:59.591382 26372 net.cpp:408] ip3 <- ip2
I0428 19:47:59.591389 26372 net.cpp:382] ip3 -> ip3
I0428 19:47:59.591503 26372 net.cpp:124] Setting up ip3
I0428 19:47:59.591512 26372 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:59.591516 26372 net.cpp:139] Memory required for data: 1191680
I0428 19:47:59.591524 26372 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:59.591529 26372 net.cpp:86] Creating Layer relu3
I0428 19:47:59.591533 26372 net.cpp:408] relu3 <- ip3
I0428 19:47:59.591537 26372 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:59.591725 26372 net.cpp:124] Setting up relu3
I0428 19:47:59.591734 26372 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:59.591738 26372 net.cpp:139] Memory required for data: 1194240
I0428 19:47:59.591742 26372 layer_factory.hpp:77] Creating layer loss
I0428 19:47:59.591747 26372 net.cpp:86] Creating Layer loss
I0428 19:47:59.591751 26372 net.cpp:408] loss <- ip3
I0428 19:47:59.591755 26372 net.cpp:408] loss <- label
I0428 19:47:59.591763 26372 net.cpp:382] loss -> loss
I0428 19:47:59.591778 26372 layer_factory.hpp:77] Creating layer loss
I0428 19:47:59.592047 26372 net.cpp:124] Setting up loss
I0428 19:47:59.592057 26372 net.cpp:131] Top shape: (1)
I0428 19:47:59.592061 26372 net.cpp:134]     with loss weight 1
I0428 19:47:59.592075 26372 net.cpp:139] Memory required for data: 1194244
I0428 19:47:59.592078 26372 net.cpp:200] loss needs backward computation.
I0428 19:47:59.592082 26372 net.cpp:200] relu3 needs backward computation.
I0428 19:47:59.592085 26372 net.cpp:200] ip3 needs backward computation.
I0428 19:47:59.592088 26372 net.cpp:200] relu2 needs backward computation.
I0428 19:47:59.592092 26372 net.cpp:200] ip2 needs backward computation.
I0428 19:47:59.592094 26372 net.cpp:200] relu1 needs backward computation.
I0428 19:47:59.592097 26372 net.cpp:200] ip1 needs backward computation.
I0428 19:47:59.592100 26372 net.cpp:200] pool1 needs backward computation.
I0428 19:47:59.592103 26372 net.cpp:200] conv1 needs backward computation.
I0428 19:47:59.592106 26372 net.cpp:200] pool0 needs backward computation.
I0428 19:47:59.592109 26372 net.cpp:200] conv0 needs backward computation.
I0428 19:47:59.592113 26372 net.cpp:202] mnist does not need backward computation.
I0428 19:47:59.592116 26372 net.cpp:244] This network produces output loss
I0428 19:47:59.592126 26372 net.cpp:257] Network initialization done.
I0428 19:47:59.592478 26372 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test531.prototxt
I0428 19:47:59.592507 26372 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:59.592607 26372 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:59.592696 26372 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:59.592743 26372 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:59.592758 26372 net.cpp:86] Creating Layer mnist
I0428 19:47:59.592763 26372 net.cpp:382] mnist -> data
I0428 19:47:59.592772 26372 net.cpp:382] mnist -> label
I0428 19:47:59.592872 26372 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:59.594914 26372 net.cpp:124] Setting up mnist
I0428 19:47:59.594929 26372 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:59.594934 26372 net.cpp:131] Top shape: 100 (100)
I0428 19:47:59.594938 26372 net.cpp:139] Memory required for data: 314000
I0428 19:47:59.594941 26372 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:59.594949 26372 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:59.594954 26372 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:59.594959 26372 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:59.594965 26372 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:59.595048 26372 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:59.595055 26372 net.cpp:131] Top shape: 100 (100)
I0428 19:47:59.595059 26372 net.cpp:131] Top shape: 100 (100)
I0428 19:47:59.595062 26372 net.cpp:139] Memory required for data: 314800
I0428 19:47:59.595067 26372 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:59.595077 26372 net.cpp:86] Creating Layer conv0
I0428 19:47:59.595079 26372 net.cpp:408] conv0 <- data
I0428 19:47:59.595087 26372 net.cpp:382] conv0 -> conv0
I0428 19:47:59.596972 26372 net.cpp:124] Setting up conv0
I0428 19:47:59.596987 26372 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:59.596992 26372 net.cpp:139] Memory required for data: 1466800
I0428 19:47:59.597002 26372 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:59.597008 26372 net.cpp:86] Creating Layer pool0
I0428 19:47:59.597012 26372 net.cpp:408] pool0 <- conv0
I0428 19:47:59.597017 26372 net.cpp:382] pool0 -> pool0
I0428 19:47:59.597056 26372 net.cpp:124] Setting up pool0
I0428 19:47:59.597061 26372 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:59.597064 26372 net.cpp:139] Memory required for data: 1754800
I0428 19:47:59.597067 26372 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:59.597077 26372 net.cpp:86] Creating Layer conv1
I0428 19:47:59.597080 26372 net.cpp:408] conv1 <- pool0
I0428 19:47:59.597087 26372 net.cpp:382] conv1 -> conv1
I0428 19:47:59.599247 26372 net.cpp:124] Setting up conv1
I0428 19:47:59.599261 26372 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:59.599265 26372 net.cpp:139] Memory required for data: 1806000
I0428 19:47:59.599275 26372 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:59.599282 26372 net.cpp:86] Creating Layer pool1
I0428 19:47:59.599292 26372 net.cpp:408] pool1 <- conv1
I0428 19:47:59.599298 26372 net.cpp:382] pool1 -> pool1
I0428 19:47:59.599347 26372 net.cpp:124] Setting up pool1
I0428 19:47:59.599352 26372 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:59.599356 26372 net.cpp:139] Memory required for data: 1818800
I0428 19:47:59.599359 26372 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:59.599369 26372 net.cpp:86] Creating Layer ip1
I0428 19:47:59.599372 26372 net.cpp:408] ip1 <- pool1
I0428 19:47:59.599378 26372 net.cpp:382] ip1 -> ip1
I0428 19:47:59.599491 26372 net.cpp:124] Setting up ip1
I0428 19:47:59.599500 26372 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:59.599514 26372 net.cpp:139] Memory required for data: 1828800
I0428 19:47:59.599522 26372 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:59.599529 26372 net.cpp:86] Creating Layer relu1
I0428 19:47:59.599531 26372 net.cpp:408] relu1 <- ip1
I0428 19:47:59.599536 26372 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:59.599725 26372 net.cpp:124] Setting up relu1
I0428 19:47:59.599735 26372 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:59.599738 26372 net.cpp:139] Memory required for data: 1838800
I0428 19:47:59.599741 26372 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:59.599761 26372 net.cpp:86] Creating Layer ip2
I0428 19:47:59.599766 26372 net.cpp:408] ip2 <- ip1
I0428 19:47:59.599771 26372 net.cpp:382] ip2 -> ip2
I0428 19:47:59.599884 26372 net.cpp:124] Setting up ip2
I0428 19:47:59.599892 26372 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:59.599895 26372 net.cpp:139] Memory required for data: 1848800
I0428 19:47:59.599900 26372 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:59.599912 26372 net.cpp:86] Creating Layer relu2
I0428 19:47:59.599916 26372 net.cpp:408] relu2 <- ip2
I0428 19:47:59.599921 26372 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:59.600085 26372 net.cpp:124] Setting up relu2
I0428 19:47:59.600095 26372 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:47:59.600098 26372 net.cpp:139] Memory required for data: 1858800
I0428 19:47:59.600107 26372 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:59.600114 26372 net.cpp:86] Creating Layer ip3
I0428 19:47:59.600118 26372 net.cpp:408] ip3 <- ip2
I0428 19:47:59.600134 26372 net.cpp:382] ip3 -> ip3
I0428 19:47:59.600240 26372 net.cpp:124] Setting up ip3
I0428 19:47:59.600247 26372 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:59.600257 26372 net.cpp:139] Memory required for data: 1862800
I0428 19:47:59.600265 26372 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:59.600270 26372 net.cpp:86] Creating Layer relu3
I0428 19:47:59.600272 26372 net.cpp:408] relu3 <- ip3
I0428 19:47:59.600280 26372 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:59.601176 26372 net.cpp:124] Setting up relu3
I0428 19:47:59.601189 26372 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:59.601192 26372 net.cpp:139] Memory required for data: 1866800
I0428 19:47:59.601197 26372 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:59.601202 26372 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:59.601207 26372 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:59.601212 26372 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:59.601217 26372 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:59.601263 26372 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:59.601269 26372 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:59.601272 26372 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:59.601275 26372 net.cpp:139] Memory required for data: 1874800
I0428 19:47:59.601279 26372 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:59.601290 26372 net.cpp:86] Creating Layer accuracy
I0428 19:47:59.601294 26372 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:59.601299 26372 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:59.601305 26372 net.cpp:382] accuracy -> accuracy
I0428 19:47:59.601316 26372 net.cpp:124] Setting up accuracy
I0428 19:47:59.601321 26372 net.cpp:131] Top shape: (1)
I0428 19:47:59.601325 26372 net.cpp:139] Memory required for data: 1874804
I0428 19:47:59.601327 26372 layer_factory.hpp:77] Creating layer loss
I0428 19:47:59.601331 26372 net.cpp:86] Creating Layer loss
I0428 19:47:59.601336 26372 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:59.601344 26372 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:59.601349 26372 net.cpp:382] loss -> loss
I0428 19:47:59.601356 26372 layer_factory.hpp:77] Creating layer loss
I0428 19:47:59.601605 26372 net.cpp:124] Setting up loss
I0428 19:47:59.601615 26372 net.cpp:131] Top shape: (1)
I0428 19:47:59.601625 26372 net.cpp:134]     with loss weight 1
I0428 19:47:59.601631 26372 net.cpp:139] Memory required for data: 1874808
I0428 19:47:59.601645 26372 net.cpp:200] loss needs backward computation.
I0428 19:47:59.601650 26372 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:59.601655 26372 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:59.601658 26372 net.cpp:200] relu3 needs backward computation.
I0428 19:47:59.601661 26372 net.cpp:200] ip3 needs backward computation.
I0428 19:47:59.601665 26372 net.cpp:200] relu2 needs backward computation.
I0428 19:47:59.601666 26372 net.cpp:200] ip2 needs backward computation.
I0428 19:47:59.601670 26372 net.cpp:200] relu1 needs backward computation.
I0428 19:47:59.601672 26372 net.cpp:200] ip1 needs backward computation.
I0428 19:47:59.601675 26372 net.cpp:200] pool1 needs backward computation.
I0428 19:47:59.601678 26372 net.cpp:200] conv1 needs backward computation.
I0428 19:47:59.601681 26372 net.cpp:200] pool0 needs backward computation.
I0428 19:47:59.601685 26372 net.cpp:200] conv0 needs backward computation.
I0428 19:47:59.601688 26372 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:59.601692 26372 net.cpp:202] mnist does not need backward computation.
I0428 19:47:59.601696 26372 net.cpp:244] This network produces output accuracy
I0428 19:47:59.601698 26372 net.cpp:244] This network produces output loss
I0428 19:47:59.601711 26372 net.cpp:257] Network initialization done.
I0428 19:47:59.601753 26372 solver.cpp:56] Solver scaffolding done.
I0428 19:47:59.602104 26372 caffe.cpp:248] Starting Optimization
I0428 19:47:59.602113 26372 solver.cpp:273] Solving LeNet
I0428 19:47:59.602115 26372 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:59.602946 26372 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:59.606575 26372 blocking_queue.cpp:49] Waiting for data
I0428 19:47:59.676671 26379 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:59.677167 26372 solver.cpp:398]     Test net output #0: accuracy = 0.1023
I0428 19:47:59.677189 26372 solver.cpp:398]     Test net output #1: loss = 2.333 (* 1 = 2.333 loss)
I0428 19:47:59.678980 26372 solver.cpp:219] Iteration 0 (-1.63884e-33 iter/s, 0.076836s/100 iters), loss = 2.33326
I0428 19:47:59.679031 26372 solver.cpp:238]     Train net output #0: loss = 2.33326 (* 1 = 2.33326 loss)
I0428 19:47:59.679045 26372 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:59.759919 26372 solver.cpp:219] Iteration 100 (1236.21 iter/s, 0.0808926s/100 iters), loss = 1.14587
I0428 19:47:59.759946 26372 solver.cpp:238]     Train net output #0: loss = 1.14587 (* 1 = 1.14587 loss)
I0428 19:47:59.759953 26372 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:59.838099 26372 solver.cpp:219] Iteration 200 (1279.85 iter/s, 0.0781343s/100 iters), loss = 0.481517
I0428 19:47:59.838147 26372 solver.cpp:238]     Train net output #0: loss = 0.481517 (* 1 = 0.481517 loss)
I0428 19:47:59.838160 26372 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:59.927331 26372 solver.cpp:219] Iteration 300 (1121.39 iter/s, 0.0891751s/100 iters), loss = 0.46538
I0428 19:47:59.927368 26372 solver.cpp:238]     Train net output #0: loss = 0.46538 (* 1 = 0.46538 loss)
I0428 19:47:59.927377 26372 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:00.002912 26372 solver.cpp:219] Iteration 400 (1323.88 iter/s, 0.0755354s/100 iters), loss = 0.465162
I0428 19:48:00.002943 26372 solver.cpp:238]     Train net output #0: loss = 0.465162 (* 1 = 0.465162 loss)
I0428 19:48:00.002951 26372 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:00.078449 26372 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:00.156095 26379 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:00.156780 26372 solver.cpp:398]     Test net output #0: accuracy = 0.8952
I0428 19:48:00.156818 26372 solver.cpp:398]     Test net output #1: loss = 0.331161 (* 1 = 0.331161 loss)
I0428 19:48:00.157881 26372 solver.cpp:219] Iteration 500 (645.486 iter/s, 0.154922s/100 iters), loss = 0.504122
I0428 19:48:00.157915 26372 solver.cpp:238]     Train net output #0: loss = 0.504122 (* 1 = 0.504122 loss)
I0428 19:48:00.157958 26372 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:00.235838 26372 solver.cpp:219] Iteration 600 (1283.45 iter/s, 0.0779153s/100 iters), loss = 0.29361
I0428 19:48:00.235869 26372 solver.cpp:238]     Train net output #0: loss = 0.29361 (* 1 = 0.29361 loss)
I0428 19:48:00.235877 26372 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:00.310055 26372 solver.cpp:219] Iteration 700 (1348.15 iter/s, 0.0741755s/100 iters), loss = 0.460978
I0428 19:48:00.310086 26372 solver.cpp:238]     Train net output #0: loss = 0.460978 (* 1 = 0.460978 loss)
I0428 19:48:00.310094 26372 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:00.385978 26372 solver.cpp:219] Iteration 800 (1317.9 iter/s, 0.0758784s/100 iters), loss = 0.464447
I0428 19:48:00.386018 26372 solver.cpp:238]     Train net output #0: loss = 0.464447 (* 1 = 0.464447 loss)
I0428 19:48:00.386028 26372 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:00.460193 26372 solver.cpp:219] Iteration 900 (1348.32 iter/s, 0.0741663s/100 iters), loss = 0.255293
I0428 19:48:00.460224 26372 solver.cpp:238]     Train net output #0: loss = 0.255293 (* 1 = 0.255293 loss)
I0428 19:48:00.460232 26372 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:00.485015 26378 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:00.533071 26372 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:00.533756 26372 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:00.534189 26372 solver.cpp:311] Iteration 1000, loss = 0.236191
I0428 19:48:00.534206 26372 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:00.609524 26379 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:00.611693 26372 solver.cpp:398]     Test net output #0: accuracy = 0.927
I0428 19:48:00.611737 26372 solver.cpp:398]     Test net output #1: loss = 0.233593 (* 1 = 0.233593 loss)
I0428 19:48:00.611748 26372 solver.cpp:316] Optimization Done.
I0428 19:48:00.611754 26372 caffe.cpp:259] Optimization Done.
