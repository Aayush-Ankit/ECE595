I0428 20:25:36.165689  2631 caffe.cpp:218] Using GPUs 0
I0428 20:25:36.203215  2631 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:25:36.715355  2631 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1457.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:25:36.715494  2631 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1457.prototxt
I0428 20:25:36.715914  2631 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:25:36.715934  2631 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:25:36.716035  2631 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:36.716119  2631 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:36.716219  2631 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:25:36.716243  2631 net.cpp:86] Creating Layer mnist
I0428 20:25:36.716253  2631 net.cpp:382] mnist -> data
I0428 20:25:36.716275  2631 net.cpp:382] mnist -> label
I0428 20:25:36.717376  2631 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:25:36.719812  2631 net.cpp:124] Setting up mnist
I0428 20:25:36.719831  2631 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:25:36.719838  2631 net.cpp:131] Top shape: 64 (64)
I0428 20:25:36.719841  2631 net.cpp:139] Memory required for data: 200960
I0428 20:25:36.719848  2631 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:36.719866  2631 net.cpp:86] Creating Layer conv0
I0428 20:25:36.719887  2631 net.cpp:408] conv0 <- data
I0428 20:25:36.719900  2631 net.cpp:382] conv0 -> conv0
I0428 20:25:37.005655  2631 net.cpp:124] Setting up conv0
I0428 20:25:37.005681  2631 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:25:37.005686  2631 net.cpp:139] Memory required for data: 14946560
I0428 20:25:37.005700  2631 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:37.005713  2631 net.cpp:86] Creating Layer pool0
I0428 20:25:37.005717  2631 net.cpp:408] pool0 <- conv0
I0428 20:25:37.005723  2631 net.cpp:382] pool0 -> pool0
I0428 20:25:37.005770  2631 net.cpp:124] Setting up pool0
I0428 20:25:37.005776  2631 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:25:37.005779  2631 net.cpp:139] Memory required for data: 18632960
I0428 20:25:37.005782  2631 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:37.005794  2631 net.cpp:86] Creating Layer conv1
I0428 20:25:37.005796  2631 net.cpp:408] conv1 <- pool0
I0428 20:25:37.005801  2631 net.cpp:382] conv1 -> conv1
I0428 20:25:37.008514  2631 net.cpp:124] Setting up conv1
I0428 20:25:37.008529  2631 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:25:37.008533  2631 net.cpp:139] Memory required for data: 18665728
I0428 20:25:37.008543  2631 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:37.008550  2631 net.cpp:86] Creating Layer pool1
I0428 20:25:37.008553  2631 net.cpp:408] pool1 <- conv1
I0428 20:25:37.008558  2631 net.cpp:382] pool1 -> pool1
I0428 20:25:37.008595  2631 net.cpp:124] Setting up pool1
I0428 20:25:37.008600  2631 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:25:37.008604  2631 net.cpp:139] Memory required for data: 18673920
I0428 20:25:37.008606  2631 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:37.008613  2631 net.cpp:86] Creating Layer ip1
I0428 20:25:37.008616  2631 net.cpp:408] ip1 <- pool1
I0428 20:25:37.008621  2631 net.cpp:382] ip1 -> ip1
I0428 20:25:37.008719  2631 net.cpp:124] Setting up ip1
I0428 20:25:37.008728  2631 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:37.008731  2631 net.cpp:139] Memory required for data: 18676480
I0428 20:25:37.008738  2631 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:37.008744  2631 net.cpp:86] Creating Layer relu1
I0428 20:25:37.008747  2631 net.cpp:408] relu1 <- ip1
I0428 20:25:37.008751  2631 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:37.008960  2631 net.cpp:124] Setting up relu1
I0428 20:25:37.008971  2631 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:37.008975  2631 net.cpp:139] Memory required for data: 18679040
I0428 20:25:37.008978  2631 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:37.008985  2631 net.cpp:86] Creating Layer ip2
I0428 20:25:37.008988  2631 net.cpp:408] ip2 <- ip1
I0428 20:25:37.008994  2631 net.cpp:382] ip2 -> ip2
I0428 20:25:37.009093  2631 net.cpp:124] Setting up ip2
I0428 20:25:37.009099  2631 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:37.009104  2631 net.cpp:139] Memory required for data: 18681600
I0428 20:25:37.009109  2631 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:37.009115  2631 net.cpp:86] Creating Layer relu2
I0428 20:25:37.009119  2631 net.cpp:408] relu2 <- ip2
I0428 20:25:37.009124  2631 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:37.009974  2631 net.cpp:124] Setting up relu2
I0428 20:25:37.009985  2631 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:37.009989  2631 net.cpp:139] Memory required for data: 18684160
I0428 20:25:37.009992  2631 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:37.009999  2631 net.cpp:86] Creating Layer ip3
I0428 20:25:37.010002  2631 net.cpp:408] ip3 <- ip2
I0428 20:25:37.010007  2631 net.cpp:382] ip3 -> ip3
I0428 20:25:37.010098  2631 net.cpp:124] Setting up ip3
I0428 20:25:37.010105  2631 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:37.010108  2631 net.cpp:139] Memory required for data: 18686720
I0428 20:25:37.010116  2631 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:37.010121  2631 net.cpp:86] Creating Layer relu3
I0428 20:25:37.010124  2631 net.cpp:408] relu3 <- ip3
I0428 20:25:37.010128  2631 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:37.010313  2631 net.cpp:124] Setting up relu3
I0428 20:25:37.010321  2631 net.cpp:131] Top shape: 64 10 (640)
I0428 20:25:37.010325  2631 net.cpp:139] Memory required for data: 18689280
I0428 20:25:37.010329  2631 layer_factory.hpp:77] Creating layer loss
I0428 20:25:37.010334  2631 net.cpp:86] Creating Layer loss
I0428 20:25:37.010337  2631 net.cpp:408] loss <- ip3
I0428 20:25:37.010341  2631 net.cpp:408] loss <- label
I0428 20:25:37.010346  2631 net.cpp:382] loss -> loss
I0428 20:25:37.010360  2631 layer_factory.hpp:77] Creating layer loss
I0428 20:25:37.010627  2631 net.cpp:124] Setting up loss
I0428 20:25:37.010634  2631 net.cpp:131] Top shape: (1)
I0428 20:25:37.010638  2631 net.cpp:134]     with loss weight 1
I0428 20:25:37.010651  2631 net.cpp:139] Memory required for data: 18689284
I0428 20:25:37.010655  2631 net.cpp:200] loss needs backward computation.
I0428 20:25:37.010658  2631 net.cpp:200] relu3 needs backward computation.
I0428 20:25:37.010661  2631 net.cpp:200] ip3 needs backward computation.
I0428 20:25:37.010664  2631 net.cpp:200] relu2 needs backward computation.
I0428 20:25:37.010668  2631 net.cpp:200] ip2 needs backward computation.
I0428 20:25:37.010670  2631 net.cpp:200] relu1 needs backward computation.
I0428 20:25:37.010673  2631 net.cpp:200] ip1 needs backward computation.
I0428 20:25:37.010676  2631 net.cpp:200] pool1 needs backward computation.
I0428 20:25:37.010679  2631 net.cpp:200] conv1 needs backward computation.
I0428 20:25:37.010682  2631 net.cpp:200] pool0 needs backward computation.
I0428 20:25:37.010685  2631 net.cpp:200] conv0 needs backward computation.
I0428 20:25:37.010689  2631 net.cpp:202] mnist does not need backward computation.
I0428 20:25:37.010692  2631 net.cpp:244] This network produces output loss
I0428 20:25:37.010701  2631 net.cpp:257] Network initialization done.
I0428 20:25:37.011045  2631 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1457.prototxt
I0428 20:25:37.011090  2631 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:25:37.011198  2631 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:25:37.011281  2631 layer_factory.hpp:77] Creating layer mnist
I0428 20:25:37.011327  2631 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:25:37.011339  2631 net.cpp:86] Creating Layer mnist
I0428 20:25:37.011345  2631 net.cpp:382] mnist -> data
I0428 20:25:37.011353  2631 net.cpp:382] mnist -> label
I0428 20:25:37.011435  2631 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:25:37.013422  2631 net.cpp:124] Setting up mnist
I0428 20:25:37.013435  2631 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:25:37.013458  2631 net.cpp:131] Top shape: 100 (100)
I0428 20:25:37.013461  2631 net.cpp:139] Memory required for data: 314000
I0428 20:25:37.013466  2631 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:25:37.013473  2631 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:25:37.013476  2631 net.cpp:408] label_mnist_1_split <- label
I0428 20:25:37.013483  2631 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:25:37.013489  2631 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:25:37.013574  2631 net.cpp:124] Setting up label_mnist_1_split
I0428 20:25:37.013582  2631 net.cpp:131] Top shape: 100 (100)
I0428 20:25:37.013586  2631 net.cpp:131] Top shape: 100 (100)
I0428 20:25:37.013589  2631 net.cpp:139] Memory required for data: 314800
I0428 20:25:37.013592  2631 layer_factory.hpp:77] Creating layer conv0
I0428 20:25:37.013602  2631 net.cpp:86] Creating Layer conv0
I0428 20:25:37.013604  2631 net.cpp:408] conv0 <- data
I0428 20:25:37.013610  2631 net.cpp:382] conv0 -> conv0
I0428 20:25:37.015254  2631 net.cpp:124] Setting up conv0
I0428 20:25:37.015269  2631 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:25:37.015288  2631 net.cpp:139] Memory required for data: 23354800
I0428 20:25:37.015297  2631 layer_factory.hpp:77] Creating layer pool0
I0428 20:25:37.015303  2631 net.cpp:86] Creating Layer pool0
I0428 20:25:37.015307  2631 net.cpp:408] pool0 <- conv0
I0428 20:25:37.015317  2631 net.cpp:382] pool0 -> pool0
I0428 20:25:37.015365  2631 net.cpp:124] Setting up pool0
I0428 20:25:37.015372  2631 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:25:37.015373  2631 net.cpp:139] Memory required for data: 29114800
I0428 20:25:37.015377  2631 layer_factory.hpp:77] Creating layer conv1
I0428 20:25:37.015386  2631 net.cpp:86] Creating Layer conv1
I0428 20:25:37.015389  2631 net.cpp:408] conv1 <- pool0
I0428 20:25:37.015394  2631 net.cpp:382] conv1 -> conv1
I0428 20:25:37.016963  2631 net.cpp:124] Setting up conv1
I0428 20:25:37.016978  2631 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:25:37.016996  2631 net.cpp:139] Memory required for data: 29166000
I0428 20:25:37.017005  2631 layer_factory.hpp:77] Creating layer pool1
I0428 20:25:37.017014  2631 net.cpp:86] Creating Layer pool1
I0428 20:25:37.017016  2631 net.cpp:408] pool1 <- conv1
I0428 20:25:37.017022  2631 net.cpp:382] pool1 -> pool1
I0428 20:25:37.017061  2631 net.cpp:124] Setting up pool1
I0428 20:25:37.017067  2631 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:25:37.017071  2631 net.cpp:139] Memory required for data: 29178800
I0428 20:25:37.017073  2631 layer_factory.hpp:77] Creating layer ip1
I0428 20:25:37.017079  2631 net.cpp:86] Creating Layer ip1
I0428 20:25:37.017083  2631 net.cpp:408] ip1 <- pool1
I0428 20:25:37.017089  2631 net.cpp:382] ip1 -> ip1
I0428 20:25:37.017220  2631 net.cpp:124] Setting up ip1
I0428 20:25:37.017228  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.017261  2631 net.cpp:139] Memory required for data: 29182800
I0428 20:25:37.017271  2631 layer_factory.hpp:77] Creating layer relu1
I0428 20:25:37.017277  2631 net.cpp:86] Creating Layer relu1
I0428 20:25:37.017282  2631 net.cpp:408] relu1 <- ip1
I0428 20:25:37.017288  2631 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:25:37.017467  2631 net.cpp:124] Setting up relu1
I0428 20:25:37.017475  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.017478  2631 net.cpp:139] Memory required for data: 29186800
I0428 20:25:37.017482  2631 layer_factory.hpp:77] Creating layer ip2
I0428 20:25:37.017489  2631 net.cpp:86] Creating Layer ip2
I0428 20:25:37.017493  2631 net.cpp:408] ip2 <- ip1
I0428 20:25:37.017498  2631 net.cpp:382] ip2 -> ip2
I0428 20:25:37.017596  2631 net.cpp:124] Setting up ip2
I0428 20:25:37.017603  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.017607  2631 net.cpp:139] Memory required for data: 29190800
I0428 20:25:37.017612  2631 layer_factory.hpp:77] Creating layer relu2
I0428 20:25:37.017618  2631 net.cpp:86] Creating Layer relu2
I0428 20:25:37.017621  2631 net.cpp:408] relu2 <- ip2
I0428 20:25:37.017627  2631 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:25:37.017802  2631 net.cpp:124] Setting up relu2
I0428 20:25:37.017812  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.017814  2631 net.cpp:139] Memory required for data: 29194800
I0428 20:25:37.017817  2631 layer_factory.hpp:77] Creating layer ip3
I0428 20:25:37.017838  2631 net.cpp:86] Creating Layer ip3
I0428 20:25:37.017843  2631 net.cpp:408] ip3 <- ip2
I0428 20:25:37.017846  2631 net.cpp:382] ip3 -> ip3
I0428 20:25:37.017982  2631 net.cpp:124] Setting up ip3
I0428 20:25:37.017989  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.017992  2631 net.cpp:139] Memory required for data: 29198800
I0428 20:25:37.018002  2631 layer_factory.hpp:77] Creating layer relu3
I0428 20:25:37.018007  2631 net.cpp:86] Creating Layer relu3
I0428 20:25:37.018012  2631 net.cpp:408] relu3 <- ip3
I0428 20:25:37.018015  2631 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:25:37.018867  2631 net.cpp:124] Setting up relu3
I0428 20:25:37.018893  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.018898  2631 net.cpp:139] Memory required for data: 29202800
I0428 20:25:37.018901  2631 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:25:37.018908  2631 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:25:37.018913  2631 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:25:37.018918  2631 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:25:37.018924  2631 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:25:37.018962  2631 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:25:37.018967  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.018971  2631 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:25:37.018975  2631 net.cpp:139] Memory required for data: 29210800
I0428 20:25:37.018977  2631 layer_factory.hpp:77] Creating layer accuracy
I0428 20:25:37.018983  2631 net.cpp:86] Creating Layer accuracy
I0428 20:25:37.018986  2631 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:25:37.018990  2631 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:25:37.018996  2631 net.cpp:382] accuracy -> accuracy
I0428 20:25:37.019001  2631 net.cpp:124] Setting up accuracy
I0428 20:25:37.019006  2631 net.cpp:131] Top shape: (1)
I0428 20:25:37.019016  2631 net.cpp:139] Memory required for data: 29210804
I0428 20:25:37.019018  2631 layer_factory.hpp:77] Creating layer loss
I0428 20:25:37.019023  2631 net.cpp:86] Creating Layer loss
I0428 20:25:37.019026  2631 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:25:37.019035  2631 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:25:37.019042  2631 net.cpp:382] loss -> loss
I0428 20:25:37.019048  2631 layer_factory.hpp:77] Creating layer loss
I0428 20:25:37.019294  2631 net.cpp:124] Setting up loss
I0428 20:25:37.019301  2631 net.cpp:131] Top shape: (1)
I0428 20:25:37.019305  2631 net.cpp:134]     with loss weight 1
I0428 20:25:37.019320  2631 net.cpp:139] Memory required for data: 29210808
I0428 20:25:37.019325  2631 net.cpp:200] loss needs backward computation.
I0428 20:25:37.019327  2631 net.cpp:202] accuracy does not need backward computation.
I0428 20:25:37.019331  2631 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:25:37.019335  2631 net.cpp:200] relu3 needs backward computation.
I0428 20:25:37.019337  2631 net.cpp:200] ip3 needs backward computation.
I0428 20:25:37.019356  2631 net.cpp:200] relu2 needs backward computation.
I0428 20:25:37.019358  2631 net.cpp:200] ip2 needs backward computation.
I0428 20:25:37.019362  2631 net.cpp:200] relu1 needs backward computation.
I0428 20:25:37.019366  2631 net.cpp:200] ip1 needs backward computation.
I0428 20:25:37.019368  2631 net.cpp:200] pool1 needs backward computation.
I0428 20:25:37.019371  2631 net.cpp:200] conv1 needs backward computation.
I0428 20:25:37.019376  2631 net.cpp:200] pool0 needs backward computation.
I0428 20:25:37.019378  2631 net.cpp:200] conv0 needs backward computation.
I0428 20:25:37.019381  2631 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:25:37.019385  2631 net.cpp:202] mnist does not need backward computation.
I0428 20:25:37.019388  2631 net.cpp:244] This network produces output accuracy
I0428 20:25:37.019392  2631 net.cpp:244] This network produces output loss
I0428 20:25:37.019403  2631 net.cpp:257] Network initialization done.
I0428 20:25:37.019445  2631 solver.cpp:56] Solver scaffolding done.
I0428 20:25:37.019855  2631 caffe.cpp:248] Starting Optimization
I0428 20:25:37.019861  2631 solver.cpp:273] Solving LeNet
I0428 20:25:37.019865  2631 solver.cpp:274] Learning Rate Policy: inv
I0428 20:25:37.020716  2631 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:25:37.115514  2639 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:37.117866  2631 solver.cpp:398]     Test net output #0: accuracy = 0.1028
I0428 20:25:37.117900  2631 solver.cpp:398]     Test net output #1: loss = 2.37557 (* 1 = 2.37557 loss)
I0428 20:25:37.122215  2631 solver.cpp:219] Iteration 0 (0 iter/s, 0.102302s/100 iters), loss = 2.43931
I0428 20:25:37.122253  2631 solver.cpp:238]     Train net output #0: loss = 2.43931 (* 1 = 2.43931 loss)
I0428 20:25:37.122264  2631 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:25:37.327498  2631 solver.cpp:219] Iteration 100 (487.236 iter/s, 0.205239s/100 iters), loss = 1.00494
I0428 20:25:37.327534  2631 solver.cpp:238]     Train net output #0: loss = 1.00494 (* 1 = 1.00494 loss)
I0428 20:25:37.327544  2631 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:25:37.545765  2631 solver.cpp:219] Iteration 200 (458.265 iter/s, 0.218214s/100 iters), loss = 0.665588
I0428 20:25:37.545804  2631 solver.cpp:238]     Train net output #0: loss = 0.665588 (* 1 = 0.665588 loss)
I0428 20:25:37.545812  2631 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:25:37.764434  2631 solver.cpp:219] Iteration 300 (457.428 iter/s, 0.218614s/100 iters), loss = 0.488937
I0428 20:25:37.764484  2631 solver.cpp:238]     Train net output #0: loss = 0.488937 (* 1 = 0.488937 loss)
I0428 20:25:37.764497  2631 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:25:37.978886  2631 solver.cpp:219] Iteration 400 (466.44 iter/s, 0.21439s/100 iters), loss = 0.294893
I0428 20:25:37.978919  2631 solver.cpp:238]     Train net output #0: loss = 0.294893 (* 1 = 0.294893 loss)
I0428 20:25:37.978929  2631 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:25:38.190106  2631 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:25:38.288106  2639 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:38.291600  2631 solver.cpp:398]     Test net output #0: accuracy = 0.9001
I0428 20:25:38.291626  2631 solver.cpp:398]     Test net output #1: loss = 0.323745 (* 1 = 0.323745 loss)
I0428 20:25:38.293534  2631 solver.cpp:219] Iteration 500 (317.871 iter/s, 0.314593s/100 iters), loss = 0.250396
I0428 20:25:38.293561  2631 solver.cpp:238]     Train net output #0: loss = 0.250396 (* 1 = 0.250396 loss)
I0428 20:25:38.293584  2631 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:25:38.504416  2631 solver.cpp:219] Iteration 600 (474.306 iter/s, 0.210834s/100 iters), loss = 0.426141
I0428 20:25:38.504469  2631 solver.cpp:238]     Train net output #0: loss = 0.426141 (* 1 = 0.426141 loss)
I0428 20:25:38.504482  2631 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:25:38.726511  2631 solver.cpp:219] Iteration 700 (450.396 iter/s, 0.222027s/100 iters), loss = 0.359227
I0428 20:25:38.726558  2631 solver.cpp:238]     Train net output #0: loss = 0.359227 (* 1 = 0.359227 loss)
I0428 20:25:38.726570  2631 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:25:38.945789  2631 solver.cpp:219] Iteration 800 (456.177 iter/s, 0.219213s/100 iters), loss = 0.291279
I0428 20:25:38.945839  2631 solver.cpp:238]     Train net output #0: loss = 0.291279 (* 1 = 0.291279 loss)
I0428 20:25:38.945852  2631 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:25:39.160915  2631 solver.cpp:219] Iteration 900 (464.983 iter/s, 0.215062s/100 iters), loss = 0.34004
I0428 20:25:39.160951  2631 solver.cpp:238]     Train net output #0: loss = 0.34004 (* 1 = 0.34004 loss)
I0428 20:25:39.160959  2631 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:25:39.229409  2638 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:39.373229  2631 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:25:39.374944  2631 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:25:39.376149  2631 solver.cpp:311] Iteration 1000, loss = 0.265024
I0428 20:25:39.376186  2631 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:25:39.482261  2639 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:25:39.485121  2631 solver.cpp:398]     Test net output #0: accuracy = 0.9422
I0428 20:25:39.485147  2631 solver.cpp:398]     Test net output #1: loss = 0.194582 (* 1 = 0.194582 loss)
I0428 20:25:39.485154  2631 solver.cpp:316] Optimization Done.
I0428 20:25:39.485159  2631 caffe.cpp:259] Optimization Done.
