I0428 20:23:22.509925  2228 caffe.cpp:218] Using GPUs 0
I0428 20:23:22.547912  2228 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:23.065557  2228 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1420.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:23.065703  2228 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1420.prototxt
I0428 20:23:23.066123  2228 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:23.066143  2228 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:23.066247  2228 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:23.066328  2228 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:23.066428  2228 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:23.066452  2228 net.cpp:86] Creating Layer mnist
I0428 20:23:23.066462  2228 net.cpp:382] mnist -> data
I0428 20:23:23.066483  2228 net.cpp:382] mnist -> label
I0428 20:23:23.067574  2228 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:23.070034  2228 net.cpp:124] Setting up mnist
I0428 20:23:23.070055  2228 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:23.070061  2228 net.cpp:131] Top shape: 64 (64)
I0428 20:23:23.070065  2228 net.cpp:139] Memory required for data: 200960
I0428 20:23:23.070071  2228 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:23.070087  2228 net.cpp:86] Creating Layer conv0
I0428 20:23:23.070111  2228 net.cpp:408] conv0 <- data
I0428 20:23:23.070122  2228 net.cpp:382] conv0 -> conv0
I0428 20:23:23.337152  2228 net.cpp:124] Setting up conv0
I0428 20:23:23.337178  2228 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:23.337182  2228 net.cpp:139] Memory required for data: 7573760
I0428 20:23:23.337195  2228 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:23.337208  2228 net.cpp:86] Creating Layer pool0
I0428 20:23:23.337211  2228 net.cpp:408] pool0 <- conv0
I0428 20:23:23.337216  2228 net.cpp:382] pool0 -> pool0
I0428 20:23:23.337260  2228 net.cpp:124] Setting up pool0
I0428 20:23:23.337282  2228 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:23.337301  2228 net.cpp:139] Memory required for data: 9416960
I0428 20:23:23.337303  2228 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:23.337313  2228 net.cpp:86] Creating Layer conv1
I0428 20:23:23.337316  2228 net.cpp:408] conv1 <- pool0
I0428 20:23:23.337322  2228 net.cpp:382] conv1 -> conv1
I0428 20:23:23.340656  2228 net.cpp:124] Setting up conv1
I0428 20:23:23.340684  2228 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:23.340688  2228 net.cpp:139] Memory required for data: 11055360
I0428 20:23:23.340695  2228 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:23.340703  2228 net.cpp:86] Creating Layer pool1
I0428 20:23:23.340705  2228 net.cpp:408] pool1 <- conv1
I0428 20:23:23.340710  2228 net.cpp:382] pool1 -> pool1
I0428 20:23:23.340759  2228 net.cpp:124] Setting up pool1
I0428 20:23:23.340766  2228 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:23.340770  2228 net.cpp:139] Memory required for data: 11464960
I0428 20:23:23.340771  2228 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:23.340778  2228 net.cpp:86] Creating Layer ip1
I0428 20:23:23.340781  2228 net.cpp:408] ip1 <- pool1
I0428 20:23:23.340785  2228 net.cpp:382] ip1 -> ip1
I0428 20:23:23.341915  2228 net.cpp:124] Setting up ip1
I0428 20:23:23.341928  2228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:23.341946  2228 net.cpp:139] Memory required for data: 11467520
I0428 20:23:23.341954  2228 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:23.341960  2228 net.cpp:86] Creating Layer relu1
I0428 20:23:23.341964  2228 net.cpp:408] relu1 <- ip1
I0428 20:23:23.341969  2228 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:23.342135  2228 net.cpp:124] Setting up relu1
I0428 20:23:23.342144  2228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:23.342147  2228 net.cpp:139] Memory required for data: 11470080
I0428 20:23:23.342150  2228 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:23.342156  2228 net.cpp:86] Creating Layer ip2
I0428 20:23:23.342160  2228 net.cpp:408] ip2 <- ip1
I0428 20:23:23.342165  2228 net.cpp:382] ip2 -> ip2
I0428 20:23:23.342260  2228 net.cpp:124] Setting up ip2
I0428 20:23:23.342267  2228 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:23.342270  2228 net.cpp:139] Memory required for data: 11476480
I0428 20:23:23.342275  2228 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:23.342281  2228 net.cpp:86] Creating Layer relu2
I0428 20:23:23.342284  2228 net.cpp:408] relu2 <- ip2
I0428 20:23:23.342288  2228 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:23.343076  2228 net.cpp:124] Setting up relu2
I0428 20:23:23.343089  2228 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:23.343094  2228 net.cpp:139] Memory required for data: 11482880
I0428 20:23:23.343097  2228 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:23.343104  2228 net.cpp:86] Creating Layer ip3
I0428 20:23:23.343107  2228 net.cpp:408] ip3 <- ip2
I0428 20:23:23.343112  2228 net.cpp:382] ip3 -> ip3
I0428 20:23:23.343207  2228 net.cpp:124] Setting up ip3
I0428 20:23:23.343215  2228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:23.343219  2228 net.cpp:139] Memory required for data: 11485440
I0428 20:23:23.343226  2228 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:23.343232  2228 net.cpp:86] Creating Layer relu3
I0428 20:23:23.343251  2228 net.cpp:408] relu3 <- ip3
I0428 20:23:23.343256  2228 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:23.343425  2228 net.cpp:124] Setting up relu3
I0428 20:23:23.343435  2228 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:23.343437  2228 net.cpp:139] Memory required for data: 11488000
I0428 20:23:23.343441  2228 layer_factory.hpp:77] Creating layer loss
I0428 20:23:23.343446  2228 net.cpp:86] Creating Layer loss
I0428 20:23:23.343451  2228 net.cpp:408] loss <- ip3
I0428 20:23:23.343454  2228 net.cpp:408] loss <- label
I0428 20:23:23.343459  2228 net.cpp:382] loss -> loss
I0428 20:23:23.343477  2228 layer_factory.hpp:77] Creating layer loss
I0428 20:23:23.343705  2228 net.cpp:124] Setting up loss
I0428 20:23:23.343729  2228 net.cpp:131] Top shape: (1)
I0428 20:23:23.343735  2228 net.cpp:134]     with loss weight 1
I0428 20:23:23.343780  2228 net.cpp:139] Memory required for data: 11488004
I0428 20:23:23.343785  2228 net.cpp:200] loss needs backward computation.
I0428 20:23:23.343788  2228 net.cpp:200] relu3 needs backward computation.
I0428 20:23:23.343791  2228 net.cpp:200] ip3 needs backward computation.
I0428 20:23:23.343794  2228 net.cpp:200] relu2 needs backward computation.
I0428 20:23:23.343797  2228 net.cpp:200] ip2 needs backward computation.
I0428 20:23:23.343801  2228 net.cpp:200] relu1 needs backward computation.
I0428 20:23:23.343803  2228 net.cpp:200] ip1 needs backward computation.
I0428 20:23:23.343806  2228 net.cpp:200] pool1 needs backward computation.
I0428 20:23:23.343809  2228 net.cpp:200] conv1 needs backward computation.
I0428 20:23:23.343812  2228 net.cpp:200] pool0 needs backward computation.
I0428 20:23:23.343816  2228 net.cpp:200] conv0 needs backward computation.
I0428 20:23:23.343834  2228 net.cpp:202] mnist does not need backward computation.
I0428 20:23:23.343838  2228 net.cpp:244] This network produces output loss
I0428 20:23:23.343848  2228 net.cpp:257] Network initialization done.
I0428 20:23:23.344239  2228 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1420.prototxt
I0428 20:23:23.344282  2228 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:23.344386  2228 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:23.344476  2228 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:23.344517  2228 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:23.344548  2228 net.cpp:86] Creating Layer mnist
I0428 20:23:23.344553  2228 net.cpp:382] mnist -> data
I0428 20:23:23.344560  2228 net.cpp:382] mnist -> label
I0428 20:23:23.344658  2228 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:23.345830  2228 net.cpp:124] Setting up mnist
I0428 20:23:23.345859  2228 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:23.345863  2228 net.cpp:131] Top shape: 100 (100)
I0428 20:23:23.345867  2228 net.cpp:139] Memory required for data: 314000
I0428 20:23:23.345871  2228 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:23.345906  2228 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:23.345911  2228 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:23.345916  2228 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:23.345922  2228 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:23.345963  2228 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:23.345968  2228 net.cpp:131] Top shape: 100 (100)
I0428 20:23:23.345973  2228 net.cpp:131] Top shape: 100 (100)
I0428 20:23:23.345975  2228 net.cpp:139] Memory required for data: 314800
I0428 20:23:23.345978  2228 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:23.345986  2228 net.cpp:86] Creating Layer conv0
I0428 20:23:23.345989  2228 net.cpp:408] conv0 <- data
I0428 20:23:23.345994  2228 net.cpp:382] conv0 -> conv0
I0428 20:23:23.347695  2228 net.cpp:124] Setting up conv0
I0428 20:23:23.347709  2228 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:23.347712  2228 net.cpp:139] Memory required for data: 11834800
I0428 20:23:23.347721  2228 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:23.347743  2228 net.cpp:86] Creating Layer pool0
I0428 20:23:23.347745  2228 net.cpp:408] pool0 <- conv0
I0428 20:23:23.347750  2228 net.cpp:382] pool0 -> pool0
I0428 20:23:23.347785  2228 net.cpp:124] Setting up pool0
I0428 20:23:23.347790  2228 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:23.347793  2228 net.cpp:139] Memory required for data: 14714800
I0428 20:23:23.347796  2228 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:23.347805  2228 net.cpp:86] Creating Layer conv1
I0428 20:23:23.347807  2228 net.cpp:408] conv1 <- pool0
I0428 20:23:23.347812  2228 net.cpp:382] conv1 -> conv1
I0428 20:23:23.350934  2228 net.cpp:124] Setting up conv1
I0428 20:23:23.350946  2228 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:23.350950  2228 net.cpp:139] Memory required for data: 17274800
I0428 20:23:23.350958  2228 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:23.350965  2228 net.cpp:86] Creating Layer pool1
I0428 20:23:23.350982  2228 net.cpp:408] pool1 <- conv1
I0428 20:23:23.350987  2228 net.cpp:382] pool1 -> pool1
I0428 20:23:23.351021  2228 net.cpp:124] Setting up pool1
I0428 20:23:23.351027  2228 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:23.351029  2228 net.cpp:139] Memory required for data: 17914800
I0428 20:23:23.351043  2228 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:23.351048  2228 net.cpp:86] Creating Layer ip1
I0428 20:23:23.351052  2228 net.cpp:408] ip1 <- pool1
I0428 20:23:23.351056  2228 net.cpp:382] ip1 -> ip1
I0428 20:23:23.351218  2228 net.cpp:124] Setting up ip1
I0428 20:23:23.351236  2228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:23.351246  2228 net.cpp:139] Memory required for data: 17918800
I0428 20:23:23.351253  2228 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:23.351263  2228 net.cpp:86] Creating Layer relu1
I0428 20:23:23.351266  2228 net.cpp:408] relu1 <- ip1
I0428 20:23:23.351270  2228 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:23.351434  2228 net.cpp:124] Setting up relu1
I0428 20:23:23.351442  2228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:23.351445  2228 net.cpp:139] Memory required for data: 17922800
I0428 20:23:23.351460  2228 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:23.351466  2228 net.cpp:86] Creating Layer ip2
I0428 20:23:23.351475  2228 net.cpp:408] ip2 <- ip1
I0428 20:23:23.351480  2228 net.cpp:382] ip2 -> ip2
I0428 20:23:23.351572  2228 net.cpp:124] Setting up ip2
I0428 20:23:23.351578  2228 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:23.351582  2228 net.cpp:139] Memory required for data: 17932800
I0428 20:23:23.351586  2228 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:23.351591  2228 net.cpp:86] Creating Layer relu2
I0428 20:23:23.351594  2228 net.cpp:408] relu2 <- ip2
I0428 20:23:23.351598  2228 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:23.351752  2228 net.cpp:124] Setting up relu2
I0428 20:23:23.351760  2228 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:23.351763  2228 net.cpp:139] Memory required for data: 17942800
I0428 20:23:23.351766  2228 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:23.351778  2228 net.cpp:86] Creating Layer ip3
I0428 20:23:23.351780  2228 net.cpp:408] ip3 <- ip2
I0428 20:23:23.351784  2228 net.cpp:382] ip3 -> ip3
I0428 20:23:23.351902  2228 net.cpp:124] Setting up ip3
I0428 20:23:23.351909  2228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:23.351927  2228 net.cpp:139] Memory required for data: 17946800
I0428 20:23:23.351941  2228 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:23.351946  2228 net.cpp:86] Creating Layer relu3
I0428 20:23:23.351949  2228 net.cpp:408] relu3 <- ip3
I0428 20:23:23.351955  2228 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:23.352726  2228 net.cpp:124] Setting up relu3
I0428 20:23:23.352736  2228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:23.352756  2228 net.cpp:139] Memory required for data: 17950800
I0428 20:23:23.352759  2228 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:23.352764  2228 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:23.352768  2228 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:23.352788  2228 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:23.352795  2228 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:23.352890  2228 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:23.352897  2228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:23.352902  2228 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:23.352905  2228 net.cpp:139] Memory required for data: 17958800
I0428 20:23:23.352908  2228 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:23.352915  2228 net.cpp:86] Creating Layer accuracy
I0428 20:23:23.352921  2228 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:23.352926  2228 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:23.352929  2228 net.cpp:382] accuracy -> accuracy
I0428 20:23:23.352937  2228 net.cpp:124] Setting up accuracy
I0428 20:23:23.352941  2228 net.cpp:131] Top shape: (1)
I0428 20:23:23.352944  2228 net.cpp:139] Memory required for data: 17958804
I0428 20:23:23.352947  2228 layer_factory.hpp:77] Creating layer loss
I0428 20:23:23.352952  2228 net.cpp:86] Creating Layer loss
I0428 20:23:23.352957  2228 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:23.352960  2228 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:23.352965  2228 net.cpp:382] loss -> loss
I0428 20:23:23.352972  2228 layer_factory.hpp:77] Creating layer loss
I0428 20:23:23.353229  2228 net.cpp:124] Setting up loss
I0428 20:23:23.353237  2228 net.cpp:131] Top shape: (1)
I0428 20:23:23.353241  2228 net.cpp:134]     with loss weight 1
I0428 20:23:23.353274  2228 net.cpp:139] Memory required for data: 17958808
I0428 20:23:23.353293  2228 net.cpp:200] loss needs backward computation.
I0428 20:23:23.353297  2228 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:23.353302  2228 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:23.353304  2228 net.cpp:200] relu3 needs backward computation.
I0428 20:23:23.353307  2228 net.cpp:200] ip3 needs backward computation.
I0428 20:23:23.353312  2228 net.cpp:200] relu2 needs backward computation.
I0428 20:23:23.353314  2228 net.cpp:200] ip2 needs backward computation.
I0428 20:23:23.353317  2228 net.cpp:200] relu1 needs backward computation.
I0428 20:23:23.353320  2228 net.cpp:200] ip1 needs backward computation.
I0428 20:23:23.353323  2228 net.cpp:200] pool1 needs backward computation.
I0428 20:23:23.353327  2228 net.cpp:200] conv1 needs backward computation.
I0428 20:23:23.353330  2228 net.cpp:200] pool0 needs backward computation.
I0428 20:23:23.353333  2228 net.cpp:200] conv0 needs backward computation.
I0428 20:23:23.353338  2228 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:23.353341  2228 net.cpp:202] mnist does not need backward computation.
I0428 20:23:23.353344  2228 net.cpp:244] This network produces output accuracy
I0428 20:23:23.353348  2228 net.cpp:244] This network produces output loss
I0428 20:23:23.353359  2228 net.cpp:257] Network initialization done.
I0428 20:23:23.353401  2228 solver.cpp:56] Solver scaffolding done.
I0428 20:23:23.353744  2228 caffe.cpp:248] Starting Optimization
I0428 20:23:23.353750  2228 solver.cpp:273] Solving LeNet
I0428 20:23:23.353754  2228 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:23.353979  2228 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:23.365936  2228 blocking_queue.cpp:49] Waiting for data
I0428 20:23:23.445994  2236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:23.447536  2228 solver.cpp:398]     Test net output #0: accuracy = 0.1327
I0428 20:23:23.447556  2228 solver.cpp:398]     Test net output #1: loss = 2.31439 (* 1 = 2.31439 loss)
I0428 20:23:23.453451  2228 solver.cpp:219] Iteration 0 (0 iter/s, 0.099668s/100 iters), loss = 2.3278
I0428 20:23:23.453475  2228 solver.cpp:238]     Train net output #0: loss = 2.3278 (* 1 = 2.3278 loss)
I0428 20:23:23.453487  2228 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:23.663274  2228 solver.cpp:219] Iteration 100 (476.684 iter/s, 0.209783s/100 iters), loss = 1.02512
I0428 20:23:23.663302  2228 solver.cpp:238]     Train net output #0: loss = 1.02512 (* 1 = 1.02512 loss)
I0428 20:23:23.663310  2228 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:23.863426  2228 solver.cpp:219] Iteration 200 (499.725 iter/s, 0.20011s/100 iters), loss = 0.592406
I0428 20:23:23.863466  2228 solver.cpp:238]     Train net output #0: loss = 0.592406 (* 1 = 0.592406 loss)
I0428 20:23:23.863472  2228 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:24.072679  2228 solver.cpp:219] Iteration 300 (477.999 iter/s, 0.209205s/100 iters), loss = 0.674491
I0428 20:23:24.072728  2228 solver.cpp:238]     Train net output #0: loss = 0.674491 (* 1 = 0.674491 loss)
I0428 20:23:24.072746  2228 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:24.315889  2228 solver.cpp:219] Iteration 400 (411.281 iter/s, 0.243143s/100 iters), loss = 0.358096
I0428 20:23:24.315940  2228 solver.cpp:238]     Train net output #0: loss = 0.358096 (* 1 = 0.358096 loss)
I0428 20:23:24.315953  2228 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:24.560199  2228 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:24.657166  2236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:24.659375  2228 solver.cpp:398]     Test net output #0: accuracy = 0.7562
I0428 20:23:24.659406  2228 solver.cpp:398]     Test net output #1: loss = 0.604736 (* 1 = 0.604736 loss)
I0428 20:23:24.661554  2228 solver.cpp:219] Iteration 500 (289.356 iter/s, 0.345595s/100 iters), loss = 0.511069
I0428 20:23:24.661603  2228 solver.cpp:238]     Train net output #0: loss = 0.511069 (* 1 = 0.511069 loss)
I0428 20:23:24.661612  2228 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:24.887411  2228 solver.cpp:219] Iteration 600 (442.887 iter/s, 0.225791s/100 iters), loss = 0.734284
I0428 20:23:24.887449  2228 solver.cpp:238]     Train net output #0: loss = 0.734284 (* 1 = 0.734284 loss)
I0428 20:23:24.887459  2228 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:25.114481  2228 solver.cpp:219] Iteration 700 (440.496 iter/s, 0.227017s/100 iters), loss = 0.566617
I0428 20:23:25.114516  2228 solver.cpp:238]     Train net output #0: loss = 0.566617 (* 1 = 0.566617 loss)
I0428 20:23:25.114524  2228 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:25.343466  2228 solver.cpp:219] Iteration 800 (436.808 iter/s, 0.228934s/100 iters), loss = 0.610801
I0428 20:23:25.343508  2228 solver.cpp:238]     Train net output #0: loss = 0.610801 (* 1 = 0.610801 loss)
I0428 20:23:25.343518  2228 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:25.574201  2228 solver.cpp:219] Iteration 900 (433.506 iter/s, 0.230678s/100 iters), loss = 0.676574
I0428 20:23:25.574244  2228 solver.cpp:238]     Train net output #0: loss = 0.676574 (* 1 = 0.676574 loss)
I0428 20:23:25.574254  2228 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:25.650640  2235 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:25.803426  2228 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:25.809350  2228 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:25.811739  2228 solver.cpp:311] Iteration 1000, loss = 0.600609
I0428 20:23:25.811766  2228 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:25.905194  2236 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:25.907708  2228 solver.cpp:398]     Test net output #0: accuracy = 0.7662
I0428 20:23:25.907734  2228 solver.cpp:398]     Test net output #1: loss = 0.564789 (* 1 = 0.564789 loss)
I0428 20:23:25.907742  2228 solver.cpp:316] Optimization Done.
I0428 20:23:25.907747  2228 caffe.cpp:259] Optimization Done.
