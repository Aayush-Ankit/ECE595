I0428 19:29:58.920534 22168 caffe.cpp:218] Using GPUs 0
I0428 19:29:58.958829 22168 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:59.401701 22168 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test76.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:59.401834 22168 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test76.prototxt
I0428 19:29:59.402122 22168 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:59.402137 22168 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:59.402204 22168 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:59.402264 22168 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:59.402341 22168 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:59.402359 22168 net.cpp:86] Creating Layer mnist
I0428 19:29:59.402365 22168 net.cpp:382] mnist -> data
I0428 19:29:59.402384 22168 net.cpp:382] mnist -> label
I0428 19:29:59.403316 22168 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:59.405606 22168 net.cpp:124] Setting up mnist
I0428 19:29:59.405622 22168 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:59.405627 22168 net.cpp:131] Top shape: 64 (64)
I0428 19:29:59.405630 22168 net.cpp:139] Memory required for data: 200960
I0428 19:29:59.405635 22168 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:59.405691 22168 net.cpp:86] Creating Layer conv0
I0428 19:29:59.405696 22168 net.cpp:408] conv0 <- data
I0428 19:29:59.405706 22168 net.cpp:382] conv0 -> conv0
I0428 19:29:59.634688 22168 net.cpp:124] Setting up conv0
I0428 19:29:59.634729 22168 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:59.634733 22168 net.cpp:139] Memory required for data: 495872
I0428 19:29:59.634747 22168 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:59.634759 22168 net.cpp:86] Creating Layer pool0
I0428 19:29:59.634796 22168 net.cpp:408] pool0 <- conv0
I0428 19:29:59.634802 22168 net.cpp:382] pool0 -> pool0
I0428 19:29:59.634847 22168 net.cpp:124] Setting up pool0
I0428 19:29:59.634861 22168 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:59.634865 22168 net.cpp:139] Memory required for data: 569600
I0428 19:29:59.634867 22168 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:59.634876 22168 net.cpp:86] Creating Layer ip1
I0428 19:29:59.634893 22168 net.cpp:408] ip1 <- pool0
I0428 19:29:59.634897 22168 net.cpp:382] ip1 -> ip1
I0428 19:29:59.636039 22168 net.cpp:124] Setting up ip1
I0428 19:29:59.636067 22168 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:59.636071 22168 net.cpp:139] Memory required for data: 582400
I0428 19:29:59.636096 22168 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:59.636102 22168 net.cpp:86] Creating Layer relu1
I0428 19:29:59.636106 22168 net.cpp:408] relu1 <- ip1
I0428 19:29:59.636111 22168 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:59.636306 22168 net.cpp:124] Setting up relu1
I0428 19:29:59.636314 22168 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:59.636318 22168 net.cpp:139] Memory required for data: 595200
I0428 19:29:59.636322 22168 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:59.636327 22168 net.cpp:86] Creating Layer ip2
I0428 19:29:59.636345 22168 net.cpp:408] ip2 <- ip1
I0428 19:29:59.636350 22168 net.cpp:382] ip2 -> ip2
I0428 19:29:59.637423 22168 net.cpp:124] Setting up ip2
I0428 19:29:59.637452 22168 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:59.637455 22168 net.cpp:139] Memory required for data: 608000
I0428 19:29:59.637464 22168 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:59.637470 22168 net.cpp:86] Creating Layer relu2
I0428 19:29:59.637473 22168 net.cpp:408] relu2 <- ip2
I0428 19:29:59.637477 22168 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:59.638317 22168 net.cpp:124] Setting up relu2
I0428 19:29:59.638329 22168 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:59.638348 22168 net.cpp:139] Memory required for data: 620800
I0428 19:29:59.638351 22168 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:59.638358 22168 net.cpp:86] Creating Layer ip3
I0428 19:29:59.638363 22168 net.cpp:408] ip3 <- ip2
I0428 19:29:59.638368 22168 net.cpp:382] ip3 -> ip3
I0428 19:29:59.638461 22168 net.cpp:124] Setting up ip3
I0428 19:29:59.638468 22168 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:59.638471 22168 net.cpp:139] Memory required for data: 623360
I0428 19:29:59.638478 22168 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:59.638483 22168 net.cpp:86] Creating Layer relu3
I0428 19:29:59.638485 22168 net.cpp:408] relu3 <- ip3
I0428 19:29:59.638489 22168 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:59.638696 22168 net.cpp:124] Setting up relu3
I0428 19:29:59.638705 22168 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:59.638707 22168 net.cpp:139] Memory required for data: 625920
I0428 19:29:59.638710 22168 layer_factory.hpp:77] Creating layer loss
I0428 19:29:59.638716 22168 net.cpp:86] Creating Layer loss
I0428 19:29:59.638720 22168 net.cpp:408] loss <- ip3
I0428 19:29:59.638725 22168 net.cpp:408] loss <- label
I0428 19:29:59.638730 22168 net.cpp:382] loss -> loss
I0428 19:29:59.638743 22168 layer_factory.hpp:77] Creating layer loss
I0428 19:29:59.638981 22168 net.cpp:124] Setting up loss
I0428 19:29:59.638990 22168 net.cpp:131] Top shape: (1)
I0428 19:29:59.638993 22168 net.cpp:134]     with loss weight 1
I0428 19:29:59.639008 22168 net.cpp:139] Memory required for data: 625924
I0428 19:29:59.639011 22168 net.cpp:200] loss needs backward computation.
I0428 19:29:59.639014 22168 net.cpp:200] relu3 needs backward computation.
I0428 19:29:59.639017 22168 net.cpp:200] ip3 needs backward computation.
I0428 19:29:59.639020 22168 net.cpp:200] relu2 needs backward computation.
I0428 19:29:59.639024 22168 net.cpp:200] ip2 needs backward computation.
I0428 19:29:59.639026 22168 net.cpp:200] relu1 needs backward computation.
I0428 19:29:59.639029 22168 net.cpp:200] ip1 needs backward computation.
I0428 19:29:59.639042 22168 net.cpp:200] pool0 needs backward computation.
I0428 19:29:59.639045 22168 net.cpp:200] conv0 needs backward computation.
I0428 19:29:59.639050 22168 net.cpp:202] mnist does not need backward computation.
I0428 19:29:59.639051 22168 net.cpp:244] This network produces output loss
I0428 19:29:59.639060 22168 net.cpp:257] Network initialization done.
I0428 19:29:59.639339 22168 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test76.prototxt
I0428 19:29:59.639365 22168 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:59.639446 22168 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:59.639506 22168 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:59.639550 22168 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:59.639562 22168 net.cpp:86] Creating Layer mnist
I0428 19:29:59.639583 22168 net.cpp:382] mnist -> data
I0428 19:29:59.639591 22168 net.cpp:382] mnist -> label
I0428 19:29:59.639678 22168 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:59.641783 22168 net.cpp:124] Setting up mnist
I0428 19:29:59.641827 22168 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:59.641834 22168 net.cpp:131] Top shape: 100 (100)
I0428 19:29:59.641836 22168 net.cpp:139] Memory required for data: 314000
I0428 19:29:59.641840 22168 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:59.641846 22168 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:59.641850 22168 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:59.641855 22168 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:59.641861 22168 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:59.641909 22168 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:59.641914 22168 net.cpp:131] Top shape: 100 (100)
I0428 19:29:59.641918 22168 net.cpp:131] Top shape: 100 (100)
I0428 19:29:59.641921 22168 net.cpp:139] Memory required for data: 314800
I0428 19:29:59.641934 22168 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:59.641942 22168 net.cpp:86] Creating Layer conv0
I0428 19:29:59.641947 22168 net.cpp:408] conv0 <- data
I0428 19:29:59.641952 22168 net.cpp:382] conv0 -> conv0
I0428 19:29:59.643745 22168 net.cpp:124] Setting up conv0
I0428 19:29:59.643774 22168 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:59.643777 22168 net.cpp:139] Memory required for data: 775600
I0428 19:29:59.643785 22168 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:59.643792 22168 net.cpp:86] Creating Layer pool0
I0428 19:29:59.643795 22168 net.cpp:408] pool0 <- conv0
I0428 19:29:59.643800 22168 net.cpp:382] pool0 -> pool0
I0428 19:29:59.643834 22168 net.cpp:124] Setting up pool0
I0428 19:29:59.643841 22168 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:59.643843 22168 net.cpp:139] Memory required for data: 890800
I0428 19:29:59.643846 22168 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:59.643852 22168 net.cpp:86] Creating Layer ip1
I0428 19:29:59.643854 22168 net.cpp:408] ip1 <- pool0
I0428 19:29:59.643859 22168 net.cpp:382] ip1 -> ip1
I0428 19:29:59.644022 22168 net.cpp:124] Setting up ip1
I0428 19:29:59.644029 22168 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:59.644032 22168 net.cpp:139] Memory required for data: 910800
I0428 19:29:59.644038 22168 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:59.644043 22168 net.cpp:86] Creating Layer relu1
I0428 19:29:59.644047 22168 net.cpp:408] relu1 <- ip1
I0428 19:29:59.644050 22168 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:59.644214 22168 net.cpp:124] Setting up relu1
I0428 19:29:59.644222 22168 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:59.644225 22168 net.cpp:139] Memory required for data: 930800
I0428 19:29:59.644244 22168 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:59.644249 22168 net.cpp:86] Creating Layer ip2
I0428 19:29:59.644253 22168 net.cpp:408] ip2 <- ip1
I0428 19:29:59.644258 22168 net.cpp:382] ip2 -> ip2
I0428 19:29:59.644418 22168 net.cpp:124] Setting up ip2
I0428 19:29:59.644425 22168 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:59.644429 22168 net.cpp:139] Memory required for data: 950800
I0428 19:29:59.644436 22168 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:59.644441 22168 net.cpp:86] Creating Layer relu2
I0428 19:29:59.644444 22168 net.cpp:408] relu2 <- ip2
I0428 19:29:59.644449 22168 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:59.645470 22168 net.cpp:124] Setting up relu2
I0428 19:29:59.645483 22168 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:59.645488 22168 net.cpp:139] Memory required for data: 970800
I0428 19:29:59.645491 22168 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:59.645499 22168 net.cpp:86] Creating Layer ip3
I0428 19:29:59.645503 22168 net.cpp:408] ip3 <- ip2
I0428 19:29:59.645509 22168 net.cpp:382] ip3 -> ip3
I0428 19:29:59.645635 22168 net.cpp:124] Setting up ip3
I0428 19:29:59.645645 22168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:59.645649 22168 net.cpp:139] Memory required for data: 974800
I0428 19:29:59.645655 22168 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:59.645674 22168 net.cpp:86] Creating Layer relu3
I0428 19:29:59.645678 22168 net.cpp:408] relu3 <- ip3
I0428 19:29:59.645684 22168 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:59.645864 22168 net.cpp:124] Setting up relu3
I0428 19:29:59.645871 22168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:59.645874 22168 net.cpp:139] Memory required for data: 978800
I0428 19:29:59.645877 22168 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:59.645881 22168 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:59.645884 22168 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:59.645889 22168 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:59.645895 22168 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:59.645927 22168 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:59.645933 22168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:59.645937 22168 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:59.645949 22168 net.cpp:139] Memory required for data: 986800
I0428 19:29:59.645953 22168 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:59.645959 22168 net.cpp:86] Creating Layer accuracy
I0428 19:29:59.645968 22168 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:59.645972 22168 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:59.645977 22168 net.cpp:382] accuracy -> accuracy
I0428 19:29:59.645984 22168 net.cpp:124] Setting up accuracy
I0428 19:29:59.645988 22168 net.cpp:131] Top shape: (1)
I0428 19:29:59.645992 22168 net.cpp:139] Memory required for data: 986804
I0428 19:29:59.645994 22168 layer_factory.hpp:77] Creating layer loss
I0428 19:29:59.645998 22168 net.cpp:86] Creating Layer loss
I0428 19:29:59.646001 22168 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:59.646004 22168 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:59.646008 22168 net.cpp:382] loss -> loss
I0428 19:29:59.646014 22168 layer_factory.hpp:77] Creating layer loss
I0428 19:29:59.646252 22168 net.cpp:124] Setting up loss
I0428 19:29:59.646261 22168 net.cpp:131] Top shape: (1)
I0428 19:29:59.646265 22168 net.cpp:134]     with loss weight 1
I0428 19:29:59.646270 22168 net.cpp:139] Memory required for data: 986808
I0428 19:29:59.646273 22168 net.cpp:200] loss needs backward computation.
I0428 19:29:59.646277 22168 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:59.646281 22168 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:59.646284 22168 net.cpp:200] relu3 needs backward computation.
I0428 19:29:59.646287 22168 net.cpp:200] ip3 needs backward computation.
I0428 19:29:59.646291 22168 net.cpp:200] relu2 needs backward computation.
I0428 19:29:59.646293 22168 net.cpp:200] ip2 needs backward computation.
I0428 19:29:59.646296 22168 net.cpp:200] relu1 needs backward computation.
I0428 19:29:59.646298 22168 net.cpp:200] ip1 needs backward computation.
I0428 19:29:59.646301 22168 net.cpp:200] pool0 needs backward computation.
I0428 19:29:59.646304 22168 net.cpp:200] conv0 needs backward computation.
I0428 19:29:59.646308 22168 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:59.646327 22168 net.cpp:202] mnist does not need backward computation.
I0428 19:29:59.646329 22168 net.cpp:244] This network produces output accuracy
I0428 19:29:59.646333 22168 net.cpp:244] This network produces output loss
I0428 19:29:59.646343 22168 net.cpp:257] Network initialization done.
I0428 19:29:59.646397 22168 solver.cpp:56] Solver scaffolding done.
I0428 19:29:59.646797 22168 caffe.cpp:248] Starting Optimization
I0428 19:29:59.646802 22168 solver.cpp:273] Solving LeNet
I0428 19:29:59.646806 22168 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:59.648252 22168 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:59.650286 22168 blocking_queue.cpp:49] Waiting for data
I0428 19:29:59.725325 22175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:59.725791 22168 solver.cpp:398]     Test net output #0: accuracy = 0.0953
I0428 19:29:59.725819 22168 solver.cpp:398]     Test net output #1: loss = 2.29583 (* 1 = 2.29583 loss)
I0428 19:29:59.727521 22168 solver.cpp:219] Iteration 0 (0 iter/s, 0.0806306s/100 iters), loss = 2.28709
I0428 19:29:59.727558 22168 solver.cpp:238]     Train net output #0: loss = 2.28709 (* 1 = 2.28709 loss)
I0428 19:29:59.727569 22168 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:59.785593 22168 solver.cpp:219] Iteration 100 (1723.04 iter/s, 0.0580368s/100 iters), loss = 0.916893
I0428 19:29:59.785657 22168 solver.cpp:238]     Train net output #0: loss = 0.916893 (* 1 = 0.916893 loss)
I0428 19:29:59.785681 22168 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:59.859151 22168 solver.cpp:219] Iteration 200 (1360.88 iter/s, 0.0734817s/100 iters), loss = 1.17941
I0428 19:29:59.859197 22168 solver.cpp:238]     Train net output #0: loss = 1.17941 (* 1 = 1.17941 loss)
I0428 19:29:59.859211 22168 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:59.927150 22168 solver.cpp:219] Iteration 300 (1471.75 iter/s, 0.0679463s/100 iters), loss = 0.642626
I0428 19:29:59.927199 22168 solver.cpp:238]     Train net output #0: loss = 0.642626 (* 1 = 0.642626 loss)
I0428 19:29:59.927211 22168 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:59.987797 22168 solver.cpp:219] Iteration 400 (1650.41 iter/s, 0.0605911s/100 iters), loss = 0.409625
I0428 19:29:59.987848 22168 solver.cpp:238]     Train net output #0: loss = 0.409625 (* 1 = 0.409625 loss)
I0428 19:29:59.987857 22168 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:00.049844 22168 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:00.102303 22175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:00.102740 22168 solver.cpp:398]     Test net output #0: accuracy = 0.8345
I0428 19:30:00.102761 22168 solver.cpp:398]     Test net output #1: loss = 0.474324 (* 1 = 0.474324 loss)
I0428 19:30:00.103425 22168 solver.cpp:219] Iteration 500 (865.302 iter/s, 0.115567s/100 iters), loss = 0.519204
I0428 19:30:00.103451 22168 solver.cpp:238]     Train net output #0: loss = 0.519204 (* 1 = 0.519204 loss)
I0428 19:30:00.103457 22168 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:00.165444 22168 solver.cpp:219] Iteration 600 (1613.33 iter/s, 0.0619837s/100 iters), loss = 0.425048
I0428 19:30:00.165496 22168 solver.cpp:238]     Train net output #0: loss = 0.425048 (* 1 = 0.425048 loss)
I0428 19:30:00.165505 22168 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:00.226193 22168 solver.cpp:219] Iteration 700 (1647.47 iter/s, 0.0606991s/100 iters), loss = 0.627045
I0428 19:30:00.226222 22168 solver.cpp:238]     Train net output #0: loss = 0.627045 (* 1 = 0.627045 loss)
I0428 19:30:00.226240 22168 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:00.285207 22168 solver.cpp:219] Iteration 800 (1695.6 iter/s, 0.0589763s/100 iters), loss = 0.578197
I0428 19:30:00.285236 22168 solver.cpp:238]     Train net output #0: loss = 0.578197 (* 1 = 0.578197 loss)
I0428 19:30:00.285248 22168 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:00.346318 22168 solver.cpp:219] Iteration 900 (1637.37 iter/s, 0.0610734s/100 iters), loss = 0.303173
I0428 19:30:00.346349 22168 solver.cpp:238]     Train net output #0: loss = 0.303173 (* 1 = 0.303173 loss)
I0428 19:30:00.346360 22168 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:00.368024 22174 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:00.408174 22168 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:00.409032 22168 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:00.409562 22168 solver.cpp:311] Iteration 1000, loss = 0.205598
I0428 19:30:00.409580 22168 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:00.462467 22175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:00.462898 22168 solver.cpp:398]     Test net output #0: accuracy = 0.9425
I0428 19:30:00.462920 22168 solver.cpp:398]     Test net output #1: loss = 0.186067 (* 1 = 0.186067 loss)
I0428 19:30:00.462927 22168 solver.cpp:316] Optimization Done.
I0428 19:30:00.462931 22168 caffe.cpp:259] Optimization Done.
