I0428 20:39:09.154458  5237 caffe.cpp:218] Using GPUs 0
I0428 20:39:09.184128  5237 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:39:09.626292  5237 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1675.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:39:09.626457  5237 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1675.prototxt
I0428 20:39:09.626813  5237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:39:09.626844  5237 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:39:09.626926  5237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:39:09.626991  5237 layer_factory.hpp:77] Creating layer mnist
I0428 20:39:09.627087  5237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:39:09.627106  5237 net.cpp:86] Creating Layer mnist
I0428 20:39:09.627113  5237 net.cpp:382] mnist -> data
I0428 20:39:09.627131  5237 net.cpp:382] mnist -> label
I0428 20:39:09.628032  5237 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:39:09.630269  5237 net.cpp:124] Setting up mnist
I0428 20:39:09.630285  5237 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:39:09.630290  5237 net.cpp:131] Top shape: 64 (64)
I0428 20:39:09.630293  5237 net.cpp:139] Memory required for data: 200960
I0428 20:39:09.630298  5237 layer_factory.hpp:77] Creating layer conv0
I0428 20:39:09.630313  5237 net.cpp:86] Creating Layer conv0
I0428 20:39:09.630329  5237 net.cpp:408] conv0 <- data
I0428 20:39:09.630355  5237 net.cpp:382] conv0 -> conv0
I0428 20:39:09.851505  5237 net.cpp:124] Setting up conv0
I0428 20:39:09.851532  5237 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:39:09.851536  5237 net.cpp:139] Memory required for data: 14946560
I0428 20:39:09.851549  5237 layer_factory.hpp:77] Creating layer pool0
I0428 20:39:09.851562  5237 net.cpp:86] Creating Layer pool0
I0428 20:39:09.851565  5237 net.cpp:408] pool0 <- conv0
I0428 20:39:09.851570  5237 net.cpp:382] pool0 -> pool0
I0428 20:39:09.851613  5237 net.cpp:124] Setting up pool0
I0428 20:39:09.851635  5237 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:39:09.851652  5237 net.cpp:139] Memory required for data: 18632960
I0428 20:39:09.851655  5237 layer_factory.hpp:77] Creating layer conv1
I0428 20:39:09.851666  5237 net.cpp:86] Creating Layer conv1
I0428 20:39:09.851670  5237 net.cpp:408] conv1 <- pool0
I0428 20:39:09.851675  5237 net.cpp:382] conv1 -> conv1
I0428 20:39:09.855727  5237 net.cpp:124] Setting up conv1
I0428 20:39:09.855741  5237 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:39:09.855744  5237 net.cpp:139] Memory required for data: 20271360
I0428 20:39:09.855752  5237 layer_factory.hpp:77] Creating layer pool1
I0428 20:39:09.855761  5237 net.cpp:86] Creating Layer pool1
I0428 20:39:09.855763  5237 net.cpp:408] pool1 <- conv1
I0428 20:39:09.855767  5237 net.cpp:382] pool1 -> pool1
I0428 20:39:09.855800  5237 net.cpp:124] Setting up pool1
I0428 20:39:09.855809  5237 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:39:09.855813  5237 net.cpp:139] Memory required for data: 20680960
I0428 20:39:09.855830  5237 layer_factory.hpp:77] Creating layer ip1
I0428 20:39:09.855836  5237 net.cpp:86] Creating Layer ip1
I0428 20:39:09.855854  5237 net.cpp:408] ip1 <- pool1
I0428 20:39:09.855860  5237 net.cpp:382] ip1 -> ip1
I0428 20:39:09.856405  5237 net.cpp:124] Setting up ip1
I0428 20:39:09.856413  5237 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:09.856431  5237 net.cpp:139] Memory required for data: 20693760
I0428 20:39:09.856438  5237 layer_factory.hpp:77] Creating layer relu1
I0428 20:39:09.856443  5237 net.cpp:86] Creating Layer relu1
I0428 20:39:09.856446  5237 net.cpp:408] relu1 <- ip1
I0428 20:39:09.856451  5237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:39:09.856616  5237 net.cpp:124] Setting up relu1
I0428 20:39:09.856626  5237 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:09.856628  5237 net.cpp:139] Memory required for data: 20706560
I0428 20:39:09.856631  5237 layer_factory.hpp:77] Creating layer ip2
I0428 20:39:09.856637  5237 net.cpp:86] Creating Layer ip2
I0428 20:39:09.856640  5237 net.cpp:408] ip2 <- ip1
I0428 20:39:09.856644  5237 net.cpp:382] ip2 -> ip2
I0428 20:39:09.856747  5237 net.cpp:124] Setting up ip2
I0428 20:39:09.856755  5237 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:09.856757  5237 net.cpp:139] Memory required for data: 20719360
I0428 20:39:09.856762  5237 layer_factory.hpp:77] Creating layer relu2
I0428 20:39:09.856768  5237 net.cpp:86] Creating Layer relu2
I0428 20:39:09.856771  5237 net.cpp:408] relu2 <- ip2
I0428 20:39:09.856775  5237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:39:09.857590  5237 net.cpp:124] Setting up relu2
I0428 20:39:09.857616  5237 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:09.857620  5237 net.cpp:139] Memory required for data: 20732160
I0428 20:39:09.857623  5237 layer_factory.hpp:77] Creating layer ip3
I0428 20:39:09.857646  5237 net.cpp:86] Creating Layer ip3
I0428 20:39:09.857650  5237 net.cpp:408] ip3 <- ip2
I0428 20:39:09.857655  5237 net.cpp:382] ip3 -> ip3
I0428 20:39:09.857748  5237 net.cpp:124] Setting up ip3
I0428 20:39:09.857756  5237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:39:09.857759  5237 net.cpp:139] Memory required for data: 20734720
I0428 20:39:09.857766  5237 layer_factory.hpp:77] Creating layer relu3
I0428 20:39:09.857774  5237 net.cpp:86] Creating Layer relu3
I0428 20:39:09.857792  5237 net.cpp:408] relu3 <- ip3
I0428 20:39:09.857810  5237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:39:09.857969  5237 net.cpp:124] Setting up relu3
I0428 20:39:09.857978  5237 net.cpp:131] Top shape: 64 10 (640)
I0428 20:39:09.857981  5237 net.cpp:139] Memory required for data: 20737280
I0428 20:39:09.857985  5237 layer_factory.hpp:77] Creating layer loss
I0428 20:39:09.857990  5237 net.cpp:86] Creating Layer loss
I0428 20:39:09.857995  5237 net.cpp:408] loss <- ip3
I0428 20:39:09.857998  5237 net.cpp:408] loss <- label
I0428 20:39:09.858003  5237 net.cpp:382] loss -> loss
I0428 20:39:09.858021  5237 layer_factory.hpp:77] Creating layer loss
I0428 20:39:09.858249  5237 net.cpp:124] Setting up loss
I0428 20:39:09.858258  5237 net.cpp:131] Top shape: (1)
I0428 20:39:09.858263  5237 net.cpp:134]     with loss weight 1
I0428 20:39:09.858278  5237 net.cpp:139] Memory required for data: 20737284
I0428 20:39:09.858280  5237 net.cpp:200] loss needs backward computation.
I0428 20:39:09.858283  5237 net.cpp:200] relu3 needs backward computation.
I0428 20:39:09.858286  5237 net.cpp:200] ip3 needs backward computation.
I0428 20:39:09.858289  5237 net.cpp:200] relu2 needs backward computation.
I0428 20:39:09.858292  5237 net.cpp:200] ip2 needs backward computation.
I0428 20:39:09.858295  5237 net.cpp:200] relu1 needs backward computation.
I0428 20:39:09.858297  5237 net.cpp:200] ip1 needs backward computation.
I0428 20:39:09.858300  5237 net.cpp:200] pool1 needs backward computation.
I0428 20:39:09.858304  5237 net.cpp:200] conv1 needs backward computation.
I0428 20:39:09.858306  5237 net.cpp:200] pool0 needs backward computation.
I0428 20:39:09.858309  5237 net.cpp:200] conv0 needs backward computation.
I0428 20:39:09.858314  5237 net.cpp:202] mnist does not need backward computation.
I0428 20:39:09.858316  5237 net.cpp:244] This network produces output loss
I0428 20:39:09.858325  5237 net.cpp:257] Network initialization done.
I0428 20:39:09.858719  5237 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1675.prototxt
I0428 20:39:09.858760  5237 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:39:09.858851  5237 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:39:09.858930  5237 layer_factory.hpp:77] Creating layer mnist
I0428 20:39:09.858976  5237 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:39:09.859006  5237 net.cpp:86] Creating Layer mnist
I0428 20:39:09.859011  5237 net.cpp:382] mnist -> data
I0428 20:39:09.859019  5237 net.cpp:382] mnist -> label
I0428 20:39:09.859133  5237 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:39:09.861107  5237 net.cpp:124] Setting up mnist
I0428 20:39:09.861152  5237 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:39:09.861158  5237 net.cpp:131] Top shape: 100 (100)
I0428 20:39:09.861161  5237 net.cpp:139] Memory required for data: 314000
I0428 20:39:09.861166  5237 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:39:09.861172  5237 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:39:09.861191  5237 net.cpp:408] label_mnist_1_split <- label
I0428 20:39:09.861196  5237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:39:09.861215  5237 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:39:09.861269  5237 net.cpp:124] Setting up label_mnist_1_split
I0428 20:39:09.861276  5237 net.cpp:131] Top shape: 100 (100)
I0428 20:39:09.861280  5237 net.cpp:131] Top shape: 100 (100)
I0428 20:39:09.861282  5237 net.cpp:139] Memory required for data: 314800
I0428 20:39:09.861285  5237 layer_factory.hpp:77] Creating layer conv0
I0428 20:39:09.861294  5237 net.cpp:86] Creating Layer conv0
I0428 20:39:09.861299  5237 net.cpp:408] conv0 <- data
I0428 20:39:09.861304  5237 net.cpp:382] conv0 -> conv0
I0428 20:39:09.863073  5237 net.cpp:124] Setting up conv0
I0428 20:39:09.863088  5237 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:39:09.863092  5237 net.cpp:139] Memory required for data: 23354800
I0428 20:39:09.863101  5237 layer_factory.hpp:77] Creating layer pool0
I0428 20:39:09.863108  5237 net.cpp:86] Creating Layer pool0
I0428 20:39:09.863114  5237 net.cpp:408] pool0 <- conv0
I0428 20:39:09.863135  5237 net.cpp:382] pool0 -> pool0
I0428 20:39:09.863173  5237 net.cpp:124] Setting up pool0
I0428 20:39:09.863181  5237 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:39:09.863200  5237 net.cpp:139] Memory required for data: 29114800
I0428 20:39:09.863204  5237 layer_factory.hpp:77] Creating layer conv1
I0428 20:39:09.863212  5237 net.cpp:86] Creating Layer conv1
I0428 20:39:09.863215  5237 net.cpp:408] conv1 <- pool0
I0428 20:39:09.863221  5237 net.cpp:382] conv1 -> conv1
I0428 20:39:09.866180  5237 net.cpp:124] Setting up conv1
I0428 20:39:09.866207  5237 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:39:09.866211  5237 net.cpp:139] Memory required for data: 31674800
I0428 20:39:09.866220  5237 layer_factory.hpp:77] Creating layer pool1
I0428 20:39:09.866226  5237 net.cpp:86] Creating Layer pool1
I0428 20:39:09.866230  5237 net.cpp:408] pool1 <- conv1
I0428 20:39:09.866235  5237 net.cpp:382] pool1 -> pool1
I0428 20:39:09.866286  5237 net.cpp:124] Setting up pool1
I0428 20:39:09.866293  5237 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:39:09.866297  5237 net.cpp:139] Memory required for data: 32314800
I0428 20:39:09.866300  5237 layer_factory.hpp:77] Creating layer ip1
I0428 20:39:09.866307  5237 net.cpp:86] Creating Layer ip1
I0428 20:39:09.866310  5237 net.cpp:408] ip1 <- pool1
I0428 20:39:09.866324  5237 net.cpp:382] ip1 -> ip1
I0428 20:39:09.866880  5237 net.cpp:124] Setting up ip1
I0428 20:39:09.866897  5237 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:09.866917  5237 net.cpp:139] Memory required for data: 32334800
I0428 20:39:09.866925  5237 layer_factory.hpp:77] Creating layer relu1
I0428 20:39:09.866930  5237 net.cpp:86] Creating Layer relu1
I0428 20:39:09.866933  5237 net.cpp:408] relu1 <- ip1
I0428 20:39:09.866945  5237 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:39:09.867139  5237 net.cpp:124] Setting up relu1
I0428 20:39:09.867169  5237 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:09.867173  5237 net.cpp:139] Memory required for data: 32354800
I0428 20:39:09.867177  5237 layer_factory.hpp:77] Creating layer ip2
I0428 20:39:09.867183  5237 net.cpp:86] Creating Layer ip2
I0428 20:39:09.867187  5237 net.cpp:408] ip2 <- ip1
I0428 20:39:09.867192  5237 net.cpp:382] ip2 -> ip2
I0428 20:39:09.867327  5237 net.cpp:124] Setting up ip2
I0428 20:39:09.867336  5237 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:09.867357  5237 net.cpp:139] Memory required for data: 32374800
I0428 20:39:09.867364  5237 layer_factory.hpp:77] Creating layer relu2
I0428 20:39:09.867369  5237 net.cpp:86] Creating Layer relu2
I0428 20:39:09.867373  5237 net.cpp:408] relu2 <- ip2
I0428 20:39:09.867378  5237 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:39:09.867545  5237 net.cpp:124] Setting up relu2
I0428 20:39:09.867561  5237 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:09.867564  5237 net.cpp:139] Memory required for data: 32394800
I0428 20:39:09.867568  5237 layer_factory.hpp:77] Creating layer ip3
I0428 20:39:09.867574  5237 net.cpp:86] Creating Layer ip3
I0428 20:39:09.867595  5237 net.cpp:408] ip3 <- ip2
I0428 20:39:09.867604  5237 net.cpp:382] ip3 -> ip3
I0428 20:39:09.867702  5237 net.cpp:124] Setting up ip3
I0428 20:39:09.867714  5237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:09.867718  5237 net.cpp:139] Memory required for data: 32398800
I0428 20:39:09.867727  5237 layer_factory.hpp:77] Creating layer relu3
I0428 20:39:09.867733  5237 net.cpp:86] Creating Layer relu3
I0428 20:39:09.867735  5237 net.cpp:408] relu3 <- ip3
I0428 20:39:09.867740  5237 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:39:09.868574  5237 net.cpp:124] Setting up relu3
I0428 20:39:09.868587  5237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:09.868592  5237 net.cpp:139] Memory required for data: 32402800
I0428 20:39:09.868594  5237 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:39:09.868600  5237 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:39:09.868603  5237 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:39:09.868608  5237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:39:09.868615  5237 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:39:09.868679  5237 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:39:09.868683  5237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:09.868688  5237 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:09.868691  5237 net.cpp:139] Memory required for data: 32410800
I0428 20:39:09.868695  5237 layer_factory.hpp:77] Creating layer accuracy
I0428 20:39:09.868705  5237 net.cpp:86] Creating Layer accuracy
I0428 20:39:09.868711  5237 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:39:09.868731  5237 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:39:09.868736  5237 net.cpp:382] accuracy -> accuracy
I0428 20:39:09.868743  5237 net.cpp:124] Setting up accuracy
I0428 20:39:09.868747  5237 net.cpp:131] Top shape: (1)
I0428 20:39:09.868752  5237 net.cpp:139] Memory required for data: 32410804
I0428 20:39:09.868769  5237 layer_factory.hpp:77] Creating layer loss
I0428 20:39:09.868775  5237 net.cpp:86] Creating Layer loss
I0428 20:39:09.868778  5237 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:39:09.868782  5237 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:39:09.868787  5237 net.cpp:382] loss -> loss
I0428 20:39:09.868793  5237 layer_factory.hpp:77] Creating layer loss
I0428 20:39:09.869072  5237 net.cpp:124] Setting up loss
I0428 20:39:09.869082  5237 net.cpp:131] Top shape: (1)
I0428 20:39:09.869086  5237 net.cpp:134]     with loss weight 1
I0428 20:39:09.869102  5237 net.cpp:139] Memory required for data: 32410808
I0428 20:39:09.869107  5237 net.cpp:200] loss needs backward computation.
I0428 20:39:09.869110  5237 net.cpp:202] accuracy does not need backward computation.
I0428 20:39:09.869114  5237 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:39:09.869117  5237 net.cpp:200] relu3 needs backward computation.
I0428 20:39:09.869120  5237 net.cpp:200] ip3 needs backward computation.
I0428 20:39:09.869123  5237 net.cpp:200] relu2 needs backward computation.
I0428 20:39:09.869125  5237 net.cpp:200] ip2 needs backward computation.
I0428 20:39:09.869128  5237 net.cpp:200] relu1 needs backward computation.
I0428 20:39:09.869132  5237 net.cpp:200] ip1 needs backward computation.
I0428 20:39:09.869135  5237 net.cpp:200] pool1 needs backward computation.
I0428 20:39:09.869154  5237 net.cpp:200] conv1 needs backward computation.
I0428 20:39:09.869158  5237 net.cpp:200] pool0 needs backward computation.
I0428 20:39:09.869175  5237 net.cpp:200] conv0 needs backward computation.
I0428 20:39:09.869179  5237 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:39:09.869182  5237 net.cpp:202] mnist does not need backward computation.
I0428 20:39:09.869185  5237 net.cpp:244] This network produces output accuracy
I0428 20:39:09.869189  5237 net.cpp:244] This network produces output loss
I0428 20:39:09.869199  5237 net.cpp:257] Network initialization done.
I0428 20:39:09.869241  5237 solver.cpp:56] Solver scaffolding done.
I0428 20:39:09.869630  5237 caffe.cpp:248] Starting Optimization
I0428 20:39:09.869637  5237 solver.cpp:273] Solving LeNet
I0428 20:39:09.869654  5237 solver.cpp:274] Learning Rate Policy: inv
I0428 20:39:09.871004  5237 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:39:10.004933  5244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:10.008496  5237 solver.cpp:398]     Test net output #0: accuracy = 0.1189
I0428 20:39:10.008529  5237 solver.cpp:398]     Test net output #1: loss = 2.31091 (* 1 = 2.31091 loss)
I0428 20:39:10.013878  5237 solver.cpp:219] Iteration 0 (-5.63322e-43 iter/s, 0.144195s/100 iters), loss = 2.30789
I0428 20:39:10.013916  5237 solver.cpp:238]     Train net output #0: loss = 2.30789 (* 1 = 2.30789 loss)
I0428 20:39:10.013927  5237 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:39:10.288838  5237 solver.cpp:219] Iteration 100 (363.744 iter/s, 0.274918s/100 iters), loss = 0.380734
I0428 20:39:10.288894  5237 solver.cpp:238]     Train net output #0: loss = 0.380734 (* 1 = 0.380734 loss)
I0428 20:39:10.288902  5237 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:39:10.559744  5237 solver.cpp:219] Iteration 200 (369.212 iter/s, 0.270847s/100 iters), loss = 0.704379
I0428 20:39:10.559770  5237 solver.cpp:238]     Train net output #0: loss = 0.704379 (* 1 = 0.704379 loss)
I0428 20:39:10.559777  5237 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:39:10.831974  5237 solver.cpp:219] Iteration 300 (367.394 iter/s, 0.272187s/100 iters), loss = 0.41145
I0428 20:39:10.832015  5237 solver.cpp:238]     Train net output #0: loss = 0.41145 (* 1 = 0.41145 loss)
I0428 20:39:10.832022  5237 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:39:11.105253  5237 solver.cpp:219] Iteration 400 (365.985 iter/s, 0.273235s/100 iters), loss = 0.332687
I0428 20:39:11.105293  5237 solver.cpp:238]     Train net output #0: loss = 0.332687 (* 1 = 0.332687 loss)
I0428 20:39:11.105298  5237 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:39:11.377218  5237 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:39:11.503872  5244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:11.508502  5237 solver.cpp:398]     Test net output #0: accuracy = 0.9699
I0428 20:39:11.508522  5237 solver.cpp:398]     Test net output #1: loss = 0.100172 (* 1 = 0.100172 loss)
I0428 20:39:11.511183  5237 solver.cpp:219] Iteration 500 (246.385 iter/s, 0.405868s/100 iters), loss = 0.0432527
I0428 20:39:11.511221  5237 solver.cpp:238]     Train net output #0: loss = 0.0432527 (* 1 = 0.0432527 loss)
I0428 20:39:11.511243  5237 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:39:11.790596  5237 solver.cpp:219] Iteration 600 (357.964 iter/s, 0.279357s/100 iters), loss = 0.0674893
I0428 20:39:11.790637  5237 solver.cpp:238]     Train net output #0: loss = 0.0674894 (* 1 = 0.0674894 loss)
I0428 20:39:11.790644  5237 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:39:12.079767  5237 solver.cpp:219] Iteration 700 (345.87 iter/s, 0.289126s/100 iters), loss = 0.0993008
I0428 20:39:12.079809  5237 solver.cpp:238]     Train net output #0: loss = 0.0993009 (* 1 = 0.0993009 loss)
I0428 20:39:12.079816  5237 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:39:12.369190  5237 solver.cpp:219] Iteration 800 (345.568 iter/s, 0.289378s/100 iters), loss = 0.226744
I0428 20:39:12.369231  5237 solver.cpp:238]     Train net output #0: loss = 0.226744 (* 1 = 0.226744 loss)
I0428 20:39:12.369238  5237 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:39:12.654973  5237 solver.cpp:219] Iteration 900 (349.973 iter/s, 0.285736s/100 iters), loss = 0.104548
I0428 20:39:12.655035  5237 solver.cpp:238]     Train net output #0: loss = 0.104548 (* 1 = 0.104548 loss)
I0428 20:39:12.655042  5237 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:39:12.749747  5243 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:12.939512  5237 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:39:12.945119  5237 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:39:12.948616  5237 solver.cpp:311] Iteration 1000, loss = 0.0815965
I0428 20:39:12.948640  5237 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:39:13.079725  5244 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:13.082970  5237 solver.cpp:398]     Test net output #0: accuracy = 0.9806
I0428 20:39:13.083005  5237 solver.cpp:398]     Test net output #1: loss = 0.0581675 (* 1 = 0.0581675 loss)
I0428 20:39:13.083010  5237 solver.cpp:316] Optimization Done.
I0428 20:39:13.083014  5237 caffe.cpp:259] Optimization Done.
