I0428 19:51:15.124718 27235 caffe.cpp:218] Using GPUs 0
I0428 19:51:15.161556 27235 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:15.665244 27235 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test628.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:15.665379 27235 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test628.prototxt
I0428 19:51:15.665753 27235 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:15.665771 27235 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:15.665858 27235 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:15.665932 27235 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:15.666026 27235 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:15.666049 27235 net.cpp:86] Creating Layer mnist
I0428 19:51:15.666057 27235 net.cpp:382] mnist -> data
I0428 19:51:15.666077 27235 net.cpp:382] mnist -> label
I0428 19:51:15.667129 27235 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:15.669589 27235 net.cpp:124] Setting up mnist
I0428 19:51:15.669607 27235 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:15.669612 27235 net.cpp:131] Top shape: 64 (64)
I0428 19:51:15.669616 27235 net.cpp:139] Memory required for data: 200960
I0428 19:51:15.669622 27235 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:15.669651 27235 net.cpp:86] Creating Layer conv0
I0428 19:51:15.669656 27235 net.cpp:408] conv0 <- data
I0428 19:51:15.669669 27235 net.cpp:382] conv0 -> conv0
I0428 19:51:15.954390 27235 net.cpp:124] Setting up conv0
I0428 19:51:15.954417 27235 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:15.954421 27235 net.cpp:139] Memory required for data: 938240
I0428 19:51:15.954457 27235 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:15.954470 27235 net.cpp:86] Creating Layer pool0
I0428 19:51:15.954475 27235 net.cpp:408] pool0 <- conv0
I0428 19:51:15.954481 27235 net.cpp:382] pool0 -> pool0
I0428 19:51:15.954536 27235 net.cpp:124] Setting up pool0
I0428 19:51:15.954542 27235 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:15.954545 27235 net.cpp:139] Memory required for data: 1122560
I0428 19:51:15.954548 27235 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:15.954560 27235 net.cpp:86] Creating Layer conv1
I0428 19:51:15.954563 27235 net.cpp:408] conv1 <- pool0
I0428 19:51:15.954569 27235 net.cpp:382] conv1 -> conv1
I0428 19:51:15.957479 27235 net.cpp:124] Setting up conv1
I0428 19:51:15.957495 27235 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:15.957499 27235 net.cpp:139] Memory required for data: 1532160
I0428 19:51:15.957509 27235 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:15.957516 27235 net.cpp:86] Creating Layer pool1
I0428 19:51:15.957520 27235 net.cpp:408] pool1 <- conv1
I0428 19:51:15.957526 27235 net.cpp:382] pool1 -> pool1
I0428 19:51:15.957566 27235 net.cpp:124] Setting up pool1
I0428 19:51:15.957572 27235 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:15.957576 27235 net.cpp:139] Memory required for data: 1634560
I0428 19:51:15.957578 27235 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:15.957587 27235 net.cpp:86] Creating Layer ip1
I0428 19:51:15.957589 27235 net.cpp:408] ip1 <- pool1
I0428 19:51:15.957594 27235 net.cpp:382] ip1 -> ip1
I0428 19:51:15.957721 27235 net.cpp:124] Setting up ip1
I0428 19:51:15.957729 27235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:15.957733 27235 net.cpp:139] Memory required for data: 1637120
I0428 19:51:15.957741 27235 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:15.957747 27235 net.cpp:86] Creating Layer relu1
I0428 19:51:15.957751 27235 net.cpp:408] relu1 <- ip1
I0428 19:51:15.957756 27235 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:15.957933 27235 net.cpp:124] Setting up relu1
I0428 19:51:15.957942 27235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:15.957947 27235 net.cpp:139] Memory required for data: 1639680
I0428 19:51:15.957949 27235 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:15.957957 27235 net.cpp:86] Creating Layer ip2
I0428 19:51:15.957959 27235 net.cpp:408] ip2 <- ip1
I0428 19:51:15.957964 27235 net.cpp:382] ip2 -> ip2
I0428 19:51:15.958068 27235 net.cpp:124] Setting up ip2
I0428 19:51:15.958076 27235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:15.958079 27235 net.cpp:139] Memory required for data: 1642240
I0428 19:51:15.958084 27235 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:15.958091 27235 net.cpp:86] Creating Layer relu2
I0428 19:51:15.958094 27235 net.cpp:408] relu2 <- ip2
I0428 19:51:15.958099 27235 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:15.958875 27235 net.cpp:124] Setting up relu2
I0428 19:51:15.958889 27235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:15.958892 27235 net.cpp:139] Memory required for data: 1644800
I0428 19:51:15.958896 27235 layer_factory.hpp:77] Creating layer loss
I0428 19:51:15.958904 27235 net.cpp:86] Creating Layer loss
I0428 19:51:15.958909 27235 net.cpp:408] loss <- ip2
I0428 19:51:15.958914 27235 net.cpp:408] loss <- label
I0428 19:51:15.958920 27235 net.cpp:382] loss -> loss
I0428 19:51:15.958940 27235 layer_factory.hpp:77] Creating layer loss
I0428 19:51:15.959188 27235 net.cpp:124] Setting up loss
I0428 19:51:15.959198 27235 net.cpp:131] Top shape: (1)
I0428 19:51:15.959203 27235 net.cpp:134]     with loss weight 1
I0428 19:51:15.959218 27235 net.cpp:139] Memory required for data: 1644804
I0428 19:51:15.959221 27235 net.cpp:200] loss needs backward computation.
I0428 19:51:15.959225 27235 net.cpp:200] relu2 needs backward computation.
I0428 19:51:15.959228 27235 net.cpp:200] ip2 needs backward computation.
I0428 19:51:15.959231 27235 net.cpp:200] relu1 needs backward computation.
I0428 19:51:15.959234 27235 net.cpp:200] ip1 needs backward computation.
I0428 19:51:15.959249 27235 net.cpp:200] pool1 needs backward computation.
I0428 19:51:15.959252 27235 net.cpp:200] conv1 needs backward computation.
I0428 19:51:15.959255 27235 net.cpp:200] pool0 needs backward computation.
I0428 19:51:15.959259 27235 net.cpp:200] conv0 needs backward computation.
I0428 19:51:15.959262 27235 net.cpp:202] mnist does not need backward computation.
I0428 19:51:15.959265 27235 net.cpp:244] This network produces output loss
I0428 19:51:15.959275 27235 net.cpp:257] Network initialization done.
I0428 19:51:15.959586 27235 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test628.prototxt
I0428 19:51:15.959612 27235 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:15.959703 27235 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:15.959771 27235 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:15.959820 27235 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:15.959832 27235 net.cpp:86] Creating Layer mnist
I0428 19:51:15.959837 27235 net.cpp:382] mnist -> data
I0428 19:51:15.959846 27235 net.cpp:382] mnist -> label
I0428 19:51:15.959936 27235 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:15.962162 27235 net.cpp:124] Setting up mnist
I0428 19:51:15.962183 27235 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:15.962188 27235 net.cpp:131] Top shape: 100 (100)
I0428 19:51:15.962191 27235 net.cpp:139] Memory required for data: 314000
I0428 19:51:15.962195 27235 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:15.962206 27235 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:15.962210 27235 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:15.962215 27235 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:15.962222 27235 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:15.962282 27235 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:15.962297 27235 net.cpp:131] Top shape: 100 (100)
I0428 19:51:15.962301 27235 net.cpp:131] Top shape: 100 (100)
I0428 19:51:15.962304 27235 net.cpp:139] Memory required for data: 314800
I0428 19:51:15.962307 27235 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:15.962316 27235 net.cpp:86] Creating Layer conv0
I0428 19:51:15.962321 27235 net.cpp:408] conv0 <- data
I0428 19:51:15.962326 27235 net.cpp:382] conv0 -> conv0
I0428 19:51:15.964124 27235 net.cpp:124] Setting up conv0
I0428 19:51:15.964146 27235 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:15.964150 27235 net.cpp:139] Memory required for data: 1466800
I0428 19:51:15.964160 27235 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:15.964167 27235 net.cpp:86] Creating Layer pool0
I0428 19:51:15.964170 27235 net.cpp:408] pool0 <- conv0
I0428 19:51:15.964176 27235 net.cpp:382] pool0 -> pool0
I0428 19:51:15.964213 27235 net.cpp:124] Setting up pool0
I0428 19:51:15.964218 27235 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:15.964221 27235 net.cpp:139] Memory required for data: 1754800
I0428 19:51:15.964224 27235 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:15.964232 27235 net.cpp:86] Creating Layer conv1
I0428 19:51:15.964236 27235 net.cpp:408] conv1 <- pool0
I0428 19:51:15.964241 27235 net.cpp:382] conv1 -> conv1
I0428 19:51:15.966295 27235 net.cpp:124] Setting up conv1
I0428 19:51:15.966307 27235 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:15.966312 27235 net.cpp:139] Memory required for data: 2394800
I0428 19:51:15.966330 27235 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:15.966336 27235 net.cpp:86] Creating Layer pool1
I0428 19:51:15.966346 27235 net.cpp:408] pool1 <- conv1
I0428 19:51:15.966351 27235 net.cpp:382] pool1 -> pool1
I0428 19:51:15.966392 27235 net.cpp:124] Setting up pool1
I0428 19:51:15.966398 27235 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:15.966401 27235 net.cpp:139] Memory required for data: 2554800
I0428 19:51:15.966406 27235 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:15.966415 27235 net.cpp:86] Creating Layer ip1
I0428 19:51:15.966418 27235 net.cpp:408] ip1 <- pool1
I0428 19:51:15.966423 27235 net.cpp:382] ip1 -> ip1
I0428 19:51:15.966548 27235 net.cpp:124] Setting up ip1
I0428 19:51:15.966557 27235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:15.966559 27235 net.cpp:139] Memory required for data: 2558800
I0428 19:51:15.966567 27235 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:15.966572 27235 net.cpp:86] Creating Layer relu1
I0428 19:51:15.966575 27235 net.cpp:408] relu1 <- ip1
I0428 19:51:15.966579 27235 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:15.966759 27235 net.cpp:124] Setting up relu1
I0428 19:51:15.966768 27235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:15.966773 27235 net.cpp:139] Memory required for data: 2562800
I0428 19:51:15.966775 27235 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:15.966784 27235 net.cpp:86] Creating Layer ip2
I0428 19:51:15.966786 27235 net.cpp:408] ip2 <- ip1
I0428 19:51:15.966792 27235 net.cpp:382] ip2 -> ip2
I0428 19:51:15.966905 27235 net.cpp:124] Setting up ip2
I0428 19:51:15.966913 27235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:15.966917 27235 net.cpp:139] Memory required for data: 2566800
I0428 19:51:15.966922 27235 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:15.966927 27235 net.cpp:86] Creating Layer relu2
I0428 19:51:15.966929 27235 net.cpp:408] relu2 <- ip2
I0428 19:51:15.966934 27235 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:15.967116 27235 net.cpp:124] Setting up relu2
I0428 19:51:15.967125 27235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:15.967128 27235 net.cpp:139] Memory required for data: 2570800
I0428 19:51:15.967131 27235 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:15.967136 27235 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:15.967140 27235 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:15.967145 27235 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:15.967164 27235 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:15.967202 27235 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:15.967208 27235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:15.967211 27235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:15.967214 27235 net.cpp:139] Memory required for data: 2578800
I0428 19:51:15.967217 27235 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:15.967223 27235 net.cpp:86] Creating Layer accuracy
I0428 19:51:15.967226 27235 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:15.967231 27235 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:15.967236 27235 net.cpp:382] accuracy -> accuracy
I0428 19:51:15.967243 27235 net.cpp:124] Setting up accuracy
I0428 19:51:15.967247 27235 net.cpp:131] Top shape: (1)
I0428 19:51:15.967249 27235 net.cpp:139] Memory required for data: 2578804
I0428 19:51:15.967252 27235 layer_factory.hpp:77] Creating layer loss
I0428 19:51:15.967258 27235 net.cpp:86] Creating Layer loss
I0428 19:51:15.967262 27235 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:15.967265 27235 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:15.967269 27235 net.cpp:382] loss -> loss
I0428 19:51:15.967275 27235 layer_factory.hpp:77] Creating layer loss
I0428 19:51:15.967561 27235 net.cpp:124] Setting up loss
I0428 19:51:15.967571 27235 net.cpp:131] Top shape: (1)
I0428 19:51:15.967574 27235 net.cpp:134]     with loss weight 1
I0428 19:51:15.967581 27235 net.cpp:139] Memory required for data: 2578808
I0428 19:51:15.967584 27235 net.cpp:200] loss needs backward computation.
I0428 19:51:15.967588 27235 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:15.967592 27235 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:15.967602 27235 net.cpp:200] relu2 needs backward computation.
I0428 19:51:15.967605 27235 net.cpp:200] ip2 needs backward computation.
I0428 19:51:15.967608 27235 net.cpp:200] relu1 needs backward computation.
I0428 19:51:15.967612 27235 net.cpp:200] ip1 needs backward computation.
I0428 19:51:15.967614 27235 net.cpp:200] pool1 needs backward computation.
I0428 19:51:15.967617 27235 net.cpp:200] conv1 needs backward computation.
I0428 19:51:15.967620 27235 net.cpp:200] pool0 needs backward computation.
I0428 19:51:15.967623 27235 net.cpp:200] conv0 needs backward computation.
I0428 19:51:15.967627 27235 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:15.967633 27235 net.cpp:202] mnist does not need backward computation.
I0428 19:51:15.967634 27235 net.cpp:244] This network produces output accuracy
I0428 19:51:15.967638 27235 net.cpp:244] This network produces output loss
I0428 19:51:15.967648 27235 net.cpp:257] Network initialization done.
I0428 19:51:15.967687 27235 solver.cpp:56] Solver scaffolding done.
I0428 19:51:15.967968 27235 caffe.cpp:248] Starting Optimization
I0428 19:51:15.967983 27235 solver.cpp:273] Solving LeNet
I0428 19:51:15.967985 27235 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:15.968152 27235 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:15.971930 27235 blocking_queue.cpp:49] Waiting for data
I0428 19:51:16.043692 27242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:16.044170 27235 solver.cpp:398]     Test net output #0: accuracy = 0.0647
I0428 19:51:16.044189 27235 solver.cpp:398]     Test net output #1: loss = 2.29786 (* 1 = 2.29786 loss)
I0428 19:51:16.045874 27235 solver.cpp:219] Iteration 0 (0 iter/s, 0.0778615s/100 iters), loss = 2.30935
I0428 19:51:16.045907 27235 solver.cpp:238]     Train net output #0: loss = 2.30935 (* 1 = 2.30935 loss)
I0428 19:51:16.045918 27235 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:16.133951 27235 solver.cpp:219] Iteration 100 (1135.93 iter/s, 0.0880339s/100 iters), loss = 1.40874
I0428 19:51:16.133976 27235 solver.cpp:238]     Train net output #0: loss = 1.40874 (* 1 = 1.40874 loss)
I0428 19:51:16.133982 27235 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:16.211369 27235 solver.cpp:219] Iteration 200 (1292.26 iter/s, 0.0773837s/100 iters), loss = 1.03603
I0428 19:51:16.211421 27235 solver.cpp:238]     Train net output #0: loss = 1.03603 (* 1 = 1.03603 loss)
I0428 19:51:16.211427 27235 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:16.288377 27235 solver.cpp:219] Iteration 300 (1299.59 iter/s, 0.0769475s/100 iters), loss = 1.02738
I0428 19:51:16.288415 27235 solver.cpp:238]     Train net output #0: loss = 1.02738 (* 1 = 1.02738 loss)
I0428 19:51:16.288421 27235 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:16.365073 27235 solver.cpp:219] Iteration 400 (1304.4 iter/s, 0.0766638s/100 iters), loss = 0.862177
I0428 19:51:16.365097 27235 solver.cpp:238]     Train net output #0: loss = 0.862177 (* 1 = 0.862177 loss)
I0428 19:51:16.365104 27235 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:16.441864 27235 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:16.517681 27242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:16.518182 27235 solver.cpp:398]     Test net output #0: accuracy = 0.6596
I0428 19:51:16.518201 27235 solver.cpp:398]     Test net output #1: loss = 0.875221 (* 1 = 0.875221 loss)
I0428 19:51:16.519084 27235 solver.cpp:219] Iteration 500 (649.462 iter/s, 0.153974s/100 iters), loss = 0.851393
I0428 19:51:16.519107 27235 solver.cpp:238]     Train net output #0: loss = 0.851393 (* 1 = 0.851393 loss)
I0428 19:51:16.519114 27235 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:16.610424 27235 solver.cpp:219] Iteration 600 (1095.22 iter/s, 0.091306s/100 iters), loss = 1.10988
I0428 19:51:16.610450 27235 solver.cpp:238]     Train net output #0: loss = 1.10988 (* 1 = 1.10988 loss)
I0428 19:51:16.610455 27235 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:16.689180 27235 solver.cpp:219] Iteration 700 (1270.29 iter/s, 0.0787221s/100 iters), loss = 0.72887
I0428 19:51:16.689204 27235 solver.cpp:238]     Train net output #0: loss = 0.72887 (* 1 = 0.72887 loss)
I0428 19:51:16.689210 27235 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:16.766363 27235 solver.cpp:219] Iteration 800 (1296.17 iter/s, 0.0771502s/100 iters), loss = 0.884778
I0428 19:51:16.766403 27235 solver.cpp:238]     Train net output #0: loss = 0.884778 (* 1 = 0.884778 loss)
I0428 19:51:16.766409 27235 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:16.843997 27235 solver.cpp:219] Iteration 900 (1288.66 iter/s, 0.0775998s/100 iters), loss = 0.843661
I0428 19:51:16.844036 27235 solver.cpp:238]     Train net output #0: loss = 0.843661 (* 1 = 0.843661 loss)
I0428 19:51:16.844043 27235 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:16.870231 27241 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:16.929821 27235 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:16.930716 27235 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:16.931200 27235 solver.cpp:311] Iteration 1000, loss = 0.824598
I0428 19:51:16.931229 27235 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:17.005854 27242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:17.006466 27235 solver.cpp:398]     Test net output #0: accuracy = 0.6717
I0428 19:51:17.006496 27235 solver.cpp:398]     Test net output #1: loss = 0.801154 (* 1 = 0.801154 loss)
I0428 19:51:17.006505 27235 solver.cpp:316] Optimization Done.
I0428 19:51:17.006510 27235 caffe.cpp:259] Optimization Done.
