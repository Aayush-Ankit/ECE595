I0428 20:36:05.436061  4742 caffe.cpp:218] Using GPUs 0
I0428 20:36:05.475411  4742 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:05.989559  4742 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1631.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:05.989704  4742 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1631.prototxt
I0428 20:36:05.990123  4742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:05.990142  4742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:05.990245  4742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:05.990326  4742 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:05.990424  4742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:05.990447  4742 net.cpp:86] Creating Layer mnist
I0428 20:36:05.990456  4742 net.cpp:382] mnist -> data
I0428 20:36:05.990479  4742 net.cpp:382] mnist -> label
I0428 20:36:05.991587  4742 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:05.994048  4742 net.cpp:124] Setting up mnist
I0428 20:36:05.994065  4742 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:05.994071  4742 net.cpp:131] Top shape: 64 (64)
I0428 20:36:05.994076  4742 net.cpp:139] Memory required for data: 200960
I0428 20:36:05.994082  4742 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:05.994132  4742 net.cpp:86] Creating Layer conv0
I0428 20:36:05.994153  4742 net.cpp:408] conv0 <- data
I0428 20:36:05.994168  4742 net.cpp:382] conv0 -> conv0
I0428 20:36:06.278955  4742 net.cpp:124] Setting up conv0
I0428 20:36:06.278982  4742 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:06.278986  4742 net.cpp:139] Memory required for data: 14946560
I0428 20:36:06.279001  4742 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:06.279013  4742 net.cpp:86] Creating Layer pool0
I0428 20:36:06.279017  4742 net.cpp:408] pool0 <- conv0
I0428 20:36:06.279023  4742 net.cpp:382] pool0 -> pool0
I0428 20:36:06.279069  4742 net.cpp:124] Setting up pool0
I0428 20:36:06.279075  4742 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:06.279078  4742 net.cpp:139] Memory required for data: 18632960
I0428 20:36:06.279081  4742 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:06.279093  4742 net.cpp:86] Creating Layer conv1
I0428 20:36:06.279095  4742 net.cpp:408] conv1 <- pool0
I0428 20:36:06.279100  4742 net.cpp:382] conv1 -> conv1
I0428 20:36:06.282428  4742 net.cpp:124] Setting up conv1
I0428 20:36:06.282443  4742 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:06.282446  4742 net.cpp:139] Memory required for data: 19452160
I0428 20:36:06.282455  4742 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:06.282462  4742 net.cpp:86] Creating Layer pool1
I0428 20:36:06.282466  4742 net.cpp:408] pool1 <- conv1
I0428 20:36:06.282471  4742 net.cpp:382] pool1 -> pool1
I0428 20:36:06.282506  4742 net.cpp:124] Setting up pool1
I0428 20:36:06.282511  4742 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:06.282515  4742 net.cpp:139] Memory required for data: 19656960
I0428 20:36:06.282517  4742 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:06.282523  4742 net.cpp:86] Creating Layer ip1
I0428 20:36:06.282526  4742 net.cpp:408] ip1 <- pool1
I0428 20:36:06.282531  4742 net.cpp:382] ip1 -> ip1
I0428 20:36:06.282845  4742 net.cpp:124] Setting up ip1
I0428 20:36:06.282853  4742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:06.282856  4742 net.cpp:139] Memory required for data: 19669760
I0428 20:36:06.282865  4742 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:06.282869  4742 net.cpp:86] Creating Layer relu1
I0428 20:36:06.282872  4742 net.cpp:408] relu1 <- ip1
I0428 20:36:06.282877  4742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:06.283036  4742 net.cpp:124] Setting up relu1
I0428 20:36:06.283046  4742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:06.283048  4742 net.cpp:139] Memory required for data: 19682560
I0428 20:36:06.283051  4742 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:06.283057  4742 net.cpp:86] Creating Layer ip2
I0428 20:36:06.283061  4742 net.cpp:408] ip2 <- ip1
I0428 20:36:06.283064  4742 net.cpp:382] ip2 -> ip2
I0428 20:36:06.283156  4742 net.cpp:124] Setting up ip2
I0428 20:36:06.283164  4742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:06.283166  4742 net.cpp:139] Memory required for data: 19685120
I0428 20:36:06.283172  4742 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:06.283177  4742 net.cpp:86] Creating Layer relu2
I0428 20:36:06.283181  4742 net.cpp:408] relu2 <- ip2
I0428 20:36:06.283185  4742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:06.283968  4742 net.cpp:124] Setting up relu2
I0428 20:36:06.283982  4742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:06.283987  4742 net.cpp:139] Memory required for data: 19687680
I0428 20:36:06.283990  4742 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:06.283998  4742 net.cpp:86] Creating Layer ip3
I0428 20:36:06.284001  4742 net.cpp:408] ip3 <- ip2
I0428 20:36:06.284008  4742 net.cpp:382] ip3 -> ip3
I0428 20:36:06.284155  4742 net.cpp:124] Setting up ip3
I0428 20:36:06.284163  4742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:06.284167  4742 net.cpp:139] Memory required for data: 19690240
I0428 20:36:06.284174  4742 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:06.284179  4742 net.cpp:86] Creating Layer relu3
I0428 20:36:06.284183  4742 net.cpp:408] relu3 <- ip3
I0428 20:36:06.284186  4742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:06.284348  4742 net.cpp:124] Setting up relu3
I0428 20:36:06.284355  4742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:06.284359  4742 net.cpp:139] Memory required for data: 19692800
I0428 20:36:06.284363  4742 layer_factory.hpp:77] Creating layer loss
I0428 20:36:06.284368  4742 net.cpp:86] Creating Layer loss
I0428 20:36:06.284370  4742 net.cpp:408] loss <- ip3
I0428 20:36:06.284374  4742 net.cpp:408] loss <- label
I0428 20:36:06.284379  4742 net.cpp:382] loss -> loss
I0428 20:36:06.284397  4742 layer_factory.hpp:77] Creating layer loss
I0428 20:36:06.284610  4742 net.cpp:124] Setting up loss
I0428 20:36:06.284620  4742 net.cpp:131] Top shape: (1)
I0428 20:36:06.284623  4742 net.cpp:134]     with loss weight 1
I0428 20:36:06.284637  4742 net.cpp:139] Memory required for data: 19692804
I0428 20:36:06.284641  4742 net.cpp:200] loss needs backward computation.
I0428 20:36:06.284644  4742 net.cpp:200] relu3 needs backward computation.
I0428 20:36:06.284647  4742 net.cpp:200] ip3 needs backward computation.
I0428 20:36:06.284651  4742 net.cpp:200] relu2 needs backward computation.
I0428 20:36:06.284653  4742 net.cpp:200] ip2 needs backward computation.
I0428 20:36:06.284657  4742 net.cpp:200] relu1 needs backward computation.
I0428 20:36:06.284659  4742 net.cpp:200] ip1 needs backward computation.
I0428 20:36:06.284662  4742 net.cpp:200] pool1 needs backward computation.
I0428 20:36:06.284665  4742 net.cpp:200] conv1 needs backward computation.
I0428 20:36:06.284668  4742 net.cpp:200] pool0 needs backward computation.
I0428 20:36:06.284672  4742 net.cpp:200] conv0 needs backward computation.
I0428 20:36:06.284674  4742 net.cpp:202] mnist does not need backward computation.
I0428 20:36:06.284677  4742 net.cpp:244] This network produces output loss
I0428 20:36:06.284687  4742 net.cpp:257] Network initialization done.
I0428 20:36:06.285008  4742 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1631.prototxt
I0428 20:36:06.285035  4742 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:06.285123  4742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:06.285202  4742 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:06.285244  4742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:06.285256  4742 net.cpp:86] Creating Layer mnist
I0428 20:36:06.285261  4742 net.cpp:382] mnist -> data
I0428 20:36:06.285269  4742 net.cpp:382] mnist -> label
I0428 20:36:06.285351  4742 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:06.286607  4742 net.cpp:124] Setting up mnist
I0428 20:36:06.286646  4742 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:06.286651  4742 net.cpp:131] Top shape: 100 (100)
I0428 20:36:06.286654  4742 net.cpp:139] Memory required for data: 314000
I0428 20:36:06.286659  4742 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:06.286669  4742 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:06.286672  4742 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:06.286677  4742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:06.286684  4742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:06.286721  4742 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:06.286726  4742 net.cpp:131] Top shape: 100 (100)
I0428 20:36:06.286731  4742 net.cpp:131] Top shape: 100 (100)
I0428 20:36:06.286733  4742 net.cpp:139] Memory required for data: 314800
I0428 20:36:06.286736  4742 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:06.286744  4742 net.cpp:86] Creating Layer conv0
I0428 20:36:06.286747  4742 net.cpp:408] conv0 <- data
I0428 20:36:06.286752  4742 net.cpp:382] conv0 -> conv0
I0428 20:36:06.288326  4742 net.cpp:124] Setting up conv0
I0428 20:36:06.288339  4742 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:06.288343  4742 net.cpp:139] Memory required for data: 23354800
I0428 20:36:06.288353  4742 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:06.288359  4742 net.cpp:86] Creating Layer pool0
I0428 20:36:06.288362  4742 net.cpp:408] pool0 <- conv0
I0428 20:36:06.288367  4742 net.cpp:382] pool0 -> pool0
I0428 20:36:06.288419  4742 net.cpp:124] Setting up pool0
I0428 20:36:06.288424  4742 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:06.288426  4742 net.cpp:139] Memory required for data: 29114800
I0428 20:36:06.288429  4742 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:06.288436  4742 net.cpp:86] Creating Layer conv1
I0428 20:36:06.288440  4742 net.cpp:408] conv1 <- pool0
I0428 20:36:06.288444  4742 net.cpp:382] conv1 -> conv1
I0428 20:36:06.291393  4742 net.cpp:124] Setting up conv1
I0428 20:36:06.291406  4742 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:06.291410  4742 net.cpp:139] Memory required for data: 30394800
I0428 20:36:06.291420  4742 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:06.291426  4742 net.cpp:86] Creating Layer pool1
I0428 20:36:06.291430  4742 net.cpp:408] pool1 <- conv1
I0428 20:36:06.291435  4742 net.cpp:382] pool1 -> pool1
I0428 20:36:06.291470  4742 net.cpp:124] Setting up pool1
I0428 20:36:06.291474  4742 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:06.291477  4742 net.cpp:139] Memory required for data: 30714800
I0428 20:36:06.291481  4742 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:06.291486  4742 net.cpp:86] Creating Layer ip1
I0428 20:36:06.291488  4742 net.cpp:408] ip1 <- pool1
I0428 20:36:06.291493  4742 net.cpp:382] ip1 -> ip1
I0428 20:36:06.291815  4742 net.cpp:124] Setting up ip1
I0428 20:36:06.291833  4742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:06.291837  4742 net.cpp:139] Memory required for data: 30734800
I0428 20:36:06.291844  4742 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:06.291849  4742 net.cpp:86] Creating Layer relu1
I0428 20:36:06.291852  4742 net.cpp:408] relu1 <- ip1
I0428 20:36:06.291857  4742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:06.292019  4742 net.cpp:124] Setting up relu1
I0428 20:36:06.292027  4742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:06.292037  4742 net.cpp:139] Memory required for data: 30754800
I0428 20:36:06.292040  4742 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:06.292047  4742 net.cpp:86] Creating Layer ip2
I0428 20:36:06.292050  4742 net.cpp:408] ip2 <- ip1
I0428 20:36:06.292055  4742 net.cpp:382] ip2 -> ip2
I0428 20:36:06.292150  4742 net.cpp:124] Setting up ip2
I0428 20:36:06.292158  4742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:06.292161  4742 net.cpp:139] Memory required for data: 30758800
I0428 20:36:06.292166  4742 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:06.292171  4742 net.cpp:86] Creating Layer relu2
I0428 20:36:06.292174  4742 net.cpp:408] relu2 <- ip2
I0428 20:36:06.292178  4742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:06.292323  4742 net.cpp:124] Setting up relu2
I0428 20:36:06.292337  4742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:06.292346  4742 net.cpp:139] Memory required for data: 30762800
I0428 20:36:06.292349  4742 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:06.292354  4742 net.cpp:86] Creating Layer ip3
I0428 20:36:06.292357  4742 net.cpp:408] ip3 <- ip2
I0428 20:36:06.292362  4742 net.cpp:382] ip3 -> ip3
I0428 20:36:06.292465  4742 net.cpp:124] Setting up ip3
I0428 20:36:06.292472  4742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:06.292476  4742 net.cpp:139] Memory required for data: 30766800
I0428 20:36:06.292484  4742 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:06.292488  4742 net.cpp:86] Creating Layer relu3
I0428 20:36:06.292491  4742 net.cpp:408] relu3 <- ip3
I0428 20:36:06.292495  4742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:06.293354  4742 net.cpp:124] Setting up relu3
I0428 20:36:06.293366  4742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:06.293370  4742 net.cpp:139] Memory required for data: 30770800
I0428 20:36:06.293375  4742 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:06.293380  4742 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:06.293382  4742 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:06.293393  4742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:06.293401  4742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:06.293436  4742 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:06.293447  4742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:06.293450  4742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:06.293453  4742 net.cpp:139] Memory required for data: 30778800
I0428 20:36:06.293457  4742 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:06.293462  4742 net.cpp:86] Creating Layer accuracy
I0428 20:36:06.293465  4742 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:06.293469  4742 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:06.293478  4742 net.cpp:382] accuracy -> accuracy
I0428 20:36:06.293485  4742 net.cpp:124] Setting up accuracy
I0428 20:36:06.293489  4742 net.cpp:131] Top shape: (1)
I0428 20:36:06.293493  4742 net.cpp:139] Memory required for data: 30778804
I0428 20:36:06.293495  4742 layer_factory.hpp:77] Creating layer loss
I0428 20:36:06.293499  4742 net.cpp:86] Creating Layer loss
I0428 20:36:06.293503  4742 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:06.293512  4742 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:06.293516  4742 net.cpp:382] loss -> loss
I0428 20:36:06.293522  4742 layer_factory.hpp:77] Creating layer loss
I0428 20:36:06.293759  4742 net.cpp:124] Setting up loss
I0428 20:36:06.293769  4742 net.cpp:131] Top shape: (1)
I0428 20:36:06.293773  4742 net.cpp:134]     with loss weight 1
I0428 20:36:06.293790  4742 net.cpp:139] Memory required for data: 30778808
I0428 20:36:06.293794  4742 net.cpp:200] loss needs backward computation.
I0428 20:36:06.293798  4742 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:06.293802  4742 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:06.293805  4742 net.cpp:200] relu3 needs backward computation.
I0428 20:36:06.293808  4742 net.cpp:200] ip3 needs backward computation.
I0428 20:36:06.293824  4742 net.cpp:200] relu2 needs backward computation.
I0428 20:36:06.293826  4742 net.cpp:200] ip2 needs backward computation.
I0428 20:36:06.293830  4742 net.cpp:200] relu1 needs backward computation.
I0428 20:36:06.293833  4742 net.cpp:200] ip1 needs backward computation.
I0428 20:36:06.293836  4742 net.cpp:200] pool1 needs backward computation.
I0428 20:36:06.293839  4742 net.cpp:200] conv1 needs backward computation.
I0428 20:36:06.293843  4742 net.cpp:200] pool0 needs backward computation.
I0428 20:36:06.293845  4742 net.cpp:200] conv0 needs backward computation.
I0428 20:36:06.293850  4742 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:06.293853  4742 net.cpp:202] mnist does not need backward computation.
I0428 20:36:06.293856  4742 net.cpp:244] This network produces output accuracy
I0428 20:36:06.293874  4742 net.cpp:244] This network produces output loss
I0428 20:36:06.293890  4742 net.cpp:257] Network initialization done.
I0428 20:36:06.293937  4742 solver.cpp:56] Solver scaffolding done.
I0428 20:36:06.294255  4742 caffe.cpp:248] Starting Optimization
I0428 20:36:06.294261  4742 solver.cpp:273] Solving LeNet
I0428 20:36:06.294265  4742 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:06.295060  4742 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:06.363555  4742 blocking_queue.cpp:49] Waiting for data
I0428 20:36:06.405431  4749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:06.407454  4742 solver.cpp:398]     Test net output #0: accuracy = 0.1257
I0428 20:36:06.407472  4742 solver.cpp:398]     Test net output #1: loss = 2.32788 (* 1 = 2.32788 loss)
I0428 20:36:06.412257  4742 solver.cpp:219] Iteration 0 (0 iter/s, 0.117968s/100 iters), loss = 2.32356
I0428 20:36:06.412281  4742 solver.cpp:238]     Train net output #0: loss = 2.32356 (* 1 = 2.32356 loss)
I0428 20:36:06.412309  4742 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:06.647272  4742 solver.cpp:219] Iteration 100 (425.584 iter/s, 0.234971s/100 iters), loss = 0.58352
I0428 20:36:06.647322  4742 solver.cpp:238]     Train net output #0: loss = 0.58352 (* 1 = 0.58352 loss)
I0428 20:36:06.647330  4742 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:06.873405  4742 solver.cpp:219] Iteration 200 (442.348 iter/s, 0.226066s/100 iters), loss = 0.333303
I0428 20:36:06.873450  4742 solver.cpp:238]     Train net output #0: loss = 0.333303 (* 1 = 0.333303 loss)
I0428 20:36:06.873456  4742 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:07.103909  4742 solver.cpp:219] Iteration 300 (433.945 iter/s, 0.230444s/100 iters), loss = 0.413722
I0428 20:36:07.103957  4742 solver.cpp:238]     Train net output #0: loss = 0.413722 (* 1 = 0.413722 loss)
I0428 20:36:07.103965  4742 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:07.333958  4742 solver.cpp:219] Iteration 400 (434.782 iter/s, 0.23s/100 iters), loss = 0.5178
I0428 20:36:07.334000  4742 solver.cpp:238]     Train net output #0: loss = 0.5178 (* 1 = 0.5178 loss)
I0428 20:36:07.334007  4742 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:07.562894  4742 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:07.670145  4749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:07.674183  4742 solver.cpp:398]     Test net output #0: accuracy = 0.875
I0428 20:36:07.674204  4742 solver.cpp:398]     Test net output #1: loss = 0.327287 (* 1 = 0.327287 loss)
I0428 20:36:07.676460  4742 solver.cpp:219] Iteration 500 (292.024 iter/s, 0.342438s/100 iters), loss = 0.466251
I0428 20:36:07.676514  4742 solver.cpp:238]     Train net output #0: loss = 0.466251 (* 1 = 0.466251 loss)
I0428 20:36:07.676522  4742 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:07.918498  4742 solver.cpp:219] Iteration 600 (413.26 iter/s, 0.241978s/100 iters), loss = 0.156401
I0428 20:36:07.918546  4742 solver.cpp:238]     Train net output #0: loss = 0.156401 (* 1 = 0.156401 loss)
I0428 20:36:07.918553  4742 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:08.154798  4742 solver.cpp:219] Iteration 700 (423.308 iter/s, 0.236235s/100 iters), loss = 0.266413
I0428 20:36:08.154840  4742 solver.cpp:238]     Train net output #0: loss = 0.266413 (* 1 = 0.266413 loss)
I0428 20:36:08.154846  4742 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:08.391396  4742 solver.cpp:219] Iteration 800 (422.763 iter/s, 0.236539s/100 iters), loss = 0.367286
I0428 20:36:08.391422  4742 solver.cpp:238]     Train net output #0: loss = 0.367286 (* 1 = 0.367286 loss)
I0428 20:36:08.391428  4742 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:08.632978  4742 solver.cpp:219] Iteration 900 (414.012 iter/s, 0.241539s/100 iters), loss = 0.190202
I0428 20:36:08.633023  4742 solver.cpp:238]     Train net output #0: loss = 0.190202 (* 1 = 0.190202 loss)
I0428 20:36:08.633029  4742 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:08.714694  4748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:08.871906  4742 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:08.876327  4742 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:08.878552  4742 solver.cpp:311] Iteration 1000, loss = 0.194538
I0428 20:36:08.878568  4742 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:08.986528  4749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:08.989729  4742 solver.cpp:398]     Test net output #0: accuracy = 0.8812
I0428 20:36:08.989748  4742 solver.cpp:398]     Test net output #1: loss = 0.298759 (* 1 = 0.298759 loss)
I0428 20:36:08.989753  4742 solver.cpp:316] Optimization Done.
I0428 20:36:08.989758  4742 caffe.cpp:259] Optimization Done.
