I0428 20:11:17.472244 32040 caffe.cpp:218] Using GPUs 0
I0428 20:11:17.513435 32040 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:18.110066 32040 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1155.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:18.110232 32040 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1155.prototxt
I0428 20:11:18.110806 32040 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:18.110831 32040 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:18.110970 32040 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:18.111068 32040 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:18.111197 32040 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:18.111227 32040 net.cpp:86] Creating Layer mnist
I0428 20:11:18.111238 32040 net.cpp:382] mnist -> data
I0428 20:11:18.111266 32040 net.cpp:382] mnist -> label
I0428 20:11:18.112666 32040 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:18.116063 32040 net.cpp:124] Setting up mnist
I0428 20:11:18.116086 32040 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:18.116096 32040 net.cpp:131] Top shape: 64 (64)
I0428 20:11:18.116101 32040 net.cpp:139] Memory required for data: 200960
I0428 20:11:18.116111 32040 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:18.116132 32040 net.cpp:86] Creating Layer conv0
I0428 20:11:18.116156 32040 net.cpp:408] conv0 <- data
I0428 20:11:18.116171 32040 net.cpp:382] conv0 -> conv0
I0428 20:11:18.422111 32040 net.cpp:124] Setting up conv0
I0428 20:11:18.422142 32040 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:18.422145 32040 net.cpp:139] Memory required for data: 3887360
I0428 20:11:18.422164 32040 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:18.422179 32040 net.cpp:86] Creating Layer pool0
I0428 20:11:18.422184 32040 net.cpp:408] pool0 <- conv0
I0428 20:11:18.422207 32040 net.cpp:382] pool0 -> pool0
I0428 20:11:18.422274 32040 net.cpp:124] Setting up pool0
I0428 20:11:18.422286 32040 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:18.422289 32040 net.cpp:139] Memory required for data: 4808960
I0428 20:11:18.422294 32040 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:18.422307 32040 net.cpp:86] Creating Layer conv1
I0428 20:11:18.422312 32040 net.cpp:408] conv1 <- pool0
I0428 20:11:18.422319 32040 net.cpp:382] conv1 -> conv1
I0428 20:11:18.425101 32040 net.cpp:124] Setting up conv1
I0428 20:11:18.425117 32040 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:18.425122 32040 net.cpp:139] Memory required for data: 5628160
I0428 20:11:18.425134 32040 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:18.425158 32040 net.cpp:86] Creating Layer pool1
I0428 20:11:18.425163 32040 net.cpp:408] pool1 <- conv1
I0428 20:11:18.425170 32040 net.cpp:382] pool1 -> pool1
I0428 20:11:18.425215 32040 net.cpp:124] Setting up pool1
I0428 20:11:18.425238 32040 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:18.425243 32040 net.cpp:139] Memory required for data: 5832960
I0428 20:11:18.425247 32040 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:18.425257 32040 net.cpp:86] Creating Layer ip1
I0428 20:11:18.425261 32040 net.cpp:408] ip1 <- pool1
I0428 20:11:18.425268 32040 net.cpp:382] ip1 -> ip1
I0428 20:11:18.425616 32040 net.cpp:124] Setting up ip1
I0428 20:11:18.425626 32040 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:18.425645 32040 net.cpp:139] Memory required for data: 5839360
I0428 20:11:18.425669 32040 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:18.425678 32040 net.cpp:86] Creating Layer relu1
I0428 20:11:18.425683 32040 net.cpp:408] relu1 <- ip1
I0428 20:11:18.425688 32040 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:18.425916 32040 net.cpp:124] Setting up relu1
I0428 20:11:18.425928 32040 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:18.425932 32040 net.cpp:139] Memory required for data: 5845760
I0428 20:11:18.425937 32040 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:18.425945 32040 net.cpp:86] Creating Layer ip2
I0428 20:11:18.425950 32040 net.cpp:408] ip2 <- ip1
I0428 20:11:18.425956 32040 net.cpp:382] ip2 -> ip2
I0428 20:11:18.426082 32040 net.cpp:124] Setting up ip2
I0428 20:11:18.426091 32040 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:18.426095 32040 net.cpp:139] Memory required for data: 5852160
I0428 20:11:18.426103 32040 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:18.426111 32040 net.cpp:86] Creating Layer relu2
I0428 20:11:18.426115 32040 net.cpp:408] relu2 <- ip2
I0428 20:11:18.426137 32040 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:18.427275 32040 net.cpp:124] Setting up relu2
I0428 20:11:18.427305 32040 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:18.427310 32040 net.cpp:139] Memory required for data: 5858560
I0428 20:11:18.427315 32040 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:18.427326 32040 net.cpp:86] Creating Layer ip3
I0428 20:11:18.427331 32040 net.cpp:408] ip3 <- ip2
I0428 20:11:18.427340 32040 net.cpp:382] ip3 -> ip3
I0428 20:11:18.427456 32040 net.cpp:124] Setting up ip3
I0428 20:11:18.427481 32040 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:18.427485 32040 net.cpp:139] Memory required for data: 5861120
I0428 20:11:18.427495 32040 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:18.427502 32040 net.cpp:86] Creating Layer relu3
I0428 20:11:18.427507 32040 net.cpp:408] relu3 <- ip3
I0428 20:11:18.427513 32040 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:18.427729 32040 net.cpp:124] Setting up relu3
I0428 20:11:18.427758 32040 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:18.427763 32040 net.cpp:139] Memory required for data: 5863680
I0428 20:11:18.427768 32040 layer_factory.hpp:77] Creating layer loss
I0428 20:11:18.427778 32040 net.cpp:86] Creating Layer loss
I0428 20:11:18.427783 32040 net.cpp:408] loss <- ip3
I0428 20:11:18.427788 32040 net.cpp:408] loss <- label
I0428 20:11:18.427795 32040 net.cpp:382] loss -> loss
I0428 20:11:18.427829 32040 layer_factory.hpp:77] Creating layer loss
I0428 20:11:18.428184 32040 net.cpp:124] Setting up loss
I0428 20:11:18.428195 32040 net.cpp:131] Top shape: (1)
I0428 20:11:18.428215 32040 net.cpp:134]     with loss weight 1
I0428 20:11:18.428232 32040 net.cpp:139] Memory required for data: 5863684
I0428 20:11:18.428237 32040 net.cpp:200] loss needs backward computation.
I0428 20:11:18.428242 32040 net.cpp:200] relu3 needs backward computation.
I0428 20:11:18.428246 32040 net.cpp:200] ip3 needs backward computation.
I0428 20:11:18.428251 32040 net.cpp:200] relu2 needs backward computation.
I0428 20:11:18.428254 32040 net.cpp:200] ip2 needs backward computation.
I0428 20:11:18.428258 32040 net.cpp:200] relu1 needs backward computation.
I0428 20:11:18.428262 32040 net.cpp:200] ip1 needs backward computation.
I0428 20:11:18.428267 32040 net.cpp:200] pool1 needs backward computation.
I0428 20:11:18.428272 32040 net.cpp:200] conv1 needs backward computation.
I0428 20:11:18.428275 32040 net.cpp:200] pool0 needs backward computation.
I0428 20:11:18.428279 32040 net.cpp:200] conv0 needs backward computation.
I0428 20:11:18.428284 32040 net.cpp:202] mnist does not need backward computation.
I0428 20:11:18.428288 32040 net.cpp:244] This network produces output loss
I0428 20:11:18.428303 32040 net.cpp:257] Network initialization done.
I0428 20:11:18.428822 32040 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1155.prototxt
I0428 20:11:18.428894 32040 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:18.429041 32040 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:18.429167 32040 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:18.429250 32040 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:18.429268 32040 net.cpp:86] Creating Layer mnist
I0428 20:11:18.429275 32040 net.cpp:382] mnist -> data
I0428 20:11:18.429285 32040 net.cpp:382] mnist -> label
I0428 20:11:18.429407 32040 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:18.432029 32040 net.cpp:124] Setting up mnist
I0428 20:11:18.432045 32040 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:18.432051 32040 net.cpp:131] Top shape: 100 (100)
I0428 20:11:18.432056 32040 net.cpp:139] Memory required for data: 314000
I0428 20:11:18.432061 32040 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:18.432087 32040 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:18.432092 32040 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:18.432101 32040 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:18.432109 32040 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:18.432229 32040 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:18.432240 32040 net.cpp:131] Top shape: 100 (100)
I0428 20:11:18.432245 32040 net.cpp:131] Top shape: 100 (100)
I0428 20:11:18.432250 32040 net.cpp:139] Memory required for data: 314800
I0428 20:11:18.432255 32040 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:18.432267 32040 net.cpp:86] Creating Layer conv0
I0428 20:11:18.432272 32040 net.cpp:408] conv0 <- data
I0428 20:11:18.432281 32040 net.cpp:382] conv0 -> conv0
I0428 20:11:18.434376 32040 net.cpp:124] Setting up conv0
I0428 20:11:18.434407 32040 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:18.434412 32040 net.cpp:139] Memory required for data: 6074800
I0428 20:11:18.434427 32040 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:18.434437 32040 net.cpp:86] Creating Layer pool0
I0428 20:11:18.434440 32040 net.cpp:408] pool0 <- conv0
I0428 20:11:18.434448 32040 net.cpp:382] pool0 -> pool0
I0428 20:11:18.434500 32040 net.cpp:124] Setting up pool0
I0428 20:11:18.434509 32040 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:18.434530 32040 net.cpp:139] Memory required for data: 7514800
I0428 20:11:18.434535 32040 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:18.434547 32040 net.cpp:86] Creating Layer conv1
I0428 20:11:18.434552 32040 net.cpp:408] conv1 <- pool0
I0428 20:11:18.434562 32040 net.cpp:382] conv1 -> conv1
I0428 20:11:18.437070 32040 net.cpp:124] Setting up conv1
I0428 20:11:18.437088 32040 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:18.437093 32040 net.cpp:139] Memory required for data: 8794800
I0428 20:11:18.437119 32040 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:18.437144 32040 net.cpp:86] Creating Layer pool1
I0428 20:11:18.437149 32040 net.cpp:408] pool1 <- conv1
I0428 20:11:18.437172 32040 net.cpp:382] pool1 -> pool1
I0428 20:11:18.437233 32040 net.cpp:124] Setting up pool1
I0428 20:11:18.437244 32040 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:18.437268 32040 net.cpp:139] Memory required for data: 9114800
I0428 20:11:18.437271 32040 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:18.437280 32040 net.cpp:86] Creating Layer ip1
I0428 20:11:18.437285 32040 net.cpp:408] ip1 <- pool1
I0428 20:11:18.437294 32040 net.cpp:382] ip1 -> ip1
I0428 20:11:18.437635 32040 net.cpp:124] Setting up ip1
I0428 20:11:18.437646 32040 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:18.437664 32040 net.cpp:139] Memory required for data: 9124800
I0428 20:11:18.437676 32040 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:18.437683 32040 net.cpp:86] Creating Layer relu1
I0428 20:11:18.437695 32040 net.cpp:408] relu1 <- ip1
I0428 20:11:18.437703 32040 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:18.437984 32040 net.cpp:124] Setting up relu1
I0428 20:11:18.437995 32040 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:18.438000 32040 net.cpp:139] Memory required for data: 9134800
I0428 20:11:18.438004 32040 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:18.438015 32040 net.cpp:86] Creating Layer ip2
I0428 20:11:18.438020 32040 net.cpp:408] ip2 <- ip1
I0428 20:11:18.438026 32040 net.cpp:382] ip2 -> ip2
I0428 20:11:18.438206 32040 net.cpp:124] Setting up ip2
I0428 20:11:18.438217 32040 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:18.438222 32040 net.cpp:139] Memory required for data: 9144800
I0428 20:11:18.438230 32040 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:18.438237 32040 net.cpp:86] Creating Layer relu2
I0428 20:11:18.438242 32040 net.cpp:408] relu2 <- ip2
I0428 20:11:18.438251 32040 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:18.438477 32040 net.cpp:124] Setting up relu2
I0428 20:11:18.438488 32040 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:18.438493 32040 net.cpp:139] Memory required for data: 9154800
I0428 20:11:18.438498 32040 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:18.438519 32040 net.cpp:86] Creating Layer ip3
I0428 20:11:18.438524 32040 net.cpp:408] ip3 <- ip2
I0428 20:11:18.438530 32040 net.cpp:382] ip3 -> ip3
I0428 20:11:18.438683 32040 net.cpp:124] Setting up ip3
I0428 20:11:18.438693 32040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:18.438696 32040 net.cpp:139] Memory required for data: 9158800
I0428 20:11:18.438707 32040 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:18.438715 32040 net.cpp:86] Creating Layer relu3
I0428 20:11:18.438721 32040 net.cpp:408] relu3 <- ip3
I0428 20:11:18.438727 32040 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:18.439894 32040 net.cpp:124] Setting up relu3
I0428 20:11:18.439909 32040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:18.439914 32040 net.cpp:139] Memory required for data: 9162800
I0428 20:11:18.439919 32040 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:18.439929 32040 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:18.439934 32040 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:18.439940 32040 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:18.439949 32040 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:18.440012 32040 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:18.440021 32040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:18.440027 32040 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:18.440032 32040 net.cpp:139] Memory required for data: 9170800
I0428 20:11:18.440035 32040 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:18.440043 32040 net.cpp:86] Creating Layer accuracy
I0428 20:11:18.440057 32040 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:18.440068 32040 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:18.440074 32040 net.cpp:382] accuracy -> accuracy
I0428 20:11:18.440084 32040 net.cpp:124] Setting up accuracy
I0428 20:11:18.440090 32040 net.cpp:131] Top shape: (1)
I0428 20:11:18.440094 32040 net.cpp:139] Memory required for data: 9170804
I0428 20:11:18.440099 32040 layer_factory.hpp:77] Creating layer loss
I0428 20:11:18.440105 32040 net.cpp:86] Creating Layer loss
I0428 20:11:18.440109 32040 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:18.440114 32040 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:18.440122 32040 net.cpp:382] loss -> loss
I0428 20:11:18.440130 32040 layer_factory.hpp:77] Creating layer loss
I0428 20:11:18.440461 32040 net.cpp:124] Setting up loss
I0428 20:11:18.440474 32040 net.cpp:131] Top shape: (1)
I0428 20:11:18.440477 32040 net.cpp:134]     with loss weight 1
I0428 20:11:18.440496 32040 net.cpp:139] Memory required for data: 9170808
I0428 20:11:18.440501 32040 net.cpp:200] loss needs backward computation.
I0428 20:11:18.440507 32040 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:18.440512 32040 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:18.440517 32040 net.cpp:200] relu3 needs backward computation.
I0428 20:11:18.440528 32040 net.cpp:200] ip3 needs backward computation.
I0428 20:11:18.440532 32040 net.cpp:200] relu2 needs backward computation.
I0428 20:11:18.440536 32040 net.cpp:200] ip2 needs backward computation.
I0428 20:11:18.440546 32040 net.cpp:200] relu1 needs backward computation.
I0428 20:11:18.440551 32040 net.cpp:200] ip1 needs backward computation.
I0428 20:11:18.440565 32040 net.cpp:200] pool1 needs backward computation.
I0428 20:11:18.440569 32040 net.cpp:200] conv1 needs backward computation.
I0428 20:11:18.440574 32040 net.cpp:200] pool0 needs backward computation.
I0428 20:11:18.440583 32040 net.cpp:200] conv0 needs backward computation.
I0428 20:11:18.440588 32040 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:18.440593 32040 net.cpp:202] mnist does not need backward computation.
I0428 20:11:18.440598 32040 net.cpp:244] This network produces output accuracy
I0428 20:11:18.440603 32040 net.cpp:244] This network produces output loss
I0428 20:11:18.440634 32040 net.cpp:257] Network initialization done.
I0428 20:11:18.440690 32040 solver.cpp:56] Solver scaffolding done.
I0428 20:11:18.441205 32040 caffe.cpp:248] Starting Optimization
I0428 20:11:18.441213 32040 solver.cpp:273] Solving LeNet
I0428 20:11:18.441218 32040 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:18.442322 32040 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:18.451457 32040 blocking_queue.cpp:49] Waiting for data
I0428 20:11:18.517714 32047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:18.518477 32040 solver.cpp:398]     Test net output #0: accuracy = 0.1773
I0428 20:11:18.518502 32040 solver.cpp:398]     Test net output #1: loss = 2.28765 (* 1 = 2.28765 loss)
I0428 20:11:18.523283 32040 solver.cpp:219] Iteration 0 (-5.98182e-31 iter/s, 0.0820316s/100 iters), loss = 2.29603
I0428 20:11:18.523310 32040 solver.cpp:238]     Train net output #0: loss = 2.29603 (* 1 = 2.29603 loss)
I0428 20:11:18.523325 32040 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:18.656056 32040 solver.cpp:219] Iteration 100 (753.409 iter/s, 0.13273s/100 iters), loss = 1.06793
I0428 20:11:18.656103 32040 solver.cpp:238]     Train net output #0: loss = 1.06793 (* 1 = 1.06793 loss)
I0428 20:11:18.656112 32040 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:18.785567 32040 solver.cpp:219] Iteration 200 (772.394 iter/s, 0.129468s/100 iters), loss = 1.03318
I0428 20:11:18.785610 32040 solver.cpp:238]     Train net output #0: loss = 1.03318 (* 1 = 1.03318 loss)
I0428 20:11:18.785619 32040 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:18.917620 32040 solver.cpp:219] Iteration 300 (757.495 iter/s, 0.132014s/100 iters), loss = 0.763244
I0428 20:11:18.917649 32040 solver.cpp:238]     Train net output #0: loss = 0.763244 (* 1 = 0.763244 loss)
I0428 20:11:18.917657 32040 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:19.050576 32040 solver.cpp:219] Iteration 400 (752.365 iter/s, 0.132914s/100 iters), loss = 0.639328
I0428 20:11:19.050606 32040 solver.cpp:238]     Train net output #0: loss = 0.639328 (* 1 = 0.639328 loss)
I0428 20:11:19.050616 32040 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:19.181005 32040 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:19.246475 32047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:19.247550 32040 solver.cpp:398]     Test net output #0: accuracy = 0.6653
I0428 20:11:19.247586 32040 solver.cpp:398]     Test net output #1: loss = 0.827297 (* 1 = 0.827297 loss)
I0428 20:11:19.248900 32040 solver.cpp:219] Iteration 500 (504.342 iter/s, 0.198278s/100 iters), loss = 0.721543
I0428 20:11:19.248947 32040 solver.cpp:238]     Train net output #0: loss = 0.721543 (* 1 = 0.721543 loss)
I0428 20:11:19.248957 32040 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:19.379945 32040 solver.cpp:219] Iteration 600 (763.44 iter/s, 0.130986s/100 iters), loss = 0.932507
I0428 20:11:19.379974 32040 solver.cpp:238]     Train net output #0: loss = 0.932507 (* 1 = 0.932507 loss)
I0428 20:11:19.379983 32040 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:19.513237 32040 solver.cpp:219] Iteration 700 (750.457 iter/s, 0.133252s/100 iters), loss = 0.8732
I0428 20:11:19.513267 32040 solver.cpp:238]     Train net output #0: loss = 0.8732 (* 1 = 0.8732 loss)
I0428 20:11:19.513275 32040 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:19.647052 32040 solver.cpp:219] Iteration 800 (747.533 iter/s, 0.133773s/100 iters), loss = 0.811435
I0428 20:11:19.647097 32040 solver.cpp:238]     Train net output #0: loss = 0.811435 (* 1 = 0.811435 loss)
I0428 20:11:19.647107 32040 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:19.773826 32040 solver.cpp:219] Iteration 900 (789.142 iter/s, 0.12672s/100 iters), loss = 0.779091
I0428 20:11:19.773866 32040 solver.cpp:238]     Train net output #0: loss = 0.779091 (* 1 = 0.779091 loss)
I0428 20:11:19.773872 32040 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:19.814903 32046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:19.896044 32040 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:19.897814 32040 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:19.898797 32040 solver.cpp:311] Iteration 1000, loss = 0.791697
I0428 20:11:19.898811 32040 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:19.974336 32047 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:19.974961 32040 solver.cpp:398]     Test net output #0: accuracy = 0.6753
I0428 20:11:19.974977 32040 solver.cpp:398]     Test net output #1: loss = 0.787433 (* 1 = 0.787433 loss)
I0428 20:11:19.974983 32040 solver.cpp:316] Optimization Done.
I0428 20:11:19.974985 32040 caffe.cpp:259] Optimization Done.
