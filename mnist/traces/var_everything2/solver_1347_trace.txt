I0428 20:19:41.873342  1409 caffe.cpp:218] Using GPUs 0
I0428 20:19:41.906076  1409 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:19:42.374824  1409 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1347.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:19:42.374958  1409 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1347.prototxt
I0428 20:19:42.375450  1409 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:19:42.375471  1409 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:19:42.375612  1409 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:42.375697  1409 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:42.375805  1409 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:19:42.375833  1409 net.cpp:86] Creating Layer mnist
I0428 20:19:42.375843  1409 net.cpp:382] mnist -> data
I0428 20:19:42.375867  1409 net.cpp:382] mnist -> label
I0428 20:19:42.377239  1409 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:19:42.379874  1409 net.cpp:124] Setting up mnist
I0428 20:19:42.379890  1409 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:19:42.379897  1409 net.cpp:131] Top shape: 64 (64)
I0428 20:19:42.379902  1409 net.cpp:139] Memory required for data: 200960
I0428 20:19:42.379911  1409 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:42.379930  1409 net.cpp:86] Creating Layer conv0
I0428 20:19:42.379954  1409 net.cpp:408] conv0 <- data
I0428 20:19:42.379986  1409 net.cpp:382] conv0 -> conv0
I0428 20:19:42.605581  1409 net.cpp:124] Setting up conv0
I0428 20:19:42.605608  1409 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:19:42.605612  1409 net.cpp:139] Memory required for data: 7573760
I0428 20:19:42.605628  1409 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:42.605639  1409 net.cpp:86] Creating Layer pool0
I0428 20:19:42.605644  1409 net.cpp:408] pool0 <- conv0
I0428 20:19:42.605650  1409 net.cpp:382] pool0 -> pool0
I0428 20:19:42.605705  1409 net.cpp:124] Setting up pool0
I0428 20:19:42.605716  1409 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:19:42.605720  1409 net.cpp:139] Memory required for data: 9416960
I0428 20:19:42.605726  1409 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:42.605738  1409 net.cpp:86] Creating Layer conv1
I0428 20:19:42.605743  1409 net.cpp:408] conv1 <- pool0
I0428 20:19:42.605751  1409 net.cpp:382] conv1 -> conv1
I0428 20:19:42.608223  1409 net.cpp:124] Setting up conv1
I0428 20:19:42.608237  1409 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:19:42.608258  1409 net.cpp:139] Memory required for data: 9826560
I0428 20:19:42.608266  1409 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:42.608273  1409 net.cpp:86] Creating Layer pool1
I0428 20:19:42.608278  1409 net.cpp:408] pool1 <- conv1
I0428 20:19:42.608281  1409 net.cpp:382] pool1 -> pool1
I0428 20:19:42.608327  1409 net.cpp:124] Setting up pool1
I0428 20:19:42.608337  1409 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:19:42.608342  1409 net.cpp:139] Memory required for data: 9928960
I0428 20:19:42.608347  1409 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:42.608357  1409 net.cpp:86] Creating Layer ip1
I0428 20:19:42.608362  1409 net.cpp:408] ip1 <- pool1
I0428 20:19:42.608386  1409 net.cpp:382] ip1 -> ip1
I0428 20:19:42.609827  1409 net.cpp:124] Setting up ip1
I0428 20:19:42.609839  1409 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:42.609858  1409 net.cpp:139] Memory required for data: 9935360
I0428 20:19:42.609866  1409 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:42.609872  1409 net.cpp:86] Creating Layer relu1
I0428 20:19:42.609876  1409 net.cpp:408] relu1 <- ip1
I0428 20:19:42.609880  1409 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:42.610103  1409 net.cpp:124] Setting up relu1
I0428 20:19:42.610116  1409 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:19:42.610121  1409 net.cpp:139] Memory required for data: 9941760
I0428 20:19:42.610127  1409 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:42.610136  1409 net.cpp:86] Creating Layer ip2
I0428 20:19:42.610141  1409 net.cpp:408] ip2 <- ip1
I0428 20:19:42.610149  1409 net.cpp:382] ip2 -> ip2
I0428 20:19:42.610294  1409 net.cpp:124] Setting up ip2
I0428 20:19:42.610304  1409 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:42.610324  1409 net.cpp:139] Memory required for data: 9944320
I0428 20:19:42.610333  1409 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:42.610342  1409 net.cpp:86] Creating Layer relu2
I0428 20:19:42.610348  1409 net.cpp:408] relu2 <- ip2
I0428 20:19:42.610369  1409 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:42.611449  1409 net.cpp:124] Setting up relu2
I0428 20:19:42.611480  1409 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:42.611485  1409 net.cpp:139] Memory required for data: 9946880
I0428 20:19:42.611490  1409 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:42.611500  1409 net.cpp:86] Creating Layer ip3
I0428 20:19:42.611505  1409 net.cpp:408] ip3 <- ip2
I0428 20:19:42.611513  1409 net.cpp:382] ip3 -> ip3
I0428 20:19:42.611657  1409 net.cpp:124] Setting up ip3
I0428 20:19:42.611668  1409 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:42.611673  1409 net.cpp:139] Memory required for data: 9949440
I0428 20:19:42.611685  1409 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:42.611691  1409 net.cpp:86] Creating Layer relu3
I0428 20:19:42.611696  1409 net.cpp:408] relu3 <- ip3
I0428 20:19:42.611703  1409 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:42.611945  1409 net.cpp:124] Setting up relu3
I0428 20:19:42.611960  1409 net.cpp:131] Top shape: 64 10 (640)
I0428 20:19:42.611965  1409 net.cpp:139] Memory required for data: 9952000
I0428 20:19:42.611970  1409 layer_factory.hpp:77] Creating layer loss
I0428 20:19:42.611979  1409 net.cpp:86] Creating Layer loss
I0428 20:19:42.611984  1409 net.cpp:408] loss <- ip3
I0428 20:19:42.611989  1409 net.cpp:408] loss <- label
I0428 20:19:42.611997  1409 net.cpp:382] loss -> loss
I0428 20:19:42.612020  1409 layer_factory.hpp:77] Creating layer loss
I0428 20:19:42.612354  1409 net.cpp:124] Setting up loss
I0428 20:19:42.612366  1409 net.cpp:131] Top shape: (1)
I0428 20:19:42.612370  1409 net.cpp:134]     with loss weight 1
I0428 20:19:42.612392  1409 net.cpp:139] Memory required for data: 9952004
I0428 20:19:42.612397  1409 net.cpp:200] loss needs backward computation.
I0428 20:19:42.612403  1409 net.cpp:200] relu3 needs backward computation.
I0428 20:19:42.612407  1409 net.cpp:200] ip3 needs backward computation.
I0428 20:19:42.612412  1409 net.cpp:200] relu2 needs backward computation.
I0428 20:19:42.612416  1409 net.cpp:200] ip2 needs backward computation.
I0428 20:19:42.612421  1409 net.cpp:200] relu1 needs backward computation.
I0428 20:19:42.612426  1409 net.cpp:200] ip1 needs backward computation.
I0428 20:19:42.612429  1409 net.cpp:200] pool1 needs backward computation.
I0428 20:19:42.612434  1409 net.cpp:200] conv1 needs backward computation.
I0428 20:19:42.612438  1409 net.cpp:200] pool0 needs backward computation.
I0428 20:19:42.612458  1409 net.cpp:200] conv0 needs backward computation.
I0428 20:19:42.612463  1409 net.cpp:202] mnist does not need backward computation.
I0428 20:19:42.612468  1409 net.cpp:244] This network produces output loss
I0428 20:19:42.612481  1409 net.cpp:257] Network initialization done.
I0428 20:19:42.613044  1409 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1347.prototxt
I0428 20:19:42.613106  1409 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:19:42.613283  1409 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:19:42.613402  1409 layer_factory.hpp:77] Creating layer mnist
I0428 20:19:42.613458  1409 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:19:42.613476  1409 net.cpp:86] Creating Layer mnist
I0428 20:19:42.613499  1409 net.cpp:382] mnist -> data
I0428 20:19:42.613509  1409 net.cpp:382] mnist -> label
I0428 20:19:42.613636  1409 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:19:42.616047  1409 net.cpp:124] Setting up mnist
I0428 20:19:42.616075  1409 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:19:42.616096  1409 net.cpp:131] Top shape: 100 (100)
I0428 20:19:42.616097  1409 net.cpp:139] Memory required for data: 314000
I0428 20:19:42.616101  1409 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:19:42.616111  1409 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:19:42.616114  1409 net.cpp:408] label_mnist_1_split <- label
I0428 20:19:42.616119  1409 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:19:42.616127  1409 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:19:42.616227  1409 net.cpp:124] Setting up label_mnist_1_split
I0428 20:19:42.616240  1409 net.cpp:131] Top shape: 100 (100)
I0428 20:19:42.616246  1409 net.cpp:131] Top shape: 100 (100)
I0428 20:19:42.616251  1409 net.cpp:139] Memory required for data: 314800
I0428 20:19:42.616256  1409 layer_factory.hpp:77] Creating layer conv0
I0428 20:19:42.616269  1409 net.cpp:86] Creating Layer conv0
I0428 20:19:42.616274  1409 net.cpp:408] conv0 <- data
I0428 20:19:42.616282  1409 net.cpp:382] conv0 -> conv0
I0428 20:19:42.618216  1409 net.cpp:124] Setting up conv0
I0428 20:19:42.618244  1409 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:19:42.618247  1409 net.cpp:139] Memory required for data: 11834800
I0428 20:19:42.618257  1409 layer_factory.hpp:77] Creating layer pool0
I0428 20:19:42.618263  1409 net.cpp:86] Creating Layer pool0
I0428 20:19:42.618266  1409 net.cpp:408] pool0 <- conv0
I0428 20:19:42.618271  1409 net.cpp:382] pool0 -> pool0
I0428 20:19:42.618317  1409 net.cpp:124] Setting up pool0
I0428 20:19:42.618326  1409 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:19:42.618330  1409 net.cpp:139] Memory required for data: 14714800
I0428 20:19:42.618335  1409 layer_factory.hpp:77] Creating layer conv1
I0428 20:19:42.618353  1409 net.cpp:86] Creating Layer conv1
I0428 20:19:42.618361  1409 net.cpp:408] conv1 <- pool0
I0428 20:19:42.618371  1409 net.cpp:382] conv1 -> conv1
I0428 20:19:42.620489  1409 net.cpp:124] Setting up conv1
I0428 20:19:42.620513  1409 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:19:42.620535  1409 net.cpp:139] Memory required for data: 15354800
I0428 20:19:42.620544  1409 layer_factory.hpp:77] Creating layer pool1
I0428 20:19:42.620551  1409 net.cpp:86] Creating Layer pool1
I0428 20:19:42.620554  1409 net.cpp:408] pool1 <- conv1
I0428 20:19:42.620559  1409 net.cpp:382] pool1 -> pool1
I0428 20:19:42.620609  1409 net.cpp:124] Setting up pool1
I0428 20:19:42.620620  1409 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:19:42.620625  1409 net.cpp:139] Memory required for data: 15514800
I0428 20:19:42.620630  1409 layer_factory.hpp:77] Creating layer ip1
I0428 20:19:42.620638  1409 net.cpp:86] Creating Layer ip1
I0428 20:19:42.620643  1409 net.cpp:408] ip1 <- pool1
I0428 20:19:42.620652  1409 net.cpp:382] ip1 -> ip1
I0428 20:19:42.620949  1409 net.cpp:124] Setting up ip1
I0428 20:19:42.620964  1409 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:42.620982  1409 net.cpp:139] Memory required for data: 15524800
I0428 20:19:42.620995  1409 layer_factory.hpp:77] Creating layer relu1
I0428 20:19:42.621006  1409 net.cpp:86] Creating Layer relu1
I0428 20:19:42.621011  1409 net.cpp:408] relu1 <- ip1
I0428 20:19:42.621018  1409 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:19:42.621304  1409 net.cpp:124] Setting up relu1
I0428 20:19:42.621330  1409 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:19:42.621333  1409 net.cpp:139] Memory required for data: 15534800
I0428 20:19:42.621353  1409 layer_factory.hpp:77] Creating layer ip2
I0428 20:19:42.621364  1409 net.cpp:86] Creating Layer ip2
I0428 20:19:42.621368  1409 net.cpp:408] ip2 <- ip1
I0428 20:19:42.621376  1409 net.cpp:382] ip2 -> ip2
I0428 20:19:42.621526  1409 net.cpp:124] Setting up ip2
I0428 20:19:42.621538  1409 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:42.621543  1409 net.cpp:139] Memory required for data: 15538800
I0428 20:19:42.621552  1409 layer_factory.hpp:77] Creating layer relu2
I0428 20:19:42.621562  1409 net.cpp:86] Creating Layer relu2
I0428 20:19:42.621567  1409 net.cpp:408] relu2 <- ip2
I0428 20:19:42.621572  1409 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:19:42.621793  1409 net.cpp:124] Setting up relu2
I0428 20:19:42.621814  1409 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:42.621819  1409 net.cpp:139] Memory required for data: 15542800
I0428 20:19:42.621824  1409 layer_factory.hpp:77] Creating layer ip3
I0428 20:19:42.621834  1409 net.cpp:86] Creating Layer ip3
I0428 20:19:42.621839  1409 net.cpp:408] ip3 <- ip2
I0428 20:19:42.621846  1409 net.cpp:382] ip3 -> ip3
I0428 20:19:42.621971  1409 net.cpp:124] Setting up ip3
I0428 20:19:42.621984  1409 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:42.621987  1409 net.cpp:139] Memory required for data: 15546800
I0428 20:19:42.621999  1409 layer_factory.hpp:77] Creating layer relu3
I0428 20:19:42.622005  1409 net.cpp:86] Creating Layer relu3
I0428 20:19:42.622009  1409 net.cpp:408] relu3 <- ip3
I0428 20:19:42.622015  1409 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:19:42.623082  1409 net.cpp:124] Setting up relu3
I0428 20:19:42.623098  1409 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:42.623103  1409 net.cpp:139] Memory required for data: 15550800
I0428 20:19:42.623108  1409 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:19:42.623116  1409 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:19:42.623121  1409 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:19:42.623128  1409 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:19:42.623137  1409 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:19:42.623184  1409 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:19:42.623193  1409 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:42.623199  1409 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:19:42.623203  1409 net.cpp:139] Memory required for data: 15558800
I0428 20:19:42.623208  1409 layer_factory.hpp:77] Creating layer accuracy
I0428 20:19:42.623216  1409 net.cpp:86] Creating Layer accuracy
I0428 20:19:42.623220  1409 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:19:42.623226  1409 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:19:42.623232  1409 net.cpp:382] accuracy -> accuracy
I0428 20:19:42.623242  1409 net.cpp:124] Setting up accuracy
I0428 20:19:42.623260  1409 net.cpp:131] Top shape: (1)
I0428 20:19:42.623263  1409 net.cpp:139] Memory required for data: 15558804
I0428 20:19:42.623268  1409 layer_factory.hpp:77] Creating layer loss
I0428 20:19:42.623276  1409 net.cpp:86] Creating Layer loss
I0428 20:19:42.623281  1409 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:19:42.623286  1409 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:19:42.623292  1409 net.cpp:382] loss -> loss
I0428 20:19:42.623301  1409 layer_factory.hpp:77] Creating layer loss
I0428 20:19:42.623636  1409 net.cpp:124] Setting up loss
I0428 20:19:42.623647  1409 net.cpp:131] Top shape: (1)
I0428 20:19:42.623667  1409 net.cpp:134]     with loss weight 1
I0428 20:19:42.623687  1409 net.cpp:139] Memory required for data: 15558808
I0428 20:19:42.623692  1409 net.cpp:200] loss needs backward computation.
I0428 20:19:42.623698  1409 net.cpp:202] accuracy does not need backward computation.
I0428 20:19:42.623704  1409 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:19:42.623708  1409 net.cpp:200] relu3 needs backward computation.
I0428 20:19:42.623713  1409 net.cpp:200] ip3 needs backward computation.
I0428 20:19:42.623718  1409 net.cpp:200] relu2 needs backward computation.
I0428 20:19:42.623723  1409 net.cpp:200] ip2 needs backward computation.
I0428 20:19:42.623728  1409 net.cpp:200] relu1 needs backward computation.
I0428 20:19:42.623731  1409 net.cpp:200] ip1 needs backward computation.
I0428 20:19:42.623735  1409 net.cpp:200] pool1 needs backward computation.
I0428 20:19:42.623740  1409 net.cpp:200] conv1 needs backward computation.
I0428 20:19:42.623745  1409 net.cpp:200] pool0 needs backward computation.
I0428 20:19:42.623750  1409 net.cpp:200] conv0 needs backward computation.
I0428 20:19:42.623755  1409 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:19:42.623761  1409 net.cpp:202] mnist does not need backward computation.
I0428 20:19:42.623765  1409 net.cpp:244] This network produces output accuracy
I0428 20:19:42.623770  1409 net.cpp:244] This network produces output loss
I0428 20:19:42.623790  1409 net.cpp:257] Network initialization done.
I0428 20:19:42.623845  1409 solver.cpp:56] Solver scaffolding done.
I0428 20:19:42.624313  1409 caffe.cpp:248] Starting Optimization
I0428 20:19:42.624320  1409 solver.cpp:273] Solving LeNet
I0428 20:19:42.624341  1409 solver.cpp:274] Learning Rate Policy: inv
I0428 20:19:42.624577  1409 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:19:42.692894  1416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:42.695402  1409 solver.cpp:398]     Test net output #0: accuracy = 0.0845
I0428 20:19:42.695421  1409 solver.cpp:398]     Test net output #1: loss = 2.35047 (* 1 = 2.35047 loss)
I0428 20:19:42.700130  1409 solver.cpp:219] Iteration 0 (-1.58309e-30 iter/s, 0.0757462s/100 iters), loss = 2.31032
I0428 20:19:42.700170  1409 solver.cpp:238]     Train net output #0: loss = 2.31032 (* 1 = 2.31032 loss)
I0428 20:19:42.700181  1409 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:19:42.831338  1409 solver.cpp:219] Iteration 100 (762.362 iter/s, 0.131171s/100 iters), loss = 0.518351
I0428 20:19:42.831377  1409 solver.cpp:238]     Train net output #0: loss = 0.518351 (* 1 = 0.518351 loss)
I0428 20:19:42.831383  1409 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:19:42.974689  1409 solver.cpp:219] Iteration 200 (697.764 iter/s, 0.143315s/100 iters), loss = 0.242332
I0428 20:19:42.974717  1409 solver.cpp:238]     Train net output #0: loss = 0.242332 (* 1 = 0.242332 loss)
I0428 20:19:42.974725  1409 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:19:43.110425  1409 solver.cpp:219] Iteration 300 (736.939 iter/s, 0.135696s/100 iters), loss = 0.277763
I0428 20:19:43.110468  1409 solver.cpp:238]     Train net output #0: loss = 0.277763 (* 1 = 0.277763 loss)
I0428 20:19:43.110476  1409 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:19:43.261425  1409 solver.cpp:219] Iteration 400 (662.507 iter/s, 0.150942s/100 iters), loss = 0.117604
I0428 20:19:43.261467  1409 solver.cpp:238]     Train net output #0: loss = 0.117604 (* 1 = 0.117604 loss)
I0428 20:19:43.261478  1409 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:19:43.409220  1409 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:19:43.481832  1416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:43.484462  1409 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 20:19:43.484498  1409 solver.cpp:398]     Test net output #1: loss = 0.109459 (* 1 = 0.109459 loss)
I0428 20:19:43.485941  1409 solver.cpp:219] Iteration 500 (445.52 iter/s, 0.224457s/100 iters), loss = 0.0403984
I0428 20:19:43.485978  1409 solver.cpp:238]     Train net output #0: loss = 0.0403983 (* 1 = 0.0403983 loss)
I0428 20:19:43.486022  1409 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:19:43.627351  1409 solver.cpp:219] Iteration 600 (707.398 iter/s, 0.141363s/100 iters), loss = 0.123158
I0428 20:19:43.627384  1409 solver.cpp:238]     Train net output #0: loss = 0.123157 (* 1 = 0.123157 loss)
I0428 20:19:43.627393  1409 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:19:43.770328  1409 solver.cpp:219] Iteration 700 (699.634 iter/s, 0.142932s/100 iters), loss = 0.196432
I0428 20:19:43.770359  1409 solver.cpp:238]     Train net output #0: loss = 0.196432 (* 1 = 0.196432 loss)
I0428 20:19:43.770367  1409 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:19:43.912530  1409 solver.cpp:219] Iteration 800 (703.439 iter/s, 0.142159s/100 iters), loss = 0.204295
I0428 20:19:43.912560  1409 solver.cpp:238]     Train net output #0: loss = 0.204295 (* 1 = 0.204295 loss)
I0428 20:19:43.912569  1409 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:19:44.055156  1409 solver.cpp:219] Iteration 900 (701.337 iter/s, 0.142585s/100 iters), loss = 0.124851
I0428 20:19:44.055198  1409 solver.cpp:238]     Train net output #0: loss = 0.124851 (* 1 = 0.124851 loss)
I0428 20:19:44.055207  1409 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:19:44.102847  1415 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:44.197247  1409 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:19:44.199208  1409 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:19:44.200562  1409 solver.cpp:311] Iteration 1000, loss = 0.144376
I0428 20:19:44.200589  1409 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:19:44.270273  1416 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:19:44.272923  1409 solver.cpp:398]     Test net output #0: accuracy = 0.9744
I0428 20:19:44.272953  1409 solver.cpp:398]     Test net output #1: loss = 0.0819149 (* 1 = 0.0819149 loss)
I0428 20:19:44.272961  1409 solver.cpp:316] Optimization Done.
I0428 20:19:44.272967  1409 caffe.cpp:259] Optimization Done.
