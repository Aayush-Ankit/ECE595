I0428 20:28:33.040174  3370 caffe.cpp:218] Using GPUs 0
I0428 20:28:33.074265  3370 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:28:33.597185  3370 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1507.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:28:33.597332  3370 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1507.prototxt
I0428 20:28:33.597753  3370 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:28:33.597771  3370 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:28:33.597873  3370 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:33.597954  3370 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:33.598053  3370 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:28:33.598078  3370 net.cpp:86] Creating Layer mnist
I0428 20:28:33.598086  3370 net.cpp:382] mnist -> data
I0428 20:28:33.598107  3370 net.cpp:382] mnist -> label
I0428 20:28:33.599202  3370 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:28:33.601665  3370 net.cpp:124] Setting up mnist
I0428 20:28:33.601682  3370 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:28:33.601691  3370 net.cpp:131] Top shape: 64 (64)
I0428 20:28:33.601694  3370 net.cpp:139] Memory required for data: 200960
I0428 20:28:33.601701  3370 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:33.601716  3370 net.cpp:86] Creating Layer conv0
I0428 20:28:33.601737  3370 net.cpp:408] conv0 <- data
I0428 20:28:33.601749  3370 net.cpp:382] conv0 -> conv0
I0428 20:28:33.895596  3370 net.cpp:124] Setting up conv0
I0428 20:28:33.895627  3370 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:28:33.895632  3370 net.cpp:139] Memory required for data: 14946560
I0428 20:28:33.895649  3370 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:33.895664  3370 net.cpp:86] Creating Layer pool0
I0428 20:28:33.895669  3370 net.cpp:408] pool0 <- conv0
I0428 20:28:33.895675  3370 net.cpp:382] pool0 -> pool0
I0428 20:28:33.895730  3370 net.cpp:124] Setting up pool0
I0428 20:28:33.895735  3370 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:28:33.895740  3370 net.cpp:139] Memory required for data: 18632960
I0428 20:28:33.895742  3370 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:33.895754  3370 net.cpp:86] Creating Layer conv1
I0428 20:28:33.895758  3370 net.cpp:408] conv1 <- pool0
I0428 20:28:33.895763  3370 net.cpp:382] conv1 -> conv1
I0428 20:28:33.898834  3370 net.cpp:124] Setting up conv1
I0428 20:28:33.898852  3370 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:28:33.898857  3370 net.cpp:139] Memory required for data: 18714880
I0428 20:28:33.898866  3370 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:33.898875  3370 net.cpp:86] Creating Layer pool1
I0428 20:28:33.898880  3370 net.cpp:408] pool1 <- conv1
I0428 20:28:33.898886  3370 net.cpp:382] pool1 -> pool1
I0428 20:28:33.898929  3370 net.cpp:124] Setting up pool1
I0428 20:28:33.898936  3370 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:28:33.898938  3370 net.cpp:139] Memory required for data: 18735360
I0428 20:28:33.898942  3370 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:33.898949  3370 net.cpp:86] Creating Layer ip1
I0428 20:28:33.898953  3370 net.cpp:408] ip1 <- pool1
I0428 20:28:33.898958  3370 net.cpp:382] ip1 -> ip1
I0428 20:28:33.899082  3370 net.cpp:124] Setting up ip1
I0428 20:28:33.899091  3370 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:33.899094  3370 net.cpp:139] Memory required for data: 18741760
I0428 20:28:33.899102  3370 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:33.899108  3370 net.cpp:86] Creating Layer relu1
I0428 20:28:33.899112  3370 net.cpp:408] relu1 <- ip1
I0428 20:28:33.899117  3370 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:33.899307  3370 net.cpp:124] Setting up relu1
I0428 20:28:33.899318  3370 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:33.899322  3370 net.cpp:139] Memory required for data: 18748160
I0428 20:28:33.899325  3370 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:33.899333  3370 net.cpp:86] Creating Layer ip2
I0428 20:28:33.899336  3370 net.cpp:408] ip2 <- ip1
I0428 20:28:33.899341  3370 net.cpp:382] ip2 -> ip2
I0428 20:28:33.899451  3370 net.cpp:124] Setting up ip2
I0428 20:28:33.899458  3370 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:33.899462  3370 net.cpp:139] Memory required for data: 18754560
I0428 20:28:33.899469  3370 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:33.899476  3370 net.cpp:86] Creating Layer relu2
I0428 20:28:33.899478  3370 net.cpp:408] relu2 <- ip2
I0428 20:28:33.899483  3370 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:33.900301  3370 net.cpp:124] Setting up relu2
I0428 20:28:33.900316  3370 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:28:33.900321  3370 net.cpp:139] Memory required for data: 18760960
I0428 20:28:33.900326  3370 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:33.900333  3370 net.cpp:86] Creating Layer ip3
I0428 20:28:33.900336  3370 net.cpp:408] ip3 <- ip2
I0428 20:28:33.900344  3370 net.cpp:382] ip3 -> ip3
I0428 20:28:33.900460  3370 net.cpp:124] Setting up ip3
I0428 20:28:33.900470  3370 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:33.900480  3370 net.cpp:139] Memory required for data: 18763520
I0428 20:28:33.900490  3370 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:33.900496  3370 net.cpp:86] Creating Layer relu3
I0428 20:28:33.900499  3370 net.cpp:408] relu3 <- ip3
I0428 20:28:33.900506  3370 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:33.900710  3370 net.cpp:124] Setting up relu3
I0428 20:28:33.900720  3370 net.cpp:131] Top shape: 64 10 (640)
I0428 20:28:33.900724  3370 net.cpp:139] Memory required for data: 18766080
I0428 20:28:33.900727  3370 layer_factory.hpp:77] Creating layer loss
I0428 20:28:33.900734  3370 net.cpp:86] Creating Layer loss
I0428 20:28:33.900738  3370 net.cpp:408] loss <- ip3
I0428 20:28:33.900743  3370 net.cpp:408] loss <- label
I0428 20:28:33.900749  3370 net.cpp:382] loss -> loss
I0428 20:28:33.900764  3370 layer_factory.hpp:77] Creating layer loss
I0428 20:28:33.901063  3370 net.cpp:124] Setting up loss
I0428 20:28:33.901074  3370 net.cpp:131] Top shape: (1)
I0428 20:28:33.901078  3370 net.cpp:134]     with loss weight 1
I0428 20:28:33.901094  3370 net.cpp:139] Memory required for data: 18766084
I0428 20:28:33.901098  3370 net.cpp:200] loss needs backward computation.
I0428 20:28:33.901103  3370 net.cpp:200] relu3 needs backward computation.
I0428 20:28:33.901105  3370 net.cpp:200] ip3 needs backward computation.
I0428 20:28:33.901108  3370 net.cpp:200] relu2 needs backward computation.
I0428 20:28:33.901111  3370 net.cpp:200] ip2 needs backward computation.
I0428 20:28:33.901114  3370 net.cpp:200] relu1 needs backward computation.
I0428 20:28:33.901118  3370 net.cpp:200] ip1 needs backward computation.
I0428 20:28:33.901120  3370 net.cpp:200] pool1 needs backward computation.
I0428 20:28:33.901124  3370 net.cpp:200] conv1 needs backward computation.
I0428 20:28:33.901127  3370 net.cpp:200] pool0 needs backward computation.
I0428 20:28:33.901130  3370 net.cpp:200] conv0 needs backward computation.
I0428 20:28:33.901134  3370 net.cpp:202] mnist does not need backward computation.
I0428 20:28:33.901137  3370 net.cpp:244] This network produces output loss
I0428 20:28:33.901149  3370 net.cpp:257] Network initialization done.
I0428 20:28:33.901520  3370 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1507.prototxt
I0428 20:28:33.901551  3370 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:28:33.901656  3370 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:28:33.901751  3370 layer_factory.hpp:77] Creating layer mnist
I0428 20:28:33.901800  3370 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:28:33.901815  3370 net.cpp:86] Creating Layer mnist
I0428 20:28:33.901820  3370 net.cpp:382] mnist -> data
I0428 20:28:33.901829  3370 net.cpp:382] mnist -> label
I0428 20:28:33.901931  3370 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:28:33.904227  3370 net.cpp:124] Setting up mnist
I0428 20:28:33.904242  3370 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:28:33.904247  3370 net.cpp:131] Top shape: 100 (100)
I0428 20:28:33.904250  3370 net.cpp:139] Memory required for data: 314000
I0428 20:28:33.904254  3370 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:28:33.904263  3370 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:28:33.904266  3370 net.cpp:408] label_mnist_1_split <- label
I0428 20:28:33.904273  3370 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:28:33.904279  3370 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:28:33.904331  3370 net.cpp:124] Setting up label_mnist_1_split
I0428 20:28:33.904338  3370 net.cpp:131] Top shape: 100 (100)
I0428 20:28:33.904342  3370 net.cpp:131] Top shape: 100 (100)
I0428 20:28:33.904345  3370 net.cpp:139] Memory required for data: 314800
I0428 20:28:33.904348  3370 layer_factory.hpp:77] Creating layer conv0
I0428 20:28:33.904364  3370 net.cpp:86] Creating Layer conv0
I0428 20:28:33.904367  3370 net.cpp:408] conv0 <- data
I0428 20:28:33.904374  3370 net.cpp:382] conv0 -> conv0
I0428 20:28:33.906286  3370 net.cpp:124] Setting up conv0
I0428 20:28:33.906301  3370 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:28:33.906306  3370 net.cpp:139] Memory required for data: 23354800
I0428 20:28:33.906317  3370 layer_factory.hpp:77] Creating layer pool0
I0428 20:28:33.906324  3370 net.cpp:86] Creating Layer pool0
I0428 20:28:33.906327  3370 net.cpp:408] pool0 <- conv0
I0428 20:28:33.906333  3370 net.cpp:382] pool0 -> pool0
I0428 20:28:33.906375  3370 net.cpp:124] Setting up pool0
I0428 20:28:33.906383  3370 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:28:33.906385  3370 net.cpp:139] Memory required for data: 29114800
I0428 20:28:33.906388  3370 layer_factory.hpp:77] Creating layer conv1
I0428 20:28:33.906399  3370 net.cpp:86] Creating Layer conv1
I0428 20:28:33.906401  3370 net.cpp:408] conv1 <- pool0
I0428 20:28:33.906407  3370 net.cpp:382] conv1 -> conv1
I0428 20:28:33.908123  3370 net.cpp:124] Setting up conv1
I0428 20:28:33.908141  3370 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:28:33.908145  3370 net.cpp:139] Memory required for data: 29242800
I0428 20:28:33.908157  3370 layer_factory.hpp:77] Creating layer pool1
I0428 20:28:33.908164  3370 net.cpp:86] Creating Layer pool1
I0428 20:28:33.908167  3370 net.cpp:408] pool1 <- conv1
I0428 20:28:33.908174  3370 net.cpp:382] pool1 -> pool1
I0428 20:28:33.908213  3370 net.cpp:124] Setting up pool1
I0428 20:28:33.908219  3370 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:28:33.908222  3370 net.cpp:139] Memory required for data: 29274800
I0428 20:28:33.908226  3370 layer_factory.hpp:77] Creating layer ip1
I0428 20:28:33.908233  3370 net.cpp:86] Creating Layer ip1
I0428 20:28:33.908237  3370 net.cpp:408] ip1 <- pool1
I0428 20:28:33.908242  3370 net.cpp:382] ip1 -> ip1
I0428 20:28:33.908366  3370 net.cpp:124] Setting up ip1
I0428 20:28:33.908375  3370 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:33.908388  3370 net.cpp:139] Memory required for data: 29284800
I0428 20:28:33.908396  3370 layer_factory.hpp:77] Creating layer relu1
I0428 20:28:33.908403  3370 net.cpp:86] Creating Layer relu1
I0428 20:28:33.908407  3370 net.cpp:408] relu1 <- ip1
I0428 20:28:33.908413  3370 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:28:33.908645  3370 net.cpp:124] Setting up relu1
I0428 20:28:33.908656  3370 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:33.908660  3370 net.cpp:139] Memory required for data: 29294800
I0428 20:28:33.908664  3370 layer_factory.hpp:77] Creating layer ip2
I0428 20:28:33.908673  3370 net.cpp:86] Creating Layer ip2
I0428 20:28:33.908676  3370 net.cpp:408] ip2 <- ip1
I0428 20:28:33.908682  3370 net.cpp:382] ip2 -> ip2
I0428 20:28:33.908824  3370 net.cpp:124] Setting up ip2
I0428 20:28:33.908838  3370 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:33.908840  3370 net.cpp:139] Memory required for data: 29304800
I0428 20:28:33.908848  3370 layer_factory.hpp:77] Creating layer relu2
I0428 20:28:33.908854  3370 net.cpp:86] Creating Layer relu2
I0428 20:28:33.908856  3370 net.cpp:408] relu2 <- ip2
I0428 20:28:33.908867  3370 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:28:33.909062  3370 net.cpp:124] Setting up relu2
I0428 20:28:33.909072  3370 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:28:33.909075  3370 net.cpp:139] Memory required for data: 29314800
I0428 20:28:33.909080  3370 layer_factory.hpp:77] Creating layer ip3
I0428 20:28:33.909086  3370 net.cpp:86] Creating Layer ip3
I0428 20:28:33.909090  3370 net.cpp:408] ip3 <- ip2
I0428 20:28:33.909096  3370 net.cpp:382] ip3 -> ip3
I0428 20:28:33.909206  3370 net.cpp:124] Setting up ip3
I0428 20:28:33.909214  3370 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:33.909219  3370 net.cpp:139] Memory required for data: 29318800
I0428 20:28:33.909226  3370 layer_factory.hpp:77] Creating layer relu3
I0428 20:28:33.909231  3370 net.cpp:86] Creating Layer relu3
I0428 20:28:33.909236  3370 net.cpp:408] relu3 <- ip3
I0428 20:28:33.909240  3370 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:28:33.910101  3370 net.cpp:124] Setting up relu3
I0428 20:28:33.910115  3370 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:33.910120  3370 net.cpp:139] Memory required for data: 29322800
I0428 20:28:33.910123  3370 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:28:33.910130  3370 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:28:33.910132  3370 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:28:33.910140  3370 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:28:33.910145  3370 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:28:33.910200  3370 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:28:33.910207  3370 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:33.910212  3370 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:28:33.910214  3370 net.cpp:139] Memory required for data: 29330800
I0428 20:28:33.910218  3370 layer_factory.hpp:77] Creating layer accuracy
I0428 20:28:33.910223  3370 net.cpp:86] Creating Layer accuracy
I0428 20:28:33.910228  3370 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:28:33.910231  3370 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:28:33.910238  3370 net.cpp:382] accuracy -> accuracy
I0428 20:28:33.910245  3370 net.cpp:124] Setting up accuracy
I0428 20:28:33.910250  3370 net.cpp:131] Top shape: (1)
I0428 20:28:33.910254  3370 net.cpp:139] Memory required for data: 29330804
I0428 20:28:33.910256  3370 layer_factory.hpp:77] Creating layer loss
I0428 20:28:33.910261  3370 net.cpp:86] Creating Layer loss
I0428 20:28:33.910270  3370 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:28:33.910274  3370 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:28:33.910279  3370 net.cpp:382] loss -> loss
I0428 20:28:33.910285  3370 layer_factory.hpp:77] Creating layer loss
I0428 20:28:33.910552  3370 net.cpp:124] Setting up loss
I0428 20:28:33.910563  3370 net.cpp:131] Top shape: (1)
I0428 20:28:33.910567  3370 net.cpp:134]     with loss weight 1
I0428 20:28:33.910584  3370 net.cpp:139] Memory required for data: 29330808
I0428 20:28:33.910588  3370 net.cpp:200] loss needs backward computation.
I0428 20:28:33.910593  3370 net.cpp:202] accuracy does not need backward computation.
I0428 20:28:33.910596  3370 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:28:33.910600  3370 net.cpp:200] relu3 needs backward computation.
I0428 20:28:33.910604  3370 net.cpp:200] ip3 needs backward computation.
I0428 20:28:33.910606  3370 net.cpp:200] relu2 needs backward computation.
I0428 20:28:33.910609  3370 net.cpp:200] ip2 needs backward computation.
I0428 20:28:33.910612  3370 net.cpp:200] relu1 needs backward computation.
I0428 20:28:33.910615  3370 net.cpp:200] ip1 needs backward computation.
I0428 20:28:33.910619  3370 net.cpp:200] pool1 needs backward computation.
I0428 20:28:33.910621  3370 net.cpp:200] conv1 needs backward computation.
I0428 20:28:33.910625  3370 net.cpp:200] pool0 needs backward computation.
I0428 20:28:33.910629  3370 net.cpp:200] conv0 needs backward computation.
I0428 20:28:33.910634  3370 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:28:33.910637  3370 net.cpp:202] mnist does not need backward computation.
I0428 20:28:33.910640  3370 net.cpp:244] This network produces output accuracy
I0428 20:28:33.910643  3370 net.cpp:244] This network produces output loss
I0428 20:28:33.910656  3370 net.cpp:257] Network initialization done.
I0428 20:28:33.910702  3370 solver.cpp:56] Solver scaffolding done.
I0428 20:28:33.911115  3370 caffe.cpp:248] Starting Optimization
I0428 20:28:33.911123  3370 solver.cpp:273] Solving LeNet
I0428 20:28:33.911126  3370 solver.cpp:274] Learning Rate Policy: inv
I0428 20:28:33.912020  3370 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:28:34.007386  3377 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:34.009872  3370 solver.cpp:398]     Test net output #0: accuracy = 0.0622
I0428 20:28:34.009908  3370 solver.cpp:398]     Test net output #1: loss = 2.34326 (* 1 = 2.34326 loss)
I0428 20:28:34.014457  3370 solver.cpp:219] Iteration 0 (0 iter/s, 0.1033s/100 iters), loss = 2.32162
I0428 20:28:34.014497  3370 solver.cpp:238]     Train net output #0: loss = 2.32162 (* 1 = 2.32162 loss)
I0428 20:28:34.014508  3370 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:28:34.225086  3370 solver.cpp:219] Iteration 100 (474.906 iter/s, 0.210568s/100 iters), loss = 0.718636
I0428 20:28:34.225155  3370 solver.cpp:238]     Train net output #0: loss = 0.718636 (* 1 = 0.718636 loss)
I0428 20:28:34.225170  3370 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:28:34.449878  3370 solver.cpp:219] Iteration 200 (445.023 iter/s, 0.224708s/100 iters), loss = 0.380024
I0428 20:28:34.449930  3370 solver.cpp:238]     Train net output #0: loss = 0.380024 (* 1 = 0.380024 loss)
I0428 20:28:34.449944  3370 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:28:34.673250  3370 solver.cpp:219] Iteration 300 (447.825 iter/s, 0.223302s/100 iters), loss = 0.521268
I0428 20:28:34.673303  3370 solver.cpp:238]     Train net output #0: loss = 0.521268 (* 1 = 0.521268 loss)
I0428 20:28:34.673316  3370 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:28:34.890959  3370 solver.cpp:219] Iteration 400 (459.47 iter/s, 0.217642s/100 iters), loss = 0.321086
I0428 20:28:34.891001  3370 solver.cpp:238]     Train net output #0: loss = 0.321086 (* 1 = 0.321086 loss)
I0428 20:28:34.891011  3370 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:28:35.099542  3370 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:28:35.196971  3377 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:35.199615  3370 solver.cpp:398]     Test net output #0: accuracy = 0.9501
I0428 20:28:35.199640  3370 solver.cpp:398]     Test net output #1: loss = 0.163805 (* 1 = 0.163805 loss)
I0428 20:28:35.201557  3370 solver.cpp:219] Iteration 500 (322.021 iter/s, 0.310538s/100 iters), loss = 0.191075
I0428 20:28:35.201586  3370 solver.cpp:238]     Train net output #0: loss = 0.191075 (* 1 = 0.191075 loss)
I0428 20:28:35.201611  3370 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:28:35.409739  3370 solver.cpp:219] Iteration 600 (480.455 iter/s, 0.208136s/100 iters), loss = 0.17247
I0428 20:28:35.409785  3370 solver.cpp:238]     Train net output #0: loss = 0.17247 (* 1 = 0.17247 loss)
I0428 20:28:35.409795  3370 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:28:35.622149  3370 solver.cpp:219] Iteration 700 (470.918 iter/s, 0.212351s/100 iters), loss = 0.290082
I0428 20:28:35.622193  3370 solver.cpp:238]     Train net output #0: loss = 0.290082 (* 1 = 0.290082 loss)
I0428 20:28:35.622205  3370 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:28:35.833132  3370 solver.cpp:219] Iteration 800 (474.113 iter/s, 0.21092s/100 iters), loss = 0.431265
I0428 20:28:35.833187  3370 solver.cpp:238]     Train net output #0: loss = 0.431265 (* 1 = 0.431265 loss)
I0428 20:28:35.833202  3370 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:28:36.062455  3370 solver.cpp:219] Iteration 900 (436.203 iter/s, 0.229251s/100 iters), loss = 0.194117
I0428 20:28:36.062512  3370 solver.cpp:238]     Train net output #0: loss = 0.194118 (* 1 = 0.194118 loss)
I0428 20:28:36.062527  3370 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:28:36.138496  3376 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:36.289114  3370 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:28:36.291227  3370 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:28:36.292644  3370 solver.cpp:311] Iteration 1000, loss = 0.0756121
I0428 20:28:36.292682  3370 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:28:36.399974  3377 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:28:36.402709  3370 solver.cpp:398]     Test net output #0: accuracy = 0.9643
I0428 20:28:36.402739  3370 solver.cpp:398]     Test net output #1: loss = 0.112599 (* 1 = 0.112599 loss)
I0428 20:28:36.402747  3370 solver.cpp:316] Optimization Done.
I0428 20:28:36.402751  3370 caffe.cpp:259] Optimization Done.
