I0428 20:21:14.831171  1721 caffe.cpp:218] Using GPUs 0
I0428 20:21:14.869266  1721 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:15.324314  1721 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1380.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:15.324465  1721 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1380.prototxt
I0428 20:21:15.324883  1721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:15.324920  1721 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:15.325031  1721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:15.325117  1721 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:15.325232  1721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:15.325264  1721 net.cpp:86] Creating Layer mnist
I0428 20:21:15.325273  1721 net.cpp:382] mnist -> data
I0428 20:21:15.325291  1721 net.cpp:382] mnist -> label
I0428 20:21:15.326208  1721 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:15.328326  1721 net.cpp:124] Setting up mnist
I0428 20:21:15.328356  1721 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:15.328361  1721 net.cpp:131] Top shape: 64 (64)
I0428 20:21:15.328364  1721 net.cpp:139] Memory required for data: 200960
I0428 20:21:15.328371  1721 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:15.328385  1721 net.cpp:86] Creating Layer conv0
I0428 20:21:15.328418  1721 net.cpp:408] conv0 <- data
I0428 20:21:15.328429  1721 net.cpp:382] conv0 -> conv0
I0428 20:21:15.564867  1721 net.cpp:124] Setting up conv0
I0428 20:21:15.564910  1721 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:15.564915  1721 net.cpp:139] Memory required for data: 7573760
I0428 20:21:15.564944  1721 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:15.564957  1721 net.cpp:86] Creating Layer pool0
I0428 20:21:15.564961  1721 net.cpp:408] pool0 <- conv0
I0428 20:21:15.564966  1721 net.cpp:382] pool0 -> pool0
I0428 20:21:15.565024  1721 net.cpp:124] Setting up pool0
I0428 20:21:15.565042  1721 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:15.565045  1721 net.cpp:139] Memory required for data: 9416960
I0428 20:21:15.565048  1721 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:15.565058  1721 net.cpp:86] Creating Layer conv1
I0428 20:21:15.565062  1721 net.cpp:408] conv1 <- pool0
I0428 20:21:15.565068  1721 net.cpp:382] conv1 -> conv1
I0428 20:21:15.567397  1721 net.cpp:124] Setting up conv1
I0428 20:21:15.567427  1721 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:15.567431  1721 net.cpp:139] Memory required for data: 10236160
I0428 20:21:15.567440  1721 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:15.567448  1721 net.cpp:86] Creating Layer pool1
I0428 20:21:15.567451  1721 net.cpp:408] pool1 <- conv1
I0428 20:21:15.567456  1721 net.cpp:382] pool1 -> pool1
I0428 20:21:15.567492  1721 net.cpp:124] Setting up pool1
I0428 20:21:15.567497  1721 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:15.567499  1721 net.cpp:139] Memory required for data: 10440960
I0428 20:21:15.567502  1721 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:15.567510  1721 net.cpp:86] Creating Layer ip1
I0428 20:21:15.567513  1721 net.cpp:408] ip1 <- pool1
I0428 20:21:15.567517  1721 net.cpp:382] ip1 -> ip1
I0428 20:21:15.568550  1721 net.cpp:124] Setting up ip1
I0428 20:21:15.568562  1721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:15.568581  1721 net.cpp:139] Memory required for data: 10443520
I0428 20:21:15.568589  1721 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:15.568598  1721 net.cpp:86] Creating Layer relu1
I0428 20:21:15.568601  1721 net.cpp:408] relu1 <- ip1
I0428 20:21:15.568605  1721 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:15.568846  1721 net.cpp:124] Setting up relu1
I0428 20:21:15.568858  1721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:15.568861  1721 net.cpp:139] Memory required for data: 10446080
I0428 20:21:15.568864  1721 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:15.568871  1721 net.cpp:86] Creating Layer ip2
I0428 20:21:15.568874  1721 net.cpp:408] ip2 <- ip1
I0428 20:21:15.568881  1721 net.cpp:382] ip2 -> ip2
I0428 20:21:15.568982  1721 net.cpp:124] Setting up ip2
I0428 20:21:15.568990  1721 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:15.568994  1721 net.cpp:139] Memory required for data: 10452480
I0428 20:21:15.568998  1721 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:15.569007  1721 net.cpp:86] Creating Layer relu2
I0428 20:21:15.569011  1721 net.cpp:408] relu2 <- ip2
I0428 20:21:15.569015  1721 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:15.569799  1721 net.cpp:124] Setting up relu2
I0428 20:21:15.569811  1721 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:21:15.569830  1721 net.cpp:139] Memory required for data: 10458880
I0428 20:21:15.569833  1721 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:15.569854  1721 net.cpp:86] Creating Layer ip3
I0428 20:21:15.569856  1721 net.cpp:408] ip3 <- ip2
I0428 20:21:15.569862  1721 net.cpp:382] ip3 -> ip3
I0428 20:21:15.569953  1721 net.cpp:124] Setting up ip3
I0428 20:21:15.569960  1721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:15.569963  1721 net.cpp:139] Memory required for data: 10461440
I0428 20:21:15.569972  1721 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:15.569977  1721 net.cpp:86] Creating Layer relu3
I0428 20:21:15.569978  1721 net.cpp:408] relu3 <- ip3
I0428 20:21:15.569983  1721 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:15.570166  1721 net.cpp:124] Setting up relu3
I0428 20:21:15.570174  1721 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:15.570178  1721 net.cpp:139] Memory required for data: 10464000
I0428 20:21:15.570180  1721 layer_factory.hpp:77] Creating layer loss
I0428 20:21:15.570188  1721 net.cpp:86] Creating Layer loss
I0428 20:21:15.570190  1721 net.cpp:408] loss <- ip3
I0428 20:21:15.570194  1721 net.cpp:408] loss <- label
I0428 20:21:15.570199  1721 net.cpp:382] loss -> loss
I0428 20:21:15.570216  1721 layer_factory.hpp:77] Creating layer loss
I0428 20:21:15.570454  1721 net.cpp:124] Setting up loss
I0428 20:21:15.570463  1721 net.cpp:131] Top shape: (1)
I0428 20:21:15.570466  1721 net.cpp:134]     with loss weight 1
I0428 20:21:15.570479  1721 net.cpp:139] Memory required for data: 10464004
I0428 20:21:15.570482  1721 net.cpp:200] loss needs backward computation.
I0428 20:21:15.570485  1721 net.cpp:200] relu3 needs backward computation.
I0428 20:21:15.570487  1721 net.cpp:200] ip3 needs backward computation.
I0428 20:21:15.570490  1721 net.cpp:200] relu2 needs backward computation.
I0428 20:21:15.570492  1721 net.cpp:200] ip2 needs backward computation.
I0428 20:21:15.570495  1721 net.cpp:200] relu1 needs backward computation.
I0428 20:21:15.570497  1721 net.cpp:200] ip1 needs backward computation.
I0428 20:21:15.570500  1721 net.cpp:200] pool1 needs backward computation.
I0428 20:21:15.570502  1721 net.cpp:200] conv1 needs backward computation.
I0428 20:21:15.570505  1721 net.cpp:200] pool0 needs backward computation.
I0428 20:21:15.570508  1721 net.cpp:200] conv0 needs backward computation.
I0428 20:21:15.570511  1721 net.cpp:202] mnist does not need backward computation.
I0428 20:21:15.570513  1721 net.cpp:244] This network produces output loss
I0428 20:21:15.570523  1721 net.cpp:257] Network initialization done.
I0428 20:21:15.570879  1721 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1380.prototxt
I0428 20:21:15.570921  1721 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:15.571012  1721 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:15.571143  1721 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:15.571187  1721 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:15.571199  1721 net.cpp:86] Creating Layer mnist
I0428 20:21:15.571204  1721 net.cpp:382] mnist -> data
I0428 20:21:15.571213  1721 net.cpp:382] mnist -> label
I0428 20:21:15.571298  1721 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:15.573436  1721 net.cpp:124] Setting up mnist
I0428 20:21:15.573479  1721 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:15.573484  1721 net.cpp:131] Top shape: 100 (100)
I0428 20:21:15.573487  1721 net.cpp:139] Memory required for data: 314000
I0428 20:21:15.573492  1721 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:15.573529  1721 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:15.573535  1721 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:15.573540  1721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:15.573549  1721 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:15.573591  1721 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:15.573598  1721 net.cpp:131] Top shape: 100 (100)
I0428 20:21:15.573602  1721 net.cpp:131] Top shape: 100 (100)
I0428 20:21:15.573604  1721 net.cpp:139] Memory required for data: 314800
I0428 20:21:15.573607  1721 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:15.573616  1721 net.cpp:86] Creating Layer conv0
I0428 20:21:15.573621  1721 net.cpp:408] conv0 <- data
I0428 20:21:15.573640  1721 net.cpp:382] conv0 -> conv0
I0428 20:21:15.575376  1721 net.cpp:124] Setting up conv0
I0428 20:21:15.575405  1721 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:15.575409  1721 net.cpp:139] Memory required for data: 11834800
I0428 20:21:15.575418  1721 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:15.575425  1721 net.cpp:86] Creating Layer pool0
I0428 20:21:15.575428  1721 net.cpp:408] pool0 <- conv0
I0428 20:21:15.575433  1721 net.cpp:382] pool0 -> pool0
I0428 20:21:15.575469  1721 net.cpp:124] Setting up pool0
I0428 20:21:15.575474  1721 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:15.575476  1721 net.cpp:139] Memory required for data: 14714800
I0428 20:21:15.575479  1721 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:15.575489  1721 net.cpp:86] Creating Layer conv1
I0428 20:21:15.575491  1721 net.cpp:408] conv1 <- pool0
I0428 20:21:15.575496  1721 net.cpp:382] conv1 -> conv1
I0428 20:21:15.577585  1721 net.cpp:124] Setting up conv1
I0428 20:21:15.577615  1721 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:15.577617  1721 net.cpp:139] Memory required for data: 15994800
I0428 20:21:15.577628  1721 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:15.577636  1721 net.cpp:86] Creating Layer pool1
I0428 20:21:15.577654  1721 net.cpp:408] pool1 <- conv1
I0428 20:21:15.577663  1721 net.cpp:382] pool1 -> pool1
I0428 20:21:15.577731  1721 net.cpp:124] Setting up pool1
I0428 20:21:15.577745  1721 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:15.577749  1721 net.cpp:139] Memory required for data: 16314800
I0428 20:21:15.577751  1721 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:15.577757  1721 net.cpp:86] Creating Layer ip1
I0428 20:21:15.577761  1721 net.cpp:408] ip1 <- pool1
I0428 20:21:15.577766  1721 net.cpp:382] ip1 -> ip1
I0428 20:21:15.577911  1721 net.cpp:124] Setting up ip1
I0428 20:21:15.577919  1721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:15.577934  1721 net.cpp:139] Memory required for data: 16318800
I0428 20:21:15.577941  1721 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:15.577949  1721 net.cpp:86] Creating Layer relu1
I0428 20:21:15.577952  1721 net.cpp:408] relu1 <- ip1
I0428 20:21:15.577956  1721 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:15.578131  1721 net.cpp:124] Setting up relu1
I0428 20:21:15.578140  1721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:15.578145  1721 net.cpp:139] Memory required for data: 16322800
I0428 20:21:15.578148  1721 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:15.578157  1721 net.cpp:86] Creating Layer ip2
I0428 20:21:15.578161  1721 net.cpp:408] ip2 <- ip1
I0428 20:21:15.578166  1721 net.cpp:382] ip2 -> ip2
I0428 20:21:15.578264  1721 net.cpp:124] Setting up ip2
I0428 20:21:15.578271  1721 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:15.578274  1721 net.cpp:139] Memory required for data: 16332800
I0428 20:21:15.578279  1721 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:15.578284  1721 net.cpp:86] Creating Layer relu2
I0428 20:21:15.578286  1721 net.cpp:408] relu2 <- ip2
I0428 20:21:15.578291  1721 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:15.578516  1721 net.cpp:124] Setting up relu2
I0428 20:21:15.578526  1721 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:21:15.578528  1721 net.cpp:139] Memory required for data: 16342800
I0428 20:21:15.578532  1721 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:15.578538  1721 net.cpp:86] Creating Layer ip3
I0428 20:21:15.578541  1721 net.cpp:408] ip3 <- ip2
I0428 20:21:15.578547  1721 net.cpp:382] ip3 -> ip3
I0428 20:21:15.578697  1721 net.cpp:124] Setting up ip3
I0428 20:21:15.578706  1721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:15.578709  1721 net.cpp:139] Memory required for data: 16346800
I0428 20:21:15.578718  1721 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:15.578723  1721 net.cpp:86] Creating Layer relu3
I0428 20:21:15.578729  1721 net.cpp:408] relu3 <- ip3
I0428 20:21:15.578733  1721 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:15.579578  1721 net.cpp:124] Setting up relu3
I0428 20:21:15.579589  1721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:15.579607  1721 net.cpp:139] Memory required for data: 16350800
I0428 20:21:15.579610  1721 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:15.579617  1721 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:15.579619  1721 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:15.579625  1721 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:15.579632  1721 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:15.579706  1721 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:15.579713  1721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:15.579717  1721 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:15.579720  1721 net.cpp:139] Memory required for data: 16358800
I0428 20:21:15.579722  1721 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:15.579728  1721 net.cpp:86] Creating Layer accuracy
I0428 20:21:15.579731  1721 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:15.579735  1721 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:15.579740  1721 net.cpp:382] accuracy -> accuracy
I0428 20:21:15.579746  1721 net.cpp:124] Setting up accuracy
I0428 20:21:15.579749  1721 net.cpp:131] Top shape: (1)
I0428 20:21:15.579752  1721 net.cpp:139] Memory required for data: 16358804
I0428 20:21:15.579756  1721 layer_factory.hpp:77] Creating layer loss
I0428 20:21:15.579761  1721 net.cpp:86] Creating Layer loss
I0428 20:21:15.579763  1721 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:15.579767  1721 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:15.579771  1721 net.cpp:382] loss -> loss
I0428 20:21:15.579777  1721 layer_factory.hpp:77] Creating layer loss
I0428 20:21:15.580023  1721 net.cpp:124] Setting up loss
I0428 20:21:15.580031  1721 net.cpp:131] Top shape: (1)
I0428 20:21:15.580034  1721 net.cpp:134]     with loss weight 1
I0428 20:21:15.580050  1721 net.cpp:139] Memory required for data: 16358808
I0428 20:21:15.580054  1721 net.cpp:200] loss needs backward computation.
I0428 20:21:15.580057  1721 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:15.580061  1721 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:15.580065  1721 net.cpp:200] relu3 needs backward computation.
I0428 20:21:15.580066  1721 net.cpp:200] ip3 needs backward computation.
I0428 20:21:15.580070  1721 net.cpp:200] relu2 needs backward computation.
I0428 20:21:15.580071  1721 net.cpp:200] ip2 needs backward computation.
I0428 20:21:15.580075  1721 net.cpp:200] relu1 needs backward computation.
I0428 20:21:15.580077  1721 net.cpp:200] ip1 needs backward computation.
I0428 20:21:15.580080  1721 net.cpp:200] pool1 needs backward computation.
I0428 20:21:15.580083  1721 net.cpp:200] conv1 needs backward computation.
I0428 20:21:15.580087  1721 net.cpp:200] pool0 needs backward computation.
I0428 20:21:15.580090  1721 net.cpp:200] conv0 needs backward computation.
I0428 20:21:15.580094  1721 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:15.580097  1721 net.cpp:202] mnist does not need backward computation.
I0428 20:21:15.580101  1721 net.cpp:244] This network produces output accuracy
I0428 20:21:15.580104  1721 net.cpp:244] This network produces output loss
I0428 20:21:15.580116  1721 net.cpp:257] Network initialization done.
I0428 20:21:15.580155  1721 solver.cpp:56] Solver scaffolding done.
I0428 20:21:15.580559  1721 caffe.cpp:248] Starting Optimization
I0428 20:21:15.580566  1721 solver.cpp:273] Solving LeNet
I0428 20:21:15.580569  1721 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:15.580782  1721 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:15.588779  1721 blocking_queue.cpp:49] Waiting for data
I0428 20:21:15.658469  1728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:15.659559  1721 solver.cpp:398]     Test net output #0: accuracy = 0.0767
I0428 20:21:15.659593  1721 solver.cpp:398]     Test net output #1: loss = 2.33004 (* 1 = 2.33004 loss)
I0428 20:21:15.664105  1721 solver.cpp:219] Iteration 0 (-3.55179e-31 iter/s, 0.0834774s/100 iters), loss = 2.33824
I0428 20:21:15.664146  1721 solver.cpp:238]     Train net output #0: loss = 2.33824 (* 1 = 2.33824 loss)
I0428 20:21:15.664157  1721 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:15.821724  1721 solver.cpp:219] Iteration 100 (634.659 iter/s, 0.157565s/100 iters), loss = 0.809473
I0428 20:21:15.821763  1721 solver.cpp:238]     Train net output #0: loss = 0.809473 (* 1 = 0.809473 loss)
I0428 20:21:15.821785  1721 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:15.979050  1721 solver.cpp:219] Iteration 200 (635.845 iter/s, 0.157271s/100 iters), loss = 0.614818
I0428 20:21:15.979075  1721 solver.cpp:238]     Train net output #0: loss = 0.614818 (* 1 = 0.614818 loss)
I0428 20:21:15.979081  1721 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:16.135104  1721 solver.cpp:219] Iteration 300 (640.957 iter/s, 0.156017s/100 iters), loss = 0.94332
I0428 20:21:16.135130  1721 solver.cpp:238]     Train net output #0: loss = 0.94332 (* 1 = 0.94332 loss)
I0428 20:21:16.135136  1721 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:16.298127  1721 solver.cpp:219] Iteration 400 (613.557 iter/s, 0.162984s/100 iters), loss = 0.778075
I0428 20:21:16.298156  1721 solver.cpp:238]     Train net output #0: loss = 0.778075 (* 1 = 0.778075 loss)
I0428 20:21:16.298162  1721 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:16.457797  1721 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:16.531071  1728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:16.533823  1721 solver.cpp:398]     Test net output #0: accuracy = 0.8493
I0428 20:21:16.533843  1721 solver.cpp:398]     Test net output #1: loss = 0.586312 (* 1 = 0.586312 loss)
I0428 20:21:16.535313  1721 solver.cpp:219] Iteration 500 (421.686 iter/s, 0.237143s/100 iters), loss = 0.546647
I0428 20:21:16.535383  1721 solver.cpp:238]     Train net output #0: loss = 0.546647 (* 1 = 0.546647 loss)
I0428 20:21:16.535405  1721 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:16.696108  1721 solver.cpp:219] Iteration 600 (622.173 iter/s, 0.160727s/100 iters), loss = 0.424878
I0428 20:21:16.696137  1721 solver.cpp:238]     Train net output #0: loss = 0.424878 (* 1 = 0.424878 loss)
I0428 20:21:16.696146  1721 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:16.859372  1721 solver.cpp:219] Iteration 700 (612.664 iter/s, 0.163221s/100 iters), loss = 0.499795
I0428 20:21:16.859412  1721 solver.cpp:238]     Train net output #0: loss = 0.499795 (* 1 = 0.499795 loss)
I0428 20:21:16.859419  1721 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:17.018718  1721 solver.cpp:219] Iteration 800 (627.768 iter/s, 0.159294s/100 iters), loss = 0.773074
I0428 20:21:17.018759  1721 solver.cpp:238]     Train net output #0: loss = 0.773074 (* 1 = 0.773074 loss)
I0428 20:21:17.018765  1721 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:17.181884  1721 solver.cpp:219] Iteration 900 (613.022 iter/s, 0.163126s/100 iters), loss = 0.622778
I0428 20:21:17.181926  1721 solver.cpp:238]     Train net output #0: loss = 0.622778 (* 1 = 0.622778 loss)
I0428 20:21:17.181933  1721 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:17.236178  1727 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:17.342581  1721 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:17.344717  1721 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:17.345942  1721 solver.cpp:311] Iteration 1000, loss = 0.546317
I0428 20:21:17.345960  1721 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:17.422304  1728 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:17.423328  1721 solver.cpp:398]     Test net output #0: accuracy = 0.8707
I0428 20:21:17.423351  1721 solver.cpp:398]     Test net output #1: loss = 0.542327 (* 1 = 0.542327 loss)
I0428 20:21:17.423357  1721 solver.cpp:316] Optimization Done.
I0428 20:21:17.423359  1721 caffe.cpp:259] Optimization Done.
