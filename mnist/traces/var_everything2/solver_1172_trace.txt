I0428 20:12:02.316942 32184 caffe.cpp:218] Using GPUs 0
I0428 20:12:02.354537 32184 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:12:02.869606 32184 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1172.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:12:02.869757 32184 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1172.prototxt
I0428 20:12:02.870097 32184 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:12:02.870113 32184 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:12:02.870193 32184 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:12:02.870255 32184 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:02.870362 32184 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:12:02.870386 32184 net.cpp:86] Creating Layer mnist
I0428 20:12:02.870393 32184 net.cpp:382] mnist -> data
I0428 20:12:02.870416 32184 net.cpp:382] mnist -> label
I0428 20:12:02.871515 32184 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:12:02.874213 32184 net.cpp:124] Setting up mnist
I0428 20:12:02.874231 32184 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:12:02.874239 32184 net.cpp:131] Top shape: 64 (64)
I0428 20:12:02.874243 32184 net.cpp:139] Memory required for data: 200960
I0428 20:12:02.874251 32184 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:02.874269 32184 net.cpp:86] Creating Layer conv0
I0428 20:12:02.874274 32184 net.cpp:408] conv0 <- data
I0428 20:12:02.874285 32184 net.cpp:382] conv0 -> conv0
I0428 20:12:03.158536 32184 net.cpp:124] Setting up conv0
I0428 20:12:03.158562 32184 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:12:03.158566 32184 net.cpp:139] Memory required for data: 3887360
I0428 20:12:03.158581 32184 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:03.158594 32184 net.cpp:86] Creating Layer pool0
I0428 20:12:03.158598 32184 net.cpp:408] pool0 <- conv0
I0428 20:12:03.158603 32184 net.cpp:382] pool0 -> pool0
I0428 20:12:03.158648 32184 net.cpp:124] Setting up pool0
I0428 20:12:03.158653 32184 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:12:03.158673 32184 net.cpp:139] Memory required for data: 4808960
I0428 20:12:03.158676 32184 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:03.158687 32184 net.cpp:86] Creating Layer conv1
I0428 20:12:03.158690 32184 net.cpp:408] conv1 <- pool0
I0428 20:12:03.158695 32184 net.cpp:382] conv1 -> conv1
I0428 20:12:03.160851 32184 net.cpp:124] Setting up conv1
I0428 20:12:03.160866 32184 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:12:03.160869 32184 net.cpp:139] Memory required for data: 6447360
I0428 20:12:03.160878 32184 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:03.160887 32184 net.cpp:86] Creating Layer pool1
I0428 20:12:03.160904 32184 net.cpp:408] pool1 <- conv1
I0428 20:12:03.160910 32184 net.cpp:382] pool1 -> pool1
I0428 20:12:03.160953 32184 net.cpp:124] Setting up pool1
I0428 20:12:03.160961 32184 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:12:03.160964 32184 net.cpp:139] Memory required for data: 6856960
I0428 20:12:03.160967 32184 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:03.160974 32184 net.cpp:86] Creating Layer ip1
I0428 20:12:03.160977 32184 net.cpp:408] ip1 <- pool1
I0428 20:12:03.160981 32184 net.cpp:382] ip1 -> ip1
I0428 20:12:03.162005 32184 net.cpp:124] Setting up ip1
I0428 20:12:03.162019 32184 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:03.162037 32184 net.cpp:139] Memory required for data: 6859520
I0428 20:12:03.162046 32184 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:03.162052 32184 net.cpp:86] Creating Layer relu1
I0428 20:12:03.162058 32184 net.cpp:408] relu1 <- ip1
I0428 20:12:03.162063 32184 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:03.162252 32184 net.cpp:124] Setting up relu1
I0428 20:12:03.162261 32184 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:03.162266 32184 net.cpp:139] Memory required for data: 6862080
I0428 20:12:03.162268 32184 layer_factory.hpp:77] Creating layer loss
I0428 20:12:03.162274 32184 net.cpp:86] Creating Layer loss
I0428 20:12:03.162277 32184 net.cpp:408] loss <- ip1
I0428 20:12:03.162281 32184 net.cpp:408] loss <- label
I0428 20:12:03.162286 32184 net.cpp:382] loss -> loss
I0428 20:12:03.162307 32184 layer_factory.hpp:77] Creating layer loss
I0428 20:12:03.163102 32184 net.cpp:124] Setting up loss
I0428 20:12:03.163115 32184 net.cpp:131] Top shape: (1)
I0428 20:12:03.163118 32184 net.cpp:134]     with loss weight 1
I0428 20:12:03.163132 32184 net.cpp:139] Memory required for data: 6862084
I0428 20:12:03.163136 32184 net.cpp:200] loss needs backward computation.
I0428 20:12:03.163139 32184 net.cpp:200] relu1 needs backward computation.
I0428 20:12:03.163142 32184 net.cpp:200] ip1 needs backward computation.
I0428 20:12:03.163147 32184 net.cpp:200] pool1 needs backward computation.
I0428 20:12:03.163151 32184 net.cpp:200] conv1 needs backward computation.
I0428 20:12:03.163153 32184 net.cpp:200] pool0 needs backward computation.
I0428 20:12:03.163156 32184 net.cpp:200] conv0 needs backward computation.
I0428 20:12:03.163159 32184 net.cpp:202] mnist does not need backward computation.
I0428 20:12:03.163162 32184 net.cpp:244] This network produces output loss
I0428 20:12:03.163170 32184 net.cpp:257] Network initialization done.
I0428 20:12:03.163426 32184 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1172.prototxt
I0428 20:12:03.163450 32184 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:12:03.163522 32184 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:12:03.163589 32184 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:03.163637 32184 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:12:03.163650 32184 net.cpp:86] Creating Layer mnist
I0428 20:12:03.163655 32184 net.cpp:382] mnist -> data
I0428 20:12:03.163661 32184 net.cpp:382] mnist -> label
I0428 20:12:03.163743 32184 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:12:03.165658 32184 net.cpp:124] Setting up mnist
I0428 20:12:03.165671 32184 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:12:03.165676 32184 net.cpp:131] Top shape: 100 (100)
I0428 20:12:03.165679 32184 net.cpp:139] Memory required for data: 314000
I0428 20:12:03.165683 32184 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:12:03.165690 32184 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:12:03.165693 32184 net.cpp:408] label_mnist_1_split <- label
I0428 20:12:03.165699 32184 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:12:03.165704 32184 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:12:03.165747 32184 net.cpp:124] Setting up label_mnist_1_split
I0428 20:12:03.165755 32184 net.cpp:131] Top shape: 100 (100)
I0428 20:12:03.165760 32184 net.cpp:131] Top shape: 100 (100)
I0428 20:12:03.165762 32184 net.cpp:139] Memory required for data: 314800
I0428 20:12:03.165766 32184 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:03.165773 32184 net.cpp:86] Creating Layer conv0
I0428 20:12:03.165776 32184 net.cpp:408] conv0 <- data
I0428 20:12:03.165781 32184 net.cpp:382] conv0 -> conv0
I0428 20:12:03.166606 32184 net.cpp:124] Setting up conv0
I0428 20:12:03.166620 32184 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:12:03.166623 32184 net.cpp:139] Memory required for data: 6074800
I0428 20:12:03.166632 32184 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:03.166638 32184 net.cpp:86] Creating Layer pool0
I0428 20:12:03.166641 32184 net.cpp:408] pool0 <- conv0
I0428 20:12:03.166646 32184 net.cpp:382] pool0 -> pool0
I0428 20:12:03.166682 32184 net.cpp:124] Setting up pool0
I0428 20:12:03.166688 32184 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:12:03.166692 32184 net.cpp:139] Memory required for data: 7514800
I0428 20:12:03.166694 32184 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:03.166703 32184 net.cpp:86] Creating Layer conv1
I0428 20:12:03.166707 32184 net.cpp:408] conv1 <- pool0
I0428 20:12:03.166712 32184 net.cpp:382] conv1 -> conv1
I0428 20:12:03.168577 32184 net.cpp:124] Setting up conv1
I0428 20:12:03.168591 32184 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:12:03.168601 32184 net.cpp:139] Memory required for data: 10074800
I0428 20:12:03.168617 32184 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:03.168622 32184 net.cpp:86] Creating Layer pool1
I0428 20:12:03.168637 32184 net.cpp:408] pool1 <- conv1
I0428 20:12:03.168642 32184 net.cpp:382] pool1 -> pool1
I0428 20:12:03.168679 32184 net.cpp:124] Setting up pool1
I0428 20:12:03.168686 32184 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:12:03.168689 32184 net.cpp:139] Memory required for data: 10714800
I0428 20:12:03.168692 32184 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:03.168699 32184 net.cpp:86] Creating Layer ip1
I0428 20:12:03.168701 32184 net.cpp:408] ip1 <- pool1
I0428 20:12:03.168712 32184 net.cpp:382] ip1 -> ip1
I0428 20:12:03.169008 32184 net.cpp:124] Setting up ip1
I0428 20:12:03.169018 32184 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:03.169021 32184 net.cpp:139] Memory required for data: 10718800
I0428 20:12:03.169029 32184 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:03.169034 32184 net.cpp:86] Creating Layer relu1
I0428 20:12:03.169044 32184 net.cpp:408] relu1 <- ip1
I0428 20:12:03.169049 32184 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:03.169961 32184 net.cpp:124] Setting up relu1
I0428 20:12:03.169973 32184 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:03.169977 32184 net.cpp:139] Memory required for data: 10722800
I0428 20:12:03.169981 32184 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:12:03.169988 32184 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:12:03.169991 32184 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:12:03.169997 32184 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:12:03.170004 32184 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:12:03.170047 32184 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:12:03.170053 32184 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:03.170056 32184 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:03.170059 32184 net.cpp:139] Memory required for data: 10730800
I0428 20:12:03.170066 32184 layer_factory.hpp:77] Creating layer accuracy
I0428 20:12:03.170076 32184 net.cpp:86] Creating Layer accuracy
I0428 20:12:03.170080 32184 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:12:03.170084 32184 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:12:03.170089 32184 net.cpp:382] accuracy -> accuracy
I0428 20:12:03.170097 32184 net.cpp:124] Setting up accuracy
I0428 20:12:03.170101 32184 net.cpp:131] Top shape: (1)
I0428 20:12:03.170104 32184 net.cpp:139] Memory required for data: 10730804
I0428 20:12:03.170107 32184 layer_factory.hpp:77] Creating layer loss
I0428 20:12:03.170111 32184 net.cpp:86] Creating Layer loss
I0428 20:12:03.170115 32184 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:12:03.170119 32184 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:12:03.170122 32184 net.cpp:382] loss -> loss
I0428 20:12:03.170128 32184 layer_factory.hpp:77] Creating layer loss
I0428 20:12:03.170367 32184 net.cpp:124] Setting up loss
I0428 20:12:03.170377 32184 net.cpp:131] Top shape: (1)
I0428 20:12:03.170379 32184 net.cpp:134]     with loss weight 1
I0428 20:12:03.170384 32184 net.cpp:139] Memory required for data: 10730808
I0428 20:12:03.170388 32184 net.cpp:200] loss needs backward computation.
I0428 20:12:03.170392 32184 net.cpp:202] accuracy does not need backward computation.
I0428 20:12:03.170395 32184 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:12:03.170398 32184 net.cpp:200] relu1 needs backward computation.
I0428 20:12:03.170402 32184 net.cpp:200] ip1 needs backward computation.
I0428 20:12:03.170404 32184 net.cpp:200] pool1 needs backward computation.
I0428 20:12:03.170408 32184 net.cpp:200] conv1 needs backward computation.
I0428 20:12:03.170410 32184 net.cpp:200] pool0 needs backward computation.
I0428 20:12:03.170413 32184 net.cpp:200] conv0 needs backward computation.
I0428 20:12:03.170416 32184 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:12:03.170420 32184 net.cpp:202] mnist does not need backward computation.
I0428 20:12:03.170428 32184 net.cpp:244] This network produces output accuracy
I0428 20:12:03.170431 32184 net.cpp:244] This network produces output loss
I0428 20:12:03.170449 32184 net.cpp:257] Network initialization done.
I0428 20:12:03.170487 32184 solver.cpp:56] Solver scaffolding done.
I0428 20:12:03.170706 32184 caffe.cpp:248] Starting Optimization
I0428 20:12:03.170711 32184 solver.cpp:273] Solving LeNet
I0428 20:12:03.170714 32184 solver.cpp:274] Learning Rate Policy: inv
I0428 20:12:03.171396 32184 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:12:03.195318 32184 blocking_queue.cpp:49] Waiting for data
I0428 20:12:03.248621 32191 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:03.249349 32184 solver.cpp:398]     Test net output #0: accuracy = 0.107
I0428 20:12:03.249383 32184 solver.cpp:398]     Test net output #1: loss = 2.31896 (* 1 = 2.31896 loss)
I0428 20:12:03.254171 32184 solver.cpp:219] Iteration 0 (0 iter/s, 0.0834273s/100 iters), loss = 2.31546
I0428 20:12:03.254195 32184 solver.cpp:238]     Train net output #0: loss = 2.31546 (* 1 = 2.31546 loss)
I0428 20:12:03.254221 32184 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:03.397557 32184 solver.cpp:219] Iteration 100 (697.609 iter/s, 0.143347s/100 iters), loss = 0.444214
I0428 20:12:03.397578 32184 solver.cpp:238]     Train net output #0: loss = 0.444214 (* 1 = 0.444214 loss)
I0428 20:12:03.397584 32184 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:03.538460 32184 solver.cpp:219] Iteration 200 (709.892 iter/s, 0.140867s/100 iters), loss = 0.126933
I0428 20:12:03.538487 32184 solver.cpp:238]     Train net output #0: loss = 0.126933 (* 1 = 0.126933 loss)
I0428 20:12:03.538493 32184 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:03.719751 32184 solver.cpp:219] Iteration 300 (551.743 iter/s, 0.181244s/100 iters), loss = 0.193564
I0428 20:12:03.719801 32184 solver.cpp:238]     Train net output #0: loss = 0.193564 (* 1 = 0.193564 loss)
I0428 20:12:03.719815 32184 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:03.919176 32184 solver.cpp:219] Iteration 400 (501.596 iter/s, 0.199364s/100 iters), loss = 0.0647385
I0428 20:12:03.919214 32184 solver.cpp:238]     Train net output #0: loss = 0.0647385 (* 1 = 0.0647385 loss)
I0428 20:12:03.919222 32184 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:04.091871 32184 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:04.170688 32191 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:04.171505 32184 solver.cpp:398]     Test net output #0: accuracy = 0.9689
I0428 20:12:04.171552 32184 solver.cpp:398]     Test net output #1: loss = 0.101393 (* 1 = 0.101393 loss)
I0428 20:12:04.173476 32184 solver.cpp:219] Iteration 500 (393.326 iter/s, 0.254242s/100 iters), loss = 0.105961
I0428 20:12:04.173516 32184 solver.cpp:238]     Train net output #0: loss = 0.105961 (* 1 = 0.105961 loss)
I0428 20:12:04.173527 32184 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:04.365486 32184 solver.cpp:219] Iteration 600 (520.962 iter/s, 0.191953s/100 iters), loss = 0.102137
I0428 20:12:04.365543 32184 solver.cpp:238]     Train net output #0: loss = 0.102137 (* 1 = 0.102137 loss)
I0428 20:12:04.365558 32184 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:04.564564 32184 solver.cpp:219] Iteration 700 (502.497 iter/s, 0.199006s/100 iters), loss = 0.127426
I0428 20:12:04.564620 32184 solver.cpp:238]     Train net output #0: loss = 0.127426 (* 1 = 0.127426 loss)
I0428 20:12:04.564632 32184 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:04.762653 32184 solver.cpp:219] Iteration 800 (505.007 iter/s, 0.198017s/100 iters), loss = 0.192894
I0428 20:12:04.762712 32184 solver.cpp:238]     Train net output #0: loss = 0.192894 (* 1 = 0.192894 loss)
I0428 20:12:04.762727 32184 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:04.960793 32184 solver.cpp:219] Iteration 900 (504.884 iter/s, 0.198065s/100 iters), loss = 0.151756
I0428 20:12:04.960863 32184 solver.cpp:238]     Train net output #0: loss = 0.151756 (* 1 = 0.151756 loss)
I0428 20:12:04.960878 32184 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:05.026978 32190 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:05.155762 32184 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:05.159127 32184 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:05.160856 32184 solver.cpp:311] Iteration 1000, loss = 0.114924
I0428 20:12:05.160887 32184 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:05.230319 32191 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:05.232694 32184 solver.cpp:398]     Test net output #0: accuracy = 0.978
I0428 20:12:05.232722 32184 solver.cpp:398]     Test net output #1: loss = 0.0688924 (* 1 = 0.0688924 loss)
I0428 20:12:05.232733 32184 solver.cpp:316] Optimization Done.
I0428 20:12:05.232738 32184 caffe.cpp:259] Optimization Done.
