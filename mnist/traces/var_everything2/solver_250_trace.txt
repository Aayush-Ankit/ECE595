I0428 19:36:54.210652 23746 caffe.cpp:218] Using GPUs 0
I0428 19:36:54.251927 23746 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:36:54.769871 23746 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test250.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:36:54.770010 23746 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test250.prototxt
I0428 19:36:54.770380 23746 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:36:54.770398 23746 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:36:54.770488 23746 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:54.770561 23746 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:54.770661 23746 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:36:54.770686 23746 net.cpp:86] Creating Layer mnist
I0428 19:36:54.770695 23746 net.cpp:382] mnist -> data
I0428 19:36:54.770717 23746 net.cpp:382] mnist -> label
I0428 19:36:54.771822 23746 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:36:54.774499 23746 net.cpp:124] Setting up mnist
I0428 19:36:54.774518 23746 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:36:54.774525 23746 net.cpp:131] Top shape: 64 (64)
I0428 19:36:54.774529 23746 net.cpp:139] Memory required for data: 200960
I0428 19:36:54.774536 23746 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:54.774552 23746 net.cpp:86] Creating Layer conv0
I0428 19:36:54.774557 23746 net.cpp:408] conv0 <- data
I0428 19:36:54.774571 23746 net.cpp:382] conv0 -> conv0
I0428 19:36:55.060540 23746 net.cpp:124] Setting up conv0
I0428 19:36:55.060570 23746 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:36:55.060575 23746 net.cpp:139] Memory required for data: 14946560
I0428 19:36:55.060590 23746 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:55.060605 23746 net.cpp:86] Creating Layer pool0
I0428 19:36:55.060628 23746 net.cpp:408] pool0 <- conv0
I0428 19:36:55.060636 23746 net.cpp:382] pool0 -> pool0
I0428 19:36:55.060689 23746 net.cpp:124] Setting up pool0
I0428 19:36:55.060698 23746 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:36:55.060703 23746 net.cpp:139] Memory required for data: 18632960
I0428 19:36:55.060706 23746 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:55.060714 23746 net.cpp:86] Creating Layer ip1
I0428 19:36:55.060719 23746 net.cpp:408] ip1 <- pool0
I0428 19:36:55.060725 23746 net.cpp:382] ip1 -> ip1
I0428 19:36:55.062692 23746 net.cpp:124] Setting up ip1
I0428 19:36:55.062707 23746 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:55.062711 23746 net.cpp:139] Memory required for data: 18635520
I0428 19:36:55.062721 23746 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:55.062729 23746 net.cpp:86] Creating Layer relu1
I0428 19:36:55.062733 23746 net.cpp:408] relu1 <- ip1
I0428 19:36:55.062739 23746 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:55.062932 23746 net.cpp:124] Setting up relu1
I0428 19:36:55.062942 23746 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:55.062945 23746 net.cpp:139] Memory required for data: 18638080
I0428 19:36:55.062949 23746 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:55.062958 23746 net.cpp:86] Creating Layer ip2
I0428 19:36:55.062961 23746 net.cpp:408] ip2 <- ip1
I0428 19:36:55.062968 23746 net.cpp:382] ip2 -> ip2
I0428 19:36:55.063073 23746 net.cpp:124] Setting up ip2
I0428 19:36:55.063081 23746 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:36:55.063084 23746 net.cpp:139] Memory required for data: 18644480
I0428 19:36:55.063093 23746 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:55.063099 23746 net.cpp:86] Creating Layer relu2
I0428 19:36:55.063102 23746 net.cpp:408] relu2 <- ip2
I0428 19:36:55.063108 23746 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:55.063923 23746 net.cpp:124] Setting up relu2
I0428 19:36:55.063937 23746 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:36:55.063941 23746 net.cpp:139] Memory required for data: 18650880
I0428 19:36:55.063946 23746 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:55.063953 23746 net.cpp:86] Creating Layer ip3
I0428 19:36:55.063957 23746 net.cpp:408] ip3 <- ip2
I0428 19:36:55.063963 23746 net.cpp:382] ip3 -> ip3
I0428 19:36:55.064069 23746 net.cpp:124] Setting up ip3
I0428 19:36:55.064077 23746 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:55.064080 23746 net.cpp:139] Memory required for data: 18653440
I0428 19:36:55.064087 23746 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:55.064095 23746 net.cpp:86] Creating Layer relu3
I0428 19:36:55.064100 23746 net.cpp:408] relu3 <- ip3
I0428 19:36:55.064105 23746 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:55.064291 23746 net.cpp:124] Setting up relu3
I0428 19:36:55.064299 23746 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:55.064303 23746 net.cpp:139] Memory required for data: 18656000
I0428 19:36:55.064307 23746 layer_factory.hpp:77] Creating layer loss
I0428 19:36:55.064313 23746 net.cpp:86] Creating Layer loss
I0428 19:36:55.064317 23746 net.cpp:408] loss <- ip3
I0428 19:36:55.064322 23746 net.cpp:408] loss <- label
I0428 19:36:55.064328 23746 net.cpp:382] loss -> loss
I0428 19:36:55.064344 23746 layer_factory.hpp:77] Creating layer loss
I0428 19:36:55.064602 23746 net.cpp:124] Setting up loss
I0428 19:36:55.064613 23746 net.cpp:131] Top shape: (1)
I0428 19:36:55.064617 23746 net.cpp:134]     with loss weight 1
I0428 19:36:55.064632 23746 net.cpp:139] Memory required for data: 18656004
I0428 19:36:55.064636 23746 net.cpp:200] loss needs backward computation.
I0428 19:36:55.064640 23746 net.cpp:200] relu3 needs backward computation.
I0428 19:36:55.064644 23746 net.cpp:200] ip3 needs backward computation.
I0428 19:36:55.064647 23746 net.cpp:200] relu2 needs backward computation.
I0428 19:36:55.064651 23746 net.cpp:200] ip2 needs backward computation.
I0428 19:36:55.064654 23746 net.cpp:200] relu1 needs backward computation.
I0428 19:36:55.064657 23746 net.cpp:200] ip1 needs backward computation.
I0428 19:36:55.064672 23746 net.cpp:200] pool0 needs backward computation.
I0428 19:36:55.064677 23746 net.cpp:200] conv0 needs backward computation.
I0428 19:36:55.064682 23746 net.cpp:202] mnist does not need backward computation.
I0428 19:36:55.064684 23746 net.cpp:244] This network produces output loss
I0428 19:36:55.064693 23746 net.cpp:257] Network initialization done.
I0428 19:36:55.065012 23746 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test250.prototxt
I0428 19:36:55.065042 23746 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:36:55.065134 23746 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:55.065204 23746 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:55.065255 23746 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:36:55.065269 23746 net.cpp:86] Creating Layer mnist
I0428 19:36:55.065275 23746 net.cpp:382] mnist -> data
I0428 19:36:55.065285 23746 net.cpp:382] mnist -> label
I0428 19:36:55.065387 23746 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:36:55.066570 23746 net.cpp:124] Setting up mnist
I0428 19:36:55.066586 23746 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:36:55.066591 23746 net.cpp:131] Top shape: 100 (100)
I0428 19:36:55.066596 23746 net.cpp:139] Memory required for data: 314000
I0428 19:36:55.066599 23746 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:36:55.066606 23746 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:36:55.066611 23746 net.cpp:408] label_mnist_1_split <- label
I0428 19:36:55.066617 23746 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:36:55.066624 23746 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:36:55.066687 23746 net.cpp:124] Setting up label_mnist_1_split
I0428 19:36:55.066695 23746 net.cpp:131] Top shape: 100 (100)
I0428 19:36:55.066699 23746 net.cpp:131] Top shape: 100 (100)
I0428 19:36:55.066704 23746 net.cpp:139] Memory required for data: 314800
I0428 19:36:55.066717 23746 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:55.066728 23746 net.cpp:86] Creating Layer conv0
I0428 19:36:55.066732 23746 net.cpp:408] conv0 <- data
I0428 19:36:55.066740 23746 net.cpp:382] conv0 -> conv0
I0428 19:36:55.068595 23746 net.cpp:124] Setting up conv0
I0428 19:36:55.068611 23746 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:36:55.068615 23746 net.cpp:139] Memory required for data: 23354800
I0428 19:36:55.068625 23746 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:55.068634 23746 net.cpp:86] Creating Layer pool0
I0428 19:36:55.068640 23746 net.cpp:408] pool0 <- conv0
I0428 19:36:55.068646 23746 net.cpp:382] pool0 -> pool0
I0428 19:36:55.068687 23746 net.cpp:124] Setting up pool0
I0428 19:36:55.068693 23746 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:36:55.068696 23746 net.cpp:139] Memory required for data: 29114800
I0428 19:36:55.068699 23746 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:55.068708 23746 net.cpp:86] Creating Layer ip1
I0428 19:36:55.068712 23746 net.cpp:408] ip1 <- pool0
I0428 19:36:55.068717 23746 net.cpp:382] ip1 -> ip1
I0428 19:36:55.070696 23746 net.cpp:124] Setting up ip1
I0428 19:36:55.070710 23746 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:55.070714 23746 net.cpp:139] Memory required for data: 29118800
I0428 19:36:55.070724 23746 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:55.070731 23746 net.cpp:86] Creating Layer relu1
I0428 19:36:55.070735 23746 net.cpp:408] relu1 <- ip1
I0428 19:36:55.070741 23746 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:55.071022 23746 net.cpp:124] Setting up relu1
I0428 19:36:55.071034 23746 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:55.071038 23746 net.cpp:139] Memory required for data: 29122800
I0428 19:36:55.071043 23746 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:55.071049 23746 net.cpp:86] Creating Layer ip2
I0428 19:36:55.071053 23746 net.cpp:408] ip2 <- ip1
I0428 19:36:55.071061 23746 net.cpp:382] ip2 -> ip2
I0428 19:36:55.071178 23746 net.cpp:124] Setting up ip2
I0428 19:36:55.071187 23746 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:36:55.071190 23746 net.cpp:139] Memory required for data: 29132800
I0428 19:36:55.071199 23746 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:55.071208 23746 net.cpp:86] Creating Layer relu2
I0428 19:36:55.071213 23746 net.cpp:408] relu2 <- ip2
I0428 19:36:55.071218 23746 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:55.072115 23746 net.cpp:124] Setting up relu2
I0428 19:36:55.072129 23746 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:36:55.072134 23746 net.cpp:139] Memory required for data: 29142800
I0428 19:36:55.072137 23746 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:55.072146 23746 net.cpp:86] Creating Layer ip3
I0428 19:36:55.072149 23746 net.cpp:408] ip3 <- ip2
I0428 19:36:55.072157 23746 net.cpp:382] ip3 -> ip3
I0428 19:36:55.072288 23746 net.cpp:124] Setting up ip3
I0428 19:36:55.072299 23746 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:55.072301 23746 net.cpp:139] Memory required for data: 29146800
I0428 19:36:55.072309 23746 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:55.072314 23746 net.cpp:86] Creating Layer relu3
I0428 19:36:55.072319 23746 net.cpp:408] relu3 <- ip3
I0428 19:36:55.072325 23746 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:55.072510 23746 net.cpp:124] Setting up relu3
I0428 19:36:55.072520 23746 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:55.072525 23746 net.cpp:139] Memory required for data: 29150800
I0428 19:36:55.072528 23746 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:36:55.072535 23746 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:36:55.072538 23746 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:36:55.072545 23746 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:36:55.072551 23746 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:36:55.072593 23746 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:36:55.072602 23746 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:55.072616 23746 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:55.072619 23746 net.cpp:139] Memory required for data: 29158800
I0428 19:36:55.072623 23746 layer_factory.hpp:77] Creating layer accuracy
I0428 19:36:55.072629 23746 net.cpp:86] Creating Layer accuracy
I0428 19:36:55.072633 23746 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:36:55.072638 23746 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:36:55.072644 23746 net.cpp:382] accuracy -> accuracy
I0428 19:36:55.072666 23746 net.cpp:124] Setting up accuracy
I0428 19:36:55.072671 23746 net.cpp:131] Top shape: (1)
I0428 19:36:55.072675 23746 net.cpp:139] Memory required for data: 29158804
I0428 19:36:55.072679 23746 layer_factory.hpp:77] Creating layer loss
I0428 19:36:55.072685 23746 net.cpp:86] Creating Layer loss
I0428 19:36:55.072690 23746 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:36:55.072695 23746 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:36:55.072698 23746 net.cpp:382] loss -> loss
I0428 19:36:55.072706 23746 layer_factory.hpp:77] Creating layer loss
I0428 19:36:55.072994 23746 net.cpp:124] Setting up loss
I0428 19:36:55.073004 23746 net.cpp:131] Top shape: (1)
I0428 19:36:55.073009 23746 net.cpp:134]     with loss weight 1
I0428 19:36:55.073015 23746 net.cpp:139] Memory required for data: 29158808
I0428 19:36:55.073019 23746 net.cpp:200] loss needs backward computation.
I0428 19:36:55.073024 23746 net.cpp:202] accuracy does not need backward computation.
I0428 19:36:55.073029 23746 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:36:55.073032 23746 net.cpp:200] relu3 needs backward computation.
I0428 19:36:55.073035 23746 net.cpp:200] ip3 needs backward computation.
I0428 19:36:55.073038 23746 net.cpp:200] relu2 needs backward computation.
I0428 19:36:55.073041 23746 net.cpp:200] ip2 needs backward computation.
I0428 19:36:55.073045 23746 net.cpp:200] relu1 needs backward computation.
I0428 19:36:55.073048 23746 net.cpp:200] ip1 needs backward computation.
I0428 19:36:55.073053 23746 net.cpp:200] pool0 needs backward computation.
I0428 19:36:55.073056 23746 net.cpp:200] conv0 needs backward computation.
I0428 19:36:55.073060 23746 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:36:55.073065 23746 net.cpp:202] mnist does not need backward computation.
I0428 19:36:55.073068 23746 net.cpp:244] This network produces output accuracy
I0428 19:36:55.073071 23746 net.cpp:244] This network produces output loss
I0428 19:36:55.073086 23746 net.cpp:257] Network initialization done.
I0428 19:36:55.073127 23746 solver.cpp:56] Solver scaffolding done.
I0428 19:36:55.073433 23746 caffe.cpp:248] Starting Optimization
I0428 19:36:55.073439 23746 solver.cpp:273] Solving LeNet
I0428 19:36:55.073442 23746 solver.cpp:274] Learning Rate Policy: inv
I0428 19:36:55.074259 23746 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:36:55.236904 23753 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:55.242835 23746 solver.cpp:398]     Test net output #0: accuracy = 0.0935
I0428 19:36:55.242871 23746 solver.cpp:398]     Test net output #1: loss = 2.30921 (* 1 = 2.30921 loss)
I0428 19:36:55.247719 23746 solver.cpp:219] Iteration 0 (-2.60641e-31 iter/s, 0.174244s/100 iters), loss = 2.30135
I0428 19:36:55.247759 23746 solver.cpp:238]     Train net output #0: loss = 2.30135 (* 1 = 2.30135 loss)
I0428 19:36:55.247771 23746 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:36:55.474052 23746 solver.cpp:219] Iteration 100 (441.911 iter/s, 0.22629s/100 iters), loss = 0.701065
I0428 19:36:55.474094 23746 solver.cpp:238]     Train net output #0: loss = 0.701065 (* 1 = 0.701065 loss)
I0428 19:36:55.474100 23746 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:36:55.700922 23746 solver.cpp:219] Iteration 200 (440.894 iter/s, 0.226812s/100 iters), loss = 0.652006
I0428 19:36:55.700947 23746 solver.cpp:238]     Train net output #0: loss = 0.652006 (* 1 = 0.652006 loss)
I0428 19:36:55.700954 23746 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:36:55.928305 23746 solver.cpp:219] Iteration 300 (439.871 iter/s, 0.227339s/100 iters), loss = 0.845265
I0428 19:36:55.928359 23746 solver.cpp:238]     Train net output #0: loss = 0.845265 (* 1 = 0.845265 loss)
I0428 19:36:55.928366 23746 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:36:56.154172 23746 solver.cpp:219] Iteration 400 (442.875 iter/s, 0.225797s/100 iters), loss = 0.41229
I0428 19:36:56.154198 23746 solver.cpp:238]     Train net output #0: loss = 0.41229 (* 1 = 0.41229 loss)
I0428 19:36:56.154204 23746 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:36:56.377187 23746 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:36:56.536856 23753 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:56.541539 23746 solver.cpp:398]     Test net output #0: accuracy = 0.8389
I0428 19:36:56.541579 23746 solver.cpp:398]     Test net output #1: loss = 0.456827 (* 1 = 0.456827 loss)
I0428 19:36:56.543776 23746 solver.cpp:219] Iteration 500 (256.704 iter/s, 0.389553s/100 iters), loss = 0.372175
I0428 19:36:56.543814 23746 solver.cpp:238]     Train net output #0: loss = 0.372175 (* 1 = 0.372175 loss)
I0428 19:36:56.543822 23746 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:36:56.773705 23746 solver.cpp:219] Iteration 600 (434.994 iter/s, 0.229888s/100 iters), loss = 0.355988
I0428 19:36:56.773747 23746 solver.cpp:238]     Train net output #0: loss = 0.355988 (* 1 = 0.355988 loss)
I0428 19:36:56.773754 23746 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:36:57.003450 23746 solver.cpp:219] Iteration 700 (435.376 iter/s, 0.229686s/100 iters), loss = 0.665527
I0428 19:36:57.003509 23746 solver.cpp:238]     Train net output #0: loss = 0.665527 (* 1 = 0.665527 loss)
I0428 19:36:57.003532 23746 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:36:57.232924 23746 solver.cpp:219] Iteration 800 (435.923 iter/s, 0.229399s/100 iters), loss = 0.410843
I0428 19:36:57.232951 23746 solver.cpp:238]     Train net output #0: loss = 0.410843 (* 1 = 0.410843 loss)
I0428 19:36:57.232959 23746 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:36:57.465646 23746 solver.cpp:219] Iteration 900 (429.785 iter/s, 0.232674s/100 iters), loss = 0.530451
I0428 19:36:57.465698 23746 solver.cpp:238]     Train net output #0: loss = 0.530451 (* 1 = 0.530451 loss)
I0428 19:36:57.465706 23746 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:36:57.541860 23752 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:57.692044 23746 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:36:57.695843 23746 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:36:57.698443 23746 solver.cpp:311] Iteration 1000, loss = 0.466543
I0428 19:36:57.698459 23746 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:36:57.856326 23753 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:57.860893 23746 solver.cpp:398]     Test net output #0: accuracy = 0.8605
I0428 19:36:57.860911 23746 solver.cpp:398]     Test net output #1: loss = 0.374175 (* 1 = 0.374175 loss)
I0428 19:36:57.860916 23746 solver.cpp:316] Optimization Done.
I0428 19:36:57.860920 23746 caffe.cpp:259] Optimization Done.
