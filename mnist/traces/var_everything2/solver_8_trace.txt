I0428 19:27:55.397061 21486 caffe.cpp:218] Using GPUs 0
I0428 19:27:55.437283 21486 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:27:55.957695 21486 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test8.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:27:55.957834 21486 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test8.prototxt
I0428 19:27:55.958108 21486 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:27:55.958122 21486 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:27:55.958186 21486 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:27:55.958245 21486 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:55.958345 21486 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:27:55.958370 21486 net.cpp:86] Creating Layer mnist
I0428 19:27:55.958381 21486 net.cpp:382] mnist -> data
I0428 19:27:55.958405 21486 net.cpp:382] mnist -> label
I0428 19:27:55.959507 21486 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:27:55.961968 21486 net.cpp:124] Setting up mnist
I0428 19:27:55.961985 21486 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:27:55.961992 21486 net.cpp:131] Top shape: 64 (64)
I0428 19:27:55.961995 21486 net.cpp:139] Memory required for data: 200960
I0428 19:27:55.962002 21486 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:55.962028 21486 net.cpp:86] Creating Layer ip1
I0428 19:27:55.962036 21486 net.cpp:408] ip1 <- data
I0428 19:27:55.962047 21486 net.cpp:382] ip1 -> ip1
I0428 19:27:55.962363 21486 net.cpp:124] Setting up ip1
I0428 19:27:55.962373 21486 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:27:55.962378 21486 net.cpp:139] Memory required for data: 207360
I0428 19:27:55.962390 21486 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:55.962399 21486 net.cpp:86] Creating Layer relu1
I0428 19:27:55.962402 21486 net.cpp:408] relu1 <- ip1
I0428 19:27:55.962409 21486 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:56.249228 21486 net.cpp:124] Setting up relu1
I0428 19:27:56.249258 21486 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:27:56.249261 21486 net.cpp:139] Memory required for data: 213760
I0428 19:27:56.249267 21486 layer_factory.hpp:77] Creating layer ip2
I0428 19:27:56.249280 21486 net.cpp:86] Creating Layer ip2
I0428 19:27:56.249285 21486 net.cpp:408] ip2 <- ip1
I0428 19:27:56.249294 21486 net.cpp:382] ip2 -> ip2
I0428 19:27:56.249413 21486 net.cpp:124] Setting up ip2
I0428 19:27:56.249420 21486 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:56.249424 21486 net.cpp:139] Memory required for data: 216320
I0428 19:27:56.249434 21486 layer_factory.hpp:77] Creating layer relu2
I0428 19:27:56.249459 21486 net.cpp:86] Creating Layer relu2
I0428 19:27:56.249464 21486 net.cpp:408] relu2 <- ip2
I0428 19:27:56.249469 21486 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:27:56.250269 21486 net.cpp:124] Setting up relu2
I0428 19:27:56.250283 21486 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:56.250288 21486 net.cpp:139] Memory required for data: 218880
I0428 19:27:56.250291 21486 layer_factory.hpp:77] Creating layer loss
I0428 19:27:56.250298 21486 net.cpp:86] Creating Layer loss
I0428 19:27:56.250301 21486 net.cpp:408] loss <- ip2
I0428 19:27:56.250306 21486 net.cpp:408] loss <- label
I0428 19:27:56.250313 21486 net.cpp:382] loss -> loss
I0428 19:27:56.250331 21486 layer_factory.hpp:77] Creating layer loss
I0428 19:27:56.251468 21486 net.cpp:124] Setting up loss
I0428 19:27:56.251482 21486 net.cpp:131] Top shape: (1)
I0428 19:27:56.251487 21486 net.cpp:134]     with loss weight 1
I0428 19:27:56.251502 21486 net.cpp:139] Memory required for data: 218884
I0428 19:27:56.251505 21486 net.cpp:200] loss needs backward computation.
I0428 19:27:56.251509 21486 net.cpp:200] relu2 needs backward computation.
I0428 19:27:56.251513 21486 net.cpp:200] ip2 needs backward computation.
I0428 19:27:56.251516 21486 net.cpp:200] relu1 needs backward computation.
I0428 19:27:56.251519 21486 net.cpp:200] ip1 needs backward computation.
I0428 19:27:56.251523 21486 net.cpp:202] mnist does not need backward computation.
I0428 19:27:56.251526 21486 net.cpp:244] This network produces output loss
I0428 19:27:56.251533 21486 net.cpp:257] Network initialization done.
I0428 19:27:56.251742 21486 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test8.prototxt
I0428 19:27:56.251765 21486 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:27:56.251829 21486 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:27:56.251881 21486 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:56.251929 21486 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:27:56.251942 21486 net.cpp:86] Creating Layer mnist
I0428 19:27:56.251947 21486 net.cpp:382] mnist -> data
I0428 19:27:56.251955 21486 net.cpp:382] mnist -> label
I0428 19:27:56.252044 21486 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:27:56.253993 21486 net.cpp:124] Setting up mnist
I0428 19:27:56.254007 21486 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:27:56.254012 21486 net.cpp:131] Top shape: 100 (100)
I0428 19:27:56.254015 21486 net.cpp:139] Memory required for data: 314000
I0428 19:27:56.254019 21486 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:27:56.254040 21486 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:27:56.254045 21486 net.cpp:408] label_mnist_1_split <- label
I0428 19:27:56.254050 21486 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:27:56.254067 21486 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:27:56.254148 21486 net.cpp:124] Setting up label_mnist_1_split
I0428 19:27:56.254156 21486 net.cpp:131] Top shape: 100 (100)
I0428 19:27:56.254160 21486 net.cpp:131] Top shape: 100 (100)
I0428 19:27:56.254163 21486 net.cpp:139] Memory required for data: 314800
I0428 19:27:56.254166 21486 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:56.254173 21486 net.cpp:86] Creating Layer ip1
I0428 19:27:56.254178 21486 net.cpp:408] ip1 <- data
I0428 19:27:56.254182 21486 net.cpp:382] ip1 -> ip1
I0428 19:27:56.254400 21486 net.cpp:124] Setting up ip1
I0428 19:27:56.254422 21486 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:27:56.254426 21486 net.cpp:139] Memory required for data: 324800
I0428 19:27:56.254436 21486 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:56.254441 21486 net.cpp:86] Creating Layer relu1
I0428 19:27:56.254446 21486 net.cpp:408] relu1 <- ip1
I0428 19:27:56.254451 21486 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:56.254626 21486 net.cpp:124] Setting up relu1
I0428 19:27:56.254634 21486 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:27:56.254638 21486 net.cpp:139] Memory required for data: 334800
I0428 19:27:56.254642 21486 layer_factory.hpp:77] Creating layer ip2
I0428 19:27:56.254648 21486 net.cpp:86] Creating Layer ip2
I0428 19:27:56.254652 21486 net.cpp:408] ip2 <- ip1
I0428 19:27:56.254657 21486 net.cpp:382] ip2 -> ip2
I0428 19:27:56.254767 21486 net.cpp:124] Setting up ip2
I0428 19:27:56.254775 21486 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:56.254777 21486 net.cpp:139] Memory required for data: 338800
I0428 19:27:56.254784 21486 layer_factory.hpp:77] Creating layer relu2
I0428 19:27:56.254789 21486 net.cpp:86] Creating Layer relu2
I0428 19:27:56.254792 21486 net.cpp:408] relu2 <- ip2
I0428 19:27:56.254796 21486 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:27:56.255553 21486 net.cpp:124] Setting up relu2
I0428 19:27:56.255566 21486 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:56.255570 21486 net.cpp:139] Memory required for data: 342800
I0428 19:27:56.255573 21486 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:27:56.255579 21486 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:27:56.255583 21486 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:27:56.255589 21486 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:27:56.255594 21486 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:27:56.255664 21486 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:27:56.255669 21486 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:56.255673 21486 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:56.255677 21486 net.cpp:139] Memory required for data: 350800
I0428 19:27:56.255681 21486 layer_factory.hpp:77] Creating layer accuracy
I0428 19:27:56.255689 21486 net.cpp:86] Creating Layer accuracy
I0428 19:27:56.255692 21486 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:27:56.255697 21486 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:27:56.255702 21486 net.cpp:382] accuracy -> accuracy
I0428 19:27:56.255709 21486 net.cpp:124] Setting up accuracy
I0428 19:27:56.255714 21486 net.cpp:131] Top shape: (1)
I0428 19:27:56.255717 21486 net.cpp:139] Memory required for data: 350804
I0428 19:27:56.255720 21486 layer_factory.hpp:77] Creating layer loss
I0428 19:27:56.255725 21486 net.cpp:86] Creating Layer loss
I0428 19:27:56.255728 21486 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:27:56.255733 21486 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:27:56.255736 21486 net.cpp:382] loss -> loss
I0428 19:27:56.255743 21486 layer_factory.hpp:77] Creating layer loss
I0428 19:27:56.255985 21486 net.cpp:124] Setting up loss
I0428 19:27:56.255995 21486 net.cpp:131] Top shape: (1)
I0428 19:27:56.255998 21486 net.cpp:134]     with loss weight 1
I0428 19:27:56.256005 21486 net.cpp:139] Memory required for data: 350808
I0428 19:27:56.256008 21486 net.cpp:200] loss needs backward computation.
I0428 19:27:56.256021 21486 net.cpp:202] accuracy does not need backward computation.
I0428 19:27:56.256026 21486 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:27:56.256031 21486 net.cpp:200] relu2 needs backward computation.
I0428 19:27:56.256033 21486 net.cpp:200] ip2 needs backward computation.
I0428 19:27:56.256036 21486 net.cpp:200] relu1 needs backward computation.
I0428 19:27:56.256041 21486 net.cpp:200] ip1 needs backward computation.
I0428 19:27:56.256044 21486 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:27:56.256049 21486 net.cpp:202] mnist does not need backward computation.
I0428 19:27:56.256052 21486 net.cpp:244] This network produces output accuracy
I0428 19:27:56.256062 21486 net.cpp:244] This network produces output loss
I0428 19:27:56.256070 21486 net.cpp:257] Network initialization done.
I0428 19:27:56.256098 21486 solver.cpp:56] Solver scaffolding done.
I0428 19:27:56.256245 21486 caffe.cpp:248] Starting Optimization
I0428 19:27:56.256253 21486 solver.cpp:273] Solving LeNet
I0428 19:27:56.256255 21486 solver.cpp:274] Learning Rate Policy: inv
I0428 19:27:56.256340 21486 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:27:56.256409 21486 blocking_queue.cpp:49] Waiting for data
I0428 19:27:56.316658 21493 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:56.317183 21486 solver.cpp:398]     Test net output #0: accuracy = 0.0839
I0428 19:27:56.317225 21486 solver.cpp:398]     Test net output #1: loss = 2.31916 (* 1 = 2.31916 loss)
I0428 19:27:56.318125 21486 solver.cpp:219] Iteration 0 (0 iter/s, 0.0618424s/100 iters), loss = 2.33235
I0428 19:27:56.318167 21486 solver.cpp:238]     Train net output #0: loss = 2.33235 (* 1 = 2.33235 loss)
I0428 19:27:56.318188 21486 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:27:56.375026 21486 solver.cpp:219] Iteration 100 (1758.97 iter/s, 0.0568515s/100 iters), loss = 1.33655
I0428 19:27:56.375064 21486 solver.cpp:238]     Train net output #0: loss = 1.33655 (* 1 = 1.33655 loss)
I0428 19:27:56.375077 21486 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:27:56.421139 21486 solver.cpp:219] Iteration 200 (2170.67 iter/s, 0.0460687s/100 iters), loss = 1.1167
I0428 19:27:56.421171 21486 solver.cpp:238]     Train net output #0: loss = 1.1167 (* 1 = 1.1167 loss)
I0428 19:27:56.421190 21486 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:27:56.461413 21486 solver.cpp:219] Iteration 300 (2485.4 iter/s, 0.040235s/100 iters), loss = 1.16379
I0428 19:27:56.461438 21486 solver.cpp:238]     Train net output #0: loss = 1.16379 (* 1 = 1.16379 loss)
I0428 19:27:56.461446 21486 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:27:56.500728 21486 solver.cpp:219] Iteration 400 (2545.58 iter/s, 0.0392837s/100 iters), loss = 1.24227
I0428 19:27:56.500751 21486 solver.cpp:238]     Train net output #0: loss = 1.24227 (* 1 = 1.24227 loss)
I0428 19:27:56.500758 21486 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:27:56.540832 21486 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:27:56.598004 21493 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:56.598388 21486 solver.cpp:398]     Test net output #0: accuracy = 0.653
I0428 19:27:56.598423 21486 solver.cpp:398]     Test net output #1: loss = 0.976697 (* 1 = 0.976697 loss)
I0428 19:27:56.598831 21486 solver.cpp:219] Iteration 500 (1019.68 iter/s, 0.0980695s/100 iters), loss = 1.11518
I0428 19:27:56.598866 21486 solver.cpp:238]     Train net output #0: loss = 1.11518 (* 1 = 1.11518 loss)
I0428 19:27:56.598873 21486 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:27:56.656293 21486 solver.cpp:219] Iteration 600 (1741.25 iter/s, 0.05743s/100 iters), loss = 0.795048
I0428 19:27:56.656332 21486 solver.cpp:238]     Train net output #0: loss = 0.795048 (* 1 = 0.795048 loss)
I0428 19:27:56.656338 21486 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:27:56.710151 21486 solver.cpp:219] Iteration 700 (1857.96 iter/s, 0.0538225s/100 iters), loss = 0.778391
I0428 19:27:56.710206 21486 solver.cpp:238]     Train net output #0: loss = 0.778391 (* 1 = 0.778391 loss)
I0428 19:27:56.710239 21486 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:27:56.755599 21486 solver.cpp:219] Iteration 800 (2202.79 iter/s, 0.0453969s/100 iters), loss = 1.15046
I0428 19:27:56.755640 21486 solver.cpp:238]     Train net output #0: loss = 1.15046 (* 1 = 1.15046 loss)
I0428 19:27:56.755651 21486 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:27:56.795915 21486 solver.cpp:219] Iteration 900 (2482.93 iter/s, 0.0402749s/100 iters), loss = 1.08086
I0428 19:27:56.795944 21486 solver.cpp:238]     Train net output #0: loss = 1.08086 (* 1 = 1.08086 loss)
I0428 19:27:56.795953 21486 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:27:56.809865 21492 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:56.835167 21486 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:27:56.835839 21486 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:27:56.836333 21486 solver.cpp:311] Iteration 1000, loss = 0.742246
I0428 19:27:56.836350 21486 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:27:56.911512 21493 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:56.911908 21486 solver.cpp:398]     Test net output #0: accuracy = 0.6589
I0428 19:27:56.911933 21486 solver.cpp:398]     Test net output #1: loss = 0.930903 (* 1 = 0.930903 loss)
I0428 19:27:56.911939 21486 solver.cpp:316] Optimization Done.
I0428 19:27:56.911943 21486 caffe.cpp:259] Optimization Done.
