I0428 19:47:16.429004 26152 caffe.cpp:218] Using GPUs 0
I0428 19:47:16.469276 26152 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:17.008899 26152 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test510.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:17.009035 26152 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test510.prototxt
I0428 19:47:17.009415 26152 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:17.009434 26152 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:17.009524 26152 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:17.009599 26152 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:17.009703 26152 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:17.009727 26152 net.cpp:86] Creating Layer mnist
I0428 19:47:17.009737 26152 net.cpp:382] mnist -> data
I0428 19:47:17.009757 26152 net.cpp:382] mnist -> label
I0428 19:47:17.010845 26152 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:17.013309 26152 net.cpp:124] Setting up mnist
I0428 19:47:17.013327 26152 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:17.013334 26152 net.cpp:131] Top shape: 64 (64)
I0428 19:47:17.013337 26152 net.cpp:139] Memory required for data: 200960
I0428 19:47:17.013345 26152 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:17.013388 26152 net.cpp:86] Creating Layer conv0
I0428 19:47:17.013396 26152 net.cpp:408] conv0 <- data
I0428 19:47:17.013409 26152 net.cpp:382] conv0 -> conv0
I0428 19:47:17.304051 26152 net.cpp:124] Setting up conv0
I0428 19:47:17.304082 26152 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:47:17.304087 26152 net.cpp:139] Memory required for data: 938240
I0428 19:47:17.304127 26152 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:17.304142 26152 net.cpp:86] Creating Layer pool0
I0428 19:47:17.304147 26152 net.cpp:408] pool0 <- conv0
I0428 19:47:17.304153 26152 net.cpp:382] pool0 -> pool0
I0428 19:47:17.304210 26152 net.cpp:124] Setting up pool0
I0428 19:47:17.304219 26152 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:47:17.304224 26152 net.cpp:139] Memory required for data: 1122560
I0428 19:47:17.304226 26152 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:17.304240 26152 net.cpp:86] Creating Layer conv1
I0428 19:47:17.304244 26152 net.cpp:408] conv1 <- pool0
I0428 19:47:17.304250 26152 net.cpp:382] conv1 -> conv1
I0428 19:47:17.306358 26152 net.cpp:124] Setting up conv1
I0428 19:47:17.306376 26152 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:47:17.306381 26152 net.cpp:139] Memory required for data: 1155328
I0428 19:47:17.306391 26152 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:17.306401 26152 net.cpp:86] Creating Layer pool1
I0428 19:47:17.306404 26152 net.cpp:408] pool1 <- conv1
I0428 19:47:17.306411 26152 net.cpp:382] pool1 -> pool1
I0428 19:47:17.306454 26152 net.cpp:124] Setting up pool1
I0428 19:47:17.306460 26152 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:47:17.306464 26152 net.cpp:139] Memory required for data: 1163520
I0428 19:47:17.306468 26152 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:17.306475 26152 net.cpp:86] Creating Layer ip1
I0428 19:47:17.306479 26152 net.cpp:408] ip1 <- pool1
I0428 19:47:17.306484 26152 net.cpp:382] ip1 -> ip1
I0428 19:47:17.306597 26152 net.cpp:124] Setting up ip1
I0428 19:47:17.306607 26152 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:17.306609 26152 net.cpp:139] Memory required for data: 1166080
I0428 19:47:17.306618 26152 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:17.306625 26152 net.cpp:86] Creating Layer relu1
I0428 19:47:17.306628 26152 net.cpp:408] relu1 <- ip1
I0428 19:47:17.306633 26152 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:17.306823 26152 net.cpp:124] Setting up relu1
I0428 19:47:17.306834 26152 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:17.306838 26152 net.cpp:139] Memory required for data: 1168640
I0428 19:47:17.306841 26152 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:17.306849 26152 net.cpp:86] Creating Layer ip2
I0428 19:47:17.306851 26152 net.cpp:408] ip2 <- ip1
I0428 19:47:17.306857 26152 net.cpp:382] ip2 -> ip2
I0428 19:47:17.306963 26152 net.cpp:124] Setting up ip2
I0428 19:47:17.306972 26152 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:17.306975 26152 net.cpp:139] Memory required for data: 1171200
I0428 19:47:17.306982 26152 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:17.306988 26152 net.cpp:86] Creating Layer relu2
I0428 19:47:17.306993 26152 net.cpp:408] relu2 <- ip2
I0428 19:47:17.306998 26152 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:17.307832 26152 net.cpp:124] Setting up relu2
I0428 19:47:17.307847 26152 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:17.307852 26152 net.cpp:139] Memory required for data: 1173760
I0428 19:47:17.307855 26152 layer_factory.hpp:77] Creating layer loss
I0428 19:47:17.307863 26152 net.cpp:86] Creating Layer loss
I0428 19:47:17.307868 26152 net.cpp:408] loss <- ip2
I0428 19:47:17.307873 26152 net.cpp:408] loss <- label
I0428 19:47:17.307878 26152 net.cpp:382] loss -> loss
I0428 19:47:17.307903 26152 layer_factory.hpp:77] Creating layer loss
I0428 19:47:17.308171 26152 net.cpp:124] Setting up loss
I0428 19:47:17.308182 26152 net.cpp:131] Top shape: (1)
I0428 19:47:17.308187 26152 net.cpp:134]     with loss weight 1
I0428 19:47:17.308202 26152 net.cpp:139] Memory required for data: 1173764
I0428 19:47:17.308207 26152 net.cpp:200] loss needs backward computation.
I0428 19:47:17.308210 26152 net.cpp:200] relu2 needs backward computation.
I0428 19:47:17.308214 26152 net.cpp:200] ip2 needs backward computation.
I0428 19:47:17.308218 26152 net.cpp:200] relu1 needs backward computation.
I0428 19:47:17.308221 26152 net.cpp:200] ip1 needs backward computation.
I0428 19:47:17.308225 26152 net.cpp:200] pool1 needs backward computation.
I0428 19:47:17.308241 26152 net.cpp:200] conv1 needs backward computation.
I0428 19:47:17.308246 26152 net.cpp:200] pool0 needs backward computation.
I0428 19:47:17.308249 26152 net.cpp:200] conv0 needs backward computation.
I0428 19:47:17.308254 26152 net.cpp:202] mnist does not need backward computation.
I0428 19:47:17.308257 26152 net.cpp:244] This network produces output loss
I0428 19:47:17.308267 26152 net.cpp:257] Network initialization done.
I0428 19:47:17.308614 26152 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test510.prototxt
I0428 19:47:17.308645 26152 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:17.308742 26152 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:47:17.308825 26152 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:17.308881 26152 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:17.308895 26152 net.cpp:86] Creating Layer mnist
I0428 19:47:17.308900 26152 net.cpp:382] mnist -> data
I0428 19:47:17.308909 26152 net.cpp:382] mnist -> label
I0428 19:47:17.309007 26152 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:17.311187 26152 net.cpp:124] Setting up mnist
I0428 19:47:17.311203 26152 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:17.311209 26152 net.cpp:131] Top shape: 100 (100)
I0428 19:47:17.311213 26152 net.cpp:139] Memory required for data: 314000
I0428 19:47:17.311218 26152 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:17.311226 26152 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:17.311230 26152 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:17.311235 26152 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:17.311244 26152 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:17.311300 26152 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:17.311319 26152 net.cpp:131] Top shape: 100 (100)
I0428 19:47:17.311324 26152 net.cpp:131] Top shape: 100 (100)
I0428 19:47:17.311327 26152 net.cpp:139] Memory required for data: 314800
I0428 19:47:17.311331 26152 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:17.311342 26152 net.cpp:86] Creating Layer conv0
I0428 19:47:17.311345 26152 net.cpp:408] conv0 <- data
I0428 19:47:17.311350 26152 net.cpp:382] conv0 -> conv0
I0428 19:47:17.313249 26152 net.cpp:124] Setting up conv0
I0428 19:47:17.313266 26152 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:47:17.313271 26152 net.cpp:139] Memory required for data: 1466800
I0428 19:47:17.313282 26152 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:17.313290 26152 net.cpp:86] Creating Layer pool0
I0428 19:47:17.313294 26152 net.cpp:408] pool0 <- conv0
I0428 19:47:17.313300 26152 net.cpp:382] pool0 -> pool0
I0428 19:47:17.313343 26152 net.cpp:124] Setting up pool0
I0428 19:47:17.313349 26152 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:47:17.313352 26152 net.cpp:139] Memory required for data: 1754800
I0428 19:47:17.313355 26152 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:17.313365 26152 net.cpp:86] Creating Layer conv1
I0428 19:47:17.313369 26152 net.cpp:408] conv1 <- pool0
I0428 19:47:17.313375 26152 net.cpp:382] conv1 -> conv1
I0428 19:47:17.315629 26152 net.cpp:124] Setting up conv1
I0428 19:47:17.315645 26152 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:47:17.315650 26152 net.cpp:139] Memory required for data: 1806000
I0428 19:47:17.315661 26152 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:17.315668 26152 net.cpp:86] Creating Layer pool1
I0428 19:47:17.315672 26152 net.cpp:408] pool1 <- conv1
I0428 19:47:17.315678 26152 net.cpp:382] pool1 -> pool1
I0428 19:47:17.315728 26152 net.cpp:124] Setting up pool1
I0428 19:47:17.315734 26152 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:47:17.315738 26152 net.cpp:139] Memory required for data: 1818800
I0428 19:47:17.315742 26152 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:17.315748 26152 net.cpp:86] Creating Layer ip1
I0428 19:47:17.315752 26152 net.cpp:408] ip1 <- pool1
I0428 19:47:17.315757 26152 net.cpp:382] ip1 -> ip1
I0428 19:47:17.315913 26152 net.cpp:124] Setting up ip1
I0428 19:47:17.315923 26152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:17.315927 26152 net.cpp:139] Memory required for data: 1822800
I0428 19:47:17.315937 26152 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:17.315943 26152 net.cpp:86] Creating Layer relu1
I0428 19:47:17.315946 26152 net.cpp:408] relu1 <- ip1
I0428 19:47:17.315951 26152 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:17.316133 26152 net.cpp:124] Setting up relu1
I0428 19:47:17.316143 26152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:17.316148 26152 net.cpp:139] Memory required for data: 1826800
I0428 19:47:17.316151 26152 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:17.316159 26152 net.cpp:86] Creating Layer ip2
I0428 19:47:17.316164 26152 net.cpp:408] ip2 <- ip1
I0428 19:47:17.316169 26152 net.cpp:382] ip2 -> ip2
I0428 19:47:17.316277 26152 net.cpp:124] Setting up ip2
I0428 19:47:17.316285 26152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:17.316289 26152 net.cpp:139] Memory required for data: 1830800
I0428 19:47:17.316296 26152 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:17.316301 26152 net.cpp:86] Creating Layer relu2
I0428 19:47:17.316305 26152 net.cpp:408] relu2 <- ip2
I0428 19:47:17.316309 26152 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:17.316483 26152 net.cpp:124] Setting up relu2
I0428 19:47:17.316496 26152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:17.316501 26152 net.cpp:139] Memory required for data: 1834800
I0428 19:47:17.316504 26152 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:47:17.316511 26152 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:47:17.316514 26152 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:47:17.316519 26152 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:47:17.316540 26152 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:47:17.316587 26152 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:47:17.316596 26152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:17.316601 26152 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:17.316603 26152 net.cpp:139] Memory required for data: 1842800
I0428 19:47:17.316607 26152 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:17.316613 26152 net.cpp:86] Creating Layer accuracy
I0428 19:47:17.316617 26152 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:47:17.316622 26152 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:17.316627 26152 net.cpp:382] accuracy -> accuracy
I0428 19:47:17.316635 26152 net.cpp:124] Setting up accuracy
I0428 19:47:17.316639 26152 net.cpp:131] Top shape: (1)
I0428 19:47:17.316642 26152 net.cpp:139] Memory required for data: 1842804
I0428 19:47:17.316645 26152 layer_factory.hpp:77] Creating layer loss
I0428 19:47:17.316650 26152 net.cpp:86] Creating Layer loss
I0428 19:47:17.316654 26152 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:47:17.316658 26152 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:17.316663 26152 net.cpp:382] loss -> loss
I0428 19:47:17.316670 26152 layer_factory.hpp:77] Creating layer loss
I0428 19:47:17.317016 26152 net.cpp:124] Setting up loss
I0428 19:47:17.317029 26152 net.cpp:131] Top shape: (1)
I0428 19:47:17.317034 26152 net.cpp:134]     with loss weight 1
I0428 19:47:17.317041 26152 net.cpp:139] Memory required for data: 1842808
I0428 19:47:17.317045 26152 net.cpp:200] loss needs backward computation.
I0428 19:47:17.317050 26152 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:17.317055 26152 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:47:17.317059 26152 net.cpp:200] relu2 needs backward computation.
I0428 19:47:17.317062 26152 net.cpp:200] ip2 needs backward computation.
I0428 19:47:17.317067 26152 net.cpp:200] relu1 needs backward computation.
I0428 19:47:17.317070 26152 net.cpp:200] ip1 needs backward computation.
I0428 19:47:17.317075 26152 net.cpp:200] pool1 needs backward computation.
I0428 19:47:17.317080 26152 net.cpp:200] conv1 needs backward computation.
I0428 19:47:17.317083 26152 net.cpp:200] pool0 needs backward computation.
I0428 19:47:17.317086 26152 net.cpp:200] conv0 needs backward computation.
I0428 19:47:17.317091 26152 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:17.317096 26152 net.cpp:202] mnist does not need backward computation.
I0428 19:47:17.317106 26152 net.cpp:244] This network produces output accuracy
I0428 19:47:17.317111 26152 net.cpp:244] This network produces output loss
I0428 19:47:17.317122 26152 net.cpp:257] Network initialization done.
I0428 19:47:17.317167 26152 solver.cpp:56] Solver scaffolding done.
I0428 19:47:17.317477 26152 caffe.cpp:248] Starting Optimization
I0428 19:47:17.317484 26152 solver.cpp:273] Solving LeNet
I0428 19:47:17.317488 26152 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:17.318343 26152 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:17.322016 26152 blocking_queue.cpp:49] Waiting for data
I0428 19:47:17.396108 26159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:17.396630 26152 solver.cpp:398]     Test net output #0: accuracy = 0.0477
I0428 19:47:17.396656 26152 solver.cpp:398]     Test net output #1: loss = 2.32052 (* 1 = 2.32052 loss)
I0428 19:47:17.398617 26152 solver.cpp:219] Iteration 0 (-1.00193e-42 iter/s, 0.0810993s/100 iters), loss = 2.3101
I0428 19:47:17.398648 26152 solver.cpp:238]     Train net output #0: loss = 2.3101 (* 1 = 2.3101 loss)
I0428 19:47:17.398664 26152 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:17.466370 26152 solver.cpp:219] Iteration 100 (1476.81 iter/s, 0.0677134s/100 iters), loss = 1.62619
I0428 19:47:17.466401 26152 solver.cpp:238]     Train net output #0: loss = 1.62619 (* 1 = 1.62619 loss)
I0428 19:47:17.466409 26152 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:17.532718 26152 solver.cpp:219] Iteration 200 (1508.13 iter/s, 0.0663071s/100 iters), loss = 1.44197
I0428 19:47:17.532764 26152 solver.cpp:238]     Train net output #0: loss = 1.44197 (* 1 = 1.44197 loss)
I0428 19:47:17.532773 26152 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:17.595876 26152 solver.cpp:219] Iteration 300 (1584.66 iter/s, 0.063105s/100 iters), loss = 0.878027
I0428 19:47:17.595916 26152 solver.cpp:238]     Train net output #0: loss = 0.878027 (* 1 = 0.878027 loss)
I0428 19:47:17.595922 26152 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:17.657574 26152 solver.cpp:219] Iteration 400 (1621.63 iter/s, 0.0616663s/100 iters), loss = 0.775311
I0428 19:47:17.657614 26152 solver.cpp:238]     Train net output #0: loss = 0.775311 (* 1 = 0.775311 loss)
I0428 19:47:17.657620 26152 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:17.719066 26152 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:17.772316 26159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:17.772773 26152 solver.cpp:398]     Test net output #0: accuracy = 0.8049
I0428 19:47:17.772795 26152 solver.cpp:398]     Test net output #1: loss = 0.603194 (* 1 = 0.603194 loss)
I0428 19:47:17.773496 26152 solver.cpp:219] Iteration 500 (863.023 iter/s, 0.115872s/100 iters), loss = 0.731107
I0428 19:47:17.773541 26152 solver.cpp:238]     Train net output #0: loss = 0.731107 (* 1 = 0.731107 loss)
I0428 19:47:17.773548 26152 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:17.849441 26152 solver.cpp:219] Iteration 600 (1317.68 iter/s, 0.0758907s/100 iters), loss = 0.609612
I0428 19:47:17.849467 26152 solver.cpp:238]     Train net output #0: loss = 0.609612 (* 1 = 0.609612 loss)
I0428 19:47:17.849472 26152 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:17.912515 26152 solver.cpp:219] Iteration 700 (1586.23 iter/s, 0.0630426s/100 iters), loss = 0.795628
I0428 19:47:17.912555 26152 solver.cpp:238]     Train net output #0: loss = 0.795628 (* 1 = 0.795628 loss)
I0428 19:47:17.912561 26152 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:17.974962 26152 solver.cpp:219] Iteration 800 (1602.21 iter/s, 0.0624138s/100 iters), loss = 0.690628
I0428 19:47:17.975000 26152 solver.cpp:238]     Train net output #0: loss = 0.690628 (* 1 = 0.690628 loss)
I0428 19:47:17.975006 26152 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:18.036432 26152 solver.cpp:219] Iteration 900 (1627.63 iter/s, 0.061439s/100 iters), loss = 0.740937
I0428 19:47:18.036473 26152 solver.cpp:238]     Train net output #0: loss = 0.740937 (* 1 = 0.740937 loss)
I0428 19:47:18.036478 26152 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:18.056957 26158 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:18.097218 26152 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:18.097738 26152 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:18.098091 26152 solver.cpp:311] Iteration 1000, loss = 0.566225
I0428 19:47:18.098106 26152 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:18.150841 26159 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:18.151401 26152 solver.cpp:398]     Test net output #0: accuracy = 0.837
I0428 19:47:18.151419 26152 solver.cpp:398]     Test net output #1: loss = 0.487727 (* 1 = 0.487727 loss)
I0428 19:47:18.151424 26152 solver.cpp:316] Optimization Done.
I0428 19:47:18.151428 26152 caffe.cpp:259] Optimization Done.
