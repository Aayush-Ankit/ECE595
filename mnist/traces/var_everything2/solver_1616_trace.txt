I0428 20:35:08.490028  4577 caffe.cpp:218] Using GPUs 0
I0428 20:35:08.526154  4577 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:35:09.037021  4577 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1616.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:35:09.037185  4577 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1616.prototxt
I0428 20:35:09.037593  4577 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:35:09.037617  4577 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:35:09.037726  4577 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:09.037832  4577 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:09.037966  4577 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:35:09.038002  4577 net.cpp:86] Creating Layer mnist
I0428 20:35:09.038015  4577 net.cpp:382] mnist -> data
I0428 20:35:09.038048  4577 net.cpp:382] mnist -> label
I0428 20:35:09.039320  4577 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:35:09.041764  4577 net.cpp:124] Setting up mnist
I0428 20:35:09.041785  4577 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:35:09.041795  4577 net.cpp:131] Top shape: 64 (64)
I0428 20:35:09.041802  4577 net.cpp:139] Memory required for data: 200960
I0428 20:35:09.041812  4577 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:09.041834  4577 net.cpp:86] Creating Layer conv0
I0428 20:35:09.041859  4577 net.cpp:408] conv0 <- data
I0428 20:35:09.041878  4577 net.cpp:382] conv0 -> conv0
I0428 20:35:09.321012  4577 net.cpp:124] Setting up conv0
I0428 20:35:09.321039  4577 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:35:09.321045  4577 net.cpp:139] Memory required for data: 14946560
I0428 20:35:09.321066  4577 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:09.321084  4577 net.cpp:86] Creating Layer pool0
I0428 20:35:09.321097  4577 net.cpp:408] pool0 <- conv0
I0428 20:35:09.321106  4577 net.cpp:382] pool0 -> pool0
I0428 20:35:09.321161  4577 net.cpp:124] Setting up pool0
I0428 20:35:09.321171  4577 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:35:09.321177  4577 net.cpp:139] Memory required for data: 18632960
I0428 20:35:09.321182  4577 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:09.321197  4577 net.cpp:86] Creating Layer conv1
I0428 20:35:09.321202  4577 net.cpp:408] conv1 <- pool0
I0428 20:35:09.321213  4577 net.cpp:382] conv1 -> conv1
I0428 20:35:09.324589  4577 net.cpp:124] Setting up conv1
I0428 20:35:09.324605  4577 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:35:09.324611  4577 net.cpp:139] Memory required for data: 19452160
I0428 20:35:09.324623  4577 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:09.324635  4577 net.cpp:86] Creating Layer pool1
I0428 20:35:09.324646  4577 net.cpp:408] pool1 <- conv1
I0428 20:35:09.324654  4577 net.cpp:382] pool1 -> pool1
I0428 20:35:09.324695  4577 net.cpp:124] Setting up pool1
I0428 20:35:09.324704  4577 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:35:09.324709  4577 net.cpp:139] Memory required for data: 19656960
I0428 20:35:09.324714  4577 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:09.324724  4577 net.cpp:86] Creating Layer ip1
I0428 20:35:09.324733  4577 net.cpp:408] ip1 <- pool1
I0428 20:35:09.324741  4577 net.cpp:382] ip1 -> ip1
I0428 20:35:09.325724  4577 net.cpp:124] Setting up ip1
I0428 20:35:09.325738  4577 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:09.325744  4577 net.cpp:139] Memory required for data: 19659520
I0428 20:35:09.325757  4577 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:09.325767  4577 net.cpp:86] Creating Layer relu1
I0428 20:35:09.325773  4577 net.cpp:408] relu1 <- ip1
I0428 20:35:09.325779  4577 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:09.325975  4577 net.cpp:124] Setting up relu1
I0428 20:35:09.325985  4577 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:09.325990  4577 net.cpp:139] Memory required for data: 19662080
I0428 20:35:09.325995  4577 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:09.326004  4577 net.cpp:86] Creating Layer ip2
I0428 20:35:09.326010  4577 net.cpp:408] ip2 <- ip1
I0428 20:35:09.326019  4577 net.cpp:382] ip2 -> ip2
I0428 20:35:09.326114  4577 net.cpp:124] Setting up ip2
I0428 20:35:09.326123  4577 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:35:09.326128  4577 net.cpp:139] Memory required for data: 19668480
I0428 20:35:09.326138  4577 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:09.326145  4577 net.cpp:86] Creating Layer relu2
I0428 20:35:09.326150  4577 net.cpp:408] relu2 <- ip2
I0428 20:35:09.326158  4577 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:09.326941  4577 net.cpp:124] Setting up relu2
I0428 20:35:09.326954  4577 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:35:09.326961  4577 net.cpp:139] Memory required for data: 19674880
I0428 20:35:09.326967  4577 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:09.326977  4577 net.cpp:86] Creating Layer ip3
I0428 20:35:09.326982  4577 net.cpp:408] ip3 <- ip2
I0428 20:35:09.326992  4577 net.cpp:382] ip3 -> ip3
I0428 20:35:09.327106  4577 net.cpp:124] Setting up ip3
I0428 20:35:09.327116  4577 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:09.327121  4577 net.cpp:139] Memory required for data: 19677440
I0428 20:35:09.327133  4577 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:09.327142  4577 net.cpp:86] Creating Layer relu3
I0428 20:35:09.327149  4577 net.cpp:408] relu3 <- ip3
I0428 20:35:09.327155  4577 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:09.327347  4577 net.cpp:124] Setting up relu3
I0428 20:35:09.327358  4577 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:09.327363  4577 net.cpp:139] Memory required for data: 19680000
I0428 20:35:09.327368  4577 layer_factory.hpp:77] Creating layer loss
I0428 20:35:09.327376  4577 net.cpp:86] Creating Layer loss
I0428 20:35:09.327381  4577 net.cpp:408] loss <- ip3
I0428 20:35:09.327388  4577 net.cpp:408] loss <- label
I0428 20:35:09.327395  4577 net.cpp:382] loss -> loss
I0428 20:35:09.327419  4577 layer_factory.hpp:77] Creating layer loss
I0428 20:35:09.327719  4577 net.cpp:124] Setting up loss
I0428 20:35:09.327730  4577 net.cpp:131] Top shape: (1)
I0428 20:35:09.327736  4577 net.cpp:134]     with loss weight 1
I0428 20:35:09.327757  4577 net.cpp:139] Memory required for data: 19680004
I0428 20:35:09.327764  4577 net.cpp:200] loss needs backward computation.
I0428 20:35:09.327785  4577 net.cpp:200] relu3 needs backward computation.
I0428 20:35:09.327790  4577 net.cpp:200] ip3 needs backward computation.
I0428 20:35:09.327795  4577 net.cpp:200] relu2 needs backward computation.
I0428 20:35:09.327801  4577 net.cpp:200] ip2 needs backward computation.
I0428 20:35:09.327806  4577 net.cpp:200] relu1 needs backward computation.
I0428 20:35:09.327811  4577 net.cpp:200] ip1 needs backward computation.
I0428 20:35:09.327816  4577 net.cpp:200] pool1 needs backward computation.
I0428 20:35:09.327822  4577 net.cpp:200] conv1 needs backward computation.
I0428 20:35:09.327827  4577 net.cpp:200] pool0 needs backward computation.
I0428 20:35:09.327833  4577 net.cpp:200] conv0 needs backward computation.
I0428 20:35:09.327839  4577 net.cpp:202] mnist does not need backward computation.
I0428 20:35:09.327844  4577 net.cpp:244] This network produces output loss
I0428 20:35:09.327859  4577 net.cpp:257] Network initialization done.
I0428 20:35:09.328207  4577 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1616.prototxt
I0428 20:35:09.328239  4577 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:35:09.328348  4577 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:09.328464  4577 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:09.328521  4577 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:35:09.328553  4577 net.cpp:86] Creating Layer mnist
I0428 20:35:09.328562  4577 net.cpp:382] mnist -> data
I0428 20:35:09.328573  4577 net.cpp:382] mnist -> label
I0428 20:35:09.328703  4577 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:35:09.330072  4577 net.cpp:124] Setting up mnist
I0428 20:35:09.330086  4577 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:35:09.330094  4577 net.cpp:131] Top shape: 100 (100)
I0428 20:35:09.330099  4577 net.cpp:139] Memory required for data: 314000
I0428 20:35:09.330104  4577 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:35:09.330128  4577 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:35:09.330133  4577 net.cpp:408] label_mnist_1_split <- label
I0428 20:35:09.330140  4577 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:35:09.330152  4577 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:35:09.330214  4577 net.cpp:124] Setting up label_mnist_1_split
I0428 20:35:09.330237  4577 net.cpp:131] Top shape: 100 (100)
I0428 20:35:09.330243  4577 net.cpp:131] Top shape: 100 (100)
I0428 20:35:09.330248  4577 net.cpp:139] Memory required for data: 314800
I0428 20:35:09.330253  4577 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:09.330266  4577 net.cpp:86] Creating Layer conv0
I0428 20:35:09.330273  4577 net.cpp:408] conv0 <- data
I0428 20:35:09.330281  4577 net.cpp:382] conv0 -> conv0
I0428 20:35:09.331970  4577 net.cpp:124] Setting up conv0
I0428 20:35:09.331985  4577 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:35:09.332006  4577 net.cpp:139] Memory required for data: 23354800
I0428 20:35:09.332020  4577 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:09.332029  4577 net.cpp:86] Creating Layer pool0
I0428 20:35:09.332036  4577 net.cpp:408] pool0 <- conv0
I0428 20:35:09.332042  4577 net.cpp:382] pool0 -> pool0
I0428 20:35:09.332082  4577 net.cpp:124] Setting up pool0
I0428 20:35:09.332092  4577 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:35:09.332096  4577 net.cpp:139] Memory required for data: 29114800
I0428 20:35:09.332101  4577 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:09.332114  4577 net.cpp:86] Creating Layer conv1
I0428 20:35:09.332120  4577 net.cpp:408] conv1 <- pool0
I0428 20:35:09.332129  4577 net.cpp:382] conv1 -> conv1
I0428 20:35:09.335258  4577 net.cpp:124] Setting up conv1
I0428 20:35:09.335273  4577 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:35:09.335278  4577 net.cpp:139] Memory required for data: 30394800
I0428 20:35:09.335306  4577 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:09.335316  4577 net.cpp:86] Creating Layer pool1
I0428 20:35:09.335322  4577 net.cpp:408] pool1 <- conv1
I0428 20:35:09.335330  4577 net.cpp:382] pool1 -> pool1
I0428 20:35:09.335374  4577 net.cpp:124] Setting up pool1
I0428 20:35:09.335384  4577 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:35:09.335389  4577 net.cpp:139] Memory required for data: 30714800
I0428 20:35:09.335396  4577 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:09.335404  4577 net.cpp:86] Creating Layer ip1
I0428 20:35:09.335410  4577 net.cpp:408] ip1 <- pool1
I0428 20:35:09.335418  4577 net.cpp:382] ip1 -> ip1
I0428 20:35:09.335592  4577 net.cpp:124] Setting up ip1
I0428 20:35:09.335610  4577 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:09.335618  4577 net.cpp:139] Memory required for data: 30718800
I0428 20:35:09.335629  4577 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:09.335638  4577 net.cpp:86] Creating Layer relu1
I0428 20:35:09.335645  4577 net.cpp:408] relu1 <- ip1
I0428 20:35:09.335652  4577 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:09.335821  4577 net.cpp:124] Setting up relu1
I0428 20:35:09.335831  4577 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:09.335855  4577 net.cpp:139] Memory required for data: 30722800
I0428 20:35:09.335860  4577 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:09.335870  4577 net.cpp:86] Creating Layer ip2
I0428 20:35:09.335876  4577 net.cpp:408] ip2 <- ip1
I0428 20:35:09.335885  4577 net.cpp:382] ip2 -> ip2
I0428 20:35:09.335978  4577 net.cpp:124] Setting up ip2
I0428 20:35:09.335986  4577 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:35:09.335991  4577 net.cpp:139] Memory required for data: 30732800
I0428 20:35:09.336000  4577 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:09.336007  4577 net.cpp:86] Creating Layer relu2
I0428 20:35:09.336012  4577 net.cpp:408] relu2 <- ip2
I0428 20:35:09.336020  4577 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:09.336187  4577 net.cpp:124] Setting up relu2
I0428 20:35:09.336196  4577 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:35:09.336201  4577 net.cpp:139] Memory required for data: 30742800
I0428 20:35:09.336206  4577 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:09.336215  4577 net.cpp:86] Creating Layer ip3
I0428 20:35:09.336220  4577 net.cpp:408] ip3 <- ip2
I0428 20:35:09.336227  4577 net.cpp:382] ip3 -> ip3
I0428 20:35:09.336441  4577 net.cpp:124] Setting up ip3
I0428 20:35:09.336450  4577 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:09.336455  4577 net.cpp:139] Memory required for data: 30746800
I0428 20:35:09.336470  4577 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:09.336479  4577 net.cpp:86] Creating Layer relu3
I0428 20:35:09.336490  4577 net.cpp:408] relu3 <- ip3
I0428 20:35:09.336498  4577 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:09.337318  4577 net.cpp:124] Setting up relu3
I0428 20:35:09.337348  4577 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:09.337354  4577 net.cpp:139] Memory required for data: 30750800
I0428 20:35:09.337360  4577 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:35:09.337369  4577 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:35:09.337374  4577 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:35:09.337383  4577 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:35:09.337407  4577 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:35:09.337471  4577 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:35:09.337481  4577 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:09.337486  4577 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:09.337491  4577 net.cpp:139] Memory required for data: 30758800
I0428 20:35:09.337497  4577 layer_factory.hpp:77] Creating layer accuracy
I0428 20:35:09.337505  4577 net.cpp:86] Creating Layer accuracy
I0428 20:35:09.337512  4577 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:35:09.337519  4577 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:35:09.337527  4577 net.cpp:382] accuracy -> accuracy
I0428 20:35:09.337543  4577 net.cpp:124] Setting up accuracy
I0428 20:35:09.337550  4577 net.cpp:131] Top shape: (1)
I0428 20:35:09.337555  4577 net.cpp:139] Memory required for data: 30758804
I0428 20:35:09.337560  4577 layer_factory.hpp:77] Creating layer loss
I0428 20:35:09.337568  4577 net.cpp:86] Creating Layer loss
I0428 20:35:09.337574  4577 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:35:09.337579  4577 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:35:09.337586  4577 net.cpp:382] loss -> loss
I0428 20:35:09.337596  4577 layer_factory.hpp:77] Creating layer loss
I0428 20:35:09.337841  4577 net.cpp:124] Setting up loss
I0428 20:35:09.337852  4577 net.cpp:131] Top shape: (1)
I0428 20:35:09.337857  4577 net.cpp:134]     with loss weight 1
I0428 20:35:09.337877  4577 net.cpp:139] Memory required for data: 30758808
I0428 20:35:09.337882  4577 net.cpp:200] loss needs backward computation.
I0428 20:35:09.337889  4577 net.cpp:202] accuracy does not need backward computation.
I0428 20:35:09.337896  4577 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:35:09.337901  4577 net.cpp:200] relu3 needs backward computation.
I0428 20:35:09.337905  4577 net.cpp:200] ip3 needs backward computation.
I0428 20:35:09.337911  4577 net.cpp:200] relu2 needs backward computation.
I0428 20:35:09.337915  4577 net.cpp:200] ip2 needs backward computation.
I0428 20:35:09.337920  4577 net.cpp:200] relu1 needs backward computation.
I0428 20:35:09.337924  4577 net.cpp:200] ip1 needs backward computation.
I0428 20:35:09.337936  4577 net.cpp:200] pool1 needs backward computation.
I0428 20:35:09.337940  4577 net.cpp:200] conv1 needs backward computation.
I0428 20:35:09.337946  4577 net.cpp:200] pool0 needs backward computation.
I0428 20:35:09.337951  4577 net.cpp:200] conv0 needs backward computation.
I0428 20:35:09.337957  4577 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:35:09.337963  4577 net.cpp:202] mnist does not need backward computation.
I0428 20:35:09.337967  4577 net.cpp:244] This network produces output accuracy
I0428 20:35:09.337973  4577 net.cpp:244] This network produces output loss
I0428 20:35:09.337988  4577 net.cpp:257] Network initialization done.
I0428 20:35:09.338033  4577 solver.cpp:56] Solver scaffolding done.
I0428 20:35:09.338379  4577 caffe.cpp:248] Starting Optimization
I0428 20:35:09.338402  4577 solver.cpp:273] Solving LeNet
I0428 20:35:09.338407  4577 solver.cpp:274] Learning Rate Policy: inv
I0428 20:35:09.338624  4577 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:35:09.450062  4584 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:09.451900  4577 solver.cpp:398]     Test net output #0: accuracy = 0.0961
I0428 20:35:09.451922  4577 solver.cpp:398]     Test net output #1: loss = 2.31144 (* 1 = 2.31144 loss)
I0428 20:35:09.456990  4577 solver.cpp:219] Iteration 0 (-2.01672e-31 iter/s, 0.118538s/100 iters), loss = 2.31186
I0428 20:35:09.457020  4577 solver.cpp:238]     Train net output #0: loss = 2.31186 (* 1 = 2.31186 loss)
I0428 20:35:09.457037  4577 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:35:09.690331  4577 solver.cpp:219] Iteration 100 (428.644 iter/s, 0.233294s/100 iters), loss = 1.00268
I0428 20:35:09.690371  4577 solver.cpp:238]     Train net output #0: loss = 1.00268 (* 1 = 1.00268 loss)
I0428 20:35:09.690382  4577 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:35:09.921936  4577 solver.cpp:219] Iteration 200 (431.867 iter/s, 0.231553s/100 iters), loss = 0.509392
I0428 20:35:09.921968  4577 solver.cpp:238]     Train net output #0: loss = 0.509392 (* 1 = 0.509392 loss)
I0428 20:35:09.921979  4577 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:35:10.153218  4577 solver.cpp:219] Iteration 300 (432.461 iter/s, 0.231235s/100 iters), loss = 0.551523
I0428 20:35:10.153249  4577 solver.cpp:238]     Train net output #0: loss = 0.551523 (* 1 = 0.551523 loss)
I0428 20:35:10.153275  4577 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:35:10.387432  4577 solver.cpp:219] Iteration 400 (427.04 iter/s, 0.23417s/100 iters), loss = 0.246868
I0428 20:35:10.387464  4577 solver.cpp:238]     Train net output #0: loss = 0.246868 (* 1 = 0.246868 loss)
I0428 20:35:10.387490  4577 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:35:10.620668  4577 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:35:10.729269  4584 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:10.733304  4577 solver.cpp:398]     Test net output #0: accuracy = 0.8695
I0428 20:35:10.733328  4577 solver.cpp:398]     Test net output #1: loss = 0.342965 (* 1 = 0.342965 loss)
I0428 20:35:10.735565  4577 solver.cpp:219] Iteration 500 (287.287 iter/s, 0.348084s/100 iters), loss = 0.186967
I0428 20:35:10.735594  4577 solver.cpp:238]     Train net output #0: loss = 0.186967 (* 1 = 0.186967 loss)
I0428 20:35:10.735640  4577 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:35:10.974042  4577 solver.cpp:219] Iteration 600 (419.401 iter/s, 0.238435s/100 iters), loss = 0.251569
I0428 20:35:10.974073  4577 solver.cpp:238]     Train net output #0: loss = 0.251569 (* 1 = 0.251569 loss)
I0428 20:35:10.974100  4577 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:35:11.212112  4577 solver.cpp:219] Iteration 700 (420.121 iter/s, 0.238027s/100 iters), loss = 0.469156
I0428 20:35:11.212142  4577 solver.cpp:238]     Train net output #0: loss = 0.469156 (* 1 = 0.469156 loss)
I0428 20:35:11.212169  4577 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:35:11.450275  4577 solver.cpp:219] Iteration 800 (419.958 iter/s, 0.238119s/100 iters), loss = 0.511248
I0428 20:35:11.450306  4577 solver.cpp:238]     Train net output #0: loss = 0.511248 (* 1 = 0.511248 loss)
I0428 20:35:11.450332  4577 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:35:11.691041  4577 solver.cpp:219] Iteration 900 (415.419 iter/s, 0.240721s/100 iters), loss = 0.379799
I0428 20:35:11.691071  4577 solver.cpp:238]     Train net output #0: loss = 0.379799 (* 1 = 0.379799 loss)
I0428 20:35:11.691081  4577 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:35:11.772527  4583 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:11.931887  4577 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:35:11.935636  4577 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:35:11.937559  4577 solver.cpp:311] Iteration 1000, loss = 0.345915
I0428 20:35:11.937578  4577 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:35:11.977845  4577 blocking_queue.cpp:49] Waiting for data
I0428 20:35:12.047159  4584 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:12.048974  4577 solver.cpp:398]     Test net output #0: accuracy = 0.8767
I0428 20:35:12.048997  4577 solver.cpp:398]     Test net output #1: loss = 0.314346 (* 1 = 0.314346 loss)
I0428 20:35:12.049021  4577 solver.cpp:316] Optimization Done.
I0428 20:35:12.049026  4577 caffe.cpp:259] Optimization Done.
