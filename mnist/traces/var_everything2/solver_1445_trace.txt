I0428 20:24:54.277089  2507 caffe.cpp:218] Using GPUs 0
I0428 20:24:54.317833  2507 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:54.802778  2507 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1445.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:54.802901  2507 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1445.prototxt
I0428 20:24:54.803306  2507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:54.803324  2507 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:54.803418  2507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:24:54.803510  2507 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:54.803612  2507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:54.803640  2507 net.cpp:86] Creating Layer mnist
I0428 20:24:54.803650  2507 net.cpp:382] mnist -> data
I0428 20:24:54.803673  2507 net.cpp:382] mnist -> label
I0428 20:24:54.804965  2507 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:54.807240  2507 net.cpp:124] Setting up mnist
I0428 20:24:54.807271  2507 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:54.807276  2507 net.cpp:131] Top shape: 64 (64)
I0428 20:24:54.807278  2507 net.cpp:139] Memory required for data: 200960
I0428 20:24:54.807286  2507 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:54.807301  2507 net.cpp:86] Creating Layer conv0
I0428 20:24:54.807307  2507 net.cpp:408] conv0 <- data
I0428 20:24:54.807322  2507 net.cpp:382] conv0 -> conv0
I0428 20:24:55.047813  2507 net.cpp:124] Setting up conv0
I0428 20:24:55.047855  2507 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:24:55.047859  2507 net.cpp:139] Memory required for data: 14946560
I0428 20:24:55.047874  2507 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:55.047888  2507 net.cpp:86] Creating Layer pool0
I0428 20:24:55.047893  2507 net.cpp:408] pool0 <- conv0
I0428 20:24:55.047899  2507 net.cpp:382] pool0 -> pool0
I0428 20:24:55.047991  2507 net.cpp:124] Setting up pool0
I0428 20:24:55.048003  2507 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:24:55.048049  2507 net.cpp:139] Memory required for data: 18632960
I0428 20:24:55.048055  2507 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:55.048071  2507 net.cpp:86] Creating Layer conv1
I0428 20:24:55.048077  2507 net.cpp:408] conv1 <- pool0
I0428 20:24:55.048085  2507 net.cpp:382] conv1 -> conv1
I0428 20:24:55.053201  2507 net.cpp:124] Setting up conv1
I0428 20:24:55.053244  2507 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:24:55.053262  2507 net.cpp:139] Memory required for data: 18665728
I0428 20:24:55.053280  2507 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:55.053297  2507 net.cpp:86] Creating Layer pool1
I0428 20:24:55.053303  2507 net.cpp:408] pool1 <- conv1
I0428 20:24:55.053313  2507 net.cpp:382] pool1 -> pool1
I0428 20:24:55.053396  2507 net.cpp:124] Setting up pool1
I0428 20:24:55.053411  2507 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:24:55.053416  2507 net.cpp:139] Memory required for data: 18673920
I0428 20:24:55.053423  2507 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:55.053436  2507 net.cpp:86] Creating Layer ip1
I0428 20:24:55.053450  2507 net.cpp:408] ip1 <- pool1
I0428 20:24:55.053462  2507 net.cpp:382] ip1 -> ip1
I0428 20:24:55.053653  2507 net.cpp:124] Setting up ip1
I0428 20:24:55.053665  2507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:55.053671  2507 net.cpp:139] Memory required for data: 18676480
I0428 20:24:55.053685  2507 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:55.053696  2507 net.cpp:86] Creating Layer relu1
I0428 20:24:55.053702  2507 net.cpp:408] relu1 <- ip1
I0428 20:24:55.053711  2507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:55.054078  2507 net.cpp:124] Setting up relu1
I0428 20:24:55.054093  2507 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:55.054111  2507 net.cpp:139] Memory required for data: 18679040
I0428 20:24:55.054117  2507 layer_factory.hpp:77] Creating layer loss
I0428 20:24:55.054136  2507 net.cpp:86] Creating Layer loss
I0428 20:24:55.054142  2507 net.cpp:408] loss <- ip1
I0428 20:24:55.054150  2507 net.cpp:408] loss <- label
I0428 20:24:55.054160  2507 net.cpp:382] loss -> loss
I0428 20:24:55.054183  2507 layer_factory.hpp:77] Creating layer loss
I0428 20:24:55.055693  2507 net.cpp:124] Setting up loss
I0428 20:24:55.055717  2507 net.cpp:131] Top shape: (1)
I0428 20:24:55.055732  2507 net.cpp:134]     with loss weight 1
I0428 20:24:55.055754  2507 net.cpp:139] Memory required for data: 18679044
I0428 20:24:55.055761  2507 net.cpp:200] loss needs backward computation.
I0428 20:24:55.055769  2507 net.cpp:200] relu1 needs backward computation.
I0428 20:24:55.055775  2507 net.cpp:200] ip1 needs backward computation.
I0428 20:24:55.055783  2507 net.cpp:200] pool1 needs backward computation.
I0428 20:24:55.055788  2507 net.cpp:200] conv1 needs backward computation.
I0428 20:24:55.055794  2507 net.cpp:200] pool0 needs backward computation.
I0428 20:24:55.055800  2507 net.cpp:200] conv0 needs backward computation.
I0428 20:24:55.055809  2507 net.cpp:202] mnist does not need backward computation.
I0428 20:24:55.055814  2507 net.cpp:244] This network produces output loss
I0428 20:24:55.055829  2507 net.cpp:257] Network initialization done.
I0428 20:24:55.056318  2507 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1445.prototxt
I0428 20:24:55.056375  2507 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:55.056512  2507 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:24:55.056651  2507 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:55.056728  2507 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:55.056748  2507 net.cpp:86] Creating Layer mnist
I0428 20:24:55.056757  2507 net.cpp:382] mnist -> data
I0428 20:24:55.056782  2507 net.cpp:382] mnist -> label
I0428 20:24:55.056967  2507 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:55.060303  2507 net.cpp:124] Setting up mnist
I0428 20:24:55.060340  2507 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:55.060350  2507 net.cpp:131] Top shape: 100 (100)
I0428 20:24:55.060356  2507 net.cpp:139] Memory required for data: 314000
I0428 20:24:55.060364  2507 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:55.060379  2507 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:55.060386  2507 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:55.060395  2507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:55.060410  2507 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:55.060564  2507 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:55.060580  2507 net.cpp:131] Top shape: 100 (100)
I0428 20:24:55.060587  2507 net.cpp:131] Top shape: 100 (100)
I0428 20:24:55.060598  2507 net.cpp:139] Memory required for data: 314800
I0428 20:24:55.060603  2507 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:55.060632  2507 net.cpp:86] Creating Layer conv0
I0428 20:24:55.060644  2507 net.cpp:408] conv0 <- data
I0428 20:24:55.060657  2507 net.cpp:382] conv0 -> conv0
I0428 20:24:55.062309  2507 net.cpp:124] Setting up conv0
I0428 20:24:55.062330  2507 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:24:55.062345  2507 net.cpp:139] Memory required for data: 23354800
I0428 20:24:55.062361  2507 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:55.062374  2507 net.cpp:86] Creating Layer pool0
I0428 20:24:55.062381  2507 net.cpp:408] pool0 <- conv0
I0428 20:24:55.062391  2507 net.cpp:382] pool0 -> pool0
I0428 20:24:55.062458  2507 net.cpp:124] Setting up pool0
I0428 20:24:55.062471  2507 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:24:55.062476  2507 net.cpp:139] Memory required for data: 29114800
I0428 20:24:55.062484  2507 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:55.062500  2507 net.cpp:86] Creating Layer conv1
I0428 20:24:55.062512  2507 net.cpp:408] conv1 <- pool0
I0428 20:24:55.062523  2507 net.cpp:382] conv1 -> conv1
I0428 20:24:55.065160  2507 net.cpp:124] Setting up conv1
I0428 20:24:55.065199  2507 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:24:55.065207  2507 net.cpp:139] Memory required for data: 29166000
I0428 20:24:55.065223  2507 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:55.065238  2507 net.cpp:86] Creating Layer pool1
I0428 20:24:55.065263  2507 net.cpp:408] pool1 <- conv1
I0428 20:24:55.065284  2507 net.cpp:382] pool1 -> pool1
I0428 20:24:55.065354  2507 net.cpp:124] Setting up pool1
I0428 20:24:55.065367  2507 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:24:55.065373  2507 net.cpp:139] Memory required for data: 29178800
I0428 20:24:55.065379  2507 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:55.065389  2507 net.cpp:86] Creating Layer ip1
I0428 20:24:55.065397  2507 net.cpp:408] ip1 <- pool1
I0428 20:24:55.065407  2507 net.cpp:382] ip1 -> ip1
I0428 20:24:55.065691  2507 net.cpp:124] Setting up ip1
I0428 20:24:55.065714  2507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:55.065719  2507 net.cpp:139] Memory required for data: 29182800
I0428 20:24:55.065733  2507 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:55.065744  2507 net.cpp:86] Creating Layer relu1
I0428 20:24:55.065750  2507 net.cpp:408] relu1 <- ip1
I0428 20:24:55.065762  2507 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:55.067183  2507 net.cpp:124] Setting up relu1
I0428 20:24:55.067203  2507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:55.067220  2507 net.cpp:139] Memory required for data: 29186800
I0428 20:24:55.067226  2507 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:24:55.067240  2507 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:24:55.067252  2507 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:24:55.067263  2507 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:24:55.067275  2507 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:24:55.067358  2507 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:24:55.067369  2507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:55.067378  2507 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:55.067383  2507 net.cpp:139] Memory required for data: 29194800
I0428 20:24:55.067389  2507 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:55.067406  2507 net.cpp:86] Creating Layer accuracy
I0428 20:24:55.067412  2507 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:24:55.067420  2507 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:55.067430  2507 net.cpp:382] accuracy -> accuracy
I0428 20:24:55.067442  2507 net.cpp:124] Setting up accuracy
I0428 20:24:55.067450  2507 net.cpp:131] Top shape: (1)
I0428 20:24:55.067456  2507 net.cpp:139] Memory required for data: 29194804
I0428 20:24:55.067461  2507 layer_factory.hpp:77] Creating layer loss
I0428 20:24:55.067469  2507 net.cpp:86] Creating Layer loss
I0428 20:24:55.067476  2507 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:24:55.067482  2507 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:55.067490  2507 net.cpp:382] loss -> loss
I0428 20:24:55.067502  2507 layer_factory.hpp:77] Creating layer loss
I0428 20:24:55.067971  2507 net.cpp:124] Setting up loss
I0428 20:24:55.067986  2507 net.cpp:131] Top shape: (1)
I0428 20:24:55.067993  2507 net.cpp:134]     with loss weight 1
I0428 20:24:55.068007  2507 net.cpp:139] Memory required for data: 29194808
I0428 20:24:55.068025  2507 net.cpp:200] loss needs backward computation.
I0428 20:24:55.068032  2507 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:55.068042  2507 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:24:55.068048  2507 net.cpp:200] relu1 needs backward computation.
I0428 20:24:55.068054  2507 net.cpp:200] ip1 needs backward computation.
I0428 20:24:55.068059  2507 net.cpp:200] pool1 needs backward computation.
I0428 20:24:55.068065  2507 net.cpp:200] conv1 needs backward computation.
I0428 20:24:55.068071  2507 net.cpp:200] pool0 needs backward computation.
I0428 20:24:55.068076  2507 net.cpp:200] conv0 needs backward computation.
I0428 20:24:55.068084  2507 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:55.068090  2507 net.cpp:202] mnist does not need backward computation.
I0428 20:24:55.068094  2507 net.cpp:244] This network produces output accuracy
I0428 20:24:55.068100  2507 net.cpp:244] This network produces output loss
I0428 20:24:55.068147  2507 net.cpp:257] Network initialization done.
I0428 20:24:55.068207  2507 solver.cpp:56] Solver scaffolding done.
I0428 20:24:55.068606  2507 caffe.cpp:248] Starting Optimization
I0428 20:24:55.068617  2507 solver.cpp:273] Solving LeNet
I0428 20:24:55.068622  2507 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:55.069813  2507 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:55.168673  2514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:55.171814  2507 solver.cpp:398]     Test net output #0: accuracy = 0.054
I0428 20:24:55.171838  2507 solver.cpp:398]     Test net output #1: loss = 2.34942 (* 1 = 2.34942 loss)
I0428 20:24:55.176538  2507 solver.cpp:219] Iteration 0 (0 iter/s, 0.107877s/100 iters), loss = 2.31664
I0428 20:24:55.176578  2507 solver.cpp:238]     Train net output #0: loss = 2.31664 (* 1 = 2.31664 loss)
I0428 20:24:55.176599  2507 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:55.368664  2507 solver.cpp:219] Iteration 100 (520.65 iter/s, 0.192068s/100 iters), loss = 0.678855
I0428 20:24:55.368697  2507 solver.cpp:238]     Train net output #0: loss = 0.678855 (* 1 = 0.678855 loss)
I0428 20:24:55.368705  2507 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:55.559460  2507 solver.cpp:219] Iteration 200 (524.25 iter/s, 0.190749s/100 iters), loss = 0.406079
I0428 20:24:55.559492  2507 solver.cpp:238]     Train net output #0: loss = 0.406079 (* 1 = 0.406079 loss)
I0428 20:24:55.559499  2507 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:55.744729  2507 solver.cpp:219] Iteration 300 (539.892 iter/s, 0.185222s/100 iters), loss = 0.20514
I0428 20:24:55.744763  2507 solver.cpp:238]     Train net output #0: loss = 0.20514 (* 1 = 0.20514 loss)
I0428 20:24:55.744771  2507 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:55.926589  2507 solver.cpp:219] Iteration 400 (550.012 iter/s, 0.181814s/100 iters), loss = 0.129664
I0428 20:24:55.926627  2507 solver.cpp:238]     Train net output #0: loss = 0.129664 (* 1 = 0.129664 loss)
I0428 20:24:55.926647  2507 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:56.105346  2507 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:56.196518  2514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:56.199486  2507 solver.cpp:398]     Test net output #0: accuracy = 0.9383
I0428 20:24:56.199506  2507 solver.cpp:398]     Test net output #1: loss = 0.214453 (* 1 = 0.214453 loss)
I0428 20:24:56.201344  2507 solver.cpp:219] Iteration 500 (364.036 iter/s, 0.274698s/100 iters), loss = 0.215787
I0428 20:24:56.201380  2507 solver.cpp:238]     Train net output #0: loss = 0.215787 (* 1 = 0.215787 loss)
I0428 20:24:56.201387  2507 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:56.384672  2507 solver.cpp:219] Iteration 600 (545.62 iter/s, 0.183278s/100 iters), loss = 0.186984
I0428 20:24:56.384711  2507 solver.cpp:238]     Train net output #0: loss = 0.186984 (* 1 = 0.186984 loss)
I0428 20:24:56.384716  2507 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:56.574810  2507 solver.cpp:219] Iteration 700 (526.12 iter/s, 0.190071s/100 iters), loss = 0.273977
I0428 20:24:56.574836  2507 solver.cpp:238]     Train net output #0: loss = 0.273977 (* 1 = 0.273977 loss)
I0428 20:24:56.574841  2507 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:56.764217  2507 solver.cpp:219] Iteration 800 (528.074 iter/s, 0.189367s/100 iters), loss = 0.30925
I0428 20:24:56.764256  2507 solver.cpp:238]     Train net output #0: loss = 0.30925 (* 1 = 0.30925 loss)
I0428 20:24:56.764261  2507 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:56.958595  2507 solver.cpp:219] Iteration 900 (514.565 iter/s, 0.194339s/100 iters), loss = 0.385002
I0428 20:24:56.958634  2507 solver.cpp:238]     Train net output #0: loss = 0.385002 (* 1 = 0.385002 loss)
I0428 20:24:56.958640  2507 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:57.020632  2513 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:57.140046  2507 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:57.141491  2507 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:57.142431  2507 solver.cpp:311] Iteration 1000, loss = 0.15645
I0428 20:24:57.142446  2507 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:57.233649  2514 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:57.236683  2507 solver.cpp:398]     Test net output #0: accuracy = 0.955
I0428 20:24:57.236716  2507 solver.cpp:398]     Test net output #1: loss = 0.151757 (* 1 = 0.151757 loss)
I0428 20:24:57.236721  2507 solver.cpp:316] Optimization Done.
I0428 20:24:57.236724  2507 caffe.cpp:259] Optimization Done.
