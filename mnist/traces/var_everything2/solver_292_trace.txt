I0428 19:39:02.357576 24198 caffe.cpp:218] Using GPUs 0
I0428 19:39:02.390841 24198 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:02.836114 24198 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test292.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:02.836258 24198 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test292.prototxt
I0428 19:39:02.836601 24198 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:02.836616 24198 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:02.836694 24198 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:02.836769 24198 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:02.836890 24198 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:02.836910 24198 net.cpp:86] Creating Layer mnist
I0428 19:39:02.836917 24198 net.cpp:382] mnist -> data
I0428 19:39:02.836937 24198 net.cpp:382] mnist -> label
I0428 19:39:02.837965 24198 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:02.840143 24198 net.cpp:124] Setting up mnist
I0428 19:39:02.840188 24198 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:02.840194 24198 net.cpp:131] Top shape: 64 (64)
I0428 19:39:02.840198 24198 net.cpp:139] Memory required for data: 200960
I0428 19:39:02.840204 24198 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:02.840216 24198 net.cpp:86] Creating Layer conv0
I0428 19:39:02.840234 24198 net.cpp:408] conv0 <- data
I0428 19:39:02.840243 24198 net.cpp:382] conv0 -> conv0
I0428 19:39:03.078809 24198 net.cpp:124] Setting up conv0
I0428 19:39:03.078851 24198 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:03.078856 24198 net.cpp:139] Memory required for data: 495872
I0428 19:39:03.078872 24198 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:03.078899 24198 net.cpp:86] Creating Layer pool0
I0428 19:39:03.078904 24198 net.cpp:408] pool0 <- conv0
I0428 19:39:03.078909 24198 net.cpp:382] pool0 -> pool0
I0428 19:39:03.078963 24198 net.cpp:124] Setting up pool0
I0428 19:39:03.078981 24198 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:03.078984 24198 net.cpp:139] Memory required for data: 569600
I0428 19:39:03.078987 24198 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:03.078997 24198 net.cpp:86] Creating Layer conv1
I0428 19:39:03.079001 24198 net.cpp:408] conv1 <- pool0
I0428 19:39:03.079006 24198 net.cpp:382] conv1 -> conv1
I0428 19:39:03.081070 24198 net.cpp:124] Setting up conv1
I0428 19:39:03.081116 24198 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:03.081120 24198 net.cpp:139] Memory required for data: 602368
I0428 19:39:03.081145 24198 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:03.081166 24198 net.cpp:86] Creating Layer pool1
I0428 19:39:03.081171 24198 net.cpp:408] pool1 <- conv1
I0428 19:39:03.081176 24198 net.cpp:382] pool1 -> pool1
I0428 19:39:03.081213 24198 net.cpp:124] Setting up pool1
I0428 19:39:03.081218 24198 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:03.081221 24198 net.cpp:139] Memory required for data: 610560
I0428 19:39:03.081224 24198 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:03.081231 24198 net.cpp:86] Creating Layer ip1
I0428 19:39:03.081234 24198 net.cpp:408] ip1 <- pool1
I0428 19:39:03.081239 24198 net.cpp:382] ip1 -> ip1
I0428 19:39:03.081334 24198 net.cpp:124] Setting up ip1
I0428 19:39:03.081341 24198 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:03.081346 24198 net.cpp:139] Memory required for data: 613120
I0428 19:39:03.081351 24198 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:03.081357 24198 net.cpp:86] Creating Layer relu1
I0428 19:39:03.081360 24198 net.cpp:408] relu1 <- ip1
I0428 19:39:03.081365 24198 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:03.081531 24198 net.cpp:124] Setting up relu1
I0428 19:39:03.081539 24198 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:03.081542 24198 net.cpp:139] Memory required for data: 615680
I0428 19:39:03.081545 24198 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:03.081552 24198 net.cpp:86] Creating Layer ip2
I0428 19:39:03.081554 24198 net.cpp:408] ip2 <- ip1
I0428 19:39:03.081559 24198 net.cpp:382] ip2 -> ip2
I0428 19:39:03.081660 24198 net.cpp:124] Setting up ip2
I0428 19:39:03.081666 24198 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:03.081670 24198 net.cpp:139] Memory required for data: 628480
I0428 19:39:03.081676 24198 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:03.081681 24198 net.cpp:86] Creating Layer relu2
I0428 19:39:03.081684 24198 net.cpp:408] relu2 <- ip2
I0428 19:39:03.081688 24198 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:03.082453 24198 net.cpp:124] Setting up relu2
I0428 19:39:03.082464 24198 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:03.082484 24198 net.cpp:139] Memory required for data: 641280
I0428 19:39:03.082486 24198 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:03.082494 24198 net.cpp:86] Creating Layer ip3
I0428 19:39:03.082496 24198 net.cpp:408] ip3 <- ip2
I0428 19:39:03.082502 24198 net.cpp:382] ip3 -> ip3
I0428 19:39:03.082636 24198 net.cpp:124] Setting up ip3
I0428 19:39:03.082644 24198 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:03.082648 24198 net.cpp:139] Memory required for data: 643840
I0428 19:39:03.082656 24198 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:03.082661 24198 net.cpp:86] Creating Layer relu3
I0428 19:39:03.082665 24198 net.cpp:408] relu3 <- ip3
I0428 19:39:03.082669 24198 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:03.082841 24198 net.cpp:124] Setting up relu3
I0428 19:39:03.082865 24198 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:03.082870 24198 net.cpp:139] Memory required for data: 646400
I0428 19:39:03.082872 24198 layer_factory.hpp:77] Creating layer loss
I0428 19:39:03.082878 24198 net.cpp:86] Creating Layer loss
I0428 19:39:03.082881 24198 net.cpp:408] loss <- ip3
I0428 19:39:03.082885 24198 net.cpp:408] loss <- label
I0428 19:39:03.082906 24198 net.cpp:382] loss -> loss
I0428 19:39:03.082922 24198 layer_factory.hpp:77] Creating layer loss
I0428 19:39:03.083163 24198 net.cpp:124] Setting up loss
I0428 19:39:03.083171 24198 net.cpp:131] Top shape: (1)
I0428 19:39:03.083175 24198 net.cpp:134]     with loss weight 1
I0428 19:39:03.083189 24198 net.cpp:139] Memory required for data: 646404
I0428 19:39:03.083209 24198 net.cpp:200] loss needs backward computation.
I0428 19:39:03.083212 24198 net.cpp:200] relu3 needs backward computation.
I0428 19:39:03.083216 24198 net.cpp:200] ip3 needs backward computation.
I0428 19:39:03.083220 24198 net.cpp:200] relu2 needs backward computation.
I0428 19:39:03.083222 24198 net.cpp:200] ip2 needs backward computation.
I0428 19:39:03.083225 24198 net.cpp:200] relu1 needs backward computation.
I0428 19:39:03.083227 24198 net.cpp:200] ip1 needs backward computation.
I0428 19:39:03.083231 24198 net.cpp:200] pool1 needs backward computation.
I0428 19:39:03.083235 24198 net.cpp:200] conv1 needs backward computation.
I0428 19:39:03.083237 24198 net.cpp:200] pool0 needs backward computation.
I0428 19:39:03.083240 24198 net.cpp:200] conv0 needs backward computation.
I0428 19:39:03.083245 24198 net.cpp:202] mnist does not need backward computation.
I0428 19:39:03.083247 24198 net.cpp:244] This network produces output loss
I0428 19:39:03.083257 24198 net.cpp:257] Network initialization done.
I0428 19:39:03.083680 24198 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test292.prototxt
I0428 19:39:03.083724 24198 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:03.083814 24198 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:03.083894 24198 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:03.083937 24198 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:03.083952 24198 net.cpp:86] Creating Layer mnist
I0428 19:39:03.083957 24198 net.cpp:382] mnist -> data
I0428 19:39:03.083966 24198 net.cpp:382] mnist -> label
I0428 19:39:03.084050 24198 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:03.086141 24198 net.cpp:124] Setting up mnist
I0428 19:39:03.086170 24198 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:03.086175 24198 net.cpp:131] Top shape: 100 (100)
I0428 19:39:03.086179 24198 net.cpp:139] Memory required for data: 314000
I0428 19:39:03.086181 24198 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:03.086191 24198 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:03.086194 24198 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:03.086199 24198 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:03.086205 24198 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:03.086277 24198 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:03.086283 24198 net.cpp:131] Top shape: 100 (100)
I0428 19:39:03.086287 24198 net.cpp:131] Top shape: 100 (100)
I0428 19:39:03.086290 24198 net.cpp:139] Memory required for data: 314800
I0428 19:39:03.086308 24198 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:03.086318 24198 net.cpp:86] Creating Layer conv0
I0428 19:39:03.086321 24198 net.cpp:408] conv0 <- data
I0428 19:39:03.086326 24198 net.cpp:382] conv0 -> conv0
I0428 19:39:03.088030 24198 net.cpp:124] Setting up conv0
I0428 19:39:03.088043 24198 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:03.088047 24198 net.cpp:139] Memory required for data: 775600
I0428 19:39:03.088055 24198 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:03.088062 24198 net.cpp:86] Creating Layer pool0
I0428 19:39:03.088064 24198 net.cpp:408] pool0 <- conv0
I0428 19:39:03.088069 24198 net.cpp:382] pool0 -> pool0
I0428 19:39:03.088105 24198 net.cpp:124] Setting up pool0
I0428 19:39:03.088110 24198 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:03.088114 24198 net.cpp:139] Memory required for data: 890800
I0428 19:39:03.088116 24198 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:03.088124 24198 net.cpp:86] Creating Layer conv1
I0428 19:39:03.088126 24198 net.cpp:408] conv1 <- pool0
I0428 19:39:03.088131 24198 net.cpp:382] conv1 -> conv1
I0428 19:39:03.089687 24198 net.cpp:124] Setting up conv1
I0428 19:39:03.089716 24198 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:03.089720 24198 net.cpp:139] Memory required for data: 942000
I0428 19:39:03.089728 24198 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:03.089740 24198 net.cpp:86] Creating Layer pool1
I0428 19:39:03.089742 24198 net.cpp:408] pool1 <- conv1
I0428 19:39:03.089748 24198 net.cpp:382] pool1 -> pool1
I0428 19:39:03.089800 24198 net.cpp:124] Setting up pool1
I0428 19:39:03.089814 24198 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:03.089818 24198 net.cpp:139] Memory required for data: 954800
I0428 19:39:03.089821 24198 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:03.089828 24198 net.cpp:86] Creating Layer ip1
I0428 19:39:03.089845 24198 net.cpp:408] ip1 <- pool1
I0428 19:39:03.089851 24198 net.cpp:382] ip1 -> ip1
I0428 19:39:03.089968 24198 net.cpp:124] Setting up ip1
I0428 19:39:03.089977 24198 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:03.089996 24198 net.cpp:139] Memory required for data: 958800
I0428 19:39:03.090004 24198 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:03.090010 24198 net.cpp:86] Creating Layer relu1
I0428 19:39:03.090013 24198 net.cpp:408] relu1 <- ip1
I0428 19:39:03.090018 24198 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:03.090203 24198 net.cpp:124] Setting up relu1
I0428 19:39:03.090214 24198 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:03.090217 24198 net.cpp:139] Memory required for data: 962800
I0428 19:39:03.090220 24198 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:03.090227 24198 net.cpp:86] Creating Layer ip2
I0428 19:39:03.090237 24198 net.cpp:408] ip2 <- ip1
I0428 19:39:03.090242 24198 net.cpp:382] ip2 -> ip2
I0428 19:39:03.090337 24198 net.cpp:124] Setting up ip2
I0428 19:39:03.090343 24198 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:03.090347 24198 net.cpp:139] Memory required for data: 982800
I0428 19:39:03.090353 24198 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:03.090356 24198 net.cpp:86] Creating Layer relu2
I0428 19:39:03.090360 24198 net.cpp:408] relu2 <- ip2
I0428 19:39:03.090364 24198 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:03.090538 24198 net.cpp:124] Setting up relu2
I0428 19:39:03.090548 24198 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:03.090551 24198 net.cpp:139] Memory required for data: 1002800
I0428 19:39:03.090554 24198 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:03.090559 24198 net.cpp:86] Creating Layer ip3
I0428 19:39:03.090562 24198 net.cpp:408] ip3 <- ip2
I0428 19:39:03.090567 24198 net.cpp:382] ip3 -> ip3
I0428 19:39:03.090759 24198 net.cpp:124] Setting up ip3
I0428 19:39:03.090767 24198 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:03.090771 24198 net.cpp:139] Memory required for data: 1006800
I0428 19:39:03.090780 24198 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:03.090785 24198 net.cpp:86] Creating Layer relu3
I0428 19:39:03.090788 24198 net.cpp:408] relu3 <- ip3
I0428 19:39:03.090793 24198 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:03.091629 24198 net.cpp:124] Setting up relu3
I0428 19:39:03.091642 24198 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:03.091661 24198 net.cpp:139] Memory required for data: 1010800
I0428 19:39:03.091665 24198 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:03.091671 24198 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:03.091675 24198 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:03.091681 24198 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:03.091686 24198 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:03.091727 24198 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:03.091733 24198 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:03.091737 24198 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:03.091740 24198 net.cpp:139] Memory required for data: 1018800
I0428 19:39:03.091743 24198 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:03.091748 24198 net.cpp:86] Creating Layer accuracy
I0428 19:39:03.091751 24198 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:03.091755 24198 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:03.091760 24198 net.cpp:382] accuracy -> accuracy
I0428 19:39:03.091768 24198 net.cpp:124] Setting up accuracy
I0428 19:39:03.091787 24198 net.cpp:131] Top shape: (1)
I0428 19:39:03.091790 24198 net.cpp:139] Memory required for data: 1018804
I0428 19:39:03.091792 24198 layer_factory.hpp:77] Creating layer loss
I0428 19:39:03.091797 24198 net.cpp:86] Creating Layer loss
I0428 19:39:03.091800 24198 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:03.091804 24198 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:03.091809 24198 net.cpp:382] loss -> loss
I0428 19:39:03.091814 24198 layer_factory.hpp:77] Creating layer loss
I0428 19:39:03.092046 24198 net.cpp:124] Setting up loss
I0428 19:39:03.092056 24198 net.cpp:131] Top shape: (1)
I0428 19:39:03.092059 24198 net.cpp:134]     with loss weight 1
I0428 19:39:03.092078 24198 net.cpp:139] Memory required for data: 1018808
I0428 19:39:03.092106 24198 net.cpp:200] loss needs backward computation.
I0428 19:39:03.092110 24198 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:03.092133 24198 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:03.092135 24198 net.cpp:200] relu3 needs backward computation.
I0428 19:39:03.092139 24198 net.cpp:200] ip3 needs backward computation.
I0428 19:39:03.092141 24198 net.cpp:200] relu2 needs backward computation.
I0428 19:39:03.092144 24198 net.cpp:200] ip2 needs backward computation.
I0428 19:39:03.092152 24198 net.cpp:200] relu1 needs backward computation.
I0428 19:39:03.092175 24198 net.cpp:200] ip1 needs backward computation.
I0428 19:39:03.092178 24198 net.cpp:200] pool1 needs backward computation.
I0428 19:39:03.092186 24198 net.cpp:200] conv1 needs backward computation.
I0428 19:39:03.092190 24198 net.cpp:200] pool0 needs backward computation.
I0428 19:39:03.092193 24198 net.cpp:200] conv0 needs backward computation.
I0428 19:39:03.092198 24198 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:03.092202 24198 net.cpp:202] mnist does not need backward computation.
I0428 19:39:03.092205 24198 net.cpp:244] This network produces output accuracy
I0428 19:39:03.092209 24198 net.cpp:244] This network produces output loss
I0428 19:39:03.092221 24198 net.cpp:257] Network initialization done.
I0428 19:39:03.092263 24198 solver.cpp:56] Solver scaffolding done.
I0428 19:39:03.092635 24198 caffe.cpp:248] Starting Optimization
I0428 19:39:03.092641 24198 solver.cpp:273] Solving LeNet
I0428 19:39:03.092644 24198 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:03.093618 24198 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:03.096285 24198 blocking_queue.cpp:49] Waiting for data
I0428 19:39:03.170358 24205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:03.170807 24198 solver.cpp:398]     Test net output #0: accuracy = 0.0887
I0428 19:39:03.170851 24198 solver.cpp:398]     Test net output #1: loss = 2.3171 (* 1 = 2.3171 loss)
I0428 19:39:03.172619 24198 solver.cpp:219] Iteration 0 (-1.01734e-42 iter/s, 0.0799353s/100 iters), loss = 2.33739
I0428 19:39:03.172678 24198 solver.cpp:238]     Train net output #0: loss = 2.33739 (* 1 = 2.33739 loss)
I0428 19:39:03.172705 24198 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:03.240389 24198 solver.cpp:219] Iteration 100 (1476.7 iter/s, 0.0677186s/100 iters), loss = 1.68812
I0428 19:39:03.240428 24198 solver.cpp:238]     Train net output #0: loss = 1.68812 (* 1 = 1.68812 loss)
I0428 19:39:03.240434 24198 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:03.308432 24198 solver.cpp:219] Iteration 200 (1470.39 iter/s, 0.068009s/100 iters), loss = 0.982297
I0428 19:39:03.308461 24198 solver.cpp:238]     Train net output #0: loss = 0.982297 (* 1 = 0.982297 loss)
I0428 19:39:03.308466 24198 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:03.378319 24198 solver.cpp:219] Iteration 300 (1431.74 iter/s, 0.069845s/100 iters), loss = 0.777891
I0428 19:39:03.378379 24198 solver.cpp:238]     Train net output #0: loss = 0.777891 (* 1 = 0.777891 loss)
I0428 19:39:03.378392 24198 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:03.470327 24198 solver.cpp:219] Iteration 400 (1087.64 iter/s, 0.0919419s/100 iters), loss = 0.655079
I0428 19:39:03.470361 24198 solver.cpp:238]     Train net output #0: loss = 0.655079 (* 1 = 0.655079 loss)
I0428 19:39:03.470371 24198 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:03.545797 24198 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:03.599370 24205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:03.599822 24198 solver.cpp:398]     Test net output #0: accuracy = 0.7484
I0428 19:39:03.599846 24198 solver.cpp:398]     Test net output #1: loss = 0.703793 (* 1 = 0.703793 loss)
I0428 19:39:03.600668 24198 solver.cpp:219] Iteration 500 (767.483 iter/s, 0.130296s/100 iters), loss = 0.766142
I0428 19:39:03.600697 24198 solver.cpp:238]     Train net output #0: loss = 0.766142 (* 1 = 0.766142 loss)
I0428 19:39:03.600723 24198 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:03.674522 24198 solver.cpp:219] Iteration 600 (1354.74 iter/s, 0.0738151s/100 iters), loss = 0.448321
I0428 19:39:03.674552 24198 solver.cpp:238]     Train net output #0: loss = 0.448321 (* 1 = 0.448321 loss)
I0428 19:39:03.674559 24198 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:03.748132 24198 solver.cpp:219] Iteration 700 (1359.24 iter/s, 0.0735703s/100 iters), loss = 0.430348
I0428 19:39:03.748162 24198 solver.cpp:238]     Train net output #0: loss = 0.430348 (* 1 = 0.430348 loss)
I0428 19:39:03.748169 24198 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:03.821676 24198 solver.cpp:219] Iteration 800 (1360.49 iter/s, 0.0735028s/100 iters), loss = 0.459087
I0428 19:39:03.821705 24198 solver.cpp:238]     Train net output #0: loss = 0.459087 (* 1 = 0.459087 loss)
I0428 19:39:03.821713 24198 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:03.895159 24198 solver.cpp:219] Iteration 900 (1361.58 iter/s, 0.0734444s/100 iters), loss = 0.279009
I0428 19:39:03.895189 24198 solver.cpp:238]     Train net output #0: loss = 0.279009 (* 1 = 0.279009 loss)
I0428 19:39:03.895195 24198 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:03.919754 24204 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:03.967846 24198 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:03.968516 24198 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:03.968952 24198 solver.cpp:311] Iteration 1000, loss = 0.248594
I0428 19:39:03.968971 24198 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:04.021318 24205 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:04.021773 24198 solver.cpp:398]     Test net output #0: accuracy = 0.919
I0428 19:39:04.021797 24198 solver.cpp:398]     Test net output #1: loss = 0.264527 (* 1 = 0.264527 loss)
I0428 19:39:04.021803 24198 solver.cpp:316] Optimization Done.
I0428 19:39:04.021807 24198 caffe.cpp:259] Optimization Done.
