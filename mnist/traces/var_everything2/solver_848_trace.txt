I0428 19:59:27.288779 29244 caffe.cpp:218] Using GPUs 0
I0428 19:59:27.324364 29244 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:27.767801 29244 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test848.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:27.767928 29244 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test848.prototxt
I0428 19:59:27.768270 29244 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:27.768295 29244 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:27.768371 29244 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:27.768430 29244 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:27.768512 29244 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:27.768532 29244 net.cpp:86] Creating Layer mnist
I0428 19:59:27.768540 29244 net.cpp:382] mnist -> data
I0428 19:59:27.768573 29244 net.cpp:382] mnist -> label
I0428 19:59:27.769484 29244 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:27.771577 29244 net.cpp:124] Setting up mnist
I0428 19:59:27.771606 29244 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:27.771610 29244 net.cpp:131] Top shape: 64 (64)
I0428 19:59:27.771615 29244 net.cpp:139] Memory required for data: 200960
I0428 19:59:27.771620 29244 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:27.771632 29244 net.cpp:86] Creating Layer conv0
I0428 19:59:27.771649 29244 net.cpp:408] conv0 <- data
I0428 19:59:27.771659 29244 net.cpp:382] conv0 -> conv0
I0428 19:59:27.995764 29244 net.cpp:124] Setting up conv0
I0428 19:59:27.995805 29244 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:27.995810 29244 net.cpp:139] Memory required for data: 1675520
I0428 19:59:27.995823 29244 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:27.995836 29244 net.cpp:86] Creating Layer pool0
I0428 19:59:27.995839 29244 net.cpp:408] pool0 <- conv0
I0428 19:59:27.995844 29244 net.cpp:382] pool0 -> pool0
I0428 19:59:27.995903 29244 net.cpp:124] Setting up pool0
I0428 19:59:27.995910 29244 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:27.995913 29244 net.cpp:139] Memory required for data: 2044160
I0428 19:59:27.995915 29244 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:27.995925 29244 net.cpp:86] Creating Layer conv1
I0428 19:59:27.995930 29244 net.cpp:408] conv1 <- pool0
I0428 19:59:27.995950 29244 net.cpp:382] conv1 -> conv1
I0428 19:59:27.998710 29244 net.cpp:124] Setting up conv1
I0428 19:59:27.998739 29244 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:27.998744 29244 net.cpp:139] Memory required for data: 2208000
I0428 19:59:27.998751 29244 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:27.998759 29244 net.cpp:86] Creating Layer pool1
I0428 19:59:27.998764 29244 net.cpp:408] pool1 <- conv1
I0428 19:59:27.998767 29244 net.cpp:382] pool1 -> pool1
I0428 19:59:27.998818 29244 net.cpp:124] Setting up pool1
I0428 19:59:27.998823 29244 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:27.998826 29244 net.cpp:139] Memory required for data: 2248960
I0428 19:59:27.998829 29244 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:27.998836 29244 net.cpp:86] Creating Layer ip1
I0428 19:59:27.998838 29244 net.cpp:408] ip1 <- pool1
I0428 19:59:27.998842 29244 net.cpp:382] ip1 -> ip1
I0428 19:59:27.998975 29244 net.cpp:124] Setting up ip1
I0428 19:59:27.998982 29244 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:27.998986 29244 net.cpp:139] Memory required for data: 2255360
I0428 19:59:27.998992 29244 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:27.998997 29244 net.cpp:86] Creating Layer relu1
I0428 19:59:27.999001 29244 net.cpp:408] relu1 <- ip1
I0428 19:59:27.999004 29244 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:27.999166 29244 net.cpp:124] Setting up relu1
I0428 19:59:27.999176 29244 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:27.999178 29244 net.cpp:139] Memory required for data: 2261760
I0428 19:59:27.999181 29244 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:27.999187 29244 net.cpp:86] Creating Layer ip2
I0428 19:59:27.999191 29244 net.cpp:408] ip2 <- ip1
I0428 19:59:27.999195 29244 net.cpp:382] ip2 -> ip2
I0428 19:59:27.999312 29244 net.cpp:124] Setting up ip2
I0428 19:59:27.999320 29244 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:27.999322 29244 net.cpp:139] Memory required for data: 2274560
I0428 19:59:27.999327 29244 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:27.999335 29244 net.cpp:86] Creating Layer relu2
I0428 19:59:27.999337 29244 net.cpp:408] relu2 <- ip2
I0428 19:59:27.999341 29244 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:28.000084 29244 net.cpp:124] Setting up relu2
I0428 19:59:28.000097 29244 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:28.000115 29244 net.cpp:139] Memory required for data: 2287360
I0428 19:59:28.000118 29244 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:28.000139 29244 net.cpp:86] Creating Layer ip3
I0428 19:59:28.000143 29244 net.cpp:408] ip3 <- ip2
I0428 19:59:28.000149 29244 net.cpp:382] ip3 -> ip3
I0428 19:59:28.000262 29244 net.cpp:124] Setting up ip3
I0428 19:59:28.000270 29244 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:28.000272 29244 net.cpp:139] Memory required for data: 2289920
I0428 19:59:28.000280 29244 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:28.000284 29244 net.cpp:86] Creating Layer relu3
I0428 19:59:28.000288 29244 net.cpp:408] relu3 <- ip3
I0428 19:59:28.000293 29244 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:28.000458 29244 net.cpp:124] Setting up relu3
I0428 19:59:28.000466 29244 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:28.000468 29244 net.cpp:139] Memory required for data: 2292480
I0428 19:59:28.000471 29244 layer_factory.hpp:77] Creating layer loss
I0428 19:59:28.000478 29244 net.cpp:86] Creating Layer loss
I0428 19:59:28.000481 29244 net.cpp:408] loss <- ip3
I0428 19:59:28.000485 29244 net.cpp:408] loss <- label
I0428 19:59:28.000490 29244 net.cpp:382] loss -> loss
I0428 19:59:28.000506 29244 layer_factory.hpp:77] Creating layer loss
I0428 19:59:28.000737 29244 net.cpp:124] Setting up loss
I0428 19:59:28.000746 29244 net.cpp:131] Top shape: (1)
I0428 19:59:28.000748 29244 net.cpp:134]     with loss weight 1
I0428 19:59:28.000762 29244 net.cpp:139] Memory required for data: 2292484
I0428 19:59:28.000766 29244 net.cpp:200] loss needs backward computation.
I0428 19:59:28.000769 29244 net.cpp:200] relu3 needs backward computation.
I0428 19:59:28.000772 29244 net.cpp:200] ip3 needs backward computation.
I0428 19:59:28.000774 29244 net.cpp:200] relu2 needs backward computation.
I0428 19:59:28.000777 29244 net.cpp:200] ip2 needs backward computation.
I0428 19:59:28.000780 29244 net.cpp:200] relu1 needs backward computation.
I0428 19:59:28.000782 29244 net.cpp:200] ip1 needs backward computation.
I0428 19:59:28.000785 29244 net.cpp:200] pool1 needs backward computation.
I0428 19:59:28.000788 29244 net.cpp:200] conv1 needs backward computation.
I0428 19:59:28.000792 29244 net.cpp:200] pool0 needs backward computation.
I0428 19:59:28.000793 29244 net.cpp:200] conv0 needs backward computation.
I0428 19:59:28.000797 29244 net.cpp:202] mnist does not need backward computation.
I0428 19:59:28.000799 29244 net.cpp:244] This network produces output loss
I0428 19:59:28.000831 29244 net.cpp:257] Network initialization done.
I0428 19:59:28.001256 29244 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test848.prototxt
I0428 19:59:28.001293 29244 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:28.001384 29244 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:28.001466 29244 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:28.001507 29244 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:28.001534 29244 net.cpp:86] Creating Layer mnist
I0428 19:59:28.001538 29244 net.cpp:382] mnist -> data
I0428 19:59:28.001546 29244 net.cpp:382] mnist -> label
I0428 19:59:28.001631 29244 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:28.003753 29244 net.cpp:124] Setting up mnist
I0428 19:59:28.003792 29244 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:28.003796 29244 net.cpp:131] Top shape: 100 (100)
I0428 19:59:28.003799 29244 net.cpp:139] Memory required for data: 314000
I0428 19:59:28.003818 29244 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:28.003872 29244 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:28.003878 29244 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:28.003883 29244 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:28.003891 29244 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:28.003937 29244 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:28.003943 29244 net.cpp:131] Top shape: 100 (100)
I0428 19:59:28.003947 29244 net.cpp:131] Top shape: 100 (100)
I0428 19:59:28.003950 29244 net.cpp:139] Memory required for data: 314800
I0428 19:59:28.003953 29244 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:28.003962 29244 net.cpp:86] Creating Layer conv0
I0428 19:59:28.003967 29244 net.cpp:408] conv0 <- data
I0428 19:59:28.003973 29244 net.cpp:382] conv0 -> conv0
I0428 19:59:28.005770 29244 net.cpp:124] Setting up conv0
I0428 19:59:28.005785 29244 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:28.005789 29244 net.cpp:139] Memory required for data: 2618800
I0428 19:59:28.005797 29244 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:28.005803 29244 net.cpp:86] Creating Layer pool0
I0428 19:59:28.005806 29244 net.cpp:408] pool0 <- conv0
I0428 19:59:28.005810 29244 net.cpp:382] pool0 -> pool0
I0428 19:59:28.005861 29244 net.cpp:124] Setting up pool0
I0428 19:59:28.005870 29244 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:28.005872 29244 net.cpp:139] Memory required for data: 3194800
I0428 19:59:28.005875 29244 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:28.005885 29244 net.cpp:86] Creating Layer conv1
I0428 19:59:28.005888 29244 net.cpp:408] conv1 <- pool0
I0428 19:59:28.005892 29244 net.cpp:382] conv1 -> conv1
I0428 19:59:28.008069 29244 net.cpp:124] Setting up conv1
I0428 19:59:28.008082 29244 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:28.008101 29244 net.cpp:139] Memory required for data: 3450800
I0428 19:59:28.008124 29244 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:28.008147 29244 net.cpp:86] Creating Layer pool1
I0428 19:59:28.008150 29244 net.cpp:408] pool1 <- conv1
I0428 19:59:28.008172 29244 net.cpp:382] pool1 -> pool1
I0428 19:59:28.008210 29244 net.cpp:124] Setting up pool1
I0428 19:59:28.008215 29244 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:28.008219 29244 net.cpp:139] Memory required for data: 3514800
I0428 19:59:28.008221 29244 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:28.008229 29244 net.cpp:86] Creating Layer ip1
I0428 19:59:28.008231 29244 net.cpp:408] ip1 <- pool1
I0428 19:59:28.008237 29244 net.cpp:382] ip1 -> ip1
I0428 19:59:28.008381 29244 net.cpp:124] Setting up ip1
I0428 19:59:28.008390 29244 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:28.008404 29244 net.cpp:139] Memory required for data: 3524800
I0428 19:59:28.008412 29244 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:28.008419 29244 net.cpp:86] Creating Layer relu1
I0428 19:59:28.008421 29244 net.cpp:408] relu1 <- ip1
I0428 19:59:28.008425 29244 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:28.008635 29244 net.cpp:124] Setting up relu1
I0428 19:59:28.008646 29244 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:28.008648 29244 net.cpp:139] Memory required for data: 3534800
I0428 19:59:28.008651 29244 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:28.008658 29244 net.cpp:86] Creating Layer ip2
I0428 19:59:28.008661 29244 net.cpp:408] ip2 <- ip1
I0428 19:59:28.008666 29244 net.cpp:382] ip2 -> ip2
I0428 19:59:28.008786 29244 net.cpp:124] Setting up ip2
I0428 19:59:28.008793 29244 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:28.008796 29244 net.cpp:139] Memory required for data: 3554800
I0428 19:59:28.008801 29244 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:28.008806 29244 net.cpp:86] Creating Layer relu2
I0428 19:59:28.008816 29244 net.cpp:408] relu2 <- ip2
I0428 19:59:28.008836 29244 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:28.009042 29244 net.cpp:124] Setting up relu2
I0428 19:59:28.009049 29244 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:28.009053 29244 net.cpp:139] Memory required for data: 3574800
I0428 19:59:28.009057 29244 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:28.009064 29244 net.cpp:86] Creating Layer ip3
I0428 19:59:28.009068 29244 net.cpp:408] ip3 <- ip2
I0428 19:59:28.009073 29244 net.cpp:382] ip3 -> ip3
I0428 19:59:28.009227 29244 net.cpp:124] Setting up ip3
I0428 19:59:28.009233 29244 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:28.009237 29244 net.cpp:139] Memory required for data: 3578800
I0428 19:59:28.009243 29244 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:28.009248 29244 net.cpp:86] Creating Layer relu3
I0428 19:59:28.009250 29244 net.cpp:408] relu3 <- ip3
I0428 19:59:28.009255 29244 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:28.010176 29244 net.cpp:124] Setting up relu3
I0428 19:59:28.010188 29244 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:28.010207 29244 net.cpp:139] Memory required for data: 3582800
I0428 19:59:28.010210 29244 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:28.010216 29244 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:28.010221 29244 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:28.010226 29244 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:28.010231 29244 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:28.010295 29244 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:28.010303 29244 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:28.010308 29244 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:28.010309 29244 net.cpp:139] Memory required for data: 3590800
I0428 19:59:28.010313 29244 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:28.010318 29244 net.cpp:86] Creating Layer accuracy
I0428 19:59:28.010321 29244 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:28.010325 29244 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:28.010331 29244 net.cpp:382] accuracy -> accuracy
I0428 19:59:28.010339 29244 net.cpp:124] Setting up accuracy
I0428 19:59:28.010342 29244 net.cpp:131] Top shape: (1)
I0428 19:59:28.010345 29244 net.cpp:139] Memory required for data: 3590804
I0428 19:59:28.010349 29244 layer_factory.hpp:77] Creating layer loss
I0428 19:59:28.010352 29244 net.cpp:86] Creating Layer loss
I0428 19:59:28.010356 29244 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:28.010360 29244 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:28.010365 29244 net.cpp:382] loss -> loss
I0428 19:59:28.010371 29244 layer_factory.hpp:77] Creating layer loss
I0428 19:59:28.010629 29244 net.cpp:124] Setting up loss
I0428 19:59:28.010638 29244 net.cpp:131] Top shape: (1)
I0428 19:59:28.010641 29244 net.cpp:134]     with loss weight 1
I0428 19:59:28.010658 29244 net.cpp:139] Memory required for data: 3590808
I0428 19:59:28.010663 29244 net.cpp:200] loss needs backward computation.
I0428 19:59:28.010665 29244 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:28.010670 29244 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:28.010673 29244 net.cpp:200] relu3 needs backward computation.
I0428 19:59:28.010675 29244 net.cpp:200] ip3 needs backward computation.
I0428 19:59:28.010679 29244 net.cpp:200] relu2 needs backward computation.
I0428 19:59:28.010681 29244 net.cpp:200] ip2 needs backward computation.
I0428 19:59:28.010684 29244 net.cpp:200] relu1 needs backward computation.
I0428 19:59:28.010687 29244 net.cpp:200] ip1 needs backward computation.
I0428 19:59:28.010689 29244 net.cpp:200] pool1 needs backward computation.
I0428 19:59:28.010692 29244 net.cpp:200] conv1 needs backward computation.
I0428 19:59:28.010701 29244 net.cpp:200] pool0 needs backward computation.
I0428 19:59:28.010704 29244 net.cpp:200] conv0 needs backward computation.
I0428 19:59:28.010712 29244 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:28.010716 29244 net.cpp:202] mnist does not need backward computation.
I0428 19:59:28.010718 29244 net.cpp:244] This network produces output accuracy
I0428 19:59:28.010721 29244 net.cpp:244] This network produces output loss
I0428 19:59:28.010732 29244 net.cpp:257] Network initialization done.
I0428 19:59:28.010772 29244 solver.cpp:56] Solver scaffolding done.
I0428 19:59:28.011222 29244 caffe.cpp:248] Starting Optimization
I0428 19:59:28.011229 29244 solver.cpp:273] Solving LeNet
I0428 19:59:28.011230 29244 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:28.012105 29244 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:28.015671 29244 blocking_queue.cpp:49] Waiting for data
I0428 19:59:28.087180 29251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:28.087702 29244 solver.cpp:398]     Test net output #0: accuracy = 0.0728
I0428 19:59:28.087740 29244 solver.cpp:398]     Test net output #1: loss = 2.35143 (* 1 = 2.35143 loss)
I0428 19:59:28.090301 29244 solver.cpp:219] Iteration 0 (0 iter/s, 0.0790221s/100 iters), loss = 2.35835
I0428 19:59:28.090339 29244 solver.cpp:238]     Train net output #0: loss = 2.35835 (* 1 = 2.35835 loss)
I0428 19:59:28.090351 29244 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:28.172138 29244 solver.cpp:219] Iteration 100 (1222.67 iter/s, 0.0817879s/100 iters), loss = 1.17899
I0428 19:59:28.172176 29244 solver.cpp:238]     Train net output #0: loss = 1.17899 (* 1 = 1.17899 loss)
I0428 19:59:28.172183 29244 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:28.261715 29244 solver.cpp:219] Iteration 200 (1116.99 iter/s, 0.0895264s/100 iters), loss = 1.12358
I0428 19:59:28.261754 29244 solver.cpp:238]     Train net output #0: loss = 1.12358 (* 1 = 1.12358 loss)
I0428 19:59:28.261759 29244 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:28.348726 29244 solver.cpp:219] Iteration 300 (1149.72 iter/s, 0.0869777s/100 iters), loss = 0.772328
I0428 19:59:28.348763 29244 solver.cpp:238]     Train net output #0: loss = 0.772328 (* 1 = 0.772328 loss)
I0428 19:59:28.348769 29244 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:28.431684 29244 solver.cpp:219] Iteration 400 (1205.92 iter/s, 0.0829245s/100 iters), loss = 0.484585
I0428 19:59:28.431718 29244 solver.cpp:238]     Train net output #0: loss = 0.484585 (* 1 = 0.484585 loss)
I0428 19:59:28.431727 29244 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:28.512699 29244 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:28.571593 29251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:28.573334 29244 solver.cpp:398]     Test net output #0: accuracy = 0.749
I0428 19:59:28.573364 29244 solver.cpp:398]     Test net output #1: loss = 0.65158 (* 1 = 0.65158 loss)
I0428 19:59:28.574259 29244 solver.cpp:219] Iteration 500 (701.619 iter/s, 0.142527s/100 iters), loss = 0.604456
I0428 19:59:28.574292 29244 solver.cpp:238]     Train net output #0: loss = 0.604456 (* 1 = 0.604456 loss)
I0428 19:59:28.574322 29244 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:28.660382 29244 solver.cpp:219] Iteration 600 (1161.69 iter/s, 0.0860815s/100 iters), loss = 0.774405
I0428 19:59:28.660409 29244 solver.cpp:238]     Train net output #0: loss = 0.774405 (* 1 = 0.774405 loss)
I0428 19:59:28.660416 29244 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:28.740782 29244 solver.cpp:219] Iteration 700 (1244.35 iter/s, 0.0803635s/100 iters), loss = 0.54887
I0428 19:59:28.740804 29244 solver.cpp:238]     Train net output #0: loss = 0.54887 (* 1 = 0.54887 loss)
I0428 19:59:28.740833 29244 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:28.818092 29244 solver.cpp:219] Iteration 800 (1294.03 iter/s, 0.0772782s/100 iters), loss = 0.710324
I0428 19:59:28.818115 29244 solver.cpp:238]     Train net output #0: loss = 0.710324 (* 1 = 0.710324 loss)
I0428 19:59:28.818121 29244 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:28.895398 29244 solver.cpp:219] Iteration 900 (1294.09 iter/s, 0.0772743s/100 iters), loss = 0.867372
I0428 19:59:28.895422 29244 solver.cpp:238]     Train net output #0: loss = 0.867373 (* 1 = 0.867373 loss)
I0428 19:59:28.895428 29244 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:28.921598 29250 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:28.972152 29244 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:28.973057 29244 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:28.973547 29244 solver.cpp:311] Iteration 1000, loss = 0.610843
I0428 19:59:28.973563 29244 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:29.026284 29251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:29.026799 29244 solver.cpp:398]     Test net output #0: accuracy = 0.7662
I0428 19:59:29.026832 29244 solver.cpp:398]     Test net output #1: loss = 0.586987 (* 1 = 0.586987 loss)
I0428 19:59:29.026837 29244 solver.cpp:316] Optimization Done.
I0428 19:59:29.026840 29244 caffe.cpp:259] Optimization Done.
