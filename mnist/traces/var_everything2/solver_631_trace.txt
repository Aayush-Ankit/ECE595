I0428 19:51:21.253927 27262 caffe.cpp:218] Using GPUs 0
I0428 19:51:21.290720 27262 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:21.747895 27262 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test631.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:21.748040 27262 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test631.prototxt
I0428 19:51:21.748373 27262 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:21.748401 27262 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:21.748472 27262 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:21.748543 27262 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:21.748626 27262 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:21.748647 27262 net.cpp:86] Creating Layer mnist
I0428 19:51:21.748654 27262 net.cpp:382] mnist -> data
I0428 19:51:21.748692 27262 net.cpp:382] mnist -> label
I0428 19:51:21.749667 27262 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:21.752099 27262 net.cpp:124] Setting up mnist
I0428 19:51:21.752115 27262 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:21.752120 27262 net.cpp:131] Top shape: 64 (64)
I0428 19:51:21.752122 27262 net.cpp:139] Memory required for data: 200960
I0428 19:51:21.752128 27262 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:21.752156 27262 net.cpp:86] Creating Layer conv0
I0428 19:51:21.752168 27262 net.cpp:408] conv0 <- data
I0428 19:51:21.752177 27262 net.cpp:382] conv0 -> conv0
I0428 19:51:21.981878 27262 net.cpp:124] Setting up conv0
I0428 19:51:21.981904 27262 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:21.981907 27262 net.cpp:139] Memory required for data: 938240
I0428 19:51:21.981941 27262 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:21.981955 27262 net.cpp:86] Creating Layer pool0
I0428 19:51:21.981972 27262 net.cpp:408] pool0 <- conv0
I0428 19:51:21.981977 27262 net.cpp:382] pool0 -> pool0
I0428 19:51:21.982023 27262 net.cpp:124] Setting up pool0
I0428 19:51:21.982028 27262 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:21.982030 27262 net.cpp:139] Memory required for data: 1122560
I0428 19:51:21.982034 27262 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:21.982044 27262 net.cpp:86] Creating Layer conv1
I0428 19:51:21.982048 27262 net.cpp:408] conv1 <- pool0
I0428 19:51:21.982051 27262 net.cpp:382] conv1 -> conv1
I0428 19:51:21.984715 27262 net.cpp:124] Setting up conv1
I0428 19:51:21.984730 27262 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:21.984733 27262 net.cpp:139] Memory required for data: 1532160
I0428 19:51:21.984741 27262 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:21.984750 27262 net.cpp:86] Creating Layer pool1
I0428 19:51:21.984767 27262 net.cpp:408] pool1 <- conv1
I0428 19:51:21.984772 27262 net.cpp:382] pool1 -> pool1
I0428 19:51:21.984845 27262 net.cpp:124] Setting up pool1
I0428 19:51:21.984877 27262 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:21.984880 27262 net.cpp:139] Memory required for data: 1634560
I0428 19:51:21.984884 27262 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:21.984890 27262 net.cpp:86] Creating Layer ip1
I0428 19:51:21.984894 27262 net.cpp:408] ip1 <- pool1
I0428 19:51:21.984900 27262 net.cpp:382] ip1 -> ip1
I0428 19:51:21.985900 27262 net.cpp:124] Setting up ip1
I0428 19:51:21.985913 27262 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:21.985916 27262 net.cpp:139] Memory required for data: 1640960
I0428 19:51:21.985924 27262 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:21.985930 27262 net.cpp:86] Creating Layer relu1
I0428 19:51:21.985934 27262 net.cpp:408] relu1 <- ip1
I0428 19:51:21.985939 27262 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:21.986150 27262 net.cpp:124] Setting up relu1
I0428 19:51:21.986160 27262 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:51:21.986162 27262 net.cpp:139] Memory required for data: 1647360
I0428 19:51:21.986166 27262 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:21.986172 27262 net.cpp:86] Creating Layer ip2
I0428 19:51:21.986176 27262 net.cpp:408] ip2 <- ip1
I0428 19:51:21.986181 27262 net.cpp:382] ip2 -> ip2
I0428 19:51:21.986294 27262 net.cpp:124] Setting up ip2
I0428 19:51:21.986299 27262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:21.986302 27262 net.cpp:139] Memory required for data: 1649920
I0428 19:51:21.986309 27262 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:21.986315 27262 net.cpp:86] Creating Layer relu2
I0428 19:51:21.986316 27262 net.cpp:408] relu2 <- ip2
I0428 19:51:21.986321 27262 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:21.987105 27262 net.cpp:124] Setting up relu2
I0428 19:51:21.987118 27262 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:21.987121 27262 net.cpp:139] Memory required for data: 1652480
I0428 19:51:21.987124 27262 layer_factory.hpp:77] Creating layer loss
I0428 19:51:21.987135 27262 net.cpp:86] Creating Layer loss
I0428 19:51:21.987139 27262 net.cpp:408] loss <- ip2
I0428 19:51:21.987143 27262 net.cpp:408] loss <- label
I0428 19:51:21.987149 27262 net.cpp:382] loss -> loss
I0428 19:51:21.987164 27262 layer_factory.hpp:77] Creating layer loss
I0428 19:51:21.987418 27262 net.cpp:124] Setting up loss
I0428 19:51:21.987428 27262 net.cpp:131] Top shape: (1)
I0428 19:51:21.987432 27262 net.cpp:134]     with loss weight 1
I0428 19:51:21.987445 27262 net.cpp:139] Memory required for data: 1652484
I0428 19:51:21.987448 27262 net.cpp:200] loss needs backward computation.
I0428 19:51:21.987452 27262 net.cpp:200] relu2 needs backward computation.
I0428 19:51:21.987454 27262 net.cpp:200] ip2 needs backward computation.
I0428 19:51:21.987457 27262 net.cpp:200] relu1 needs backward computation.
I0428 19:51:21.987460 27262 net.cpp:200] ip1 needs backward computation.
I0428 19:51:21.987473 27262 net.cpp:200] pool1 needs backward computation.
I0428 19:51:21.987475 27262 net.cpp:200] conv1 needs backward computation.
I0428 19:51:21.987478 27262 net.cpp:200] pool0 needs backward computation.
I0428 19:51:21.987481 27262 net.cpp:200] conv0 needs backward computation.
I0428 19:51:21.987484 27262 net.cpp:202] mnist does not need backward computation.
I0428 19:51:21.987488 27262 net.cpp:244] This network produces output loss
I0428 19:51:21.987496 27262 net.cpp:257] Network initialization done.
I0428 19:51:21.987793 27262 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test631.prototxt
I0428 19:51:21.987820 27262 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:21.987922 27262 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:21.988003 27262 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:21.988047 27262 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:21.988059 27262 net.cpp:86] Creating Layer mnist
I0428 19:51:21.988065 27262 net.cpp:382] mnist -> data
I0428 19:51:21.988071 27262 net.cpp:382] mnist -> label
I0428 19:51:21.988175 27262 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:21.990151 27262 net.cpp:124] Setting up mnist
I0428 19:51:21.990164 27262 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:21.990170 27262 net.cpp:131] Top shape: 100 (100)
I0428 19:51:21.990171 27262 net.cpp:139] Memory required for data: 314000
I0428 19:51:21.990175 27262 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:21.990181 27262 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:21.990185 27262 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:21.990190 27262 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:21.990196 27262 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:21.990244 27262 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:21.990259 27262 net.cpp:131] Top shape: 100 (100)
I0428 19:51:21.990263 27262 net.cpp:131] Top shape: 100 (100)
I0428 19:51:21.990265 27262 net.cpp:139] Memory required for data: 314800
I0428 19:51:21.990268 27262 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:21.990278 27262 net.cpp:86] Creating Layer conv0
I0428 19:51:21.990281 27262 net.cpp:408] conv0 <- data
I0428 19:51:21.990286 27262 net.cpp:382] conv0 -> conv0
I0428 19:51:21.991842 27262 net.cpp:124] Setting up conv0
I0428 19:51:21.991854 27262 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:21.991858 27262 net.cpp:139] Memory required for data: 1466800
I0428 19:51:21.991866 27262 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:21.991874 27262 net.cpp:86] Creating Layer pool0
I0428 19:51:21.991876 27262 net.cpp:408] pool0 <- conv0
I0428 19:51:21.991896 27262 net.cpp:382] pool0 -> pool0
I0428 19:51:21.991956 27262 net.cpp:124] Setting up pool0
I0428 19:51:21.991966 27262 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:21.991968 27262 net.cpp:139] Memory required for data: 1754800
I0428 19:51:21.991971 27262 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:21.991979 27262 net.cpp:86] Creating Layer conv1
I0428 19:51:21.991982 27262 net.cpp:408] conv1 <- pool0
I0428 19:51:21.992003 27262 net.cpp:382] conv1 -> conv1
I0428 19:51:21.994139 27262 net.cpp:124] Setting up conv1
I0428 19:51:21.994153 27262 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:21.994156 27262 net.cpp:139] Memory required for data: 2394800
I0428 19:51:21.994165 27262 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:21.994185 27262 net.cpp:86] Creating Layer pool1
I0428 19:51:21.994189 27262 net.cpp:408] pool1 <- conv1
I0428 19:51:21.994194 27262 net.cpp:382] pool1 -> pool1
I0428 19:51:21.994231 27262 net.cpp:124] Setting up pool1
I0428 19:51:21.994240 27262 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:21.994242 27262 net.cpp:139] Memory required for data: 2554800
I0428 19:51:21.994246 27262 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:21.994251 27262 net.cpp:86] Creating Layer ip1
I0428 19:51:21.994254 27262 net.cpp:408] ip1 <- pool1
I0428 19:51:21.994259 27262 net.cpp:382] ip1 -> ip1
I0428 19:51:21.994408 27262 net.cpp:124] Setting up ip1
I0428 19:51:21.994416 27262 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:21.994420 27262 net.cpp:139] Memory required for data: 2564800
I0428 19:51:21.994427 27262 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:21.994433 27262 net.cpp:86] Creating Layer relu1
I0428 19:51:21.994436 27262 net.cpp:408] relu1 <- ip1
I0428 19:51:21.994441 27262 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:21.994602 27262 net.cpp:124] Setting up relu1
I0428 19:51:21.994612 27262 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:51:21.994616 27262 net.cpp:139] Memory required for data: 2574800
I0428 19:51:21.994618 27262 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:21.994624 27262 net.cpp:86] Creating Layer ip2
I0428 19:51:21.994627 27262 net.cpp:408] ip2 <- ip1
I0428 19:51:21.994635 27262 net.cpp:382] ip2 -> ip2
I0428 19:51:21.994773 27262 net.cpp:124] Setting up ip2
I0428 19:51:21.994781 27262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:21.994784 27262 net.cpp:139] Memory required for data: 2578800
I0428 19:51:21.994789 27262 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:21.994796 27262 net.cpp:86] Creating Layer relu2
I0428 19:51:21.994798 27262 net.cpp:408] relu2 <- ip2
I0428 19:51:21.994802 27262 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:21.995010 27262 net.cpp:124] Setting up relu2
I0428 19:51:21.995034 27262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:21.995038 27262 net.cpp:139] Memory required for data: 2582800
I0428 19:51:21.995040 27262 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:21.995046 27262 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:21.995050 27262 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:21.995056 27262 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:21.995072 27262 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:21.995108 27262 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:21.995115 27262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:21.995118 27262 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:21.995121 27262 net.cpp:139] Memory required for data: 2590800
I0428 19:51:21.995123 27262 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:21.995129 27262 net.cpp:86] Creating Layer accuracy
I0428 19:51:21.995132 27262 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:21.995137 27262 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:21.995141 27262 net.cpp:382] accuracy -> accuracy
I0428 19:51:21.995147 27262 net.cpp:124] Setting up accuracy
I0428 19:51:21.995151 27262 net.cpp:131] Top shape: (1)
I0428 19:51:21.995154 27262 net.cpp:139] Memory required for data: 2590804
I0428 19:51:21.995167 27262 layer_factory.hpp:77] Creating layer loss
I0428 19:51:21.995172 27262 net.cpp:86] Creating Layer loss
I0428 19:51:21.995177 27262 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:21.995196 27262 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:21.995200 27262 net.cpp:382] loss -> loss
I0428 19:51:21.995221 27262 layer_factory.hpp:77] Creating layer loss
I0428 19:51:21.995460 27262 net.cpp:124] Setting up loss
I0428 19:51:21.995468 27262 net.cpp:131] Top shape: (1)
I0428 19:51:21.995471 27262 net.cpp:134]     with loss weight 1
I0428 19:51:21.995476 27262 net.cpp:139] Memory required for data: 2590808
I0428 19:51:21.995479 27262 net.cpp:200] loss needs backward computation.
I0428 19:51:21.995483 27262 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:21.995486 27262 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:21.995489 27262 net.cpp:200] relu2 needs backward computation.
I0428 19:51:21.995493 27262 net.cpp:200] ip2 needs backward computation.
I0428 19:51:21.995496 27262 net.cpp:200] relu1 needs backward computation.
I0428 19:51:21.995498 27262 net.cpp:200] ip1 needs backward computation.
I0428 19:51:21.995501 27262 net.cpp:200] pool1 needs backward computation.
I0428 19:51:21.995506 27262 net.cpp:200] conv1 needs backward computation.
I0428 19:51:21.995508 27262 net.cpp:200] pool0 needs backward computation.
I0428 19:51:21.995512 27262 net.cpp:200] conv0 needs backward computation.
I0428 19:51:21.995514 27262 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:21.995518 27262 net.cpp:202] mnist does not need backward computation.
I0428 19:51:21.995520 27262 net.cpp:244] This network produces output accuracy
I0428 19:51:21.995523 27262 net.cpp:244] This network produces output loss
I0428 19:51:21.995533 27262 net.cpp:257] Network initialization done.
I0428 19:51:21.995569 27262 solver.cpp:56] Solver scaffolding done.
I0428 19:51:21.995854 27262 caffe.cpp:248] Starting Optimization
I0428 19:51:21.995860 27262 solver.cpp:273] Solving LeNet
I0428 19:51:21.995864 27262 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:21.995992 27262 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:22.000779 27262 blocking_queue.cpp:49] Waiting for data
I0428 19:51:22.075176 27269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:22.075706 27262 solver.cpp:398]     Test net output #0: accuracy = 0.1539
I0428 19:51:22.075724 27262 solver.cpp:398]     Test net output #1: loss = 2.30335 (* 1 = 2.30335 loss)
I0428 19:51:22.077534 27262 solver.cpp:219] Iteration 0 (-4.25388e-31 iter/s, 0.0816299s/100 iters), loss = 2.27617
I0428 19:51:22.077566 27262 solver.cpp:238]     Train net output #0: loss = 2.27617 (* 1 = 2.27617 loss)
I0428 19:51:22.077594 27262 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:22.169430 27262 solver.cpp:219] Iteration 100 (1088.7 iter/s, 0.0918523s/100 iters), loss = 0.249967
I0428 19:51:22.169471 27262 solver.cpp:238]     Train net output #0: loss = 0.249967 (* 1 = 0.249967 loss)
I0428 19:51:22.169478 27262 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:22.248070 27262 solver.cpp:219] Iteration 200 (1272.44 iter/s, 0.0785891s/100 iters), loss = 0.188701
I0428 19:51:22.248124 27262 solver.cpp:238]     Train net output #0: loss = 0.188701 (* 1 = 0.188701 loss)
I0428 19:51:22.248131 27262 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:22.325227 27262 solver.cpp:219] Iteration 300 (1296.85 iter/s, 0.0771101s/100 iters), loss = 0.172846
I0428 19:51:22.325266 27262 solver.cpp:238]     Train net output #0: loss = 0.172845 (* 1 = 0.172845 loss)
I0428 19:51:22.325271 27262 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:22.416179 27262 solver.cpp:219] Iteration 400 (1099.93 iter/s, 0.0909148s/100 iters), loss = 0.0990458
I0428 19:51:22.416234 27262 solver.cpp:238]     Train net output #0: loss = 0.0990457 (* 1 = 0.0990457 loss)
I0428 19:51:22.416244 27262 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:22.505177 27262 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:22.570646 27269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:22.571135 27262 solver.cpp:398]     Test net output #0: accuracy = 0.958
I0428 19:51:22.571157 27262 solver.cpp:398]     Test net output #1: loss = 0.130582 (* 1 = 0.130582 loss)
I0428 19:51:22.571983 27262 solver.cpp:219] Iteration 500 (642.07 iter/s, 0.155746s/100 iters), loss = 0.118445
I0428 19:51:22.572007 27262 solver.cpp:238]     Train net output #0: loss = 0.118445 (* 1 = 0.118445 loss)
I0428 19:51:22.572015 27262 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:22.661728 27262 solver.cpp:219] Iteration 600 (1114.68 iter/s, 0.0897116s/100 iters), loss = 0.1126
I0428 19:51:22.661753 27262 solver.cpp:238]     Train net output #0: loss = 0.1126 (* 1 = 0.1126 loss)
I0428 19:51:22.661759 27262 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:22.741302 27262 solver.cpp:219] Iteration 700 (1257.24 iter/s, 0.079539s/100 iters), loss = 0.12969
I0428 19:51:22.741344 27262 solver.cpp:238]     Train net output #0: loss = 0.12969 (* 1 = 0.12969 loss)
I0428 19:51:22.741365 27262 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:22.818827 27262 solver.cpp:219] Iteration 800 (1290.47 iter/s, 0.0774912s/100 iters), loss = 0.257771
I0428 19:51:22.818869 27262 solver.cpp:238]     Train net output #0: loss = 0.257771 (* 1 = 0.257771 loss)
I0428 19:51:22.818876 27262 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:22.896378 27262 solver.cpp:219] Iteration 900 (1290.06 iter/s, 0.0775158s/100 iters), loss = 0.184301
I0428 19:51:22.896420 27262 solver.cpp:238]     Train net output #0: loss = 0.184301 (* 1 = 0.184301 loss)
I0428 19:51:22.896426 27262 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:22.922371 27268 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:22.973165 27262 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:22.974059 27262 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:22.974596 27262 solver.cpp:311] Iteration 1000, loss = 0.131443
I0428 19:51:22.974611 27262 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:23.031273 27269 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:23.031782 27262 solver.cpp:398]     Test net output #0: accuracy = 0.9733
I0428 19:51:23.031821 27262 solver.cpp:398]     Test net output #1: loss = 0.084356 (* 1 = 0.084356 loss)
I0428 19:51:23.031826 27262 solver.cpp:316] Optimization Done.
I0428 19:51:23.031828 27262 caffe.cpp:259] Optimization Done.
