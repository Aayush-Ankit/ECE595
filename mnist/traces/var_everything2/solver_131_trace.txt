I0428 19:31:43.390641 22652 caffe.cpp:218] Using GPUs 0
I0428 19:31:43.428221 22652 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:43.934686 22652 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test131.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:43.934826 22652 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test131.prototxt
I0428 19:31:43.935196 22652 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:43.935214 22652 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:43.935300 22652 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:43.935375 22652 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:43.935483 22652 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:43.935508 22652 net.cpp:86] Creating Layer mnist
I0428 19:31:43.935515 22652 net.cpp:382] mnist -> data
I0428 19:31:43.935539 22652 net.cpp:382] mnist -> label
I0428 19:31:43.936627 22652 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:43.939085 22652 net.cpp:124] Setting up mnist
I0428 19:31:43.939105 22652 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:43.939112 22652 net.cpp:131] Top shape: 64 (64)
I0428 19:31:43.939116 22652 net.cpp:139] Memory required for data: 200960
I0428 19:31:43.939123 22652 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:43.939141 22652 net.cpp:86] Creating Layer conv0
I0428 19:31:43.939147 22652 net.cpp:408] conv0 <- data
I0428 19:31:43.939158 22652 net.cpp:382] conv0 -> conv0
I0428 19:31:44.226102 22652 net.cpp:124] Setting up conv0
I0428 19:31:44.226130 22652 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:44.226133 22652 net.cpp:139] Memory required for data: 1675520
I0428 19:31:44.226150 22652 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:44.226161 22652 net.cpp:86] Creating Layer pool0
I0428 19:31:44.226186 22652 net.cpp:408] pool0 <- conv0
I0428 19:31:44.226193 22652 net.cpp:382] pool0 -> pool0
I0428 19:31:44.226241 22652 net.cpp:124] Setting up pool0
I0428 19:31:44.226248 22652 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:44.226251 22652 net.cpp:139] Memory required for data: 2044160
I0428 19:31:44.226254 22652 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:44.226263 22652 net.cpp:86] Creating Layer ip1
I0428 19:31:44.226266 22652 net.cpp:408] ip1 <- pool0
I0428 19:31:44.226270 22652 net.cpp:382] ip1 -> ip1
I0428 19:31:44.227298 22652 net.cpp:124] Setting up ip1
I0428 19:31:44.227310 22652 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:44.227314 22652 net.cpp:139] Memory required for data: 2046720
I0428 19:31:44.227324 22652 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:44.227330 22652 net.cpp:86] Creating Layer relu1
I0428 19:31:44.227334 22652 net.cpp:408] relu1 <- ip1
I0428 19:31:44.227339 22652 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:44.227507 22652 net.cpp:124] Setting up relu1
I0428 19:31:44.227516 22652 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:44.227520 22652 net.cpp:139] Memory required for data: 2049280
I0428 19:31:44.227524 22652 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:44.227530 22652 net.cpp:86] Creating Layer ip2
I0428 19:31:44.227533 22652 net.cpp:408] ip2 <- ip1
I0428 19:31:44.227538 22652 net.cpp:382] ip2 -> ip2
I0428 19:31:44.227632 22652 net.cpp:124] Setting up ip2
I0428 19:31:44.227639 22652 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:44.227643 22652 net.cpp:139] Memory required for data: 2051840
I0428 19:31:44.227650 22652 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:44.227655 22652 net.cpp:86] Creating Layer relu2
I0428 19:31:44.227658 22652 net.cpp:408] relu2 <- ip2
I0428 19:31:44.227663 22652 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:44.228392 22652 net.cpp:124] Setting up relu2
I0428 19:31:44.228405 22652 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:44.228408 22652 net.cpp:139] Memory required for data: 2054400
I0428 19:31:44.228412 22652 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:44.228421 22652 net.cpp:86] Creating Layer ip3
I0428 19:31:44.228425 22652 net.cpp:408] ip3 <- ip2
I0428 19:31:44.228430 22652 net.cpp:382] ip3 -> ip3
I0428 19:31:44.228525 22652 net.cpp:124] Setting up ip3
I0428 19:31:44.228533 22652 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:44.228538 22652 net.cpp:139] Memory required for data: 2056960
I0428 19:31:44.228543 22652 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:44.228549 22652 net.cpp:86] Creating Layer relu3
I0428 19:31:44.228552 22652 net.cpp:408] relu3 <- ip3
I0428 19:31:44.228556 22652 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:44.228732 22652 net.cpp:124] Setting up relu3
I0428 19:31:44.228741 22652 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:44.228745 22652 net.cpp:139] Memory required for data: 2059520
I0428 19:31:44.228749 22652 layer_factory.hpp:77] Creating layer loss
I0428 19:31:44.228754 22652 net.cpp:86] Creating Layer loss
I0428 19:31:44.228757 22652 net.cpp:408] loss <- ip3
I0428 19:31:44.228761 22652 net.cpp:408] loss <- label
I0428 19:31:44.228768 22652 net.cpp:382] loss -> loss
I0428 19:31:44.228782 22652 layer_factory.hpp:77] Creating layer loss
I0428 19:31:44.229048 22652 net.cpp:124] Setting up loss
I0428 19:31:44.229058 22652 net.cpp:131] Top shape: (1)
I0428 19:31:44.229060 22652 net.cpp:134]     with loss weight 1
I0428 19:31:44.229074 22652 net.cpp:139] Memory required for data: 2059524
I0428 19:31:44.229079 22652 net.cpp:200] loss needs backward computation.
I0428 19:31:44.229082 22652 net.cpp:200] relu3 needs backward computation.
I0428 19:31:44.229086 22652 net.cpp:200] ip3 needs backward computation.
I0428 19:31:44.229090 22652 net.cpp:200] relu2 needs backward computation.
I0428 19:31:44.229094 22652 net.cpp:200] ip2 needs backward computation.
I0428 19:31:44.229095 22652 net.cpp:200] relu1 needs backward computation.
I0428 19:31:44.229099 22652 net.cpp:200] ip1 needs backward computation.
I0428 19:31:44.229111 22652 net.cpp:200] pool0 needs backward computation.
I0428 19:31:44.229115 22652 net.cpp:200] conv0 needs backward computation.
I0428 19:31:44.229118 22652 net.cpp:202] mnist does not need backward computation.
I0428 19:31:44.229121 22652 net.cpp:244] This network produces output loss
I0428 19:31:44.229130 22652 net.cpp:257] Network initialization done.
I0428 19:31:44.229418 22652 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test131.prototxt
I0428 19:31:44.229445 22652 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:44.229526 22652 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:44.229594 22652 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:44.229640 22652 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:44.229653 22652 net.cpp:86] Creating Layer mnist
I0428 19:31:44.229658 22652 net.cpp:382] mnist -> data
I0428 19:31:44.229666 22652 net.cpp:382] mnist -> label
I0428 19:31:44.229755 22652 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:44.231933 22652 net.cpp:124] Setting up mnist
I0428 19:31:44.231964 22652 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:44.231971 22652 net.cpp:131] Top shape: 100 (100)
I0428 19:31:44.231974 22652 net.cpp:139] Memory required for data: 314000
I0428 19:31:44.231978 22652 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:44.231986 22652 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:44.231988 22652 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:44.231993 22652 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:44.232000 22652 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:44.232051 22652 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:44.232056 22652 net.cpp:131] Top shape: 100 (100)
I0428 19:31:44.232060 22652 net.cpp:131] Top shape: 100 (100)
I0428 19:31:44.232064 22652 net.cpp:139] Memory required for data: 314800
I0428 19:31:44.232076 22652 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:44.232086 22652 net.cpp:86] Creating Layer conv0
I0428 19:31:44.232090 22652 net.cpp:408] conv0 <- data
I0428 19:31:44.232096 22652 net.cpp:382] conv0 -> conv0
I0428 19:31:44.233820 22652 net.cpp:124] Setting up conv0
I0428 19:31:44.233834 22652 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:44.233839 22652 net.cpp:139] Memory required for data: 2618800
I0428 19:31:44.233847 22652 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:44.233855 22652 net.cpp:86] Creating Layer pool0
I0428 19:31:44.233860 22652 net.cpp:408] pool0 <- conv0
I0428 19:31:44.233865 22652 net.cpp:382] pool0 -> pool0
I0428 19:31:44.233901 22652 net.cpp:124] Setting up pool0
I0428 19:31:44.233906 22652 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:44.233908 22652 net.cpp:139] Memory required for data: 3194800
I0428 19:31:44.233911 22652 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:44.233919 22652 net.cpp:86] Creating Layer ip1
I0428 19:31:44.233922 22652 net.cpp:408] ip1 <- pool0
I0428 19:31:44.233927 22652 net.cpp:382] ip1 -> ip1
I0428 19:31:44.234107 22652 net.cpp:124] Setting up ip1
I0428 19:31:44.234115 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.234119 22652 net.cpp:139] Memory required for data: 3198800
I0428 19:31:44.234127 22652 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:44.234132 22652 net.cpp:86] Creating Layer relu1
I0428 19:31:44.234134 22652 net.cpp:408] relu1 <- ip1
I0428 19:31:44.234139 22652 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:44.234305 22652 net.cpp:124] Setting up relu1
I0428 19:31:44.234314 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.234318 22652 net.cpp:139] Memory required for data: 3202800
I0428 19:31:44.234320 22652 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:44.234328 22652 net.cpp:86] Creating Layer ip2
I0428 19:31:44.234330 22652 net.cpp:408] ip2 <- ip1
I0428 19:31:44.234336 22652 net.cpp:382] ip2 -> ip2
I0428 19:31:44.234431 22652 net.cpp:124] Setting up ip2
I0428 19:31:44.234439 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.234442 22652 net.cpp:139] Memory required for data: 3206800
I0428 19:31:44.234449 22652 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:44.234454 22652 net.cpp:86] Creating Layer relu2
I0428 19:31:44.234457 22652 net.cpp:408] relu2 <- ip2
I0428 19:31:44.234462 22652 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:44.235308 22652 net.cpp:124] Setting up relu2
I0428 19:31:44.235321 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.235324 22652 net.cpp:139] Memory required for data: 3210800
I0428 19:31:44.235328 22652 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:44.235337 22652 net.cpp:86] Creating Layer ip3
I0428 19:31:44.235340 22652 net.cpp:408] ip3 <- ip2
I0428 19:31:44.235347 22652 net.cpp:382] ip3 -> ip3
I0428 19:31:44.235504 22652 net.cpp:124] Setting up ip3
I0428 19:31:44.235513 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.235517 22652 net.cpp:139] Memory required for data: 3214800
I0428 19:31:44.235522 22652 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:44.235533 22652 net.cpp:86] Creating Layer relu3
I0428 19:31:44.235538 22652 net.cpp:408] relu3 <- ip3
I0428 19:31:44.235543 22652 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:44.235759 22652 net.cpp:124] Setting up relu3
I0428 19:31:44.235766 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.235770 22652 net.cpp:139] Memory required for data: 3218800
I0428 19:31:44.235774 22652 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:44.235779 22652 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:44.235790 22652 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:44.235795 22652 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:44.235800 22652 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:44.235836 22652 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:44.235842 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.235846 22652 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:44.235859 22652 net.cpp:139] Memory required for data: 3226800
I0428 19:31:44.235869 22652 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:44.235875 22652 net.cpp:86] Creating Layer accuracy
I0428 19:31:44.235878 22652 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:44.235888 22652 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:44.235895 22652 net.cpp:382] accuracy -> accuracy
I0428 19:31:44.235903 22652 net.cpp:124] Setting up accuracy
I0428 19:31:44.235908 22652 net.cpp:131] Top shape: (1)
I0428 19:31:44.235910 22652 net.cpp:139] Memory required for data: 3226804
I0428 19:31:44.235913 22652 layer_factory.hpp:77] Creating layer loss
I0428 19:31:44.235931 22652 net.cpp:86] Creating Layer loss
I0428 19:31:44.235934 22652 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:44.235939 22652 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:44.235942 22652 net.cpp:382] loss -> loss
I0428 19:31:44.235949 22652 layer_factory.hpp:77] Creating layer loss
I0428 19:31:44.236191 22652 net.cpp:124] Setting up loss
I0428 19:31:44.236199 22652 net.cpp:131] Top shape: (1)
I0428 19:31:44.236202 22652 net.cpp:134]     with loss weight 1
I0428 19:31:44.236209 22652 net.cpp:139] Memory required for data: 3226808
I0428 19:31:44.236212 22652 net.cpp:200] loss needs backward computation.
I0428 19:31:44.236217 22652 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:44.236220 22652 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:44.236223 22652 net.cpp:200] relu3 needs backward computation.
I0428 19:31:44.236227 22652 net.cpp:200] ip3 needs backward computation.
I0428 19:31:44.236237 22652 net.cpp:200] relu2 needs backward computation.
I0428 19:31:44.236239 22652 net.cpp:200] ip2 needs backward computation.
I0428 19:31:44.236243 22652 net.cpp:200] relu1 needs backward computation.
I0428 19:31:44.236249 22652 net.cpp:200] ip1 needs backward computation.
I0428 19:31:44.236253 22652 net.cpp:200] pool0 needs backward computation.
I0428 19:31:44.236256 22652 net.cpp:200] conv0 needs backward computation.
I0428 19:31:44.236260 22652 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:44.236264 22652 net.cpp:202] mnist does not need backward computation.
I0428 19:31:44.236268 22652 net.cpp:244] This network produces output accuracy
I0428 19:31:44.236270 22652 net.cpp:244] This network produces output loss
I0428 19:31:44.236281 22652 net.cpp:257] Network initialization done.
I0428 19:31:44.236317 22652 solver.cpp:56] Solver scaffolding done.
I0428 19:31:44.236639 22652 caffe.cpp:248] Starting Optimization
I0428 19:31:44.236646 22652 solver.cpp:273] Solving LeNet
I0428 19:31:44.236650 22652 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:44.236857 22652 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:44.240142 22652 blocking_queue.cpp:49] Waiting for data
I0428 19:31:44.314851 22659 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:44.315501 22652 solver.cpp:398]     Test net output #0: accuracy = 0.0872
I0428 19:31:44.315538 22652 solver.cpp:398]     Test net output #1: loss = 2.31137 (* 1 = 2.31137 loss)
I0428 19:31:44.318653 22652 solver.cpp:219] Iteration 0 (-1.41149e-31 iter/s, 0.0819558s/100 iters), loss = 2.33021
I0428 19:31:44.318696 22652 solver.cpp:238]     Train net output #0: loss = 2.33021 (* 1 = 2.33021 loss)
I0428 19:31:44.318714 22652 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:44.389932 22652 solver.cpp:219] Iteration 100 (1403.93 iter/s, 0.0712284s/100 iters), loss = 1.8256
I0428 19:31:44.389964 22652 solver.cpp:238]     Train net output #0: loss = 1.8256 (* 1 = 1.8256 loss)
I0428 19:31:44.389972 22652 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:44.465945 22652 solver.cpp:219] Iteration 200 (1316.35 iter/s, 0.0759676s/100 iters), loss = 1.09926
I0428 19:31:44.465996 22652 solver.cpp:238]     Train net output #0: loss = 1.09926 (* 1 = 1.09926 loss)
I0428 19:31:44.466011 22652 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:44.550863 22652 solver.cpp:219] Iteration 300 (1178.43 iter/s, 0.0848589s/100 iters), loss = 1.28613
I0428 19:31:44.550905 22652 solver.cpp:238]     Train net output #0: loss = 1.28613 (* 1 = 1.28613 loss)
I0428 19:31:44.550921 22652 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:44.620728 22652 solver.cpp:219] Iteration 400 (1432.35 iter/s, 0.0698153s/100 iters), loss = 1.05316
I0428 19:31:44.620759 22652 solver.cpp:238]     Train net output #0: loss = 1.05316 (* 1 = 1.05316 loss)
I0428 19:31:44.620766 22652 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:44.687633 22652 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:44.740445 22659 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:44.740994 22652 solver.cpp:398]     Test net output #0: accuracy = 0.6584
I0428 19:31:44.741019 22652 solver.cpp:398]     Test net output #1: loss = 0.933786 (* 1 = 0.933786 loss)
I0428 19:31:44.741716 22652 solver.cpp:219] Iteration 500 (826.81 iter/s, 0.120947s/100 iters), loss = 1.10937
I0428 19:31:44.741751 22652 solver.cpp:238]     Train net output #0: loss = 1.10937 (* 1 = 1.10937 loss)
I0428 19:31:44.741758 22652 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:44.812211 22652 solver.cpp:219] Iteration 600 (1419.44 iter/s, 0.0704501s/100 iters), loss = 0.697535
I0428 19:31:44.812240 22652 solver.cpp:238]     Train net output #0: loss = 0.697535 (* 1 = 0.697535 loss)
I0428 19:31:44.812247 22652 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:44.878549 22652 solver.cpp:219] Iteration 700 (1508.27 iter/s, 0.0663009s/100 iters), loss = 0.89636
I0428 19:31:44.878578 22652 solver.cpp:238]     Train net output #0: loss = 0.89636 (* 1 = 0.89636 loss)
I0428 19:31:44.878587 22652 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:44.944413 22652 solver.cpp:219] Iteration 800 (1519.14 iter/s, 0.0658268s/100 iters), loss = 1.03887
I0428 19:31:44.944442 22652 solver.cpp:238]     Train net output #0: loss = 1.03887 (* 1 = 1.03887 loss)
I0428 19:31:44.944449 22652 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:45.010463 22652 solver.cpp:219] Iteration 900 (1514.85 iter/s, 0.0660132s/100 iters), loss = 0.865716
I0428 19:31:45.010491 22652 solver.cpp:238]     Train net output #0: loss = 0.865716 (* 1 = 0.865716 loss)
I0428 19:31:45.010499 22652 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:45.032768 22658 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:45.076695 22652 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:45.077563 22652 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:45.078117 22652 solver.cpp:311] Iteration 1000, loss = 0.897023
I0428 19:31:45.078135 22652 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:45.152881 22659 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:45.153460 22652 solver.cpp:398]     Test net output #0: accuracy = 0.6683
I0428 19:31:45.153483 22652 solver.cpp:398]     Test net output #1: loss = 0.867747 (* 1 = 0.867747 loss)
I0428 19:31:45.153491 22652 solver.cpp:316] Optimization Done.
I0428 19:31:45.153494 22652 caffe.cpp:259] Optimization Done.
