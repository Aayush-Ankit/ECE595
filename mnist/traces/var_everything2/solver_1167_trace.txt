I0428 20:11:47.889529 32143 caffe.cpp:218] Using GPUs 0
I0428 20:11:47.926755 32143 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:48.436175 32143 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1167.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:48.436319 32143 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1167.prototxt
I0428 20:11:48.436738 32143 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:48.436756 32143 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:48.436867 32143 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:48.436954 32143 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:48.437053 32143 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:48.437079 32143 net.cpp:86] Creating Layer mnist
I0428 20:11:48.437086 32143 net.cpp:382] mnist -> data
I0428 20:11:48.437109 32143 net.cpp:382] mnist -> label
I0428 20:11:48.438204 32143 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:48.440696 32143 net.cpp:124] Setting up mnist
I0428 20:11:48.440712 32143 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:48.440721 32143 net.cpp:131] Top shape: 64 (64)
I0428 20:11:48.440723 32143 net.cpp:139] Memory required for data: 200960
I0428 20:11:48.440731 32143 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:48.440747 32143 net.cpp:86] Creating Layer conv0
I0428 20:11:48.440768 32143 net.cpp:408] conv0 <- data
I0428 20:11:48.440783 32143 net.cpp:382] conv0 -> conv0
I0428 20:11:48.728682 32143 net.cpp:124] Setting up conv0
I0428 20:11:48.728714 32143 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:48.728719 32143 net.cpp:139] Memory required for data: 3887360
I0428 20:11:48.728737 32143 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:48.728751 32143 net.cpp:86] Creating Layer pool0
I0428 20:11:48.728757 32143 net.cpp:408] pool0 <- conv0
I0428 20:11:48.728763 32143 net.cpp:382] pool0 -> pool0
I0428 20:11:48.728824 32143 net.cpp:124] Setting up pool0
I0428 20:11:48.728833 32143 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:48.728837 32143 net.cpp:139] Memory required for data: 4808960
I0428 20:11:48.728842 32143 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:48.728854 32143 net.cpp:86] Creating Layer conv1
I0428 20:11:48.728860 32143 net.cpp:408] conv1 <- pool0
I0428 20:11:48.728866 32143 net.cpp:382] conv1 -> conv1
I0428 20:11:48.731215 32143 net.cpp:124] Setting up conv1
I0428 20:11:48.731232 32143 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:48.731236 32143 net.cpp:139] Memory required for data: 5628160
I0428 20:11:48.731247 32143 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:48.731256 32143 net.cpp:86] Creating Layer pool1
I0428 20:11:48.731261 32143 net.cpp:408] pool1 <- conv1
I0428 20:11:48.731266 32143 net.cpp:382] pool1 -> pool1
I0428 20:11:48.731313 32143 net.cpp:124] Setting up pool1
I0428 20:11:48.731322 32143 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:48.731325 32143 net.cpp:139] Memory required for data: 5832960
I0428 20:11:48.731328 32143 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:48.731338 32143 net.cpp:86] Creating Layer ip1
I0428 20:11:48.731340 32143 net.cpp:408] ip1 <- pool1
I0428 20:11:48.731346 32143 net.cpp:382] ip1 -> ip1
I0428 20:11:48.731739 32143 net.cpp:124] Setting up ip1
I0428 20:11:48.731747 32143 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:48.731751 32143 net.cpp:139] Memory required for data: 5845760
I0428 20:11:48.731760 32143 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:48.731765 32143 net.cpp:86] Creating Layer relu1
I0428 20:11:48.731770 32143 net.cpp:408] relu1 <- ip1
I0428 20:11:48.731775 32143 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:48.731973 32143 net.cpp:124] Setting up relu1
I0428 20:11:48.731983 32143 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:48.731987 32143 net.cpp:139] Memory required for data: 5858560
I0428 20:11:48.731990 32143 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:48.731998 32143 net.cpp:86] Creating Layer ip2
I0428 20:11:48.732002 32143 net.cpp:408] ip2 <- ip1
I0428 20:11:48.732007 32143 net.cpp:382] ip2 -> ip2
I0428 20:11:48.733160 32143 net.cpp:124] Setting up ip2
I0428 20:11:48.733175 32143 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:48.733178 32143 net.cpp:139] Memory required for data: 5871360
I0428 20:11:48.733186 32143 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:48.733194 32143 net.cpp:86] Creating Layer relu2
I0428 20:11:48.733198 32143 net.cpp:408] relu2 <- ip2
I0428 20:11:48.733207 32143 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:48.734060 32143 net.cpp:124] Setting up relu2
I0428 20:11:48.734074 32143 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:11:48.734078 32143 net.cpp:139] Memory required for data: 5884160
I0428 20:11:48.734082 32143 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:48.734091 32143 net.cpp:86] Creating Layer ip3
I0428 20:11:48.734094 32143 net.cpp:408] ip3 <- ip2
I0428 20:11:48.734102 32143 net.cpp:382] ip3 -> ip3
I0428 20:11:48.734221 32143 net.cpp:124] Setting up ip3
I0428 20:11:48.734230 32143 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:48.734233 32143 net.cpp:139] Memory required for data: 5886720
I0428 20:11:48.734244 32143 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:48.734251 32143 net.cpp:86] Creating Layer relu3
I0428 20:11:48.734256 32143 net.cpp:408] relu3 <- ip3
I0428 20:11:48.734261 32143 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:48.734458 32143 net.cpp:124] Setting up relu3
I0428 20:11:48.734468 32143 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:48.734472 32143 net.cpp:139] Memory required for data: 5889280
I0428 20:11:48.734475 32143 layer_factory.hpp:77] Creating layer loss
I0428 20:11:48.734483 32143 net.cpp:86] Creating Layer loss
I0428 20:11:48.734495 32143 net.cpp:408] loss <- ip3
I0428 20:11:48.734500 32143 net.cpp:408] loss <- label
I0428 20:11:48.734506 32143 net.cpp:382] loss -> loss
I0428 20:11:48.734527 32143 layer_factory.hpp:77] Creating layer loss
I0428 20:11:48.734802 32143 net.cpp:124] Setting up loss
I0428 20:11:48.734813 32143 net.cpp:131] Top shape: (1)
I0428 20:11:48.734817 32143 net.cpp:134]     with loss weight 1
I0428 20:11:48.734833 32143 net.cpp:139] Memory required for data: 5889284
I0428 20:11:48.734838 32143 net.cpp:200] loss needs backward computation.
I0428 20:11:48.734841 32143 net.cpp:200] relu3 needs backward computation.
I0428 20:11:48.734844 32143 net.cpp:200] ip3 needs backward computation.
I0428 20:11:48.734848 32143 net.cpp:200] relu2 needs backward computation.
I0428 20:11:48.734853 32143 net.cpp:200] ip2 needs backward computation.
I0428 20:11:48.734855 32143 net.cpp:200] relu1 needs backward computation.
I0428 20:11:48.734858 32143 net.cpp:200] ip1 needs backward computation.
I0428 20:11:48.734863 32143 net.cpp:200] pool1 needs backward computation.
I0428 20:11:48.734866 32143 net.cpp:200] conv1 needs backward computation.
I0428 20:11:48.734869 32143 net.cpp:200] pool0 needs backward computation.
I0428 20:11:48.734874 32143 net.cpp:200] conv0 needs backward computation.
I0428 20:11:48.734877 32143 net.cpp:202] mnist does not need backward computation.
I0428 20:11:48.734881 32143 net.cpp:244] This network produces output loss
I0428 20:11:48.734891 32143 net.cpp:257] Network initialization done.
I0428 20:11:48.735270 32143 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1167.prototxt
I0428 20:11:48.735301 32143 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:48.735406 32143 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:48.735502 32143 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:48.735554 32143 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:48.735569 32143 net.cpp:86] Creating Layer mnist
I0428 20:11:48.735574 32143 net.cpp:382] mnist -> data
I0428 20:11:48.735584 32143 net.cpp:382] mnist -> label
I0428 20:11:48.735685 32143 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:48.737886 32143 net.cpp:124] Setting up mnist
I0428 20:11:48.737902 32143 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:48.737908 32143 net.cpp:131] Top shape: 100 (100)
I0428 20:11:48.737912 32143 net.cpp:139] Memory required for data: 314000
I0428 20:11:48.737917 32143 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:48.737926 32143 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:48.737929 32143 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:48.737936 32143 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:48.737943 32143 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:48.738001 32143 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:48.738019 32143 net.cpp:131] Top shape: 100 (100)
I0428 20:11:48.738023 32143 net.cpp:131] Top shape: 100 (100)
I0428 20:11:48.738028 32143 net.cpp:139] Memory required for data: 314800
I0428 20:11:48.738031 32143 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:48.738041 32143 net.cpp:86] Creating Layer conv0
I0428 20:11:48.738046 32143 net.cpp:408] conv0 <- data
I0428 20:11:48.738052 32143 net.cpp:382] conv0 -> conv0
I0428 20:11:48.739953 32143 net.cpp:124] Setting up conv0
I0428 20:11:48.739969 32143 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:48.739974 32143 net.cpp:139] Memory required for data: 6074800
I0428 20:11:48.739984 32143 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:48.739991 32143 net.cpp:86] Creating Layer pool0
I0428 20:11:48.739996 32143 net.cpp:408] pool0 <- conv0
I0428 20:11:48.740001 32143 net.cpp:382] pool0 -> pool0
I0428 20:11:48.740043 32143 net.cpp:124] Setting up pool0
I0428 20:11:48.740051 32143 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:48.740056 32143 net.cpp:139] Memory required for data: 7514800
I0428 20:11:48.740059 32143 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:48.740069 32143 net.cpp:86] Creating Layer conv1
I0428 20:11:48.740074 32143 net.cpp:408] conv1 <- pool0
I0428 20:11:48.740080 32143 net.cpp:382] conv1 -> conv1
I0428 20:11:48.741987 32143 net.cpp:124] Setting up conv1
I0428 20:11:48.742004 32143 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:48.742009 32143 net.cpp:139] Memory required for data: 8794800
I0428 20:11:48.742019 32143 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:48.742027 32143 net.cpp:86] Creating Layer pool1
I0428 20:11:48.742032 32143 net.cpp:408] pool1 <- conv1
I0428 20:11:48.742038 32143 net.cpp:382] pool1 -> pool1
I0428 20:11:48.742089 32143 net.cpp:124] Setting up pool1
I0428 20:11:48.742110 32143 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:48.742115 32143 net.cpp:139] Memory required for data: 9114800
I0428 20:11:48.742127 32143 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:48.742135 32143 net.cpp:86] Creating Layer ip1
I0428 20:11:48.742138 32143 net.cpp:408] ip1 <- pool1
I0428 20:11:48.742144 32143 net.cpp:382] ip1 -> ip1
I0428 20:11:48.742554 32143 net.cpp:124] Setting up ip1
I0428 20:11:48.742564 32143 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:48.742579 32143 net.cpp:139] Memory required for data: 9134800
I0428 20:11:48.742589 32143 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:48.742595 32143 net.cpp:86] Creating Layer relu1
I0428 20:11:48.742599 32143 net.cpp:408] relu1 <- ip1
I0428 20:11:48.742604 32143 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:48.742867 32143 net.cpp:124] Setting up relu1
I0428 20:11:48.742878 32143 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:48.742883 32143 net.cpp:139] Memory required for data: 9154800
I0428 20:11:48.742887 32143 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:48.742895 32143 net.cpp:86] Creating Layer ip2
I0428 20:11:48.742899 32143 net.cpp:408] ip2 <- ip1
I0428 20:11:48.742907 32143 net.cpp:382] ip2 -> ip2
I0428 20:11:48.743046 32143 net.cpp:124] Setting up ip2
I0428 20:11:48.743055 32143 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:48.743060 32143 net.cpp:139] Memory required for data: 9174800
I0428 20:11:48.743067 32143 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:48.743073 32143 net.cpp:86] Creating Layer relu2
I0428 20:11:48.743077 32143 net.cpp:408] relu2 <- ip2
I0428 20:11:48.743083 32143 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:48.743258 32143 net.cpp:124] Setting up relu2
I0428 20:11:48.743268 32143 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:11:48.743271 32143 net.cpp:139] Memory required for data: 9194800
I0428 20:11:48.743275 32143 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:48.743283 32143 net.cpp:86] Creating Layer ip3
I0428 20:11:48.743286 32143 net.cpp:408] ip3 <- ip2
I0428 20:11:48.743293 32143 net.cpp:382] ip3 -> ip3
I0428 20:11:48.743408 32143 net.cpp:124] Setting up ip3
I0428 20:11:48.743417 32143 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:48.743420 32143 net.cpp:139] Memory required for data: 9198800
I0428 20:11:48.743429 32143 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:48.743436 32143 net.cpp:86] Creating Layer relu3
I0428 20:11:48.743439 32143 net.cpp:408] relu3 <- ip3
I0428 20:11:48.743444 32143 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:48.744366 32143 net.cpp:124] Setting up relu3
I0428 20:11:48.744382 32143 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:48.744386 32143 net.cpp:139] Memory required for data: 9202800
I0428 20:11:48.744390 32143 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:48.744397 32143 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:48.744401 32143 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:48.744408 32143 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:48.744415 32143 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:48.744472 32143 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:48.744480 32143 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:48.744484 32143 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:48.744488 32143 net.cpp:139] Memory required for data: 9210800
I0428 20:11:48.744491 32143 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:48.744498 32143 net.cpp:86] Creating Layer accuracy
I0428 20:11:48.744501 32143 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:48.744508 32143 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:48.744513 32143 net.cpp:382] accuracy -> accuracy
I0428 20:11:48.744524 32143 net.cpp:124] Setting up accuracy
I0428 20:11:48.744529 32143 net.cpp:131] Top shape: (1)
I0428 20:11:48.744532 32143 net.cpp:139] Memory required for data: 9210804
I0428 20:11:48.744536 32143 layer_factory.hpp:77] Creating layer loss
I0428 20:11:48.744542 32143 net.cpp:86] Creating Layer loss
I0428 20:11:48.744546 32143 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:48.744550 32143 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:48.744556 32143 net.cpp:382] loss -> loss
I0428 20:11:48.744563 32143 layer_factory.hpp:77] Creating layer loss
I0428 20:11:48.744848 32143 net.cpp:124] Setting up loss
I0428 20:11:48.744860 32143 net.cpp:131] Top shape: (1)
I0428 20:11:48.744865 32143 net.cpp:134]     with loss weight 1
I0428 20:11:48.744885 32143 net.cpp:139] Memory required for data: 9210808
I0428 20:11:48.744890 32143 net.cpp:200] loss needs backward computation.
I0428 20:11:48.744895 32143 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:48.744899 32143 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:48.744904 32143 net.cpp:200] relu3 needs backward computation.
I0428 20:11:48.744918 32143 net.cpp:200] ip3 needs backward computation.
I0428 20:11:48.744923 32143 net.cpp:200] relu2 needs backward computation.
I0428 20:11:48.744926 32143 net.cpp:200] ip2 needs backward computation.
I0428 20:11:48.744931 32143 net.cpp:200] relu1 needs backward computation.
I0428 20:11:48.744935 32143 net.cpp:200] ip1 needs backward computation.
I0428 20:11:48.744938 32143 net.cpp:200] pool1 needs backward computation.
I0428 20:11:48.744942 32143 net.cpp:200] conv1 needs backward computation.
I0428 20:11:48.744946 32143 net.cpp:200] pool0 needs backward computation.
I0428 20:11:48.744951 32143 net.cpp:200] conv0 needs backward computation.
I0428 20:11:48.744954 32143 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:48.744961 32143 net.cpp:202] mnist does not need backward computation.
I0428 20:11:48.744963 32143 net.cpp:244] This network produces output accuracy
I0428 20:11:48.744967 32143 net.cpp:244] This network produces output loss
I0428 20:11:48.744981 32143 net.cpp:257] Network initialization done.
I0428 20:11:48.745030 32143 solver.cpp:56] Solver scaffolding done.
I0428 20:11:48.745447 32143 caffe.cpp:248] Starting Optimization
I0428 20:11:48.745455 32143 solver.cpp:273] Solving LeNet
I0428 20:11:48.745457 32143 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:48.746446 32143 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:48.753437 32143 blocking_queue.cpp:49] Waiting for data
I0428 20:11:48.819769 32150 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:48.820386 32143 solver.cpp:398]     Test net output #0: accuracy = 0.1128
I0428 20:11:48.820406 32143 solver.cpp:398]     Test net output #1: loss = 2.32492 (* 1 = 2.32492 loss)
I0428 20:11:48.824156 32143 solver.cpp:219] Iteration 0 (0 iter/s, 0.0786698s/100 iters), loss = 2.28309
I0428 20:11:48.824182 32143 solver.cpp:238]     Train net output #0: loss = 2.28309 (* 1 = 2.28309 loss)
I0428 20:11:48.824193 32143 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:48.950803 32143 solver.cpp:219] Iteration 100 (789.825 iter/s, 0.12661s/100 iters), loss = 1.29797
I0428 20:11:48.950842 32143 solver.cpp:238]     Train net output #0: loss = 1.29797 (* 1 = 1.29797 loss)
I0428 20:11:48.950848 32143 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:49.071125 32143 solver.cpp:219] Iteration 200 (831.343 iter/s, 0.120287s/100 iters), loss = 1.42763
I0428 20:11:49.071151 32143 solver.cpp:238]     Train net output #0: loss = 1.42763 (* 1 = 1.42763 loss)
I0428 20:11:49.071156 32143 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:49.191510 32143 solver.cpp:219] Iteration 300 (830.912 iter/s, 0.12035s/100 iters), loss = 1.30843
I0428 20:11:49.191548 32143 solver.cpp:238]     Train net output #0: loss = 1.30843 (* 1 = 1.30843 loss)
I0428 20:11:49.191555 32143 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:49.311761 32143 solver.cpp:219] Iteration 400 (831.831 iter/s, 0.120217s/100 iters), loss = 0.993232
I0428 20:11:49.311800 32143 solver.cpp:238]     Train net output #0: loss = 0.993232 (* 1 = 0.993232 loss)
I0428 20:11:49.311821 32143 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:49.431092 32143 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:49.507575 32150 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:49.508231 32143 solver.cpp:398]     Test net output #0: accuracy = 0.4995
I0428 20:11:49.508266 32143 solver.cpp:398]     Test net output #1: loss = 1.19717 (* 1 = 1.19717 loss)
I0428 20:11:49.509522 32143 solver.cpp:219] Iteration 500 (505.76 iter/s, 0.197722s/100 iters), loss = 1.09076
I0428 20:11:49.509582 32143 solver.cpp:238]     Train net output #0: loss = 1.09076 (* 1 = 1.09076 loss)
I0428 20:11:49.509620 32143 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:49.631778 32143 solver.cpp:219] Iteration 600 (818.338 iter/s, 0.122199s/100 iters), loss = 1.22991
I0428 20:11:49.631816 32143 solver.cpp:238]     Train net output #0: loss = 1.22991 (* 1 = 1.22991 loss)
I0428 20:11:49.631822 32143 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:49.751271 32143 solver.cpp:219] Iteration 700 (837.216 iter/s, 0.119443s/100 iters), loss = 1.30308
I0428 20:11:49.751294 32143 solver.cpp:238]     Train net output #0: loss = 1.30308 (* 1 = 1.30308 loss)
I0428 20:11:49.751301 32143 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:49.871338 32143 solver.cpp:219] Iteration 800 (833.102 iter/s, 0.120033s/100 iters), loss = 1.23211
I0428 20:11:49.871361 32143 solver.cpp:238]     Train net output #0: loss = 1.23211 (* 1 = 1.23211 loss)
I0428 20:11:49.871366 32143 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:49.991482 32143 solver.cpp:219] Iteration 900 (832.683 iter/s, 0.120094s/100 iters), loss = 1.29578
I0428 20:11:49.991519 32143 solver.cpp:238]     Train net output #0: loss = 1.29578 (* 1 = 1.29578 loss)
I0428 20:11:49.991525 32143 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:50.031400 32149 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:50.111362 32143 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:50.113266 32143 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:50.114362 32143 solver.cpp:311] Iteration 1000, loss = 1.06156
I0428 20:11:50.114377 32143 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:50.190639 32150 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:50.191293 32143 solver.cpp:398]     Test net output #0: accuracy = 0.5999
I0428 20:11:50.191313 32143 solver.cpp:398]     Test net output #1: loss = 0.958517 (* 1 = 0.958517 loss)
I0428 20:11:50.191336 32143 solver.cpp:316] Optimization Done.
I0428 20:11:50.191339 32143 caffe.cpp:259] Optimization Done.
