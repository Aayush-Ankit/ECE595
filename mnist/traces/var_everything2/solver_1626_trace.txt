I0428 20:35:46.354987  4698 caffe.cpp:218] Using GPUs 0
I0428 20:35:46.393752  4698 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:35:46.906098  4698 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1626.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:35:46.906244  4698 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1626.prototxt
I0428 20:35:46.906667  4698 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:35:46.906687  4698 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:35:46.906790  4698 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:46.906872  4698 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:46.906975  4698 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:35:46.906998  4698 net.cpp:86] Creating Layer mnist
I0428 20:35:46.907006  4698 net.cpp:382] mnist -> data
I0428 20:35:46.907030  4698 net.cpp:382] mnist -> label
I0428 20:35:46.908133  4698 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:35:46.910606  4698 net.cpp:124] Setting up mnist
I0428 20:35:46.910625  4698 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:35:46.910631  4698 net.cpp:131] Top shape: 64 (64)
I0428 20:35:46.910635  4698 net.cpp:139] Memory required for data: 200960
I0428 20:35:46.910642  4698 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:46.910661  4698 net.cpp:86] Creating Layer conv0
I0428 20:35:46.910682  4698 net.cpp:408] conv0 <- data
I0428 20:35:46.910694  4698 net.cpp:382] conv0 -> conv0
I0428 20:35:47.192327  4698 net.cpp:124] Setting up conv0
I0428 20:35:47.192354  4698 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:35:47.192359  4698 net.cpp:139] Memory required for data: 14946560
I0428 20:35:47.192374  4698 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:47.192387  4698 net.cpp:86] Creating Layer pool0
I0428 20:35:47.192391  4698 net.cpp:408] pool0 <- conv0
I0428 20:35:47.192396  4698 net.cpp:382] pool0 -> pool0
I0428 20:35:47.192443  4698 net.cpp:124] Setting up pool0
I0428 20:35:47.192450  4698 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:35:47.192452  4698 net.cpp:139] Memory required for data: 18632960
I0428 20:35:47.192456  4698 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:47.192466  4698 net.cpp:86] Creating Layer conv1
I0428 20:35:47.192469  4698 net.cpp:408] conv1 <- pool0
I0428 20:35:47.192474  4698 net.cpp:382] conv1 -> conv1
I0428 20:35:47.195682  4698 net.cpp:124] Setting up conv1
I0428 20:35:47.195695  4698 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:35:47.195699  4698 net.cpp:139] Memory required for data: 19452160
I0428 20:35:47.195708  4698 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:47.195714  4698 net.cpp:86] Creating Layer pool1
I0428 20:35:47.195719  4698 net.cpp:408] pool1 <- conv1
I0428 20:35:47.195724  4698 net.cpp:382] pool1 -> pool1
I0428 20:35:47.195775  4698 net.cpp:124] Setting up pool1
I0428 20:35:47.195780  4698 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:35:47.195783  4698 net.cpp:139] Memory required for data: 19656960
I0428 20:35:47.195785  4698 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:47.195793  4698 net.cpp:86] Creating Layer ip1
I0428 20:35:47.195796  4698 net.cpp:408] ip1 <- pool1
I0428 20:35:47.195801  4698 net.cpp:382] ip1 -> ip1
I0428 20:35:47.196005  4698 net.cpp:124] Setting up ip1
I0428 20:35:47.196013  4698 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:35:47.196017  4698 net.cpp:139] Memory required for data: 19663360
I0428 20:35:47.196023  4698 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:47.196029  4698 net.cpp:86] Creating Layer relu1
I0428 20:35:47.196033  4698 net.cpp:408] relu1 <- ip1
I0428 20:35:47.196036  4698 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:47.196218  4698 net.cpp:124] Setting up relu1
I0428 20:35:47.196228  4698 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:35:47.196231  4698 net.cpp:139] Memory required for data: 19669760
I0428 20:35:47.196234  4698 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:47.196240  4698 net.cpp:86] Creating Layer ip2
I0428 20:35:47.196244  4698 net.cpp:408] ip2 <- ip1
I0428 20:35:47.196249  4698 net.cpp:382] ip2 -> ip2
I0428 20:35:47.196365  4698 net.cpp:124] Setting up ip2
I0428 20:35:47.196372  4698 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:35:47.196375  4698 net.cpp:139] Memory required for data: 19682560
I0428 20:35:47.196380  4698 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:47.196386  4698 net.cpp:86] Creating Layer relu2
I0428 20:35:47.196389  4698 net.cpp:408] relu2 <- ip2
I0428 20:35:47.196393  4698 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:47.197103  4698 net.cpp:124] Setting up relu2
I0428 20:35:47.197130  4698 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:35:47.197134  4698 net.cpp:139] Memory required for data: 19695360
I0428 20:35:47.197137  4698 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:47.197158  4698 net.cpp:86] Creating Layer ip3
I0428 20:35:47.197162  4698 net.cpp:408] ip3 <- ip2
I0428 20:35:47.197167  4698 net.cpp:382] ip3 -> ip3
I0428 20:35:47.197265  4698 net.cpp:124] Setting up ip3
I0428 20:35:47.197273  4698 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:47.197276  4698 net.cpp:139] Memory required for data: 19697920
I0428 20:35:47.197284  4698 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:47.197288  4698 net.cpp:86] Creating Layer relu3
I0428 20:35:47.197307  4698 net.cpp:408] relu3 <- ip3
I0428 20:35:47.197341  4698 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:47.197494  4698 net.cpp:124] Setting up relu3
I0428 20:35:47.197504  4698 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:47.197507  4698 net.cpp:139] Memory required for data: 19700480
I0428 20:35:47.197510  4698 layer_factory.hpp:77] Creating layer loss
I0428 20:35:47.197516  4698 net.cpp:86] Creating Layer loss
I0428 20:35:47.197520  4698 net.cpp:408] loss <- ip3
I0428 20:35:47.197523  4698 net.cpp:408] loss <- label
I0428 20:35:47.197530  4698 net.cpp:382] loss -> loss
I0428 20:35:47.197543  4698 layer_factory.hpp:77] Creating layer loss
I0428 20:35:47.197790  4698 net.cpp:124] Setting up loss
I0428 20:35:47.197798  4698 net.cpp:131] Top shape: (1)
I0428 20:35:47.197803  4698 net.cpp:134]     with loss weight 1
I0428 20:35:47.197815  4698 net.cpp:139] Memory required for data: 19700484
I0428 20:35:47.197819  4698 net.cpp:200] loss needs backward computation.
I0428 20:35:47.197823  4698 net.cpp:200] relu3 needs backward computation.
I0428 20:35:47.197825  4698 net.cpp:200] ip3 needs backward computation.
I0428 20:35:47.197829  4698 net.cpp:200] relu2 needs backward computation.
I0428 20:35:47.197830  4698 net.cpp:200] ip2 needs backward computation.
I0428 20:35:47.197834  4698 net.cpp:200] relu1 needs backward computation.
I0428 20:35:47.197836  4698 net.cpp:200] ip1 needs backward computation.
I0428 20:35:47.197839  4698 net.cpp:200] pool1 needs backward computation.
I0428 20:35:47.197841  4698 net.cpp:200] conv1 needs backward computation.
I0428 20:35:47.197844  4698 net.cpp:200] pool0 needs backward computation.
I0428 20:35:47.197847  4698 net.cpp:200] conv0 needs backward computation.
I0428 20:35:47.197850  4698 net.cpp:202] mnist does not need backward computation.
I0428 20:35:47.197854  4698 net.cpp:244] This network produces output loss
I0428 20:35:47.197861  4698 net.cpp:257] Network initialization done.
I0428 20:35:47.198185  4698 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1626.prototxt
I0428 20:35:47.198211  4698 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:35:47.198302  4698 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:47.198379  4698 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:47.198438  4698 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:35:47.198451  4698 net.cpp:86] Creating Layer mnist
I0428 20:35:47.198470  4698 net.cpp:382] mnist -> data
I0428 20:35:47.198478  4698 net.cpp:382] mnist -> label
I0428 20:35:47.198561  4698 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:35:47.199807  4698 net.cpp:124] Setting up mnist
I0428 20:35:47.199851  4698 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:35:47.199856  4698 net.cpp:131] Top shape: 100 (100)
I0428 20:35:47.199873  4698 net.cpp:139] Memory required for data: 314000
I0428 20:35:47.199877  4698 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:35:47.199884  4698 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:35:47.199887  4698 net.cpp:408] label_mnist_1_split <- label
I0428 20:35:47.199893  4698 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:35:47.199900  4698 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:35:47.199945  4698 net.cpp:124] Setting up label_mnist_1_split
I0428 20:35:47.199951  4698 net.cpp:131] Top shape: 100 (100)
I0428 20:35:47.199955  4698 net.cpp:131] Top shape: 100 (100)
I0428 20:35:47.199957  4698 net.cpp:139] Memory required for data: 314800
I0428 20:35:47.199960  4698 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:47.199968  4698 net.cpp:86] Creating Layer conv0
I0428 20:35:47.199971  4698 net.cpp:408] conv0 <- data
I0428 20:35:47.199976  4698 net.cpp:382] conv0 -> conv0
I0428 20:35:47.201808  4698 net.cpp:124] Setting up conv0
I0428 20:35:47.201838  4698 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:35:47.201843  4698 net.cpp:139] Memory required for data: 23354800
I0428 20:35:47.201851  4698 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:47.201858  4698 net.cpp:86] Creating Layer pool0
I0428 20:35:47.201863  4698 net.cpp:408] pool0 <- conv0
I0428 20:35:47.201867  4698 net.cpp:382] pool0 -> pool0
I0428 20:35:47.201903  4698 net.cpp:124] Setting up pool0
I0428 20:35:47.201910  4698 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:35:47.201912  4698 net.cpp:139] Memory required for data: 29114800
I0428 20:35:47.201915  4698 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:47.201923  4698 net.cpp:86] Creating Layer conv1
I0428 20:35:47.201926  4698 net.cpp:408] conv1 <- pool0
I0428 20:35:47.201931  4698 net.cpp:382] conv1 -> conv1
I0428 20:35:47.204906  4698 net.cpp:124] Setting up conv1
I0428 20:35:47.204919  4698 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:35:47.204923  4698 net.cpp:139] Memory required for data: 30394800
I0428 20:35:47.204931  4698 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:47.204953  4698 net.cpp:86] Creating Layer pool1
I0428 20:35:47.204957  4698 net.cpp:408] pool1 <- conv1
I0428 20:35:47.204962  4698 net.cpp:382] pool1 -> pool1
I0428 20:35:47.205013  4698 net.cpp:124] Setting up pool1
I0428 20:35:47.205018  4698 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:35:47.205021  4698 net.cpp:139] Memory required for data: 30714800
I0428 20:35:47.205024  4698 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:47.205030  4698 net.cpp:86] Creating Layer ip1
I0428 20:35:47.205034  4698 net.cpp:408] ip1 <- pool1
I0428 20:35:47.205039  4698 net.cpp:382] ip1 -> ip1
I0428 20:35:47.205248  4698 net.cpp:124] Setting up ip1
I0428 20:35:47.205268  4698 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:35:47.205272  4698 net.cpp:139] Memory required for data: 30724800
I0428 20:35:47.205279  4698 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:47.205286  4698 net.cpp:86] Creating Layer relu1
I0428 20:35:47.205288  4698 net.cpp:408] relu1 <- ip1
I0428 20:35:47.205308  4698 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:47.205468  4698 net.cpp:124] Setting up relu1
I0428 20:35:47.205477  4698 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:35:47.205480  4698 net.cpp:139] Memory required for data: 30734800
I0428 20:35:47.205483  4698 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:47.205489  4698 net.cpp:86] Creating Layer ip2
I0428 20:35:47.205492  4698 net.cpp:408] ip2 <- ip1
I0428 20:35:47.205497  4698 net.cpp:382] ip2 -> ip2
I0428 20:35:47.205615  4698 net.cpp:124] Setting up ip2
I0428 20:35:47.205621  4698 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:35:47.205624  4698 net.cpp:139] Memory required for data: 30754800
I0428 20:35:47.205631  4698 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:47.205636  4698 net.cpp:86] Creating Layer relu2
I0428 20:35:47.205638  4698 net.cpp:408] relu2 <- ip2
I0428 20:35:47.205642  4698 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:47.205801  4698 net.cpp:124] Setting up relu2
I0428 20:35:47.205811  4698 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:35:47.205813  4698 net.cpp:139] Memory required for data: 30774800
I0428 20:35:47.205816  4698 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:47.205821  4698 net.cpp:86] Creating Layer ip3
I0428 20:35:47.205824  4698 net.cpp:408] ip3 <- ip2
I0428 20:35:47.205829  4698 net.cpp:382] ip3 -> ip3
I0428 20:35:47.205936  4698 net.cpp:124] Setting up ip3
I0428 20:35:47.205943  4698 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:47.205946  4698 net.cpp:139] Memory required for data: 30778800
I0428 20:35:47.205953  4698 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:47.205958  4698 net.cpp:86] Creating Layer relu3
I0428 20:35:47.205961  4698 net.cpp:408] relu3 <- ip3
I0428 20:35:47.205965  4698 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:47.206753  4698 net.cpp:124] Setting up relu3
I0428 20:35:47.206766  4698 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:47.206775  4698 net.cpp:139] Memory required for data: 30782800
I0428 20:35:47.206779  4698 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:35:47.206785  4698 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:35:47.206794  4698 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:35:47.206799  4698 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:35:47.206804  4698 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:35:47.206840  4698 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:35:47.206846  4698 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:47.206851  4698 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:47.206853  4698 net.cpp:139] Memory required for data: 30790800
I0428 20:35:47.206856  4698 layer_factory.hpp:77] Creating layer accuracy
I0428 20:35:47.206861  4698 net.cpp:86] Creating Layer accuracy
I0428 20:35:47.206864  4698 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:35:47.206868  4698 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:35:47.206872  4698 net.cpp:382] accuracy -> accuracy
I0428 20:35:47.206878  4698 net.cpp:124] Setting up accuracy
I0428 20:35:47.206882  4698 net.cpp:131] Top shape: (1)
I0428 20:35:47.206885  4698 net.cpp:139] Memory required for data: 30790804
I0428 20:35:47.206888  4698 layer_factory.hpp:77] Creating layer loss
I0428 20:35:47.206892  4698 net.cpp:86] Creating Layer loss
I0428 20:35:47.206900  4698 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:35:47.206904  4698 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:35:47.206908  4698 net.cpp:382] loss -> loss
I0428 20:35:47.206914  4698 layer_factory.hpp:77] Creating layer loss
I0428 20:35:47.207120  4698 net.cpp:124] Setting up loss
I0428 20:35:47.207129  4698 net.cpp:131] Top shape: (1)
I0428 20:35:47.207132  4698 net.cpp:134]     with loss weight 1
I0428 20:35:47.207149  4698 net.cpp:139] Memory required for data: 30790808
I0428 20:35:47.207152  4698 net.cpp:200] loss needs backward computation.
I0428 20:35:47.207156  4698 net.cpp:202] accuracy does not need backward computation.
I0428 20:35:47.207175  4698 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:35:47.207178  4698 net.cpp:200] relu3 needs backward computation.
I0428 20:35:47.207182  4698 net.cpp:200] ip3 needs backward computation.
I0428 20:35:47.207185  4698 net.cpp:200] relu2 needs backward computation.
I0428 20:35:47.207188  4698 net.cpp:200] ip2 needs backward computation.
I0428 20:35:47.207191  4698 net.cpp:200] relu1 needs backward computation.
I0428 20:35:47.207195  4698 net.cpp:200] ip1 needs backward computation.
I0428 20:35:47.207197  4698 net.cpp:200] pool1 needs backward computation.
I0428 20:35:47.207201  4698 net.cpp:200] conv1 needs backward computation.
I0428 20:35:47.207203  4698 net.cpp:200] pool0 needs backward computation.
I0428 20:35:47.207207  4698 net.cpp:200] conv0 needs backward computation.
I0428 20:35:47.207216  4698 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:35:47.207221  4698 net.cpp:202] mnist does not need backward computation.
I0428 20:35:47.207223  4698 net.cpp:244] This network produces output accuracy
I0428 20:35:47.207227  4698 net.cpp:244] This network produces output loss
I0428 20:35:47.207238  4698 net.cpp:257] Network initialization done.
I0428 20:35:47.207278  4698 solver.cpp:56] Solver scaffolding done.
I0428 20:35:47.207613  4698 caffe.cpp:248] Starting Optimization
I0428 20:35:47.207619  4698 solver.cpp:273] Solving LeNet
I0428 20:35:47.207622  4698 solver.cpp:274] Learning Rate Policy: inv
I0428 20:35:47.208461  4698 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:35:47.266630  4698 blocking_queue.cpp:49] Waiting for data
I0428 20:35:47.319654  4705 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:47.321444  4698 solver.cpp:398]     Test net output #0: accuracy = 0.1094
I0428 20:35:47.321478  4698 solver.cpp:398]     Test net output #1: loss = 2.31592 (* 1 = 2.31592 loss)
I0428 20:35:47.327203  4698 solver.cpp:219] Iteration 0 (0 iter/s, 0.119551s/100 iters), loss = 2.31321
I0428 20:35:47.327240  4698 solver.cpp:238]     Train net output #0: loss = 2.31321 (* 1 = 2.31321 loss)
I0428 20:35:47.327250  4698 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:35:47.557497  4698 solver.cpp:219] Iteration 100 (434.3 iter/s, 0.230256s/100 iters), loss = 0.416781
I0428 20:35:47.557555  4698 solver.cpp:238]     Train net output #0: loss = 0.416781 (* 1 = 0.416781 loss)
I0428 20:35:47.557561  4698 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:35:47.786707  4698 solver.cpp:219] Iteration 200 (436.421 iter/s, 0.229136s/100 iters), loss = 0.188731
I0428 20:35:47.786751  4698 solver.cpp:238]     Train net output #0: loss = 0.188731 (* 1 = 0.188731 loss)
I0428 20:35:47.786756  4698 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:35:48.017400  4698 solver.cpp:219] Iteration 300 (433.588 iter/s, 0.230633s/100 iters), loss = 0.284504
I0428 20:35:48.017441  4698 solver.cpp:238]     Train net output #0: loss = 0.284504 (* 1 = 0.284504 loss)
I0428 20:35:48.017446  4698 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:35:48.248708  4698 solver.cpp:219] Iteration 400 (432.398 iter/s, 0.231268s/100 iters), loss = 0.0927794
I0428 20:35:48.248752  4698 solver.cpp:238]     Train net output #0: loss = 0.0927794 (* 1 = 0.0927794 loss)
I0428 20:35:48.248759  4698 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:35:48.479377  4698 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:35:48.587363  4705 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:48.591362  4698 solver.cpp:398]     Test net output #0: accuracy = 0.9653
I0428 20:35:48.591399  4698 solver.cpp:398]     Test net output #1: loss = 0.116594 (* 1 = 0.116594 loss)
I0428 20:35:48.593655  4698 solver.cpp:219] Iteration 500 (289.952 iter/s, 0.344884s/100 iters), loss = 0.0931434
I0428 20:35:48.593708  4698 solver.cpp:238]     Train net output #0: loss = 0.0931433 (* 1 = 0.0931433 loss)
I0428 20:35:48.593727  4698 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:35:48.830092  4698 solver.cpp:219] Iteration 600 (423.04 iter/s, 0.236384s/100 iters), loss = 0.0753474
I0428 20:35:48.830134  4698 solver.cpp:238]     Train net output #0: loss = 0.0753473 (* 1 = 0.0753473 loss)
I0428 20:35:48.830142  4698 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:35:49.069334  4698 solver.cpp:219] Iteration 700 (418.065 iter/s, 0.239197s/100 iters), loss = 0.0655331
I0428 20:35:49.069376  4698 solver.cpp:238]     Train net output #0: loss = 0.065533 (* 1 = 0.065533 loss)
I0428 20:35:49.069382  4698 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:35:49.314684  4698 solver.cpp:219] Iteration 800 (407.658 iter/s, 0.245303s/100 iters), loss = 0.280694
I0428 20:35:49.314724  4698 solver.cpp:238]     Train net output #0: loss = 0.280694 (* 1 = 0.280694 loss)
I0428 20:35:49.314734  4698 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:35:49.556627  4698 solver.cpp:219] Iteration 900 (413.416 iter/s, 0.241887s/100 iters), loss = 0.0733087
I0428 20:35:49.556668  4698 solver.cpp:238]     Train net output #0: loss = 0.0733086 (* 1 = 0.0733086 loss)
I0428 20:35:49.556674  4698 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:35:49.635532  4704 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:49.791131  4698 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:35:49.795346  4698 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:35:49.797299  4698 solver.cpp:311] Iteration 1000, loss = 0.0804456
I0428 20:35:49.797317  4698 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:35:49.904736  4705 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:49.908824  4698 solver.cpp:398]     Test net output #0: accuracy = 0.9768
I0428 20:35:49.908859  4698 solver.cpp:398]     Test net output #1: loss = 0.0692631 (* 1 = 0.0692631 loss)
I0428 20:35:49.908864  4698 solver.cpp:316] Optimization Done.
I0428 20:35:49.908866  4698 caffe.cpp:259] Optimization Done.
