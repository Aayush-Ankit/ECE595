I0428 20:00:26.143347 29477 caffe.cpp:218] Using GPUs 0
I0428 20:00:26.180513 29477 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:26.692783 29477 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test876.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:26.692935 29477 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test876.prototxt
I0428 20:00:26.693351 29477 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:26.693372 29477 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:26.693473 29477 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:26.693554 29477 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:26.693653 29477 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:26.693676 29477 net.cpp:86] Creating Layer mnist
I0428 20:00:26.693686 29477 net.cpp:382] mnist -> data
I0428 20:00:26.693708 29477 net.cpp:382] mnist -> label
I0428 20:00:26.694809 29477 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:26.697269 29477 net.cpp:124] Setting up mnist
I0428 20:00:26.697288 29477 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:26.697295 29477 net.cpp:131] Top shape: 64 (64)
I0428 20:00:26.697300 29477 net.cpp:139] Memory required for data: 200960
I0428 20:00:26.697307 29477 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:26.697322 29477 net.cpp:86] Creating Layer conv0
I0428 20:00:26.697342 29477 net.cpp:408] conv0 <- data
I0428 20:00:26.697356 29477 net.cpp:382] conv0 -> conv0
I0428 20:00:26.974514 29477 net.cpp:124] Setting up conv0
I0428 20:00:26.974541 29477 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:26.974545 29477 net.cpp:139] Memory required for data: 1675520
I0428 20:00:26.974560 29477 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:26.974571 29477 net.cpp:86] Creating Layer pool0
I0428 20:00:26.974575 29477 net.cpp:408] pool0 <- conv0
I0428 20:00:26.974581 29477 net.cpp:382] pool0 -> pool0
I0428 20:00:26.974639 29477 net.cpp:124] Setting up pool0
I0428 20:00:26.974645 29477 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:26.974648 29477 net.cpp:139] Memory required for data: 2044160
I0428 20:00:26.974651 29477 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:26.974660 29477 net.cpp:86] Creating Layer conv1
I0428 20:00:26.974664 29477 net.cpp:408] conv1 <- pool0
I0428 20:00:26.974668 29477 net.cpp:382] conv1 -> conv1
I0428 20:00:26.977450 29477 net.cpp:124] Setting up conv1
I0428 20:00:26.977480 29477 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:26.977484 29477 net.cpp:139] Memory required for data: 2453760
I0428 20:00:26.977493 29477 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:26.977500 29477 net.cpp:86] Creating Layer pool1
I0428 20:00:26.977504 29477 net.cpp:408] pool1 <- conv1
I0428 20:00:26.977509 29477 net.cpp:382] pool1 -> pool1
I0428 20:00:26.977560 29477 net.cpp:124] Setting up pool1
I0428 20:00:26.977566 29477 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:26.977569 29477 net.cpp:139] Memory required for data: 2556160
I0428 20:00:26.977572 29477 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:26.977578 29477 net.cpp:86] Creating Layer ip1
I0428 20:00:26.977581 29477 net.cpp:408] ip1 <- pool1
I0428 20:00:26.977586 29477 net.cpp:382] ip1 -> ip1
I0428 20:00:26.978574 29477 net.cpp:124] Setting up ip1
I0428 20:00:26.978587 29477 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:26.978605 29477 net.cpp:139] Memory required for data: 2558720
I0428 20:00:26.978615 29477 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:26.978621 29477 net.cpp:86] Creating Layer relu1
I0428 20:00:26.978623 29477 net.cpp:408] relu1 <- ip1
I0428 20:00:26.978628 29477 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:26.978796 29477 net.cpp:124] Setting up relu1
I0428 20:00:26.978806 29477 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:26.978809 29477 net.cpp:139] Memory required for data: 2561280
I0428 20:00:26.978812 29477 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:26.978819 29477 net.cpp:86] Creating Layer ip2
I0428 20:00:26.978822 29477 net.cpp:408] ip2 <- ip1
I0428 20:00:26.978827 29477 net.cpp:382] ip2 -> ip2
I0428 20:00:26.978937 29477 net.cpp:124] Setting up ip2
I0428 20:00:26.978945 29477 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:26.978948 29477 net.cpp:139] Memory required for data: 2574080
I0428 20:00:26.978953 29477 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:26.978960 29477 net.cpp:86] Creating Layer relu2
I0428 20:00:26.978962 29477 net.cpp:408] relu2 <- ip2
I0428 20:00:26.978966 29477 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:26.979724 29477 net.cpp:124] Setting up relu2
I0428 20:00:26.979737 29477 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:00:26.979756 29477 net.cpp:139] Memory required for data: 2586880
I0428 20:00:26.979760 29477 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:26.979768 29477 net.cpp:86] Creating Layer ip3
I0428 20:00:26.979773 29477 net.cpp:408] ip3 <- ip2
I0428 20:00:26.979778 29477 net.cpp:382] ip3 -> ip3
I0428 20:00:26.979890 29477 net.cpp:124] Setting up ip3
I0428 20:00:26.979898 29477 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:26.979902 29477 net.cpp:139] Memory required for data: 2589440
I0428 20:00:26.979909 29477 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:26.979914 29477 net.cpp:86] Creating Layer relu3
I0428 20:00:26.979918 29477 net.cpp:408] relu3 <- ip3
I0428 20:00:26.979921 29477 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:26.980096 29477 net.cpp:124] Setting up relu3
I0428 20:00:26.980105 29477 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:26.980108 29477 net.cpp:139] Memory required for data: 2592000
I0428 20:00:26.980111 29477 layer_factory.hpp:77] Creating layer loss
I0428 20:00:26.980116 29477 net.cpp:86] Creating Layer loss
I0428 20:00:26.980120 29477 net.cpp:408] loss <- ip3
I0428 20:00:26.980124 29477 net.cpp:408] loss <- label
I0428 20:00:26.980129 29477 net.cpp:382] loss -> loss
I0428 20:00:26.980144 29477 layer_factory.hpp:77] Creating layer loss
I0428 20:00:26.980394 29477 net.cpp:124] Setting up loss
I0428 20:00:26.980403 29477 net.cpp:131] Top shape: (1)
I0428 20:00:26.980406 29477 net.cpp:134]     with loss weight 1
I0428 20:00:26.980420 29477 net.cpp:139] Memory required for data: 2592004
I0428 20:00:26.980423 29477 net.cpp:200] loss needs backward computation.
I0428 20:00:26.980427 29477 net.cpp:200] relu3 needs backward computation.
I0428 20:00:26.980430 29477 net.cpp:200] ip3 needs backward computation.
I0428 20:00:26.980433 29477 net.cpp:200] relu2 needs backward computation.
I0428 20:00:26.980437 29477 net.cpp:200] ip2 needs backward computation.
I0428 20:00:26.980439 29477 net.cpp:200] relu1 needs backward computation.
I0428 20:00:26.980443 29477 net.cpp:200] ip1 needs backward computation.
I0428 20:00:26.980445 29477 net.cpp:200] pool1 needs backward computation.
I0428 20:00:26.980448 29477 net.cpp:200] conv1 needs backward computation.
I0428 20:00:26.980451 29477 net.cpp:200] pool0 needs backward computation.
I0428 20:00:26.980454 29477 net.cpp:200] conv0 needs backward computation.
I0428 20:00:26.980458 29477 net.cpp:202] mnist does not need backward computation.
I0428 20:00:26.980460 29477 net.cpp:244] This network produces output loss
I0428 20:00:26.980469 29477 net.cpp:257] Network initialization done.
I0428 20:00:26.980854 29477 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test876.prototxt
I0428 20:00:26.980912 29477 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:26.981003 29477 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:26.981079 29477 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:26.981124 29477 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:26.981137 29477 net.cpp:86] Creating Layer mnist
I0428 20:00:26.981142 29477 net.cpp:382] mnist -> data
I0428 20:00:26.981149 29477 net.cpp:382] mnist -> label
I0428 20:00:26.981231 29477 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:26.983191 29477 net.cpp:124] Setting up mnist
I0428 20:00:26.983233 29477 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:26.983238 29477 net.cpp:131] Top shape: 100 (100)
I0428 20:00:26.983242 29477 net.cpp:139] Memory required for data: 314000
I0428 20:00:26.983245 29477 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:26.983252 29477 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:26.983254 29477 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:26.983259 29477 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:26.983265 29477 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:26.983326 29477 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:26.983332 29477 net.cpp:131] Top shape: 100 (100)
I0428 20:00:26.983337 29477 net.cpp:131] Top shape: 100 (100)
I0428 20:00:26.983342 29477 net.cpp:139] Memory required for data: 314800
I0428 20:00:26.983347 29477 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:26.983357 29477 net.cpp:86] Creating Layer conv0
I0428 20:00:26.983361 29477 net.cpp:408] conv0 <- data
I0428 20:00:26.983366 29477 net.cpp:382] conv0 -> conv0
I0428 20:00:26.985009 29477 net.cpp:124] Setting up conv0
I0428 20:00:26.985023 29477 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:26.985028 29477 net.cpp:139] Memory required for data: 2618800
I0428 20:00:26.985038 29477 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:26.985044 29477 net.cpp:86] Creating Layer pool0
I0428 20:00:26.985047 29477 net.cpp:408] pool0 <- conv0
I0428 20:00:26.985052 29477 net.cpp:382] pool0 -> pool0
I0428 20:00:26.985088 29477 net.cpp:124] Setting up pool0
I0428 20:00:26.985093 29477 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:26.985108 29477 net.cpp:139] Memory required for data: 3194800
I0428 20:00:26.985111 29477 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:26.985119 29477 net.cpp:86] Creating Layer conv1
I0428 20:00:26.985122 29477 net.cpp:408] conv1 <- pool0
I0428 20:00:26.985127 29477 net.cpp:382] conv1 -> conv1
I0428 20:00:26.987362 29477 net.cpp:124] Setting up conv1
I0428 20:00:26.987376 29477 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:26.987380 29477 net.cpp:139] Memory required for data: 3834800
I0428 20:00:26.987388 29477 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:26.987395 29477 net.cpp:86] Creating Layer pool1
I0428 20:00:26.987413 29477 net.cpp:408] pool1 <- conv1
I0428 20:00:26.987426 29477 net.cpp:382] pool1 -> pool1
I0428 20:00:26.987478 29477 net.cpp:124] Setting up pool1
I0428 20:00:26.987484 29477 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:26.987488 29477 net.cpp:139] Memory required for data: 3994800
I0428 20:00:26.987490 29477 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:26.987495 29477 net.cpp:86] Creating Layer ip1
I0428 20:00:26.987499 29477 net.cpp:408] ip1 <- pool1
I0428 20:00:26.987504 29477 net.cpp:382] ip1 -> ip1
I0428 20:00:26.987627 29477 net.cpp:124] Setting up ip1
I0428 20:00:26.987634 29477 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:26.987648 29477 net.cpp:139] Memory required for data: 3998800
I0428 20:00:26.987654 29477 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:26.987659 29477 net.cpp:86] Creating Layer relu1
I0428 20:00:26.987663 29477 net.cpp:408] relu1 <- ip1
I0428 20:00:26.987668 29477 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:26.987936 29477 net.cpp:124] Setting up relu1
I0428 20:00:26.987943 29477 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:26.987947 29477 net.cpp:139] Memory required for data: 4002800
I0428 20:00:26.987951 29477 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:26.987967 29477 net.cpp:86] Creating Layer ip2
I0428 20:00:26.987972 29477 net.cpp:408] ip2 <- ip1
I0428 20:00:26.987993 29477 net.cpp:382] ip2 -> ip2
I0428 20:00:26.988116 29477 net.cpp:124] Setting up ip2
I0428 20:00:26.988123 29477 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:26.988132 29477 net.cpp:139] Memory required for data: 4022800
I0428 20:00:26.988137 29477 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:26.988142 29477 net.cpp:86] Creating Layer relu2
I0428 20:00:26.988145 29477 net.cpp:408] relu2 <- ip2
I0428 20:00:26.988150 29477 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:26.988288 29477 net.cpp:124] Setting up relu2
I0428 20:00:26.988312 29477 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:00:26.988315 29477 net.cpp:139] Memory required for data: 4042800
I0428 20:00:26.988318 29477 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:26.988323 29477 net.cpp:86] Creating Layer ip3
I0428 20:00:26.988327 29477 net.cpp:408] ip3 <- ip2
I0428 20:00:26.988332 29477 net.cpp:382] ip3 -> ip3
I0428 20:00:26.988445 29477 net.cpp:124] Setting up ip3
I0428 20:00:26.988453 29477 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:26.988456 29477 net.cpp:139] Memory required for data: 4046800
I0428 20:00:26.988463 29477 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:26.988469 29477 net.cpp:86] Creating Layer relu3
I0428 20:00:26.988472 29477 net.cpp:408] relu3 <- ip3
I0428 20:00:26.988476 29477 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:26.989279 29477 net.cpp:124] Setting up relu3
I0428 20:00:26.989291 29477 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:26.989295 29477 net.cpp:139] Memory required for data: 4050800
I0428 20:00:26.989298 29477 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:26.989303 29477 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:26.989307 29477 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:26.989312 29477 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:26.989318 29477 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:26.989358 29477 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:26.989364 29477 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:26.989367 29477 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:26.989370 29477 net.cpp:139] Memory required for data: 4058800
I0428 20:00:26.989374 29477 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:26.989378 29477 net.cpp:86] Creating Layer accuracy
I0428 20:00:26.989382 29477 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:26.989385 29477 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:26.989390 29477 net.cpp:382] accuracy -> accuracy
I0428 20:00:26.989398 29477 net.cpp:124] Setting up accuracy
I0428 20:00:26.989401 29477 net.cpp:131] Top shape: (1)
I0428 20:00:26.989403 29477 net.cpp:139] Memory required for data: 4058804
I0428 20:00:26.989406 29477 layer_factory.hpp:77] Creating layer loss
I0428 20:00:26.989425 29477 net.cpp:86] Creating Layer loss
I0428 20:00:26.989428 29477 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:26.989431 29477 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:26.989435 29477 net.cpp:382] loss -> loss
I0428 20:00:26.989441 29477 layer_factory.hpp:77] Creating layer loss
I0428 20:00:26.989672 29477 net.cpp:124] Setting up loss
I0428 20:00:26.989686 29477 net.cpp:131] Top shape: (1)
I0428 20:00:26.989696 29477 net.cpp:134]     with loss weight 1
I0428 20:00:26.989712 29477 net.cpp:139] Memory required for data: 4058808
I0428 20:00:26.989715 29477 net.cpp:200] loss needs backward computation.
I0428 20:00:26.989734 29477 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:26.989739 29477 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:26.989742 29477 net.cpp:200] relu3 needs backward computation.
I0428 20:00:26.989761 29477 net.cpp:200] ip3 needs backward computation.
I0428 20:00:26.989770 29477 net.cpp:200] relu2 needs backward computation.
I0428 20:00:26.989773 29477 net.cpp:200] ip2 needs backward computation.
I0428 20:00:26.989776 29477 net.cpp:200] relu1 needs backward computation.
I0428 20:00:26.989779 29477 net.cpp:200] ip1 needs backward computation.
I0428 20:00:26.989783 29477 net.cpp:200] pool1 needs backward computation.
I0428 20:00:26.989786 29477 net.cpp:200] conv1 needs backward computation.
I0428 20:00:26.989789 29477 net.cpp:200] pool0 needs backward computation.
I0428 20:00:26.989792 29477 net.cpp:200] conv0 needs backward computation.
I0428 20:00:26.989796 29477 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:26.989800 29477 net.cpp:202] mnist does not need backward computation.
I0428 20:00:26.989804 29477 net.cpp:244] This network produces output accuracy
I0428 20:00:26.989807 29477 net.cpp:244] This network produces output loss
I0428 20:00:26.989817 29477 net.cpp:257] Network initialization done.
I0428 20:00:26.989861 29477 solver.cpp:56] Solver scaffolding done.
I0428 20:00:26.990233 29477 caffe.cpp:248] Starting Optimization
I0428 20:00:26.990242 29477 solver.cpp:273] Solving LeNet
I0428 20:00:26.990259 29477 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:26.991003 29477 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:26.994839 29477 blocking_queue.cpp:49] Waiting for data
I0428 20:00:27.065722 29484 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:27.066272 29477 solver.cpp:398]     Test net output #0: accuracy = 0.1112
I0428 20:00:27.066293 29477 solver.cpp:398]     Test net output #1: loss = 2.29872 (* 1 = 2.29872 loss)
I0428 20:00:27.068565 29477 solver.cpp:219] Iteration 0 (0 iter/s, 0.0782807s/100 iters), loss = 2.2994
I0428 20:00:27.068620 29477 solver.cpp:238]     Train net output #0: loss = 2.2994 (* 1 = 2.2994 loss)
I0428 20:00:27.068644 29477 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:27.172897 29477 solver.cpp:219] Iteration 100 (959.062 iter/s, 0.104269s/100 iters), loss = 0.95204
I0428 20:00:27.172924 29477 solver.cpp:238]     Train net output #0: loss = 0.95204 (* 1 = 0.95204 loss)
I0428 20:00:27.172930 29477 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:27.264921 29477 solver.cpp:219] Iteration 200 (1087.1 iter/s, 0.091988s/100 iters), loss = 1.22246
I0428 20:00:27.264961 29477 solver.cpp:238]     Train net output #0: loss = 1.22246 (* 1 = 1.22246 loss)
I0428 20:00:27.264967 29477 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:27.354605 29477 solver.cpp:219] Iteration 300 (1115.64 iter/s, 0.0896348s/100 iters), loss = 0.599761
I0428 20:00:27.354643 29477 solver.cpp:238]     Train net output #0: loss = 0.599761 (* 1 = 0.599761 loss)
I0428 20:00:27.354650 29477 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:27.443519 29477 solver.cpp:219] Iteration 400 (1125.11 iter/s, 0.0888801s/100 iters), loss = 0.265774
I0428 20:00:27.443562 29477 solver.cpp:238]     Train net output #0: loss = 0.265774 (* 1 = 0.265774 loss)
I0428 20:00:27.443569 29477 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:27.531918 29477 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:27.607704 29484 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:27.608223 29477 solver.cpp:398]     Test net output #0: accuracy = 0.9324
I0428 20:00:27.608243 29477 solver.cpp:398]     Test net output #1: loss = 0.221753 (* 1 = 0.221753 loss)
I0428 20:00:27.609221 29477 solver.cpp:219] Iteration 500 (603.7 iter/s, 0.165645s/100 iters), loss = 0.222108
I0428 20:00:27.609275 29477 solver.cpp:238]     Train net output #0: loss = 0.222108 (* 1 = 0.222108 loss)
I0428 20:00:27.609297 29477 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:27.707037 29477 solver.cpp:219] Iteration 600 (1022.98 iter/s, 0.0977539s/100 iters), loss = 0.10191
I0428 20:00:27.707075 29477 solver.cpp:238]     Train net output #0: loss = 0.10191 (* 1 = 0.10191 loss)
I0428 20:00:27.707082 29477 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:27.799355 29477 solver.cpp:219] Iteration 700 (1083.6 iter/s, 0.0922849s/100 iters), loss = 0.303252
I0428 20:00:27.799394 29477 solver.cpp:238]     Train net output #0: loss = 0.303252 (* 1 = 0.303252 loss)
I0428 20:00:27.799401 29477 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:27.889663 29477 solver.cpp:219] Iteration 800 (1107.74 iter/s, 0.0902738s/100 iters), loss = 0.387836
I0428 20:00:27.889701 29477 solver.cpp:238]     Train net output #0: loss = 0.387836 (* 1 = 0.387836 loss)
I0428 20:00:27.889724 29477 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:27.979209 29477 solver.cpp:219] Iteration 900 (1117.14 iter/s, 0.089514s/100 iters), loss = 0.194344
I0428 20:00:27.979248 29477 solver.cpp:238]     Train net output #0: loss = 0.194344 (* 1 = 0.194344 loss)
I0428 20:00:27.979254 29477 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:28.008702 29483 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:28.065945 29477 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:28.066865 29477 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:28.067420 29477 solver.cpp:311] Iteration 1000, loss = 0.0919387
I0428 20:00:28.067435 29477 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:28.143303 29484 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:28.143903 29477 solver.cpp:398]     Test net output #0: accuracy = 0.967
I0428 20:00:28.143923 29477 solver.cpp:398]     Test net output #1: loss = 0.10143 (* 1 = 0.10143 loss)
I0428 20:00:28.143929 29477 solver.cpp:316] Optimization Done.
I0428 20:00:28.143931 29477 caffe.cpp:259] Optimization Done.
