I0428 20:07:55.237854 31265 caffe.cpp:218] Using GPUs 0
I0428 20:07:55.266578 31265 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:55.713044 31265 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1069.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:55.713198 31265 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1069.prototxt
I0428 20:07:55.713563 31265 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:55.713594 31265 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:55.713673 31265 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:55.713734 31265 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:55.713812 31265 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:55.713830 31265 net.cpp:86] Creating Layer mnist
I0428 20:07:55.713838 31265 net.cpp:382] mnist -> data
I0428 20:07:55.713855 31265 net.cpp:382] mnist -> label
I0428 20:07:55.714843 31265 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:55.717041 31265 net.cpp:124] Setting up mnist
I0428 20:07:55.717072 31265 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:55.717077 31265 net.cpp:131] Top shape: 64 (64)
I0428 20:07:55.717079 31265 net.cpp:139] Memory required for data: 200960
I0428 20:07:55.717085 31265 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:55.717099 31265 net.cpp:86] Creating Layer conv0
I0428 20:07:55.717116 31265 net.cpp:408] conv0 <- data
I0428 20:07:55.717128 31265 net.cpp:382] conv0 -> conv0
I0428 20:07:55.949507 31265 net.cpp:124] Setting up conv0
I0428 20:07:55.949548 31265 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:55.949553 31265 net.cpp:139] Memory required for data: 3887360
I0428 20:07:55.949568 31265 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:55.949580 31265 net.cpp:86] Creating Layer pool0
I0428 20:07:55.949584 31265 net.cpp:408] pool0 <- conv0
I0428 20:07:55.949590 31265 net.cpp:382] pool0 -> pool0
I0428 20:07:55.949632 31265 net.cpp:124] Setting up pool0
I0428 20:07:55.949638 31265 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:55.949640 31265 net.cpp:139] Memory required for data: 4808960
I0428 20:07:55.949643 31265 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:55.949653 31265 net.cpp:86] Creating Layer conv1
I0428 20:07:55.949656 31265 net.cpp:408] conv1 <- pool0
I0428 20:07:55.949661 31265 net.cpp:382] conv1 -> conv1
I0428 20:07:55.952342 31265 net.cpp:124] Setting up conv1
I0428 20:07:55.952369 31265 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:55.952373 31265 net.cpp:139] Memory required for data: 4972800
I0428 20:07:55.952396 31265 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:55.952404 31265 net.cpp:86] Creating Layer pool1
I0428 20:07:55.952409 31265 net.cpp:408] pool1 <- conv1
I0428 20:07:55.952414 31265 net.cpp:382] pool1 -> pool1
I0428 20:07:55.952462 31265 net.cpp:124] Setting up pool1
I0428 20:07:55.952468 31265 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:55.952471 31265 net.cpp:139] Memory required for data: 5013760
I0428 20:07:55.952473 31265 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:55.952479 31265 net.cpp:86] Creating Layer ip1
I0428 20:07:55.952482 31265 net.cpp:408] ip1 <- pool1
I0428 20:07:55.952487 31265 net.cpp:382] ip1 -> ip1
I0428 20:07:55.953457 31265 net.cpp:124] Setting up ip1
I0428 20:07:55.953469 31265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:55.953487 31265 net.cpp:139] Memory required for data: 5016320
I0428 20:07:55.953495 31265 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:55.953501 31265 net.cpp:86] Creating Layer relu1
I0428 20:07:55.953505 31265 net.cpp:408] relu1 <- ip1
I0428 20:07:55.953510 31265 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:55.953680 31265 net.cpp:124] Setting up relu1
I0428 20:07:55.953689 31265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:55.953692 31265 net.cpp:139] Memory required for data: 5018880
I0428 20:07:55.953696 31265 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:55.953702 31265 net.cpp:86] Creating Layer ip2
I0428 20:07:55.953706 31265 net.cpp:408] ip2 <- ip1
I0428 20:07:55.953709 31265 net.cpp:382] ip2 -> ip2
I0428 20:07:55.953824 31265 net.cpp:124] Setting up ip2
I0428 20:07:55.953830 31265 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:55.953833 31265 net.cpp:139] Memory required for data: 5025280
I0428 20:07:55.953838 31265 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:55.953845 31265 net.cpp:86] Creating Layer relu2
I0428 20:07:55.953847 31265 net.cpp:408] relu2 <- ip2
I0428 20:07:55.953851 31265 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:55.954674 31265 net.cpp:124] Setting up relu2
I0428 20:07:55.954686 31265 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:55.954689 31265 net.cpp:139] Memory required for data: 5031680
I0428 20:07:55.954694 31265 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:55.954700 31265 net.cpp:86] Creating Layer ip3
I0428 20:07:55.954704 31265 net.cpp:408] ip3 <- ip2
I0428 20:07:55.954708 31265 net.cpp:382] ip3 -> ip3
I0428 20:07:55.954802 31265 net.cpp:124] Setting up ip3
I0428 20:07:55.954808 31265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:55.954812 31265 net.cpp:139] Memory required for data: 5034240
I0428 20:07:55.954818 31265 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:55.954823 31265 net.cpp:86] Creating Layer relu3
I0428 20:07:55.954826 31265 net.cpp:408] relu3 <- ip3
I0428 20:07:55.954830 31265 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:55.955021 31265 net.cpp:124] Setting up relu3
I0428 20:07:55.955029 31265 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:55.955032 31265 net.cpp:139] Memory required for data: 5036800
I0428 20:07:55.955035 31265 layer_factory.hpp:77] Creating layer loss
I0428 20:07:55.955040 31265 net.cpp:86] Creating Layer loss
I0428 20:07:55.955044 31265 net.cpp:408] loss <- ip3
I0428 20:07:55.955047 31265 net.cpp:408] loss <- label
I0428 20:07:55.955052 31265 net.cpp:382] loss -> loss
I0428 20:07:55.955068 31265 layer_factory.hpp:77] Creating layer loss
I0428 20:07:55.955332 31265 net.cpp:124] Setting up loss
I0428 20:07:55.955341 31265 net.cpp:131] Top shape: (1)
I0428 20:07:55.955344 31265 net.cpp:134]     with loss weight 1
I0428 20:07:55.955358 31265 net.cpp:139] Memory required for data: 5036804
I0428 20:07:55.955363 31265 net.cpp:200] loss needs backward computation.
I0428 20:07:55.955365 31265 net.cpp:200] relu3 needs backward computation.
I0428 20:07:55.955368 31265 net.cpp:200] ip3 needs backward computation.
I0428 20:07:55.955371 31265 net.cpp:200] relu2 needs backward computation.
I0428 20:07:55.955374 31265 net.cpp:200] ip2 needs backward computation.
I0428 20:07:55.955376 31265 net.cpp:200] relu1 needs backward computation.
I0428 20:07:55.955379 31265 net.cpp:200] ip1 needs backward computation.
I0428 20:07:55.955382 31265 net.cpp:200] pool1 needs backward computation.
I0428 20:07:55.955385 31265 net.cpp:200] conv1 needs backward computation.
I0428 20:07:55.955389 31265 net.cpp:200] pool0 needs backward computation.
I0428 20:07:55.955392 31265 net.cpp:200] conv0 needs backward computation.
I0428 20:07:55.955395 31265 net.cpp:202] mnist does not need backward computation.
I0428 20:07:55.955399 31265 net.cpp:244] This network produces output loss
I0428 20:07:55.955407 31265 net.cpp:257] Network initialization done.
I0428 20:07:55.955727 31265 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1069.prototxt
I0428 20:07:55.955799 31265 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:55.955888 31265 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:55.955981 31265 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:55.956027 31265 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:55.956038 31265 net.cpp:86] Creating Layer mnist
I0428 20:07:55.956043 31265 net.cpp:382] mnist -> data
I0428 20:07:55.956050 31265 net.cpp:382] mnist -> label
I0428 20:07:55.956177 31265 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:55.958225 31265 net.cpp:124] Setting up mnist
I0428 20:07:55.958269 31265 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:55.958274 31265 net.cpp:131] Top shape: 100 (100)
I0428 20:07:55.958277 31265 net.cpp:139] Memory required for data: 314000
I0428 20:07:55.958281 31265 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:55.958288 31265 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:55.958292 31265 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:55.958297 31265 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:55.958303 31265 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:55.958350 31265 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:55.958356 31265 net.cpp:131] Top shape: 100 (100)
I0428 20:07:55.958359 31265 net.cpp:131] Top shape: 100 (100)
I0428 20:07:55.958362 31265 net.cpp:139] Memory required for data: 314800
I0428 20:07:55.958365 31265 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:55.958374 31265 net.cpp:86] Creating Layer conv0
I0428 20:07:55.958377 31265 net.cpp:408] conv0 <- data
I0428 20:07:55.958381 31265 net.cpp:382] conv0 -> conv0
I0428 20:07:55.960096 31265 net.cpp:124] Setting up conv0
I0428 20:07:55.960109 31265 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:55.960129 31265 net.cpp:139] Memory required for data: 6074800
I0428 20:07:55.960139 31265 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:55.960144 31265 net.cpp:86] Creating Layer pool0
I0428 20:07:55.960149 31265 net.cpp:408] pool0 <- conv0
I0428 20:07:55.960152 31265 net.cpp:382] pool0 -> pool0
I0428 20:07:55.960188 31265 net.cpp:124] Setting up pool0
I0428 20:07:55.960193 31265 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:55.960196 31265 net.cpp:139] Memory required for data: 7514800
I0428 20:07:55.960199 31265 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:55.960207 31265 net.cpp:86] Creating Layer conv1
I0428 20:07:55.960211 31265 net.cpp:408] conv1 <- pool0
I0428 20:07:55.960216 31265 net.cpp:382] conv1 -> conv1
I0428 20:07:55.962401 31265 net.cpp:124] Setting up conv1
I0428 20:07:55.962430 31265 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:55.962435 31265 net.cpp:139] Memory required for data: 7770800
I0428 20:07:55.962443 31265 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:55.962450 31265 net.cpp:86] Creating Layer pool1
I0428 20:07:55.962453 31265 net.cpp:408] pool1 <- conv1
I0428 20:07:55.962458 31265 net.cpp:382] pool1 -> pool1
I0428 20:07:55.962515 31265 net.cpp:124] Setting up pool1
I0428 20:07:55.962522 31265 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:55.962524 31265 net.cpp:139] Memory required for data: 7834800
I0428 20:07:55.962527 31265 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:55.962534 31265 net.cpp:86] Creating Layer ip1
I0428 20:07:55.962538 31265 net.cpp:408] ip1 <- pool1
I0428 20:07:55.962543 31265 net.cpp:382] ip1 -> ip1
I0428 20:07:55.962658 31265 net.cpp:124] Setting up ip1
I0428 20:07:55.962666 31265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:55.962679 31265 net.cpp:139] Memory required for data: 7838800
I0428 20:07:55.962687 31265 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:55.962692 31265 net.cpp:86] Creating Layer relu1
I0428 20:07:55.962695 31265 net.cpp:408] relu1 <- ip1
I0428 20:07:55.962699 31265 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:55.963001 31265 net.cpp:124] Setting up relu1
I0428 20:07:55.963011 31265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:55.963013 31265 net.cpp:139] Memory required for data: 7842800
I0428 20:07:55.963016 31265 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:55.963024 31265 net.cpp:86] Creating Layer ip2
I0428 20:07:55.963027 31265 net.cpp:408] ip2 <- ip1
I0428 20:07:55.963033 31265 net.cpp:382] ip2 -> ip2
I0428 20:07:55.963134 31265 net.cpp:124] Setting up ip2
I0428 20:07:55.963140 31265 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:55.963145 31265 net.cpp:139] Memory required for data: 7852800
I0428 20:07:55.963150 31265 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:55.963156 31265 net.cpp:86] Creating Layer relu2
I0428 20:07:55.963160 31265 net.cpp:408] relu2 <- ip2
I0428 20:07:55.963163 31265 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:55.963315 31265 net.cpp:124] Setting up relu2
I0428 20:07:55.963340 31265 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:55.963345 31265 net.cpp:139] Memory required for data: 7862800
I0428 20:07:55.963347 31265 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:55.963353 31265 net.cpp:86] Creating Layer ip3
I0428 20:07:55.963356 31265 net.cpp:408] ip3 <- ip2
I0428 20:07:55.963362 31265 net.cpp:382] ip3 -> ip3
I0428 20:07:55.963464 31265 net.cpp:124] Setting up ip3
I0428 20:07:55.963470 31265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:55.963474 31265 net.cpp:139] Memory required for data: 7866800
I0428 20:07:55.963481 31265 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:55.963485 31265 net.cpp:86] Creating Layer relu3
I0428 20:07:55.963488 31265 net.cpp:408] relu3 <- ip3
I0428 20:07:55.963501 31265 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:55.964334 31265 net.cpp:124] Setting up relu3
I0428 20:07:55.964346 31265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:55.964365 31265 net.cpp:139] Memory required for data: 7870800
I0428 20:07:55.964368 31265 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:55.964373 31265 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:55.964376 31265 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:55.964382 31265 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:55.964388 31265 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:55.964452 31265 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:55.964465 31265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:55.964470 31265 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:55.964473 31265 net.cpp:139] Memory required for data: 7878800
I0428 20:07:55.964475 31265 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:55.964480 31265 net.cpp:86] Creating Layer accuracy
I0428 20:07:55.964484 31265 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:55.964488 31265 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:55.964493 31265 net.cpp:382] accuracy -> accuracy
I0428 20:07:55.964499 31265 net.cpp:124] Setting up accuracy
I0428 20:07:55.964504 31265 net.cpp:131] Top shape: (1)
I0428 20:07:55.964506 31265 net.cpp:139] Memory required for data: 7878804
I0428 20:07:55.964509 31265 layer_factory.hpp:77] Creating layer loss
I0428 20:07:55.964514 31265 net.cpp:86] Creating Layer loss
I0428 20:07:55.964519 31265 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:55.964521 31265 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:55.964525 31265 net.cpp:382] loss -> loss
I0428 20:07:55.964532 31265 layer_factory.hpp:77] Creating layer loss
I0428 20:07:55.964787 31265 net.cpp:124] Setting up loss
I0428 20:07:55.964820 31265 net.cpp:131] Top shape: (1)
I0428 20:07:55.964824 31265 net.cpp:134]     with loss weight 1
I0428 20:07:55.964856 31265 net.cpp:139] Memory required for data: 7878808
I0428 20:07:55.964860 31265 net.cpp:200] loss needs backward computation.
I0428 20:07:55.964864 31265 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:55.964869 31265 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:55.964871 31265 net.cpp:200] relu3 needs backward computation.
I0428 20:07:55.964875 31265 net.cpp:200] ip3 needs backward computation.
I0428 20:07:55.964879 31265 net.cpp:200] relu2 needs backward computation.
I0428 20:07:55.964881 31265 net.cpp:200] ip2 needs backward computation.
I0428 20:07:55.964884 31265 net.cpp:200] relu1 needs backward computation.
I0428 20:07:55.964886 31265 net.cpp:200] ip1 needs backward computation.
I0428 20:07:55.964890 31265 net.cpp:200] pool1 needs backward computation.
I0428 20:07:55.964895 31265 net.cpp:200] conv1 needs backward computation.
I0428 20:07:55.964898 31265 net.cpp:200] pool0 needs backward computation.
I0428 20:07:55.964901 31265 net.cpp:200] conv0 needs backward computation.
I0428 20:07:55.964905 31265 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:55.964910 31265 net.cpp:202] mnist does not need backward computation.
I0428 20:07:55.964912 31265 net.cpp:244] This network produces output accuracy
I0428 20:07:55.964916 31265 net.cpp:244] This network produces output loss
I0428 20:07:55.964936 31265 net.cpp:257] Network initialization done.
I0428 20:07:55.964980 31265 solver.cpp:56] Solver scaffolding done.
I0428 20:07:55.965379 31265 caffe.cpp:248] Starting Optimization
I0428 20:07:55.965385 31265 solver.cpp:273] Solving LeNet
I0428 20:07:55.965387 31265 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:55.966272 31265 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:55.970891 31265 blocking_queue.cpp:49] Waiting for data
I0428 20:07:56.040056 31272 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:56.040688 31265 solver.cpp:398]     Test net output #0: accuracy = 0.1126
I0428 20:07:56.040724 31265 solver.cpp:398]     Test net output #1: loss = 2.30573 (* 1 = 2.30573 loss)
I0428 20:07:56.044363 31265 solver.cpp:219] Iteration 0 (-3.27384e-31 iter/s, 0.0789309s/100 iters), loss = 2.30604
I0428 20:07:56.044385 31265 solver.cpp:238]     Train net output #0: loss = 2.30604 (* 1 = 2.30604 loss)
I0428 20:07:56.044395 31265 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:56.138414 31265 solver.cpp:219] Iteration 100 (1063.64 iter/s, 0.0940165s/100 iters), loss = 0.663691
I0428 20:07:56.138454 31265 solver.cpp:238]     Train net output #0: loss = 0.663691 (* 1 = 0.663691 loss)
I0428 20:07:56.138460 31265 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:56.230702 31265 solver.cpp:219] Iteration 200 (1083.96 iter/s, 0.0922542s/100 iters), loss = 0.423773
I0428 20:07:56.230743 31265 solver.cpp:238]     Train net output #0: loss = 0.423773 (* 1 = 0.423773 loss)
I0428 20:07:56.230749 31265 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:56.323446 31265 solver.cpp:219] Iteration 300 (1078.65 iter/s, 0.0927089s/100 iters), loss = 0.375038
I0428 20:07:56.323483 31265 solver.cpp:238]     Train net output #0: loss = 0.375038 (* 1 = 0.375038 loss)
I0428 20:07:56.323489 31265 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:56.416626 31265 solver.cpp:219] Iteration 400 (1073.56 iter/s, 0.0931484s/100 iters), loss = 0.418511
I0428 20:07:56.416666 31265 solver.cpp:238]     Train net output #0: loss = 0.418511 (* 1 = 0.418511 loss)
I0428 20:07:56.416671 31265 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:56.509120 31265 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:56.564182 31272 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:56.564767 31265 solver.cpp:398]     Test net output #0: accuracy = 0.8534
I0428 20:07:56.564800 31265 solver.cpp:398]     Test net output #1: loss = 0.406382 (* 1 = 0.406382 loss)
I0428 20:07:56.565698 31265 solver.cpp:219] Iteration 500 (670.979 iter/s, 0.149036s/100 iters), loss = 0.419699
I0428 20:07:56.565767 31265 solver.cpp:238]     Train net output #0: loss = 0.419699 (* 1 = 0.419699 loss)
I0428 20:07:56.565774 31265 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:56.662823 31265 solver.cpp:219] Iteration 600 (1030.4 iter/s, 0.0970497s/100 iters), loss = 0.417702
I0428 20:07:56.662864 31265 solver.cpp:238]     Train net output #0: loss = 0.417702 (* 1 = 0.417702 loss)
I0428 20:07:56.662870 31265 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:56.756561 31265 solver.cpp:219] Iteration 700 (1067.39 iter/s, 0.0936868s/100 iters), loss = 0.420729
I0428 20:07:56.756599 31265 solver.cpp:238]     Train net output #0: loss = 0.420729 (* 1 = 0.420729 loss)
I0428 20:07:56.756605 31265 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:56.849325 31265 solver.cpp:219] Iteration 800 (1078.38 iter/s, 0.0927316s/100 iters), loss = 0.526509
I0428 20:07:56.849365 31265 solver.cpp:238]     Train net output #0: loss = 0.52651 (* 1 = 0.52651 loss)
I0428 20:07:56.849370 31265 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:56.942126 31265 solver.cpp:219] Iteration 900 (1078.15 iter/s, 0.0927519s/100 iters), loss = 0.248399
I0428 20:07:56.942163 31265 solver.cpp:238]     Train net output #0: loss = 0.248399 (* 1 = 0.248399 loss)
I0428 20:07:56.942169 31265 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:56.973227 31271 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:57.032836 31265 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:57.033785 31265 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:57.034348 31265 solver.cpp:311] Iteration 1000, loss = 0.280295
I0428 20:07:57.034363 31265 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:57.111075 31272 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:57.111675 31265 solver.cpp:398]     Test net output #0: accuracy = 0.8746
I0428 20:07:57.111711 31265 solver.cpp:398]     Test net output #1: loss = 0.326706 (* 1 = 0.326706 loss)
I0428 20:07:57.111716 31265 solver.cpp:316] Optimization Done.
I0428 20:07:57.111719 31265 caffe.cpp:259] Optimization Done.
