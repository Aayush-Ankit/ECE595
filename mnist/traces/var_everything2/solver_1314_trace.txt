I0428 20:18:14.806499  1084 caffe.cpp:218] Using GPUs 0
I0428 20:18:14.839433  1084 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:15.359819  1084 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1314.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:15.359963  1084 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1314.prototxt
I0428 20:18:15.360365  1084 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:15.360384  1084 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:15.360481  1084 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:15.360555  1084 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:15.360656  1084 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:15.360679  1084 net.cpp:86] Creating Layer mnist
I0428 20:18:15.360687  1084 net.cpp:382] mnist -> data
I0428 20:18:15.360710  1084 net.cpp:382] mnist -> label
I0428 20:18:15.361796  1084 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:15.364233  1084 net.cpp:124] Setting up mnist
I0428 20:18:15.364250  1084 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:15.364256  1084 net.cpp:131] Top shape: 64 (64)
I0428 20:18:15.364260  1084 net.cpp:139] Memory required for data: 200960
I0428 20:18:15.364267  1084 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:15.364284  1084 net.cpp:86] Creating Layer conv0
I0428 20:18:15.364305  1084 net.cpp:408] conv0 <- data
I0428 20:18:15.364318  1084 net.cpp:382] conv0 -> conv0
I0428 20:18:15.657610  1084 net.cpp:124] Setting up conv0
I0428 20:18:15.657642  1084 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:15.657647  1084 net.cpp:139] Memory required for data: 7573760
I0428 20:18:15.657665  1084 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:15.657680  1084 net.cpp:86] Creating Layer pool0
I0428 20:18:15.657685  1084 net.cpp:408] pool0 <- conv0
I0428 20:18:15.657691  1084 net.cpp:382] pool0 -> pool0
I0428 20:18:15.657747  1084 net.cpp:124] Setting up pool0
I0428 20:18:15.657752  1084 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:15.657757  1084 net.cpp:139] Memory required for data: 9416960
I0428 20:18:15.657760  1084 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:15.657773  1084 net.cpp:86] Creating Layer conv1
I0428 20:18:15.657776  1084 net.cpp:408] conv1 <- pool0
I0428 20:18:15.657783  1084 net.cpp:382] conv1 -> conv1
I0428 20:18:15.660984  1084 net.cpp:124] Setting up conv1
I0428 20:18:15.661001  1084 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:15.661006  1084 net.cpp:139] Memory required for data: 9580800
I0428 20:18:15.661016  1084 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:15.661026  1084 net.cpp:86] Creating Layer pool1
I0428 20:18:15.661029  1084 net.cpp:408] pool1 <- conv1
I0428 20:18:15.661036  1084 net.cpp:382] pool1 -> pool1
I0428 20:18:15.661079  1084 net.cpp:124] Setting up pool1
I0428 20:18:15.661085  1084 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:15.661089  1084 net.cpp:139] Memory required for data: 9621760
I0428 20:18:15.661093  1084 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:15.661101  1084 net.cpp:86] Creating Layer ip1
I0428 20:18:15.661105  1084 net.cpp:408] ip1 <- pool1
I0428 20:18:15.661111  1084 net.cpp:382] ip1 -> ip1
I0428 20:18:15.661257  1084 net.cpp:124] Setting up ip1
I0428 20:18:15.661265  1084 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:15.661269  1084 net.cpp:139] Memory required for data: 9628160
I0428 20:18:15.661278  1084 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:15.661284  1084 net.cpp:86] Creating Layer relu1
I0428 20:18:15.661288  1084 net.cpp:408] relu1 <- ip1
I0428 20:18:15.661293  1084 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:15.661486  1084 net.cpp:124] Setting up relu1
I0428 20:18:15.661497  1084 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:15.661501  1084 net.cpp:139] Memory required for data: 9634560
I0428 20:18:15.661505  1084 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:15.661512  1084 net.cpp:86] Creating Layer ip2
I0428 20:18:15.661516  1084 net.cpp:408] ip2 <- ip1
I0428 20:18:15.661522  1084 net.cpp:382] ip2 -> ip2
I0428 20:18:15.661646  1084 net.cpp:124] Setting up ip2
I0428 20:18:15.661653  1084 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:15.661658  1084 net.cpp:139] Memory required for data: 9647360
I0428 20:18:15.661664  1084 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:15.661670  1084 net.cpp:86] Creating Layer relu2
I0428 20:18:15.661674  1084 net.cpp:408] relu2 <- ip2
I0428 20:18:15.661679  1084 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:15.662524  1084 net.cpp:124] Setting up relu2
I0428 20:18:15.662540  1084 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:15.662544  1084 net.cpp:139] Memory required for data: 9660160
I0428 20:18:15.662549  1084 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:15.662556  1084 net.cpp:86] Creating Layer ip3
I0428 20:18:15.662560  1084 net.cpp:408] ip3 <- ip2
I0428 20:18:15.662567  1084 net.cpp:382] ip3 -> ip3
I0428 20:18:15.662686  1084 net.cpp:124] Setting up ip3
I0428 20:18:15.662695  1084 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:15.662699  1084 net.cpp:139] Memory required for data: 9662720
I0428 20:18:15.662708  1084 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:15.662714  1084 net.cpp:86] Creating Layer relu3
I0428 20:18:15.662717  1084 net.cpp:408] relu3 <- ip3
I0428 20:18:15.662722  1084 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:15.662940  1084 net.cpp:124] Setting up relu3
I0428 20:18:15.662950  1084 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:15.662955  1084 net.cpp:139] Memory required for data: 9665280
I0428 20:18:15.662958  1084 layer_factory.hpp:77] Creating layer loss
I0428 20:18:15.662964  1084 net.cpp:86] Creating Layer loss
I0428 20:18:15.662968  1084 net.cpp:408] loss <- ip3
I0428 20:18:15.662974  1084 net.cpp:408] loss <- label
I0428 20:18:15.662982  1084 net.cpp:382] loss -> loss
I0428 20:18:15.662998  1084 layer_factory.hpp:77] Creating layer loss
I0428 20:18:15.663281  1084 net.cpp:124] Setting up loss
I0428 20:18:15.663292  1084 net.cpp:131] Top shape: (1)
I0428 20:18:15.663296  1084 net.cpp:134]     with loss weight 1
I0428 20:18:15.663313  1084 net.cpp:139] Memory required for data: 9665284
I0428 20:18:15.663317  1084 net.cpp:200] loss needs backward computation.
I0428 20:18:15.663321  1084 net.cpp:200] relu3 needs backward computation.
I0428 20:18:15.663324  1084 net.cpp:200] ip3 needs backward computation.
I0428 20:18:15.663328  1084 net.cpp:200] relu2 needs backward computation.
I0428 20:18:15.663331  1084 net.cpp:200] ip2 needs backward computation.
I0428 20:18:15.663334  1084 net.cpp:200] relu1 needs backward computation.
I0428 20:18:15.663337  1084 net.cpp:200] ip1 needs backward computation.
I0428 20:18:15.663341  1084 net.cpp:200] pool1 needs backward computation.
I0428 20:18:15.663344  1084 net.cpp:200] conv1 needs backward computation.
I0428 20:18:15.663347  1084 net.cpp:200] pool0 needs backward computation.
I0428 20:18:15.663352  1084 net.cpp:200] conv0 needs backward computation.
I0428 20:18:15.663355  1084 net.cpp:202] mnist does not need backward computation.
I0428 20:18:15.663358  1084 net.cpp:244] This network produces output loss
I0428 20:18:15.663372  1084 net.cpp:257] Network initialization done.
I0428 20:18:15.663756  1084 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1314.prototxt
I0428 20:18:15.663789  1084 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:15.663903  1084 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:15.664005  1084 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:15.664057  1084 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:15.664072  1084 net.cpp:86] Creating Layer mnist
I0428 20:18:15.664078  1084 net.cpp:382] mnist -> data
I0428 20:18:15.664088  1084 net.cpp:382] mnist -> label
I0428 20:18:15.664192  1084 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:15.666379  1084 net.cpp:124] Setting up mnist
I0428 20:18:15.666395  1084 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:15.666401  1084 net.cpp:131] Top shape: 100 (100)
I0428 20:18:15.666405  1084 net.cpp:139] Memory required for data: 314000
I0428 20:18:15.666409  1084 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:15.666440  1084 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:15.666445  1084 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:15.666450  1084 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:15.666458  1084 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:15.666512  1084 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:15.666522  1084 net.cpp:131] Top shape: 100 (100)
I0428 20:18:15.666525  1084 net.cpp:131] Top shape: 100 (100)
I0428 20:18:15.666528  1084 net.cpp:139] Memory required for data: 314800
I0428 20:18:15.666532  1084 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:15.666543  1084 net.cpp:86] Creating Layer conv0
I0428 20:18:15.666548  1084 net.cpp:408] conv0 <- data
I0428 20:18:15.666554  1084 net.cpp:382] conv0 -> conv0
I0428 20:18:15.668524  1084 net.cpp:124] Setting up conv0
I0428 20:18:15.668541  1084 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:15.668545  1084 net.cpp:139] Memory required for data: 11834800
I0428 20:18:15.668558  1084 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:15.668566  1084 net.cpp:86] Creating Layer pool0
I0428 20:18:15.668570  1084 net.cpp:408] pool0 <- conv0
I0428 20:18:15.668576  1084 net.cpp:382] pool0 -> pool0
I0428 20:18:15.668622  1084 net.cpp:124] Setting up pool0
I0428 20:18:15.668627  1084 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:15.668632  1084 net.cpp:139] Memory required for data: 14714800
I0428 20:18:15.668634  1084 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:15.668645  1084 net.cpp:86] Creating Layer conv1
I0428 20:18:15.668648  1084 net.cpp:408] conv1 <- pool0
I0428 20:18:15.668656  1084 net.cpp:382] conv1 -> conv1
I0428 20:18:15.670518  1084 net.cpp:124] Setting up conv1
I0428 20:18:15.670536  1084 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:15.670542  1084 net.cpp:139] Memory required for data: 14970800
I0428 20:18:15.670554  1084 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:15.670562  1084 net.cpp:86] Creating Layer pool1
I0428 20:18:15.670565  1084 net.cpp:408] pool1 <- conv1
I0428 20:18:15.670572  1084 net.cpp:382] pool1 -> pool1
I0428 20:18:15.670615  1084 net.cpp:124] Setting up pool1
I0428 20:18:15.670624  1084 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:15.670626  1084 net.cpp:139] Memory required for data: 15034800
I0428 20:18:15.670630  1084 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:15.670639  1084 net.cpp:86] Creating Layer ip1
I0428 20:18:15.670642  1084 net.cpp:408] ip1 <- pool1
I0428 20:18:15.670647  1084 net.cpp:382] ip1 -> ip1
I0428 20:18:15.670792  1084 net.cpp:124] Setting up ip1
I0428 20:18:15.670802  1084 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:15.670819  1084 net.cpp:139] Memory required for data: 15044800
I0428 20:18:15.670827  1084 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:15.670835  1084 net.cpp:86] Creating Layer relu1
I0428 20:18:15.670840  1084 net.cpp:408] relu1 <- ip1
I0428 20:18:15.670845  1084 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:15.671102  1084 net.cpp:124] Setting up relu1
I0428 20:18:15.671113  1084 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:15.671118  1084 net.cpp:139] Memory required for data: 15054800
I0428 20:18:15.671120  1084 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:15.671130  1084 net.cpp:86] Creating Layer ip2
I0428 20:18:15.671134  1084 net.cpp:408] ip2 <- ip1
I0428 20:18:15.671141  1084 net.cpp:382] ip2 -> ip2
I0428 20:18:15.671277  1084 net.cpp:124] Setting up ip2
I0428 20:18:15.671286  1084 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:15.671295  1084 net.cpp:139] Memory required for data: 15074800
I0428 20:18:15.671303  1084 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:15.671308  1084 net.cpp:86] Creating Layer relu2
I0428 20:18:15.671311  1084 net.cpp:408] relu2 <- ip2
I0428 20:18:15.671317  1084 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:15.671519  1084 net.cpp:124] Setting up relu2
I0428 20:18:15.671530  1084 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:15.671538  1084 net.cpp:139] Memory required for data: 15094800
I0428 20:18:15.671542  1084 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:15.671548  1084 net.cpp:86] Creating Layer ip3
I0428 20:18:15.671552  1084 net.cpp:408] ip3 <- ip2
I0428 20:18:15.671560  1084 net.cpp:382] ip3 -> ip3
I0428 20:18:15.671687  1084 net.cpp:124] Setting up ip3
I0428 20:18:15.671695  1084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:15.671699  1084 net.cpp:139] Memory required for data: 15098800
I0428 20:18:15.671708  1084 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:15.671713  1084 net.cpp:86] Creating Layer relu3
I0428 20:18:15.671718  1084 net.cpp:408] relu3 <- ip3
I0428 20:18:15.671723  1084 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:15.672648  1084 net.cpp:124] Setting up relu3
I0428 20:18:15.672664  1084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:15.672668  1084 net.cpp:139] Memory required for data: 15102800
I0428 20:18:15.672672  1084 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:15.672678  1084 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:15.672683  1084 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:15.672690  1084 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:15.672698  1084 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:15.672750  1084 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:15.672756  1084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:15.672761  1084 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:15.672765  1084 net.cpp:139] Memory required for data: 15110800
I0428 20:18:15.672768  1084 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:15.672775  1084 net.cpp:86] Creating Layer accuracy
I0428 20:18:15.672777  1084 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:15.672782  1084 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:15.672790  1084 net.cpp:382] accuracy -> accuracy
I0428 20:18:15.672797  1084 net.cpp:124] Setting up accuracy
I0428 20:18:15.672801  1084 net.cpp:131] Top shape: (1)
I0428 20:18:15.672806  1084 net.cpp:139] Memory required for data: 15110804
I0428 20:18:15.672808  1084 layer_factory.hpp:77] Creating layer loss
I0428 20:18:15.672821  1084 net.cpp:86] Creating Layer loss
I0428 20:18:15.672825  1084 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:15.672830  1084 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:15.672835  1084 net.cpp:382] loss -> loss
I0428 20:18:15.672842  1084 layer_factory.hpp:77] Creating layer loss
I0428 20:18:15.673130  1084 net.cpp:124] Setting up loss
I0428 20:18:15.673141  1084 net.cpp:131] Top shape: (1)
I0428 20:18:15.673146  1084 net.cpp:134]     with loss weight 1
I0428 20:18:15.673166  1084 net.cpp:139] Memory required for data: 15110808
I0428 20:18:15.673169  1084 net.cpp:200] loss needs backward computation.
I0428 20:18:15.673174  1084 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:15.673178  1084 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:15.673182  1084 net.cpp:200] relu3 needs backward computation.
I0428 20:18:15.673185  1084 net.cpp:200] ip3 needs backward computation.
I0428 20:18:15.673193  1084 net.cpp:200] relu2 needs backward computation.
I0428 20:18:15.673197  1084 net.cpp:200] ip2 needs backward computation.
I0428 20:18:15.673200  1084 net.cpp:200] relu1 needs backward computation.
I0428 20:18:15.673212  1084 net.cpp:200] ip1 needs backward computation.
I0428 20:18:15.673215  1084 net.cpp:200] pool1 needs backward computation.
I0428 20:18:15.673218  1084 net.cpp:200] conv1 needs backward computation.
I0428 20:18:15.673223  1084 net.cpp:200] pool0 needs backward computation.
I0428 20:18:15.673225  1084 net.cpp:200] conv0 needs backward computation.
I0428 20:18:15.673230  1084 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:15.673234  1084 net.cpp:202] mnist does not need backward computation.
I0428 20:18:15.673238  1084 net.cpp:244] This network produces output accuracy
I0428 20:18:15.673241  1084 net.cpp:244] This network produces output loss
I0428 20:18:15.673256  1084 net.cpp:257] Network initialization done.
I0428 20:18:15.673306  1084 solver.cpp:56] Solver scaffolding done.
I0428 20:18:15.673744  1084 caffe.cpp:248] Starting Optimization
I0428 20:18:15.673753  1084 solver.cpp:273] Solving LeNet
I0428 20:18:15.673756  1084 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:15.674731  1084 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:15.682950  1084 blocking_queue.cpp:49] Waiting for data
I0428 20:18:15.749496  1092 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:15.750574  1084 solver.cpp:398]     Test net output #0: accuracy = 0.1135
I0428 20:18:15.750598  1084 solver.cpp:398]     Test net output #1: loss = 2.42476 (* 1 = 2.42476 loss)
I0428 20:18:15.755352  1084 solver.cpp:219] Iteration 0 (0 iter/s, 0.0815628s/100 iters), loss = 2.40183
I0428 20:18:15.755383  1084 solver.cpp:238]     Train net output #0: loss = 2.40183 (* 1 = 2.40183 loss)
I0428 20:18:15.755395  1084 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:15.883605  1084 solver.cpp:219] Iteration 100 (779.99 iter/s, 0.128207s/100 iters), loss = 0.468345
I0428 20:18:15.883638  1084 solver.cpp:238]     Train net output #0: loss = 0.468345 (* 1 = 0.468345 loss)
I0428 20:18:15.883646  1084 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:16.018020  1084 solver.cpp:219] Iteration 200 (744.24 iter/s, 0.134365s/100 iters), loss = 0.185117
I0428 20:18:16.018057  1084 solver.cpp:238]     Train net output #0: loss = 0.185118 (* 1 = 0.185118 loss)
I0428 20:18:16.018066  1084 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:16.153614  1084 solver.cpp:219] Iteration 300 (737.78 iter/s, 0.135542s/100 iters), loss = 0.222729
I0428 20:18:16.153659  1084 solver.cpp:238]     Train net output #0: loss = 0.222729 (* 1 = 0.222729 loss)
I0428 20:18:16.153671  1084 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:16.285868  1084 solver.cpp:219] Iteration 400 (756.439 iter/s, 0.132198s/100 iters), loss = 0.124341
I0428 20:18:16.285907  1084 solver.cpp:238]     Train net output #0: loss = 0.124341 (* 1 = 0.124341 loss)
I0428 20:18:16.285915  1084 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:16.416200  1084 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:16.486148  1092 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:16.488481  1084 solver.cpp:398]     Test net output #0: accuracy = 0.9585
I0428 20:18:16.488504  1084 solver.cpp:398]     Test net output #1: loss = 0.13455 (* 1 = 0.13455 loss)
I0428 20:18:16.489673  1084 solver.cpp:219] Iteration 500 (490.792 iter/s, 0.203752s/100 iters), loss = 0.0975404
I0428 20:18:16.489720  1084 solver.cpp:238]     Train net output #0: loss = 0.0975404 (* 1 = 0.0975404 loss)
I0428 20:18:16.489729  1084 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:16.616791  1084 solver.cpp:219] Iteration 600 (787.03 iter/s, 0.12706s/100 iters), loss = 0.0946738
I0428 20:18:16.616837  1084 solver.cpp:238]     Train net output #0: loss = 0.0946738 (* 1 = 0.0946738 loss)
I0428 20:18:16.616845  1084 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:16.754467  1084 solver.cpp:219] Iteration 700 (726.652 iter/s, 0.137617s/100 iters), loss = 0.273877
I0428 20:18:16.754505  1084 solver.cpp:238]     Train net output #0: loss = 0.273877 (* 1 = 0.273877 loss)
I0428 20:18:16.754514  1084 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:16.884603  1084 solver.cpp:219] Iteration 800 (768.718 iter/s, 0.130087s/100 iters), loss = 0.412074
I0428 20:18:16.884635  1084 solver.cpp:238]     Train net output #0: loss = 0.412074 (* 1 = 0.412074 loss)
I0428 20:18:16.884644  1084 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:17.009992  1084 solver.cpp:219] Iteration 900 (797.793 iter/s, 0.125346s/100 iters), loss = 0.122995
I0428 20:18:17.010025  1084 solver.cpp:238]     Train net output #0: loss = 0.122995 (* 1 = 0.122995 loss)
I0428 20:18:17.010033  1084 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:17.051749  1091 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:17.133827  1084 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:17.135097  1084 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:17.135936  1084 solver.cpp:311] Iteration 1000, loss = 0.0817505
I0428 20:18:17.135956  1084 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:17.205055  1092 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:17.207373  1084 solver.cpp:398]     Test net output #0: accuracy = 0.9736
I0428 20:18:17.207396  1084 solver.cpp:398]     Test net output #1: loss = 0.0808826 (* 1 = 0.0808826 loss)
I0428 20:18:17.207401  1084 solver.cpp:316] Optimization Done.
I0428 20:18:17.207406  1084 caffe.cpp:259] Optimization Done.
