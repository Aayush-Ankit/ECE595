I0428 19:57:21.083819 28659 caffe.cpp:218] Using GPUs 0
I0428 19:57:21.114214 28659 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:57:21.608510 28659 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test786.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:57:21.608671 28659 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test786.prototxt
I0428 19:57:21.609061 28659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:57:21.609082 28659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:57:21.609181 28659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:57:21.609289 28659 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:21.609429 28659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:57:21.609463 28659 net.cpp:86] Creating Layer mnist
I0428 19:57:21.609474 28659 net.cpp:382] mnist -> data
I0428 19:57:21.609508 28659 net.cpp:382] mnist -> label
I0428 19:57:21.610728 28659 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:57:21.613164 28659 net.cpp:124] Setting up mnist
I0428 19:57:21.613190 28659 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:57:21.613200 28659 net.cpp:131] Top shape: 64 (64)
I0428 19:57:21.613207 28659 net.cpp:139] Memory required for data: 200960
I0428 19:57:21.613217 28659 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:21.613240 28659 net.cpp:86] Creating Layer conv0
I0428 19:57:21.613250 28659 net.cpp:408] conv0 <- data
I0428 19:57:21.613268 28659 net.cpp:382] conv0 -> conv0
I0428 19:57:21.898708 28659 net.cpp:124] Setting up conv0
I0428 19:57:21.898741 28659 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:57:21.898748 28659 net.cpp:139] Memory required for data: 1675520
I0428 19:57:21.898810 28659 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:21.898833 28659 net.cpp:86] Creating Layer pool0
I0428 19:57:21.898843 28659 net.cpp:408] pool0 <- conv0
I0428 19:57:21.898854 28659 net.cpp:382] pool0 -> pool0
I0428 19:57:21.898916 28659 net.cpp:124] Setting up pool0
I0428 19:57:21.898927 28659 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:57:21.898933 28659 net.cpp:139] Memory required for data: 2044160
I0428 19:57:21.898939 28659 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:21.898958 28659 net.cpp:86] Creating Layer conv1
I0428 19:57:21.898965 28659 net.cpp:408] conv1 <- pool0
I0428 19:57:21.898977 28659 net.cpp:382] conv1 -> conv1
I0428 19:57:21.902066 28659 net.cpp:124] Setting up conv1
I0428 19:57:21.902086 28659 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:57:21.902093 28659 net.cpp:139] Memory required for data: 2126080
I0428 19:57:21.902109 28659 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:21.902123 28659 net.cpp:86] Creating Layer pool1
I0428 19:57:21.902130 28659 net.cpp:408] pool1 <- conv1
I0428 19:57:21.902140 28659 net.cpp:382] pool1 -> pool1
I0428 19:57:21.902194 28659 net.cpp:124] Setting up pool1
I0428 19:57:21.902204 28659 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:57:21.902210 28659 net.cpp:139] Memory required for data: 2146560
I0428 19:57:21.902217 28659 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:21.902230 28659 net.cpp:86] Creating Layer ip1
I0428 19:57:21.902236 28659 net.cpp:408] ip1 <- pool1
I0428 19:57:21.902246 28659 net.cpp:382] ip1 -> ip1
I0428 19:57:21.902389 28659 net.cpp:124] Setting up ip1
I0428 19:57:21.902398 28659 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:21.902405 28659 net.cpp:139] Memory required for data: 2152960
I0428 19:57:21.902420 28659 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:21.902433 28659 net.cpp:86] Creating Layer relu1
I0428 19:57:21.902444 28659 net.cpp:408] relu1 <- ip1
I0428 19:57:21.902453 28659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:21.902657 28659 net.cpp:124] Setting up relu1
I0428 19:57:21.902668 28659 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:57:21.902675 28659 net.cpp:139] Memory required for data: 2159360
I0428 19:57:21.902681 28659 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:21.902693 28659 net.cpp:86] Creating Layer ip2
I0428 19:57:21.902700 28659 net.cpp:408] ip2 <- ip1
I0428 19:57:21.902710 28659 net.cpp:382] ip2 -> ip2
I0428 19:57:21.902832 28659 net.cpp:124] Setting up ip2
I0428 19:57:21.902842 28659 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:21.902848 28659 net.cpp:139] Memory required for data: 2161920
I0428 19:57:21.902860 28659 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:21.902871 28659 net.cpp:86] Creating Layer relu2
I0428 19:57:21.902878 28659 net.cpp:408] relu2 <- ip2
I0428 19:57:21.902887 28659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:21.903739 28659 net.cpp:124] Setting up relu2
I0428 19:57:21.903756 28659 net.cpp:131] Top shape: 64 10 (640)
I0428 19:57:21.903764 28659 net.cpp:139] Memory required for data: 2164480
I0428 19:57:21.903769 28659 layer_factory.hpp:77] Creating layer loss
I0428 19:57:21.903780 28659 net.cpp:86] Creating Layer loss
I0428 19:57:21.903787 28659 net.cpp:408] loss <- ip2
I0428 19:57:21.903800 28659 net.cpp:408] loss <- label
I0428 19:57:21.903810 28659 net.cpp:382] loss -> loss
I0428 19:57:21.903842 28659 layer_factory.hpp:77] Creating layer loss
I0428 19:57:21.904145 28659 net.cpp:124] Setting up loss
I0428 19:57:21.904158 28659 net.cpp:131] Top shape: (1)
I0428 19:57:21.904165 28659 net.cpp:134]     with loss weight 1
I0428 19:57:21.904186 28659 net.cpp:139] Memory required for data: 2164484
I0428 19:57:21.904193 28659 net.cpp:200] loss needs backward computation.
I0428 19:57:21.904201 28659 net.cpp:200] relu2 needs backward computation.
I0428 19:57:21.904207 28659 net.cpp:200] ip2 needs backward computation.
I0428 19:57:21.904213 28659 net.cpp:200] relu1 needs backward computation.
I0428 19:57:21.904219 28659 net.cpp:200] ip1 needs backward computation.
I0428 19:57:21.904242 28659 net.cpp:200] pool1 needs backward computation.
I0428 19:57:21.904248 28659 net.cpp:200] conv1 needs backward computation.
I0428 19:57:21.904255 28659 net.cpp:200] pool0 needs backward computation.
I0428 19:57:21.904261 28659 net.cpp:200] conv0 needs backward computation.
I0428 19:57:21.904268 28659 net.cpp:202] mnist does not need backward computation.
I0428 19:57:21.904273 28659 net.cpp:244] This network produces output loss
I0428 19:57:21.904291 28659 net.cpp:257] Network initialization done.
I0428 19:57:21.904644 28659 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test786.prototxt
I0428 19:57:21.904681 28659 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:57:21.904789 28659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:57:21.904920 28659 layer_factory.hpp:77] Creating layer mnist
I0428 19:57:21.904989 28659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:57:21.905007 28659 net.cpp:86] Creating Layer mnist
I0428 19:57:21.905019 28659 net.cpp:382] mnist -> data
I0428 19:57:21.905033 28659 net.cpp:382] mnist -> label
I0428 19:57:21.905186 28659 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:57:21.907536 28659 net.cpp:124] Setting up mnist
I0428 19:57:21.907558 28659 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:57:21.907568 28659 net.cpp:131] Top shape: 100 (100)
I0428 19:57:21.907574 28659 net.cpp:139] Memory required for data: 314000
I0428 19:57:21.907582 28659 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:57:21.907593 28659 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:57:21.907599 28659 net.cpp:408] label_mnist_1_split <- label
I0428 19:57:21.907611 28659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:57:21.907624 28659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:57:21.907743 28659 net.cpp:124] Setting up label_mnist_1_split
I0428 19:57:21.907764 28659 net.cpp:131] Top shape: 100 (100)
I0428 19:57:21.907773 28659 net.cpp:131] Top shape: 100 (100)
I0428 19:57:21.907779 28659 net.cpp:139] Memory required for data: 314800
I0428 19:57:21.907785 28659 layer_factory.hpp:77] Creating layer conv0
I0428 19:57:21.907804 28659 net.cpp:86] Creating Layer conv0
I0428 19:57:21.907811 28659 net.cpp:408] conv0 <- data
I0428 19:57:21.907824 28659 net.cpp:382] conv0 -> conv0
I0428 19:57:21.909575 28659 net.cpp:124] Setting up conv0
I0428 19:57:21.909595 28659 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:57:21.909601 28659 net.cpp:139] Memory required for data: 2618800
I0428 19:57:21.909620 28659 layer_factory.hpp:77] Creating layer pool0
I0428 19:57:21.909631 28659 net.cpp:86] Creating Layer pool0
I0428 19:57:21.909639 28659 net.cpp:408] pool0 <- conv0
I0428 19:57:21.909657 28659 net.cpp:382] pool0 -> pool0
I0428 19:57:21.909711 28659 net.cpp:124] Setting up pool0
I0428 19:57:21.909721 28659 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:57:21.909731 28659 net.cpp:139] Memory required for data: 3194800
I0428 19:57:21.909737 28659 layer_factory.hpp:77] Creating layer conv1
I0428 19:57:21.909759 28659 net.cpp:86] Creating Layer conv1
I0428 19:57:21.909765 28659 net.cpp:408] conv1 <- pool0
I0428 19:57:21.909777 28659 net.cpp:382] conv1 -> conv1
I0428 19:57:21.912102 28659 net.cpp:124] Setting up conv1
I0428 19:57:21.912122 28659 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:57:21.912127 28659 net.cpp:139] Memory required for data: 3322800
I0428 19:57:21.912144 28659 layer_factory.hpp:77] Creating layer pool1
I0428 19:57:21.912158 28659 net.cpp:86] Creating Layer pool1
I0428 19:57:21.912165 28659 net.cpp:408] pool1 <- conv1
I0428 19:57:21.912178 28659 net.cpp:382] pool1 -> pool1
I0428 19:57:21.912250 28659 net.cpp:124] Setting up pool1
I0428 19:57:21.912261 28659 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:57:21.912266 28659 net.cpp:139] Memory required for data: 3354800
I0428 19:57:21.912272 28659 layer_factory.hpp:77] Creating layer ip1
I0428 19:57:21.912286 28659 net.cpp:86] Creating Layer ip1
I0428 19:57:21.912292 28659 net.cpp:408] ip1 <- pool1
I0428 19:57:21.912302 28659 net.cpp:382] ip1 -> ip1
I0428 19:57:21.912446 28659 net.cpp:124] Setting up ip1
I0428 19:57:21.912457 28659 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:21.912463 28659 net.cpp:139] Memory required for data: 3364800
I0428 19:57:21.912477 28659 layer_factory.hpp:77] Creating layer relu1
I0428 19:57:21.912489 28659 net.cpp:86] Creating Layer relu1
I0428 19:57:21.912498 28659 net.cpp:408] relu1 <- ip1
I0428 19:57:21.912508 28659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:57:21.912721 28659 net.cpp:124] Setting up relu1
I0428 19:57:21.912735 28659 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:57:21.912742 28659 net.cpp:139] Memory required for data: 3374800
I0428 19:57:21.912748 28659 layer_factory.hpp:77] Creating layer ip2
I0428 19:57:21.912763 28659 net.cpp:86] Creating Layer ip2
I0428 19:57:21.912770 28659 net.cpp:408] ip2 <- ip1
I0428 19:57:21.912782 28659 net.cpp:382] ip2 -> ip2
I0428 19:57:21.912931 28659 net.cpp:124] Setting up ip2
I0428 19:57:21.912943 28659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:21.912950 28659 net.cpp:139] Memory required for data: 3378800
I0428 19:57:21.912961 28659 layer_factory.hpp:77] Creating layer relu2
I0428 19:57:21.912969 28659 net.cpp:86] Creating Layer relu2
I0428 19:57:21.912982 28659 net.cpp:408] relu2 <- ip2
I0428 19:57:21.912992 28659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:57:21.913229 28659 net.cpp:124] Setting up relu2
I0428 19:57:21.913242 28659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:21.913249 28659 net.cpp:139] Memory required for data: 3382800
I0428 19:57:21.913256 28659 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:57:21.913265 28659 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:57:21.913271 28659 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:57:21.913280 28659 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:57:21.913306 28659 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:57:21.913359 28659 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:57:21.913369 28659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:21.913378 28659 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:57:21.913383 28659 net.cpp:139] Memory required for data: 3390800
I0428 19:57:21.913389 28659 layer_factory.hpp:77] Creating layer accuracy
I0428 19:57:21.913400 28659 net.cpp:86] Creating Layer accuracy
I0428 19:57:21.913408 28659 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:57:21.913415 28659 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:57:21.913424 28659 net.cpp:382] accuracy -> accuracy
I0428 19:57:21.913437 28659 net.cpp:124] Setting up accuracy
I0428 19:57:21.913452 28659 net.cpp:131] Top shape: (1)
I0428 19:57:21.913458 28659 net.cpp:139] Memory required for data: 3390804
I0428 19:57:21.913465 28659 layer_factory.hpp:77] Creating layer loss
I0428 19:57:21.913476 28659 net.cpp:86] Creating Layer loss
I0428 19:57:21.913483 28659 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:57:21.913491 28659 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:57:21.913499 28659 net.cpp:382] loss -> loss
I0428 19:57:21.913511 28659 layer_factory.hpp:77] Creating layer loss
I0428 19:57:21.913807 28659 net.cpp:124] Setting up loss
I0428 19:57:21.913820 28659 net.cpp:131] Top shape: (1)
I0428 19:57:21.913826 28659 net.cpp:134]     with loss weight 1
I0428 19:57:21.913837 28659 net.cpp:139] Memory required for data: 3390808
I0428 19:57:21.913844 28659 net.cpp:200] loss needs backward computation.
I0428 19:57:21.913851 28659 net.cpp:202] accuracy does not need backward computation.
I0428 19:57:21.913859 28659 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:57:21.913866 28659 net.cpp:200] relu2 needs backward computation.
I0428 19:57:21.913872 28659 net.cpp:200] ip2 needs backward computation.
I0428 19:57:21.913879 28659 net.cpp:200] relu1 needs backward computation.
I0428 19:57:21.913884 28659 net.cpp:200] ip1 needs backward computation.
I0428 19:57:21.913892 28659 net.cpp:200] pool1 needs backward computation.
I0428 19:57:21.913897 28659 net.cpp:200] conv1 needs backward computation.
I0428 19:57:21.913904 28659 net.cpp:200] pool0 needs backward computation.
I0428 19:57:21.913910 28659 net.cpp:200] conv0 needs backward computation.
I0428 19:57:21.913918 28659 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:57:21.913926 28659 net.cpp:202] mnist does not need backward computation.
I0428 19:57:21.913934 28659 net.cpp:244] This network produces output accuracy
I0428 19:57:21.913941 28659 net.cpp:244] This network produces output loss
I0428 19:57:21.913959 28659 net.cpp:257] Network initialization done.
I0428 19:57:21.914011 28659 solver.cpp:56] Solver scaffolding done.
I0428 19:57:21.914379 28659 caffe.cpp:248] Starting Optimization
I0428 19:57:21.914389 28659 solver.cpp:273] Solving LeNet
I0428 19:57:21.914394 28659 solver.cpp:274] Learning Rate Policy: inv
I0428 19:57:21.914571 28659 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:57:21.918814 28659 blocking_queue.cpp:49] Waiting for data
I0428 19:57:21.989393 28666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:21.989903 28659 solver.cpp:398]     Test net output #0: accuracy = 0.144
I0428 19:57:21.989929 28659 solver.cpp:398]     Test net output #1: loss = 2.29509 (* 1 = 2.29509 loss)
I0428 19:57:21.992498 28659 solver.cpp:219] Iteration 0 (0 iter/s, 0.0780534s/100 iters), loss = 2.30447
I0428 19:57:21.992532 28659 solver.cpp:238]     Train net output #0: loss = 2.30447 (* 1 = 2.30447 loss)
I0428 19:57:21.992550 28659 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:57:22.064179 28659 solver.cpp:219] Iteration 100 (1395.91 iter/s, 0.071638s/100 iters), loss = 1.78598
I0428 19:57:22.064215 28659 solver.cpp:238]     Train net output #0: loss = 1.78598 (* 1 = 1.78598 loss)
I0428 19:57:22.064226 28659 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:57:22.135360 28659 solver.cpp:219] Iteration 200 (1405.77 iter/s, 0.0711352s/100 iters), loss = 1.77435
I0428 19:57:22.135404 28659 solver.cpp:238]     Train net output #0: loss = 1.77435 (* 1 = 1.77435 loss)
I0428 19:57:22.135416 28659 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:57:22.217165 28659 solver.cpp:219] Iteration 300 (1223.21 iter/s, 0.0817521s/100 iters), loss = 1.70456
I0428 19:57:22.217208 28659 solver.cpp:238]     Train net output #0: loss = 1.70456 (* 1 = 1.70456 loss)
I0428 19:57:22.217218 28659 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:57:22.305712 28659 solver.cpp:219] Iteration 400 (1129.99 iter/s, 0.0884961s/100 iters), loss = 1.56483
I0428 19:57:22.305748 28659 solver.cpp:238]     Train net output #0: loss = 1.56483 (* 1 = 1.56483 loss)
I0428 19:57:22.305757 28659 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:57:22.377697 28659 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:57:22.453331 28666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:22.453853 28659 solver.cpp:398]     Test net output #0: accuracy = 0.3783
I0428 19:57:22.453877 28659 solver.cpp:398]     Test net output #1: loss = 1.70144 (* 1 = 1.70144 loss)
I0428 19:57:22.454712 28659 solver.cpp:219] Iteration 500 (671.353 iter/s, 0.148953s/100 iters), loss = 1.6842
I0428 19:57:22.454741 28659 solver.cpp:238]     Train net output #0: loss = 1.6842 (* 1 = 1.6842 loss)
I0428 19:57:22.454748 28659 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:57:22.527371 28659 solver.cpp:219] Iteration 600 (1377.01 iter/s, 0.072621s/100 iters), loss = 1.70827
I0428 19:57:22.527400 28659 solver.cpp:238]     Train net output #0: loss = 1.70827 (* 1 = 1.70827 loss)
I0428 19:57:22.527408 28659 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:57:22.599529 28659 solver.cpp:219] Iteration 700 (1386.59 iter/s, 0.0721194s/100 iters), loss = 1.82199
I0428 19:57:22.599560 28659 solver.cpp:238]     Train net output #0: loss = 1.82199 (* 1 = 1.82199 loss)
I0428 19:57:22.599566 28659 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:57:22.671906 28659 solver.cpp:219] Iteration 800 (1382.43 iter/s, 0.0723364s/100 iters), loss = 1.51007
I0428 19:57:22.671937 28659 solver.cpp:238]     Train net output #0: loss = 1.51007 (* 1 = 1.51007 loss)
I0428 19:57:22.671944 28659 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:57:22.743737 28659 solver.cpp:219] Iteration 900 (1392.92 iter/s, 0.0717916s/100 iters), loss = 1.42957
I0428 19:57:22.743765 28659 solver.cpp:238]     Train net output #0: loss = 1.42957 (* 1 = 1.42957 loss)
I0428 19:57:22.743772 28659 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:57:22.767423 28665 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:22.813882 28659 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:57:22.814565 28659 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:57:22.815243 28659 solver.cpp:311] Iteration 1000, loss = 1.62124
I0428 19:57:22.815275 28659 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:57:22.890656 28666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:57:22.891216 28659 solver.cpp:398]     Test net output #0: accuracy = 0.4797
I0428 19:57:22.891245 28659 solver.cpp:398]     Test net output #1: loss = 1.46667 (* 1 = 1.46667 loss)
I0428 19:57:22.891257 28659 solver.cpp:316] Optimization Done.
I0428 19:57:22.891261 28659 caffe.cpp:259] Optimization Done.
