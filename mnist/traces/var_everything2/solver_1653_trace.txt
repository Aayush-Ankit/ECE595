I0428 20:37:35.088093  4972 caffe.cpp:218] Using GPUs 0
I0428 20:37:35.117914  4972 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:35.567466  4972 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1653.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:35.567600  4972 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1653.prototxt
I0428 20:37:35.567955  4972 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:35.567986  4972 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:35.568064  4972 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:35.568130  4972 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:35.568210  4972 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:35.568229  4972 net.cpp:86] Creating Layer mnist
I0428 20:37:35.568235  4972 net.cpp:382] mnist -> data
I0428 20:37:35.568254  4972 net.cpp:382] mnist -> label
I0428 20:37:35.569238  4972 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:35.571452  4972 net.cpp:124] Setting up mnist
I0428 20:37:35.571481  4972 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:35.571486  4972 net.cpp:131] Top shape: 64 (64)
I0428 20:37:35.571490  4972 net.cpp:139] Memory required for data: 200960
I0428 20:37:35.571496  4972 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:35.571509  4972 net.cpp:86] Creating Layer conv0
I0428 20:37:35.571526  4972 net.cpp:408] conv0 <- data
I0428 20:37:35.571535  4972 net.cpp:382] conv0 -> conv0
I0428 20:37:35.799978  4972 net.cpp:124] Setting up conv0
I0428 20:37:35.800004  4972 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:35.800007  4972 net.cpp:139] Memory required for data: 14946560
I0428 20:37:35.800020  4972 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:35.800034  4972 net.cpp:86] Creating Layer pool0
I0428 20:37:35.800036  4972 net.cpp:408] pool0 <- conv0
I0428 20:37:35.800041  4972 net.cpp:382] pool0 -> pool0
I0428 20:37:35.800101  4972 net.cpp:124] Setting up pool0
I0428 20:37:35.800107  4972 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:35.800110  4972 net.cpp:139] Memory required for data: 18632960
I0428 20:37:35.800113  4972 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:35.800123  4972 net.cpp:86] Creating Layer conv1
I0428 20:37:35.800127  4972 net.cpp:408] conv1 <- pool0
I0428 20:37:35.800132  4972 net.cpp:382] conv1 -> conv1
I0428 20:37:35.804167  4972 net.cpp:124] Setting up conv1
I0428 20:37:35.804196  4972 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:35.804200  4972 net.cpp:139] Memory required for data: 20271360
I0428 20:37:35.804208  4972 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:35.804215  4972 net.cpp:86] Creating Layer pool1
I0428 20:37:35.804219  4972 net.cpp:408] pool1 <- conv1
I0428 20:37:35.804239  4972 net.cpp:382] pool1 -> pool1
I0428 20:37:35.804273  4972 net.cpp:124] Setting up pool1
I0428 20:37:35.804280  4972 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:35.804283  4972 net.cpp:139] Memory required for data: 20680960
I0428 20:37:35.804286  4972 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:35.804292  4972 net.cpp:86] Creating Layer ip1
I0428 20:37:35.804296  4972 net.cpp:408] ip1 <- pool1
I0428 20:37:35.804301  4972 net.cpp:382] ip1 -> ip1
I0428 20:37:35.805359  4972 net.cpp:124] Setting up ip1
I0428 20:37:35.805388  4972 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:35.805392  4972 net.cpp:139] Memory required for data: 20683520
I0428 20:37:35.805399  4972 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:35.805407  4972 net.cpp:86] Creating Layer relu1
I0428 20:37:35.805409  4972 net.cpp:408] relu1 <- ip1
I0428 20:37:35.805414  4972 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:35.805590  4972 net.cpp:124] Setting up relu1
I0428 20:37:35.805599  4972 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:35.805603  4972 net.cpp:139] Memory required for data: 20686080
I0428 20:37:35.805605  4972 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:35.805611  4972 net.cpp:86] Creating Layer ip2
I0428 20:37:35.805615  4972 net.cpp:408] ip2 <- ip1
I0428 20:37:35.805620  4972 net.cpp:382] ip2 -> ip2
I0428 20:37:35.805709  4972 net.cpp:124] Setting up ip2
I0428 20:37:35.805716  4972 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:37:35.805719  4972 net.cpp:139] Memory required for data: 20692480
I0428 20:37:35.805724  4972 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:35.805729  4972 net.cpp:86] Creating Layer relu2
I0428 20:37:35.805732  4972 net.cpp:408] relu2 <- ip2
I0428 20:37:35.805737  4972 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:35.806509  4972 net.cpp:124] Setting up relu2
I0428 20:37:35.806521  4972 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:37:35.806541  4972 net.cpp:139] Memory required for data: 20698880
I0428 20:37:35.806545  4972 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:35.806553  4972 net.cpp:86] Creating Layer ip3
I0428 20:37:35.806556  4972 net.cpp:408] ip3 <- ip2
I0428 20:37:35.806562  4972 net.cpp:382] ip3 -> ip3
I0428 20:37:35.806656  4972 net.cpp:124] Setting up ip3
I0428 20:37:35.806663  4972 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:35.806666  4972 net.cpp:139] Memory required for data: 20701440
I0428 20:37:35.806674  4972 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:35.806679  4972 net.cpp:86] Creating Layer relu3
I0428 20:37:35.806682  4972 net.cpp:408] relu3 <- ip3
I0428 20:37:35.806704  4972 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:35.806849  4972 net.cpp:124] Setting up relu3
I0428 20:37:35.806872  4972 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:35.806876  4972 net.cpp:139] Memory required for data: 20704000
I0428 20:37:35.806879  4972 layer_factory.hpp:77] Creating layer loss
I0428 20:37:35.806890  4972 net.cpp:86] Creating Layer loss
I0428 20:37:35.806896  4972 net.cpp:408] loss <- ip3
I0428 20:37:35.806900  4972 net.cpp:408] loss <- label
I0428 20:37:35.806906  4972 net.cpp:382] loss -> loss
I0428 20:37:35.806921  4972 layer_factory.hpp:77] Creating layer loss
I0428 20:37:35.807153  4972 net.cpp:124] Setting up loss
I0428 20:37:35.807163  4972 net.cpp:131] Top shape: (1)
I0428 20:37:35.807166  4972 net.cpp:134]     with loss weight 1
I0428 20:37:35.807195  4972 net.cpp:139] Memory required for data: 20704004
I0428 20:37:35.807216  4972 net.cpp:200] loss needs backward computation.
I0428 20:37:35.807219  4972 net.cpp:200] relu3 needs backward computation.
I0428 20:37:35.807224  4972 net.cpp:200] ip3 needs backward computation.
I0428 20:37:35.807226  4972 net.cpp:200] relu2 needs backward computation.
I0428 20:37:35.807229  4972 net.cpp:200] ip2 needs backward computation.
I0428 20:37:35.807231  4972 net.cpp:200] relu1 needs backward computation.
I0428 20:37:35.807235  4972 net.cpp:200] ip1 needs backward computation.
I0428 20:37:35.807237  4972 net.cpp:200] pool1 needs backward computation.
I0428 20:37:35.807240  4972 net.cpp:200] conv1 needs backward computation.
I0428 20:37:35.807243  4972 net.cpp:200] pool0 needs backward computation.
I0428 20:37:35.807246  4972 net.cpp:200] conv0 needs backward computation.
I0428 20:37:35.807250  4972 net.cpp:202] mnist does not need backward computation.
I0428 20:37:35.807268  4972 net.cpp:244] This network produces output loss
I0428 20:37:35.807277  4972 net.cpp:257] Network initialization done.
I0428 20:37:35.807664  4972 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1653.prototxt
I0428 20:37:35.807705  4972 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:35.807795  4972 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:35.807871  4972 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:35.807915  4972 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:35.807927  4972 net.cpp:86] Creating Layer mnist
I0428 20:37:35.807932  4972 net.cpp:382] mnist -> data
I0428 20:37:35.807940  4972 net.cpp:382] mnist -> label
I0428 20:37:35.808040  4972 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:35.810428  4972 net.cpp:124] Setting up mnist
I0428 20:37:35.810457  4972 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:35.810462  4972 net.cpp:131] Top shape: 100 (100)
I0428 20:37:35.810467  4972 net.cpp:139] Memory required for data: 314000
I0428 20:37:35.810484  4972 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:35.810490  4972 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:35.810494  4972 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:35.810498  4972 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:35.810505  4972 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:35.810606  4972 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:35.810612  4972 net.cpp:131] Top shape: 100 (100)
I0428 20:37:35.810616  4972 net.cpp:131] Top shape: 100 (100)
I0428 20:37:35.810619  4972 net.cpp:139] Memory required for data: 314800
I0428 20:37:35.810622  4972 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:35.810631  4972 net.cpp:86] Creating Layer conv0
I0428 20:37:35.810633  4972 net.cpp:408] conv0 <- data
I0428 20:37:35.810638  4972 net.cpp:382] conv0 -> conv0
I0428 20:37:35.812163  4972 net.cpp:124] Setting up conv0
I0428 20:37:35.812176  4972 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:35.812180  4972 net.cpp:139] Memory required for data: 23354800
I0428 20:37:35.812203  4972 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:35.812209  4972 net.cpp:86] Creating Layer pool0
I0428 20:37:35.812212  4972 net.cpp:408] pool0 <- conv0
I0428 20:37:35.812217  4972 net.cpp:382] pool0 -> pool0
I0428 20:37:35.812252  4972 net.cpp:124] Setting up pool0
I0428 20:37:35.812258  4972 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:35.812261  4972 net.cpp:139] Memory required for data: 29114800
I0428 20:37:35.812264  4972 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:35.812273  4972 net.cpp:86] Creating Layer conv1
I0428 20:37:35.812275  4972 net.cpp:408] conv1 <- pool0
I0428 20:37:35.812279  4972 net.cpp:382] conv1 -> conv1
I0428 20:37:35.815423  4972 net.cpp:124] Setting up conv1
I0428 20:37:35.815438  4972 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:35.815443  4972 net.cpp:139] Memory required for data: 31674800
I0428 20:37:35.815472  4972 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:35.815479  4972 net.cpp:86] Creating Layer pool1
I0428 20:37:35.815482  4972 net.cpp:408] pool1 <- conv1
I0428 20:37:35.815487  4972 net.cpp:382] pool1 -> pool1
I0428 20:37:35.815521  4972 net.cpp:124] Setting up pool1
I0428 20:37:35.815527  4972 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:35.815531  4972 net.cpp:139] Memory required for data: 32314800
I0428 20:37:35.815533  4972 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:35.815539  4972 net.cpp:86] Creating Layer ip1
I0428 20:37:35.815542  4972 net.cpp:408] ip1 <- pool1
I0428 20:37:35.815547  4972 net.cpp:382] ip1 -> ip1
I0428 20:37:35.815800  4972 net.cpp:124] Setting up ip1
I0428 20:37:35.815819  4972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:35.815822  4972 net.cpp:139] Memory required for data: 32318800
I0428 20:37:35.815829  4972 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:35.815834  4972 net.cpp:86] Creating Layer relu1
I0428 20:37:35.815838  4972 net.cpp:408] relu1 <- ip1
I0428 20:37:35.815842  4972 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:35.816022  4972 net.cpp:124] Setting up relu1
I0428 20:37:35.816030  4972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:35.816033  4972 net.cpp:139] Memory required for data: 32322800
I0428 20:37:35.816036  4972 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:35.816043  4972 net.cpp:86] Creating Layer ip2
I0428 20:37:35.816046  4972 net.cpp:408] ip2 <- ip1
I0428 20:37:35.816051  4972 net.cpp:382] ip2 -> ip2
I0428 20:37:35.816154  4972 net.cpp:124] Setting up ip2
I0428 20:37:35.816160  4972 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:37:35.816164  4972 net.cpp:139] Memory required for data: 32332800
I0428 20:37:35.816169  4972 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:35.816172  4972 net.cpp:86] Creating Layer relu2
I0428 20:37:35.816174  4972 net.cpp:408] relu2 <- ip2
I0428 20:37:35.816179  4972 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:35.816308  4972 net.cpp:124] Setting up relu2
I0428 20:37:35.816314  4972 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:37:35.816318  4972 net.cpp:139] Memory required for data: 32342800
I0428 20:37:35.816320  4972 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:35.816325  4972 net.cpp:86] Creating Layer ip3
I0428 20:37:35.816329  4972 net.cpp:408] ip3 <- ip2
I0428 20:37:35.816332  4972 net.cpp:382] ip3 -> ip3
I0428 20:37:35.816417  4972 net.cpp:124] Setting up ip3
I0428 20:37:35.816438  4972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:35.816442  4972 net.cpp:139] Memory required for data: 32346800
I0428 20:37:35.816448  4972 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:35.816452  4972 net.cpp:86] Creating Layer relu3
I0428 20:37:35.816455  4972 net.cpp:408] relu3 <- ip3
I0428 20:37:35.816459  4972 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:35.817270  4972 net.cpp:124] Setting up relu3
I0428 20:37:35.817283  4972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:35.817286  4972 net.cpp:139] Memory required for data: 32350800
I0428 20:37:35.817289  4972 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:35.817296  4972 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:35.817298  4972 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:35.817303  4972 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:35.817309  4972 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:35.817343  4972 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:35.817350  4972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:35.817353  4972 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:35.817356  4972 net.cpp:139] Memory required for data: 32358800
I0428 20:37:35.817359  4972 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:35.817364  4972 net.cpp:86] Creating Layer accuracy
I0428 20:37:35.817368  4972 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:35.817371  4972 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:35.817375  4972 net.cpp:382] accuracy -> accuracy
I0428 20:37:35.817381  4972 net.cpp:124] Setting up accuracy
I0428 20:37:35.817385  4972 net.cpp:131] Top shape: (1)
I0428 20:37:35.817389  4972 net.cpp:139] Memory required for data: 32358804
I0428 20:37:35.817391  4972 layer_factory.hpp:77] Creating layer loss
I0428 20:37:35.817395  4972 net.cpp:86] Creating Layer loss
I0428 20:37:35.817399  4972 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:35.817402  4972 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:35.817406  4972 net.cpp:382] loss -> loss
I0428 20:37:35.817411  4972 layer_factory.hpp:77] Creating layer loss
I0428 20:37:35.817628  4972 net.cpp:124] Setting up loss
I0428 20:37:35.817636  4972 net.cpp:131] Top shape: (1)
I0428 20:37:35.817641  4972 net.cpp:134]     with loss weight 1
I0428 20:37:35.817657  4972 net.cpp:139] Memory required for data: 32358808
I0428 20:37:35.817662  4972 net.cpp:200] loss needs backward computation.
I0428 20:37:35.817664  4972 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:35.817668  4972 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:35.817672  4972 net.cpp:200] relu3 needs backward computation.
I0428 20:37:35.817674  4972 net.cpp:200] ip3 needs backward computation.
I0428 20:37:35.817677  4972 net.cpp:200] relu2 needs backward computation.
I0428 20:37:35.817679  4972 net.cpp:200] ip2 needs backward computation.
I0428 20:37:35.817682  4972 net.cpp:200] relu1 needs backward computation.
I0428 20:37:35.817684  4972 net.cpp:200] ip1 needs backward computation.
I0428 20:37:35.817687  4972 net.cpp:200] pool1 needs backward computation.
I0428 20:37:35.817690  4972 net.cpp:200] conv1 needs backward computation.
I0428 20:37:35.817693  4972 net.cpp:200] pool0 needs backward computation.
I0428 20:37:35.817697  4972 net.cpp:200] conv0 needs backward computation.
I0428 20:37:35.817699  4972 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:35.817703  4972 net.cpp:202] mnist does not need backward computation.
I0428 20:37:35.817705  4972 net.cpp:244] This network produces output accuracy
I0428 20:37:35.817708  4972 net.cpp:244] This network produces output loss
I0428 20:37:35.817718  4972 net.cpp:257] Network initialization done.
I0428 20:37:35.817756  4972 solver.cpp:56] Solver scaffolding done.
I0428 20:37:35.818145  4972 caffe.cpp:248] Starting Optimization
I0428 20:37:35.818152  4972 solver.cpp:273] Solving LeNet
I0428 20:37:35.818156  4972 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:35.818915  4972 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:35.946570  4979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:35.950115  4972 solver.cpp:398]     Test net output #0: accuracy = 0.101
I0428 20:37:35.950134  4972 solver.cpp:398]     Test net output #1: loss = 2.31528 (* 1 = 2.31528 loss)
I0428 20:37:35.958851  4972 solver.cpp:219] Iteration 0 (-3.5798e-31 iter/s, 0.140655s/100 iters), loss = 2.3011
I0428 20:37:35.958873  4972 solver.cpp:238]     Train net output #0: loss = 2.3011 (* 1 = 2.3011 loss)
I0428 20:37:35.958899  4972 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:36.248486  4972 solver.cpp:219] Iteration 100 (345.317 iter/s, 0.289589s/100 iters), loss = 0.600405
I0428 20:37:36.248512  4972 solver.cpp:238]     Train net output #0: loss = 0.600405 (* 1 = 0.600405 loss)
I0428 20:37:36.248518  4972 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:36.549746  4972 solver.cpp:219] Iteration 200 (331.99 iter/s, 0.301214s/100 iters), loss = 0.703266
I0428 20:37:36.549772  4972 solver.cpp:238]     Train net output #0: loss = 0.703266 (* 1 = 0.703266 loss)
I0428 20:37:36.549778  4972 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:36.853502  4972 solver.cpp:219] Iteration 300 (329.263 iter/s, 0.303708s/100 iters), loss = 0.468709
I0428 20:37:36.853530  4972 solver.cpp:238]     Train net output #0: loss = 0.468709 (* 1 = 0.468709 loss)
I0428 20:37:36.853536  4972 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:37.149158  4972 solver.cpp:219] Iteration 400 (338.286 iter/s, 0.295608s/100 iters), loss = 0.388953
I0428 20:37:37.149199  4972 solver.cpp:238]     Train net output #0: loss = 0.388953 (* 1 = 0.388953 loss)
I0428 20:37:37.149206  4972 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:37.439335  4972 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:37.572880  4979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:37.576706  4972 solver.cpp:398]     Test net output #0: accuracy = 0.869
I0428 20:37:37.576726  4972 solver.cpp:398]     Test net output #1: loss = 0.346405 (* 1 = 0.346405 loss)
I0428 20:37:37.579533  4972 solver.cpp:219] Iteration 500 (232.383 iter/s, 0.430324s/100 iters), loss = 0.305894
I0428 20:37:37.579555  4972 solver.cpp:238]     Train net output #0: loss = 0.305894 (* 1 = 0.305894 loss)
I0428 20:37:37.579586  4972 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:37.863692  4972 solver.cpp:219] Iteration 600 (351.97 iter/s, 0.284115s/100 iters), loss = 0.386265
I0428 20:37:37.863726  4972 solver.cpp:238]     Train net output #0: loss = 0.386265 (* 1 = 0.386265 loss)
I0428 20:37:37.863749  4972 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:38.137066  4972 solver.cpp:219] Iteration 700 (365.869 iter/s, 0.273322s/100 iters), loss = 0.243113
I0428 20:37:38.137092  4972 solver.cpp:238]     Train net output #0: loss = 0.243113 (* 1 = 0.243113 loss)
I0428 20:37:38.137099  4972 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:38.405108  4972 solver.cpp:219] Iteration 800 (373.138 iter/s, 0.267997s/100 iters), loss = 0.605558
I0428 20:37:38.405149  4972 solver.cpp:238]     Train net output #0: loss = 0.605558 (* 1 = 0.605558 loss)
I0428 20:37:38.405156  4972 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:38.679019  4972 solver.cpp:219] Iteration 900 (365.16 iter/s, 0.273852s/100 iters), loss = 0.617442
I0428 20:37:38.679044  4972 solver.cpp:238]     Train net output #0: loss = 0.617442 (* 1 = 0.617442 loss)
I0428 20:37:38.679050  4972 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:38.769771  4978 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:38.951690  4972 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:38.956938  4972 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:38.960049  4972 solver.cpp:311] Iteration 1000, loss = 0.27954
I0428 20:37:38.960079  4972 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:39.088646  4979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:39.093039  4972 solver.cpp:398]     Test net output #0: accuracy = 0.8778
I0428 20:37:39.093056  4972 solver.cpp:398]     Test net output #1: loss = 0.312452 (* 1 = 0.312452 loss)
I0428 20:37:39.093061  4972 solver.cpp:316] Optimization Done.
I0428 20:37:39.093065  4972 caffe.cpp:259] Optimization Done.
