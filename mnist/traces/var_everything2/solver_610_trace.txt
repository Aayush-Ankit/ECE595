I0428 19:50:37.653875 27059 caffe.cpp:218] Using GPUs 0
I0428 19:50:37.688730 27059 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:38.213613 27059 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test610.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:38.213759 27059 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test610.prototxt
I0428 19:50:38.214177 27059 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:38.214196 27059 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:38.214301 27059 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:38.214381 27059 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:38.214481 27059 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:38.214504 27059 net.cpp:86] Creating Layer mnist
I0428 19:50:38.214514 27059 net.cpp:382] mnist -> data
I0428 19:50:38.214536 27059 net.cpp:382] mnist -> label
I0428 19:50:38.215617 27059 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:38.218277 27059 net.cpp:124] Setting up mnist
I0428 19:50:38.218297 27059 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:38.218303 27059 net.cpp:131] Top shape: 64 (64)
I0428 19:50:38.218307 27059 net.cpp:139] Memory required for data: 200960
I0428 19:50:38.218314 27059 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:38.218330 27059 net.cpp:86] Creating Layer conv0
I0428 19:50:38.218351 27059 net.cpp:408] conv0 <- data
I0428 19:50:38.218366 27059 net.cpp:382] conv0 -> conv0
I0428 19:50:38.510571 27059 net.cpp:124] Setting up conv0
I0428 19:50:38.510601 27059 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:38.510607 27059 net.cpp:139] Memory required for data: 938240
I0428 19:50:38.510624 27059 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:38.510639 27059 net.cpp:86] Creating Layer pool0
I0428 19:50:38.510644 27059 net.cpp:408] pool0 <- conv0
I0428 19:50:38.510650 27059 net.cpp:382] pool0 -> pool0
I0428 19:50:38.510707 27059 net.cpp:124] Setting up pool0
I0428 19:50:38.510713 27059 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:38.510718 27059 net.cpp:139] Memory required for data: 1122560
I0428 19:50:38.510721 27059 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:38.510735 27059 net.cpp:86] Creating Layer conv1
I0428 19:50:38.510738 27059 net.cpp:408] conv1 <- pool0
I0428 19:50:38.510745 27059 net.cpp:382] conv1 -> conv1
I0428 19:50:38.513907 27059 net.cpp:124] Setting up conv1
I0428 19:50:38.513926 27059 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:38.513931 27059 net.cpp:139] Memory required for data: 1286400
I0428 19:50:38.513942 27059 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:38.513952 27059 net.cpp:86] Creating Layer pool1
I0428 19:50:38.513957 27059 net.cpp:408] pool1 <- conv1
I0428 19:50:38.513962 27059 net.cpp:382] pool1 -> pool1
I0428 19:50:38.514012 27059 net.cpp:124] Setting up pool1
I0428 19:50:38.514019 27059 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:38.514022 27059 net.cpp:139] Memory required for data: 1327360
I0428 19:50:38.514025 27059 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:38.514034 27059 net.cpp:86] Creating Layer ip1
I0428 19:50:38.514037 27059 net.cpp:408] ip1 <- pool1
I0428 19:50:38.514044 27059 net.cpp:382] ip1 -> ip1
I0428 19:50:38.514192 27059 net.cpp:124] Setting up ip1
I0428 19:50:38.514201 27059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:38.514205 27059 net.cpp:139] Memory required for data: 1333760
I0428 19:50:38.514216 27059 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:38.514223 27059 net.cpp:86] Creating Layer relu1
I0428 19:50:38.514226 27059 net.cpp:408] relu1 <- ip1
I0428 19:50:38.514233 27059 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:38.514436 27059 net.cpp:124] Setting up relu1
I0428 19:50:38.514447 27059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:38.514451 27059 net.cpp:139] Memory required for data: 1340160
I0428 19:50:38.514454 27059 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:38.514462 27059 net.cpp:86] Creating Layer ip2
I0428 19:50:38.514467 27059 net.cpp:408] ip2 <- ip1
I0428 19:50:38.514472 27059 net.cpp:382] ip2 -> ip2
I0428 19:50:38.514593 27059 net.cpp:124] Setting up ip2
I0428 19:50:38.514601 27059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:38.514605 27059 net.cpp:139] Memory required for data: 1346560
I0428 19:50:38.514611 27059 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:38.514619 27059 net.cpp:86] Creating Layer relu2
I0428 19:50:38.514623 27059 net.cpp:408] relu2 <- ip2
I0428 19:50:38.514629 27059 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:38.515476 27059 net.cpp:124] Setting up relu2
I0428 19:50:38.515491 27059 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:38.515496 27059 net.cpp:139] Memory required for data: 1352960
I0428 19:50:38.515499 27059 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:38.515509 27059 net.cpp:86] Creating Layer ip3
I0428 19:50:38.515513 27059 net.cpp:408] ip3 <- ip2
I0428 19:50:38.515519 27059 net.cpp:382] ip3 -> ip3
I0428 19:50:38.515641 27059 net.cpp:124] Setting up ip3
I0428 19:50:38.515650 27059 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:38.515653 27059 net.cpp:139] Memory required for data: 1355520
I0428 19:50:38.515664 27059 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:38.515671 27059 net.cpp:86] Creating Layer relu3
I0428 19:50:38.515674 27059 net.cpp:408] relu3 <- ip3
I0428 19:50:38.515678 27059 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:38.515888 27059 net.cpp:124] Setting up relu3
I0428 19:50:38.515900 27059 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:38.515904 27059 net.cpp:139] Memory required for data: 1358080
I0428 19:50:38.515908 27059 layer_factory.hpp:77] Creating layer loss
I0428 19:50:38.515914 27059 net.cpp:86] Creating Layer loss
I0428 19:50:38.515918 27059 net.cpp:408] loss <- ip3
I0428 19:50:38.515923 27059 net.cpp:408] loss <- label
I0428 19:50:38.515928 27059 net.cpp:382] loss -> loss
I0428 19:50:38.515947 27059 layer_factory.hpp:77] Creating layer loss
I0428 19:50:38.516233 27059 net.cpp:124] Setting up loss
I0428 19:50:38.516243 27059 net.cpp:131] Top shape: (1)
I0428 19:50:38.516247 27059 net.cpp:134]     with loss weight 1
I0428 19:50:38.516263 27059 net.cpp:139] Memory required for data: 1358084
I0428 19:50:38.516266 27059 net.cpp:200] loss needs backward computation.
I0428 19:50:38.516270 27059 net.cpp:200] relu3 needs backward computation.
I0428 19:50:38.516273 27059 net.cpp:200] ip3 needs backward computation.
I0428 19:50:38.516278 27059 net.cpp:200] relu2 needs backward computation.
I0428 19:50:38.516280 27059 net.cpp:200] ip2 needs backward computation.
I0428 19:50:38.516283 27059 net.cpp:200] relu1 needs backward computation.
I0428 19:50:38.516286 27059 net.cpp:200] ip1 needs backward computation.
I0428 19:50:38.516290 27059 net.cpp:200] pool1 needs backward computation.
I0428 19:50:38.516294 27059 net.cpp:200] conv1 needs backward computation.
I0428 19:50:38.516296 27059 net.cpp:200] pool0 needs backward computation.
I0428 19:50:38.516300 27059 net.cpp:200] conv0 needs backward computation.
I0428 19:50:38.516304 27059 net.cpp:202] mnist does not need backward computation.
I0428 19:50:38.516307 27059 net.cpp:244] This network produces output loss
I0428 19:50:38.516317 27059 net.cpp:257] Network initialization done.
I0428 19:50:38.516700 27059 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test610.prototxt
I0428 19:50:38.516731 27059 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:38.516849 27059 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:38.516952 27059 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:38.517009 27059 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:38.517022 27059 net.cpp:86] Creating Layer mnist
I0428 19:50:38.517030 27059 net.cpp:382] mnist -> data
I0428 19:50:38.517038 27059 net.cpp:382] mnist -> label
I0428 19:50:38.517140 27059 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:38.519326 27059 net.cpp:124] Setting up mnist
I0428 19:50:38.519342 27059 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:38.519348 27059 net.cpp:131] Top shape: 100 (100)
I0428 19:50:38.519351 27059 net.cpp:139] Memory required for data: 314000
I0428 19:50:38.519356 27059 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:38.519363 27059 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:38.519367 27059 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:38.519392 27059 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:38.519402 27059 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:38.519454 27059 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:38.519462 27059 net.cpp:131] Top shape: 100 (100)
I0428 19:50:38.519466 27059 net.cpp:131] Top shape: 100 (100)
I0428 19:50:38.519469 27059 net.cpp:139] Memory required for data: 314800
I0428 19:50:38.519474 27059 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:38.519484 27059 net.cpp:86] Creating Layer conv0
I0428 19:50:38.519487 27059 net.cpp:408] conv0 <- data
I0428 19:50:38.519493 27059 net.cpp:382] conv0 -> conv0
I0428 19:50:38.521275 27059 net.cpp:124] Setting up conv0
I0428 19:50:38.521291 27059 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:38.521296 27059 net.cpp:139] Memory required for data: 1466800
I0428 19:50:38.521307 27059 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:38.521314 27059 net.cpp:86] Creating Layer pool0
I0428 19:50:38.521318 27059 net.cpp:408] pool0 <- conv0
I0428 19:50:38.521325 27059 net.cpp:382] pool0 -> pool0
I0428 19:50:38.521371 27059 net.cpp:124] Setting up pool0
I0428 19:50:38.521378 27059 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:38.521380 27059 net.cpp:139] Memory required for data: 1754800
I0428 19:50:38.521384 27059 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:38.521396 27059 net.cpp:86] Creating Layer conv1
I0428 19:50:38.521399 27059 net.cpp:408] conv1 <- pool0
I0428 19:50:38.521405 27059 net.cpp:382] conv1 -> conv1
I0428 19:50:38.523759 27059 net.cpp:124] Setting up conv1
I0428 19:50:38.523777 27059 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:38.523782 27059 net.cpp:139] Memory required for data: 2010800
I0428 19:50:38.523792 27059 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:38.523802 27059 net.cpp:86] Creating Layer pool1
I0428 19:50:38.523808 27059 net.cpp:408] pool1 <- conv1
I0428 19:50:38.523813 27059 net.cpp:382] pool1 -> pool1
I0428 19:50:38.523890 27059 net.cpp:124] Setting up pool1
I0428 19:50:38.523900 27059 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:38.523903 27059 net.cpp:139] Memory required for data: 2074800
I0428 19:50:38.523906 27059 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:38.523913 27059 net.cpp:86] Creating Layer ip1
I0428 19:50:38.523919 27059 net.cpp:408] ip1 <- pool1
I0428 19:50:38.523924 27059 net.cpp:382] ip1 -> ip1
I0428 19:50:38.524113 27059 net.cpp:124] Setting up ip1
I0428 19:50:38.524123 27059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:38.524139 27059 net.cpp:139] Memory required for data: 2084800
I0428 19:50:38.524149 27059 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:38.524157 27059 net.cpp:86] Creating Layer relu1
I0428 19:50:38.524161 27059 net.cpp:408] relu1 <- ip1
I0428 19:50:38.524168 27059 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:38.524375 27059 net.cpp:124] Setting up relu1
I0428 19:50:38.524386 27059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:38.524390 27059 net.cpp:139] Memory required for data: 2094800
I0428 19:50:38.524394 27059 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:38.524404 27059 net.cpp:86] Creating Layer ip2
I0428 19:50:38.524407 27059 net.cpp:408] ip2 <- ip1
I0428 19:50:38.524415 27059 net.cpp:382] ip2 -> ip2
I0428 19:50:38.524539 27059 net.cpp:124] Setting up ip2
I0428 19:50:38.524550 27059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:38.524555 27059 net.cpp:139] Memory required for data: 2104800
I0428 19:50:38.524562 27059 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:38.524567 27059 net.cpp:86] Creating Layer relu2
I0428 19:50:38.524572 27059 net.cpp:408] relu2 <- ip2
I0428 19:50:38.524576 27059 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:38.524763 27059 net.cpp:124] Setting up relu2
I0428 19:50:38.524775 27059 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:38.524778 27059 net.cpp:139] Memory required for data: 2114800
I0428 19:50:38.524783 27059 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:38.524790 27059 net.cpp:86] Creating Layer ip3
I0428 19:50:38.524793 27059 net.cpp:408] ip3 <- ip2
I0428 19:50:38.524799 27059 net.cpp:382] ip3 -> ip3
I0428 19:50:38.524948 27059 net.cpp:124] Setting up ip3
I0428 19:50:38.524957 27059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:38.524961 27059 net.cpp:139] Memory required for data: 2118800
I0428 19:50:38.524971 27059 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:38.524981 27059 net.cpp:86] Creating Layer relu3
I0428 19:50:38.524984 27059 net.cpp:408] relu3 <- ip3
I0428 19:50:38.524991 27059 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:38.525887 27059 net.cpp:124] Setting up relu3
I0428 19:50:38.525902 27059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:38.525907 27059 net.cpp:139] Memory required for data: 2122800
I0428 19:50:38.525912 27059 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:38.525918 27059 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:38.525923 27059 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:38.525928 27059 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:38.525944 27059 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:38.525990 27059 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:38.525995 27059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:38.526000 27059 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:38.526003 27059 net.cpp:139] Memory required for data: 2130800
I0428 19:50:38.526006 27059 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:38.526013 27059 net.cpp:86] Creating Layer accuracy
I0428 19:50:38.526017 27059 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:38.526022 27059 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:38.526026 27059 net.cpp:382] accuracy -> accuracy
I0428 19:50:38.526036 27059 net.cpp:124] Setting up accuracy
I0428 19:50:38.526039 27059 net.cpp:131] Top shape: (1)
I0428 19:50:38.526043 27059 net.cpp:139] Memory required for data: 2130804
I0428 19:50:38.526047 27059 layer_factory.hpp:77] Creating layer loss
I0428 19:50:38.526053 27059 net.cpp:86] Creating Layer loss
I0428 19:50:38.526057 27059 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:38.526062 27059 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:38.526067 27059 net.cpp:382] loss -> loss
I0428 19:50:38.526073 27059 layer_factory.hpp:77] Creating layer loss
I0428 19:50:38.526357 27059 net.cpp:124] Setting up loss
I0428 19:50:38.526368 27059 net.cpp:131] Top shape: (1)
I0428 19:50:38.526372 27059 net.cpp:134]     with loss weight 1
I0428 19:50:38.526379 27059 net.cpp:139] Memory required for data: 2130808
I0428 19:50:38.526396 27059 net.cpp:200] loss needs backward computation.
I0428 19:50:38.526407 27059 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:38.526412 27059 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:38.526417 27059 net.cpp:200] relu3 needs backward computation.
I0428 19:50:38.526419 27059 net.cpp:200] ip3 needs backward computation.
I0428 19:50:38.526423 27059 net.cpp:200] relu2 needs backward computation.
I0428 19:50:38.526427 27059 net.cpp:200] ip2 needs backward computation.
I0428 19:50:38.526432 27059 net.cpp:200] relu1 needs backward computation.
I0428 19:50:38.526434 27059 net.cpp:200] ip1 needs backward computation.
I0428 19:50:38.526438 27059 net.cpp:200] pool1 needs backward computation.
I0428 19:50:38.526448 27059 net.cpp:200] conv1 needs backward computation.
I0428 19:50:38.526451 27059 net.cpp:200] pool0 needs backward computation.
I0428 19:50:38.526455 27059 net.cpp:200] conv0 needs backward computation.
I0428 19:50:38.526461 27059 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:38.526466 27059 net.cpp:202] mnist does not need backward computation.
I0428 19:50:38.526470 27059 net.cpp:244] This network produces output accuracy
I0428 19:50:38.526474 27059 net.cpp:244] This network produces output loss
I0428 19:50:38.526487 27059 net.cpp:257] Network initialization done.
I0428 19:50:38.526536 27059 solver.cpp:56] Solver scaffolding done.
I0428 19:50:38.526983 27059 caffe.cpp:248] Starting Optimization
I0428 19:50:38.526990 27059 solver.cpp:273] Solving LeNet
I0428 19:50:38.526993 27059 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:38.527953 27059 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:38.531224 27059 blocking_queue.cpp:49] Waiting for data
I0428 19:50:38.599241 27066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:38.599774 27059 solver.cpp:398]     Test net output #0: accuracy = 0.1008
I0428 19:50:38.599803 27059 solver.cpp:398]     Test net output #1: loss = 2.29976 (* 1 = 2.29976 loss)
I0428 19:50:38.601847 27059 solver.cpp:219] Iteration 0 (-1.08601e-42 iter/s, 0.0748216s/100 iters), loss = 2.28989
I0428 19:50:38.601878 27059 solver.cpp:238]     Train net output #0: loss = 2.28989 (* 1 = 2.28989 loss)
I0428 19:50:38.601893 27059 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:38.682546 27059 solver.cpp:219] Iteration 100 (1239.92 iter/s, 0.0806504s/100 iters), loss = 1.82861
I0428 19:50:38.682579 27059 solver.cpp:238]     Train net output #0: loss = 1.82861 (* 1 = 1.82861 loss)
I0428 19:50:38.682587 27059 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:38.761490 27059 solver.cpp:219] Iteration 200 (1267.37 iter/s, 0.0789033s/100 iters), loss = 1.3375
I0428 19:50:38.761518 27059 solver.cpp:238]     Train net output #0: loss = 1.3375 (* 1 = 1.3375 loss)
I0428 19:50:38.761524 27059 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:38.839427 27059 solver.cpp:219] Iteration 300 (1283.67 iter/s, 0.0779019s/100 iters), loss = 1.25907
I0428 19:50:38.839467 27059 solver.cpp:238]     Train net output #0: loss = 1.25907 (* 1 = 1.25907 loss)
I0428 19:50:38.839471 27059 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:38.917382 27059 solver.cpp:219] Iteration 400 (1283.57 iter/s, 0.0779078s/100 iters), loss = 0.836814
I0428 19:50:38.917404 27059 solver.cpp:238]     Train net output #0: loss = 0.836814 (* 1 = 0.836814 loss)
I0428 19:50:38.917409 27059 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:38.995379 27059 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:39.048905 27066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:39.049474 27059 solver.cpp:398]     Test net output #0: accuracy = 0.5678
I0428 19:50:39.049507 27059 solver.cpp:398]     Test net output #1: loss = 1.08427 (* 1 = 1.08427 loss)
I0428 19:50:39.050329 27059 solver.cpp:219] Iteration 500 (752.366 iter/s, 0.132914s/100 iters), loss = 1.13868
I0428 19:50:39.050359 27059 solver.cpp:238]     Train net output #0: loss = 1.13868 (* 1 = 1.13868 loss)
I0428 19:50:39.050380 27059 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:39.133054 27059 solver.cpp:219] Iteration 600 (1209.35 iter/s, 0.082689s/100 iters), loss = 1.24609
I0428 19:50:39.133093 27059 solver.cpp:238]     Train net output #0: loss = 1.24609 (* 1 = 1.24609 loss)
I0428 19:50:39.133100 27059 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:39.212023 27059 solver.cpp:219] Iteration 700 (1267.09 iter/s, 0.0789207s/100 iters), loss = 1.26382
I0428 19:50:39.212046 27059 solver.cpp:238]     Train net output #0: loss = 1.26382 (* 1 = 1.26382 loss)
I0428 19:50:39.212052 27059 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:39.294337 27059 solver.cpp:219] Iteration 800 (1215.39 iter/s, 0.0822782s/100 iters), loss = 1.03285
I0428 19:50:39.294371 27059 solver.cpp:238]     Train net output #0: loss = 1.03285 (* 1 = 1.03285 loss)
I0428 19:50:39.294380 27059 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:39.374228 27059 solver.cpp:219] Iteration 900 (1252.4 iter/s, 0.0798465s/100 iters), loss = 0.86674
I0428 19:50:39.374258 27059 solver.cpp:238]     Train net output #0: loss = 0.86674 (* 1 = 0.86674 loss)
I0428 19:50:39.374264 27059 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:39.399500 27065 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:39.448325 27059 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:39.449120 27059 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:39.449610 27059 solver.cpp:311] Iteration 1000, loss = 1.15494
I0428 19:50:39.449625 27059 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:39.502449 27066 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:39.502995 27059 solver.cpp:398]     Test net output #0: accuracy = 0.5841
I0428 19:50:39.503031 27059 solver.cpp:398]     Test net output #1: loss = 1.00779 (* 1 = 1.00779 loss)
I0428 19:50:39.503036 27059 solver.cpp:316] Optimization Done.
I0428 19:50:39.503039 27059 caffe.cpp:259] Optimization Done.
