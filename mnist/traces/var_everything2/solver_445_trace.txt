I0428 19:44:20.471760 25582 caffe.cpp:218] Using GPUs 0
I0428 19:44:20.506142 25582 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:21.015970 25582 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test445.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:21.016110 25582 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test445.prototxt
I0428 19:44:21.016526 25582 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:21.016544 25582 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:21.016643 25582 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:21.016716 25582 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:21.016824 25582 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:21.016849 25582 net.cpp:86] Creating Layer mnist
I0428 19:44:21.016856 25582 net.cpp:382] mnist -> data
I0428 19:44:21.016878 25582 net.cpp:382] mnist -> label
I0428 19:44:21.017971 25582 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:21.020506 25582 net.cpp:124] Setting up mnist
I0428 19:44:21.020524 25582 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:21.020530 25582 net.cpp:131] Top shape: 64 (64)
I0428 19:44:21.020534 25582 net.cpp:139] Memory required for data: 200960
I0428 19:44:21.020542 25582 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:21.020563 25582 net.cpp:86] Creating Layer conv0
I0428 19:44:21.020589 25582 net.cpp:408] conv0 <- data
I0428 19:44:21.020606 25582 net.cpp:382] conv0 -> conv0
I0428 19:44:21.281908 25582 net.cpp:124] Setting up conv0
I0428 19:44:21.281949 25582 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:21.281955 25582 net.cpp:139] Memory required for data: 495872
I0428 19:44:21.281983 25582 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:21.281996 25582 net.cpp:86] Creating Layer pool0
I0428 19:44:21.281999 25582 net.cpp:408] pool0 <- conv0
I0428 19:44:21.282004 25582 net.cpp:382] pool0 -> pool0
I0428 19:44:21.282066 25582 net.cpp:124] Setting up pool0
I0428 19:44:21.282073 25582 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:21.282075 25582 net.cpp:139] Memory required for data: 569600
I0428 19:44:21.282078 25582 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:21.282088 25582 net.cpp:86] Creating Layer conv1
I0428 19:44:21.282091 25582 net.cpp:408] conv1 <- pool0
I0428 19:44:21.282096 25582 net.cpp:382] conv1 -> conv1
I0428 19:44:21.284787 25582 net.cpp:124] Setting up conv1
I0428 19:44:21.284821 25582 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:21.284826 25582 net.cpp:139] Memory required for data: 1388800
I0428 19:44:21.284834 25582 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:21.284842 25582 net.cpp:86] Creating Layer pool1
I0428 19:44:21.284845 25582 net.cpp:408] pool1 <- conv1
I0428 19:44:21.284850 25582 net.cpp:382] pool1 -> pool1
I0428 19:44:21.284904 25582 net.cpp:124] Setting up pool1
I0428 19:44:21.284909 25582 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:21.284911 25582 net.cpp:139] Memory required for data: 1593600
I0428 19:44:21.284914 25582 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:21.284921 25582 net.cpp:86] Creating Layer ip1
I0428 19:44:21.284934 25582 net.cpp:408] ip1 <- pool1
I0428 19:44:21.284940 25582 net.cpp:382] ip1 -> ip1
I0428 19:44:21.285943 25582 net.cpp:124] Setting up ip1
I0428 19:44:21.285970 25582 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:21.285974 25582 net.cpp:139] Memory required for data: 1596160
I0428 19:44:21.285984 25582 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:21.285989 25582 net.cpp:86] Creating Layer relu1
I0428 19:44:21.285992 25582 net.cpp:408] relu1 <- ip1
I0428 19:44:21.285997 25582 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:21.286180 25582 net.cpp:124] Setting up relu1
I0428 19:44:21.286188 25582 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:21.286191 25582 net.cpp:139] Memory required for data: 1598720
I0428 19:44:21.286195 25582 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:21.286201 25582 net.cpp:86] Creating Layer ip2
I0428 19:44:21.286204 25582 net.cpp:408] ip2 <- ip1
I0428 19:44:21.286209 25582 net.cpp:382] ip2 -> ip2
I0428 19:44:21.286309 25582 net.cpp:124] Setting up ip2
I0428 19:44:21.286315 25582 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:44:21.286319 25582 net.cpp:139] Memory required for data: 1605120
I0428 19:44:21.286324 25582 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:21.286331 25582 net.cpp:86] Creating Layer relu2
I0428 19:44:21.286334 25582 net.cpp:408] relu2 <- ip2
I0428 19:44:21.286339 25582 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:21.287114 25582 net.cpp:124] Setting up relu2
I0428 19:44:21.287142 25582 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:44:21.287145 25582 net.cpp:139] Memory required for data: 1611520
I0428 19:44:21.287149 25582 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:21.287156 25582 net.cpp:86] Creating Layer ip3
I0428 19:44:21.287160 25582 net.cpp:408] ip3 <- ip2
I0428 19:44:21.287166 25582 net.cpp:382] ip3 -> ip3
I0428 19:44:21.287261 25582 net.cpp:124] Setting up ip3
I0428 19:44:21.287269 25582 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:21.287272 25582 net.cpp:139] Memory required for data: 1614080
I0428 19:44:21.287281 25582 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:21.287286 25582 net.cpp:86] Creating Layer relu3
I0428 19:44:21.287288 25582 net.cpp:408] relu3 <- ip3
I0428 19:44:21.287292 25582 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:21.287472 25582 net.cpp:124] Setting up relu3
I0428 19:44:21.287482 25582 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:21.287484 25582 net.cpp:139] Memory required for data: 1616640
I0428 19:44:21.287487 25582 layer_factory.hpp:77] Creating layer loss
I0428 19:44:21.287493 25582 net.cpp:86] Creating Layer loss
I0428 19:44:21.287497 25582 net.cpp:408] loss <- ip3
I0428 19:44:21.287500 25582 net.cpp:408] loss <- label
I0428 19:44:21.287505 25582 net.cpp:382] loss -> loss
I0428 19:44:21.287524 25582 layer_factory.hpp:77] Creating layer loss
I0428 19:44:21.287760 25582 net.cpp:124] Setting up loss
I0428 19:44:21.287773 25582 net.cpp:131] Top shape: (1)
I0428 19:44:21.287793 25582 net.cpp:134]     with loss weight 1
I0428 19:44:21.287809 25582 net.cpp:139] Memory required for data: 1616644
I0428 19:44:21.287827 25582 net.cpp:200] loss needs backward computation.
I0428 19:44:21.287832 25582 net.cpp:200] relu3 needs backward computation.
I0428 19:44:21.287834 25582 net.cpp:200] ip3 needs backward computation.
I0428 19:44:21.287837 25582 net.cpp:200] relu2 needs backward computation.
I0428 19:44:21.287839 25582 net.cpp:200] ip2 needs backward computation.
I0428 19:44:21.287842 25582 net.cpp:200] relu1 needs backward computation.
I0428 19:44:21.287845 25582 net.cpp:200] ip1 needs backward computation.
I0428 19:44:21.287848 25582 net.cpp:200] pool1 needs backward computation.
I0428 19:44:21.287852 25582 net.cpp:200] conv1 needs backward computation.
I0428 19:44:21.287854 25582 net.cpp:200] pool0 needs backward computation.
I0428 19:44:21.287858 25582 net.cpp:200] conv0 needs backward computation.
I0428 19:44:21.287860 25582 net.cpp:202] mnist does not need backward computation.
I0428 19:44:21.287863 25582 net.cpp:244] This network produces output loss
I0428 19:44:21.287871 25582 net.cpp:257] Network initialization done.
I0428 19:44:21.288255 25582 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test445.prototxt
I0428 19:44:21.288285 25582 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:21.288378 25582 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:21.288455 25582 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:21.288496 25582 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:21.288509 25582 net.cpp:86] Creating Layer mnist
I0428 19:44:21.288513 25582 net.cpp:382] mnist -> data
I0428 19:44:21.288522 25582 net.cpp:382] mnist -> label
I0428 19:44:21.288604 25582 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:21.290514 25582 net.cpp:124] Setting up mnist
I0428 19:44:21.290562 25582 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:21.290570 25582 net.cpp:131] Top shape: 100 (100)
I0428 19:44:21.290573 25582 net.cpp:139] Memory required for data: 314000
I0428 19:44:21.290577 25582 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:21.290587 25582 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:21.290591 25582 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:21.290596 25582 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:21.290602 25582 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:21.290688 25582 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:21.290695 25582 net.cpp:131] Top shape: 100 (100)
I0428 19:44:21.290699 25582 net.cpp:131] Top shape: 100 (100)
I0428 19:44:21.290704 25582 net.cpp:139] Memory required for data: 314800
I0428 19:44:21.290705 25582 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:21.290714 25582 net.cpp:86] Creating Layer conv0
I0428 19:44:21.290717 25582 net.cpp:408] conv0 <- data
I0428 19:44:21.290722 25582 net.cpp:382] conv0 -> conv0
I0428 19:44:21.292381 25582 net.cpp:124] Setting up conv0
I0428 19:44:21.292409 25582 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:21.292413 25582 net.cpp:139] Memory required for data: 775600
I0428 19:44:21.292423 25582 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:21.292428 25582 net.cpp:86] Creating Layer pool0
I0428 19:44:21.292431 25582 net.cpp:408] pool0 <- conv0
I0428 19:44:21.292451 25582 net.cpp:382] pool0 -> pool0
I0428 19:44:21.292486 25582 net.cpp:124] Setting up pool0
I0428 19:44:21.292493 25582 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:21.292496 25582 net.cpp:139] Memory required for data: 890800
I0428 19:44:21.292498 25582 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:21.292507 25582 net.cpp:86] Creating Layer conv1
I0428 19:44:21.292510 25582 net.cpp:408] conv1 <- pool0
I0428 19:44:21.292515 25582 net.cpp:382] conv1 -> conv1
I0428 19:44:21.294209 25582 net.cpp:124] Setting up conv1
I0428 19:44:21.294241 25582 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:21.294245 25582 net.cpp:139] Memory required for data: 2170800
I0428 19:44:21.294255 25582 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:21.294263 25582 net.cpp:86] Creating Layer pool1
I0428 19:44:21.294267 25582 net.cpp:408] pool1 <- conv1
I0428 19:44:21.294272 25582 net.cpp:382] pool1 -> pool1
I0428 19:44:21.294312 25582 net.cpp:124] Setting up pool1
I0428 19:44:21.294318 25582 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:21.294322 25582 net.cpp:139] Memory required for data: 2490800
I0428 19:44:21.294324 25582 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:21.294332 25582 net.cpp:86] Creating Layer ip1
I0428 19:44:21.294335 25582 net.cpp:408] ip1 <- pool1
I0428 19:44:21.294343 25582 net.cpp:382] ip1 -> ip1
I0428 19:44:21.294523 25582 net.cpp:124] Setting up ip1
I0428 19:44:21.294535 25582 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:21.294550 25582 net.cpp:139] Memory required for data: 2494800
I0428 19:44:21.294559 25582 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:21.294565 25582 net.cpp:86] Creating Layer relu1
I0428 19:44:21.294569 25582 net.cpp:408] relu1 <- ip1
I0428 19:44:21.294574 25582 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:21.294744 25582 net.cpp:124] Setting up relu1
I0428 19:44:21.294754 25582 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:21.294757 25582 net.cpp:139] Memory required for data: 2498800
I0428 19:44:21.294761 25582 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:21.294769 25582 net.cpp:86] Creating Layer ip2
I0428 19:44:21.294771 25582 net.cpp:408] ip2 <- ip1
I0428 19:44:21.294778 25582 net.cpp:382] ip2 -> ip2
I0428 19:44:21.294889 25582 net.cpp:124] Setting up ip2
I0428 19:44:21.294896 25582 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:44:21.294899 25582 net.cpp:139] Memory required for data: 2508800
I0428 19:44:21.294905 25582 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:21.294910 25582 net.cpp:86] Creating Layer relu2
I0428 19:44:21.294914 25582 net.cpp:408] relu2 <- ip2
I0428 19:44:21.294917 25582 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:21.295166 25582 net.cpp:124] Setting up relu2
I0428 19:44:21.295176 25582 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:44:21.295179 25582 net.cpp:139] Memory required for data: 2518800
I0428 19:44:21.295182 25582 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:21.295189 25582 net.cpp:86] Creating Layer ip3
I0428 19:44:21.295193 25582 net.cpp:408] ip3 <- ip2
I0428 19:44:21.295199 25582 net.cpp:382] ip3 -> ip3
I0428 19:44:21.295316 25582 net.cpp:124] Setting up ip3
I0428 19:44:21.295325 25582 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:21.295327 25582 net.cpp:139] Memory required for data: 2522800
I0428 19:44:21.295336 25582 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:21.295341 25582 net.cpp:86] Creating Layer relu3
I0428 19:44:21.295344 25582 net.cpp:408] relu3 <- ip3
I0428 19:44:21.295349 25582 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:21.296200 25582 net.cpp:124] Setting up relu3
I0428 19:44:21.296231 25582 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:21.296233 25582 net.cpp:139] Memory required for data: 2526800
I0428 19:44:21.296238 25582 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:21.296245 25582 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:21.296253 25582 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:21.296258 25582 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:21.296264 25582 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:21.296315 25582 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:21.296324 25582 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:21.296327 25582 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:21.296330 25582 net.cpp:139] Memory required for data: 2534800
I0428 19:44:21.296334 25582 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:21.296345 25582 net.cpp:86] Creating Layer accuracy
I0428 19:44:21.296349 25582 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:21.296353 25582 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:21.296360 25582 net.cpp:382] accuracy -> accuracy
I0428 19:44:21.296367 25582 net.cpp:124] Setting up accuracy
I0428 19:44:21.296373 25582 net.cpp:131] Top shape: (1)
I0428 19:44:21.296376 25582 net.cpp:139] Memory required for data: 2534804
I0428 19:44:21.296380 25582 layer_factory.hpp:77] Creating layer loss
I0428 19:44:21.296385 25582 net.cpp:86] Creating Layer loss
I0428 19:44:21.296387 25582 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:21.296391 25582 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:21.296396 25582 net.cpp:382] loss -> loss
I0428 19:44:21.296402 25582 layer_factory.hpp:77] Creating layer loss
I0428 19:44:21.296658 25582 net.cpp:124] Setting up loss
I0428 19:44:21.296669 25582 net.cpp:131] Top shape: (1)
I0428 19:44:21.296671 25582 net.cpp:134]     with loss weight 1
I0428 19:44:21.296686 25582 net.cpp:139] Memory required for data: 2534808
I0428 19:44:21.296699 25582 net.cpp:200] loss needs backward computation.
I0428 19:44:21.296702 25582 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:21.296706 25582 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:21.296708 25582 net.cpp:200] relu3 needs backward computation.
I0428 19:44:21.296711 25582 net.cpp:200] ip3 needs backward computation.
I0428 19:44:21.296715 25582 net.cpp:200] relu2 needs backward computation.
I0428 19:44:21.296718 25582 net.cpp:200] ip2 needs backward computation.
I0428 19:44:21.296721 25582 net.cpp:200] relu1 needs backward computation.
I0428 19:44:21.296723 25582 net.cpp:200] ip1 needs backward computation.
I0428 19:44:21.296726 25582 net.cpp:200] pool1 needs backward computation.
I0428 19:44:21.296730 25582 net.cpp:200] conv1 needs backward computation.
I0428 19:44:21.296733 25582 net.cpp:200] pool0 needs backward computation.
I0428 19:44:21.296736 25582 net.cpp:200] conv0 needs backward computation.
I0428 19:44:21.296741 25582 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:21.296743 25582 net.cpp:202] mnist does not need backward computation.
I0428 19:44:21.296746 25582 net.cpp:244] This network produces output accuracy
I0428 19:44:21.296749 25582 net.cpp:244] This network produces output loss
I0428 19:44:21.296761 25582 net.cpp:257] Network initialization done.
I0428 19:44:21.296802 25582 solver.cpp:56] Solver scaffolding done.
I0428 19:44:21.297200 25582 caffe.cpp:248] Starting Optimization
I0428 19:44:21.297209 25582 solver.cpp:273] Solving LeNet
I0428 19:44:21.297210 25582 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:21.297487 25582 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:21.301739 25582 blocking_queue.cpp:49] Waiting for data
I0428 19:44:21.367413 25589 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:21.367923 25582 solver.cpp:398]     Test net output #0: accuracy = 0.1351
I0428 19:44:21.367959 25582 solver.cpp:398]     Test net output #1: loss = 2.30311 (* 1 = 2.30311 loss)
I0428 19:44:21.370086 25582 solver.cpp:219] Iteration 0 (-1.11543e-42 iter/s, 0.0728269s/100 iters), loss = 2.29298
I0428 19:44:21.370128 25582 solver.cpp:238]     Train net output #0: loss = 2.29298 (* 1 = 2.29298 loss)
I0428 19:44:21.370139 25582 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:21.472666 25582 solver.cpp:219] Iteration 100 (975.382 iter/s, 0.102524s/100 iters), loss = 1.06733
I0428 19:44:21.472707 25582 solver.cpp:238]     Train net output #0: loss = 1.06733 (* 1 = 1.06733 loss)
I0428 19:44:21.472713 25582 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:21.587674 25582 solver.cpp:219] Iteration 200 (869.918 iter/s, 0.114953s/100 iters), loss = 1.35014
I0428 19:44:21.587707 25582 solver.cpp:238]     Train net output #0: loss = 1.35014 (* 1 = 1.35014 loss)
I0428 19:44:21.587715 25582 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:21.692955 25582 solver.cpp:219] Iteration 300 (950.232 iter/s, 0.105237s/100 iters), loss = 1.02667
I0428 19:44:21.692981 25582 solver.cpp:238]     Train net output #0: loss = 1.02667 (* 1 = 1.02667 loss)
I0428 19:44:21.692987 25582 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:21.790472 25582 solver.cpp:219] Iteration 400 (1025.85 iter/s, 0.0974797s/100 iters), loss = 0.950205
I0428 19:44:21.790511 25582 solver.cpp:238]     Train net output #0: loss = 0.950205 (* 1 = 0.950205 loss)
I0428 19:44:21.790518 25582 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:21.897753 25582 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:21.972234 25589 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:21.972874 25582 solver.cpp:398]     Test net output #0: accuracy = 0.671
I0428 19:44:21.972910 25582 solver.cpp:398]     Test net output #1: loss = 0.837565 (* 1 = 0.837565 loss)
I0428 19:44:21.974283 25582 solver.cpp:219] Iteration 500 (544.164 iter/s, 0.183768s/100 iters), loss = 0.751999
I0428 19:44:21.974344 25582 solver.cpp:238]     Train net output #0: loss = 0.751999 (* 1 = 0.751999 loss)
I0428 19:44:21.974392 25582 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:22.087157 25582 solver.cpp:219] Iteration 600 (886.422 iter/s, 0.112813s/100 iters), loss = 0.856977
I0428 19:44:22.087189 25582 solver.cpp:238]     Train net output #0: loss = 0.856977 (* 1 = 0.856977 loss)
I0428 19:44:22.087198 25582 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:22.196442 25582 solver.cpp:219] Iteration 700 (915.404 iter/s, 0.109241s/100 iters), loss = 0.764992
I0428 19:44:22.196476 25582 solver.cpp:238]     Train net output #0: loss = 0.764992 (* 1 = 0.764992 loss)
I0428 19:44:22.196485 25582 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:22.305527 25582 solver.cpp:219] Iteration 800 (917.099 iter/s, 0.109039s/100 iters), loss = 0.706686
I0428 19:44:22.305562 25582 solver.cpp:238]     Train net output #0: loss = 0.706686 (* 1 = 0.706686 loss)
I0428 19:44:22.305569 25582 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:22.413830 25582 solver.cpp:219] Iteration 900 (923.717 iter/s, 0.108258s/100 iters), loss = 0.967263
I0428 19:44:22.413866 25582 solver.cpp:238]     Train net output #0: loss = 0.967263 (* 1 = 0.967263 loss)
I0428 19:44:22.413875 25582 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:22.450309 25588 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:22.521939 25582 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:22.523075 25582 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:22.523979 25582 solver.cpp:311] Iteration 1000, loss = 0.66833
I0428 19:44:22.524021 25582 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:22.599990 25589 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:22.600567 25582 solver.cpp:398]     Test net output #0: accuracy = 0.7671
I0428 19:44:22.600601 25582 solver.cpp:398]     Test net output #1: loss = 0.587848 (* 1 = 0.587848 loss)
I0428 19:44:22.600610 25582 solver.cpp:316] Optimization Done.
I0428 19:44:22.600615 25582 caffe.cpp:259] Optimization Done.
