I0428 20:37:39.387295  4980 caffe.cpp:218] Using GPUs 0
I0428 20:37:39.425004  4980 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:39.936025  4980 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1654.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:39.936162  4980 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1654.prototxt
I0428 20:37:39.936578  4980 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:39.936597  4980 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:39.936698  4980 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:39.936776  4980 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:39.936884  4980 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:39.936913  4980 net.cpp:86] Creating Layer mnist
I0428 20:37:39.936920  4980 net.cpp:382] mnist -> data
I0428 20:37:39.936941  4980 net.cpp:382] mnist -> label
I0428 20:37:39.938037  4980 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:39.940477  4980 net.cpp:124] Setting up mnist
I0428 20:37:39.940495  4980 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:39.940502  4980 net.cpp:131] Top shape: 64 (64)
I0428 20:37:39.940505  4980 net.cpp:139] Memory required for data: 200960
I0428 20:37:39.940512  4980 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:39.940527  4980 net.cpp:86] Creating Layer conv0
I0428 20:37:39.940547  4980 net.cpp:408] conv0 <- data
I0428 20:37:39.940562  4980 net.cpp:382] conv0 -> conv0
I0428 20:37:40.201467  4980 net.cpp:124] Setting up conv0
I0428 20:37:40.201493  4980 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:40.201498  4980 net.cpp:139] Memory required for data: 14946560
I0428 20:37:40.201511  4980 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:40.201524  4980 net.cpp:86] Creating Layer pool0
I0428 20:37:40.201527  4980 net.cpp:408] pool0 <- conv0
I0428 20:37:40.201531  4980 net.cpp:382] pool0 -> pool0
I0428 20:37:40.201591  4980 net.cpp:124] Setting up pool0
I0428 20:37:40.201596  4980 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:40.201597  4980 net.cpp:139] Memory required for data: 18632960
I0428 20:37:40.201601  4980 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:40.201611  4980 net.cpp:86] Creating Layer conv1
I0428 20:37:40.201613  4980 net.cpp:408] conv1 <- pool0
I0428 20:37:40.201617  4980 net.cpp:382] conv1 -> conv1
I0428 20:37:40.205740  4980 net.cpp:124] Setting up conv1
I0428 20:37:40.205770  4980 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:40.205772  4980 net.cpp:139] Memory required for data: 20271360
I0428 20:37:40.205780  4980 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:40.205787  4980 net.cpp:86] Creating Layer pool1
I0428 20:37:40.205791  4980 net.cpp:408] pool1 <- conv1
I0428 20:37:40.205796  4980 net.cpp:382] pool1 -> pool1
I0428 20:37:40.205845  4980 net.cpp:124] Setting up pool1
I0428 20:37:40.205850  4980 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:40.205853  4980 net.cpp:139] Memory required for data: 20680960
I0428 20:37:40.205855  4980 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:40.205862  4980 net.cpp:86] Creating Layer ip1
I0428 20:37:40.205865  4980 net.cpp:408] ip1 <- pool1
I0428 20:37:40.205869  4980 net.cpp:382] ip1 -> ip1
I0428 20:37:40.206867  4980 net.cpp:124] Setting up ip1
I0428 20:37:40.206879  4980 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:40.206898  4980 net.cpp:139] Memory required for data: 20683520
I0428 20:37:40.206905  4980 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:40.206912  4980 net.cpp:86] Creating Layer relu1
I0428 20:37:40.206914  4980 net.cpp:408] relu1 <- ip1
I0428 20:37:40.206919  4980 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:40.207084  4980 net.cpp:124] Setting up relu1
I0428 20:37:40.207093  4980 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:40.207095  4980 net.cpp:139] Memory required for data: 20686080
I0428 20:37:40.207098  4980 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:40.207106  4980 net.cpp:86] Creating Layer ip2
I0428 20:37:40.207109  4980 net.cpp:408] ip2 <- ip1
I0428 20:37:40.207114  4980 net.cpp:382] ip2 -> ip2
I0428 20:37:40.207211  4980 net.cpp:124] Setting up ip2
I0428 20:37:40.207217  4980 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:37:40.207219  4980 net.cpp:139] Memory required for data: 20692480
I0428 20:37:40.207224  4980 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:40.207231  4980 net.cpp:86] Creating Layer relu2
I0428 20:37:40.207233  4980 net.cpp:408] relu2 <- ip2
I0428 20:37:40.207237  4980 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:40.207993  4980 net.cpp:124] Setting up relu2
I0428 20:37:40.208004  4980 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:37:40.208024  4980 net.cpp:139] Memory required for data: 20698880
I0428 20:37:40.208026  4980 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:40.208034  4980 net.cpp:86] Creating Layer ip3
I0428 20:37:40.208036  4980 net.cpp:408] ip3 <- ip2
I0428 20:37:40.208042  4980 net.cpp:382] ip3 -> ip3
I0428 20:37:40.208143  4980 net.cpp:124] Setting up ip3
I0428 20:37:40.208164  4980 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:40.208168  4980 net.cpp:139] Memory required for data: 20701440
I0428 20:37:40.208174  4980 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:40.208179  4980 net.cpp:86] Creating Layer relu3
I0428 20:37:40.208183  4980 net.cpp:408] relu3 <- ip3
I0428 20:37:40.208201  4980 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:40.208367  4980 net.cpp:124] Setting up relu3
I0428 20:37:40.208375  4980 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:40.208379  4980 net.cpp:139] Memory required for data: 20704000
I0428 20:37:40.208381  4980 layer_factory.hpp:77] Creating layer loss
I0428 20:37:40.208392  4980 net.cpp:86] Creating Layer loss
I0428 20:37:40.208395  4980 net.cpp:408] loss <- ip3
I0428 20:37:40.208400  4980 net.cpp:408] loss <- label
I0428 20:37:40.208405  4980 net.cpp:382] loss -> loss
I0428 20:37:40.208417  4980 layer_factory.hpp:77] Creating layer loss
I0428 20:37:40.208653  4980 net.cpp:124] Setting up loss
I0428 20:37:40.208676  4980 net.cpp:131] Top shape: (1)
I0428 20:37:40.208679  4980 net.cpp:134]     with loss weight 1
I0428 20:37:40.208693  4980 net.cpp:139] Memory required for data: 20704004
I0428 20:37:40.208696  4980 net.cpp:200] loss needs backward computation.
I0428 20:37:40.208699  4980 net.cpp:200] relu3 needs backward computation.
I0428 20:37:40.208703  4980 net.cpp:200] ip3 needs backward computation.
I0428 20:37:40.208704  4980 net.cpp:200] relu2 needs backward computation.
I0428 20:37:40.208708  4980 net.cpp:200] ip2 needs backward computation.
I0428 20:37:40.208709  4980 net.cpp:200] relu1 needs backward computation.
I0428 20:37:40.208712  4980 net.cpp:200] ip1 needs backward computation.
I0428 20:37:40.208714  4980 net.cpp:200] pool1 needs backward computation.
I0428 20:37:40.208717  4980 net.cpp:200] conv1 needs backward computation.
I0428 20:37:40.208719  4980 net.cpp:200] pool0 needs backward computation.
I0428 20:37:40.208732  4980 net.cpp:200] conv0 needs backward computation.
I0428 20:37:40.208736  4980 net.cpp:202] mnist does not need backward computation.
I0428 20:37:40.208739  4980 net.cpp:244] This network produces output loss
I0428 20:37:40.208750  4980 net.cpp:257] Network initialization done.
I0428 20:37:40.209087  4980 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1654.prototxt
I0428 20:37:40.209115  4980 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:40.209218  4980 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:40.209297  4980 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:40.209338  4980 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:40.209350  4980 net.cpp:86] Creating Layer mnist
I0428 20:37:40.209354  4980 net.cpp:382] mnist -> data
I0428 20:37:40.209363  4980 net.cpp:382] mnist -> label
I0428 20:37:40.209462  4980 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:40.211570  4980 net.cpp:124] Setting up mnist
I0428 20:37:40.211597  4980 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:40.211602  4980 net.cpp:131] Top shape: 100 (100)
I0428 20:37:40.211606  4980 net.cpp:139] Memory required for data: 314000
I0428 20:37:40.211609  4980 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:40.211616  4980 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:40.211618  4980 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:40.211622  4980 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:40.211668  4980 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:40.211706  4980 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:40.211711  4980 net.cpp:131] Top shape: 100 (100)
I0428 20:37:40.211714  4980 net.cpp:131] Top shape: 100 (100)
I0428 20:37:40.211717  4980 net.cpp:139] Memory required for data: 314800
I0428 20:37:40.211720  4980 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:40.211730  4980 net.cpp:86] Creating Layer conv0
I0428 20:37:40.211732  4980 net.cpp:408] conv0 <- data
I0428 20:37:40.211737  4980 net.cpp:382] conv0 -> conv0
I0428 20:37:40.213531  4980 net.cpp:124] Setting up conv0
I0428 20:37:40.213544  4980 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:40.213548  4980 net.cpp:139] Memory required for data: 23354800
I0428 20:37:40.213557  4980 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:40.213563  4980 net.cpp:86] Creating Layer pool0
I0428 20:37:40.213577  4980 net.cpp:408] pool0 <- conv0
I0428 20:37:40.213582  4980 net.cpp:382] pool0 -> pool0
I0428 20:37:40.213632  4980 net.cpp:124] Setting up pool0
I0428 20:37:40.213637  4980 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:40.213640  4980 net.cpp:139] Memory required for data: 29114800
I0428 20:37:40.213642  4980 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:40.213667  4980 net.cpp:86] Creating Layer conv1
I0428 20:37:40.213670  4980 net.cpp:408] conv1 <- pool0
I0428 20:37:40.213676  4980 net.cpp:382] conv1 -> conv1
I0428 20:37:40.216616  4980 net.cpp:124] Setting up conv1
I0428 20:37:40.216629  4980 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:40.216634  4980 net.cpp:139] Memory required for data: 31674800
I0428 20:37:40.216648  4980 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:40.216670  4980 net.cpp:86] Creating Layer pool1
I0428 20:37:40.216673  4980 net.cpp:408] pool1 <- conv1
I0428 20:37:40.216678  4980 net.cpp:382] pool1 -> pool1
I0428 20:37:40.216719  4980 net.cpp:124] Setting up pool1
I0428 20:37:40.216724  4980 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:40.216727  4980 net.cpp:139] Memory required for data: 32314800
I0428 20:37:40.216730  4980 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:40.216747  4980 net.cpp:86] Creating Layer ip1
I0428 20:37:40.216756  4980 net.cpp:408] ip1 <- pool1
I0428 20:37:40.216760  4980 net.cpp:382] ip1 -> ip1
I0428 20:37:40.216960  4980 net.cpp:124] Setting up ip1
I0428 20:37:40.216979  4980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:40.216989  4980 net.cpp:139] Memory required for data: 32318800
I0428 20:37:40.216996  4980 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:40.217000  4980 net.cpp:86] Creating Layer relu1
I0428 20:37:40.217005  4980 net.cpp:408] relu1 <- ip1
I0428 20:37:40.217010  4980 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:40.217226  4980 net.cpp:124] Setting up relu1
I0428 20:37:40.217234  4980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:40.217238  4980 net.cpp:139] Memory required for data: 32322800
I0428 20:37:40.217242  4980 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:40.217249  4980 net.cpp:86] Creating Layer ip2
I0428 20:37:40.217258  4980 net.cpp:408] ip2 <- ip1
I0428 20:37:40.217263  4980 net.cpp:382] ip2 -> ip2
I0428 20:37:40.217367  4980 net.cpp:124] Setting up ip2
I0428 20:37:40.217375  4980 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:37:40.217378  4980 net.cpp:139] Memory required for data: 32332800
I0428 20:37:40.217383  4980 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:40.217388  4980 net.cpp:86] Creating Layer relu2
I0428 20:37:40.217392  4980 net.cpp:408] relu2 <- ip2
I0428 20:37:40.217396  4980 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:40.217623  4980 net.cpp:124] Setting up relu2
I0428 20:37:40.217631  4980 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:37:40.217635  4980 net.cpp:139] Memory required for data: 32342800
I0428 20:37:40.217638  4980 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:40.217644  4980 net.cpp:86] Creating Layer ip3
I0428 20:37:40.217648  4980 net.cpp:408] ip3 <- ip2
I0428 20:37:40.217651  4980 net.cpp:382] ip3 -> ip3
I0428 20:37:40.217782  4980 net.cpp:124] Setting up ip3
I0428 20:37:40.217788  4980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:40.217792  4980 net.cpp:139] Memory required for data: 32346800
I0428 20:37:40.217803  4980 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:40.217809  4980 net.cpp:86] Creating Layer relu3
I0428 20:37:40.217813  4980 net.cpp:408] relu3 <- ip3
I0428 20:37:40.217821  4980 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:40.218587  4980 net.cpp:124] Setting up relu3
I0428 20:37:40.218600  4980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:40.218603  4980 net.cpp:139] Memory required for data: 32350800
I0428 20:37:40.218606  4980 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:40.218611  4980 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:40.218614  4980 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:40.218633  4980 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:40.218639  4980 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:40.218680  4980 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:40.218685  4980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:40.218688  4980 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:40.218690  4980 net.cpp:139] Memory required for data: 32358800
I0428 20:37:40.218693  4980 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:40.218698  4980 net.cpp:86] Creating Layer accuracy
I0428 20:37:40.218700  4980 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:40.218704  4980 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:40.218710  4980 net.cpp:382] accuracy -> accuracy
I0428 20:37:40.218716  4980 net.cpp:124] Setting up accuracy
I0428 20:37:40.218720  4980 net.cpp:131] Top shape: (1)
I0428 20:37:40.218722  4980 net.cpp:139] Memory required for data: 32358804
I0428 20:37:40.218725  4980 layer_factory.hpp:77] Creating layer loss
I0428 20:37:40.218729  4980 net.cpp:86] Creating Layer loss
I0428 20:37:40.218732  4980 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:40.218736  4980 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:40.218739  4980 net.cpp:382] loss -> loss
I0428 20:37:40.218744  4980 layer_factory.hpp:77] Creating layer loss
I0428 20:37:40.218998  4980 net.cpp:124] Setting up loss
I0428 20:37:40.219007  4980 net.cpp:131] Top shape: (1)
I0428 20:37:40.219010  4980 net.cpp:134]     with loss weight 1
I0428 20:37:40.219024  4980 net.cpp:139] Memory required for data: 32358808
I0428 20:37:40.219027  4980 net.cpp:200] loss needs backward computation.
I0428 20:37:40.219032  4980 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:40.219035  4980 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:40.219044  4980 net.cpp:200] relu3 needs backward computation.
I0428 20:37:40.219046  4980 net.cpp:200] ip3 needs backward computation.
I0428 20:37:40.219049  4980 net.cpp:200] relu2 needs backward computation.
I0428 20:37:40.219056  4980 net.cpp:200] ip2 needs backward computation.
I0428 20:37:40.219064  4980 net.cpp:200] relu1 needs backward computation.
I0428 20:37:40.219066  4980 net.cpp:200] ip1 needs backward computation.
I0428 20:37:40.219069  4980 net.cpp:200] pool1 needs backward computation.
I0428 20:37:40.219077  4980 net.cpp:200] conv1 needs backward computation.
I0428 20:37:40.219080  4980 net.cpp:200] pool0 needs backward computation.
I0428 20:37:40.219084  4980 net.cpp:200] conv0 needs backward computation.
I0428 20:37:40.219086  4980 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:40.219089  4980 net.cpp:202] mnist does not need backward computation.
I0428 20:37:40.219091  4980 net.cpp:244] This network produces output accuracy
I0428 20:37:40.219110  4980 net.cpp:244] This network produces output loss
I0428 20:37:40.219121  4980 net.cpp:257] Network initialization done.
I0428 20:37:40.219161  4980 solver.cpp:56] Solver scaffolding done.
I0428 20:37:40.219498  4980 caffe.cpp:248] Starting Optimization
I0428 20:37:40.219506  4980 solver.cpp:273] Solving LeNet
I0428 20:37:40.219507  4980 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:40.220324  4980 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:40.348199  4987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:40.351773  4980 solver.cpp:398]     Test net output #0: accuracy = 0.1111
I0428 20:37:40.351793  4980 solver.cpp:398]     Test net output #1: loss = 2.30255 (* 1 = 2.30255 loss)
I0428 20:37:40.357208  4980 solver.cpp:219] Iteration 0 (0 iter/s, 0.13767s/100 iters), loss = 2.30235
I0428 20:37:40.357231  4980 solver.cpp:238]     Train net output #0: loss = 2.30235 (* 1 = 2.30235 loss)
I0428 20:37:40.357260  4980 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:40.622028  4980 solver.cpp:219] Iteration 100 (377.68 iter/s, 0.264775s/100 iters), loss = 0.468639
I0428 20:37:40.622062  4980 solver.cpp:238]     Train net output #0: loss = 0.468639 (* 1 = 0.468639 loss)
I0428 20:37:40.622084  4980 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:40.879027  4980 solver.cpp:219] Iteration 200 (389.182 iter/s, 0.256949s/100 iters), loss = 0.317047
I0428 20:37:40.879055  4980 solver.cpp:238]     Train net output #0: loss = 0.317047 (* 1 = 0.317047 loss)
I0428 20:37:40.879060  4980 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:41.138628  4980 solver.cpp:219] Iteration 300 (385.271 iter/s, 0.259557s/100 iters), loss = 0.344892
I0428 20:37:41.138655  4980 solver.cpp:238]     Train net output #0: loss = 0.344892 (* 1 = 0.344892 loss)
I0428 20:37:41.138661  4980 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:41.404752  4980 solver.cpp:219] Iteration 400 (375.829 iter/s, 0.266078s/100 iters), loss = 0.0906382
I0428 20:37:41.404779  4980 solver.cpp:238]     Train net output #0: loss = 0.0906382 (* 1 = 0.0906382 loss)
I0428 20:37:41.404786  4980 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:41.665388  4980 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:41.789512  4987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:41.794162  4980 solver.cpp:398]     Test net output #0: accuracy = 0.951
I0428 20:37:41.794183  4980 solver.cpp:398]     Test net output #1: loss = 0.164688 (* 1 = 0.164688 loss)
I0428 20:37:41.796694  4980 solver.cpp:219] Iteration 500 (255.173 iter/s, 0.391891s/100 iters), loss = 0.12055
I0428 20:37:41.796731  4980 solver.cpp:238]     Train net output #0: loss = 0.12055 (* 1 = 0.12055 loss)
I0428 20:37:41.796766  4980 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:42.064088  4980 solver.cpp:219] Iteration 600 (374.056 iter/s, 0.26734s/100 iters), loss = 0.0836835
I0428 20:37:42.064113  4980 solver.cpp:238]     Train net output #0: loss = 0.0836834 (* 1 = 0.0836834 loss)
I0428 20:37:42.064136  4980 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:42.334465  4980 solver.cpp:219] Iteration 700 (369.913 iter/s, 0.270334s/100 iters), loss = 0.111932
I0428 20:37:42.334491  4980 solver.cpp:238]     Train net output #0: loss = 0.111932 (* 1 = 0.111932 loss)
I0428 20:37:42.334497  4980 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:42.605396  4980 solver.cpp:219] Iteration 800 (369.165 iter/s, 0.270882s/100 iters), loss = 0.244059
I0428 20:37:42.605446  4980 solver.cpp:238]     Train net output #0: loss = 0.244059 (* 1 = 0.244059 loss)
I0428 20:37:42.605454  4980 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:42.883136  4980 solver.cpp:219] Iteration 900 (360.116 iter/s, 0.277688s/100 iters), loss = 0.0992374
I0428 20:37:42.883164  4980 solver.cpp:238]     Train net output #0: loss = 0.0992375 (* 1 = 0.0992375 loss)
I0428 20:37:42.883172  4980 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:42.976387  4986 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:43.159927  4980 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:43.165118  4980 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:43.168083  4980 solver.cpp:311] Iteration 1000, loss = 0.156343
I0428 20:37:43.168100  4980 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:43.297825  4987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:43.301268  4980 solver.cpp:398]     Test net output #0: accuracy = 0.9713
I0428 20:37:43.301287  4980 solver.cpp:398]     Test net output #1: loss = 0.0954324 (* 1 = 0.0954324 loss)
I0428 20:37:43.301297  4980 solver.cpp:316] Optimization Done.
I0428 20:37:43.301301  4980 caffe.cpp:259] Optimization Done.
