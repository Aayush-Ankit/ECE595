I0428 20:30:42.451282  3798 caffe.cpp:218] Using GPUs 0
I0428 20:30:42.494122  3798 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:43.008651  3798 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1543.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:43.008791  3798 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1543.prototxt
I0428 20:30:43.009205  3798 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:43.009222  3798 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:43.009320  3798 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:43.009393  3798 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:43.009495  3798 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:43.009519  3798 net.cpp:86] Creating Layer mnist
I0428 20:30:43.009528  3798 net.cpp:382] mnist -> data
I0428 20:30:43.009552  3798 net.cpp:382] mnist -> label
I0428 20:30:43.010648  3798 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:43.013094  3798 net.cpp:124] Setting up mnist
I0428 20:30:43.013114  3798 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:43.013120  3798 net.cpp:131] Top shape: 64 (64)
I0428 20:30:43.013124  3798 net.cpp:139] Memory required for data: 200960
I0428 20:30:43.013131  3798 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:43.013151  3798 net.cpp:86] Creating Layer conv0
I0428 20:30:43.013171  3798 net.cpp:408] conv0 <- data
I0428 20:30:43.013183  3798 net.cpp:382] conv0 -> conv0
I0428 20:30:43.336241  3798 net.cpp:124] Setting up conv0
I0428 20:30:43.336272  3798 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:43.336277  3798 net.cpp:139] Memory required for data: 14946560
I0428 20:30:43.336294  3798 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:43.336308  3798 net.cpp:86] Creating Layer pool0
I0428 20:30:43.336313  3798 net.cpp:408] pool0 <- conv0
I0428 20:30:43.336319  3798 net.cpp:382] pool0 -> pool0
I0428 20:30:43.336377  3798 net.cpp:124] Setting up pool0
I0428 20:30:43.336385  3798 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:43.336388  3798 net.cpp:139] Memory required for data: 18632960
I0428 20:30:43.336392  3798 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:43.336405  3798 net.cpp:86] Creating Layer conv1
I0428 20:30:43.336408  3798 net.cpp:408] conv1 <- pool0
I0428 20:30:43.336414  3798 net.cpp:382] conv1 -> conv1
I0428 20:30:43.338728  3798 net.cpp:124] Setting up conv1
I0428 20:30:43.338745  3798 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:43.338749  3798 net.cpp:139] Memory required for data: 18796800
I0428 20:30:43.338759  3798 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:43.338769  3798 net.cpp:86] Creating Layer pool1
I0428 20:30:43.338774  3798 net.cpp:408] pool1 <- conv1
I0428 20:30:43.338780  3798 net.cpp:382] pool1 -> pool1
I0428 20:30:43.338824  3798 net.cpp:124] Setting up pool1
I0428 20:30:43.338831  3798 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:43.338835  3798 net.cpp:139] Memory required for data: 18837760
I0428 20:30:43.338838  3798 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:43.338846  3798 net.cpp:86] Creating Layer ip1
I0428 20:30:43.338850  3798 net.cpp:408] ip1 <- pool1
I0428 20:30:43.338855  3798 net.cpp:382] ip1 -> ip1
I0428 20:30:43.339002  3798 net.cpp:124] Setting up ip1
I0428 20:30:43.339013  3798 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:43.339016  3798 net.cpp:139] Memory required for data: 18844160
I0428 20:30:43.339025  3798 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:43.339032  3798 net.cpp:86] Creating Layer relu1
I0428 20:30:43.339035  3798 net.cpp:408] relu1 <- ip1
I0428 20:30:43.339040  3798 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:43.339236  3798 net.cpp:124] Setting up relu1
I0428 20:30:43.339247  3798 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:43.339251  3798 net.cpp:139] Memory required for data: 18850560
I0428 20:30:43.339254  3798 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:43.339262  3798 net.cpp:86] Creating Layer ip2
I0428 20:30:43.339265  3798 net.cpp:408] ip2 <- ip1
I0428 20:30:43.339270  3798 net.cpp:382] ip2 -> ip2
I0428 20:30:43.339383  3798 net.cpp:124] Setting up ip2
I0428 20:30:43.339391  3798 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:43.339395  3798 net.cpp:139] Memory required for data: 18853120
I0428 20:30:43.339401  3798 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:43.339408  3798 net.cpp:86] Creating Layer relu2
I0428 20:30:43.339411  3798 net.cpp:408] relu2 <- ip2
I0428 20:30:43.339416  3798 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:43.340260  3798 net.cpp:124] Setting up relu2
I0428 20:30:43.340275  3798 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:43.340278  3798 net.cpp:139] Memory required for data: 18855680
I0428 20:30:43.340282  3798 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:43.340291  3798 net.cpp:86] Creating Layer ip3
I0428 20:30:43.340294  3798 net.cpp:408] ip3 <- ip2
I0428 20:30:43.340301  3798 net.cpp:382] ip3 -> ip3
I0428 20:30:43.340418  3798 net.cpp:124] Setting up ip3
I0428 20:30:43.340427  3798 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:43.340431  3798 net.cpp:139] Memory required for data: 18858240
I0428 20:30:43.340440  3798 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:43.340446  3798 net.cpp:86] Creating Layer relu3
I0428 20:30:43.340451  3798 net.cpp:408] relu3 <- ip3
I0428 20:30:43.340454  3798 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:43.340654  3798 net.cpp:124] Setting up relu3
I0428 20:30:43.340664  3798 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:43.340668  3798 net.cpp:139] Memory required for data: 18860800
I0428 20:30:43.340672  3798 layer_factory.hpp:77] Creating layer loss
I0428 20:30:43.340679  3798 net.cpp:86] Creating Layer loss
I0428 20:30:43.340682  3798 net.cpp:408] loss <- ip3
I0428 20:30:43.340687  3798 net.cpp:408] loss <- label
I0428 20:30:43.340693  3798 net.cpp:382] loss -> loss
I0428 20:30:43.340714  3798 layer_factory.hpp:77] Creating layer loss
I0428 20:30:43.340991  3798 net.cpp:124] Setting up loss
I0428 20:30:43.341002  3798 net.cpp:131] Top shape: (1)
I0428 20:30:43.341007  3798 net.cpp:134]     with loss weight 1
I0428 20:30:43.341023  3798 net.cpp:139] Memory required for data: 18860804
I0428 20:30:43.341028  3798 net.cpp:200] loss needs backward computation.
I0428 20:30:43.341032  3798 net.cpp:200] relu3 needs backward computation.
I0428 20:30:43.341037  3798 net.cpp:200] ip3 needs backward computation.
I0428 20:30:43.341039  3798 net.cpp:200] relu2 needs backward computation.
I0428 20:30:43.341042  3798 net.cpp:200] ip2 needs backward computation.
I0428 20:30:43.341047  3798 net.cpp:200] relu1 needs backward computation.
I0428 20:30:43.341050  3798 net.cpp:200] ip1 needs backward computation.
I0428 20:30:43.341053  3798 net.cpp:200] pool1 needs backward computation.
I0428 20:30:43.341058  3798 net.cpp:200] conv1 needs backward computation.
I0428 20:30:43.341061  3798 net.cpp:200] pool0 needs backward computation.
I0428 20:30:43.341064  3798 net.cpp:200] conv0 needs backward computation.
I0428 20:30:43.341068  3798 net.cpp:202] mnist does not need backward computation.
I0428 20:30:43.341073  3798 net.cpp:244] This network produces output loss
I0428 20:30:43.341084  3798 net.cpp:257] Network initialization done.
I0428 20:30:43.341471  3798 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1543.prototxt
I0428 20:30:43.341503  3798 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:43.341610  3798 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:43.341706  3798 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:43.341759  3798 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:43.341774  3798 net.cpp:86] Creating Layer mnist
I0428 20:30:43.341779  3798 net.cpp:382] mnist -> data
I0428 20:30:43.341789  3798 net.cpp:382] mnist -> label
I0428 20:30:43.341892  3798 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:43.344079  3798 net.cpp:124] Setting up mnist
I0428 20:30:43.344094  3798 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:43.344100  3798 net.cpp:131] Top shape: 100 (100)
I0428 20:30:43.344104  3798 net.cpp:139] Memory required for data: 314000
I0428 20:30:43.344108  3798 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:43.344116  3798 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:43.344120  3798 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:43.344126  3798 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:43.344135  3798 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:43.344188  3798 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:43.344194  3798 net.cpp:131] Top shape: 100 (100)
I0428 20:30:43.344198  3798 net.cpp:131] Top shape: 100 (100)
I0428 20:30:43.344202  3798 net.cpp:139] Memory required for data: 314800
I0428 20:30:43.344205  3798 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:43.344215  3798 net.cpp:86] Creating Layer conv0
I0428 20:30:43.344218  3798 net.cpp:408] conv0 <- data
I0428 20:30:43.344224  3798 net.cpp:382] conv0 -> conv0
I0428 20:30:43.346245  3798 net.cpp:124] Setting up conv0
I0428 20:30:43.346261  3798 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:43.346266  3798 net.cpp:139] Memory required for data: 23354800
I0428 20:30:43.346277  3798 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:43.346287  3798 net.cpp:86] Creating Layer pool0
I0428 20:30:43.346290  3798 net.cpp:408] pool0 <- conv0
I0428 20:30:43.346297  3798 net.cpp:382] pool0 -> pool0
I0428 20:30:43.346341  3798 net.cpp:124] Setting up pool0
I0428 20:30:43.346348  3798 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:43.346351  3798 net.cpp:139] Memory required for data: 29114800
I0428 20:30:43.346354  3798 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:43.346365  3798 net.cpp:86] Creating Layer conv1
I0428 20:30:43.346369  3798 net.cpp:408] conv1 <- pool0
I0428 20:30:43.346375  3798 net.cpp:382] conv1 -> conv1
I0428 20:30:43.348317  3798 net.cpp:124] Setting up conv1
I0428 20:30:43.348335  3798 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:43.348340  3798 net.cpp:139] Memory required for data: 29370800
I0428 20:30:43.348351  3798 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:43.348357  3798 net.cpp:86] Creating Layer pool1
I0428 20:30:43.348361  3798 net.cpp:408] pool1 <- conv1
I0428 20:30:43.348367  3798 net.cpp:382] pool1 -> pool1
I0428 20:30:43.348412  3798 net.cpp:124] Setting up pool1
I0428 20:30:43.348419  3798 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:43.348423  3798 net.cpp:139] Memory required for data: 29434800
I0428 20:30:43.348428  3798 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:43.348438  3798 net.cpp:86] Creating Layer ip1
I0428 20:30:43.348441  3798 net.cpp:408] ip1 <- pool1
I0428 20:30:43.348448  3798 net.cpp:382] ip1 -> ip1
I0428 20:30:43.348604  3798 net.cpp:124] Setting up ip1
I0428 20:30:43.348629  3798 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:43.348634  3798 net.cpp:139] Memory required for data: 29444800
I0428 20:30:43.348642  3798 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:43.348649  3798 net.cpp:86] Creating Layer relu1
I0428 20:30:43.348654  3798 net.cpp:408] relu1 <- ip1
I0428 20:30:43.348659  3798 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:43.348866  3798 net.cpp:124] Setting up relu1
I0428 20:30:43.348878  3798 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:43.348882  3798 net.cpp:139] Memory required for data: 29454800
I0428 20:30:43.348886  3798 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:43.348894  3798 net.cpp:86] Creating Layer ip2
I0428 20:30:43.348897  3798 net.cpp:408] ip2 <- ip1
I0428 20:30:43.348904  3798 net.cpp:382] ip2 -> ip2
I0428 20:30:43.349041  3798 net.cpp:124] Setting up ip2
I0428 20:30:43.349050  3798 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:43.349053  3798 net.cpp:139] Memory required for data: 29458800
I0428 20:30:43.349059  3798 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:43.349064  3798 net.cpp:86] Creating Layer relu2
I0428 20:30:43.349068  3798 net.cpp:408] relu2 <- ip2
I0428 20:30:43.349073  3798 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:43.349369  3798 net.cpp:124] Setting up relu2
I0428 20:30:43.349381  3798 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:43.349385  3798 net.cpp:139] Memory required for data: 29462800
I0428 20:30:43.349390  3798 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:43.349396  3798 net.cpp:86] Creating Layer ip3
I0428 20:30:43.349407  3798 net.cpp:408] ip3 <- ip2
I0428 20:30:43.349414  3798 net.cpp:382] ip3 -> ip3
I0428 20:30:43.349536  3798 net.cpp:124] Setting up ip3
I0428 20:30:43.349545  3798 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:43.349555  3798 net.cpp:139] Memory required for data: 29466800
I0428 20:30:43.349563  3798 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:43.349570  3798 net.cpp:86] Creating Layer relu3
I0428 20:30:43.349573  3798 net.cpp:408] relu3 <- ip3
I0428 20:30:43.349580  3798 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:43.350524  3798 net.cpp:124] Setting up relu3
I0428 20:30:43.350539  3798 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:43.350543  3798 net.cpp:139] Memory required for data: 29470800
I0428 20:30:43.350548  3798 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:43.350553  3798 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:43.350558  3798 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:43.350564  3798 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:43.350571  3798 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:43.350630  3798 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:43.350637  3798 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:43.350641  3798 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:43.350651  3798 net.cpp:139] Memory required for data: 29478800
I0428 20:30:43.350654  3798 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:43.350664  3798 net.cpp:86] Creating Layer accuracy
I0428 20:30:43.350668  3798 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:43.350673  3798 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:43.350678  3798 net.cpp:382] accuracy -> accuracy
I0428 20:30:43.350687  3798 net.cpp:124] Setting up accuracy
I0428 20:30:43.350692  3798 net.cpp:131] Top shape: (1)
I0428 20:30:43.350695  3798 net.cpp:139] Memory required for data: 29478804
I0428 20:30:43.350699  3798 layer_factory.hpp:77] Creating layer loss
I0428 20:30:43.350705  3798 net.cpp:86] Creating Layer loss
I0428 20:30:43.350715  3798 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:43.350719  3798 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:43.350724  3798 net.cpp:382] loss -> loss
I0428 20:30:43.350738  3798 layer_factory.hpp:77] Creating layer loss
I0428 20:30:43.351025  3798 net.cpp:124] Setting up loss
I0428 20:30:43.351037  3798 net.cpp:131] Top shape: (1)
I0428 20:30:43.351040  3798 net.cpp:134]     with loss weight 1
I0428 20:30:43.351059  3798 net.cpp:139] Memory required for data: 29478808
I0428 20:30:43.351063  3798 net.cpp:200] loss needs backward computation.
I0428 20:30:43.351076  3798 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:43.351080  3798 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:43.351084  3798 net.cpp:200] relu3 needs backward computation.
I0428 20:30:43.351088  3798 net.cpp:200] ip3 needs backward computation.
I0428 20:30:43.351090  3798 net.cpp:200] relu2 needs backward computation.
I0428 20:30:43.351094  3798 net.cpp:200] ip2 needs backward computation.
I0428 20:30:43.351099  3798 net.cpp:200] relu1 needs backward computation.
I0428 20:30:43.351101  3798 net.cpp:200] ip1 needs backward computation.
I0428 20:30:43.351105  3798 net.cpp:200] pool1 needs backward computation.
I0428 20:30:43.351109  3798 net.cpp:200] conv1 needs backward computation.
I0428 20:30:43.351112  3798 net.cpp:200] pool0 needs backward computation.
I0428 20:30:43.351115  3798 net.cpp:200] conv0 needs backward computation.
I0428 20:30:43.351120  3798 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:43.351125  3798 net.cpp:202] mnist does not need backward computation.
I0428 20:30:43.351128  3798 net.cpp:244] This network produces output accuracy
I0428 20:30:43.351132  3798 net.cpp:244] This network produces output loss
I0428 20:30:43.351158  3798 net.cpp:257] Network initialization done.
I0428 20:30:43.351208  3798 solver.cpp:56] Solver scaffolding done.
I0428 20:30:43.351619  3798 caffe.cpp:248] Starting Optimization
I0428 20:30:43.351626  3798 solver.cpp:273] Solving LeNet
I0428 20:30:43.351630  3798 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:43.352001  3798 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:43.454198  3805 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:43.456990  3798 solver.cpp:398]     Test net output #0: accuracy = 0.0624
I0428 20:30:43.457013  3798 solver.cpp:398]     Test net output #1: loss = 2.32873 (* 1 = 2.32873 loss)
I0428 20:30:43.461916  3798 solver.cpp:219] Iteration 0 (0 iter/s, 0.110233s/100 iters), loss = 2.33488
I0428 20:30:43.461946  3798 solver.cpp:238]     Train net output #0: loss = 2.33488 (* 1 = 2.33488 loss)
I0428 20:30:43.461966  3798 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:43.693292  3798 solver.cpp:219] Iteration 100 (432.306 iter/s, 0.231318s/100 iters), loss = 0.522349
I0428 20:30:43.693347  3798 solver.cpp:238]     Train net output #0: loss = 0.522349 (* 1 = 0.522349 loss)
I0428 20:30:43.693361  3798 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:43.921715  3798 solver.cpp:219] Iteration 200 (437.924 iter/s, 0.22835s/100 iters), loss = 0.260481
I0428 20:30:43.921771  3798 solver.cpp:238]     Train net output #0: loss = 0.260481 (* 1 = 0.260481 loss)
I0428 20:30:43.921785  3798 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:44.153029  3798 solver.cpp:219] Iteration 300 (432.452 iter/s, 0.23124s/100 iters), loss = 0.248373
I0428 20:30:44.153085  3798 solver.cpp:238]     Train net output #0: loss = 0.248373 (* 1 = 0.248373 loss)
I0428 20:30:44.153100  3798 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:44.385170  3798 solver.cpp:219] Iteration 400 (430.912 iter/s, 0.232066s/100 iters), loss = 0.123214
I0428 20:30:44.385226  3798 solver.cpp:238]     Train net output #0: loss = 0.123214 (* 1 = 0.123214 loss)
I0428 20:30:44.385241  3798 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:44.609052  3798 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:44.715668  3805 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:44.718524  3798 solver.cpp:398]     Test net output #0: accuracy = 0.9518
I0428 20:30:44.718556  3798 solver.cpp:398]     Test net output #1: loss = 0.159312 (* 1 = 0.159312 loss)
I0428 20:30:44.720557  3798 solver.cpp:219] Iteration 500 (298.228 iter/s, 0.335314s/100 iters), loss = 0.173326
I0428 20:30:44.720587  3798 solver.cpp:238]     Train net output #0: loss = 0.173326 (* 1 = 0.173326 loss)
I0428 20:30:44.720615  3798 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:44.942194  3798 solver.cpp:219] Iteration 600 (451.299 iter/s, 0.221582s/100 iters), loss = 0.126964
I0428 20:30:44.942256  3798 solver.cpp:238]     Train net output #0: loss = 0.126964 (* 1 = 0.126964 loss)
I0428 20:30:44.942273  3798 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:45.169572  3798 solver.cpp:219] Iteration 700 (439.948 iter/s, 0.227299s/100 iters), loss = 0.137729
I0428 20:30:45.169623  3798 solver.cpp:238]     Train net output #0: loss = 0.137729 (* 1 = 0.137729 loss)
I0428 20:30:45.169638  3798 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:45.393963  3798 solver.cpp:219] Iteration 800 (445.787 iter/s, 0.224323s/100 iters), loss = 0.233584
I0428 20:30:45.394012  3798 solver.cpp:238]     Train net output #0: loss = 0.233584 (* 1 = 0.233584 loss)
I0428 20:30:45.394026  3798 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:45.617010  3798 solver.cpp:219] Iteration 900 (448.477 iter/s, 0.222977s/100 iters), loss = 0.205168
I0428 20:30:45.617069  3798 solver.cpp:238]     Train net output #0: loss = 0.205168 (* 1 = 0.205168 loss)
I0428 20:30:45.617084  3798 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:45.688673  3804 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:45.829298  3798 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:45.831424  3798 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:45.832729  3798 solver.cpp:311] Iteration 1000, loss = 0.0569324
I0428 20:30:45.832752  3798 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:45.937860  3805 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:45.940929  3798 solver.cpp:398]     Test net output #0: accuracy = 0.971
I0428 20:30:45.940965  3798 solver.cpp:398]     Test net output #1: loss = 0.096453 (* 1 = 0.096453 loss)
I0428 20:30:45.940974  3798 solver.cpp:316] Optimization Done.
I0428 20:30:45.940980  3798 caffe.cpp:259] Optimization Done.
