I0428 19:31:01.012276 22469 caffe.cpp:218] Using GPUs 0
I0428 19:31:01.045511 22469 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:01.546043 22469 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test109.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:01.546183 22469 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test109.prototxt
I0428 19:31:01.546555 22469 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:01.546573 22469 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:01.546659 22469 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:01.546733 22469 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:01.546838 22469 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:01.546861 22469 net.cpp:86] Creating Layer mnist
I0428 19:31:01.546869 22469 net.cpp:382] mnist -> data
I0428 19:31:01.546891 22469 net.cpp:382] mnist -> label
I0428 19:31:01.547973 22469 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:01.550446 22469 net.cpp:124] Setting up mnist
I0428 19:31:01.550464 22469 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:01.550470 22469 net.cpp:131] Top shape: 64 (64)
I0428 19:31:01.550473 22469 net.cpp:139] Memory required for data: 200960
I0428 19:31:01.550482 22469 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:01.550498 22469 net.cpp:86] Creating Layer conv0
I0428 19:31:01.550504 22469 net.cpp:408] conv0 <- data
I0428 19:31:01.550518 22469 net.cpp:382] conv0 -> conv0
I0428 19:31:01.789074 22469 net.cpp:124] Setting up conv0
I0428 19:31:01.789099 22469 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:01.789103 22469 net.cpp:139] Memory required for data: 938240
I0428 19:31:01.789119 22469 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:01.789130 22469 net.cpp:86] Creating Layer pool0
I0428 19:31:01.789151 22469 net.cpp:408] pool0 <- conv0
I0428 19:31:01.789172 22469 net.cpp:382] pool0 -> pool0
I0428 19:31:01.789234 22469 net.cpp:124] Setting up pool0
I0428 19:31:01.789242 22469 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:01.789244 22469 net.cpp:139] Memory required for data: 1122560
I0428 19:31:01.789247 22469 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:01.789255 22469 net.cpp:86] Creating Layer ip1
I0428 19:31:01.789260 22469 net.cpp:408] ip1 <- pool0
I0428 19:31:01.789265 22469 net.cpp:382] ip1 -> ip1
I0428 19:31:01.789587 22469 net.cpp:124] Setting up ip1
I0428 19:31:01.789594 22469 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:01.789614 22469 net.cpp:139] Memory required for data: 1135360
I0428 19:31:01.789620 22469 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:01.789626 22469 net.cpp:86] Creating Layer relu1
I0428 19:31:01.789629 22469 net.cpp:408] relu1 <- ip1
I0428 19:31:01.789634 22469 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:01.789827 22469 net.cpp:124] Setting up relu1
I0428 19:31:01.789836 22469 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:01.789839 22469 net.cpp:139] Memory required for data: 1148160
I0428 19:31:01.789844 22469 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:01.789849 22469 net.cpp:86] Creating Layer ip2
I0428 19:31:01.789854 22469 net.cpp:408] ip2 <- ip1
I0428 19:31:01.789857 22469 net.cpp:382] ip2 -> ip2
I0428 19:31:01.789964 22469 net.cpp:124] Setting up ip2
I0428 19:31:01.789971 22469 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:01.789974 22469 net.cpp:139] Memory required for data: 1150720
I0428 19:31:01.789981 22469 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:01.789988 22469 net.cpp:86] Creating Layer relu2
I0428 19:31:01.790007 22469 net.cpp:408] relu2 <- ip2
I0428 19:31:01.790011 22469 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:01.790851 22469 net.cpp:124] Setting up relu2
I0428 19:31:01.790863 22469 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:01.790884 22469 net.cpp:139] Memory required for data: 1153280
I0428 19:31:01.790887 22469 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:01.790894 22469 net.cpp:86] Creating Layer ip3
I0428 19:31:01.790897 22469 net.cpp:408] ip3 <- ip2
I0428 19:31:01.790904 22469 net.cpp:382] ip3 -> ip3
I0428 19:31:01.791038 22469 net.cpp:124] Setting up ip3
I0428 19:31:01.791046 22469 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:01.791050 22469 net.cpp:139] Memory required for data: 1155840
I0428 19:31:01.791056 22469 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:01.791062 22469 net.cpp:86] Creating Layer relu3
I0428 19:31:01.791065 22469 net.cpp:408] relu3 <- ip3
I0428 19:31:01.791070 22469 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:01.791261 22469 net.cpp:124] Setting up relu3
I0428 19:31:01.791270 22469 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:01.791272 22469 net.cpp:139] Memory required for data: 1158400
I0428 19:31:01.791275 22469 layer_factory.hpp:77] Creating layer loss
I0428 19:31:01.791281 22469 net.cpp:86] Creating Layer loss
I0428 19:31:01.791285 22469 net.cpp:408] loss <- ip3
I0428 19:31:01.791288 22469 net.cpp:408] loss <- label
I0428 19:31:01.791295 22469 net.cpp:382] loss -> loss
I0428 19:31:01.791307 22469 layer_factory.hpp:77] Creating layer loss
I0428 19:31:01.791537 22469 net.cpp:124] Setting up loss
I0428 19:31:01.791545 22469 net.cpp:131] Top shape: (1)
I0428 19:31:01.791548 22469 net.cpp:134]     with loss weight 1
I0428 19:31:01.791563 22469 net.cpp:139] Memory required for data: 1158404
I0428 19:31:01.791566 22469 net.cpp:200] loss needs backward computation.
I0428 19:31:01.791569 22469 net.cpp:200] relu3 needs backward computation.
I0428 19:31:01.791574 22469 net.cpp:200] ip3 needs backward computation.
I0428 19:31:01.791576 22469 net.cpp:200] relu2 needs backward computation.
I0428 19:31:01.791579 22469 net.cpp:200] ip2 needs backward computation.
I0428 19:31:01.791597 22469 net.cpp:200] relu1 needs backward computation.
I0428 19:31:01.791600 22469 net.cpp:200] ip1 needs backward computation.
I0428 19:31:01.791612 22469 net.cpp:200] pool0 needs backward computation.
I0428 19:31:01.791616 22469 net.cpp:200] conv0 needs backward computation.
I0428 19:31:01.791620 22469 net.cpp:202] mnist does not need backward computation.
I0428 19:31:01.791623 22469 net.cpp:244] This network produces output loss
I0428 19:31:01.791631 22469 net.cpp:257] Network initialization done.
I0428 19:31:01.791966 22469 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test109.prototxt
I0428 19:31:01.792002 22469 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:01.792081 22469 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:01.792142 22469 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:01.792201 22469 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:01.792228 22469 net.cpp:86] Creating Layer mnist
I0428 19:31:01.792233 22469 net.cpp:382] mnist -> data
I0428 19:31:01.792240 22469 net.cpp:382] mnist -> label
I0428 19:31:01.792322 22469 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:01.794661 22469 net.cpp:124] Setting up mnist
I0428 19:31:01.794692 22469 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:01.794713 22469 net.cpp:131] Top shape: 100 (100)
I0428 19:31:01.794716 22469 net.cpp:139] Memory required for data: 314000
I0428 19:31:01.794720 22469 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:01.794728 22469 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:01.794731 22469 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:01.794736 22469 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:01.794744 22469 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:01.794845 22469 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:01.794853 22469 net.cpp:131] Top shape: 100 (100)
I0428 19:31:01.794857 22469 net.cpp:131] Top shape: 100 (100)
I0428 19:31:01.794860 22469 net.cpp:139] Memory required for data: 314800
I0428 19:31:01.794872 22469 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:01.794881 22469 net.cpp:86] Creating Layer conv0
I0428 19:31:01.794884 22469 net.cpp:408] conv0 <- data
I0428 19:31:01.794890 22469 net.cpp:382] conv0 -> conv0
I0428 19:31:01.796442 22469 net.cpp:124] Setting up conv0
I0428 19:31:01.796471 22469 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:01.796475 22469 net.cpp:139] Memory required for data: 1466800
I0428 19:31:01.796484 22469 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:01.796492 22469 net.cpp:86] Creating Layer pool0
I0428 19:31:01.796496 22469 net.cpp:408] pool0 <- conv0
I0428 19:31:01.796500 22469 net.cpp:382] pool0 -> pool0
I0428 19:31:01.796538 22469 net.cpp:124] Setting up pool0
I0428 19:31:01.796543 22469 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:01.796546 22469 net.cpp:139] Memory required for data: 1754800
I0428 19:31:01.796550 22469 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:01.796556 22469 net.cpp:86] Creating Layer ip1
I0428 19:31:01.796560 22469 net.cpp:408] ip1 <- pool0
I0428 19:31:01.796564 22469 net.cpp:382] ip1 -> ip1
I0428 19:31:01.796952 22469 net.cpp:124] Setting up ip1
I0428 19:31:01.796960 22469 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:01.796978 22469 net.cpp:139] Memory required for data: 1774800
I0428 19:31:01.796986 22469 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:01.796991 22469 net.cpp:86] Creating Layer relu1
I0428 19:31:01.796994 22469 net.cpp:408] relu1 <- ip1
I0428 19:31:01.797000 22469 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:01.797283 22469 net.cpp:124] Setting up relu1
I0428 19:31:01.797292 22469 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:01.797297 22469 net.cpp:139] Memory required for data: 1794800
I0428 19:31:01.797300 22469 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:01.797307 22469 net.cpp:86] Creating Layer ip2
I0428 19:31:01.797310 22469 net.cpp:408] ip2 <- ip1
I0428 19:31:01.797315 22469 net.cpp:382] ip2 -> ip2
I0428 19:31:01.797466 22469 net.cpp:124] Setting up ip2
I0428 19:31:01.797474 22469 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:01.797477 22469 net.cpp:139] Memory required for data: 1798800
I0428 19:31:01.797484 22469 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:01.797493 22469 net.cpp:86] Creating Layer relu2
I0428 19:31:01.797497 22469 net.cpp:408] relu2 <- ip2
I0428 19:31:01.797500 22469 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:01.798368 22469 net.cpp:124] Setting up relu2
I0428 19:31:01.798380 22469 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:01.798399 22469 net.cpp:139] Memory required for data: 1802800
I0428 19:31:01.798403 22469 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:01.798413 22469 net.cpp:86] Creating Layer ip3
I0428 19:31:01.798416 22469 net.cpp:408] ip3 <- ip2
I0428 19:31:01.798424 22469 net.cpp:382] ip3 -> ip3
I0428 19:31:01.798573 22469 net.cpp:124] Setting up ip3
I0428 19:31:01.798581 22469 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:01.798585 22469 net.cpp:139] Memory required for data: 1806800
I0428 19:31:01.798591 22469 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:01.798611 22469 net.cpp:86] Creating Layer relu3
I0428 19:31:01.798615 22469 net.cpp:408] relu3 <- ip3
I0428 19:31:01.798619 22469 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:01.798781 22469 net.cpp:124] Setting up relu3
I0428 19:31:01.798791 22469 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:01.798795 22469 net.cpp:139] Memory required for data: 1810800
I0428 19:31:01.798812 22469 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:01.798818 22469 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:01.798826 22469 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:01.798836 22469 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:01.798843 22469 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:01.798877 22469 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:01.798884 22469 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:01.798888 22469 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:01.798902 22469 net.cpp:139] Memory required for data: 1818800
I0428 19:31:01.798904 22469 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:01.798910 22469 net.cpp:86] Creating Layer accuracy
I0428 19:31:01.798914 22469 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:01.798918 22469 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:01.798923 22469 net.cpp:382] accuracy -> accuracy
I0428 19:31:01.798929 22469 net.cpp:124] Setting up accuracy
I0428 19:31:01.798933 22469 net.cpp:131] Top shape: (1)
I0428 19:31:01.798936 22469 net.cpp:139] Memory required for data: 1818804
I0428 19:31:01.798939 22469 layer_factory.hpp:77] Creating layer loss
I0428 19:31:01.798961 22469 net.cpp:86] Creating Layer loss
I0428 19:31:01.798964 22469 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:01.798974 22469 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:01.798977 22469 net.cpp:382] loss -> loss
I0428 19:31:01.798985 22469 layer_factory.hpp:77] Creating layer loss
I0428 19:31:01.799230 22469 net.cpp:124] Setting up loss
I0428 19:31:01.799239 22469 net.cpp:131] Top shape: (1)
I0428 19:31:01.799242 22469 net.cpp:134]     with loss weight 1
I0428 19:31:01.799249 22469 net.cpp:139] Memory required for data: 1818808
I0428 19:31:01.799259 22469 net.cpp:200] loss needs backward computation.
I0428 19:31:01.799263 22469 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:01.799268 22469 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:01.799270 22469 net.cpp:200] relu3 needs backward computation.
I0428 19:31:01.799278 22469 net.cpp:200] ip3 needs backward computation.
I0428 19:31:01.799281 22469 net.cpp:200] relu2 needs backward computation.
I0428 19:31:01.799288 22469 net.cpp:200] ip2 needs backward computation.
I0428 19:31:01.799291 22469 net.cpp:200] relu1 needs backward computation.
I0428 19:31:01.799294 22469 net.cpp:200] ip1 needs backward computation.
I0428 19:31:01.799298 22469 net.cpp:200] pool0 needs backward computation.
I0428 19:31:01.799300 22469 net.cpp:200] conv0 needs backward computation.
I0428 19:31:01.799304 22469 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:01.799309 22469 net.cpp:202] mnist does not need backward computation.
I0428 19:31:01.799324 22469 net.cpp:244] This network produces output accuracy
I0428 19:31:01.799329 22469 net.cpp:244] This network produces output loss
I0428 19:31:01.799338 22469 net.cpp:257] Network initialization done.
I0428 19:31:01.799391 22469 solver.cpp:56] Solver scaffolding done.
I0428 19:31:01.799818 22469 caffe.cpp:248] Starting Optimization
I0428 19:31:01.799823 22469 solver.cpp:273] Solving LeNet
I0428 19:31:01.799825 22469 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:01.800596 22469 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:01.803457 22469 blocking_queue.cpp:49] Waiting for data
I0428 19:31:01.846675 22476 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:01.847390 22469 solver.cpp:398]     Test net output #0: accuracy = 0.1224
I0428 19:31:01.847419 22469 solver.cpp:398]     Test net output #1: loss = 2.30353 (* 1 = 2.30353 loss)
I0428 19:31:01.850481 22469 solver.cpp:219] Iteration 0 (0 iter/s, 0.0506117s/100 iters), loss = 2.31386
I0428 19:31:01.850525 22469 solver.cpp:238]     Train net output #0: loss = 2.31386 (* 1 = 2.31386 loss)
I0428 19:31:01.850543 22469 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:01.918401 22469 solver.cpp:219] Iteration 100 (1473.39 iter/s, 0.0678707s/100 iters), loss = 1.43091
I0428 19:31:01.918438 22469 solver.cpp:238]     Train net output #0: loss = 1.43091 (* 1 = 1.43091 loss)
I0428 19:31:01.918445 22469 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:01.981128 22469 solver.cpp:219] Iteration 200 (1595.14 iter/s, 0.0626903s/100 iters), loss = 1.21941
I0428 19:31:01.981173 22469 solver.cpp:238]     Train net output #0: loss = 1.21941 (* 1 = 1.21941 loss)
I0428 19:31:01.981180 22469 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:02.041342 22469 solver.cpp:219] Iteration 300 (1661.92 iter/s, 0.0601713s/100 iters), loss = 1.42271
I0428 19:31:02.041376 22469 solver.cpp:238]     Train net output #0: loss = 1.42271 (* 1 = 1.42271 loss)
I0428 19:31:02.041381 22469 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:02.100630 22469 solver.cpp:219] Iteration 400 (1687.6 iter/s, 0.0592558s/100 iters), loss = 1.00111
I0428 19:31:02.100667 22469 solver.cpp:238]     Train net output #0: loss = 1.00111 (* 1 = 1.00111 loss)
I0428 19:31:02.100673 22469 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:02.159920 22469 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:02.210503 22476 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:02.212040 22469 solver.cpp:398]     Test net output #0: accuracy = 0.5736
I0428 19:31:02.212085 22469 solver.cpp:398]     Test net output #1: loss = 1.06991 (* 1 = 1.06991 loss)
I0428 19:31:02.212863 22469 solver.cpp:219] Iteration 500 (891.293 iter/s, 0.112197s/100 iters), loss = 1.04536
I0428 19:31:02.212908 22469 solver.cpp:238]     Train net output #0: loss = 1.04536 (* 1 = 1.04536 loss)
I0428 19:31:02.212918 22469 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:02.284160 22469 solver.cpp:219] Iteration 600 (1403.45 iter/s, 0.071253s/100 iters), loss = 1.19059
I0428 19:31:02.284190 22469 solver.cpp:238]     Train net output #0: loss = 1.19059 (* 1 = 1.19059 loss)
I0428 19:31:02.284200 22469 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:02.350991 22469 solver.cpp:219] Iteration 700 (1497.17 iter/s, 0.0667926s/100 iters), loss = 0.925152
I0428 19:31:02.351032 22469 solver.cpp:238]     Train net output #0: loss = 0.925152 (* 1 = 0.925152 loss)
I0428 19:31:02.351039 22469 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:02.414574 22469 solver.cpp:219] Iteration 800 (1573.67 iter/s, 0.0635458s/100 iters), loss = 1.29919
I0428 19:31:02.414613 22469 solver.cpp:238]     Train net output #0: loss = 1.29919 (* 1 = 1.29919 loss)
I0428 19:31:02.414626 22469 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:02.478247 22469 solver.cpp:219] Iteration 900 (1571.71 iter/s, 0.063625s/100 iters), loss = 1.4262
I0428 19:31:02.478274 22469 solver.cpp:238]     Train net output #0: loss = 1.4262 (* 1 = 1.4262 loss)
I0428 19:31:02.478282 22469 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:02.499660 22475 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:02.541401 22469 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:02.542634 22469 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:02.543364 22469 solver.cpp:311] Iteration 1000, loss = 0.977829
I0428 19:31:02.543383 22469 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:02.617913 22476 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:02.618474 22469 solver.cpp:398]     Test net output #0: accuracy = 0.5804
I0428 19:31:02.618513 22469 solver.cpp:398]     Test net output #1: loss = 1.02384 (* 1 = 1.02384 loss)
I0428 19:31:02.618522 22469 solver.cpp:316] Optimization Done.
I0428 19:31:02.618528 22469 caffe.cpp:259] Optimization Done.
