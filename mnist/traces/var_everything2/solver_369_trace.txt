I0428 19:41:35.294085 24862 caffe.cpp:218] Using GPUs 0
I0428 19:41:35.335996 24862 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:35.855258 24862 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test369.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:35.855398 24862 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test369.prototxt
I0428 19:41:35.855823 24862 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:35.855842 24862 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:35.855944 24862 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:35.856024 24862 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:35.856122 24862 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:35.856149 24862 net.cpp:86] Creating Layer mnist
I0428 19:41:35.856158 24862 net.cpp:382] mnist -> data
I0428 19:41:35.856181 24862 net.cpp:382] mnist -> label
I0428 19:41:35.857297 24862 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:35.859760 24862 net.cpp:124] Setting up mnist
I0428 19:41:35.859777 24862 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:35.859786 24862 net.cpp:131] Top shape: 64 (64)
I0428 19:41:35.859788 24862 net.cpp:139] Memory required for data: 200960
I0428 19:41:35.859796 24862 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:35.859810 24862 net.cpp:86] Creating Layer conv0
I0428 19:41:35.859832 24862 net.cpp:408] conv0 <- data
I0428 19:41:35.859845 24862 net.cpp:382] conv0 -> conv0
I0428 19:41:36.132645 24862 net.cpp:124] Setting up conv0
I0428 19:41:36.132673 24862 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:36.132676 24862 net.cpp:139] Memory required for data: 495872
I0428 19:41:36.132689 24862 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:36.132700 24862 net.cpp:86] Creating Layer pool0
I0428 19:41:36.132704 24862 net.cpp:408] pool0 <- conv0
I0428 19:41:36.132710 24862 net.cpp:382] pool0 -> pool0
I0428 19:41:36.132787 24862 net.cpp:124] Setting up pool0
I0428 19:41:36.132796 24862 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:36.132798 24862 net.cpp:139] Memory required for data: 569600
I0428 19:41:36.132802 24862 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:36.132834 24862 net.cpp:86] Creating Layer conv1
I0428 19:41:36.132838 24862 net.cpp:408] conv1 <- pool0
I0428 19:41:36.132858 24862 net.cpp:382] conv1 -> conv1
I0428 19:41:36.134799 24862 net.cpp:124] Setting up conv1
I0428 19:41:36.134814 24862 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:36.134834 24862 net.cpp:139] Memory required for data: 733440
I0428 19:41:36.134842 24862 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:36.134850 24862 net.cpp:86] Creating Layer pool1
I0428 19:41:36.134853 24862 net.cpp:408] pool1 <- conv1
I0428 19:41:36.134858 24862 net.cpp:382] pool1 -> pool1
I0428 19:41:36.134894 24862 net.cpp:124] Setting up pool1
I0428 19:41:36.134899 24862 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:36.134903 24862 net.cpp:139] Memory required for data: 774400
I0428 19:41:36.134907 24862 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:36.134917 24862 net.cpp:86] Creating Layer ip1
I0428 19:41:36.134937 24862 net.cpp:408] ip1 <- pool1
I0428 19:41:36.134941 24862 net.cpp:382] ip1 -> ip1
I0428 19:41:36.135897 24862 net.cpp:124] Setting up ip1
I0428 19:41:36.135910 24862 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:36.135928 24862 net.cpp:139] Memory required for data: 776960
I0428 19:41:36.135936 24862 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:36.135943 24862 net.cpp:86] Creating Layer relu1
I0428 19:41:36.135946 24862 net.cpp:408] relu1 <- ip1
I0428 19:41:36.135951 24862 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:36.136137 24862 net.cpp:124] Setting up relu1
I0428 19:41:36.136147 24862 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:36.136149 24862 net.cpp:139] Memory required for data: 779520
I0428 19:41:36.136153 24862 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:36.136159 24862 net.cpp:86] Creating Layer ip2
I0428 19:41:36.136162 24862 net.cpp:408] ip2 <- ip1
I0428 19:41:36.136168 24862 net.cpp:382] ip2 -> ip2
I0428 19:41:36.136272 24862 net.cpp:124] Setting up ip2
I0428 19:41:36.136279 24862 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:36.136282 24862 net.cpp:139] Memory required for data: 792320
I0428 19:41:36.136288 24862 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:36.136296 24862 net.cpp:86] Creating Layer relu2
I0428 19:41:36.136298 24862 net.cpp:408] relu2 <- ip2
I0428 19:41:36.136302 24862 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:36.137079 24862 net.cpp:124] Setting up relu2
I0428 19:41:36.137107 24862 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:41:36.137111 24862 net.cpp:139] Memory required for data: 805120
I0428 19:41:36.137115 24862 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:36.137137 24862 net.cpp:86] Creating Layer ip3
I0428 19:41:36.137156 24862 net.cpp:408] ip3 <- ip2
I0428 19:41:36.137162 24862 net.cpp:382] ip3 -> ip3
I0428 19:41:36.137264 24862 net.cpp:124] Setting up ip3
I0428 19:41:36.137271 24862 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:36.137275 24862 net.cpp:139] Memory required for data: 807680
I0428 19:41:36.137284 24862 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:36.137289 24862 net.cpp:86] Creating Layer relu3
I0428 19:41:36.137292 24862 net.cpp:408] relu3 <- ip3
I0428 19:41:36.137296 24862 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:36.137478 24862 net.cpp:124] Setting up relu3
I0428 19:41:36.137487 24862 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:36.137490 24862 net.cpp:139] Memory required for data: 810240
I0428 19:41:36.137495 24862 layer_factory.hpp:77] Creating layer loss
I0428 19:41:36.137501 24862 net.cpp:86] Creating Layer loss
I0428 19:41:36.137503 24862 net.cpp:408] loss <- ip3
I0428 19:41:36.137507 24862 net.cpp:408] loss <- label
I0428 19:41:36.137512 24862 net.cpp:382] loss -> loss
I0428 19:41:36.137529 24862 layer_factory.hpp:77] Creating layer loss
I0428 19:41:36.137768 24862 net.cpp:124] Setting up loss
I0428 19:41:36.137778 24862 net.cpp:131] Top shape: (1)
I0428 19:41:36.137780 24862 net.cpp:134]     with loss weight 1
I0428 19:41:36.137795 24862 net.cpp:139] Memory required for data: 810244
I0428 19:41:36.137799 24862 net.cpp:200] loss needs backward computation.
I0428 19:41:36.137802 24862 net.cpp:200] relu3 needs backward computation.
I0428 19:41:36.137806 24862 net.cpp:200] ip3 needs backward computation.
I0428 19:41:36.137809 24862 net.cpp:200] relu2 needs backward computation.
I0428 19:41:36.137812 24862 net.cpp:200] ip2 needs backward computation.
I0428 19:41:36.137815 24862 net.cpp:200] relu1 needs backward computation.
I0428 19:41:36.137817 24862 net.cpp:200] ip1 needs backward computation.
I0428 19:41:36.137821 24862 net.cpp:200] pool1 needs backward computation.
I0428 19:41:36.137825 24862 net.cpp:200] conv1 needs backward computation.
I0428 19:41:36.137827 24862 net.cpp:200] pool0 needs backward computation.
I0428 19:41:36.137830 24862 net.cpp:200] conv0 needs backward computation.
I0428 19:41:36.137835 24862 net.cpp:202] mnist does not need backward computation.
I0428 19:41:36.137837 24862 net.cpp:244] This network produces output loss
I0428 19:41:36.137846 24862 net.cpp:257] Network initialization done.
I0428 19:41:36.138193 24862 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test369.prototxt
I0428 19:41:36.138252 24862 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:36.138355 24862 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:36.138447 24862 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:36.138491 24862 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:36.138504 24862 net.cpp:86] Creating Layer mnist
I0428 19:41:36.138509 24862 net.cpp:382] mnist -> data
I0428 19:41:36.138516 24862 net.cpp:382] mnist -> label
I0428 19:41:36.138613 24862 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:36.140841 24862 net.cpp:124] Setting up mnist
I0428 19:41:36.140885 24862 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:36.140890 24862 net.cpp:131] Top shape: 100 (100)
I0428 19:41:36.140894 24862 net.cpp:139] Memory required for data: 314000
I0428 19:41:36.140898 24862 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:36.140931 24862 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:36.140952 24862 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:36.140957 24862 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:36.140979 24862 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:36.141018 24862 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:36.141023 24862 net.cpp:131] Top shape: 100 (100)
I0428 19:41:36.141027 24862 net.cpp:131] Top shape: 100 (100)
I0428 19:41:36.141031 24862 net.cpp:139] Memory required for data: 314800
I0428 19:41:36.141033 24862 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:36.141041 24862 net.cpp:86] Creating Layer conv0
I0428 19:41:36.141044 24862 net.cpp:408] conv0 <- data
I0428 19:41:36.141048 24862 net.cpp:382] conv0 -> conv0
I0428 19:41:36.142951 24862 net.cpp:124] Setting up conv0
I0428 19:41:36.142966 24862 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:36.142984 24862 net.cpp:139] Memory required for data: 775600
I0428 19:41:36.143009 24862 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:36.143016 24862 net.cpp:86] Creating Layer pool0
I0428 19:41:36.143021 24862 net.cpp:408] pool0 <- conv0
I0428 19:41:36.143026 24862 net.cpp:382] pool0 -> pool0
I0428 19:41:36.143077 24862 net.cpp:124] Setting up pool0
I0428 19:41:36.143097 24862 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:36.143100 24862 net.cpp:139] Memory required for data: 890800
I0428 19:41:36.143103 24862 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:36.143112 24862 net.cpp:86] Creating Layer conv1
I0428 19:41:36.143115 24862 net.cpp:408] conv1 <- pool0
I0428 19:41:36.143121 24862 net.cpp:382] conv1 -> conv1
I0428 19:41:36.144929 24862 net.cpp:124] Setting up conv1
I0428 19:41:36.144945 24862 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:36.144949 24862 net.cpp:139] Memory required for data: 1146800
I0428 19:41:36.144958 24862 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:36.144968 24862 net.cpp:86] Creating Layer pool1
I0428 19:41:36.144971 24862 net.cpp:408] pool1 <- conv1
I0428 19:41:36.144976 24862 net.cpp:382] pool1 -> pool1
I0428 19:41:36.145018 24862 net.cpp:124] Setting up pool1
I0428 19:41:36.145023 24862 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:36.145027 24862 net.cpp:139] Memory required for data: 1210800
I0428 19:41:36.145038 24862 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:36.145045 24862 net.cpp:86] Creating Layer ip1
I0428 19:41:36.145054 24862 net.cpp:408] ip1 <- pool1
I0428 19:41:36.145061 24862 net.cpp:382] ip1 -> ip1
I0428 19:41:36.145208 24862 net.cpp:124] Setting up ip1
I0428 19:41:36.145216 24862 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:36.145231 24862 net.cpp:139] Memory required for data: 1214800
I0428 19:41:36.145239 24862 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:36.145244 24862 net.cpp:86] Creating Layer relu1
I0428 19:41:36.145262 24862 net.cpp:408] relu1 <- ip1
I0428 19:41:36.145267 24862 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:36.145457 24862 net.cpp:124] Setting up relu1
I0428 19:41:36.145465 24862 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:36.145469 24862 net.cpp:139] Memory required for data: 1218800
I0428 19:41:36.145473 24862 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:36.145480 24862 net.cpp:86] Creating Layer ip2
I0428 19:41:36.145494 24862 net.cpp:408] ip2 <- ip1
I0428 19:41:36.145519 24862 net.cpp:382] ip2 -> ip2
I0428 19:41:36.145625 24862 net.cpp:124] Setting up ip2
I0428 19:41:36.145633 24862 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:36.145637 24862 net.cpp:139] Memory required for data: 1238800
I0428 19:41:36.145649 24862 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:36.145655 24862 net.cpp:86] Creating Layer relu2
I0428 19:41:36.145663 24862 net.cpp:408] relu2 <- ip2
I0428 19:41:36.145668 24862 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:36.145831 24862 net.cpp:124] Setting up relu2
I0428 19:41:36.145839 24862 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:41:36.145843 24862 net.cpp:139] Memory required for data: 1258800
I0428 19:41:36.145846 24862 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:36.145851 24862 net.cpp:86] Creating Layer ip3
I0428 19:41:36.145854 24862 net.cpp:408] ip3 <- ip2
I0428 19:41:36.145859 24862 net.cpp:382] ip3 -> ip3
I0428 19:41:36.145995 24862 net.cpp:124] Setting up ip3
I0428 19:41:36.146014 24862 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:36.146018 24862 net.cpp:139] Memory required for data: 1262800
I0428 19:41:36.146024 24862 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:36.146030 24862 net.cpp:86] Creating Layer relu3
I0428 19:41:36.146033 24862 net.cpp:408] relu3 <- ip3
I0428 19:41:36.146036 24862 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:36.147023 24862 net.cpp:124] Setting up relu3
I0428 19:41:36.147037 24862 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:36.147040 24862 net.cpp:139] Memory required for data: 1266800
I0428 19:41:36.147044 24862 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:36.147049 24862 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:36.147053 24862 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:36.147058 24862 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:36.147066 24862 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:36.147106 24862 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:36.147112 24862 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:36.147116 24862 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:36.147119 24862 net.cpp:139] Memory required for data: 1274800
I0428 19:41:36.147122 24862 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:36.147128 24862 net.cpp:86] Creating Layer accuracy
I0428 19:41:36.147131 24862 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:36.147135 24862 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:36.147140 24862 net.cpp:382] accuracy -> accuracy
I0428 19:41:36.147146 24862 net.cpp:124] Setting up accuracy
I0428 19:41:36.147150 24862 net.cpp:131] Top shape: (1)
I0428 19:41:36.147153 24862 net.cpp:139] Memory required for data: 1274804
I0428 19:41:36.147156 24862 layer_factory.hpp:77] Creating layer loss
I0428 19:41:36.147161 24862 net.cpp:86] Creating Layer loss
I0428 19:41:36.147164 24862 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:36.147168 24862 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:36.147172 24862 net.cpp:382] loss -> loss
I0428 19:41:36.147177 24862 layer_factory.hpp:77] Creating layer loss
I0428 19:41:36.147429 24862 net.cpp:124] Setting up loss
I0428 19:41:36.147439 24862 net.cpp:131] Top shape: (1)
I0428 19:41:36.147442 24862 net.cpp:134]     with loss weight 1
I0428 19:41:36.147447 24862 net.cpp:139] Memory required for data: 1274808
I0428 19:41:36.147460 24862 net.cpp:200] loss needs backward computation.
I0428 19:41:36.147464 24862 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:36.147469 24862 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:36.147472 24862 net.cpp:200] relu3 needs backward computation.
I0428 19:41:36.147475 24862 net.cpp:200] ip3 needs backward computation.
I0428 19:41:36.147477 24862 net.cpp:200] relu2 needs backward computation.
I0428 19:41:36.147481 24862 net.cpp:200] ip2 needs backward computation.
I0428 19:41:36.147483 24862 net.cpp:200] relu1 needs backward computation.
I0428 19:41:36.147486 24862 net.cpp:200] ip1 needs backward computation.
I0428 19:41:36.147490 24862 net.cpp:200] pool1 needs backward computation.
I0428 19:41:36.147492 24862 net.cpp:200] conv1 needs backward computation.
I0428 19:41:36.147495 24862 net.cpp:200] pool0 needs backward computation.
I0428 19:41:36.147498 24862 net.cpp:200] conv0 needs backward computation.
I0428 19:41:36.147508 24862 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:36.147513 24862 net.cpp:202] mnist does not need backward computation.
I0428 19:41:36.147521 24862 net.cpp:244] This network produces output accuracy
I0428 19:41:36.147524 24862 net.cpp:244] This network produces output loss
I0428 19:41:36.147534 24862 net.cpp:257] Network initialization done.
I0428 19:41:36.147580 24862 solver.cpp:56] Solver scaffolding done.
I0428 19:41:36.147987 24862 caffe.cpp:248] Starting Optimization
I0428 19:41:36.147994 24862 solver.cpp:273] Solving LeNet
I0428 19:41:36.147997 24862 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:36.148882 24862 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:36.150974 24862 blocking_queue.cpp:49] Waiting for data
I0428 19:41:36.224125 24869 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:36.224561 24862 solver.cpp:398]     Test net output #0: accuracy = 0.1028
I0428 19:41:36.224581 24862 solver.cpp:398]     Test net output #1: loss = 2.35347 (* 1 = 2.35347 loss)
I0428 19:41:36.226501 24862 solver.cpp:219] Iteration 0 (-6.73993e-31 iter/s, 0.0784692s/100 iters), loss = 2.3562
I0428 19:41:36.226552 24862 solver.cpp:238]     Train net output #0: loss = 2.3562 (* 1 = 2.3562 loss)
I0428 19:41:36.226567 24862 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:36.303863 24862 solver.cpp:219] Iteration 100 (1293.45 iter/s, 0.0773129s/100 iters), loss = 1.10576
I0428 19:41:36.303889 24862 solver.cpp:238]     Train net output #0: loss = 1.10576 (* 1 = 1.10576 loss)
I0428 19:41:36.303896 24862 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:36.378208 24862 solver.cpp:219] Iteration 200 (1345.76 iter/s, 0.0743076s/100 iters), loss = 0.340424
I0428 19:41:36.378232 24862 solver.cpp:238]     Train net output #0: loss = 0.340424 (* 1 = 0.340424 loss)
I0428 19:41:36.378238 24862 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:36.450297 24862 solver.cpp:219] Iteration 300 (1387.87 iter/s, 0.0720527s/100 iters), loss = 0.301868
I0428 19:41:36.450337 24862 solver.cpp:238]     Train net output #0: loss = 0.301868 (* 1 = 0.301868 loss)
I0428 19:41:36.450345 24862 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:36.520604 24862 solver.cpp:219] Iteration 400 (1423.02 iter/s, 0.070273s/100 iters), loss = 0.201101
I0428 19:41:36.520647 24862 solver.cpp:238]     Train net output #0: loss = 0.201101 (* 1 = 0.201101 loss)
I0428 19:41:36.520653 24862 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:36.596506 24862 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:36.648986 24869 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:36.649441 24862 solver.cpp:398]     Test net output #0: accuracy = 0.9298
I0428 19:41:36.649461 24862 solver.cpp:398]     Test net output #1: loss = 0.223918 (* 1 = 0.223918 loss)
I0428 19:41:36.650244 24862 solver.cpp:219] Iteration 500 (771.681 iter/s, 0.129587s/100 iters), loss = 0.143303
I0428 19:41:36.650269 24862 solver.cpp:238]     Train net output #0: loss = 0.143303 (* 1 = 0.143303 loss)
I0428 19:41:36.650295 24862 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:36.722774 24862 solver.cpp:219] Iteration 600 (1379.42 iter/s, 0.0724943s/100 iters), loss = 0.238139
I0428 19:41:36.722798 24862 solver.cpp:238]     Train net output #0: loss = 0.238139 (* 1 = 0.238139 loss)
I0428 19:41:36.722820 24862 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:36.796566 24862 solver.cpp:219] Iteration 700 (1355.83 iter/s, 0.0737556s/100 iters), loss = 0.203857
I0428 19:41:36.796588 24862 solver.cpp:238]     Train net output #0: loss = 0.203857 (* 1 = 0.203857 loss)
I0428 19:41:36.796610 24862 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:36.867154 24862 solver.cpp:219] Iteration 800 (1417.4 iter/s, 0.0705516s/100 iters), loss = 0.342635
I0428 19:41:36.867178 24862 solver.cpp:238]     Train net output #0: loss = 0.342635 (* 1 = 0.342635 loss)
I0428 19:41:36.867202 24862 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:36.938818 24862 solver.cpp:219] Iteration 900 (1396.11 iter/s, 0.0716278s/100 iters), loss = 0.31407
I0428 19:41:36.938844 24862 solver.cpp:238]     Train net output #0: loss = 0.31407 (* 1 = 0.31407 loss)
I0428 19:41:36.938869 24862 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:36.963146 24868 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:37.010426 24862 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:37.011124 24862 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:37.011523 24862 solver.cpp:311] Iteration 1000, loss = 0.140453
I0428 19:41:37.011538 24862 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:37.064000 24869 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:37.064452 24862 solver.cpp:398]     Test net output #0: accuracy = 0.9514
I0428 19:41:37.064472 24862 solver.cpp:398]     Test net output #1: loss = 0.15589 (* 1 = 0.15589 loss)
I0428 19:41:37.064484 24862 solver.cpp:316] Optimization Done.
I0428 19:41:37.064488 24862 caffe.cpp:259] Optimization Done.
