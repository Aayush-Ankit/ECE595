I0428 20:09:04.892411 31551 caffe.cpp:218] Using GPUs 0
I0428 20:09:04.929657 31551 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:09:05.444600 31551 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1100.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:09:05.444746 31551 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1100.prototxt
I0428 20:09:05.445142 31551 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:09:05.445159 31551 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:09:05.445250 31551 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:09:05.445324 31551 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:05.445420 31551 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:09:05.445442 31551 net.cpp:86] Creating Layer mnist
I0428 20:09:05.445451 31551 net.cpp:382] mnist -> data
I0428 20:09:05.445473 31551 net.cpp:382] mnist -> label
I0428 20:09:05.446575 31551 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:09:05.449041 31551 net.cpp:124] Setting up mnist
I0428 20:09:05.449060 31551 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:09:05.449069 31551 net.cpp:131] Top shape: 64 (64)
I0428 20:09:05.449071 31551 net.cpp:139] Memory required for data: 200960
I0428 20:09:05.449079 31551 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:05.449093 31551 net.cpp:86] Creating Layer conv0
I0428 20:09:05.449098 31551 net.cpp:408] conv0 <- data
I0428 20:09:05.449112 31551 net.cpp:382] conv0 -> conv0
I0428 20:09:05.736568 31551 net.cpp:124] Setting up conv0
I0428 20:09:05.736595 31551 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:09:05.736599 31551 net.cpp:139] Memory required for data: 3887360
I0428 20:09:05.736634 31551 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:05.736649 31551 net.cpp:86] Creating Layer pool0
I0428 20:09:05.736652 31551 net.cpp:408] pool0 <- conv0
I0428 20:09:05.736659 31551 net.cpp:382] pool0 -> pool0
I0428 20:09:05.736704 31551 net.cpp:124] Setting up pool0
I0428 20:09:05.736709 31551 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:09:05.736712 31551 net.cpp:139] Memory required for data: 4808960
I0428 20:09:05.736716 31551 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:05.736727 31551 net.cpp:86] Creating Layer conv1
I0428 20:09:05.736732 31551 net.cpp:408] conv1 <- pool0
I0428 20:09:05.736737 31551 net.cpp:382] conv1 -> conv1
I0428 20:09:05.739562 31551 net.cpp:124] Setting up conv1
I0428 20:09:05.739578 31551 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:09:05.739581 31551 net.cpp:139] Memory required for data: 5218560
I0428 20:09:05.739593 31551 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:05.739599 31551 net.cpp:86] Creating Layer pool1
I0428 20:09:05.739603 31551 net.cpp:408] pool1 <- conv1
I0428 20:09:05.739609 31551 net.cpp:382] pool1 -> pool1
I0428 20:09:05.739650 31551 net.cpp:124] Setting up pool1
I0428 20:09:05.739655 31551 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:09:05.739658 31551 net.cpp:139] Memory required for data: 5320960
I0428 20:09:05.739661 31551 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:05.739668 31551 net.cpp:86] Creating Layer ip1
I0428 20:09:05.739671 31551 net.cpp:408] ip1 <- pool1
I0428 20:09:05.739677 31551 net.cpp:382] ip1 -> ip1
I0428 20:09:05.739833 31551 net.cpp:124] Setting up ip1
I0428 20:09:05.739841 31551 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:05.739845 31551 net.cpp:139] Memory required for data: 5327360
I0428 20:09:05.739852 31551 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:05.739859 31551 net.cpp:86] Creating Layer relu1
I0428 20:09:05.739862 31551 net.cpp:408] relu1 <- ip1
I0428 20:09:05.739866 31551 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:05.740054 31551 net.cpp:124] Setting up relu1
I0428 20:09:05.740063 31551 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:09:05.740067 31551 net.cpp:139] Memory required for data: 5333760
I0428 20:09:05.740069 31551 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:05.740077 31551 net.cpp:86] Creating Layer ip2
I0428 20:09:05.740080 31551 net.cpp:408] ip2 <- ip1
I0428 20:09:05.740085 31551 net.cpp:382] ip2 -> ip2
I0428 20:09:05.740188 31551 net.cpp:124] Setting up ip2
I0428 20:09:05.740196 31551 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:05.740198 31551 net.cpp:139] Memory required for data: 5336320
I0428 20:09:05.740205 31551 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:05.740211 31551 net.cpp:86] Creating Layer relu2
I0428 20:09:05.740214 31551 net.cpp:408] relu2 <- ip2
I0428 20:09:05.740218 31551 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:05.741014 31551 net.cpp:124] Setting up relu2
I0428 20:09:05.741025 31551 net.cpp:131] Top shape: 64 10 (640)
I0428 20:09:05.741029 31551 net.cpp:139] Memory required for data: 5338880
I0428 20:09:05.741032 31551 layer_factory.hpp:77] Creating layer loss
I0428 20:09:05.741039 31551 net.cpp:86] Creating Layer loss
I0428 20:09:05.741042 31551 net.cpp:408] loss <- ip2
I0428 20:09:05.741046 31551 net.cpp:408] loss <- label
I0428 20:09:05.741052 31551 net.cpp:382] loss -> loss
I0428 20:09:05.741072 31551 layer_factory.hpp:77] Creating layer loss
I0428 20:09:05.741317 31551 net.cpp:124] Setting up loss
I0428 20:09:05.741328 31551 net.cpp:131] Top shape: (1)
I0428 20:09:05.741330 31551 net.cpp:134]     with loss weight 1
I0428 20:09:05.741343 31551 net.cpp:139] Memory required for data: 5338884
I0428 20:09:05.741346 31551 net.cpp:200] loss needs backward computation.
I0428 20:09:05.741350 31551 net.cpp:200] relu2 needs backward computation.
I0428 20:09:05.741353 31551 net.cpp:200] ip2 needs backward computation.
I0428 20:09:05.741355 31551 net.cpp:200] relu1 needs backward computation.
I0428 20:09:05.741358 31551 net.cpp:200] ip1 needs backward computation.
I0428 20:09:05.741371 31551 net.cpp:200] pool1 needs backward computation.
I0428 20:09:05.741374 31551 net.cpp:200] conv1 needs backward computation.
I0428 20:09:05.741377 31551 net.cpp:200] pool0 needs backward computation.
I0428 20:09:05.741380 31551 net.cpp:200] conv0 needs backward computation.
I0428 20:09:05.741384 31551 net.cpp:202] mnist does not need backward computation.
I0428 20:09:05.741387 31551 net.cpp:244] This network produces output loss
I0428 20:09:05.741396 31551 net.cpp:257] Network initialization done.
I0428 20:09:05.741683 31551 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1100.prototxt
I0428 20:09:05.741708 31551 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:09:05.741791 31551 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:09:05.741858 31551 layer_factory.hpp:77] Creating layer mnist
I0428 20:09:05.741900 31551 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:09:05.741912 31551 net.cpp:86] Creating Layer mnist
I0428 20:09:05.741919 31551 net.cpp:382] mnist -> data
I0428 20:09:05.741926 31551 net.cpp:382] mnist -> label
I0428 20:09:05.742020 31551 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:09:05.743896 31551 net.cpp:124] Setting up mnist
I0428 20:09:05.743909 31551 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:09:05.743916 31551 net.cpp:131] Top shape: 100 (100)
I0428 20:09:05.743918 31551 net.cpp:139] Memory required for data: 314000
I0428 20:09:05.743922 31551 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:09:05.743928 31551 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:09:05.743932 31551 net.cpp:408] label_mnist_1_split <- label
I0428 20:09:05.743937 31551 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:09:05.743942 31551 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:09:05.744011 31551 net.cpp:124] Setting up label_mnist_1_split
I0428 20:09:05.744017 31551 net.cpp:131] Top shape: 100 (100)
I0428 20:09:05.744021 31551 net.cpp:131] Top shape: 100 (100)
I0428 20:09:05.744024 31551 net.cpp:139] Memory required for data: 314800
I0428 20:09:05.744026 31551 layer_factory.hpp:77] Creating layer conv0
I0428 20:09:05.744035 31551 net.cpp:86] Creating Layer conv0
I0428 20:09:05.744038 31551 net.cpp:408] conv0 <- data
I0428 20:09:05.744046 31551 net.cpp:382] conv0 -> conv0
I0428 20:09:05.745769 31551 net.cpp:124] Setting up conv0
I0428 20:09:05.745782 31551 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:09:05.745786 31551 net.cpp:139] Memory required for data: 6074800
I0428 20:09:05.745795 31551 layer_factory.hpp:77] Creating layer pool0
I0428 20:09:05.745803 31551 net.cpp:86] Creating Layer pool0
I0428 20:09:05.745806 31551 net.cpp:408] pool0 <- conv0
I0428 20:09:05.745811 31551 net.cpp:382] pool0 -> pool0
I0428 20:09:05.745848 31551 net.cpp:124] Setting up pool0
I0428 20:09:05.745854 31551 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:09:05.745857 31551 net.cpp:139] Memory required for data: 7514800
I0428 20:09:05.745859 31551 layer_factory.hpp:77] Creating layer conv1
I0428 20:09:05.745869 31551 net.cpp:86] Creating Layer conv1
I0428 20:09:05.745872 31551 net.cpp:408] conv1 <- pool0
I0428 20:09:05.745878 31551 net.cpp:382] conv1 -> conv1
I0428 20:09:05.748045 31551 net.cpp:124] Setting up conv1
I0428 20:09:05.748059 31551 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:09:05.748064 31551 net.cpp:139] Memory required for data: 8154800
I0428 20:09:05.748072 31551 layer_factory.hpp:77] Creating layer pool1
I0428 20:09:05.748080 31551 net.cpp:86] Creating Layer pool1
I0428 20:09:05.748083 31551 net.cpp:408] pool1 <- conv1
I0428 20:09:05.748087 31551 net.cpp:382] pool1 -> pool1
I0428 20:09:05.748127 31551 net.cpp:124] Setting up pool1
I0428 20:09:05.748133 31551 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:09:05.748136 31551 net.cpp:139] Memory required for data: 8314800
I0428 20:09:05.748138 31551 layer_factory.hpp:77] Creating layer ip1
I0428 20:09:05.748145 31551 net.cpp:86] Creating Layer ip1
I0428 20:09:05.748155 31551 net.cpp:408] ip1 <- pool1
I0428 20:09:05.748159 31551 net.cpp:382] ip1 -> ip1
I0428 20:09:05.748332 31551 net.cpp:124] Setting up ip1
I0428 20:09:05.748340 31551 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:05.748343 31551 net.cpp:139] Memory required for data: 8324800
I0428 20:09:05.748350 31551 layer_factory.hpp:77] Creating layer relu1
I0428 20:09:05.748356 31551 net.cpp:86] Creating Layer relu1
I0428 20:09:05.748359 31551 net.cpp:408] relu1 <- ip1
I0428 20:09:05.748364 31551 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:09:05.748620 31551 net.cpp:124] Setting up relu1
I0428 20:09:05.748628 31551 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:09:05.748632 31551 net.cpp:139] Memory required for data: 8334800
I0428 20:09:05.748641 31551 layer_factory.hpp:77] Creating layer ip2
I0428 20:09:05.748648 31551 net.cpp:86] Creating Layer ip2
I0428 20:09:05.748658 31551 net.cpp:408] ip2 <- ip1
I0428 20:09:05.748664 31551 net.cpp:382] ip2 -> ip2
I0428 20:09:05.748766 31551 net.cpp:124] Setting up ip2
I0428 20:09:05.748775 31551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:05.748777 31551 net.cpp:139] Memory required for data: 8338800
I0428 20:09:05.748783 31551 layer_factory.hpp:77] Creating layer relu2
I0428 20:09:05.748787 31551 net.cpp:86] Creating Layer relu2
I0428 20:09:05.748790 31551 net.cpp:408] relu2 <- ip2
I0428 20:09:05.748795 31551 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:09:05.748965 31551 net.cpp:124] Setting up relu2
I0428 20:09:05.748975 31551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:05.748978 31551 net.cpp:139] Memory required for data: 8342800
I0428 20:09:05.748981 31551 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:09:05.748986 31551 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:09:05.748988 31551 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:09:05.748993 31551 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:09:05.749008 31551 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:09:05.749045 31551 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:09:05.749050 31551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:05.749054 31551 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:09:05.749058 31551 net.cpp:139] Memory required for data: 8350800
I0428 20:09:05.749059 31551 layer_factory.hpp:77] Creating layer accuracy
I0428 20:09:05.749069 31551 net.cpp:86] Creating Layer accuracy
I0428 20:09:05.749073 31551 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:09:05.749076 31551 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:09:05.749080 31551 net.cpp:382] accuracy -> accuracy
I0428 20:09:05.749109 31551 net.cpp:124] Setting up accuracy
I0428 20:09:05.749112 31551 net.cpp:131] Top shape: (1)
I0428 20:09:05.749115 31551 net.cpp:139] Memory required for data: 8350804
I0428 20:09:05.749119 31551 layer_factory.hpp:77] Creating layer loss
I0428 20:09:05.749125 31551 net.cpp:86] Creating Layer loss
I0428 20:09:05.749127 31551 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:09:05.749130 31551 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:09:05.749135 31551 net.cpp:382] loss -> loss
I0428 20:09:05.749155 31551 layer_factory.hpp:77] Creating layer loss
I0428 20:09:05.749394 31551 net.cpp:124] Setting up loss
I0428 20:09:05.749403 31551 net.cpp:131] Top shape: (1)
I0428 20:09:05.749406 31551 net.cpp:134]     with loss weight 1
I0428 20:09:05.749413 31551 net.cpp:139] Memory required for data: 8350808
I0428 20:09:05.749416 31551 net.cpp:200] loss needs backward computation.
I0428 20:09:05.749419 31551 net.cpp:202] accuracy does not need backward computation.
I0428 20:09:05.749423 31551 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:09:05.749426 31551 net.cpp:200] relu2 needs backward computation.
I0428 20:09:05.749429 31551 net.cpp:200] ip2 needs backward computation.
I0428 20:09:05.749431 31551 net.cpp:200] relu1 needs backward computation.
I0428 20:09:05.749434 31551 net.cpp:200] ip1 needs backward computation.
I0428 20:09:05.749438 31551 net.cpp:200] pool1 needs backward computation.
I0428 20:09:05.749440 31551 net.cpp:200] conv1 needs backward computation.
I0428 20:09:05.749450 31551 net.cpp:200] pool0 needs backward computation.
I0428 20:09:05.749454 31551 net.cpp:200] conv0 needs backward computation.
I0428 20:09:05.749456 31551 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:09:05.749466 31551 net.cpp:202] mnist does not need backward computation.
I0428 20:09:05.749469 31551 net.cpp:244] This network produces output accuracy
I0428 20:09:05.749472 31551 net.cpp:244] This network produces output loss
I0428 20:09:05.749482 31551 net.cpp:257] Network initialization done.
I0428 20:09:05.749518 31551 solver.cpp:56] Solver scaffolding done.
I0428 20:09:05.749785 31551 caffe.cpp:248] Starting Optimization
I0428 20:09:05.749791 31551 solver.cpp:273] Solving LeNet
I0428 20:09:05.749794 31551 solver.cpp:274] Learning Rate Policy: inv
I0428 20:09:05.750651 31551 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:09:05.756228 31551 blocking_queue.cpp:49] Waiting for data
I0428 20:09:05.825624 31558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:05.826220 31551 solver.cpp:398]     Test net output #0: accuracy = 0.1338
I0428 20:09:05.826241 31551 solver.cpp:398]     Test net output #1: loss = 2.29847 (* 1 = 2.29847 loss)
I0428 20:09:05.829855 31551 solver.cpp:219] Iteration 0 (-2.05828e-38 iter/s, 0.0800328s/100 iters), loss = 2.26072
I0428 20:09:05.829877 31551 solver.cpp:238]     Train net output #0: loss = 2.26072 (* 1 = 2.26072 loss)
I0428 20:09:05.829905 31551 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:09:05.939800 31551 solver.cpp:219] Iteration 100 (909.903 iter/s, 0.109902s/100 iters), loss = 0.624773
I0428 20:09:05.939849 31551 solver.cpp:238]     Train net output #0: loss = 0.624773 (* 1 = 0.624773 loss)
I0428 20:09:05.939860 31551 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:09:06.042814 31551 solver.cpp:219] Iteration 200 (971.279 iter/s, 0.102957s/100 iters), loss = 0.552596
I0428 20:09:06.042847 31551 solver.cpp:238]     Train net output #0: loss = 0.552596 (* 1 = 0.552596 loss)
I0428 20:09:06.042855 31551 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:09:06.142549 31551 solver.cpp:219] Iteration 300 (1003.09 iter/s, 0.0996915s/100 iters), loss = 0.194999
I0428 20:09:06.142582 31551 solver.cpp:238]     Train net output #0: loss = 0.194999 (* 1 = 0.194999 loss)
I0428 20:09:06.142590 31551 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:09:06.239341 31551 solver.cpp:219] Iteration 400 (1033.61 iter/s, 0.0967485s/100 iters), loss = 0.265403
I0428 20:09:06.239370 31551 solver.cpp:238]     Train net output #0: loss = 0.265403 (* 1 = 0.265403 loss)
I0428 20:09:06.239377 31551 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:09:06.334233 31551 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:09:06.409605 31558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:06.410218 31551 solver.cpp:398]     Test net output #0: accuracy = 0.8805
I0428 20:09:06.410244 31551 solver.cpp:398]     Test net output #1: loss = 0.327838 (* 1 = 0.327838 loss)
I0428 20:09:06.411257 31551 solver.cpp:219] Iteration 500 (581.824 iter/s, 0.171873s/100 iters), loss = 0.421382
I0428 20:09:06.411286 31551 solver.cpp:238]     Train net output #0: loss = 0.421382 (* 1 = 0.421382 loss)
I0428 20:09:06.411294 31551 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:09:06.517992 31551 solver.cpp:219] Iteration 600 (937.29 iter/s, 0.106691s/100 iters), loss = 0.25608
I0428 20:09:06.518033 31551 solver.cpp:238]     Train net output #0: loss = 0.25608 (* 1 = 0.25608 loss)
I0428 20:09:06.518043 31551 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:09:06.618930 31551 solver.cpp:219] Iteration 700 (991.203 iter/s, 0.100888s/100 iters), loss = 0.609942
I0428 20:09:06.618959 31551 solver.cpp:238]     Train net output #0: loss = 0.609942 (* 1 = 0.609942 loss)
I0428 20:09:06.618968 31551 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:09:06.715641 31551 solver.cpp:219] Iteration 800 (1034.41 iter/s, 0.0966736s/100 iters), loss = 0.478674
I0428 20:09:06.715677 31551 solver.cpp:238]     Train net output #0: loss = 0.478674 (* 1 = 0.478674 loss)
I0428 20:09:06.715682 31551 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:09:06.808516 31551 solver.cpp:219] Iteration 900 (1077.12 iter/s, 0.0928399s/100 iters), loss = 0.267476
I0428 20:09:06.808542 31551 solver.cpp:238]     Train net output #0: loss = 0.267476 (* 1 = 0.267476 loss)
I0428 20:09:06.808548 31551 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:09:06.839787 31557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:06.900905 31551 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:09:06.902036 31551 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:09:06.902796 31551 solver.cpp:311] Iteration 1000, loss = 0.379487
I0428 20:09:06.902811 31551 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:09:06.978431 31558 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:09:06.979024 31551 solver.cpp:398]     Test net output #0: accuracy = 0.8896
I0428 20:09:06.979043 31551 solver.cpp:398]     Test net output #1: loss = 0.284105 (* 1 = 0.284105 loss)
I0428 20:09:06.979049 31551 solver.cpp:316] Optimization Done.
I0428 20:09:06.979053 31551 caffe.cpp:259] Optimization Done.
