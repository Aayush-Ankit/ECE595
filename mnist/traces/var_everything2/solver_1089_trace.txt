I0428 20:08:39.526500 31432 caffe.cpp:218] Using GPUs 0
I0428 20:08:39.567306 31432 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:40.079704 31432 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1089.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:40.079867 31432 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1089.prototxt
I0428 20:08:40.080271 31432 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:40.080296 31432 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:40.080404 31432 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:40.080509 31432 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:40.080638 31432 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:40.080670 31432 net.cpp:86] Creating Layer mnist
I0428 20:08:40.080682 31432 net.cpp:382] mnist -> data
I0428 20:08:40.080713 31432 net.cpp:382] mnist -> label
I0428 20:08:40.081961 31432 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:40.084364 31432 net.cpp:124] Setting up mnist
I0428 20:08:40.084383 31432 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:40.084394 31432 net.cpp:131] Top shape: 64 (64)
I0428 20:08:40.084401 31432 net.cpp:139] Memory required for data: 200960
I0428 20:08:40.084411 31432 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:40.084434 31432 net.cpp:86] Creating Layer conv0
I0428 20:08:40.084458 31432 net.cpp:408] conv0 <- data
I0428 20:08:40.084477 31432 net.cpp:382] conv0 -> conv0
I0428 20:08:40.368150 31432 net.cpp:124] Setting up conv0
I0428 20:08:40.368180 31432 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:40.368185 31432 net.cpp:139] Memory required for data: 3887360
I0428 20:08:40.368204 31432 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:40.368221 31432 net.cpp:86] Creating Layer pool0
I0428 20:08:40.368227 31432 net.cpp:408] pool0 <- conv0
I0428 20:08:40.368237 31432 net.cpp:382] pool0 -> pool0
I0428 20:08:40.368294 31432 net.cpp:124] Setting up pool0
I0428 20:08:40.368304 31432 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:40.368309 31432 net.cpp:139] Memory required for data: 4808960
I0428 20:08:40.368314 31432 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:40.368330 31432 net.cpp:86] Creating Layer conv1
I0428 20:08:40.368336 31432 net.cpp:408] conv1 <- pool0
I0428 20:08:40.368345 31432 net.cpp:382] conv1 -> conv1
I0428 20:08:40.371409 31432 net.cpp:124] Setting up conv1
I0428 20:08:40.371429 31432 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:40.371436 31432 net.cpp:139] Memory required for data: 4972800
I0428 20:08:40.371453 31432 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:40.371469 31432 net.cpp:86] Creating Layer pool1
I0428 20:08:40.371475 31432 net.cpp:408] pool1 <- conv1
I0428 20:08:40.371484 31432 net.cpp:382] pool1 -> pool1
I0428 20:08:40.371541 31432 net.cpp:124] Setting up pool1
I0428 20:08:40.371551 31432 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:40.371557 31432 net.cpp:139] Memory required for data: 5013760
I0428 20:08:40.371563 31432 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:40.371575 31432 net.cpp:86] Creating Layer ip1
I0428 20:08:40.371582 31432 net.cpp:408] ip1 <- pool1
I0428 20:08:40.371593 31432 net.cpp:382] ip1 -> ip1
I0428 20:08:40.371770 31432 net.cpp:124] Setting up ip1
I0428 20:08:40.371781 31432 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:40.371786 31432 net.cpp:139] Memory required for data: 5026560
I0428 20:08:40.371800 31432 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:40.371810 31432 net.cpp:86] Creating Layer relu1
I0428 20:08:40.371821 31432 net.cpp:408] relu1 <- ip1
I0428 20:08:40.371832 31432 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:40.372043 31432 net.cpp:124] Setting up relu1
I0428 20:08:40.372056 31432 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:40.372061 31432 net.cpp:139] Memory required for data: 5039360
I0428 20:08:40.372067 31432 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:40.372084 31432 net.cpp:86] Creating Layer ip2
I0428 20:08:40.372090 31432 net.cpp:408] ip2 <- ip1
I0428 20:08:40.372100 31432 net.cpp:382] ip2 -> ip2
I0428 20:08:40.373206 31432 net.cpp:124] Setting up ip2
I0428 20:08:40.373224 31432 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:40.373229 31432 net.cpp:139] Memory required for data: 5052160
I0428 20:08:40.373240 31432 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:40.373252 31432 net.cpp:86] Creating Layer relu2
I0428 20:08:40.373260 31432 net.cpp:408] relu2 <- ip2
I0428 20:08:40.373271 31432 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:40.374028 31432 net.cpp:124] Setting up relu2
I0428 20:08:40.374042 31432 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:40.374048 31432 net.cpp:139] Memory required for data: 5064960
I0428 20:08:40.374053 31432 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:40.374065 31432 net.cpp:86] Creating Layer ip3
I0428 20:08:40.374070 31432 net.cpp:408] ip3 <- ip2
I0428 20:08:40.374079 31432 net.cpp:382] ip3 -> ip3
I0428 20:08:40.374194 31432 net.cpp:124] Setting up ip3
I0428 20:08:40.374207 31432 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:40.374212 31432 net.cpp:139] Memory required for data: 5067520
I0428 20:08:40.374224 31432 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:40.374234 31432 net.cpp:86] Creating Layer relu3
I0428 20:08:40.374243 31432 net.cpp:408] relu3 <- ip3
I0428 20:08:40.374249 31432 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:40.374428 31432 net.cpp:124] Setting up relu3
I0428 20:08:40.374438 31432 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:40.374442 31432 net.cpp:139] Memory required for data: 5070080
I0428 20:08:40.374447 31432 layer_factory.hpp:77] Creating layer loss
I0428 20:08:40.374459 31432 net.cpp:86] Creating Layer loss
I0428 20:08:40.374464 31432 net.cpp:408] loss <- ip3
I0428 20:08:40.374470 31432 net.cpp:408] loss <- label
I0428 20:08:40.374480 31432 net.cpp:382] loss -> loss
I0428 20:08:40.374502 31432 layer_factory.hpp:77] Creating layer loss
I0428 20:08:40.374778 31432 net.cpp:124] Setting up loss
I0428 20:08:40.374789 31432 net.cpp:131] Top shape: (1)
I0428 20:08:40.374795 31432 net.cpp:134]     with loss weight 1
I0428 20:08:40.374815 31432 net.cpp:139] Memory required for data: 5070084
I0428 20:08:40.374821 31432 net.cpp:200] loss needs backward computation.
I0428 20:08:40.374827 31432 net.cpp:200] relu3 needs backward computation.
I0428 20:08:40.374832 31432 net.cpp:200] ip3 needs backward computation.
I0428 20:08:40.374837 31432 net.cpp:200] relu2 needs backward computation.
I0428 20:08:40.374842 31432 net.cpp:200] ip2 needs backward computation.
I0428 20:08:40.374847 31432 net.cpp:200] relu1 needs backward computation.
I0428 20:08:40.374852 31432 net.cpp:200] ip1 needs backward computation.
I0428 20:08:40.374867 31432 net.cpp:200] pool1 needs backward computation.
I0428 20:08:40.374872 31432 net.cpp:200] conv1 needs backward computation.
I0428 20:08:40.374877 31432 net.cpp:200] pool0 needs backward computation.
I0428 20:08:40.374882 31432 net.cpp:200] conv0 needs backward computation.
I0428 20:08:40.374888 31432 net.cpp:202] mnist does not need backward computation.
I0428 20:08:40.374892 31432 net.cpp:244] This network produces output loss
I0428 20:08:40.374908 31432 net.cpp:257] Network initialization done.
I0428 20:08:40.375234 31432 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1089.prototxt
I0428 20:08:40.375269 31432 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:40.375373 31432 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:40.375494 31432 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:40.375550 31432 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:40.375568 31432 net.cpp:86] Creating Layer mnist
I0428 20:08:40.375577 31432 net.cpp:382] mnist -> data
I0428 20:08:40.375588 31432 net.cpp:382] mnist -> label
I0428 20:08:40.375715 31432 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:40.377825 31432 net.cpp:124] Setting up mnist
I0428 20:08:40.377840 31432 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:40.377847 31432 net.cpp:131] Top shape: 100 (100)
I0428 20:08:40.377852 31432 net.cpp:139] Memory required for data: 314000
I0428 20:08:40.377858 31432 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:40.377892 31432 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:40.377897 31432 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:40.377908 31432 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:40.377920 31432 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:40.378020 31432 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:40.378031 31432 net.cpp:131] Top shape: 100 (100)
I0428 20:08:40.378037 31432 net.cpp:131] Top shape: 100 (100)
I0428 20:08:40.378042 31432 net.cpp:139] Memory required for data: 314800
I0428 20:08:40.378047 31432 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:40.378062 31432 net.cpp:86] Creating Layer conv0
I0428 20:08:40.378068 31432 net.cpp:408] conv0 <- data
I0428 20:08:40.378078 31432 net.cpp:382] conv0 -> conv0
I0428 20:08:40.379726 31432 net.cpp:124] Setting up conv0
I0428 20:08:40.379742 31432 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:40.379748 31432 net.cpp:139] Memory required for data: 6074800
I0428 20:08:40.379762 31432 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:40.379775 31432 net.cpp:86] Creating Layer pool0
I0428 20:08:40.379781 31432 net.cpp:408] pool0 <- conv0
I0428 20:08:40.379789 31432 net.cpp:382] pool0 -> pool0
I0428 20:08:40.379845 31432 net.cpp:124] Setting up pool0
I0428 20:08:40.379854 31432 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:40.379859 31432 net.cpp:139] Memory required for data: 7514800
I0428 20:08:40.379864 31432 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:40.379879 31432 net.cpp:86] Creating Layer conv1
I0428 20:08:40.379885 31432 net.cpp:408] conv1 <- pool0
I0428 20:08:40.379896 31432 net.cpp:382] conv1 -> conv1
I0428 20:08:40.381947 31432 net.cpp:124] Setting up conv1
I0428 20:08:40.381963 31432 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:40.381969 31432 net.cpp:139] Memory required for data: 7770800
I0428 20:08:40.381984 31432 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:40.381994 31432 net.cpp:86] Creating Layer pool1
I0428 20:08:40.381999 31432 net.cpp:408] pool1 <- conv1
I0428 20:08:40.382007 31432 net.cpp:382] pool1 -> pool1
I0428 20:08:40.382064 31432 net.cpp:124] Setting up pool1
I0428 20:08:40.382073 31432 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:40.382079 31432 net.cpp:139] Memory required for data: 7834800
I0428 20:08:40.382084 31432 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:40.382094 31432 net.cpp:86] Creating Layer ip1
I0428 20:08:40.382099 31432 net.cpp:408] ip1 <- pool1
I0428 20:08:40.382114 31432 net.cpp:382] ip1 -> ip1
I0428 20:08:40.382310 31432 net.cpp:124] Setting up ip1
I0428 20:08:40.382320 31432 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:40.382339 31432 net.cpp:139] Memory required for data: 7854800
I0428 20:08:40.382351 31432 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:40.382362 31432 net.cpp:86] Creating Layer relu1
I0428 20:08:40.382374 31432 net.cpp:408] relu1 <- ip1
I0428 20:08:40.382381 31432 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:40.382566 31432 net.cpp:124] Setting up relu1
I0428 20:08:40.382577 31432 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:40.382582 31432 net.cpp:139] Memory required for data: 7874800
I0428 20:08:40.382588 31432 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:40.382616 31432 net.cpp:86] Creating Layer ip2
I0428 20:08:40.382623 31432 net.cpp:408] ip2 <- ip1
I0428 20:08:40.382634 31432 net.cpp:382] ip2 -> ip2
I0428 20:08:40.382771 31432 net.cpp:124] Setting up ip2
I0428 20:08:40.382781 31432 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:40.382786 31432 net.cpp:139] Memory required for data: 7894800
I0428 20:08:40.382808 31432 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:40.382817 31432 net.cpp:86] Creating Layer relu2
I0428 20:08:40.382824 31432 net.cpp:408] relu2 <- ip2
I0428 20:08:40.382832 31432 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:40.383002 31432 net.cpp:124] Setting up relu2
I0428 20:08:40.383013 31432 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:40.383018 31432 net.cpp:139] Memory required for data: 7914800
I0428 20:08:40.383023 31432 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:40.383033 31432 net.cpp:86] Creating Layer ip3
I0428 20:08:40.383038 31432 net.cpp:408] ip3 <- ip2
I0428 20:08:40.383049 31432 net.cpp:382] ip3 -> ip3
I0428 20:08:40.383218 31432 net.cpp:124] Setting up ip3
I0428 20:08:40.383227 31432 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:40.383232 31432 net.cpp:139] Memory required for data: 7918800
I0428 20:08:40.383245 31432 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:40.383255 31432 net.cpp:86] Creating Layer relu3
I0428 20:08:40.383265 31432 net.cpp:408] relu3 <- ip3
I0428 20:08:40.383271 31432 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:40.384176 31432 net.cpp:124] Setting up relu3
I0428 20:08:40.384189 31432 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:40.384196 31432 net.cpp:139] Memory required for data: 7922800
I0428 20:08:40.384201 31432 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:40.384208 31432 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:40.384214 31432 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:40.384224 31432 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:40.384235 31432 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:40.384282 31432 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:40.384294 31432 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:40.384299 31432 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:40.384305 31432 net.cpp:139] Memory required for data: 7930800
I0428 20:08:40.384310 31432 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:40.384318 31432 net.cpp:86] Creating Layer accuracy
I0428 20:08:40.384325 31432 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:40.384335 31432 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:40.384342 31432 net.cpp:382] accuracy -> accuracy
I0428 20:08:40.384354 31432 net.cpp:124] Setting up accuracy
I0428 20:08:40.384361 31432 net.cpp:131] Top shape: (1)
I0428 20:08:40.384366 31432 net.cpp:139] Memory required for data: 7930804
I0428 20:08:40.384372 31432 layer_factory.hpp:77] Creating layer loss
I0428 20:08:40.384382 31432 net.cpp:86] Creating Layer loss
I0428 20:08:40.384387 31432 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:40.384393 31432 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:40.384402 31432 net.cpp:382] loss -> loss
I0428 20:08:40.384412 31432 layer_factory.hpp:77] Creating layer loss
I0428 20:08:40.384657 31432 net.cpp:124] Setting up loss
I0428 20:08:40.384668 31432 net.cpp:131] Top shape: (1)
I0428 20:08:40.384673 31432 net.cpp:134]     with loss weight 1
I0428 20:08:40.384692 31432 net.cpp:139] Memory required for data: 7930808
I0428 20:08:40.384699 31432 net.cpp:200] loss needs backward computation.
I0428 20:08:40.384704 31432 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:40.384711 31432 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:40.384717 31432 net.cpp:200] relu3 needs backward computation.
I0428 20:08:40.384721 31432 net.cpp:200] ip3 needs backward computation.
I0428 20:08:40.384727 31432 net.cpp:200] relu2 needs backward computation.
I0428 20:08:40.384732 31432 net.cpp:200] ip2 needs backward computation.
I0428 20:08:40.384737 31432 net.cpp:200] relu1 needs backward computation.
I0428 20:08:40.384742 31432 net.cpp:200] ip1 needs backward computation.
I0428 20:08:40.384747 31432 net.cpp:200] pool1 needs backward computation.
I0428 20:08:40.384752 31432 net.cpp:200] conv1 needs backward computation.
I0428 20:08:40.384757 31432 net.cpp:200] pool0 needs backward computation.
I0428 20:08:40.384762 31432 net.cpp:200] conv0 needs backward computation.
I0428 20:08:40.384768 31432 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:40.384775 31432 net.cpp:202] mnist does not need backward computation.
I0428 20:08:40.384780 31432 net.cpp:244] This network produces output accuracy
I0428 20:08:40.384786 31432 net.cpp:244] This network produces output loss
I0428 20:08:40.384804 31432 net.cpp:257] Network initialization done.
I0428 20:08:40.384874 31432 solver.cpp:56] Solver scaffolding done.
I0428 20:08:40.385332 31432 caffe.cpp:248] Starting Optimization
I0428 20:08:40.385340 31432 solver.cpp:273] Solving LeNet
I0428 20:08:40.385344 31432 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:40.386085 31432 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:40.390360 31432 blocking_queue.cpp:49] Waiting for data
I0428 20:08:40.461925 31439 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:40.462498 31432 solver.cpp:398]     Test net output #0: accuracy = 0.0935
I0428 20:08:40.462518 31432 solver.cpp:398]     Test net output #1: loss = 2.30524 (* 1 = 2.30524 loss)
I0428 20:08:40.466106 31432 solver.cpp:219] Iteration 0 (0 iter/s, 0.080727s/100 iters), loss = 2.28759
I0428 20:08:40.466132 31432 solver.cpp:238]     Train net output #0: loss = 2.28759 (* 1 = 2.28759 loss)
I0428 20:08:40.466150 31432 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:40.558995 31432 solver.cpp:219] Iteration 100 (1077.02 iter/s, 0.0928492s/100 iters), loss = 0.547148
I0428 20:08:40.559025 31432 solver.cpp:238]     Train net output #0: loss = 0.547148 (* 1 = 0.547148 loss)
I0428 20:08:40.559049 31432 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:40.655596 31432 solver.cpp:219] Iteration 200 (1035.59 iter/s, 0.0965632s/100 iters), loss = 0.379175
I0428 20:08:40.655623 31432 solver.cpp:238]     Train net output #0: loss = 0.379175 (* 1 = 0.379175 loss)
I0428 20:08:40.655648 31432 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:40.748860 31432 solver.cpp:219] Iteration 300 (1072.63 iter/s, 0.0932291s/100 iters), loss = 0.386097
I0428 20:08:40.748888 31432 solver.cpp:238]     Train net output #0: loss = 0.386097 (* 1 = 0.386097 loss)
I0428 20:08:40.748896 31432 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:40.856776 31432 solver.cpp:219] Iteration 400 (926.952 iter/s, 0.10788s/100 iters), loss = 0.32042
I0428 20:08:40.856804 31432 solver.cpp:238]     Train net output #0: loss = 0.32042 (* 1 = 0.32042 loss)
I0428 20:08:40.856820 31432 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:40.950549 31432 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:41.004456 31439 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:41.005038 31432 solver.cpp:398]     Test net output #0: accuracy = 0.9365
I0428 20:08:41.005058 31432 solver.cpp:398]     Test net output #1: loss = 0.203567 (* 1 = 0.203567 loss)
I0428 20:08:41.006063 31432 solver.cpp:219] Iteration 500 (670.017 iter/s, 0.14925s/100 iters), loss = 0.243681
I0428 20:08:41.006103 31432 solver.cpp:238]     Train net output #0: loss = 0.243681 (* 1 = 0.243681 loss)
I0428 20:08:41.006115 31432 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:41.107942 31432 solver.cpp:219] Iteration 600 (982.011 iter/s, 0.101832s/100 iters), loss = 0.116543
I0428 20:08:41.107971 31432 solver.cpp:238]     Train net output #0: loss = 0.116543 (* 1 = 0.116543 loss)
I0428 20:08:41.107997 31432 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:41.199388 31432 solver.cpp:219] Iteration 700 (1093.97 iter/s, 0.0914104s/100 iters), loss = 0.156745
I0428 20:08:41.199415 31432 solver.cpp:238]     Train net output #0: loss = 0.156745 (* 1 = 0.156745 loss)
I0428 20:08:41.199441 31432 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:41.290526 31432 solver.cpp:219] Iteration 800 (1097.66 iter/s, 0.0911032s/100 iters), loss = 0.202267
I0428 20:08:41.290555 31432 solver.cpp:238]     Train net output #0: loss = 0.202267 (* 1 = 0.202267 loss)
I0428 20:08:41.290565 31432 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:41.380889 31432 solver.cpp:219] Iteration 900 (1107.09 iter/s, 0.0903272s/100 iters), loss = 0.174756
I0428 20:08:41.380918 31432 solver.cpp:238]     Train net output #0: loss = 0.174756 (* 1 = 0.174756 loss)
I0428 20:08:41.380928 31432 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:41.410862 31438 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:41.469648 31432 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:41.470715 31432 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:41.471357 31432 solver.cpp:311] Iteration 1000, loss = 0.0837202
I0428 20:08:41.471374 31432 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:41.531486 31439 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:41.532099 31432 solver.cpp:398]     Test net output #0: accuracy = 0.9739
I0428 20:08:41.532120 31432 solver.cpp:398]     Test net output #1: loss = 0.0825903 (* 1 = 0.0825903 loss)
I0428 20:08:41.532130 31432 solver.cpp:316] Optimization Done.
I0428 20:08:41.532135 31432 caffe.cpp:259] Optimization Done.
