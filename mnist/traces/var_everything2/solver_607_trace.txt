I0428 19:50:31.389292 27034 caffe.cpp:218] Using GPUs 0
I0428 19:50:31.426478 27034 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:31.937067 27034 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test607.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:31.937214 27034 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test607.prototxt
I0428 19:50:31.937630 27034 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:31.937650 27034 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:31.937757 27034 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:31.937839 27034 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:31.937940 27034 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:31.937964 27034 net.cpp:86] Creating Layer mnist
I0428 19:50:31.937971 27034 net.cpp:382] mnist -> data
I0428 19:50:31.937994 27034 net.cpp:382] mnist -> label
I0428 19:50:31.939092 27034 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:31.941579 27034 net.cpp:124] Setting up mnist
I0428 19:50:31.941598 27034 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:31.941604 27034 net.cpp:131] Top shape: 64 (64)
I0428 19:50:31.941608 27034 net.cpp:139] Memory required for data: 200960
I0428 19:50:31.941615 27034 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:31.941645 27034 net.cpp:86] Creating Layer conv0
I0428 19:50:31.941668 27034 net.cpp:408] conv0 <- data
I0428 19:50:31.941681 27034 net.cpp:382] conv0 -> conv0
I0428 19:50:32.194056 27034 net.cpp:124] Setting up conv0
I0428 19:50:32.194098 27034 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:32.194103 27034 net.cpp:139] Memory required for data: 938240
I0428 19:50:32.194133 27034 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:32.194146 27034 net.cpp:86] Creating Layer pool0
I0428 19:50:32.194150 27034 net.cpp:408] pool0 <- conv0
I0428 19:50:32.194171 27034 net.cpp:382] pool0 -> pool0
I0428 19:50:32.194216 27034 net.cpp:124] Setting up pool0
I0428 19:50:32.194234 27034 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:32.194237 27034 net.cpp:139] Memory required for data: 1122560
I0428 19:50:32.194241 27034 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:32.194250 27034 net.cpp:86] Creating Layer conv1
I0428 19:50:32.194253 27034 net.cpp:408] conv1 <- pool0
I0428 19:50:32.194258 27034 net.cpp:382] conv1 -> conv1
I0428 19:50:32.197043 27034 net.cpp:124] Setting up conv1
I0428 19:50:32.197073 27034 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:32.197077 27034 net.cpp:139] Memory required for data: 1286400
I0428 19:50:32.197087 27034 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:32.197110 27034 net.cpp:86] Creating Layer pool1
I0428 19:50:32.197114 27034 net.cpp:408] pool1 <- conv1
I0428 19:50:32.197119 27034 net.cpp:382] pool1 -> pool1
I0428 19:50:32.197172 27034 net.cpp:124] Setting up pool1
I0428 19:50:32.197177 27034 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:32.197180 27034 net.cpp:139] Memory required for data: 1327360
I0428 19:50:32.197182 27034 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:32.197190 27034 net.cpp:86] Creating Layer ip1
I0428 19:50:32.197193 27034 net.cpp:408] ip1 <- pool1
I0428 19:50:32.197197 27034 net.cpp:382] ip1 -> ip1
I0428 19:50:32.197332 27034 net.cpp:124] Setting up ip1
I0428 19:50:32.197340 27034 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:32.197343 27034 net.cpp:139] Memory required for data: 1333760
I0428 19:50:32.197350 27034 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:32.197357 27034 net.cpp:86] Creating Layer relu1
I0428 19:50:32.197360 27034 net.cpp:408] relu1 <- ip1
I0428 19:50:32.197365 27034 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:32.197541 27034 net.cpp:124] Setting up relu1
I0428 19:50:32.197549 27034 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:32.197553 27034 net.cpp:139] Memory required for data: 1340160
I0428 19:50:32.197556 27034 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:32.197561 27034 net.cpp:86] Creating Layer ip2
I0428 19:50:32.197566 27034 net.cpp:408] ip2 <- ip1
I0428 19:50:32.197569 27034 net.cpp:382] ip2 -> ip2
I0428 19:50:32.197674 27034 net.cpp:124] Setting up ip2
I0428 19:50:32.197680 27034 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:32.197684 27034 net.cpp:139] Memory required for data: 1342720
I0428 19:50:32.197688 27034 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:32.197693 27034 net.cpp:86] Creating Layer relu2
I0428 19:50:32.197696 27034 net.cpp:408] relu2 <- ip2
I0428 19:50:32.197700 27034 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:32.198487 27034 net.cpp:124] Setting up relu2
I0428 19:50:32.198498 27034 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:32.198503 27034 net.cpp:139] Memory required for data: 1345280
I0428 19:50:32.198505 27034 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:32.198511 27034 net.cpp:86] Creating Layer ip3
I0428 19:50:32.198514 27034 net.cpp:408] ip3 <- ip2
I0428 19:50:32.198520 27034 net.cpp:382] ip3 -> ip3
I0428 19:50:32.198613 27034 net.cpp:124] Setting up ip3
I0428 19:50:32.198621 27034 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:32.198623 27034 net.cpp:139] Memory required for data: 1347840
I0428 19:50:32.198631 27034 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:32.198635 27034 net.cpp:86] Creating Layer relu3
I0428 19:50:32.198638 27034 net.cpp:408] relu3 <- ip3
I0428 19:50:32.198642 27034 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:32.198796 27034 net.cpp:124] Setting up relu3
I0428 19:50:32.198804 27034 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:32.198808 27034 net.cpp:139] Memory required for data: 1350400
I0428 19:50:32.198810 27034 layer_factory.hpp:77] Creating layer loss
I0428 19:50:32.198817 27034 net.cpp:86] Creating Layer loss
I0428 19:50:32.198819 27034 net.cpp:408] loss <- ip3
I0428 19:50:32.198823 27034 net.cpp:408] loss <- label
I0428 19:50:32.198828 27034 net.cpp:382] loss -> loss
I0428 19:50:32.198846 27034 layer_factory.hpp:77] Creating layer loss
I0428 19:50:32.199059 27034 net.cpp:124] Setting up loss
I0428 19:50:32.199066 27034 net.cpp:131] Top shape: (1)
I0428 19:50:32.199070 27034 net.cpp:134]     with loss weight 1
I0428 19:50:32.199084 27034 net.cpp:139] Memory required for data: 1350404
I0428 19:50:32.199087 27034 net.cpp:200] loss needs backward computation.
I0428 19:50:32.199090 27034 net.cpp:200] relu3 needs backward computation.
I0428 19:50:32.199093 27034 net.cpp:200] ip3 needs backward computation.
I0428 19:50:32.199096 27034 net.cpp:200] relu2 needs backward computation.
I0428 19:50:32.199098 27034 net.cpp:200] ip2 needs backward computation.
I0428 19:50:32.199101 27034 net.cpp:200] relu1 needs backward computation.
I0428 19:50:32.199105 27034 net.cpp:200] ip1 needs backward computation.
I0428 19:50:32.199107 27034 net.cpp:200] pool1 needs backward computation.
I0428 19:50:32.199110 27034 net.cpp:200] conv1 needs backward computation.
I0428 19:50:32.199113 27034 net.cpp:200] pool0 needs backward computation.
I0428 19:50:32.199115 27034 net.cpp:200] conv0 needs backward computation.
I0428 19:50:32.199120 27034 net.cpp:202] mnist does not need backward computation.
I0428 19:50:32.199121 27034 net.cpp:244] This network produces output loss
I0428 19:50:32.199131 27034 net.cpp:257] Network initialization done.
I0428 19:50:32.199473 27034 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test607.prototxt
I0428 19:50:32.199514 27034 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:32.199617 27034 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:32.199692 27034 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:32.199738 27034 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:32.199749 27034 net.cpp:86] Creating Layer mnist
I0428 19:50:32.199753 27034 net.cpp:382] mnist -> data
I0428 19:50:32.199760 27034 net.cpp:382] mnist -> label
I0428 19:50:32.199839 27034 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:32.202108 27034 net.cpp:124] Setting up mnist
I0428 19:50:32.202136 27034 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:32.202142 27034 net.cpp:131] Top shape: 100 (100)
I0428 19:50:32.202145 27034 net.cpp:139] Memory required for data: 314000
I0428 19:50:32.202148 27034 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:32.202155 27034 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:32.202158 27034 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:32.202163 27034 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:32.202169 27034 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:32.202204 27034 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:32.202209 27034 net.cpp:131] Top shape: 100 (100)
I0428 19:50:32.202213 27034 net.cpp:131] Top shape: 100 (100)
I0428 19:50:32.202215 27034 net.cpp:139] Memory required for data: 314800
I0428 19:50:32.202219 27034 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:32.202225 27034 net.cpp:86] Creating Layer conv0
I0428 19:50:32.202229 27034 net.cpp:408] conv0 <- data
I0428 19:50:32.202234 27034 net.cpp:382] conv0 -> conv0
I0428 19:50:32.204004 27034 net.cpp:124] Setting up conv0
I0428 19:50:32.204017 27034 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:32.204021 27034 net.cpp:139] Memory required for data: 1466800
I0428 19:50:32.204030 27034 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:32.204036 27034 net.cpp:86] Creating Layer pool0
I0428 19:50:32.204040 27034 net.cpp:408] pool0 <- conv0
I0428 19:50:32.204043 27034 net.cpp:382] pool0 -> pool0
I0428 19:50:32.204077 27034 net.cpp:124] Setting up pool0
I0428 19:50:32.204083 27034 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:32.204085 27034 net.cpp:139] Memory required for data: 1754800
I0428 19:50:32.204088 27034 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:32.204097 27034 net.cpp:86] Creating Layer conv1
I0428 19:50:32.204099 27034 net.cpp:408] conv1 <- pool0
I0428 19:50:32.204103 27034 net.cpp:382] conv1 -> conv1
I0428 19:50:32.206307 27034 net.cpp:124] Setting up conv1
I0428 19:50:32.206322 27034 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:32.206327 27034 net.cpp:139] Memory required for data: 2010800
I0428 19:50:32.206351 27034 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:32.206357 27034 net.cpp:86] Creating Layer pool1
I0428 19:50:32.206360 27034 net.cpp:408] pool1 <- conv1
I0428 19:50:32.206365 27034 net.cpp:382] pool1 -> pool1
I0428 19:50:32.206403 27034 net.cpp:124] Setting up pool1
I0428 19:50:32.206410 27034 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:32.206413 27034 net.cpp:139] Memory required for data: 2074800
I0428 19:50:32.206418 27034 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:32.206423 27034 net.cpp:86] Creating Layer ip1
I0428 19:50:32.206425 27034 net.cpp:408] ip1 <- pool1
I0428 19:50:32.206430 27034 net.cpp:382] ip1 -> ip1
I0428 19:50:32.206590 27034 net.cpp:124] Setting up ip1
I0428 19:50:32.206599 27034 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:32.206612 27034 net.cpp:139] Memory required for data: 2084800
I0428 19:50:32.206619 27034 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:32.206626 27034 net.cpp:86] Creating Layer relu1
I0428 19:50:32.206629 27034 net.cpp:408] relu1 <- ip1
I0428 19:50:32.206634 27034 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:32.206838 27034 net.cpp:124] Setting up relu1
I0428 19:50:32.206848 27034 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:32.206851 27034 net.cpp:139] Memory required for data: 2094800
I0428 19:50:32.206854 27034 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:32.206863 27034 net.cpp:86] Creating Layer ip2
I0428 19:50:32.206866 27034 net.cpp:408] ip2 <- ip1
I0428 19:50:32.206873 27034 net.cpp:382] ip2 -> ip2
I0428 19:50:32.206993 27034 net.cpp:124] Setting up ip2
I0428 19:50:32.207000 27034 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:32.207003 27034 net.cpp:139] Memory required for data: 2098800
I0428 19:50:32.207008 27034 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:32.207013 27034 net.cpp:86] Creating Layer relu2
I0428 19:50:32.207016 27034 net.cpp:408] relu2 <- ip2
I0428 19:50:32.207020 27034 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:32.207197 27034 net.cpp:124] Setting up relu2
I0428 19:50:32.207206 27034 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:32.207211 27034 net.cpp:139] Memory required for data: 2102800
I0428 19:50:32.207214 27034 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:32.207242 27034 net.cpp:86] Creating Layer ip3
I0428 19:50:32.207247 27034 net.cpp:408] ip3 <- ip2
I0428 19:50:32.207268 27034 net.cpp:382] ip3 -> ip3
I0428 19:50:32.207402 27034 net.cpp:124] Setting up ip3
I0428 19:50:32.207411 27034 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:32.207413 27034 net.cpp:139] Memory required for data: 2106800
I0428 19:50:32.207422 27034 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:32.207428 27034 net.cpp:86] Creating Layer relu3
I0428 19:50:32.207432 27034 net.cpp:408] relu3 <- ip3
I0428 19:50:32.207435 27034 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:32.208281 27034 net.cpp:124] Setting up relu3
I0428 19:50:32.208292 27034 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:32.208295 27034 net.cpp:139] Memory required for data: 2110800
I0428 19:50:32.208299 27034 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:32.208305 27034 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:32.208308 27034 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:32.208314 27034 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:32.208320 27034 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:32.208376 27034 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:32.208398 27034 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:32.208402 27034 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:32.208405 27034 net.cpp:139] Memory required for data: 2118800
I0428 19:50:32.208408 27034 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:32.208412 27034 net.cpp:86] Creating Layer accuracy
I0428 19:50:32.208415 27034 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:32.208420 27034 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:32.208425 27034 net.cpp:382] accuracy -> accuracy
I0428 19:50:32.208431 27034 net.cpp:124] Setting up accuracy
I0428 19:50:32.208436 27034 net.cpp:131] Top shape: (1)
I0428 19:50:32.208437 27034 net.cpp:139] Memory required for data: 2118804
I0428 19:50:32.208441 27034 layer_factory.hpp:77] Creating layer loss
I0428 19:50:32.208444 27034 net.cpp:86] Creating Layer loss
I0428 19:50:32.208448 27034 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:32.208451 27034 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:32.208456 27034 net.cpp:382] loss -> loss
I0428 19:50:32.208461 27034 layer_factory.hpp:77] Creating layer loss
I0428 19:50:32.208706 27034 net.cpp:124] Setting up loss
I0428 19:50:32.208716 27034 net.cpp:131] Top shape: (1)
I0428 19:50:32.208719 27034 net.cpp:134]     with loss weight 1
I0428 19:50:32.208725 27034 net.cpp:139] Memory required for data: 2118808
I0428 19:50:32.208752 27034 net.cpp:200] loss needs backward computation.
I0428 19:50:32.208756 27034 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:32.208761 27034 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:32.208765 27034 net.cpp:200] relu3 needs backward computation.
I0428 19:50:32.208767 27034 net.cpp:200] ip3 needs backward computation.
I0428 19:50:32.208770 27034 net.cpp:200] relu2 needs backward computation.
I0428 19:50:32.208772 27034 net.cpp:200] ip2 needs backward computation.
I0428 19:50:32.208775 27034 net.cpp:200] relu1 needs backward computation.
I0428 19:50:32.208778 27034 net.cpp:200] ip1 needs backward computation.
I0428 19:50:32.208781 27034 net.cpp:200] pool1 needs backward computation.
I0428 19:50:32.208784 27034 net.cpp:200] conv1 needs backward computation.
I0428 19:50:32.208787 27034 net.cpp:200] pool0 needs backward computation.
I0428 19:50:32.208791 27034 net.cpp:200] conv0 needs backward computation.
I0428 19:50:32.208794 27034 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:32.208798 27034 net.cpp:202] mnist does not need backward computation.
I0428 19:50:32.208801 27034 net.cpp:244] This network produces output accuracy
I0428 19:50:32.208804 27034 net.cpp:244] This network produces output loss
I0428 19:50:32.208853 27034 net.cpp:257] Network initialization done.
I0428 19:50:32.208906 27034 solver.cpp:56] Solver scaffolding done.
I0428 19:50:32.209288 27034 caffe.cpp:248] Starting Optimization
I0428 19:50:32.209295 27034 solver.cpp:273] Solving LeNet
I0428 19:50:32.209298 27034 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:32.209583 27034 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:32.213364 27034 blocking_queue.cpp:49] Waiting for data
I0428 19:50:32.285434 27041 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:32.286031 27034 solver.cpp:398]     Test net output #0: accuracy = 0.0975
I0428 19:50:32.286061 27034 solver.cpp:398]     Test net output #1: loss = 2.31665 (* 1 = 2.31665 loss)
I0428 19:50:32.288394 27034 solver.cpp:219] Iteration 0 (0 iter/s, 0.079061s/100 iters), loss = 2.31553
I0428 19:50:32.288430 27034 solver.cpp:238]     Train net output #0: loss = 2.31553 (* 1 = 2.31553 loss)
I0428 19:50:32.288445 27034 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:32.372651 27034 solver.cpp:219] Iteration 100 (1187.54 iter/s, 0.0842076s/100 iters), loss = 1.01024
I0428 19:50:32.372681 27034 solver.cpp:238]     Train net output #0: loss = 1.01024 (* 1 = 1.01024 loss)
I0428 19:50:32.372689 27034 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:32.447999 27034 solver.cpp:219] Iteration 200 (1327.86 iter/s, 0.0753091s/100 iters), loss = 0.488719
I0428 19:50:32.448024 27034 solver.cpp:238]     Train net output #0: loss = 0.488719 (* 1 = 0.488719 loss)
I0428 19:50:32.448030 27034 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:32.523032 27034 solver.cpp:219] Iteration 300 (1333.35 iter/s, 0.0749988s/100 iters), loss = 0.23164
I0428 19:50:32.523085 27034 solver.cpp:238]     Train net output #0: loss = 0.23164 (* 1 = 0.23164 loss)
I0428 19:50:32.523092 27034 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:32.598804 27034 solver.cpp:219] Iteration 400 (1320.85 iter/s, 0.0757086s/100 iters), loss = 0.211705
I0428 19:50:32.598827 27034 solver.cpp:238]     Train net output #0: loss = 0.211705 (* 1 = 0.211705 loss)
I0428 19:50:32.598834 27034 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:32.673485 27034 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:32.749162 27041 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:32.749696 27034 solver.cpp:398]     Test net output #0: accuracy = 0.9511
I0428 19:50:32.749732 27034 solver.cpp:398]     Test net output #1: loss = 0.157587 (* 1 = 0.157587 loss)
I0428 19:50:32.750587 27034 solver.cpp:219] Iteration 500 (658.989 iter/s, 0.151748s/100 iters), loss = 0.190251
I0428 19:50:32.750643 27034 solver.cpp:238]     Train net output #0: loss = 0.190251 (* 1 = 0.190251 loss)
I0428 19:50:32.750679 27034 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:32.833204 27034 solver.cpp:219] Iteration 600 (1211.42 iter/s, 0.0825477s/100 iters), loss = 0.242729
I0428 19:50:32.833261 27034 solver.cpp:238]     Train net output #0: loss = 0.242729 (* 1 = 0.242729 loss)
I0428 19:50:32.833266 27034 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:32.912575 27034 solver.cpp:219] Iteration 700 (1260.68 iter/s, 0.0793221s/100 iters), loss = 0.217533
I0428 19:50:32.912616 27034 solver.cpp:238]     Train net output #0: loss = 0.217533 (* 1 = 0.217533 loss)
I0428 19:50:32.912622 27034 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:32.987788 27034 solver.cpp:219] Iteration 800 (1330.16 iter/s, 0.075179s/100 iters), loss = 0.36803
I0428 19:50:32.987829 27034 solver.cpp:238]     Train net output #0: loss = 0.368029 (* 1 = 0.368029 loss)
I0428 19:50:32.987835 27034 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:33.066258 27034 solver.cpp:219] Iteration 900 (1275.14 iter/s, 0.078423s/100 iters), loss = 0.235387
I0428 19:50:33.066298 27034 solver.cpp:238]     Train net output #0: loss = 0.235387 (* 1 = 0.235387 loss)
I0428 19:50:33.066304 27034 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:33.091076 27040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:33.139683 27034 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:33.140480 27034 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:33.140952 27034 solver.cpp:311] Iteration 1000, loss = 0.124651
I0428 19:50:33.140969 27034 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:33.217425 27041 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:33.217950 27034 solver.cpp:398]     Test net output #0: accuracy = 0.9683
I0428 19:50:33.217972 27034 solver.cpp:398]     Test net output #1: loss = 0.103254 (* 1 = 0.103254 loss)
I0428 19:50:33.217978 27034 solver.cpp:316] Optimization Done.
I0428 19:50:33.217980 27034 caffe.cpp:259] Optimization Done.
