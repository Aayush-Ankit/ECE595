I0428 19:28:36.936280 21677 caffe.cpp:218] Using GPUs 0
I0428 19:28:36.977216 21677 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:37.497191 21677 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test31.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:37.497330 21677 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test31.prototxt
I0428 19:28:37.497635 21677 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:37.497649 21677 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:37.497720 21677 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:37.497781 21677 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:37.497884 21677 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:37.497908 21677 net.cpp:86] Creating Layer mnist
I0428 19:28:37.497917 21677 net.cpp:382] mnist -> data
I0428 19:28:37.497939 21677 net.cpp:382] mnist -> label
I0428 19:28:37.499037 21677 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:37.501507 21677 net.cpp:124] Setting up mnist
I0428 19:28:37.501524 21677 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:37.501531 21677 net.cpp:131] Top shape: 64 (64)
I0428 19:28:37.501535 21677 net.cpp:139] Memory required for data: 200960
I0428 19:28:37.501543 21677 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:37.501554 21677 net.cpp:86] Creating Layer ip1
I0428 19:28:37.501559 21677 net.cpp:408] ip1 <- data
I0428 19:28:37.501569 21677 net.cpp:382] ip1 -> ip1
I0428 19:28:37.502010 21677 net.cpp:124] Setting up ip1
I0428 19:28:37.502020 21677 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:37.502024 21677 net.cpp:139] Memory required for data: 213760
I0428 19:28:37.502038 21677 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:37.502045 21677 net.cpp:86] Creating Layer relu1
I0428 19:28:37.502049 21677 net.cpp:408] relu1 <- ip1
I0428 19:28:37.502054 21677 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:37.789830 21677 net.cpp:124] Setting up relu1
I0428 19:28:37.789860 21677 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:37.789865 21677 net.cpp:139] Memory required for data: 226560
I0428 19:28:37.789871 21677 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:37.789885 21677 net.cpp:86] Creating Layer ip2
I0428 19:28:37.789908 21677 net.cpp:408] ip2 <- ip1
I0428 19:28:37.789916 21677 net.cpp:382] ip2 -> ip2
I0428 19:28:37.791007 21677 net.cpp:124] Setting up ip2
I0428 19:28:37.791023 21677 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:37.791026 21677 net.cpp:139] Memory required for data: 229120
I0428 19:28:37.791038 21677 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:37.791045 21677 net.cpp:86] Creating Layer relu2
I0428 19:28:37.791049 21677 net.cpp:408] relu2 <- ip2
I0428 19:28:37.791056 21677 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:37.791872 21677 net.cpp:124] Setting up relu2
I0428 19:28:37.791887 21677 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:37.791890 21677 net.cpp:139] Memory required for data: 231680
I0428 19:28:37.791894 21677 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:37.791904 21677 net.cpp:86] Creating Layer ip3
I0428 19:28:37.791909 21677 net.cpp:408] ip3 <- ip2
I0428 19:28:37.791915 21677 net.cpp:382] ip3 -> ip3
I0428 19:28:37.792024 21677 net.cpp:124] Setting up ip3
I0428 19:28:37.792033 21677 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:37.792037 21677 net.cpp:139] Memory required for data: 234240
I0428 19:28:37.792045 21677 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:37.792052 21677 net.cpp:86] Creating Layer relu3
I0428 19:28:37.792055 21677 net.cpp:408] relu3 <- ip3
I0428 19:28:37.792060 21677 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:37.792232 21677 net.cpp:124] Setting up relu3
I0428 19:28:37.792240 21677 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:37.792243 21677 net.cpp:139] Memory required for data: 236800
I0428 19:28:37.792248 21677 layer_factory.hpp:77] Creating layer loss
I0428 19:28:37.792253 21677 net.cpp:86] Creating Layer loss
I0428 19:28:37.792256 21677 net.cpp:408] loss <- ip3
I0428 19:28:37.792260 21677 net.cpp:408] loss <- label
I0428 19:28:37.792268 21677 net.cpp:382] loss -> loss
I0428 19:28:37.792289 21677 layer_factory.hpp:77] Creating layer loss
I0428 19:28:37.792546 21677 net.cpp:124] Setting up loss
I0428 19:28:37.792557 21677 net.cpp:131] Top shape: (1)
I0428 19:28:37.792560 21677 net.cpp:134]     with loss weight 1
I0428 19:28:37.792574 21677 net.cpp:139] Memory required for data: 236804
I0428 19:28:37.792578 21677 net.cpp:200] loss needs backward computation.
I0428 19:28:37.792583 21677 net.cpp:200] relu3 needs backward computation.
I0428 19:28:37.792587 21677 net.cpp:200] ip3 needs backward computation.
I0428 19:28:37.792590 21677 net.cpp:200] relu2 needs backward computation.
I0428 19:28:37.792593 21677 net.cpp:200] ip2 needs backward computation.
I0428 19:28:37.792596 21677 net.cpp:200] relu1 needs backward computation.
I0428 19:28:37.792599 21677 net.cpp:200] ip1 needs backward computation.
I0428 19:28:37.792604 21677 net.cpp:202] mnist does not need backward computation.
I0428 19:28:37.792608 21677 net.cpp:244] This network produces output loss
I0428 19:28:37.792615 21677 net.cpp:257] Network initialization done.
I0428 19:28:37.792881 21677 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test31.prototxt
I0428 19:28:37.792907 21677 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:37.792981 21677 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:37.793054 21677 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:37.793100 21677 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:37.793114 21677 net.cpp:86] Creating Layer mnist
I0428 19:28:37.793119 21677 net.cpp:382] mnist -> data
I0428 19:28:37.793128 21677 net.cpp:382] mnist -> label
I0428 19:28:37.793218 21677 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:37.795260 21677 net.cpp:124] Setting up mnist
I0428 19:28:37.795274 21677 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:37.795280 21677 net.cpp:131] Top shape: 100 (100)
I0428 19:28:37.795284 21677 net.cpp:139] Memory required for data: 314000
I0428 19:28:37.795289 21677 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:37.795300 21677 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:37.795305 21677 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:37.795310 21677 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:37.795317 21677 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:37.795372 21677 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:37.795378 21677 net.cpp:131] Top shape: 100 (100)
I0428 19:28:37.795382 21677 net.cpp:131] Top shape: 100 (100)
I0428 19:28:37.795387 21677 net.cpp:139] Memory required for data: 314800
I0428 19:28:37.795389 21677 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:37.795397 21677 net.cpp:86] Creating Layer ip1
I0428 19:28:37.795399 21677 net.cpp:408] ip1 <- data
I0428 19:28:37.795404 21677 net.cpp:382] ip1 -> ip1
I0428 19:28:37.795830 21677 net.cpp:124] Setting up ip1
I0428 19:28:37.795840 21677 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:37.795843 21677 net.cpp:139] Memory required for data: 334800
I0428 19:28:37.795852 21677 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:37.795858 21677 net.cpp:86] Creating Layer relu1
I0428 19:28:37.795862 21677 net.cpp:408] relu1 <- ip1
I0428 19:28:37.795866 21677 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:37.796856 21677 net.cpp:124] Setting up relu1
I0428 19:28:37.796870 21677 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:37.796875 21677 net.cpp:139] Memory required for data: 354800
I0428 19:28:37.796878 21677 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:37.796887 21677 net.cpp:86] Creating Layer ip2
I0428 19:28:37.796891 21677 net.cpp:408] ip2 <- ip1
I0428 19:28:37.796896 21677 net.cpp:382] ip2 -> ip2
I0428 19:28:37.796999 21677 net.cpp:124] Setting up ip2
I0428 19:28:37.797008 21677 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:37.797010 21677 net.cpp:139] Memory required for data: 358800
I0428 19:28:37.797019 21677 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:37.797024 21677 net.cpp:86] Creating Layer relu2
I0428 19:28:37.797027 21677 net.cpp:408] relu2 <- ip2
I0428 19:28:37.797031 21677 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:37.797196 21677 net.cpp:124] Setting up relu2
I0428 19:28:37.797205 21677 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:37.797209 21677 net.cpp:139] Memory required for data: 362800
I0428 19:28:37.797212 21677 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:37.797219 21677 net.cpp:86] Creating Layer ip3
I0428 19:28:37.797221 21677 net.cpp:408] ip3 <- ip2
I0428 19:28:37.797226 21677 net.cpp:382] ip3 -> ip3
I0428 19:28:37.797346 21677 net.cpp:124] Setting up ip3
I0428 19:28:37.797354 21677 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:37.797358 21677 net.cpp:139] Memory required for data: 366800
I0428 19:28:37.797365 21677 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:37.797370 21677 net.cpp:86] Creating Layer relu3
I0428 19:28:37.797374 21677 net.cpp:408] relu3 <- ip3
I0428 19:28:37.797377 21677 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:37.797665 21677 net.cpp:124] Setting up relu3
I0428 19:28:37.797675 21677 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:37.797679 21677 net.cpp:139] Memory required for data: 370800
I0428 19:28:37.797683 21677 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:37.797689 21677 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:37.797693 21677 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:37.797698 21677 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:37.797703 21677 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:37.797737 21677 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:37.797744 21677 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:37.797749 21677 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:37.797752 21677 net.cpp:139] Memory required for data: 378800
I0428 19:28:37.797755 21677 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:37.797761 21677 net.cpp:86] Creating Layer accuracy
I0428 19:28:37.797765 21677 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:37.797770 21677 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:37.797775 21677 net.cpp:382] accuracy -> accuracy
I0428 19:28:37.797786 21677 net.cpp:124] Setting up accuracy
I0428 19:28:37.797791 21677 net.cpp:131] Top shape: (1)
I0428 19:28:37.797793 21677 net.cpp:139] Memory required for data: 378804
I0428 19:28:37.797796 21677 layer_factory.hpp:77] Creating layer loss
I0428 19:28:37.797801 21677 net.cpp:86] Creating Layer loss
I0428 19:28:37.797806 21677 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:37.797809 21677 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:37.797814 21677 net.cpp:382] loss -> loss
I0428 19:28:37.797821 21677 layer_factory.hpp:77] Creating layer loss
I0428 19:28:37.798053 21677 net.cpp:124] Setting up loss
I0428 19:28:37.798063 21677 net.cpp:131] Top shape: (1)
I0428 19:28:37.798065 21677 net.cpp:134]     with loss weight 1
I0428 19:28:37.798072 21677 net.cpp:139] Memory required for data: 378808
I0428 19:28:37.798077 21677 net.cpp:200] loss needs backward computation.
I0428 19:28:37.798081 21677 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:37.798091 21677 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:37.798095 21677 net.cpp:200] relu3 needs backward computation.
I0428 19:28:37.798099 21677 net.cpp:200] ip3 needs backward computation.
I0428 19:28:37.798101 21677 net.cpp:200] relu2 needs backward computation.
I0428 19:28:37.798105 21677 net.cpp:200] ip2 needs backward computation.
I0428 19:28:37.798110 21677 net.cpp:200] relu1 needs backward computation.
I0428 19:28:37.798112 21677 net.cpp:200] ip1 needs backward computation.
I0428 19:28:37.798115 21677 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:37.798120 21677 net.cpp:202] mnist does not need backward computation.
I0428 19:28:37.798122 21677 net.cpp:244] This network produces output accuracy
I0428 19:28:37.798126 21677 net.cpp:244] This network produces output loss
I0428 19:28:37.798135 21677 net.cpp:257] Network initialization done.
I0428 19:28:37.798168 21677 solver.cpp:56] Solver scaffolding done.
I0428 19:28:37.798375 21677 caffe.cpp:248] Starting Optimization
I0428 19:28:37.798382 21677 solver.cpp:273] Solving LeNet
I0428 19:28:37.798385 21677 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:37.799202 21677 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:37.799336 21677 blocking_queue.cpp:49] Waiting for data
I0428 19:28:37.878270 21704 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:37.878705 21677 solver.cpp:398]     Test net output #0: accuracy = 0.0915
I0428 19:28:37.878728 21677 solver.cpp:398]     Test net output #1: loss = 2.31208 (* 1 = 2.31208 loss)
I0428 19:28:37.880008 21677 solver.cpp:219] Iteration 0 (-9.96323e-43 iter/s, 0.0815974s/100 iters), loss = 2.31377
I0428 19:28:37.880036 21677 solver.cpp:238]     Train net output #0: loss = 2.31377 (* 1 = 2.31377 loss)
I0428 19:28:37.880048 21677 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:37.926137 21677 solver.cpp:219] Iteration 100 (2169.51 iter/s, 0.0460933s/100 iters), loss = 1.21936
I0428 19:28:37.926162 21677 solver.cpp:238]     Train net output #0: loss = 1.21936 (* 1 = 1.21936 loss)
I0428 19:28:37.926168 21677 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:37.969537 21677 solver.cpp:219] Iteration 200 (2305.77 iter/s, 0.0433695s/100 iters), loss = 0.837101
I0428 19:28:37.969559 21677 solver.cpp:238]     Train net output #0: loss = 0.837101 (* 1 = 0.837101 loss)
I0428 19:28:37.969565 21677 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:38.011637 21677 solver.cpp:219] Iteration 300 (2376.94 iter/s, 0.042071s/100 iters), loss = 0.863985
I0428 19:28:38.011658 21677 solver.cpp:238]     Train net output #0: loss = 0.863985 (* 1 = 0.863985 loss)
I0428 19:28:38.011680 21677 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:38.053577 21677 solver.cpp:219] Iteration 400 (2385.93 iter/s, 0.0419123s/100 iters), loss = 1.07769
I0428 19:28:38.053598 21677 solver.cpp:238]     Train net output #0: loss = 1.07769 (* 1 = 1.07769 loss)
I0428 19:28:38.053619 21677 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:38.095777 21677 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:38.153182 21704 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:38.153561 21677 solver.cpp:398]     Test net output #0: accuracy = 0.6603
I0428 19:28:38.153583 21677 solver.cpp:398]     Test net output #1: loss = 0.922199 (* 1 = 0.922199 loss)
I0428 19:28:38.153942 21677 solver.cpp:219] Iteration 500 (996.675 iter/s, 0.100334s/100 iters), loss = 1.157
I0428 19:28:38.153985 21677 solver.cpp:238]     Train net output #0: loss = 1.157 (* 1 = 1.157 loss)
I0428 19:28:38.154009 21677 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:38.196415 21677 solver.cpp:219] Iteration 600 (2356.51 iter/s, 0.0424356s/100 iters), loss = 0.790204
I0428 19:28:38.196439 21677 solver.cpp:238]     Train net output #0: loss = 0.790204 (* 1 = 0.790204 loss)
I0428 19:28:38.196460 21677 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:38.239619 21677 solver.cpp:219] Iteration 700 (2316.21 iter/s, 0.0431739s/100 iters), loss = 0.995084
I0428 19:28:38.239644 21677 solver.cpp:238]     Train net output #0: loss = 0.995084 (* 1 = 0.995084 loss)
I0428 19:28:38.239650 21677 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:38.280706 21677 solver.cpp:219] Iteration 800 (2435.92 iter/s, 0.0410522s/100 iters), loss = 1.0007
I0428 19:28:38.280727 21677 solver.cpp:238]     Train net output #0: loss = 1.0007 (* 1 = 1.0007 loss)
I0428 19:28:38.280748 21677 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:38.291244 21677 blocking_queue.cpp:49] Waiting for data
I0428 19:28:38.321976 21677 solver.cpp:219] Iteration 900 (2424.74 iter/s, 0.0412416s/100 iters), loss = 0.748249
I0428 19:28:38.322011 21677 solver.cpp:238]     Train net output #0: loss = 0.748249 (* 1 = 0.748249 loss)
I0428 19:28:38.322033 21677 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:38.336856 21703 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:38.363096 21677 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:38.364014 21677 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:38.364733 21677 solver.cpp:311] Iteration 1000, loss = 0.788322
I0428 19:28:38.364748 21677 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:38.420923 21704 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:38.421371 21677 solver.cpp:398]     Test net output #0: accuracy = 0.6697
I0428 19:28:38.421396 21677 solver.cpp:398]     Test net output #1: loss = 0.869783 (* 1 = 0.869783 loss)
I0428 19:28:38.421406 21677 solver.cpp:316] Optimization Done.
I0428 19:28:38.421412 21677 caffe.cpp:259] Optimization Done.
