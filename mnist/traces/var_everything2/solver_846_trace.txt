I0428 19:59:23.080854 29227 caffe.cpp:218] Using GPUs 0
I0428 19:59:23.108047 29227 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:23.557961 29227 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test846.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:23.558090 29227 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test846.prototxt
I0428 19:59:23.558436 29227 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:23.558454 29227 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:23.558548 29227 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:23.558612 29227 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:23.558696 29227 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:23.558715 29227 net.cpp:86] Creating Layer mnist
I0428 19:59:23.558723 29227 net.cpp:382] mnist -> data
I0428 19:59:23.558742 29227 net.cpp:382] mnist -> label
I0428 19:59:23.559836 29227 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:23.562077 29227 net.cpp:124] Setting up mnist
I0428 19:59:23.562108 29227 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:23.562111 29227 net.cpp:131] Top shape: 64 (64)
I0428 19:59:23.562114 29227 net.cpp:139] Memory required for data: 200960
I0428 19:59:23.562120 29227 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:23.562158 29227 net.cpp:86] Creating Layer conv0
I0428 19:59:23.562175 29227 net.cpp:408] conv0 <- data
I0428 19:59:23.562187 29227 net.cpp:382] conv0 -> conv0
I0428 19:59:23.793329 29227 net.cpp:124] Setting up conv0
I0428 19:59:23.793370 29227 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:23.793373 29227 net.cpp:139] Memory required for data: 1675520
I0428 19:59:23.793390 29227 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:23.793402 29227 net.cpp:86] Creating Layer pool0
I0428 19:59:23.793406 29227 net.cpp:408] pool0 <- conv0
I0428 19:59:23.793411 29227 net.cpp:382] pool0 -> pool0
I0428 19:59:23.793457 29227 net.cpp:124] Setting up pool0
I0428 19:59:23.793475 29227 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:23.793478 29227 net.cpp:139] Memory required for data: 2044160
I0428 19:59:23.793481 29227 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:23.793490 29227 net.cpp:86] Creating Layer conv1
I0428 19:59:23.793493 29227 net.cpp:408] conv1 <- pool0
I0428 19:59:23.793498 29227 net.cpp:382] conv1 -> conv1
I0428 19:59:23.796139 29227 net.cpp:124] Setting up conv1
I0428 19:59:23.796152 29227 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:23.796171 29227 net.cpp:139] Memory required for data: 2208000
I0428 19:59:23.796180 29227 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:23.796187 29227 net.cpp:86] Creating Layer pool1
I0428 19:59:23.796190 29227 net.cpp:408] pool1 <- conv1
I0428 19:59:23.796195 29227 net.cpp:382] pool1 -> pool1
I0428 19:59:23.796245 29227 net.cpp:124] Setting up pool1
I0428 19:59:23.796250 29227 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:23.796253 29227 net.cpp:139] Memory required for data: 2248960
I0428 19:59:23.796257 29227 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:23.796262 29227 net.cpp:86] Creating Layer ip1
I0428 19:59:23.796265 29227 net.cpp:408] ip1 <- pool1
I0428 19:59:23.796269 29227 net.cpp:382] ip1 -> ip1
I0428 19:59:23.796392 29227 net.cpp:124] Setting up ip1
I0428 19:59:23.796401 29227 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:23.796403 29227 net.cpp:139] Memory required for data: 2255360
I0428 19:59:23.796411 29227 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:23.796416 29227 net.cpp:86] Creating Layer relu1
I0428 19:59:23.796419 29227 net.cpp:408] relu1 <- ip1
I0428 19:59:23.796423 29227 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:23.796600 29227 net.cpp:124] Setting up relu1
I0428 19:59:23.796609 29227 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:23.796612 29227 net.cpp:139] Memory required for data: 2261760
I0428 19:59:23.796615 29227 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:23.796622 29227 net.cpp:86] Creating Layer ip2
I0428 19:59:23.796624 29227 net.cpp:408] ip2 <- ip1
I0428 19:59:23.796629 29227 net.cpp:382] ip2 -> ip2
I0428 19:59:23.796732 29227 net.cpp:124] Setting up ip2
I0428 19:59:23.796739 29227 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:23.796742 29227 net.cpp:139] Memory required for data: 2274560
I0428 19:59:23.796748 29227 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:23.796753 29227 net.cpp:86] Creating Layer relu2
I0428 19:59:23.796771 29227 net.cpp:408] relu2 <- ip2
I0428 19:59:23.796774 29227 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:23.797561 29227 net.cpp:124] Setting up relu2
I0428 19:59:23.797590 29227 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:23.797593 29227 net.cpp:139] Memory required for data: 2287360
I0428 19:59:23.797597 29227 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:23.797603 29227 net.cpp:86] Creating Layer ip3
I0428 19:59:23.797607 29227 net.cpp:408] ip3 <- ip2
I0428 19:59:23.797613 29227 net.cpp:382] ip3 -> ip3
I0428 19:59:23.797758 29227 net.cpp:124] Setting up ip3
I0428 19:59:23.797766 29227 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:23.797770 29227 net.cpp:139] Memory required for data: 2289920
I0428 19:59:23.797780 29227 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:23.797786 29227 net.cpp:86] Creating Layer relu3
I0428 19:59:23.797790 29227 net.cpp:408] relu3 <- ip3
I0428 19:59:23.797793 29227 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:23.797973 29227 net.cpp:124] Setting up relu3
I0428 19:59:23.797982 29227 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:23.797986 29227 net.cpp:139] Memory required for data: 2292480
I0428 19:59:23.797989 29227 layer_factory.hpp:77] Creating layer loss
I0428 19:59:23.797994 29227 net.cpp:86] Creating Layer loss
I0428 19:59:23.797998 29227 net.cpp:408] loss <- ip3
I0428 19:59:23.798002 29227 net.cpp:408] loss <- label
I0428 19:59:23.798007 29227 net.cpp:382] loss -> loss
I0428 19:59:23.798039 29227 layer_factory.hpp:77] Creating layer loss
I0428 19:59:23.798279 29227 net.cpp:124] Setting up loss
I0428 19:59:23.798288 29227 net.cpp:131] Top shape: (1)
I0428 19:59:23.798291 29227 net.cpp:134]     with loss weight 1
I0428 19:59:23.798305 29227 net.cpp:139] Memory required for data: 2292484
I0428 19:59:23.798308 29227 net.cpp:200] loss needs backward computation.
I0428 19:59:23.798312 29227 net.cpp:200] relu3 needs backward computation.
I0428 19:59:23.798315 29227 net.cpp:200] ip3 needs backward computation.
I0428 19:59:23.798317 29227 net.cpp:200] relu2 needs backward computation.
I0428 19:59:23.798321 29227 net.cpp:200] ip2 needs backward computation.
I0428 19:59:23.798322 29227 net.cpp:200] relu1 needs backward computation.
I0428 19:59:23.798326 29227 net.cpp:200] ip1 needs backward computation.
I0428 19:59:23.798328 29227 net.cpp:200] pool1 needs backward computation.
I0428 19:59:23.798331 29227 net.cpp:200] conv1 needs backward computation.
I0428 19:59:23.798333 29227 net.cpp:200] pool0 needs backward computation.
I0428 19:59:23.798336 29227 net.cpp:200] conv0 needs backward computation.
I0428 19:59:23.798339 29227 net.cpp:202] mnist does not need backward computation.
I0428 19:59:23.798342 29227 net.cpp:244] This network produces output loss
I0428 19:59:23.798351 29227 net.cpp:257] Network initialization done.
I0428 19:59:23.798748 29227 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test846.prototxt
I0428 19:59:23.798795 29227 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:23.798931 29227 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:23.799011 29227 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:23.799068 29227 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:23.799082 29227 net.cpp:86] Creating Layer mnist
I0428 19:59:23.799088 29227 net.cpp:382] mnist -> data
I0428 19:59:23.799094 29227 net.cpp:382] mnist -> label
I0428 19:59:23.799175 29227 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:23.801055 29227 net.cpp:124] Setting up mnist
I0428 19:59:23.801084 29227 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:23.801089 29227 net.cpp:131] Top shape: 100 (100)
I0428 19:59:23.801092 29227 net.cpp:139] Memory required for data: 314000
I0428 19:59:23.801111 29227 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:23.801182 29227 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:23.801185 29227 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:23.801203 29227 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:23.801210 29227 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:23.801265 29227 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:23.801271 29227 net.cpp:131] Top shape: 100 (100)
I0428 19:59:23.801275 29227 net.cpp:131] Top shape: 100 (100)
I0428 19:59:23.801277 29227 net.cpp:139] Memory required for data: 314800
I0428 19:59:23.801280 29227 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:23.801290 29227 net.cpp:86] Creating Layer conv0
I0428 19:59:23.801292 29227 net.cpp:408] conv0 <- data
I0428 19:59:23.801298 29227 net.cpp:382] conv0 -> conv0
I0428 19:59:23.803072 29227 net.cpp:124] Setting up conv0
I0428 19:59:23.803087 29227 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:23.803092 29227 net.cpp:139] Memory required for data: 2618800
I0428 19:59:23.803099 29227 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:23.803117 29227 net.cpp:86] Creating Layer pool0
I0428 19:59:23.803119 29227 net.cpp:408] pool0 <- conv0
I0428 19:59:23.803125 29227 net.cpp:382] pool0 -> pool0
I0428 19:59:23.803163 29227 net.cpp:124] Setting up pool0
I0428 19:59:23.803167 29227 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:23.803169 29227 net.cpp:139] Memory required for data: 3194800
I0428 19:59:23.803172 29227 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:23.803182 29227 net.cpp:86] Creating Layer conv1
I0428 19:59:23.803186 29227 net.cpp:408] conv1 <- pool0
I0428 19:59:23.803190 29227 net.cpp:382] conv1 -> conv1
I0428 19:59:23.805429 29227 net.cpp:124] Setting up conv1
I0428 19:59:23.805444 29227 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:23.805447 29227 net.cpp:139] Memory required for data: 3450800
I0428 19:59:23.805455 29227 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:23.805461 29227 net.cpp:86] Creating Layer pool1
I0428 19:59:23.805483 29227 net.cpp:408] pool1 <- conv1
I0428 19:59:23.805505 29227 net.cpp:382] pool1 -> pool1
I0428 19:59:23.805544 29227 net.cpp:124] Setting up pool1
I0428 19:59:23.805550 29227 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:23.805553 29227 net.cpp:139] Memory required for data: 3514800
I0428 19:59:23.805555 29227 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:23.805563 29227 net.cpp:86] Creating Layer ip1
I0428 19:59:23.805567 29227 net.cpp:408] ip1 <- pool1
I0428 19:59:23.805572 29227 net.cpp:382] ip1 -> ip1
I0428 19:59:23.805727 29227 net.cpp:124] Setting up ip1
I0428 19:59:23.805734 29227 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:23.805747 29227 net.cpp:139] Memory required for data: 3524800
I0428 19:59:23.805754 29227 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:23.805759 29227 net.cpp:86] Creating Layer relu1
I0428 19:59:23.805763 29227 net.cpp:408] relu1 <- ip1
I0428 19:59:23.805770 29227 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:23.806000 29227 net.cpp:124] Setting up relu1
I0428 19:59:23.806010 29227 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:23.806013 29227 net.cpp:139] Memory required for data: 3534800
I0428 19:59:23.806022 29227 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:23.806030 29227 net.cpp:86] Creating Layer ip2
I0428 19:59:23.806038 29227 net.cpp:408] ip2 <- ip1
I0428 19:59:23.806043 29227 net.cpp:382] ip2 -> ip2
I0428 19:59:23.806149 29227 net.cpp:124] Setting up ip2
I0428 19:59:23.806155 29227 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:23.806159 29227 net.cpp:139] Memory required for data: 3554800
I0428 19:59:23.806164 29227 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:23.806167 29227 net.cpp:86] Creating Layer relu2
I0428 19:59:23.806171 29227 net.cpp:408] relu2 <- ip2
I0428 19:59:23.806177 29227 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:23.806342 29227 net.cpp:124] Setting up relu2
I0428 19:59:23.806350 29227 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:23.806354 29227 net.cpp:139] Memory required for data: 3574800
I0428 19:59:23.806356 29227 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:23.806362 29227 net.cpp:86] Creating Layer ip3
I0428 19:59:23.806365 29227 net.cpp:408] ip3 <- ip2
I0428 19:59:23.806370 29227 net.cpp:382] ip3 -> ip3
I0428 19:59:23.806498 29227 net.cpp:124] Setting up ip3
I0428 19:59:23.806504 29227 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:23.806507 29227 net.cpp:139] Memory required for data: 3578800
I0428 19:59:23.806514 29227 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:23.806520 29227 net.cpp:86] Creating Layer relu3
I0428 19:59:23.806524 29227 net.cpp:408] relu3 <- ip3
I0428 19:59:23.806526 29227 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:23.807296 29227 net.cpp:124] Setting up relu3
I0428 19:59:23.807308 29227 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:23.807312 29227 net.cpp:139] Memory required for data: 3582800
I0428 19:59:23.807315 29227 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:23.807320 29227 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:23.807323 29227 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:23.807328 29227 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:23.807334 29227 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:23.807394 29227 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:23.807401 29227 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:23.807405 29227 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:23.807409 29227 net.cpp:139] Memory required for data: 3590800
I0428 19:59:23.807411 29227 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:23.807416 29227 net.cpp:86] Creating Layer accuracy
I0428 19:59:23.807420 29227 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:23.807423 29227 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:23.807430 29227 net.cpp:382] accuracy -> accuracy
I0428 19:59:23.807436 29227 net.cpp:124] Setting up accuracy
I0428 19:59:23.807440 29227 net.cpp:131] Top shape: (1)
I0428 19:59:23.807443 29227 net.cpp:139] Memory required for data: 3590804
I0428 19:59:23.807446 29227 layer_factory.hpp:77] Creating layer loss
I0428 19:59:23.807451 29227 net.cpp:86] Creating Layer loss
I0428 19:59:23.807454 29227 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:23.807458 29227 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:23.807462 29227 net.cpp:382] loss -> loss
I0428 19:59:23.807482 29227 layer_factory.hpp:77] Creating layer loss
I0428 19:59:23.807756 29227 net.cpp:124] Setting up loss
I0428 19:59:23.807765 29227 net.cpp:131] Top shape: (1)
I0428 19:59:23.807775 29227 net.cpp:134]     with loss weight 1
I0428 19:59:23.807790 29227 net.cpp:139] Memory required for data: 3590808
I0428 19:59:23.807792 29227 net.cpp:200] loss needs backward computation.
I0428 19:59:23.807796 29227 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:23.807804 29227 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:23.807807 29227 net.cpp:200] relu3 needs backward computation.
I0428 19:59:23.807811 29227 net.cpp:200] ip3 needs backward computation.
I0428 19:59:23.807812 29227 net.cpp:200] relu2 needs backward computation.
I0428 19:59:23.807816 29227 net.cpp:200] ip2 needs backward computation.
I0428 19:59:23.807827 29227 net.cpp:200] relu1 needs backward computation.
I0428 19:59:23.807831 29227 net.cpp:200] ip1 needs backward computation.
I0428 19:59:23.807833 29227 net.cpp:200] pool1 needs backward computation.
I0428 19:59:23.807835 29227 net.cpp:200] conv1 needs backward computation.
I0428 19:59:23.807844 29227 net.cpp:200] pool0 needs backward computation.
I0428 19:59:23.807847 29227 net.cpp:200] conv0 needs backward computation.
I0428 19:59:23.807850 29227 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:23.807853 29227 net.cpp:202] mnist does not need backward computation.
I0428 19:59:23.807857 29227 net.cpp:244] This network produces output accuracy
I0428 19:59:23.807859 29227 net.cpp:244] This network produces output loss
I0428 19:59:23.807870 29227 net.cpp:257] Network initialization done.
I0428 19:59:23.807909 29227 solver.cpp:56] Solver scaffolding done.
I0428 19:59:23.808261 29227 caffe.cpp:248] Starting Optimization
I0428 19:59:23.808269 29227 solver.cpp:273] Solving LeNet
I0428 19:59:23.808270 29227 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:23.809119 29227 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:23.812791 29227 blocking_queue.cpp:49] Waiting for data
I0428 19:59:23.884305 29234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:23.884884 29227 solver.cpp:398]     Test net output #0: accuracy = 0.1061
I0428 19:59:23.884903 29227 solver.cpp:398]     Test net output #1: loss = 2.31779 (* 1 = 2.31779 loss)
I0428 19:59:23.887377 29227 solver.cpp:219] Iteration 0 (0 iter/s, 0.0790784s/100 iters), loss = 2.32065
I0428 19:59:23.887401 29227 solver.cpp:238]     Train net output #0: loss = 2.32065 (* 1 = 2.32065 loss)
I0428 19:59:23.887428 29227 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:23.973382 29227 solver.cpp:219] Iteration 100 (1163.24 iter/s, 0.0859668s/100 iters), loss = 0.622304
I0428 19:59:23.973409 29227 solver.cpp:238]     Train net output #0: loss = 0.622304 (* 1 = 0.622304 loss)
I0428 19:59:23.973415 29227 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:24.052978 29227 solver.cpp:219] Iteration 200 (1256.92 iter/s, 0.0795597s/100 iters), loss = 0.38554
I0428 19:59:24.053004 29227 solver.cpp:238]     Train net output #0: loss = 0.38554 (* 1 = 0.38554 loss)
I0428 19:59:24.053011 29227 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:24.138643 29227 solver.cpp:219] Iteration 300 (1167.84 iter/s, 0.0856279s/100 iters), loss = 0.226119
I0428 19:59:24.138666 29227 solver.cpp:238]     Train net output #0: loss = 0.226119 (* 1 = 0.226119 loss)
I0428 19:59:24.138690 29227 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:24.217200 29227 solver.cpp:219] Iteration 400 (1273.51 iter/s, 0.0785234s/100 iters), loss = 0.137489
I0428 19:59:24.217222 29227 solver.cpp:238]     Train net output #0: loss = 0.137489 (* 1 = 0.137489 loss)
I0428 19:59:24.217245 29227 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:24.294195 29227 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:24.369117 29234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:24.369640 29227 solver.cpp:398]     Test net output #0: accuracy = 0.9484
I0428 19:59:24.369663 29227 solver.cpp:398]     Test net output #1: loss = 0.17498 (* 1 = 0.17498 loss)
I0428 19:59:24.370507 29227 solver.cpp:219] Iteration 500 (652.438 iter/s, 0.153271s/100 iters), loss = 0.166516
I0428 19:59:24.370580 29227 solver.cpp:238]     Train net output #0: loss = 0.166516 (* 1 = 0.166516 loss)
I0428 19:59:24.370589 29227 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:24.453805 29227 solver.cpp:219] Iteration 600 (1201.49 iter/s, 0.0832298s/100 iters), loss = 0.0872933
I0428 19:59:24.453835 29227 solver.cpp:238]     Train net output #0: loss = 0.0872934 (* 1 = 0.0872934 loss)
I0428 19:59:24.453840 29227 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:24.533033 29227 solver.cpp:219] Iteration 700 (1262.79 iter/s, 0.07919s/100 iters), loss = 0.222098
I0428 19:59:24.533058 29227 solver.cpp:238]     Train net output #0: loss = 0.222098 (* 1 = 0.222098 loss)
I0428 19:59:24.533064 29227 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:24.609848 29227 solver.cpp:219] Iteration 800 (1302.41 iter/s, 0.0767805s/100 iters), loss = 0.219631
I0428 19:59:24.609872 29227 solver.cpp:238]     Train net output #0: loss = 0.219631 (* 1 = 0.219631 loss)
I0428 19:59:24.609879 29227 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:24.688233 29227 solver.cpp:219] Iteration 900 (1276.3 iter/s, 0.0783514s/100 iters), loss = 0.168204
I0428 19:59:24.688256 29227 solver.cpp:238]     Train net output #0: loss = 0.168205 (* 1 = 0.168205 loss)
I0428 19:59:24.688277 29227 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:24.713979 29233 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:24.765347 29227 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:24.766139 29227 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:24.766649 29227 solver.cpp:311] Iteration 1000, loss = 0.114892
I0428 19:59:24.766679 29227 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:24.840706 29234 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:24.841325 29227 solver.cpp:398]     Test net output #0: accuracy = 0.9707
I0428 19:59:24.841356 29227 solver.cpp:398]     Test net output #1: loss = 0.0918568 (* 1 = 0.0918568 loss)
I0428 19:59:24.841364 29227 solver.cpp:316] Optimization Done.
I0428 19:59:24.841369 29227 caffe.cpp:259] Optimization Done.
