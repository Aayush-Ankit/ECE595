I0428 19:39:26.092974 24299 caffe.cpp:218] Using GPUs 0
I0428 19:39:26.133221 24299 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:26.684196 24299 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test304.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:26.684336 24299 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test304.prototxt
I0428 19:39:26.684756 24299 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:26.684777 24299 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:26.684888 24299 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:26.684969 24299 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:26.685070 24299 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:26.685092 24299 net.cpp:86] Creating Layer mnist
I0428 19:39:26.685101 24299 net.cpp:382] mnist -> data
I0428 19:39:26.685123 24299 net.cpp:382] mnist -> label
I0428 19:39:26.686219 24299 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:26.688699 24299 net.cpp:124] Setting up mnist
I0428 19:39:26.688717 24299 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:26.688724 24299 net.cpp:131] Top shape: 64 (64)
I0428 19:39:26.688726 24299 net.cpp:139] Memory required for data: 200960
I0428 19:39:26.688733 24299 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:26.688750 24299 net.cpp:86] Creating Layer conv0
I0428 19:39:26.688772 24299 net.cpp:408] conv0 <- data
I0428 19:39:26.688786 24299 net.cpp:382] conv0 -> conv0
I0428 19:39:26.977871 24299 net.cpp:124] Setting up conv0
I0428 19:39:26.977905 24299 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:26.977910 24299 net.cpp:139] Memory required for data: 495872
I0428 19:39:26.977928 24299 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:26.977943 24299 net.cpp:86] Creating Layer pool0
I0428 19:39:26.977948 24299 net.cpp:408] pool0 <- conv0
I0428 19:39:26.977954 24299 net.cpp:382] pool0 -> pool0
I0428 19:39:26.978009 24299 net.cpp:124] Setting up pool0
I0428 19:39:26.978019 24299 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:26.978024 24299 net.cpp:139] Memory required for data: 569600
I0428 19:39:26.978026 24299 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:26.978039 24299 net.cpp:86] Creating Layer conv1
I0428 19:39:26.978045 24299 net.cpp:408] conv1 <- pool0
I0428 19:39:26.978051 24299 net.cpp:382] conv1 -> conv1
I0428 19:39:26.980173 24299 net.cpp:124] Setting up conv1
I0428 19:39:26.980190 24299 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:26.980195 24299 net.cpp:139] Memory required for data: 602368
I0428 19:39:26.980206 24299 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:26.980213 24299 net.cpp:86] Creating Layer pool1
I0428 19:39:26.980218 24299 net.cpp:408] pool1 <- conv1
I0428 19:39:26.980224 24299 net.cpp:382] pool1 -> pool1
I0428 19:39:26.980268 24299 net.cpp:124] Setting up pool1
I0428 19:39:26.980274 24299 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:26.980278 24299 net.cpp:139] Memory required for data: 610560
I0428 19:39:26.980283 24299 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:26.980290 24299 net.cpp:86] Creating Layer ip1
I0428 19:39:26.980294 24299 net.cpp:408] ip1 <- pool1
I0428 19:39:26.980299 24299 net.cpp:382] ip1 -> ip1
I0428 19:39:26.981406 24299 net.cpp:124] Setting up ip1
I0428 19:39:26.981422 24299 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:26.981426 24299 net.cpp:139] Memory required for data: 623360
I0428 19:39:26.981436 24299 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:26.981444 24299 net.cpp:86] Creating Layer relu1
I0428 19:39:26.981448 24299 net.cpp:408] relu1 <- ip1
I0428 19:39:26.981454 24299 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:26.981658 24299 net.cpp:124] Setting up relu1
I0428 19:39:26.981670 24299 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:26.981674 24299 net.cpp:139] Memory required for data: 636160
I0428 19:39:26.981678 24299 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:26.981685 24299 net.cpp:86] Creating Layer ip2
I0428 19:39:26.981689 24299 net.cpp:408] ip2 <- ip1
I0428 19:39:26.981695 24299 net.cpp:382] ip2 -> ip2
I0428 19:39:26.981818 24299 net.cpp:124] Setting up ip2
I0428 19:39:26.981827 24299 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:26.981832 24299 net.cpp:139] Memory required for data: 638720
I0428 19:39:26.981837 24299 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:26.981844 24299 net.cpp:86] Creating Layer relu2
I0428 19:39:26.981848 24299 net.cpp:408] relu2 <- ip2
I0428 19:39:26.981853 24299 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:26.982708 24299 net.cpp:124] Setting up relu2
I0428 19:39:26.982724 24299 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:26.982728 24299 net.cpp:139] Memory required for data: 641280
I0428 19:39:26.982733 24299 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:26.982740 24299 net.cpp:86] Creating Layer ip3
I0428 19:39:26.982744 24299 net.cpp:408] ip3 <- ip2
I0428 19:39:26.982751 24299 net.cpp:382] ip3 -> ip3
I0428 19:39:26.982867 24299 net.cpp:124] Setting up ip3
I0428 19:39:26.982877 24299 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:26.982880 24299 net.cpp:139] Memory required for data: 643840
I0428 19:39:26.982889 24299 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:26.982895 24299 net.cpp:86] Creating Layer relu3
I0428 19:39:26.982899 24299 net.cpp:408] relu3 <- ip3
I0428 19:39:26.982904 24299 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:26.983108 24299 net.cpp:124] Setting up relu3
I0428 19:39:26.983119 24299 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:26.983124 24299 net.cpp:139] Memory required for data: 646400
I0428 19:39:26.983127 24299 layer_factory.hpp:77] Creating layer loss
I0428 19:39:26.983134 24299 net.cpp:86] Creating Layer loss
I0428 19:39:26.983139 24299 net.cpp:408] loss <- ip3
I0428 19:39:26.983144 24299 net.cpp:408] loss <- label
I0428 19:39:26.983150 24299 net.cpp:382] loss -> loss
I0428 19:39:26.983166 24299 layer_factory.hpp:77] Creating layer loss
I0428 19:39:26.983450 24299 net.cpp:124] Setting up loss
I0428 19:39:26.983461 24299 net.cpp:131] Top shape: (1)
I0428 19:39:26.983465 24299 net.cpp:134]     with loss weight 1
I0428 19:39:26.983481 24299 net.cpp:139] Memory required for data: 646404
I0428 19:39:26.983485 24299 net.cpp:200] loss needs backward computation.
I0428 19:39:26.983489 24299 net.cpp:200] relu3 needs backward computation.
I0428 19:39:26.983494 24299 net.cpp:200] ip3 needs backward computation.
I0428 19:39:26.983496 24299 net.cpp:200] relu2 needs backward computation.
I0428 19:39:26.983500 24299 net.cpp:200] ip2 needs backward computation.
I0428 19:39:26.983503 24299 net.cpp:200] relu1 needs backward computation.
I0428 19:39:26.983506 24299 net.cpp:200] ip1 needs backward computation.
I0428 19:39:26.983510 24299 net.cpp:200] pool1 needs backward computation.
I0428 19:39:26.983513 24299 net.cpp:200] conv1 needs backward computation.
I0428 19:39:26.983516 24299 net.cpp:200] pool0 needs backward computation.
I0428 19:39:26.983520 24299 net.cpp:200] conv0 needs backward computation.
I0428 19:39:26.983525 24299 net.cpp:202] mnist does not need backward computation.
I0428 19:39:26.983527 24299 net.cpp:244] This network produces output loss
I0428 19:39:26.983541 24299 net.cpp:257] Network initialization done.
I0428 19:39:26.983932 24299 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test304.prototxt
I0428 19:39:26.983963 24299 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:26.984071 24299 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:26.984172 24299 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:26.984225 24299 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:26.984238 24299 net.cpp:86] Creating Layer mnist
I0428 19:39:26.984246 24299 net.cpp:382] mnist -> data
I0428 19:39:26.984256 24299 net.cpp:382] mnist -> label
I0428 19:39:26.984359 24299 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:26.986779 24299 net.cpp:124] Setting up mnist
I0428 19:39:26.986795 24299 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:26.986801 24299 net.cpp:131] Top shape: 100 (100)
I0428 19:39:26.986805 24299 net.cpp:139] Memory required for data: 314000
I0428 19:39:26.986809 24299 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:26.986817 24299 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:26.986821 24299 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:26.986827 24299 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:26.986838 24299 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:26.986889 24299 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:26.986896 24299 net.cpp:131] Top shape: 100 (100)
I0428 19:39:26.986901 24299 net.cpp:131] Top shape: 100 (100)
I0428 19:39:26.986903 24299 net.cpp:139] Memory required for data: 314800
I0428 19:39:26.986907 24299 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:26.986919 24299 net.cpp:86] Creating Layer conv0
I0428 19:39:26.986923 24299 net.cpp:408] conv0 <- data
I0428 19:39:26.986929 24299 net.cpp:382] conv0 -> conv0
I0428 19:39:26.988927 24299 net.cpp:124] Setting up conv0
I0428 19:39:26.988945 24299 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:26.988948 24299 net.cpp:139] Memory required for data: 775600
I0428 19:39:26.988960 24299 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:26.988968 24299 net.cpp:86] Creating Layer pool0
I0428 19:39:26.988973 24299 net.cpp:408] pool0 <- conv0
I0428 19:39:26.988981 24299 net.cpp:382] pool0 -> pool0
I0428 19:39:26.989025 24299 net.cpp:124] Setting up pool0
I0428 19:39:26.989032 24299 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:26.989035 24299 net.cpp:139] Memory required for data: 890800
I0428 19:39:26.989039 24299 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:26.989051 24299 net.cpp:86] Creating Layer conv1
I0428 19:39:26.989055 24299 net.cpp:408] conv1 <- pool0
I0428 19:39:26.989060 24299 net.cpp:382] conv1 -> conv1
I0428 19:39:26.990808 24299 net.cpp:124] Setting up conv1
I0428 19:39:26.990824 24299 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:26.990828 24299 net.cpp:139] Memory required for data: 942000
I0428 19:39:26.990839 24299 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:26.990849 24299 net.cpp:86] Creating Layer pool1
I0428 19:39:26.990852 24299 net.cpp:408] pool1 <- conv1
I0428 19:39:26.990860 24299 net.cpp:382] pool1 -> pool1
I0428 19:39:26.990905 24299 net.cpp:124] Setting up pool1
I0428 19:39:26.990911 24299 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:26.990914 24299 net.cpp:139] Memory required for data: 954800
I0428 19:39:26.990917 24299 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:26.990926 24299 net.cpp:86] Creating Layer ip1
I0428 19:39:26.990931 24299 net.cpp:408] ip1 <- pool1
I0428 19:39:26.990937 24299 net.cpp:382] ip1 -> ip1
I0428 19:39:26.991068 24299 net.cpp:124] Setting up ip1
I0428 19:39:26.991078 24299 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:26.991098 24299 net.cpp:139] Memory required for data: 974800
I0428 19:39:26.991108 24299 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:26.991114 24299 net.cpp:86] Creating Layer relu1
I0428 19:39:26.991118 24299 net.cpp:408] relu1 <- ip1
I0428 19:39:26.991127 24299 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:26.991344 24299 net.cpp:124] Setting up relu1
I0428 19:39:26.991355 24299 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:26.991359 24299 net.cpp:139] Memory required for data: 994800
I0428 19:39:26.991363 24299 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:26.991372 24299 net.cpp:86] Creating Layer ip2
I0428 19:39:26.991376 24299 net.cpp:408] ip2 <- ip1
I0428 19:39:26.991382 24299 net.cpp:382] ip2 -> ip2
I0428 19:39:26.991572 24299 net.cpp:124] Setting up ip2
I0428 19:39:26.991581 24299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:26.991585 24299 net.cpp:139] Memory required for data: 998800
I0428 19:39:26.991591 24299 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:26.991597 24299 net.cpp:86] Creating Layer relu2
I0428 19:39:26.991601 24299 net.cpp:408] relu2 <- ip2
I0428 19:39:26.991607 24299 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:26.991796 24299 net.cpp:124] Setting up relu2
I0428 19:39:26.991806 24299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:26.991809 24299 net.cpp:139] Memory required for data: 1002800
I0428 19:39:26.991813 24299 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:26.991822 24299 net.cpp:86] Creating Layer ip3
I0428 19:39:26.991825 24299 net.cpp:408] ip3 <- ip2
I0428 19:39:26.991832 24299 net.cpp:382] ip3 -> ip3
I0428 19:39:26.991950 24299 net.cpp:124] Setting up ip3
I0428 19:39:26.991958 24299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:26.991963 24299 net.cpp:139] Memory required for data: 1006800
I0428 19:39:26.991972 24299 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:26.991979 24299 net.cpp:86] Creating Layer relu3
I0428 19:39:26.991982 24299 net.cpp:408] relu3 <- ip3
I0428 19:39:26.991988 24299 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:26.992905 24299 net.cpp:124] Setting up relu3
I0428 19:39:26.992921 24299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:26.992926 24299 net.cpp:139] Memory required for data: 1010800
I0428 19:39:26.992930 24299 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:26.992936 24299 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:26.992940 24299 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:26.992946 24299 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:26.992954 24299 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:26.993031 24299 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:26.993038 24299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:26.993043 24299 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:26.993047 24299 net.cpp:139] Memory required for data: 1018800
I0428 19:39:26.993052 24299 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:26.993057 24299 net.cpp:86] Creating Layer accuracy
I0428 19:39:26.993060 24299 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:26.993067 24299 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:26.993074 24299 net.cpp:382] accuracy -> accuracy
I0428 19:39:26.993083 24299 net.cpp:124] Setting up accuracy
I0428 19:39:26.993088 24299 net.cpp:131] Top shape: (1)
I0428 19:39:26.993091 24299 net.cpp:139] Memory required for data: 1018804
I0428 19:39:26.993095 24299 layer_factory.hpp:77] Creating layer loss
I0428 19:39:26.993103 24299 net.cpp:86] Creating Layer loss
I0428 19:39:26.993108 24299 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:26.993111 24299 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:26.993116 24299 net.cpp:382] loss -> loss
I0428 19:39:26.993129 24299 layer_factory.hpp:77] Creating layer loss
I0428 19:39:26.993422 24299 net.cpp:124] Setting up loss
I0428 19:39:26.993433 24299 net.cpp:131] Top shape: (1)
I0428 19:39:26.993436 24299 net.cpp:134]     with loss weight 1
I0428 19:39:26.993444 24299 net.cpp:139] Memory required for data: 1018808
I0428 19:39:26.993459 24299 net.cpp:200] loss needs backward computation.
I0428 19:39:26.993464 24299 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:26.993469 24299 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:26.993472 24299 net.cpp:200] relu3 needs backward computation.
I0428 19:39:26.993475 24299 net.cpp:200] ip3 needs backward computation.
I0428 19:39:26.993479 24299 net.cpp:200] relu2 needs backward computation.
I0428 19:39:26.993484 24299 net.cpp:200] ip2 needs backward computation.
I0428 19:39:26.993486 24299 net.cpp:200] relu1 needs backward computation.
I0428 19:39:26.993489 24299 net.cpp:200] ip1 needs backward computation.
I0428 19:39:26.993495 24299 net.cpp:200] pool1 needs backward computation.
I0428 19:39:26.993499 24299 net.cpp:200] conv1 needs backward computation.
I0428 19:39:26.993504 24299 net.cpp:200] pool0 needs backward computation.
I0428 19:39:26.993506 24299 net.cpp:200] conv0 needs backward computation.
I0428 19:39:26.993511 24299 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:26.993516 24299 net.cpp:202] mnist does not need backward computation.
I0428 19:39:26.993520 24299 net.cpp:244] This network produces output accuracy
I0428 19:39:26.993523 24299 net.cpp:244] This network produces output loss
I0428 19:39:26.993538 24299 net.cpp:257] Network initialization done.
I0428 19:39:26.993588 24299 solver.cpp:56] Solver scaffolding done.
I0428 19:39:26.994012 24299 caffe.cpp:248] Starting Optimization
I0428 19:39:26.994019 24299 solver.cpp:273] Solving LeNet
I0428 19:39:26.994024 24299 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:26.994998 24299 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:26.997874 24299 blocking_queue.cpp:49] Waiting for data
I0428 19:39:27.069985 24306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:27.070466 24299 solver.cpp:398]     Test net output #0: accuracy = 0.0762
I0428 19:39:27.070492 24299 solver.cpp:398]     Test net output #1: loss = 2.35309 (* 1 = 2.35309 loss)
I0428 19:39:27.072571 24299 solver.cpp:219] Iteration 0 (-1.74104e-31 iter/s, 0.0785112s/100 iters), loss = 2.35299
I0428 19:39:27.072603 24299 solver.cpp:238]     Train net output #0: loss = 2.35299 (* 1 = 2.35299 loss)
I0428 19:39:27.072618 24299 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:27.147850 24299 solver.cpp:219] Iteration 100 (1329.14 iter/s, 0.0752364s/100 iters), loss = 1.63211
I0428 19:39:27.147881 24299 solver.cpp:238]     Train net output #0: loss = 1.63211 (* 1 = 1.63211 loss)
I0428 19:39:27.147888 24299 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:27.221884 24299 solver.cpp:219] Iteration 200 (1351.51 iter/s, 0.0739912s/100 iters), loss = 1.23519
I0428 19:39:27.221915 24299 solver.cpp:238]     Train net output #0: loss = 1.23519 (* 1 = 1.23519 loss)
I0428 19:39:27.221921 24299 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:27.295364 24299 solver.cpp:219] Iteration 300 (1361.65 iter/s, 0.0734403s/100 iters), loss = 0.602711
I0428 19:39:27.295397 24299 solver.cpp:238]     Train net output #0: loss = 0.602711 (* 1 = 0.602711 loss)
I0428 19:39:27.295403 24299 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:27.369113 24299 solver.cpp:219] Iteration 400 (1356.69 iter/s, 0.0737085s/100 iters), loss = 0.650402
I0428 19:39:27.369143 24299 solver.cpp:238]     Train net output #0: loss = 0.650402 (* 1 = 0.650402 loss)
I0428 19:39:27.369151 24299 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:27.439523 24299 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:27.491600 24306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:27.492033 24299 solver.cpp:398]     Test net output #0: accuracy = 0.7198
I0428 19:39:27.492065 24299 solver.cpp:398]     Test net output #1: loss = 0.788142 (* 1 = 0.788142 loss)
I0428 19:39:27.492837 24299 solver.cpp:219] Iteration 500 (808.52 iter/s, 0.123683s/100 iters), loss = 1.04975
I0428 19:39:27.492877 24299 solver.cpp:238]     Train net output #0: loss = 1.04975 (* 1 = 1.04975 loss)
I0428 19:39:27.492900 24299 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:27.561856 24299 solver.cpp:219] Iteration 600 (1449.57 iter/s, 0.0689859s/100 iters), loss = 0.771071
I0428 19:39:27.561893 24299 solver.cpp:238]     Train net output #0: loss = 0.771071 (* 1 = 0.771071 loss)
I0428 19:39:27.561899 24299 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:27.639500 24299 solver.cpp:219] Iteration 700 (1288.53 iter/s, 0.0776079s/100 iters), loss = 0.947573
I0428 19:39:27.639560 24299 solver.cpp:238]     Train net output #0: loss = 0.947573 (* 1 = 0.947573 loss)
I0428 19:39:27.639583 24299 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:27.718648 24299 solver.cpp:219] Iteration 800 (1264.5 iter/s, 0.0790825s/100 iters), loss = 0.627701
I0428 19:39:27.718677 24299 solver.cpp:238]     Train net output #0: loss = 0.627701 (* 1 = 0.627701 loss)
I0428 19:39:27.718684 24299 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:27.791709 24299 solver.cpp:219] Iteration 900 (1369.42 iter/s, 0.0730234s/100 iters), loss = 0.781
I0428 19:39:27.791739 24299 solver.cpp:238]     Train net output #0: loss = 0.781 (* 1 = 0.781 loss)
I0428 19:39:27.791746 24299 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:27.816584 24305 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:27.864621 24299 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:27.865325 24299 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:27.865758 24299 solver.cpp:311] Iteration 1000, loss = 0.726708
I0428 19:39:27.865775 24299 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:27.939056 24306 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:27.939518 24299 solver.cpp:398]     Test net output #0: accuracy = 0.7442
I0428 19:39:27.939539 24299 solver.cpp:398]     Test net output #1: loss = 0.682816 (* 1 = 0.682816 loss)
I0428 19:39:27.939545 24299 solver.cpp:316] Optimization Done.
I0428 19:39:27.939549 24299 caffe.cpp:259] Optimization Done.
