I0428 20:08:34.971659 31416 caffe.cpp:218] Using GPUs 0
I0428 20:08:35.010824 31416 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:08:35.458890 31416 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1087.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:08:35.459028 31416 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1087.prototxt
I0428 20:08:35.459357 31416 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:08:35.459375 31416 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:08:35.459462 31416 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:35.459552 31416 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:35.459671 31416 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:08:35.459698 31416 net.cpp:86] Creating Layer mnist
I0428 20:08:35.459709 31416 net.cpp:382] mnist -> data
I0428 20:08:35.459735 31416 net.cpp:382] mnist -> label
I0428 20:08:35.460925 31416 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:08:35.463217 31416 net.cpp:124] Setting up mnist
I0428 20:08:35.463248 31416 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:08:35.463255 31416 net.cpp:131] Top shape: 64 (64)
I0428 20:08:35.463260 31416 net.cpp:139] Memory required for data: 200960
I0428 20:08:35.463269 31416 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:35.463289 31416 net.cpp:86] Creating Layer conv0
I0428 20:08:35.463310 31416 net.cpp:408] conv0 <- data
I0428 20:08:35.463326 31416 net.cpp:382] conv0 -> conv0
I0428 20:08:35.691375 31416 net.cpp:124] Setting up conv0
I0428 20:08:35.691403 31416 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:08:35.691408 31416 net.cpp:139] Memory required for data: 3887360
I0428 20:08:35.691428 31416 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:35.691445 31416 net.cpp:86] Creating Layer pool0
I0428 20:08:35.691457 31416 net.cpp:408] pool0 <- conv0
I0428 20:08:35.691467 31416 net.cpp:382] pool0 -> pool0
I0428 20:08:35.691519 31416 net.cpp:124] Setting up pool0
I0428 20:08:35.691526 31416 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:08:35.691531 31416 net.cpp:139] Memory required for data: 4808960
I0428 20:08:35.691535 31416 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:35.691550 31416 net.cpp:86] Creating Layer conv1
I0428 20:08:35.691556 31416 net.cpp:408] conv1 <- pool0
I0428 20:08:35.691565 31416 net.cpp:382] conv1 -> conv1
I0428 20:08:35.694505 31416 net.cpp:124] Setting up conv1
I0428 20:08:35.694521 31416 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:08:35.694527 31416 net.cpp:139] Memory required for data: 4972800
I0428 20:08:35.694555 31416 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:35.694566 31416 net.cpp:86] Creating Layer pool1
I0428 20:08:35.694572 31416 net.cpp:408] pool1 <- conv1
I0428 20:08:35.694581 31416 net.cpp:382] pool1 -> pool1
I0428 20:08:35.694623 31416 net.cpp:124] Setting up pool1
I0428 20:08:35.694633 31416 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:08:35.694638 31416 net.cpp:139] Memory required for data: 5013760
I0428 20:08:35.694643 31416 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:35.694653 31416 net.cpp:86] Creating Layer ip1
I0428 20:08:35.694658 31416 net.cpp:408] ip1 <- pool1
I0428 20:08:35.694666 31416 net.cpp:382] ip1 -> ip1
I0428 20:08:35.694811 31416 net.cpp:124] Setting up ip1
I0428 20:08:35.694834 31416 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:35.694839 31416 net.cpp:139] Memory required for data: 5026560
I0428 20:08:35.694850 31416 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:35.694875 31416 net.cpp:86] Creating Layer relu1
I0428 20:08:35.694883 31416 net.cpp:408] relu1 <- ip1
I0428 20:08:35.694890 31416 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:35.695055 31416 net.cpp:124] Setting up relu1
I0428 20:08:35.695065 31416 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:08:35.695070 31416 net.cpp:139] Memory required for data: 5039360
I0428 20:08:35.695075 31416 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:35.695086 31416 net.cpp:86] Creating Layer ip2
I0428 20:08:35.695091 31416 net.cpp:408] ip2 <- ip1
I0428 20:08:35.695098 31416 net.cpp:382] ip2 -> ip2
I0428 20:08:35.696099 31416 net.cpp:124] Setting up ip2
I0428 20:08:35.696113 31416 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:35.696118 31416 net.cpp:139] Memory required for data: 5045760
I0428 20:08:35.696128 31416 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:35.696138 31416 net.cpp:86] Creating Layer relu2
I0428 20:08:35.696144 31416 net.cpp:408] relu2 <- ip2
I0428 20:08:35.696151 31416 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:35.696992 31416 net.cpp:124] Setting up relu2
I0428 20:08:35.697008 31416 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:08:35.697015 31416 net.cpp:139] Memory required for data: 5052160
I0428 20:08:35.697021 31416 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:35.697032 31416 net.cpp:86] Creating Layer ip3
I0428 20:08:35.697039 31416 net.cpp:408] ip3 <- ip2
I0428 20:08:35.697049 31416 net.cpp:382] ip3 -> ip3
I0428 20:08:35.697194 31416 net.cpp:124] Setting up ip3
I0428 20:08:35.697219 31416 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:35.697239 31416 net.cpp:139] Memory required for data: 5054720
I0428 20:08:35.697252 31416 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:35.697263 31416 net.cpp:86] Creating Layer relu3
I0428 20:08:35.697270 31416 net.cpp:408] relu3 <- ip3
I0428 20:08:35.697278 31416 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:35.697453 31416 net.cpp:124] Setting up relu3
I0428 20:08:35.697463 31416 net.cpp:131] Top shape: 64 10 (640)
I0428 20:08:35.697468 31416 net.cpp:139] Memory required for data: 5057280
I0428 20:08:35.697473 31416 layer_factory.hpp:77] Creating layer loss
I0428 20:08:35.697502 31416 net.cpp:86] Creating Layer loss
I0428 20:08:35.697509 31416 net.cpp:408] loss <- ip3
I0428 20:08:35.697515 31416 net.cpp:408] loss <- label
I0428 20:08:35.697525 31416 net.cpp:382] loss -> loss
I0428 20:08:35.697547 31416 layer_factory.hpp:77] Creating layer loss
I0428 20:08:35.697782 31416 net.cpp:124] Setting up loss
I0428 20:08:35.697791 31416 net.cpp:131] Top shape: (1)
I0428 20:08:35.697796 31416 net.cpp:134]     with loss weight 1
I0428 20:08:35.697815 31416 net.cpp:139] Memory required for data: 5057284
I0428 20:08:35.697821 31416 net.cpp:200] loss needs backward computation.
I0428 20:08:35.697827 31416 net.cpp:200] relu3 needs backward computation.
I0428 20:08:35.697831 31416 net.cpp:200] ip3 needs backward computation.
I0428 20:08:35.697836 31416 net.cpp:200] relu2 needs backward computation.
I0428 20:08:35.697841 31416 net.cpp:200] ip2 needs backward computation.
I0428 20:08:35.697845 31416 net.cpp:200] relu1 needs backward computation.
I0428 20:08:35.697850 31416 net.cpp:200] ip1 needs backward computation.
I0428 20:08:35.697854 31416 net.cpp:200] pool1 needs backward computation.
I0428 20:08:35.697860 31416 net.cpp:200] conv1 needs backward computation.
I0428 20:08:35.697865 31416 net.cpp:200] pool0 needs backward computation.
I0428 20:08:35.697870 31416 net.cpp:200] conv0 needs backward computation.
I0428 20:08:35.697876 31416 net.cpp:202] mnist does not need backward computation.
I0428 20:08:35.697895 31416 net.cpp:244] This network produces output loss
I0428 20:08:35.697907 31416 net.cpp:257] Network initialization done.
I0428 20:08:35.698248 31416 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1087.prototxt
I0428 20:08:35.698298 31416 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:08:35.698459 31416 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:08:35.698586 31416 layer_factory.hpp:77] Creating layer mnist
I0428 20:08:35.698660 31416 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:08:35.698679 31416 net.cpp:86] Creating Layer mnist
I0428 20:08:35.698704 31416 net.cpp:382] mnist -> data
I0428 20:08:35.698714 31416 net.cpp:382] mnist -> label
I0428 20:08:35.698832 31416 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:08:35.701079 31416 net.cpp:124] Setting up mnist
I0428 20:08:35.701094 31416 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:08:35.701102 31416 net.cpp:131] Top shape: 100 (100)
I0428 20:08:35.701107 31416 net.cpp:139] Memory required for data: 314000
I0428 20:08:35.701113 31416 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:08:35.701123 31416 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:08:35.701128 31416 net.cpp:408] label_mnist_1_split <- label
I0428 20:08:35.701139 31416 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:08:35.701150 31416 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:08:35.701263 31416 net.cpp:124] Setting up label_mnist_1_split
I0428 20:08:35.701272 31416 net.cpp:131] Top shape: 100 (100)
I0428 20:08:35.701278 31416 net.cpp:131] Top shape: 100 (100)
I0428 20:08:35.701283 31416 net.cpp:139] Memory required for data: 314800
I0428 20:08:35.701288 31416 layer_factory.hpp:77] Creating layer conv0
I0428 20:08:35.701303 31416 net.cpp:86] Creating Layer conv0
I0428 20:08:35.701310 31416 net.cpp:408] conv0 <- data
I0428 20:08:35.701318 31416 net.cpp:382] conv0 -> conv0
I0428 20:08:35.702855 31416 net.cpp:124] Setting up conv0
I0428 20:08:35.702869 31416 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:08:35.702874 31416 net.cpp:139] Memory required for data: 6074800
I0428 20:08:35.702888 31416 layer_factory.hpp:77] Creating layer pool0
I0428 20:08:35.702896 31416 net.cpp:86] Creating Layer pool0
I0428 20:08:35.702904 31416 net.cpp:408] pool0 <- conv0
I0428 20:08:35.702913 31416 net.cpp:382] pool0 -> pool0
I0428 20:08:35.702953 31416 net.cpp:124] Setting up pool0
I0428 20:08:35.702963 31416 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:08:35.702967 31416 net.cpp:139] Memory required for data: 7514800
I0428 20:08:35.702972 31416 layer_factory.hpp:77] Creating layer conv1
I0428 20:08:35.702986 31416 net.cpp:86] Creating Layer conv1
I0428 20:08:35.702991 31416 net.cpp:408] conv1 <- pool0
I0428 20:08:35.703001 31416 net.cpp:382] conv1 -> conv1
I0428 20:08:35.705353 31416 net.cpp:124] Setting up conv1
I0428 20:08:35.705368 31416 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:08:35.705374 31416 net.cpp:139] Memory required for data: 7770800
I0428 20:08:35.705402 31416 layer_factory.hpp:77] Creating layer pool1
I0428 20:08:35.705413 31416 net.cpp:86] Creating Layer pool1
I0428 20:08:35.705420 31416 net.cpp:408] pool1 <- conv1
I0428 20:08:35.705427 31416 net.cpp:382] pool1 -> pool1
I0428 20:08:35.705518 31416 net.cpp:124] Setting up pool1
I0428 20:08:35.705541 31416 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:08:35.705548 31416 net.cpp:139] Memory required for data: 7834800
I0428 20:08:35.705551 31416 layer_factory.hpp:77] Creating layer ip1
I0428 20:08:35.705561 31416 net.cpp:86] Creating Layer ip1
I0428 20:08:35.705567 31416 net.cpp:408] ip1 <- pool1
I0428 20:08:35.705576 31416 net.cpp:382] ip1 -> ip1
I0428 20:08:35.705730 31416 net.cpp:124] Setting up ip1
I0428 20:08:35.705740 31416 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:35.705770 31416 net.cpp:139] Memory required for data: 7854800
I0428 20:08:35.705799 31416 layer_factory.hpp:77] Creating layer relu1
I0428 20:08:35.705811 31416 net.cpp:86] Creating Layer relu1
I0428 20:08:35.705816 31416 net.cpp:408] relu1 <- ip1
I0428 20:08:35.705824 31416 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:08:35.705991 31416 net.cpp:124] Setting up relu1
I0428 20:08:35.706002 31416 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:08:35.706007 31416 net.cpp:139] Memory required for data: 7874800
I0428 20:08:35.706012 31416 layer_factory.hpp:77] Creating layer ip2
I0428 20:08:35.706024 31416 net.cpp:86] Creating Layer ip2
I0428 20:08:35.706032 31416 net.cpp:408] ip2 <- ip1
I0428 20:08:35.706040 31416 net.cpp:382] ip2 -> ip2
I0428 20:08:35.706169 31416 net.cpp:124] Setting up ip2
I0428 20:08:35.706177 31416 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:35.706182 31416 net.cpp:139] Memory required for data: 7884800
I0428 20:08:35.706190 31416 layer_factory.hpp:77] Creating layer relu2
I0428 20:08:35.706198 31416 net.cpp:86] Creating Layer relu2
I0428 20:08:35.706203 31416 net.cpp:408] relu2 <- ip2
I0428 20:08:35.706212 31416 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:08:35.706368 31416 net.cpp:124] Setting up relu2
I0428 20:08:35.706393 31416 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:08:35.706398 31416 net.cpp:139] Memory required for data: 7894800
I0428 20:08:35.706403 31416 layer_factory.hpp:77] Creating layer ip3
I0428 20:08:35.706413 31416 net.cpp:86] Creating Layer ip3
I0428 20:08:35.706418 31416 net.cpp:408] ip3 <- ip2
I0428 20:08:35.706428 31416 net.cpp:382] ip3 -> ip3
I0428 20:08:35.706619 31416 net.cpp:124] Setting up ip3
I0428 20:08:35.706634 31416 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:35.706639 31416 net.cpp:139] Memory required for data: 7898800
I0428 20:08:35.706651 31416 layer_factory.hpp:77] Creating layer relu3
I0428 20:08:35.706660 31416 net.cpp:86] Creating Layer relu3
I0428 20:08:35.706666 31416 net.cpp:408] relu3 <- ip3
I0428 20:08:35.706673 31416 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:08:35.707540 31416 net.cpp:124] Setting up relu3
I0428 20:08:35.707552 31416 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:35.707557 31416 net.cpp:139] Memory required for data: 7902800
I0428 20:08:35.707563 31416 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:08:35.707573 31416 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:08:35.707578 31416 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:08:35.707587 31416 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:08:35.707598 31416 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:08:35.707644 31416 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:08:35.707653 31416 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:35.707660 31416 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:08:35.707665 31416 net.cpp:139] Memory required for data: 7910800
I0428 20:08:35.707670 31416 layer_factory.hpp:77] Creating layer accuracy
I0428 20:08:35.707680 31416 net.cpp:86] Creating Layer accuracy
I0428 20:08:35.707685 31416 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:08:35.707692 31416 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:08:35.707707 31416 net.cpp:382] accuracy -> accuracy
I0428 20:08:35.707720 31416 net.cpp:124] Setting up accuracy
I0428 20:08:35.707729 31416 net.cpp:131] Top shape: (1)
I0428 20:08:35.707734 31416 net.cpp:139] Memory required for data: 7910804
I0428 20:08:35.707739 31416 layer_factory.hpp:77] Creating layer loss
I0428 20:08:35.707749 31416 net.cpp:86] Creating Layer loss
I0428 20:08:35.707762 31416 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:08:35.707790 31416 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:08:35.707798 31416 net.cpp:382] loss -> loss
I0428 20:08:35.707808 31416 layer_factory.hpp:77] Creating layer loss
I0428 20:08:35.708081 31416 net.cpp:124] Setting up loss
I0428 20:08:35.708106 31416 net.cpp:131] Top shape: (1)
I0428 20:08:35.708125 31416 net.cpp:134]     with loss weight 1
I0428 20:08:35.708145 31416 net.cpp:139] Memory required for data: 7910808
I0428 20:08:35.708151 31416 net.cpp:200] loss needs backward computation.
I0428 20:08:35.708158 31416 net.cpp:202] accuracy does not need backward computation.
I0428 20:08:35.708164 31416 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:08:35.708170 31416 net.cpp:200] relu3 needs backward computation.
I0428 20:08:35.708174 31416 net.cpp:200] ip3 needs backward computation.
I0428 20:08:35.708180 31416 net.cpp:200] relu2 needs backward computation.
I0428 20:08:35.708184 31416 net.cpp:200] ip2 needs backward computation.
I0428 20:08:35.708189 31416 net.cpp:200] relu1 needs backward computation.
I0428 20:08:35.708194 31416 net.cpp:200] ip1 needs backward computation.
I0428 20:08:35.708199 31416 net.cpp:200] pool1 needs backward computation.
I0428 20:08:35.708204 31416 net.cpp:200] conv1 needs backward computation.
I0428 20:08:35.708209 31416 net.cpp:200] pool0 needs backward computation.
I0428 20:08:35.708214 31416 net.cpp:200] conv0 needs backward computation.
I0428 20:08:35.708221 31416 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:08:35.708226 31416 net.cpp:202] mnist does not need backward computation.
I0428 20:08:35.708231 31416 net.cpp:244] This network produces output accuracy
I0428 20:08:35.708237 31416 net.cpp:244] This network produces output loss
I0428 20:08:35.708256 31416 net.cpp:257] Network initialization done.
I0428 20:08:35.708317 31416 solver.cpp:56] Solver scaffolding done.
I0428 20:08:35.708703 31416 caffe.cpp:248] Starting Optimization
I0428 20:08:35.708709 31416 solver.cpp:273] Solving LeNet
I0428 20:08:35.708714 31416 solver.cpp:274] Learning Rate Policy: inv
I0428 20:08:35.709527 31416 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:08:35.714051 31416 blocking_queue.cpp:49] Waiting for data
I0428 20:08:35.785260 31423 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:35.785832 31416 solver.cpp:398]     Test net output #0: accuracy = 0.0864
I0428 20:08:35.785856 31416 solver.cpp:398]     Test net output #1: loss = 2.32849 (* 1 = 2.32849 loss)
I0428 20:08:35.789543 31416 solver.cpp:219] Iteration 0 (0 iter/s, 0.0807905s/100 iters), loss = 2.34132
I0428 20:08:35.789571 31416 solver.cpp:238]     Train net output #0: loss = 2.34132 (* 1 = 2.34132 loss)
I0428 20:08:35.789602 31416 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:08:35.895865 31416 solver.cpp:219] Iteration 100 (940.929 iter/s, 0.106278s/100 iters), loss = 1.36115
I0428 20:08:35.895905 31416 solver.cpp:238]     Train net output #0: loss = 1.36115 (* 1 = 1.36115 loss)
I0428 20:08:35.895915 31416 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:08:35.993741 31416 solver.cpp:219] Iteration 200 (1022.23 iter/s, 0.0978258s/100 iters), loss = 0.735505
I0428 20:08:35.993772 31416 solver.cpp:238]     Train net output #0: loss = 0.735505 (* 1 = 0.735505 loss)
I0428 20:08:35.993780 31416 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:08:36.089426 31416 solver.cpp:219] Iteration 300 (1045.55 iter/s, 0.0956436s/100 iters), loss = 0.916862
I0428 20:08:36.089457 31416 solver.cpp:238]     Train net output #0: loss = 0.916862 (* 1 = 0.916862 loss)
I0428 20:08:36.089464 31416 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:08:36.185086 31416 solver.cpp:219] Iteration 400 (1045.83 iter/s, 0.0956182s/100 iters), loss = 1.1072
I0428 20:08:36.185117 31416 solver.cpp:238]     Train net output #0: loss = 1.1072 (* 1 = 1.1072 loss)
I0428 20:08:36.185124 31416 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:08:36.279625 31416 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:08:36.335685 31423 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:36.337023 31416 solver.cpp:398]     Test net output #0: accuracy = 0.7652
I0428 20:08:36.337045 31416 solver.cpp:398]     Test net output #1: loss = 0.612225 (* 1 = 0.612225 loss)
I0428 20:08:36.337963 31416 solver.cpp:219] Iteration 500 (654.305 iter/s, 0.152834s/100 iters), loss = 0.633172
I0428 20:08:36.338008 31416 solver.cpp:238]     Train net output #0: loss = 0.633172 (* 1 = 0.633172 loss)
I0428 20:08:36.338016 31416 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:08:36.437023 31416 solver.cpp:219] Iteration 600 (1010.05 iter/s, 0.0990046s/100 iters), loss = 0.409471
I0428 20:08:36.437054 31416 solver.cpp:238]     Train net output #0: loss = 0.409471 (* 1 = 0.409471 loss)
I0428 20:08:36.437062 31416 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:08:36.536550 31416 solver.cpp:219] Iteration 700 (1005.18 iter/s, 0.0994847s/100 iters), loss = 0.487421
I0428 20:08:36.536583 31416 solver.cpp:238]     Train net output #0: loss = 0.487421 (* 1 = 0.487421 loss)
I0428 20:08:36.536592 31416 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:08:36.631929 31416 solver.cpp:219] Iteration 800 (1048.92 iter/s, 0.0953365s/100 iters), loss = 0.499944
I0428 20:08:36.631958 31416 solver.cpp:238]     Train net output #0: loss = 0.499944 (* 1 = 0.499944 loss)
I0428 20:08:36.631963 31416 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:08:36.724073 31416 solver.cpp:219] Iteration 900 (1085.68 iter/s, 0.0921078s/100 iters), loss = 0.405968
I0428 20:08:36.724112 31416 solver.cpp:238]     Train net output #0: loss = 0.405968 (* 1 = 0.405968 loss)
I0428 20:08:36.724118 31416 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:08:36.756857 31422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:36.820799 31416 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:08:36.821766 31416 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:08:36.822348 31416 solver.cpp:311] Iteration 1000, loss = 0.406285
I0428 20:08:36.822365 31416 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:08:36.877370 31423 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:08:36.877959 31416 solver.cpp:398]     Test net output #0: accuracy = 0.8722
I0428 20:08:36.877990 31416 solver.cpp:398]     Test net output #1: loss = 0.323425 (* 1 = 0.323425 loss)
I0428 20:08:36.877995 31416 solver.cpp:316] Optimization Done.
I0428 20:08:36.877998 31416 caffe.cpp:259] Optimization Done.
