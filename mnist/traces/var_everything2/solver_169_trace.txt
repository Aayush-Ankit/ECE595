I0428 19:33:02.127864 23015 caffe.cpp:218] Using GPUs 0
I0428 19:33:02.167875 23015 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:02.685688 23015 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test169.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:02.685858 23015 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test169.prototxt
I0428 19:33:02.686238 23015 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:02.686260 23015 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:02.686357 23015 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:02.686467 23015 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:02.686599 23015 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:02.686631 23015 net.cpp:86] Creating Layer mnist
I0428 19:33:02.686646 23015 net.cpp:382] mnist -> data
I0428 19:33:02.686677 23015 net.cpp:382] mnist -> label
I0428 19:33:02.687902 23015 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:02.690383 23015 net.cpp:124] Setting up mnist
I0428 19:33:02.690404 23015 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:02.690414 23015 net.cpp:131] Top shape: 64 (64)
I0428 19:33:02.690420 23015 net.cpp:139] Memory required for data: 200960
I0428 19:33:02.690433 23015 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:02.690457 23015 net.cpp:86] Creating Layer conv0
I0428 19:33:02.690467 23015 net.cpp:408] conv0 <- data
I0428 19:33:02.690487 23015 net.cpp:382] conv0 -> conv0
I0428 19:33:02.980862 23015 net.cpp:124] Setting up conv0
I0428 19:33:02.980897 23015 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:02.980904 23015 net.cpp:139] Memory required for data: 3887360
I0428 19:33:02.980928 23015 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:02.980949 23015 net.cpp:86] Creating Layer pool0
I0428 19:33:02.980980 23015 net.cpp:408] pool0 <- conv0
I0428 19:33:02.980993 23015 net.cpp:382] pool0 -> pool0
I0428 19:33:02.981061 23015 net.cpp:124] Setting up pool0
I0428 19:33:02.981073 23015 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:02.981079 23015 net.cpp:139] Memory required for data: 4808960
I0428 19:33:02.981086 23015 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:02.981101 23015 net.cpp:86] Creating Layer ip1
I0428 19:33:02.981112 23015 net.cpp:408] ip1 <- pool0
I0428 19:33:02.981122 23015 net.cpp:382] ip1 -> ip1
I0428 19:33:02.981494 23015 net.cpp:124] Setting up ip1
I0428 19:33:02.981506 23015 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:02.981513 23015 net.cpp:139] Memory required for data: 4811520
I0428 19:33:02.981526 23015 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:02.981544 23015 net.cpp:86] Creating Layer relu1
I0428 19:33:02.981551 23015 net.cpp:408] relu1 <- ip1
I0428 19:33:02.981561 23015 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:02.981766 23015 net.cpp:124] Setting up relu1
I0428 19:33:02.981778 23015 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:02.981786 23015 net.cpp:139] Memory required for data: 4814080
I0428 19:33:02.981791 23015 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:02.981803 23015 net.cpp:86] Creating Layer ip2
I0428 19:33:02.981811 23015 net.cpp:408] ip2 <- ip1
I0428 19:33:02.981820 23015 net.cpp:382] ip2 -> ip2
I0428 19:33:02.981940 23015 net.cpp:124] Setting up ip2
I0428 19:33:02.981950 23015 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:02.981956 23015 net.cpp:139] Memory required for data: 4816640
I0428 19:33:02.981971 23015 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:02.981981 23015 net.cpp:86] Creating Layer relu2
I0428 19:33:02.981988 23015 net.cpp:408] relu2 <- ip2
I0428 19:33:02.981997 23015 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:02.982861 23015 net.cpp:124] Setting up relu2
I0428 19:33:02.982878 23015 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:02.982885 23015 net.cpp:139] Memory required for data: 4819200
I0428 19:33:02.982892 23015 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:02.982905 23015 net.cpp:86] Creating Layer ip3
I0428 19:33:02.982913 23015 net.cpp:408] ip3 <- ip2
I0428 19:33:02.982923 23015 net.cpp:382] ip3 -> ip3
I0428 19:33:02.983042 23015 net.cpp:124] Setting up ip3
I0428 19:33:02.983053 23015 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:02.983060 23015 net.cpp:139] Memory required for data: 4821760
I0428 19:33:02.983072 23015 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:02.983083 23015 net.cpp:86] Creating Layer relu3
I0428 19:33:02.983091 23015 net.cpp:408] relu3 <- ip3
I0428 19:33:02.983101 23015 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:02.983289 23015 net.cpp:124] Setting up relu3
I0428 19:33:02.983301 23015 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:02.983307 23015 net.cpp:139] Memory required for data: 4824320
I0428 19:33:02.983314 23015 layer_factory.hpp:77] Creating layer loss
I0428 19:33:02.983325 23015 net.cpp:86] Creating Layer loss
I0428 19:33:02.983330 23015 net.cpp:408] loss <- ip3
I0428 19:33:02.983340 23015 net.cpp:408] loss <- label
I0428 19:33:02.983350 23015 net.cpp:382] loss -> loss
I0428 19:33:02.983377 23015 layer_factory.hpp:77] Creating layer loss
I0428 19:33:02.983647 23015 net.cpp:124] Setting up loss
I0428 19:33:02.983660 23015 net.cpp:131] Top shape: (1)
I0428 19:33:02.983666 23015 net.cpp:134]     with loss weight 1
I0428 19:33:02.983688 23015 net.cpp:139] Memory required for data: 4824324
I0428 19:33:02.983696 23015 net.cpp:200] loss needs backward computation.
I0428 19:33:02.983705 23015 net.cpp:200] relu3 needs backward computation.
I0428 19:33:02.983711 23015 net.cpp:200] ip3 needs backward computation.
I0428 19:33:02.983717 23015 net.cpp:200] relu2 needs backward computation.
I0428 19:33:02.983723 23015 net.cpp:200] ip2 needs backward computation.
I0428 19:33:02.983729 23015 net.cpp:200] relu1 needs backward computation.
I0428 19:33:02.983736 23015 net.cpp:200] ip1 needs backward computation.
I0428 19:33:02.983755 23015 net.cpp:200] pool0 needs backward computation.
I0428 19:33:02.983762 23015 net.cpp:200] conv0 needs backward computation.
I0428 19:33:02.983769 23015 net.cpp:202] mnist does not need backward computation.
I0428 19:33:02.983777 23015 net.cpp:244] This network produces output loss
I0428 19:33:02.983791 23015 net.cpp:257] Network initialization done.
I0428 19:33:02.984133 23015 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test169.prototxt
I0428 19:33:02.984174 23015 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:02.984277 23015 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:02.984405 23015 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:02.984474 23015 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:02.984495 23015 net.cpp:86] Creating Layer mnist
I0428 19:33:02.984505 23015 net.cpp:382] mnist -> data
I0428 19:33:02.984520 23015 net.cpp:382] mnist -> label
I0428 19:33:02.984659 23015 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:02.986979 23015 net.cpp:124] Setting up mnist
I0428 19:33:02.986996 23015 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:02.987005 23015 net.cpp:131] Top shape: 100 (100)
I0428 19:33:02.987011 23015 net.cpp:139] Memory required for data: 314000
I0428 19:33:02.987018 23015 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:02.987051 23015 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:02.987058 23015 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:02.987066 23015 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:02.987082 23015 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:02.987169 23015 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:02.987179 23015 net.cpp:131] Top shape: 100 (100)
I0428 19:33:02.987186 23015 net.cpp:131] Top shape: 100 (100)
I0428 19:33:02.987192 23015 net.cpp:139] Memory required for data: 314800
I0428 19:33:02.987210 23015 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:02.987231 23015 net.cpp:86] Creating Layer conv0
I0428 19:33:02.987237 23015 net.cpp:408] conv0 <- data
I0428 19:33:02.987248 23015 net.cpp:382] conv0 -> conv0
I0428 19:33:02.988916 23015 net.cpp:124] Setting up conv0
I0428 19:33:02.988934 23015 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:02.988941 23015 net.cpp:139] Memory required for data: 6074800
I0428 19:33:02.988958 23015 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:02.988972 23015 net.cpp:86] Creating Layer pool0
I0428 19:33:02.988981 23015 net.cpp:408] pool0 <- conv0
I0428 19:33:02.988992 23015 net.cpp:382] pool0 -> pool0
I0428 19:33:02.989042 23015 net.cpp:124] Setting up pool0
I0428 19:33:02.989051 23015 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:02.989058 23015 net.cpp:139] Memory required for data: 7514800
I0428 19:33:02.989063 23015 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:02.989078 23015 net.cpp:86] Creating Layer ip1
I0428 19:33:02.989085 23015 net.cpp:408] ip1 <- pool0
I0428 19:33:02.989095 23015 net.cpp:382] ip1 -> ip1
I0428 19:33:02.989454 23015 net.cpp:124] Setting up ip1
I0428 19:33:02.989465 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.989473 23015 net.cpp:139] Memory required for data: 7518800
I0428 19:33:02.989487 23015 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:02.989500 23015 net.cpp:86] Creating Layer relu1
I0428 19:33:02.989511 23015 net.cpp:408] relu1 <- ip1
I0428 19:33:02.989519 23015 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:02.989719 23015 net.cpp:124] Setting up relu1
I0428 19:33:02.989732 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.989738 23015 net.cpp:139] Memory required for data: 7522800
I0428 19:33:02.989744 23015 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:02.989756 23015 net.cpp:86] Creating Layer ip2
I0428 19:33:02.989763 23015 net.cpp:408] ip2 <- ip1
I0428 19:33:02.989775 23015 net.cpp:382] ip2 -> ip2
I0428 19:33:02.989893 23015 net.cpp:124] Setting up ip2
I0428 19:33:02.989903 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.989909 23015 net.cpp:139] Memory required for data: 7526800
I0428 19:33:02.989923 23015 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:02.989934 23015 net.cpp:86] Creating Layer relu2
I0428 19:33:02.989941 23015 net.cpp:408] relu2 <- ip2
I0428 19:33:02.989953 23015 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:02.990839 23015 net.cpp:124] Setting up relu2
I0428 19:33:02.990854 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.990861 23015 net.cpp:139] Memory required for data: 7530800
I0428 19:33:02.990867 23015 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:02.990883 23015 net.cpp:86] Creating Layer ip3
I0428 19:33:02.990891 23015 net.cpp:408] ip3 <- ip2
I0428 19:33:02.990902 23015 net.cpp:382] ip3 -> ip3
I0428 19:33:02.991086 23015 net.cpp:124] Setting up ip3
I0428 19:33:02.991098 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.991104 23015 net.cpp:139] Memory required for data: 7534800
I0428 19:33:02.991117 23015 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:02.991127 23015 net.cpp:86] Creating Layer relu3
I0428 19:33:02.991133 23015 net.cpp:408] relu3 <- ip3
I0428 19:33:02.991145 23015 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:02.991341 23015 net.cpp:124] Setting up relu3
I0428 19:33:02.991358 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.991364 23015 net.cpp:139] Memory required for data: 7538800
I0428 19:33:02.991370 23015 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:02.991381 23015 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:02.991387 23015 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:02.991396 23015 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:02.991408 23015 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:02.991458 23015 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:02.991467 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.991477 23015 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:02.991495 23015 net.cpp:139] Memory required for data: 7546800
I0428 19:33:02.991503 23015 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:02.991513 23015 net.cpp:86] Creating Layer accuracy
I0428 19:33:02.991519 23015 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:02.991528 23015 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:02.991539 23015 net.cpp:382] accuracy -> accuracy
I0428 19:33:02.991551 23015 net.cpp:124] Setting up accuracy
I0428 19:33:02.991562 23015 net.cpp:131] Top shape: (1)
I0428 19:33:02.991569 23015 net.cpp:139] Memory required for data: 7546804
I0428 19:33:02.991575 23015 layer_factory.hpp:77] Creating layer loss
I0428 19:33:02.991582 23015 net.cpp:86] Creating Layer loss
I0428 19:33:02.991590 23015 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:02.991598 23015 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:02.991606 23015 net.cpp:382] loss -> loss
I0428 19:33:02.991621 23015 layer_factory.hpp:77] Creating layer loss
I0428 19:33:02.991920 23015 net.cpp:124] Setting up loss
I0428 19:33:02.991931 23015 net.cpp:131] Top shape: (1)
I0428 19:33:02.991937 23015 net.cpp:134]     with loss weight 1
I0428 19:33:02.991948 23015 net.cpp:139] Memory required for data: 7546808
I0428 19:33:02.991955 23015 net.cpp:200] loss needs backward computation.
I0428 19:33:02.991962 23015 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:02.991969 23015 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:02.991976 23015 net.cpp:200] relu3 needs backward computation.
I0428 19:33:02.991981 23015 net.cpp:200] ip3 needs backward computation.
I0428 19:33:02.991987 23015 net.cpp:200] relu2 needs backward computation.
I0428 19:33:02.991993 23015 net.cpp:200] ip2 needs backward computation.
I0428 19:33:02.991999 23015 net.cpp:200] relu1 needs backward computation.
I0428 19:33:02.992004 23015 net.cpp:200] ip1 needs backward computation.
I0428 19:33:02.992010 23015 net.cpp:200] pool0 needs backward computation.
I0428 19:33:02.992017 23015 net.cpp:200] conv0 needs backward computation.
I0428 19:33:02.992023 23015 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:02.992030 23015 net.cpp:202] mnist does not need backward computation.
I0428 19:33:02.992036 23015 net.cpp:244] This network produces output accuracy
I0428 19:33:02.992043 23015 net.cpp:244] This network produces output loss
I0428 19:33:02.992063 23015 net.cpp:257] Network initialization done.
I0428 19:33:02.992113 23015 solver.cpp:56] Solver scaffolding done.
I0428 19:33:02.992419 23015 caffe.cpp:248] Starting Optimization
I0428 19:33:02.992426 23015 solver.cpp:273] Solving LeNet
I0428 19:33:02.992432 23015 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:02.993338 23015 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:03.000053 23015 blocking_queue.cpp:49] Waiting for data
I0428 19:33:03.069875 23022 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:03.070617 23015 solver.cpp:398]     Test net output #0: accuracy = 0.0749
I0428 19:33:03.070637 23015 solver.cpp:398]     Test net output #1: loss = 2.31283 (* 1 = 2.31283 loss)
I0428 19:33:03.074192 23015 solver.cpp:219] Iteration 0 (0 iter/s, 0.0817264s/100 iters), loss = 2.31497
I0428 19:33:03.074218 23015 solver.cpp:238]     Train net output #0: loss = 2.31497 (* 1 = 2.31497 loss)
I0428 19:33:03.074234 23015 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:03.174038 23015 solver.cpp:219] Iteration 100 (1001.91 iter/s, 0.0998093s/100 iters), loss = 1.08049
I0428 19:33:03.174064 23015 solver.cpp:238]     Train net output #0: loss = 1.08049 (* 1 = 1.08049 loss)
I0428 19:33:03.174088 23015 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:03.276157 23015 solver.cpp:219] Iteration 200 (979.589 iter/s, 0.102084s/100 iters), loss = 0.660013
I0428 19:33:03.276188 23015 solver.cpp:238]     Train net output #0: loss = 0.660013 (* 1 = 0.660013 loss)
I0428 19:33:03.276208 23015 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:03.376901 23015 solver.cpp:219] Iteration 300 (993.037 iter/s, 0.100701s/100 iters), loss = 0.538468
I0428 19:33:03.376934 23015 solver.cpp:238]     Train net output #0: loss = 0.538468 (* 1 = 0.538468 loss)
I0428 19:33:03.376960 23015 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:03.477685 23015 solver.cpp:219] Iteration 400 (992.614 iter/s, 0.100744s/100 iters), loss = 0.606025
I0428 19:33:03.477715 23015 solver.cpp:238]     Train net output #0: loss = 0.606025 (* 1 = 0.606025 loss)
I0428 19:33:03.477725 23015 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:03.574748 23015 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:03.639330 23022 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:03.641547 23015 solver.cpp:398]     Test net output #0: accuracy = 0.8125
I0428 19:33:03.641571 23015 solver.cpp:398]     Test net output #1: loss = 0.54435 (* 1 = 0.54435 loss)
I0428 19:33:03.642493 23015 solver.cpp:219] Iteration 500 (606.911 iter/s, 0.164769s/100 iters), loss = 0.70507
I0428 19:33:03.642520 23015 solver.cpp:238]     Train net output #0: loss = 0.70507 (* 1 = 0.70507 loss)
I0428 19:33:03.642530 23015 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:03.737087 23015 solver.cpp:219] Iteration 600 (1057.54 iter/s, 0.0945592s/100 iters), loss = 0.453804
I0428 19:33:03.737115 23015 solver.cpp:238]     Train net output #0: loss = 0.453804 (* 1 = 0.453804 loss)
I0428 19:33:03.737140 23015 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:03.832010 23015 solver.cpp:219] Iteration 700 (1053.9 iter/s, 0.0948859s/100 iters), loss = 0.549689
I0428 19:33:03.832036 23015 solver.cpp:238]     Train net output #0: loss = 0.549689 (* 1 = 0.549689 loss)
I0428 19:33:03.832062 23015 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:03.926177 23015 solver.cpp:219] Iteration 800 (1062.34 iter/s, 0.0941322s/100 iters), loss = 0.428643
I0428 19:33:03.926203 23015 solver.cpp:238]     Train net output #0: loss = 0.428643 (* 1 = 0.428643 loss)
I0428 19:33:03.926226 23015 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:04.020622 23015 solver.cpp:219] Iteration 900 (1059.19 iter/s, 0.0944119s/100 iters), loss = 0.240419
I0428 19:33:04.020648 23015 solver.cpp:238]     Train net output #0: loss = 0.240419 (* 1 = 0.240419 loss)
I0428 19:33:04.020671 23015 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:04.052407 23021 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:04.114408 23015 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:04.115525 23015 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:04.116508 23015 solver.cpp:311] Iteration 1000, loss = 0.423509
I0428 19:33:04.116525 23015 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:04.178522 23022 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:04.180678 23015 solver.cpp:398]     Test net output #0: accuracy = 0.8485
I0428 19:33:04.180701 23015 solver.cpp:398]     Test net output #1: loss = 0.429135 (* 1 = 0.429135 loss)
I0428 19:33:04.180708 23015 solver.cpp:316] Optimization Done.
I0428 19:33:04.180713 23015 caffe.cpp:259] Optimization Done.
