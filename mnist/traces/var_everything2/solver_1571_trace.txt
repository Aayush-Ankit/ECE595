I0428 20:32:24.096791  4095 caffe.cpp:218] Using GPUs 0
I0428 20:32:24.127799  4095 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:24.577695  4095 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1571.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:24.577821  4095 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1571.prototxt
I0428 20:32:24.578155  4095 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:24.578200  4095 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:24.578279  4095 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:24.578341  4095 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:24.578425  4095 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:24.578461  4095 net.cpp:86] Creating Layer mnist
I0428 20:32:24.578467  4095 net.cpp:382] mnist -> data
I0428 20:32:24.578485  4095 net.cpp:382] mnist -> label
I0428 20:32:24.579501  4095 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:24.581838  4095 net.cpp:124] Setting up mnist
I0428 20:32:24.581867  4095 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:24.581888  4095 net.cpp:131] Top shape: 64 (64)
I0428 20:32:24.581892  4095 net.cpp:139] Memory required for data: 200960
I0428 20:32:24.581897  4095 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:24.581910  4095 net.cpp:86] Creating Layer conv0
I0428 20:32:24.581914  4095 net.cpp:408] conv0 <- data
I0428 20:32:24.581924  4095 net.cpp:382] conv0 -> conv0
I0428 20:32:24.811388  4095 net.cpp:124] Setting up conv0
I0428 20:32:24.811414  4095 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:24.811417  4095 net.cpp:139] Memory required for data: 14946560
I0428 20:32:24.811450  4095 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:24.811461  4095 net.cpp:86] Creating Layer pool0
I0428 20:32:24.811465  4095 net.cpp:408] pool0 <- conv0
I0428 20:32:24.811486  4095 net.cpp:382] pool0 -> pool0
I0428 20:32:24.811530  4095 net.cpp:124] Setting up pool0
I0428 20:32:24.811535  4095 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:24.811538  4095 net.cpp:139] Memory required for data: 18632960
I0428 20:32:24.811540  4095 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:24.811566  4095 net.cpp:86] Creating Layer conv1
I0428 20:32:24.811569  4095 net.cpp:408] conv1 <- pool0
I0428 20:32:24.811574  4095 net.cpp:382] conv1 -> conv1
I0428 20:32:24.813933  4095 net.cpp:124] Setting up conv1
I0428 20:32:24.813949  4095 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:24.813968  4095 net.cpp:139] Memory required for data: 19042560
I0428 20:32:24.813977  4095 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:24.813984  4095 net.cpp:86] Creating Layer pool1
I0428 20:32:24.813987  4095 net.cpp:408] pool1 <- conv1
I0428 20:32:24.813992  4095 net.cpp:382] pool1 -> pool1
I0428 20:32:24.814043  4095 net.cpp:124] Setting up pool1
I0428 20:32:24.814064  4095 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:24.814066  4095 net.cpp:139] Memory required for data: 19144960
I0428 20:32:24.814069  4095 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:24.814075  4095 net.cpp:86] Creating Layer ip1
I0428 20:32:24.814079  4095 net.cpp:408] ip1 <- pool1
I0428 20:32:24.814082  4095 net.cpp:382] ip1 -> ip1
I0428 20:32:24.814311  4095 net.cpp:124] Setting up ip1
I0428 20:32:24.814317  4095 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:32:24.814321  4095 net.cpp:139] Memory required for data: 19157760
I0428 20:32:24.814327  4095 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:24.814333  4095 net.cpp:86] Creating Layer relu1
I0428 20:32:24.814337  4095 net.cpp:408] relu1 <- ip1
I0428 20:32:24.814340  4095 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:24.814513  4095 net.cpp:124] Setting up relu1
I0428 20:32:24.814522  4095 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:32:24.814524  4095 net.cpp:139] Memory required for data: 19170560
I0428 20:32:24.814527  4095 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:24.814533  4095 net.cpp:86] Creating Layer ip2
I0428 20:32:24.814537  4095 net.cpp:408] ip2 <- ip1
I0428 20:32:24.814540  4095 net.cpp:382] ip2 -> ip2
I0428 20:32:24.814643  4095 net.cpp:124] Setting up ip2
I0428 20:32:24.814651  4095 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:24.814653  4095 net.cpp:139] Memory required for data: 19173120
I0428 20:32:24.814658  4095 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:24.814663  4095 net.cpp:86] Creating Layer relu2
I0428 20:32:24.814667  4095 net.cpp:408] relu2 <- ip2
I0428 20:32:24.814671  4095 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:24.815418  4095 net.cpp:124] Setting up relu2
I0428 20:32:24.815428  4095 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:24.815448  4095 net.cpp:139] Memory required for data: 19175680
I0428 20:32:24.815450  4095 layer_factory.hpp:77] Creating layer loss
I0428 20:32:24.815456  4095 net.cpp:86] Creating Layer loss
I0428 20:32:24.815459  4095 net.cpp:408] loss <- ip2
I0428 20:32:24.815479  4095 net.cpp:408] loss <- label
I0428 20:32:24.815485  4095 net.cpp:382] loss -> loss
I0428 20:32:24.815503  4095 layer_factory.hpp:77] Creating layer loss
I0428 20:32:24.815773  4095 net.cpp:124] Setting up loss
I0428 20:32:24.815783  4095 net.cpp:131] Top shape: (1)
I0428 20:32:24.815786  4095 net.cpp:134]     with loss weight 1
I0428 20:32:24.815800  4095 net.cpp:139] Memory required for data: 19175684
I0428 20:32:24.815804  4095 net.cpp:200] loss needs backward computation.
I0428 20:32:24.815807  4095 net.cpp:200] relu2 needs backward computation.
I0428 20:32:24.815810  4095 net.cpp:200] ip2 needs backward computation.
I0428 20:32:24.815814  4095 net.cpp:200] relu1 needs backward computation.
I0428 20:32:24.815816  4095 net.cpp:200] ip1 needs backward computation.
I0428 20:32:24.815830  4095 net.cpp:200] pool1 needs backward computation.
I0428 20:32:24.815848  4095 net.cpp:200] conv1 needs backward computation.
I0428 20:32:24.815851  4095 net.cpp:200] pool0 needs backward computation.
I0428 20:32:24.815855  4095 net.cpp:200] conv0 needs backward computation.
I0428 20:32:24.815857  4095 net.cpp:202] mnist does not need backward computation.
I0428 20:32:24.815860  4095 net.cpp:244] This network produces output loss
I0428 20:32:24.815870  4095 net.cpp:257] Network initialization done.
I0428 20:32:24.816179  4095 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1571.prototxt
I0428 20:32:24.816202  4095 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:24.816315  4095 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:32:24.816407  4095 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:24.816468  4095 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:24.816479  4095 net.cpp:86] Creating Layer mnist
I0428 20:32:24.816484  4095 net.cpp:382] mnist -> data
I0428 20:32:24.816491  4095 net.cpp:382] mnist -> label
I0428 20:32:24.816578  4095 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:24.818608  4095 net.cpp:124] Setting up mnist
I0428 20:32:24.818651  4095 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:24.818656  4095 net.cpp:131] Top shape: 100 (100)
I0428 20:32:24.818660  4095 net.cpp:139] Memory required for data: 314000
I0428 20:32:24.818663  4095 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:24.818677  4095 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:24.818681  4095 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:24.818686  4095 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:24.818692  4095 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:24.818747  4095 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:24.818753  4095 net.cpp:131] Top shape: 100 (100)
I0428 20:32:24.818755  4095 net.cpp:131] Top shape: 100 (100)
I0428 20:32:24.818758  4095 net.cpp:139] Memory required for data: 314800
I0428 20:32:24.818761  4095 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:24.818770  4095 net.cpp:86] Creating Layer conv0
I0428 20:32:24.818773  4095 net.cpp:408] conv0 <- data
I0428 20:32:24.818778  4095 net.cpp:382] conv0 -> conv0
I0428 20:32:24.820613  4095 net.cpp:124] Setting up conv0
I0428 20:32:24.820642  4095 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:24.820646  4095 net.cpp:139] Memory required for data: 23354800
I0428 20:32:24.820669  4095 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:24.820675  4095 net.cpp:86] Creating Layer pool0
I0428 20:32:24.820678  4095 net.cpp:408] pool0 <- conv0
I0428 20:32:24.820683  4095 net.cpp:382] pool0 -> pool0
I0428 20:32:24.820716  4095 net.cpp:124] Setting up pool0
I0428 20:32:24.820721  4095 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:24.820724  4095 net.cpp:139] Memory required for data: 29114800
I0428 20:32:24.820726  4095 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:24.820734  4095 net.cpp:86] Creating Layer conv1
I0428 20:32:24.820737  4095 net.cpp:408] conv1 <- pool0
I0428 20:32:24.820741  4095 net.cpp:382] conv1 -> conv1
I0428 20:32:24.822904  4095 net.cpp:124] Setting up conv1
I0428 20:32:24.822949  4095 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:24.822953  4095 net.cpp:139] Memory required for data: 29754800
I0428 20:32:24.822978  4095 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:24.822985  4095 net.cpp:86] Creating Layer pool1
I0428 20:32:24.822990  4095 net.cpp:408] pool1 <- conv1
I0428 20:32:24.822995  4095 net.cpp:382] pool1 -> pool1
I0428 20:32:24.823035  4095 net.cpp:124] Setting up pool1
I0428 20:32:24.823042  4095 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:24.823055  4095 net.cpp:139] Memory required for data: 29914800
I0428 20:32:24.823058  4095 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:24.823065  4095 net.cpp:86] Creating Layer ip1
I0428 20:32:24.823068  4095 net.cpp:408] ip1 <- pool1
I0428 20:32:24.823073  4095 net.cpp:382] ip1 -> ip1
I0428 20:32:24.823313  4095 net.cpp:124] Setting up ip1
I0428 20:32:24.823333  4095 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:32:24.823336  4095 net.cpp:139] Memory required for data: 29934800
I0428 20:32:24.823357  4095 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:24.823362  4095 net.cpp:86] Creating Layer relu1
I0428 20:32:24.823365  4095 net.cpp:408] relu1 <- ip1
I0428 20:32:24.823369  4095 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:24.823524  4095 net.cpp:124] Setting up relu1
I0428 20:32:24.823532  4095 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:32:24.823535  4095 net.cpp:139] Memory required for data: 29954800
I0428 20:32:24.823539  4095 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:24.823545  4095 net.cpp:86] Creating Layer ip2
I0428 20:32:24.823549  4095 net.cpp:408] ip2 <- ip1
I0428 20:32:24.823554  4095 net.cpp:382] ip2 -> ip2
I0428 20:32:24.823662  4095 net.cpp:124] Setting up ip2
I0428 20:32:24.823670  4095 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:24.823673  4095 net.cpp:139] Memory required for data: 29958800
I0428 20:32:24.823678  4095 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:24.823683  4095 net.cpp:86] Creating Layer relu2
I0428 20:32:24.823686  4095 net.cpp:408] relu2 <- ip2
I0428 20:32:24.823690  4095 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:24.823899  4095 net.cpp:124] Setting up relu2
I0428 20:32:24.823906  4095 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:24.823909  4095 net.cpp:139] Memory required for data: 29962800
I0428 20:32:24.823912  4095 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:32:24.823920  4095 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:32:24.823923  4095 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:32:24.823927  4095 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:32:24.823945  4095 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:32:24.823984  4095 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:32:24.823990  4095 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:24.823995  4095 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:24.823998  4095 net.cpp:139] Memory required for data: 29970800
I0428 20:32:24.824002  4095 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:24.824007  4095 net.cpp:86] Creating Layer accuracy
I0428 20:32:24.824009  4095 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:32:24.824012  4095 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:24.824017  4095 net.cpp:382] accuracy -> accuracy
I0428 20:32:24.824023  4095 net.cpp:124] Setting up accuracy
I0428 20:32:24.824026  4095 net.cpp:131] Top shape: (1)
I0428 20:32:24.824029  4095 net.cpp:139] Memory required for data: 29970804
I0428 20:32:24.824031  4095 layer_factory.hpp:77] Creating layer loss
I0428 20:32:24.824046  4095 net.cpp:86] Creating Layer loss
I0428 20:32:24.824049  4095 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:32:24.824053  4095 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:24.824056  4095 net.cpp:382] loss -> loss
I0428 20:32:24.824061  4095 layer_factory.hpp:77] Creating layer loss
I0428 20:32:24.824347  4095 net.cpp:124] Setting up loss
I0428 20:32:24.824357  4095 net.cpp:131] Top shape: (1)
I0428 20:32:24.824359  4095 net.cpp:134]     with loss weight 1
I0428 20:32:24.824365  4095 net.cpp:139] Memory required for data: 29970808
I0428 20:32:24.824368  4095 net.cpp:200] loss needs backward computation.
I0428 20:32:24.824373  4095 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:24.824376  4095 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:32:24.824380  4095 net.cpp:200] relu2 needs backward computation.
I0428 20:32:24.824383  4095 net.cpp:200] ip2 needs backward computation.
I0428 20:32:24.824386  4095 net.cpp:200] relu1 needs backward computation.
I0428 20:32:24.824389  4095 net.cpp:200] ip1 needs backward computation.
I0428 20:32:24.824393  4095 net.cpp:200] pool1 needs backward computation.
I0428 20:32:24.824395  4095 net.cpp:200] conv1 needs backward computation.
I0428 20:32:24.824398  4095 net.cpp:200] pool0 needs backward computation.
I0428 20:32:24.824401  4095 net.cpp:200] conv0 needs backward computation.
I0428 20:32:24.824405  4095 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:24.824409  4095 net.cpp:202] mnist does not need backward computation.
I0428 20:32:24.824412  4095 net.cpp:244] This network produces output accuracy
I0428 20:32:24.824415  4095 net.cpp:244] This network produces output loss
I0428 20:32:24.824425  4095 net.cpp:257] Network initialization done.
I0428 20:32:24.824478  4095 solver.cpp:56] Solver scaffolding done.
I0428 20:32:24.824795  4095 caffe.cpp:248] Starting Optimization
I0428 20:32:24.824800  4095 solver.cpp:273] Solving LeNet
I0428 20:32:24.824803  4095 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:24.825714  4095 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:24.848021  4095 blocking_queue.cpp:49] Waiting for data
I0428 20:32:24.921540  4102 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:24.922997  4095 solver.cpp:398]     Test net output #0: accuracy = 0.1224
I0428 20:32:24.923030  4095 solver.cpp:398]     Test net output #1: loss = 2.28098 (* 1 = 2.28098 loss)
I0428 20:32:24.927578  4095 solver.cpp:219] Iteration 0 (0 iter/s, 0.102712s/100 iters), loss = 2.27929
I0428 20:32:24.927616  4095 solver.cpp:238]     Train net output #0: loss = 2.27929 (* 1 = 2.27929 loss)
I0428 20:32:24.927626  4095 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:25.139819  4095 solver.cpp:219] Iteration 100 (471.264 iter/s, 0.212195s/100 iters), loss = 0.21298
I0428 20:32:25.139860  4095 solver.cpp:238]     Train net output #0: loss = 0.21298 (* 1 = 0.21298 loss)
I0428 20:32:25.139871  4095 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:25.352953  4095 solver.cpp:219] Iteration 200 (469.316 iter/s, 0.213076s/100 iters), loss = 0.146696
I0428 20:32:25.352993  4095 solver.cpp:238]     Train net output #0: loss = 0.146696 (* 1 = 0.146696 loss)
I0428 20:32:25.353003  4095 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:25.565742  4095 solver.cpp:219] Iteration 300 (470.075 iter/s, 0.212732s/100 iters), loss = 0.206099
I0428 20:32:25.565784  4095 solver.cpp:238]     Train net output #0: loss = 0.206099 (* 1 = 0.206099 loss)
I0428 20:32:25.565794  4095 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:25.778338  4095 solver.cpp:219] Iteration 400 (470.508 iter/s, 0.212536s/100 iters), loss = 0.0847727
I0428 20:32:25.778390  4095 solver.cpp:238]     Train net output #0: loss = 0.0847726 (* 1 = 0.0847726 loss)
I0428 20:32:25.778403  4095 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:25.997345  4095 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:26.098934  4102 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:26.102430  4095 solver.cpp:398]     Test net output #0: accuracy = 0.9718
I0428 20:32:26.102458  4095 solver.cpp:398]     Test net output #1: loss = 0.0887212 (* 1 = 0.0887212 loss)
I0428 20:32:26.104414  4095 solver.cpp:219] Iteration 500 (306.74 iter/s, 0.326009s/100 iters), loss = 0.127368
I0428 20:32:26.104444  4095 solver.cpp:238]     Train net output #0: loss = 0.127368 (* 1 = 0.127368 loss)
I0428 20:32:26.104451  4095 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:26.307968  4095 solver.cpp:219] Iteration 600 (491.379 iter/s, 0.203509s/100 iters), loss = 0.0960099
I0428 20:32:26.308002  4095 solver.cpp:238]     Train net output #0: loss = 0.0960098 (* 1 = 0.0960098 loss)
I0428 20:32:26.308012  4095 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:26.529595  4095 solver.cpp:219] Iteration 700 (451.322 iter/s, 0.221571s/100 iters), loss = 0.14354
I0428 20:32:26.529649  4095 solver.cpp:238]     Train net output #0: loss = 0.14354 (* 1 = 0.14354 loss)
I0428 20:32:26.529662  4095 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:26.758510  4095 solver.cpp:219] Iteration 800 (436.978 iter/s, 0.228845s/100 iters), loss = 0.162456
I0428 20:32:26.758563  4095 solver.cpp:238]     Train net output #0: loss = 0.162456 (* 1 = 0.162456 loss)
I0428 20:32:26.758577  4095 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:26.986572  4095 solver.cpp:219] Iteration 900 (438.615 iter/s, 0.227991s/100 iters), loss = 0.131064
I0428 20:32:26.986626  4095 solver.cpp:238]     Train net output #0: loss = 0.131064 (* 1 = 0.131064 loss)
I0428 20:32:26.986639  4095 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:27.062155  4101 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:27.211947  4095 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:27.215565  4095 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:27.217772  4095 solver.cpp:311] Iteration 1000, loss = 0.138459
I0428 20:32:27.217803  4095 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:27.319382  4102 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:27.321851  4095 solver.cpp:398]     Test net output #0: accuracy = 0.9769
I0428 20:32:27.321877  4095 solver.cpp:398]     Test net output #1: loss = 0.0679098 (* 1 = 0.0679098 loss)
I0428 20:32:27.321883  4095 solver.cpp:316] Optimization Done.
I0428 20:32:27.321888  4095 caffe.cpp:259] Optimization Done.
