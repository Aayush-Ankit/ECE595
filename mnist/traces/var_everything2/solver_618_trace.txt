I0428 19:50:54.572383 27151 caffe.cpp:218] Using GPUs 0
I0428 19:50:54.604486 27151 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:55.110324 27151 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test618.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:55.110453 27151 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test618.prototxt
I0428 19:50:55.110821 27151 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:55.110839 27151 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:55.110934 27151 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:55.111006 27151 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:55.111093 27151 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:55.111114 27151 net.cpp:86] Creating Layer mnist
I0428 19:50:55.111121 27151 net.cpp:382] mnist -> data
I0428 19:50:55.111140 27151 net.cpp:382] mnist -> label
I0428 19:50:55.112105 27151 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:55.114490 27151 net.cpp:124] Setting up mnist
I0428 19:50:55.114522 27151 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:55.114528 27151 net.cpp:131] Top shape: 64 (64)
I0428 19:50:55.114531 27151 net.cpp:139] Memory required for data: 200960
I0428 19:50:55.114537 27151 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:55.114553 27151 net.cpp:86] Creating Layer conv0
I0428 19:50:55.114573 27151 net.cpp:408] conv0 <- data
I0428 19:50:55.114583 27151 net.cpp:382] conv0 -> conv0
I0428 19:50:55.349375 27151 net.cpp:124] Setting up conv0
I0428 19:50:55.349416 27151 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:55.349419 27151 net.cpp:139] Memory required for data: 938240
I0428 19:50:55.349434 27151 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:55.349447 27151 net.cpp:86] Creating Layer pool0
I0428 19:50:55.349452 27151 net.cpp:408] pool0 <- conv0
I0428 19:50:55.349472 27151 net.cpp:382] pool0 -> pool0
I0428 19:50:55.349521 27151 net.cpp:124] Setting up pool0
I0428 19:50:55.349531 27151 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:55.349534 27151 net.cpp:139] Memory required for data: 1122560
I0428 19:50:55.349537 27151 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:55.349548 27151 net.cpp:86] Creating Layer conv1
I0428 19:50:55.349551 27151 net.cpp:408] conv1 <- pool0
I0428 19:50:55.349556 27151 net.cpp:382] conv1 -> conv1
I0428 19:50:55.352391 27151 net.cpp:124] Setting up conv1
I0428 19:50:55.352419 27151 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:55.352423 27151 net.cpp:139] Memory required for data: 1286400
I0428 19:50:55.352432 27151 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:55.352440 27151 net.cpp:86] Creating Layer pool1
I0428 19:50:55.352444 27151 net.cpp:408] pool1 <- conv1
I0428 19:50:55.352448 27151 net.cpp:382] pool1 -> pool1
I0428 19:50:55.352517 27151 net.cpp:124] Setting up pool1
I0428 19:50:55.352540 27151 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:55.352543 27151 net.cpp:139] Memory required for data: 1327360
I0428 19:50:55.352546 27151 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:55.352553 27151 net.cpp:86] Creating Layer ip1
I0428 19:50:55.352556 27151 net.cpp:408] ip1 <- pool1
I0428 19:50:55.352562 27151 net.cpp:382] ip1 -> ip1
I0428 19:50:55.353584 27151 net.cpp:124] Setting up ip1
I0428 19:50:55.353610 27151 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:55.353615 27151 net.cpp:139] Memory required for data: 1340160
I0428 19:50:55.353637 27151 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:55.353644 27151 net.cpp:86] Creating Layer relu1
I0428 19:50:55.353648 27151 net.cpp:408] relu1 <- ip1
I0428 19:50:55.353653 27151 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:55.353839 27151 net.cpp:124] Setting up relu1
I0428 19:50:55.353849 27151 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:55.353868 27151 net.cpp:139] Memory required for data: 1352960
I0428 19:50:55.353870 27151 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:55.353878 27151 net.cpp:86] Creating Layer ip2
I0428 19:50:55.353883 27151 net.cpp:408] ip2 <- ip1
I0428 19:50:55.353886 27151 net.cpp:382] ip2 -> ip2
I0428 19:50:55.354012 27151 net.cpp:124] Setting up ip2
I0428 19:50:55.354019 27151 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:55.354022 27151 net.cpp:139] Memory required for data: 1359360
I0428 19:50:55.354027 27151 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:55.354033 27151 net.cpp:86] Creating Layer relu2
I0428 19:50:55.354037 27151 net.cpp:408] relu2 <- ip2
I0428 19:50:55.354041 27151 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:55.354807 27151 net.cpp:124] Setting up relu2
I0428 19:50:55.354820 27151 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:55.354840 27151 net.cpp:139] Memory required for data: 1365760
I0428 19:50:55.354842 27151 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:55.354866 27151 net.cpp:86] Creating Layer ip3
I0428 19:50:55.354869 27151 net.cpp:408] ip3 <- ip2
I0428 19:50:55.354874 27151 net.cpp:382] ip3 -> ip3
I0428 19:50:55.354977 27151 net.cpp:124] Setting up ip3
I0428 19:50:55.354986 27151 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:55.354990 27151 net.cpp:139] Memory required for data: 1368320
I0428 19:50:55.354997 27151 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:55.355005 27151 net.cpp:86] Creating Layer relu3
I0428 19:50:55.355008 27151 net.cpp:408] relu3 <- ip3
I0428 19:50:55.355012 27151 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:55.355219 27151 net.cpp:124] Setting up relu3
I0428 19:50:55.355228 27151 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:55.355232 27151 net.cpp:139] Memory required for data: 1370880
I0428 19:50:55.355234 27151 layer_factory.hpp:77] Creating layer loss
I0428 19:50:55.355242 27151 net.cpp:86] Creating Layer loss
I0428 19:50:55.355245 27151 net.cpp:408] loss <- ip3
I0428 19:50:55.355249 27151 net.cpp:408] loss <- label
I0428 19:50:55.355254 27151 net.cpp:382] loss -> loss
I0428 19:50:55.355273 27151 layer_factory.hpp:77] Creating layer loss
I0428 19:50:55.355525 27151 net.cpp:124] Setting up loss
I0428 19:50:55.355535 27151 net.cpp:131] Top shape: (1)
I0428 19:50:55.355536 27151 net.cpp:134]     with loss weight 1
I0428 19:50:55.355550 27151 net.cpp:139] Memory required for data: 1370884
I0428 19:50:55.355553 27151 net.cpp:200] loss needs backward computation.
I0428 19:50:55.355557 27151 net.cpp:200] relu3 needs backward computation.
I0428 19:50:55.355559 27151 net.cpp:200] ip3 needs backward computation.
I0428 19:50:55.355562 27151 net.cpp:200] relu2 needs backward computation.
I0428 19:50:55.355566 27151 net.cpp:200] ip2 needs backward computation.
I0428 19:50:55.355567 27151 net.cpp:200] relu1 needs backward computation.
I0428 19:50:55.355571 27151 net.cpp:200] ip1 needs backward computation.
I0428 19:50:55.355589 27151 net.cpp:200] pool1 needs backward computation.
I0428 19:50:55.355593 27151 net.cpp:200] conv1 needs backward computation.
I0428 19:50:55.355595 27151 net.cpp:200] pool0 needs backward computation.
I0428 19:50:55.355598 27151 net.cpp:200] conv0 needs backward computation.
I0428 19:50:55.355602 27151 net.cpp:202] mnist does not need backward computation.
I0428 19:50:55.355604 27151 net.cpp:244] This network produces output loss
I0428 19:50:55.355617 27151 net.cpp:257] Network initialization done.
I0428 19:50:55.355976 27151 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test618.prototxt
I0428 19:50:55.356019 27151 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:55.356158 27151 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:55.356242 27151 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:55.356290 27151 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:55.356302 27151 net.cpp:86] Creating Layer mnist
I0428 19:50:55.356308 27151 net.cpp:382] mnist -> data
I0428 19:50:55.356317 27151 net.cpp:382] mnist -> label
I0428 19:50:55.356420 27151 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:55.358491 27151 net.cpp:124] Setting up mnist
I0428 19:50:55.358505 27151 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:55.358525 27151 net.cpp:131] Top shape: 100 (100)
I0428 19:50:55.358527 27151 net.cpp:139] Memory required for data: 314000
I0428 19:50:55.358531 27151 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:55.358541 27151 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:55.358544 27151 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:55.358551 27151 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:55.358557 27151 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:55.358649 27151 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:55.358656 27151 net.cpp:131] Top shape: 100 (100)
I0428 19:50:55.358660 27151 net.cpp:131] Top shape: 100 (100)
I0428 19:50:55.358664 27151 net.cpp:139] Memory required for data: 314800
I0428 19:50:55.358666 27151 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:55.358677 27151 net.cpp:86] Creating Layer conv0
I0428 19:50:55.358680 27151 net.cpp:408] conv0 <- data
I0428 19:50:55.358685 27151 net.cpp:382] conv0 -> conv0
I0428 19:50:55.360394 27151 net.cpp:124] Setting up conv0
I0428 19:50:55.360406 27151 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:55.360425 27151 net.cpp:139] Memory required for data: 1466800
I0428 19:50:55.360433 27151 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:55.360441 27151 net.cpp:86] Creating Layer pool0
I0428 19:50:55.360445 27151 net.cpp:408] pool0 <- conv0
I0428 19:50:55.360450 27151 net.cpp:382] pool0 -> pool0
I0428 19:50:55.360501 27151 net.cpp:124] Setting up pool0
I0428 19:50:55.360507 27151 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:55.360508 27151 net.cpp:139] Memory required for data: 1754800
I0428 19:50:55.360512 27151 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:55.360519 27151 net.cpp:86] Creating Layer conv1
I0428 19:50:55.360522 27151 net.cpp:408] conv1 <- pool0
I0428 19:50:55.360528 27151 net.cpp:382] conv1 -> conv1
I0428 19:50:55.362768 27151 net.cpp:124] Setting up conv1
I0428 19:50:55.362797 27151 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:55.362817 27151 net.cpp:139] Memory required for data: 2010800
I0428 19:50:55.362843 27151 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:55.362848 27151 net.cpp:86] Creating Layer pool1
I0428 19:50:55.362853 27151 net.cpp:408] pool1 <- conv1
I0428 19:50:55.362857 27151 net.cpp:382] pool1 -> pool1
I0428 19:50:55.362898 27151 net.cpp:124] Setting up pool1
I0428 19:50:55.362905 27151 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:55.362908 27151 net.cpp:139] Memory required for data: 2074800
I0428 19:50:55.362911 27151 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:55.362916 27151 net.cpp:86] Creating Layer ip1
I0428 19:50:55.362920 27151 net.cpp:408] ip1 <- pool1
I0428 19:50:55.362926 27151 net.cpp:382] ip1 -> ip1
I0428 19:50:55.363122 27151 net.cpp:124] Setting up ip1
I0428 19:50:55.363147 27151 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:55.363158 27151 net.cpp:139] Memory required for data: 2094800
I0428 19:50:55.363165 27151 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:55.363173 27151 net.cpp:86] Creating Layer relu1
I0428 19:50:55.363175 27151 net.cpp:408] relu1 <- ip1
I0428 19:50:55.363179 27151 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:55.363391 27151 net.cpp:124] Setting up relu1
I0428 19:50:55.363400 27151 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:55.363404 27151 net.cpp:139] Memory required for data: 2114800
I0428 19:50:55.363407 27151 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:55.363415 27151 net.cpp:86] Creating Layer ip2
I0428 19:50:55.363418 27151 net.cpp:408] ip2 <- ip1
I0428 19:50:55.363423 27151 net.cpp:382] ip2 -> ip2
I0428 19:50:55.363561 27151 net.cpp:124] Setting up ip2
I0428 19:50:55.363569 27151 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:55.363571 27151 net.cpp:139] Memory required for data: 2124800
I0428 19:50:55.363577 27151 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:55.363582 27151 net.cpp:86] Creating Layer relu2
I0428 19:50:55.363585 27151 net.cpp:408] relu2 <- ip2
I0428 19:50:55.363590 27151 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:55.363745 27151 net.cpp:124] Setting up relu2
I0428 19:50:55.363754 27151 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:55.363771 27151 net.cpp:139] Memory required for data: 2134800
I0428 19:50:55.363775 27151 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:55.363782 27151 net.cpp:86] Creating Layer ip3
I0428 19:50:55.363785 27151 net.cpp:408] ip3 <- ip2
I0428 19:50:55.363791 27151 net.cpp:382] ip3 -> ip3
I0428 19:50:55.363919 27151 net.cpp:124] Setting up ip3
I0428 19:50:55.363942 27151 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:55.363946 27151 net.cpp:139] Memory required for data: 2138800
I0428 19:50:55.363955 27151 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:55.363958 27151 net.cpp:86] Creating Layer relu3
I0428 19:50:55.363962 27151 net.cpp:408] relu3 <- ip3
I0428 19:50:55.363967 27151 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:55.364900 27151 net.cpp:124] Setting up relu3
I0428 19:50:55.364912 27151 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:55.364931 27151 net.cpp:139] Memory required for data: 2142800
I0428 19:50:55.364935 27151 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:55.364940 27151 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:55.364944 27151 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:55.364950 27151 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:55.364971 27151 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:55.365010 27151 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:55.365017 27151 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:55.365021 27151 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:55.365025 27151 net.cpp:139] Memory required for data: 2150800
I0428 19:50:55.365027 27151 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:55.365032 27151 net.cpp:86] Creating Layer accuracy
I0428 19:50:55.365036 27151 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:55.365041 27151 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:55.365044 27151 net.cpp:382] accuracy -> accuracy
I0428 19:50:55.365051 27151 net.cpp:124] Setting up accuracy
I0428 19:50:55.365056 27151 net.cpp:131] Top shape: (1)
I0428 19:50:55.365058 27151 net.cpp:139] Memory required for data: 2150804
I0428 19:50:55.365061 27151 layer_factory.hpp:77] Creating layer loss
I0428 19:50:55.365067 27151 net.cpp:86] Creating Layer loss
I0428 19:50:55.365070 27151 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:55.365074 27151 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:55.365078 27151 net.cpp:382] loss -> loss
I0428 19:50:55.365084 27151 layer_factory.hpp:77] Creating layer loss
I0428 19:50:55.365352 27151 net.cpp:124] Setting up loss
I0428 19:50:55.365361 27151 net.cpp:131] Top shape: (1)
I0428 19:50:55.365365 27151 net.cpp:134]     with loss weight 1
I0428 19:50:55.365370 27151 net.cpp:139] Memory required for data: 2150808
I0428 19:50:55.365383 27151 net.cpp:200] loss needs backward computation.
I0428 19:50:55.365387 27151 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:55.365391 27151 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:55.365394 27151 net.cpp:200] relu3 needs backward computation.
I0428 19:50:55.365397 27151 net.cpp:200] ip3 needs backward computation.
I0428 19:50:55.365401 27151 net.cpp:200] relu2 needs backward computation.
I0428 19:50:55.365403 27151 net.cpp:200] ip2 needs backward computation.
I0428 19:50:55.365406 27151 net.cpp:200] relu1 needs backward computation.
I0428 19:50:55.365408 27151 net.cpp:200] ip1 needs backward computation.
I0428 19:50:55.365411 27151 net.cpp:200] pool1 needs backward computation.
I0428 19:50:55.365414 27151 net.cpp:200] conv1 needs backward computation.
I0428 19:50:55.365418 27151 net.cpp:200] pool0 needs backward computation.
I0428 19:50:55.365422 27151 net.cpp:200] conv0 needs backward computation.
I0428 19:50:55.365425 27151 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:55.365429 27151 net.cpp:202] mnist does not need backward computation.
I0428 19:50:55.365432 27151 net.cpp:244] This network produces output accuracy
I0428 19:50:55.365442 27151 net.cpp:244] This network produces output loss
I0428 19:50:55.365453 27151 net.cpp:257] Network initialization done.
I0428 19:50:55.365496 27151 solver.cpp:56] Solver scaffolding done.
I0428 19:50:55.365882 27151 caffe.cpp:248] Starting Optimization
I0428 19:50:55.365888 27151 solver.cpp:273] Solving LeNet
I0428 19:50:55.365891 27151 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:55.366123 27151 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:55.369827 27151 blocking_queue.cpp:49] Waiting for data
I0428 19:50:55.440338 27158 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:55.440912 27151 solver.cpp:398]     Test net output #0: accuracy = 0.0906
I0428 19:50:55.440946 27151 solver.cpp:398]     Test net output #1: loss = 2.32524 (* 1 = 2.32524 loss)
I0428 19:50:55.442864 27151 solver.cpp:219] Iteration 0 (-3.04748e-31 iter/s, 0.0769157s/100 iters), loss = 2.32995
I0428 19:50:55.442905 27151 solver.cpp:238]     Train net output #0: loss = 2.32995 (* 1 = 2.32995 loss)
I0428 19:50:55.442917 27151 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:55.520607 27151 solver.cpp:219] Iteration 100 (1287.17 iter/s, 0.0776899s/100 iters), loss = 1.0812
I0428 19:50:55.520647 27151 solver.cpp:238]     Train net output #0: loss = 1.0812 (* 1 = 1.0812 loss)
I0428 19:50:55.520653 27151 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:55.598495 27151 solver.cpp:219] Iteration 200 (1284.48 iter/s, 0.0778527s/100 iters), loss = 0.61454
I0428 19:50:55.598536 27151 solver.cpp:238]     Train net output #0: loss = 0.61454 (* 1 = 0.61454 loss)
I0428 19:50:55.598543 27151 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:55.676431 27151 solver.cpp:219] Iteration 300 (1283.92 iter/s, 0.0778865s/100 iters), loss = 0.520512
I0428 19:50:55.676470 27151 solver.cpp:238]     Train net output #0: loss = 0.520512 (* 1 = 0.520512 loss)
I0428 19:50:55.676475 27151 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:55.752418 27151 solver.cpp:219] Iteration 400 (1316.57 iter/s, 0.0759551s/100 iters), loss = 0.825649
I0428 19:50:55.752455 27151 solver.cpp:238]     Train net output #0: loss = 0.825649 (* 1 = 0.825649 loss)
I0428 19:50:55.752461 27151 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:55.829505 27151 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:55.882966 27158 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:55.883491 27151 solver.cpp:398]     Test net output #0: accuracy = 0.7725
I0428 19:50:55.883525 27151 solver.cpp:398]     Test net output #1: loss = 0.582722 (* 1 = 0.582722 loss)
I0428 19:50:55.884300 27151 solver.cpp:219] Iteration 500 (758.442 iter/s, 0.131849s/100 iters), loss = 0.735
I0428 19:50:55.884337 27151 solver.cpp:238]     Train net output #0: loss = 0.735 (* 1 = 0.735 loss)
I0428 19:50:55.884359 27151 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:55.962285 27151 solver.cpp:219] Iteration 600 (1282.84 iter/s, 0.0779522s/100 iters), loss = 0.483152
I0428 19:50:55.962307 27151 solver.cpp:238]     Train net output #0: loss = 0.483152 (* 1 = 0.483152 loss)
I0428 19:50:55.962313 27151 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:56.038707 27151 solver.cpp:219] Iteration 700 (1309.08 iter/s, 0.0763895s/100 iters), loss = 0.622643
I0428 19:50:56.038729 27151 solver.cpp:238]     Train net output #0: loss = 0.622643 (* 1 = 0.622643 loss)
I0428 19:50:56.038734 27151 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:56.115156 27151 solver.cpp:219] Iteration 800 (1308.59 iter/s, 0.0764181s/100 iters), loss = 0.637718
I0428 19:50:56.115195 27151 solver.cpp:238]     Train net output #0: loss = 0.637718 (* 1 = 0.637718 loss)
I0428 19:50:56.115200 27151 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:56.188634 27151 solver.cpp:219] Iteration 900 (1361.52 iter/s, 0.0734474s/100 iters), loss = 0.29104
I0428 19:50:56.188688 27151 solver.cpp:238]     Train net output #0: loss = 0.29104 (* 1 = 0.29104 loss)
I0428 19:50:56.188694 27151 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:56.213348 27157 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:56.261283 27151 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:56.262241 27151 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:56.262809 27151 solver.cpp:311] Iteration 1000, loss = 0.409789
I0428 19:50:56.262838 27151 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:56.307931 27158 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:56.308452 27151 solver.cpp:398]     Test net output #0: accuracy = 0.7834
I0428 19:50:56.308485 27151 solver.cpp:398]     Test net output #1: loss = 0.538949 (* 1 = 0.538949 loss)
I0428 19:50:56.308490 27151 solver.cpp:316] Optimization Done.
I0428 19:50:56.308492 27151 caffe.cpp:259] Optimization Done.
