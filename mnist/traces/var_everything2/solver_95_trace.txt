I0428 19:30:34.713853 22331 caffe.cpp:218] Using GPUs 0
I0428 19:30:34.752954 22331 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:35.264605 22331 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test95.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:35.264742 22331 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test95.prototxt
I0428 19:30:35.265108 22331 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:35.265126 22331 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:35.265213 22331 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:35.265286 22331 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:35.265382 22331 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:35.265403 22331 net.cpp:86] Creating Layer mnist
I0428 19:30:35.265413 22331 net.cpp:382] mnist -> data
I0428 19:30:35.265434 22331 net.cpp:382] mnist -> label
I0428 19:30:35.266484 22331 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:35.268869 22331 net.cpp:124] Setting up mnist
I0428 19:30:35.268887 22331 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:35.268894 22331 net.cpp:131] Top shape: 64 (64)
I0428 19:30:35.268898 22331 net.cpp:139] Memory required for data: 200960
I0428 19:30:35.268904 22331 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:35.268920 22331 net.cpp:86] Creating Layer conv0
I0428 19:30:35.268930 22331 net.cpp:408] conv0 <- data
I0428 19:30:35.268942 22331 net.cpp:382] conv0 -> conv0
I0428 19:30:35.554996 22331 net.cpp:124] Setting up conv0
I0428 19:30:35.555029 22331 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:35.555040 22331 net.cpp:139] Memory required for data: 938240
I0428 19:30:35.555058 22331 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:35.555073 22331 net.cpp:86] Creating Layer pool0
I0428 19:30:35.555096 22331 net.cpp:408] pool0 <- conv0
I0428 19:30:35.555104 22331 net.cpp:382] pool0 -> pool0
I0428 19:30:35.555166 22331 net.cpp:124] Setting up pool0
I0428 19:30:35.555174 22331 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:35.555178 22331 net.cpp:139] Memory required for data: 1122560
I0428 19:30:35.555182 22331 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:35.555192 22331 net.cpp:86] Creating Layer ip1
I0428 19:30:35.555196 22331 net.cpp:408] ip1 <- pool0
I0428 19:30:35.555202 22331 net.cpp:382] ip1 -> ip1
I0428 19:30:35.556324 22331 net.cpp:124] Setting up ip1
I0428 19:30:35.556340 22331 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:35.556345 22331 net.cpp:139] Memory required for data: 1125120
I0428 19:30:35.556355 22331 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:35.556363 22331 net.cpp:86] Creating Layer relu1
I0428 19:30:35.556367 22331 net.cpp:408] relu1 <- ip1
I0428 19:30:35.556373 22331 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:35.556568 22331 net.cpp:124] Setting up relu1
I0428 19:30:35.556579 22331 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:35.556583 22331 net.cpp:139] Memory required for data: 1127680
I0428 19:30:35.556587 22331 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:35.556594 22331 net.cpp:86] Creating Layer ip2
I0428 19:30:35.556598 22331 net.cpp:408] ip2 <- ip1
I0428 19:30:35.556604 22331 net.cpp:382] ip2 -> ip2
I0428 19:30:35.556713 22331 net.cpp:124] Setting up ip2
I0428 19:30:35.556722 22331 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:35.556725 22331 net.cpp:139] Memory required for data: 1134080
I0428 19:30:35.556735 22331 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:35.556740 22331 net.cpp:86] Creating Layer relu2
I0428 19:30:35.556744 22331 net.cpp:408] relu2 <- ip2
I0428 19:30:35.556749 22331 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:35.557608 22331 net.cpp:124] Setting up relu2
I0428 19:30:35.557623 22331 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:30:35.557627 22331 net.cpp:139] Memory required for data: 1140480
I0428 19:30:35.557632 22331 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:35.557641 22331 net.cpp:86] Creating Layer ip3
I0428 19:30:35.557644 22331 net.cpp:408] ip3 <- ip2
I0428 19:30:35.557651 22331 net.cpp:382] ip3 -> ip3
I0428 19:30:35.557762 22331 net.cpp:124] Setting up ip3
I0428 19:30:35.557771 22331 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:35.557786 22331 net.cpp:139] Memory required for data: 1143040
I0428 19:30:35.557793 22331 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:35.557801 22331 net.cpp:86] Creating Layer relu3
I0428 19:30:35.557804 22331 net.cpp:408] relu3 <- ip3
I0428 19:30:35.557809 22331 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:35.557981 22331 net.cpp:124] Setting up relu3
I0428 19:30:35.557989 22331 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:35.557993 22331 net.cpp:139] Memory required for data: 1145600
I0428 19:30:35.557997 22331 layer_factory.hpp:77] Creating layer loss
I0428 19:30:35.558004 22331 net.cpp:86] Creating Layer loss
I0428 19:30:35.558008 22331 net.cpp:408] loss <- ip3
I0428 19:30:35.558013 22331 net.cpp:408] loss <- label
I0428 19:30:35.558019 22331 net.cpp:382] loss -> loss
I0428 19:30:35.558039 22331 layer_factory.hpp:77] Creating layer loss
I0428 19:30:35.558297 22331 net.cpp:124] Setting up loss
I0428 19:30:35.558308 22331 net.cpp:131] Top shape: (1)
I0428 19:30:35.558312 22331 net.cpp:134]     with loss weight 1
I0428 19:30:35.558327 22331 net.cpp:139] Memory required for data: 1145604
I0428 19:30:35.558331 22331 net.cpp:200] loss needs backward computation.
I0428 19:30:35.558336 22331 net.cpp:200] relu3 needs backward computation.
I0428 19:30:35.558339 22331 net.cpp:200] ip3 needs backward computation.
I0428 19:30:35.558342 22331 net.cpp:200] relu2 needs backward computation.
I0428 19:30:35.558346 22331 net.cpp:200] ip2 needs backward computation.
I0428 19:30:35.558349 22331 net.cpp:200] relu1 needs backward computation.
I0428 19:30:35.558352 22331 net.cpp:200] ip1 needs backward computation.
I0428 19:30:35.558368 22331 net.cpp:200] pool0 needs backward computation.
I0428 19:30:35.558372 22331 net.cpp:200] conv0 needs backward computation.
I0428 19:30:35.558377 22331 net.cpp:202] mnist does not need backward computation.
I0428 19:30:35.558379 22331 net.cpp:244] This network produces output loss
I0428 19:30:35.558389 22331 net.cpp:257] Network initialization done.
I0428 19:30:35.558718 22331 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test95.prototxt
I0428 19:30:35.558749 22331 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:35.558843 22331 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:35.558917 22331 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:35.558967 22331 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:35.558981 22331 net.cpp:86] Creating Layer mnist
I0428 19:30:35.558987 22331 net.cpp:382] mnist -> data
I0428 19:30:35.558996 22331 net.cpp:382] mnist -> label
I0428 19:30:35.559093 22331 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:35.561281 22331 net.cpp:124] Setting up mnist
I0428 19:30:35.561297 22331 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:35.561305 22331 net.cpp:131] Top shape: 100 (100)
I0428 19:30:35.561308 22331 net.cpp:139] Memory required for data: 314000
I0428 19:30:35.561312 22331 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:35.561326 22331 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:35.561331 22331 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:35.561336 22331 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:35.561343 22331 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:35.561436 22331 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:35.561445 22331 net.cpp:131] Top shape: 100 (100)
I0428 19:30:35.561450 22331 net.cpp:131] Top shape: 100 (100)
I0428 19:30:35.561455 22331 net.cpp:139] Memory required for data: 314800
I0428 19:30:35.561470 22331 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:35.561481 22331 net.cpp:86] Creating Layer conv0
I0428 19:30:35.561486 22331 net.cpp:408] conv0 <- data
I0428 19:30:35.561492 22331 net.cpp:382] conv0 -> conv0
I0428 19:30:35.563149 22331 net.cpp:124] Setting up conv0
I0428 19:30:35.563165 22331 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:35.563170 22331 net.cpp:139] Memory required for data: 1466800
I0428 19:30:35.563184 22331 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:35.563192 22331 net.cpp:86] Creating Layer pool0
I0428 19:30:35.563196 22331 net.cpp:408] pool0 <- conv0
I0428 19:30:35.563204 22331 net.cpp:382] pool0 -> pool0
I0428 19:30:35.563254 22331 net.cpp:124] Setting up pool0
I0428 19:30:35.563267 22331 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:35.563271 22331 net.cpp:139] Memory required for data: 1754800
I0428 19:30:35.563275 22331 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:35.563283 22331 net.cpp:86] Creating Layer ip1
I0428 19:30:35.563287 22331 net.cpp:408] ip1 <- pool0
I0428 19:30:35.563294 22331 net.cpp:382] ip1 -> ip1
I0428 19:30:35.563515 22331 net.cpp:124] Setting up ip1
I0428 19:30:35.563524 22331 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:35.563529 22331 net.cpp:139] Memory required for data: 1758800
I0428 19:30:35.563537 22331 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:35.563545 22331 net.cpp:86] Creating Layer relu1
I0428 19:30:35.563549 22331 net.cpp:408] relu1 <- ip1
I0428 19:30:35.563555 22331 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:35.563748 22331 net.cpp:124] Setting up relu1
I0428 19:30:35.563758 22331 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:35.563762 22331 net.cpp:139] Memory required for data: 1762800
I0428 19:30:35.563766 22331 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:35.563774 22331 net.cpp:86] Creating Layer ip2
I0428 19:30:35.563778 22331 net.cpp:408] ip2 <- ip1
I0428 19:30:35.563783 22331 net.cpp:382] ip2 -> ip2
I0428 19:30:35.563899 22331 net.cpp:124] Setting up ip2
I0428 19:30:35.563907 22331 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:35.563911 22331 net.cpp:139] Memory required for data: 1772800
I0428 19:30:35.563920 22331 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:35.563925 22331 net.cpp:86] Creating Layer relu2
I0428 19:30:35.563930 22331 net.cpp:408] relu2 <- ip2
I0428 19:30:35.563936 22331 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:35.564858 22331 net.cpp:124] Setting up relu2
I0428 19:30:35.564873 22331 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:30:35.564877 22331 net.cpp:139] Memory required for data: 1782800
I0428 19:30:35.564882 22331 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:35.564893 22331 net.cpp:86] Creating Layer ip3
I0428 19:30:35.564898 22331 net.cpp:408] ip3 <- ip2
I0428 19:30:35.564904 22331 net.cpp:382] ip3 -> ip3
I0428 19:30:35.565032 22331 net.cpp:124] Setting up ip3
I0428 19:30:35.565044 22331 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:35.565048 22331 net.cpp:139] Memory required for data: 1786800
I0428 19:30:35.565054 22331 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:35.565062 22331 net.cpp:86] Creating Layer relu3
I0428 19:30:35.565068 22331 net.cpp:408] relu3 <- ip3
I0428 19:30:35.565073 22331 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:35.565260 22331 net.cpp:124] Setting up relu3
I0428 19:30:35.565269 22331 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:35.565274 22331 net.cpp:139] Memory required for data: 1790800
I0428 19:30:35.565277 22331 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:35.565284 22331 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:35.565289 22331 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:35.565296 22331 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:35.565304 22331 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:35.565348 22331 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:35.565356 22331 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:35.565362 22331 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:35.565379 22331 net.cpp:139] Memory required for data: 1798800
I0428 19:30:35.565383 22331 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:35.565390 22331 net.cpp:86] Creating Layer accuracy
I0428 19:30:35.565394 22331 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:35.565410 22331 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:35.565417 22331 net.cpp:382] accuracy -> accuracy
I0428 19:30:35.565425 22331 net.cpp:124] Setting up accuracy
I0428 19:30:35.565430 22331 net.cpp:131] Top shape: (1)
I0428 19:30:35.565434 22331 net.cpp:139] Memory required for data: 1798804
I0428 19:30:35.565438 22331 layer_factory.hpp:77] Creating layer loss
I0428 19:30:35.565443 22331 net.cpp:86] Creating Layer loss
I0428 19:30:35.565446 22331 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:35.565450 22331 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:35.565456 22331 net.cpp:382] loss -> loss
I0428 19:30:35.565464 22331 layer_factory.hpp:77] Creating layer loss
I0428 19:30:35.565742 22331 net.cpp:124] Setting up loss
I0428 19:30:35.565755 22331 net.cpp:131] Top shape: (1)
I0428 19:30:35.565759 22331 net.cpp:134]     with loss weight 1
I0428 19:30:35.565768 22331 net.cpp:139] Memory required for data: 1798808
I0428 19:30:35.565771 22331 net.cpp:200] loss needs backward computation.
I0428 19:30:35.565776 22331 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:35.565780 22331 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:35.565784 22331 net.cpp:200] relu3 needs backward computation.
I0428 19:30:35.565788 22331 net.cpp:200] ip3 needs backward computation.
I0428 19:30:35.565790 22331 net.cpp:200] relu2 needs backward computation.
I0428 19:30:35.565794 22331 net.cpp:200] ip2 needs backward computation.
I0428 19:30:35.565798 22331 net.cpp:200] relu1 needs backward computation.
I0428 19:30:35.565801 22331 net.cpp:200] ip1 needs backward computation.
I0428 19:30:35.565804 22331 net.cpp:200] pool0 needs backward computation.
I0428 19:30:35.565807 22331 net.cpp:200] conv0 needs backward computation.
I0428 19:30:35.565811 22331 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:35.565816 22331 net.cpp:202] mnist does not need backward computation.
I0428 19:30:35.565819 22331 net.cpp:244] This network produces output accuracy
I0428 19:30:35.565824 22331 net.cpp:244] This network produces output loss
I0428 19:30:35.565835 22331 net.cpp:257] Network initialization done.
I0428 19:30:35.565881 22331 solver.cpp:56] Solver scaffolding done.
I0428 19:30:35.566229 22331 caffe.cpp:248] Starting Optimization
I0428 19:30:35.566236 22331 solver.cpp:273] Solving LeNet
I0428 19:30:35.566239 22331 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:35.566386 22331 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:35.572290 22331 blocking_queue.cpp:49] Waiting for data
I0428 19:30:35.621867 22338 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:35.622303 22331 solver.cpp:398]     Test net output #0: accuracy = 0.103
I0428 19:30:35.622325 22331 solver.cpp:398]     Test net output #1: loss = 2.30582 (* 1 = 2.30582 loss)
I0428 19:30:35.623949 22331 solver.cpp:219] Iteration 0 (0 iter/s, 0.0576778s/100 iters), loss = 2.30415
I0428 19:30:35.623986 22331 solver.cpp:238]     Train net output #0: loss = 2.30415 (* 1 = 2.30415 loss)
I0428 19:30:35.624001 22331 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:35.681349 22331 solver.cpp:219] Iteration 100 (1743.54 iter/s, 0.0573545s/100 iters), loss = 1.09835
I0428 19:30:35.681372 22331 solver.cpp:238]     Train net output #0: loss = 1.09835 (* 1 = 1.09835 loss)
I0428 19:30:35.681378 22331 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:35.737825 22331 solver.cpp:219] Iteration 200 (1771.67 iter/s, 0.0564439s/100 iters), loss = 0.888264
I0428 19:30:35.737848 22331 solver.cpp:238]     Train net output #0: loss = 0.888264 (* 1 = 0.888264 loss)
I0428 19:30:35.737854 22331 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:35.793812 22331 solver.cpp:219] Iteration 300 (1787.17 iter/s, 0.0559544s/100 iters), loss = 0.967164
I0428 19:30:35.793849 22331 solver.cpp:238]     Train net output #0: loss = 0.967164 (* 1 = 0.967164 loss)
I0428 19:30:35.793855 22331 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:35.850479 22331 solver.cpp:219] Iteration 400 (1765.62 iter/s, 0.0566375s/100 iters), loss = 0.984007
I0428 19:30:35.850517 22331 solver.cpp:238]     Train net output #0: loss = 0.984007 (* 1 = 0.984007 loss)
I0428 19:30:35.850524 22331 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:35.919049 22331 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:35.992151 22338 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:35.992643 22331 solver.cpp:398]     Test net output #0: accuracy = 0.6903
I0428 19:30:35.992672 22331 solver.cpp:398]     Test net output #1: loss = 0.929964 (* 1 = 0.929964 loss)
I0428 19:30:35.993402 22331 solver.cpp:219] Iteration 500 (699.85 iter/s, 0.142888s/100 iters), loss = 0.953778
I0428 19:30:35.993432 22331 solver.cpp:238]     Train net output #0: loss = 0.953778 (* 1 = 0.953778 loss)
I0428 19:30:35.993440 22331 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:36.056036 22331 solver.cpp:219] Iteration 600 (1597.54 iter/s, 0.0625961s/100 iters), loss = 0.88002
I0428 19:30:36.056066 22331 solver.cpp:238]     Train net output #0: loss = 0.88002 (* 1 = 0.88002 loss)
I0428 19:30:36.056073 22331 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:36.115655 22331 solver.cpp:219] Iteration 700 (1678.39 iter/s, 0.0595807s/100 iters), loss = 0.963709
I0428 19:30:36.115694 22331 solver.cpp:238]     Train net output #0: loss = 0.963709 (* 1 = 0.963709 loss)
I0428 19:30:36.115701 22331 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:36.175968 22331 solver.cpp:219] Iteration 800 (1659.01 iter/s, 0.0602767s/100 iters), loss = 0.801806
I0428 19:30:36.176007 22331 solver.cpp:238]     Train net output #0: loss = 0.801806 (* 1 = 0.801806 loss)
I0428 19:30:36.176013 22331 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:36.251530 22331 solver.cpp:219] Iteration 900 (1324.16 iter/s, 0.0755198s/100 iters), loss = 0.749029
I0428 19:30:36.251588 22331 solver.cpp:238]     Train net output #0: loss = 0.749029 (* 1 = 0.749029 loss)
I0428 19:30:36.251600 22331 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:36.275545 22337 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:36.318153 22331 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:36.318965 22331 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:36.319530 22331 solver.cpp:311] Iteration 1000, loss = 0.720714
I0428 19:30:36.319548 22331 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:36.363364 22338 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:36.363821 22331 solver.cpp:398]     Test net output #0: accuracy = 0.8379
I0428 19:30:36.363857 22331 solver.cpp:398]     Test net output #1: loss = 0.638538 (* 1 = 0.638538 loss)
I0428 19:30:36.363862 22331 solver.cpp:316] Optimization Done.
I0428 19:30:36.363865 22331 caffe.cpp:259] Optimization Done.
