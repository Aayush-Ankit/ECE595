I0428 20:36:24.560314  4788 caffe.cpp:218] Using GPUs 0
I0428 20:36:24.597620  4788 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:36:25.112471  4788 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1636.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:36:25.112612  4788 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1636.prototxt
I0428 20:36:25.113021  4788 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:36:25.113041  4788 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:36:25.113137  4788 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:25.113211  4788 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:25.113313  4788 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:36:25.113337  4788 net.cpp:86] Creating Layer mnist
I0428 20:36:25.113345  4788 net.cpp:382] mnist -> data
I0428 20:36:25.113368  4788 net.cpp:382] mnist -> label
I0428 20:36:25.114465  4788 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:36:25.116943  4788 net.cpp:124] Setting up mnist
I0428 20:36:25.116961  4788 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:36:25.116967  4788 net.cpp:131] Top shape: 64 (64)
I0428 20:36:25.116971  4788 net.cpp:139] Memory required for data: 200960
I0428 20:36:25.116979  4788 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:25.116996  4788 net.cpp:86] Creating Layer conv0
I0428 20:36:25.117017  4788 net.cpp:408] conv0 <- data
I0428 20:36:25.117028  4788 net.cpp:382] conv0 -> conv0
I0428 20:36:25.383484  4788 net.cpp:124] Setting up conv0
I0428 20:36:25.383512  4788 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:36:25.383514  4788 net.cpp:139] Memory required for data: 14946560
I0428 20:36:25.383529  4788 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:25.383556  4788 net.cpp:86] Creating Layer pool0
I0428 20:36:25.383560  4788 net.cpp:408] pool0 <- conv0
I0428 20:36:25.383565  4788 net.cpp:382] pool0 -> pool0
I0428 20:36:25.383628  4788 net.cpp:124] Setting up pool0
I0428 20:36:25.383633  4788 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:36:25.383636  4788 net.cpp:139] Memory required for data: 18632960
I0428 20:36:25.383640  4788 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:25.383651  4788 net.cpp:86] Creating Layer conv1
I0428 20:36:25.383653  4788 net.cpp:408] conv1 <- pool0
I0428 20:36:25.383658  4788 net.cpp:382] conv1 -> conv1
I0428 20:36:25.387125  4788 net.cpp:124] Setting up conv1
I0428 20:36:25.387137  4788 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:36:25.387141  4788 net.cpp:139] Memory required for data: 19452160
I0428 20:36:25.387150  4788 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:25.387156  4788 net.cpp:86] Creating Layer pool1
I0428 20:36:25.387159  4788 net.cpp:408] pool1 <- conv1
I0428 20:36:25.387164  4788 net.cpp:382] pool1 -> pool1
I0428 20:36:25.387198  4788 net.cpp:124] Setting up pool1
I0428 20:36:25.387207  4788 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:36:25.387224  4788 net.cpp:139] Memory required for data: 19656960
I0428 20:36:25.387228  4788 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:25.387249  4788 net.cpp:86] Creating Layer ip1
I0428 20:36:25.387254  4788 net.cpp:408] ip1 <- pool1
I0428 20:36:25.387259  4788 net.cpp:382] ip1 -> ip1
I0428 20:36:25.387593  4788 net.cpp:124] Setting up ip1
I0428 20:36:25.387600  4788 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:25.387619  4788 net.cpp:139] Memory required for data: 19669760
I0428 20:36:25.387625  4788 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:25.387646  4788 net.cpp:86] Creating Layer relu1
I0428 20:36:25.387650  4788 net.cpp:408] relu1 <- ip1
I0428 20:36:25.387655  4788 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:25.387809  4788 net.cpp:124] Setting up relu1
I0428 20:36:25.387818  4788 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:25.387821  4788 net.cpp:139] Memory required for data: 19682560
I0428 20:36:25.387825  4788 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:25.387831  4788 net.cpp:86] Creating Layer ip2
I0428 20:36:25.387835  4788 net.cpp:408] ip2 <- ip1
I0428 20:36:25.387840  4788 net.cpp:382] ip2 -> ip2
I0428 20:36:25.387945  4788 net.cpp:124] Setting up ip2
I0428 20:36:25.387967  4788 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:25.387970  4788 net.cpp:139] Memory required for data: 19695360
I0428 20:36:25.387975  4788 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:25.387981  4788 net.cpp:86] Creating Layer relu2
I0428 20:36:25.387984  4788 net.cpp:408] relu2 <- ip2
I0428 20:36:25.387989  4788 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:25.388694  4788 net.cpp:124] Setting up relu2
I0428 20:36:25.388705  4788 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:36:25.388723  4788 net.cpp:139] Memory required for data: 19708160
I0428 20:36:25.388727  4788 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:25.388749  4788 net.cpp:86] Creating Layer ip3
I0428 20:36:25.388753  4788 net.cpp:408] ip3 <- ip2
I0428 20:36:25.388759  4788 net.cpp:382] ip3 -> ip3
I0428 20:36:25.388883  4788 net.cpp:124] Setting up ip3
I0428 20:36:25.388892  4788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:25.388895  4788 net.cpp:139] Memory required for data: 19710720
I0428 20:36:25.388903  4788 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:25.388909  4788 net.cpp:86] Creating Layer relu3
I0428 20:36:25.388912  4788 net.cpp:408] relu3 <- ip3
I0428 20:36:25.388929  4788 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:25.389097  4788 net.cpp:124] Setting up relu3
I0428 20:36:25.389106  4788 net.cpp:131] Top shape: 64 10 (640)
I0428 20:36:25.389111  4788 net.cpp:139] Memory required for data: 19713280
I0428 20:36:25.389113  4788 layer_factory.hpp:77] Creating layer loss
I0428 20:36:25.389119  4788 net.cpp:86] Creating Layer loss
I0428 20:36:25.389122  4788 net.cpp:408] loss <- ip3
I0428 20:36:25.389127  4788 net.cpp:408] loss <- label
I0428 20:36:25.389132  4788 net.cpp:382] loss -> loss
I0428 20:36:25.389163  4788 layer_factory.hpp:77] Creating layer loss
I0428 20:36:25.389387  4788 net.cpp:124] Setting up loss
I0428 20:36:25.389397  4788 net.cpp:131] Top shape: (1)
I0428 20:36:25.389416  4788 net.cpp:134]     with loss weight 1
I0428 20:36:25.389446  4788 net.cpp:139] Memory required for data: 19713284
I0428 20:36:25.389449  4788 net.cpp:200] loss needs backward computation.
I0428 20:36:25.389452  4788 net.cpp:200] relu3 needs backward computation.
I0428 20:36:25.389456  4788 net.cpp:200] ip3 needs backward computation.
I0428 20:36:25.389458  4788 net.cpp:200] relu2 needs backward computation.
I0428 20:36:25.389461  4788 net.cpp:200] ip2 needs backward computation.
I0428 20:36:25.389464  4788 net.cpp:200] relu1 needs backward computation.
I0428 20:36:25.389467  4788 net.cpp:200] ip1 needs backward computation.
I0428 20:36:25.389470  4788 net.cpp:200] pool1 needs backward computation.
I0428 20:36:25.389473  4788 net.cpp:200] conv1 needs backward computation.
I0428 20:36:25.389477  4788 net.cpp:200] pool0 needs backward computation.
I0428 20:36:25.389480  4788 net.cpp:200] conv0 needs backward computation.
I0428 20:36:25.389484  4788 net.cpp:202] mnist does not need backward computation.
I0428 20:36:25.389487  4788 net.cpp:244] This network produces output loss
I0428 20:36:25.389497  4788 net.cpp:257] Network initialization done.
I0428 20:36:25.389855  4788 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1636.prototxt
I0428 20:36:25.389897  4788 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:36:25.389984  4788 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:36:25.390061  4788 layer_factory.hpp:77] Creating layer mnist
I0428 20:36:25.390120  4788 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:36:25.390139  4788 net.cpp:86] Creating Layer mnist
I0428 20:36:25.390161  4788 net.cpp:382] mnist -> data
I0428 20:36:25.390168  4788 net.cpp:382] mnist -> label
I0428 20:36:25.390254  4788 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:36:25.391475  4788 net.cpp:124] Setting up mnist
I0428 20:36:25.391504  4788 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:36:25.391525  4788 net.cpp:131] Top shape: 100 (100)
I0428 20:36:25.391528  4788 net.cpp:139] Memory required for data: 314000
I0428 20:36:25.391531  4788 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:36:25.391552  4788 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:36:25.391556  4788 net.cpp:408] label_mnist_1_split <- label
I0428 20:36:25.391561  4788 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:36:25.391568  4788 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:36:25.391710  4788 net.cpp:124] Setting up label_mnist_1_split
I0428 20:36:25.391718  4788 net.cpp:131] Top shape: 100 (100)
I0428 20:36:25.391722  4788 net.cpp:131] Top shape: 100 (100)
I0428 20:36:25.391726  4788 net.cpp:139] Memory required for data: 314800
I0428 20:36:25.391728  4788 layer_factory.hpp:77] Creating layer conv0
I0428 20:36:25.391737  4788 net.cpp:86] Creating Layer conv0
I0428 20:36:25.391743  4788 net.cpp:408] conv0 <- data
I0428 20:36:25.391763  4788 net.cpp:382] conv0 -> conv0
I0428 20:36:25.393467  4788 net.cpp:124] Setting up conv0
I0428 20:36:25.393496  4788 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:36:25.393501  4788 net.cpp:139] Memory required for data: 23354800
I0428 20:36:25.393509  4788 layer_factory.hpp:77] Creating layer pool0
I0428 20:36:25.393517  4788 net.cpp:86] Creating Layer pool0
I0428 20:36:25.393520  4788 net.cpp:408] pool0 <- conv0
I0428 20:36:25.393525  4788 net.cpp:382] pool0 -> pool0
I0428 20:36:25.393576  4788 net.cpp:124] Setting up pool0
I0428 20:36:25.393582  4788 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:36:25.393585  4788 net.cpp:139] Memory required for data: 29114800
I0428 20:36:25.393589  4788 layer_factory.hpp:77] Creating layer conv1
I0428 20:36:25.393596  4788 net.cpp:86] Creating Layer conv1
I0428 20:36:25.393599  4788 net.cpp:408] conv1 <- pool0
I0428 20:36:25.393605  4788 net.cpp:382] conv1 -> conv1
I0428 20:36:25.396735  4788 net.cpp:124] Setting up conv1
I0428 20:36:25.396749  4788 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:36:25.396767  4788 net.cpp:139] Memory required for data: 30394800
I0428 20:36:25.396776  4788 layer_factory.hpp:77] Creating layer pool1
I0428 20:36:25.396782  4788 net.cpp:86] Creating Layer pool1
I0428 20:36:25.396786  4788 net.cpp:408] pool1 <- conv1
I0428 20:36:25.396792  4788 net.cpp:382] pool1 -> pool1
I0428 20:36:25.396872  4788 net.cpp:124] Setting up pool1
I0428 20:36:25.396878  4788 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:36:25.396883  4788 net.cpp:139] Memory required for data: 30714800
I0428 20:36:25.396885  4788 layer_factory.hpp:77] Creating layer ip1
I0428 20:36:25.396893  4788 net.cpp:86] Creating Layer ip1
I0428 20:36:25.396896  4788 net.cpp:408] ip1 <- pool1
I0428 20:36:25.396903  4788 net.cpp:382] ip1 -> ip1
I0428 20:36:25.397300  4788 net.cpp:124] Setting up ip1
I0428 20:36:25.397317  4788 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:25.397336  4788 net.cpp:139] Memory required for data: 30734800
I0428 20:36:25.397343  4788 layer_factory.hpp:77] Creating layer relu1
I0428 20:36:25.397347  4788 net.cpp:86] Creating Layer relu1
I0428 20:36:25.397351  4788 net.cpp:408] relu1 <- ip1
I0428 20:36:25.397357  4788 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:36:25.397528  4788 net.cpp:124] Setting up relu1
I0428 20:36:25.397537  4788 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:25.397541  4788 net.cpp:139] Memory required for data: 30754800
I0428 20:36:25.397544  4788 layer_factory.hpp:77] Creating layer ip2
I0428 20:36:25.397553  4788 net.cpp:86] Creating Layer ip2
I0428 20:36:25.397557  4788 net.cpp:408] ip2 <- ip1
I0428 20:36:25.397562  4788 net.cpp:382] ip2 -> ip2
I0428 20:36:25.397678  4788 net.cpp:124] Setting up ip2
I0428 20:36:25.397686  4788 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:25.397689  4788 net.cpp:139] Memory required for data: 30774800
I0428 20:36:25.397694  4788 layer_factory.hpp:77] Creating layer relu2
I0428 20:36:25.397701  4788 net.cpp:86] Creating Layer relu2
I0428 20:36:25.397703  4788 net.cpp:408] relu2 <- ip2
I0428 20:36:25.397707  4788 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:36:25.398030  4788 net.cpp:124] Setting up relu2
I0428 20:36:25.398039  4788 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:36:25.398058  4788 net.cpp:139] Memory required for data: 30794800
I0428 20:36:25.398062  4788 layer_factory.hpp:77] Creating layer ip3
I0428 20:36:25.398068  4788 net.cpp:86] Creating Layer ip3
I0428 20:36:25.398087  4788 net.cpp:408] ip3 <- ip2
I0428 20:36:25.398092  4788 net.cpp:382] ip3 -> ip3
I0428 20:36:25.398208  4788 net.cpp:124] Setting up ip3
I0428 20:36:25.398216  4788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:25.398221  4788 net.cpp:139] Memory required for data: 30798800
I0428 20:36:25.398227  4788 layer_factory.hpp:77] Creating layer relu3
I0428 20:36:25.398233  4788 net.cpp:86] Creating Layer relu3
I0428 20:36:25.398237  4788 net.cpp:408] relu3 <- ip3
I0428 20:36:25.398241  4788 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:36:25.399055  4788 net.cpp:124] Setting up relu3
I0428 20:36:25.399068  4788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:25.399089  4788 net.cpp:139] Memory required for data: 30802800
I0428 20:36:25.399093  4788 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:36:25.399098  4788 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:36:25.399103  4788 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:36:25.399118  4788 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:36:25.399125  4788 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:36:25.399188  4788 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:36:25.399197  4788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:25.399206  4788 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:36:25.399210  4788 net.cpp:139] Memory required for data: 30810800
I0428 20:36:25.399214  4788 layer_factory.hpp:77] Creating layer accuracy
I0428 20:36:25.399219  4788 net.cpp:86] Creating Layer accuracy
I0428 20:36:25.399227  4788 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:36:25.399232  4788 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:36:25.399236  4788 net.cpp:382] accuracy -> accuracy
I0428 20:36:25.399245  4788 net.cpp:124] Setting up accuracy
I0428 20:36:25.399250  4788 net.cpp:131] Top shape: (1)
I0428 20:36:25.399252  4788 net.cpp:139] Memory required for data: 30810804
I0428 20:36:25.399255  4788 layer_factory.hpp:77] Creating layer loss
I0428 20:36:25.399266  4788 net.cpp:86] Creating Layer loss
I0428 20:36:25.399269  4788 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:36:25.399273  4788 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:36:25.399278  4788 net.cpp:382] loss -> loss
I0428 20:36:25.399284  4788 layer_factory.hpp:77] Creating layer loss
I0428 20:36:25.399554  4788 net.cpp:124] Setting up loss
I0428 20:36:25.399564  4788 net.cpp:131] Top shape: (1)
I0428 20:36:25.399567  4788 net.cpp:134]     with loss weight 1
I0428 20:36:25.399581  4788 net.cpp:139] Memory required for data: 30810808
I0428 20:36:25.399585  4788 net.cpp:200] loss needs backward computation.
I0428 20:36:25.399590  4788 net.cpp:202] accuracy does not need backward computation.
I0428 20:36:25.399593  4788 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:36:25.399596  4788 net.cpp:200] relu3 needs backward computation.
I0428 20:36:25.399600  4788 net.cpp:200] ip3 needs backward computation.
I0428 20:36:25.399602  4788 net.cpp:200] relu2 needs backward computation.
I0428 20:36:25.399605  4788 net.cpp:200] ip2 needs backward computation.
I0428 20:36:25.399608  4788 net.cpp:200] relu1 needs backward computation.
I0428 20:36:25.399611  4788 net.cpp:200] ip1 needs backward computation.
I0428 20:36:25.399615  4788 net.cpp:200] pool1 needs backward computation.
I0428 20:36:25.399617  4788 net.cpp:200] conv1 needs backward computation.
I0428 20:36:25.399621  4788 net.cpp:200] pool0 needs backward computation.
I0428 20:36:25.399623  4788 net.cpp:200] conv0 needs backward computation.
I0428 20:36:25.399627  4788 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:36:25.399632  4788 net.cpp:202] mnist does not need backward computation.
I0428 20:36:25.399634  4788 net.cpp:244] This network produces output accuracy
I0428 20:36:25.399637  4788 net.cpp:244] This network produces output loss
I0428 20:36:25.399649  4788 net.cpp:257] Network initialization done.
I0428 20:36:25.399689  4788 solver.cpp:56] Solver scaffolding done.
I0428 20:36:25.400073  4788 caffe.cpp:248] Starting Optimization
I0428 20:36:25.400079  4788 solver.cpp:273] Solving LeNet
I0428 20:36:25.400081  4788 solver.cpp:274] Learning Rate Policy: inv
I0428 20:36:25.401036  4788 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:36:25.464565  4788 blocking_queue.cpp:49] Waiting for data
I0428 20:36:25.513597  4796 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:25.515326  4788 solver.cpp:398]     Test net output #0: accuracy = 0.1035
I0428 20:36:25.515358  4788 solver.cpp:398]     Test net output #1: loss = 2.31143 (* 1 = 2.31143 loss)
I0428 20:36:25.520052  4788 solver.cpp:219] Iteration 0 (0 iter/s, 0.119908s/100 iters), loss = 2.311
I0428 20:36:25.520090  4788 solver.cpp:238]     Train net output #0: loss = 2.311 (* 1 = 2.311 loss)
I0428 20:36:25.520117  4788 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:36:25.751365  4788 solver.cpp:219] Iteration 100 (432.421 iter/s, 0.231256s/100 iters), loss = 0.387056
I0428 20:36:25.751390  4788 solver.cpp:238]     Train net output #0: loss = 0.387056 (* 1 = 0.387056 loss)
I0428 20:36:25.751397  4788 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:36:25.978837  4788 solver.cpp:219] Iteration 200 (439.695 iter/s, 0.22743s/100 iters), loss = 0.352994
I0428 20:36:25.978863  4788 solver.cpp:238]     Train net output #0: loss = 0.352994 (* 1 = 0.352994 loss)
I0428 20:36:25.978870  4788 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:36:26.207367  4788 solver.cpp:219] Iteration 300 (437.659 iter/s, 0.228488s/100 iters), loss = 0.400444
I0428 20:36:26.207409  4788 solver.cpp:238]     Train net output #0: loss = 0.400444 (* 1 = 0.400444 loss)
I0428 20:36:26.207415  4788 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:36:26.436967  4788 solver.cpp:219] Iteration 400 (435.619 iter/s, 0.229558s/100 iters), loss = 0.425512
I0428 20:36:26.437008  4788 solver.cpp:238]     Train net output #0: loss = 0.425512 (* 1 = 0.425512 loss)
I0428 20:36:26.437016  4788 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:36:26.666537  4788 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:36:26.774673  4796 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:26.777611  4788 solver.cpp:398]     Test net output #0: accuracy = 0.9602
I0428 20:36:26.777647  4788 solver.cpp:398]     Test net output #1: loss = 0.320262 (* 1 = 0.320262 loss)
I0428 20:36:26.779898  4788 solver.cpp:219] Iteration 500 (291.669 iter/s, 0.342855s/100 iters), loss = 0.283886
I0428 20:36:26.779952  4788 solver.cpp:238]     Train net output #0: loss = 0.283886 (* 1 = 0.283886 loss)
I0428 20:36:26.779958  4788 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:36:27.017441  4788 solver.cpp:219] Iteration 600 (421.072 iter/s, 0.237489s/100 iters), loss = 0.265528
I0428 20:36:27.017483  4788 solver.cpp:238]     Train net output #0: loss = 0.265528 (* 1 = 0.265528 loss)
I0428 20:36:27.017504  4788 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:36:27.259131  4788 solver.cpp:219] Iteration 700 (413.826 iter/s, 0.241647s/100 iters), loss = 0.378907
I0428 20:36:27.259163  4788 solver.cpp:238]     Train net output #0: loss = 0.378907 (* 1 = 0.378907 loss)
I0428 20:36:27.259171  4788 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:36:27.503026  4788 solver.cpp:219] Iteration 800 (410.095 iter/s, 0.243846s/100 iters), loss = 0.478499
I0428 20:36:27.503059  4788 solver.cpp:238]     Train net output #0: loss = 0.478499 (* 1 = 0.478499 loss)
I0428 20:36:27.503067  4788 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:36:27.750192  4788 solver.cpp:219] Iteration 900 (404.675 iter/s, 0.247112s/100 iters), loss = 0.120146
I0428 20:36:27.750234  4788 solver.cpp:238]     Train net output #0: loss = 0.120146 (* 1 = 0.120146 loss)
I0428 20:36:27.750242  4788 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:36:27.830117  4795 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:27.988016  4788 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:36:27.993749  4788 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:36:27.996690  4788 solver.cpp:311] Iteration 1000, loss = 0.0743965
I0428 20:36:27.996707  4788 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:36:28.113535  4796 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:36:28.115617  4788 solver.cpp:398]     Test net output #0: accuracy = 0.9762
I0428 20:36:28.115655  4788 solver.cpp:398]     Test net output #1: loss = 0.0733459 (* 1 = 0.0733459 loss)
I0428 20:36:28.115664  4788 solver.cpp:316] Optimization Done.
I0428 20:36:28.115669  4788 caffe.cpp:259] Optimization Done.
