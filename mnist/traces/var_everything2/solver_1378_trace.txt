I0428 20:21:08.843833  1700 caffe.cpp:218] Using GPUs 0
I0428 20:21:08.879861  1700 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:21:09.335444  1700 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1378.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:21:09.335582  1700 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1378.prototxt
I0428 20:21:09.335907  1700 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:21:09.335922  1700 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:21:09.336017  1700 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:09.336081  1700 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:09.336163  1700 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:21:09.336184  1700 net.cpp:86] Creating Layer mnist
I0428 20:21:09.336190  1700 net.cpp:382] mnist -> data
I0428 20:21:09.336208  1700 net.cpp:382] mnist -> label
I0428 20:21:09.337231  1700 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:21:09.339435  1700 net.cpp:124] Setting up mnist
I0428 20:21:09.339465  1700 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:21:09.339471  1700 net.cpp:131] Top shape: 64 (64)
I0428 20:21:09.339474  1700 net.cpp:139] Memory required for data: 200960
I0428 20:21:09.339480  1700 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:09.339493  1700 net.cpp:86] Creating Layer conv0
I0428 20:21:09.339511  1700 net.cpp:408] conv0 <- data
I0428 20:21:09.339522  1700 net.cpp:382] conv0 -> conv0
I0428 20:21:09.576699  1700 net.cpp:124] Setting up conv0
I0428 20:21:09.576725  1700 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:21:09.576730  1700 net.cpp:139] Memory required for data: 7573760
I0428 20:21:09.576743  1700 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:09.576756  1700 net.cpp:86] Creating Layer pool0
I0428 20:21:09.576759  1700 net.cpp:408] pool0 <- conv0
I0428 20:21:09.576766  1700 net.cpp:382] pool0 -> pool0
I0428 20:21:09.576867  1700 net.cpp:124] Setting up pool0
I0428 20:21:09.576874  1700 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:21:09.576877  1700 net.cpp:139] Memory required for data: 9416960
I0428 20:21:09.576881  1700 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:09.576892  1700 net.cpp:86] Creating Layer conv1
I0428 20:21:09.576895  1700 net.cpp:408] conv1 <- pool0
I0428 20:21:09.576901  1700 net.cpp:382] conv1 -> conv1
I0428 20:21:09.579109  1700 net.cpp:124] Setting up conv1
I0428 20:21:09.579123  1700 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:21:09.579128  1700 net.cpp:139] Memory required for data: 10236160
I0428 20:21:09.579135  1700 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:09.579143  1700 net.cpp:86] Creating Layer pool1
I0428 20:21:09.579145  1700 net.cpp:408] pool1 <- conv1
I0428 20:21:09.579166  1700 net.cpp:382] pool1 -> pool1
I0428 20:21:09.579201  1700 net.cpp:124] Setting up pool1
I0428 20:21:09.579207  1700 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:21:09.579210  1700 net.cpp:139] Memory required for data: 10440960
I0428 20:21:09.579212  1700 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:09.579219  1700 net.cpp:86] Creating Layer ip1
I0428 20:21:09.579222  1700 net.cpp:408] ip1 <- pool1
I0428 20:21:09.579227  1700 net.cpp:382] ip1 -> ip1
I0428 20:21:09.580227  1700 net.cpp:124] Setting up ip1
I0428 20:21:09.580240  1700 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:09.580245  1700 net.cpp:139] Memory required for data: 10443520
I0428 20:21:09.580252  1700 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:09.580260  1700 net.cpp:86] Creating Layer relu1
I0428 20:21:09.580262  1700 net.cpp:408] relu1 <- ip1
I0428 20:21:09.580267  1700 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:09.580472  1700 net.cpp:124] Setting up relu1
I0428 20:21:09.580495  1700 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:09.580498  1700 net.cpp:139] Memory required for data: 10446080
I0428 20:21:09.580502  1700 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:09.580508  1700 net.cpp:86] Creating Layer ip2
I0428 20:21:09.580512  1700 net.cpp:408] ip2 <- ip1
I0428 20:21:09.580515  1700 net.cpp:382] ip2 -> ip2
I0428 20:21:09.580601  1700 net.cpp:124] Setting up ip2
I0428 20:21:09.580607  1700 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:09.580610  1700 net.cpp:139] Memory required for data: 10448640
I0428 20:21:09.580615  1700 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:09.580621  1700 net.cpp:86] Creating Layer relu2
I0428 20:21:09.580624  1700 net.cpp:408] relu2 <- ip2
I0428 20:21:09.580628  1700 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:09.582418  1700 net.cpp:124] Setting up relu2
I0428 20:21:09.582466  1700 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:09.582492  1700 net.cpp:139] Memory required for data: 10451200
I0428 20:21:09.582505  1700 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:09.582528  1700 net.cpp:86] Creating Layer ip3
I0428 20:21:09.582545  1700 net.cpp:408] ip3 <- ip2
I0428 20:21:09.582564  1700 net.cpp:382] ip3 -> ip3
I0428 20:21:09.582885  1700 net.cpp:124] Setting up ip3
I0428 20:21:09.582906  1700 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:09.582917  1700 net.cpp:139] Memory required for data: 10453760
I0428 20:21:09.582944  1700 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:09.582962  1700 net.cpp:86] Creating Layer relu3
I0428 20:21:09.582973  1700 net.cpp:408] relu3 <- ip3
I0428 20:21:09.582988  1700 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:09.583534  1700 net.cpp:124] Setting up relu3
I0428 20:21:09.583559  1700 net.cpp:131] Top shape: 64 10 (640)
I0428 20:21:09.583570  1700 net.cpp:139] Memory required for data: 10456320
I0428 20:21:09.583580  1700 layer_factory.hpp:77] Creating layer loss
I0428 20:21:09.583597  1700 net.cpp:86] Creating Layer loss
I0428 20:21:09.583608  1700 net.cpp:408] loss <- ip3
I0428 20:21:09.583631  1700 net.cpp:408] loss <- label
I0428 20:21:09.583652  1700 net.cpp:382] loss -> loss
I0428 20:21:09.583691  1700 layer_factory.hpp:77] Creating layer loss
I0428 20:21:09.584439  1700 net.cpp:124] Setting up loss
I0428 20:21:09.584465  1700 net.cpp:131] Top shape: (1)
I0428 20:21:09.584476  1700 net.cpp:134]     with loss weight 1
I0428 20:21:09.584523  1700 net.cpp:139] Memory required for data: 10456324
I0428 20:21:09.584537  1700 net.cpp:200] loss needs backward computation.
I0428 20:21:09.584548  1700 net.cpp:200] relu3 needs backward computation.
I0428 20:21:09.584563  1700 net.cpp:200] ip3 needs backward computation.
I0428 20:21:09.584573  1700 net.cpp:200] relu2 needs backward computation.
I0428 20:21:09.584583  1700 net.cpp:200] ip2 needs backward computation.
I0428 20:21:09.584594  1700 net.cpp:200] relu1 needs backward computation.
I0428 20:21:09.584607  1700 net.cpp:200] ip1 needs backward computation.
I0428 20:21:09.584619  1700 net.cpp:200] pool1 needs backward computation.
I0428 20:21:09.584630  1700 net.cpp:200] conv1 needs backward computation.
I0428 20:21:09.584643  1700 net.cpp:200] pool0 needs backward computation.
I0428 20:21:09.584655  1700 net.cpp:200] conv0 needs backward computation.
I0428 20:21:09.584668  1700 net.cpp:202] mnist does not need backward computation.
I0428 20:21:09.584679  1700 net.cpp:244] This network produces output loss
I0428 20:21:09.584719  1700 net.cpp:257] Network initialization done.
I0428 20:21:09.585886  1700 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1378.prototxt
I0428 20:21:09.585983  1700 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:21:09.586323  1700 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:21:09.586594  1700 layer_factory.hpp:77] Creating layer mnist
I0428 20:21:09.586712  1700 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:21:09.586745  1700 net.cpp:86] Creating Layer mnist
I0428 20:21:09.586763  1700 net.cpp:382] mnist -> data
I0428 20:21:09.586787  1700 net.cpp:382] mnist -> label
I0428 20:21:09.587060  1700 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:21:09.592010  1700 net.cpp:124] Setting up mnist
I0428 20:21:09.592046  1700 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:21:09.592056  1700 net.cpp:131] Top shape: 100 (100)
I0428 20:21:09.592062  1700 net.cpp:139] Memory required for data: 314000
I0428 20:21:09.592073  1700 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:21:09.592092  1700 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:21:09.592103  1700 net.cpp:408] label_mnist_1_split <- label
I0428 20:21:09.592131  1700 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:21:09.592165  1700 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:21:09.592382  1700 net.cpp:124] Setting up label_mnist_1_split
I0428 20:21:09.592406  1700 net.cpp:131] Top shape: 100 (100)
I0428 20:21:09.592423  1700 net.cpp:131] Top shape: 100 (100)
I0428 20:21:09.592437  1700 net.cpp:139] Memory required for data: 314800
I0428 20:21:09.592448  1700 layer_factory.hpp:77] Creating layer conv0
I0428 20:21:09.592478  1700 net.cpp:86] Creating Layer conv0
I0428 20:21:09.592490  1700 net.cpp:408] conv0 <- data
I0428 20:21:09.592510  1700 net.cpp:382] conv0 -> conv0
I0428 20:21:09.595970  1700 net.cpp:124] Setting up conv0
I0428 20:21:09.596004  1700 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:21:09.596010  1700 net.cpp:139] Memory required for data: 11834800
I0428 20:21:09.596034  1700 layer_factory.hpp:77] Creating layer pool0
I0428 20:21:09.596051  1700 net.cpp:86] Creating Layer pool0
I0428 20:21:09.596070  1700 net.cpp:408] pool0 <- conv0
I0428 20:21:09.596087  1700 net.cpp:382] pool0 -> pool0
I0428 20:21:09.596192  1700 net.cpp:124] Setting up pool0
I0428 20:21:09.596215  1700 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:21:09.596228  1700 net.cpp:139] Memory required for data: 14714800
I0428 20:21:09.596240  1700 layer_factory.hpp:77] Creating layer conv1
I0428 20:21:09.596267  1700 net.cpp:86] Creating Layer conv1
I0428 20:21:09.596280  1700 net.cpp:408] conv1 <- pool0
I0428 20:21:09.596297  1700 net.cpp:382] conv1 -> conv1
I0428 20:21:09.600957  1700 net.cpp:124] Setting up conv1
I0428 20:21:09.600988  1700 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:21:09.600996  1700 net.cpp:139] Memory required for data: 15994800
I0428 20:21:09.601012  1700 layer_factory.hpp:77] Creating layer pool1
I0428 20:21:09.601030  1700 net.cpp:86] Creating Layer pool1
I0428 20:21:09.601042  1700 net.cpp:408] pool1 <- conv1
I0428 20:21:09.601060  1700 net.cpp:382] pool1 -> pool1
I0428 20:21:09.601172  1700 net.cpp:124] Setting up pool1
I0428 20:21:09.601193  1700 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:21:09.601209  1700 net.cpp:139] Memory required for data: 16314800
I0428 20:21:09.601219  1700 layer_factory.hpp:77] Creating layer ip1
I0428 20:21:09.601240  1700 net.cpp:86] Creating Layer ip1
I0428 20:21:09.601253  1700 net.cpp:408] ip1 <- pool1
I0428 20:21:09.601269  1700 net.cpp:382] ip1 -> ip1
I0428 20:21:09.601708  1700 net.cpp:124] Setting up ip1
I0428 20:21:09.601729  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.601763  1700 net.cpp:139] Memory required for data: 16318800
I0428 20:21:09.601785  1700 layer_factory.hpp:77] Creating layer relu1
I0428 20:21:09.601806  1700 net.cpp:86] Creating Layer relu1
I0428 20:21:09.601820  1700 net.cpp:408] relu1 <- ip1
I0428 20:21:09.601835  1700 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:21:09.602303  1700 net.cpp:124] Setting up relu1
I0428 20:21:09.602325  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.602335  1700 net.cpp:139] Memory required for data: 16322800
I0428 20:21:09.602345  1700 layer_factory.hpp:77] Creating layer ip2
I0428 20:21:09.602368  1700 net.cpp:86] Creating Layer ip2
I0428 20:21:09.602381  1700 net.cpp:408] ip2 <- ip1
I0428 20:21:09.602399  1700 net.cpp:382] ip2 -> ip2
I0428 20:21:09.602691  1700 net.cpp:124] Setting up ip2
I0428 20:21:09.602722  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.602735  1700 net.cpp:139] Memory required for data: 16326800
I0428 20:21:09.602753  1700 layer_factory.hpp:77] Creating layer relu2
I0428 20:21:09.602771  1700 net.cpp:86] Creating Layer relu2
I0428 20:21:09.602783  1700 net.cpp:408] relu2 <- ip2
I0428 20:21:09.602797  1700 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:21:09.603267  1700 net.cpp:124] Setting up relu2
I0428 20:21:09.603301  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.603313  1700 net.cpp:139] Memory required for data: 16330800
I0428 20:21:09.603324  1700 layer_factory.hpp:77] Creating layer ip3
I0428 20:21:09.603340  1700 net.cpp:86] Creating Layer ip3
I0428 20:21:09.603353  1700 net.cpp:408] ip3 <- ip2
I0428 20:21:09.603371  1700 net.cpp:382] ip3 -> ip3
I0428 20:21:09.603652  1700 net.cpp:124] Setting up ip3
I0428 20:21:09.603673  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.603683  1700 net.cpp:139] Memory required for data: 16334800
I0428 20:21:09.603708  1700 layer_factory.hpp:77] Creating layer relu3
I0428 20:21:09.603724  1700 net.cpp:86] Creating Layer relu3
I0428 20:21:09.603736  1700 net.cpp:408] relu3 <- ip3
I0428 20:21:09.603752  1700 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:21:09.605772  1700 net.cpp:124] Setting up relu3
I0428 20:21:09.605803  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.605816  1700 net.cpp:139] Memory required for data: 16338800
I0428 20:21:09.605826  1700 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:21:09.605841  1700 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:21:09.605854  1700 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:21:09.605873  1700 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:21:09.605893  1700 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:21:09.605988  1700 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:21:09.606004  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.606017  1700 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:21:09.606029  1700 net.cpp:139] Memory required for data: 16346800
I0428 20:21:09.606039  1700 layer_factory.hpp:77] Creating layer accuracy
I0428 20:21:09.606055  1700 net.cpp:86] Creating Layer accuracy
I0428 20:21:09.606066  1700 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:21:09.606078  1700 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:21:09.606093  1700 net.cpp:382] accuracy -> accuracy
I0428 20:21:09.606114  1700 net.cpp:124] Setting up accuracy
I0428 20:21:09.606129  1700 net.cpp:131] Top shape: (1)
I0428 20:21:09.606138  1700 net.cpp:139] Memory required for data: 16346804
I0428 20:21:09.606148  1700 layer_factory.hpp:77] Creating layer loss
I0428 20:21:09.606161  1700 net.cpp:86] Creating Layer loss
I0428 20:21:09.606173  1700 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:21:09.606184  1700 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:21:09.606196  1700 net.cpp:382] loss -> loss
I0428 20:21:09.606215  1700 layer_factory.hpp:77] Creating layer loss
I0428 20:21:09.606851  1700 net.cpp:124] Setting up loss
I0428 20:21:09.606875  1700 net.cpp:131] Top shape: (1)
I0428 20:21:09.606887  1700 net.cpp:134]     with loss weight 1
I0428 20:21:09.606926  1700 net.cpp:139] Memory required for data: 16346808
I0428 20:21:09.606937  1700 net.cpp:200] loss needs backward computation.
I0428 20:21:09.606948  1700 net.cpp:202] accuracy does not need backward computation.
I0428 20:21:09.606959  1700 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:21:09.606971  1700 net.cpp:200] relu3 needs backward computation.
I0428 20:21:09.606979  1700 net.cpp:200] ip3 needs backward computation.
I0428 20:21:09.606989  1700 net.cpp:200] relu2 needs backward computation.
I0428 20:21:09.606998  1700 net.cpp:200] ip2 needs backward computation.
I0428 20:21:09.607007  1700 net.cpp:200] relu1 needs backward computation.
I0428 20:21:09.607017  1700 net.cpp:200] ip1 needs backward computation.
I0428 20:21:09.607025  1700 net.cpp:200] pool1 needs backward computation.
I0428 20:21:09.607035  1700 net.cpp:200] conv1 needs backward computation.
I0428 20:21:09.607044  1700 net.cpp:200] pool0 needs backward computation.
I0428 20:21:09.607054  1700 net.cpp:200] conv0 needs backward computation.
I0428 20:21:09.607065  1700 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:21:09.607077  1700 net.cpp:202] mnist does not need backward computation.
I0428 20:21:09.607085  1700 net.cpp:244] This network produces output accuracy
I0428 20:21:09.607096  1700 net.cpp:244] This network produces output loss
I0428 20:21:09.607128  1700 net.cpp:257] Network initialization done.
I0428 20:21:09.607261  1700 solver.cpp:56] Solver scaffolding done.
I0428 20:21:09.608162  1700 caffe.cpp:248] Starting Optimization
I0428 20:21:09.608178  1700 solver.cpp:273] Solving LeNet
I0428 20:21:09.608187  1700 solver.cpp:274] Learning Rate Policy: inv
I0428 20:21:09.608633  1700 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:21:09.697343  1709 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:09.699686  1700 solver.cpp:398]     Test net output #0: accuracy = 0.1025
I0428 20:21:09.699720  1700 solver.cpp:398]     Test net output #1: loss = 2.30762 (* 1 = 2.30762 loss)
I0428 20:21:09.705013  1700 solver.cpp:219] Iteration 0 (-9.17589e-31 iter/s, 0.0967833s/100 iters), loss = 2.30595
I0428 20:21:09.705052  1700 solver.cpp:238]     Train net output #0: loss = 2.30595 (* 1 = 2.30595 loss)
I0428 20:21:09.705065  1700 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:21:09.867635  1700 solver.cpp:219] Iteration 100 (615.13 iter/s, 0.162567s/100 iters), loss = 1.09742
I0428 20:21:09.867666  1700 solver.cpp:238]     Train net output #0: loss = 1.09742 (* 1 = 1.09742 loss)
I0428 20:21:09.867676  1700 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:21:10.030347  1700 solver.cpp:219] Iteration 200 (614.755 iter/s, 0.162666s/100 iters), loss = 1.22002
I0428 20:21:10.030381  1700 solver.cpp:238]     Train net output #0: loss = 1.22002 (* 1 = 1.22002 loss)
I0428 20:21:10.030393  1700 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:21:10.194157  1700 solver.cpp:219] Iteration 300 (610.642 iter/s, 0.163762s/100 iters), loss = 0.718817
I0428 20:21:10.194192  1700 solver.cpp:238]     Train net output #0: loss = 0.718817 (* 1 = 0.718817 loss)
I0428 20:21:10.194205  1700 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:21:10.359613  1700 solver.cpp:219] Iteration 400 (604.567 iter/s, 0.165408s/100 iters), loss = 1.07932
I0428 20:21:10.359649  1700 solver.cpp:238]     Train net output #0: loss = 1.07932 (* 1 = 1.07932 loss)
I0428 20:21:10.359660  1700 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:21:10.524827  1700 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:21:10.610324  1709 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:10.613512  1700 solver.cpp:398]     Test net output #0: accuracy = 0.7576
I0428 20:21:10.613554  1700 solver.cpp:398]     Test net output #1: loss = 0.821693 (* 1 = 0.821693 loss)
I0428 20:21:10.615375  1700 solver.cpp:219] Iteration 500 (391.076 iter/s, 0.255705s/100 iters), loss = 0.995536
I0428 20:21:10.615418  1700 solver.cpp:238]     Train net output #0: loss = 0.995536 (* 1 = 0.995536 loss)
I0428 20:21:10.615461  1700 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:21:10.794536  1700 solver.cpp:219] Iteration 600 (558.342 iter/s, 0.179102s/100 iters), loss = 0.841299
I0428 20:21:10.794584  1700 solver.cpp:238]     Train net output #0: loss = 0.841299 (* 1 = 0.841299 loss)
I0428 20:21:10.794596  1700 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:21:10.978726  1700 solver.cpp:219] Iteration 700 (543.105 iter/s, 0.184126s/100 iters), loss = 0.907558
I0428 20:21:10.978775  1700 solver.cpp:238]     Train net output #0: loss = 0.907558 (* 1 = 0.907558 loss)
I0428 20:21:10.978785  1700 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:21:11.163175  1700 solver.cpp:219] Iteration 800 (542.339 iter/s, 0.184386s/100 iters), loss = 0.967063
I0428 20:21:11.163223  1700 solver.cpp:238]     Train net output #0: loss = 0.967063 (* 1 = 0.967063 loss)
I0428 20:21:11.163234  1700 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:21:11.339133  1700 solver.cpp:219] Iteration 900 (568.513 iter/s, 0.175898s/100 iters), loss = 0.96221
I0428 20:21:11.339174  1700 solver.cpp:238]     Train net output #0: loss = 0.962211 (* 1 = 0.962211 loss)
I0428 20:21:11.339184  1700 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:21:11.392683  1706 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:11.500316  1700 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:21:11.502775  1700 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:21:11.504206  1700 solver.cpp:311] Iteration 1000, loss = 0.872849
I0428 20:21:11.504227  1700 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:21:11.583042  1709 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:21:11.585206  1700 solver.cpp:398]     Test net output #0: accuracy = 0.7794
I0428 20:21:11.585228  1700 solver.cpp:398]     Test net output #1: loss = 0.789982 (* 1 = 0.789982 loss)
I0428 20:21:11.585234  1700 solver.cpp:316] Optimization Done.
I0428 20:21:11.585239  1700 caffe.cpp:259] Optimization Done.
