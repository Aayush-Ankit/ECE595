I0428 20:05:16.239567 30575 caffe.cpp:218] Using GPUs 0
I0428 20:05:16.277706 30575 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:16.734232 30575 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test995.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:16.734383 30575 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test995.prototxt
I0428 20:05:16.734736 30575 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:16.734766 30575 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:16.734864 30575 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:16.734932 30575 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:16.735044 30575 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:16.735066 30575 net.cpp:86] Creating Layer mnist
I0428 20:05:16.735072 30575 net.cpp:382] mnist -> data
I0428 20:05:16.735090 30575 net.cpp:382] mnist -> label
I0428 20:05:16.736138 30575 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:16.738409 30575 net.cpp:124] Setting up mnist
I0428 20:05:16.738438 30575 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:16.738445 30575 net.cpp:131] Top shape: 64 (64)
I0428 20:05:16.738447 30575 net.cpp:139] Memory required for data: 200960
I0428 20:05:16.738452 30575 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:16.738466 30575 net.cpp:86] Creating Layer conv0
I0428 20:05:16.738481 30575 net.cpp:408] conv0 <- data
I0428 20:05:16.738492 30575 net.cpp:382] conv0 -> conv0
I0428 20:05:16.966599 30575 net.cpp:124] Setting up conv0
I0428 20:05:16.966625 30575 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:16.966629 30575 net.cpp:139] Memory required for data: 3887360
I0428 20:05:16.966644 30575 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:16.966655 30575 net.cpp:86] Creating Layer pool0
I0428 20:05:16.966660 30575 net.cpp:408] pool0 <- conv0
I0428 20:05:16.966665 30575 net.cpp:382] pool0 -> pool0
I0428 20:05:16.966720 30575 net.cpp:124] Setting up pool0
I0428 20:05:16.966725 30575 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:16.966728 30575 net.cpp:139] Memory required for data: 4808960
I0428 20:05:16.966732 30575 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:16.966742 30575 net.cpp:86] Creating Layer conv1
I0428 20:05:16.966745 30575 net.cpp:408] conv1 <- pool0
I0428 20:05:16.966749 30575 net.cpp:382] conv1 -> conv1
I0428 20:05:16.969607 30575 net.cpp:124] Setting up conv1
I0428 20:05:16.969635 30575 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:16.969655 30575 net.cpp:139] Memory required for data: 4841728
I0428 20:05:16.969662 30575 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:16.969669 30575 net.cpp:86] Creating Layer pool1
I0428 20:05:16.969673 30575 net.cpp:408] pool1 <- conv1
I0428 20:05:16.969677 30575 net.cpp:382] pool1 -> pool1
I0428 20:05:16.969727 30575 net.cpp:124] Setting up pool1
I0428 20:05:16.969732 30575 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:16.969734 30575 net.cpp:139] Memory required for data: 4849920
I0428 20:05:16.969738 30575 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:16.969755 30575 net.cpp:86] Creating Layer ip1
I0428 20:05:16.969758 30575 net.cpp:408] ip1 <- pool1
I0428 20:05:16.969763 30575 net.cpp:382] ip1 -> ip1
I0428 20:05:16.969849 30575 net.cpp:124] Setting up ip1
I0428 20:05:16.969856 30575 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:16.969859 30575 net.cpp:139] Memory required for data: 4852480
I0428 20:05:16.969866 30575 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:16.969871 30575 net.cpp:86] Creating Layer relu1
I0428 20:05:16.969874 30575 net.cpp:408] relu1 <- ip1
I0428 20:05:16.969878 30575 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:16.970042 30575 net.cpp:124] Setting up relu1
I0428 20:05:16.970051 30575 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:16.970053 30575 net.cpp:139] Memory required for data: 4855040
I0428 20:05:16.970057 30575 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:16.970062 30575 net.cpp:86] Creating Layer ip2
I0428 20:05:16.970065 30575 net.cpp:408] ip2 <- ip1
I0428 20:05:16.970069 30575 net.cpp:382] ip2 -> ip2
I0428 20:05:16.970160 30575 net.cpp:124] Setting up ip2
I0428 20:05:16.970165 30575 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:16.970168 30575 net.cpp:139] Memory required for data: 4867840
I0428 20:05:16.970173 30575 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:16.970180 30575 net.cpp:86] Creating Layer relu2
I0428 20:05:16.970181 30575 net.cpp:408] relu2 <- ip2
I0428 20:05:16.970185 30575 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:16.970886 30575 net.cpp:124] Setting up relu2
I0428 20:05:16.970898 30575 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:05:16.970916 30575 net.cpp:139] Memory required for data: 4880640
I0428 20:05:16.970919 30575 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:16.970927 30575 net.cpp:86] Creating Layer ip3
I0428 20:05:16.970929 30575 net.cpp:408] ip3 <- ip2
I0428 20:05:16.970934 30575 net.cpp:382] ip3 -> ip3
I0428 20:05:16.971043 30575 net.cpp:124] Setting up ip3
I0428 20:05:16.971050 30575 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:16.971053 30575 net.cpp:139] Memory required for data: 4883200
I0428 20:05:16.971060 30575 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:16.971065 30575 net.cpp:86] Creating Layer relu3
I0428 20:05:16.971068 30575 net.cpp:408] relu3 <- ip3
I0428 20:05:16.971072 30575 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:16.971246 30575 net.cpp:124] Setting up relu3
I0428 20:05:16.971254 30575 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:16.971257 30575 net.cpp:139] Memory required for data: 4885760
I0428 20:05:16.971261 30575 layer_factory.hpp:77] Creating layer loss
I0428 20:05:16.971266 30575 net.cpp:86] Creating Layer loss
I0428 20:05:16.971269 30575 net.cpp:408] loss <- ip3
I0428 20:05:16.971272 30575 net.cpp:408] loss <- label
I0428 20:05:16.971278 30575 net.cpp:382] loss -> loss
I0428 20:05:16.971295 30575 layer_factory.hpp:77] Creating layer loss
I0428 20:05:16.971546 30575 net.cpp:124] Setting up loss
I0428 20:05:16.971555 30575 net.cpp:131] Top shape: (1)
I0428 20:05:16.971559 30575 net.cpp:134]     with loss weight 1
I0428 20:05:16.971572 30575 net.cpp:139] Memory required for data: 4885764
I0428 20:05:16.971575 30575 net.cpp:200] loss needs backward computation.
I0428 20:05:16.971580 30575 net.cpp:200] relu3 needs backward computation.
I0428 20:05:16.971582 30575 net.cpp:200] ip3 needs backward computation.
I0428 20:05:16.971585 30575 net.cpp:200] relu2 needs backward computation.
I0428 20:05:16.971587 30575 net.cpp:200] ip2 needs backward computation.
I0428 20:05:16.971590 30575 net.cpp:200] relu1 needs backward computation.
I0428 20:05:16.971593 30575 net.cpp:200] ip1 needs backward computation.
I0428 20:05:16.971596 30575 net.cpp:200] pool1 needs backward computation.
I0428 20:05:16.971599 30575 net.cpp:200] conv1 needs backward computation.
I0428 20:05:16.971602 30575 net.cpp:200] pool0 needs backward computation.
I0428 20:05:16.971606 30575 net.cpp:200] conv0 needs backward computation.
I0428 20:05:16.971608 30575 net.cpp:202] mnist does not need backward computation.
I0428 20:05:16.971611 30575 net.cpp:244] This network produces output loss
I0428 20:05:16.971619 30575 net.cpp:257] Network initialization done.
I0428 20:05:16.971976 30575 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test995.prototxt
I0428 20:05:16.972003 30575 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:16.972095 30575 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:16.972184 30575 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:16.972228 30575 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:16.972239 30575 net.cpp:86] Creating Layer mnist
I0428 20:05:16.972244 30575 net.cpp:382] mnist -> data
I0428 20:05:16.972251 30575 net.cpp:382] mnist -> label
I0428 20:05:16.972329 30575 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:16.974333 30575 net.cpp:124] Setting up mnist
I0428 20:05:16.974345 30575 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:16.974350 30575 net.cpp:131] Top shape: 100 (100)
I0428 20:05:16.974354 30575 net.cpp:139] Memory required for data: 314000
I0428 20:05:16.974357 30575 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:16.974386 30575 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:16.974390 30575 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:16.974395 30575 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:16.974401 30575 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:16.974496 30575 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:16.974503 30575 net.cpp:131] Top shape: 100 (100)
I0428 20:05:16.974509 30575 net.cpp:131] Top shape: 100 (100)
I0428 20:05:16.974510 30575 net.cpp:139] Memory required for data: 314800
I0428 20:05:16.974514 30575 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:16.974521 30575 net.cpp:86] Creating Layer conv0
I0428 20:05:16.974524 30575 net.cpp:408] conv0 <- data
I0428 20:05:16.974529 30575 net.cpp:382] conv0 -> conv0
I0428 20:05:16.976218 30575 net.cpp:124] Setting up conv0
I0428 20:05:16.976233 30575 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:16.976235 30575 net.cpp:139] Memory required for data: 6074800
I0428 20:05:16.976243 30575 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:16.976249 30575 net.cpp:86] Creating Layer pool0
I0428 20:05:16.976269 30575 net.cpp:408] pool0 <- conv0
I0428 20:05:16.976274 30575 net.cpp:382] pool0 -> pool0
I0428 20:05:16.976306 30575 net.cpp:124] Setting up pool0
I0428 20:05:16.976311 30575 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:16.976313 30575 net.cpp:139] Memory required for data: 7514800
I0428 20:05:16.976316 30575 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:16.976325 30575 net.cpp:86] Creating Layer conv1
I0428 20:05:16.976327 30575 net.cpp:408] conv1 <- pool0
I0428 20:05:16.976332 30575 net.cpp:382] conv1 -> conv1
I0428 20:05:16.978462 30575 net.cpp:124] Setting up conv1
I0428 20:05:16.978490 30575 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:16.978494 30575 net.cpp:139] Memory required for data: 7566000
I0428 20:05:16.978502 30575 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:16.978507 30575 net.cpp:86] Creating Layer pool1
I0428 20:05:16.978526 30575 net.cpp:408] pool1 <- conv1
I0428 20:05:16.978533 30575 net.cpp:382] pool1 -> pool1
I0428 20:05:16.978567 30575 net.cpp:124] Setting up pool1
I0428 20:05:16.978588 30575 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:16.978591 30575 net.cpp:139] Memory required for data: 7578800
I0428 20:05:16.978593 30575 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:16.978600 30575 net.cpp:86] Creating Layer ip1
I0428 20:05:16.978616 30575 net.cpp:408] ip1 <- pool1
I0428 20:05:16.978621 30575 net.cpp:382] ip1 -> ip1
I0428 20:05:16.978706 30575 net.cpp:124] Setting up ip1
I0428 20:05:16.978714 30575 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:16.978726 30575 net.cpp:139] Memory required for data: 7582800
I0428 20:05:16.978734 30575 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:16.978739 30575 net.cpp:86] Creating Layer relu1
I0428 20:05:16.978741 30575 net.cpp:408] relu1 <- ip1
I0428 20:05:16.978746 30575 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:16.978941 30575 net.cpp:124] Setting up relu1
I0428 20:05:16.978950 30575 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:16.978953 30575 net.cpp:139] Memory required for data: 7586800
I0428 20:05:16.978956 30575 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:16.978962 30575 net.cpp:86] Creating Layer ip2
I0428 20:05:16.978965 30575 net.cpp:408] ip2 <- ip1
I0428 20:05:16.978971 30575 net.cpp:382] ip2 -> ip2
I0428 20:05:16.979077 30575 net.cpp:124] Setting up ip2
I0428 20:05:16.979084 30575 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:16.979087 30575 net.cpp:139] Memory required for data: 7606800
I0428 20:05:16.979092 30575 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:16.979096 30575 net.cpp:86] Creating Layer relu2
I0428 20:05:16.979099 30575 net.cpp:408] relu2 <- ip2
I0428 20:05:16.979104 30575 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:16.979321 30575 net.cpp:124] Setting up relu2
I0428 20:05:16.979328 30575 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:05:16.979332 30575 net.cpp:139] Memory required for data: 7626800
I0428 20:05:16.979336 30575 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:16.979341 30575 net.cpp:86] Creating Layer ip3
I0428 20:05:16.979344 30575 net.cpp:408] ip3 <- ip2
I0428 20:05:16.979348 30575 net.cpp:382] ip3 -> ip3
I0428 20:05:16.979447 30575 net.cpp:124] Setting up ip3
I0428 20:05:16.979454 30575 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:16.979457 30575 net.cpp:139] Memory required for data: 7630800
I0428 20:05:16.979465 30575 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:16.979487 30575 net.cpp:86] Creating Layer relu3
I0428 20:05:16.979496 30575 net.cpp:408] relu3 <- ip3
I0428 20:05:16.979501 30575 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:16.980199 30575 net.cpp:124] Setting up relu3
I0428 20:05:16.980211 30575 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:16.980213 30575 net.cpp:139] Memory required for data: 7634800
I0428 20:05:16.980216 30575 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:16.980221 30575 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:16.980224 30575 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:16.980229 30575 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:16.980252 30575 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:16.980305 30575 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:16.980311 30575 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:16.980314 30575 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:16.980317 30575 net.cpp:139] Memory required for data: 7642800
I0428 20:05:16.980320 30575 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:16.980325 30575 net.cpp:86] Creating Layer accuracy
I0428 20:05:16.980329 30575 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:16.980332 30575 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:16.980336 30575 net.cpp:382] accuracy -> accuracy
I0428 20:05:16.980343 30575 net.cpp:124] Setting up accuracy
I0428 20:05:16.980347 30575 net.cpp:131] Top shape: (1)
I0428 20:05:16.980350 30575 net.cpp:139] Memory required for data: 7642804
I0428 20:05:16.980352 30575 layer_factory.hpp:77] Creating layer loss
I0428 20:05:16.980356 30575 net.cpp:86] Creating Layer loss
I0428 20:05:16.980360 30575 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:16.980363 30575 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:16.980367 30575 net.cpp:382] loss -> loss
I0428 20:05:16.980372 30575 layer_factory.hpp:77] Creating layer loss
I0428 20:05:16.980614 30575 net.cpp:124] Setting up loss
I0428 20:05:16.980623 30575 net.cpp:131] Top shape: (1)
I0428 20:05:16.980628 30575 net.cpp:134]     with loss weight 1
I0428 20:05:16.980634 30575 net.cpp:139] Memory required for data: 7642808
I0428 20:05:16.980646 30575 net.cpp:200] loss needs backward computation.
I0428 20:05:16.980650 30575 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:16.980654 30575 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:16.980657 30575 net.cpp:200] relu3 needs backward computation.
I0428 20:05:16.980659 30575 net.cpp:200] ip3 needs backward computation.
I0428 20:05:16.980662 30575 net.cpp:200] relu2 needs backward computation.
I0428 20:05:16.980665 30575 net.cpp:200] ip2 needs backward computation.
I0428 20:05:16.980669 30575 net.cpp:200] relu1 needs backward computation.
I0428 20:05:16.980671 30575 net.cpp:200] ip1 needs backward computation.
I0428 20:05:16.980681 30575 net.cpp:200] pool1 needs backward computation.
I0428 20:05:16.980684 30575 net.cpp:200] conv1 needs backward computation.
I0428 20:05:16.980687 30575 net.cpp:200] pool0 needs backward computation.
I0428 20:05:16.980690 30575 net.cpp:200] conv0 needs backward computation.
I0428 20:05:16.980700 30575 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:16.980703 30575 net.cpp:202] mnist does not need backward computation.
I0428 20:05:16.980706 30575 net.cpp:244] This network produces output accuracy
I0428 20:05:16.980710 30575 net.cpp:244] This network produces output loss
I0428 20:05:16.980726 30575 net.cpp:257] Network initialization done.
I0428 20:05:16.980779 30575 solver.cpp:56] Solver scaffolding done.
I0428 20:05:16.981091 30575 caffe.cpp:248] Starting Optimization
I0428 20:05:16.981099 30575 solver.cpp:273] Solving LeNet
I0428 20:05:16.981103 30575 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:16.981914 30575 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:16.987161 30575 blocking_queue.cpp:49] Waiting for data
I0428 20:05:17.057763 30582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:17.058359 30575 solver.cpp:398]     Test net output #0: accuracy = 0.0942
I0428 20:05:17.058382 30575 solver.cpp:398]     Test net output #1: loss = 2.30947 (* 1 = 2.30947 loss)
I0428 20:05:17.061446 30575 solver.cpp:219] Iteration 0 (0 iter/s, 0.0803187s/100 iters), loss = 2.30217
I0428 20:05:17.061470 30575 solver.cpp:238]     Train net output #0: loss = 2.30217 (* 1 = 2.30217 loss)
I0428 20:05:17.061496 30575 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:17.150779 30575 solver.cpp:219] Iteration 100 (1119.81 iter/s, 0.089301s/100 iters), loss = 1.5126
I0428 20:05:17.150804 30575 solver.cpp:238]     Train net output #0: loss = 1.5126 (* 1 = 1.5126 loss)
I0428 20:05:17.150810 30575 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:17.242249 30575 solver.cpp:219] Iteration 200 (1093.68 iter/s, 0.0914348s/100 iters), loss = 1.43053
I0428 20:05:17.242274 30575 solver.cpp:238]     Train net output #0: loss = 1.43053 (* 1 = 1.43053 loss)
I0428 20:05:17.242280 30575 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:17.332769 30575 solver.cpp:219] Iteration 300 (1105.16 iter/s, 0.0904847s/100 iters), loss = 0.981836
I0428 20:05:17.332793 30575 solver.cpp:238]     Train net output #0: loss = 0.981836 (* 1 = 0.981836 loss)
I0428 20:05:17.332799 30575 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:17.423218 30575 solver.cpp:219] Iteration 400 (1106.01 iter/s, 0.090415s/100 iters), loss = 0.717697
I0428 20:05:17.423257 30575 solver.cpp:238]     Train net output #0: loss = 0.717697 (* 1 = 0.717697 loss)
I0428 20:05:17.423264 30575 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:17.511356 30575 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:17.578063 30582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:17.578689 30575 solver.cpp:398]     Test net output #0: accuracy = 0.7208
I0428 20:05:17.578711 30575 solver.cpp:398]     Test net output #1: loss = 0.745035 (* 1 = 0.745035 loss)
I0428 20:05:17.579632 30575 solver.cpp:219] Iteration 500 (639.522 iter/s, 0.156367s/100 iters), loss = 0.602122
I0428 20:05:17.579656 30575 solver.cpp:238]     Train net output #0: loss = 0.602122 (* 1 = 0.602122 loss)
I0428 20:05:17.579676 30575 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:17.673334 30575 solver.cpp:219] Iteration 600 (1067.61 iter/s, 0.0936675s/100 iters), loss = 0.790578
I0428 20:05:17.673359 30575 solver.cpp:238]     Train net output #0: loss = 0.790578 (* 1 = 0.790578 loss)
I0428 20:05:17.673380 30575 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:17.761586 30575 solver.cpp:219] Iteration 700 (1133.56 iter/s, 0.0882176s/100 iters), loss = 0.777539
I0428 20:05:17.761610 30575 solver.cpp:238]     Train net output #0: loss = 0.777539 (* 1 = 0.777539 loss)
I0428 20:05:17.761636 30575 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:17.848101 30575 solver.cpp:219] Iteration 800 (1156.32 iter/s, 0.0864809s/100 iters), loss = 0.503845
I0428 20:05:17.848124 30575 solver.cpp:238]     Train net output #0: loss = 0.503845 (* 1 = 0.503845 loss)
I0428 20:05:17.848146 30575 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:17.936311 30575 solver.cpp:219] Iteration 900 (1134.07 iter/s, 0.0881777s/100 iters), loss = 0.494216
I0428 20:05:17.936349 30575 solver.cpp:238]     Train net output #0: loss = 0.494216 (* 1 = 0.494216 loss)
I0428 20:05:17.936355 30575 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:17.966150 30581 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:18.023491 30575 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:18.024238 30575 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:18.024843 30575 solver.cpp:311] Iteration 1000, loss = 0.270885
I0428 20:05:18.024858 30575 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:18.100221 30582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:18.100826 30575 solver.cpp:398]     Test net output #0: accuracy = 0.9393
I0428 20:05:18.100844 30575 solver.cpp:398]     Test net output #1: loss = 0.200615 (* 1 = 0.200615 loss)
I0428 20:05:18.100848 30575 solver.cpp:316] Optimization Done.
I0428 20:05:18.100853 30575 caffe.cpp:259] Optimization Done.
