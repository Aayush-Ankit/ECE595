I0428 20:11:55.689723 32168 caffe.cpp:218] Using GPUs 0
I0428 20:11:55.722226 32168 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:11:56.240056 32168 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1170.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:11:56.240218 32168 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1170.prototxt
I0428 20:11:56.240563 32168 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:11:56.240583 32168 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:11:56.240672 32168 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:11:56.240763 32168 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:56.240911 32168 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:11:56.240944 32168 net.cpp:86] Creating Layer mnist
I0428 20:11:56.240957 32168 net.cpp:382] mnist -> data
I0428 20:11:56.240989 32168 net.cpp:382] mnist -> label
I0428 20:11:56.242187 32168 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:11:56.244637 32168 net.cpp:124] Setting up mnist
I0428 20:11:56.244657 32168 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:11:56.244668 32168 net.cpp:131] Top shape: 64 (64)
I0428 20:11:56.244674 32168 net.cpp:139] Memory required for data: 200960
I0428 20:11:56.244685 32168 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:56.244709 32168 net.cpp:86] Creating Layer conv0
I0428 20:11:56.244719 32168 net.cpp:408] conv0 <- data
I0428 20:11:56.244737 32168 net.cpp:382] conv0 -> conv0
I0428 20:11:56.536218 32168 net.cpp:124] Setting up conv0
I0428 20:11:56.536252 32168 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:56.536259 32168 net.cpp:139] Memory required for data: 3887360
I0428 20:11:56.536284 32168 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:56.536304 32168 net.cpp:86] Creating Layer pool0
I0428 20:11:56.536322 32168 net.cpp:408] pool0 <- conv0
I0428 20:11:56.536334 32168 net.cpp:382] pool0 -> pool0
I0428 20:11:56.536399 32168 net.cpp:124] Setting up pool0
I0428 20:11:56.536411 32168 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:56.536438 32168 net.cpp:139] Memory required for data: 4808960
I0428 20:11:56.536447 32168 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:56.536465 32168 net.cpp:86] Creating Layer conv1
I0428 20:11:56.536473 32168 net.cpp:408] conv1 <- pool0
I0428 20:11:56.536484 32168 net.cpp:382] conv1 -> conv1
I0428 20:11:56.539041 32168 net.cpp:124] Setting up conv1
I0428 20:11:56.539062 32168 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:11:56.539069 32168 net.cpp:139] Memory required for data: 6447360
I0428 20:11:56.539085 32168 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:56.539099 32168 net.cpp:86] Creating Layer pool1
I0428 20:11:56.539108 32168 net.cpp:408] pool1 <- conv1
I0428 20:11:56.539118 32168 net.cpp:382] pool1 -> pool1
I0428 20:11:56.539170 32168 net.cpp:124] Setting up pool1
I0428 20:11:56.539181 32168 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:11:56.539187 32168 net.cpp:139] Memory required for data: 6856960
I0428 20:11:56.539194 32168 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:56.539207 32168 net.cpp:86] Creating Layer ip1
I0428 20:11:56.539219 32168 net.cpp:408] ip1 <- pool1
I0428 20:11:56.539230 32168 net.cpp:382] ip1 -> ip1
I0428 20:11:56.540451 32168 net.cpp:124] Setting up ip1
I0428 20:11:56.540467 32168 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:56.540474 32168 net.cpp:139] Memory required for data: 6859520
I0428 20:11:56.540490 32168 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:56.540501 32168 net.cpp:86] Creating Layer relu1
I0428 20:11:56.540509 32168 net.cpp:408] relu1 <- ip1
I0428 20:11:56.540518 32168 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:56.540735 32168 net.cpp:124] Setting up relu1
I0428 20:11:56.540747 32168 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:56.540755 32168 net.cpp:139] Memory required for data: 6862080
I0428 20:11:56.540761 32168 layer_factory.hpp:77] Creating layer loss
I0428 20:11:56.540771 32168 net.cpp:86] Creating Layer loss
I0428 20:11:56.540778 32168 net.cpp:408] loss <- ip1
I0428 20:11:56.540787 32168 net.cpp:408] loss <- label
I0428 20:11:56.540797 32168 net.cpp:382] loss -> loss
I0428 20:11:56.540834 32168 layer_factory.hpp:77] Creating layer loss
I0428 20:11:56.541795 32168 net.cpp:124] Setting up loss
I0428 20:11:56.541811 32168 net.cpp:131] Top shape: (1)
I0428 20:11:56.541818 32168 net.cpp:134]     with loss weight 1
I0428 20:11:56.541846 32168 net.cpp:139] Memory required for data: 6862084
I0428 20:11:56.541854 32168 net.cpp:200] loss needs backward computation.
I0428 20:11:56.541862 32168 net.cpp:200] relu1 needs backward computation.
I0428 20:11:56.541869 32168 net.cpp:200] ip1 needs backward computation.
I0428 20:11:56.541877 32168 net.cpp:200] pool1 needs backward computation.
I0428 20:11:56.541882 32168 net.cpp:200] conv1 needs backward computation.
I0428 20:11:56.541889 32168 net.cpp:200] pool0 needs backward computation.
I0428 20:11:56.541896 32168 net.cpp:200] conv0 needs backward computation.
I0428 20:11:56.541903 32168 net.cpp:202] mnist does not need backward computation.
I0428 20:11:56.541909 32168 net.cpp:244] This network produces output loss
I0428 20:11:56.541924 32168 net.cpp:257] Network initialization done.
I0428 20:11:56.542243 32168 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1170.prototxt
I0428 20:11:56.542281 32168 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:56.542378 32168 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:11:56.542500 32168 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:56.542567 32168 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:56.542592 32168 net.cpp:86] Creating Layer mnist
I0428 20:11:56.542601 32168 net.cpp:382] mnist -> data
I0428 20:11:56.542615 32168 net.cpp:382] mnist -> label
I0428 20:11:56.542757 32168 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:56.545277 32168 net.cpp:124] Setting up mnist
I0428 20:11:56.545295 32168 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:56.545306 32168 net.cpp:131] Top shape: 100 (100)
I0428 20:11:56.545313 32168 net.cpp:139] Memory required for data: 314000
I0428 20:11:56.545320 32168 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:56.545332 32168 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:56.545339 32168 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:56.545351 32168 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:56.545363 32168 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:56.545457 32168 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:56.545469 32168 net.cpp:131] Top shape: 100 (100)
I0428 20:11:56.545476 32168 net.cpp:131] Top shape: 100 (100)
I0428 20:11:56.545482 32168 net.cpp:139] Memory required for data: 314800
I0428 20:11:56.545490 32168 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:56.545506 32168 net.cpp:86] Creating Layer conv0
I0428 20:11:56.545513 32168 net.cpp:408] conv0 <- data
I0428 20:11:56.545526 32168 net.cpp:382] conv0 -> conv0
I0428 20:11:56.546366 32168 net.cpp:124] Setting up conv0
I0428 20:11:56.546382 32168 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:56.546389 32168 net.cpp:139] Memory required for data: 6074800
I0428 20:11:56.546406 32168 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:56.546419 32168 net.cpp:86] Creating Layer pool0
I0428 20:11:56.546428 32168 net.cpp:408] pool0 <- conv0
I0428 20:11:56.546437 32168 net.cpp:382] pool0 -> pool0
I0428 20:11:56.546488 32168 net.cpp:124] Setting up pool0
I0428 20:11:56.546499 32168 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:56.546504 32168 net.cpp:139] Memory required for data: 7514800
I0428 20:11:56.546510 32168 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:56.546526 32168 net.cpp:86] Creating Layer conv1
I0428 20:11:56.546535 32168 net.cpp:408] conv1 <- pool0
I0428 20:11:56.546545 32168 net.cpp:382] conv1 -> conv1
I0428 20:11:56.548607 32168 net.cpp:124] Setting up conv1
I0428 20:11:56.548629 32168 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:11:56.548636 32168 net.cpp:139] Memory required for data: 10074800
I0428 20:11:56.548653 32168 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:56.548666 32168 net.cpp:86] Creating Layer pool1
I0428 20:11:56.548686 32168 net.cpp:408] pool1 <- conv1
I0428 20:11:56.548697 32168 net.cpp:382] pool1 -> pool1
I0428 20:11:56.548748 32168 net.cpp:124] Setting up pool1
I0428 20:11:56.548758 32168 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:11:56.548765 32168 net.cpp:139] Memory required for data: 10714800
I0428 20:11:56.548771 32168 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:56.548784 32168 net.cpp:86] Creating Layer ip1
I0428 20:11:56.548790 32168 net.cpp:408] ip1 <- pool1
I0428 20:11:56.548800 32168 net.cpp:382] ip1 -> ip1
I0428 20:11:56.549065 32168 net.cpp:124] Setting up ip1
I0428 20:11:56.549078 32168 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:56.549085 32168 net.cpp:139] Memory required for data: 10718800
I0428 20:11:56.549099 32168 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:56.549109 32168 net.cpp:86] Creating Layer relu1
I0428 20:11:56.549116 32168 net.cpp:408] relu1 <- ip1
I0428 20:11:56.549126 32168 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:56.550063 32168 net.cpp:124] Setting up relu1
I0428 20:11:56.550078 32168 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:56.550086 32168 net.cpp:139] Memory required for data: 10722800
I0428 20:11:56.550092 32168 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:11:56.550106 32168 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:11:56.550112 32168 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:11:56.550122 32168 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:11:56.550135 32168 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:11:56.550185 32168 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:11:56.550195 32168 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:56.550205 32168 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:56.550212 32168 net.cpp:139] Memory required for data: 10730800
I0428 20:11:56.550220 32168 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:56.550230 32168 net.cpp:86] Creating Layer accuracy
I0428 20:11:56.550236 32168 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:11:56.550245 32168 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:56.550253 32168 net.cpp:382] accuracy -> accuracy
I0428 20:11:56.550271 32168 net.cpp:124] Setting up accuracy
I0428 20:11:56.550282 32168 net.cpp:131] Top shape: (1)
I0428 20:11:56.550287 32168 net.cpp:139] Memory required for data: 10730804
I0428 20:11:56.550293 32168 layer_factory.hpp:77] Creating layer loss
I0428 20:11:56.550303 32168 net.cpp:86] Creating Layer loss
I0428 20:11:56.550312 32168 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:11:56.550319 32168 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:56.550329 32168 net.cpp:382] loss -> loss
I0428 20:11:56.550343 32168 layer_factory.hpp:77] Creating layer loss
I0428 20:11:56.550616 32168 net.cpp:124] Setting up loss
I0428 20:11:56.550629 32168 net.cpp:131] Top shape: (1)
I0428 20:11:56.550637 32168 net.cpp:134]     with loss weight 1
I0428 20:11:56.550647 32168 net.cpp:139] Memory required for data: 10730808
I0428 20:11:56.550655 32168 net.cpp:200] loss needs backward computation.
I0428 20:11:56.550664 32168 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:56.550673 32168 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:11:56.550678 32168 net.cpp:200] relu1 needs backward computation.
I0428 20:11:56.550686 32168 net.cpp:200] ip1 needs backward computation.
I0428 20:11:56.550698 32168 net.cpp:200] pool1 needs backward computation.
I0428 20:11:56.550704 32168 net.cpp:200] conv1 needs backward computation.
I0428 20:11:56.550711 32168 net.cpp:200] pool0 needs backward computation.
I0428 20:11:56.550719 32168 net.cpp:200] conv0 needs backward computation.
I0428 20:11:56.550730 32168 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:56.550739 32168 net.cpp:202] mnist does not need backward computation.
I0428 20:11:56.550745 32168 net.cpp:244] This network produces output accuracy
I0428 20:11:56.550752 32168 net.cpp:244] This network produces output loss
I0428 20:11:56.550784 32168 net.cpp:257] Network initialization done.
I0428 20:11:56.550832 32168 solver.cpp:56] Solver scaffolding done.
I0428 20:11:56.551095 32168 caffe.cpp:248] Starting Optimization
I0428 20:11:56.551103 32168 solver.cpp:273] Solving LeNet
I0428 20:11:56.551110 32168 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:56.552006 32168 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:56.559027 32168 blocking_queue.cpp:49] Waiting for data
I0428 20:11:56.630981 32175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:56.631713 32168 solver.cpp:398]     Test net output #0: accuracy = 0.0839
I0428 20:11:56.631742 32168 solver.cpp:398]     Test net output #1: loss = 2.40128 (* 1 = 2.40128 loss)
I0428 20:11:56.636988 32168 solver.cpp:219] Iteration 0 (-9.47278e-43 iter/s, 0.085838s/100 iters), loss = 2.41656
I0428 20:11:56.637024 32168 solver.cpp:238]     Train net output #0: loss = 2.41656 (* 1 = 2.41656 loss)
I0428 20:11:56.637045 32168 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:56.821863 32168 solver.cpp:219] Iteration 100 (541.053 iter/s, 0.184825s/100 iters), loss = 2.182
I0428 20:11:56.821918 32168 solver.cpp:238]     Train net output #0: loss = 2.182 (* 1 = 2.182 loss)
I0428 20:11:56.821935 32168 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:57.018824 32168 solver.cpp:219] Iteration 200 (507.886 iter/s, 0.196895s/100 iters), loss = 2.20787
I0428 20:11:57.018887 32168 solver.cpp:238]     Train net output #0: loss = 2.20787 (* 1 = 2.20787 loss)
I0428 20:11:57.018909 32168 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:57.217818 32168 solver.cpp:219] Iteration 300 (502.719 iter/s, 0.198918s/100 iters), loss = 1.52632
I0428 20:11:57.217880 32168 solver.cpp:238]     Train net output #0: loss = 1.52632 (* 1 = 1.52632 loss)
I0428 20:11:57.217903 32168 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:57.416057 32168 solver.cpp:219] Iteration 400 (504.626 iter/s, 0.198167s/100 iters), loss = 1.4535
I0428 20:11:57.416121 32168 solver.cpp:238]     Train net output #0: loss = 1.4535 (* 1 = 1.4535 loss)
I0428 20:11:57.416143 32168 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:57.612376 32168 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:57.684769 32175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:57.687084 32168 solver.cpp:398]     Test net output #0: accuracy = 0.4502
I0428 20:11:57.687124 32168 solver.cpp:398]     Test net output #1: loss = 1.50295 (* 1 = 1.50295 loss)
I0428 20:11:57.688892 32168 solver.cpp:219] Iteration 500 (366.623 iter/s, 0.27276s/100 iters), loss = 1.52709
I0428 20:11:57.688935 32168 solver.cpp:238]     Train net output #0: loss = 1.52709 (* 1 = 1.52709 loss)
I0428 20:11:57.688951 32168 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:57.876767 32168 solver.cpp:219] Iteration 600 (532.422 iter/s, 0.187821s/100 iters), loss = 1.80641
I0428 20:11:57.876835 32168 solver.cpp:238]     Train net output #0: loss = 1.80641 (* 1 = 1.80641 loss)
I0428 20:11:57.876857 32168 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:58.072718 32168 solver.cpp:219] Iteration 700 (510.509 iter/s, 0.195883s/100 iters), loss = 1.63517
I0428 20:11:58.072785 32168 solver.cpp:238]     Train net output #0: loss = 1.63517 (* 1 = 1.63517 loss)
I0428 20:11:58.072821 32168 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:58.270952 32168 solver.cpp:219] Iteration 800 (504.652 iter/s, 0.198156s/100 iters), loss = 1.48087
I0428 20:11:58.271005 32168 solver.cpp:238]     Train net output #0: loss = 1.48087 (* 1 = 1.48087 loss)
I0428 20:11:58.271020 32168 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:58.471657 32168 solver.cpp:219] Iteration 900 (498.414 iter/s, 0.200636s/100 iters), loss = 1.51956
I0428 20:11:58.471712 32168 solver.cpp:238]     Train net output #0: loss = 1.51956 (* 1 = 1.51956 loss)
I0428 20:11:58.471727 32168 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:58.536882 32174 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:58.664837 32168 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:58.667659 32168 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:58.669296 32168 solver.cpp:311] Iteration 1000, loss = 1.49615
I0428 20:11:58.669333 32168 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:58.741951 32175 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:58.744240 32168 solver.cpp:398]     Test net output #0: accuracy = 0.4762
I0428 20:11:58.744271 32168 solver.cpp:398]     Test net output #1: loss = 1.45109 (* 1 = 1.45109 loss)
I0428 20:11:58.744282 32168 solver.cpp:316] Optimization Done.
I0428 20:11:58.744287 32168 caffe.cpp:259] Optimization Done.
