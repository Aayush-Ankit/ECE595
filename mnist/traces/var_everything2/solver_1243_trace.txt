I0428 20:15:18.458235   414 caffe.cpp:218] Using GPUs 0
I0428 20:15:18.500399   414 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:15:19.019942   414 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1243.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:15:19.020082   414 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1243.prototxt
I0428 20:15:19.020503   414 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:15:19.020521   414 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:15:19.020624   414 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:15:19.020704   414 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:19.020804   414 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:15:19.020838   414 net.cpp:86] Creating Layer mnist
I0428 20:15:19.020850   414 net.cpp:382] mnist -> data
I0428 20:15:19.020874   414 net.cpp:382] mnist -> label
I0428 20:15:19.021973   414 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:15:19.024441   414 net.cpp:124] Setting up mnist
I0428 20:15:19.024461   414 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:15:19.024466   414 net.cpp:131] Top shape: 64 (64)
I0428 20:15:19.024471   414 net.cpp:139] Memory required for data: 200960
I0428 20:15:19.024477   414 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:19.024494   414 net.cpp:86] Creating Layer conv0
I0428 20:15:19.024516   414 net.cpp:408] conv0 <- data
I0428 20:15:19.024528   414 net.cpp:382] conv0 -> conv0
I0428 20:15:19.316972   414 net.cpp:124] Setting up conv0
I0428 20:15:19.316999   414 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:15:19.317004   414 net.cpp:139] Memory required for data: 7573760
I0428 20:15:19.317021   414 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:19.317035   414 net.cpp:86] Creating Layer pool0
I0428 20:15:19.317040   414 net.cpp:408] pool0 <- conv0
I0428 20:15:19.317046   414 net.cpp:382] pool0 -> pool0
I0428 20:15:19.317100   414 net.cpp:124] Setting up pool0
I0428 20:15:19.317106   414 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:15:19.317111   414 net.cpp:139] Memory required for data: 9416960
I0428 20:15:19.317113   414 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:19.317126   414 net.cpp:86] Creating Layer conv1
I0428 20:15:19.317129   414 net.cpp:408] conv1 <- pool0
I0428 20:15:19.317136   414 net.cpp:382] conv1 -> conv1
I0428 20:15:19.319203   414 net.cpp:124] Setting up conv1
I0428 20:15:19.319221   414 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:15:19.319226   414 net.cpp:139] Memory required for data: 9449728
I0428 20:15:19.319236   414 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:19.319245   414 net.cpp:86] Creating Layer pool1
I0428 20:15:19.319249   414 net.cpp:408] pool1 <- conv1
I0428 20:15:19.319255   414 net.cpp:382] pool1 -> pool1
I0428 20:15:19.319298   414 net.cpp:124] Setting up pool1
I0428 20:15:19.319305   414 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:15:19.319308   414 net.cpp:139] Memory required for data: 9457920
I0428 20:15:19.319311   414 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:19.319319   414 net.cpp:86] Creating Layer ip1
I0428 20:15:19.319322   414 net.cpp:408] ip1 <- pool1
I0428 20:15:19.319330   414 net.cpp:382] ip1 -> ip1
I0428 20:15:19.319460   414 net.cpp:124] Setting up ip1
I0428 20:15:19.319469   414 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:19.319473   414 net.cpp:139] Memory required for data: 9470720
I0428 20:15:19.319481   414 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:19.319488   414 net.cpp:86] Creating Layer relu1
I0428 20:15:19.319491   414 net.cpp:408] relu1 <- ip1
I0428 20:15:19.319497   414 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:19.319694   414 net.cpp:124] Setting up relu1
I0428 20:15:19.319705   414 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:19.319708   414 net.cpp:139] Memory required for data: 9483520
I0428 20:15:19.319712   414 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:19.319720   414 net.cpp:86] Creating Layer ip2
I0428 20:15:19.319722   414 net.cpp:408] ip2 <- ip1
I0428 20:15:19.319730   414 net.cpp:382] ip2 -> ip2
I0428 20:15:19.319850   414 net.cpp:124] Setting up ip2
I0428 20:15:19.319859   414 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:15:19.319862   414 net.cpp:139] Memory required for data: 9489920
I0428 20:15:19.319869   414 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:19.319875   414 net.cpp:86] Creating Layer relu2
I0428 20:15:19.319878   414 net.cpp:408] relu2 <- ip2
I0428 20:15:19.319885   414 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:19.320701   414 net.cpp:124] Setting up relu2
I0428 20:15:19.320715   414 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:15:19.320719   414 net.cpp:139] Memory required for data: 9496320
I0428 20:15:19.320724   414 layer_factory.hpp:77] Creating layer ip3
I0428 20:15:19.320732   414 net.cpp:86] Creating Layer ip3
I0428 20:15:19.320736   414 net.cpp:408] ip3 <- ip2
I0428 20:15:19.320742   414 net.cpp:382] ip3 -> ip3
I0428 20:15:19.320868   414 net.cpp:124] Setting up ip3
I0428 20:15:19.320878   414 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:19.320880   414 net.cpp:139] Memory required for data: 9498880
I0428 20:15:19.320891   414 layer_factory.hpp:77] Creating layer relu3
I0428 20:15:19.320897   414 net.cpp:86] Creating Layer relu3
I0428 20:15:19.320901   414 net.cpp:408] relu3 <- ip3
I0428 20:15:19.320905   414 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:15:19.321107   414 net.cpp:124] Setting up relu3
I0428 20:15:19.321120   414 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:19.321123   414 net.cpp:139] Memory required for data: 9501440
I0428 20:15:19.321126   414 layer_factory.hpp:77] Creating layer loss
I0428 20:15:19.321133   414 net.cpp:86] Creating Layer loss
I0428 20:15:19.321136   414 net.cpp:408] loss <- ip3
I0428 20:15:19.321141   414 net.cpp:408] loss <- label
I0428 20:15:19.321147   414 net.cpp:382] loss -> loss
I0428 20:15:19.321166   414 layer_factory.hpp:77] Creating layer loss
I0428 20:15:19.321439   414 net.cpp:124] Setting up loss
I0428 20:15:19.321449   414 net.cpp:131] Top shape: (1)
I0428 20:15:19.321452   414 net.cpp:134]     with loss weight 1
I0428 20:15:19.321467   414 net.cpp:139] Memory required for data: 9501444
I0428 20:15:19.321471   414 net.cpp:200] loss needs backward computation.
I0428 20:15:19.321475   414 net.cpp:200] relu3 needs backward computation.
I0428 20:15:19.321478   414 net.cpp:200] ip3 needs backward computation.
I0428 20:15:19.321481   414 net.cpp:200] relu2 needs backward computation.
I0428 20:15:19.321485   414 net.cpp:200] ip2 needs backward computation.
I0428 20:15:19.321487   414 net.cpp:200] relu1 needs backward computation.
I0428 20:15:19.321491   414 net.cpp:200] ip1 needs backward computation.
I0428 20:15:19.321494   414 net.cpp:200] pool1 needs backward computation.
I0428 20:15:19.321497   414 net.cpp:200] conv1 needs backward computation.
I0428 20:15:19.321501   414 net.cpp:200] pool0 needs backward computation.
I0428 20:15:19.321504   414 net.cpp:200] conv0 needs backward computation.
I0428 20:15:19.321508   414 net.cpp:202] mnist does not need backward computation.
I0428 20:15:19.321511   414 net.cpp:244] This network produces output loss
I0428 20:15:19.321521   414 net.cpp:257] Network initialization done.
I0428 20:15:19.321907   414 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1243.prototxt
I0428 20:15:19.321938   414 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:15:19.322042   414 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:15:19.322135   414 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:19.322185   414 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:15:19.322199   414 net.cpp:86] Creating Layer mnist
I0428 20:15:19.322206   414 net.cpp:382] mnist -> data
I0428 20:15:19.322214   414 net.cpp:382] mnist -> label
I0428 20:15:19.322314   414 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:15:19.324420   414 net.cpp:124] Setting up mnist
I0428 20:15:19.324435   414 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:15:19.324441   414 net.cpp:131] Top shape: 100 (100)
I0428 20:15:19.324445   414 net.cpp:139] Memory required for data: 314000
I0428 20:15:19.324448   414 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:15:19.324456   414 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:15:19.324460   414 net.cpp:408] label_mnist_1_split <- label
I0428 20:15:19.324493   414 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:15:19.324502   414 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:15:19.324561   414 net.cpp:124] Setting up label_mnist_1_split
I0428 20:15:19.324575   414 net.cpp:131] Top shape: 100 (100)
I0428 20:15:19.324579   414 net.cpp:131] Top shape: 100 (100)
I0428 20:15:19.324582   414 net.cpp:139] Memory required for data: 314800
I0428 20:15:19.324586   414 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:19.324596   414 net.cpp:86] Creating Layer conv0
I0428 20:15:19.324600   414 net.cpp:408] conv0 <- data
I0428 20:15:19.324606   414 net.cpp:382] conv0 -> conv0
I0428 20:15:19.326314   414 net.cpp:124] Setting up conv0
I0428 20:15:19.326330   414 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:15:19.326334   414 net.cpp:139] Memory required for data: 11834800
I0428 20:15:19.326345   414 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:19.326352   414 net.cpp:86] Creating Layer pool0
I0428 20:15:19.326356   414 net.cpp:408] pool0 <- conv0
I0428 20:15:19.326364   414 net.cpp:382] pool0 -> pool0
I0428 20:15:19.326405   414 net.cpp:124] Setting up pool0
I0428 20:15:19.326411   414 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:15:19.326414   414 net.cpp:139] Memory required for data: 14714800
I0428 20:15:19.326417   414 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:19.326431   414 net.cpp:86] Creating Layer conv1
I0428 20:15:19.326434   414 net.cpp:408] conv1 <- pool0
I0428 20:15:19.326441   414 net.cpp:382] conv1 -> conv1
I0428 20:15:19.328120   414 net.cpp:124] Setting up conv1
I0428 20:15:19.328140   414 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:15:19.328143   414 net.cpp:139] Memory required for data: 14766000
I0428 20:15:19.328155   414 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:19.328162   414 net.cpp:86] Creating Layer pool1
I0428 20:15:19.328166   414 net.cpp:408] pool1 <- conv1
I0428 20:15:19.328173   414 net.cpp:382] pool1 -> pool1
I0428 20:15:19.328215   414 net.cpp:124] Setting up pool1
I0428 20:15:19.328222   414 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:15:19.328224   414 net.cpp:139] Memory required for data: 14778800
I0428 20:15:19.328228   414 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:19.328235   414 net.cpp:86] Creating Layer ip1
I0428 20:15:19.328239   414 net.cpp:408] ip1 <- pool1
I0428 20:15:19.328245   414 net.cpp:382] ip1 -> ip1
I0428 20:15:19.328372   414 net.cpp:124] Setting up ip1
I0428 20:15:19.328382   414 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:19.328395   414 net.cpp:139] Memory required for data: 14798800
I0428 20:15:19.328404   414 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:19.328413   414 net.cpp:86] Creating Layer relu1
I0428 20:15:19.328416   414 net.cpp:408] relu1 <- ip1
I0428 20:15:19.328421   414 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:19.328606   414 net.cpp:124] Setting up relu1
I0428 20:15:19.328618   414 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:19.328621   414 net.cpp:139] Memory required for data: 14818800
I0428 20:15:19.328625   414 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:19.328634   414 net.cpp:86] Creating Layer ip2
I0428 20:15:19.328637   414 net.cpp:408] ip2 <- ip1
I0428 20:15:19.328644   414 net.cpp:382] ip2 -> ip2
I0428 20:15:19.328768   414 net.cpp:124] Setting up ip2
I0428 20:15:19.328778   414 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:15:19.328780   414 net.cpp:139] Memory required for data: 14828800
I0428 20:15:19.328788   414 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:19.328794   414 net.cpp:86] Creating Layer relu2
I0428 20:15:19.328797   414 net.cpp:408] relu2 <- ip2
I0428 20:15:19.328802   414 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:19.329063   414 net.cpp:124] Setting up relu2
I0428 20:15:19.329075   414 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:15:19.329079   414 net.cpp:139] Memory required for data: 14838800
I0428 20:15:19.329082   414 layer_factory.hpp:77] Creating layer ip3
I0428 20:15:19.329090   414 net.cpp:86] Creating Layer ip3
I0428 20:15:19.329093   414 net.cpp:408] ip3 <- ip2
I0428 20:15:19.329100   414 net.cpp:382] ip3 -> ip3
I0428 20:15:19.329226   414 net.cpp:124] Setting up ip3
I0428 20:15:19.329234   414 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:19.329237   414 net.cpp:139] Memory required for data: 14842800
I0428 20:15:19.329246   414 layer_factory.hpp:77] Creating layer relu3
I0428 20:15:19.329252   414 net.cpp:86] Creating Layer relu3
I0428 20:15:19.329254   414 net.cpp:408] relu3 <- ip3
I0428 20:15:19.329260   414 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:15:19.330142   414 net.cpp:124] Setting up relu3
I0428 20:15:19.330154   414 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:19.330158   414 net.cpp:139] Memory required for data: 14846800
I0428 20:15:19.330162   414 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:15:19.330168   414 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:15:19.330171   414 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:15:19.330178   414 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:15:19.330184   414 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:15:19.330227   414 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:15:19.330234   414 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:19.330240   414 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:19.330242   414 net.cpp:139] Memory required for data: 14854800
I0428 20:15:19.330245   414 layer_factory.hpp:77] Creating layer accuracy
I0428 20:15:19.330250   414 net.cpp:86] Creating Layer accuracy
I0428 20:15:19.330255   414 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:15:19.330260   414 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:15:19.330263   414 net.cpp:382] accuracy -> accuracy
I0428 20:15:19.330271   414 net.cpp:124] Setting up accuracy
I0428 20:15:19.330276   414 net.cpp:131] Top shape: (1)
I0428 20:15:19.330278   414 net.cpp:139] Memory required for data: 14854804
I0428 20:15:19.330281   414 layer_factory.hpp:77] Creating layer loss
I0428 20:15:19.330287   414 net.cpp:86] Creating Layer loss
I0428 20:15:19.330291   414 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:15:19.330296   414 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:15:19.330301   414 net.cpp:382] loss -> loss
I0428 20:15:19.330307   414 layer_factory.hpp:77] Creating layer loss
I0428 20:15:19.330562   414 net.cpp:124] Setting up loss
I0428 20:15:19.330572   414 net.cpp:131] Top shape: (1)
I0428 20:15:19.330576   414 net.cpp:134]     with loss weight 1
I0428 20:15:19.330595   414 net.cpp:139] Memory required for data: 14854808
I0428 20:15:19.330600   414 net.cpp:200] loss needs backward computation.
I0428 20:15:19.330605   414 net.cpp:202] accuracy does not need backward computation.
I0428 20:15:19.330608   414 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:15:19.330612   414 net.cpp:200] relu3 needs backward computation.
I0428 20:15:19.330615   414 net.cpp:200] ip3 needs backward computation.
I0428 20:15:19.330620   414 net.cpp:200] relu2 needs backward computation.
I0428 20:15:19.330622   414 net.cpp:200] ip2 needs backward computation.
I0428 20:15:19.330626   414 net.cpp:200] relu1 needs backward computation.
I0428 20:15:19.330628   414 net.cpp:200] ip1 needs backward computation.
I0428 20:15:19.330631   414 net.cpp:200] pool1 needs backward computation.
I0428 20:15:19.330634   414 net.cpp:200] conv1 needs backward computation.
I0428 20:15:19.330638   414 net.cpp:200] pool0 needs backward computation.
I0428 20:15:19.330641   414 net.cpp:200] conv0 needs backward computation.
I0428 20:15:19.330646   414 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:15:19.330649   414 net.cpp:202] mnist does not need backward computation.
I0428 20:15:19.330652   414 net.cpp:244] This network produces output accuracy
I0428 20:15:19.330657   414 net.cpp:244] This network produces output loss
I0428 20:15:19.330669   414 net.cpp:257] Network initialization done.
I0428 20:15:19.330716   414 solver.cpp:56] Solver scaffolding done.
I0428 20:15:19.331094   414 caffe.cpp:248] Starting Optimization
I0428 20:15:19.331100   414 solver.cpp:273] Solving LeNet
I0428 20:15:19.331102   414 solver.cpp:274] Learning Rate Policy: inv
I0428 20:15:19.331377   414 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:15:19.338502   414 blocking_queue.cpp:49] Waiting for data
I0428 20:15:19.409271   425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:19.410051   414 solver.cpp:398]     Test net output #0: accuracy = 0.1021
I0428 20:15:19.410084   414 solver.cpp:398]     Test net output #1: loss = 2.308 (* 1 = 2.308 loss)
I0428 20:15:19.414319   414 solver.cpp:219] Iteration 0 (0 iter/s, 0.0831846s/100 iters), loss = 2.31213
I0428 20:15:19.414356   414 solver.cpp:238]     Train net output #0: loss = 2.31213 (* 1 = 2.31213 loss)
I0428 20:15:19.414366   414 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:15:19.546937   414 solver.cpp:219] Iteration 100 (754.271 iter/s, 0.132578s/100 iters), loss = 1.31292
I0428 20:15:19.546993   414 solver.cpp:238]     Train net output #0: loss = 1.31292 (* 1 = 1.31292 loss)
I0428 20:15:19.546999   414 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:15:19.680284   414 solver.cpp:219] Iteration 200 (750.294 iter/s, 0.133281s/100 iters), loss = 1.2996
I0428 20:15:19.680323   414 solver.cpp:238]     Train net output #0: loss = 1.2996 (* 1 = 1.2996 loss)
I0428 20:15:19.680330   414 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:15:19.803319   414 solver.cpp:219] Iteration 300 (813.004 iter/s, 0.123001s/100 iters), loss = 1.17498
I0428 20:15:19.803357   414 solver.cpp:238]     Train net output #0: loss = 1.17498 (* 1 = 1.17498 loss)
I0428 20:15:19.803364   414 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:15:19.915896   414 solver.cpp:219] Iteration 400 (888.543 iter/s, 0.112544s/100 iters), loss = 0.95734
I0428 20:15:19.915936   414 solver.cpp:238]     Train net output #0: loss = 0.95734 (* 1 = 0.95734 loss)
I0428 20:15:19.915942   414 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:15:20.027027   414 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:15:20.105134   425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:20.105919   414 solver.cpp:398]     Test net output #0: accuracy = 0.7326
I0428 20:15:20.105957   414 solver.cpp:398]     Test net output #1: loss = 0.89522 (* 1 = 0.89522 loss)
I0428 20:15:20.107133   414 solver.cpp:219] Iteration 500 (523.015 iter/s, 0.191199s/100 iters), loss = 0.7587
I0428 20:15:20.107172   414 solver.cpp:238]     Train net output #0: loss = 0.7587 (* 1 = 0.7587 loss)
I0428 20:15:20.107192   414 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:15:20.226421   414 solver.cpp:219] Iteration 600 (838.54 iter/s, 0.119255s/100 iters), loss = 0.626749
I0428 20:15:20.226460   414 solver.cpp:238]     Train net output #0: loss = 0.626749 (* 1 = 0.626749 loss)
I0428 20:15:20.226467   414 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:15:20.340018   414 solver.cpp:219] Iteration 700 (880.58 iter/s, 0.113562s/100 iters), loss = 0.965307
I0428 20:15:20.340059   414 solver.cpp:238]     Train net output #0: loss = 0.965307 (* 1 = 0.965307 loss)
I0428 20:15:20.340065   414 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:15:20.466099   414 solver.cpp:219] Iteration 800 (793.489 iter/s, 0.126026s/100 iters), loss = 0.907064
I0428 20:15:20.466133   414 solver.cpp:238]     Train net output #0: loss = 0.907064 (* 1 = 0.907064 loss)
I0428 20:15:20.466141   414 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:15:20.591449   414 solver.cpp:219] Iteration 900 (798.06 iter/s, 0.125304s/100 iters), loss = 0.880955
I0428 20:15:20.591490   414 solver.cpp:238]     Train net output #0: loss = 0.880955 (* 1 = 0.880955 loss)
I0428 20:15:20.591500   414 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:15:20.631732   422 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:20.708365   414 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:15:20.709354   414 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:15:20.710057   414 solver.cpp:311] Iteration 1000, loss = 0.89591
I0428 20:15:20.710077   414 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:15:20.779023   425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:20.780882   414 solver.cpp:398]     Test net output #0: accuracy = 0.7603
I0428 20:15:20.780905   414 solver.cpp:398]     Test net output #1: loss = 0.832307 (* 1 = 0.832307 loss)
I0428 20:15:20.780913   414 solver.cpp:316] Optimization Done.
I0428 20:15:20.780917   414 caffe.cpp:259] Optimization Done.
