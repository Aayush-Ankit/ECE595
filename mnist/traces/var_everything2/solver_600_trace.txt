I0428 19:50:17.121206 26978 caffe.cpp:218] Using GPUs 0
I0428 19:50:17.153264 26978 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:17.603211 26978 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test600.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:17.603348 26978 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test600.prototxt
I0428 19:50:17.603672 26978 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:17.603687 26978 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:17.603768 26978 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:17.603832 26978 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:17.603912 26978 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:17.603931 26978 net.cpp:86] Creating Layer mnist
I0428 19:50:17.603940 26978 net.cpp:382] mnist -> data
I0428 19:50:17.603957 26978 net.cpp:382] mnist -> label
I0428 19:50:17.604954 26978 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:17.607270 26978 net.cpp:124] Setting up mnist
I0428 19:50:17.607300 26978 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:17.607306 26978 net.cpp:131] Top shape: 64 (64)
I0428 19:50:17.607308 26978 net.cpp:139] Memory required for data: 200960
I0428 19:50:17.607313 26978 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:17.607362 26978 net.cpp:86] Creating Layer conv0
I0428 19:50:17.607379 26978 net.cpp:408] conv0 <- data
I0428 19:50:17.607389 26978 net.cpp:382] conv0 -> conv0
I0428 19:50:17.836316 26978 net.cpp:124] Setting up conv0
I0428 19:50:17.836344 26978 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:17.836347 26978 net.cpp:139] Memory required for data: 938240
I0428 19:50:17.836361 26978 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:17.836388 26978 net.cpp:86] Creating Layer pool0
I0428 19:50:17.836392 26978 net.cpp:408] pool0 <- conv0
I0428 19:50:17.836397 26978 net.cpp:382] pool0 -> pool0
I0428 19:50:17.836459 26978 net.cpp:124] Setting up pool0
I0428 19:50:17.836464 26978 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:17.836467 26978 net.cpp:139] Memory required for data: 1122560
I0428 19:50:17.836470 26978 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:17.836482 26978 net.cpp:86] Creating Layer conv1
I0428 19:50:17.836484 26978 net.cpp:408] conv1 <- pool0
I0428 19:50:17.836489 26978 net.cpp:382] conv1 -> conv1
I0428 19:50:17.839265 26978 net.cpp:124] Setting up conv1
I0428 19:50:17.839293 26978 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:17.839313 26978 net.cpp:139] Memory required for data: 1286400
I0428 19:50:17.839323 26978 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:17.839329 26978 net.cpp:86] Creating Layer pool1
I0428 19:50:17.839334 26978 net.cpp:408] pool1 <- conv1
I0428 19:50:17.839339 26978 net.cpp:382] pool1 -> pool1
I0428 19:50:17.839393 26978 net.cpp:124] Setting up pool1
I0428 19:50:17.839398 26978 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:17.839401 26978 net.cpp:139] Memory required for data: 1327360
I0428 19:50:17.839404 26978 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:17.839412 26978 net.cpp:86] Creating Layer ip1
I0428 19:50:17.839416 26978 net.cpp:408] ip1 <- pool1
I0428 19:50:17.839419 26978 net.cpp:382] ip1 -> ip1
I0428 19:50:17.839524 26978 net.cpp:124] Setting up ip1
I0428 19:50:17.839532 26978 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:17.839535 26978 net.cpp:139] Memory required for data: 1329920
I0428 19:50:17.839541 26978 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:17.839548 26978 net.cpp:86] Creating Layer relu1
I0428 19:50:17.839551 26978 net.cpp:408] relu1 <- ip1
I0428 19:50:17.839555 26978 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:17.839720 26978 net.cpp:124] Setting up relu1
I0428 19:50:17.839728 26978 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:17.839731 26978 net.cpp:139] Memory required for data: 1332480
I0428 19:50:17.839735 26978 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:17.839741 26978 net.cpp:86] Creating Layer ip2
I0428 19:50:17.839745 26978 net.cpp:408] ip2 <- ip1
I0428 19:50:17.839750 26978 net.cpp:382] ip2 -> ip2
I0428 19:50:17.839860 26978 net.cpp:124] Setting up ip2
I0428 19:50:17.839869 26978 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:17.839872 26978 net.cpp:139] Memory required for data: 1338880
I0428 19:50:17.839877 26978 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:17.839884 26978 net.cpp:86] Creating Layer relu2
I0428 19:50:17.839886 26978 net.cpp:408] relu2 <- ip2
I0428 19:50:17.839890 26978 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:17.840632 26978 net.cpp:124] Setting up relu2
I0428 19:50:17.840643 26978 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:17.840662 26978 net.cpp:139] Memory required for data: 1345280
I0428 19:50:17.840667 26978 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:17.840674 26978 net.cpp:86] Creating Layer ip3
I0428 19:50:17.840679 26978 net.cpp:408] ip3 <- ip2
I0428 19:50:17.840685 26978 net.cpp:382] ip3 -> ip3
I0428 19:50:17.840795 26978 net.cpp:124] Setting up ip3
I0428 19:50:17.840802 26978 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:17.840806 26978 net.cpp:139] Memory required for data: 1347840
I0428 19:50:17.840833 26978 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:17.840839 26978 net.cpp:86] Creating Layer relu3
I0428 19:50:17.840857 26978 net.cpp:408] relu3 <- ip3
I0428 19:50:17.840864 26978 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:17.841084 26978 net.cpp:124] Setting up relu3
I0428 19:50:17.841094 26978 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:17.841097 26978 net.cpp:139] Memory required for data: 1350400
I0428 19:50:17.841101 26978 layer_factory.hpp:77] Creating layer loss
I0428 19:50:17.841107 26978 net.cpp:86] Creating Layer loss
I0428 19:50:17.841111 26978 net.cpp:408] loss <- ip3
I0428 19:50:17.841115 26978 net.cpp:408] loss <- label
I0428 19:50:17.841121 26978 net.cpp:382] loss -> loss
I0428 19:50:17.841154 26978 layer_factory.hpp:77] Creating layer loss
I0428 19:50:17.841437 26978 net.cpp:124] Setting up loss
I0428 19:50:17.841460 26978 net.cpp:131] Top shape: (1)
I0428 19:50:17.841478 26978 net.cpp:134]     with loss weight 1
I0428 19:50:17.841492 26978 net.cpp:139] Memory required for data: 1350404
I0428 19:50:17.841496 26978 net.cpp:200] loss needs backward computation.
I0428 19:50:17.841500 26978 net.cpp:200] relu3 needs backward computation.
I0428 19:50:17.841502 26978 net.cpp:200] ip3 needs backward computation.
I0428 19:50:17.841505 26978 net.cpp:200] relu2 needs backward computation.
I0428 19:50:17.841507 26978 net.cpp:200] ip2 needs backward computation.
I0428 19:50:17.841509 26978 net.cpp:200] relu1 needs backward computation.
I0428 19:50:17.841512 26978 net.cpp:200] ip1 needs backward computation.
I0428 19:50:17.841516 26978 net.cpp:200] pool1 needs backward computation.
I0428 19:50:17.841517 26978 net.cpp:200] conv1 needs backward computation.
I0428 19:50:17.841521 26978 net.cpp:200] pool0 needs backward computation.
I0428 19:50:17.841523 26978 net.cpp:200] conv0 needs backward computation.
I0428 19:50:17.841526 26978 net.cpp:202] mnist does not need backward computation.
I0428 19:50:17.841528 26978 net.cpp:244] This network produces output loss
I0428 19:50:17.841536 26978 net.cpp:257] Network initialization done.
I0428 19:50:17.841835 26978 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test600.prototxt
I0428 19:50:17.841861 26978 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:17.841945 26978 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:17.842034 26978 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:17.842075 26978 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:17.842087 26978 net.cpp:86] Creating Layer mnist
I0428 19:50:17.842092 26978 net.cpp:382] mnist -> data
I0428 19:50:17.842099 26978 net.cpp:382] mnist -> label
I0428 19:50:17.842177 26978 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:17.844005 26978 net.cpp:124] Setting up mnist
I0428 19:50:17.844033 26978 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:17.844038 26978 net.cpp:131] Top shape: 100 (100)
I0428 19:50:17.844041 26978 net.cpp:139] Memory required for data: 314000
I0428 19:50:17.844044 26978 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:17.844050 26978 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:17.844054 26978 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:17.844058 26978 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:17.844064 26978 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:17.844099 26978 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:17.844105 26978 net.cpp:131] Top shape: 100 (100)
I0428 19:50:17.844108 26978 net.cpp:131] Top shape: 100 (100)
I0428 19:50:17.844110 26978 net.cpp:139] Memory required for data: 314800
I0428 19:50:17.844113 26978 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:17.844120 26978 net.cpp:86] Creating Layer conv0
I0428 19:50:17.844123 26978 net.cpp:408] conv0 <- data
I0428 19:50:17.844127 26978 net.cpp:382] conv0 -> conv0
I0428 19:50:17.845837 26978 net.cpp:124] Setting up conv0
I0428 19:50:17.845852 26978 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:17.845856 26978 net.cpp:139] Memory required for data: 1466800
I0428 19:50:17.845865 26978 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:17.845872 26978 net.cpp:86] Creating Layer pool0
I0428 19:50:17.845890 26978 net.cpp:408] pool0 <- conv0
I0428 19:50:17.845896 26978 net.cpp:382] pool0 -> pool0
I0428 19:50:17.845930 26978 net.cpp:124] Setting up pool0
I0428 19:50:17.845937 26978 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:17.845939 26978 net.cpp:139] Memory required for data: 1754800
I0428 19:50:17.845942 26978 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:17.845949 26978 net.cpp:86] Creating Layer conv1
I0428 19:50:17.845953 26978 net.cpp:408] conv1 <- pool0
I0428 19:50:17.845957 26978 net.cpp:382] conv1 -> conv1
I0428 19:50:17.848083 26978 net.cpp:124] Setting up conv1
I0428 19:50:17.848096 26978 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:17.848100 26978 net.cpp:139] Memory required for data: 2010800
I0428 19:50:17.848109 26978 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:17.848115 26978 net.cpp:86] Creating Layer pool1
I0428 19:50:17.848141 26978 net.cpp:408] pool1 <- conv1
I0428 19:50:17.848146 26978 net.cpp:382] pool1 -> pool1
I0428 19:50:17.848187 26978 net.cpp:124] Setting up pool1
I0428 19:50:17.848193 26978 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:17.848196 26978 net.cpp:139] Memory required for data: 2074800
I0428 19:50:17.848199 26978 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:17.848206 26978 net.cpp:86] Creating Layer ip1
I0428 19:50:17.848208 26978 net.cpp:408] ip1 <- pool1
I0428 19:50:17.848213 26978 net.cpp:382] ip1 -> ip1
I0428 19:50:17.848325 26978 net.cpp:124] Setting up ip1
I0428 19:50:17.848333 26978 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:17.848347 26978 net.cpp:139] Memory required for data: 2078800
I0428 19:50:17.848356 26978 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:17.848361 26978 net.cpp:86] Creating Layer relu1
I0428 19:50:17.848363 26978 net.cpp:408] relu1 <- ip1
I0428 19:50:17.848368 26978 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:17.848605 26978 net.cpp:124] Setting up relu1
I0428 19:50:17.848614 26978 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:17.848618 26978 net.cpp:139] Memory required for data: 2082800
I0428 19:50:17.848620 26978 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:17.848628 26978 net.cpp:86] Creating Layer ip2
I0428 19:50:17.848631 26978 net.cpp:408] ip2 <- ip1
I0428 19:50:17.848636 26978 net.cpp:382] ip2 -> ip2
I0428 19:50:17.848747 26978 net.cpp:124] Setting up ip2
I0428 19:50:17.848754 26978 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:17.848757 26978 net.cpp:139] Memory required for data: 2092800
I0428 19:50:17.848763 26978 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:17.848768 26978 net.cpp:86] Creating Layer relu2
I0428 19:50:17.848772 26978 net.cpp:408] relu2 <- ip2
I0428 19:50:17.848775 26978 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:17.848955 26978 net.cpp:124] Setting up relu2
I0428 19:50:17.848965 26978 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:17.848968 26978 net.cpp:139] Memory required for data: 2102800
I0428 19:50:17.848971 26978 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:17.848978 26978 net.cpp:86] Creating Layer ip3
I0428 19:50:17.848980 26978 net.cpp:408] ip3 <- ip2
I0428 19:50:17.848985 26978 net.cpp:382] ip3 -> ip3
I0428 19:50:17.849102 26978 net.cpp:124] Setting up ip3
I0428 19:50:17.849124 26978 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:17.849128 26978 net.cpp:139] Memory required for data: 2106800
I0428 19:50:17.849136 26978 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:17.849141 26978 net.cpp:86] Creating Layer relu3
I0428 19:50:17.849144 26978 net.cpp:408] relu3 <- ip3
I0428 19:50:17.849164 26978 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:17.850010 26978 net.cpp:124] Setting up relu3
I0428 19:50:17.850039 26978 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:17.850042 26978 net.cpp:139] Memory required for data: 2110800
I0428 19:50:17.850046 26978 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:17.850051 26978 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:17.850054 26978 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:17.850059 26978 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:17.850065 26978 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:17.850106 26978 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:17.850111 26978 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:17.850114 26978 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:17.850117 26978 net.cpp:139] Memory required for data: 2118800
I0428 19:50:17.850121 26978 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:17.850126 26978 net.cpp:86] Creating Layer accuracy
I0428 19:50:17.850136 26978 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:17.850139 26978 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:17.850143 26978 net.cpp:382] accuracy -> accuracy
I0428 19:50:17.850150 26978 net.cpp:124] Setting up accuracy
I0428 19:50:17.850160 26978 net.cpp:131] Top shape: (1)
I0428 19:50:17.850162 26978 net.cpp:139] Memory required for data: 2118804
I0428 19:50:17.850165 26978 layer_factory.hpp:77] Creating layer loss
I0428 19:50:17.850170 26978 net.cpp:86] Creating Layer loss
I0428 19:50:17.850173 26978 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:17.850177 26978 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:17.850181 26978 net.cpp:382] loss -> loss
I0428 19:50:17.850193 26978 layer_factory.hpp:77] Creating layer loss
I0428 19:50:17.850462 26978 net.cpp:124] Setting up loss
I0428 19:50:17.850471 26978 net.cpp:131] Top shape: (1)
I0428 19:50:17.850476 26978 net.cpp:134]     with loss weight 1
I0428 19:50:17.850482 26978 net.cpp:139] Memory required for data: 2118808
I0428 19:50:17.850497 26978 net.cpp:200] loss needs backward computation.
I0428 19:50:17.850513 26978 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:17.850517 26978 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:17.850520 26978 net.cpp:200] relu3 needs backward computation.
I0428 19:50:17.850523 26978 net.cpp:200] ip3 needs backward computation.
I0428 19:50:17.850527 26978 net.cpp:200] relu2 needs backward computation.
I0428 19:50:17.850529 26978 net.cpp:200] ip2 needs backward computation.
I0428 19:50:17.850533 26978 net.cpp:200] relu1 needs backward computation.
I0428 19:50:17.850540 26978 net.cpp:200] ip1 needs backward computation.
I0428 19:50:17.850544 26978 net.cpp:200] pool1 needs backward computation.
I0428 19:50:17.850548 26978 net.cpp:200] conv1 needs backward computation.
I0428 19:50:17.850550 26978 net.cpp:200] pool0 needs backward computation.
I0428 19:50:17.850553 26978 net.cpp:200] conv0 needs backward computation.
I0428 19:50:17.850563 26978 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:17.850566 26978 net.cpp:202] mnist does not need backward computation.
I0428 19:50:17.850569 26978 net.cpp:244] This network produces output accuracy
I0428 19:50:17.850572 26978 net.cpp:244] This network produces output loss
I0428 19:50:17.850589 26978 net.cpp:257] Network initialization done.
I0428 19:50:17.850646 26978 solver.cpp:56] Solver scaffolding done.
I0428 19:50:17.850998 26978 caffe.cpp:248] Starting Optimization
I0428 19:50:17.851006 26978 solver.cpp:273] Solving LeNet
I0428 19:50:17.851008 26978 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:17.851187 26978 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:17.855094 26978 blocking_queue.cpp:49] Waiting for data
I0428 19:50:17.927278 26985 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:17.927788 26978 solver.cpp:398]     Test net output #0: accuracy = 0.0689
I0428 19:50:17.927809 26978 solver.cpp:398]     Test net output #1: loss = 2.3177 (* 1 = 2.3177 loss)
I0428 19:50:17.929744 26978 solver.cpp:219] Iteration 0 (-1.48689e-31 iter/s, 0.0787004s/100 iters), loss = 2.30018
I0428 19:50:17.929767 26978 solver.cpp:238]     Train net output #0: loss = 2.30018 (* 1 = 2.30018 loss)
I0428 19:50:17.929796 26978 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:18.020488 26978 solver.cpp:219] Iteration 100 (1102.42 iter/s, 0.0907092s/100 iters), loss = 1.23825
I0428 19:50:18.020514 26978 solver.cpp:238]     Train net output #0: loss = 1.23825 (* 1 = 1.23825 loss)
I0428 19:50:18.020535 26978 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:18.099465 26978 solver.cpp:219] Iteration 200 (1266.73 iter/s, 0.0789432s/100 iters), loss = 0.750394
I0428 19:50:18.099504 26978 solver.cpp:238]     Train net output #0: loss = 0.750394 (* 1 = 0.750394 loss)
I0428 19:50:18.099511 26978 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:18.181484 26978 solver.cpp:219] Iteration 300 (1219.7 iter/s, 0.0819875s/100 iters), loss = 0.303239
I0428 19:50:18.181524 26978 solver.cpp:238]     Train net output #0: loss = 0.303239 (* 1 = 0.303239 loss)
I0428 19:50:18.181530 26978 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:18.264755 26978 solver.cpp:219] Iteration 400 (1201.39 iter/s, 0.0832369s/100 iters), loss = 0.356592
I0428 19:50:18.264780 26978 solver.cpp:238]     Train net output #0: loss = 0.356592 (* 1 = 0.356592 loss)
I0428 19:50:18.264786 26978 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:18.342488 26978 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:18.418375 26985 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:18.418908 26978 solver.cpp:398]     Test net output #0: accuracy = 0.8584
I0428 19:50:18.418933 26978 solver.cpp:398]     Test net output #1: loss = 0.416374 (* 1 = 0.416374 loss)
I0428 19:50:18.419793 26978 solver.cpp:219] Iteration 500 (645.158 iter/s, 0.155001s/100 iters), loss = 0.502347
I0428 19:50:18.419867 26978 solver.cpp:238]     Train net output #0: loss = 0.502347 (* 1 = 0.502347 loss)
I0428 19:50:18.419875 26978 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:18.504500 26978 solver.cpp:219] Iteration 600 (1181.74 iter/s, 0.0846213s/100 iters), loss = 0.32303
I0428 19:50:18.504523 26978 solver.cpp:238]     Train net output #0: loss = 0.32303 (* 1 = 0.32303 loss)
I0428 19:50:18.504529 26978 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:18.583928 26978 solver.cpp:219] Iteration 700 (1259.51 iter/s, 0.0793958s/100 iters), loss = 0.595486
I0428 19:50:18.583962 26978 solver.cpp:238]     Train net output #0: loss = 0.595486 (* 1 = 0.595486 loss)
I0428 19:50:18.583987 26978 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:18.663897 26978 solver.cpp:219] Iteration 800 (1251.15 iter/s, 0.0799263s/100 iters), loss = 0.54196
I0428 19:50:18.663920 26978 solver.cpp:238]     Train net output #0: loss = 0.54196 (* 1 = 0.54196 loss)
I0428 19:50:18.663926 26978 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:18.750003 26978 solver.cpp:219] Iteration 900 (1161.83 iter/s, 0.0860713s/100 iters), loss = 0.367707
I0428 19:50:18.750036 26978 solver.cpp:238]     Train net output #0: loss = 0.367707 (* 1 = 0.367707 loss)
I0428 19:50:18.750046 26978 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:18.777029 26984 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:18.827744 26978 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:18.828452 26978 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:18.828876 26978 solver.cpp:311] Iteration 1000, loss = 0.459947
I0428 19:50:18.828891 26978 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:18.904546 26985 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:18.905081 26978 solver.cpp:398]     Test net output #0: accuracy = 0.8711
I0428 19:50:18.905103 26978 solver.cpp:398]     Test net output #1: loss = 0.360775 (* 1 = 0.360775 loss)
I0428 19:50:18.905112 26978 solver.cpp:316] Optimization Done.
I0428 19:50:18.905115 26978 caffe.cpp:259] Optimization Done.
