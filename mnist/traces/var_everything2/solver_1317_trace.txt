I0428 20:18:22.447824  1113 caffe.cpp:218] Using GPUs 0
I0428 20:18:22.483217  1113 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:22.934504  1113 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1317.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:22.934639  1113 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1317.prototxt
I0428 20:18:22.935004  1113 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:22.935019  1113 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:22.935099  1113 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:22.935163  1113 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:22.935240  1113 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:22.935258  1113 net.cpp:86] Creating Layer mnist
I0428 20:18:22.935266  1113 net.cpp:382] mnist -> data
I0428 20:18:22.935284  1113 net.cpp:382] mnist -> label
I0428 20:18:22.936226  1113 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:22.938402  1113 net.cpp:124] Setting up mnist
I0428 20:18:22.938417  1113 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:22.938421  1113 net.cpp:131] Top shape: 64 (64)
I0428 20:18:22.938424  1113 net.cpp:139] Memory required for data: 200960
I0428 20:18:22.938431  1113 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:22.938460  1113 net.cpp:86] Creating Layer conv0
I0428 20:18:22.938477  1113 net.cpp:408] conv0 <- data
I0428 20:18:22.938488  1113 net.cpp:382] conv0 -> conv0
I0428 20:18:23.167140  1113 net.cpp:124] Setting up conv0
I0428 20:18:23.167165  1113 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:23.167170  1113 net.cpp:139] Memory required for data: 7573760
I0428 20:18:23.167184  1113 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:23.167198  1113 net.cpp:86] Creating Layer pool0
I0428 20:18:23.167201  1113 net.cpp:408] pool0 <- conv0
I0428 20:18:23.167207  1113 net.cpp:382] pool0 -> pool0
I0428 20:18:23.167266  1113 net.cpp:124] Setting up pool0
I0428 20:18:23.167274  1113 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:23.167278  1113 net.cpp:139] Memory required for data: 9416960
I0428 20:18:23.167279  1113 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:23.167290  1113 net.cpp:86] Creating Layer conv1
I0428 20:18:23.167294  1113 net.cpp:408] conv1 <- pool0
I0428 20:18:23.167299  1113 net.cpp:382] conv1 -> conv1
I0428 20:18:23.170107  1113 net.cpp:124] Setting up conv1
I0428 20:18:23.170137  1113 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:23.170141  1113 net.cpp:139] Memory required for data: 9580800
I0428 20:18:23.170150  1113 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:23.170157  1113 net.cpp:86] Creating Layer pool1
I0428 20:18:23.170161  1113 net.cpp:408] pool1 <- conv1
I0428 20:18:23.170181  1113 net.cpp:382] pool1 -> pool1
I0428 20:18:23.170217  1113 net.cpp:124] Setting up pool1
I0428 20:18:23.170224  1113 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:23.170228  1113 net.cpp:139] Memory required for data: 9621760
I0428 20:18:23.170230  1113 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:23.170238  1113 net.cpp:86] Creating Layer ip1
I0428 20:18:23.170240  1113 net.cpp:408] ip1 <- pool1
I0428 20:18:23.170244  1113 net.cpp:382] ip1 -> ip1
I0428 20:18:23.170382  1113 net.cpp:124] Setting up ip1
I0428 20:18:23.170388  1113 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:23.170392  1113 net.cpp:139] Memory required for data: 9634560
I0428 20:18:23.170398  1113 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:23.170404  1113 net.cpp:86] Creating Layer relu1
I0428 20:18:23.170408  1113 net.cpp:408] relu1 <- ip1
I0428 20:18:23.170411  1113 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:23.170584  1113 net.cpp:124] Setting up relu1
I0428 20:18:23.170593  1113 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:23.170595  1113 net.cpp:139] Memory required for data: 9647360
I0428 20:18:23.170598  1113 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:23.170604  1113 net.cpp:86] Creating Layer ip2
I0428 20:18:23.170621  1113 net.cpp:408] ip2 <- ip1
I0428 20:18:23.170626  1113 net.cpp:382] ip2 -> ip2
I0428 20:18:23.170718  1113 net.cpp:124] Setting up ip2
I0428 20:18:23.170725  1113 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:23.170728  1113 net.cpp:139] Memory required for data: 9649920
I0428 20:18:23.170733  1113 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:23.170739  1113 net.cpp:86] Creating Layer relu2
I0428 20:18:23.170742  1113 net.cpp:408] relu2 <- ip2
I0428 20:18:23.170747  1113 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:23.171511  1113 net.cpp:124] Setting up relu2
I0428 20:18:23.171525  1113 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:23.171543  1113 net.cpp:139] Memory required for data: 9652480
I0428 20:18:23.171547  1113 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:23.171555  1113 net.cpp:86] Creating Layer ip3
I0428 20:18:23.171557  1113 net.cpp:408] ip3 <- ip2
I0428 20:18:23.171563  1113 net.cpp:382] ip3 -> ip3
I0428 20:18:23.171658  1113 net.cpp:124] Setting up ip3
I0428 20:18:23.171667  1113 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:23.171670  1113 net.cpp:139] Memory required for data: 9655040
I0428 20:18:23.171679  1113 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:23.171684  1113 net.cpp:86] Creating Layer relu3
I0428 20:18:23.171686  1113 net.cpp:408] relu3 <- ip3
I0428 20:18:23.171690  1113 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:23.171849  1113 net.cpp:124] Setting up relu3
I0428 20:18:23.171857  1113 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:23.171861  1113 net.cpp:139] Memory required for data: 9657600
I0428 20:18:23.171864  1113 layer_factory.hpp:77] Creating layer loss
I0428 20:18:23.171869  1113 net.cpp:86] Creating Layer loss
I0428 20:18:23.171874  1113 net.cpp:408] loss <- ip3
I0428 20:18:23.171876  1113 net.cpp:408] loss <- label
I0428 20:18:23.171881  1113 net.cpp:382] loss -> loss
I0428 20:18:23.171900  1113 layer_factory.hpp:77] Creating layer loss
I0428 20:18:23.172142  1113 net.cpp:124] Setting up loss
I0428 20:18:23.172150  1113 net.cpp:131] Top shape: (1)
I0428 20:18:23.172153  1113 net.cpp:134]     with loss weight 1
I0428 20:18:23.172168  1113 net.cpp:139] Memory required for data: 9657604
I0428 20:18:23.172171  1113 net.cpp:200] loss needs backward computation.
I0428 20:18:23.172175  1113 net.cpp:200] relu3 needs backward computation.
I0428 20:18:23.172178  1113 net.cpp:200] ip3 needs backward computation.
I0428 20:18:23.172181  1113 net.cpp:200] relu2 needs backward computation.
I0428 20:18:23.172183  1113 net.cpp:200] ip2 needs backward computation.
I0428 20:18:23.172186  1113 net.cpp:200] relu1 needs backward computation.
I0428 20:18:23.172189  1113 net.cpp:200] ip1 needs backward computation.
I0428 20:18:23.172193  1113 net.cpp:200] pool1 needs backward computation.
I0428 20:18:23.172194  1113 net.cpp:200] conv1 needs backward computation.
I0428 20:18:23.172199  1113 net.cpp:200] pool0 needs backward computation.
I0428 20:18:23.172201  1113 net.cpp:200] conv0 needs backward computation.
I0428 20:18:23.172204  1113 net.cpp:202] mnist does not need backward computation.
I0428 20:18:23.172207  1113 net.cpp:244] This network produces output loss
I0428 20:18:23.172216  1113 net.cpp:257] Network initialization done.
I0428 20:18:23.172586  1113 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1317.prototxt
I0428 20:18:23.172629  1113 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:23.172751  1113 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:23.172847  1113 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:23.172891  1113 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:23.172907  1113 net.cpp:86] Creating Layer mnist
I0428 20:18:23.172912  1113 net.cpp:382] mnist -> data
I0428 20:18:23.172919  1113 net.cpp:382] mnist -> label
I0428 20:18:23.173002  1113 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:23.174944  1113 net.cpp:124] Setting up mnist
I0428 20:18:23.174973  1113 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:23.174978  1113 net.cpp:131] Top shape: 100 (100)
I0428 20:18:23.174981  1113 net.cpp:139] Memory required for data: 314000
I0428 20:18:23.174985  1113 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:23.174995  1113 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:23.174999  1113 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:23.175004  1113 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:23.175011  1113 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:23.175108  1113 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:23.175117  1113 net.cpp:131] Top shape: 100 (100)
I0428 20:18:23.175120  1113 net.cpp:131] Top shape: 100 (100)
I0428 20:18:23.175123  1113 net.cpp:139] Memory required for data: 314800
I0428 20:18:23.175127  1113 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:23.175135  1113 net.cpp:86] Creating Layer conv0
I0428 20:18:23.175138  1113 net.cpp:408] conv0 <- data
I0428 20:18:23.175143  1113 net.cpp:382] conv0 -> conv0
I0428 20:18:23.176713  1113 net.cpp:124] Setting up conv0
I0428 20:18:23.176726  1113 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:23.176730  1113 net.cpp:139] Memory required for data: 11834800
I0428 20:18:23.176756  1113 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:23.176762  1113 net.cpp:86] Creating Layer pool0
I0428 20:18:23.176765  1113 net.cpp:408] pool0 <- conv0
I0428 20:18:23.176770  1113 net.cpp:382] pool0 -> pool0
I0428 20:18:23.176807  1113 net.cpp:124] Setting up pool0
I0428 20:18:23.176821  1113 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:23.176825  1113 net.cpp:139] Memory required for data: 14714800
I0428 20:18:23.176827  1113 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:23.176836  1113 net.cpp:86] Creating Layer conv1
I0428 20:18:23.176841  1113 net.cpp:408] conv1 <- pool0
I0428 20:18:23.176846  1113 net.cpp:382] conv1 -> conv1
I0428 20:18:23.178549  1113 net.cpp:124] Setting up conv1
I0428 20:18:23.178562  1113 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:23.178567  1113 net.cpp:139] Memory required for data: 14970800
I0428 20:18:23.178578  1113 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:23.178586  1113 net.cpp:86] Creating Layer pool1
I0428 20:18:23.178588  1113 net.cpp:408] pool1 <- conv1
I0428 20:18:23.178596  1113 net.cpp:382] pool1 -> pool1
I0428 20:18:23.178633  1113 net.cpp:124] Setting up pool1
I0428 20:18:23.178640  1113 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:23.178643  1113 net.cpp:139] Memory required for data: 15034800
I0428 20:18:23.178647  1113 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:23.178653  1113 net.cpp:86] Creating Layer ip1
I0428 20:18:23.178663  1113 net.cpp:408] ip1 <- pool1
I0428 20:18:23.178668  1113 net.cpp:382] ip1 -> ip1
I0428 20:18:23.178820  1113 net.cpp:124] Setting up ip1
I0428 20:18:23.178828  1113 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:23.178843  1113 net.cpp:139] Memory required for data: 15054800
I0428 20:18:23.178850  1113 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:23.178856  1113 net.cpp:86] Creating Layer relu1
I0428 20:18:23.178860  1113 net.cpp:408] relu1 <- ip1
I0428 20:18:23.178866  1113 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:23.179033  1113 net.cpp:124] Setting up relu1
I0428 20:18:23.179044  1113 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:23.179046  1113 net.cpp:139] Memory required for data: 15074800
I0428 20:18:23.179050  1113 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:23.179064  1113 net.cpp:86] Creating Layer ip2
I0428 20:18:23.179074  1113 net.cpp:408] ip2 <- ip1
I0428 20:18:23.179078  1113 net.cpp:382] ip2 -> ip2
I0428 20:18:23.179188  1113 net.cpp:124] Setting up ip2
I0428 20:18:23.179194  1113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:23.179198  1113 net.cpp:139] Memory required for data: 15078800
I0428 20:18:23.179203  1113 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:23.179224  1113 net.cpp:86] Creating Layer relu2
I0428 20:18:23.179234  1113 net.cpp:408] relu2 <- ip2
I0428 20:18:23.179239  1113 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:23.179414  1113 net.cpp:124] Setting up relu2
I0428 20:18:23.179424  1113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:23.179426  1113 net.cpp:139] Memory required for data: 15082800
I0428 20:18:23.179430  1113 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:23.179436  1113 net.cpp:86] Creating Layer ip3
I0428 20:18:23.179440  1113 net.cpp:408] ip3 <- ip2
I0428 20:18:23.179443  1113 net.cpp:382] ip3 -> ip3
I0428 20:18:23.179540  1113 net.cpp:124] Setting up ip3
I0428 20:18:23.179548  1113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:23.179550  1113 net.cpp:139] Memory required for data: 15086800
I0428 20:18:23.179558  1113 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:23.179564  1113 net.cpp:86] Creating Layer relu3
I0428 20:18:23.179566  1113 net.cpp:408] relu3 <- ip3
I0428 20:18:23.179570  1113 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:23.180474  1113 net.cpp:124] Setting up relu3
I0428 20:18:23.180491  1113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:23.180495  1113 net.cpp:139] Memory required for data: 15090800
I0428 20:18:23.180500  1113 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:23.180506  1113 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:23.180510  1113 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:23.180516  1113 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:23.180521  1113 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:23.180560  1113 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:23.180565  1113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:23.180569  1113 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:23.180572  1113 net.cpp:139] Memory required for data: 15098800
I0428 20:18:23.180574  1113 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:23.180585  1113 net.cpp:86] Creating Layer accuracy
I0428 20:18:23.180590  1113 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:23.180594  1113 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:23.180598  1113 net.cpp:382] accuracy -> accuracy
I0428 20:18:23.180616  1113 net.cpp:124] Setting up accuracy
I0428 20:18:23.180620  1113 net.cpp:131] Top shape: (1)
I0428 20:18:23.180622  1113 net.cpp:139] Memory required for data: 15098804
I0428 20:18:23.180626  1113 layer_factory.hpp:77] Creating layer loss
I0428 20:18:23.180635  1113 net.cpp:86] Creating Layer loss
I0428 20:18:23.180639  1113 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:23.180649  1113 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:23.180654  1113 net.cpp:382] loss -> loss
I0428 20:18:23.180660  1113 layer_factory.hpp:77] Creating layer loss
I0428 20:18:23.180938  1113 net.cpp:124] Setting up loss
I0428 20:18:23.180948  1113 net.cpp:131] Top shape: (1)
I0428 20:18:23.180951  1113 net.cpp:134]     with loss weight 1
I0428 20:18:23.180968  1113 net.cpp:139] Memory required for data: 15098808
I0428 20:18:23.180972  1113 net.cpp:200] loss needs backward computation.
I0428 20:18:23.180976  1113 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:23.180980  1113 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:23.180984  1113 net.cpp:200] relu3 needs backward computation.
I0428 20:18:23.180986  1113 net.cpp:200] ip3 needs backward computation.
I0428 20:18:23.181002  1113 net.cpp:200] relu2 needs backward computation.
I0428 20:18:23.181005  1113 net.cpp:200] ip2 needs backward computation.
I0428 20:18:23.181007  1113 net.cpp:200] relu1 needs backward computation.
I0428 20:18:23.181016  1113 net.cpp:200] ip1 needs backward computation.
I0428 20:18:23.181020  1113 net.cpp:200] pool1 needs backward computation.
I0428 20:18:23.181022  1113 net.cpp:200] conv1 needs backward computation.
I0428 20:18:23.181025  1113 net.cpp:200] pool0 needs backward computation.
I0428 20:18:23.181028  1113 net.cpp:200] conv0 needs backward computation.
I0428 20:18:23.181032  1113 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:23.181036  1113 net.cpp:202] mnist does not need backward computation.
I0428 20:18:23.181040  1113 net.cpp:244] This network produces output accuracy
I0428 20:18:23.181042  1113 net.cpp:244] This network produces output loss
I0428 20:18:23.181056  1113 net.cpp:257] Network initialization done.
I0428 20:18:23.181098  1113 solver.cpp:56] Solver scaffolding done.
I0428 20:18:23.181468  1113 caffe.cpp:248] Starting Optimization
I0428 20:18:23.181474  1113 solver.cpp:273] Solving LeNet
I0428 20:18:23.181478  1113 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:23.182307  1113 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:23.188534  1113 blocking_queue.cpp:49] Waiting for data
I0428 20:18:23.258693  1124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:23.259485  1113 solver.cpp:398]     Test net output #0: accuracy = 0.0879
I0428 20:18:23.259505  1113 solver.cpp:398]     Test net output #1: loss = 2.32338 (* 1 = 2.32338 loss)
I0428 20:18:23.263877  1113 solver.cpp:219] Iteration 0 (0 iter/s, 0.0823757s/100 iters), loss = 2.30461
I0428 20:18:23.263901  1113 solver.cpp:238]     Train net output #0: loss = 2.30461 (* 1 = 2.30461 loss)
I0428 20:18:23.263927  1113 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:23.385481  1113 solver.cpp:219] Iteration 100 (822.591 iter/s, 0.121567s/100 iters), loss = 0.815669
I0428 20:18:23.385506  1113 solver.cpp:238]     Train net output #0: loss = 0.815669 (* 1 = 0.815669 loss)
I0428 20:18:23.385527  1113 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:23.504662  1113 solver.cpp:219] Iteration 200 (839.31 iter/s, 0.119145s/100 iters), loss = 0.572133
I0428 20:18:23.504688  1113 solver.cpp:238]     Train net output #0: loss = 0.572133 (* 1 = 0.572133 loss)
I0428 20:18:23.504693  1113 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:23.623847  1113 solver.cpp:219] Iteration 300 (839.296 iter/s, 0.119148s/100 iters), loss = 0.518399
I0428 20:18:23.623872  1113 solver.cpp:238]     Train net output #0: loss = 0.518399 (* 1 = 0.518399 loss)
I0428 20:18:23.623878  1113 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:23.742620  1113 solver.cpp:219] Iteration 400 (842.191 iter/s, 0.118738s/100 iters), loss = 0.296196
I0428 20:18:23.742645  1113 solver.cpp:238]     Train net output #0: loss = 0.296196 (* 1 = 0.296196 loss)
I0428 20:18:23.742666  1113 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:23.860975  1113 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:23.924484  1124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:23.926157  1113 solver.cpp:398]     Test net output #0: accuracy = 0.8575
I0428 20:18:23.926175  1113 solver.cpp:398]     Test net output #1: loss = 0.387976 (* 1 = 0.387976 loss)
I0428 20:18:23.927353  1113 solver.cpp:219] Iteration 500 (541.431 iter/s, 0.184696s/100 iters), loss = 0.365116
I0428 20:18:23.927393  1113 solver.cpp:238]     Train net output #0: loss = 0.365116 (* 1 = 0.365116 loss)
I0428 20:18:23.927400  1113 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:24.057569  1113 solver.cpp:219] Iteration 600 (768.269 iter/s, 0.130163s/100 iters), loss = 0.19245
I0428 20:18:24.057596  1113 solver.cpp:238]     Train net output #0: loss = 0.19245 (* 1 = 0.19245 loss)
I0428 20:18:24.057621  1113 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:24.175585  1113 solver.cpp:219] Iteration 700 (847.614 iter/s, 0.117978s/100 iters), loss = 0.323042
I0428 20:18:24.175608  1113 solver.cpp:238]     Train net output #0: loss = 0.323042 (* 1 = 0.323042 loss)
I0428 20:18:24.175632  1113 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:24.293866  1113 solver.cpp:219] Iteration 800 (845.692 iter/s, 0.118246s/100 iters), loss = 0.468878
I0428 20:18:24.293890  1113 solver.cpp:238]     Train net output #0: loss = 0.468878 (* 1 = 0.468878 loss)
I0428 20:18:24.293912  1113 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:24.411967  1113 solver.cpp:219] Iteration 900 (846.989 iter/s, 0.118065s/100 iters), loss = 0.293573
I0428 20:18:24.411990  1113 solver.cpp:238]     Train net output #0: loss = 0.293573 (* 1 = 0.293573 loss)
I0428 20:18:24.412012  1113 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:24.451654  1122 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:24.529495  1113 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:24.530802  1113 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:24.531586  1113 solver.cpp:311] Iteration 1000, loss = 0.117108
I0428 20:18:24.531604  1113 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:24.605942  1124 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:24.606750  1113 solver.cpp:398]     Test net output #0: accuracy = 0.9743
I0428 20:18:24.606770  1113 solver.cpp:398]     Test net output #1: loss = 0.0872741 (* 1 = 0.0872741 loss)
I0428 20:18:24.606775  1113 solver.cpp:316] Optimization Done.
I0428 20:18:24.606777  1113 caffe.cpp:259] Optimization Done.
