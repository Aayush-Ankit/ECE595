I0428 19:50:11.000100 26951 caffe.cpp:218] Using GPUs 0
I0428 19:50:11.037200 26951 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:11.541435 26951 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test597.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:11.541606 26951 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test597.prototxt
I0428 19:50:11.542027 26951 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:11.542054 26951 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:11.542167 26951 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:11.542284 26951 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:11.542418 26951 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:11.542451 26951 net.cpp:86] Creating Layer mnist
I0428 19:50:11.542467 26951 net.cpp:382] mnist -> data
I0428 19:50:11.542498 26951 net.cpp:382] mnist -> label
I0428 19:50:11.543771 26951 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:11.546262 26951 net.cpp:124] Setting up mnist
I0428 19:50:11.546283 26951 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:11.546293 26951 net.cpp:131] Top shape: 64 (64)
I0428 19:50:11.546298 26951 net.cpp:139] Memory required for data: 200960
I0428 19:50:11.546309 26951 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:11.546334 26951 net.cpp:86] Creating Layer conv0
I0428 19:50:11.546358 26951 net.cpp:408] conv0 <- data
I0428 19:50:11.546380 26951 net.cpp:382] conv0 -> conv0
I0428 19:50:11.832451 26951 net.cpp:124] Setting up conv0
I0428 19:50:11.832482 26951 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:11.832489 26951 net.cpp:139] Memory required for data: 938240
I0428 19:50:11.832509 26951 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:11.832526 26951 net.cpp:86] Creating Layer pool0
I0428 19:50:11.832535 26951 net.cpp:408] pool0 <- conv0
I0428 19:50:11.832543 26951 net.cpp:382] pool0 -> pool0
I0428 19:50:11.832609 26951 net.cpp:124] Setting up pool0
I0428 19:50:11.832619 26951 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:11.832624 26951 net.cpp:139] Memory required for data: 1122560
I0428 19:50:11.832630 26951 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:11.832646 26951 net.cpp:86] Creating Layer conv1
I0428 19:50:11.832653 26951 net.cpp:408] conv1 <- pool0
I0428 19:50:11.832662 26951 net.cpp:382] conv1 -> conv1
I0428 19:50:11.835402 26951 net.cpp:124] Setting up conv1
I0428 19:50:11.835420 26951 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:11.835427 26951 net.cpp:139] Memory required for data: 1286400
I0428 19:50:11.835441 26951 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:11.835453 26951 net.cpp:86] Creating Layer pool1
I0428 19:50:11.835460 26951 net.cpp:408] pool1 <- conv1
I0428 19:50:11.835469 26951 net.cpp:382] pool1 -> pool1
I0428 19:50:11.835520 26951 net.cpp:124] Setting up pool1
I0428 19:50:11.835528 26951 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:11.835535 26951 net.cpp:139] Memory required for data: 1327360
I0428 19:50:11.835541 26951 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:11.835552 26951 net.cpp:86] Creating Layer ip1
I0428 19:50:11.835558 26951 net.cpp:408] ip1 <- pool1
I0428 19:50:11.835567 26951 net.cpp:382] ip1 -> ip1
I0428 19:50:11.835711 26951 net.cpp:124] Setting up ip1
I0428 19:50:11.835721 26951 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:11.835726 26951 net.cpp:139] Memory required for data: 1329920
I0428 19:50:11.835737 26951 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:11.835747 26951 net.cpp:86] Creating Layer relu1
I0428 19:50:11.835757 26951 net.cpp:408] relu1 <- ip1
I0428 19:50:11.835764 26951 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:11.835934 26951 net.cpp:124] Setting up relu1
I0428 19:50:11.835945 26951 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:11.835950 26951 net.cpp:139] Memory required for data: 1332480
I0428 19:50:11.835955 26951 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:11.835965 26951 net.cpp:86] Creating Layer ip2
I0428 19:50:11.835971 26951 net.cpp:408] ip2 <- ip1
I0428 19:50:11.835980 26951 net.cpp:382] ip2 -> ip2
I0428 19:50:11.836081 26951 net.cpp:124] Setting up ip2
I0428 19:50:11.836089 26951 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:11.836094 26951 net.cpp:139] Memory required for data: 1335040
I0428 19:50:11.836104 26951 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:11.836113 26951 net.cpp:86] Creating Layer relu2
I0428 19:50:11.836119 26951 net.cpp:408] relu2 <- ip2
I0428 19:50:11.836127 26951 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:11.836997 26951 net.cpp:124] Setting up relu2
I0428 19:50:11.837011 26951 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:11.837018 26951 net.cpp:139] Memory required for data: 1337600
I0428 19:50:11.837023 26951 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:11.837033 26951 net.cpp:86] Creating Layer ip3
I0428 19:50:11.837039 26951 net.cpp:408] ip3 <- ip2
I0428 19:50:11.837049 26951 net.cpp:382] ip3 -> ip3
I0428 19:50:11.837155 26951 net.cpp:124] Setting up ip3
I0428 19:50:11.837164 26951 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:11.837170 26951 net.cpp:139] Memory required for data: 1340160
I0428 19:50:11.837186 26951 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:11.837195 26951 net.cpp:86] Creating Layer relu3
I0428 19:50:11.837201 26951 net.cpp:408] relu3 <- ip3
I0428 19:50:11.837209 26951 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:11.837378 26951 net.cpp:124] Setting up relu3
I0428 19:50:11.837389 26951 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:11.837394 26951 net.cpp:139] Memory required for data: 1342720
I0428 19:50:11.837399 26951 layer_factory.hpp:77] Creating layer loss
I0428 19:50:11.837409 26951 net.cpp:86] Creating Layer loss
I0428 19:50:11.837414 26951 net.cpp:408] loss <- ip3
I0428 19:50:11.837421 26951 net.cpp:408] loss <- label
I0428 19:50:11.837430 26951 net.cpp:382] loss -> loss
I0428 19:50:11.837453 26951 layer_factory.hpp:77] Creating layer loss
I0428 19:50:11.837684 26951 net.cpp:124] Setting up loss
I0428 19:50:11.837695 26951 net.cpp:131] Top shape: (1)
I0428 19:50:11.837700 26951 net.cpp:134]     with loss weight 1
I0428 19:50:11.837720 26951 net.cpp:139] Memory required for data: 1342724
I0428 19:50:11.837728 26951 net.cpp:200] loss needs backward computation.
I0428 19:50:11.837733 26951 net.cpp:200] relu3 needs backward computation.
I0428 19:50:11.837738 26951 net.cpp:200] ip3 needs backward computation.
I0428 19:50:11.837743 26951 net.cpp:200] relu2 needs backward computation.
I0428 19:50:11.837749 26951 net.cpp:200] ip2 needs backward computation.
I0428 19:50:11.837754 26951 net.cpp:200] relu1 needs backward computation.
I0428 19:50:11.837759 26951 net.cpp:200] ip1 needs backward computation.
I0428 19:50:11.837764 26951 net.cpp:200] pool1 needs backward computation.
I0428 19:50:11.837769 26951 net.cpp:200] conv1 needs backward computation.
I0428 19:50:11.837774 26951 net.cpp:200] pool0 needs backward computation.
I0428 19:50:11.837779 26951 net.cpp:200] conv0 needs backward computation.
I0428 19:50:11.837785 26951 net.cpp:202] mnist does not need backward computation.
I0428 19:50:11.837790 26951 net.cpp:244] This network produces output loss
I0428 19:50:11.837805 26951 net.cpp:257] Network initialization done.
I0428 19:50:11.838136 26951 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test597.prototxt
I0428 19:50:11.838171 26951 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:11.838271 26951 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:11.838389 26951 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:11.838449 26951 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:11.838466 26951 net.cpp:86] Creating Layer mnist
I0428 19:50:11.838474 26951 net.cpp:382] mnist -> data
I0428 19:50:11.838486 26951 net.cpp:382] mnist -> label
I0428 19:50:11.838608 26951 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:11.840844 26951 net.cpp:124] Setting up mnist
I0428 19:50:11.840859 26951 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:11.840884 26951 net.cpp:131] Top shape: 100 (100)
I0428 19:50:11.840889 26951 net.cpp:139] Memory required for data: 314000
I0428 19:50:11.840896 26951 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:11.840935 26951 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:11.840941 26951 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:11.840950 26951 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:11.840975 26951 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:11.841064 26951 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:11.841073 26951 net.cpp:131] Top shape: 100 (100)
I0428 19:50:11.841080 26951 net.cpp:131] Top shape: 100 (100)
I0428 19:50:11.841086 26951 net.cpp:139] Memory required for data: 314800
I0428 19:50:11.841092 26951 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:11.841106 26951 net.cpp:86] Creating Layer conv0
I0428 19:50:11.841114 26951 net.cpp:408] conv0 <- data
I0428 19:50:11.841123 26951 net.cpp:382] conv0 -> conv0
I0428 19:50:11.842737 26951 net.cpp:124] Setting up conv0
I0428 19:50:11.842753 26951 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:11.842759 26951 net.cpp:139] Memory required for data: 1466800
I0428 19:50:11.842774 26951 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:11.842784 26951 net.cpp:86] Creating Layer pool0
I0428 19:50:11.842792 26951 net.cpp:408] pool0 <- conv0
I0428 19:50:11.842799 26951 net.cpp:382] pool0 -> pool0
I0428 19:50:11.842844 26951 net.cpp:124] Setting up pool0
I0428 19:50:11.842854 26951 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:11.842859 26951 net.cpp:139] Memory required for data: 1754800
I0428 19:50:11.842864 26951 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:11.842877 26951 net.cpp:86] Creating Layer conv1
I0428 19:50:11.842885 26951 net.cpp:408] conv1 <- pool0
I0428 19:50:11.842893 26951 net.cpp:382] conv1 -> conv1
I0428 19:50:11.845055 26951 net.cpp:124] Setting up conv1
I0428 19:50:11.845072 26951 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:11.845077 26951 net.cpp:139] Memory required for data: 2010800
I0428 19:50:11.845108 26951 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:11.845118 26951 net.cpp:86] Creating Layer pool1
I0428 19:50:11.845139 26951 net.cpp:408] pool1 <- conv1
I0428 19:50:11.845147 26951 net.cpp:382] pool1 -> pool1
I0428 19:50:11.845214 26951 net.cpp:124] Setting up pool1
I0428 19:50:11.845223 26951 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:11.845229 26951 net.cpp:139] Memory required for data: 2074800
I0428 19:50:11.845234 26951 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:11.845245 26951 net.cpp:86] Creating Layer ip1
I0428 19:50:11.845250 26951 net.cpp:408] ip1 <- pool1
I0428 19:50:11.845259 26951 net.cpp:382] ip1 -> ip1
I0428 19:50:11.845389 26951 net.cpp:124] Setting up ip1
I0428 19:50:11.845399 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.845417 26951 net.cpp:139] Memory required for data: 2078800
I0428 19:50:11.845430 26951 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:11.845439 26951 net.cpp:86] Creating Layer relu1
I0428 19:50:11.845445 26951 net.cpp:408] relu1 <- ip1
I0428 19:50:11.845454 26951 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:11.845634 26951 net.cpp:124] Setting up relu1
I0428 19:50:11.845645 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.845650 26951 net.cpp:139] Memory required for data: 2082800
I0428 19:50:11.845656 26951 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:11.845669 26951 net.cpp:86] Creating Layer ip2
I0428 19:50:11.845675 26951 net.cpp:408] ip2 <- ip1
I0428 19:50:11.845685 26951 net.cpp:382] ip2 -> ip2
I0428 19:50:11.845793 26951 net.cpp:124] Setting up ip2
I0428 19:50:11.845801 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.845808 26951 net.cpp:139] Memory required for data: 2086800
I0428 19:50:11.845816 26951 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:11.845824 26951 net.cpp:86] Creating Layer relu2
I0428 19:50:11.845830 26951 net.cpp:408] relu2 <- ip2
I0428 19:50:11.845837 26951 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:11.845995 26951 net.cpp:124] Setting up relu2
I0428 19:50:11.846005 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.846010 26951 net.cpp:139] Memory required for data: 2090800
I0428 19:50:11.846017 26951 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:11.846026 26951 net.cpp:86] Creating Layer ip3
I0428 19:50:11.846032 26951 net.cpp:408] ip3 <- ip2
I0428 19:50:11.846041 26951 net.cpp:382] ip3 -> ip3
I0428 19:50:11.846144 26951 net.cpp:124] Setting up ip3
I0428 19:50:11.846154 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.846159 26951 net.cpp:139] Memory required for data: 2094800
I0428 19:50:11.846173 26951 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:11.846180 26951 net.cpp:86] Creating Layer relu3
I0428 19:50:11.846202 26951 net.cpp:408] relu3 <- ip3
I0428 19:50:11.846210 26951 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:11.847010 26951 net.cpp:124] Setting up relu3
I0428 19:50:11.847024 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.847030 26951 net.cpp:139] Memory required for data: 2098800
I0428 19:50:11.847036 26951 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:11.847044 26951 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:11.847050 26951 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:11.847059 26951 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:11.847069 26951 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:11.847137 26951 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:11.847146 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.847152 26951 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:11.847157 26951 net.cpp:139] Memory required for data: 2106800
I0428 19:50:11.847163 26951 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:11.847172 26951 net.cpp:86] Creating Layer accuracy
I0428 19:50:11.847177 26951 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:11.847184 26951 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:11.847193 26951 net.cpp:382] accuracy -> accuracy
I0428 19:50:11.847204 26951 net.cpp:124] Setting up accuracy
I0428 19:50:11.847213 26951 net.cpp:131] Top shape: (1)
I0428 19:50:11.847218 26951 net.cpp:139] Memory required for data: 2106804
I0428 19:50:11.847223 26951 layer_factory.hpp:77] Creating layer loss
I0428 19:50:11.847230 26951 net.cpp:86] Creating Layer loss
I0428 19:50:11.847236 26951 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:11.847244 26951 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:11.847250 26951 net.cpp:382] loss -> loss
I0428 19:50:11.847260 26951 layer_factory.hpp:77] Creating layer loss
I0428 19:50:11.847512 26951 net.cpp:124] Setting up loss
I0428 19:50:11.847523 26951 net.cpp:131] Top shape: (1)
I0428 19:50:11.847529 26951 net.cpp:134]     with loss weight 1
I0428 19:50:11.847538 26951 net.cpp:139] Memory required for data: 2106808
I0428 19:50:11.847554 26951 net.cpp:200] loss needs backward computation.
I0428 19:50:11.847563 26951 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:11.847568 26951 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:11.847573 26951 net.cpp:200] relu3 needs backward computation.
I0428 19:50:11.847582 26951 net.cpp:200] ip3 needs backward computation.
I0428 19:50:11.847587 26951 net.cpp:200] relu2 needs backward computation.
I0428 19:50:11.847594 26951 net.cpp:200] ip2 needs backward computation.
I0428 19:50:11.847599 26951 net.cpp:200] relu1 needs backward computation.
I0428 19:50:11.847602 26951 net.cpp:200] ip1 needs backward computation.
I0428 19:50:11.847609 26951 net.cpp:200] pool1 needs backward computation.
I0428 19:50:11.847614 26951 net.cpp:200] conv1 needs backward computation.
I0428 19:50:11.847620 26951 net.cpp:200] pool0 needs backward computation.
I0428 19:50:11.847625 26951 net.cpp:200] conv0 needs backward computation.
I0428 19:50:11.847631 26951 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:11.847638 26951 net.cpp:202] mnist does not need backward computation.
I0428 19:50:11.847643 26951 net.cpp:244] This network produces output accuracy
I0428 19:50:11.847650 26951 net.cpp:244] This network produces output loss
I0428 19:50:11.847667 26951 net.cpp:257] Network initialization done.
I0428 19:50:11.847717 26951 solver.cpp:56] Solver scaffolding done.
I0428 19:50:11.848074 26951 caffe.cpp:248] Starting Optimization
I0428 19:50:11.848081 26951 solver.cpp:273] Solving LeNet
I0428 19:50:11.848085 26951 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:11.848305 26951 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:11.851892 26951 blocking_queue.cpp:49] Waiting for data
I0428 19:50:11.923316 26958 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:11.923830 26951 solver.cpp:398]     Test net output #0: accuracy = 0.1077
I0428 19:50:11.923851 26951 solver.cpp:398]     Test net output #1: loss = 2.2976 (* 1 = 2.2976 loss)
I0428 19:50:11.925870 26951 solver.cpp:219] Iteration 0 (0 iter/s, 0.0777533s/100 iters), loss = 2.28354
I0428 19:50:11.925896 26951 solver.cpp:238]     Train net output #0: loss = 2.28354 (* 1 = 2.28354 loss)
I0428 19:50:11.925928 26951 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:12.009155 26951 solver.cpp:219] Iteration 100 (1201.24 iter/s, 0.0832471s/100 iters), loss = 1.22492
I0428 19:50:12.009183 26951 solver.cpp:238]     Train net output #0: loss = 1.22492 (* 1 = 1.22492 loss)
I0428 19:50:12.009209 26951 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:12.083652 26951 solver.cpp:219] Iteration 200 (1342.98 iter/s, 0.0744612s/100 iters), loss = 0.682855
I0428 19:50:12.083678 26951 solver.cpp:238]     Train net output #0: loss = 0.682855 (* 1 = 0.682855 loss)
I0428 19:50:12.083703 26951 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:12.155984 26951 solver.cpp:219] Iteration 300 (1383.12 iter/s, 0.0723005s/100 iters), loss = 0.388181
I0428 19:50:12.156010 26951 solver.cpp:238]     Train net output #0: loss = 0.388181 (* 1 = 0.388181 loss)
I0428 19:50:12.156035 26951 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:12.230715 26951 solver.cpp:219] Iteration 400 (1338.73 iter/s, 0.0746977s/100 iters), loss = 0.48297
I0428 19:50:12.230741 26951 solver.cpp:238]     Train net output #0: loss = 0.48297 (* 1 = 0.48297 loss)
I0428 19:50:12.230765 26951 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:12.303017 26951 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:12.379070 26958 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:12.379585 26951 solver.cpp:398]     Test net output #0: accuracy = 0.8535
I0428 19:50:12.379611 26951 solver.cpp:398]     Test net output #1: loss = 0.432787 (* 1 = 0.432787 loss)
I0428 19:50:12.380436 26951 solver.cpp:219] Iteration 500 (668.068 iter/s, 0.149685s/100 iters), loss = 0.564576
I0428 19:50:12.380467 26951 solver.cpp:238]     Train net output #0: loss = 0.564576 (* 1 = 0.564576 loss)
I0428 19:50:12.380507 26951 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:12.462249 26951 solver.cpp:219] Iteration 600 (1222.81 iter/s, 0.0817788s/100 iters), loss = 0.349116
I0428 19:50:12.462277 26951 solver.cpp:238]     Train net output #0: loss = 0.349116 (* 1 = 0.349116 loss)
I0428 19:50:12.462303 26951 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:12.538406 26951 solver.cpp:219] Iteration 700 (1313.7 iter/s, 0.0761211s/100 iters), loss = 0.667609
I0428 19:50:12.538434 26951 solver.cpp:238]     Train net output #0: loss = 0.667609 (* 1 = 0.667609 loss)
I0428 19:50:12.538458 26951 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:12.611672 26951 solver.cpp:219] Iteration 800 (1365.52 iter/s, 0.0732324s/100 iters), loss = 0.470263
I0428 19:50:12.611701 26951 solver.cpp:238]     Train net output #0: loss = 0.470263 (* 1 = 0.470263 loss)
I0428 19:50:12.611726 26951 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:12.686084 26951 solver.cpp:219] Iteration 900 (1344.52 iter/s, 0.0743762s/100 iters), loss = 0.337984
I0428 19:50:12.686113 26951 solver.cpp:238]     Train net output #0: loss = 0.337984 (* 1 = 0.337984 loss)
I0428 19:50:12.686123 26951 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:12.711473 26957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:12.760220 26951 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:12.761000 26951 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:12.761456 26951 solver.cpp:311] Iteration 1000, loss = 0.420722
I0428 19:50:12.761490 26951 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:12.835717 26958 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:12.836211 26951 solver.cpp:398]     Test net output #0: accuracy = 0.8778
I0428 19:50:12.836231 26951 solver.cpp:398]     Test net output #1: loss = 0.334951 (* 1 = 0.334951 loss)
I0428 19:50:12.836241 26951 solver.cpp:316] Optimization Done.
I0428 19:50:12.836246 26951 caffe.cpp:259] Optimization Done.
