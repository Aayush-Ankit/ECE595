I0428 19:46:17.615231 25975 caffe.cpp:218] Using GPUs 0
I0428 19:46:17.654153 25975 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:18.168233 25975 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test489.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:18.168376 25975 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test489.prototxt
I0428 19:46:18.168792 25975 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:18.168825 25975 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:18.168939 25975 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:18.169016 25975 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:18.169114 25975 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:18.169137 25975 net.cpp:86] Creating Layer mnist
I0428 19:46:18.169145 25975 net.cpp:382] mnist -> data
I0428 19:46:18.169167 25975 net.cpp:382] mnist -> label
I0428 19:46:18.170272 25975 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:18.172698 25975 net.cpp:124] Setting up mnist
I0428 19:46:18.172720 25975 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:18.172737 25975 net.cpp:131] Top shape: 64 (64)
I0428 19:46:18.172740 25975 net.cpp:139] Memory required for data: 200960
I0428 19:46:18.172747 25975 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:18.172771 25975 net.cpp:86] Creating Layer conv0
I0428 19:46:18.172791 25975 net.cpp:408] conv0 <- data
I0428 19:46:18.172804 25975 net.cpp:382] conv0 -> conv0
I0428 19:46:18.451361 25975 net.cpp:124] Setting up conv0
I0428 19:46:18.451388 25975 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:18.451392 25975 net.cpp:139] Memory required for data: 495872
I0428 19:46:18.451407 25975 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:18.451419 25975 net.cpp:86] Creating Layer pool0
I0428 19:46:18.451423 25975 net.cpp:408] pool0 <- conv0
I0428 19:46:18.451428 25975 net.cpp:382] pool0 -> pool0
I0428 19:46:18.451474 25975 net.cpp:124] Setting up pool0
I0428 19:46:18.451479 25975 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:18.451483 25975 net.cpp:139] Memory required for data: 569600
I0428 19:46:18.451485 25975 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:18.451495 25975 net.cpp:86] Creating Layer conv1
I0428 19:46:18.451498 25975 net.cpp:408] conv1 <- pool0
I0428 19:46:18.451503 25975 net.cpp:382] conv1 -> conv1
I0428 19:46:18.454298 25975 net.cpp:124] Setting up conv1
I0428 19:46:18.454313 25975 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:18.454318 25975 net.cpp:139] Memory required for data: 2208000
I0428 19:46:18.454326 25975 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:18.454349 25975 net.cpp:86] Creating Layer pool1
I0428 19:46:18.454352 25975 net.cpp:408] pool1 <- conv1
I0428 19:46:18.454357 25975 net.cpp:382] pool1 -> pool1
I0428 19:46:18.454424 25975 net.cpp:124] Setting up pool1
I0428 19:46:18.454432 25975 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:18.454434 25975 net.cpp:139] Memory required for data: 2617600
I0428 19:46:18.454437 25975 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:18.454443 25975 net.cpp:86] Creating Layer ip1
I0428 19:46:18.454447 25975 net.cpp:408] ip1 <- pool1
I0428 19:46:18.454450 25975 net.cpp:382] ip1 -> ip1
I0428 19:46:18.454777 25975 net.cpp:124] Setting up ip1
I0428 19:46:18.454783 25975 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:18.454800 25975 net.cpp:139] Memory required for data: 2624000
I0428 19:46:18.454807 25975 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:18.454813 25975 net.cpp:86] Creating Layer relu1
I0428 19:46:18.454815 25975 net.cpp:408] relu1 <- ip1
I0428 19:46:18.454819 25975 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:18.454974 25975 net.cpp:124] Setting up relu1
I0428 19:46:18.454982 25975 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:18.454985 25975 net.cpp:139] Memory required for data: 2630400
I0428 19:46:18.454988 25975 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:18.454994 25975 net.cpp:86] Creating Layer ip2
I0428 19:46:18.454998 25975 net.cpp:408] ip2 <- ip1
I0428 19:46:18.455003 25975 net.cpp:382] ip2 -> ip2
I0428 19:46:18.455090 25975 net.cpp:124] Setting up ip2
I0428 19:46:18.455096 25975 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:18.455099 25975 net.cpp:139] Memory required for data: 2632960
I0428 19:46:18.455106 25975 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:18.455111 25975 net.cpp:86] Creating Layer relu2
I0428 19:46:18.455113 25975 net.cpp:408] relu2 <- ip2
I0428 19:46:18.455116 25975 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:18.455909 25975 net.cpp:124] Setting up relu2
I0428 19:46:18.455921 25975 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:18.455940 25975 net.cpp:139] Memory required for data: 2635520
I0428 19:46:18.455943 25975 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:18.455950 25975 net.cpp:86] Creating Layer ip3
I0428 19:46:18.455955 25975 net.cpp:408] ip3 <- ip2
I0428 19:46:18.455960 25975 net.cpp:382] ip3 -> ip3
I0428 19:46:18.456071 25975 net.cpp:124] Setting up ip3
I0428 19:46:18.456079 25975 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:18.456082 25975 net.cpp:139] Memory required for data: 2638080
I0428 19:46:18.456090 25975 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:18.456095 25975 net.cpp:86] Creating Layer relu3
I0428 19:46:18.456099 25975 net.cpp:408] relu3 <- ip3
I0428 19:46:18.456102 25975 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:18.456275 25975 net.cpp:124] Setting up relu3
I0428 19:46:18.456284 25975 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:18.456287 25975 net.cpp:139] Memory required for data: 2640640
I0428 19:46:18.456290 25975 layer_factory.hpp:77] Creating layer loss
I0428 19:46:18.456295 25975 net.cpp:86] Creating Layer loss
I0428 19:46:18.456298 25975 net.cpp:408] loss <- ip3
I0428 19:46:18.456302 25975 net.cpp:408] loss <- label
I0428 19:46:18.456307 25975 net.cpp:382] loss -> loss
I0428 19:46:18.456321 25975 layer_factory.hpp:77] Creating layer loss
I0428 19:46:18.456531 25975 net.cpp:124] Setting up loss
I0428 19:46:18.456539 25975 net.cpp:131] Top shape: (1)
I0428 19:46:18.456542 25975 net.cpp:134]     with loss weight 1
I0428 19:46:18.456557 25975 net.cpp:139] Memory required for data: 2640644
I0428 19:46:18.456560 25975 net.cpp:200] loss needs backward computation.
I0428 19:46:18.456563 25975 net.cpp:200] relu3 needs backward computation.
I0428 19:46:18.456567 25975 net.cpp:200] ip3 needs backward computation.
I0428 19:46:18.456569 25975 net.cpp:200] relu2 needs backward computation.
I0428 19:46:18.456573 25975 net.cpp:200] ip2 needs backward computation.
I0428 19:46:18.456575 25975 net.cpp:200] relu1 needs backward computation.
I0428 19:46:18.456578 25975 net.cpp:200] ip1 needs backward computation.
I0428 19:46:18.456580 25975 net.cpp:200] pool1 needs backward computation.
I0428 19:46:18.456583 25975 net.cpp:200] conv1 needs backward computation.
I0428 19:46:18.456586 25975 net.cpp:200] pool0 needs backward computation.
I0428 19:46:18.456589 25975 net.cpp:200] conv0 needs backward computation.
I0428 19:46:18.456593 25975 net.cpp:202] mnist does not need backward computation.
I0428 19:46:18.456595 25975 net.cpp:244] This network produces output loss
I0428 19:46:18.456604 25975 net.cpp:257] Network initialization done.
I0428 19:46:18.456965 25975 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test489.prototxt
I0428 19:46:18.456993 25975 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:18.457118 25975 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:18.457209 25975 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:18.457252 25975 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:18.457265 25975 net.cpp:86] Creating Layer mnist
I0428 19:46:18.457269 25975 net.cpp:382] mnist -> data
I0428 19:46:18.457278 25975 net.cpp:382] mnist -> label
I0428 19:46:18.457360 25975 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:18.459362 25975 net.cpp:124] Setting up mnist
I0428 19:46:18.459389 25975 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:18.459409 25975 net.cpp:131] Top shape: 100 (100)
I0428 19:46:18.459413 25975 net.cpp:139] Memory required for data: 314000
I0428 19:46:18.459416 25975 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:18.459424 25975 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:18.459426 25975 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:18.459431 25975 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:18.459460 25975 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:18.459503 25975 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:18.459511 25975 net.cpp:131] Top shape: 100 (100)
I0428 19:46:18.459514 25975 net.cpp:131] Top shape: 100 (100)
I0428 19:46:18.459517 25975 net.cpp:139] Memory required for data: 314800
I0428 19:46:18.459520 25975 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:18.459529 25975 net.cpp:86] Creating Layer conv0
I0428 19:46:18.459532 25975 net.cpp:408] conv0 <- data
I0428 19:46:18.459538 25975 net.cpp:382] conv0 -> conv0
I0428 19:46:18.461315 25975 net.cpp:124] Setting up conv0
I0428 19:46:18.461345 25975 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:18.461349 25975 net.cpp:139] Memory required for data: 775600
I0428 19:46:18.461357 25975 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:18.461364 25975 net.cpp:86] Creating Layer pool0
I0428 19:46:18.461367 25975 net.cpp:408] pool0 <- conv0
I0428 19:46:18.461371 25975 net.cpp:382] pool0 -> pool0
I0428 19:46:18.461423 25975 net.cpp:124] Setting up pool0
I0428 19:46:18.461428 25975 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:18.461431 25975 net.cpp:139] Memory required for data: 890800
I0428 19:46:18.461434 25975 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:18.461444 25975 net.cpp:86] Creating Layer conv1
I0428 19:46:18.461447 25975 net.cpp:408] conv1 <- pool0
I0428 19:46:18.461452 25975 net.cpp:382] conv1 -> conv1
I0428 19:46:18.463045 25975 net.cpp:124] Setting up conv1
I0428 19:46:18.463073 25975 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:18.463078 25975 net.cpp:139] Memory required for data: 3450800
I0428 19:46:18.463086 25975 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:18.463093 25975 net.cpp:86] Creating Layer pool1
I0428 19:46:18.463098 25975 net.cpp:408] pool1 <- conv1
I0428 19:46:18.463104 25975 net.cpp:382] pool1 -> pool1
I0428 19:46:18.463151 25975 net.cpp:124] Setting up pool1
I0428 19:46:18.463158 25975 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:18.463161 25975 net.cpp:139] Memory required for data: 4090800
I0428 19:46:18.463166 25975 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:18.463186 25975 net.cpp:86] Creating Layer ip1
I0428 19:46:18.463189 25975 net.cpp:408] ip1 <- pool1
I0428 19:46:18.463208 25975 net.cpp:382] ip1 -> ip1
I0428 19:46:18.463548 25975 net.cpp:124] Setting up ip1
I0428 19:46:18.463572 25975 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:18.463599 25975 net.cpp:139] Memory required for data: 4100800
I0428 19:46:18.463608 25975 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:18.463631 25975 net.cpp:86] Creating Layer relu1
I0428 19:46:18.463635 25975 net.cpp:408] relu1 <- ip1
I0428 19:46:18.463640 25975 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:18.463886 25975 net.cpp:124] Setting up relu1
I0428 19:46:18.463908 25975 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:18.463912 25975 net.cpp:139] Memory required for data: 4110800
I0428 19:46:18.463914 25975 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:18.463923 25975 net.cpp:86] Creating Layer ip2
I0428 19:46:18.463927 25975 net.cpp:408] ip2 <- ip1
I0428 19:46:18.463930 25975 net.cpp:382] ip2 -> ip2
I0428 19:46:18.464062 25975 net.cpp:124] Setting up ip2
I0428 19:46:18.464071 25975 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:18.464073 25975 net.cpp:139] Memory required for data: 4114800
I0428 19:46:18.464079 25975 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:18.464084 25975 net.cpp:86] Creating Layer relu2
I0428 19:46:18.464087 25975 net.cpp:408] relu2 <- ip2
I0428 19:46:18.464093 25975 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:18.464274 25975 net.cpp:124] Setting up relu2
I0428 19:46:18.464282 25975 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:18.464301 25975 net.cpp:139] Memory required for data: 4118800
I0428 19:46:18.464304 25975 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:18.464310 25975 net.cpp:86] Creating Layer ip3
I0428 19:46:18.464313 25975 net.cpp:408] ip3 <- ip2
I0428 19:46:18.464319 25975 net.cpp:382] ip3 -> ip3
I0428 19:46:18.464417 25975 net.cpp:124] Setting up ip3
I0428 19:46:18.464424 25975 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:18.464427 25975 net.cpp:139] Memory required for data: 4122800
I0428 19:46:18.464452 25975 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:18.464457 25975 net.cpp:86] Creating Layer relu3
I0428 19:46:18.464460 25975 net.cpp:408] relu3 <- ip3
I0428 19:46:18.464464 25975 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:18.465339 25975 net.cpp:124] Setting up relu3
I0428 19:46:18.465366 25975 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:18.465370 25975 net.cpp:139] Memory required for data: 4126800
I0428 19:46:18.465373 25975 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:18.465392 25975 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:18.465409 25975 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:18.465415 25975 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:18.465421 25975 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:18.465494 25975 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:18.465502 25975 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:18.465505 25975 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:18.465512 25975 net.cpp:139] Memory required for data: 4134800
I0428 19:46:18.465515 25975 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:18.465520 25975 net.cpp:86] Creating Layer accuracy
I0428 19:46:18.465523 25975 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:18.465528 25975 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:18.465533 25975 net.cpp:382] accuracy -> accuracy
I0428 19:46:18.465539 25975 net.cpp:124] Setting up accuracy
I0428 19:46:18.465543 25975 net.cpp:131] Top shape: (1)
I0428 19:46:18.465546 25975 net.cpp:139] Memory required for data: 4134804
I0428 19:46:18.465549 25975 layer_factory.hpp:77] Creating layer loss
I0428 19:46:18.465553 25975 net.cpp:86] Creating Layer loss
I0428 19:46:18.465557 25975 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:18.465560 25975 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:18.465571 25975 net.cpp:382] loss -> loss
I0428 19:46:18.465580 25975 layer_factory.hpp:77] Creating layer loss
I0428 19:46:18.465826 25975 net.cpp:124] Setting up loss
I0428 19:46:18.465836 25975 net.cpp:131] Top shape: (1)
I0428 19:46:18.465838 25975 net.cpp:134]     with loss weight 1
I0428 19:46:18.465845 25975 net.cpp:139] Memory required for data: 4134808
I0428 19:46:18.465858 25975 net.cpp:200] loss needs backward computation.
I0428 19:46:18.465868 25975 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:18.465873 25975 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:18.465876 25975 net.cpp:200] relu3 needs backward computation.
I0428 19:46:18.465879 25975 net.cpp:200] ip3 needs backward computation.
I0428 19:46:18.465883 25975 net.cpp:200] relu2 needs backward computation.
I0428 19:46:18.465884 25975 net.cpp:200] ip2 needs backward computation.
I0428 19:46:18.465888 25975 net.cpp:200] relu1 needs backward computation.
I0428 19:46:18.465890 25975 net.cpp:200] ip1 needs backward computation.
I0428 19:46:18.465893 25975 net.cpp:200] pool1 needs backward computation.
I0428 19:46:18.465898 25975 net.cpp:200] conv1 needs backward computation.
I0428 19:46:18.465900 25975 net.cpp:200] pool0 needs backward computation.
I0428 19:46:18.465903 25975 net.cpp:200] conv0 needs backward computation.
I0428 19:46:18.465908 25975 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:18.465911 25975 net.cpp:202] mnist does not need backward computation.
I0428 19:46:18.465914 25975 net.cpp:244] This network produces output accuracy
I0428 19:46:18.465917 25975 net.cpp:244] This network produces output loss
I0428 19:46:18.465929 25975 net.cpp:257] Network initialization done.
I0428 19:46:18.465971 25975 solver.cpp:56] Solver scaffolding done.
I0428 19:46:18.466356 25975 caffe.cpp:248] Starting Optimization
I0428 19:46:18.466361 25975 solver.cpp:273] Solving LeNet
I0428 19:46:18.466363 25975 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:18.466681 25975 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:18.471921 25975 blocking_queue.cpp:49] Waiting for data
I0428 19:46:18.541034 25982 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:18.541645 25975 solver.cpp:398]     Test net output #0: accuracy = 0.101
I0428 19:46:18.541677 25975 solver.cpp:398]     Test net output #1: loss = 2.35329 (* 1 = 2.35329 loss)
I0428 19:46:18.545379 25975 solver.cpp:219] Iteration 0 (-2.65563e-31 iter/s, 0.0789557s/100 iters), loss = 2.32448
I0428 19:46:18.545418 25975 solver.cpp:238]     Train net output #0: loss = 2.32448 (* 1 = 2.32448 loss)
I0428 19:46:18.545428 25975 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:18.702685 25975 solver.cpp:219] Iteration 100 (635.87 iter/s, 0.157265s/100 iters), loss = 1.42921
I0428 19:46:18.702718 25975 solver.cpp:238]     Train net output #0: loss = 1.42921 (* 1 = 1.42921 loss)
I0428 19:46:18.702725 25975 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:18.848043 25975 solver.cpp:219] Iteration 200 (688.166 iter/s, 0.145314s/100 iters), loss = 1.04848
I0428 19:46:18.848069 25975 solver.cpp:238]     Train net output #0: loss = 1.04848 (* 1 = 1.04848 loss)
I0428 19:46:18.848075 25975 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:18.994997 25975 solver.cpp:219] Iteration 300 (680.669 iter/s, 0.146914s/100 iters), loss = 0.863407
I0428 19:46:18.995034 25975 solver.cpp:238]     Train net output #0: loss = 0.863407 (* 1 = 0.863407 loss)
I0428 19:46:18.995040 25975 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:19.142899 25975 solver.cpp:219] Iteration 400 (676.28 iter/s, 0.147868s/100 iters), loss = 0.967791
I0428 19:46:19.142940 25975 solver.cpp:238]     Train net output #0: loss = 0.967791 (* 1 = 0.967791 loss)
I0428 19:46:19.142946 25975 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:19.290812 25975 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:19.342800 25982 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:19.343741 25975 solver.cpp:398]     Test net output #0: accuracy = 0.6776
I0428 19:46:19.343776 25975 solver.cpp:398]     Test net output #1: loss = 0.851894 (* 1 = 0.851894 loss)
I0428 19:46:19.345372 25975 solver.cpp:219] Iteration 500 (493.989 iter/s, 0.202434s/100 iters), loss = 0.998804
I0428 19:46:19.345410 25975 solver.cpp:238]     Train net output #0: loss = 0.998804 (* 1 = 0.998804 loss)
I0428 19:46:19.345432 25975 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:19.501958 25975 solver.cpp:219] Iteration 600 (638.768 iter/s, 0.156551s/100 iters), loss = 0.706157
I0428 19:46:19.501997 25975 solver.cpp:238]     Train net output #0: loss = 0.706157 (* 1 = 0.706157 loss)
I0428 19:46:19.502003 25975 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:19.652762 25975 solver.cpp:219] Iteration 700 (663.272 iter/s, 0.150768s/100 iters), loss = 1.18276
I0428 19:46:19.652791 25975 solver.cpp:238]     Train net output #0: loss = 1.18276 (* 1 = 1.18276 loss)
I0428 19:46:19.652806 25975 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:19.825268 25975 solver.cpp:219] Iteration 800 (579.844 iter/s, 0.17246s/100 iters), loss = 0.817026
I0428 19:46:19.825306 25975 solver.cpp:238]     Train net output #0: loss = 0.817026 (* 1 = 0.817026 loss)
I0428 19:46:19.825315 25975 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:20.006288 25975 solver.cpp:219] Iteration 900 (552.589 iter/s, 0.180966s/100 iters), loss = 0.628846
I0428 19:46:20.006328 25975 solver.cpp:238]     Train net output #0: loss = 0.628846 (* 1 = 0.628846 loss)
I0428 19:46:20.006338 25975 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:20.066488 25981 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:20.185044 25975 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:20.187434 25975 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:20.188591 25975 solver.cpp:311] Iteration 1000, loss = 0.823835
I0428 19:46:20.188606 25975 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:20.294389 25982 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:20.295184 25975 solver.cpp:398]     Test net output #0: accuracy = 0.6917
I0428 19:46:20.295212 25975 solver.cpp:398]     Test net output #1: loss = 0.775506 (* 1 = 0.775506 loss)
I0428 19:46:20.295222 25975 solver.cpp:316] Optimization Done.
I0428 19:46:20.295228 25975 caffe.cpp:259] Optimization Done.
