I0428 19:51:09.144196 27207 caffe.cpp:218] Using GPUs 0
I0428 19:51:09.177786 27207 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:09.630576 27207 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test625.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:09.630707 27207 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test625.prototxt
I0428 19:51:09.630980 27207 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:09.630993 27207 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:09.631057 27207 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:51:09.631114 27207 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:09.631194 27207 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:09.631212 27207 net.cpp:86] Creating Layer mnist
I0428 19:51:09.631219 27207 net.cpp:382] mnist -> data
I0428 19:51:09.631237 27207 net.cpp:382] mnist -> label
I0428 19:51:09.632171 27207 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:09.634338 27207 net.cpp:124] Setting up mnist
I0428 19:51:09.634369 27207 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:09.634374 27207 net.cpp:131] Top shape: 64 (64)
I0428 19:51:09.634377 27207 net.cpp:139] Memory required for data: 200960
I0428 19:51:09.634382 27207 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:09.634397 27207 net.cpp:86] Creating Layer conv0
I0428 19:51:09.634400 27207 net.cpp:408] conv0 <- data
I0428 19:51:09.634410 27207 net.cpp:382] conv0 -> conv0
I0428 19:51:09.861129 27207 net.cpp:124] Setting up conv0
I0428 19:51:09.861171 27207 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:09.861174 27207 net.cpp:139] Memory required for data: 938240
I0428 19:51:09.861189 27207 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:09.861202 27207 net.cpp:86] Creating Layer pool0
I0428 19:51:09.861207 27207 net.cpp:408] pool0 <- conv0
I0428 19:51:09.861212 27207 net.cpp:382] pool0 -> pool0
I0428 19:51:09.861274 27207 net.cpp:124] Setting up pool0
I0428 19:51:09.861279 27207 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:09.861296 27207 net.cpp:139] Memory required for data: 1122560
I0428 19:51:09.861299 27207 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:09.861310 27207 net.cpp:86] Creating Layer conv1
I0428 19:51:09.861313 27207 net.cpp:408] conv1 <- pool0
I0428 19:51:09.861318 27207 net.cpp:382] conv1 -> conv1
I0428 19:51:09.863914 27207 net.cpp:124] Setting up conv1
I0428 19:51:09.863945 27207 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:09.863950 27207 net.cpp:139] Memory required for data: 1532160
I0428 19:51:09.863961 27207 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:09.863971 27207 net.cpp:86] Creating Layer pool1
I0428 19:51:09.863976 27207 net.cpp:408] pool1 <- conv1
I0428 19:51:09.863984 27207 net.cpp:382] pool1 -> pool1
I0428 19:51:09.864025 27207 net.cpp:124] Setting up pool1
I0428 19:51:09.864032 27207 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:09.864034 27207 net.cpp:139] Memory required for data: 1634560
I0428 19:51:09.864037 27207 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:09.864044 27207 net.cpp:86] Creating Layer ip1
I0428 19:51:09.864048 27207 net.cpp:408] ip1 <- pool1
I0428 19:51:09.864053 27207 net.cpp:382] ip1 -> ip1
I0428 19:51:09.864166 27207 net.cpp:124] Setting up ip1
I0428 19:51:09.864174 27207 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:09.864177 27207 net.cpp:139] Memory required for data: 1637120
I0428 19:51:09.864184 27207 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:09.864190 27207 net.cpp:86] Creating Layer relu1
I0428 19:51:09.864194 27207 net.cpp:408] relu1 <- ip1
I0428 19:51:09.864198 27207 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:09.864358 27207 net.cpp:124] Setting up relu1
I0428 19:51:09.864367 27207 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:09.864370 27207 net.cpp:139] Memory required for data: 1639680
I0428 19:51:09.864373 27207 layer_factory.hpp:77] Creating layer loss
I0428 19:51:09.864378 27207 net.cpp:86] Creating Layer loss
I0428 19:51:09.864382 27207 net.cpp:408] loss <- ip1
I0428 19:51:09.864385 27207 net.cpp:408] loss <- label
I0428 19:51:09.864390 27207 net.cpp:382] loss -> loss
I0428 19:51:09.864408 27207 layer_factory.hpp:77] Creating layer loss
I0428 19:51:09.865197 27207 net.cpp:124] Setting up loss
I0428 19:51:09.865224 27207 net.cpp:131] Top shape: (1)
I0428 19:51:09.865228 27207 net.cpp:134]     with loss weight 1
I0428 19:51:09.865243 27207 net.cpp:139] Memory required for data: 1639684
I0428 19:51:09.865247 27207 net.cpp:200] loss needs backward computation.
I0428 19:51:09.865252 27207 net.cpp:200] relu1 needs backward computation.
I0428 19:51:09.865254 27207 net.cpp:200] ip1 needs backward computation.
I0428 19:51:09.865257 27207 net.cpp:200] pool1 needs backward computation.
I0428 19:51:09.865260 27207 net.cpp:200] conv1 needs backward computation.
I0428 19:51:09.865263 27207 net.cpp:200] pool0 needs backward computation.
I0428 19:51:09.865267 27207 net.cpp:200] conv0 needs backward computation.
I0428 19:51:09.865270 27207 net.cpp:202] mnist does not need backward computation.
I0428 19:51:09.865272 27207 net.cpp:244] This network produces output loss
I0428 19:51:09.865280 27207 net.cpp:257] Network initialization done.
I0428 19:51:09.865535 27207 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test625.prototxt
I0428 19:51:09.865559 27207 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:09.865633 27207 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:51:09.865702 27207 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:09.865744 27207 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:09.865756 27207 net.cpp:86] Creating Layer mnist
I0428 19:51:09.865761 27207 net.cpp:382] mnist -> data
I0428 19:51:09.865769 27207 net.cpp:382] mnist -> label
I0428 19:51:09.865850 27207 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:09.867897 27207 net.cpp:124] Setting up mnist
I0428 19:51:09.867924 27207 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:09.867930 27207 net.cpp:131] Top shape: 100 (100)
I0428 19:51:09.867933 27207 net.cpp:139] Memory required for data: 314000
I0428 19:51:09.867936 27207 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:09.867946 27207 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:09.867950 27207 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:09.867954 27207 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:09.867961 27207 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:09.868048 27207 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:09.868055 27207 net.cpp:131] Top shape: 100 (100)
I0428 19:51:09.868059 27207 net.cpp:131] Top shape: 100 (100)
I0428 19:51:09.868062 27207 net.cpp:139] Memory required for data: 314800
I0428 19:51:09.868065 27207 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:09.868074 27207 net.cpp:86] Creating Layer conv0
I0428 19:51:09.868077 27207 net.cpp:408] conv0 <- data
I0428 19:51:09.868083 27207 net.cpp:382] conv0 -> conv0
I0428 19:51:09.868854 27207 net.cpp:124] Setting up conv0
I0428 19:51:09.868881 27207 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:09.868885 27207 net.cpp:139] Memory required for data: 1466800
I0428 19:51:09.868911 27207 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:09.868917 27207 net.cpp:86] Creating Layer pool0
I0428 19:51:09.868921 27207 net.cpp:408] pool0 <- conv0
I0428 19:51:09.868926 27207 net.cpp:382] pool0 -> pool0
I0428 19:51:09.868963 27207 net.cpp:124] Setting up pool0
I0428 19:51:09.868968 27207 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:09.868971 27207 net.cpp:139] Memory required for data: 1754800
I0428 19:51:09.868974 27207 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:09.868983 27207 net.cpp:86] Creating Layer conv1
I0428 19:51:09.868985 27207 net.cpp:408] conv1 <- pool0
I0428 19:51:09.868990 27207 net.cpp:382] conv1 -> conv1
I0428 19:51:09.871083 27207 net.cpp:124] Setting up conv1
I0428 19:51:09.871110 27207 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:09.871114 27207 net.cpp:139] Memory required for data: 2394800
I0428 19:51:09.871137 27207 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:09.871143 27207 net.cpp:86] Creating Layer pool1
I0428 19:51:09.871156 27207 net.cpp:408] pool1 <- conv1
I0428 19:51:09.871162 27207 net.cpp:382] pool1 -> pool1
I0428 19:51:09.871243 27207 net.cpp:124] Setting up pool1
I0428 19:51:09.871249 27207 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:09.871253 27207 net.cpp:139] Memory required for data: 2554800
I0428 19:51:09.871256 27207 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:09.871263 27207 net.cpp:86] Creating Layer ip1
I0428 19:51:09.871265 27207 net.cpp:408] ip1 <- pool1
I0428 19:51:09.871270 27207 net.cpp:382] ip1 -> ip1
I0428 19:51:09.871382 27207 net.cpp:124] Setting up ip1
I0428 19:51:09.871390 27207 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:09.871393 27207 net.cpp:139] Memory required for data: 2558800
I0428 19:51:09.871400 27207 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:09.871404 27207 net.cpp:86] Creating Layer relu1
I0428 19:51:09.871423 27207 net.cpp:408] relu1 <- ip1
I0428 19:51:09.871428 27207 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:09.872256 27207 net.cpp:124] Setting up relu1
I0428 19:51:09.872268 27207 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:09.872287 27207 net.cpp:139] Memory required for data: 2562800
I0428 19:51:09.872292 27207 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:51:09.872298 27207 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:51:09.872318 27207 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:51:09.872323 27207 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:51:09.872329 27207 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:51:09.872365 27207 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:51:09.872385 27207 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:09.872388 27207 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:09.872390 27207 net.cpp:139] Memory required for data: 2570800
I0428 19:51:09.872393 27207 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:09.872398 27207 net.cpp:86] Creating Layer accuracy
I0428 19:51:09.872401 27207 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:51:09.872406 27207 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:09.872409 27207 net.cpp:382] accuracy -> accuracy
I0428 19:51:09.872416 27207 net.cpp:124] Setting up accuracy
I0428 19:51:09.872419 27207 net.cpp:131] Top shape: (1)
I0428 19:51:09.872421 27207 net.cpp:139] Memory required for data: 2570804
I0428 19:51:09.872424 27207 layer_factory.hpp:77] Creating layer loss
I0428 19:51:09.872428 27207 net.cpp:86] Creating Layer loss
I0428 19:51:09.872431 27207 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:51:09.872436 27207 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:09.872439 27207 net.cpp:382] loss -> loss
I0428 19:51:09.872445 27207 layer_factory.hpp:77] Creating layer loss
I0428 19:51:09.872674 27207 net.cpp:124] Setting up loss
I0428 19:51:09.872686 27207 net.cpp:131] Top shape: (1)
I0428 19:51:09.872690 27207 net.cpp:134]     with loss weight 1
I0428 19:51:09.872696 27207 net.cpp:139] Memory required for data: 2570808
I0428 19:51:09.872700 27207 net.cpp:200] loss needs backward computation.
I0428 19:51:09.872704 27207 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:09.872707 27207 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:51:09.872717 27207 net.cpp:200] relu1 needs backward computation.
I0428 19:51:09.872720 27207 net.cpp:200] ip1 needs backward computation.
I0428 19:51:09.872723 27207 net.cpp:200] pool1 needs backward computation.
I0428 19:51:09.872727 27207 net.cpp:200] conv1 needs backward computation.
I0428 19:51:09.872735 27207 net.cpp:200] pool0 needs backward computation.
I0428 19:51:09.872738 27207 net.cpp:200] conv0 needs backward computation.
I0428 19:51:09.872741 27207 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:09.872745 27207 net.cpp:202] mnist does not need backward computation.
I0428 19:51:09.872748 27207 net.cpp:244] This network produces output accuracy
I0428 19:51:09.872752 27207 net.cpp:244] This network produces output loss
I0428 19:51:09.872771 27207 net.cpp:257] Network initialization done.
I0428 19:51:09.872804 27207 solver.cpp:56] Solver scaffolding done.
I0428 19:51:09.873045 27207 caffe.cpp:248] Starting Optimization
I0428 19:51:09.873054 27207 solver.cpp:273] Solving LeNet
I0428 19:51:09.873055 27207 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:09.873219 27207 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:09.877209 27207 blocking_queue.cpp:49] Waiting for data
I0428 19:51:09.939996 27216 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:09.940474 27207 solver.cpp:398]     Test net output #0: accuracy = 0.1187
I0428 19:51:09.940506 27207 solver.cpp:398]     Test net output #1: loss = 2.30776 (* 1 = 2.30776 loss)
I0428 19:51:09.942155 27207 solver.cpp:219] Iteration 0 (-1.65963e-30 iter/s, 0.0690746s/100 iters), loss = 2.30608
I0428 19:51:09.942195 27207 solver.cpp:238]     Train net output #0: loss = 2.30608 (* 1 = 2.30608 loss)
I0428 19:51:09.942209 27207 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:10.012975 27207 solver.cpp:219] Iteration 100 (1412.72 iter/s, 0.0707852s/100 iters), loss = 0.984914
I0428 19:51:10.013017 27207 solver.cpp:238]     Train net output #0: loss = 0.984914 (* 1 = 0.984914 loss)
I0428 19:51:10.013023 27207 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:10.081475 27207 solver.cpp:219] Iteration 200 (1460.61 iter/s, 0.0684647s/100 iters), loss = 0.336421
I0428 19:51:10.081516 27207 solver.cpp:238]     Train net output #0: loss = 0.336421 (* 1 = 0.336421 loss)
I0428 19:51:10.081521 27207 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:10.149682 27207 solver.cpp:219] Iteration 300 (1467.15 iter/s, 0.0681595s/100 iters), loss = 0.436752
I0428 19:51:10.149721 27207 solver.cpp:238]     Train net output #0: loss = 0.436752 (* 1 = 0.436752 loss)
I0428 19:51:10.149729 27207 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:10.217835 27207 solver.cpp:219] Iteration 400 (1468.32 iter/s, 0.0681052s/100 iters), loss = 0.32622
I0428 19:51:10.217875 27207 solver.cpp:238]     Train net output #0: loss = 0.32622 (* 1 = 0.32622 loss)
I0428 19:51:10.217880 27207 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:10.286018 27207 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:10.332677 27216 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:10.333148 27207 solver.cpp:398]     Test net output #0: accuracy = 0.8658
I0428 19:51:10.333184 27207 solver.cpp:398]     Test net output #1: loss = 0.367002 (* 1 = 0.367002 loss)
I0428 19:51:10.333950 27207 solver.cpp:219] Iteration 500 (861.478 iter/s, 0.11608s/100 iters), loss = 0.452163
I0428 19:51:10.333991 27207 solver.cpp:238]     Train net output #0: loss = 0.452163 (* 1 = 0.452163 loss)
I0428 19:51:10.333997 27207 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:10.403921 27207 solver.cpp:219] Iteration 600 (1429.79 iter/s, 0.0699402s/100 iters), loss = 0.140784
I0428 19:51:10.403961 27207 solver.cpp:238]     Train net output #0: loss = 0.140784 (* 1 = 0.140784 loss)
I0428 19:51:10.403969 27207 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:10.473820 27207 solver.cpp:219] Iteration 700 (1431.3 iter/s, 0.0698665s/100 iters), loss = 0.245586
I0428 19:51:10.473860 27207 solver.cpp:238]     Train net output #0: loss = 0.245586 (* 1 = 0.245586 loss)
I0428 19:51:10.473865 27207 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:10.543916 27207 solver.cpp:219] Iteration 800 (1427.24 iter/s, 0.0700651s/100 iters), loss = 0.317926
I0428 19:51:10.543939 27207 solver.cpp:238]     Train net output #0: loss = 0.317926 (* 1 = 0.317926 loss)
I0428 19:51:10.543954 27207 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:10.613420 27207 solver.cpp:219] Iteration 900 (1439.4 iter/s, 0.0694733s/100 iters), loss = 0.221186
I0428 19:51:10.613457 27207 solver.cpp:238]     Train net output #0: loss = 0.221186 (* 1 = 0.221186 loss)
I0428 19:51:10.613479 27207 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:10.636941 27214 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:10.682585 27207 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:10.683293 27207 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:10.683739 27207 solver.cpp:311] Iteration 1000, loss = 0.1601
I0428 19:51:10.683755 27207 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:10.727355 27216 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:10.727843 27207 solver.cpp:398]     Test net output #0: accuracy = 0.971
I0428 19:51:10.727875 27207 solver.cpp:398]     Test net output #1: loss = 0.0918951 (* 1 = 0.0918951 loss)
I0428 19:51:10.727880 27207 solver.cpp:316] Optimization Done.
I0428 19:51:10.727883 27207 caffe.cpp:259] Optimization Done.
