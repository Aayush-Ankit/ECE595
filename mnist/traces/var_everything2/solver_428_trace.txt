I0428 19:43:40.744603 25403 caffe.cpp:218] Using GPUs 0
I0428 19:43:40.781854 25403 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:41.285390 25403 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test428.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:41.285527 25403 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test428.prototxt
I0428 19:43:41.285928 25403 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:41.285945 25403 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:41.286042 25403 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:41.286115 25403 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:41.286214 25403 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:41.286237 25403 net.cpp:86] Creating Layer mnist
I0428 19:43:41.286244 25403 net.cpp:382] mnist -> data
I0428 19:43:41.286267 25403 net.cpp:382] mnist -> label
I0428 19:43:41.287358 25403 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:41.289824 25403 net.cpp:124] Setting up mnist
I0428 19:43:41.289841 25403 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:41.289847 25403 net.cpp:131] Top shape: 64 (64)
I0428 19:43:41.289851 25403 net.cpp:139] Memory required for data: 200960
I0428 19:43:41.289860 25403 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:41.289876 25403 net.cpp:86] Creating Layer conv0
I0428 19:43:41.289897 25403 net.cpp:408] conv0 <- data
I0428 19:43:41.289909 25403 net.cpp:382] conv0 -> conv0
I0428 19:43:41.556685 25403 net.cpp:124] Setting up conv0
I0428 19:43:41.556710 25403 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:41.556715 25403 net.cpp:139] Memory required for data: 495872
I0428 19:43:41.556727 25403 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:41.556740 25403 net.cpp:86] Creating Layer pool0
I0428 19:43:41.556744 25403 net.cpp:408] pool0 <- conv0
I0428 19:43:41.556749 25403 net.cpp:382] pool0 -> pool0
I0428 19:43:41.556849 25403 net.cpp:124] Setting up pool0
I0428 19:43:41.556855 25403 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:41.556859 25403 net.cpp:139] Memory required for data: 569600
I0428 19:43:41.556879 25403 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:41.556890 25403 net.cpp:86] Creating Layer conv1
I0428 19:43:41.556892 25403 net.cpp:408] conv1 <- pool0
I0428 19:43:41.556898 25403 net.cpp:382] conv1 -> conv1
I0428 19:43:41.559720 25403 net.cpp:124] Setting up conv1
I0428 19:43:41.559749 25403 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:41.559753 25403 net.cpp:139] Memory required for data: 979200
I0428 19:43:41.559777 25403 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:41.559787 25403 net.cpp:86] Creating Layer pool1
I0428 19:43:41.559790 25403 net.cpp:408] pool1 <- conv1
I0428 19:43:41.559794 25403 net.cpp:382] pool1 -> pool1
I0428 19:43:41.559847 25403 net.cpp:124] Setting up pool1
I0428 19:43:41.559852 25403 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:41.559855 25403 net.cpp:139] Memory required for data: 1081600
I0428 19:43:41.559859 25403 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:41.559867 25403 net.cpp:86] Creating Layer ip1
I0428 19:43:41.559870 25403 net.cpp:408] ip1 <- pool1
I0428 19:43:41.559876 25403 net.cpp:382] ip1 -> ip1
I0428 19:43:41.560112 25403 net.cpp:124] Setting up ip1
I0428 19:43:41.560134 25403 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:41.560138 25403 net.cpp:139] Memory required for data: 1094400
I0428 19:43:41.560145 25403 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:41.560151 25403 net.cpp:86] Creating Layer relu1
I0428 19:43:41.560154 25403 net.cpp:408] relu1 <- ip1
I0428 19:43:41.560158 25403 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:41.560319 25403 net.cpp:124] Setting up relu1
I0428 19:43:41.560328 25403 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:41.560331 25403 net.cpp:139] Memory required for data: 1107200
I0428 19:43:41.560334 25403 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:41.560341 25403 net.cpp:86] Creating Layer ip2
I0428 19:43:41.560345 25403 net.cpp:408] ip2 <- ip1
I0428 19:43:41.560350 25403 net.cpp:382] ip2 -> ip2
I0428 19:43:41.560473 25403 net.cpp:124] Setting up ip2
I0428 19:43:41.560480 25403 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:41.560483 25403 net.cpp:139] Memory required for data: 1120000
I0428 19:43:41.560488 25403 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:41.560494 25403 net.cpp:86] Creating Layer relu2
I0428 19:43:41.560497 25403 net.cpp:408] relu2 <- ip2
I0428 19:43:41.560500 25403 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:41.561345 25403 net.cpp:124] Setting up relu2
I0428 19:43:41.561357 25403 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:41.561377 25403 net.cpp:139] Memory required for data: 1132800
I0428 19:43:41.561379 25403 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:41.561388 25403 net.cpp:86] Creating Layer ip3
I0428 19:43:41.561391 25403 net.cpp:408] ip3 <- ip2
I0428 19:43:41.561398 25403 net.cpp:382] ip3 -> ip3
I0428 19:43:41.561549 25403 net.cpp:124] Setting up ip3
I0428 19:43:41.561558 25403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:41.561560 25403 net.cpp:139] Memory required for data: 1135360
I0428 19:43:41.561568 25403 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:41.561573 25403 net.cpp:86] Creating Layer relu3
I0428 19:43:41.561575 25403 net.cpp:408] relu3 <- ip3
I0428 19:43:41.561579 25403 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:41.561741 25403 net.cpp:124] Setting up relu3
I0428 19:43:41.561750 25403 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:41.561753 25403 net.cpp:139] Memory required for data: 1137920
I0428 19:43:41.561756 25403 layer_factory.hpp:77] Creating layer loss
I0428 19:43:41.561763 25403 net.cpp:86] Creating Layer loss
I0428 19:43:41.561765 25403 net.cpp:408] loss <- ip3
I0428 19:43:41.561769 25403 net.cpp:408] loss <- label
I0428 19:43:41.561774 25403 net.cpp:382] loss -> loss
I0428 19:43:41.561790 25403 layer_factory.hpp:77] Creating layer loss
I0428 19:43:41.562037 25403 net.cpp:124] Setting up loss
I0428 19:43:41.562047 25403 net.cpp:131] Top shape: (1)
I0428 19:43:41.562050 25403 net.cpp:134]     with loss weight 1
I0428 19:43:41.562065 25403 net.cpp:139] Memory required for data: 1137924
I0428 19:43:41.562068 25403 net.cpp:200] loss needs backward computation.
I0428 19:43:41.562072 25403 net.cpp:200] relu3 needs backward computation.
I0428 19:43:41.562075 25403 net.cpp:200] ip3 needs backward computation.
I0428 19:43:41.562078 25403 net.cpp:200] relu2 needs backward computation.
I0428 19:43:41.562081 25403 net.cpp:200] ip2 needs backward computation.
I0428 19:43:41.562084 25403 net.cpp:200] relu1 needs backward computation.
I0428 19:43:41.562088 25403 net.cpp:200] ip1 needs backward computation.
I0428 19:43:41.562090 25403 net.cpp:200] pool1 needs backward computation.
I0428 19:43:41.562093 25403 net.cpp:200] conv1 needs backward computation.
I0428 19:43:41.562098 25403 net.cpp:200] pool0 needs backward computation.
I0428 19:43:41.562101 25403 net.cpp:200] conv0 needs backward computation.
I0428 19:43:41.562104 25403 net.cpp:202] mnist does not need backward computation.
I0428 19:43:41.562108 25403 net.cpp:244] This network produces output loss
I0428 19:43:41.562116 25403 net.cpp:257] Network initialization done.
I0428 19:43:41.562465 25403 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test428.prototxt
I0428 19:43:41.562507 25403 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:41.562597 25403 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:41.562703 25403 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:41.562747 25403 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:41.562758 25403 net.cpp:86] Creating Layer mnist
I0428 19:43:41.562763 25403 net.cpp:382] mnist -> data
I0428 19:43:41.562770 25403 net.cpp:382] mnist -> label
I0428 19:43:41.562852 25403 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:41.564987 25403 net.cpp:124] Setting up mnist
I0428 19:43:41.565016 25403 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:41.565022 25403 net.cpp:131] Top shape: 100 (100)
I0428 19:43:41.565026 25403 net.cpp:139] Memory required for data: 314000
I0428 19:43:41.565029 25403 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:41.565063 25403 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:41.565068 25403 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:41.565073 25403 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:41.565079 25403 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:41.565199 25403 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:41.565207 25403 net.cpp:131] Top shape: 100 (100)
I0428 19:43:41.565210 25403 net.cpp:131] Top shape: 100 (100)
I0428 19:43:41.565213 25403 net.cpp:139] Memory required for data: 314800
I0428 19:43:41.565217 25403 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:41.565224 25403 net.cpp:86] Creating Layer conv0
I0428 19:43:41.565227 25403 net.cpp:408] conv0 <- data
I0428 19:43:41.565232 25403 net.cpp:382] conv0 -> conv0
I0428 19:43:41.566962 25403 net.cpp:124] Setting up conv0
I0428 19:43:41.566977 25403 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:41.566980 25403 net.cpp:139] Memory required for data: 775600
I0428 19:43:41.566989 25403 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:41.567011 25403 net.cpp:86] Creating Layer pool0
I0428 19:43:41.567014 25403 net.cpp:408] pool0 <- conv0
I0428 19:43:41.567034 25403 net.cpp:382] pool0 -> pool0
I0428 19:43:41.567066 25403 net.cpp:124] Setting up pool0
I0428 19:43:41.567071 25403 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:41.567075 25403 net.cpp:139] Memory required for data: 890800
I0428 19:43:41.567077 25403 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:41.567085 25403 net.cpp:86] Creating Layer conv1
I0428 19:43:41.567088 25403 net.cpp:408] conv1 <- pool0
I0428 19:43:41.567092 25403 net.cpp:382] conv1 -> conv1
I0428 19:43:41.568644 25403 net.cpp:124] Setting up conv1
I0428 19:43:41.568656 25403 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:41.568660 25403 net.cpp:139] Memory required for data: 1530800
I0428 19:43:41.568668 25403 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:41.568675 25403 net.cpp:86] Creating Layer pool1
I0428 19:43:41.568677 25403 net.cpp:408] pool1 <- conv1
I0428 19:43:41.568698 25403 net.cpp:382] pool1 -> pool1
I0428 19:43:41.568732 25403 net.cpp:124] Setting up pool1
I0428 19:43:41.568738 25403 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:41.568742 25403 net.cpp:139] Memory required for data: 1690800
I0428 19:43:41.568745 25403 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:41.568750 25403 net.cpp:86] Creating Layer ip1
I0428 19:43:41.568753 25403 net.cpp:408] ip1 <- pool1
I0428 19:43:41.568771 25403 net.cpp:382] ip1 -> ip1
I0428 19:43:41.569039 25403 net.cpp:124] Setting up ip1
I0428 19:43:41.569049 25403 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:41.569063 25403 net.cpp:139] Memory required for data: 1710800
I0428 19:43:41.569072 25403 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:41.569085 25403 net.cpp:86] Creating Layer relu1
I0428 19:43:41.569089 25403 net.cpp:408] relu1 <- ip1
I0428 19:43:41.569094 25403 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:41.569298 25403 net.cpp:124] Setting up relu1
I0428 19:43:41.569306 25403 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:41.569309 25403 net.cpp:139] Memory required for data: 1730800
I0428 19:43:41.569314 25403 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:41.569319 25403 net.cpp:86] Creating Layer ip2
I0428 19:43:41.569324 25403 net.cpp:408] ip2 <- ip1
I0428 19:43:41.569327 25403 net.cpp:382] ip2 -> ip2
I0428 19:43:41.569466 25403 net.cpp:124] Setting up ip2
I0428 19:43:41.569473 25403 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:41.569478 25403 net.cpp:139] Memory required for data: 1750800
I0428 19:43:41.569483 25403 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:41.569488 25403 net.cpp:86] Creating Layer relu2
I0428 19:43:41.569490 25403 net.cpp:408] relu2 <- ip2
I0428 19:43:41.569494 25403 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:41.569641 25403 net.cpp:124] Setting up relu2
I0428 19:43:41.569649 25403 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:41.569653 25403 net.cpp:139] Memory required for data: 1770800
I0428 19:43:41.569655 25403 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:41.569660 25403 net.cpp:86] Creating Layer ip3
I0428 19:43:41.569664 25403 net.cpp:408] ip3 <- ip2
I0428 19:43:41.569669 25403 net.cpp:382] ip3 -> ip3
I0428 19:43:41.569797 25403 net.cpp:124] Setting up ip3
I0428 19:43:41.569804 25403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:41.569808 25403 net.cpp:139] Memory required for data: 1774800
I0428 19:43:41.569815 25403 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:41.569819 25403 net.cpp:86] Creating Layer relu3
I0428 19:43:41.569823 25403 net.cpp:408] relu3 <- ip3
I0428 19:43:41.569828 25403 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:41.570713 25403 net.cpp:124] Setting up relu3
I0428 19:43:41.570724 25403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:41.570729 25403 net.cpp:139] Memory required for data: 1778800
I0428 19:43:41.570732 25403 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:41.570737 25403 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:41.570741 25403 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:41.570746 25403 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:41.570752 25403 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:41.570788 25403 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:41.570793 25403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:41.570797 25403 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:41.570801 25403 net.cpp:139] Memory required for data: 1786800
I0428 19:43:41.570803 25403 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:41.570808 25403 net.cpp:86] Creating Layer accuracy
I0428 19:43:41.570811 25403 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:41.570816 25403 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:41.570821 25403 net.cpp:382] accuracy -> accuracy
I0428 19:43:41.570827 25403 net.cpp:124] Setting up accuracy
I0428 19:43:41.570832 25403 net.cpp:131] Top shape: (1)
I0428 19:43:41.570833 25403 net.cpp:139] Memory required for data: 1786804
I0428 19:43:41.570837 25403 layer_factory.hpp:77] Creating layer loss
I0428 19:43:41.570840 25403 net.cpp:86] Creating Layer loss
I0428 19:43:41.570844 25403 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:41.570847 25403 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:41.570852 25403 net.cpp:382] loss -> loss
I0428 19:43:41.570858 25403 layer_factory.hpp:77] Creating layer loss
I0428 19:43:41.571112 25403 net.cpp:124] Setting up loss
I0428 19:43:41.571120 25403 net.cpp:131] Top shape: (1)
I0428 19:43:41.571125 25403 net.cpp:134]     with loss weight 1
I0428 19:43:41.571131 25403 net.cpp:139] Memory required for data: 1786808
I0428 19:43:41.571143 25403 net.cpp:200] loss needs backward computation.
I0428 19:43:41.571147 25403 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:41.571151 25403 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:41.571154 25403 net.cpp:200] relu3 needs backward computation.
I0428 19:43:41.571157 25403 net.cpp:200] ip3 needs backward computation.
I0428 19:43:41.571161 25403 net.cpp:200] relu2 needs backward computation.
I0428 19:43:41.571171 25403 net.cpp:200] ip2 needs backward computation.
I0428 19:43:41.571173 25403 net.cpp:200] relu1 needs backward computation.
I0428 19:43:41.571177 25403 net.cpp:200] ip1 needs backward computation.
I0428 19:43:41.571179 25403 net.cpp:200] pool1 needs backward computation.
I0428 19:43:41.571188 25403 net.cpp:200] conv1 needs backward computation.
I0428 19:43:41.571192 25403 net.cpp:200] pool0 needs backward computation.
I0428 19:43:41.571194 25403 net.cpp:200] conv0 needs backward computation.
I0428 19:43:41.571198 25403 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:41.571208 25403 net.cpp:202] mnist does not need backward computation.
I0428 19:43:41.571210 25403 net.cpp:244] This network produces output accuracy
I0428 19:43:41.571213 25403 net.cpp:244] This network produces output loss
I0428 19:43:41.571223 25403 net.cpp:257] Network initialization done.
I0428 19:43:41.571264 25403 solver.cpp:56] Solver scaffolding done.
I0428 19:43:41.571624 25403 caffe.cpp:248] Starting Optimization
I0428 19:43:41.571631 25403 solver.cpp:273] Solving LeNet
I0428 19:43:41.571635 25403 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:41.572484 25403 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:41.575726 25403 blocking_queue.cpp:49] Waiting for data
I0428 19:43:41.644250 25412 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:41.644701 25403 solver.cpp:398]     Test net output #0: accuracy = 0.0792
I0428 19:43:41.644721 25403 solver.cpp:398]     Test net output #1: loss = 2.30741 (* 1 = 2.30741 loss)
I0428 19:43:41.645908 25403 solver.cpp:219] Iteration 0 (-1.09441e-42 iter/s, 0.0742502s/100 iters), loss = 2.30149
I0428 19:43:41.645941 25403 solver.cpp:238]     Train net output #0: loss = 2.30149 (* 1 = 2.30149 loss)
I0428 19:43:41.645956 25403 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:41.740000 25403 solver.cpp:219] Iteration 100 (1063.29 iter/s, 0.0940474s/100 iters), loss = 1.08785
I0428 19:43:41.740025 25403 solver.cpp:238]     Train net output #0: loss = 1.08785 (* 1 = 1.08785 loss)
I0428 19:43:41.740032 25403 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:41.836184 25403 solver.cpp:219] Iteration 200 (1040.07 iter/s, 0.0961474s/100 iters), loss = 0.752518
I0428 19:43:41.836212 25403 solver.cpp:238]     Train net output #0: loss = 0.752518 (* 1 = 0.752518 loss)
I0428 19:43:41.836220 25403 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:41.934090 25403 solver.cpp:219] Iteration 300 (1021.78 iter/s, 0.0978688s/100 iters), loss = 0.303408
I0428 19:43:41.934120 25403 solver.cpp:238]     Train net output #0: loss = 0.303408 (* 1 = 0.303408 loss)
I0428 19:43:41.934134 25403 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:42.034049 25403 solver.cpp:219] Iteration 400 (1000.81 iter/s, 0.0999188s/100 iters), loss = 0.130648
I0428 19:43:42.034077 25403 solver.cpp:238]     Train net output #0: loss = 0.130648 (* 1 = 0.130648 loss)
I0428 19:43:42.034087 25403 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:42.132750 25403 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:42.203711 25412 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:42.204255 25403 solver.cpp:398]     Test net output #0: accuracy = 0.9498
I0428 19:43:42.204294 25403 solver.cpp:398]     Test net output #1: loss = 0.160559 (* 1 = 0.160559 loss)
I0428 19:43:42.205415 25403 solver.cpp:219] Iteration 500 (583.691 iter/s, 0.171323s/100 iters), loss = 0.0436036
I0428 19:43:42.205471 25403 solver.cpp:238]     Train net output #0: loss = 0.0436036 (* 1 = 0.0436036 loss)
I0428 19:43:42.205489 25403 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:42.304970 25403 solver.cpp:219] Iteration 600 (1005.12 iter/s, 0.0994906s/100 iters), loss = 0.193523
I0428 19:43:42.305001 25403 solver.cpp:238]     Train net output #0: loss = 0.193523 (* 1 = 0.193523 loss)
I0428 19:43:42.305011 25403 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:42.400575 25403 solver.cpp:219] Iteration 700 (1046.41 iter/s, 0.0955648s/100 iters), loss = 0.114527
I0428 19:43:42.400604 25403 solver.cpp:238]     Train net output #0: loss = 0.114527 (* 1 = 0.114527 loss)
I0428 19:43:42.400616 25403 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:42.489439 25403 solver.cpp:219] Iteration 800 (1125.8 iter/s, 0.0888259s/100 iters), loss = 0.22227
I0428 19:43:42.489462 25403 solver.cpp:238]     Train net output #0: loss = 0.22227 (* 1 = 0.22227 loss)
I0428 19:43:42.489470 25403 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:42.573288 25403 solver.cpp:219] Iteration 900 (1193.08 iter/s, 0.0838164s/100 iters), loss = 0.129722
I0428 19:43:42.573312 25403 solver.cpp:238]     Train net output #0: loss = 0.129722 (* 1 = 0.129722 loss)
I0428 19:43:42.573318 25403 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:42.601150 25411 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:42.655853 25403 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:42.656893 25403 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:42.657542 25403 solver.cpp:311] Iteration 1000, loss = 0.0898962
I0428 19:43:42.657557 25403 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:42.710350 25412 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:42.710768 25403 solver.cpp:398]     Test net output #0: accuracy = 0.9729
I0428 19:43:42.710786 25403 solver.cpp:398]     Test net output #1: loss = 0.0895042 (* 1 = 0.0895042 loss)
I0428 19:43:42.710791 25403 solver.cpp:316] Optimization Done.
I0428 19:43:42.710794 25403 caffe.cpp:259] Optimization Done.
