I0428 20:24:21.442711  2395 caffe.cpp:218] Using GPUs 0
I0428 20:24:21.477939  2395 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:24:21.990826  2395 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1436.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:24:21.990968  2395 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1436.prototxt
I0428 20:24:21.991372  2395 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:24:21.991391  2395 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:24:21.991488  2395 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:21.991564  2395 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:21.991667  2395 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:24:21.991688  2395 net.cpp:86] Creating Layer mnist
I0428 20:24:21.991696  2395 net.cpp:382] mnist -> data
I0428 20:24:21.991719  2395 net.cpp:382] mnist -> label
I0428 20:24:21.992823  2395 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:24:21.995492  2395 net.cpp:124] Setting up mnist
I0428 20:24:21.995509  2395 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:24:21.995517  2395 net.cpp:131] Top shape: 64 (64)
I0428 20:24:21.995519  2395 net.cpp:139] Memory required for data: 200960
I0428 20:24:21.995527  2395 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:21.995543  2395 net.cpp:86] Creating Layer conv0
I0428 20:24:21.995563  2395 net.cpp:408] conv0 <- data
I0428 20:24:21.995575  2395 net.cpp:382] conv0 -> conv0
I0428 20:24:22.268856  2395 net.cpp:124] Setting up conv0
I0428 20:24:22.268882  2395 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:24:22.268887  2395 net.cpp:139] Memory required for data: 7573760
I0428 20:24:22.268900  2395 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:22.268929  2395 net.cpp:86] Creating Layer pool0
I0428 20:24:22.268931  2395 net.cpp:408] pool0 <- conv0
I0428 20:24:22.268937  2395 net.cpp:382] pool0 -> pool0
I0428 20:24:22.268981  2395 net.cpp:124] Setting up pool0
I0428 20:24:22.268992  2395 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:24:22.268996  2395 net.cpp:139] Memory required for data: 9416960
I0428 20:24:22.268998  2395 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:22.269008  2395 net.cpp:86] Creating Layer conv1
I0428 20:24:22.269011  2395 net.cpp:408] conv1 <- pool0
I0428 20:24:22.269016  2395 net.cpp:382] conv1 -> conv1
I0428 20:24:22.272517  2395 net.cpp:124] Setting up conv1
I0428 20:24:22.272542  2395 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:24:22.272547  2395 net.cpp:139] Memory required for data: 11055360
I0428 20:24:22.272554  2395 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:22.272562  2395 net.cpp:86] Creating Layer pool1
I0428 20:24:22.272565  2395 net.cpp:408] pool1 <- conv1
I0428 20:24:22.272569  2395 net.cpp:382] pool1 -> pool1
I0428 20:24:22.272603  2395 net.cpp:124] Setting up pool1
I0428 20:24:22.272608  2395 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:24:22.272610  2395 net.cpp:139] Memory required for data: 11464960
I0428 20:24:22.272614  2395 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:22.272620  2395 net.cpp:86] Creating Layer ip1
I0428 20:24:22.272622  2395 net.cpp:408] ip1 <- pool1
I0428 20:24:22.272627  2395 net.cpp:382] ip1 -> ip1
I0428 20:24:22.273288  2395 net.cpp:124] Setting up ip1
I0428 20:24:22.273295  2395 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:22.273313  2395 net.cpp:139] Memory required for data: 11477760
I0428 20:24:22.273320  2395 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:22.273325  2395 net.cpp:86] Creating Layer relu1
I0428 20:24:22.273329  2395 net.cpp:408] relu1 <- ip1
I0428 20:24:22.273332  2395 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:22.273516  2395 net.cpp:124] Setting up relu1
I0428 20:24:22.273524  2395 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:24:22.273528  2395 net.cpp:139] Memory required for data: 11490560
I0428 20:24:22.273530  2395 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:22.273537  2395 net.cpp:86] Creating Layer ip2
I0428 20:24:22.273540  2395 net.cpp:408] ip2 <- ip1
I0428 20:24:22.273545  2395 net.cpp:382] ip2 -> ip2
I0428 20:24:22.273638  2395 net.cpp:124] Setting up ip2
I0428 20:24:22.273644  2395 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:22.273648  2395 net.cpp:139] Memory required for data: 11493120
I0428 20:24:22.273653  2395 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:22.273659  2395 net.cpp:86] Creating Layer relu2
I0428 20:24:22.273663  2395 net.cpp:408] relu2 <- ip2
I0428 20:24:22.273666  2395 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:22.274411  2395 net.cpp:124] Setting up relu2
I0428 20:24:22.274423  2395 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:22.274426  2395 net.cpp:139] Memory required for data: 11495680
I0428 20:24:22.274430  2395 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:22.274436  2395 net.cpp:86] Creating Layer ip3
I0428 20:24:22.274440  2395 net.cpp:408] ip3 <- ip2
I0428 20:24:22.274444  2395 net.cpp:382] ip3 -> ip3
I0428 20:24:22.274531  2395 net.cpp:124] Setting up ip3
I0428 20:24:22.274538  2395 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:22.274541  2395 net.cpp:139] Memory required for data: 11498240
I0428 20:24:22.274549  2395 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:22.274554  2395 net.cpp:86] Creating Layer relu3
I0428 20:24:22.274556  2395 net.cpp:408] relu3 <- ip3
I0428 20:24:22.274560  2395 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:22.274750  2395 net.cpp:124] Setting up relu3
I0428 20:24:22.274760  2395 net.cpp:131] Top shape: 64 10 (640)
I0428 20:24:22.274762  2395 net.cpp:139] Memory required for data: 11500800
I0428 20:24:22.274765  2395 layer_factory.hpp:77] Creating layer loss
I0428 20:24:22.274771  2395 net.cpp:86] Creating Layer loss
I0428 20:24:22.274775  2395 net.cpp:408] loss <- ip3
I0428 20:24:22.274777  2395 net.cpp:408] loss <- label
I0428 20:24:22.274783  2395 net.cpp:382] loss -> loss
I0428 20:24:22.274801  2395 layer_factory.hpp:77] Creating layer loss
I0428 20:24:22.275043  2395 net.cpp:124] Setting up loss
I0428 20:24:22.275051  2395 net.cpp:131] Top shape: (1)
I0428 20:24:22.275054  2395 net.cpp:134]     with loss weight 1
I0428 20:24:22.275084  2395 net.cpp:139] Memory required for data: 11500804
I0428 20:24:22.275087  2395 net.cpp:200] loss needs backward computation.
I0428 20:24:22.275090  2395 net.cpp:200] relu3 needs backward computation.
I0428 20:24:22.275094  2395 net.cpp:200] ip3 needs backward computation.
I0428 20:24:22.275096  2395 net.cpp:200] relu2 needs backward computation.
I0428 20:24:22.275099  2395 net.cpp:200] ip2 needs backward computation.
I0428 20:24:22.275101  2395 net.cpp:200] relu1 needs backward computation.
I0428 20:24:22.275104  2395 net.cpp:200] ip1 needs backward computation.
I0428 20:24:22.275107  2395 net.cpp:200] pool1 needs backward computation.
I0428 20:24:22.275110  2395 net.cpp:200] conv1 needs backward computation.
I0428 20:24:22.275113  2395 net.cpp:200] pool0 needs backward computation.
I0428 20:24:22.275116  2395 net.cpp:200] conv0 needs backward computation.
I0428 20:24:22.275120  2395 net.cpp:202] mnist does not need backward computation.
I0428 20:24:22.275121  2395 net.cpp:244] This network produces output loss
I0428 20:24:22.275130  2395 net.cpp:257] Network initialization done.
I0428 20:24:22.275450  2395 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1436.prototxt
I0428 20:24:22.275477  2395 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:24:22.275563  2395 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:24:22.275635  2395 layer_factory.hpp:77] Creating layer mnist
I0428 20:24:22.275678  2395 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:24:22.275691  2395 net.cpp:86] Creating Layer mnist
I0428 20:24:22.275694  2395 net.cpp:382] mnist -> data
I0428 20:24:22.275701  2395 net.cpp:382] mnist -> label
I0428 20:24:22.275777  2395 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:24:22.276880  2395 net.cpp:124] Setting up mnist
I0428 20:24:22.276908  2395 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:24:22.276913  2395 net.cpp:131] Top shape: 100 (100)
I0428 20:24:22.276916  2395 net.cpp:139] Memory required for data: 314000
I0428 20:24:22.276919  2395 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:24:22.276929  2395 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:24:22.276932  2395 net.cpp:408] label_mnist_1_split <- label
I0428 20:24:22.276937  2395 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:24:22.276943  2395 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:24:22.277026  2395 net.cpp:124] Setting up label_mnist_1_split
I0428 20:24:22.277034  2395 net.cpp:131] Top shape: 100 (100)
I0428 20:24:22.277039  2395 net.cpp:131] Top shape: 100 (100)
I0428 20:24:22.277040  2395 net.cpp:139] Memory required for data: 314800
I0428 20:24:22.277043  2395 layer_factory.hpp:77] Creating layer conv0
I0428 20:24:22.277051  2395 net.cpp:86] Creating Layer conv0
I0428 20:24:22.277057  2395 net.cpp:408] conv0 <- data
I0428 20:24:22.277078  2395 net.cpp:382] conv0 -> conv0
I0428 20:24:22.278823  2395 net.cpp:124] Setting up conv0
I0428 20:24:22.278851  2395 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:24:22.278856  2395 net.cpp:139] Memory required for data: 11834800
I0428 20:24:22.278864  2395 layer_factory.hpp:77] Creating layer pool0
I0428 20:24:22.278869  2395 net.cpp:86] Creating Layer pool0
I0428 20:24:22.278873  2395 net.cpp:408] pool0 <- conv0
I0428 20:24:22.278877  2395 net.cpp:382] pool0 -> pool0
I0428 20:24:22.278911  2395 net.cpp:124] Setting up pool0
I0428 20:24:22.278916  2395 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:24:22.278918  2395 net.cpp:139] Memory required for data: 14714800
I0428 20:24:22.278921  2395 layer_factory.hpp:77] Creating layer conv1
I0428 20:24:22.278929  2395 net.cpp:86] Creating Layer conv1
I0428 20:24:22.278933  2395 net.cpp:408] conv1 <- pool0
I0428 20:24:22.278936  2395 net.cpp:382] conv1 -> conv1
I0428 20:24:22.282042  2395 net.cpp:124] Setting up conv1
I0428 20:24:22.282069  2395 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:24:22.282073  2395 net.cpp:139] Memory required for data: 17274800
I0428 20:24:22.282095  2395 layer_factory.hpp:77] Creating layer pool1
I0428 20:24:22.282101  2395 net.cpp:86] Creating Layer pool1
I0428 20:24:22.282105  2395 net.cpp:408] pool1 <- conv1
I0428 20:24:22.282109  2395 net.cpp:382] pool1 -> pool1
I0428 20:24:22.282161  2395 net.cpp:124] Setting up pool1
I0428 20:24:22.282167  2395 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:24:22.282171  2395 net.cpp:139] Memory required for data: 17914800
I0428 20:24:22.282172  2395 layer_factory.hpp:77] Creating layer ip1
I0428 20:24:22.282178  2395 net.cpp:86] Creating Layer ip1
I0428 20:24:22.282181  2395 net.cpp:408] ip1 <- pool1
I0428 20:24:22.282186  2395 net.cpp:382] ip1 -> ip1
I0428 20:24:22.282709  2395 net.cpp:124] Setting up ip1
I0428 20:24:22.282743  2395 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:22.282763  2395 net.cpp:139] Memory required for data: 17934800
I0428 20:24:22.282776  2395 layer_factory.hpp:77] Creating layer relu1
I0428 20:24:22.282781  2395 net.cpp:86] Creating Layer relu1
I0428 20:24:22.282785  2395 net.cpp:408] relu1 <- ip1
I0428 20:24:22.282789  2395 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:24:22.282938  2395 net.cpp:124] Setting up relu1
I0428 20:24:22.282948  2395 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:24:22.282950  2395 net.cpp:139] Memory required for data: 17954800
I0428 20:24:22.282953  2395 layer_factory.hpp:77] Creating layer ip2
I0428 20:24:22.282960  2395 net.cpp:86] Creating Layer ip2
I0428 20:24:22.282963  2395 net.cpp:408] ip2 <- ip1
I0428 20:24:22.282968  2395 net.cpp:382] ip2 -> ip2
I0428 20:24:22.283088  2395 net.cpp:124] Setting up ip2
I0428 20:24:22.283095  2395 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:22.283097  2395 net.cpp:139] Memory required for data: 17958800
I0428 20:24:22.283102  2395 layer_factory.hpp:77] Creating layer relu2
I0428 20:24:22.283107  2395 net.cpp:86] Creating Layer relu2
I0428 20:24:22.283110  2395 net.cpp:408] relu2 <- ip2
I0428 20:24:22.283113  2395 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:24:22.283372  2395 net.cpp:124] Setting up relu2
I0428 20:24:22.283380  2395 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:22.283385  2395 net.cpp:139] Memory required for data: 17962800
I0428 20:24:22.283387  2395 layer_factory.hpp:77] Creating layer ip3
I0428 20:24:22.283393  2395 net.cpp:86] Creating Layer ip3
I0428 20:24:22.283396  2395 net.cpp:408] ip3 <- ip2
I0428 20:24:22.283401  2395 net.cpp:382] ip3 -> ip3
I0428 20:24:22.283506  2395 net.cpp:124] Setting up ip3
I0428 20:24:22.283517  2395 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:22.283520  2395 net.cpp:139] Memory required for data: 17966800
I0428 20:24:22.283542  2395 layer_factory.hpp:77] Creating layer relu3
I0428 20:24:22.283546  2395 net.cpp:86] Creating Layer relu3
I0428 20:24:22.283550  2395 net.cpp:408] relu3 <- ip3
I0428 20:24:22.283553  2395 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:24:22.284329  2395 net.cpp:124] Setting up relu3
I0428 20:24:22.284340  2395 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:22.284359  2395 net.cpp:139] Memory required for data: 17970800
I0428 20:24:22.284363  2395 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:24:22.284368  2395 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:24:22.284370  2395 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:24:22.284376  2395 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:24:22.284382  2395 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:24:22.284420  2395 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:24:22.284425  2395 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:22.284428  2395 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:24:22.284431  2395 net.cpp:139] Memory required for data: 17978800
I0428 20:24:22.284435  2395 layer_factory.hpp:77] Creating layer accuracy
I0428 20:24:22.284445  2395 net.cpp:86] Creating Layer accuracy
I0428 20:24:22.284447  2395 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:24:22.284451  2395 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:24:22.284471  2395 net.cpp:382] accuracy -> accuracy
I0428 20:24:22.284478  2395 net.cpp:124] Setting up accuracy
I0428 20:24:22.284482  2395 net.cpp:131] Top shape: (1)
I0428 20:24:22.284489  2395 net.cpp:139] Memory required for data: 17978804
I0428 20:24:22.284492  2395 layer_factory.hpp:77] Creating layer loss
I0428 20:24:22.284497  2395 net.cpp:86] Creating Layer loss
I0428 20:24:22.284500  2395 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:24:22.284519  2395 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:24:22.284524  2395 net.cpp:382] loss -> loss
I0428 20:24:22.284534  2395 layer_factory.hpp:77] Creating layer loss
I0428 20:24:22.284759  2395 net.cpp:124] Setting up loss
I0428 20:24:22.284770  2395 net.cpp:131] Top shape: (1)
I0428 20:24:22.284773  2395 net.cpp:134]     with loss weight 1
I0428 20:24:22.284790  2395 net.cpp:139] Memory required for data: 17978808
I0428 20:24:22.284793  2395 net.cpp:200] loss needs backward computation.
I0428 20:24:22.284797  2395 net.cpp:202] accuracy does not need backward computation.
I0428 20:24:22.284801  2395 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:24:22.284804  2395 net.cpp:200] relu3 needs backward computation.
I0428 20:24:22.284807  2395 net.cpp:200] ip3 needs backward computation.
I0428 20:24:22.284818  2395 net.cpp:200] relu2 needs backward computation.
I0428 20:24:22.284821  2395 net.cpp:200] ip2 needs backward computation.
I0428 20:24:22.284824  2395 net.cpp:200] relu1 needs backward computation.
I0428 20:24:22.284827  2395 net.cpp:200] ip1 needs backward computation.
I0428 20:24:22.284845  2395 net.cpp:200] pool1 needs backward computation.
I0428 20:24:22.284848  2395 net.cpp:200] conv1 needs backward computation.
I0428 20:24:22.284852  2395 net.cpp:200] pool0 needs backward computation.
I0428 20:24:22.284854  2395 net.cpp:200] conv0 needs backward computation.
I0428 20:24:22.284858  2395 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:24:22.284862  2395 net.cpp:202] mnist does not need backward computation.
I0428 20:24:22.284865  2395 net.cpp:244] This network produces output accuracy
I0428 20:24:22.284868  2395 net.cpp:244] This network produces output loss
I0428 20:24:22.284879  2395 net.cpp:257] Network initialization done.
I0428 20:24:22.284935  2395 solver.cpp:56] Solver scaffolding done.
I0428 20:24:22.285289  2395 caffe.cpp:248] Starting Optimization
I0428 20:24:22.285295  2395 solver.cpp:273] Solving LeNet
I0428 20:24:22.285298  2395 solver.cpp:274] Learning Rate Policy: inv
I0428 20:24:22.286094  2395 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:24:22.375170  2402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:22.377461  2395 solver.cpp:398]     Test net output #0: accuracy = 0.0973
I0428 20:24:22.377496  2395 solver.cpp:398]     Test net output #1: loss = 2.31111 (* 1 = 2.31111 loss)
I0428 20:24:22.383816  2395 solver.cpp:219] Iteration 0 (0 iter/s, 0.0984893s/100 iters), loss = 2.308
I0428 20:24:22.383838  2395 solver.cpp:238]     Train net output #0: loss = 2.308 (* 1 = 2.308 loss)
I0428 20:24:22.383849  2395 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:24:22.612359  2395 solver.cpp:219] Iteration 100 (437.632 iter/s, 0.228503s/100 iters), loss = 1.09039
I0428 20:24:22.612388  2395 solver.cpp:238]     Train net output #0: loss = 1.09039 (* 1 = 1.09039 loss)
I0428 20:24:22.612396  2395 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:24:22.829283  2395 solver.cpp:219] Iteration 200 (461.097 iter/s, 0.216874s/100 iters), loss = 1.02878
I0428 20:24:22.829329  2395 solver.cpp:238]     Train net output #0: loss = 1.02878 (* 1 = 1.02878 loss)
I0428 20:24:22.829340  2395 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:24:23.059582  2395 solver.cpp:219] Iteration 300 (434.329 iter/s, 0.23024s/100 iters), loss = 0.527262
I0428 20:24:23.059612  2395 solver.cpp:238]     Train net output #0: loss = 0.527262 (* 1 = 0.527262 loss)
I0428 20:24:23.059620  2395 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:24:23.294903  2395 solver.cpp:219] Iteration 400 (425.038 iter/s, 0.235273s/100 iters), loss = 0.981028
I0428 20:24:23.294939  2395 solver.cpp:238]     Train net output #0: loss = 0.981028 (* 1 = 0.981028 loss)
I0428 20:24:23.294947  2395 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:24:23.522020  2395 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:24:23.614926  2402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:23.616547  2395 solver.cpp:398]     Test net output #0: accuracy = 0.6751
I0428 20:24:23.616575  2395 solver.cpp:398]     Test net output #1: loss = 0.814774 (* 1 = 0.814774 loss)
I0428 20:24:23.618837  2395 solver.cpp:219] Iteration 500 (308.757 iter/s, 0.323879s/100 iters), loss = 1.02406
I0428 20:24:23.618865  2395 solver.cpp:238]     Train net output #0: loss = 1.02406 (* 1 = 1.02406 loss)
I0428 20:24:23.618891  2395 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:24:23.845299  2395 solver.cpp:219] Iteration 600 (441.67 iter/s, 0.226414s/100 iters), loss = 0.6944
I0428 20:24:23.845333  2395 solver.cpp:238]     Train net output #0: loss = 0.6944 (* 1 = 0.6944 loss)
I0428 20:24:23.845342  2395 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:24:24.075839  2395 solver.cpp:219] Iteration 700 (433.858 iter/s, 0.23049s/100 iters), loss = 0.831297
I0428 20:24:24.075875  2395 solver.cpp:238]     Train net output #0: loss = 0.831297 (* 1 = 0.831297 loss)
I0428 20:24:24.075883  2395 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:24:24.307082  2395 solver.cpp:219] Iteration 800 (432.547 iter/s, 0.231189s/100 iters), loss = 0.753941
I0428 20:24:24.307126  2395 solver.cpp:238]     Train net output #0: loss = 0.753941 (* 1 = 0.753941 loss)
I0428 20:24:24.307137  2395 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:24:24.543700  2395 solver.cpp:219] Iteration 900 (422.731 iter/s, 0.236557s/100 iters), loss = 0.666237
I0428 20:24:24.543740  2395 solver.cpp:238]     Train net output #0: loss = 0.666237 (* 1 = 0.666237 loss)
I0428 20:24:24.543746  2395 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:24:24.615947  2401 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:24.775346  2395 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:24:24.781217  2395 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:24:24.783712  2395 solver.cpp:311] Iteration 1000, loss = 0.734539
I0428 20:24:24.783735  2395 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:24:24.875344  2402 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:24:24.877910  2395 solver.cpp:398]     Test net output #0: accuracy = 0.6859
I0428 20:24:24.877938  2395 solver.cpp:398]     Test net output #1: loss = 0.762206 (* 1 = 0.762206 loss)
I0428 20:24:24.877944  2395 solver.cpp:316] Optimization Done.
I0428 20:24:24.877948  2395 caffe.cpp:259] Optimization Done.
