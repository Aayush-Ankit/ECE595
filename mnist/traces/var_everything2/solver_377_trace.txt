I0428 19:41:51.973101 24931 caffe.cpp:218] Using GPUs 0
I0428 19:41:52.011049 24931 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:41:52.500020 24931 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test377.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:41:52.500154 24931 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test377.prototxt
I0428 19:41:52.500499 24931 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:41:52.500519 24931 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:41:52.500620 24931 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:52.500708 24931 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:52.500838 24931 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:41:52.500881 24931 net.cpp:86] Creating Layer mnist
I0428 19:41:52.500893 24931 net.cpp:382] mnist -> data
I0428 19:41:52.500918 24931 net.cpp:382] mnist -> label
I0428 19:41:52.502079 24931 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:41:52.504242 24931 net.cpp:124] Setting up mnist
I0428 19:41:52.504276 24931 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:41:52.504283 24931 net.cpp:131] Top shape: 64 (64)
I0428 19:41:52.504288 24931 net.cpp:139] Memory required for data: 200960
I0428 19:41:52.504297 24931 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:52.504317 24931 net.cpp:86] Creating Layer conv0
I0428 19:41:52.504335 24931 net.cpp:408] conv0 <- data
I0428 19:41:52.504350 24931 net.cpp:382] conv0 -> conv0
I0428 19:41:52.732352 24931 net.cpp:124] Setting up conv0
I0428 19:41:52.732383 24931 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:52.732388 24931 net.cpp:139] Memory required for data: 495872
I0428 19:41:52.732425 24931 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:52.732471 24931 net.cpp:86] Creating Layer pool0
I0428 19:41:52.732486 24931 net.cpp:408] pool0 <- conv0
I0428 19:41:52.732496 24931 net.cpp:382] pool0 -> pool0
I0428 19:41:52.732549 24931 net.cpp:124] Setting up pool0
I0428 19:41:52.732558 24931 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:52.732563 24931 net.cpp:139] Memory required for data: 569600
I0428 19:41:52.732568 24931 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:52.732583 24931 net.cpp:86] Creating Layer conv1
I0428 19:41:52.732590 24931 net.cpp:408] conv1 <- pool0
I0428 19:41:52.732599 24931 net.cpp:382] conv1 -> conv1
I0428 19:41:52.734477 24931 net.cpp:124] Setting up conv1
I0428 19:41:52.734493 24931 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:52.734499 24931 net.cpp:139] Memory required for data: 733440
I0428 19:41:52.734513 24931 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:52.734526 24931 net.cpp:86] Creating Layer pool1
I0428 19:41:52.734532 24931 net.cpp:408] pool1 <- conv1
I0428 19:41:52.734541 24931 net.cpp:382] pool1 -> pool1
I0428 19:41:52.734586 24931 net.cpp:124] Setting up pool1
I0428 19:41:52.734596 24931 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:52.734601 24931 net.cpp:139] Memory required for data: 774400
I0428 19:41:52.734606 24931 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:52.734617 24931 net.cpp:86] Creating Layer ip1
I0428 19:41:52.734623 24931 net.cpp:408] ip1 <- pool1
I0428 19:41:52.734632 24931 net.cpp:382] ip1 -> ip1
I0428 19:41:52.735646 24931 net.cpp:124] Setting up ip1
I0428 19:41:52.735659 24931 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:52.735664 24931 net.cpp:139] Memory required for data: 780800
I0428 19:41:52.735678 24931 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:52.735688 24931 net.cpp:86] Creating Layer relu1
I0428 19:41:52.735694 24931 net.cpp:408] relu1 <- ip1
I0428 19:41:52.735702 24931 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:52.735890 24931 net.cpp:124] Setting up relu1
I0428 19:41:52.735915 24931 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:52.735920 24931 net.cpp:139] Memory required for data: 787200
I0428 19:41:52.735924 24931 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:52.735934 24931 net.cpp:86] Creating Layer ip2
I0428 19:41:52.735939 24931 net.cpp:408] ip2 <- ip1
I0428 19:41:52.735962 24931 net.cpp:382] ip2 -> ip2
I0428 19:41:52.736060 24931 net.cpp:124] Setting up ip2
I0428 19:41:52.736068 24931 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:52.736073 24931 net.cpp:139] Memory required for data: 793600
I0428 19:41:52.736081 24931 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:52.736090 24931 net.cpp:86] Creating Layer relu2
I0428 19:41:52.736096 24931 net.cpp:408] relu2 <- ip2
I0428 19:41:52.736104 24931 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:52.736907 24931 net.cpp:124] Setting up relu2
I0428 19:41:52.736934 24931 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:41:52.736955 24931 net.cpp:139] Memory required for data: 800000
I0428 19:41:52.736961 24931 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:52.736971 24931 net.cpp:86] Creating Layer ip3
I0428 19:41:52.736977 24931 net.cpp:408] ip3 <- ip2
I0428 19:41:52.736986 24931 net.cpp:382] ip3 -> ip3
I0428 19:41:52.737105 24931 net.cpp:124] Setting up ip3
I0428 19:41:52.737115 24931 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:52.737123 24931 net.cpp:139] Memory required for data: 802560
I0428 19:41:52.737150 24931 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:52.737159 24931 net.cpp:86] Creating Layer relu3
I0428 19:41:52.737165 24931 net.cpp:408] relu3 <- ip3
I0428 19:41:52.737172 24931 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:52.737402 24931 net.cpp:124] Setting up relu3
I0428 19:41:52.737412 24931 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:52.737418 24931 net.cpp:139] Memory required for data: 805120
I0428 19:41:52.737423 24931 layer_factory.hpp:77] Creating layer loss
I0428 19:41:52.737435 24931 net.cpp:86] Creating Layer loss
I0428 19:41:52.737443 24931 net.cpp:408] loss <- ip3
I0428 19:41:52.737449 24931 net.cpp:408] loss <- label
I0428 19:41:52.737458 24931 net.cpp:382] loss -> loss
I0428 19:41:52.737481 24931 layer_factory.hpp:77] Creating layer loss
I0428 19:41:52.737767 24931 net.cpp:124] Setting up loss
I0428 19:41:52.737778 24931 net.cpp:131] Top shape: (1)
I0428 19:41:52.737783 24931 net.cpp:134]     with loss weight 1
I0428 19:41:52.737803 24931 net.cpp:139] Memory required for data: 805124
I0428 19:41:52.737809 24931 net.cpp:200] loss needs backward computation.
I0428 19:41:52.737815 24931 net.cpp:200] relu3 needs backward computation.
I0428 19:41:52.737820 24931 net.cpp:200] ip3 needs backward computation.
I0428 19:41:52.737825 24931 net.cpp:200] relu2 needs backward computation.
I0428 19:41:52.737830 24931 net.cpp:200] ip2 needs backward computation.
I0428 19:41:52.737834 24931 net.cpp:200] relu1 needs backward computation.
I0428 19:41:52.737839 24931 net.cpp:200] ip1 needs backward computation.
I0428 19:41:52.737844 24931 net.cpp:200] pool1 needs backward computation.
I0428 19:41:52.737849 24931 net.cpp:200] conv1 needs backward computation.
I0428 19:41:52.737854 24931 net.cpp:200] pool0 needs backward computation.
I0428 19:41:52.737859 24931 net.cpp:200] conv0 needs backward computation.
I0428 19:41:52.737865 24931 net.cpp:202] mnist does not need backward computation.
I0428 19:41:52.737870 24931 net.cpp:244] This network produces output loss
I0428 19:41:52.737886 24931 net.cpp:257] Network initialization done.
I0428 19:41:52.738221 24931 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test377.prototxt
I0428 19:41:52.738252 24931 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:52.738343 24931 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:41:52.738469 24931 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:52.738528 24931 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:52.738545 24931 net.cpp:86] Creating Layer mnist
I0428 19:41:52.738554 24931 net.cpp:382] mnist -> data
I0428 19:41:52.738564 24931 net.cpp:382] mnist -> label
I0428 19:41:52.738678 24931 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:52.740736 24931 net.cpp:124] Setting up mnist
I0428 19:41:52.740751 24931 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:52.740758 24931 net.cpp:131] Top shape: 100 (100)
I0428 19:41:52.740763 24931 net.cpp:139] Memory required for data: 314000
I0428 19:41:52.740768 24931 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:52.740777 24931 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:52.740783 24931 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:52.740790 24931 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:52.740800 24931 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:52.740970 24931 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:52.740980 24931 net.cpp:131] Top shape: 100 (100)
I0428 19:41:52.740988 24931 net.cpp:131] Top shape: 100 (100)
I0428 19:41:52.740993 24931 net.cpp:139] Memory required for data: 314800
I0428 19:41:52.740998 24931 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:52.741014 24931 net.cpp:86] Creating Layer conv0
I0428 19:41:52.741020 24931 net.cpp:408] conv0 <- data
I0428 19:41:52.741031 24931 net.cpp:382] conv0 -> conv0
I0428 19:41:52.742609 24931 net.cpp:124] Setting up conv0
I0428 19:41:52.742624 24931 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:52.742630 24931 net.cpp:139] Memory required for data: 775600
I0428 19:41:52.742642 24931 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:52.742655 24931 net.cpp:86] Creating Layer pool0
I0428 19:41:52.742661 24931 net.cpp:408] pool0 <- conv0
I0428 19:41:52.742671 24931 net.cpp:382] pool0 -> pool0
I0428 19:41:52.742727 24931 net.cpp:124] Setting up pool0
I0428 19:41:52.742734 24931 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:52.742738 24931 net.cpp:139] Memory required for data: 890800
I0428 19:41:52.742743 24931 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:52.742756 24931 net.cpp:86] Creating Layer conv1
I0428 19:41:52.742763 24931 net.cpp:408] conv1 <- pool0
I0428 19:41:52.742772 24931 net.cpp:382] conv1 -> conv1
I0428 19:41:52.744493 24931 net.cpp:124] Setting up conv1
I0428 19:41:52.744509 24931 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:52.744529 24931 net.cpp:139] Memory required for data: 1146800
I0428 19:41:52.744556 24931 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:52.744565 24931 net.cpp:86] Creating Layer pool1
I0428 19:41:52.744571 24931 net.cpp:408] pool1 <- conv1
I0428 19:41:52.744583 24931 net.cpp:382] pool1 -> pool1
I0428 19:41:52.744640 24931 net.cpp:124] Setting up pool1
I0428 19:41:52.744648 24931 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:52.744652 24931 net.cpp:139] Memory required for data: 1210800
I0428 19:41:52.744658 24931 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:52.744668 24931 net.cpp:86] Creating Layer ip1
I0428 19:41:52.744674 24931 net.cpp:408] ip1 <- pool1
I0428 19:41:52.744683 24931 net.cpp:382] ip1 -> ip1
I0428 19:41:52.744804 24931 net.cpp:124] Setting up ip1
I0428 19:41:52.744820 24931 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:52.744835 24931 net.cpp:139] Memory required for data: 1220800
I0428 19:41:52.744848 24931 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:52.744873 24931 net.cpp:86] Creating Layer relu1
I0428 19:41:52.744879 24931 net.cpp:408] relu1 <- ip1
I0428 19:41:52.744886 24931 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:52.745080 24931 net.cpp:124] Setting up relu1
I0428 19:41:52.745091 24931 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:52.745100 24931 net.cpp:139] Memory required for data: 1230800
I0428 19:41:52.745106 24931 layer_factory.hpp:77] Creating layer ip2
I0428 19:41:52.745131 24931 net.cpp:86] Creating Layer ip2
I0428 19:41:52.745138 24931 net.cpp:408] ip2 <- ip1
I0428 19:41:52.745149 24931 net.cpp:382] ip2 -> ip2
I0428 19:41:52.745291 24931 net.cpp:124] Setting up ip2
I0428 19:41:52.745302 24931 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:52.745307 24931 net.cpp:139] Memory required for data: 1240800
I0428 19:41:52.745332 24931 layer_factory.hpp:77] Creating layer relu2
I0428 19:41:52.745340 24931 net.cpp:86] Creating Layer relu2
I0428 19:41:52.745345 24931 net.cpp:408] relu2 <- ip2
I0428 19:41:52.745360 24931 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:41:52.745580 24931 net.cpp:124] Setting up relu2
I0428 19:41:52.745590 24931 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:41:52.745595 24931 net.cpp:139] Memory required for data: 1250800
I0428 19:41:52.745600 24931 layer_factory.hpp:77] Creating layer ip3
I0428 19:41:52.745611 24931 net.cpp:86] Creating Layer ip3
I0428 19:41:52.745617 24931 net.cpp:408] ip3 <- ip2
I0428 19:41:52.745640 24931 net.cpp:382] ip3 -> ip3
I0428 19:41:52.745759 24931 net.cpp:124] Setting up ip3
I0428 19:41:52.745767 24931 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:52.745772 24931 net.cpp:139] Memory required for data: 1254800
I0428 19:41:52.745784 24931 layer_factory.hpp:77] Creating layer relu3
I0428 19:41:52.745797 24931 net.cpp:86] Creating Layer relu3
I0428 19:41:52.745805 24931 net.cpp:408] relu3 <- ip3
I0428 19:41:52.745812 24931 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:41:52.746661 24931 net.cpp:124] Setting up relu3
I0428 19:41:52.746675 24931 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:52.746681 24931 net.cpp:139] Memory required for data: 1258800
I0428 19:41:52.746686 24931 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:41:52.746695 24931 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:41:52.746700 24931 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:41:52.746707 24931 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:41:52.746716 24931 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:41:52.746809 24931 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:41:52.746817 24931 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:52.746824 24931 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:52.746829 24931 net.cpp:139] Memory required for data: 1266800
I0428 19:41:52.746834 24931 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:52.746841 24931 net.cpp:86] Creating Layer accuracy
I0428 19:41:52.746847 24931 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:41:52.746855 24931 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:52.746863 24931 net.cpp:382] accuracy -> accuracy
I0428 19:41:52.746875 24931 net.cpp:124] Setting up accuracy
I0428 19:41:52.746882 24931 net.cpp:131] Top shape: (1)
I0428 19:41:52.746887 24931 net.cpp:139] Memory required for data: 1266804
I0428 19:41:52.746892 24931 layer_factory.hpp:77] Creating layer loss
I0428 19:41:52.746901 24931 net.cpp:86] Creating Layer loss
I0428 19:41:52.746912 24931 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:41:52.746919 24931 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:52.746928 24931 net.cpp:382] loss -> loss
I0428 19:41:52.746939 24931 layer_factory.hpp:77] Creating layer loss
I0428 19:41:52.747200 24931 net.cpp:124] Setting up loss
I0428 19:41:52.747212 24931 net.cpp:131] Top shape: (1)
I0428 19:41:52.747217 24931 net.cpp:134]     with loss weight 1
I0428 19:41:52.747226 24931 net.cpp:139] Memory required for data: 1266808
I0428 19:41:52.747242 24931 net.cpp:200] loss needs backward computation.
I0428 19:41:52.747249 24931 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:52.747256 24931 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:41:52.747262 24931 net.cpp:200] relu3 needs backward computation.
I0428 19:41:52.747265 24931 net.cpp:200] ip3 needs backward computation.
I0428 19:41:52.747272 24931 net.cpp:200] relu2 needs backward computation.
I0428 19:41:52.747277 24931 net.cpp:200] ip2 needs backward computation.
I0428 19:41:52.747282 24931 net.cpp:200] relu1 needs backward computation.
I0428 19:41:52.747285 24931 net.cpp:200] ip1 needs backward computation.
I0428 19:41:52.747290 24931 net.cpp:200] pool1 needs backward computation.
I0428 19:41:52.747295 24931 net.cpp:200] conv1 needs backward computation.
I0428 19:41:52.747300 24931 net.cpp:200] pool0 needs backward computation.
I0428 19:41:52.747305 24931 net.cpp:200] conv0 needs backward computation.
I0428 19:41:52.747311 24931 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:52.747318 24931 net.cpp:202] mnist does not need backward computation.
I0428 19:41:52.747323 24931 net.cpp:244] This network produces output accuracy
I0428 19:41:52.747328 24931 net.cpp:244] This network produces output loss
I0428 19:41:52.747361 24931 net.cpp:257] Network initialization done.
I0428 19:41:52.747406 24931 solver.cpp:56] Solver scaffolding done.
I0428 19:41:52.747807 24931 caffe.cpp:248] Starting Optimization
I0428 19:41:52.747813 24931 solver.cpp:273] Solving LeNet
I0428 19:41:52.747818 24931 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:52.748595 24931 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:52.751184 24931 blocking_queue.cpp:49] Waiting for data
I0428 19:41:52.818588 24938 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:52.819038 24931 solver.cpp:398]     Test net output #0: accuracy = 0.1043
I0428 19:41:52.819058 24931 solver.cpp:398]     Test net output #1: loss = 2.3188 (* 1 = 2.3188 loss)
I0428 19:41:52.820830 24931 solver.cpp:219] Iteration 0 (-6.13345e-31 iter/s, 0.0729672s/100 iters), loss = 2.30896
I0428 19:41:52.820878 24931 solver.cpp:238]     Train net output #0: loss = 2.30896 (* 1 = 2.30896 loss)
I0428 19:41:52.820909 24931 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:52.896778 24931 solver.cpp:219] Iteration 100 (1317.62 iter/s, 0.0758944s/100 iters), loss = 0.58075
I0428 19:41:52.896806 24931 solver.cpp:238]     Train net output #0: loss = 0.58075 (* 1 = 0.58075 loss)
I0428 19:41:52.896853 24931 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:52.971947 24931 solver.cpp:219] Iteration 200 (1330.97 iter/s, 0.0751329s/100 iters), loss = 0.20663
I0428 19:41:52.971976 24931 solver.cpp:238]     Train net output #0: loss = 0.20663 (* 1 = 0.20663 loss)
I0428 19:41:52.972000 24931 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:53.043190 24931 solver.cpp:219] Iteration 300 (1404.36 iter/s, 0.0712069s/100 iters), loss = 0.293195
I0428 19:41:53.043220 24931 solver.cpp:238]     Train net output #0: loss = 0.293195 (* 1 = 0.293195 loss)
I0428 19:41:53.043244 24931 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:53.115026 24931 solver.cpp:219] Iteration 400 (1392.78 iter/s, 0.0717988s/100 iters), loss = 0.150898
I0428 19:41:53.115054 24931 solver.cpp:238]     Train net output #0: loss = 0.150898 (* 1 = 0.150898 loss)
I0428 19:41:53.115079 24931 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:53.185708 24931 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:53.261246 24938 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:53.261715 24931 solver.cpp:398]     Test net output #0: accuracy = 0.9389
I0428 19:41:53.261736 24931 solver.cpp:398]     Test net output #1: loss = 0.188649 (* 1 = 0.188649 loss)
I0428 19:41:53.262629 24931 solver.cpp:219] Iteration 500 (677.731 iter/s, 0.147551s/100 iters), loss = 0.211304
I0428 19:41:53.262677 24931 solver.cpp:238]     Train net output #0: loss = 0.211304 (* 1 = 0.211304 loss)
I0428 19:41:53.262717 24931 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:53.340255 24931 solver.cpp:219] Iteration 600 (1289.21 iter/s, 0.0775671s/100 iters), loss = 0.143855
I0428 19:41:53.340283 24931 solver.cpp:238]     Train net output #0: loss = 0.143855 (* 1 = 0.143855 loss)
I0428 19:41:53.340304 24931 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:53.419457 24931 solver.cpp:219] Iteration 700 (1263.21 iter/s, 0.0791634s/100 iters), loss = 0.252495
I0428 19:41:53.419488 24931 solver.cpp:238]     Train net output #0: loss = 0.252495 (* 1 = 0.252495 loss)
I0428 19:41:53.419497 24931 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:53.497392 24931 solver.cpp:219] Iteration 800 (1283.92 iter/s, 0.0778865s/100 iters), loss = 0.296018
I0428 19:41:53.497422 24931 solver.cpp:238]     Train net output #0: loss = 0.296018 (* 1 = 0.296018 loss)
I0428 19:41:53.497431 24931 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:53.584491 24931 solver.cpp:219] Iteration 900 (1148.79 iter/s, 0.0870482s/100 iters), loss = 0.26347
I0428 19:41:53.584540 24931 solver.cpp:238]     Train net output #0: loss = 0.26347 (* 1 = 0.26347 loss)
I0428 19:41:53.584553 24931 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:53.617789 24937 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:53.674424 24931 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:53.675246 24931 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:53.675750 24931 solver.cpp:311] Iteration 1000, loss = 0.170605
I0428 19:41:53.675770 24931 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:53.728387 24938 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:53.728842 24931 solver.cpp:398]     Test net output #0: accuracy = 0.9597
I0428 19:41:53.728866 24931 solver.cpp:398]     Test net output #1: loss = 0.119823 (* 1 = 0.119823 loss)
I0428 19:41:53.728874 24931 solver.cpp:316] Optimization Done.
I0428 19:41:53.728878 24931 caffe.cpp:259] Optimization Done.
