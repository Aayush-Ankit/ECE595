I0428 20:02:41.595973 29997 caffe.cpp:218] Using GPUs 0
I0428 20:02:41.633234 29997 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:42.135670 29997 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test935.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:42.135797 29997 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test935.prototxt
I0428 20:02:42.136190 29997 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:42.136209 29997 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:42.136303 29997 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:42.136375 29997 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:42.136473 29997 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:42.136495 29997 net.cpp:86] Creating Layer mnist
I0428 20:02:42.136502 29997 net.cpp:382] mnist -> data
I0428 20:02:42.136524 29997 net.cpp:382] mnist -> label
I0428 20:02:42.137609 29997 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:42.140045 29997 net.cpp:124] Setting up mnist
I0428 20:02:42.140063 29997 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:42.140069 29997 net.cpp:131] Top shape: 64 (64)
I0428 20:02:42.140074 29997 net.cpp:139] Memory required for data: 200960
I0428 20:02:42.140080 29997 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:42.140095 29997 net.cpp:86] Creating Layer conv0
I0428 20:02:42.140127 29997 net.cpp:408] conv0 <- data
I0428 20:02:42.140138 29997 net.cpp:382] conv0 -> conv0
I0428 20:02:42.392612 29997 net.cpp:124] Setting up conv0
I0428 20:02:42.392640 29997 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:42.392644 29997 net.cpp:139] Memory required for data: 1675520
I0428 20:02:42.392689 29997 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:42.392704 29997 net.cpp:86] Creating Layer pool0
I0428 20:02:42.392709 29997 net.cpp:408] pool0 <- conv0
I0428 20:02:42.392714 29997 net.cpp:382] pool0 -> pool0
I0428 20:02:42.392760 29997 net.cpp:124] Setting up pool0
I0428 20:02:42.392767 29997 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:42.392771 29997 net.cpp:139] Memory required for data: 2044160
I0428 20:02:42.392773 29997 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:42.392783 29997 net.cpp:86] Creating Layer conv1
I0428 20:02:42.392788 29997 net.cpp:408] conv1 <- pool0
I0428 20:02:42.392793 29997 net.cpp:382] conv1 -> conv1
I0428 20:02:42.395767 29997 net.cpp:124] Setting up conv1
I0428 20:02:42.395781 29997 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:02:42.395786 29997 net.cpp:139] Memory required for data: 2863360
I0428 20:02:42.395809 29997 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:42.395818 29997 net.cpp:86] Creating Layer pool1
I0428 20:02:42.395824 29997 net.cpp:408] pool1 <- conv1
I0428 20:02:42.395829 29997 net.cpp:382] pool1 -> pool1
I0428 20:02:42.395865 29997 net.cpp:124] Setting up pool1
I0428 20:02:42.395871 29997 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:02:42.395874 29997 net.cpp:139] Memory required for data: 3068160
I0428 20:02:42.395877 29997 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:42.395884 29997 net.cpp:86] Creating Layer ip1
I0428 20:02:42.395889 29997 net.cpp:408] ip1 <- pool1
I0428 20:02:42.395892 29997 net.cpp:382] ip1 -> ip1
I0428 20:02:42.396222 29997 net.cpp:124] Setting up ip1
I0428 20:02:42.396230 29997 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:42.396234 29997 net.cpp:139] Memory required for data: 3080960
I0428 20:02:42.396240 29997 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:42.396245 29997 net.cpp:86] Creating Layer relu1
I0428 20:02:42.396250 29997 net.cpp:408] relu1 <- ip1
I0428 20:02:42.396255 29997 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:42.396425 29997 net.cpp:124] Setting up relu1
I0428 20:02:42.396435 29997 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:42.396437 29997 net.cpp:139] Memory required for data: 3093760
I0428 20:02:42.396440 29997 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:42.396445 29997 net.cpp:86] Creating Layer ip2
I0428 20:02:42.396448 29997 net.cpp:408] ip2 <- ip1
I0428 20:02:42.396453 29997 net.cpp:382] ip2 -> ip2
I0428 20:02:42.397522 29997 net.cpp:124] Setting up ip2
I0428 20:02:42.397536 29997 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:42.397539 29997 net.cpp:139] Memory required for data: 3106560
I0428 20:02:42.397545 29997 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:42.397553 29997 net.cpp:86] Creating Layer relu2
I0428 20:02:42.397558 29997 net.cpp:408] relu2 <- ip2
I0428 20:02:42.397562 29997 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:42.398351 29997 net.cpp:124] Setting up relu2
I0428 20:02:42.398365 29997 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:42.398368 29997 net.cpp:139] Memory required for data: 3119360
I0428 20:02:42.398372 29997 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:42.398380 29997 net.cpp:86] Creating Layer ip3
I0428 20:02:42.398385 29997 net.cpp:408] ip3 <- ip2
I0428 20:02:42.398391 29997 net.cpp:382] ip3 -> ip3
I0428 20:02:42.398515 29997 net.cpp:124] Setting up ip3
I0428 20:02:42.398522 29997 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:42.398525 29997 net.cpp:139] Memory required for data: 3121920
I0428 20:02:42.398535 29997 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:42.398540 29997 net.cpp:86] Creating Layer relu3
I0428 20:02:42.398543 29997 net.cpp:408] relu3 <- ip3
I0428 20:02:42.398547 29997 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:42.398723 29997 net.cpp:124] Setting up relu3
I0428 20:02:42.398732 29997 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:42.398736 29997 net.cpp:139] Memory required for data: 3124480
I0428 20:02:42.398738 29997 layer_factory.hpp:77] Creating layer loss
I0428 20:02:42.398744 29997 net.cpp:86] Creating Layer loss
I0428 20:02:42.398747 29997 net.cpp:408] loss <- ip3
I0428 20:02:42.398751 29997 net.cpp:408] loss <- label
I0428 20:02:42.398756 29997 net.cpp:382] loss -> loss
I0428 20:02:42.398775 29997 layer_factory.hpp:77] Creating layer loss
I0428 20:02:42.399001 29997 net.cpp:124] Setting up loss
I0428 20:02:42.399010 29997 net.cpp:131] Top shape: (1)
I0428 20:02:42.399013 29997 net.cpp:134]     with loss weight 1
I0428 20:02:42.399060 29997 net.cpp:139] Memory required for data: 3124484
I0428 20:02:42.399065 29997 net.cpp:200] loss needs backward computation.
I0428 20:02:42.399068 29997 net.cpp:200] relu3 needs backward computation.
I0428 20:02:42.399071 29997 net.cpp:200] ip3 needs backward computation.
I0428 20:02:42.399075 29997 net.cpp:200] relu2 needs backward computation.
I0428 20:02:42.399077 29997 net.cpp:200] ip2 needs backward computation.
I0428 20:02:42.399096 29997 net.cpp:200] relu1 needs backward computation.
I0428 20:02:42.399099 29997 net.cpp:200] ip1 needs backward computation.
I0428 20:02:42.399102 29997 net.cpp:200] pool1 needs backward computation.
I0428 20:02:42.399106 29997 net.cpp:200] conv1 needs backward computation.
I0428 20:02:42.399109 29997 net.cpp:200] pool0 needs backward computation.
I0428 20:02:42.399112 29997 net.cpp:200] conv0 needs backward computation.
I0428 20:02:42.399116 29997 net.cpp:202] mnist does not need backward computation.
I0428 20:02:42.399119 29997 net.cpp:244] This network produces output loss
I0428 20:02:42.399129 29997 net.cpp:257] Network initialization done.
I0428 20:02:42.399502 29997 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test935.prototxt
I0428 20:02:42.399544 29997 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:42.399633 29997 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:42.399708 29997 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:42.399751 29997 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:42.399765 29997 net.cpp:86] Creating Layer mnist
I0428 20:02:42.399770 29997 net.cpp:382] mnist -> data
I0428 20:02:42.399776 29997 net.cpp:382] mnist -> label
I0428 20:02:42.399858 29997 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:42.401902 29997 net.cpp:124] Setting up mnist
I0428 20:02:42.401932 29997 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:42.401938 29997 net.cpp:131] Top shape: 100 (100)
I0428 20:02:42.401942 29997 net.cpp:139] Memory required for data: 314000
I0428 20:02:42.401945 29997 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:42.401952 29997 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:42.401957 29997 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:42.401962 29997 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:42.401968 29997 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:42.402016 29997 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:42.402024 29997 net.cpp:131] Top shape: 100 (100)
I0428 20:02:42.402027 29997 net.cpp:131] Top shape: 100 (100)
I0428 20:02:42.402030 29997 net.cpp:139] Memory required for data: 314800
I0428 20:02:42.402034 29997 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:42.402042 29997 net.cpp:86] Creating Layer conv0
I0428 20:02:42.402047 29997 net.cpp:408] conv0 <- data
I0428 20:02:42.402055 29997 net.cpp:382] conv0 -> conv0
I0428 20:02:42.403837 29997 net.cpp:124] Setting up conv0
I0428 20:02:42.403851 29997 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:42.403856 29997 net.cpp:139] Memory required for data: 2618800
I0428 20:02:42.403865 29997 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:42.403874 29997 net.cpp:86] Creating Layer pool0
I0428 20:02:42.403879 29997 net.cpp:408] pool0 <- conv0
I0428 20:02:42.403883 29997 net.cpp:382] pool0 -> pool0
I0428 20:02:42.403921 29997 net.cpp:124] Setting up pool0
I0428 20:02:42.403928 29997 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:42.403930 29997 net.cpp:139] Memory required for data: 3194800
I0428 20:02:42.403934 29997 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:42.403942 29997 net.cpp:86] Creating Layer conv1
I0428 20:02:42.403947 29997 net.cpp:408] conv1 <- pool0
I0428 20:02:42.403954 29997 net.cpp:382] conv1 -> conv1
I0428 20:02:42.405656 29997 net.cpp:124] Setting up conv1
I0428 20:02:42.405671 29997 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:02:42.405675 29997 net.cpp:139] Memory required for data: 4474800
I0428 20:02:42.405684 29997 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:42.405694 29997 net.cpp:86] Creating Layer pool1
I0428 20:02:42.405699 29997 net.cpp:408] pool1 <- conv1
I0428 20:02:42.405704 29997 net.cpp:382] pool1 -> pool1
I0428 20:02:42.405743 29997 net.cpp:124] Setting up pool1
I0428 20:02:42.405750 29997 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:02:42.405753 29997 net.cpp:139] Memory required for data: 4794800
I0428 20:02:42.405756 29997 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:42.405764 29997 net.cpp:86] Creating Layer ip1
I0428 20:02:42.405768 29997 net.cpp:408] ip1 <- pool1
I0428 20:02:42.405773 29997 net.cpp:382] ip1 -> ip1
I0428 20:02:42.406131 29997 net.cpp:124] Setting up ip1
I0428 20:02:42.406139 29997 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:42.406153 29997 net.cpp:139] Memory required for data: 4814800
I0428 20:02:42.406162 29997 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:42.406169 29997 net.cpp:86] Creating Layer relu1
I0428 20:02:42.406174 29997 net.cpp:408] relu1 <- ip1
I0428 20:02:42.406179 29997 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:42.406360 29997 net.cpp:124] Setting up relu1
I0428 20:02:42.406369 29997 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:42.406373 29997 net.cpp:139] Memory required for data: 4834800
I0428 20:02:42.406375 29997 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:42.406383 29997 net.cpp:86] Creating Layer ip2
I0428 20:02:42.406388 29997 net.cpp:408] ip2 <- ip1
I0428 20:02:42.406394 29997 net.cpp:382] ip2 -> ip2
I0428 20:02:42.406626 29997 net.cpp:124] Setting up ip2
I0428 20:02:42.406635 29997 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:42.406637 29997 net.cpp:139] Memory required for data: 4854800
I0428 20:02:42.406643 29997 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:42.406648 29997 net.cpp:86] Creating Layer relu2
I0428 20:02:42.406652 29997 net.cpp:408] relu2 <- ip2
I0428 20:02:42.406656 29997 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:42.406826 29997 net.cpp:124] Setting up relu2
I0428 20:02:42.406834 29997 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:42.406837 29997 net.cpp:139] Memory required for data: 4874800
I0428 20:02:42.406841 29997 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:42.406847 29997 net.cpp:86] Creating Layer ip3
I0428 20:02:42.406850 29997 net.cpp:408] ip3 <- ip2
I0428 20:02:42.406857 29997 net.cpp:382] ip3 -> ip3
I0428 20:02:42.406967 29997 net.cpp:124] Setting up ip3
I0428 20:02:42.406996 29997 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:42.406998 29997 net.cpp:139] Memory required for data: 4878800
I0428 20:02:42.407006 29997 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:42.407012 29997 net.cpp:86] Creating Layer relu3
I0428 20:02:42.407016 29997 net.cpp:408] relu3 <- ip3
I0428 20:02:42.407021 29997 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:42.407855 29997 net.cpp:124] Setting up relu3
I0428 20:02:42.407868 29997 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:42.407872 29997 net.cpp:139] Memory required for data: 4882800
I0428 20:02:42.407876 29997 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:02:42.407881 29997 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:02:42.407884 29997 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:02:42.407892 29997 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:02:42.407902 29997 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:02:42.407946 29997 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:02:42.407953 29997 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:42.407956 29997 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:42.407959 29997 net.cpp:139] Memory required for data: 4890800
I0428 20:02:42.407963 29997 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:42.407969 29997 net.cpp:86] Creating Layer accuracy
I0428 20:02:42.407973 29997 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:02:42.407976 29997 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:42.407982 29997 net.cpp:382] accuracy -> accuracy
I0428 20:02:42.407989 29997 net.cpp:124] Setting up accuracy
I0428 20:02:42.407994 29997 net.cpp:131] Top shape: (1)
I0428 20:02:42.407997 29997 net.cpp:139] Memory required for data: 4890804
I0428 20:02:42.408000 29997 layer_factory.hpp:77] Creating layer loss
I0428 20:02:42.408005 29997 net.cpp:86] Creating Layer loss
I0428 20:02:42.408008 29997 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:02:42.408012 29997 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:42.408016 29997 net.cpp:382] loss -> loss
I0428 20:02:42.408022 29997 layer_factory.hpp:77] Creating layer loss
I0428 20:02:42.408287 29997 net.cpp:124] Setting up loss
I0428 20:02:42.408296 29997 net.cpp:131] Top shape: (1)
I0428 20:02:42.408299 29997 net.cpp:134]     with loss weight 1
I0428 20:02:42.408316 29997 net.cpp:139] Memory required for data: 4890808
I0428 20:02:42.408319 29997 net.cpp:200] loss needs backward computation.
I0428 20:02:42.408324 29997 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:42.408329 29997 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:02:42.408331 29997 net.cpp:200] relu3 needs backward computation.
I0428 20:02:42.408334 29997 net.cpp:200] ip3 needs backward computation.
I0428 20:02:42.408337 29997 net.cpp:200] relu2 needs backward computation.
I0428 20:02:42.408347 29997 net.cpp:200] ip2 needs backward computation.
I0428 20:02:42.408350 29997 net.cpp:200] relu1 needs backward computation.
I0428 20:02:42.408354 29997 net.cpp:200] ip1 needs backward computation.
I0428 20:02:42.408357 29997 net.cpp:200] pool1 needs backward computation.
I0428 20:02:42.408360 29997 net.cpp:200] conv1 needs backward computation.
I0428 20:02:42.408363 29997 net.cpp:200] pool0 needs backward computation.
I0428 20:02:42.408367 29997 net.cpp:200] conv0 needs backward computation.
I0428 20:02:42.408371 29997 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:42.408375 29997 net.cpp:202] mnist does not need backward computation.
I0428 20:02:42.408382 29997 net.cpp:244] This network produces output accuracy
I0428 20:02:42.408386 29997 net.cpp:244] This network produces output loss
I0428 20:02:42.408398 29997 net.cpp:257] Network initialization done.
I0428 20:02:42.408442 29997 solver.cpp:56] Solver scaffolding done.
I0428 20:02:42.408797 29997 caffe.cpp:248] Starting Optimization
I0428 20:02:42.408803 29997 solver.cpp:273] Solving LeNet
I0428 20:02:42.408807 29997 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:42.409741 29997 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:42.413982 29997 blocking_queue.cpp:49] Waiting for data
I0428 20:02:42.486228 30004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:42.486773 29997 solver.cpp:398]     Test net output #0: accuracy = 0.1032
I0428 20:02:42.486807 29997 solver.cpp:398]     Test net output #1: loss = 2.31404 (* 1 = 2.31404 loss)
I0428 20:02:42.490108 29997 solver.cpp:219] Iteration 0 (-1.13056e-30 iter/s, 0.0812403s/100 iters), loss = 2.32209
I0428 20:02:42.490131 29997 solver.cpp:238]     Train net output #0: loss = 2.32209 (* 1 = 2.32209 loss)
I0428 20:02:42.490144 29997 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:42.601291 29997 solver.cpp:219] Iteration 100 (899.709 iter/s, 0.111147s/100 iters), loss = 1.09532
I0428 20:02:42.601335 29997 solver.cpp:238]     Train net output #0: loss = 1.09532 (* 1 = 1.09532 loss)
I0428 20:02:42.601356 29997 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:42.708781 29997 solver.cpp:219] Iteration 200 (930.645 iter/s, 0.107452s/100 iters), loss = 0.689359
I0428 20:02:42.708827 29997 solver.cpp:238]     Train net output #0: loss = 0.689359 (* 1 = 0.689359 loss)
I0428 20:02:42.708833 29997 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:42.817524 29997 solver.cpp:219] Iteration 300 (920.081 iter/s, 0.108686s/100 iters), loss = 1.01061
I0428 20:02:42.817549 29997 solver.cpp:238]     Train net output #0: loss = 1.01061 (* 1 = 1.01061 loss)
I0428 20:02:42.817572 29997 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:42.926715 29997 solver.cpp:219] Iteration 400 (916.134 iter/s, 0.109154s/100 iters), loss = 0.814096
I0428 20:02:42.926739 29997 solver.cpp:238]     Train net output #0: loss = 0.814096 (* 1 = 0.814096 loss)
I0428 20:02:42.926761 29997 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:43.033589 29997 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:43.086576 30004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:43.087101 29997 solver.cpp:398]     Test net output #0: accuracy = 0.6853
I0428 20:02:43.087119 29997 solver.cpp:398]     Test net output #1: loss = 0.781951 (* 1 = 0.781951 loss)
I0428 20:02:43.088203 29997 solver.cpp:219] Iteration 500 (619.383 iter/s, 0.161451s/100 iters), loss = 0.736192
I0428 20:02:43.088260 29997 solver.cpp:238]     Train net output #0: loss = 0.736192 (* 1 = 0.736192 loss)
I0428 20:02:43.088275 29997 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:43.201974 29997 solver.cpp:219] Iteration 600 (879.479 iter/s, 0.113704s/100 iters), loss = 0.569541
I0428 20:02:43.201999 29997 solver.cpp:238]     Train net output #0: loss = 0.569541 (* 1 = 0.569541 loss)
I0428 20:02:43.202023 29997 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:43.309566 29997 solver.cpp:219] Iteration 700 (929.758 iter/s, 0.107555s/100 iters), loss = 0.806989
I0428 20:02:43.309590 29997 solver.cpp:238]     Train net output #0: loss = 0.806989 (* 1 = 0.806989 loss)
I0428 20:02:43.309613 29997 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:43.415973 29997 solver.cpp:219] Iteration 800 (940.096 iter/s, 0.106372s/100 iters), loss = 0.658521
I0428 20:02:43.415997 29997 solver.cpp:238]     Train net output #0: loss = 0.658521 (* 1 = 0.658521 loss)
I0428 20:02:43.416021 29997 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:43.523771 29997 solver.cpp:219] Iteration 900 (927.965 iter/s, 0.107763s/100 iters), loss = 0.687059
I0428 20:02:43.523794 29997 solver.cpp:238]     Train net output #0: loss = 0.687059 (* 1 = 0.687059 loss)
I0428 20:02:43.523802 29997 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:43.559810 30003 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:43.630173 29997 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:43.631952 29997 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:43.632859 29997 solver.cpp:311] Iteration 1000, loss = 0.569592
I0428 20:02:43.632876 29997 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:43.709949 30004 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:43.710484 29997 solver.cpp:398]     Test net output #0: accuracy = 0.7854
I0428 20:02:43.710520 29997 solver.cpp:398]     Test net output #1: loss = 0.530405 (* 1 = 0.530405 loss)
I0428 20:02:43.710525 29997 solver.cpp:316] Optimization Done.
I0428 20:02:43.710530 29997 caffe.cpp:259] Optimization Done.
