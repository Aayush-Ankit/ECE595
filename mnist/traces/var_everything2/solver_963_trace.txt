I0428 20:04:00.404278 30304 caffe.cpp:218] Using GPUs 0
I0428 20:04:00.437270 30304 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:00.934155 30304 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test963.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:00.934283 30304 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test963.prototxt
I0428 20:04:00.934617 30304 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:00.934631 30304 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:00.934713 30304 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:00.934779 30304 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:00.934859 30304 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:00.934880 30304 net.cpp:86] Creating Layer mnist
I0428 20:04:00.934885 30304 net.cpp:382] mnist -> data
I0428 20:04:00.934904 30304 net.cpp:382] mnist -> label
I0428 20:04:00.935834 30304 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:00.937935 30304 net.cpp:124] Setting up mnist
I0428 20:04:00.937958 30304 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:00.937983 30304 net.cpp:131] Top shape: 64 (64)
I0428 20:04:00.937985 30304 net.cpp:139] Memory required for data: 200960
I0428 20:04:00.937991 30304 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:00.938005 30304 net.cpp:86] Creating Layer conv0
I0428 20:04:00.938024 30304 net.cpp:408] conv0 <- data
I0428 20:04:00.938033 30304 net.cpp:382] conv0 -> conv0
I0428 20:04:01.169193 30304 net.cpp:124] Setting up conv0
I0428 20:04:01.169236 30304 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:01.169240 30304 net.cpp:139] Memory required for data: 1675520
I0428 20:04:01.169255 30304 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:01.169267 30304 net.cpp:86] Creating Layer pool0
I0428 20:04:01.169271 30304 net.cpp:408] pool0 <- conv0
I0428 20:04:01.169276 30304 net.cpp:382] pool0 -> pool0
I0428 20:04:01.169337 30304 net.cpp:124] Setting up pool0
I0428 20:04:01.169344 30304 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:01.169348 30304 net.cpp:139] Memory required for data: 2044160
I0428 20:04:01.169350 30304 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:01.169361 30304 net.cpp:86] Creating Layer conv1
I0428 20:04:01.169368 30304 net.cpp:408] conv1 <- pool0
I0428 20:04:01.169373 30304 net.cpp:382] conv1 -> conv1
I0428 20:04:01.171358 30304 net.cpp:124] Setting up conv1
I0428 20:04:01.171372 30304 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:01.171376 30304 net.cpp:139] Memory required for data: 3682560
I0428 20:04:01.171385 30304 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:01.171391 30304 net.cpp:86] Creating Layer pool1
I0428 20:04:01.171396 30304 net.cpp:408] pool1 <- conv1
I0428 20:04:01.171401 30304 net.cpp:382] pool1 -> pool1
I0428 20:04:01.171437 30304 net.cpp:124] Setting up pool1
I0428 20:04:01.171443 30304 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:01.171447 30304 net.cpp:139] Memory required for data: 4092160
I0428 20:04:01.171449 30304 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:01.171456 30304 net.cpp:86] Creating Layer ip1
I0428 20:04:01.171459 30304 net.cpp:408] ip1 <- pool1
I0428 20:04:01.171465 30304 net.cpp:382] ip1 -> ip1
I0428 20:04:01.171784 30304 net.cpp:124] Setting up ip1
I0428 20:04:01.171792 30304 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:01.171797 30304 net.cpp:139] Memory required for data: 4098560
I0428 20:04:01.171803 30304 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:01.171809 30304 net.cpp:86] Creating Layer relu1
I0428 20:04:01.171813 30304 net.cpp:408] relu1 <- ip1
I0428 20:04:01.171816 30304 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:01.171974 30304 net.cpp:124] Setting up relu1
I0428 20:04:01.171983 30304 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:01.171985 30304 net.cpp:139] Memory required for data: 4104960
I0428 20:04:01.171988 30304 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:01.171994 30304 net.cpp:86] Creating Layer ip2
I0428 20:04:01.171998 30304 net.cpp:408] ip2 <- ip1
I0428 20:04:01.172003 30304 net.cpp:382] ip2 -> ip2
I0428 20:04:01.173077 30304 net.cpp:124] Setting up ip2
I0428 20:04:01.173091 30304 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:01.173095 30304 net.cpp:139] Memory required for data: 4117760
I0428 20:04:01.173101 30304 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:01.173108 30304 net.cpp:86] Creating Layer relu2
I0428 20:04:01.173112 30304 net.cpp:408] relu2 <- ip2
I0428 20:04:01.173117 30304 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:01.173856 30304 net.cpp:124] Setting up relu2
I0428 20:04:01.173868 30304 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:01.173872 30304 net.cpp:139] Memory required for data: 4130560
I0428 20:04:01.173876 30304 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:01.173882 30304 net.cpp:86] Creating Layer ip3
I0428 20:04:01.173885 30304 net.cpp:408] ip3 <- ip2
I0428 20:04:01.173892 30304 net.cpp:382] ip3 -> ip3
I0428 20:04:01.173990 30304 net.cpp:124] Setting up ip3
I0428 20:04:01.173996 30304 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:01.174000 30304 net.cpp:139] Memory required for data: 4133120
I0428 20:04:01.174008 30304 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:01.174015 30304 net.cpp:86] Creating Layer relu3
I0428 20:04:01.174017 30304 net.cpp:408] relu3 <- ip3
I0428 20:04:01.174021 30304 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:01.174177 30304 net.cpp:124] Setting up relu3
I0428 20:04:01.174185 30304 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:01.174188 30304 net.cpp:139] Memory required for data: 4135680
I0428 20:04:01.174192 30304 layer_factory.hpp:77] Creating layer loss
I0428 20:04:01.174197 30304 net.cpp:86] Creating Layer loss
I0428 20:04:01.174201 30304 net.cpp:408] loss <- ip3
I0428 20:04:01.174204 30304 net.cpp:408] loss <- label
I0428 20:04:01.174211 30304 net.cpp:382] loss -> loss
I0428 20:04:01.174227 30304 layer_factory.hpp:77] Creating layer loss
I0428 20:04:01.174443 30304 net.cpp:124] Setting up loss
I0428 20:04:01.174451 30304 net.cpp:131] Top shape: (1)
I0428 20:04:01.174454 30304 net.cpp:134]     with loss weight 1
I0428 20:04:01.174468 30304 net.cpp:139] Memory required for data: 4135684
I0428 20:04:01.174473 30304 net.cpp:200] loss needs backward computation.
I0428 20:04:01.174476 30304 net.cpp:200] relu3 needs backward computation.
I0428 20:04:01.174479 30304 net.cpp:200] ip3 needs backward computation.
I0428 20:04:01.174482 30304 net.cpp:200] relu2 needs backward computation.
I0428 20:04:01.174485 30304 net.cpp:200] ip2 needs backward computation.
I0428 20:04:01.174487 30304 net.cpp:200] relu1 needs backward computation.
I0428 20:04:01.174490 30304 net.cpp:200] ip1 needs backward computation.
I0428 20:04:01.174494 30304 net.cpp:200] pool1 needs backward computation.
I0428 20:04:01.174497 30304 net.cpp:200] conv1 needs backward computation.
I0428 20:04:01.174500 30304 net.cpp:200] pool0 needs backward computation.
I0428 20:04:01.174504 30304 net.cpp:200] conv0 needs backward computation.
I0428 20:04:01.174506 30304 net.cpp:202] mnist does not need backward computation.
I0428 20:04:01.174510 30304 net.cpp:244] This network produces output loss
I0428 20:04:01.174520 30304 net.cpp:257] Network initialization done.
I0428 20:04:01.174873 30304 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test963.prototxt
I0428 20:04:01.174932 30304 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:01.175022 30304 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:01.175102 30304 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:01.175148 30304 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:01.175190 30304 net.cpp:86] Creating Layer mnist
I0428 20:04:01.175195 30304 net.cpp:382] mnist -> data
I0428 20:04:01.175204 30304 net.cpp:382] mnist -> label
I0428 20:04:01.175287 30304 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:01.177472 30304 net.cpp:124] Setting up mnist
I0428 20:04:01.177485 30304 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:01.177505 30304 net.cpp:131] Top shape: 100 (100)
I0428 20:04:01.177508 30304 net.cpp:139] Memory required for data: 314000
I0428 20:04:01.177523 30304 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:01.177533 30304 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:01.177537 30304 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:01.177542 30304 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:01.177548 30304 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:01.177623 30304 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:01.177630 30304 net.cpp:131] Top shape: 100 (100)
I0428 20:04:01.177634 30304 net.cpp:131] Top shape: 100 (100)
I0428 20:04:01.177636 30304 net.cpp:139] Memory required for data: 314800
I0428 20:04:01.177639 30304 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:01.177649 30304 net.cpp:86] Creating Layer conv0
I0428 20:04:01.177654 30304 net.cpp:408] conv0 <- data
I0428 20:04:01.177659 30304 net.cpp:382] conv0 -> conv0
I0428 20:04:01.179152 30304 net.cpp:124] Setting up conv0
I0428 20:04:01.179165 30304 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:01.179185 30304 net.cpp:139] Memory required for data: 2618800
I0428 20:04:01.179205 30304 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:01.179213 30304 net.cpp:86] Creating Layer pool0
I0428 20:04:01.179215 30304 net.cpp:408] pool0 <- conv0
I0428 20:04:01.179220 30304 net.cpp:382] pool0 -> pool0
I0428 20:04:01.179255 30304 net.cpp:124] Setting up pool0
I0428 20:04:01.179262 30304 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:01.179265 30304 net.cpp:139] Memory required for data: 3194800
I0428 20:04:01.179268 30304 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:01.179277 30304 net.cpp:86] Creating Layer conv1
I0428 20:04:01.179280 30304 net.cpp:408] conv1 <- pool0
I0428 20:04:01.179286 30304 net.cpp:382] conv1 -> conv1
I0428 20:04:01.180886 30304 net.cpp:124] Setting up conv1
I0428 20:04:01.180930 30304 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:01.180934 30304 net.cpp:139] Memory required for data: 5754800
I0428 20:04:01.180944 30304 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:01.180951 30304 net.cpp:86] Creating Layer pool1
I0428 20:04:01.180955 30304 net.cpp:408] pool1 <- conv1
I0428 20:04:01.180961 30304 net.cpp:382] pool1 -> pool1
I0428 20:04:01.180999 30304 net.cpp:124] Setting up pool1
I0428 20:04:01.181006 30304 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:01.181010 30304 net.cpp:139] Memory required for data: 6394800
I0428 20:04:01.181015 30304 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:01.181020 30304 net.cpp:86] Creating Layer ip1
I0428 20:04:01.181027 30304 net.cpp:408] ip1 <- pool1
I0428 20:04:01.181032 30304 net.cpp:382] ip1 -> ip1
I0428 20:04:01.181418 30304 net.cpp:124] Setting up ip1
I0428 20:04:01.181427 30304 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:01.181464 30304 net.cpp:139] Memory required for data: 6404800
I0428 20:04:01.181473 30304 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:01.181478 30304 net.cpp:86] Creating Layer relu1
I0428 20:04:01.181483 30304 net.cpp:408] relu1 <- ip1
I0428 20:04:01.181501 30304 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:01.181731 30304 net.cpp:124] Setting up relu1
I0428 20:04:01.181740 30304 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:01.181743 30304 net.cpp:139] Memory required for data: 6414800
I0428 20:04:01.181746 30304 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:01.181753 30304 net.cpp:86] Creating Layer ip2
I0428 20:04:01.181756 30304 net.cpp:408] ip2 <- ip1
I0428 20:04:01.181762 30304 net.cpp:382] ip2 -> ip2
I0428 20:04:01.181881 30304 net.cpp:124] Setting up ip2
I0428 20:04:01.181888 30304 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:01.181892 30304 net.cpp:139] Memory required for data: 6434800
I0428 20:04:01.181897 30304 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:01.181902 30304 net.cpp:86] Creating Layer relu2
I0428 20:04:01.181906 30304 net.cpp:408] relu2 <- ip2
I0428 20:04:01.181910 30304 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:01.182056 30304 net.cpp:124] Setting up relu2
I0428 20:04:01.182065 30304 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:01.182068 30304 net.cpp:139] Memory required for data: 6454800
I0428 20:04:01.182072 30304 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:01.182077 30304 net.cpp:86] Creating Layer ip3
I0428 20:04:01.182080 30304 net.cpp:408] ip3 <- ip2
I0428 20:04:01.182086 30304 net.cpp:382] ip3 -> ip3
I0428 20:04:01.182183 30304 net.cpp:124] Setting up ip3
I0428 20:04:01.182190 30304 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:01.182193 30304 net.cpp:139] Memory required for data: 6458800
I0428 20:04:01.182201 30304 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:01.182214 30304 net.cpp:86] Creating Layer relu3
I0428 20:04:01.182216 30304 net.cpp:408] relu3 <- ip3
I0428 20:04:01.182221 30304 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:01.183059 30304 net.cpp:124] Setting up relu3
I0428 20:04:01.183071 30304 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:01.183090 30304 net.cpp:139] Memory required for data: 6462800
I0428 20:04:01.183094 30304 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:01.183099 30304 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:01.183102 30304 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:01.183109 30304 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:01.183115 30304 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:01.183156 30304 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:01.183163 30304 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:01.183167 30304 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:01.183171 30304 net.cpp:139] Memory required for data: 6470800
I0428 20:04:01.183173 30304 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:01.183178 30304 net.cpp:86] Creating Layer accuracy
I0428 20:04:01.183184 30304 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:01.183188 30304 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:01.183209 30304 net.cpp:382] accuracy -> accuracy
I0428 20:04:01.183217 30304 net.cpp:124] Setting up accuracy
I0428 20:04:01.183221 30304 net.cpp:131] Top shape: (1)
I0428 20:04:01.183224 30304 net.cpp:139] Memory required for data: 6470804
I0428 20:04:01.183228 30304 layer_factory.hpp:77] Creating layer loss
I0428 20:04:01.183231 30304 net.cpp:86] Creating Layer loss
I0428 20:04:01.183235 30304 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:01.183238 30304 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:01.183243 30304 net.cpp:382] loss -> loss
I0428 20:04:01.183249 30304 layer_factory.hpp:77] Creating layer loss
I0428 20:04:01.183500 30304 net.cpp:124] Setting up loss
I0428 20:04:01.183508 30304 net.cpp:131] Top shape: (1)
I0428 20:04:01.183511 30304 net.cpp:134]     with loss weight 1
I0428 20:04:01.183527 30304 net.cpp:139] Memory required for data: 6470808
I0428 20:04:01.183531 30304 net.cpp:200] loss needs backward computation.
I0428 20:04:01.183535 30304 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:01.183539 30304 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:01.183543 30304 net.cpp:200] relu3 needs backward computation.
I0428 20:04:01.183547 30304 net.cpp:200] ip3 needs backward computation.
I0428 20:04:01.183549 30304 net.cpp:200] relu2 needs backward computation.
I0428 20:04:01.183552 30304 net.cpp:200] ip2 needs backward computation.
I0428 20:04:01.183555 30304 net.cpp:200] relu1 needs backward computation.
I0428 20:04:01.183558 30304 net.cpp:200] ip1 needs backward computation.
I0428 20:04:01.183562 30304 net.cpp:200] pool1 needs backward computation.
I0428 20:04:01.183564 30304 net.cpp:200] conv1 needs backward computation.
I0428 20:04:01.183568 30304 net.cpp:200] pool0 needs backward computation.
I0428 20:04:01.183571 30304 net.cpp:200] conv0 needs backward computation.
I0428 20:04:01.183576 30304 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:01.183579 30304 net.cpp:202] mnist does not need backward computation.
I0428 20:04:01.183583 30304 net.cpp:244] This network produces output accuracy
I0428 20:04:01.183586 30304 net.cpp:244] This network produces output loss
I0428 20:04:01.183596 30304 net.cpp:257] Network initialization done.
I0428 20:04:01.183656 30304 solver.cpp:56] Solver scaffolding done.
I0428 20:04:01.184046 30304 caffe.cpp:248] Starting Optimization
I0428 20:04:01.184052 30304 solver.cpp:273] Solving LeNet
I0428 20:04:01.184056 30304 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:01.184847 30304 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:01.190580 30304 blocking_queue.cpp:49] Waiting for data
I0428 20:04:01.249600 30311 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:01.250247 30304 solver.cpp:398]     Test net output #0: accuracy = 0.1084
I0428 20:04:01.250279 30304 solver.cpp:398]     Test net output #1: loss = 2.29806 (* 1 = 2.29806 loss)
I0428 20:04:01.253922 30304 solver.cpp:219] Iteration 0 (0 iter/s, 0.069839s/100 iters), loss = 2.29467
I0428 20:04:01.253960 30304 solver.cpp:238]     Train net output #0: loss = 2.29467 (* 1 = 2.29467 loss)
I0428 20:04:01.253971 30304 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:01.406332 30304 solver.cpp:219] Iteration 100 (656.283 iter/s, 0.152373s/100 iters), loss = 1.02644
I0428 20:04:01.406374 30304 solver.cpp:238]     Train net output #0: loss = 1.02644 (* 1 = 1.02644 loss)
I0428 20:04:01.406381 30304 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:01.565335 30304 solver.cpp:219] Iteration 200 (629.078 iter/s, 0.158963s/100 iters), loss = 1.03973
I0428 20:04:01.565377 30304 solver.cpp:238]     Train net output #0: loss = 1.03973 (* 1 = 1.03973 loss)
I0428 20:04:01.565383 30304 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:01.715088 30304 solver.cpp:219] Iteration 300 (668.009 iter/s, 0.149699s/100 iters), loss = 0.607664
I0428 20:04:01.715128 30304 solver.cpp:238]     Train net output #0: loss = 0.607664 (* 1 = 0.607664 loss)
I0428 20:04:01.715134 30304 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:01.866643 30304 solver.cpp:219] Iteration 400 (660.054 iter/s, 0.151503s/100 iters), loss = 0.731439
I0428 20:04:01.866683 30304 solver.cpp:238]     Train net output #0: loss = 0.731439 (* 1 = 0.731439 loss)
I0428 20:04:01.866688 30304 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:02.016836 30304 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:02.093441 30311 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:02.094082 30304 solver.cpp:398]     Test net output #0: accuracy = 0.866
I0428 20:04:02.094118 30304 solver.cpp:398]     Test net output #1: loss = 0.573927 (* 1 = 0.573927 loss)
I0428 20:04:02.095693 30304 solver.cpp:219] Iteration 500 (436.663 iter/s, 0.229009s/100 iters), loss = 0.61189
I0428 20:04:02.095732 30304 solver.cpp:238]     Train net output #0: loss = 0.61189 (* 1 = 0.61189 loss)
I0428 20:04:02.095739 30304 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:02.257184 30304 solver.cpp:219] Iteration 600 (619.425 iter/s, 0.16144s/100 iters), loss = 0.420418
I0428 20:04:02.257223 30304 solver.cpp:238]     Train net output #0: loss = 0.420418 (* 1 = 0.420418 loss)
I0428 20:04:02.257230 30304 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:02.413645 30304 solver.cpp:219] Iteration 700 (639.355 iter/s, 0.156408s/100 iters), loss = 0.851437
I0428 20:04:02.413683 30304 solver.cpp:238]     Train net output #0: loss = 0.851437 (* 1 = 0.851437 loss)
I0428 20:04:02.413689 30304 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:02.568845 30304 solver.cpp:219] Iteration 800 (644.481 iter/s, 0.155164s/100 iters), loss = 0.709064
I0428 20:04:02.568884 30304 solver.cpp:238]     Train net output #0: loss = 0.709064 (* 1 = 0.709064 loss)
I0428 20:04:02.568892 30304 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:02.721961 30304 solver.cpp:219] Iteration 900 (653.328 iter/s, 0.153062s/100 iters), loss = 0.307011
I0428 20:04:02.721999 30304 solver.cpp:238]     Train net output #0: loss = 0.307011 (* 1 = 0.307011 loss)
I0428 20:04:02.722005 30304 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:02.772997 30310 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:02.875569 30304 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:02.877619 30304 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:02.878631 30304 solver.cpp:311] Iteration 1000, loss = 0.0841353
I0428 20:04:02.878679 30304 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:02.954624 30311 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:02.955265 30304 solver.cpp:398]     Test net output #0: accuracy = 0.9726
I0428 20:04:02.955297 30304 solver.cpp:398]     Test net output #1: loss = 0.0929866 (* 1 = 0.0929866 loss)
I0428 20:04:02.955302 30304 solver.cpp:316] Optimization Done.
I0428 20:04:02.955307 30304 caffe.cpp:259] Optimization Done.
