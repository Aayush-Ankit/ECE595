I0428 19:52:43.190454 27575 caffe.cpp:218] Using GPUs 0
I0428 19:52:43.226382 27575 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:43.682106 27575 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test669.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:43.682246 27575 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test669.prototxt
I0428 19:52:43.682533 27575 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:43.682549 27575 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:43.682621 27575 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:43.682714 27575 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:43.682821 27575 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:43.682847 27575 net.cpp:86] Creating Layer mnist
I0428 19:52:43.682857 27575 net.cpp:382] mnist -> data
I0428 19:52:43.682881 27575 net.cpp:382] mnist -> label
I0428 19:52:43.683990 27575 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:43.686269 27575 net.cpp:124] Setting up mnist
I0428 19:52:43.686285 27575 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:43.686293 27575 net.cpp:131] Top shape: 64 (64)
I0428 19:52:43.686298 27575 net.cpp:139] Memory required for data: 200960
I0428 19:52:43.686307 27575 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:43.686326 27575 net.cpp:86] Creating Layer conv0
I0428 19:52:43.686334 27575 net.cpp:408] conv0 <- data
I0428 19:52:43.686348 27575 net.cpp:382] conv0 -> conv0
I0428 19:52:43.957217 27575 net.cpp:124] Setting up conv0
I0428 19:52:43.957249 27575 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:43.957254 27575 net.cpp:139] Memory required for data: 938240
I0428 19:52:43.957299 27575 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:43.957316 27575 net.cpp:86] Creating Layer pool0
I0428 19:52:43.957322 27575 net.cpp:408] pool0 <- conv0
I0428 19:52:43.957330 27575 net.cpp:382] pool0 -> pool0
I0428 19:52:43.957391 27575 net.cpp:124] Setting up pool0
I0428 19:52:43.957399 27575 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:43.957406 27575 net.cpp:139] Memory required for data: 1122560
I0428 19:52:43.957411 27575 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:43.957423 27575 net.cpp:86] Creating Layer conv1
I0428 19:52:43.957429 27575 net.cpp:408] conv1 <- pool0
I0428 19:52:43.957435 27575 net.cpp:382] conv1 -> conv1
I0428 19:52:43.960820 27575 net.cpp:124] Setting up conv1
I0428 19:52:43.960840 27575 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:52:43.960852 27575 net.cpp:139] Memory required for data: 1941760
I0428 19:52:43.960863 27575 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:43.960881 27575 net.cpp:86] Creating Layer pool1
I0428 19:52:43.960887 27575 net.cpp:408] pool1 <- conv1
I0428 19:52:43.960903 27575 net.cpp:382] pool1 -> pool1
I0428 19:52:43.960952 27575 net.cpp:124] Setting up pool1
I0428 19:52:43.960959 27575 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:52:43.960963 27575 net.cpp:139] Memory required for data: 2146560
I0428 19:52:43.960968 27575 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:43.960976 27575 net.cpp:86] Creating Layer ip1
I0428 19:52:43.960983 27575 net.cpp:408] ip1 <- pool1
I0428 19:52:43.960988 27575 net.cpp:382] ip1 -> ip1
I0428 19:52:43.961253 27575 net.cpp:124] Setting up ip1
I0428 19:52:43.961262 27575 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:43.961266 27575 net.cpp:139] Memory required for data: 2152960
I0428 19:52:43.961277 27575 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:43.961283 27575 net.cpp:86] Creating Layer relu1
I0428 19:52:43.961289 27575 net.cpp:408] relu1 <- ip1
I0428 19:52:43.961295 27575 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:43.961501 27575 net.cpp:124] Setting up relu1
I0428 19:52:43.961513 27575 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:52:43.961519 27575 net.cpp:139] Memory required for data: 2159360
I0428 19:52:43.961522 27575 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:43.961529 27575 net.cpp:86] Creating Layer ip2
I0428 19:52:43.961535 27575 net.cpp:408] ip2 <- ip1
I0428 19:52:43.961541 27575 net.cpp:382] ip2 -> ip2
I0428 19:52:43.961658 27575 net.cpp:124] Setting up ip2
I0428 19:52:43.961668 27575 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:43.961673 27575 net.cpp:139] Memory required for data: 2161920
I0428 19:52:43.961679 27575 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:43.961688 27575 net.cpp:86] Creating Layer relu2
I0428 19:52:43.961694 27575 net.cpp:408] relu2 <- ip2
I0428 19:52:43.961699 27575 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:43.962601 27575 net.cpp:124] Setting up relu2
I0428 19:52:43.962616 27575 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:43.962622 27575 net.cpp:139] Memory required for data: 2164480
I0428 19:52:43.962627 27575 layer_factory.hpp:77] Creating layer loss
I0428 19:52:43.962635 27575 net.cpp:86] Creating Layer loss
I0428 19:52:43.962641 27575 net.cpp:408] loss <- ip2
I0428 19:52:43.962646 27575 net.cpp:408] loss <- label
I0428 19:52:43.962652 27575 net.cpp:382] loss -> loss
I0428 19:52:43.962677 27575 layer_factory.hpp:77] Creating layer loss
I0428 19:52:43.962970 27575 net.cpp:124] Setting up loss
I0428 19:52:43.962982 27575 net.cpp:131] Top shape: (1)
I0428 19:52:43.962988 27575 net.cpp:134]     with loss weight 1
I0428 19:52:43.963006 27575 net.cpp:139] Memory required for data: 2164484
I0428 19:52:43.963011 27575 net.cpp:200] loss needs backward computation.
I0428 19:52:43.963014 27575 net.cpp:200] relu2 needs backward computation.
I0428 19:52:43.963018 27575 net.cpp:200] ip2 needs backward computation.
I0428 19:52:43.963022 27575 net.cpp:200] relu1 needs backward computation.
I0428 19:52:43.963027 27575 net.cpp:200] ip1 needs backward computation.
I0428 19:52:43.963044 27575 net.cpp:200] pool1 needs backward computation.
I0428 19:52:43.963049 27575 net.cpp:200] conv1 needs backward computation.
I0428 19:52:43.963053 27575 net.cpp:200] pool0 needs backward computation.
I0428 19:52:43.963057 27575 net.cpp:200] conv0 needs backward computation.
I0428 19:52:43.963062 27575 net.cpp:202] mnist does not need backward computation.
I0428 19:52:43.963065 27575 net.cpp:244] This network produces output loss
I0428 19:52:43.963076 27575 net.cpp:257] Network initialization done.
I0428 19:52:43.963455 27575 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test669.prototxt
I0428 19:52:43.963487 27575 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:43.963605 27575 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:52:43.963682 27575 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:43.963735 27575 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:43.963750 27575 net.cpp:86] Creating Layer mnist
I0428 19:52:43.963757 27575 net.cpp:382] mnist -> data
I0428 19:52:43.963765 27575 net.cpp:382] mnist -> label
I0428 19:52:43.963872 27575 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:43.966248 27575 net.cpp:124] Setting up mnist
I0428 19:52:43.966274 27575 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:43.966281 27575 net.cpp:131] Top shape: 100 (100)
I0428 19:52:43.966286 27575 net.cpp:139] Memory required for data: 314000
I0428 19:52:43.966291 27575 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:43.966327 27575 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:43.966334 27575 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:43.966341 27575 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:43.966351 27575 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:43.966491 27575 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:43.966513 27575 net.cpp:131] Top shape: 100 (100)
I0428 19:52:43.966521 27575 net.cpp:131] Top shape: 100 (100)
I0428 19:52:43.966524 27575 net.cpp:139] Memory required for data: 314800
I0428 19:52:43.966528 27575 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:43.966539 27575 net.cpp:86] Creating Layer conv0
I0428 19:52:43.966545 27575 net.cpp:408] conv0 <- data
I0428 19:52:43.966552 27575 net.cpp:382] conv0 -> conv0
I0428 19:52:43.968456 27575 net.cpp:124] Setting up conv0
I0428 19:52:43.968473 27575 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:43.968480 27575 net.cpp:139] Memory required for data: 1466800
I0428 19:52:43.968492 27575 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:43.968502 27575 net.cpp:86] Creating Layer pool0
I0428 19:52:43.968508 27575 net.cpp:408] pool0 <- conv0
I0428 19:52:43.968514 27575 net.cpp:382] pool0 -> pool0
I0428 19:52:43.968561 27575 net.cpp:124] Setting up pool0
I0428 19:52:43.968571 27575 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:43.968576 27575 net.cpp:139] Memory required for data: 1754800
I0428 19:52:43.968580 27575 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:43.968591 27575 net.cpp:86] Creating Layer conv1
I0428 19:52:43.968597 27575 net.cpp:408] conv1 <- pool0
I0428 19:52:43.968603 27575 net.cpp:382] conv1 -> conv1
I0428 19:52:43.970414 27575 net.cpp:124] Setting up conv1
I0428 19:52:43.970437 27575 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:52:43.970449 27575 net.cpp:139] Memory required for data: 3034800
I0428 19:52:43.970463 27575 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:43.970471 27575 net.cpp:86] Creating Layer pool1
I0428 19:52:43.970476 27575 net.cpp:408] pool1 <- conv1
I0428 19:52:43.970484 27575 net.cpp:382] pool1 -> pool1
I0428 19:52:43.970528 27575 net.cpp:124] Setting up pool1
I0428 19:52:43.970537 27575 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:52:43.970541 27575 net.cpp:139] Memory required for data: 3354800
I0428 19:52:43.970546 27575 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:43.970552 27575 net.cpp:86] Creating Layer ip1
I0428 19:52:43.970557 27575 net.cpp:408] ip1 <- pool1
I0428 19:52:43.970566 27575 net.cpp:382] ip1 -> ip1
I0428 19:52:43.970830 27575 net.cpp:124] Setting up ip1
I0428 19:52:43.970839 27575 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:43.970844 27575 net.cpp:139] Memory required for data: 3364800
I0428 19:52:43.970851 27575 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:43.970860 27575 net.cpp:86] Creating Layer relu1
I0428 19:52:43.970865 27575 net.cpp:408] relu1 <- ip1
I0428 19:52:43.970871 27575 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:43.971076 27575 net.cpp:124] Setting up relu1
I0428 19:52:43.971086 27575 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:52:43.971089 27575 net.cpp:139] Memory required for data: 3374800
I0428 19:52:43.971092 27575 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:43.971102 27575 net.cpp:86] Creating Layer ip2
I0428 19:52:43.971119 27575 net.cpp:408] ip2 <- ip1
I0428 19:52:43.971127 27575 net.cpp:382] ip2 -> ip2
I0428 19:52:43.971267 27575 net.cpp:124] Setting up ip2
I0428 19:52:43.971276 27575 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:43.971279 27575 net.cpp:139] Memory required for data: 3378800
I0428 19:52:43.971287 27575 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:43.971294 27575 net.cpp:86] Creating Layer relu2
I0428 19:52:43.971310 27575 net.cpp:408] relu2 <- ip2
I0428 19:52:43.971315 27575 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:43.971549 27575 net.cpp:124] Setting up relu2
I0428 19:52:43.971560 27575 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:43.971565 27575 net.cpp:139] Memory required for data: 3382800
I0428 19:52:43.971570 27575 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:52:43.971577 27575 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:52:43.971583 27575 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:52:43.971590 27575 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:52:43.971619 27575 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:52:43.971665 27575 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:52:43.971673 27575 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:43.971678 27575 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:43.971681 27575 net.cpp:139] Memory required for data: 3390800
I0428 19:52:43.971684 27575 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:43.971693 27575 net.cpp:86] Creating Layer accuracy
I0428 19:52:43.971698 27575 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:52:43.971704 27575 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:43.971709 27575 net.cpp:382] accuracy -> accuracy
I0428 19:52:43.971719 27575 net.cpp:124] Setting up accuracy
I0428 19:52:43.971725 27575 net.cpp:131] Top shape: (1)
I0428 19:52:43.971729 27575 net.cpp:139] Memory required for data: 3390804
I0428 19:52:43.971732 27575 layer_factory.hpp:77] Creating layer loss
I0428 19:52:43.971738 27575 net.cpp:86] Creating Layer loss
I0428 19:52:43.971742 27575 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:52:43.971747 27575 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:43.971753 27575 net.cpp:382] loss -> loss
I0428 19:52:43.971762 27575 layer_factory.hpp:77] Creating layer loss
I0428 19:52:43.972059 27575 net.cpp:124] Setting up loss
I0428 19:52:43.972079 27575 net.cpp:131] Top shape: (1)
I0428 19:52:43.972082 27575 net.cpp:134]     with loss weight 1
I0428 19:52:43.972095 27575 net.cpp:139] Memory required for data: 3390808
I0428 19:52:43.972098 27575 net.cpp:200] loss needs backward computation.
I0428 19:52:43.972103 27575 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:43.972108 27575 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:52:43.972112 27575 net.cpp:200] relu2 needs backward computation.
I0428 19:52:43.972115 27575 net.cpp:200] ip2 needs backward computation.
I0428 19:52:43.972120 27575 net.cpp:200] relu1 needs backward computation.
I0428 19:52:43.972123 27575 net.cpp:200] ip1 needs backward computation.
I0428 19:52:43.972127 27575 net.cpp:200] pool1 needs backward computation.
I0428 19:52:43.972131 27575 net.cpp:200] conv1 needs backward computation.
I0428 19:52:43.972136 27575 net.cpp:200] pool0 needs backward computation.
I0428 19:52:43.972139 27575 net.cpp:200] conv0 needs backward computation.
I0428 19:52:43.972143 27575 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:43.972148 27575 net.cpp:202] mnist does not need backward computation.
I0428 19:52:43.972151 27575 net.cpp:244] This network produces output accuracy
I0428 19:52:43.972156 27575 net.cpp:244] This network produces output loss
I0428 19:52:43.972169 27575 net.cpp:257] Network initialization done.
I0428 19:52:43.972216 27575 solver.cpp:56] Solver scaffolding done.
I0428 19:52:43.972575 27575 caffe.cpp:248] Starting Optimization
I0428 19:52:43.972589 27575 solver.cpp:273] Solving LeNet
I0428 19:52:43.972594 27575 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:43.972896 27575 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:43.977883 27575 blocking_queue.cpp:49] Waiting for data
I0428 19:52:44.048797 27582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:44.049317 27575 solver.cpp:398]     Test net output #0: accuracy = 0.0757
I0428 19:52:44.049342 27575 solver.cpp:398]     Test net output #1: loss = 2.31388 (* 1 = 2.31388 loss)
I0428 19:52:44.052892 27575 solver.cpp:219] Iteration 0 (-9.79003e-31 iter/s, 0.0802562s/100 iters), loss = 2.30643
I0428 19:52:44.052922 27575 solver.cpp:238]     Train net output #0: loss = 2.30643 (* 1 = 2.30643 loss)
I0428 19:52:44.052947 27575 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:44.160629 27575 solver.cpp:219] Iteration 100 (928.6 iter/s, 0.107689s/100 iters), loss = 0.751186
I0428 19:52:44.160665 27575 solver.cpp:238]     Train net output #0: loss = 0.751186 (* 1 = 0.751186 loss)
I0428 19:52:44.160673 27575 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:44.263417 27575 solver.cpp:219] Iteration 200 (973.362 iter/s, 0.102737s/100 iters), loss = 0.790585
I0428 19:52:44.263499 27575 solver.cpp:238]     Train net output #0: loss = 0.790585 (* 1 = 0.790585 loss)
I0428 19:52:44.263516 27575 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:44.374508 27575 solver.cpp:219] Iteration 300 (900.896 iter/s, 0.111001s/100 iters), loss = 0.918693
I0428 19:52:44.374542 27575 solver.cpp:238]     Train net output #0: loss = 0.918693 (* 1 = 0.918693 loss)
I0428 19:52:44.374559 27575 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:44.478988 27575 solver.cpp:219] Iteration 400 (957.574 iter/s, 0.104431s/100 iters), loss = 1.09997
I0428 19:52:44.479043 27575 solver.cpp:238]     Train net output #0: loss = 1.09997 (* 1 = 1.09997 loss)
I0428 19:52:44.479058 27575 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:44.594004 27575 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:44.656601 27582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:44.657377 27575 solver.cpp:398]     Test net output #0: accuracy = 0.7555
I0428 19:52:44.657424 27575 solver.cpp:398]     Test net output #1: loss = 0.826496 (* 1 = 0.826496 loss)
I0428 19:52:44.658762 27575 solver.cpp:219] Iteration 500 (556.471 iter/s, 0.179704s/100 iters), loss = 0.912479
I0428 19:52:44.658809 27575 solver.cpp:238]     Train net output #0: loss = 0.912479 (* 1 = 0.912479 loss)
I0428 19:52:44.658824 27575 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:44.776849 27575 solver.cpp:219] Iteration 600 (847.284 iter/s, 0.118024s/100 iters), loss = 0.535539
I0428 19:52:44.776918 27575 solver.cpp:238]     Train net output #0: loss = 0.535539 (* 1 = 0.535539 loss)
I0428 19:52:44.776931 27575 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:44.885743 27575 solver.cpp:219] Iteration 700 (918.919 iter/s, 0.108824s/100 iters), loss = 1.00394
I0428 19:52:44.885787 27575 solver.cpp:238]     Train net output #0: loss = 1.00394 (* 1 = 1.00394 loss)
I0428 19:52:44.885797 27575 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:44.992697 27575 solver.cpp:219] Iteration 800 (935.476 iter/s, 0.106897s/100 iters), loss = 0.762561
I0428 19:52:44.992735 27575 solver.cpp:238]     Train net output #0: loss = 0.762561 (* 1 = 0.762561 loss)
I0428 19:52:44.992743 27575 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:45.099606 27575 solver.cpp:219] Iteration 900 (935.808 iter/s, 0.10686s/100 iters), loss = 0.631905
I0428 19:52:45.099643 27575 solver.cpp:238]     Train net output #0: loss = 0.631905 (* 1 = 0.631905 loss)
I0428 19:52:45.099653 27575 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:45.134721 27581 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:45.211505 27575 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:45.213184 27575 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:45.214107 27575 solver.cpp:311] Iteration 1000, loss = 0.775438
I0428 19:52:45.214134 27575 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:45.289968 27582 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:45.290482 27575 solver.cpp:398]     Test net output #0: accuracy = 0.8404
I0428 19:52:45.290513 27575 solver.cpp:398]     Test net output #1: loss = 0.572989 (* 1 = 0.572989 loss)
I0428 19:52:45.290520 27575 solver.cpp:316] Optimization Done.
I0428 19:52:45.290524 27575 caffe.cpp:259] Optimization Done.
