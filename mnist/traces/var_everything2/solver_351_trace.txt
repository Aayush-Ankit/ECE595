I0428 19:40:59.263617 24712 caffe.cpp:218] Using GPUs 0
I0428 19:40:59.300873 24712 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:59.832268 24712 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test351.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:59.832427 24712 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test351.prototxt
I0428 19:40:59.832963 24712 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:59.832989 24712 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:59.833113 24712 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:40:59.833214 24712 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:59.833340 24712 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:59.833372 24712 net.cpp:86] Creating Layer mnist
I0428 19:40:59.833385 24712 net.cpp:382] mnist -> data
I0428 19:40:59.833415 24712 net.cpp:382] mnist -> label
I0428 19:40:59.834972 24712 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:59.837705 24712 net.cpp:124] Setting up mnist
I0428 19:40:59.837723 24712 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:59.837730 24712 net.cpp:131] Top shape: 64 (64)
I0428 19:40:59.837733 24712 net.cpp:139] Memory required for data: 200960
I0428 19:40:59.837740 24712 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:59.837770 24712 net.cpp:86] Creating Layer conv0
I0428 19:40:59.837779 24712 net.cpp:408] conv0 <- data
I0428 19:40:59.837800 24712 net.cpp:382] conv0 -> conv0
I0428 19:41:00.131973 24712 net.cpp:124] Setting up conv0
I0428 19:41:00.132005 24712 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:41:00.132010 24712 net.cpp:139] Memory required for data: 495872
I0428 19:41:00.132027 24712 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:00.132042 24712 net.cpp:86] Creating Layer pool0
I0428 19:41:00.132047 24712 net.cpp:408] pool0 <- conv0
I0428 19:41:00.132053 24712 net.cpp:382] pool0 -> pool0
I0428 19:41:00.132130 24712 net.cpp:124] Setting up pool0
I0428 19:41:00.132146 24712 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:41:00.132179 24712 net.cpp:139] Memory required for data: 569600
I0428 19:41:00.132185 24712 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:00.132205 24712 net.cpp:86] Creating Layer conv1
I0428 19:41:00.132215 24712 net.cpp:408] conv1 <- pool0
I0428 19:41:00.132226 24712 net.cpp:382] conv1 -> conv1
I0428 19:41:00.134912 24712 net.cpp:124] Setting up conv1
I0428 19:41:00.134932 24712 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:41:00.134935 24712 net.cpp:139] Memory required for data: 733440
I0428 19:41:00.134946 24712 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:00.134955 24712 net.cpp:86] Creating Layer pool1
I0428 19:41:00.134959 24712 net.cpp:408] pool1 <- conv1
I0428 19:41:00.134965 24712 net.cpp:382] pool1 -> pool1
I0428 19:41:00.135025 24712 net.cpp:124] Setting up pool1
I0428 19:41:00.135036 24712 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:41:00.135043 24712 net.cpp:139] Memory required for data: 774400
I0428 19:41:00.135049 24712 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:00.135062 24712 net.cpp:86] Creating Layer ip1
I0428 19:41:00.135069 24712 net.cpp:408] ip1 <- pool1
I0428 19:41:00.135079 24712 net.cpp:382] ip1 -> ip1
I0428 19:41:00.136683 24712 net.cpp:124] Setting up ip1
I0428 19:41:00.136704 24712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:00.136711 24712 net.cpp:139] Memory required for data: 776960
I0428 19:41:00.136726 24712 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:00.136737 24712 net.cpp:86] Creating Layer relu1
I0428 19:41:00.136744 24712 net.cpp:408] relu1 <- ip1
I0428 19:41:00.136754 24712 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:00.137058 24712 net.cpp:124] Setting up relu1
I0428 19:41:00.137075 24712 net.cpp:131] Top shape: 64 10 (640)
I0428 19:41:00.137082 24712 net.cpp:139] Memory required for data: 779520
I0428 19:41:00.137089 24712 layer_factory.hpp:77] Creating layer loss
I0428 19:41:00.137100 24712 net.cpp:86] Creating Layer loss
I0428 19:41:00.137107 24712 net.cpp:408] loss <- ip1
I0428 19:41:00.137116 24712 net.cpp:408] loss <- label
I0428 19:41:00.137125 24712 net.cpp:382] loss -> loss
I0428 19:41:00.137154 24712 layer_factory.hpp:77] Creating layer loss
I0428 19:41:00.138514 24712 net.cpp:124] Setting up loss
I0428 19:41:00.138535 24712 net.cpp:131] Top shape: (1)
I0428 19:41:00.138541 24712 net.cpp:134]     with loss weight 1
I0428 19:41:00.138563 24712 net.cpp:139] Memory required for data: 779524
I0428 19:41:00.138571 24712 net.cpp:200] loss needs backward computation.
I0428 19:41:00.138578 24712 net.cpp:200] relu1 needs backward computation.
I0428 19:41:00.138584 24712 net.cpp:200] ip1 needs backward computation.
I0428 19:41:00.138592 24712 net.cpp:200] pool1 needs backward computation.
I0428 19:41:00.138597 24712 net.cpp:200] conv1 needs backward computation.
I0428 19:41:00.138603 24712 net.cpp:200] pool0 needs backward computation.
I0428 19:41:00.138610 24712 net.cpp:200] conv0 needs backward computation.
I0428 19:41:00.138617 24712 net.cpp:202] mnist does not need backward computation.
I0428 19:41:00.138623 24712 net.cpp:244] This network produces output loss
I0428 19:41:00.138638 24712 net.cpp:257] Network initialization done.
I0428 19:41:00.139117 24712 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test351.prototxt
I0428 19:41:00.139161 24712 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:41:00.139299 24712 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:41:00.139427 24712 layer_factory.hpp:77] Creating layer mnist
I0428 19:41:00.139499 24712 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:41:00.139519 24712 net.cpp:86] Creating Layer mnist
I0428 19:41:00.139528 24712 net.cpp:382] mnist -> data
I0428 19:41:00.139542 24712 net.cpp:382] mnist -> label
I0428 19:41:00.139680 24712 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:41:00.142750 24712 net.cpp:124] Setting up mnist
I0428 19:41:00.142773 24712 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:41:00.142783 24712 net.cpp:131] Top shape: 100 (100)
I0428 19:41:00.142789 24712 net.cpp:139] Memory required for data: 314000
I0428 19:41:00.142796 24712 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:41:00.142814 24712 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:41:00.142822 24712 net.cpp:408] label_mnist_1_split <- label
I0428 19:41:00.142830 24712 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:41:00.142843 24712 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:41:00.142968 24712 net.cpp:124] Setting up label_mnist_1_split
I0428 19:41:00.142982 24712 net.cpp:131] Top shape: 100 (100)
I0428 19:41:00.142989 24712 net.cpp:131] Top shape: 100 (100)
I0428 19:41:00.142995 24712 net.cpp:139] Memory required for data: 314800
I0428 19:41:00.143002 24712 layer_factory.hpp:77] Creating layer conv0
I0428 19:41:00.143016 24712 net.cpp:86] Creating Layer conv0
I0428 19:41:00.143023 24712 net.cpp:408] conv0 <- data
I0428 19:41:00.143033 24712 net.cpp:382] conv0 -> conv0
I0428 19:41:00.144244 24712 net.cpp:124] Setting up conv0
I0428 19:41:00.144264 24712 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:41:00.144271 24712 net.cpp:139] Memory required for data: 775600
I0428 19:41:00.144289 24712 layer_factory.hpp:77] Creating layer pool0
I0428 19:41:00.144299 24712 net.cpp:86] Creating Layer pool0
I0428 19:41:00.144305 24712 net.cpp:408] pool0 <- conv0
I0428 19:41:00.144315 24712 net.cpp:382] pool0 -> pool0
I0428 19:41:00.144374 24712 net.cpp:124] Setting up pool0
I0428 19:41:00.144387 24712 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:41:00.144393 24712 net.cpp:139] Memory required for data: 890800
I0428 19:41:00.144399 24712 layer_factory.hpp:77] Creating layer conv1
I0428 19:41:00.144414 24712 net.cpp:86] Creating Layer conv1
I0428 19:41:00.144420 24712 net.cpp:408] conv1 <- pool0
I0428 19:41:00.144430 24712 net.cpp:382] conv1 -> conv1
I0428 19:41:00.146587 24712 net.cpp:124] Setting up conv1
I0428 19:41:00.146605 24712 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:41:00.146610 24712 net.cpp:139] Memory required for data: 1146800
I0428 19:41:00.146620 24712 layer_factory.hpp:77] Creating layer pool1
I0428 19:41:00.146628 24712 net.cpp:86] Creating Layer pool1
I0428 19:41:00.146646 24712 net.cpp:408] pool1 <- conv1
I0428 19:41:00.146656 24712 net.cpp:382] pool1 -> pool1
I0428 19:41:00.146718 24712 net.cpp:124] Setting up pool1
I0428 19:41:00.146739 24712 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:41:00.146746 24712 net.cpp:139] Memory required for data: 1210800
I0428 19:41:00.146752 24712 layer_factory.hpp:77] Creating layer ip1
I0428 19:41:00.146764 24712 net.cpp:86] Creating Layer ip1
I0428 19:41:00.146770 24712 net.cpp:408] ip1 <- pool1
I0428 19:41:00.146780 24712 net.cpp:382] ip1 -> ip1
I0428 19:41:00.146961 24712 net.cpp:124] Setting up ip1
I0428 19:41:00.146975 24712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:00.146982 24712 net.cpp:139] Memory required for data: 1214800
I0428 19:41:00.146996 24712 layer_factory.hpp:77] Creating layer relu1
I0428 19:41:00.147006 24712 net.cpp:86] Creating Layer relu1
I0428 19:41:00.147022 24712 net.cpp:408] relu1 <- ip1
I0428 19:41:00.147034 24712 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:41:00.148396 24712 net.cpp:124] Setting up relu1
I0428 19:41:00.148416 24712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:00.148423 24712 net.cpp:139] Memory required for data: 1218800
I0428 19:41:00.148430 24712 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:41:00.148442 24712 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:41:00.148452 24712 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:41:00.148461 24712 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:41:00.148473 24712 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:41:00.148533 24712 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:41:00.148545 24712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:00.148555 24712 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:41:00.148561 24712 net.cpp:139] Memory required for data: 1226800
I0428 19:41:00.148567 24712 layer_factory.hpp:77] Creating layer accuracy
I0428 19:41:00.148576 24712 net.cpp:86] Creating Layer accuracy
I0428 19:41:00.148583 24712 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:41:00.148591 24712 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:41:00.148600 24712 net.cpp:382] accuracy -> accuracy
I0428 19:41:00.148612 24712 net.cpp:124] Setting up accuracy
I0428 19:41:00.148620 24712 net.cpp:131] Top shape: (1)
I0428 19:41:00.148627 24712 net.cpp:139] Memory required for data: 1226804
I0428 19:41:00.148633 24712 layer_factory.hpp:77] Creating layer loss
I0428 19:41:00.148641 24712 net.cpp:86] Creating Layer loss
I0428 19:41:00.148648 24712 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:41:00.148655 24712 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:41:00.148663 24712 net.cpp:382] loss -> loss
I0428 19:41:00.148674 24712 layer_factory.hpp:77] Creating layer loss
I0428 19:41:00.149086 24712 net.cpp:124] Setting up loss
I0428 19:41:00.149106 24712 net.cpp:131] Top shape: (1)
I0428 19:41:00.149113 24712 net.cpp:134]     with loss weight 1
I0428 19:41:00.149124 24712 net.cpp:139] Memory required for data: 1226808
I0428 19:41:00.149132 24712 net.cpp:200] loss needs backward computation.
I0428 19:41:00.149140 24712 net.cpp:202] accuracy does not need backward computation.
I0428 19:41:00.149149 24712 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:41:00.149157 24712 net.cpp:200] relu1 needs backward computation.
I0428 19:41:00.149166 24712 net.cpp:200] ip1 needs backward computation.
I0428 19:41:00.149173 24712 net.cpp:200] pool1 needs backward computation.
I0428 19:41:00.149181 24712 net.cpp:200] conv1 needs backward computation.
I0428 19:41:00.149191 24712 net.cpp:200] pool0 needs backward computation.
I0428 19:41:00.149199 24712 net.cpp:200] conv0 needs backward computation.
I0428 19:41:00.149205 24712 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:41:00.149214 24712 net.cpp:202] mnist does not need backward computation.
I0428 19:41:00.149219 24712 net.cpp:244] This network produces output accuracy
I0428 19:41:00.149226 24712 net.cpp:244] This network produces output loss
I0428 19:41:00.149243 24712 net.cpp:257] Network initialization done.
I0428 19:41:00.149318 24712 solver.cpp:56] Solver scaffolding done.
I0428 19:41:00.149695 24712 caffe.cpp:248] Starting Optimization
I0428 19:41:00.149706 24712 solver.cpp:273] Solving LeNet
I0428 19:41:00.149713 24712 solver.cpp:274] Learning Rate Policy: inv
I0428 19:41:00.150908 24712 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:41:00.153739 24712 blocking_queue.cpp:49] Waiting for data
I0428 19:41:00.225772 24719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:00.226348 24712 solver.cpp:398]     Test net output #0: accuracy = 0.1599
I0428 19:41:00.226382 24712 solver.cpp:398]     Test net output #1: loss = 2.3087 (* 1 = 2.3087 loss)
I0428 19:41:00.228595 24712 solver.cpp:219] Iteration 0 (0 iter/s, 0.0788494s/100 iters), loss = 2.27301
I0428 19:41:00.228626 24712 solver.cpp:238]     Train net output #0: loss = 2.27301 (* 1 = 2.27301 loss)
I0428 19:41:00.228639 24712 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:41:00.293174 24712 solver.cpp:219] Iteration 100 (1549.51 iter/s, 0.0645366s/100 iters), loss = 1.5351
I0428 19:41:00.293210 24712 solver.cpp:238]     Train net output #0: loss = 1.5351 (* 1 = 1.5351 loss)
I0428 19:41:00.293218 24712 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:41:00.359997 24712 solver.cpp:219] Iteration 200 (1497.59 iter/s, 0.066774s/100 iters), loss = 1.15717
I0428 19:41:00.360030 24712 solver.cpp:238]     Train net output #0: loss = 1.15717 (* 1 = 1.15717 loss)
I0428 19:41:00.360038 24712 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:41:00.428308 24712 solver.cpp:219] Iteration 300 (1464.99 iter/s, 0.0682598s/100 iters), loss = 1.38347
I0428 19:41:00.428339 24712 solver.cpp:238]     Train net output #0: loss = 1.38347 (* 1 = 1.38347 loss)
I0428 19:41:00.428346 24712 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:41:00.490208 24712 solver.cpp:219] Iteration 400 (1616.56 iter/s, 0.0618599s/100 iters), loss = 1.27553
I0428 19:41:00.490248 24712 solver.cpp:238]     Train net output #0: loss = 1.27553 (* 1 = 1.27553 loss)
I0428 19:41:00.490254 24712 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:41:00.550626 24712 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:41:00.623065 24719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:00.623611 24712 solver.cpp:398]     Test net output #0: accuracy = 0.5783
I0428 19:41:00.623654 24712 solver.cpp:398]     Test net output #1: loss = 1.25319 (* 1 = 1.25319 loss)
I0428 19:41:00.624529 24712 solver.cpp:219] Iteration 500 (744.74 iter/s, 0.134275s/100 iters), loss = 1.09386
I0428 19:41:00.624575 24712 solver.cpp:238]     Train net output #0: loss = 1.09386 (* 1 = 1.09386 loss)
I0428 19:41:00.624585 24712 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:41:00.697265 24712 solver.cpp:219] Iteration 600 (1375.93 iter/s, 0.0726782s/100 iters), loss = 1.12141
I0428 19:41:00.697320 24712 solver.cpp:238]     Train net output #0: loss = 1.12141 (* 1 = 1.12141 loss)
I0428 19:41:00.697329 24712 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:41:00.761415 24712 solver.cpp:219] Iteration 700 (1560.5 iter/s, 0.0640819s/100 iters), loss = 1.23864
I0428 19:41:00.761454 24712 solver.cpp:238]     Train net output #0: loss = 1.23864 (* 1 = 1.23864 loss)
I0428 19:41:00.761461 24712 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:41:00.819289 24712 solver.cpp:219] Iteration 800 (1728.89 iter/s, 0.0578406s/100 iters), loss = 1.1551
I0428 19:41:00.819346 24712 solver.cpp:238]     Train net output #0: loss = 1.1551 (* 1 = 1.1551 loss)
I0428 19:41:00.819352 24712 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:41:00.888967 24712 solver.cpp:219] Iteration 900 (1436.29 iter/s, 0.0696238s/100 iters), loss = 0.819895
I0428 19:41:00.888993 24712 solver.cpp:238]     Train net output #0: loss = 0.819895 (* 1 = 0.819895 loss)
I0428 19:41:00.889004 24712 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:41:00.914089 24718 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:00.961304 24712 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:41:00.962025 24712 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:41:00.962666 24712 solver.cpp:311] Iteration 1000, loss = 0.880828
I0428 19:41:00.962709 24712 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:41:01.021986 24719 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:41:01.022462 24712 solver.cpp:398]     Test net output #0: accuracy = 0.765
I0428 19:41:01.022506 24712 solver.cpp:398]     Test net output #1: loss = 0.81327 (* 1 = 0.81327 loss)
I0428 19:41:01.022524 24712 solver.cpp:316] Optimization Done.
I0428 19:41:01.022529 24712 caffe.cpp:259] Optimization Done.
