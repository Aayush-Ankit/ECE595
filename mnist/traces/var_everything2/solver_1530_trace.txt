I0428 20:29:55.061839  3605 caffe.cpp:218] Using GPUs 0
I0428 20:29:55.102489  3605 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:29:55.606365  3605 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1530.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:29:55.606518  3605 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1530.prototxt
I0428 20:29:55.606884  3605 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:29:55.606900  3605 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:29:55.606987  3605 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:29:55.607059  3605 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:55.607148  3605 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:29:55.607172  3605 net.cpp:86] Creating Layer mnist
I0428 20:29:55.607179  3605 net.cpp:382] mnist -> data
I0428 20:29:55.607199  3605 net.cpp:382] mnist -> label
I0428 20:29:55.608247  3605 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:29:55.610838  3605 net.cpp:124] Setting up mnist
I0428 20:29:55.610855  3605 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:29:55.610862  3605 net.cpp:131] Top shape: 64 (64)
I0428 20:29:55.610865  3605 net.cpp:139] Memory required for data: 200960
I0428 20:29:55.610872  3605 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:55.610888  3605 net.cpp:86] Creating Layer conv0
I0428 20:29:55.610893  3605 net.cpp:408] conv0 <- data
I0428 20:29:55.610929  3605 net.cpp:382] conv0 -> conv0
I0428 20:29:55.852018  3605 net.cpp:124] Setting up conv0
I0428 20:29:55.852044  3605 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:29:55.852048  3605 net.cpp:139] Memory required for data: 14946560
I0428 20:29:55.852113  3605 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:55.852126  3605 net.cpp:86] Creating Layer pool0
I0428 20:29:55.852131  3605 net.cpp:408] pool0 <- conv0
I0428 20:29:55.852136  3605 net.cpp:382] pool0 -> pool0
I0428 20:29:55.852183  3605 net.cpp:124] Setting up pool0
I0428 20:29:55.852191  3605 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:29:55.852195  3605 net.cpp:139] Memory required for data: 18632960
I0428 20:29:55.852197  3605 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:55.852207  3605 net.cpp:86] Creating Layer conv1
I0428 20:29:55.852211  3605 net.cpp:408] conv1 <- pool0
I0428 20:29:55.852216  3605 net.cpp:382] conv1 -> conv1
I0428 20:29:55.854328  3605 net.cpp:124] Setting up conv1
I0428 20:29:55.854344  3605 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:29:55.854348  3605 net.cpp:139] Memory required for data: 18796800
I0428 20:29:55.854357  3605 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:55.854364  3605 net.cpp:86] Creating Layer pool1
I0428 20:29:55.854368  3605 net.cpp:408] pool1 <- conv1
I0428 20:29:55.854373  3605 net.cpp:382] pool1 -> pool1
I0428 20:29:55.854410  3605 net.cpp:124] Setting up pool1
I0428 20:29:55.854435  3605 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:29:55.854439  3605 net.cpp:139] Memory required for data: 18837760
I0428 20:29:55.854441  3605 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:55.854449  3605 net.cpp:86] Creating Layer ip1
I0428 20:29:55.854452  3605 net.cpp:408] ip1 <- pool1
I0428 20:29:55.854456  3605 net.cpp:382] ip1 -> ip1
I0428 20:29:55.855499  3605 net.cpp:124] Setting up ip1
I0428 20:29:55.855512  3605 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:29:55.855515  3605 net.cpp:139] Memory required for data: 18850560
I0428 20:29:55.855525  3605 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:55.855545  3605 net.cpp:86] Creating Layer relu1
I0428 20:29:55.855547  3605 net.cpp:408] relu1 <- ip1
I0428 20:29:55.855551  3605 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:55.855727  3605 net.cpp:124] Setting up relu1
I0428 20:29:55.855736  3605 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:29:55.855738  3605 net.cpp:139] Memory required for data: 18863360
I0428 20:29:55.855741  3605 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:55.855749  3605 net.cpp:86] Creating Layer ip2
I0428 20:29:55.855752  3605 net.cpp:408] ip2 <- ip1
I0428 20:29:55.855756  3605 net.cpp:382] ip2 -> ip2
I0428 20:29:55.855854  3605 net.cpp:124] Setting up ip2
I0428 20:29:55.855859  3605 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:55.855862  3605 net.cpp:139] Memory required for data: 18865920
I0428 20:29:55.855867  3605 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:55.855873  3605 net.cpp:86] Creating Layer relu2
I0428 20:29:55.855876  3605 net.cpp:408] relu2 <- ip2
I0428 20:29:55.855883  3605 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:55.856623  3605 net.cpp:124] Setting up relu2
I0428 20:29:55.856636  3605 net.cpp:131] Top shape: 64 10 (640)
I0428 20:29:55.856639  3605 net.cpp:139] Memory required for data: 18868480
I0428 20:29:55.856642  3605 layer_factory.hpp:77] Creating layer loss
I0428 20:29:55.856649  3605 net.cpp:86] Creating Layer loss
I0428 20:29:55.856653  3605 net.cpp:408] loss <- ip2
I0428 20:29:55.856657  3605 net.cpp:408] loss <- label
I0428 20:29:55.856662  3605 net.cpp:382] loss -> loss
I0428 20:29:55.856678  3605 layer_factory.hpp:77] Creating layer loss
I0428 20:29:55.857012  3605 net.cpp:124] Setting up loss
I0428 20:29:55.857036  3605 net.cpp:131] Top shape: (1)
I0428 20:29:55.857039  3605 net.cpp:134]     with loss weight 1
I0428 20:29:55.857053  3605 net.cpp:139] Memory required for data: 18868484
I0428 20:29:55.857056  3605 net.cpp:200] loss needs backward computation.
I0428 20:29:55.857059  3605 net.cpp:200] relu2 needs backward computation.
I0428 20:29:55.857062  3605 net.cpp:200] ip2 needs backward computation.
I0428 20:29:55.857065  3605 net.cpp:200] relu1 needs backward computation.
I0428 20:29:55.857067  3605 net.cpp:200] ip1 needs backward computation.
I0428 20:29:55.857080  3605 net.cpp:200] pool1 needs backward computation.
I0428 20:29:55.857084  3605 net.cpp:200] conv1 needs backward computation.
I0428 20:29:55.857086  3605 net.cpp:200] pool0 needs backward computation.
I0428 20:29:55.857089  3605 net.cpp:200] conv0 needs backward computation.
I0428 20:29:55.857092  3605 net.cpp:202] mnist does not need backward computation.
I0428 20:29:55.857096  3605 net.cpp:244] This network produces output loss
I0428 20:29:55.857105  3605 net.cpp:257] Network initialization done.
I0428 20:29:55.857419  3605 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1530.prototxt
I0428 20:29:55.857442  3605 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:29:55.857544  3605 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:29:55.857610  3605 layer_factory.hpp:77] Creating layer mnist
I0428 20:29:55.857656  3605 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:29:55.857668  3605 net.cpp:86] Creating Layer mnist
I0428 20:29:55.857674  3605 net.cpp:382] mnist -> data
I0428 20:29:55.857681  3605 net.cpp:382] mnist -> label
I0428 20:29:55.857782  3605 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:29:55.859729  3605 net.cpp:124] Setting up mnist
I0428 20:29:55.859758  3605 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:29:55.859763  3605 net.cpp:131] Top shape: 100 (100)
I0428 20:29:55.859766  3605 net.cpp:139] Memory required for data: 314000
I0428 20:29:55.859769  3605 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:29:55.859776  3605 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:29:55.859779  3605 net.cpp:408] label_mnist_1_split <- label
I0428 20:29:55.859786  3605 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:29:55.859792  3605 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:29:55.859905  3605 net.cpp:124] Setting up label_mnist_1_split
I0428 20:29:55.859913  3605 net.cpp:131] Top shape: 100 (100)
I0428 20:29:55.859917  3605 net.cpp:131] Top shape: 100 (100)
I0428 20:29:55.859920  3605 net.cpp:139] Memory required for data: 314800
I0428 20:29:55.859923  3605 layer_factory.hpp:77] Creating layer conv0
I0428 20:29:55.859935  3605 net.cpp:86] Creating Layer conv0
I0428 20:29:55.859939  3605 net.cpp:408] conv0 <- data
I0428 20:29:55.859946  3605 net.cpp:382] conv0 -> conv0
I0428 20:29:55.861825  3605 net.cpp:124] Setting up conv0
I0428 20:29:55.861855  3605 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:29:55.861858  3605 net.cpp:139] Memory required for data: 23354800
I0428 20:29:55.861866  3605 layer_factory.hpp:77] Creating layer pool0
I0428 20:29:55.861874  3605 net.cpp:86] Creating Layer pool0
I0428 20:29:55.861892  3605 net.cpp:408] pool0 <- conv0
I0428 20:29:55.861896  3605 net.cpp:382] pool0 -> pool0
I0428 20:29:55.861932  3605 net.cpp:124] Setting up pool0
I0428 20:29:55.861937  3605 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:29:55.861939  3605 net.cpp:139] Memory required for data: 29114800
I0428 20:29:55.861943  3605 layer_factory.hpp:77] Creating layer conv1
I0428 20:29:55.861951  3605 net.cpp:86] Creating Layer conv1
I0428 20:29:55.861955  3605 net.cpp:408] conv1 <- pool0
I0428 20:29:55.861960  3605 net.cpp:382] conv1 -> conv1
I0428 20:29:55.863785  3605 net.cpp:124] Setting up conv1
I0428 20:29:55.863798  3605 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:29:55.863802  3605 net.cpp:139] Memory required for data: 29370800
I0428 20:29:55.863811  3605 layer_factory.hpp:77] Creating layer pool1
I0428 20:29:55.863826  3605 net.cpp:86] Creating Layer pool1
I0428 20:29:55.863828  3605 net.cpp:408] pool1 <- conv1
I0428 20:29:55.863833  3605 net.cpp:382] pool1 -> pool1
I0428 20:29:55.863873  3605 net.cpp:124] Setting up pool1
I0428 20:29:55.863881  3605 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:29:55.863891  3605 net.cpp:139] Memory required for data: 29434800
I0428 20:29:55.863894  3605 layer_factory.hpp:77] Creating layer ip1
I0428 20:29:55.863907  3605 net.cpp:86] Creating Layer ip1
I0428 20:29:55.863910  3605 net.cpp:408] ip1 <- pool1
I0428 20:29:55.863915  3605 net.cpp:382] ip1 -> ip1
I0428 20:29:55.864087  3605 net.cpp:124] Setting up ip1
I0428 20:29:55.864094  3605 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:29:55.864097  3605 net.cpp:139] Memory required for data: 29454800
I0428 20:29:55.864104  3605 layer_factory.hpp:77] Creating layer relu1
I0428 20:29:55.864109  3605 net.cpp:86] Creating Layer relu1
I0428 20:29:55.864112  3605 net.cpp:408] relu1 <- ip1
I0428 20:29:55.864117  3605 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:29:55.864271  3605 net.cpp:124] Setting up relu1
I0428 20:29:55.864279  3605 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:29:55.864282  3605 net.cpp:139] Memory required for data: 29474800
I0428 20:29:55.864285  3605 layer_factory.hpp:77] Creating layer ip2
I0428 20:29:55.864292  3605 net.cpp:86] Creating Layer ip2
I0428 20:29:55.864296  3605 net.cpp:408] ip2 <- ip1
I0428 20:29:55.864301  3605 net.cpp:382] ip2 -> ip2
I0428 20:29:55.864431  3605 net.cpp:124] Setting up ip2
I0428 20:29:55.864441  3605 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:55.864457  3605 net.cpp:139] Memory required for data: 29478800
I0428 20:29:55.864469  3605 layer_factory.hpp:77] Creating layer relu2
I0428 20:29:55.864473  3605 net.cpp:86] Creating Layer relu2
I0428 20:29:55.864476  3605 net.cpp:408] relu2 <- ip2
I0428 20:29:55.864481  3605 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:29:55.864655  3605 net.cpp:124] Setting up relu2
I0428 20:29:55.864665  3605 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:55.864673  3605 net.cpp:139] Memory required for data: 29482800
I0428 20:29:55.864677  3605 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:29:55.864682  3605 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:29:55.864686  3605 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:29:55.864706  3605 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:29:55.864737  3605 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:29:55.864778  3605 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:29:55.864785  3605 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:55.864794  3605 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:29:55.864797  3605 net.cpp:139] Memory required for data: 29490800
I0428 20:29:55.864800  3605 layer_factory.hpp:77] Creating layer accuracy
I0428 20:29:55.864805  3605 net.cpp:86] Creating Layer accuracy
I0428 20:29:55.864814  3605 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:29:55.864836  3605 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:29:55.864842  3605 net.cpp:382] accuracy -> accuracy
I0428 20:29:55.864850  3605 net.cpp:124] Setting up accuracy
I0428 20:29:55.864855  3605 net.cpp:131] Top shape: (1)
I0428 20:29:55.864857  3605 net.cpp:139] Memory required for data: 29490804
I0428 20:29:55.864861  3605 layer_factory.hpp:77] Creating layer loss
I0428 20:29:55.864866  3605 net.cpp:86] Creating Layer loss
I0428 20:29:55.864871  3605 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:29:55.864874  3605 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:29:55.864878  3605 net.cpp:382] loss -> loss
I0428 20:29:55.864884  3605 layer_factory.hpp:77] Creating layer loss
I0428 20:29:55.865280  3605 net.cpp:124] Setting up loss
I0428 20:29:55.865289  3605 net.cpp:131] Top shape: (1)
I0428 20:29:55.865312  3605 net.cpp:134]     with loss weight 1
I0428 20:29:55.865325  3605 net.cpp:139] Memory required for data: 29490808
I0428 20:29:55.865329  3605 net.cpp:200] loss needs backward computation.
I0428 20:29:55.865332  3605 net.cpp:202] accuracy does not need backward computation.
I0428 20:29:55.865341  3605 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:29:55.865345  3605 net.cpp:200] relu2 needs backward computation.
I0428 20:29:55.865347  3605 net.cpp:200] ip2 needs backward computation.
I0428 20:29:55.865350  3605 net.cpp:200] relu1 needs backward computation.
I0428 20:29:55.865352  3605 net.cpp:200] ip1 needs backward computation.
I0428 20:29:55.865355  3605 net.cpp:200] pool1 needs backward computation.
I0428 20:29:55.865358  3605 net.cpp:200] conv1 needs backward computation.
I0428 20:29:55.865361  3605 net.cpp:200] pool0 needs backward computation.
I0428 20:29:55.865365  3605 net.cpp:200] conv0 needs backward computation.
I0428 20:29:55.865368  3605 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:29:55.865371  3605 net.cpp:202] mnist does not need backward computation.
I0428 20:29:55.865375  3605 net.cpp:244] This network produces output accuracy
I0428 20:29:55.865377  3605 net.cpp:244] This network produces output loss
I0428 20:29:55.865388  3605 net.cpp:257] Network initialization done.
I0428 20:29:55.865439  3605 solver.cpp:56] Solver scaffolding done.
I0428 20:29:55.865772  3605 caffe.cpp:248] Starting Optimization
I0428 20:29:55.865778  3605 solver.cpp:273] Solving LeNet
I0428 20:29:55.865780  3605 solver.cpp:274] Learning Rate Policy: inv
I0428 20:29:55.866611  3605 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:29:55.873564  3605 blocking_queue.cpp:49] Waiting for data
I0428 20:29:55.972818  3624 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:55.974072  3605 solver.cpp:398]     Test net output #0: accuracy = 0.2001
I0428 20:29:55.974112  3605 solver.cpp:398]     Test net output #1: loss = 2.24193 (* 1 = 2.24193 loss)
I0428 20:29:55.978833  3605 solver.cpp:219] Iteration 0 (0 iter/s, 0.113008s/100 iters), loss = 2.26871
I0428 20:29:55.978857  3605 solver.cpp:238]     Train net output #0: loss = 2.26871 (* 1 = 2.26871 loss)
I0428 20:29:55.978866  3605 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:29:56.190497  3605 solver.cpp:219] Iteration 100 (472.555 iter/s, 0.211616s/100 iters), loss = 0.424996
I0428 20:29:56.190544  3605 solver.cpp:238]     Train net output #0: loss = 0.424996 (* 1 = 0.424996 loss)
I0428 20:29:56.190557  3605 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:29:56.401749  3605 solver.cpp:219] Iteration 200 (473.51 iter/s, 0.211189s/100 iters), loss = 0.320157
I0428 20:29:56.401793  3605 solver.cpp:238]     Train net output #0: loss = 0.320157 (* 1 = 0.320157 loss)
I0428 20:29:56.401803  3605 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:29:56.614856  3605 solver.cpp:219] Iteration 300 (469.384 iter/s, 0.213045s/100 iters), loss = 0.358571
I0428 20:29:56.614903  3605 solver.cpp:238]     Train net output #0: loss = 0.358571 (* 1 = 0.358571 loss)
I0428 20:29:56.614915  3605 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:29:56.830258  3605 solver.cpp:219] Iteration 400 (464.388 iter/s, 0.215337s/100 iters), loss = 0.569934
I0428 20:29:56.830307  3605 solver.cpp:238]     Train net output #0: loss = 0.569934 (* 1 = 0.569934 loss)
I0428 20:29:56.830319  3605 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:29:57.045047  3605 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:29:57.145683  3624 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:57.149171  3605 solver.cpp:398]     Test net output #0: accuracy = 0.8744
I0428 20:29:57.149199  3605 solver.cpp:398]     Test net output #1: loss = 0.326619 (* 1 = 0.326619 loss)
I0428 20:29:57.151096  3605 solver.cpp:219] Iteration 500 (311.749 iter/s, 0.320771s/100 iters), loss = 0.504739
I0428 20:29:57.151124  3605 solver.cpp:238]     Train net output #0: loss = 0.504739 (* 1 = 0.504739 loss)
I0428 20:29:57.151131  3605 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:29:57.366498  3605 solver.cpp:219] Iteration 600 (464.353 iter/s, 0.215353s/100 iters), loss = 0.159227
I0428 20:29:57.366549  3605 solver.cpp:238]     Train net output #0: loss = 0.159227 (* 1 = 0.159227 loss)
I0428 20:29:57.366560  3605 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:29:57.587708  3605 solver.cpp:219] Iteration 700 (452.202 iter/s, 0.22114s/100 iters), loss = 0.305327
I0428 20:29:57.587764  3605 solver.cpp:238]     Train net output #0: loss = 0.305327 (* 1 = 0.305327 loss)
I0428 20:29:57.587776  3605 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:29:57.805526  3605 solver.cpp:219] Iteration 800 (459.25 iter/s, 0.217746s/100 iters), loss = 0.395513
I0428 20:29:57.805567  3605 solver.cpp:238]     Train net output #0: loss = 0.395513 (* 1 = 0.395513 loss)
I0428 20:29:57.805578  3605 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:29:58.019603  3605 solver.cpp:219] Iteration 900 (467.248 iter/s, 0.214019s/100 iters), loss = 0.261466
I0428 20:29:58.019652  3605 solver.cpp:238]     Train net output #0: loss = 0.261466 (* 1 = 0.261466 loss)
I0428 20:29:58.019664  3605 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:29:58.090665  3623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:58.230003  3605 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:29:58.232240  3605 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:29:58.233717  3605 solver.cpp:311] Iteration 1000, loss = 0.197336
I0428 20:29:58.233754  3605 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:29:58.336632  3624 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:29:58.338126  3605 solver.cpp:398]     Test net output #0: accuracy = 0.8832
I0428 20:29:58.338152  3605 solver.cpp:398]     Test net output #1: loss = 0.294785 (* 1 = 0.294785 loss)
I0428 20:29:58.338160  3605 solver.cpp:316] Optimization Done.
I0428 20:29:58.338165  3605 caffe.cpp:259] Optimization Done.
