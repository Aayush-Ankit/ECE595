I0428 19:28:23.952857 21616 caffe.cpp:218] Using GPUs 0
I0428 19:28:23.994334 21616 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:24.508545 21616 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test24.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:24.508682 21616 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test24.prototxt
I0428 19:28:24.509009 21616 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:24.509028 21616 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:24.509101 21616 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:24.509167 21616 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:24.509266 21616 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:24.509289 21616 net.cpp:86] Creating Layer mnist
I0428 19:28:24.509296 21616 net.cpp:382] mnist -> data
I0428 19:28:24.509320 21616 net.cpp:382] mnist -> label
I0428 19:28:24.510402 21616 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:24.512854 21616 net.cpp:124] Setting up mnist
I0428 19:28:24.512872 21616 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:24.512886 21616 net.cpp:131] Top shape: 64 (64)
I0428 19:28:24.512888 21616 net.cpp:139] Memory required for data: 200960
I0428 19:28:24.512897 21616 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:24.512908 21616 net.cpp:86] Creating Layer ip1
I0428 19:28:24.512913 21616 net.cpp:408] ip1 <- data
I0428 19:28:24.512925 21616 net.cpp:382] ip1 -> ip1
I0428 19:28:24.513247 21616 net.cpp:124] Setting up ip1
I0428 19:28:24.513258 21616 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:24.513262 21616 net.cpp:139] Memory required for data: 207360
I0428 19:28:24.513275 21616 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:24.513283 21616 net.cpp:86] Creating Layer relu1
I0428 19:28:24.513288 21616 net.cpp:408] relu1 <- ip1
I0428 19:28:24.513293 21616 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:24.798591 21616 net.cpp:124] Setting up relu1
I0428 19:28:24.798622 21616 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:24.798627 21616 net.cpp:139] Memory required for data: 213760
I0428 19:28:24.798632 21616 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:24.798645 21616 net.cpp:86] Creating Layer ip2
I0428 19:28:24.798672 21616 net.cpp:408] ip2 <- ip1
I0428 19:28:24.798681 21616 net.cpp:382] ip2 -> ip2
I0428 19:28:24.799746 21616 net.cpp:124] Setting up ip2
I0428 19:28:24.799760 21616 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:24.799764 21616 net.cpp:139] Memory required for data: 220160
I0428 19:28:24.799774 21616 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:24.799783 21616 net.cpp:86] Creating Layer relu2
I0428 19:28:24.799787 21616 net.cpp:408] relu2 <- ip2
I0428 19:28:24.799792 21616 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:24.800587 21616 net.cpp:124] Setting up relu2
I0428 19:28:24.800601 21616 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:24.800606 21616 net.cpp:139] Memory required for data: 226560
I0428 19:28:24.800609 21616 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:24.800617 21616 net.cpp:86] Creating Layer ip3
I0428 19:28:24.800621 21616 net.cpp:408] ip3 <- ip2
I0428 19:28:24.800626 21616 net.cpp:382] ip3 -> ip3
I0428 19:28:24.800729 21616 net.cpp:124] Setting up ip3
I0428 19:28:24.800737 21616 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:24.800741 21616 net.cpp:139] Memory required for data: 229120
I0428 19:28:24.800750 21616 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:24.800755 21616 net.cpp:86] Creating Layer relu3
I0428 19:28:24.800758 21616 net.cpp:408] relu3 <- ip3
I0428 19:28:24.800763 21616 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:24.800925 21616 net.cpp:124] Setting up relu3
I0428 19:28:24.800935 21616 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:24.800938 21616 net.cpp:139] Memory required for data: 231680
I0428 19:28:24.800942 21616 layer_factory.hpp:77] Creating layer loss
I0428 19:28:24.800948 21616 net.cpp:86] Creating Layer loss
I0428 19:28:24.800951 21616 net.cpp:408] loss <- ip3
I0428 19:28:24.800956 21616 net.cpp:408] loss <- label
I0428 19:28:24.800962 21616 net.cpp:382] loss -> loss
I0428 19:28:24.800982 21616 layer_factory.hpp:77] Creating layer loss
I0428 19:28:24.801226 21616 net.cpp:124] Setting up loss
I0428 19:28:24.801236 21616 net.cpp:131] Top shape: (1)
I0428 19:28:24.801239 21616 net.cpp:134]     with loss weight 1
I0428 19:28:24.801255 21616 net.cpp:139] Memory required for data: 231684
I0428 19:28:24.801259 21616 net.cpp:200] loss needs backward computation.
I0428 19:28:24.801262 21616 net.cpp:200] relu3 needs backward computation.
I0428 19:28:24.801265 21616 net.cpp:200] ip3 needs backward computation.
I0428 19:28:24.801268 21616 net.cpp:200] relu2 needs backward computation.
I0428 19:28:24.801271 21616 net.cpp:200] ip2 needs backward computation.
I0428 19:28:24.801275 21616 net.cpp:200] relu1 needs backward computation.
I0428 19:28:24.801277 21616 net.cpp:200] ip1 needs backward computation.
I0428 19:28:24.801281 21616 net.cpp:202] mnist does not need backward computation.
I0428 19:28:24.801285 21616 net.cpp:244] This network produces output loss
I0428 19:28:24.801291 21616 net.cpp:257] Network initialization done.
I0428 19:28:24.801532 21616 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test24.prototxt
I0428 19:28:24.801553 21616 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:24.801622 21616 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:24.801692 21616 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:24.801738 21616 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:24.801749 21616 net.cpp:86] Creating Layer mnist
I0428 19:28:24.801754 21616 net.cpp:382] mnist -> data
I0428 19:28:24.801762 21616 net.cpp:382] mnist -> label
I0428 19:28:24.801846 21616 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:24.803750 21616 net.cpp:124] Setting up mnist
I0428 19:28:24.803762 21616 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:24.803767 21616 net.cpp:131] Top shape: 100 (100)
I0428 19:28:24.803771 21616 net.cpp:139] Memory required for data: 314000
I0428 19:28:24.803776 21616 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:24.803786 21616 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:24.803789 21616 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:24.803794 21616 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:24.803802 21616 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:24.803838 21616 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:24.803844 21616 net.cpp:131] Top shape: 100 (100)
I0428 19:28:24.803848 21616 net.cpp:131] Top shape: 100 (100)
I0428 19:28:24.803851 21616 net.cpp:139] Memory required for data: 314800
I0428 19:28:24.803855 21616 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:24.803861 21616 net.cpp:86] Creating Layer ip1
I0428 19:28:24.803864 21616 net.cpp:408] ip1 <- data
I0428 19:28:24.803869 21616 net.cpp:382] ip1 -> ip1
I0428 19:28:24.804143 21616 net.cpp:124] Setting up ip1
I0428 19:28:24.804152 21616 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:24.804155 21616 net.cpp:139] Memory required for data: 324800
I0428 19:28:24.804164 21616 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:24.804169 21616 net.cpp:86] Creating Layer relu1
I0428 19:28:24.804172 21616 net.cpp:408] relu1 <- ip1
I0428 19:28:24.804177 21616 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:24.805099 21616 net.cpp:124] Setting up relu1
I0428 19:28:24.805112 21616 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:24.805116 21616 net.cpp:139] Memory required for data: 334800
I0428 19:28:24.805120 21616 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:24.805129 21616 net.cpp:86] Creating Layer ip2
I0428 19:28:24.805146 21616 net.cpp:408] ip2 <- ip1
I0428 19:28:24.805152 21616 net.cpp:382] ip2 -> ip2
I0428 19:28:24.805248 21616 net.cpp:124] Setting up ip2
I0428 19:28:24.805255 21616 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:24.805259 21616 net.cpp:139] Memory required for data: 344800
I0428 19:28:24.805268 21616 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:24.805271 21616 net.cpp:86] Creating Layer relu2
I0428 19:28:24.805275 21616 net.cpp:408] relu2 <- ip2
I0428 19:28:24.805279 21616 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:24.805434 21616 net.cpp:124] Setting up relu2
I0428 19:28:24.805443 21616 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:24.805446 21616 net.cpp:139] Memory required for data: 354800
I0428 19:28:24.805449 21616 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:24.805454 21616 net.cpp:86] Creating Layer ip3
I0428 19:28:24.805457 21616 net.cpp:408] ip3 <- ip2
I0428 19:28:24.805462 21616 net.cpp:382] ip3 -> ip3
I0428 19:28:24.805578 21616 net.cpp:124] Setting up ip3
I0428 19:28:24.805586 21616 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:24.805590 21616 net.cpp:139] Memory required for data: 358800
I0428 19:28:24.805598 21616 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:24.805603 21616 net.cpp:86] Creating Layer relu3
I0428 19:28:24.805605 21616 net.cpp:408] relu3 <- ip3
I0428 19:28:24.805609 21616 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:24.805759 21616 net.cpp:124] Setting up relu3
I0428 19:28:24.805768 21616 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:24.805770 21616 net.cpp:139] Memory required for data: 362800
I0428 19:28:24.805774 21616 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:24.805780 21616 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:24.805783 21616 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:24.805788 21616 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:24.805794 21616 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:24.805843 21616 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:24.805850 21616 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:24.805855 21616 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:24.805857 21616 net.cpp:139] Memory required for data: 370800
I0428 19:28:24.805861 21616 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:24.805866 21616 net.cpp:86] Creating Layer accuracy
I0428 19:28:24.805871 21616 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:24.805874 21616 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:24.805879 21616 net.cpp:382] accuracy -> accuracy
I0428 19:28:24.805886 21616 net.cpp:124] Setting up accuracy
I0428 19:28:24.805891 21616 net.cpp:131] Top shape: (1)
I0428 19:28:24.805893 21616 net.cpp:139] Memory required for data: 370804
I0428 19:28:24.805896 21616 layer_factory.hpp:77] Creating layer loss
I0428 19:28:24.805901 21616 net.cpp:86] Creating Layer loss
I0428 19:28:24.805903 21616 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:24.805907 21616 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:24.805912 21616 net.cpp:382] loss -> loss
I0428 19:28:24.805917 21616 layer_factory.hpp:77] Creating layer loss
I0428 19:28:24.806187 21616 net.cpp:124] Setting up loss
I0428 19:28:24.806197 21616 net.cpp:131] Top shape: (1)
I0428 19:28:24.806201 21616 net.cpp:134]     with loss weight 1
I0428 19:28:24.806207 21616 net.cpp:139] Memory required for data: 370808
I0428 19:28:24.806211 21616 net.cpp:200] loss needs backward computation.
I0428 19:28:24.806216 21616 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:24.806219 21616 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:24.806222 21616 net.cpp:200] relu3 needs backward computation.
I0428 19:28:24.806226 21616 net.cpp:200] ip3 needs backward computation.
I0428 19:28:24.806228 21616 net.cpp:200] relu2 needs backward computation.
I0428 19:28:24.806231 21616 net.cpp:200] ip2 needs backward computation.
I0428 19:28:24.806241 21616 net.cpp:200] relu1 needs backward computation.
I0428 19:28:24.806243 21616 net.cpp:200] ip1 needs backward computation.
I0428 19:28:24.806247 21616 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:24.806252 21616 net.cpp:202] mnist does not need backward computation.
I0428 19:28:24.806254 21616 net.cpp:244] This network produces output accuracy
I0428 19:28:24.806258 21616 net.cpp:244] This network produces output loss
I0428 19:28:24.806267 21616 net.cpp:257] Network initialization done.
I0428 19:28:24.806298 21616 solver.cpp:56] Solver scaffolding done.
I0428 19:28:24.806504 21616 caffe.cpp:248] Starting Optimization
I0428 19:28:24.806509 21616 solver.cpp:273] Solving LeNet
I0428 19:28:24.806512 21616 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:24.807255 21616 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:24.809731 21616 blocking_queue.cpp:49] Waiting for data
I0428 19:28:24.865285 21623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:24.865661 21616 solver.cpp:398]     Test net output #0: accuracy = 0.0802
I0428 19:28:24.865680 21616 solver.cpp:398]     Test net output #1: loss = 2.30738 (* 1 = 2.30738 loss)
I0428 19:28:24.866261 21616 solver.cpp:219] Iteration 0 (-1.57773e-31 iter/s, 0.0597146s/100 iters), loss = 2.31051
I0428 19:28:24.866281 21616 solver.cpp:238]     Train net output #0: loss = 2.31051 (* 1 = 2.31051 loss)
I0428 19:28:24.866292 21616 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:24.924203 21616 solver.cpp:219] Iteration 100 (1726.72 iter/s, 0.0579133s/100 iters), loss = 0.81632
I0428 19:28:24.924226 21616 solver.cpp:238]     Train net output #0: loss = 0.81632 (* 1 = 0.81632 loss)
I0428 19:28:24.924248 21616 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:24.972573 21616 solver.cpp:219] Iteration 200 (2068.73 iter/s, 0.0483389s/100 iters), loss = 0.406135
I0428 19:28:24.972595 21616 solver.cpp:238]     Train net output #0: loss = 0.406135 (* 1 = 0.406135 loss)
I0428 19:28:24.972618 21616 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:25.015990 21616 solver.cpp:219] Iteration 300 (2304.84 iter/s, 0.0433869s/100 iters), loss = 0.332531
I0428 19:28:25.016011 21616 solver.cpp:238]     Train net output #0: loss = 0.332531 (* 1 = 0.332531 loss)
I0428 19:28:25.016032 21616 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:25.061915 21616 solver.cpp:219] Iteration 400 (2178.81 iter/s, 0.0458967s/100 iters), loss = 0.260304
I0428 19:28:25.061938 21616 solver.cpp:238]     Train net output #0: loss = 0.260304 (* 1 = 0.260304 loss)
I0428 19:28:25.061959 21616 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:25.106811 21616 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:25.161883 21623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:25.162264 21616 solver.cpp:398]     Test net output #0: accuracy = 0.9147
I0428 19:28:25.162286 21616 solver.cpp:398]     Test net output #1: loss = 0.292266 (* 1 = 0.292266 loss)
I0428 19:28:25.162724 21616 solver.cpp:219] Iteration 500 (992.311 iter/s, 0.100775s/100 iters), loss = 0.326278
I0428 19:28:25.162746 21616 solver.cpp:238]     Train net output #0: loss = 0.326278 (* 1 = 0.326278 loss)
I0428 19:28:25.162752 21616 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:25.218771 21616 solver.cpp:219] Iteration 600 (1785.17 iter/s, 0.0560169s/100 iters), loss = 0.257022
I0428 19:28:25.218797 21616 solver.cpp:238]     Train net output #0: loss = 0.257022 (* 1 = 0.257022 loss)
I0428 19:28:25.218818 21616 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:25.266794 21616 solver.cpp:219] Iteration 700 (2083.78 iter/s, 0.0479897s/100 iters), loss = 0.420901
I0428 19:28:25.266818 21616 solver.cpp:238]     Train net output #0: loss = 0.420901 (* 1 = 0.420901 loss)
I0428 19:28:25.266839 21616 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:25.310196 21616 solver.cpp:219] Iteration 800 (2305.66 iter/s, 0.0433715s/100 iters), loss = 0.396857
I0428 19:28:25.310217 21616 solver.cpp:238]     Train net output #0: loss = 0.396857 (* 1 = 0.396857 loss)
I0428 19:28:25.310240 21616 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:25.327997 21616 blocking_queue.cpp:49] Waiting for data
I0428 19:28:25.353497 21616 solver.cpp:219] Iteration 900 (2311.01 iter/s, 0.0432712s/100 iters), loss = 0.312572
I0428 19:28:25.353516 21616 solver.cpp:238]     Train net output #0: loss = 0.312572 (* 1 = 0.312572 loss)
I0428 19:28:25.353539 21616 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:25.369207 21622 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:25.397397 21616 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:25.398123 21616 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:25.398696 21616 solver.cpp:311] Iteration 1000, loss = 0.342173
I0428 19:28:25.398715 21616 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:25.496465 21623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:25.497047 21616 solver.cpp:398]     Test net output #0: accuracy = 0.9235
I0428 19:28:25.497077 21616 solver.cpp:398]     Test net output #1: loss = 0.255451 (* 1 = 0.255451 loss)
I0428 19:28:25.497088 21616 solver.cpp:316] Optimization Done.
I0428 19:28:25.497095 21616 caffe.cpp:259] Optimization Done.
