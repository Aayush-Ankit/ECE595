I0428 20:04:08.751323 30328 caffe.cpp:218] Using GPUs 0
I0428 20:04:08.779901 30328 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:09.226398 30328 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test966.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:09.226532 30328 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test966.prototxt
I0428 20:04:09.226852 30328 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:09.226866 30328 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:09.226940 30328 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:09.226999 30328 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:09.227080 30328 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:09.227099 30328 net.cpp:86] Creating Layer mnist
I0428 20:04:09.227105 30328 net.cpp:382] mnist -> data
I0428 20:04:09.227123 30328 net.cpp:382] mnist -> label
I0428 20:04:09.228171 30328 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:09.230453 30328 net.cpp:124] Setting up mnist
I0428 20:04:09.230497 30328 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:09.230502 30328 net.cpp:131] Top shape: 64 (64)
I0428 20:04:09.230505 30328 net.cpp:139] Memory required for data: 200960
I0428 20:04:09.230511 30328 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:09.230525 30328 net.cpp:86] Creating Layer conv0
I0428 20:04:09.230541 30328 net.cpp:408] conv0 <- data
I0428 20:04:09.230551 30328 net.cpp:382] conv0 -> conv0
I0428 20:04:09.463570 30328 net.cpp:124] Setting up conv0
I0428 20:04:09.463614 30328 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:09.463618 30328 net.cpp:139] Memory required for data: 1675520
I0428 20:04:09.463634 30328 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:09.463647 30328 net.cpp:86] Creating Layer pool0
I0428 20:04:09.463651 30328 net.cpp:408] pool0 <- conv0
I0428 20:04:09.463671 30328 net.cpp:382] pool0 -> pool0
I0428 20:04:09.463718 30328 net.cpp:124] Setting up pool0
I0428 20:04:09.463723 30328 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:09.463726 30328 net.cpp:139] Memory required for data: 2044160
I0428 20:04:09.463729 30328 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:09.463740 30328 net.cpp:86] Creating Layer conv1
I0428 20:04:09.463743 30328 net.cpp:408] conv1 <- pool0
I0428 20:04:09.463748 30328 net.cpp:382] conv1 -> conv1
I0428 20:04:09.465847 30328 net.cpp:124] Setting up conv1
I0428 20:04:09.465878 30328 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:09.465883 30328 net.cpp:139] Memory required for data: 3682560
I0428 20:04:09.465891 30328 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:09.465914 30328 net.cpp:86] Creating Layer pool1
I0428 20:04:09.465917 30328 net.cpp:408] pool1 <- conv1
I0428 20:04:09.465937 30328 net.cpp:382] pool1 -> pool1
I0428 20:04:09.465989 30328 net.cpp:124] Setting up pool1
I0428 20:04:09.465997 30328 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:09.466001 30328 net.cpp:139] Memory required for data: 4092160
I0428 20:04:09.466003 30328 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:09.466012 30328 net.cpp:86] Creating Layer ip1
I0428 20:04:09.466014 30328 net.cpp:408] ip1 <- pool1
I0428 20:04:09.466018 30328 net.cpp:382] ip1 -> ip1
I0428 20:04:09.467536 30328 net.cpp:124] Setting up ip1
I0428 20:04:09.467548 30328 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:09.467553 30328 net.cpp:139] Memory required for data: 4104960
I0428 20:04:09.467561 30328 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:09.467567 30328 net.cpp:86] Creating Layer relu1
I0428 20:04:09.467571 30328 net.cpp:408] relu1 <- ip1
I0428 20:04:09.467576 30328 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:09.467754 30328 net.cpp:124] Setting up relu1
I0428 20:04:09.467763 30328 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:09.467767 30328 net.cpp:139] Memory required for data: 4117760
I0428 20:04:09.467770 30328 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:09.467777 30328 net.cpp:86] Creating Layer ip2
I0428 20:04:09.467779 30328 net.cpp:408] ip2 <- ip1
I0428 20:04:09.467784 30328 net.cpp:382] ip2 -> ip2
I0428 20:04:09.467897 30328 net.cpp:124] Setting up ip2
I0428 20:04:09.467921 30328 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:09.467924 30328 net.cpp:139] Memory required for data: 4120320
I0428 20:04:09.467931 30328 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:09.467937 30328 net.cpp:86] Creating Layer relu2
I0428 20:04:09.467941 30328 net.cpp:408] relu2 <- ip2
I0428 20:04:09.467944 30328 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:09.468709 30328 net.cpp:124] Setting up relu2
I0428 20:04:09.468737 30328 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:09.468740 30328 net.cpp:139] Memory required for data: 4122880
I0428 20:04:09.468744 30328 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:09.468751 30328 net.cpp:86] Creating Layer ip3
I0428 20:04:09.468755 30328 net.cpp:408] ip3 <- ip2
I0428 20:04:09.468760 30328 net.cpp:382] ip3 -> ip3
I0428 20:04:09.468883 30328 net.cpp:124] Setting up ip3
I0428 20:04:09.468891 30328 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:09.468894 30328 net.cpp:139] Memory required for data: 4125440
I0428 20:04:09.468902 30328 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:09.468909 30328 net.cpp:86] Creating Layer relu3
I0428 20:04:09.468912 30328 net.cpp:408] relu3 <- ip3
I0428 20:04:09.468916 30328 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:09.469116 30328 net.cpp:124] Setting up relu3
I0428 20:04:09.469125 30328 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:09.469130 30328 net.cpp:139] Memory required for data: 4128000
I0428 20:04:09.469132 30328 layer_factory.hpp:77] Creating layer loss
I0428 20:04:09.469144 30328 net.cpp:86] Creating Layer loss
I0428 20:04:09.469148 30328 net.cpp:408] loss <- ip3
I0428 20:04:09.469166 30328 net.cpp:408] loss <- label
I0428 20:04:09.469172 30328 net.cpp:382] loss -> loss
I0428 20:04:09.469189 30328 layer_factory.hpp:77] Creating layer loss
I0428 20:04:09.469467 30328 net.cpp:124] Setting up loss
I0428 20:04:09.469476 30328 net.cpp:131] Top shape: (1)
I0428 20:04:09.469478 30328 net.cpp:134]     with loss weight 1
I0428 20:04:09.469492 30328 net.cpp:139] Memory required for data: 4128004
I0428 20:04:09.469496 30328 net.cpp:200] loss needs backward computation.
I0428 20:04:09.469499 30328 net.cpp:200] relu3 needs backward computation.
I0428 20:04:09.469502 30328 net.cpp:200] ip3 needs backward computation.
I0428 20:04:09.469504 30328 net.cpp:200] relu2 needs backward computation.
I0428 20:04:09.469507 30328 net.cpp:200] ip2 needs backward computation.
I0428 20:04:09.469509 30328 net.cpp:200] relu1 needs backward computation.
I0428 20:04:09.469513 30328 net.cpp:200] ip1 needs backward computation.
I0428 20:04:09.469516 30328 net.cpp:200] pool1 needs backward computation.
I0428 20:04:09.469518 30328 net.cpp:200] conv1 needs backward computation.
I0428 20:04:09.469522 30328 net.cpp:200] pool0 needs backward computation.
I0428 20:04:09.469525 30328 net.cpp:200] conv0 needs backward computation.
I0428 20:04:09.469528 30328 net.cpp:202] mnist does not need backward computation.
I0428 20:04:09.469532 30328 net.cpp:244] This network produces output loss
I0428 20:04:09.469539 30328 net.cpp:257] Network initialization done.
I0428 20:04:09.469841 30328 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test966.prototxt
I0428 20:04:09.469866 30328 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:09.469990 30328 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:09.470108 30328 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:09.470154 30328 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:09.470166 30328 net.cpp:86] Creating Layer mnist
I0428 20:04:09.470172 30328 net.cpp:382] mnist -> data
I0428 20:04:09.470180 30328 net.cpp:382] mnist -> label
I0428 20:04:09.470283 30328 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:09.471390 30328 net.cpp:124] Setting up mnist
I0428 20:04:09.471402 30328 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:09.471408 30328 net.cpp:131] Top shape: 100 (100)
I0428 20:04:09.471411 30328 net.cpp:139] Memory required for data: 314000
I0428 20:04:09.471415 30328 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:09.471426 30328 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:09.471429 30328 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:09.471436 30328 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:09.471442 30328 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:09.471555 30328 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:09.471563 30328 net.cpp:131] Top shape: 100 (100)
I0428 20:04:09.471567 30328 net.cpp:131] Top shape: 100 (100)
I0428 20:04:09.471570 30328 net.cpp:139] Memory required for data: 314800
I0428 20:04:09.471572 30328 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:09.471582 30328 net.cpp:86] Creating Layer conv0
I0428 20:04:09.471585 30328 net.cpp:408] conv0 <- data
I0428 20:04:09.471591 30328 net.cpp:382] conv0 -> conv0
I0428 20:04:09.473279 30328 net.cpp:124] Setting up conv0
I0428 20:04:09.473294 30328 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:09.473309 30328 net.cpp:139] Memory required for data: 2618800
I0428 20:04:09.473317 30328 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:09.473323 30328 net.cpp:86] Creating Layer pool0
I0428 20:04:09.473326 30328 net.cpp:408] pool0 <- conv0
I0428 20:04:09.473335 30328 net.cpp:382] pool0 -> pool0
I0428 20:04:09.473371 30328 net.cpp:124] Setting up pool0
I0428 20:04:09.473377 30328 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:09.473381 30328 net.cpp:139] Memory required for data: 3194800
I0428 20:04:09.473383 30328 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:09.473393 30328 net.cpp:86] Creating Layer conv1
I0428 20:04:09.473397 30328 net.cpp:408] conv1 <- pool0
I0428 20:04:09.473402 30328 net.cpp:382] conv1 -> conv1
I0428 20:04:09.475196 30328 net.cpp:124] Setting up conv1
I0428 20:04:09.475209 30328 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:09.475213 30328 net.cpp:139] Memory required for data: 5754800
I0428 20:04:09.475236 30328 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:09.475244 30328 net.cpp:86] Creating Layer pool1
I0428 20:04:09.475247 30328 net.cpp:408] pool1 <- conv1
I0428 20:04:09.475252 30328 net.cpp:382] pool1 -> pool1
I0428 20:04:09.475289 30328 net.cpp:124] Setting up pool1
I0428 20:04:09.475297 30328 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:09.475306 30328 net.cpp:139] Memory required for data: 6394800
I0428 20:04:09.475309 30328 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:09.475317 30328 net.cpp:86] Creating Layer ip1
I0428 20:04:09.475319 30328 net.cpp:408] ip1 <- pool1
I0428 20:04:09.475325 30328 net.cpp:382] ip1 -> ip1
I0428 20:04:09.475873 30328 net.cpp:124] Setting up ip1
I0428 20:04:09.475880 30328 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:09.475908 30328 net.cpp:139] Memory required for data: 6414800
I0428 20:04:09.475916 30328 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:09.475922 30328 net.cpp:86] Creating Layer relu1
I0428 20:04:09.475925 30328 net.cpp:408] relu1 <- ip1
I0428 20:04:09.475932 30328 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:09.476105 30328 net.cpp:124] Setting up relu1
I0428 20:04:09.476114 30328 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:09.476117 30328 net.cpp:139] Memory required for data: 6434800
I0428 20:04:09.476121 30328 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:09.476130 30328 net.cpp:86] Creating Layer ip2
I0428 20:04:09.476132 30328 net.cpp:408] ip2 <- ip1
I0428 20:04:09.476137 30328 net.cpp:382] ip2 -> ip2
I0428 20:04:09.476258 30328 net.cpp:124] Setting up ip2
I0428 20:04:09.476264 30328 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:09.476267 30328 net.cpp:139] Memory required for data: 6438800
I0428 20:04:09.476274 30328 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:09.476279 30328 net.cpp:86] Creating Layer relu2
I0428 20:04:09.476282 30328 net.cpp:408] relu2 <- ip2
I0428 20:04:09.476287 30328 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:09.476444 30328 net.cpp:124] Setting up relu2
I0428 20:04:09.476454 30328 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:09.476456 30328 net.cpp:139] Memory required for data: 6442800
I0428 20:04:09.476459 30328 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:09.476487 30328 net.cpp:86] Creating Layer ip3
I0428 20:04:09.476502 30328 net.cpp:408] ip3 <- ip2
I0428 20:04:09.476522 30328 net.cpp:382] ip3 -> ip3
I0428 20:04:09.476613 30328 net.cpp:124] Setting up ip3
I0428 20:04:09.476620 30328 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:09.476624 30328 net.cpp:139] Memory required for data: 6446800
I0428 20:04:09.476632 30328 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:09.476642 30328 net.cpp:86] Creating Layer relu3
I0428 20:04:09.476645 30328 net.cpp:408] relu3 <- ip3
I0428 20:04:09.476649 30328 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:09.477469 30328 net.cpp:124] Setting up relu3
I0428 20:04:09.477480 30328 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:09.477499 30328 net.cpp:139] Memory required for data: 6450800
I0428 20:04:09.477502 30328 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:09.477509 30328 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:09.477512 30328 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:09.477517 30328 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:09.477524 30328 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:09.477608 30328 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:09.477615 30328 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:09.477619 30328 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:09.477622 30328 net.cpp:139] Memory required for data: 6458800
I0428 20:04:09.477625 30328 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:09.477632 30328 net.cpp:86] Creating Layer accuracy
I0428 20:04:09.477635 30328 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:09.477638 30328 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:09.477643 30328 net.cpp:382] accuracy -> accuracy
I0428 20:04:09.477650 30328 net.cpp:124] Setting up accuracy
I0428 20:04:09.477653 30328 net.cpp:131] Top shape: (1)
I0428 20:04:09.477656 30328 net.cpp:139] Memory required for data: 6458804
I0428 20:04:09.477660 30328 layer_factory.hpp:77] Creating layer loss
I0428 20:04:09.477664 30328 net.cpp:86] Creating Layer loss
I0428 20:04:09.477668 30328 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:09.477687 30328 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:09.477692 30328 net.cpp:382] loss -> loss
I0428 20:04:09.477699 30328 layer_factory.hpp:77] Creating layer loss
I0428 20:04:09.477951 30328 net.cpp:124] Setting up loss
I0428 20:04:09.477960 30328 net.cpp:131] Top shape: (1)
I0428 20:04:09.477963 30328 net.cpp:134]     with loss weight 1
I0428 20:04:09.477979 30328 net.cpp:139] Memory required for data: 6458808
I0428 20:04:09.477984 30328 net.cpp:200] loss needs backward computation.
I0428 20:04:09.477988 30328 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:09.477993 30328 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:09.477995 30328 net.cpp:200] relu3 needs backward computation.
I0428 20:04:09.477998 30328 net.cpp:200] ip3 needs backward computation.
I0428 20:04:09.478001 30328 net.cpp:200] relu2 needs backward computation.
I0428 20:04:09.478004 30328 net.cpp:200] ip2 needs backward computation.
I0428 20:04:09.478008 30328 net.cpp:200] relu1 needs backward computation.
I0428 20:04:09.478010 30328 net.cpp:200] ip1 needs backward computation.
I0428 20:04:09.478014 30328 net.cpp:200] pool1 needs backward computation.
I0428 20:04:09.478018 30328 net.cpp:200] conv1 needs backward computation.
I0428 20:04:09.478020 30328 net.cpp:200] pool0 needs backward computation.
I0428 20:04:09.478024 30328 net.cpp:200] conv0 needs backward computation.
I0428 20:04:09.478029 30328 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:09.478031 30328 net.cpp:202] mnist does not need backward computation.
I0428 20:04:09.478051 30328 net.cpp:244] This network produces output accuracy
I0428 20:04:09.478055 30328 net.cpp:244] This network produces output loss
I0428 20:04:09.478066 30328 net.cpp:257] Network initialization done.
I0428 20:04:09.478121 30328 solver.cpp:56] Solver scaffolding done.
I0428 20:04:09.478422 30328 caffe.cpp:248] Starting Optimization
I0428 20:04:09.478430 30328 solver.cpp:273] Solving LeNet
I0428 20:04:09.478448 30328 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:09.479378 30328 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:09.484671 30328 blocking_queue.cpp:49] Waiting for data
I0428 20:04:09.554208 30335 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:09.554853 30328 solver.cpp:398]     Test net output #0: accuracy = 0.1094
I0428 20:04:09.554888 30328 solver.cpp:398]     Test net output #1: loss = 2.30667 (* 1 = 2.30667 loss)
I0428 20:04:09.558532 30328 solver.cpp:219] Iteration 0 (-1.01454e-42 iter/s, 0.0800573s/100 iters), loss = 2.30912
I0428 20:04:09.558570 30328 solver.cpp:238]     Train net output #0: loss = 2.30912 (* 1 = 2.30912 loss)
I0428 20:04:09.558580 30328 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:09.715315 30328 solver.cpp:219] Iteration 100 (637.984 iter/s, 0.156744s/100 iters), loss = 1.37521
I0428 20:04:09.715355 30328 solver.cpp:238]     Train net output #0: loss = 1.37521 (* 1 = 1.37521 loss)
I0428 20:04:09.715363 30328 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:09.873438 30328 solver.cpp:219] Iteration 200 (632.575 iter/s, 0.158084s/100 iters), loss = 1.5411
I0428 20:04:09.873479 30328 solver.cpp:238]     Train net output #0: loss = 1.5411 (* 1 = 1.5411 loss)
I0428 20:04:09.873486 30328 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:10.035106 30328 solver.cpp:219] Iteration 300 (618.7 iter/s, 0.161629s/100 iters), loss = 1.13131
I0428 20:04:10.035130 30328 solver.cpp:238]     Train net output #0: loss = 1.13131 (* 1 = 1.13131 loss)
I0428 20:04:10.035135 30328 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:10.192652 30328 solver.cpp:219] Iteration 400 (634.886 iter/s, 0.157509s/100 iters), loss = 1.27858
I0428 20:04:10.192692 30328 solver.cpp:238]     Train net output #0: loss = 1.27858 (* 1 = 1.27858 loss)
I0428 20:04:10.192699 30328 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:10.352501 30328 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:10.428932 30335 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:10.429585 30328 solver.cpp:398]     Test net output #0: accuracy = 0.5495
I0428 20:04:10.429620 30328 solver.cpp:398]     Test net output #1: loss = 1.27216 (* 1 = 1.27216 loss)
I0428 20:04:10.431275 30328 solver.cpp:219] Iteration 500 (419.144 iter/s, 0.238582s/100 iters), loss = 1.23892
I0428 20:04:10.431341 30328 solver.cpp:238]     Train net output #0: loss = 1.23892 (* 1 = 1.23892 loss)
I0428 20:04:10.431360 30328 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:10.588657 30328 solver.cpp:219] Iteration 600 (635.645 iter/s, 0.15732s/100 iters), loss = 1.43675
I0428 20:04:10.588696 30328 solver.cpp:238]     Train net output #0: loss = 1.43675 (* 1 = 1.43675 loss)
I0428 20:04:10.588703 30328 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:10.740211 30328 solver.cpp:219] Iteration 700 (659.995 iter/s, 0.151516s/100 iters), loss = 0.956074
I0428 20:04:10.740250 30328 solver.cpp:238]     Train net output #0: loss = 0.956074 (* 1 = 0.956074 loss)
I0428 20:04:10.740257 30328 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:10.894315 30328 solver.cpp:219] Iteration 800 (649.069 iter/s, 0.154067s/100 iters), loss = 1.11439
I0428 20:04:10.894353 30328 solver.cpp:238]     Train net output #0: loss = 1.11439 (* 1 = 1.11439 loss)
I0428 20:04:10.894359 30328 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:11.041972 30328 solver.cpp:219] Iteration 900 (677.477 iter/s, 0.147607s/100 iters), loss = 1.19187
I0428 20:04:11.042011 30328 solver.cpp:238]     Train net output #0: loss = 1.19187 (* 1 = 1.19187 loss)
I0428 20:04:11.042017 30328 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:11.091935 30334 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:11.190784 30328 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:11.193586 30328 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:11.194872 30328 solver.cpp:311] Iteration 1000, loss = 0.985923
I0428 20:04:11.194888 30328 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:11.269687 30335 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:11.270356 30328 solver.cpp:398]     Test net output #0: accuracy = 0.6653
I0428 20:04:11.270388 30328 solver.cpp:398]     Test net output #1: loss = 1.03019 (* 1 = 1.03019 loss)
I0428 20:04:11.270393 30328 solver.cpp:316] Optimization Done.
I0428 20:04:11.270396 30328 caffe.cpp:259] Optimization Done.
