I0428 20:15:42.440685   504 caffe.cpp:218] Using GPUs 0
I0428 20:15:42.483844   504 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:15:43.001199   504 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1253.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:15:43.001338   504 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1253.prototxt
I0428 20:15:43.001703   504 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:15:43.001719   504 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:15:43.001807   504 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:15:43.001875   504 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:43.001977   504 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:15:43.002002   504 net.cpp:86] Creating Layer mnist
I0428 20:15:43.002008   504 net.cpp:382] mnist -> data
I0428 20:15:43.002034   504 net.cpp:382] mnist -> label
I0428 20:15:43.003118   504 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:15:43.005580   504 net.cpp:124] Setting up mnist
I0428 20:15:43.005599   504 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:15:43.005606   504 net.cpp:131] Top shape: 64 (64)
I0428 20:15:43.005609   504 net.cpp:139] Memory required for data: 200960
I0428 20:15:43.005616   504 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:43.005631   504 net.cpp:86] Creating Layer conv0
I0428 20:15:43.005637   504 net.cpp:408] conv0 <- data
I0428 20:15:43.005650   504 net.cpp:382] conv0 -> conv0
I0428 20:15:43.296761   504 net.cpp:124] Setting up conv0
I0428 20:15:43.296793   504 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:15:43.296798   504 net.cpp:139] Memory required for data: 7573760
I0428 20:15:43.296847   504 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:43.296864   504 net.cpp:86] Creating Layer pool0
I0428 20:15:43.296869   504 net.cpp:408] pool0 <- conv0
I0428 20:15:43.296875   504 net.cpp:382] pool0 -> pool0
I0428 20:15:43.296932   504 net.cpp:124] Setting up pool0
I0428 20:15:43.296941   504 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:15:43.296946   504 net.cpp:139] Memory required for data: 9416960
I0428 20:15:43.296949   504 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:43.296963   504 net.cpp:86] Creating Layer conv1
I0428 20:15:43.296969   504 net.cpp:408] conv1 <- pool0
I0428 20:15:43.296975   504 net.cpp:382] conv1 -> conv1
I0428 20:15:43.300137   504 net.cpp:124] Setting up conv1
I0428 20:15:43.300155   504 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:15:43.300159   504 net.cpp:139] Memory required for data: 9498880
I0428 20:15:43.300170   504 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:43.300179   504 net.cpp:86] Creating Layer pool1
I0428 20:15:43.300184   504 net.cpp:408] pool1 <- conv1
I0428 20:15:43.300190   504 net.cpp:382] pool1 -> pool1
I0428 20:15:43.300235   504 net.cpp:124] Setting up pool1
I0428 20:15:43.300242   504 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:15:43.300246   504 net.cpp:139] Memory required for data: 9519360
I0428 20:15:43.300249   504 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:43.300267   504 net.cpp:86] Creating Layer ip1
I0428 20:15:43.300272   504 net.cpp:408] ip1 <- pool1
I0428 20:15:43.300278   504 net.cpp:382] ip1 -> ip1
I0428 20:15:43.300391   504 net.cpp:124] Setting up ip1
I0428 20:15:43.300398   504 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:43.300402   504 net.cpp:139] Memory required for data: 9521920
I0428 20:15:43.300410   504 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:43.300417   504 net.cpp:86] Creating Layer relu1
I0428 20:15:43.300421   504 net.cpp:408] relu1 <- ip1
I0428 20:15:43.300426   504 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:43.300613   504 net.cpp:124] Setting up relu1
I0428 20:15:43.300623   504 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:43.300627   504 net.cpp:139] Memory required for data: 9524480
I0428 20:15:43.300631   504 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:43.300638   504 net.cpp:86] Creating Layer ip2
I0428 20:15:43.300642   504 net.cpp:408] ip2 <- ip1
I0428 20:15:43.300647   504 net.cpp:382] ip2 -> ip2
I0428 20:15:43.300753   504 net.cpp:124] Setting up ip2
I0428 20:15:43.300760   504 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:43.300763   504 net.cpp:139] Memory required for data: 9527040
I0428 20:15:43.300770   504 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:43.300776   504 net.cpp:86] Creating Layer relu2
I0428 20:15:43.300781   504 net.cpp:408] relu2 <- ip2
I0428 20:15:43.300786   504 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:43.301614   504 net.cpp:124] Setting up relu2
I0428 20:15:43.301630   504 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:43.301633   504 net.cpp:139] Memory required for data: 9529600
I0428 20:15:43.301637   504 layer_factory.hpp:77] Creating layer loss
I0428 20:15:43.301645   504 net.cpp:86] Creating Layer loss
I0428 20:15:43.301648   504 net.cpp:408] loss <- ip2
I0428 20:15:43.301654   504 net.cpp:408] loss <- label
I0428 20:15:43.301661   504 net.cpp:382] loss -> loss
I0428 20:15:43.301684   504 layer_factory.hpp:77] Creating layer loss
I0428 20:15:43.301949   504 net.cpp:124] Setting up loss
I0428 20:15:43.301960   504 net.cpp:131] Top shape: (1)
I0428 20:15:43.301964   504 net.cpp:134]     with loss weight 1
I0428 20:15:43.301982   504 net.cpp:139] Memory required for data: 9529604
I0428 20:15:43.301986   504 net.cpp:200] loss needs backward computation.
I0428 20:15:43.301991   504 net.cpp:200] relu2 needs backward computation.
I0428 20:15:43.301995   504 net.cpp:200] ip2 needs backward computation.
I0428 20:15:43.301998   504 net.cpp:200] relu1 needs backward computation.
I0428 20:15:43.302001   504 net.cpp:200] ip1 needs backward computation.
I0428 20:15:43.302018   504 net.cpp:200] pool1 needs backward computation.
I0428 20:15:43.302022   504 net.cpp:200] conv1 needs backward computation.
I0428 20:15:43.302026   504 net.cpp:200] pool0 needs backward computation.
I0428 20:15:43.302029   504 net.cpp:200] conv0 needs backward computation.
I0428 20:15:43.302033   504 net.cpp:202] mnist does not need backward computation.
I0428 20:15:43.302037   504 net.cpp:244] This network produces output loss
I0428 20:15:43.302047   504 net.cpp:257] Network initialization done.
I0428 20:15:43.302376   504 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1253.prototxt
I0428 20:15:43.302404   504 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:15:43.302497   504 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:15:43.302568   504 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:43.302618   504 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:15:43.302633   504 net.cpp:86] Creating Layer mnist
I0428 20:15:43.302639   504 net.cpp:382] mnist -> data
I0428 20:15:43.302647   504 net.cpp:382] mnist -> label
I0428 20:15:43.302743   504 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:15:43.304874   504 net.cpp:124] Setting up mnist
I0428 20:15:43.304890   504 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:15:43.304896   504 net.cpp:131] Top shape: 100 (100)
I0428 20:15:43.304899   504 net.cpp:139] Memory required for data: 314000
I0428 20:15:43.304904   504 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:15:43.304913   504 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:15:43.304916   504 net.cpp:408] label_mnist_1_split <- label
I0428 20:15:43.304921   504 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:15:43.304929   504 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:15:43.305022   504 net.cpp:124] Setting up label_mnist_1_split
I0428 20:15:43.305043   504 net.cpp:131] Top shape: 100 (100)
I0428 20:15:43.305048   504 net.cpp:131] Top shape: 100 (100)
I0428 20:15:43.305052   504 net.cpp:139] Memory required for data: 314800
I0428 20:15:43.305055   504 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:43.305065   504 net.cpp:86] Creating Layer conv0
I0428 20:15:43.305073   504 net.cpp:408] conv0 <- data
I0428 20:15:43.305078   504 net.cpp:382] conv0 -> conv0
I0428 20:15:43.306715   504 net.cpp:124] Setting up conv0
I0428 20:15:43.306730   504 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:15:43.306735   504 net.cpp:139] Memory required for data: 11834800
I0428 20:15:43.306746   504 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:43.306753   504 net.cpp:86] Creating Layer pool0
I0428 20:15:43.306757   504 net.cpp:408] pool0 <- conv0
I0428 20:15:43.306762   504 net.cpp:382] pool0 -> pool0
I0428 20:15:43.306803   504 net.cpp:124] Setting up pool0
I0428 20:15:43.306812   504 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:15:43.306814   504 net.cpp:139] Memory required for data: 14714800
I0428 20:15:43.306818   504 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:43.306829   504 net.cpp:86] Creating Layer conv1
I0428 20:15:43.306836   504 net.cpp:408] conv1 <- pool0
I0428 20:15:43.306843   504 net.cpp:382] conv1 -> conv1
I0428 20:15:43.308547   504 net.cpp:124] Setting up conv1
I0428 20:15:43.308562   504 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:15:43.308567   504 net.cpp:139] Memory required for data: 14842800
I0428 20:15:43.308578   504 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:43.308585   504 net.cpp:86] Creating Layer pool1
I0428 20:15:43.308589   504 net.cpp:408] pool1 <- conv1
I0428 20:15:43.308595   504 net.cpp:382] pool1 -> pool1
I0428 20:15:43.308637   504 net.cpp:124] Setting up pool1
I0428 20:15:43.308647   504 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:15:43.308651   504 net.cpp:139] Memory required for data: 14874800
I0428 20:15:43.308655   504 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:43.308662   504 net.cpp:86] Creating Layer ip1
I0428 20:15:43.308666   504 net.cpp:408] ip1 <- pool1
I0428 20:15:43.308671   504 net.cpp:382] ip1 -> ip1
I0428 20:15:43.308784   504 net.cpp:124] Setting up ip1
I0428 20:15:43.308792   504 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:43.308795   504 net.cpp:139] Memory required for data: 14878800
I0428 20:15:43.308804   504 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:43.308816   504 net.cpp:86] Creating Layer relu1
I0428 20:15:43.308821   504 net.cpp:408] relu1 <- ip1
I0428 20:15:43.308826   504 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:43.309006   504 net.cpp:124] Setting up relu1
I0428 20:15:43.309016   504 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:43.309020   504 net.cpp:139] Memory required for data: 14882800
I0428 20:15:43.309023   504 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:43.309031   504 net.cpp:86] Creating Layer ip2
I0428 20:15:43.309036   504 net.cpp:408] ip2 <- ip1
I0428 20:15:43.309041   504 net.cpp:382] ip2 -> ip2
I0428 20:15:43.309165   504 net.cpp:124] Setting up ip2
I0428 20:15:43.309171   504 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:43.309175   504 net.cpp:139] Memory required for data: 14886800
I0428 20:15:43.309181   504 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:43.309187   504 net.cpp:86] Creating Layer relu2
I0428 20:15:43.309190   504 net.cpp:408] relu2 <- ip2
I0428 20:15:43.309195   504 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:43.309417   504 net.cpp:124] Setting up relu2
I0428 20:15:43.309427   504 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:43.309430   504 net.cpp:139] Memory required for data: 14890800
I0428 20:15:43.309442   504 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:15:43.309448   504 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:15:43.309450   504 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:15:43.309456   504 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:15:43.309478   504 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:15:43.309518   504 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:15:43.309525   504 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:43.309530   504 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:43.309532   504 net.cpp:139] Memory required for data: 14898800
I0428 20:15:43.309536   504 layer_factory.hpp:77] Creating layer accuracy
I0428 20:15:43.309541   504 net.cpp:86] Creating Layer accuracy
I0428 20:15:43.309545   504 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:15:43.309551   504 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:15:43.309577   504 net.cpp:382] accuracy -> accuracy
I0428 20:15:43.309586   504 net.cpp:124] Setting up accuracy
I0428 20:15:43.309590   504 net.cpp:131] Top shape: (1)
I0428 20:15:43.309593   504 net.cpp:139] Memory required for data: 14898804
I0428 20:15:43.309597   504 layer_factory.hpp:77] Creating layer loss
I0428 20:15:43.309602   504 net.cpp:86] Creating Layer loss
I0428 20:15:43.309607   504 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:15:43.309610   504 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:15:43.309615   504 net.cpp:382] loss -> loss
I0428 20:15:43.309623   504 layer_factory.hpp:77] Creating layer loss
I0428 20:15:43.309886   504 net.cpp:124] Setting up loss
I0428 20:15:43.309900   504 net.cpp:131] Top shape: (1)
I0428 20:15:43.309903   504 net.cpp:134]     with loss weight 1
I0428 20:15:43.309911   504 net.cpp:139] Memory required for data: 14898808
I0428 20:15:43.309914   504 net.cpp:200] loss needs backward computation.
I0428 20:15:43.309918   504 net.cpp:202] accuracy does not need backward computation.
I0428 20:15:43.309923   504 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:15:43.309927   504 net.cpp:200] relu2 needs backward computation.
I0428 20:15:43.309931   504 net.cpp:200] ip2 needs backward computation.
I0428 20:15:43.309936   504 net.cpp:200] relu1 needs backward computation.
I0428 20:15:43.309938   504 net.cpp:200] ip1 needs backward computation.
I0428 20:15:43.309942   504 net.cpp:200] pool1 needs backward computation.
I0428 20:15:43.309947   504 net.cpp:200] conv1 needs backward computation.
I0428 20:15:43.309950   504 net.cpp:200] pool0 needs backward computation.
I0428 20:15:43.309954   504 net.cpp:200] conv0 needs backward computation.
I0428 20:15:43.309958   504 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:15:43.309963   504 net.cpp:202] mnist does not need backward computation.
I0428 20:15:43.309967   504 net.cpp:244] This network produces output accuracy
I0428 20:15:43.309970   504 net.cpp:244] This network produces output loss
I0428 20:15:43.309983   504 net.cpp:257] Network initialization done.
I0428 20:15:43.310024   504 solver.cpp:56] Solver scaffolding done.
I0428 20:15:43.310350   504 caffe.cpp:248] Starting Optimization
I0428 20:15:43.310358   504 solver.cpp:273] Solving LeNet
I0428 20:15:43.310360   504 solver.cpp:274] Learning Rate Policy: inv
I0428 20:15:43.311166   504 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:15:43.375324   511 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:43.376895   504 solver.cpp:398]     Test net output #0: accuracy = 0.0519
I0428 20:15:43.376930   504 solver.cpp:398]     Test net output #1: loss = 2.33232 (* 1 = 2.33232 loss)
I0428 20:15:43.380961   504 solver.cpp:219] Iteration 0 (-7.17652e-31 iter/s, 0.0705711s/100 iters), loss = 2.35514
I0428 20:15:43.381000   504 solver.cpp:238]     Train net output #0: loss = 2.35514 (* 1 = 2.35514 loss)
I0428 20:15:43.381011   504 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:15:43.490757   504 solver.cpp:219] Iteration 100 (911.302 iter/s, 0.109733s/100 iters), loss = 0.903582
I0428 20:15:43.490797   504 solver.cpp:238]     Train net output #0: loss = 0.903582 (* 1 = 0.903582 loss)
I0428 20:15:43.490803   504 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:15:43.599582   504 solver.cpp:219] Iteration 200 (919.195 iter/s, 0.108791s/100 iters), loss = 0.540139
I0428 20:15:43.599634   504 solver.cpp:238]     Train net output #0: loss = 0.540139 (* 1 = 0.540139 loss)
I0428 20:15:43.599640   504 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:15:43.708997   504 solver.cpp:219] Iteration 300 (914.35 iter/s, 0.109367s/100 iters), loss = 0.507529
I0428 20:15:43.709023   504 solver.cpp:238]     Train net output #0: loss = 0.507529 (* 1 = 0.507529 loss)
I0428 20:15:43.709030   504 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:15:43.818609   504 solver.cpp:219] Iteration 400 (912.607 iter/s, 0.109576s/100 iters), loss = 0.330794
I0428 20:15:43.818632   504 solver.cpp:238]     Train net output #0: loss = 0.330794 (* 1 = 0.330794 loss)
I0428 20:15:43.818639   504 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:15:43.926014   504 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:15:43.988477   511 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:43.990718   504 solver.cpp:398]     Test net output #0: accuracy = 0.8349
I0428 20:15:43.990756   504 solver.cpp:398]     Test net output #1: loss = 0.436769 (* 1 = 0.436769 loss)
I0428 20:15:43.991811   504 solver.cpp:219] Iteration 500 (577.482 iter/s, 0.173165s/100 iters), loss = 0.438364
I0428 20:15:43.991848   504 solver.cpp:238]     Train net output #0: loss = 0.438364 (* 1 = 0.438364 loss)
I0428 20:15:43.991854   504 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:15:44.111295   504 solver.cpp:219] Iteration 600 (837.188 iter/s, 0.119448s/100 iters), loss = 0.554047
I0428 20:15:44.111337   504 solver.cpp:238]     Train net output #0: loss = 0.554047 (* 1 = 0.554047 loss)
I0428 20:15:44.111347   504 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:15:44.236161   504 solver.cpp:219] Iteration 700 (801.209 iter/s, 0.124811s/100 iters), loss = 0.378297
I0428 20:15:44.236209   504 solver.cpp:238]     Train net output #0: loss = 0.378297 (* 1 = 0.378297 loss)
I0428 20:15:44.236232   504 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:15:44.352025   504 solver.cpp:219] Iteration 800 (863.467 iter/s, 0.115812s/100 iters), loss = 0.384034
I0428 20:15:44.352068   504 solver.cpp:238]     Train net output #0: loss = 0.384034 (* 1 = 0.384034 loss)
I0428 20:15:44.352077   504 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:15:44.475141   504 solver.cpp:219] Iteration 900 (812.563 iter/s, 0.123067s/100 iters), loss = 0.504909
I0428 20:15:44.475191   504 solver.cpp:238]     Train net output #0: loss = 0.504909 (* 1 = 0.504909 loss)
I0428 20:15:44.475205   504 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:15:44.515782   510 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:44.590595   504 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:15:44.591497   504 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:15:44.592200   504 solver.cpp:311] Iteration 1000, loss = 0.391828
I0428 20:15:44.592218   504 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:15:44.657402   511 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:44.659716   504 solver.cpp:398]     Test net output #0: accuracy = 0.8554
I0428 20:15:44.659739   504 solver.cpp:398]     Test net output #1: loss = 0.366292 (* 1 = 0.366292 loss)
I0428 20:15:44.659751   504 solver.cpp:316] Optimization Done.
I0428 20:15:44.659754   504 caffe.cpp:259] Optimization Done.
