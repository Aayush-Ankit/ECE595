I0428 19:53:58.622282 27909 caffe.cpp:218] Using GPUs 0
I0428 19:53:58.651502 27909 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:59.106135 27909 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test701.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:59.106271 27909 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test701.prototxt
I0428 19:53:59.106585 27909 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:59.106602 27909 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:59.106681 27909 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:59.106762 27909 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:59.106884 27909 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:59.106909 27909 net.cpp:86] Creating Layer mnist
I0428 19:53:59.106919 27909 net.cpp:382] mnist -> data
I0428 19:53:59.106943 27909 net.cpp:382] mnist -> label
I0428 19:53:59.107949 27909 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:59.110090 27909 net.cpp:124] Setting up mnist
I0428 19:53:59.110123 27909 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:59.110131 27909 net.cpp:131] Top shape: 64 (64)
I0428 19:53:59.110136 27909 net.cpp:139] Memory required for data: 200960
I0428 19:53:59.110146 27909 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:59.110179 27909 net.cpp:86] Creating Layer conv0
I0428 19:53:59.110200 27909 net.cpp:408] conv0 <- data
I0428 19:53:59.110216 27909 net.cpp:382] conv0 -> conv0
I0428 19:53:59.344589 27909 net.cpp:124] Setting up conv0
I0428 19:53:59.344617 27909 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:59.344622 27909 net.cpp:139] Memory required for data: 938240
I0428 19:53:59.344656 27909 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:59.344672 27909 net.cpp:86] Creating Layer pool0
I0428 19:53:59.344686 27909 net.cpp:408] pool0 <- conv0
I0428 19:53:59.344696 27909 net.cpp:382] pool0 -> pool0
I0428 19:53:59.344748 27909 net.cpp:124] Setting up pool0
I0428 19:53:59.344758 27909 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:59.344763 27909 net.cpp:139] Memory required for data: 1122560
I0428 19:53:59.344768 27909 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:59.344782 27909 net.cpp:86] Creating Layer conv1
I0428 19:53:59.344789 27909 net.cpp:408] conv1 <- pool0
I0428 19:53:59.344796 27909 net.cpp:382] conv1 -> conv1
I0428 19:53:59.347723 27909 net.cpp:124] Setting up conv1
I0428 19:53:59.347739 27909 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:59.347745 27909 net.cpp:139] Memory required for data: 1941760
I0428 19:53:59.347774 27909 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:59.347787 27909 net.cpp:86] Creating Layer pool1
I0428 19:53:59.347800 27909 net.cpp:408] pool1 <- conv1
I0428 19:53:59.347808 27909 net.cpp:382] pool1 -> pool1
I0428 19:53:59.347854 27909 net.cpp:124] Setting up pool1
I0428 19:53:59.347863 27909 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:59.347868 27909 net.cpp:139] Memory required for data: 2146560
I0428 19:53:59.347872 27909 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:59.347883 27909 net.cpp:86] Creating Layer ip1
I0428 19:53:59.347889 27909 net.cpp:408] ip1 <- pool1
I0428 19:53:59.347913 27909 net.cpp:382] ip1 -> ip1
I0428 19:53:59.348235 27909 net.cpp:124] Setting up ip1
I0428 19:53:59.348244 27909 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:59.348249 27909 net.cpp:139] Memory required for data: 2159360
I0428 19:53:59.348260 27909 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:59.348275 27909 net.cpp:86] Creating Layer relu1
I0428 19:53:59.348281 27909 net.cpp:408] relu1 <- ip1
I0428 19:53:59.348289 27909 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:59.348482 27909 net.cpp:124] Setting up relu1
I0428 19:53:59.348492 27909 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:59.348497 27909 net.cpp:139] Memory required for data: 2172160
I0428 19:53:59.348503 27909 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:59.348512 27909 net.cpp:86] Creating Layer ip2
I0428 19:53:59.348518 27909 net.cpp:408] ip2 <- ip1
I0428 19:53:59.348528 27909 net.cpp:382] ip2 -> ip2
I0428 19:53:59.349576 27909 net.cpp:124] Setting up ip2
I0428 19:53:59.349591 27909 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:59.349596 27909 net.cpp:139] Memory required for data: 2184960
I0428 19:53:59.349606 27909 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:59.349617 27909 net.cpp:86] Creating Layer relu2
I0428 19:53:59.349622 27909 net.cpp:408] relu2 <- ip2
I0428 19:53:59.349632 27909 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:59.350450 27909 net.cpp:124] Setting up relu2
I0428 19:53:59.350462 27909 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:59.350467 27909 net.cpp:139] Memory required for data: 2197760
I0428 19:53:59.350473 27909 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:59.350484 27909 net.cpp:86] Creating Layer ip3
I0428 19:53:59.350491 27909 net.cpp:408] ip3 <- ip2
I0428 19:53:59.350498 27909 net.cpp:382] ip3 -> ip3
I0428 19:53:59.350641 27909 net.cpp:124] Setting up ip3
I0428 19:53:59.350651 27909 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:59.350656 27909 net.cpp:139] Memory required for data: 2200320
I0428 19:53:59.350670 27909 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:59.350682 27909 net.cpp:86] Creating Layer relu3
I0428 19:53:59.350702 27909 net.cpp:408] relu3 <- ip3
I0428 19:53:59.350708 27909 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:59.350940 27909 net.cpp:124] Setting up relu3
I0428 19:53:59.350951 27909 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:59.350956 27909 net.cpp:139] Memory required for data: 2202880
I0428 19:53:59.350961 27909 layer_factory.hpp:77] Creating layer loss
I0428 19:53:59.350972 27909 net.cpp:86] Creating Layer loss
I0428 19:53:59.350978 27909 net.cpp:408] loss <- ip3
I0428 19:53:59.350985 27909 net.cpp:408] loss <- label
I0428 19:53:59.350993 27909 net.cpp:382] loss -> loss
I0428 19:53:59.351016 27909 layer_factory.hpp:77] Creating layer loss
I0428 19:53:59.351282 27909 net.cpp:124] Setting up loss
I0428 19:53:59.351308 27909 net.cpp:131] Top shape: (1)
I0428 19:53:59.351330 27909 net.cpp:134]     with loss weight 1
I0428 19:53:59.351351 27909 net.cpp:139] Memory required for data: 2202884
I0428 19:53:59.351356 27909 net.cpp:200] loss needs backward computation.
I0428 19:53:59.351363 27909 net.cpp:200] relu3 needs backward computation.
I0428 19:53:59.351368 27909 net.cpp:200] ip3 needs backward computation.
I0428 19:53:59.351373 27909 net.cpp:200] relu2 needs backward computation.
I0428 19:53:59.351378 27909 net.cpp:200] ip2 needs backward computation.
I0428 19:53:59.351383 27909 net.cpp:200] relu1 needs backward computation.
I0428 19:53:59.351388 27909 net.cpp:200] ip1 needs backward computation.
I0428 19:53:59.351393 27909 net.cpp:200] pool1 needs backward computation.
I0428 19:53:59.351399 27909 net.cpp:200] conv1 needs backward computation.
I0428 19:53:59.351404 27909 net.cpp:200] pool0 needs backward computation.
I0428 19:53:59.351410 27909 net.cpp:200] conv0 needs backward computation.
I0428 19:53:59.351416 27909 net.cpp:202] mnist does not need backward computation.
I0428 19:53:59.351421 27909 net.cpp:244] This network produces output loss
I0428 19:53:59.351438 27909 net.cpp:257] Network initialization done.
I0428 19:53:59.351824 27909 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test701.prototxt
I0428 19:53:59.351860 27909 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:59.351963 27909 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:59.352113 27909 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:59.352167 27909 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:59.352185 27909 net.cpp:86] Creating Layer mnist
I0428 19:53:59.352193 27909 net.cpp:382] mnist -> data
I0428 19:53:59.352205 27909 net.cpp:382] mnist -> label
I0428 19:53:59.352319 27909 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:59.354537 27909 net.cpp:124] Setting up mnist
I0428 19:53:59.354552 27909 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:59.354560 27909 net.cpp:131] Top shape: 100 (100)
I0428 19:53:59.354567 27909 net.cpp:139] Memory required for data: 314000
I0428 19:53:59.354571 27909 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:59.354581 27909 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:59.354588 27909 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:59.354598 27909 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:59.354609 27909 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:59.354668 27909 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:59.354677 27909 net.cpp:131] Top shape: 100 (100)
I0428 19:53:59.354683 27909 net.cpp:131] Top shape: 100 (100)
I0428 19:53:59.354688 27909 net.cpp:139] Memory required for data: 314800
I0428 19:53:59.354694 27909 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:59.354710 27909 net.cpp:86] Creating Layer conv0
I0428 19:53:59.354717 27909 net.cpp:408] conv0 <- data
I0428 19:53:59.354727 27909 net.cpp:382] conv0 -> conv0
I0428 19:53:59.356379 27909 net.cpp:124] Setting up conv0
I0428 19:53:59.356408 27909 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:59.356415 27909 net.cpp:139] Memory required for data: 1466800
I0428 19:53:59.356428 27909 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:59.356438 27909 net.cpp:86] Creating Layer pool0
I0428 19:53:59.356444 27909 net.cpp:408] pool0 <- conv0
I0428 19:53:59.356454 27909 net.cpp:382] pool0 -> pool0
I0428 19:53:59.356495 27909 net.cpp:124] Setting up pool0
I0428 19:53:59.356516 27909 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:59.356521 27909 net.cpp:139] Memory required for data: 1754800
I0428 19:53:59.356525 27909 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:59.356539 27909 net.cpp:86] Creating Layer conv1
I0428 19:53:59.356546 27909 net.cpp:408] conv1 <- pool0
I0428 19:53:59.356554 27909 net.cpp:382] conv1 -> conv1
I0428 19:53:59.358235 27909 net.cpp:124] Setting up conv1
I0428 19:53:59.358264 27909 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:59.358270 27909 net.cpp:139] Memory required for data: 3034800
I0428 19:53:59.358315 27909 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:59.358327 27909 net.cpp:86] Creating Layer pool1
I0428 19:53:59.358335 27909 net.cpp:408] pool1 <- conv1
I0428 19:53:59.358345 27909 net.cpp:382] pool1 -> pool1
I0428 19:53:59.358392 27909 net.cpp:124] Setting up pool1
I0428 19:53:59.358402 27909 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:59.358407 27909 net.cpp:139] Memory required for data: 3354800
I0428 19:53:59.358412 27909 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:59.358422 27909 net.cpp:86] Creating Layer ip1
I0428 19:53:59.358428 27909 net.cpp:408] ip1 <- pool1
I0428 19:53:59.358438 27909 net.cpp:382] ip1 -> ip1
I0428 19:53:59.358814 27909 net.cpp:124] Setting up ip1
I0428 19:53:59.358822 27909 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:59.358839 27909 net.cpp:139] Memory required for data: 3374800
I0428 19:53:59.358851 27909 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:59.358860 27909 net.cpp:86] Creating Layer relu1
I0428 19:53:59.358866 27909 net.cpp:408] relu1 <- ip1
I0428 19:53:59.358876 27909 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:59.359136 27909 net.cpp:124] Setting up relu1
I0428 19:53:59.359146 27909 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:59.359150 27909 net.cpp:139] Memory required for data: 3394800
I0428 19:53:59.359155 27909 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:59.359184 27909 net.cpp:86] Creating Layer ip2
I0428 19:53:59.359189 27909 net.cpp:408] ip2 <- ip1
I0428 19:53:59.359200 27909 net.cpp:382] ip2 -> ip2
I0428 19:53:59.359345 27909 net.cpp:124] Setting up ip2
I0428 19:53:59.359354 27909 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:59.359359 27909 net.cpp:139] Memory required for data: 3414800
I0428 19:53:59.359369 27909 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:59.359380 27909 net.cpp:86] Creating Layer relu2
I0428 19:53:59.359390 27909 net.cpp:408] relu2 <- ip2
I0428 19:53:59.359412 27909 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:59.359611 27909 net.cpp:124] Setting up relu2
I0428 19:53:59.359621 27909 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:59.359625 27909 net.cpp:139] Memory required for data: 3434800
I0428 19:53:59.359630 27909 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:59.359642 27909 net.cpp:86] Creating Layer ip3
I0428 19:53:59.359647 27909 net.cpp:408] ip3 <- ip2
I0428 19:53:59.359654 27909 net.cpp:382] ip3 -> ip3
I0428 19:53:59.359778 27909 net.cpp:124] Setting up ip3
I0428 19:53:59.359787 27909 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:59.359792 27909 net.cpp:139] Memory required for data: 3438800
I0428 19:53:59.359804 27909 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:59.359815 27909 net.cpp:86] Creating Layer relu3
I0428 19:53:59.359822 27909 net.cpp:408] relu3 <- ip3
I0428 19:53:59.359828 27909 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:59.360718 27909 net.cpp:124] Setting up relu3
I0428 19:53:59.360731 27909 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:59.360738 27909 net.cpp:139] Memory required for data: 3442800
I0428 19:53:59.360743 27909 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:59.360750 27909 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:59.360755 27909 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:59.360764 27909 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:59.360774 27909 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:59.360854 27909 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:59.360865 27909 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:59.360872 27909 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:59.360877 27909 net.cpp:139] Memory required for data: 3450800
I0428 19:53:59.360882 27909 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:59.360898 27909 net.cpp:86] Creating Layer accuracy
I0428 19:53:59.360906 27909 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:59.360915 27909 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:59.360924 27909 net.cpp:382] accuracy -> accuracy
I0428 19:53:59.360936 27909 net.cpp:124] Setting up accuracy
I0428 19:53:59.360945 27909 net.cpp:131] Top shape: (1)
I0428 19:53:59.360950 27909 net.cpp:139] Memory required for data: 3450804
I0428 19:53:59.360956 27909 layer_factory.hpp:77] Creating layer loss
I0428 19:53:59.360966 27909 net.cpp:86] Creating Layer loss
I0428 19:53:59.360980 27909 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:59.361001 27909 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:59.361008 27909 net.cpp:382] loss -> loss
I0428 19:53:59.361019 27909 layer_factory.hpp:77] Creating layer loss
I0428 19:53:59.361311 27909 net.cpp:124] Setting up loss
I0428 19:53:59.361321 27909 net.cpp:131] Top shape: (1)
I0428 19:53:59.361326 27909 net.cpp:134]     with loss weight 1
I0428 19:53:59.361335 27909 net.cpp:139] Memory required for data: 3450808
I0428 19:53:59.361366 27909 net.cpp:200] loss needs backward computation.
I0428 19:53:59.361371 27909 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:59.361378 27909 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:59.361385 27909 net.cpp:200] relu3 needs backward computation.
I0428 19:53:59.361392 27909 net.cpp:200] ip3 needs backward computation.
I0428 19:53:59.361397 27909 net.cpp:200] relu2 needs backward computation.
I0428 19:53:59.361402 27909 net.cpp:200] ip2 needs backward computation.
I0428 19:53:59.361407 27909 net.cpp:200] relu1 needs backward computation.
I0428 19:53:59.361413 27909 net.cpp:200] ip1 needs backward computation.
I0428 19:53:59.361418 27909 net.cpp:200] pool1 needs backward computation.
I0428 19:53:59.361423 27909 net.cpp:200] conv1 needs backward computation.
I0428 19:53:59.361428 27909 net.cpp:200] pool0 needs backward computation.
I0428 19:53:59.361433 27909 net.cpp:200] conv0 needs backward computation.
I0428 19:53:59.361439 27909 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:59.361445 27909 net.cpp:202] mnist does not need backward computation.
I0428 19:53:59.361450 27909 net.cpp:244] This network produces output accuracy
I0428 19:53:59.361457 27909 net.cpp:244] This network produces output loss
I0428 19:53:59.361475 27909 net.cpp:257] Network initialization done.
I0428 19:53:59.361524 27909 solver.cpp:56] Solver scaffolding done.
I0428 19:53:59.361986 27909 caffe.cpp:248] Starting Optimization
I0428 19:53:59.361999 27909 solver.cpp:273] Solving LeNet
I0428 19:53:59.362002 27909 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:59.362931 27909 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:59.367115 27909 blocking_queue.cpp:49] Waiting for data
I0428 19:53:59.439126 27916 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:59.439790 27909 solver.cpp:398]     Test net output #0: accuracy = 0.0731
I0428 19:53:59.439826 27909 solver.cpp:398]     Test net output #1: loss = 2.32032 (* 1 = 2.32032 loss)
I0428 19:53:59.444788 27909 solver.cpp:219] Iteration 0 (0 iter/s, 0.0827402s/100 iters), loss = 2.31777
I0428 19:53:59.444876 27909 solver.cpp:238]     Train net output #0: loss = 2.31777 (* 1 = 2.31777 loss)
I0428 19:53:59.444910 27909 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:59.561192 27909 solver.cpp:219] Iteration 100 (859.65 iter/s, 0.116326s/100 iters), loss = 0.613564
I0428 19:53:59.561224 27909 solver.cpp:238]     Train net output #0: loss = 0.613564 (* 1 = 0.613564 loss)
I0428 19:53:59.561233 27909 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:59.668877 27909 solver.cpp:219] Iteration 200 (929.007 iter/s, 0.107642s/100 iters), loss = 0.466796
I0428 19:53:59.668908 27909 solver.cpp:238]     Train net output #0: loss = 0.466796 (* 1 = 0.466796 loss)
I0428 19:53:59.668916 27909 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:59.778542 27909 solver.cpp:219] Iteration 300 (912.222 iter/s, 0.109622s/100 iters), loss = 0.50139
I0428 19:53:59.778575 27909 solver.cpp:238]     Train net output #0: loss = 0.50139 (* 1 = 0.50139 loss)
I0428 19:53:59.778584 27909 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:59.888986 27909 solver.cpp:219] Iteration 400 (905.81 iter/s, 0.110398s/100 iters), loss = 0.282202
I0428 19:53:59.889019 27909 solver.cpp:238]     Train net output #0: loss = 0.282202 (* 1 = 0.282202 loss)
I0428 19:53:59.889026 27909 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:00.000476 27909 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:00.053419 27916 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:00.055544 27909 solver.cpp:398]     Test net output #0: accuracy = 0.8698
I0428 19:54:00.055608 27909 solver.cpp:398]     Test net output #1: loss = 0.342981 (* 1 = 0.342981 loss)
I0428 19:54:00.056895 27909 solver.cpp:219] Iteration 500 (595.734 iter/s, 0.16786s/100 iters), loss = 0.337244
I0428 19:54:00.056946 27909 solver.cpp:238]     Train net output #0: loss = 0.337244 (* 1 = 0.337244 loss)
I0428 19:54:00.056988 27909 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:00.177610 27909 solver.cpp:219] Iteration 600 (828.74 iter/s, 0.120665s/100 iters), loss = 0.399898
I0428 19:54:00.177657 27909 solver.cpp:238]     Train net output #0: loss = 0.399898 (* 1 = 0.399898 loss)
I0428 19:54:00.177666 27909 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:00.291996 27909 solver.cpp:219] Iteration 700 (874.594 iter/s, 0.114339s/100 iters), loss = 0.376934
I0428 19:54:00.292039 27909 solver.cpp:238]     Train net output #0: loss = 0.376934 (* 1 = 0.376934 loss)
I0428 19:54:00.292047 27909 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:00.407202 27909 solver.cpp:219] Iteration 800 (868.388 iter/s, 0.115156s/100 iters), loss = 0.522355
I0428 19:54:00.407250 27909 solver.cpp:238]     Train net output #0: loss = 0.522355 (* 1 = 0.522355 loss)
I0428 19:54:00.407263 27909 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:00.523324 27909 solver.cpp:219] Iteration 900 (861.598 iter/s, 0.116063s/100 iters), loss = 0.504546
I0428 19:54:00.523355 27909 solver.cpp:238]     Train net output #0: loss = 0.504546 (* 1 = 0.504546 loss)
I0428 19:54:00.523363 27909 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:00.560762 27915 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:00.633391 27909 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:00.635208 27909 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:00.636171 27909 solver.cpp:311] Iteration 1000, loss = 0.386404
I0428 19:54:00.636190 27909 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:00.682955 27916 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:00.684367 27909 solver.cpp:398]     Test net output #0: accuracy = 0.8788
I0428 19:54:00.684391 27909 solver.cpp:398]     Test net output #1: loss = 0.313121 (* 1 = 0.313121 loss)
I0428 19:54:00.684396 27909 solver.cpp:316] Optimization Done.
I0428 19:54:00.684407 27909 caffe.cpp:259] Optimization Done.
