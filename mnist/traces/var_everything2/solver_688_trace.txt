I0428 19:53:27.952869 27773 caffe.cpp:218] Using GPUs 0
I0428 19:53:27.992398 27773 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:28.506490 27773 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test688.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:28.506626 27773 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test688.prototxt
I0428 19:53:28.507055 27773 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:28.507073 27773 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:28.507179 27773 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:28.507258 27773 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:28.507359 27773 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:28.507385 27773 net.cpp:86] Creating Layer mnist
I0428 19:53:28.507392 27773 net.cpp:382] mnist -> data
I0428 19:53:28.507417 27773 net.cpp:382] mnist -> label
I0428 19:53:28.508510 27773 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:28.510962 27773 net.cpp:124] Setting up mnist
I0428 19:53:28.510980 27773 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:28.510988 27773 net.cpp:131] Top shape: 64 (64)
I0428 19:53:28.510992 27773 net.cpp:139] Memory required for data: 200960
I0428 19:53:28.510998 27773 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:28.511014 27773 net.cpp:86] Creating Layer conv0
I0428 19:53:28.511036 27773 net.cpp:408] conv0 <- data
I0428 19:53:28.511050 27773 net.cpp:382] conv0 -> conv0
I0428 19:53:28.796818 27773 net.cpp:124] Setting up conv0
I0428 19:53:28.796844 27773 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:28.796849 27773 net.cpp:139] Memory required for data: 938240
I0428 19:53:28.796864 27773 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:28.796885 27773 net.cpp:86] Creating Layer pool0
I0428 19:53:28.796888 27773 net.cpp:408] pool0 <- conv0
I0428 19:53:28.796895 27773 net.cpp:382] pool0 -> pool0
I0428 19:53:28.796954 27773 net.cpp:124] Setting up pool0
I0428 19:53:28.796962 27773 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:28.796964 27773 net.cpp:139] Memory required for data: 1122560
I0428 19:53:28.796968 27773 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:28.796979 27773 net.cpp:86] Creating Layer conv1
I0428 19:53:28.796983 27773 net.cpp:408] conv1 <- pool0
I0428 19:53:28.796989 27773 net.cpp:382] conv1 -> conv1
I0428 19:53:28.799849 27773 net.cpp:124] Setting up conv1
I0428 19:53:28.799863 27773 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:28.799867 27773 net.cpp:139] Memory required for data: 1941760
I0428 19:53:28.799876 27773 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:28.799885 27773 net.cpp:86] Creating Layer pool1
I0428 19:53:28.799888 27773 net.cpp:408] pool1 <- conv1
I0428 19:53:28.799893 27773 net.cpp:382] pool1 -> pool1
I0428 19:53:28.799934 27773 net.cpp:124] Setting up pool1
I0428 19:53:28.799939 27773 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:28.799942 27773 net.cpp:139] Memory required for data: 2146560
I0428 19:53:28.799944 27773 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:28.799952 27773 net.cpp:86] Creating Layer ip1
I0428 19:53:28.799968 27773 net.cpp:408] ip1 <- pool1
I0428 19:53:28.799973 27773 net.cpp:382] ip1 -> ip1
I0428 19:53:28.800194 27773 net.cpp:124] Setting up ip1
I0428 19:53:28.800202 27773 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:28.800205 27773 net.cpp:139] Memory required for data: 2152960
I0428 19:53:28.800212 27773 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:28.800222 27773 net.cpp:86] Creating Layer relu1
I0428 19:53:28.800228 27773 net.cpp:408] relu1 <- ip1
I0428 19:53:28.800235 27773 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:28.800411 27773 net.cpp:124] Setting up relu1
I0428 19:53:28.800420 27773 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:28.800422 27773 net.cpp:139] Memory required for data: 2159360
I0428 19:53:28.800426 27773 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:28.800432 27773 net.cpp:86] Creating Layer ip2
I0428 19:53:28.800436 27773 net.cpp:408] ip2 <- ip1
I0428 19:53:28.800441 27773 net.cpp:382] ip2 -> ip2
I0428 19:53:28.800549 27773 net.cpp:124] Setting up ip2
I0428 19:53:28.800555 27773 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:28.800559 27773 net.cpp:139] Memory required for data: 2165760
I0428 19:53:28.800564 27773 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:28.800570 27773 net.cpp:86] Creating Layer relu2
I0428 19:53:28.800575 27773 net.cpp:408] relu2 <- ip2
I0428 19:53:28.800580 27773 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:28.801338 27773 net.cpp:124] Setting up relu2
I0428 19:53:28.801352 27773 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:28.801355 27773 net.cpp:139] Memory required for data: 2172160
I0428 19:53:28.801358 27773 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:28.801365 27773 net.cpp:86] Creating Layer ip3
I0428 19:53:28.801369 27773 net.cpp:408] ip3 <- ip2
I0428 19:53:28.801375 27773 net.cpp:382] ip3 -> ip3
I0428 19:53:28.801493 27773 net.cpp:124] Setting up ip3
I0428 19:53:28.801501 27773 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:28.801503 27773 net.cpp:139] Memory required for data: 2174720
I0428 19:53:28.801512 27773 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:28.801518 27773 net.cpp:86] Creating Layer relu3
I0428 19:53:28.801535 27773 net.cpp:408] relu3 <- ip3
I0428 19:53:28.801539 27773 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:28.801715 27773 net.cpp:124] Setting up relu3
I0428 19:53:28.801725 27773 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:28.801728 27773 net.cpp:139] Memory required for data: 2177280
I0428 19:53:28.801731 27773 layer_factory.hpp:77] Creating layer loss
I0428 19:53:28.801738 27773 net.cpp:86] Creating Layer loss
I0428 19:53:28.801740 27773 net.cpp:408] loss <- ip3
I0428 19:53:28.801744 27773 net.cpp:408] loss <- label
I0428 19:53:28.801749 27773 net.cpp:382] loss -> loss
I0428 19:53:28.801766 27773 layer_factory.hpp:77] Creating layer loss
I0428 19:53:28.802016 27773 net.cpp:124] Setting up loss
I0428 19:53:28.802027 27773 net.cpp:131] Top shape: (1)
I0428 19:53:28.802031 27773 net.cpp:134]     with loss weight 1
I0428 19:53:28.802045 27773 net.cpp:139] Memory required for data: 2177284
I0428 19:53:28.802049 27773 net.cpp:200] loss needs backward computation.
I0428 19:53:28.802052 27773 net.cpp:200] relu3 needs backward computation.
I0428 19:53:28.802055 27773 net.cpp:200] ip3 needs backward computation.
I0428 19:53:28.802058 27773 net.cpp:200] relu2 needs backward computation.
I0428 19:53:28.802062 27773 net.cpp:200] ip2 needs backward computation.
I0428 19:53:28.802064 27773 net.cpp:200] relu1 needs backward computation.
I0428 19:53:28.802067 27773 net.cpp:200] ip1 needs backward computation.
I0428 19:53:28.802070 27773 net.cpp:200] pool1 needs backward computation.
I0428 19:53:28.802073 27773 net.cpp:200] conv1 needs backward computation.
I0428 19:53:28.802076 27773 net.cpp:200] pool0 needs backward computation.
I0428 19:53:28.802079 27773 net.cpp:200] conv0 needs backward computation.
I0428 19:53:28.802083 27773 net.cpp:202] mnist does not need backward computation.
I0428 19:53:28.802085 27773 net.cpp:244] This network produces output loss
I0428 19:53:28.802094 27773 net.cpp:257] Network initialization done.
I0428 19:53:28.802479 27773 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test688.prototxt
I0428 19:53:28.802505 27773 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:28.802600 27773 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:28.802683 27773 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:28.802729 27773 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:28.802752 27773 net.cpp:86] Creating Layer mnist
I0428 19:53:28.802758 27773 net.cpp:382] mnist -> data
I0428 19:53:28.802765 27773 net.cpp:382] mnist -> label
I0428 19:53:28.802852 27773 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:28.804852 27773 net.cpp:124] Setting up mnist
I0428 19:53:28.804864 27773 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:28.804886 27773 net.cpp:131] Top shape: 100 (100)
I0428 19:53:28.804889 27773 net.cpp:139] Memory required for data: 314000
I0428 19:53:28.804893 27773 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:28.804903 27773 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:28.804908 27773 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:28.804913 27773 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:28.804920 27773 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:28.805011 27773 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:28.805019 27773 net.cpp:131] Top shape: 100 (100)
I0428 19:53:28.805023 27773 net.cpp:131] Top shape: 100 (100)
I0428 19:53:28.805027 27773 net.cpp:139] Memory required for data: 314800
I0428 19:53:28.805029 27773 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:28.805038 27773 net.cpp:86] Creating Layer conv0
I0428 19:53:28.805042 27773 net.cpp:408] conv0 <- data
I0428 19:53:28.805048 27773 net.cpp:382] conv0 -> conv0
I0428 19:53:28.806766 27773 net.cpp:124] Setting up conv0
I0428 19:53:28.806779 27773 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:28.806784 27773 net.cpp:139] Memory required for data: 1466800
I0428 19:53:28.806793 27773 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:28.806800 27773 net.cpp:86] Creating Layer pool0
I0428 19:53:28.806803 27773 net.cpp:408] pool0 <- conv0
I0428 19:53:28.806809 27773 net.cpp:382] pool0 -> pool0
I0428 19:53:28.806848 27773 net.cpp:124] Setting up pool0
I0428 19:53:28.806852 27773 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:28.806855 27773 net.cpp:139] Memory required for data: 1754800
I0428 19:53:28.806859 27773 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:28.806869 27773 net.cpp:86] Creating Layer conv1
I0428 19:53:28.806872 27773 net.cpp:408] conv1 <- pool0
I0428 19:53:28.806877 27773 net.cpp:382] conv1 -> conv1
I0428 19:53:28.808436 27773 net.cpp:124] Setting up conv1
I0428 19:53:28.808450 27773 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:28.808454 27773 net.cpp:139] Memory required for data: 3034800
I0428 19:53:28.808464 27773 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:28.808470 27773 net.cpp:86] Creating Layer pool1
I0428 19:53:28.808473 27773 net.cpp:408] pool1 <- conv1
I0428 19:53:28.808478 27773 net.cpp:382] pool1 -> pool1
I0428 19:53:28.808517 27773 net.cpp:124] Setting up pool1
I0428 19:53:28.808522 27773 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:28.808524 27773 net.cpp:139] Memory required for data: 3354800
I0428 19:53:28.808527 27773 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:28.808534 27773 net.cpp:86] Creating Layer ip1
I0428 19:53:28.808537 27773 net.cpp:408] ip1 <- pool1
I0428 19:53:28.808543 27773 net.cpp:382] ip1 -> ip1
I0428 19:53:28.808801 27773 net.cpp:124] Setting up ip1
I0428 19:53:28.808816 27773 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:28.808830 27773 net.cpp:139] Memory required for data: 3364800
I0428 19:53:28.808838 27773 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:28.808847 27773 net.cpp:86] Creating Layer relu1
I0428 19:53:28.808853 27773 net.cpp:408] relu1 <- ip1
I0428 19:53:28.808858 27773 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:28.809039 27773 net.cpp:124] Setting up relu1
I0428 19:53:28.809048 27773 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:28.809051 27773 net.cpp:139] Memory required for data: 3374800
I0428 19:53:28.809054 27773 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:28.809062 27773 net.cpp:86] Creating Layer ip2
I0428 19:53:28.809067 27773 net.cpp:408] ip2 <- ip1
I0428 19:53:28.809073 27773 net.cpp:382] ip2 -> ip2
I0428 19:53:28.809213 27773 net.cpp:124] Setting up ip2
I0428 19:53:28.809221 27773 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:28.809224 27773 net.cpp:139] Memory required for data: 3384800
I0428 19:53:28.809229 27773 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:28.809234 27773 net.cpp:86] Creating Layer relu2
I0428 19:53:28.809237 27773 net.cpp:408] relu2 <- ip2
I0428 19:53:28.809242 27773 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:28.809474 27773 net.cpp:124] Setting up relu2
I0428 19:53:28.809483 27773 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:28.809485 27773 net.cpp:139] Memory required for data: 3394800
I0428 19:53:28.809494 27773 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:28.809500 27773 net.cpp:86] Creating Layer ip3
I0428 19:53:28.809504 27773 net.cpp:408] ip3 <- ip2
I0428 19:53:28.809509 27773 net.cpp:382] ip3 -> ip3
I0428 19:53:28.809612 27773 net.cpp:124] Setting up ip3
I0428 19:53:28.809620 27773 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:28.809623 27773 net.cpp:139] Memory required for data: 3398800
I0428 19:53:28.809630 27773 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:28.809635 27773 net.cpp:86] Creating Layer relu3
I0428 19:53:28.809638 27773 net.cpp:408] relu3 <- ip3
I0428 19:53:28.809643 27773 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:28.810475 27773 net.cpp:124] Setting up relu3
I0428 19:53:28.810487 27773 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:28.810492 27773 net.cpp:139] Memory required for data: 3402800
I0428 19:53:28.810494 27773 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:28.810501 27773 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:28.810504 27773 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:28.810510 27773 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:28.810516 27773 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:28.810561 27773 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:28.810566 27773 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:28.810570 27773 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:28.810573 27773 net.cpp:139] Memory required for data: 3410800
I0428 19:53:28.810582 27773 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:28.810590 27773 net.cpp:86] Creating Layer accuracy
I0428 19:53:28.810592 27773 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:28.810601 27773 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:28.810606 27773 net.cpp:382] accuracy -> accuracy
I0428 19:53:28.810613 27773 net.cpp:124] Setting up accuracy
I0428 19:53:28.810616 27773 net.cpp:131] Top shape: (1)
I0428 19:53:28.810619 27773 net.cpp:139] Memory required for data: 3410804
I0428 19:53:28.810626 27773 layer_factory.hpp:77] Creating layer loss
I0428 19:53:28.810632 27773 net.cpp:86] Creating Layer loss
I0428 19:53:28.810636 27773 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:28.810641 27773 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:28.810644 27773 net.cpp:382] loss -> loss
I0428 19:53:28.810650 27773 layer_factory.hpp:77] Creating layer loss
I0428 19:53:28.810921 27773 net.cpp:124] Setting up loss
I0428 19:53:28.810931 27773 net.cpp:131] Top shape: (1)
I0428 19:53:28.810935 27773 net.cpp:134]     with loss weight 1
I0428 19:53:28.810941 27773 net.cpp:139] Memory required for data: 3410808
I0428 19:53:28.810955 27773 net.cpp:200] loss needs backward computation.
I0428 19:53:28.810958 27773 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:28.810962 27773 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:28.810966 27773 net.cpp:200] relu3 needs backward computation.
I0428 19:53:28.810969 27773 net.cpp:200] ip3 needs backward computation.
I0428 19:53:28.810973 27773 net.cpp:200] relu2 needs backward computation.
I0428 19:53:28.810991 27773 net.cpp:200] ip2 needs backward computation.
I0428 19:53:28.810993 27773 net.cpp:200] relu1 needs backward computation.
I0428 19:53:28.810997 27773 net.cpp:200] ip1 needs backward computation.
I0428 19:53:28.810999 27773 net.cpp:200] pool1 needs backward computation.
I0428 19:53:28.811002 27773 net.cpp:200] conv1 needs backward computation.
I0428 19:53:28.811005 27773 net.cpp:200] pool0 needs backward computation.
I0428 19:53:28.811008 27773 net.cpp:200] conv0 needs backward computation.
I0428 19:53:28.811012 27773 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:28.811017 27773 net.cpp:202] mnist does not need backward computation.
I0428 19:53:28.811019 27773 net.cpp:244] This network produces output accuracy
I0428 19:53:28.811022 27773 net.cpp:244] This network produces output loss
I0428 19:53:28.811034 27773 net.cpp:257] Network initialization done.
I0428 19:53:28.811076 27773 solver.cpp:56] Solver scaffolding done.
I0428 19:53:28.811429 27773 caffe.cpp:248] Starting Optimization
I0428 19:53:28.811435 27773 solver.cpp:273] Solving LeNet
I0428 19:53:28.811439 27773 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:28.812292 27773 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:28.816236 27773 blocking_queue.cpp:49] Waiting for data
I0428 19:53:28.890512 27782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:28.891034 27773 solver.cpp:398]     Test net output #0: accuracy = 0.0771
I0428 19:53:28.891055 27773 solver.cpp:398]     Test net output #1: loss = 2.29919 (* 1 = 2.29919 loss)
I0428 19:53:28.894542 27773 solver.cpp:219] Iteration 0 (-1.16206e-30 iter/s, 0.083072s/100 iters), loss = 2.29617
I0428 19:53:28.894582 27773 solver.cpp:238]     Train net output #0: loss = 2.29617 (* 1 = 2.29617 loss)
I0428 19:53:28.894593 27773 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:28.997951 27773 solver.cpp:219] Iteration 100 (967.526 iter/s, 0.103356s/100 iters), loss = 0.984591
I0428 19:53:28.997990 27773 solver.cpp:238]     Train net output #0: loss = 0.984591 (* 1 = 0.984591 loss)
I0428 19:53:28.997995 27773 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:29.103783 27773 solver.cpp:219] Iteration 200 (945.219 iter/s, 0.105796s/100 iters), loss = 0.685474
I0428 19:53:29.103808 27773 solver.cpp:238]     Train net output #0: loss = 0.685474 (* 1 = 0.685474 loss)
I0428 19:53:29.103814 27773 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:29.213258 27773 solver.cpp:219] Iteration 300 (913.777 iter/s, 0.109436s/100 iters), loss = 1.03164
I0428 19:53:29.213297 27773 solver.cpp:238]     Train net output #0: loss = 1.03164 (* 1 = 1.03164 loss)
I0428 19:53:29.213306 27773 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:29.325850 27773 solver.cpp:219] Iteration 400 (888.552 iter/s, 0.112543s/100 iters), loss = 1.04926
I0428 19:53:29.325880 27773 solver.cpp:238]     Train net output #0: loss = 1.04926 (* 1 = 1.04926 loss)
I0428 19:53:29.325886 27773 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:29.431140 27773 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:29.477543 27782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:29.478063 27773 solver.cpp:398]     Test net output #0: accuracy = 0.6826
I0428 19:53:29.478086 27773 solver.cpp:398]     Test net output #1: loss = 0.808662 (* 1 = 0.808662 loss)
I0428 19:53:29.479107 27773 solver.cpp:219] Iteration 500 (652.722 iter/s, 0.153205s/100 iters), loss = 0.920199
I0428 19:53:29.479154 27773 solver.cpp:238]     Train net output #0: loss = 0.920199 (* 1 = 0.920199 loss)
I0428 19:53:29.479176 27773 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:29.582924 27773 solver.cpp:219] Iteration 600 (963.755 iter/s, 0.103761s/100 iters), loss = 0.644479
I0428 19:53:29.582964 27773 solver.cpp:238]     Train net output #0: loss = 0.644479 (* 1 = 0.644479 loss)
I0428 19:53:29.582970 27773 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:29.696705 27773 solver.cpp:219] Iteration 700 (879.178 iter/s, 0.113743s/100 iters), loss = 0.55611
I0428 19:53:29.696756 27773 solver.cpp:238]     Train net output #0: loss = 0.55611 (* 1 = 0.55611 loss)
I0428 19:53:29.696779 27773 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:29.802577 27773 solver.cpp:219] Iteration 800 (945.054 iter/s, 0.105814s/100 iters), loss = 1.12091
I0428 19:53:29.802605 27773 solver.cpp:238]     Train net output #0: loss = 1.12091 (* 1 = 1.12091 loss)
I0428 19:53:29.802616 27773 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:29.912186 27773 solver.cpp:219] Iteration 900 (912.658 iter/s, 0.10957s/100 iters), loss = 0.764612
I0428 19:53:29.912228 27773 solver.cpp:238]     Train net output #0: loss = 0.764612 (* 1 = 0.764612 loss)
I0428 19:53:29.912236 27773 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:29.948421 27779 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:30.019810 27773 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:30.021255 27773 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:30.021975 27773 solver.cpp:311] Iteration 1000, loss = 0.690311
I0428 19:53:30.021991 27773 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:30.067168 27782 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:30.068495 27773 solver.cpp:398]     Test net output #0: accuracy = 0.6889
I0428 19:53:30.068527 27773 solver.cpp:398]     Test net output #1: loss = 0.768438 (* 1 = 0.768438 loss)
I0428 19:53:30.068545 27773 solver.cpp:316] Optimization Done.
I0428 19:53:30.068548 27773 caffe.cpp:259] Optimization Done.
