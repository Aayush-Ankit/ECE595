I0428 20:39:13.382989  5245 caffe.cpp:218] Using GPUs 0
I0428 20:39:13.420704  5245 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:39:13.933995  5245 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1676.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:39:13.934137  5245 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1676.prototxt
I0428 20:39:13.934558  5245 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:39:13.934578  5245 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:39:13.934682  5245 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:39:13.934762  5245 layer_factory.hpp:77] Creating layer mnist
I0428 20:39:13.934864  5245 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:39:13.934887  5245 net.cpp:86] Creating Layer mnist
I0428 20:39:13.934896  5245 net.cpp:382] mnist -> data
I0428 20:39:13.934918  5245 net.cpp:382] mnist -> label
I0428 20:39:13.936023  5245 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:39:13.938742  5245 net.cpp:124] Setting up mnist
I0428 20:39:13.938765  5245 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:39:13.938771  5245 net.cpp:131] Top shape: 64 (64)
I0428 20:39:13.938774  5245 net.cpp:139] Memory required for data: 200960
I0428 20:39:13.938781  5245 layer_factory.hpp:77] Creating layer conv0
I0428 20:39:13.938818  5245 net.cpp:86] Creating Layer conv0
I0428 20:39:13.938848  5245 net.cpp:408] conv0 <- data
I0428 20:39:13.938861  5245 net.cpp:382] conv0 -> conv0
I0428 20:39:14.201663  5245 net.cpp:124] Setting up conv0
I0428 20:39:14.201689  5245 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:39:14.201692  5245 net.cpp:139] Memory required for data: 14946560
I0428 20:39:14.201707  5245 layer_factory.hpp:77] Creating layer pool0
I0428 20:39:14.201720  5245 net.cpp:86] Creating Layer pool0
I0428 20:39:14.201725  5245 net.cpp:408] pool0 <- conv0
I0428 20:39:14.201730  5245 net.cpp:382] pool0 -> pool0
I0428 20:39:14.201776  5245 net.cpp:124] Setting up pool0
I0428 20:39:14.201781  5245 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:39:14.201783  5245 net.cpp:139] Memory required for data: 18632960
I0428 20:39:14.201786  5245 layer_factory.hpp:77] Creating layer conv1
I0428 20:39:14.201797  5245 net.cpp:86] Creating Layer conv1
I0428 20:39:14.201799  5245 net.cpp:408] conv1 <- pool0
I0428 20:39:14.201804  5245 net.cpp:382] conv1 -> conv1
I0428 20:39:14.205771  5245 net.cpp:124] Setting up conv1
I0428 20:39:14.205786  5245 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:39:14.205790  5245 net.cpp:139] Memory required for data: 20271360
I0428 20:39:14.205798  5245 layer_factory.hpp:77] Creating layer pool1
I0428 20:39:14.205807  5245 net.cpp:86] Creating Layer pool1
I0428 20:39:14.205811  5245 net.cpp:408] pool1 <- conv1
I0428 20:39:14.205816  5245 net.cpp:382] pool1 -> pool1
I0428 20:39:14.205852  5245 net.cpp:124] Setting up pool1
I0428 20:39:14.205857  5245 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:39:14.205859  5245 net.cpp:139] Memory required for data: 20680960
I0428 20:39:14.205862  5245 layer_factory.hpp:77] Creating layer ip1
I0428 20:39:14.205870  5245 net.cpp:86] Creating Layer ip1
I0428 20:39:14.205873  5245 net.cpp:408] ip1 <- pool1
I0428 20:39:14.205878  5245 net.cpp:382] ip1 -> ip1
I0428 20:39:14.206394  5245 net.cpp:124] Setting up ip1
I0428 20:39:14.206403  5245 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:14.206405  5245 net.cpp:139] Memory required for data: 20693760
I0428 20:39:14.206413  5245 layer_factory.hpp:77] Creating layer relu1
I0428 20:39:14.206420  5245 net.cpp:86] Creating Layer relu1
I0428 20:39:14.206423  5245 net.cpp:408] relu1 <- ip1
I0428 20:39:14.206428  5245 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:39:14.206593  5245 net.cpp:124] Setting up relu1
I0428 20:39:14.206601  5245 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:14.206604  5245 net.cpp:139] Memory required for data: 20706560
I0428 20:39:14.206607  5245 layer_factory.hpp:77] Creating layer ip2
I0428 20:39:14.206614  5245 net.cpp:86] Creating Layer ip2
I0428 20:39:14.206617  5245 net.cpp:408] ip2 <- ip1
I0428 20:39:14.206622  5245 net.cpp:382] ip2 -> ip2
I0428 20:39:14.206732  5245 net.cpp:124] Setting up ip2
I0428 20:39:14.206740  5245 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:14.206758  5245 net.cpp:139] Memory required for data: 20719360
I0428 20:39:14.206763  5245 layer_factory.hpp:77] Creating layer relu2
I0428 20:39:14.206771  5245 net.cpp:86] Creating Layer relu2
I0428 20:39:14.206774  5245 net.cpp:408] relu2 <- ip2
I0428 20:39:14.206779  5245 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:39:14.207502  5245 net.cpp:124] Setting up relu2
I0428 20:39:14.207516  5245 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:39:14.207520  5245 net.cpp:139] Memory required for data: 20732160
I0428 20:39:14.207523  5245 layer_factory.hpp:77] Creating layer ip3
I0428 20:39:14.207530  5245 net.cpp:86] Creating Layer ip3
I0428 20:39:14.207532  5245 net.cpp:408] ip3 <- ip2
I0428 20:39:14.207538  5245 net.cpp:382] ip3 -> ip3
I0428 20:39:14.207643  5245 net.cpp:124] Setting up ip3
I0428 20:39:14.207651  5245 net.cpp:131] Top shape: 64 10 (640)
I0428 20:39:14.207654  5245 net.cpp:139] Memory required for data: 20734720
I0428 20:39:14.207661  5245 layer_factory.hpp:77] Creating layer relu3
I0428 20:39:14.207665  5245 net.cpp:86] Creating Layer relu3
I0428 20:39:14.207669  5245 net.cpp:408] relu3 <- ip3
I0428 20:39:14.207687  5245 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:39:14.207862  5245 net.cpp:124] Setting up relu3
I0428 20:39:14.207871  5245 net.cpp:131] Top shape: 64 10 (640)
I0428 20:39:14.207875  5245 net.cpp:139] Memory required for data: 20737280
I0428 20:39:14.207877  5245 layer_factory.hpp:77] Creating layer loss
I0428 20:39:14.207883  5245 net.cpp:86] Creating Layer loss
I0428 20:39:14.207886  5245 net.cpp:408] loss <- ip3
I0428 20:39:14.207891  5245 net.cpp:408] loss <- label
I0428 20:39:14.207896  5245 net.cpp:382] loss -> loss
I0428 20:39:14.207909  5245 layer_factory.hpp:77] Creating layer loss
I0428 20:39:14.208153  5245 net.cpp:124] Setting up loss
I0428 20:39:14.208161  5245 net.cpp:131] Top shape: (1)
I0428 20:39:14.208164  5245 net.cpp:134]     with loss weight 1
I0428 20:39:14.208196  5245 net.cpp:139] Memory required for data: 20737284
I0428 20:39:14.208199  5245 net.cpp:200] loss needs backward computation.
I0428 20:39:14.208204  5245 net.cpp:200] relu3 needs backward computation.
I0428 20:39:14.208206  5245 net.cpp:200] ip3 needs backward computation.
I0428 20:39:14.208209  5245 net.cpp:200] relu2 needs backward computation.
I0428 20:39:14.208211  5245 net.cpp:200] ip2 needs backward computation.
I0428 20:39:14.208214  5245 net.cpp:200] relu1 needs backward computation.
I0428 20:39:14.208216  5245 net.cpp:200] ip1 needs backward computation.
I0428 20:39:14.208220  5245 net.cpp:200] pool1 needs backward computation.
I0428 20:39:14.208222  5245 net.cpp:200] conv1 needs backward computation.
I0428 20:39:14.208225  5245 net.cpp:200] pool0 needs backward computation.
I0428 20:39:14.208228  5245 net.cpp:200] conv0 needs backward computation.
I0428 20:39:14.208231  5245 net.cpp:202] mnist does not need backward computation.
I0428 20:39:14.208235  5245 net.cpp:244] This network produces output loss
I0428 20:39:14.208245  5245 net.cpp:257] Network initialization done.
I0428 20:39:14.208576  5245 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1676.prototxt
I0428 20:39:14.208618  5245 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:39:14.208714  5245 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:39:14.208796  5245 layer_factory.hpp:77] Creating layer mnist
I0428 20:39:14.208881  5245 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:39:14.208900  5245 net.cpp:86] Creating Layer mnist
I0428 20:39:14.208909  5245 net.cpp:382] mnist -> data
I0428 20:39:14.208917  5245 net.cpp:382] mnist -> label
I0428 20:39:14.209017  5245 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:39:14.210904  5245 net.cpp:124] Setting up mnist
I0428 20:39:14.210947  5245 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:39:14.210952  5245 net.cpp:131] Top shape: 100 (100)
I0428 20:39:14.210969  5245 net.cpp:139] Memory required for data: 314000
I0428 20:39:14.210973  5245 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:39:14.210979  5245 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:39:14.210983  5245 net.cpp:408] label_mnist_1_split <- label
I0428 20:39:14.210990  5245 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:39:14.210996  5245 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:39:14.211040  5245 net.cpp:124] Setting up label_mnist_1_split
I0428 20:39:14.211046  5245 net.cpp:131] Top shape: 100 (100)
I0428 20:39:14.211050  5245 net.cpp:131] Top shape: 100 (100)
I0428 20:39:14.211052  5245 net.cpp:139] Memory required for data: 314800
I0428 20:39:14.211055  5245 layer_factory.hpp:77] Creating layer conv0
I0428 20:39:14.211063  5245 net.cpp:86] Creating Layer conv0
I0428 20:39:14.211067  5245 net.cpp:408] conv0 <- data
I0428 20:39:14.211072  5245 net.cpp:382] conv0 -> conv0
I0428 20:39:14.212877  5245 net.cpp:124] Setting up conv0
I0428 20:39:14.212893  5245 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:39:14.212896  5245 net.cpp:139] Memory required for data: 23354800
I0428 20:39:14.212905  5245 layer_factory.hpp:77] Creating layer pool0
I0428 20:39:14.212913  5245 net.cpp:86] Creating Layer pool0
I0428 20:39:14.212916  5245 net.cpp:408] pool0 <- conv0
I0428 20:39:14.212921  5245 net.cpp:382] pool0 -> pool0
I0428 20:39:14.212962  5245 net.cpp:124] Setting up pool0
I0428 20:39:14.212980  5245 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:39:14.212985  5245 net.cpp:139] Memory required for data: 29114800
I0428 20:39:14.212987  5245 layer_factory.hpp:77] Creating layer conv1
I0428 20:39:14.212997  5245 net.cpp:86] Creating Layer conv1
I0428 20:39:14.213001  5245 net.cpp:408] conv1 <- pool0
I0428 20:39:14.213007  5245 net.cpp:382] conv1 -> conv1
I0428 20:39:14.215911  5245 net.cpp:124] Setting up conv1
I0428 20:39:14.215924  5245 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:39:14.215929  5245 net.cpp:139] Memory required for data: 31674800
I0428 20:39:14.215937  5245 layer_factory.hpp:77] Creating layer pool1
I0428 20:39:14.215945  5245 net.cpp:86] Creating Layer pool1
I0428 20:39:14.215947  5245 net.cpp:408] pool1 <- conv1
I0428 20:39:14.215953  5245 net.cpp:382] pool1 -> pool1
I0428 20:39:14.215998  5245 net.cpp:124] Setting up pool1
I0428 20:39:14.216009  5245 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:39:14.216012  5245 net.cpp:139] Memory required for data: 32314800
I0428 20:39:14.216015  5245 layer_factory.hpp:77] Creating layer ip1
I0428 20:39:14.216022  5245 net.cpp:86] Creating Layer ip1
I0428 20:39:14.216025  5245 net.cpp:408] ip1 <- pool1
I0428 20:39:14.216029  5245 net.cpp:382] ip1 -> ip1
I0428 20:39:14.216569  5245 net.cpp:124] Setting up ip1
I0428 20:39:14.216588  5245 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:14.216603  5245 net.cpp:139] Memory required for data: 32334800
I0428 20:39:14.216610  5245 layer_factory.hpp:77] Creating layer relu1
I0428 20:39:14.216617  5245 net.cpp:86] Creating Layer relu1
I0428 20:39:14.216627  5245 net.cpp:408] relu1 <- ip1
I0428 20:39:14.216634  5245 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:39:14.216835  5245 net.cpp:124] Setting up relu1
I0428 20:39:14.216845  5245 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:14.216866  5245 net.cpp:139] Memory required for data: 32354800
I0428 20:39:14.216869  5245 layer_factory.hpp:77] Creating layer ip2
I0428 20:39:14.216894  5245 net.cpp:86] Creating Layer ip2
I0428 20:39:14.216900  5245 net.cpp:408] ip2 <- ip1
I0428 20:39:14.216905  5245 net.cpp:382] ip2 -> ip2
I0428 20:39:14.217077  5245 net.cpp:124] Setting up ip2
I0428 20:39:14.217087  5245 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:14.217089  5245 net.cpp:139] Memory required for data: 32374800
I0428 20:39:14.217095  5245 layer_factory.hpp:77] Creating layer relu2
I0428 20:39:14.217103  5245 net.cpp:86] Creating Layer relu2
I0428 20:39:14.217110  5245 net.cpp:408] relu2 <- ip2
I0428 20:39:14.217116  5245 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:39:14.217321  5245 net.cpp:124] Setting up relu2
I0428 20:39:14.217330  5245 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:39:14.217334  5245 net.cpp:139] Memory required for data: 32394800
I0428 20:39:14.217336  5245 layer_factory.hpp:77] Creating layer ip3
I0428 20:39:14.217341  5245 net.cpp:86] Creating Layer ip3
I0428 20:39:14.217345  5245 net.cpp:408] ip3 <- ip2
I0428 20:39:14.217353  5245 net.cpp:382] ip3 -> ip3
I0428 20:39:14.217485  5245 net.cpp:124] Setting up ip3
I0428 20:39:14.217494  5245 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:14.217496  5245 net.cpp:139] Memory required for data: 32398800
I0428 20:39:14.217504  5245 layer_factory.hpp:77] Creating layer relu3
I0428 20:39:14.217520  5245 net.cpp:86] Creating Layer relu3
I0428 20:39:14.217523  5245 net.cpp:408] relu3 <- ip3
I0428 20:39:14.217527  5245 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:39:14.218331  5245 net.cpp:124] Setting up relu3
I0428 20:39:14.218343  5245 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:14.218363  5245 net.cpp:139] Memory required for data: 32402800
I0428 20:39:14.218365  5245 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:39:14.218371  5245 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:39:14.218375  5245 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:39:14.218381  5245 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:39:14.218387  5245 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:39:14.218426  5245 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:39:14.218432  5245 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:14.218437  5245 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:39:14.218442  5245 net.cpp:139] Memory required for data: 32410800
I0428 20:39:14.218447  5245 layer_factory.hpp:77] Creating layer accuracy
I0428 20:39:14.218452  5245 net.cpp:86] Creating Layer accuracy
I0428 20:39:14.218456  5245 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:39:14.218461  5245 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:39:14.218477  5245 net.cpp:382] accuracy -> accuracy
I0428 20:39:14.218483  5245 net.cpp:124] Setting up accuracy
I0428 20:39:14.218487  5245 net.cpp:131] Top shape: (1)
I0428 20:39:14.218490  5245 net.cpp:139] Memory required for data: 32410804
I0428 20:39:14.218493  5245 layer_factory.hpp:77] Creating layer loss
I0428 20:39:14.218497  5245 net.cpp:86] Creating Layer loss
I0428 20:39:14.218500  5245 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:39:14.218503  5245 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:39:14.218508  5245 net.cpp:382] loss -> loss
I0428 20:39:14.218513  5245 layer_factory.hpp:77] Creating layer loss
I0428 20:39:14.218749  5245 net.cpp:124] Setting up loss
I0428 20:39:14.218758  5245 net.cpp:131] Top shape: (1)
I0428 20:39:14.218761  5245 net.cpp:134]     with loss weight 1
I0428 20:39:14.218776  5245 net.cpp:139] Memory required for data: 32410808
I0428 20:39:14.218780  5245 net.cpp:200] loss needs backward computation.
I0428 20:39:14.218785  5245 net.cpp:202] accuracy does not need backward computation.
I0428 20:39:14.218787  5245 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:39:14.218791  5245 net.cpp:200] relu3 needs backward computation.
I0428 20:39:14.218793  5245 net.cpp:200] ip3 needs backward computation.
I0428 20:39:14.218796  5245 net.cpp:200] relu2 needs backward computation.
I0428 20:39:14.218798  5245 net.cpp:200] ip2 needs backward computation.
I0428 20:39:14.218801  5245 net.cpp:200] relu1 needs backward computation.
I0428 20:39:14.218804  5245 net.cpp:200] ip1 needs backward computation.
I0428 20:39:14.218806  5245 net.cpp:200] pool1 needs backward computation.
I0428 20:39:14.218809  5245 net.cpp:200] conv1 needs backward computation.
I0428 20:39:14.218812  5245 net.cpp:200] pool0 needs backward computation.
I0428 20:39:14.218816  5245 net.cpp:200] conv0 needs backward computation.
I0428 20:39:14.218819  5245 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:39:14.218822  5245 net.cpp:202] mnist does not need backward computation.
I0428 20:39:14.218825  5245 net.cpp:244] This network produces output accuracy
I0428 20:39:14.218828  5245 net.cpp:244] This network produces output loss
I0428 20:39:14.218839  5245 net.cpp:257] Network initialization done.
I0428 20:39:14.218879  5245 solver.cpp:56] Solver scaffolding done.
I0428 20:39:14.219238  5245 caffe.cpp:248] Starting Optimization
I0428 20:39:14.219244  5245 solver.cpp:273] Solving LeNet
I0428 20:39:14.219246  5245 solver.cpp:274] Learning Rate Policy: inv
I0428 20:39:14.220593  5245 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:39:14.352610  5252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:14.356186  5245 solver.cpp:398]     Test net output #0: accuracy = 0.1053
I0428 20:39:14.356223  5245 solver.cpp:398]     Test net output #1: loss = 2.31427 (* 1 = 2.31427 loss)
I0428 20:39:14.361577  5245 solver.cpp:219] Iteration 0 (-9.93153e-32 iter/s, 0.142283s/100 iters), loss = 2.32053
I0428 20:39:14.361618  5245 solver.cpp:238]     Train net output #0: loss = 2.32053 (* 1 = 2.32053 loss)
I0428 20:39:14.361629  5245 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:39:14.641759  5245 solver.cpp:219] Iteration 100 (356.992 iter/s, 0.280118s/100 iters), loss = 0.650549
I0428 20:39:14.641791  5245 solver.cpp:238]     Train net output #0: loss = 0.650549 (* 1 = 0.650549 loss)
I0428 20:39:14.641800  5245 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:39:14.912840  5245 solver.cpp:219] Iteration 200 (368.965 iter/s, 0.271028s/100 iters), loss = 0.42473
I0428 20:39:14.912881  5245 solver.cpp:238]     Train net output #0: loss = 0.42473 (* 1 = 0.42473 loss)
I0428 20:39:14.912889  5245 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:39:15.181447  5245 solver.cpp:219] Iteration 300 (372.352 iter/s, 0.268563s/100 iters), loss = 0.604912
I0428 20:39:15.181488  5245 solver.cpp:238]     Train net output #0: loss = 0.604912 (* 1 = 0.604912 loss)
I0428 20:39:15.181494  5245 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:39:15.451035  5245 solver.cpp:219] Iteration 400 (371.015 iter/s, 0.269531s/100 iters), loss = 0.455497
I0428 20:39:15.451059  5245 solver.cpp:238]     Train net output #0: loss = 0.455497 (* 1 = 0.455497 loss)
I0428 20:39:15.451066  5245 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:39:15.720033  5245 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:39:15.844843  5252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:15.848418  5245 solver.cpp:398]     Test net output #0: accuracy = 0.7861
I0428 20:39:15.848455  5245 solver.cpp:398]     Test net output #1: loss = 0.524179 (* 1 = 0.524179 loss)
I0428 20:39:15.851086  5245 solver.cpp:219] Iteration 500 (249.999 iter/s, 0.400001s/100 iters), loss = 0.462992
I0428 20:39:15.851141  5245 solver.cpp:238]     Train net output #0: loss = 0.462992 (* 1 = 0.462992 loss)
I0428 20:39:15.851164  5245 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:39:16.128720  5245 solver.cpp:219] Iteration 600 (360.261 iter/s, 0.277577s/100 iters), loss = 0.344578
I0428 20:39:16.128777  5245 solver.cpp:238]     Train net output #0: loss = 0.344578 (* 1 = 0.344578 loss)
I0428 20:39:16.128784  5245 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:39:16.408540  5245 solver.cpp:219] Iteration 700 (357.448 iter/s, 0.279761s/100 iters), loss = 0.411345
I0428 20:39:16.408582  5245 solver.cpp:238]     Train net output #0: loss = 0.411345 (* 1 = 0.411345 loss)
I0428 20:39:16.408589  5245 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:39:16.695241  5245 solver.cpp:219] Iteration 800 (348.851 iter/s, 0.286655s/100 iters), loss = 0.385332
I0428 20:39:16.695282  5245 solver.cpp:238]     Train net output #0: loss = 0.385332 (* 1 = 0.385332 loss)
I0428 20:39:16.695288  5245 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:39:16.983911  5245 solver.cpp:219] Iteration 900 (346.471 iter/s, 0.288625s/100 iters), loss = 0.37593
I0428 20:39:16.983952  5245 solver.cpp:238]     Train net output #0: loss = 0.37593 (* 1 = 0.37593 loss)
I0428 20:39:16.983959  5245 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:39:17.080600  5251 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:17.268437  5245 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:39:17.274886  5245 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:39:17.278575  5245 solver.cpp:311] Iteration 1000, loss = 0.340564
I0428 20:39:17.278594  5245 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:39:17.409931  5252 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:39:17.413396  5245 solver.cpp:398]     Test net output #0: accuracy = 0.8874
I0428 20:39:17.413419  5245 solver.cpp:398]     Test net output #1: loss = 0.281709 (* 1 = 0.281709 loss)
I0428 20:39:17.413439  5245 solver.cpp:316] Optimization Done.
I0428 20:39:17.413442  5245 caffe.cpp:259] Optimization Done.
