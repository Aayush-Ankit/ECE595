I0428 19:46:14.851698 25966 caffe.cpp:218] Using GPUs 0
I0428 19:46:14.890051 25966 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:15.406780 25966 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test488.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:15.406913 25966 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test488.prototxt
I0428 19:46:15.407327 25966 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:15.407346 25966 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:15.407449 25966 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:15.407527 25966 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:15.407626 25966 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:15.407651 25966 net.cpp:86] Creating Layer mnist
I0428 19:46:15.407660 25966 net.cpp:382] mnist -> data
I0428 19:46:15.407682 25966 net.cpp:382] mnist -> label
I0428 19:46:15.408773 25966 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:15.411237 25966 net.cpp:124] Setting up mnist
I0428 19:46:15.411257 25966 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:15.411264 25966 net.cpp:131] Top shape: 64 (64)
I0428 19:46:15.411268 25966 net.cpp:139] Memory required for data: 200960
I0428 19:46:15.411275 25966 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:15.411290 25966 net.cpp:86] Creating Layer conv0
I0428 19:46:15.411311 25966 net.cpp:408] conv0 <- data
I0428 19:46:15.411325 25966 net.cpp:382] conv0 -> conv0
I0428 19:46:15.699571 25966 net.cpp:124] Setting up conv0
I0428 19:46:15.699599 25966 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:15.699604 25966 net.cpp:139] Memory required for data: 495872
I0428 19:46:15.699618 25966 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:15.699630 25966 net.cpp:86] Creating Layer pool0
I0428 19:46:15.699635 25966 net.cpp:408] pool0 <- conv0
I0428 19:46:15.699640 25966 net.cpp:382] pool0 -> pool0
I0428 19:46:15.699695 25966 net.cpp:124] Setting up pool0
I0428 19:46:15.699702 25966 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:15.699705 25966 net.cpp:139] Memory required for data: 569600
I0428 19:46:15.699723 25966 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:15.699733 25966 net.cpp:86] Creating Layer conv1
I0428 19:46:15.699738 25966 net.cpp:408] conv1 <- pool0
I0428 19:46:15.699743 25966 net.cpp:382] conv1 -> conv1
I0428 19:46:15.702481 25966 net.cpp:124] Setting up conv1
I0428 19:46:15.702497 25966 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:15.702500 25966 net.cpp:139] Memory required for data: 2208000
I0428 19:46:15.702508 25966 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:15.702517 25966 net.cpp:86] Creating Layer pool1
I0428 19:46:15.702520 25966 net.cpp:408] pool1 <- conv1
I0428 19:46:15.702525 25966 net.cpp:382] pool1 -> pool1
I0428 19:46:15.702561 25966 net.cpp:124] Setting up pool1
I0428 19:46:15.702566 25966 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:15.702569 25966 net.cpp:139] Memory required for data: 2617600
I0428 19:46:15.702572 25966 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:15.702579 25966 net.cpp:86] Creating Layer ip1
I0428 19:46:15.702582 25966 net.cpp:408] ip1 <- pool1
I0428 19:46:15.702586 25966 net.cpp:382] ip1 -> ip1
I0428 19:46:15.702800 25966 net.cpp:124] Setting up ip1
I0428 19:46:15.702808 25966 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:15.702811 25966 net.cpp:139] Memory required for data: 2620160
I0428 19:46:15.702818 25966 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:15.702823 25966 net.cpp:86] Creating Layer relu1
I0428 19:46:15.702831 25966 net.cpp:408] relu1 <- ip1
I0428 19:46:15.702834 25966 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:15.702996 25966 net.cpp:124] Setting up relu1
I0428 19:46:15.703006 25966 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:15.703008 25966 net.cpp:139] Memory required for data: 2622720
I0428 19:46:15.703011 25966 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:15.703017 25966 net.cpp:86] Creating Layer ip2
I0428 19:46:15.703021 25966 net.cpp:408] ip2 <- ip1
I0428 19:46:15.703025 25966 net.cpp:382] ip2 -> ip2
I0428 19:46:15.703121 25966 net.cpp:124] Setting up ip2
I0428 19:46:15.703127 25966 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:15.703130 25966 net.cpp:139] Memory required for data: 2635520
I0428 19:46:15.703136 25966 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:15.703142 25966 net.cpp:86] Creating Layer relu2
I0428 19:46:15.703147 25966 net.cpp:408] relu2 <- ip2
I0428 19:46:15.703152 25966 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:15.703948 25966 net.cpp:124] Setting up relu2
I0428 19:46:15.703959 25966 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:15.703963 25966 net.cpp:139] Memory required for data: 2648320
I0428 19:46:15.703966 25966 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:15.703972 25966 net.cpp:86] Creating Layer ip3
I0428 19:46:15.703976 25966 net.cpp:408] ip3 <- ip2
I0428 19:46:15.703981 25966 net.cpp:382] ip3 -> ip3
I0428 19:46:15.704079 25966 net.cpp:124] Setting up ip3
I0428 19:46:15.704087 25966 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:15.704089 25966 net.cpp:139] Memory required for data: 2650880
I0428 19:46:15.704097 25966 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:15.704105 25966 net.cpp:86] Creating Layer relu3
I0428 19:46:15.704108 25966 net.cpp:408] relu3 <- ip3
I0428 19:46:15.704113 25966 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:15.704275 25966 net.cpp:124] Setting up relu3
I0428 19:46:15.704283 25966 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:15.704286 25966 net.cpp:139] Memory required for data: 2653440
I0428 19:46:15.704289 25966 layer_factory.hpp:77] Creating layer loss
I0428 19:46:15.704295 25966 net.cpp:86] Creating Layer loss
I0428 19:46:15.704298 25966 net.cpp:408] loss <- ip3
I0428 19:46:15.704303 25966 net.cpp:408] loss <- label
I0428 19:46:15.704308 25966 net.cpp:382] loss -> loss
I0428 19:46:15.704325 25966 layer_factory.hpp:77] Creating layer loss
I0428 19:46:15.704550 25966 net.cpp:124] Setting up loss
I0428 19:46:15.704558 25966 net.cpp:131] Top shape: (1)
I0428 19:46:15.704562 25966 net.cpp:134]     with loss weight 1
I0428 19:46:15.704576 25966 net.cpp:139] Memory required for data: 2653444
I0428 19:46:15.704581 25966 net.cpp:200] loss needs backward computation.
I0428 19:46:15.704583 25966 net.cpp:200] relu3 needs backward computation.
I0428 19:46:15.704586 25966 net.cpp:200] ip3 needs backward computation.
I0428 19:46:15.704589 25966 net.cpp:200] relu2 needs backward computation.
I0428 19:46:15.704592 25966 net.cpp:200] ip2 needs backward computation.
I0428 19:46:15.704596 25966 net.cpp:200] relu1 needs backward computation.
I0428 19:46:15.704597 25966 net.cpp:200] ip1 needs backward computation.
I0428 19:46:15.704602 25966 net.cpp:200] pool1 needs backward computation.
I0428 19:46:15.704604 25966 net.cpp:200] conv1 needs backward computation.
I0428 19:46:15.704607 25966 net.cpp:200] pool0 needs backward computation.
I0428 19:46:15.704610 25966 net.cpp:200] conv0 needs backward computation.
I0428 19:46:15.704613 25966 net.cpp:202] mnist does not need backward computation.
I0428 19:46:15.704617 25966 net.cpp:244] This network produces output loss
I0428 19:46:15.704625 25966 net.cpp:257] Network initialization done.
I0428 19:46:15.705018 25966 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test488.prototxt
I0428 19:46:15.705062 25966 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:15.705199 25966 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:15.705276 25966 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:15.705320 25966 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:15.705337 25966 net.cpp:86] Creating Layer mnist
I0428 19:46:15.705340 25966 net.cpp:382] mnist -> data
I0428 19:46:15.705348 25966 net.cpp:382] mnist -> label
I0428 19:46:15.705430 25966 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:15.707358 25966 net.cpp:124] Setting up mnist
I0428 19:46:15.707403 25966 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:15.707409 25966 net.cpp:131] Top shape: 100 (100)
I0428 19:46:15.707413 25966 net.cpp:139] Memory required for data: 314000
I0428 19:46:15.707417 25966 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:15.707437 25966 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:15.707443 25966 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:15.707449 25966 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:15.707456 25966 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:15.707597 25966 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:15.707605 25966 net.cpp:131] Top shape: 100 (100)
I0428 19:46:15.707609 25966 net.cpp:131] Top shape: 100 (100)
I0428 19:46:15.707612 25966 net.cpp:139] Memory required for data: 314800
I0428 19:46:15.707614 25966 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:15.707623 25966 net.cpp:86] Creating Layer conv0
I0428 19:46:15.707626 25966 net.cpp:408] conv0 <- data
I0428 19:46:15.707631 25966 net.cpp:382] conv0 -> conv0
I0428 19:46:15.709266 25966 net.cpp:124] Setting up conv0
I0428 19:46:15.709281 25966 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:15.709285 25966 net.cpp:139] Memory required for data: 775600
I0428 19:46:15.709293 25966 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:15.709300 25966 net.cpp:86] Creating Layer pool0
I0428 19:46:15.709303 25966 net.cpp:408] pool0 <- conv0
I0428 19:46:15.709307 25966 net.cpp:382] pool0 -> pool0
I0428 19:46:15.709342 25966 net.cpp:124] Setting up pool0
I0428 19:46:15.709360 25966 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:15.709363 25966 net.cpp:139] Memory required for data: 890800
I0428 19:46:15.709367 25966 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:15.709375 25966 net.cpp:86] Creating Layer conv1
I0428 19:46:15.709379 25966 net.cpp:408] conv1 <- pool0
I0428 19:46:15.709384 25966 net.cpp:382] conv1 -> conv1
I0428 19:46:15.711081 25966 net.cpp:124] Setting up conv1
I0428 19:46:15.711096 25966 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:15.711098 25966 net.cpp:139] Memory required for data: 3450800
I0428 19:46:15.711107 25966 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:15.711112 25966 net.cpp:86] Creating Layer pool1
I0428 19:46:15.711117 25966 net.cpp:408] pool1 <- conv1
I0428 19:46:15.711122 25966 net.cpp:382] pool1 -> pool1
I0428 19:46:15.711172 25966 net.cpp:124] Setting up pool1
I0428 19:46:15.711180 25966 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:15.711184 25966 net.cpp:139] Memory required for data: 4090800
I0428 19:46:15.711187 25966 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:15.711192 25966 net.cpp:86] Creating Layer ip1
I0428 19:46:15.711195 25966 net.cpp:408] ip1 <- pool1
I0428 19:46:15.711200 25966 net.cpp:382] ip1 -> ip1
I0428 19:46:15.711392 25966 net.cpp:124] Setting up ip1
I0428 19:46:15.711400 25966 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:15.711416 25966 net.cpp:139] Memory required for data: 4094800
I0428 19:46:15.711431 25966 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:15.711436 25966 net.cpp:86] Creating Layer relu1
I0428 19:46:15.711439 25966 net.cpp:408] relu1 <- ip1
I0428 19:46:15.711444 25966 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:15.711632 25966 net.cpp:124] Setting up relu1
I0428 19:46:15.711642 25966 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:15.711645 25966 net.cpp:139] Memory required for data: 4098800
I0428 19:46:15.711649 25966 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:15.711658 25966 net.cpp:86] Creating Layer ip2
I0428 19:46:15.711660 25966 net.cpp:408] ip2 <- ip1
I0428 19:46:15.711665 25966 net.cpp:382] ip2 -> ip2
I0428 19:46:15.711767 25966 net.cpp:124] Setting up ip2
I0428 19:46:15.711774 25966 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:15.711777 25966 net.cpp:139] Memory required for data: 4118800
I0428 19:46:15.711783 25966 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:15.711788 25966 net.cpp:86] Creating Layer relu2
I0428 19:46:15.711792 25966 net.cpp:408] relu2 <- ip2
I0428 19:46:15.711796 25966 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:15.712023 25966 net.cpp:124] Setting up relu2
I0428 19:46:15.712030 25966 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:15.712033 25966 net.cpp:139] Memory required for data: 4138800
I0428 19:46:15.712036 25966 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:15.712043 25966 net.cpp:86] Creating Layer ip3
I0428 19:46:15.712045 25966 net.cpp:408] ip3 <- ip2
I0428 19:46:15.712050 25966 net.cpp:382] ip3 -> ip3
I0428 19:46:15.712200 25966 net.cpp:124] Setting up ip3
I0428 19:46:15.712224 25966 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:15.712227 25966 net.cpp:139] Memory required for data: 4142800
I0428 19:46:15.712236 25966 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:15.712242 25966 net.cpp:86] Creating Layer relu3
I0428 19:46:15.712245 25966 net.cpp:408] relu3 <- ip3
I0428 19:46:15.712250 25966 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:15.713109 25966 net.cpp:124] Setting up relu3
I0428 19:46:15.713122 25966 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:15.713137 25966 net.cpp:139] Memory required for data: 4146800
I0428 19:46:15.713141 25966 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:15.713147 25966 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:15.713151 25966 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:15.713157 25966 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:15.713163 25966 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:15.713243 25966 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:15.713249 25966 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:15.713253 25966 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:15.713256 25966 net.cpp:139] Memory required for data: 4154800
I0428 19:46:15.713259 25966 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:15.713265 25966 net.cpp:86] Creating Layer accuracy
I0428 19:46:15.713268 25966 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:15.713274 25966 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:15.713279 25966 net.cpp:382] accuracy -> accuracy
I0428 19:46:15.713284 25966 net.cpp:124] Setting up accuracy
I0428 19:46:15.713290 25966 net.cpp:131] Top shape: (1)
I0428 19:46:15.713294 25966 net.cpp:139] Memory required for data: 4154804
I0428 19:46:15.713297 25966 layer_factory.hpp:77] Creating layer loss
I0428 19:46:15.713301 25966 net.cpp:86] Creating Layer loss
I0428 19:46:15.713305 25966 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:15.713309 25966 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:15.713313 25966 net.cpp:382] loss -> loss
I0428 19:46:15.713320 25966 layer_factory.hpp:77] Creating layer loss
I0428 19:46:15.713541 25966 net.cpp:124] Setting up loss
I0428 19:46:15.713551 25966 net.cpp:131] Top shape: (1)
I0428 19:46:15.713553 25966 net.cpp:134]     with loss weight 1
I0428 19:46:15.713562 25966 net.cpp:139] Memory required for data: 4154808
I0428 19:46:15.713583 25966 net.cpp:200] loss needs backward computation.
I0428 19:46:15.713588 25966 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:15.713593 25966 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:15.713595 25966 net.cpp:200] relu3 needs backward computation.
I0428 19:46:15.713598 25966 net.cpp:200] ip3 needs backward computation.
I0428 19:46:15.713601 25966 net.cpp:200] relu2 needs backward computation.
I0428 19:46:15.713604 25966 net.cpp:200] ip2 needs backward computation.
I0428 19:46:15.713608 25966 net.cpp:200] relu1 needs backward computation.
I0428 19:46:15.713610 25966 net.cpp:200] ip1 needs backward computation.
I0428 19:46:15.713624 25966 net.cpp:200] pool1 needs backward computation.
I0428 19:46:15.713627 25966 net.cpp:200] conv1 needs backward computation.
I0428 19:46:15.713631 25966 net.cpp:200] pool0 needs backward computation.
I0428 19:46:15.713634 25966 net.cpp:200] conv0 needs backward computation.
I0428 19:46:15.713639 25966 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:15.713642 25966 net.cpp:202] mnist does not need backward computation.
I0428 19:46:15.713645 25966 net.cpp:244] This network produces output accuracy
I0428 19:46:15.713649 25966 net.cpp:244] This network produces output loss
I0428 19:46:15.713660 25966 net.cpp:257] Network initialization done.
I0428 19:46:15.713704 25966 solver.cpp:56] Solver scaffolding done.
I0428 19:46:15.714087 25966 caffe.cpp:248] Starting Optimization
I0428 19:46:15.714092 25966 solver.cpp:273] Solving LeNet
I0428 19:46:15.714095 25966 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:15.714900 25966 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:15.719547 25966 blocking_queue.cpp:49] Waiting for data
I0428 19:46:15.790176 25973 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:15.790782 25966 solver.cpp:398]     Test net output #0: accuracy = 0.1533
I0428 19:46:15.790818 25966 solver.cpp:398]     Test net output #1: loss = 2.2852 (* 1 = 2.2852 loss)
I0428 19:46:15.794420 25966 solver.cpp:219] Iteration 0 (-2.22776e-31 iter/s, 0.0802889s/100 iters), loss = 2.27343
I0428 19:46:15.794442 25966 solver.cpp:238]     Train net output #0: loss = 2.27343 (* 1 = 2.27343 loss)
I0428 19:46:15.794453 25966 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:15.936717 25966 solver.cpp:219] Iteration 100 (702.927 iter/s, 0.142262s/100 iters), loss = 1.67057
I0428 19:46:15.936758 25966 solver.cpp:238]     Train net output #0: loss = 1.67057 (* 1 = 1.67057 loss)
I0428 19:46:15.936779 25966 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:16.087204 25966 solver.cpp:219] Iteration 200 (664.685 iter/s, 0.150447s/100 iters), loss = 1.66263
I0428 19:46:16.087246 25966 solver.cpp:238]     Train net output #0: loss = 1.66263 (* 1 = 1.66263 loss)
I0428 19:46:16.087257 25966 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:16.242192 25966 solver.cpp:219] Iteration 300 (645.426 iter/s, 0.154936s/100 iters), loss = 1.62758
I0428 19:46:16.242220 25966 solver.cpp:238]     Train net output #0: loss = 1.62758 (* 1 = 1.62758 loss)
I0428 19:46:16.242228 25966 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:16.384074 25966 solver.cpp:219] Iteration 400 (705.014 iter/s, 0.141841s/100 iters), loss = 1.91201
I0428 19:46:16.384100 25966 solver.cpp:238]     Train net output #0: loss = 1.91201 (* 1 = 1.91201 loss)
I0428 19:46:16.384106 25966 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:16.525039 25966 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:16.577047 25973 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:16.578876 25966 solver.cpp:398]     Test net output #0: accuracy = 0.3891
I0428 19:46:16.578913 25966 solver.cpp:398]     Test net output #1: loss = 1.63517 (* 1 = 1.63517 loss)
I0428 19:46:16.580359 25966 solver.cpp:219] Iteration 500 (509.603 iter/s, 0.196231s/100 iters), loss = 1.79175
I0428 19:46:16.580399 25966 solver.cpp:238]     Train net output #0: loss = 1.79175 (* 1 = 1.79175 loss)
I0428 19:46:16.580438 25966 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:16.721846 25966 solver.cpp:219] Iteration 600 (706.957 iter/s, 0.141451s/100 iters), loss = 1.57662
I0428 19:46:16.721886 25966 solver.cpp:238]     Train net output #0: loss = 1.57662 (* 1 = 1.57662 loss)
I0428 19:46:16.721892 25966 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:16.863682 25966 solver.cpp:219] Iteration 700 (705.217 iter/s, 0.1418s/100 iters), loss = 1.49725
I0428 19:46:16.863721 25966 solver.cpp:238]     Train net output #0: loss = 1.49725 (* 1 = 1.49725 loss)
I0428 19:46:16.863728 25966 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:17.005307 25966 solver.cpp:219] Iteration 800 (706.268 iter/s, 0.141589s/100 iters), loss = 1.7756
I0428 19:46:17.005347 25966 solver.cpp:238]     Train net output #0: loss = 1.7756 (* 1 = 1.7756 loss)
I0428 19:46:17.005353 25966 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:17.146852 25966 solver.cpp:219] Iteration 900 (706.672 iter/s, 0.141508s/100 iters), loss = 1.53862
I0428 19:46:17.146891 25966 solver.cpp:238]     Train net output #0: loss = 1.53862 (* 1 = 1.53862 loss)
I0428 19:46:17.146898 25966 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:17.194178 25972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:17.286790 25966 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:17.288388 25966 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:17.289024 25966 solver.cpp:311] Iteration 1000, loss = 1.58397
I0428 19:46:17.289041 25966 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:17.339278 25973 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:17.341091 25966 solver.cpp:398]     Test net output #0: accuracy = 0.405
I0428 19:46:17.341140 25966 solver.cpp:398]     Test net output #1: loss = 1.63271 (* 1 = 1.63271 loss)
I0428 19:46:17.341145 25966 solver.cpp:316] Optimization Done.
I0428 19:46:17.341148 25966 caffe.cpp:259] Optimization Done.
