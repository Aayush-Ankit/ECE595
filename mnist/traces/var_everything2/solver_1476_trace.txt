I0428 20:26:43.917639  2868 caffe.cpp:218] Using GPUs 0
I0428 20:26:43.949842  2868 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:44.456542  2868 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1476.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:44.456686  2868 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1476.prototxt
I0428 20:26:44.457116  2868 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:44.457136  2868 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:44.457240  2868 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:44.457320  2868 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:44.457419  2868 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:44.457445  2868 net.cpp:86] Creating Layer mnist
I0428 20:26:44.457453  2868 net.cpp:382] mnist -> data
I0428 20:26:44.457475  2868 net.cpp:382] mnist -> label
I0428 20:26:44.458571  2868 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:44.461246  2868 net.cpp:124] Setting up mnist
I0428 20:26:44.461264  2868 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:44.461272  2868 net.cpp:131] Top shape: 64 (64)
I0428 20:26:44.461275  2868 net.cpp:139] Memory required for data: 200960
I0428 20:26:44.461282  2868 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:44.461298  2868 net.cpp:86] Creating Layer conv0
I0428 20:26:44.461319  2868 net.cpp:408] conv0 <- data
I0428 20:26:44.461333  2868 net.cpp:382] conv0 -> conv0
I0428 20:26:44.710752  2868 net.cpp:124] Setting up conv0
I0428 20:26:44.710778  2868 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:44.710783  2868 net.cpp:139] Memory required for data: 14946560
I0428 20:26:44.710796  2868 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:44.710809  2868 net.cpp:86] Creating Layer pool0
I0428 20:26:44.710813  2868 net.cpp:408] pool0 <- conv0
I0428 20:26:44.710819  2868 net.cpp:382] pool0 -> pool0
I0428 20:26:44.710880  2868 net.cpp:124] Setting up pool0
I0428 20:26:44.710886  2868 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:44.710887  2868 net.cpp:139] Memory required for data: 18632960
I0428 20:26:44.710891  2868 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:44.710902  2868 net.cpp:86] Creating Layer conv1
I0428 20:26:44.710906  2868 net.cpp:408] conv1 <- pool0
I0428 20:26:44.710911  2868 net.cpp:382] conv1 -> conv1
I0428 20:26:44.713819  2868 net.cpp:124] Setting up conv1
I0428 20:26:44.713834  2868 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:44.713852  2868 net.cpp:139] Memory required for data: 18665728
I0428 20:26:44.713861  2868 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:44.713871  2868 net.cpp:86] Creating Layer pool1
I0428 20:26:44.713873  2868 net.cpp:408] pool1 <- conv1
I0428 20:26:44.713879  2868 net.cpp:382] pool1 -> pool1
I0428 20:26:44.713932  2868 net.cpp:124] Setting up pool1
I0428 20:26:44.713937  2868 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:44.713940  2868 net.cpp:139] Memory required for data: 18673920
I0428 20:26:44.713943  2868 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:44.713951  2868 net.cpp:86] Creating Layer ip1
I0428 20:26:44.713954  2868 net.cpp:408] ip1 <- pool1
I0428 20:26:44.713958  2868 net.cpp:382] ip1 -> ip1
I0428 20:26:44.714081  2868 net.cpp:124] Setting up ip1
I0428 20:26:44.714087  2868 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:44.714090  2868 net.cpp:139] Memory required for data: 18686720
I0428 20:26:44.714098  2868 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:44.714105  2868 net.cpp:86] Creating Layer relu1
I0428 20:26:44.714108  2868 net.cpp:408] relu1 <- ip1
I0428 20:26:44.714113  2868 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:44.714288  2868 net.cpp:124] Setting up relu1
I0428 20:26:44.714298  2868 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:44.714301  2868 net.cpp:139] Memory required for data: 18699520
I0428 20:26:44.714304  2868 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:44.714311  2868 net.cpp:86] Creating Layer ip2
I0428 20:26:44.714314  2868 net.cpp:408] ip2 <- ip1
I0428 20:26:44.714319  2868 net.cpp:382] ip2 -> ip2
I0428 20:26:44.714427  2868 net.cpp:124] Setting up ip2
I0428 20:26:44.714434  2868 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:44.714437  2868 net.cpp:139] Memory required for data: 18705920
I0428 20:26:44.714442  2868 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:44.714449  2868 net.cpp:86] Creating Layer relu2
I0428 20:26:44.714453  2868 net.cpp:408] relu2 <- ip2
I0428 20:26:44.714457  2868 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:44.715272  2868 net.cpp:124] Setting up relu2
I0428 20:26:44.715284  2868 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:44.715303  2868 net.cpp:139] Memory required for data: 18712320
I0428 20:26:44.715306  2868 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:44.715313  2868 net.cpp:86] Creating Layer ip3
I0428 20:26:44.715318  2868 net.cpp:408] ip3 <- ip2
I0428 20:26:44.715324  2868 net.cpp:382] ip3 -> ip3
I0428 20:26:44.715428  2868 net.cpp:124] Setting up ip3
I0428 20:26:44.715435  2868 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:44.715438  2868 net.cpp:139] Memory required for data: 18714880
I0428 20:26:44.715446  2868 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:44.715451  2868 net.cpp:86] Creating Layer relu3
I0428 20:26:44.715453  2868 net.cpp:408] relu3 <- ip3
I0428 20:26:44.715458  2868 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:44.715647  2868 net.cpp:124] Setting up relu3
I0428 20:26:44.715656  2868 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:44.715659  2868 net.cpp:139] Memory required for data: 18717440
I0428 20:26:44.715662  2868 layer_factory.hpp:77] Creating layer loss
I0428 20:26:44.715669  2868 net.cpp:86] Creating Layer loss
I0428 20:26:44.715673  2868 net.cpp:408] loss <- ip3
I0428 20:26:44.715677  2868 net.cpp:408] loss <- label
I0428 20:26:44.715682  2868 net.cpp:382] loss -> loss
I0428 20:26:44.715713  2868 layer_factory.hpp:77] Creating layer loss
I0428 20:26:44.715981  2868 net.cpp:124] Setting up loss
I0428 20:26:44.715991  2868 net.cpp:131] Top shape: (1)
I0428 20:26:44.715993  2868 net.cpp:134]     with loss weight 1
I0428 20:26:44.716007  2868 net.cpp:139] Memory required for data: 18717444
I0428 20:26:44.716011  2868 net.cpp:200] loss needs backward computation.
I0428 20:26:44.716014  2868 net.cpp:200] relu3 needs backward computation.
I0428 20:26:44.716017  2868 net.cpp:200] ip3 needs backward computation.
I0428 20:26:44.716019  2868 net.cpp:200] relu2 needs backward computation.
I0428 20:26:44.716022  2868 net.cpp:200] ip2 needs backward computation.
I0428 20:26:44.716025  2868 net.cpp:200] relu1 needs backward computation.
I0428 20:26:44.716028  2868 net.cpp:200] ip1 needs backward computation.
I0428 20:26:44.716032  2868 net.cpp:200] pool1 needs backward computation.
I0428 20:26:44.716033  2868 net.cpp:200] conv1 needs backward computation.
I0428 20:26:44.716037  2868 net.cpp:200] pool0 needs backward computation.
I0428 20:26:44.716039  2868 net.cpp:200] conv0 needs backward computation.
I0428 20:26:44.716042  2868 net.cpp:202] mnist does not need backward computation.
I0428 20:26:44.716045  2868 net.cpp:244] This network produces output loss
I0428 20:26:44.716056  2868 net.cpp:257] Network initialization done.
I0428 20:26:44.716416  2868 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1476.prototxt
I0428 20:26:44.716469  2868 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:44.716558  2868 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:44.716636  2868 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:44.716696  2868 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:44.716709  2868 net.cpp:86] Creating Layer mnist
I0428 20:26:44.716714  2868 net.cpp:382] mnist -> data
I0428 20:26:44.716722  2868 net.cpp:382] mnist -> label
I0428 20:26:44.716806  2868 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:44.718961  2868 net.cpp:124] Setting up mnist
I0428 20:26:44.718991  2868 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:44.718997  2868 net.cpp:131] Top shape: 100 (100)
I0428 20:26:44.718999  2868 net.cpp:139] Memory required for data: 314000
I0428 20:26:44.719003  2868 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:44.719018  2868 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:44.719022  2868 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:44.719027  2868 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:44.719035  2868 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:44.719130  2868 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:44.719138  2868 net.cpp:131] Top shape: 100 (100)
I0428 20:26:44.719142  2868 net.cpp:131] Top shape: 100 (100)
I0428 20:26:44.719146  2868 net.cpp:139] Memory required for data: 314800
I0428 20:26:44.719149  2868 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:44.719159  2868 net.cpp:86] Creating Layer conv0
I0428 20:26:44.719162  2868 net.cpp:408] conv0 <- data
I0428 20:26:44.719169  2868 net.cpp:382] conv0 -> conv0
I0428 20:26:44.720690  2868 net.cpp:124] Setting up conv0
I0428 20:26:44.720703  2868 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:44.720722  2868 net.cpp:139] Memory required for data: 23354800
I0428 20:26:44.720732  2868 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:44.720742  2868 net.cpp:86] Creating Layer pool0
I0428 20:26:44.720746  2868 net.cpp:408] pool0 <- conv0
I0428 20:26:44.720752  2868 net.cpp:382] pool0 -> pool0
I0428 20:26:44.720788  2868 net.cpp:124] Setting up pool0
I0428 20:26:44.720794  2868 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:44.720798  2868 net.cpp:139] Memory required for data: 29114800
I0428 20:26:44.720799  2868 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:44.720826  2868 net.cpp:86] Creating Layer conv1
I0428 20:26:44.720830  2868 net.cpp:408] conv1 <- pool0
I0428 20:26:44.720836  2868 net.cpp:382] conv1 -> conv1
I0428 20:26:44.722477  2868 net.cpp:124] Setting up conv1
I0428 20:26:44.722509  2868 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:44.722513  2868 net.cpp:139] Memory required for data: 29166000
I0428 20:26:44.722537  2868 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:44.722543  2868 net.cpp:86] Creating Layer pool1
I0428 20:26:44.722548  2868 net.cpp:408] pool1 <- conv1
I0428 20:26:44.722553  2868 net.cpp:382] pool1 -> pool1
I0428 20:26:44.722620  2868 net.cpp:124] Setting up pool1
I0428 20:26:44.722630  2868 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:44.722632  2868 net.cpp:139] Memory required for data: 29178800
I0428 20:26:44.722635  2868 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:44.722641  2868 net.cpp:86] Creating Layer ip1
I0428 20:26:44.722645  2868 net.cpp:408] ip1 <- pool1
I0428 20:26:44.722651  2868 net.cpp:382] ip1 -> ip1
I0428 20:26:44.722780  2868 net.cpp:124] Setting up ip1
I0428 20:26:44.722789  2868 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:44.722802  2868 net.cpp:139] Memory required for data: 29198800
I0428 20:26:44.722810  2868 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:44.722817  2868 net.cpp:86] Creating Layer relu1
I0428 20:26:44.722820  2868 net.cpp:408] relu1 <- ip1
I0428 20:26:44.722826  2868 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:44.722990  2868 net.cpp:124] Setting up relu1
I0428 20:26:44.722998  2868 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:44.723002  2868 net.cpp:139] Memory required for data: 29218800
I0428 20:26:44.723006  2868 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:44.723014  2868 net.cpp:86] Creating Layer ip2
I0428 20:26:44.723018  2868 net.cpp:408] ip2 <- ip1
I0428 20:26:44.723024  2868 net.cpp:382] ip2 -> ip2
I0428 20:26:44.723145  2868 net.cpp:124] Setting up ip2
I0428 20:26:44.723153  2868 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:44.723156  2868 net.cpp:139] Memory required for data: 29228800
I0428 20:26:44.723161  2868 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:44.723166  2868 net.cpp:86] Creating Layer relu2
I0428 20:26:44.723170  2868 net.cpp:408] relu2 <- ip2
I0428 20:26:44.723175  2868 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:44.723419  2868 net.cpp:124] Setting up relu2
I0428 20:26:44.723428  2868 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:44.723430  2868 net.cpp:139] Memory required for data: 29238800
I0428 20:26:44.723433  2868 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:44.723439  2868 net.cpp:86] Creating Layer ip3
I0428 20:26:44.723443  2868 net.cpp:408] ip3 <- ip2
I0428 20:26:44.723449  2868 net.cpp:382] ip3 -> ip3
I0428 20:26:44.723548  2868 net.cpp:124] Setting up ip3
I0428 20:26:44.723572  2868 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:44.723577  2868 net.cpp:139] Memory required for data: 29242800
I0428 20:26:44.723584  2868 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:44.723590  2868 net.cpp:86] Creating Layer relu3
I0428 20:26:44.723593  2868 net.cpp:408] relu3 <- ip3
I0428 20:26:44.723598  2868 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:44.724417  2868 net.cpp:124] Setting up relu3
I0428 20:26:44.724428  2868 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:44.724447  2868 net.cpp:139] Memory required for data: 29246800
I0428 20:26:44.724450  2868 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:44.724457  2868 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:44.724459  2868 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:44.724464  2868 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:44.724470  2868 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:44.724506  2868 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:44.724511  2868 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:44.724515  2868 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:44.724517  2868 net.cpp:139] Memory required for data: 29254800
I0428 20:26:44.724520  2868 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:44.724524  2868 net.cpp:86] Creating Layer accuracy
I0428 20:26:44.724527  2868 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:44.724531  2868 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:44.724536  2868 net.cpp:382] accuracy -> accuracy
I0428 20:26:44.724542  2868 net.cpp:124] Setting up accuracy
I0428 20:26:44.724546  2868 net.cpp:131] Top shape: (1)
I0428 20:26:44.724548  2868 net.cpp:139] Memory required for data: 29254804
I0428 20:26:44.724551  2868 layer_factory.hpp:77] Creating layer loss
I0428 20:26:44.724555  2868 net.cpp:86] Creating Layer loss
I0428 20:26:44.724558  2868 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:44.724561  2868 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:44.724565  2868 net.cpp:382] loss -> loss
I0428 20:26:44.724571  2868 layer_factory.hpp:77] Creating layer loss
I0428 20:26:44.724798  2868 net.cpp:124] Setting up loss
I0428 20:26:44.724807  2868 net.cpp:131] Top shape: (1)
I0428 20:26:44.724814  2868 net.cpp:134]     with loss weight 1
I0428 20:26:44.724856  2868 net.cpp:139] Memory required for data: 29254808
I0428 20:26:44.724860  2868 net.cpp:200] loss needs backward computation.
I0428 20:26:44.724880  2868 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:44.724884  2868 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:44.724887  2868 net.cpp:200] relu3 needs backward computation.
I0428 20:26:44.724890  2868 net.cpp:200] ip3 needs backward computation.
I0428 20:26:44.724894  2868 net.cpp:200] relu2 needs backward computation.
I0428 20:26:44.724896  2868 net.cpp:200] ip2 needs backward computation.
I0428 20:26:44.724900  2868 net.cpp:200] relu1 needs backward computation.
I0428 20:26:44.724902  2868 net.cpp:200] ip1 needs backward computation.
I0428 20:26:44.724905  2868 net.cpp:200] pool1 needs backward computation.
I0428 20:26:44.724908  2868 net.cpp:200] conv1 needs backward computation.
I0428 20:26:44.724911  2868 net.cpp:200] pool0 needs backward computation.
I0428 20:26:44.724915  2868 net.cpp:200] conv0 needs backward computation.
I0428 20:26:44.724918  2868 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:44.724922  2868 net.cpp:202] mnist does not need backward computation.
I0428 20:26:44.724925  2868 net.cpp:244] This network produces output accuracy
I0428 20:26:44.724928  2868 net.cpp:244] This network produces output loss
I0428 20:26:44.724941  2868 net.cpp:257] Network initialization done.
I0428 20:26:44.724985  2868 solver.cpp:56] Solver scaffolding done.
I0428 20:26:44.725425  2868 caffe.cpp:248] Starting Optimization
I0428 20:26:44.725430  2868 solver.cpp:273] Solving LeNet
I0428 20:26:44.725432  2868 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:44.725610  2868 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:44.819908  2875 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:44.823269  2868 solver.cpp:398]     Test net output #0: accuracy = 0.1117
I0428 20:26:44.823303  2868 solver.cpp:398]     Test net output #1: loss = 2.29721 (* 1 = 2.29721 loss)
I0428 20:26:44.827702  2868 solver.cpp:219] Iteration 0 (0 iter/s, 0.102227s/100 iters), loss = 2.2924
I0428 20:26:44.827755  2868 solver.cpp:238]     Train net output #0: loss = 2.2924 (* 1 = 2.2924 loss)
I0428 20:26:44.827769  2868 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:45.033576  2868 solver.cpp:219] Iteration 100 (485.896 iter/s, 0.205806s/100 iters), loss = 1.22151
I0428 20:26:45.033632  2868 solver.cpp:238]     Train net output #0: loss = 1.22151 (* 1 = 1.22151 loss)
I0428 20:26:45.033648  2868 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:45.257271  2868 solver.cpp:219] Iteration 200 (447.181 iter/s, 0.223623s/100 iters), loss = 0.790199
I0428 20:26:45.257329  2868 solver.cpp:238]     Train net output #0: loss = 0.790199 (* 1 = 0.790199 loss)
I0428 20:26:45.257339  2868 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:45.474220  2868 solver.cpp:219] Iteration 300 (461.102 iter/s, 0.216872s/100 iters), loss = 0.945242
I0428 20:26:45.474270  2868 solver.cpp:238]     Train net output #0: loss = 0.945242 (* 1 = 0.945242 loss)
I0428 20:26:45.474282  2868 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:45.693485  2868 solver.cpp:219] Iteration 400 (456.214 iter/s, 0.219195s/100 iters), loss = 0.31206
I0428 20:26:45.693538  2868 solver.cpp:238]     Train net output #0: loss = 0.31206 (* 1 = 0.31206 loss)
I0428 20:26:45.693549  2868 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:45.897619  2868 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:45.995681  2875 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:45.998159  2868 solver.cpp:398]     Test net output #0: accuracy = 0.8358
I0428 20:26:45.998184  2868 solver.cpp:398]     Test net output #1: loss = 0.459405 (* 1 = 0.459405 loss)
I0428 20:26:46.000177  2868 solver.cpp:219] Iteration 500 (326.133 iter/s, 0.306623s/100 iters), loss = 0.413956
I0428 20:26:46.000205  2868 solver.cpp:238]     Train net output #0: loss = 0.413956 (* 1 = 0.413956 loss)
I0428 20:26:46.000229  2868 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:46.208206  2868 solver.cpp:219] Iteration 600 (480.809 iter/s, 0.207983s/100 iters), loss = 0.536092
I0428 20:26:46.208261  2868 solver.cpp:238]     Train net output #0: loss = 0.536092 (* 1 = 0.536092 loss)
I0428 20:26:46.208273  2868 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:46.417801  2868 solver.cpp:219] Iteration 700 (477.278 iter/s, 0.209522s/100 iters), loss = 0.558333
I0428 20:26:46.417860  2868 solver.cpp:238]     Train net output #0: loss = 0.558333 (* 1 = 0.558333 loss)
I0428 20:26:46.417873  2868 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:46.633383  2868 solver.cpp:219] Iteration 800 (464.014 iter/s, 0.215511s/100 iters), loss = 0.639854
I0428 20:26:46.633419  2868 solver.cpp:238]     Train net output #0: loss = 0.639854 (* 1 = 0.639854 loss)
I0428 20:26:46.633430  2868 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:46.848767  2868 solver.cpp:219] Iteration 900 (464.406 iter/s, 0.215329s/100 iters), loss = 0.503955
I0428 20:26:46.848809  2868 solver.cpp:238]     Train net output #0: loss = 0.503955 (* 1 = 0.503955 loss)
I0428 20:26:46.848830  2868 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:46.918331  2874 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:47.059599  2868 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:47.061466  2868 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:47.062702  2868 solver.cpp:311] Iteration 1000, loss = 0.430818
I0428 20:26:47.062728  2868 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:47.166337  2875 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:47.168521  2868 solver.cpp:398]     Test net output #0: accuracy = 0.8654
I0428 20:26:47.168545  2868 solver.cpp:398]     Test net output #1: loss = 0.345683 (* 1 = 0.345683 loss)
I0428 20:26:47.168550  2868 solver.cpp:316] Optimization Done.
I0428 20:26:47.168555  2868 caffe.cpp:259] Optimization Done.
