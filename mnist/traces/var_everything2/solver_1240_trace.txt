I0428 20:15:11.197552   382 caffe.cpp:218] Using GPUs 0
I0428 20:15:11.232267   382 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:15:11.690325   382 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1240.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:15:11.690491   382 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1240.prototxt
I0428 20:15:11.690847   382 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:15:11.690878   382 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:15:11.690959   382 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:15:11.691023   382 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:11.691107   382 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:15:11.691126   382 net.cpp:86] Creating Layer mnist
I0428 20:15:11.691135   382 net.cpp:382] mnist -> data
I0428 20:15:11.691169   382 net.cpp:382] mnist -> label
I0428 20:15:11.692219   382 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:15:11.694524   382 net.cpp:124] Setting up mnist
I0428 20:15:11.694571   382 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:15:11.694577   382 net.cpp:131] Top shape: 64 (64)
I0428 20:15:11.694581   382 net.cpp:139] Memory required for data: 200960
I0428 20:15:11.694586   382 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:11.694600   382 net.cpp:86] Creating Layer conv0
I0428 20:15:11.694618   382 net.cpp:408] conv0 <- data
I0428 20:15:11.694628   382 net.cpp:382] conv0 -> conv0
I0428 20:15:11.922065   382 net.cpp:124] Setting up conv0
I0428 20:15:11.922106   382 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:15:11.922111   382 net.cpp:139] Memory required for data: 7573760
I0428 20:15:11.922142   382 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:11.922155   382 net.cpp:86] Creating Layer pool0
I0428 20:15:11.922174   382 net.cpp:408] pool0 <- conv0
I0428 20:15:11.922180   382 net.cpp:382] pool0 -> pool0
I0428 20:15:11.922227   382 net.cpp:124] Setting up pool0
I0428 20:15:11.922243   382 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:15:11.922246   382 net.cpp:139] Memory required for data: 9416960
I0428 20:15:11.922250   382 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:11.922260   382 net.cpp:86] Creating Layer conv1
I0428 20:15:11.922263   382 net.cpp:408] conv1 <- pool0
I0428 20:15:11.922271   382 net.cpp:382] conv1 -> conv1
I0428 20:15:11.924124   382 net.cpp:124] Setting up conv1
I0428 20:15:11.924139   382 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:15:11.924159   382 net.cpp:139] Memory required for data: 9449728
I0428 20:15:11.924167   382 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:11.924175   382 net.cpp:86] Creating Layer pool1
I0428 20:15:11.924180   382 net.cpp:408] pool1 <- conv1
I0428 20:15:11.924185   382 net.cpp:382] pool1 -> pool1
I0428 20:15:11.924221   382 net.cpp:124] Setting up pool1
I0428 20:15:11.924226   382 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:15:11.924230   382 net.cpp:139] Memory required for data: 9457920
I0428 20:15:11.924232   382 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:11.924239   382 net.cpp:86] Creating Layer ip1
I0428 20:15:11.924242   382 net.cpp:408] ip1 <- pool1
I0428 20:15:11.924247   382 net.cpp:382] ip1 -> ip1
I0428 20:15:11.924374   382 net.cpp:124] Setting up ip1
I0428 20:15:11.924383   382 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:11.924386   382 net.cpp:139] Memory required for data: 9470720
I0428 20:15:11.924393   382 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:11.924398   382 net.cpp:86] Creating Layer relu1
I0428 20:15:11.924402   382 net.cpp:408] relu1 <- ip1
I0428 20:15:11.924407   382 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:11.924568   382 net.cpp:124] Setting up relu1
I0428 20:15:11.924577   382 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:15:11.924581   382 net.cpp:139] Memory required for data: 9483520
I0428 20:15:11.924583   382 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:11.924589   382 net.cpp:86] Creating Layer ip2
I0428 20:15:11.924592   382 net.cpp:408] ip2 <- ip1
I0428 20:15:11.924597   382 net.cpp:382] ip2 -> ip2
I0428 20:15:11.924688   382 net.cpp:124] Setting up ip2
I0428 20:15:11.924695   382 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:11.924698   382 net.cpp:139] Memory required for data: 9486080
I0428 20:15:11.924703   382 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:11.924708   382 net.cpp:86] Creating Layer relu2
I0428 20:15:11.924711   382 net.cpp:408] relu2 <- ip2
I0428 20:15:11.924715   382 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:11.925566   382 net.cpp:124] Setting up relu2
I0428 20:15:11.925580   382 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:11.925598   382 net.cpp:139] Memory required for data: 9488640
I0428 20:15:11.925601   382 layer_factory.hpp:77] Creating layer ip3
I0428 20:15:11.925608   382 net.cpp:86] Creating Layer ip3
I0428 20:15:11.925613   382 net.cpp:408] ip3 <- ip2
I0428 20:15:11.925618   382 net.cpp:382] ip3 -> ip3
I0428 20:15:11.925711   382 net.cpp:124] Setting up ip3
I0428 20:15:11.925719   382 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:11.925722   382 net.cpp:139] Memory required for data: 9491200
I0428 20:15:11.925729   382 layer_factory.hpp:77] Creating layer relu3
I0428 20:15:11.925734   382 net.cpp:86] Creating Layer relu3
I0428 20:15:11.925737   382 net.cpp:408] relu3 <- ip3
I0428 20:15:11.925741   382 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:15:11.925907   382 net.cpp:124] Setting up relu3
I0428 20:15:11.925917   382 net.cpp:131] Top shape: 64 10 (640)
I0428 20:15:11.925920   382 net.cpp:139] Memory required for data: 9493760
I0428 20:15:11.925923   382 layer_factory.hpp:77] Creating layer loss
I0428 20:15:11.925930   382 net.cpp:86] Creating Layer loss
I0428 20:15:11.925932   382 net.cpp:408] loss <- ip3
I0428 20:15:11.925936   382 net.cpp:408] loss <- label
I0428 20:15:11.925941   382 net.cpp:382] loss -> loss
I0428 20:15:11.925954   382 layer_factory.hpp:77] Creating layer loss
I0428 20:15:11.926182   382 net.cpp:124] Setting up loss
I0428 20:15:11.926190   382 net.cpp:131] Top shape: (1)
I0428 20:15:11.926194   382 net.cpp:134]     with loss weight 1
I0428 20:15:11.926208   382 net.cpp:139] Memory required for data: 9493764
I0428 20:15:11.926228   382 net.cpp:200] loss needs backward computation.
I0428 20:15:11.926230   382 net.cpp:200] relu3 needs backward computation.
I0428 20:15:11.926234   382 net.cpp:200] ip3 needs backward computation.
I0428 20:15:11.926237   382 net.cpp:200] relu2 needs backward computation.
I0428 20:15:11.926239   382 net.cpp:200] ip2 needs backward computation.
I0428 20:15:11.926242   382 net.cpp:200] relu1 needs backward computation.
I0428 20:15:11.926244   382 net.cpp:200] ip1 needs backward computation.
I0428 20:15:11.926247   382 net.cpp:200] pool1 needs backward computation.
I0428 20:15:11.926250   382 net.cpp:200] conv1 needs backward computation.
I0428 20:15:11.926254   382 net.cpp:200] pool0 needs backward computation.
I0428 20:15:11.926256   382 net.cpp:200] conv0 needs backward computation.
I0428 20:15:11.926260   382 net.cpp:202] mnist does not need backward computation.
I0428 20:15:11.926262   382 net.cpp:244] This network produces output loss
I0428 20:15:11.926271   382 net.cpp:257] Network initialization done.
I0428 20:15:11.926672   382 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1240.prototxt
I0428 20:15:11.926733   382 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:15:11.926836   382 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:15:11.926911   382 layer_factory.hpp:77] Creating layer mnist
I0428 20:15:11.926956   382 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:15:11.926969   382 net.cpp:86] Creating Layer mnist
I0428 20:15:11.926973   382 net.cpp:382] mnist -> data
I0428 20:15:11.926981   382 net.cpp:382] mnist -> label
I0428 20:15:11.927062   382 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:15:11.929121   382 net.cpp:124] Setting up mnist
I0428 20:15:11.929157   382 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:15:11.929177   382 net.cpp:131] Top shape: 100 (100)
I0428 20:15:11.929183   382 net.cpp:139] Memory required for data: 314000
I0428 20:15:11.929198   382 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:15:11.929215   382 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:15:11.929219   382 net.cpp:408] label_mnist_1_split <- label
I0428 20:15:11.929224   382 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:15:11.929230   382 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:15:11.929319   382 net.cpp:124] Setting up label_mnist_1_split
I0428 20:15:11.929327   382 net.cpp:131] Top shape: 100 (100)
I0428 20:15:11.929330   382 net.cpp:131] Top shape: 100 (100)
I0428 20:15:11.929333   382 net.cpp:139] Memory required for data: 314800
I0428 20:15:11.929337   382 layer_factory.hpp:77] Creating layer conv0
I0428 20:15:11.929344   382 net.cpp:86] Creating Layer conv0
I0428 20:15:11.929347   382 net.cpp:408] conv0 <- data
I0428 20:15:11.929352   382 net.cpp:382] conv0 -> conv0
I0428 20:15:11.931038   382 net.cpp:124] Setting up conv0
I0428 20:15:11.931051   382 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:15:11.931071   382 net.cpp:139] Memory required for data: 11834800
I0428 20:15:11.931079   382 layer_factory.hpp:77] Creating layer pool0
I0428 20:15:11.931087   382 net.cpp:86] Creating Layer pool0
I0428 20:15:11.931089   382 net.cpp:408] pool0 <- conv0
I0428 20:15:11.931094   382 net.cpp:382] pool0 -> pool0
I0428 20:15:11.931144   382 net.cpp:124] Setting up pool0
I0428 20:15:11.931149   382 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:15:11.931152   382 net.cpp:139] Memory required for data: 14714800
I0428 20:15:11.931155   382 layer_factory.hpp:77] Creating layer conv1
I0428 20:15:11.931164   382 net.cpp:86] Creating Layer conv1
I0428 20:15:11.931166   382 net.cpp:408] conv1 <- pool0
I0428 20:15:11.931171   382 net.cpp:382] conv1 -> conv1
I0428 20:15:11.932674   382 net.cpp:124] Setting up conv1
I0428 20:15:11.932698   382 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:15:11.932703   382 net.cpp:139] Memory required for data: 14766000
I0428 20:15:11.932711   382 layer_factory.hpp:77] Creating layer pool1
I0428 20:15:11.932718   382 net.cpp:86] Creating Layer pool1
I0428 20:15:11.932721   382 net.cpp:408] pool1 <- conv1
I0428 20:15:11.932726   382 net.cpp:382] pool1 -> pool1
I0428 20:15:11.932778   382 net.cpp:124] Setting up pool1
I0428 20:15:11.932785   382 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:15:11.932788   382 net.cpp:139] Memory required for data: 14778800
I0428 20:15:11.932791   382 layer_factory.hpp:77] Creating layer ip1
I0428 20:15:11.932798   382 net.cpp:86] Creating Layer ip1
I0428 20:15:11.932801   382 net.cpp:408] ip1 <- pool1
I0428 20:15:11.932806   382 net.cpp:382] ip1 -> ip1
I0428 20:15:11.932948   382 net.cpp:124] Setting up ip1
I0428 20:15:11.932962   382 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:11.932982   382 net.cpp:139] Memory required for data: 14798800
I0428 20:15:11.932996   382 layer_factory.hpp:77] Creating layer relu1
I0428 20:15:11.933004   382 net.cpp:86] Creating Layer relu1
I0428 20:15:11.933012   382 net.cpp:408] relu1 <- ip1
I0428 20:15:11.933019   382 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:15:11.933212   382 net.cpp:124] Setting up relu1
I0428 20:15:11.933221   382 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:15:11.933225   382 net.cpp:139] Memory required for data: 14818800
I0428 20:15:11.933229   382 layer_factory.hpp:77] Creating layer ip2
I0428 20:15:11.933253   382 net.cpp:86] Creating Layer ip2
I0428 20:15:11.933256   382 net.cpp:408] ip2 <- ip1
I0428 20:15:11.933261   382 net.cpp:382] ip2 -> ip2
I0428 20:15:11.933367   382 net.cpp:124] Setting up ip2
I0428 20:15:11.933375   382 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:11.933379   382 net.cpp:139] Memory required for data: 14822800
I0428 20:15:11.933384   382 layer_factory.hpp:77] Creating layer relu2
I0428 20:15:11.933389   382 net.cpp:86] Creating Layer relu2
I0428 20:15:11.933393   382 net.cpp:408] relu2 <- ip2
I0428 20:15:11.933396   382 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:15:11.933591   382 net.cpp:124] Setting up relu2
I0428 20:15:11.933600   382 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:11.933604   382 net.cpp:139] Memory required for data: 14826800
I0428 20:15:11.933606   382 layer_factory.hpp:77] Creating layer ip3
I0428 20:15:11.933611   382 net.cpp:86] Creating Layer ip3
I0428 20:15:11.933614   382 net.cpp:408] ip3 <- ip2
I0428 20:15:11.933619   382 net.cpp:382] ip3 -> ip3
I0428 20:15:11.933771   382 net.cpp:124] Setting up ip3
I0428 20:15:11.933779   382 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:11.933782   382 net.cpp:139] Memory required for data: 14830800
I0428 20:15:11.933790   382 layer_factory.hpp:77] Creating layer relu3
I0428 20:15:11.933795   382 net.cpp:86] Creating Layer relu3
I0428 20:15:11.933799   382 net.cpp:408] relu3 <- ip3
I0428 20:15:11.933804   382 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:15:11.934659   382 net.cpp:124] Setting up relu3
I0428 20:15:11.934671   382 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:11.934689   382 net.cpp:139] Memory required for data: 14834800
I0428 20:15:11.934693   382 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:15:11.934698   382 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:15:11.934702   382 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:15:11.934708   382 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:15:11.934715   382 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:15:11.934793   382 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:15:11.934803   382 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:11.934806   382 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:15:11.934808   382 net.cpp:139] Memory required for data: 14842800
I0428 20:15:11.934813   382 layer_factory.hpp:77] Creating layer accuracy
I0428 20:15:11.934818   382 net.cpp:86] Creating Layer accuracy
I0428 20:15:11.934820   382 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:15:11.934824   382 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:15:11.934829   382 net.cpp:382] accuracy -> accuracy
I0428 20:15:11.934836   382 net.cpp:124] Setting up accuracy
I0428 20:15:11.934840   382 net.cpp:131] Top shape: (1)
I0428 20:15:11.934844   382 net.cpp:139] Memory required for data: 14842804
I0428 20:15:11.934846   382 layer_factory.hpp:77] Creating layer loss
I0428 20:15:11.934850   382 net.cpp:86] Creating Layer loss
I0428 20:15:11.934854   382 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:15:11.934857   382 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:15:11.934862   382 net.cpp:382] loss -> loss
I0428 20:15:11.934869   382 layer_factory.hpp:77] Creating layer loss
I0428 20:15:11.935114   382 net.cpp:124] Setting up loss
I0428 20:15:11.935125   382 net.cpp:131] Top shape: (1)
I0428 20:15:11.935128   382 net.cpp:134]     with loss weight 1
I0428 20:15:11.935144   382 net.cpp:139] Memory required for data: 14842808
I0428 20:15:11.935148   382 net.cpp:200] loss needs backward computation.
I0428 20:15:11.935153   382 net.cpp:202] accuracy does not need backward computation.
I0428 20:15:11.935156   382 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:15:11.935160   382 net.cpp:200] relu3 needs backward computation.
I0428 20:15:11.935169   382 net.cpp:200] ip3 needs backward computation.
I0428 20:15:11.935173   382 net.cpp:200] relu2 needs backward computation.
I0428 20:15:11.935175   382 net.cpp:200] ip2 needs backward computation.
I0428 20:15:11.935199   382 net.cpp:200] relu1 needs backward computation.
I0428 20:15:11.935201   382 net.cpp:200] ip1 needs backward computation.
I0428 20:15:11.935204   382 net.cpp:200] pool1 needs backward computation.
I0428 20:15:11.935207   382 net.cpp:200] conv1 needs backward computation.
I0428 20:15:11.935211   382 net.cpp:200] pool0 needs backward computation.
I0428 20:15:11.935214   382 net.cpp:200] conv0 needs backward computation.
I0428 20:15:11.935219   382 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:15:11.935222   382 net.cpp:202] mnist does not need backward computation.
I0428 20:15:11.935225   382 net.cpp:244] This network produces output accuracy
I0428 20:15:11.935233   382 net.cpp:244] This network produces output loss
I0428 20:15:11.935243   382 net.cpp:257] Network initialization done.
I0428 20:15:11.935302   382 solver.cpp:56] Solver scaffolding done.
I0428 20:15:11.935703   382 caffe.cpp:248] Starting Optimization
I0428 20:15:11.935711   382 solver.cpp:273] Solving LeNet
I0428 20:15:11.935714   382 solver.cpp:274] Learning Rate Policy: inv
I0428 20:15:11.936624   382 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:15:11.943001   382 blocking_queue.cpp:49] Waiting for data
I0428 20:15:12.010767   394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:12.011536   382 solver.cpp:398]     Test net output #0: accuracy = 0.0609
I0428 20:15:12.011569   382 solver.cpp:398]     Test net output #1: loss = 2.35537 (* 1 = 2.35537 loss)
I0428 20:15:12.015739   382 solver.cpp:219] Iteration 0 (0 iter/s, 0.0799969s/100 iters), loss = 2.37237
I0428 20:15:12.015777   382 solver.cpp:238]     Train net output #0: loss = 2.37237 (* 1 = 2.37237 loss)
I0428 20:15:12.015789   382 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:15:12.128618   382 solver.cpp:219] Iteration 100 (886.173 iter/s, 0.112845s/100 iters), loss = 0.558629
I0428 20:15:12.128657   382 solver.cpp:238]     Train net output #0: loss = 0.558629 (* 1 = 0.558629 loss)
I0428 20:15:12.128664   382 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:15:12.245010   382 solver.cpp:219] Iteration 200 (859.431 iter/s, 0.116356s/100 iters), loss = 0.370386
I0428 20:15:12.245050   382 solver.cpp:238]     Train net output #0: loss = 0.370386 (* 1 = 0.370386 loss)
I0428 20:15:12.245057   382 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:15:12.361901   382 solver.cpp:219] Iteration 300 (855.868 iter/s, 0.11684s/100 iters), loss = 0.435788
I0428 20:15:12.361927   382 solver.cpp:238]     Train net output #0: loss = 0.435788 (* 1 = 0.435788 loss)
I0428 20:15:12.361932   382 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:15:12.475551   382 solver.cpp:219] Iteration 400 (880.19 iter/s, 0.113612s/100 iters), loss = 0.25829
I0428 20:15:12.475595   382 solver.cpp:238]     Train net output #0: loss = 0.25829 (* 1 = 0.25829 loss)
I0428 20:15:12.475602   382 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:15:12.589644   382 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:15:12.665849   394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:12.666606   382 solver.cpp:398]     Test net output #0: accuracy = 0.9328
I0428 20:15:12.666641   382 solver.cpp:398]     Test net output #1: loss = 0.226899 (* 1 = 0.226899 loss)
I0428 20:15:12.667824   382 solver.cpp:219] Iteration 500 (520.21 iter/s, 0.19223s/100 iters), loss = 0.239102
I0428 20:15:12.667881   382 solver.cpp:238]     Train net output #0: loss = 0.239102 (* 1 = 0.239102 loss)
I0428 20:15:12.667888   382 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:15:12.792368   382 solver.cpp:219] Iteration 600 (803.266 iter/s, 0.124492s/100 iters), loss = 0.168268
I0428 20:15:12.792395   382 solver.cpp:238]     Train net output #0: loss = 0.168268 (* 1 = 0.168268 loss)
I0428 20:15:12.792402   382 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:15:12.913410   382 solver.cpp:219] Iteration 700 (826.419 iter/s, 0.121004s/100 iters), loss = 0.2972
I0428 20:15:12.913450   382 solver.cpp:238]     Train net output #0: loss = 0.2972 (* 1 = 0.2972 loss)
I0428 20:15:12.913455   382 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:15:13.025077   382 solver.cpp:219] Iteration 800 (895.805 iter/s, 0.111631s/100 iters), loss = 0.28773
I0428 20:15:13.025117   382 solver.cpp:238]     Train net output #0: loss = 0.28773 (* 1 = 0.28773 loss)
I0428 20:15:13.025125   382 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:15:13.143862   382 solver.cpp:219] Iteration 900 (842.117 iter/s, 0.118748s/100 iters), loss = 0.14337
I0428 20:15:13.143901   382 solver.cpp:238]     Train net output #0: loss = 0.14337 (* 1 = 0.14337 loss)
I0428 20:15:13.143908   382 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:15:13.181407   393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:13.254199   382 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:15:13.255115   382 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:15:13.255808   382 solver.cpp:311] Iteration 1000, loss = 0.132909
I0428 20:15:13.255822   382 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:15:13.320134   394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:15:13.321923   382 solver.cpp:398]     Test net output #0: accuracy = 0.9555
I0428 20:15:13.321957   382 solver.cpp:398]     Test net output #1: loss = 0.145521 (* 1 = 0.145521 loss)
I0428 20:15:13.321962   382 solver.cpp:316] Optimization Done.
I0428 20:15:13.321965   382 caffe.cpp:259] Optimization Done.
