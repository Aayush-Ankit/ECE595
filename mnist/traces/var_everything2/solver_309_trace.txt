I0428 19:39:36.100139 24339 caffe.cpp:218] Using GPUs 0
I0428 19:39:36.141229 24339 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:39:36.659528 24339 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test309.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:39:36.659693 24339 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test309.prototxt
I0428 19:39:36.660104 24339 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:39:36.660128 24339 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:39:36.660241 24339 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:36.660348 24339 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:36.660480 24339 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:39:36.660513 24339 net.cpp:86] Creating Layer mnist
I0428 19:39:36.660526 24339 net.cpp:382] mnist -> data
I0428 19:39:36.660557 24339 net.cpp:382] mnist -> label
I0428 19:39:36.661833 24339 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:39:36.664312 24339 net.cpp:124] Setting up mnist
I0428 19:39:36.664332 24339 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:39:36.664342 24339 net.cpp:131] Top shape: 64 (64)
I0428 19:39:36.664350 24339 net.cpp:139] Memory required for data: 200960
I0428 19:39:36.664361 24339 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:36.664381 24339 net.cpp:86] Creating Layer conv0
I0428 19:39:36.664407 24339 net.cpp:408] conv0 <- data
I0428 19:39:36.664424 24339 net.cpp:382] conv0 -> conv0
I0428 19:39:36.944383 24339 net.cpp:124] Setting up conv0
I0428 19:39:36.944413 24339 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:39:36.944420 24339 net.cpp:139] Memory required for data: 495872
I0428 19:39:36.944442 24339 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:36.944460 24339 net.cpp:86] Creating Layer pool0
I0428 19:39:36.944475 24339 net.cpp:408] pool0 <- conv0
I0428 19:39:36.944485 24339 net.cpp:382] pool0 -> pool0
I0428 19:39:36.944542 24339 net.cpp:124] Setting up pool0
I0428 19:39:36.944551 24339 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:39:36.944557 24339 net.cpp:139] Memory required for data: 569600
I0428 19:39:36.944562 24339 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:36.944578 24339 net.cpp:86] Creating Layer conv1
I0428 19:39:36.944586 24339 net.cpp:408] conv1 <- pool0
I0428 19:39:36.944594 24339 net.cpp:382] conv1 -> conv1
I0428 19:39:36.946413 24339 net.cpp:124] Setting up conv1
I0428 19:39:36.946431 24339 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:39:36.946437 24339 net.cpp:139] Memory required for data: 602368
I0428 19:39:36.946451 24339 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:36.946463 24339 net.cpp:86] Creating Layer pool1
I0428 19:39:36.946470 24339 net.cpp:408] pool1 <- conv1
I0428 19:39:36.946478 24339 net.cpp:382] pool1 -> pool1
I0428 19:39:36.946537 24339 net.cpp:124] Setting up pool1
I0428 19:39:36.946545 24339 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:39:36.946550 24339 net.cpp:139] Memory required for data: 610560
I0428 19:39:36.946555 24339 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:36.946566 24339 net.cpp:86] Creating Layer ip1
I0428 19:39:36.946571 24339 net.cpp:408] ip1 <- pool1
I0428 19:39:36.946580 24339 net.cpp:382] ip1 -> ip1
I0428 19:39:36.947509 24339 net.cpp:124] Setting up ip1
I0428 19:39:36.947523 24339 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:36.947528 24339 net.cpp:139] Memory required for data: 623360
I0428 19:39:36.947541 24339 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:36.947551 24339 net.cpp:86] Creating Layer relu1
I0428 19:39:36.947556 24339 net.cpp:408] relu1 <- ip1
I0428 19:39:36.947564 24339 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:36.947741 24339 net.cpp:124] Setting up relu1
I0428 19:39:36.947751 24339 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:36.947755 24339 net.cpp:139] Memory required for data: 636160
I0428 19:39:36.947762 24339 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:36.947772 24339 net.cpp:86] Creating Layer ip2
I0428 19:39:36.947777 24339 net.cpp:408] ip2 <- ip1
I0428 19:39:36.947785 24339 net.cpp:382] ip2 -> ip2
I0428 19:39:36.947896 24339 net.cpp:124] Setting up ip2
I0428 19:39:36.947906 24339 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:36.947911 24339 net.cpp:139] Memory required for data: 648960
I0428 19:39:36.947919 24339 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:36.947928 24339 net.cpp:86] Creating Layer relu2
I0428 19:39:36.947934 24339 net.cpp:408] relu2 <- ip2
I0428 19:39:36.947942 24339 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:36.948663 24339 net.cpp:124] Setting up relu2
I0428 19:39:36.948678 24339 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:39:36.948683 24339 net.cpp:139] Memory required for data: 661760
I0428 19:39:36.948688 24339 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:36.948698 24339 net.cpp:86] Creating Layer ip3
I0428 19:39:36.948704 24339 net.cpp:408] ip3 <- ip2
I0428 19:39:36.948714 24339 net.cpp:382] ip3 -> ip3
I0428 19:39:36.948835 24339 net.cpp:124] Setting up ip3
I0428 19:39:36.948861 24339 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:36.948866 24339 net.cpp:139] Memory required for data: 664320
I0428 19:39:36.948880 24339 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:36.948889 24339 net.cpp:86] Creating Layer relu3
I0428 19:39:36.948895 24339 net.cpp:408] relu3 <- ip3
I0428 19:39:36.948904 24339 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:36.949079 24339 net.cpp:124] Setting up relu3
I0428 19:39:36.949090 24339 net.cpp:131] Top shape: 64 10 (640)
I0428 19:39:36.949095 24339 net.cpp:139] Memory required for data: 666880
I0428 19:39:36.949101 24339 layer_factory.hpp:77] Creating layer loss
I0428 19:39:36.949110 24339 net.cpp:86] Creating Layer loss
I0428 19:39:36.949116 24339 net.cpp:408] loss <- ip3
I0428 19:39:36.949123 24339 net.cpp:408] loss <- label
I0428 19:39:36.949132 24339 net.cpp:382] loss -> loss
I0428 19:39:36.949170 24339 layer_factory.hpp:77] Creating layer loss
I0428 19:39:36.949409 24339 net.cpp:124] Setting up loss
I0428 19:39:36.949419 24339 net.cpp:131] Top shape: (1)
I0428 19:39:36.949424 24339 net.cpp:134]     with loss weight 1
I0428 19:39:36.949445 24339 net.cpp:139] Memory required for data: 666884
I0428 19:39:36.949450 24339 net.cpp:200] loss needs backward computation.
I0428 19:39:36.949456 24339 net.cpp:200] relu3 needs backward computation.
I0428 19:39:36.949461 24339 net.cpp:200] ip3 needs backward computation.
I0428 19:39:36.949466 24339 net.cpp:200] relu2 needs backward computation.
I0428 19:39:36.949471 24339 net.cpp:200] ip2 needs backward computation.
I0428 19:39:36.949476 24339 net.cpp:200] relu1 needs backward computation.
I0428 19:39:36.949481 24339 net.cpp:200] ip1 needs backward computation.
I0428 19:39:36.949496 24339 net.cpp:200] pool1 needs backward computation.
I0428 19:39:36.949502 24339 net.cpp:200] conv1 needs backward computation.
I0428 19:39:36.949507 24339 net.cpp:200] pool0 needs backward computation.
I0428 19:39:36.949512 24339 net.cpp:200] conv0 needs backward computation.
I0428 19:39:36.949518 24339 net.cpp:202] mnist does not need backward computation.
I0428 19:39:36.949523 24339 net.cpp:244] This network produces output loss
I0428 19:39:36.949537 24339 net.cpp:257] Network initialization done.
I0428 19:39:36.949885 24339 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test309.prototxt
I0428 19:39:36.949920 24339 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:39:36.950018 24339 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:39:36.950129 24339 layer_factory.hpp:77] Creating layer mnist
I0428 19:39:36.950188 24339 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:39:36.950206 24339 net.cpp:86] Creating Layer mnist
I0428 19:39:36.950213 24339 net.cpp:382] mnist -> data
I0428 19:39:36.950225 24339 net.cpp:382] mnist -> label
I0428 19:39:36.950337 24339 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:39:36.952401 24339 net.cpp:124] Setting up mnist
I0428 19:39:36.952416 24339 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:39:36.952425 24339 net.cpp:131] Top shape: 100 (100)
I0428 19:39:36.952430 24339 net.cpp:139] Memory required for data: 314000
I0428 19:39:36.952435 24339 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:39:36.952463 24339 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:39:36.952469 24339 net.cpp:408] label_mnist_1_split <- label
I0428 19:39:36.952477 24339 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:39:36.952488 24339 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:39:36.952586 24339 net.cpp:124] Setting up label_mnist_1_split
I0428 19:39:36.952595 24339 net.cpp:131] Top shape: 100 (100)
I0428 19:39:36.952602 24339 net.cpp:131] Top shape: 100 (100)
I0428 19:39:36.952607 24339 net.cpp:139] Memory required for data: 314800
I0428 19:39:36.952612 24339 layer_factory.hpp:77] Creating layer conv0
I0428 19:39:36.952626 24339 net.cpp:86] Creating Layer conv0
I0428 19:39:36.952633 24339 net.cpp:408] conv0 <- data
I0428 19:39:36.952642 24339 net.cpp:382] conv0 -> conv0
I0428 19:39:36.954190 24339 net.cpp:124] Setting up conv0
I0428 19:39:36.954207 24339 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:39:36.954213 24339 net.cpp:139] Memory required for data: 775600
I0428 19:39:36.954227 24339 layer_factory.hpp:77] Creating layer pool0
I0428 19:39:36.954236 24339 net.cpp:86] Creating Layer pool0
I0428 19:39:36.954242 24339 net.cpp:408] pool0 <- conv0
I0428 19:39:36.954251 24339 net.cpp:382] pool0 -> pool0
I0428 19:39:36.954293 24339 net.cpp:124] Setting up pool0
I0428 19:39:36.954303 24339 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:39:36.954308 24339 net.cpp:139] Memory required for data: 890800
I0428 19:39:36.954313 24339 layer_factory.hpp:77] Creating layer conv1
I0428 19:39:36.954325 24339 net.cpp:86] Creating Layer conv1
I0428 19:39:36.954331 24339 net.cpp:408] conv1 <- pool0
I0428 19:39:36.954339 24339 net.cpp:382] conv1 -> conv1
I0428 19:39:36.955829 24339 net.cpp:124] Setting up conv1
I0428 19:39:36.955844 24339 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:39:36.955852 24339 net.cpp:139] Memory required for data: 942000
I0428 19:39:36.955865 24339 layer_factory.hpp:77] Creating layer pool1
I0428 19:39:36.955874 24339 net.cpp:86] Creating Layer pool1
I0428 19:39:36.955883 24339 net.cpp:408] pool1 <- conv1
I0428 19:39:36.955895 24339 net.cpp:382] pool1 -> pool1
I0428 19:39:36.955940 24339 net.cpp:124] Setting up pool1
I0428 19:39:36.955950 24339 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:39:36.955955 24339 net.cpp:139] Memory required for data: 954800
I0428 19:39:36.955976 24339 layer_factory.hpp:77] Creating layer ip1
I0428 19:39:36.955999 24339 net.cpp:86] Creating Layer ip1
I0428 19:39:36.956006 24339 net.cpp:408] ip1 <- pool1
I0428 19:39:36.956017 24339 net.cpp:382] ip1 -> ip1
I0428 19:39:36.956140 24339 net.cpp:124] Setting up ip1
I0428 19:39:36.956149 24339 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:36.956168 24339 net.cpp:139] Memory required for data: 974800
I0428 19:39:36.956182 24339 layer_factory.hpp:77] Creating layer relu1
I0428 19:39:36.956190 24339 net.cpp:86] Creating Layer relu1
I0428 19:39:36.956197 24339 net.cpp:408] relu1 <- ip1
I0428 19:39:36.956223 24339 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:39:36.956399 24339 net.cpp:124] Setting up relu1
I0428 19:39:36.956409 24339 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:36.956415 24339 net.cpp:139] Memory required for data: 994800
I0428 19:39:36.956420 24339 layer_factory.hpp:77] Creating layer ip2
I0428 19:39:36.956431 24339 net.cpp:86] Creating Layer ip2
I0428 19:39:36.956436 24339 net.cpp:408] ip2 <- ip1
I0428 19:39:36.956445 24339 net.cpp:382] ip2 -> ip2
I0428 19:39:36.956583 24339 net.cpp:124] Setting up ip2
I0428 19:39:36.956591 24339 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:36.956596 24339 net.cpp:139] Memory required for data: 1014800
I0428 19:39:36.956605 24339 layer_factory.hpp:77] Creating layer relu2
I0428 19:39:36.956614 24339 net.cpp:86] Creating Layer relu2
I0428 19:39:36.956619 24339 net.cpp:408] relu2 <- ip2
I0428 19:39:36.956625 24339 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:39:36.956854 24339 net.cpp:124] Setting up relu2
I0428 19:39:36.956883 24339 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:39:36.956889 24339 net.cpp:139] Memory required for data: 1034800
I0428 19:39:36.956894 24339 layer_factory.hpp:77] Creating layer ip3
I0428 19:39:36.956904 24339 net.cpp:86] Creating Layer ip3
I0428 19:39:36.956912 24339 net.cpp:408] ip3 <- ip2
I0428 19:39:36.956920 24339 net.cpp:382] ip3 -> ip3
I0428 19:39:36.957043 24339 net.cpp:124] Setting up ip3
I0428 19:39:36.957053 24339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:36.957058 24339 net.cpp:139] Memory required for data: 1038800
I0428 19:39:36.957077 24339 layer_factory.hpp:77] Creating layer relu3
I0428 19:39:36.957087 24339 net.cpp:86] Creating Layer relu3
I0428 19:39:36.957096 24339 net.cpp:408] relu3 <- ip3
I0428 19:39:36.957108 24339 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:39:36.957942 24339 net.cpp:124] Setting up relu3
I0428 19:39:36.957957 24339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:36.957963 24339 net.cpp:139] Memory required for data: 1042800
I0428 19:39:36.957968 24339 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:39:36.957976 24339 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:39:36.957983 24339 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:39:36.957990 24339 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:39:36.958000 24339 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:39:36.958043 24339 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:39:36.958051 24339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:36.958058 24339 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:39:36.958063 24339 net.cpp:139] Memory required for data: 1050800
I0428 19:39:36.958068 24339 layer_factory.hpp:77] Creating layer accuracy
I0428 19:39:36.958076 24339 net.cpp:86] Creating Layer accuracy
I0428 19:39:36.958082 24339 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:39:36.958088 24339 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:39:36.958096 24339 net.cpp:382] accuracy -> accuracy
I0428 19:39:36.958108 24339 net.cpp:124] Setting up accuracy
I0428 19:39:36.958115 24339 net.cpp:131] Top shape: (1)
I0428 19:39:36.958122 24339 net.cpp:139] Memory required for data: 1050804
I0428 19:39:36.958127 24339 layer_factory.hpp:77] Creating layer loss
I0428 19:39:36.958133 24339 net.cpp:86] Creating Layer loss
I0428 19:39:36.958138 24339 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:39:36.958145 24339 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:39:36.958168 24339 net.cpp:382] loss -> loss
I0428 19:39:36.958178 24339 layer_factory.hpp:77] Creating layer loss
I0428 19:39:36.958429 24339 net.cpp:124] Setting up loss
I0428 19:39:36.958441 24339 net.cpp:131] Top shape: (1)
I0428 19:39:36.958446 24339 net.cpp:134]     with loss weight 1
I0428 19:39:36.958456 24339 net.cpp:139] Memory required for data: 1050808
I0428 19:39:36.958503 24339 net.cpp:200] loss needs backward computation.
I0428 19:39:36.958509 24339 net.cpp:202] accuracy does not need backward computation.
I0428 19:39:36.958515 24339 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:39:36.958520 24339 net.cpp:200] relu3 needs backward computation.
I0428 19:39:36.958525 24339 net.cpp:200] ip3 needs backward computation.
I0428 19:39:36.958531 24339 net.cpp:200] relu2 needs backward computation.
I0428 19:39:36.958536 24339 net.cpp:200] ip2 needs backward computation.
I0428 19:39:36.958541 24339 net.cpp:200] relu1 needs backward computation.
I0428 19:39:36.958546 24339 net.cpp:200] ip1 needs backward computation.
I0428 19:39:36.958552 24339 net.cpp:200] pool1 needs backward computation.
I0428 19:39:36.958557 24339 net.cpp:200] conv1 needs backward computation.
I0428 19:39:36.958562 24339 net.cpp:200] pool0 needs backward computation.
I0428 19:39:36.958567 24339 net.cpp:200] conv0 needs backward computation.
I0428 19:39:36.958577 24339 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:39:36.958585 24339 net.cpp:202] mnist does not need backward computation.
I0428 19:39:36.958588 24339 net.cpp:244] This network produces output accuracy
I0428 19:39:36.958595 24339 net.cpp:244] This network produces output loss
I0428 19:39:36.958611 24339 net.cpp:257] Network initialization done.
I0428 19:39:36.958658 24339 solver.cpp:56] Solver scaffolding done.
I0428 19:39:36.959022 24339 caffe.cpp:248] Starting Optimization
I0428 19:39:36.959028 24339 solver.cpp:273] Solving LeNet
I0428 19:39:36.959033 24339 solver.cpp:274] Learning Rate Policy: inv
I0428 19:39:36.959867 24339 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:39:36.962616 24339 blocking_queue.cpp:49] Waiting for data
I0428 19:39:37.026489 24346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:37.026909 24339 solver.cpp:398]     Test net output #0: accuracy = 0.1129
I0428 19:39:37.026932 24339 solver.cpp:398]     Test net output #1: loss = 2.2918 (* 1 = 2.2918 loss)
I0428 19:39:37.028817 24339 solver.cpp:219] Iteration 0 (-1.1855e-42 iter/s, 0.0697324s/100 iters), loss = 2.28576
I0428 19:39:37.028862 24339 solver.cpp:238]     Train net output #0: loss = 2.28576 (* 1 = 2.28576 loss)
I0428 19:39:37.028909 24339 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:39:37.096468 24339 solver.cpp:219] Iteration 100 (1478.93 iter/s, 0.0676162s/100 iters), loss = 1.43464
I0428 19:39:37.096495 24339 solver.cpp:238]     Train net output #0: loss = 1.43464 (* 1 = 1.43464 loss)
I0428 19:39:37.096521 24339 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:39:37.164710 24339 solver.cpp:219] Iteration 200 (1466.09 iter/s, 0.0682086s/100 iters), loss = 0.601711
I0428 19:39:37.164738 24339 solver.cpp:238]     Train net output #0: loss = 0.601711 (* 1 = 0.601711 loss)
I0428 19:39:37.164748 24339 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:39:37.231674 24339 solver.cpp:219] Iteration 300 (1494.11 iter/s, 0.0669297s/100 iters), loss = 0.364391
I0428 19:39:37.231703 24339 solver.cpp:238]     Train net output #0: loss = 0.364391 (* 1 = 0.364391 loss)
I0428 19:39:37.231712 24339 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:39:37.298300 24339 solver.cpp:219] Iteration 400 (1501.69 iter/s, 0.0665917s/100 iters), loss = 0.306638
I0428 19:39:37.298328 24339 solver.cpp:238]     Train net output #0: loss = 0.306638 (* 1 = 0.306638 loss)
I0428 19:39:37.298337 24339 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:39:37.365206 24339 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:39:37.431262 24346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:37.431697 24339 solver.cpp:398]     Test net output #0: accuracy = 0.9086
I0428 19:39:37.431721 24339 solver.cpp:398]     Test net output #1: loss = 0.298936 (* 1 = 0.298936 loss)
I0428 19:39:37.432518 24339 solver.cpp:219] Iteration 500 (745.268 iter/s, 0.13418s/100 iters), loss = 0.429827
I0428 19:39:37.432546 24339 solver.cpp:238]     Train net output #0: loss = 0.429827 (* 1 = 0.429827 loss)
I0428 19:39:37.432588 24339 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:39:37.502290 24339 solver.cpp:219] Iteration 600 (1433.93 iter/s, 0.0697385s/100 iters), loss = 0.320088
I0428 19:39:37.502317 24339 solver.cpp:238]     Train net output #0: loss = 0.320088 (* 1 = 0.320088 loss)
I0428 19:39:37.502327 24339 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:39:37.570850 24339 solver.cpp:219] Iteration 700 (1459.3 iter/s, 0.0685262s/100 iters), loss = 0.380288
I0428 19:39:37.570878 24339 solver.cpp:238]     Train net output #0: loss = 0.380288 (* 1 = 0.380288 loss)
I0428 19:39:37.570888 24339 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:39:37.639092 24339 solver.cpp:219] Iteration 800 (1466.09 iter/s, 0.0682085s/100 iters), loss = 0.35568
I0428 19:39:37.639120 24339 solver.cpp:238]     Train net output #0: loss = 0.35568 (* 1 = 0.35568 loss)
I0428 19:39:37.639132 24339 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:39:37.709548 24339 solver.cpp:219] Iteration 900 (1420.02 iter/s, 0.0704215s/100 iters), loss = 0.379201
I0428 19:39:37.709576 24339 solver.cpp:238]     Train net output #0: loss = 0.379201 (* 1 = 0.379201 loss)
I0428 19:39:37.709586 24339 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:39:37.732861 24345 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:37.777801 24339 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:39:37.778445 24339 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:39:37.778937 24339 solver.cpp:311] Iteration 1000, loss = 0.256895
I0428 19:39:37.778970 24339 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:39:37.843915 24346 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:39:37.844342 24339 solver.cpp:398]     Test net output #0: accuracy = 0.9329
I0428 19:39:37.844364 24339 solver.cpp:398]     Test net output #1: loss = 0.212153 (* 1 = 0.212153 loss)
I0428 19:39:37.844373 24339 solver.cpp:316] Optimization Done.
I0428 19:39:37.844378 24339 caffe.cpp:259] Optimization Done.
