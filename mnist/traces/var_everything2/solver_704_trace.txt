I0428 19:54:06.466786 27935 caffe.cpp:218] Using GPUs 0
I0428 19:54:06.502405 27935 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:54:07.020922 27935 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test704.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:54:07.021102 27935 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test704.prototxt
I0428 19:54:07.021579 27935 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:54:07.021603 27935 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:54:07.021719 27935 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:54:07.021816 27935 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:07.021950 27935 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:54:07.021981 27935 net.cpp:86] Creating Layer mnist
I0428 19:54:07.021992 27935 net.cpp:382] mnist -> data
I0428 19:54:07.022022 27935 net.cpp:382] mnist -> label
I0428 19:54:07.023475 27935 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:54:07.026849 27935 net.cpp:124] Setting up mnist
I0428 19:54:07.026875 27935 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:54:07.026885 27935 net.cpp:131] Top shape: 64 (64)
I0428 19:54:07.026890 27935 net.cpp:139] Memory required for data: 200960
I0428 19:54:07.026901 27935 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:07.026921 27935 net.cpp:86] Creating Layer conv0
I0428 19:54:07.026929 27935 net.cpp:408] conv0 <- data
I0428 19:54:07.026947 27935 net.cpp:382] conv0 -> conv0
I0428 19:54:07.332995 27935 net.cpp:124] Setting up conv0
I0428 19:54:07.333026 27935 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:54:07.333031 27935 net.cpp:139] Memory required for data: 938240
I0428 19:54:07.333050 27935 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:07.333063 27935 net.cpp:86] Creating Layer pool0
I0428 19:54:07.333068 27935 net.cpp:408] pool0 <- conv0
I0428 19:54:07.333075 27935 net.cpp:382] pool0 -> pool0
I0428 19:54:07.333130 27935 net.cpp:124] Setting up pool0
I0428 19:54:07.333139 27935 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:54:07.333163 27935 net.cpp:139] Memory required for data: 1122560
I0428 19:54:07.333166 27935 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:07.333179 27935 net.cpp:86] Creating Layer conv1
I0428 19:54:07.333184 27935 net.cpp:408] conv1 <- pool0
I0428 19:54:07.333189 27935 net.cpp:382] conv1 -> conv1
I0428 19:54:07.336400 27935 net.cpp:124] Setting up conv1
I0428 19:54:07.336417 27935 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:54:07.336421 27935 net.cpp:139] Memory required for data: 2760960
I0428 19:54:07.336432 27935 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:07.336441 27935 net.cpp:86] Creating Layer pool1
I0428 19:54:07.336447 27935 net.cpp:408] pool1 <- conv1
I0428 19:54:07.336452 27935 net.cpp:382] pool1 -> pool1
I0428 19:54:07.336498 27935 net.cpp:124] Setting up pool1
I0428 19:54:07.336504 27935 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:54:07.336508 27935 net.cpp:139] Memory required for data: 3170560
I0428 19:54:07.336511 27935 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:07.336519 27935 net.cpp:86] Creating Layer ip1
I0428 19:54:07.336522 27935 net.cpp:408] ip1 <- pool1
I0428 19:54:07.336529 27935 net.cpp:382] ip1 -> ip1
I0428 19:54:07.336751 27935 net.cpp:124] Setting up ip1
I0428 19:54:07.336761 27935 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:07.336766 27935 net.cpp:139] Memory required for data: 3173120
I0428 19:54:07.336773 27935 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:07.336781 27935 net.cpp:86] Creating Layer relu1
I0428 19:54:07.336784 27935 net.cpp:408] relu1 <- ip1
I0428 19:54:07.336789 27935 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:07.336994 27935 net.cpp:124] Setting up relu1
I0428 19:54:07.337005 27935 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:07.337009 27935 net.cpp:139] Memory required for data: 3175680
I0428 19:54:07.337013 27935 layer_factory.hpp:77] Creating layer loss
I0428 19:54:07.337020 27935 net.cpp:86] Creating Layer loss
I0428 19:54:07.337024 27935 net.cpp:408] loss <- ip1
I0428 19:54:07.337029 27935 net.cpp:408] loss <- label
I0428 19:54:07.337034 27935 net.cpp:382] loss -> loss
I0428 19:54:07.337052 27935 layer_factory.hpp:77] Creating layer loss
I0428 19:54:07.337985 27935 net.cpp:124] Setting up loss
I0428 19:54:07.337999 27935 net.cpp:131] Top shape: (1)
I0428 19:54:07.338003 27935 net.cpp:134]     with loss weight 1
I0428 19:54:07.338021 27935 net.cpp:139] Memory required for data: 3175684
I0428 19:54:07.338024 27935 net.cpp:200] loss needs backward computation.
I0428 19:54:07.338029 27935 net.cpp:200] relu1 needs backward computation.
I0428 19:54:07.338033 27935 net.cpp:200] ip1 needs backward computation.
I0428 19:54:07.338037 27935 net.cpp:200] pool1 needs backward computation.
I0428 19:54:07.338040 27935 net.cpp:200] conv1 needs backward computation.
I0428 19:54:07.338044 27935 net.cpp:200] pool0 needs backward computation.
I0428 19:54:07.338047 27935 net.cpp:200] conv0 needs backward computation.
I0428 19:54:07.338052 27935 net.cpp:202] mnist does not need backward computation.
I0428 19:54:07.338054 27935 net.cpp:244] This network produces output loss
I0428 19:54:07.338064 27935 net.cpp:257] Network initialization done.
I0428 19:54:07.338376 27935 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test704.prototxt
I0428 19:54:07.338404 27935 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:54:07.338490 27935 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:54:07.338572 27935 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:07.338624 27935 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:54:07.338642 27935 net.cpp:86] Creating Layer mnist
I0428 19:54:07.338649 27935 net.cpp:382] mnist -> data
I0428 19:54:07.338657 27935 net.cpp:382] mnist -> label
I0428 19:54:07.338757 27935 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:54:07.340950 27935 net.cpp:124] Setting up mnist
I0428 19:54:07.340965 27935 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:54:07.340972 27935 net.cpp:131] Top shape: 100 (100)
I0428 19:54:07.340979 27935 net.cpp:139] Memory required for data: 314000
I0428 19:54:07.340983 27935 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:54:07.340991 27935 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:54:07.340996 27935 net.cpp:408] label_mnist_1_split <- label
I0428 19:54:07.341001 27935 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:54:07.341013 27935 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:54:07.341123 27935 net.cpp:124] Setting up label_mnist_1_split
I0428 19:54:07.341133 27935 net.cpp:131] Top shape: 100 (100)
I0428 19:54:07.341137 27935 net.cpp:131] Top shape: 100 (100)
I0428 19:54:07.341140 27935 net.cpp:139] Memory required for data: 314800
I0428 19:54:07.341145 27935 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:07.341154 27935 net.cpp:86] Creating Layer conv0
I0428 19:54:07.341158 27935 net.cpp:408] conv0 <- data
I0428 19:54:07.341164 27935 net.cpp:382] conv0 -> conv0
I0428 19:54:07.342111 27935 net.cpp:124] Setting up conv0
I0428 19:54:07.342128 27935 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:54:07.342131 27935 net.cpp:139] Memory required for data: 1466800
I0428 19:54:07.342142 27935 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:07.342149 27935 net.cpp:86] Creating Layer pool0
I0428 19:54:07.342154 27935 net.cpp:408] pool0 <- conv0
I0428 19:54:07.342160 27935 net.cpp:382] pool0 -> pool0
I0428 19:54:07.342203 27935 net.cpp:124] Setting up pool0
I0428 19:54:07.342209 27935 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:54:07.342213 27935 net.cpp:139] Memory required for data: 1754800
I0428 19:54:07.342216 27935 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:07.342228 27935 net.cpp:86] Creating Layer conv1
I0428 19:54:07.342231 27935 net.cpp:408] conv1 <- pool0
I0428 19:54:07.342237 27935 net.cpp:382] conv1 -> conv1
I0428 19:54:07.344082 27935 net.cpp:124] Setting up conv1
I0428 19:54:07.344104 27935 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:54:07.344107 27935 net.cpp:139] Memory required for data: 4314800
I0428 19:54:07.344118 27935 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:07.344126 27935 net.cpp:86] Creating Layer pool1
I0428 19:54:07.344143 27935 net.cpp:408] pool1 <- conv1
I0428 19:54:07.344152 27935 net.cpp:382] pool1 -> pool1
I0428 19:54:07.344197 27935 net.cpp:124] Setting up pool1
I0428 19:54:07.344207 27935 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:54:07.344209 27935 net.cpp:139] Memory required for data: 4954800
I0428 19:54:07.344220 27935 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:07.344230 27935 net.cpp:86] Creating Layer ip1
I0428 19:54:07.344234 27935 net.cpp:408] ip1 <- pool1
I0428 19:54:07.344239 27935 net.cpp:382] ip1 -> ip1
I0428 19:54:07.344465 27935 net.cpp:124] Setting up ip1
I0428 19:54:07.344475 27935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:07.344478 27935 net.cpp:139] Memory required for data: 4958800
I0428 19:54:07.344486 27935 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:07.344494 27935 net.cpp:86] Creating Layer relu1
I0428 19:54:07.344497 27935 net.cpp:408] relu1 <- ip1
I0428 19:54:07.344503 27935 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:07.345477 27935 net.cpp:124] Setting up relu1
I0428 19:54:07.345494 27935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:07.345497 27935 net.cpp:139] Memory required for data: 4962800
I0428 19:54:07.345501 27935 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:54:07.345510 27935 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:54:07.345513 27935 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:54:07.345520 27935 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:54:07.345527 27935 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:54:07.345574 27935 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:54:07.345582 27935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:07.345585 27935 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:07.345588 27935 net.cpp:139] Memory required for data: 4970800
I0428 19:54:07.345592 27935 layer_factory.hpp:77] Creating layer accuracy
I0428 19:54:07.345598 27935 net.cpp:86] Creating Layer accuracy
I0428 19:54:07.345602 27935 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:54:07.345607 27935 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:54:07.345613 27935 net.cpp:382] accuracy -> accuracy
I0428 19:54:07.345620 27935 net.cpp:124] Setting up accuracy
I0428 19:54:07.345625 27935 net.cpp:131] Top shape: (1)
I0428 19:54:07.345628 27935 net.cpp:139] Memory required for data: 4970804
I0428 19:54:07.345633 27935 layer_factory.hpp:77] Creating layer loss
I0428 19:54:07.345639 27935 net.cpp:86] Creating Layer loss
I0428 19:54:07.345643 27935 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:54:07.345649 27935 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:54:07.345654 27935 net.cpp:382] loss -> loss
I0428 19:54:07.345659 27935 layer_factory.hpp:77] Creating layer loss
I0428 19:54:07.345945 27935 net.cpp:124] Setting up loss
I0428 19:54:07.345957 27935 net.cpp:131] Top shape: (1)
I0428 19:54:07.345960 27935 net.cpp:134]     with loss weight 1
I0428 19:54:07.345968 27935 net.cpp:139] Memory required for data: 4970808
I0428 19:54:07.345973 27935 net.cpp:200] loss needs backward computation.
I0428 19:54:07.345976 27935 net.cpp:202] accuracy does not need backward computation.
I0428 19:54:07.345981 27935 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:54:07.345984 27935 net.cpp:200] relu1 needs backward computation.
I0428 19:54:07.345988 27935 net.cpp:200] ip1 needs backward computation.
I0428 19:54:07.345993 27935 net.cpp:200] pool1 needs backward computation.
I0428 19:54:07.345995 27935 net.cpp:200] conv1 needs backward computation.
I0428 19:54:07.345999 27935 net.cpp:200] pool0 needs backward computation.
I0428 19:54:07.346002 27935 net.cpp:200] conv0 needs backward computation.
I0428 19:54:07.346007 27935 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:54:07.346011 27935 net.cpp:202] mnist does not need backward computation.
I0428 19:54:07.346014 27935 net.cpp:244] This network produces output accuracy
I0428 19:54:07.346019 27935 net.cpp:244] This network produces output loss
I0428 19:54:07.346045 27935 net.cpp:257] Network initialization done.
I0428 19:54:07.346086 27935 solver.cpp:56] Solver scaffolding done.
I0428 19:54:07.346359 27935 caffe.cpp:248] Starting Optimization
I0428 19:54:07.346366 27935 solver.cpp:273] Solving LeNet
I0428 19:54:07.346370 27935 solver.cpp:274] Learning Rate Policy: inv
I0428 19:54:07.346580 27935 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:54:07.352357 27935 blocking_queue.cpp:49] Waiting for data
I0428 19:54:07.425401 27942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:07.425987 27935 solver.cpp:398]     Test net output #0: accuracy = 0.1039
I0428 19:54:07.426012 27935 solver.cpp:398]     Test net output #1: loss = 2.3893 (* 1 = 2.3893 loss)
I0428 19:54:07.429816 27935 solver.cpp:219] Iteration 0 (-9.73902e-43 iter/s, 0.0834099s/100 iters), loss = 2.3937
I0428 19:54:07.429848 27935 solver.cpp:238]     Train net output #0: loss = 2.3937 (* 1 = 2.3937 loss)
I0428 19:54:07.429862 27935 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:54:07.581055 27935 solver.cpp:219] Iteration 100 (661.439 iter/s, 0.151185s/100 iters), loss = 1.73447
I0428 19:54:07.581097 27935 solver.cpp:238]     Train net output #0: loss = 1.73447 (* 1 = 1.73447 loss)
I0428 19:54:07.581109 27935 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:54:07.727910 27935 solver.cpp:219] Iteration 200 (681.22 iter/s, 0.146796s/100 iters), loss = 1.73497
I0428 19:54:07.727946 27935 solver.cpp:238]     Train net output #0: loss = 1.73497 (* 1 = 1.73497 loss)
I0428 19:54:07.727954 27935 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:54:07.872578 27935 solver.cpp:219] Iteration 300 (691.47 iter/s, 0.14462s/100 iters), loss = 1.19659
I0428 19:54:07.872613 27935 solver.cpp:238]     Train net output #0: loss = 1.19659 (* 1 = 1.19659 loss)
I0428 19:54:07.872622 27935 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:54:08.012033 27935 solver.cpp:219] Iteration 400 (717.317 iter/s, 0.139408s/100 iters), loss = 1.63887
I0428 19:54:08.012075 27935 solver.cpp:238]     Train net output #0: loss = 1.63887 (* 1 = 1.63887 loss)
I0428 19:54:08.012084 27935 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:08.150319 27935 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:08.201325 27942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:08.203018 27935 solver.cpp:398]     Test net output #0: accuracy = 0.5648
I0428 19:54:08.203054 27935 solver.cpp:398]     Test net output #1: loss = 1.28363 (* 1 = 1.28363 loss)
I0428 19:54:08.204382 27935 solver.cpp:219] Iteration 500 (520.039 iter/s, 0.192293s/100 iters), loss = 1.59184
I0428 19:54:08.204408 27935 solver.cpp:238]     Train net output #0: loss = 1.59184 (* 1 = 1.59184 loss)
I0428 19:54:08.204424 27935 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:08.344924 27935 solver.cpp:219] Iteration 600 (711.734 iter/s, 0.140502s/100 iters), loss = 1.12459
I0428 19:54:08.344962 27935 solver.cpp:238]     Train net output #0: loss = 1.12459 (* 1 = 1.12459 loss)
I0428 19:54:08.344970 27935 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:08.486176 27935 solver.cpp:219] Iteration 700 (708.176 iter/s, 0.141208s/100 iters), loss = 1.27014
I0428 19:54:08.486218 27935 solver.cpp:238]     Train net output #0: loss = 1.27014 (* 1 = 1.27014 loss)
I0428 19:54:08.486227 27935 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:08.627121 27935 solver.cpp:219] Iteration 800 (709.721 iter/s, 0.1409s/100 iters), loss = 0.965031
I0428 19:54:08.627161 27935 solver.cpp:238]     Train net output #0: loss = 0.965031 (* 1 = 0.965031 loss)
I0428 19:54:08.627169 27935 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:08.767354 27935 solver.cpp:219] Iteration 900 (713.324 iter/s, 0.140189s/100 iters), loss = 0.85855
I0428 19:54:08.767385 27935 solver.cpp:238]     Train net output #0: loss = 0.85855 (* 1 = 0.85855 loss)
I0428 19:54:08.767392 27935 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:08.813680 27941 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:08.905285 27935 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:08.906926 27935 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:08.907778 27935 solver.cpp:311] Iteration 1000, loss = 1.05851
I0428 19:54:08.907820 27935 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:08.966073 27942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:08.967939 27935 solver.cpp:398]     Test net output #0: accuracy = 0.6673
I0428 19:54:08.967978 27935 solver.cpp:398]     Test net output #1: loss = 1.02122 (* 1 = 1.02122 loss)
I0428 19:54:08.967986 27935 solver.cpp:316] Optimization Done.
I0428 19:54:08.967991 27935 caffe.cpp:259] Optimization Done.
