I0428 19:31:37.710345 22628 caffe.cpp:218] Using GPUs 0
I0428 19:31:37.743981 22628 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:38.195611 22628 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test128.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:38.195771 22628 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test128.prototxt
I0428 19:31:38.196030 22628 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:38.196044 22628 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:38.196105 22628 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:31:38.196159 22628 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:38.196238 22628 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:38.196257 22628 net.cpp:86] Creating Layer mnist
I0428 19:31:38.196264 22628 net.cpp:382] mnist -> data
I0428 19:31:38.196281 22628 net.cpp:382] mnist -> label
I0428 19:31:38.197268 22628 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:38.199918 22628 net.cpp:124] Setting up mnist
I0428 19:31:38.199932 22628 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:38.199939 22628 net.cpp:131] Top shape: 64 (64)
I0428 19:31:38.199941 22628 net.cpp:139] Memory required for data: 200960
I0428 19:31:38.199946 22628 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:38.199983 22628 net.cpp:86] Creating Layer conv0
I0428 19:31:38.199990 22628 net.cpp:408] conv0 <- data
I0428 19:31:38.200001 22628 net.cpp:382] conv0 -> conv0
I0428 19:31:38.431970 22628 net.cpp:124] Setting up conv0
I0428 19:31:38.431998 22628 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:31:38.432001 22628 net.cpp:139] Memory required for data: 1675520
I0428 19:31:38.432015 22628 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:38.432027 22628 net.cpp:86] Creating Layer pool0
I0428 19:31:38.432030 22628 net.cpp:408] pool0 <- conv0
I0428 19:31:38.432035 22628 net.cpp:382] pool0 -> pool0
I0428 19:31:38.432095 22628 net.cpp:124] Setting up pool0
I0428 19:31:38.432101 22628 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:31:38.432103 22628 net.cpp:139] Memory required for data: 2044160
I0428 19:31:38.432121 22628 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:38.432129 22628 net.cpp:86] Creating Layer ip1
I0428 19:31:38.432132 22628 net.cpp:408] ip1 <- pool0
I0428 19:31:38.432137 22628 net.cpp:382] ip1 -> ip1
I0428 19:31:38.433643 22628 net.cpp:124] Setting up ip1
I0428 19:31:38.433672 22628 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:38.433676 22628 net.cpp:139] Memory required for data: 2056960
I0428 19:31:38.433683 22628 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:38.433691 22628 net.cpp:86] Creating Layer relu1
I0428 19:31:38.433693 22628 net.cpp:408] relu1 <- ip1
I0428 19:31:38.433698 22628 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:38.433876 22628 net.cpp:124] Setting up relu1
I0428 19:31:38.433884 22628 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:38.433887 22628 net.cpp:139] Memory required for data: 2069760
I0428 19:31:38.433890 22628 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:38.433897 22628 net.cpp:86] Creating Layer ip2
I0428 19:31:38.433900 22628 net.cpp:408] ip2 <- ip1
I0428 19:31:38.433905 22628 net.cpp:382] ip2 -> ip2
I0428 19:31:38.434015 22628 net.cpp:124] Setting up ip2
I0428 19:31:38.434023 22628 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:38.434027 22628 net.cpp:139] Memory required for data: 2072320
I0428 19:31:38.434034 22628 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:38.434039 22628 net.cpp:86] Creating Layer relu2
I0428 19:31:38.434043 22628 net.cpp:408] relu2 <- ip2
I0428 19:31:38.434047 22628 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:38.434788 22628 net.cpp:124] Setting up relu2
I0428 19:31:38.434800 22628 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:38.434820 22628 net.cpp:139] Memory required for data: 2074880
I0428 19:31:38.434823 22628 layer_factory.hpp:77] Creating layer loss
I0428 19:31:38.434829 22628 net.cpp:86] Creating Layer loss
I0428 19:31:38.434834 22628 net.cpp:408] loss <- ip2
I0428 19:31:38.434837 22628 net.cpp:408] loss <- label
I0428 19:31:38.434844 22628 net.cpp:382] loss -> loss
I0428 19:31:38.434861 22628 layer_factory.hpp:77] Creating layer loss
I0428 19:31:38.435111 22628 net.cpp:124] Setting up loss
I0428 19:31:38.435122 22628 net.cpp:131] Top shape: (1)
I0428 19:31:38.435127 22628 net.cpp:134]     with loss weight 1
I0428 19:31:38.435142 22628 net.cpp:139] Memory required for data: 2074884
I0428 19:31:38.435144 22628 net.cpp:200] loss needs backward computation.
I0428 19:31:38.435148 22628 net.cpp:200] relu2 needs backward computation.
I0428 19:31:38.435151 22628 net.cpp:200] ip2 needs backward computation.
I0428 19:31:38.435154 22628 net.cpp:200] relu1 needs backward computation.
I0428 19:31:38.435158 22628 net.cpp:200] ip1 needs backward computation.
I0428 19:31:38.435160 22628 net.cpp:200] pool0 needs backward computation.
I0428 19:31:38.435163 22628 net.cpp:200] conv0 needs backward computation.
I0428 19:31:38.435166 22628 net.cpp:202] mnist does not need backward computation.
I0428 19:31:38.435169 22628 net.cpp:244] This network produces output loss
I0428 19:31:38.435178 22628 net.cpp:257] Network initialization done.
I0428 19:31:38.435438 22628 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test128.prototxt
I0428 19:31:38.435463 22628 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:38.435534 22628 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:31:38.435603 22628 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:38.435650 22628 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:38.435662 22628 net.cpp:86] Creating Layer mnist
I0428 19:31:38.435667 22628 net.cpp:382] mnist -> data
I0428 19:31:38.435673 22628 net.cpp:382] mnist -> label
I0428 19:31:38.435756 22628 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:38.436841 22628 net.cpp:124] Setting up mnist
I0428 19:31:38.436884 22628 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:38.436890 22628 net.cpp:131] Top shape: 100 (100)
I0428 19:31:38.436893 22628 net.cpp:139] Memory required for data: 314000
I0428 19:31:38.436897 22628 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:38.436904 22628 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:38.436923 22628 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:38.436928 22628 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:38.436935 22628 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:38.436991 22628 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:38.436997 22628 net.cpp:131] Top shape: 100 (100)
I0428 19:31:38.437001 22628 net.cpp:131] Top shape: 100 (100)
I0428 19:31:38.437021 22628 net.cpp:139] Memory required for data: 314800
I0428 19:31:38.437024 22628 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:38.437034 22628 net.cpp:86] Creating Layer conv0
I0428 19:31:38.437037 22628 net.cpp:408] conv0 <- data
I0428 19:31:38.437043 22628 net.cpp:382] conv0 -> conv0
I0428 19:31:38.438828 22628 net.cpp:124] Setting up conv0
I0428 19:31:38.438843 22628 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:31:38.438846 22628 net.cpp:139] Memory required for data: 2618800
I0428 19:31:38.438854 22628 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:38.438876 22628 net.cpp:86] Creating Layer pool0
I0428 19:31:38.438880 22628 net.cpp:408] pool0 <- conv0
I0428 19:31:38.438884 22628 net.cpp:382] pool0 -> pool0
I0428 19:31:38.438920 22628 net.cpp:124] Setting up pool0
I0428 19:31:38.438925 22628 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:31:38.438928 22628 net.cpp:139] Memory required for data: 3194800
I0428 19:31:38.438931 22628 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:38.438937 22628 net.cpp:86] Creating Layer ip1
I0428 19:31:38.438941 22628 net.cpp:408] ip1 <- pool0
I0428 19:31:38.438944 22628 net.cpp:382] ip1 -> ip1
I0428 19:31:38.439469 22628 net.cpp:124] Setting up ip1
I0428 19:31:38.439477 22628 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:38.439481 22628 net.cpp:139] Memory required for data: 3214800
I0428 19:31:38.439488 22628 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:38.439492 22628 net.cpp:86] Creating Layer relu1
I0428 19:31:38.439496 22628 net.cpp:408] relu1 <- ip1
I0428 19:31:38.439499 22628 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:38.439796 22628 net.cpp:124] Setting up relu1
I0428 19:31:38.439806 22628 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:38.439821 22628 net.cpp:139] Memory required for data: 3234800
I0428 19:31:38.439824 22628 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:38.439831 22628 net.cpp:86] Creating Layer ip2
I0428 19:31:38.439834 22628 net.cpp:408] ip2 <- ip1
I0428 19:31:38.439839 22628 net.cpp:382] ip2 -> ip2
I0428 19:31:38.439966 22628 net.cpp:124] Setting up ip2
I0428 19:31:38.439975 22628 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:38.439978 22628 net.cpp:139] Memory required for data: 3238800
I0428 19:31:38.439985 22628 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:38.439997 22628 net.cpp:86] Creating Layer relu2
I0428 19:31:38.440001 22628 net.cpp:408] relu2 <- ip2
I0428 19:31:38.440016 22628 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:38.440187 22628 net.cpp:124] Setting up relu2
I0428 19:31:38.440196 22628 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:38.440199 22628 net.cpp:139] Memory required for data: 3242800
I0428 19:31:38.440202 22628 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:31:38.440208 22628 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:31:38.440212 22628 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:31:38.440215 22628 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:31:38.440222 22628 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:31:38.440253 22628 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:31:38.440258 22628 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:38.440261 22628 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:38.440264 22628 net.cpp:139] Memory required for data: 3250800
I0428 19:31:38.440268 22628 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:38.440275 22628 net.cpp:86] Creating Layer accuracy
I0428 19:31:38.440279 22628 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:31:38.440289 22628 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:38.440294 22628 net.cpp:382] accuracy -> accuracy
I0428 19:31:38.440305 22628 net.cpp:124] Setting up accuracy
I0428 19:31:38.440310 22628 net.cpp:131] Top shape: (1)
I0428 19:31:38.440311 22628 net.cpp:139] Memory required for data: 3250804
I0428 19:31:38.440315 22628 layer_factory.hpp:77] Creating layer loss
I0428 19:31:38.440318 22628 net.cpp:86] Creating Layer loss
I0428 19:31:38.440321 22628 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:31:38.440325 22628 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:38.440328 22628 net.cpp:382] loss -> loss
I0428 19:31:38.440340 22628 layer_factory.hpp:77] Creating layer loss
I0428 19:31:38.441388 22628 net.cpp:124] Setting up loss
I0428 19:31:38.441401 22628 net.cpp:131] Top shape: (1)
I0428 19:31:38.441411 22628 net.cpp:134]     with loss weight 1
I0428 19:31:38.441423 22628 net.cpp:139] Memory required for data: 3250808
I0428 19:31:38.441426 22628 net.cpp:200] loss needs backward computation.
I0428 19:31:38.441431 22628 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:38.441434 22628 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:31:38.441437 22628 net.cpp:200] relu2 needs backward computation.
I0428 19:31:38.441439 22628 net.cpp:200] ip2 needs backward computation.
I0428 19:31:38.441448 22628 net.cpp:200] relu1 needs backward computation.
I0428 19:31:38.441450 22628 net.cpp:200] ip1 needs backward computation.
I0428 19:31:38.441453 22628 net.cpp:200] pool0 needs backward computation.
I0428 19:31:38.441457 22628 net.cpp:200] conv0 needs backward computation.
I0428 19:31:38.441460 22628 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:38.441463 22628 net.cpp:202] mnist does not need backward computation.
I0428 19:31:38.441467 22628 net.cpp:244] This network produces output accuracy
I0428 19:31:38.441469 22628 net.cpp:244] This network produces output loss
I0428 19:31:38.441478 22628 net.cpp:257] Network initialization done.
I0428 19:31:38.441509 22628 solver.cpp:56] Solver scaffolding done.
I0428 19:31:38.441721 22628 caffe.cpp:248] Starting Optimization
I0428 19:31:38.441727 22628 solver.cpp:273] Solving LeNet
I0428 19:31:38.441756 22628 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:38.442489 22628 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:38.445767 22628 blocking_queue.cpp:49] Waiting for data
I0428 19:31:38.519556 22635 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:38.520064 22628 solver.cpp:398]     Test net output #0: accuracy = 0.0798
I0428 19:31:38.520086 22628 solver.cpp:398]     Test net output #1: loss = 2.31684 (* 1 = 2.31684 loss)
I0428 19:31:38.522861 22628 solver.cpp:219] Iteration 0 (2.80792 iter/s, 0.0810739s/100 iters), loss = 2.30623
I0428 19:31:38.522914 22628 solver.cpp:238]     Train net output #0: loss = 2.30623 (* 1 = 2.30623 loss)
I0428 19:31:38.522928 22628 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:38.596446 22628 solver.cpp:219] Iteration 100 (1360.11 iter/s, 0.0735232s/100 iters), loss = 0.834458
I0428 19:31:38.596472 22628 solver.cpp:238]     Train net output #0: loss = 0.834458 (* 1 = 0.834458 loss)
I0428 19:31:38.596479 22628 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:38.666745 22628 solver.cpp:219] Iteration 200 (1423.19 iter/s, 0.0702649s/100 iters), loss = 0.922109
I0428 19:31:38.666769 22628 solver.cpp:238]     Train net output #0: loss = 0.922109 (* 1 = 0.922109 loss)
I0428 19:31:38.666775 22628 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:38.740571 22628 solver.cpp:219] Iteration 300 (1355.13 iter/s, 0.0737935s/100 iters), loss = 0.529021
I0428 19:31:38.740597 22628 solver.cpp:238]     Train net output #0: loss = 0.529021 (* 1 = 0.529021 loss)
I0428 19:31:38.740604 22628 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:38.810897 22628 solver.cpp:219] Iteration 400 (1422.63 iter/s, 0.0702925s/100 iters), loss = 0.517439
I0428 19:31:38.810923 22628 solver.cpp:238]     Train net output #0: loss = 0.517439 (* 1 = 0.517439 loss)
I0428 19:31:38.810930 22628 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:38.879999 22628 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:38.954692 22635 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:38.955214 22628 solver.cpp:398]     Test net output #0: accuracy = 0.74
I0428 19:31:38.955234 22628 solver.cpp:398]     Test net output #1: loss = 0.686168 (* 1 = 0.686168 loss)
I0428 19:31:38.955965 22628 solver.cpp:219] Iteration 500 (689.517 iter/s, 0.145029s/100 iters), loss = 0.829145
I0428 19:31:38.955999 22628 solver.cpp:238]     Train net output #0: loss = 0.829145 (* 1 = 0.829145 loss)
I0428 19:31:38.956006 22628 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:39.028748 22628 solver.cpp:219] Iteration 600 (1374.78 iter/s, 0.0727388s/100 iters), loss = 0.522972
I0428 19:31:39.028771 22628 solver.cpp:238]     Train net output #0: loss = 0.522972 (* 1 = 0.522972 loss)
I0428 19:31:39.028779 22628 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:39.098577 22628 solver.cpp:219] Iteration 700 (1432.75 iter/s, 0.0697959s/100 iters), loss = 0.423218
I0428 19:31:39.098615 22628 solver.cpp:238]     Train net output #0: loss = 0.423218 (* 1 = 0.423218 loss)
I0428 19:31:39.098624 22628 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:39.165120 22628 solver.cpp:219] Iteration 800 (1503.51 iter/s, 0.0665108s/100 iters), loss = 0.463445
I0428 19:31:39.165163 22628 solver.cpp:238]     Train net output #0: loss = 0.463445 (* 1 = 0.463445 loss)
I0428 19:31:39.165185 22628 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:39.239027 22628 solver.cpp:219] Iteration 900 (1353.98 iter/s, 0.0738562s/100 iters), loss = 0.743375
I0428 19:31:39.239053 22628 solver.cpp:238]     Train net output #0: loss = 0.743375 (* 1 = 0.743375 loss)
I0428 19:31:39.239061 22628 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:39.263736 22634 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:39.310106 22628 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:39.311480 22628 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:39.312499 22628 solver.cpp:311] Iteration 1000, loss = 0.34084
I0428 19:31:39.312515 22628 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:39.387482 22635 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:39.387985 22628 solver.cpp:398]     Test net output #0: accuracy = 0.8679
I0428 19:31:39.388005 22628 solver.cpp:398]     Test net output #1: loss = 0.355699 (* 1 = 0.355699 loss)
I0428 19:31:39.388010 22628 solver.cpp:316] Optimization Done.
I0428 19:31:39.388012 22628 caffe.cpp:259] Optimization Done.
