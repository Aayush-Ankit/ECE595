I0428 20:02:32.073470 29965 caffe.cpp:218] Using GPUs 0
I0428 20:02:32.102478 29965 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:32.548535 29965 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test931.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:32.548681 29965 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test931.prototxt
I0428 20:02:32.549068 29965 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:32.549098 29965 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:32.549206 29965 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:32.549265 29965 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:32.549347 29965 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:32.549366 29965 net.cpp:86] Creating Layer mnist
I0428 20:02:32.549372 29965 net.cpp:382] mnist -> data
I0428 20:02:32.549391 29965 net.cpp:382] mnist -> label
I0428 20:02:32.550324 29965 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:32.552464 29965 net.cpp:124] Setting up mnist
I0428 20:02:32.552510 29965 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:32.552515 29965 net.cpp:131] Top shape: 64 (64)
I0428 20:02:32.552517 29965 net.cpp:139] Memory required for data: 200960
I0428 20:02:32.552523 29965 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:32.552566 29965 net.cpp:86] Creating Layer conv0
I0428 20:02:32.552597 29965 net.cpp:408] conv0 <- data
I0428 20:02:32.552606 29965 net.cpp:382] conv0 -> conv0
I0428 20:02:32.782701 29965 net.cpp:124] Setting up conv0
I0428 20:02:32.782742 29965 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:32.782744 29965 net.cpp:139] Memory required for data: 1675520
I0428 20:02:32.782773 29965 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:32.782785 29965 net.cpp:86] Creating Layer pool0
I0428 20:02:32.782788 29965 net.cpp:408] pool0 <- conv0
I0428 20:02:32.782793 29965 net.cpp:382] pool0 -> pool0
I0428 20:02:32.782855 29965 net.cpp:124] Setting up pool0
I0428 20:02:32.782860 29965 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:32.782863 29965 net.cpp:139] Memory required for data: 2044160
I0428 20:02:32.782866 29965 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:32.782876 29965 net.cpp:86] Creating Layer conv1
I0428 20:02:32.782879 29965 net.cpp:408] conv1 <- pool0
I0428 20:02:32.782883 29965 net.cpp:382] conv1 -> conv1
I0428 20:02:32.785784 29965 net.cpp:124] Setting up conv1
I0428 20:02:32.785815 29965 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:02:32.785817 29965 net.cpp:139] Memory required for data: 2863360
I0428 20:02:32.785825 29965 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:32.785833 29965 net.cpp:86] Creating Layer pool1
I0428 20:02:32.785836 29965 net.cpp:408] pool1 <- conv1
I0428 20:02:32.785841 29965 net.cpp:382] pool1 -> pool1
I0428 20:02:32.785892 29965 net.cpp:124] Setting up pool1
I0428 20:02:32.785897 29965 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:02:32.785900 29965 net.cpp:139] Memory required for data: 3068160
I0428 20:02:32.785902 29965 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:32.785913 29965 net.cpp:86] Creating Layer ip1
I0428 20:02:32.785917 29965 net.cpp:408] ip1 <- pool1
I0428 20:02:32.785920 29965 net.cpp:382] ip1 -> ip1
I0428 20:02:32.786262 29965 net.cpp:124] Setting up ip1
I0428 20:02:32.786269 29965 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:32.786288 29965 net.cpp:139] Memory required for data: 3080960
I0428 20:02:32.786294 29965 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:32.786299 29965 net.cpp:86] Creating Layer relu1
I0428 20:02:32.786303 29965 net.cpp:408] relu1 <- ip1
I0428 20:02:32.786308 29965 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:32.786456 29965 net.cpp:124] Setting up relu1
I0428 20:02:32.786465 29965 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:32.786468 29965 net.cpp:139] Memory required for data: 3093760
I0428 20:02:32.786471 29965 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:32.786476 29965 net.cpp:86] Creating Layer ip2
I0428 20:02:32.786479 29965 net.cpp:408] ip2 <- ip1
I0428 20:02:32.786484 29965 net.cpp:382] ip2 -> ip2
I0428 20:02:32.787412 29965 net.cpp:124] Setting up ip2
I0428 20:02:32.787423 29965 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:32.787443 29965 net.cpp:139] Memory required for data: 3100160
I0428 20:02:32.787448 29965 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:32.787456 29965 net.cpp:86] Creating Layer relu2
I0428 20:02:32.787459 29965 net.cpp:408] relu2 <- ip2
I0428 20:02:32.787463 29965 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:32.788187 29965 net.cpp:124] Setting up relu2
I0428 20:02:32.788199 29965 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:32.788218 29965 net.cpp:139] Memory required for data: 3106560
I0428 20:02:32.788221 29965 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:32.788228 29965 net.cpp:86] Creating Layer ip3
I0428 20:02:32.788231 29965 net.cpp:408] ip3 <- ip2
I0428 20:02:32.788236 29965 net.cpp:382] ip3 -> ip3
I0428 20:02:32.788343 29965 net.cpp:124] Setting up ip3
I0428 20:02:32.788352 29965 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:32.788355 29965 net.cpp:139] Memory required for data: 3109120
I0428 20:02:32.788363 29965 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:32.788368 29965 net.cpp:86] Creating Layer relu3
I0428 20:02:32.788372 29965 net.cpp:408] relu3 <- ip3
I0428 20:02:32.788375 29965 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:32.788563 29965 net.cpp:124] Setting up relu3
I0428 20:02:32.788571 29965 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:32.788574 29965 net.cpp:139] Memory required for data: 3111680
I0428 20:02:32.788578 29965 layer_factory.hpp:77] Creating layer loss
I0428 20:02:32.788583 29965 net.cpp:86] Creating Layer loss
I0428 20:02:32.788585 29965 net.cpp:408] loss <- ip3
I0428 20:02:32.788589 29965 net.cpp:408] loss <- label
I0428 20:02:32.788594 29965 net.cpp:382] loss -> loss
I0428 20:02:32.788611 29965 layer_factory.hpp:77] Creating layer loss
I0428 20:02:32.788837 29965 net.cpp:124] Setting up loss
I0428 20:02:32.788862 29965 net.cpp:131] Top shape: (1)
I0428 20:02:32.788866 29965 net.cpp:134]     with loss weight 1
I0428 20:02:32.788879 29965 net.cpp:139] Memory required for data: 3111684
I0428 20:02:32.788883 29965 net.cpp:200] loss needs backward computation.
I0428 20:02:32.788887 29965 net.cpp:200] relu3 needs backward computation.
I0428 20:02:32.788890 29965 net.cpp:200] ip3 needs backward computation.
I0428 20:02:32.788892 29965 net.cpp:200] relu2 needs backward computation.
I0428 20:02:32.788895 29965 net.cpp:200] ip2 needs backward computation.
I0428 20:02:32.788898 29965 net.cpp:200] relu1 needs backward computation.
I0428 20:02:32.788902 29965 net.cpp:200] ip1 needs backward computation.
I0428 20:02:32.788904 29965 net.cpp:200] pool1 needs backward computation.
I0428 20:02:32.788908 29965 net.cpp:200] conv1 needs backward computation.
I0428 20:02:32.788910 29965 net.cpp:200] pool0 needs backward computation.
I0428 20:02:32.788913 29965 net.cpp:200] conv0 needs backward computation.
I0428 20:02:32.788918 29965 net.cpp:202] mnist does not need backward computation.
I0428 20:02:32.788919 29965 net.cpp:244] This network produces output loss
I0428 20:02:32.788928 29965 net.cpp:257] Network initialization done.
I0428 20:02:32.789289 29965 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test931.prototxt
I0428 20:02:32.789331 29965 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:32.789425 29965 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:32.789513 29965 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:32.789556 29965 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:32.789568 29965 net.cpp:86] Creating Layer mnist
I0428 20:02:32.789572 29965 net.cpp:382] mnist -> data
I0428 20:02:32.789580 29965 net.cpp:382] mnist -> label
I0428 20:02:32.789659 29965 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:32.791666 29965 net.cpp:124] Setting up mnist
I0428 20:02:32.791712 29965 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:32.791716 29965 net.cpp:131] Top shape: 100 (100)
I0428 20:02:32.791719 29965 net.cpp:139] Memory required for data: 314000
I0428 20:02:32.791723 29965 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:32.791751 29965 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:32.791755 29965 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:32.791760 29965 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:32.791766 29965 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:32.791810 29965 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:32.791823 29965 net.cpp:131] Top shape: 100 (100)
I0428 20:02:32.791826 29965 net.cpp:131] Top shape: 100 (100)
I0428 20:02:32.791829 29965 net.cpp:139] Memory required for data: 314800
I0428 20:02:32.791832 29965 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:32.791841 29965 net.cpp:86] Creating Layer conv0
I0428 20:02:32.791844 29965 net.cpp:408] conv0 <- data
I0428 20:02:32.791849 29965 net.cpp:382] conv0 -> conv0
I0428 20:02:32.793467 29965 net.cpp:124] Setting up conv0
I0428 20:02:32.793495 29965 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:32.793499 29965 net.cpp:139] Memory required for data: 2618800
I0428 20:02:32.793509 29965 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:32.793514 29965 net.cpp:86] Creating Layer pool0
I0428 20:02:32.793517 29965 net.cpp:408] pool0 <- conv0
I0428 20:02:32.793521 29965 net.cpp:382] pool0 -> pool0
I0428 20:02:32.793567 29965 net.cpp:124] Setting up pool0
I0428 20:02:32.793575 29965 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:32.793578 29965 net.cpp:139] Memory required for data: 3194800
I0428 20:02:32.793583 29965 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:32.793594 29965 net.cpp:86] Creating Layer conv1
I0428 20:02:32.793597 29965 net.cpp:408] conv1 <- pool0
I0428 20:02:32.793602 29965 net.cpp:382] conv1 -> conv1
I0428 20:02:32.795140 29965 net.cpp:124] Setting up conv1
I0428 20:02:32.795156 29965 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:02:32.795178 29965 net.cpp:139] Memory required for data: 4474800
I0428 20:02:32.795187 29965 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:32.795199 29965 net.cpp:86] Creating Layer pool1
I0428 20:02:32.795202 29965 net.cpp:408] pool1 <- conv1
I0428 20:02:32.795207 29965 net.cpp:382] pool1 -> pool1
I0428 20:02:32.795243 29965 net.cpp:124] Setting up pool1
I0428 20:02:32.795248 29965 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:02:32.795250 29965 net.cpp:139] Memory required for data: 4794800
I0428 20:02:32.795254 29965 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:32.795260 29965 net.cpp:86] Creating Layer ip1
I0428 20:02:32.795264 29965 net.cpp:408] ip1 <- pool1
I0428 20:02:32.795269 29965 net.cpp:382] ip1 -> ip1
I0428 20:02:32.795604 29965 net.cpp:124] Setting up ip1
I0428 20:02:32.795613 29965 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:32.795642 29965 net.cpp:139] Memory required for data: 4814800
I0428 20:02:32.795650 29965 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:32.795656 29965 net.cpp:86] Creating Layer relu1
I0428 20:02:32.795660 29965 net.cpp:408] relu1 <- ip1
I0428 20:02:32.795663 29965 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:32.795838 29965 net.cpp:124] Setting up relu1
I0428 20:02:32.795848 29965 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:32.795851 29965 net.cpp:139] Memory required for data: 4834800
I0428 20:02:32.795855 29965 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:32.795861 29965 net.cpp:86] Creating Layer ip2
I0428 20:02:32.795866 29965 net.cpp:408] ip2 <- ip1
I0428 20:02:32.795869 29965 net.cpp:382] ip2 -> ip2
I0428 20:02:32.795991 29965 net.cpp:124] Setting up ip2
I0428 20:02:32.796000 29965 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:32.796002 29965 net.cpp:139] Memory required for data: 4844800
I0428 20:02:32.796007 29965 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:32.796011 29965 net.cpp:86] Creating Layer relu2
I0428 20:02:32.796015 29965 net.cpp:408] relu2 <- ip2
I0428 20:02:32.796018 29965 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:32.796245 29965 net.cpp:124] Setting up relu2
I0428 20:02:32.796254 29965 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:32.796257 29965 net.cpp:139] Memory required for data: 4854800
I0428 20:02:32.796260 29965 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:32.796265 29965 net.cpp:86] Creating Layer ip3
I0428 20:02:32.796268 29965 net.cpp:408] ip3 <- ip2
I0428 20:02:32.796273 29965 net.cpp:382] ip3 -> ip3
I0428 20:02:32.796370 29965 net.cpp:124] Setting up ip3
I0428 20:02:32.796376 29965 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:32.796380 29965 net.cpp:139] Memory required for data: 4858800
I0428 20:02:32.796387 29965 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:32.796392 29965 net.cpp:86] Creating Layer relu3
I0428 20:02:32.796394 29965 net.cpp:408] relu3 <- ip3
I0428 20:02:32.796398 29965 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:32.797205 29965 net.cpp:124] Setting up relu3
I0428 20:02:32.797232 29965 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:32.797236 29965 net.cpp:139] Memory required for data: 4862800
I0428 20:02:32.797240 29965 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:02:32.797245 29965 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:02:32.797247 29965 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:02:32.797253 29965 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:02:32.797260 29965 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:02:32.797338 29965 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:02:32.797344 29965 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:32.797348 29965 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:32.797350 29965 net.cpp:139] Memory required for data: 4870800
I0428 20:02:32.797353 29965 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:32.797358 29965 net.cpp:86] Creating Layer accuracy
I0428 20:02:32.797363 29965 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:02:32.797366 29965 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:32.797370 29965 net.cpp:382] accuracy -> accuracy
I0428 20:02:32.797377 29965 net.cpp:124] Setting up accuracy
I0428 20:02:32.797381 29965 net.cpp:131] Top shape: (1)
I0428 20:02:32.797384 29965 net.cpp:139] Memory required for data: 4870804
I0428 20:02:32.797386 29965 layer_factory.hpp:77] Creating layer loss
I0428 20:02:32.797391 29965 net.cpp:86] Creating Layer loss
I0428 20:02:32.797394 29965 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:02:32.797404 29965 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:32.797407 29965 net.cpp:382] loss -> loss
I0428 20:02:32.797413 29965 layer_factory.hpp:77] Creating layer loss
I0428 20:02:32.797636 29965 net.cpp:124] Setting up loss
I0428 20:02:32.797648 29965 net.cpp:131] Top shape: (1)
I0428 20:02:32.797652 29965 net.cpp:134]     with loss weight 1
I0428 20:02:32.797667 29965 net.cpp:139] Memory required for data: 4870808
I0428 20:02:32.797672 29965 net.cpp:200] loss needs backward computation.
I0428 20:02:32.797677 29965 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:32.797680 29965 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:02:32.797683 29965 net.cpp:200] relu3 needs backward computation.
I0428 20:02:32.797686 29965 net.cpp:200] ip3 needs backward computation.
I0428 20:02:32.797689 29965 net.cpp:200] relu2 needs backward computation.
I0428 20:02:32.797693 29965 net.cpp:200] ip2 needs backward computation.
I0428 20:02:32.797696 29965 net.cpp:200] relu1 needs backward computation.
I0428 20:02:32.797699 29965 net.cpp:200] ip1 needs backward computation.
I0428 20:02:32.797703 29965 net.cpp:200] pool1 needs backward computation.
I0428 20:02:32.797706 29965 net.cpp:200] conv1 needs backward computation.
I0428 20:02:32.797709 29965 net.cpp:200] pool0 needs backward computation.
I0428 20:02:32.797713 29965 net.cpp:200] conv0 needs backward computation.
I0428 20:02:32.797722 29965 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:32.797726 29965 net.cpp:202] mnist does not need backward computation.
I0428 20:02:32.797729 29965 net.cpp:244] This network produces output accuracy
I0428 20:02:32.797732 29965 net.cpp:244] This network produces output loss
I0428 20:02:32.797742 29965 net.cpp:257] Network initialization done.
I0428 20:02:32.797783 29965 solver.cpp:56] Solver scaffolding done.
I0428 20:02:32.798178 29965 caffe.cpp:248] Starting Optimization
I0428 20:02:32.798187 29965 solver.cpp:273] Solving LeNet
I0428 20:02:32.798189 29965 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:32.798477 29965 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:32.806917 29965 blocking_queue.cpp:49] Waiting for data
I0428 20:02:32.875844 29972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:32.876440 29965 solver.cpp:398]     Test net output #0: accuracy = 0.0811
I0428 20:02:32.876480 29965 solver.cpp:398]     Test net output #1: loss = 2.32433 (* 1 = 2.32433 loss)
I0428 20:02:32.880403 29965 solver.cpp:219] Iteration 0 (2.77064 iter/s, 0.0821647s/100 iters), loss = 2.3096
I0428 20:02:32.880448 29965 solver.cpp:238]     Train net output #0: loss = 2.3096 (* 1 = 2.3096 loss)
I0428 20:02:32.880463 29965 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:32.994726 29965 solver.cpp:219] Iteration 100 (875.127 iter/s, 0.114269s/100 iters), loss = 0.854793
I0428 20:02:32.994770 29965 solver.cpp:238]     Train net output #0: loss = 0.854793 (* 1 = 0.854793 loss)
I0428 20:02:32.994777 29965 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:33.108081 29965 solver.cpp:219] Iteration 200 (882.514 iter/s, 0.113313s/100 iters), loss = 0.929048
I0428 20:02:33.108126 29965 solver.cpp:238]     Train net output #0: loss = 0.929048 (* 1 = 0.929048 loss)
I0428 20:02:33.108134 29965 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:33.220759 29965 solver.cpp:219] Iteration 300 (887.905 iter/s, 0.112625s/100 iters), loss = 0.507341
I0428 20:02:33.220799 29965 solver.cpp:238]     Train net output #0: loss = 0.507341 (* 1 = 0.507341 loss)
I0428 20:02:33.220808 29965 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:33.332654 29965 solver.cpp:219] Iteration 400 (894.042 iter/s, 0.111852s/100 iters), loss = 0.707751
I0428 20:02:33.332686 29965 solver.cpp:238]     Train net output #0: loss = 0.707751 (* 1 = 0.707751 loss)
I0428 20:02:33.332695 29965 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:33.445574 29965 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:33.495026 29972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:33.496392 29965 solver.cpp:398]     Test net output #0: accuracy = 0.8497
I0428 20:02:33.496448 29965 solver.cpp:398]     Test net output #1: loss = 0.573825 (* 1 = 0.573825 loss)
I0428 20:02:33.497562 29965 solver.cpp:219] Iteration 500 (606.583 iter/s, 0.164858s/100 iters), loss = 0.690192
I0428 20:02:33.497620 29965 solver.cpp:238]     Train net output #0: loss = 0.690192 (* 1 = 0.690192 loss)
I0428 20:02:33.497629 29965 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:33.612459 29965 solver.cpp:219] Iteration 600 (870.772 iter/s, 0.114841s/100 iters), loss = 0.431419
I0428 20:02:33.612489 29965 solver.cpp:238]     Train net output #0: loss = 0.431419 (* 1 = 0.431419 loss)
I0428 20:02:33.612498 29965 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:33.722203 29965 solver.cpp:219] Iteration 700 (911.558 iter/s, 0.109702s/100 iters), loss = 0.837812
I0428 20:02:33.722234 29965 solver.cpp:238]     Train net output #0: loss = 0.837812 (* 1 = 0.837812 loss)
I0428 20:02:33.722242 29965 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:33.834254 29965 solver.cpp:219] Iteration 800 (892.808 iter/s, 0.112006s/100 iters), loss = 0.664015
I0428 20:02:33.834288 29965 solver.cpp:238]     Train net output #0: loss = 0.664015 (* 1 = 0.664015 loss)
I0428 20:02:33.834296 29965 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:33.947899 29965 solver.cpp:219] Iteration 900 (880.286 iter/s, 0.113599s/100 iters), loss = 0.282988
I0428 20:02:33.947929 29965 solver.cpp:238]     Train net output #0: loss = 0.282988 (* 1 = 0.282988 loss)
I0428 20:02:33.947937 29965 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:33.990514 29971 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:34.066355 29965 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:34.068028 29965 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:34.068985 29965 solver.cpp:311] Iteration 1000, loss = 0.46113
I0428 20:02:34.069005 29965 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:34.146684 29972 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:34.148756 29965 solver.cpp:398]     Test net output #0: accuracy = 0.8848
I0428 20:02:34.148797 29965 solver.cpp:398]     Test net output #1: loss = 0.313196 (* 1 = 0.313196 loss)
I0428 20:02:34.148820 29965 solver.cpp:316] Optimization Done.
I0428 20:02:34.148828 29965 caffe.cpp:259] Optimization Done.
