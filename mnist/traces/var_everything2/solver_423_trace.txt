I0428 19:43:29.687141 25359 caffe.cpp:218] Using GPUs 0
I0428 19:43:29.724839 25359 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:30.229427 25359 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test423.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:30.229573 25359 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test423.prototxt
I0428 19:43:30.229990 25359 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:30.230010 25359 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:30.230111 25359 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:30.230195 25359 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:30.230293 25359 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:30.230316 25359 net.cpp:86] Creating Layer mnist
I0428 19:43:30.230325 25359 net.cpp:382] mnist -> data
I0428 19:43:30.230347 25359 net.cpp:382] mnist -> label
I0428 19:43:30.231432 25359 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:30.233894 25359 net.cpp:124] Setting up mnist
I0428 19:43:30.233913 25359 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:30.233919 25359 net.cpp:131] Top shape: 64 (64)
I0428 19:43:30.233923 25359 net.cpp:139] Memory required for data: 200960
I0428 19:43:30.233929 25359 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:30.233947 25359 net.cpp:86] Creating Layer conv0
I0428 19:43:30.233968 25359 net.cpp:408] conv0 <- data
I0428 19:43:30.233981 25359 net.cpp:382] conv0 -> conv0
I0428 19:43:30.521294 25359 net.cpp:124] Setting up conv0
I0428 19:43:30.521324 25359 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:30.521328 25359 net.cpp:139] Memory required for data: 495872
I0428 19:43:30.521345 25359 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:30.521358 25359 net.cpp:86] Creating Layer pool0
I0428 19:43:30.521363 25359 net.cpp:408] pool0 <- conv0
I0428 19:43:30.521369 25359 net.cpp:382] pool0 -> pool0
I0428 19:43:30.521419 25359 net.cpp:124] Setting up pool0
I0428 19:43:30.521425 25359 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:30.521428 25359 net.cpp:139] Memory required for data: 569600
I0428 19:43:30.521431 25359 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:30.521443 25359 net.cpp:86] Creating Layer conv1
I0428 19:43:30.521447 25359 net.cpp:408] conv1 <- pool0
I0428 19:43:30.521452 25359 net.cpp:382] conv1 -> conv1
I0428 19:43:30.524296 25359 net.cpp:124] Setting up conv1
I0428 19:43:30.524312 25359 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:30.524317 25359 net.cpp:139] Memory required for data: 979200
I0428 19:43:30.524327 25359 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:30.524333 25359 net.cpp:86] Creating Layer pool1
I0428 19:43:30.524338 25359 net.cpp:408] pool1 <- conv1
I0428 19:43:30.524344 25359 net.cpp:382] pool1 -> pool1
I0428 19:43:30.524384 25359 net.cpp:124] Setting up pool1
I0428 19:43:30.524392 25359 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:30.524395 25359 net.cpp:139] Memory required for data: 1081600
I0428 19:43:30.524399 25359 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:30.524406 25359 net.cpp:86] Creating Layer ip1
I0428 19:43:30.524410 25359 net.cpp:408] ip1 <- pool1
I0428 19:43:30.524415 25359 net.cpp:382] ip1 -> ip1
I0428 19:43:30.524641 25359 net.cpp:124] Setting up ip1
I0428 19:43:30.524648 25359 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:30.524652 25359 net.cpp:139] Memory required for data: 1094400
I0428 19:43:30.524659 25359 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:30.524665 25359 net.cpp:86] Creating Layer relu1
I0428 19:43:30.524669 25359 net.cpp:408] relu1 <- ip1
I0428 19:43:30.524674 25359 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:30.524870 25359 net.cpp:124] Setting up relu1
I0428 19:43:30.524880 25359 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:30.524883 25359 net.cpp:139] Memory required for data: 1107200
I0428 19:43:30.524888 25359 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:30.524893 25359 net.cpp:86] Creating Layer ip2
I0428 19:43:30.524897 25359 net.cpp:408] ip2 <- ip1
I0428 19:43:30.524902 25359 net.cpp:382] ip2 -> ip2
I0428 19:43:30.525012 25359 net.cpp:124] Setting up ip2
I0428 19:43:30.525018 25359 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:30.525022 25359 net.cpp:139] Memory required for data: 1113600
I0428 19:43:30.525027 25359 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:30.525033 25359 net.cpp:86] Creating Layer relu2
I0428 19:43:30.525037 25359 net.cpp:408] relu2 <- ip2
I0428 19:43:30.525041 25359 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:30.525806 25359 net.cpp:124] Setting up relu2
I0428 19:43:30.525820 25359 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:30.525823 25359 net.cpp:139] Memory required for data: 1120000
I0428 19:43:30.525826 25359 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:30.525835 25359 net.cpp:86] Creating Layer ip3
I0428 19:43:30.525837 25359 net.cpp:408] ip3 <- ip2
I0428 19:43:30.525843 25359 net.cpp:382] ip3 -> ip3
I0428 19:43:30.525945 25359 net.cpp:124] Setting up ip3
I0428 19:43:30.525954 25359 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:30.525957 25359 net.cpp:139] Memory required for data: 1122560
I0428 19:43:30.525965 25359 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:30.525971 25359 net.cpp:86] Creating Layer relu3
I0428 19:43:30.525974 25359 net.cpp:408] relu3 <- ip3
I0428 19:43:30.525979 25359 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:30.526154 25359 net.cpp:124] Setting up relu3
I0428 19:43:30.526165 25359 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:30.526167 25359 net.cpp:139] Memory required for data: 1125120
I0428 19:43:30.526170 25359 layer_factory.hpp:77] Creating layer loss
I0428 19:43:30.526176 25359 net.cpp:86] Creating Layer loss
I0428 19:43:30.526180 25359 net.cpp:408] loss <- ip3
I0428 19:43:30.526185 25359 net.cpp:408] loss <- label
I0428 19:43:30.526190 25359 net.cpp:382] loss -> loss
I0428 19:43:30.526204 25359 layer_factory.hpp:77] Creating layer loss
I0428 19:43:30.526438 25359 net.cpp:124] Setting up loss
I0428 19:43:30.526448 25359 net.cpp:131] Top shape: (1)
I0428 19:43:30.526453 25359 net.cpp:134]     with loss weight 1
I0428 19:43:30.526466 25359 net.cpp:139] Memory required for data: 1125124
I0428 19:43:30.526470 25359 net.cpp:200] loss needs backward computation.
I0428 19:43:30.526473 25359 net.cpp:200] relu3 needs backward computation.
I0428 19:43:30.526476 25359 net.cpp:200] ip3 needs backward computation.
I0428 19:43:30.526480 25359 net.cpp:200] relu2 needs backward computation.
I0428 19:43:30.526484 25359 net.cpp:200] ip2 needs backward computation.
I0428 19:43:30.526486 25359 net.cpp:200] relu1 needs backward computation.
I0428 19:43:30.526489 25359 net.cpp:200] ip1 needs backward computation.
I0428 19:43:30.526492 25359 net.cpp:200] pool1 needs backward computation.
I0428 19:43:30.526495 25359 net.cpp:200] conv1 needs backward computation.
I0428 19:43:30.526499 25359 net.cpp:200] pool0 needs backward computation.
I0428 19:43:30.526502 25359 net.cpp:200] conv0 needs backward computation.
I0428 19:43:30.526506 25359 net.cpp:202] mnist does not need backward computation.
I0428 19:43:30.526509 25359 net.cpp:244] This network produces output loss
I0428 19:43:30.526518 25359 net.cpp:257] Network initialization done.
I0428 19:43:30.526852 25359 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test423.prototxt
I0428 19:43:30.526880 25359 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:30.526974 25359 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:30.527057 25359 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:30.527102 25359 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:30.527117 25359 net.cpp:86] Creating Layer mnist
I0428 19:43:30.527122 25359 net.cpp:382] mnist -> data
I0428 19:43:30.527129 25359 net.cpp:382] mnist -> label
I0428 19:43:30.527217 25359 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:30.529172 25359 net.cpp:124] Setting up mnist
I0428 19:43:30.529187 25359 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:30.529192 25359 net.cpp:131] Top shape: 100 (100)
I0428 19:43:30.529196 25359 net.cpp:139] Memory required for data: 314000
I0428 19:43:30.529199 25359 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:30.529207 25359 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:30.529211 25359 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:30.529216 25359 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:30.529222 25359 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:30.529261 25359 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:30.529266 25359 net.cpp:131] Top shape: 100 (100)
I0428 19:43:30.529270 25359 net.cpp:131] Top shape: 100 (100)
I0428 19:43:30.529273 25359 net.cpp:139] Memory required for data: 314800
I0428 19:43:30.529276 25359 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:30.529285 25359 net.cpp:86] Creating Layer conv0
I0428 19:43:30.529289 25359 net.cpp:408] conv0 <- data
I0428 19:43:30.529294 25359 net.cpp:382] conv0 -> conv0
I0428 19:43:30.530840 25359 net.cpp:124] Setting up conv0
I0428 19:43:30.530854 25359 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:30.530858 25359 net.cpp:139] Memory required for data: 775600
I0428 19:43:30.530869 25359 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:30.530874 25359 net.cpp:86] Creating Layer pool0
I0428 19:43:30.530879 25359 net.cpp:408] pool0 <- conv0
I0428 19:43:30.530884 25359 net.cpp:382] pool0 -> pool0
I0428 19:43:30.530920 25359 net.cpp:124] Setting up pool0
I0428 19:43:30.530925 25359 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:30.530930 25359 net.cpp:139] Memory required for data: 890800
I0428 19:43:30.530932 25359 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:30.530941 25359 net.cpp:86] Creating Layer conv1
I0428 19:43:30.530943 25359 net.cpp:408] conv1 <- pool0
I0428 19:43:30.530949 25359 net.cpp:382] conv1 -> conv1
I0428 19:43:30.532451 25359 net.cpp:124] Setting up conv1
I0428 19:43:30.532466 25359 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:30.532469 25359 net.cpp:139] Memory required for data: 1530800
I0428 19:43:30.532480 25359 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:30.532486 25359 net.cpp:86] Creating Layer pool1
I0428 19:43:30.532490 25359 net.cpp:408] pool1 <- conv1
I0428 19:43:30.532495 25359 net.cpp:382] pool1 -> pool1
I0428 19:43:30.532533 25359 net.cpp:124] Setting up pool1
I0428 19:43:30.532539 25359 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:30.532542 25359 net.cpp:139] Memory required for data: 1690800
I0428 19:43:30.532553 25359 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:30.532559 25359 net.cpp:86] Creating Layer ip1
I0428 19:43:30.532562 25359 net.cpp:408] ip1 <- pool1
I0428 19:43:30.532568 25359 net.cpp:382] ip1 -> ip1
I0428 19:43:30.532793 25359 net.cpp:124] Setting up ip1
I0428 19:43:30.532824 25359 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:30.532846 25359 net.cpp:139] Memory required for data: 1710800
I0428 19:43:30.532860 25359 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:30.532866 25359 net.cpp:86] Creating Layer relu1
I0428 19:43:30.532871 25359 net.cpp:408] relu1 <- ip1
I0428 19:43:30.532874 25359 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:30.533047 25359 net.cpp:124] Setting up relu1
I0428 19:43:30.533057 25359 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:30.533061 25359 net.cpp:139] Memory required for data: 1730800
I0428 19:43:30.533063 25359 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:30.533071 25359 net.cpp:86] Creating Layer ip2
I0428 19:43:30.533076 25359 net.cpp:408] ip2 <- ip1
I0428 19:43:30.533080 25359 net.cpp:382] ip2 -> ip2
I0428 19:43:30.533216 25359 net.cpp:124] Setting up ip2
I0428 19:43:30.533223 25359 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:30.533226 25359 net.cpp:139] Memory required for data: 1740800
I0428 19:43:30.533232 25359 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:30.533236 25359 net.cpp:86] Creating Layer relu2
I0428 19:43:30.533241 25359 net.cpp:408] relu2 <- ip2
I0428 19:43:30.533244 25359 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:30.533481 25359 net.cpp:124] Setting up relu2
I0428 19:43:30.533490 25359 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:30.533494 25359 net.cpp:139] Memory required for data: 1750800
I0428 19:43:30.533499 25359 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:30.533504 25359 net.cpp:86] Creating Layer ip3
I0428 19:43:30.533507 25359 net.cpp:408] ip3 <- ip2
I0428 19:43:30.533512 25359 net.cpp:382] ip3 -> ip3
I0428 19:43:30.533614 25359 net.cpp:124] Setting up ip3
I0428 19:43:30.533622 25359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:30.533625 25359 net.cpp:139] Memory required for data: 1754800
I0428 19:43:30.533633 25359 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:30.533638 25359 net.cpp:86] Creating Layer relu3
I0428 19:43:30.533641 25359 net.cpp:408] relu3 <- ip3
I0428 19:43:30.533645 25359 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:30.534498 25359 net.cpp:124] Setting up relu3
I0428 19:43:30.534510 25359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:30.534513 25359 net.cpp:139] Memory required for data: 1758800
I0428 19:43:30.534518 25359 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:30.534523 25359 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:30.534526 25359 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:30.534531 25359 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:30.534538 25359 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:30.534580 25359 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:30.534585 25359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:30.534590 25359 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:30.534592 25359 net.cpp:139] Memory required for data: 1766800
I0428 19:43:30.534600 25359 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:30.534606 25359 net.cpp:86] Creating Layer accuracy
I0428 19:43:30.534610 25359 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:30.534615 25359 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:30.534621 25359 net.cpp:382] accuracy -> accuracy
I0428 19:43:30.534627 25359 net.cpp:124] Setting up accuracy
I0428 19:43:30.534631 25359 net.cpp:131] Top shape: (1)
I0428 19:43:30.534636 25359 net.cpp:139] Memory required for data: 1766804
I0428 19:43:30.534638 25359 layer_factory.hpp:77] Creating layer loss
I0428 19:43:30.534642 25359 net.cpp:86] Creating Layer loss
I0428 19:43:30.534646 25359 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:30.534651 25359 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:30.534654 25359 net.cpp:382] loss -> loss
I0428 19:43:30.534665 25359 layer_factory.hpp:77] Creating layer loss
I0428 19:43:30.534906 25359 net.cpp:124] Setting up loss
I0428 19:43:30.534916 25359 net.cpp:131] Top shape: (1)
I0428 19:43:30.534921 25359 net.cpp:134]     with loss weight 1
I0428 19:43:30.534927 25359 net.cpp:139] Memory required for data: 1766808
I0428 19:43:30.534941 25359 net.cpp:200] loss needs backward computation.
I0428 19:43:30.534945 25359 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:30.534950 25359 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:30.534953 25359 net.cpp:200] relu3 needs backward computation.
I0428 19:43:30.534956 25359 net.cpp:200] ip3 needs backward computation.
I0428 19:43:30.534960 25359 net.cpp:200] relu2 needs backward computation.
I0428 19:43:30.534962 25359 net.cpp:200] ip2 needs backward computation.
I0428 19:43:30.534965 25359 net.cpp:200] relu1 needs backward computation.
I0428 19:43:30.534968 25359 net.cpp:200] ip1 needs backward computation.
I0428 19:43:30.534971 25359 net.cpp:200] pool1 needs backward computation.
I0428 19:43:30.534976 25359 net.cpp:200] conv1 needs backward computation.
I0428 19:43:30.534978 25359 net.cpp:200] pool0 needs backward computation.
I0428 19:43:30.534982 25359 net.cpp:200] conv0 needs backward computation.
I0428 19:43:30.534986 25359 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:30.534991 25359 net.cpp:202] mnist does not need backward computation.
I0428 19:43:30.534993 25359 net.cpp:244] This network produces output accuracy
I0428 19:43:30.534997 25359 net.cpp:244] This network produces output loss
I0428 19:43:30.535008 25359 net.cpp:257] Network initialization done.
I0428 19:43:30.535053 25359 solver.cpp:56] Solver scaffolding done.
I0428 19:43:30.535401 25359 caffe.cpp:248] Starting Optimization
I0428 19:43:30.535408 25359 solver.cpp:273] Solving LeNet
I0428 19:43:30.535410 25359 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:30.535677 25359 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:30.539582 25359 blocking_queue.cpp:49] Waiting for data
I0428 19:43:30.610812 25366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:30.611270 25359 solver.cpp:398]     Test net output #0: accuracy = 0.0957
I0428 19:43:30.611306 25359 solver.cpp:398]     Test net output #1: loss = 2.31452 (* 1 = 2.31452 loss)
I0428 19:43:30.612504 25359 solver.cpp:219] Iteration 0 (0 iter/s, 0.077056s/100 iters), loss = 2.30496
I0428 19:43:30.612550 25359 solver.cpp:238]     Train net output #0: loss = 2.30496 (* 1 = 2.30496 loss)
I0428 19:43:30.612561 25359 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:30.706784 25359 solver.cpp:219] Iteration 100 (1061.3 iter/s, 0.0942244s/100 iters), loss = 0.481513
I0428 19:43:30.706815 25359 solver.cpp:238]     Train net output #0: loss = 0.481513 (* 1 = 0.481513 loss)
I0428 19:43:30.706821 25359 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:30.789904 25359 solver.cpp:219] Iteration 200 (1203.63 iter/s, 0.0830822s/100 iters), loss = 0.274099
I0428 19:43:30.789928 25359 solver.cpp:238]     Train net output #0: loss = 0.274099 (* 1 = 0.274099 loss)
I0428 19:43:30.789935 25359 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:30.873314 25359 solver.cpp:219] Iteration 300 (1199.37 iter/s, 0.0833772s/100 iters), loss = 0.176467
I0428 19:43:30.873353 25359 solver.cpp:238]     Train net output #0: loss = 0.176467 (* 1 = 0.176467 loss)
I0428 19:43:30.873358 25359 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:30.957491 25359 solver.cpp:219] Iteration 400 (1188.44 iter/s, 0.0841442s/100 iters), loss = 0.162511
I0428 19:43:30.957515 25359 solver.cpp:238]     Train net output #0: loss = 0.162511 (* 1 = 0.162511 loss)
I0428 19:43:30.957520 25359 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:31.041239 25359 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:31.094189 25366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:31.094666 25359 solver.cpp:398]     Test net output #0: accuracy = 0.9575
I0428 19:43:31.094684 25359 solver.cpp:398]     Test net output #1: loss = 0.135063 (* 1 = 0.135063 loss)
I0428 19:43:31.095571 25359 solver.cpp:219] Iteration 500 (724.405 iter/s, 0.138044s/100 iters), loss = 0.124239
I0428 19:43:31.095612 25359 solver.cpp:238]     Train net output #0: loss = 0.124239 (* 1 = 0.124239 loss)
I0428 19:43:31.095636 25359 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:31.190423 25359 solver.cpp:219] Iteration 600 (1054.84 iter/s, 0.0948009s/100 iters), loss = 0.14644
I0428 19:43:31.190464 25359 solver.cpp:238]     Train net output #0: loss = 0.14644 (* 1 = 0.14644 loss)
I0428 19:43:31.190471 25359 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:31.279837 25359 solver.cpp:219] Iteration 700 (1118.82 iter/s, 0.0893798s/100 iters), loss = 0.229204
I0428 19:43:31.279861 25359 solver.cpp:238]     Train net output #0: loss = 0.229204 (* 1 = 0.229204 loss)
I0428 19:43:31.279867 25359 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:31.373277 25359 solver.cpp:219] Iteration 800 (1070.59 iter/s, 0.0934062s/100 iters), loss = 0.374912
I0428 19:43:31.373316 25359 solver.cpp:238]     Train net output #0: loss = 0.374912 (* 1 = 0.374912 loss)
I0428 19:43:31.373322 25359 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:31.460129 25359 solver.cpp:219] Iteration 900 (1151.82 iter/s, 0.0868188s/100 iters), loss = 0.293969
I0428 19:43:31.460152 25359 solver.cpp:238]     Train net output #0: loss = 0.293969 (* 1 = 0.293969 loss)
I0428 19:43:31.460158 25359 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:31.487794 25365 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:31.541867 25359 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:31.542868 25359 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:31.543500 25359 solver.cpp:311] Iteration 1000, loss = 0.15013
I0428 19:43:31.543514 25359 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:31.618896 25366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:31.619468 25359 solver.cpp:398]     Test net output #0: accuracy = 0.9694
I0428 19:43:31.619501 25359 solver.cpp:398]     Test net output #1: loss = 0.0898639 (* 1 = 0.0898639 loss)
I0428 19:43:31.619509 25359 solver.cpp:316] Optimization Done.
I0428 19:43:31.619515 25359 caffe.cpp:259] Optimization Done.
