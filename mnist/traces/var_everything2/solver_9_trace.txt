I0428 19:27:57.182226 21494 caffe.cpp:218] Using GPUs 0
I0428 19:27:57.227850 21494 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:27:57.747426 21494 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test9.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:27:57.747566 21494 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test9.prototxt
I0428 19:27:57.747841 21494 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:27:57.747856 21494 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:27:57.747921 21494 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:27:57.747980 21494 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:57.748080 21494 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:27:57.748107 21494 net.cpp:86] Creating Layer mnist
I0428 19:27:57.748116 21494 net.cpp:382] mnist -> data
I0428 19:27:57.748138 21494 net.cpp:382] mnist -> label
I0428 19:27:57.749254 21494 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:27:57.751720 21494 net.cpp:124] Setting up mnist
I0428 19:27:57.751737 21494 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:27:57.751744 21494 net.cpp:131] Top shape: 64 (64)
I0428 19:27:57.751747 21494 net.cpp:139] Memory required for data: 200960
I0428 19:27:57.751755 21494 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:57.751793 21494 net.cpp:86] Creating Layer ip1
I0428 19:27:57.751802 21494 net.cpp:408] ip1 <- data
I0428 19:27:57.751816 21494 net.cpp:382] ip1 -> ip1
I0428 19:27:57.752257 21494 net.cpp:124] Setting up ip1
I0428 19:27:57.752269 21494 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:27:57.752271 21494 net.cpp:139] Memory required for data: 213760
I0428 19:27:57.752285 21494 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:57.752295 21494 net.cpp:86] Creating Layer relu1
I0428 19:27:57.752298 21494 net.cpp:408] relu1 <- ip1
I0428 19:27:57.752303 21494 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:58.040442 21494 net.cpp:124] Setting up relu1
I0428 19:27:58.040473 21494 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:27:58.040478 21494 net.cpp:139] Memory required for data: 226560
I0428 19:27:58.040484 21494 layer_factory.hpp:77] Creating layer ip2
I0428 19:27:58.040498 21494 net.cpp:86] Creating Layer ip2
I0428 19:27:58.040503 21494 net.cpp:408] ip2 <- ip1
I0428 19:27:58.040511 21494 net.cpp:382] ip2 -> ip2
I0428 19:27:58.041666 21494 net.cpp:124] Setting up ip2
I0428 19:27:58.041684 21494 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:58.041689 21494 net.cpp:139] Memory required for data: 229120
I0428 19:27:58.041702 21494 layer_factory.hpp:77] Creating layer relu2
I0428 19:27:58.041728 21494 net.cpp:86] Creating Layer relu2
I0428 19:27:58.041731 21494 net.cpp:408] relu2 <- ip2
I0428 19:27:58.041738 21494 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:27:58.042578 21494 net.cpp:124] Setting up relu2
I0428 19:27:58.042594 21494 net.cpp:131] Top shape: 64 10 (640)
I0428 19:27:58.042598 21494 net.cpp:139] Memory required for data: 231680
I0428 19:27:58.042603 21494 layer_factory.hpp:77] Creating layer loss
I0428 19:27:58.042609 21494 net.cpp:86] Creating Layer loss
I0428 19:27:58.042613 21494 net.cpp:408] loss <- ip2
I0428 19:27:58.042618 21494 net.cpp:408] loss <- label
I0428 19:27:58.042625 21494 net.cpp:382] loss -> loss
I0428 19:27:58.042649 21494 layer_factory.hpp:77] Creating layer loss
I0428 19:27:58.042918 21494 net.cpp:124] Setting up loss
I0428 19:27:58.042930 21494 net.cpp:131] Top shape: (1)
I0428 19:27:58.042934 21494 net.cpp:134]     with loss weight 1
I0428 19:27:58.042950 21494 net.cpp:139] Memory required for data: 231684
I0428 19:27:58.042954 21494 net.cpp:200] loss needs backward computation.
I0428 19:27:58.042958 21494 net.cpp:200] relu2 needs backward computation.
I0428 19:27:58.042961 21494 net.cpp:200] ip2 needs backward computation.
I0428 19:27:58.042965 21494 net.cpp:200] relu1 needs backward computation.
I0428 19:27:58.042968 21494 net.cpp:200] ip1 needs backward computation.
I0428 19:27:58.042973 21494 net.cpp:202] mnist does not need backward computation.
I0428 19:27:58.042976 21494 net.cpp:244] This network produces output loss
I0428 19:27:58.042984 21494 net.cpp:257] Network initialization done.
I0428 19:27:58.043210 21494 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test9.prototxt
I0428 19:27:58.043233 21494 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:27:58.043301 21494 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:27:58.043359 21494 layer_factory.hpp:77] Creating layer mnist
I0428 19:27:58.043407 21494 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:27:58.043426 21494 net.cpp:86] Creating Layer mnist
I0428 19:27:58.043431 21494 net.cpp:382] mnist -> data
I0428 19:27:58.043439 21494 net.cpp:382] mnist -> label
I0428 19:27:58.043535 21494 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:27:58.045650 21494 net.cpp:124] Setting up mnist
I0428 19:27:58.045665 21494 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:27:58.045671 21494 net.cpp:131] Top shape: 100 (100)
I0428 19:27:58.045675 21494 net.cpp:139] Memory required for data: 314000
I0428 19:27:58.045680 21494 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:27:58.045691 21494 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:27:58.045696 21494 net.cpp:408] label_mnist_1_split <- label
I0428 19:27:58.045701 21494 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:27:58.045720 21494 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:27:58.045817 21494 net.cpp:124] Setting up label_mnist_1_split
I0428 19:27:58.045827 21494 net.cpp:131] Top shape: 100 (100)
I0428 19:27:58.045831 21494 net.cpp:131] Top shape: 100 (100)
I0428 19:27:58.045835 21494 net.cpp:139] Memory required for data: 314800
I0428 19:27:58.045838 21494 layer_factory.hpp:77] Creating layer ip1
I0428 19:27:58.045846 21494 net.cpp:86] Creating Layer ip1
I0428 19:27:58.045850 21494 net.cpp:408] ip1 <- data
I0428 19:27:58.045855 21494 net.cpp:382] ip1 -> ip1
I0428 19:27:58.046262 21494 net.cpp:124] Setting up ip1
I0428 19:27:58.046272 21494 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:27:58.046274 21494 net.cpp:139] Memory required for data: 334800
I0428 19:27:58.046284 21494 layer_factory.hpp:77] Creating layer relu1
I0428 19:27:58.046290 21494 net.cpp:86] Creating Layer relu1
I0428 19:27:58.046294 21494 net.cpp:408] relu1 <- ip1
I0428 19:27:58.046299 21494 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:27:58.046491 21494 net.cpp:124] Setting up relu1
I0428 19:27:58.046502 21494 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:27:58.046505 21494 net.cpp:139] Memory required for data: 354800
I0428 19:27:58.046509 21494 layer_factory.hpp:77] Creating layer ip2
I0428 19:27:58.046517 21494 net.cpp:86] Creating Layer ip2
I0428 19:27:58.046520 21494 net.cpp:408] ip2 <- ip1
I0428 19:27:58.046526 21494 net.cpp:382] ip2 -> ip2
I0428 19:27:58.046629 21494 net.cpp:124] Setting up ip2
I0428 19:27:58.046638 21494 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:58.046641 21494 net.cpp:139] Memory required for data: 358800
I0428 19:27:58.046649 21494 layer_factory.hpp:77] Creating layer relu2
I0428 19:27:58.046654 21494 net.cpp:86] Creating Layer relu2
I0428 19:27:58.046658 21494 net.cpp:408] relu2 <- ip2
I0428 19:27:58.046663 21494 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:27:58.047572 21494 net.cpp:124] Setting up relu2
I0428 19:27:58.047586 21494 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:58.047590 21494 net.cpp:139] Memory required for data: 362800
I0428 19:27:58.047595 21494 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:27:58.047601 21494 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:27:58.047605 21494 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:27:58.047610 21494 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:27:58.047617 21494 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:27:58.047663 21494 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:27:58.047670 21494 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:58.047675 21494 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:27:58.047678 21494 net.cpp:139] Memory required for data: 370800
I0428 19:27:58.047683 21494 layer_factory.hpp:77] Creating layer accuracy
I0428 19:27:58.047693 21494 net.cpp:86] Creating Layer accuracy
I0428 19:27:58.047698 21494 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:27:58.047701 21494 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:27:58.047713 21494 net.cpp:382] accuracy -> accuracy
I0428 19:27:58.047722 21494 net.cpp:124] Setting up accuracy
I0428 19:27:58.047729 21494 net.cpp:131] Top shape: (1)
I0428 19:27:58.047731 21494 net.cpp:139] Memory required for data: 370804
I0428 19:27:58.047735 21494 layer_factory.hpp:77] Creating layer loss
I0428 19:27:58.047741 21494 net.cpp:86] Creating Layer loss
I0428 19:27:58.047744 21494 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:27:58.047749 21494 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:27:58.047755 21494 net.cpp:382] loss -> loss
I0428 19:27:58.047761 21494 layer_factory.hpp:77] Creating layer loss
I0428 19:27:58.048022 21494 net.cpp:124] Setting up loss
I0428 19:27:58.048033 21494 net.cpp:131] Top shape: (1)
I0428 19:27:58.048038 21494 net.cpp:134]     with loss weight 1
I0428 19:27:58.048045 21494 net.cpp:139] Memory required for data: 370808
I0428 19:27:58.048049 21494 net.cpp:200] loss needs backward computation.
I0428 19:27:58.048064 21494 net.cpp:202] accuracy does not need backward computation.
I0428 19:27:58.048069 21494 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:27:58.048074 21494 net.cpp:200] relu2 needs backward computation.
I0428 19:27:58.048076 21494 net.cpp:200] ip2 needs backward computation.
I0428 19:27:58.048080 21494 net.cpp:200] relu1 needs backward computation.
I0428 19:27:58.048084 21494 net.cpp:200] ip1 needs backward computation.
I0428 19:27:58.048087 21494 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:27:58.048092 21494 net.cpp:202] mnist does not need backward computation.
I0428 19:27:58.048095 21494 net.cpp:244] This network produces output accuracy
I0428 19:27:58.048099 21494 net.cpp:244] This network produces output loss
I0428 19:27:58.048108 21494 net.cpp:257] Network initialization done.
I0428 19:27:58.048140 21494 solver.cpp:56] Solver scaffolding done.
I0428 19:27:58.048296 21494 caffe.cpp:248] Starting Optimization
I0428 19:27:58.048305 21494 solver.cpp:273] Solving LeNet
I0428 19:27:58.048308 21494 solver.cpp:274] Learning Rate Policy: inv
I0428 19:27:58.049093 21494 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:27:58.049897 21494 blocking_queue.cpp:49] Waiting for data
I0428 19:27:58.124861 21501 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:58.125277 21494 solver.cpp:398]     Test net output #0: accuracy = 0.036
I0428 19:27:58.125306 21494 solver.cpp:398]     Test net output #1: loss = 2.32829 (* 1 = 2.32829 loss)
I0428 19:27:58.126667 21494 solver.cpp:219] Iteration 0 (0 iter/s, 0.0783309s/100 iters), loss = 2.29991
I0428 19:27:58.126698 21494 solver.cpp:238]     Train net output #0: loss = 2.29991 (* 1 = 2.29991 loss)
I0428 19:27:58.126711 21494 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:27:58.186136 21494 solver.cpp:219] Iteration 100 (1682.8 iter/s, 0.0594249s/100 iters), loss = 1.28639
I0428 19:27:58.186183 21494 solver.cpp:238]     Train net output #0: loss = 1.28639 (* 1 = 1.28639 loss)
I0428 19:27:58.186197 21494 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:27:58.236047 21494 solver.cpp:219] Iteration 200 (2005.71 iter/s, 0.0498575s/100 iters), loss = 0.81416
I0428 19:27:58.236083 21494 solver.cpp:238]     Train net output #0: loss = 0.81416 (* 1 = 0.81416 loss)
I0428 19:27:58.236094 21494 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:27:58.279286 21494 solver.cpp:219] Iteration 300 (2315.01 iter/s, 0.0431964s/100 iters), loss = 0.431125
I0428 19:27:58.279314 21494 solver.cpp:238]     Train net output #0: loss = 0.431125 (* 1 = 0.431125 loss)
I0428 19:27:58.279326 21494 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:27:58.319033 21494 solver.cpp:219] Iteration 400 (2518.15 iter/s, 0.0397117s/100 iters), loss = 0.289375
I0428 19:27:58.319061 21494 solver.cpp:238]     Train net output #0: loss = 0.289375 (* 1 = 0.289375 loss)
I0428 19:27:58.319067 21494 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:27:58.358763 21494 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:27:58.417335 21501 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:58.417680 21494 solver.cpp:398]     Test net output #0: accuracy = 0.9077
I0428 19:27:58.417699 21494 solver.cpp:398]     Test net output #1: loss = 0.329336 (* 1 = 0.329336 loss)
I0428 19:27:58.418138 21494 solver.cpp:219] Iteration 500 (1009.4 iter/s, 0.0990689s/100 iters), loss = 0.353464
I0428 19:27:58.418159 21494 solver.cpp:238]     Train net output #0: loss = 0.353464 (* 1 = 0.353464 loss)
I0428 19:27:58.418171 21494 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:27:58.477110 21494 solver.cpp:219] Iteration 600 (1696.51 iter/s, 0.0589445s/100 iters), loss = 0.203015
I0428 19:27:58.477147 21494 solver.cpp:238]     Train net output #0: loss = 0.203015 (* 1 = 0.203015 loss)
I0428 19:27:58.477154 21494 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:27:58.525241 21494 solver.cpp:219] Iteration 700 (2078.9 iter/s, 0.0481024s/100 iters), loss = 0.46151
I0428 19:27:58.525295 21494 solver.cpp:238]     Train net output #0: loss = 0.46151 (* 1 = 0.46151 loss)
I0428 19:27:58.525301 21494 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:27:58.567384 21494 solver.cpp:219] Iteration 800 (2375.43 iter/s, 0.0420977s/100 iters), loss = 0.374085
I0428 19:27:58.567420 21494 solver.cpp:238]     Train net output #0: loss = 0.374085 (* 1 = 0.374085 loss)
I0428 19:27:58.567425 21494 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:27:58.608430 21494 solver.cpp:219] Iteration 900 (2437.87 iter/s, 0.0410194s/100 iters), loss = 0.400532
I0428 19:27:58.608467 21494 solver.cpp:238]     Train net output #0: loss = 0.400532 (* 1 = 0.400532 loss)
I0428 19:27:58.608476 21494 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:27:58.623232 21500 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:58.648972 21494 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:27:58.649865 21494 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:27:58.650470 21494 solver.cpp:311] Iteration 1000, loss = 0.276723
I0428 19:27:58.650485 21494 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:27:58.701186 21494 blocking_queue.cpp:49] Waiting for data
I0428 19:27:58.709632 21501 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:27:58.709990 21494 solver.cpp:398]     Test net output #0: accuracy = 0.9226
I0428 19:27:58.710006 21494 solver.cpp:398]     Test net output #1: loss = 0.265956 (* 1 = 0.265956 loss)
I0428 19:27:58.710011 21494 solver.cpp:316] Optimization Done.
I0428 19:27:58.710014 21494 caffe.cpp:259] Optimization Done.
