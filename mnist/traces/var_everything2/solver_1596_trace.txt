I0428 20:33:53.970536  4387 caffe.cpp:218] Using GPUs 0
I0428 20:33:54.012440  4387 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:33:54.613431  4387 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1596.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:33:54.613605  4387 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1596.prototxt
I0428 20:33:54.614199  4387 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:33:54.614226  4387 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:33:54.614372  4387 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:54.614478  4387 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:54.614601  4387 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:33:54.614632  4387 net.cpp:86] Creating Layer mnist
I0428 20:33:54.614645  4387 net.cpp:382] mnist -> data
I0428 20:33:54.614673  4387 net.cpp:382] mnist -> label
I0428 20:33:54.616076  4387 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:33:54.619283  4387 net.cpp:124] Setting up mnist
I0428 20:33:54.619307  4387 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:33:54.619318  4387 net.cpp:131] Top shape: 64 (64)
I0428 20:33:54.619323  4387 net.cpp:139] Memory required for data: 200960
I0428 20:33:54.619333  4387 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:54.619352  4387 net.cpp:86] Creating Layer conv0
I0428 20:33:54.619379  4387 net.cpp:408] conv0 <- data
I0428 20:33:54.619402  4387 net.cpp:382] conv0 -> conv0
I0428 20:33:54.943286  4387 net.cpp:124] Setting up conv0
I0428 20:33:54.943334  4387 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:33:54.943339  4387 net.cpp:139] Memory required for data: 14946560
I0428 20:33:54.943361  4387 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:54.943392  4387 net.cpp:86] Creating Layer pool0
I0428 20:33:54.943397  4387 net.cpp:408] pool0 <- conv0
I0428 20:33:54.943404  4387 net.cpp:382] pool0 -> pool0
I0428 20:33:54.943459  4387 net.cpp:124] Setting up pool0
I0428 20:33:54.943469  4387 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:33:54.943472  4387 net.cpp:139] Memory required for data: 18632960
I0428 20:33:54.943477  4387 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:54.943490  4387 net.cpp:86] Creating Layer conv1
I0428 20:33:54.943495  4387 net.cpp:408] conv1 <- pool0
I0428 20:33:54.943501  4387 net.cpp:382] conv1 -> conv1
I0428 20:33:54.946638  4387 net.cpp:124] Setting up conv1
I0428 20:33:54.946671  4387 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:33:54.946676  4387 net.cpp:139] Memory required for data: 19042560
I0428 20:33:54.946687  4387 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:54.946697  4387 net.cpp:86] Creating Layer pool1
I0428 20:33:54.946702  4387 net.cpp:408] pool1 <- conv1
I0428 20:33:54.946724  4387 net.cpp:382] pool1 -> pool1
I0428 20:33:54.946771  4387 net.cpp:124] Setting up pool1
I0428 20:33:54.946781  4387 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:33:54.946785  4387 net.cpp:139] Memory required for data: 19144960
I0428 20:33:54.946789  4387 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:54.946799  4387 net.cpp:86] Creating Layer ip1
I0428 20:33:54.946804  4387 net.cpp:408] ip1 <- pool1
I0428 20:33:54.946811  4387 net.cpp:382] ip1 -> ip1
I0428 20:33:54.947160  4387 net.cpp:124] Setting up ip1
I0428 20:33:54.947168  4387 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:54.947183  4387 net.cpp:139] Memory required for data: 19157760
I0428 20:33:54.947193  4387 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:54.947203  4387 net.cpp:86] Creating Layer relu1
I0428 20:33:54.947207  4387 net.cpp:408] relu1 <- ip1
I0428 20:33:54.947214  4387 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:54.947460  4387 net.cpp:124] Setting up relu1
I0428 20:33:54.947473  4387 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:54.947477  4387 net.cpp:139] Memory required for data: 19170560
I0428 20:33:54.947481  4387 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:54.947491  4387 net.cpp:86] Creating Layer ip2
I0428 20:33:54.947496  4387 net.cpp:408] ip2 <- ip1
I0428 20:33:54.947504  4387 net.cpp:382] ip2 -> ip2
I0428 20:33:54.947651  4387 net.cpp:124] Setting up ip2
I0428 20:33:54.947661  4387 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:54.947665  4387 net.cpp:139] Memory required for data: 19183360
I0428 20:33:54.947674  4387 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:54.947697  4387 net.cpp:86] Creating Layer relu2
I0428 20:33:54.947721  4387 net.cpp:408] relu2 <- ip2
I0428 20:33:54.947726  4387 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:54.948786  4387 net.cpp:124] Setting up relu2
I0428 20:33:54.948823  4387 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:33:54.948829  4387 net.cpp:139] Memory required for data: 19196160
I0428 20:33:54.948849  4387 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:54.948860  4387 net.cpp:86] Creating Layer ip3
I0428 20:33:54.948865  4387 net.cpp:408] ip3 <- ip2
I0428 20:33:54.948889  4387 net.cpp:382] ip3 -> ip3
I0428 20:33:54.949031  4387 net.cpp:124] Setting up ip3
I0428 20:33:54.949043  4387 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:54.949048  4387 net.cpp:139] Memory required for data: 19198720
I0428 20:33:54.949059  4387 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:54.949066  4387 net.cpp:86] Creating Layer relu3
I0428 20:33:54.949071  4387 net.cpp:408] relu3 <- ip3
I0428 20:33:54.949095  4387 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:54.949314  4387 net.cpp:124] Setting up relu3
I0428 20:33:54.949327  4387 net.cpp:131] Top shape: 64 10 (640)
I0428 20:33:54.949332  4387 net.cpp:139] Memory required for data: 19201280
I0428 20:33:54.949337  4387 layer_factory.hpp:77] Creating layer loss
I0428 20:33:54.949345  4387 net.cpp:86] Creating Layer loss
I0428 20:33:54.949352  4387 net.cpp:408] loss <- ip3
I0428 20:33:54.949357  4387 net.cpp:408] loss <- label
I0428 20:33:54.949367  4387 net.cpp:382] loss -> loss
I0428 20:33:54.949389  4387 layer_factory.hpp:77] Creating layer loss
I0428 20:33:54.949736  4387 net.cpp:124] Setting up loss
I0428 20:33:54.949748  4387 net.cpp:131] Top shape: (1)
I0428 20:33:54.949769  4387 net.cpp:134]     with loss weight 1
I0428 20:33:54.949785  4387 net.cpp:139] Memory required for data: 19201284
I0428 20:33:54.949790  4387 net.cpp:200] loss needs backward computation.
I0428 20:33:54.949795  4387 net.cpp:200] relu3 needs backward computation.
I0428 20:33:54.949800  4387 net.cpp:200] ip3 needs backward computation.
I0428 20:33:54.949803  4387 net.cpp:200] relu2 needs backward computation.
I0428 20:33:54.949807  4387 net.cpp:200] ip2 needs backward computation.
I0428 20:33:54.949827  4387 net.cpp:200] relu1 needs backward computation.
I0428 20:33:54.949831  4387 net.cpp:200] ip1 needs backward computation.
I0428 20:33:54.949836  4387 net.cpp:200] pool1 needs backward computation.
I0428 20:33:54.949841  4387 net.cpp:200] conv1 needs backward computation.
I0428 20:33:54.949844  4387 net.cpp:200] pool0 needs backward computation.
I0428 20:33:54.949849  4387 net.cpp:200] conv0 needs backward computation.
I0428 20:33:54.949854  4387 net.cpp:202] mnist does not need backward computation.
I0428 20:33:54.949859  4387 net.cpp:244] This network produces output loss
I0428 20:33:54.949873  4387 net.cpp:257] Network initialization done.
I0428 20:33:54.950397  4387 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1596.prototxt
I0428 20:33:54.950453  4387 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:33:54.950613  4387 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:33:54.950726  4387 layer_factory.hpp:77] Creating layer mnist
I0428 20:33:54.950778  4387 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:33:54.950795  4387 net.cpp:86] Creating Layer mnist
I0428 20:33:54.950817  4387 net.cpp:382] mnist -> data
I0428 20:33:54.950829  4387 net.cpp:382] mnist -> label
I0428 20:33:54.950948  4387 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:33:54.953534  4387 net.cpp:124] Setting up mnist
I0428 20:33:54.953567  4387 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:33:54.953589  4387 net.cpp:131] Top shape: 100 (100)
I0428 20:33:54.953593  4387 net.cpp:139] Memory required for data: 314000
I0428 20:33:54.953599  4387 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:33:54.953613  4387 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:33:54.953618  4387 net.cpp:408] label_mnist_1_split <- label
I0428 20:33:54.953639  4387 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:33:54.953662  4387 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:33:54.953778  4387 net.cpp:124] Setting up label_mnist_1_split
I0428 20:33:54.953788  4387 net.cpp:131] Top shape: 100 (100)
I0428 20:33:54.953794  4387 net.cpp:131] Top shape: 100 (100)
I0428 20:33:54.953799  4387 net.cpp:139] Memory required for data: 314800
I0428 20:33:54.953804  4387 layer_factory.hpp:77] Creating layer conv0
I0428 20:33:54.953816  4387 net.cpp:86] Creating Layer conv0
I0428 20:33:54.953821  4387 net.cpp:408] conv0 <- data
I0428 20:33:54.953830  4387 net.cpp:382] conv0 -> conv0
I0428 20:33:54.955884  4387 net.cpp:124] Setting up conv0
I0428 20:33:54.955917  4387 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:33:54.955922  4387 net.cpp:139] Memory required for data: 23354800
I0428 20:33:54.955935  4387 layer_factory.hpp:77] Creating layer pool0
I0428 20:33:54.955945  4387 net.cpp:86] Creating Layer pool0
I0428 20:33:54.955965  4387 net.cpp:408] pool0 <- conv0
I0428 20:33:54.955973  4387 net.cpp:382] pool0 -> pool0
I0428 20:33:54.956024  4387 net.cpp:124] Setting up pool0
I0428 20:33:54.956034  4387 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:33:54.956054  4387 net.cpp:139] Memory required for data: 29114800
I0428 20:33:54.956059  4387 layer_factory.hpp:77] Creating layer conv1
I0428 20:33:54.956074  4387 net.cpp:86] Creating Layer conv1
I0428 20:33:54.956079  4387 net.cpp:408] conv1 <- pool0
I0428 20:33:54.956086  4387 net.cpp:382] conv1 -> conv1
I0428 20:33:54.958860  4387 net.cpp:124] Setting up conv1
I0428 20:33:54.958891  4387 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:33:54.958897  4387 net.cpp:139] Memory required for data: 29754800
I0428 20:33:54.958909  4387 layer_factory.hpp:77] Creating layer pool1
I0428 20:33:54.958917  4387 net.cpp:86] Creating Layer pool1
I0428 20:33:54.958922  4387 net.cpp:408] pool1 <- conv1
I0428 20:33:54.958946  4387 net.cpp:382] pool1 -> pool1
I0428 20:33:54.959004  4387 net.cpp:124] Setting up pool1
I0428 20:33:54.959013  4387 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:33:54.959017  4387 net.cpp:139] Memory required for data: 29914800
I0428 20:33:54.959023  4387 layer_factory.hpp:77] Creating layer ip1
I0428 20:33:54.959048  4387 net.cpp:86] Creating Layer ip1
I0428 20:33:54.959053  4387 net.cpp:408] ip1 <- pool1
I0428 20:33:54.959061  4387 net.cpp:382] ip1 -> ip1
I0428 20:33:54.959408  4387 net.cpp:124] Setting up ip1
I0428 20:33:54.959441  4387 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:54.959462  4387 net.cpp:139] Memory required for data: 29934800
I0428 20:33:54.959473  4387 layer_factory.hpp:77] Creating layer relu1
I0428 20:33:54.959481  4387 net.cpp:86] Creating Layer relu1
I0428 20:33:54.959486  4387 net.cpp:408] relu1 <- ip1
I0428 20:33:54.959492  4387 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:33:54.959825  4387 net.cpp:124] Setting up relu1
I0428 20:33:54.959851  4387 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:54.959856  4387 net.cpp:139] Memory required for data: 29954800
I0428 20:33:54.959861  4387 layer_factory.hpp:77] Creating layer ip2
I0428 20:33:54.959870  4387 net.cpp:86] Creating Layer ip2
I0428 20:33:54.959874  4387 net.cpp:408] ip2 <- ip1
I0428 20:33:54.959894  4387 net.cpp:382] ip2 -> ip2
I0428 20:33:54.960073  4387 net.cpp:124] Setting up ip2
I0428 20:33:54.960083  4387 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:54.960089  4387 net.cpp:139] Memory required for data: 29974800
I0428 20:33:54.960098  4387 layer_factory.hpp:77] Creating layer relu2
I0428 20:33:54.960104  4387 net.cpp:86] Creating Layer relu2
I0428 20:33:54.960109  4387 net.cpp:408] relu2 <- ip2
I0428 20:33:54.960117  4387 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:33:54.960368  4387 net.cpp:124] Setting up relu2
I0428 20:33:54.960381  4387 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:33:54.960386  4387 net.cpp:139] Memory required for data: 29994800
I0428 20:33:54.960391  4387 layer_factory.hpp:77] Creating layer ip3
I0428 20:33:54.960398  4387 net.cpp:86] Creating Layer ip3
I0428 20:33:54.960404  4387 net.cpp:408] ip3 <- ip2
I0428 20:33:54.960412  4387 net.cpp:382] ip3 -> ip3
I0428 20:33:54.960563  4387 net.cpp:124] Setting up ip3
I0428 20:33:54.960573  4387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:54.960577  4387 net.cpp:139] Memory required for data: 29998800
I0428 20:33:54.960588  4387 layer_factory.hpp:77] Creating layer relu3
I0428 20:33:54.960594  4387 net.cpp:86] Creating Layer relu3
I0428 20:33:54.960599  4387 net.cpp:408] relu3 <- ip3
I0428 20:33:54.960608  4387 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:33:54.961787  4387 net.cpp:124] Setting up relu3
I0428 20:33:54.961819  4387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:54.961824  4387 net.cpp:139] Memory required for data: 30002800
I0428 20:33:54.961829  4387 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:33:54.961838  4387 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:33:54.961843  4387 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:33:54.961851  4387 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:33:54.961860  4387 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:33:54.961912  4387 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:33:54.961925  4387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:54.961931  4387 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:33:54.961937  4387 net.cpp:139] Memory required for data: 30010800
I0428 20:33:54.961941  4387 layer_factory.hpp:77] Creating layer accuracy
I0428 20:33:54.961951  4387 net.cpp:86] Creating Layer accuracy
I0428 20:33:54.961954  4387 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:33:54.961961  4387 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:33:54.961968  4387 net.cpp:382] accuracy -> accuracy
I0428 20:33:54.961978  4387 net.cpp:124] Setting up accuracy
I0428 20:33:54.961984  4387 net.cpp:131] Top shape: (1)
I0428 20:33:54.961989  4387 net.cpp:139] Memory required for data: 30010804
I0428 20:33:54.961993  4387 layer_factory.hpp:77] Creating layer loss
I0428 20:33:54.962014  4387 net.cpp:86] Creating Layer loss
I0428 20:33:54.962018  4387 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:33:54.962024  4387 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:33:54.962031  4387 net.cpp:382] loss -> loss
I0428 20:33:54.962039  4387 layer_factory.hpp:77] Creating layer loss
I0428 20:33:54.962400  4387 net.cpp:124] Setting up loss
I0428 20:33:54.962429  4387 net.cpp:131] Top shape: (1)
I0428 20:33:54.962433  4387 net.cpp:134]     with loss weight 1
I0428 20:33:54.962455  4387 net.cpp:139] Memory required for data: 30010808
I0428 20:33:54.962460  4387 net.cpp:200] loss needs backward computation.
I0428 20:33:54.962466  4387 net.cpp:202] accuracy does not need backward computation.
I0428 20:33:54.962473  4387 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:33:54.962478  4387 net.cpp:200] relu3 needs backward computation.
I0428 20:33:54.962483  4387 net.cpp:200] ip3 needs backward computation.
I0428 20:33:54.962502  4387 net.cpp:200] relu2 needs backward computation.
I0428 20:33:54.962507  4387 net.cpp:200] ip2 needs backward computation.
I0428 20:33:54.962510  4387 net.cpp:200] relu1 needs backward computation.
I0428 20:33:54.962515  4387 net.cpp:200] ip1 needs backward computation.
I0428 20:33:54.962519  4387 net.cpp:200] pool1 needs backward computation.
I0428 20:33:54.962524  4387 net.cpp:200] conv1 needs backward computation.
I0428 20:33:54.962529  4387 net.cpp:200] pool0 needs backward computation.
I0428 20:33:54.962533  4387 net.cpp:200] conv0 needs backward computation.
I0428 20:33:54.962539  4387 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:33:54.962544  4387 net.cpp:202] mnist does not need backward computation.
I0428 20:33:54.962549  4387 net.cpp:244] This network produces output accuracy
I0428 20:33:54.962554  4387 net.cpp:244] This network produces output loss
I0428 20:33:54.962570  4387 net.cpp:257] Network initialization done.
I0428 20:33:54.962628  4387 solver.cpp:56] Solver scaffolding done.
I0428 20:33:54.963119  4387 caffe.cpp:248] Starting Optimization
I0428 20:33:54.963127  4387 solver.cpp:273] Solving LeNet
I0428 20:33:54.963146  4387 solver.cpp:274] Learning Rate Policy: inv
I0428 20:33:54.964262  4387 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:33:55.073248  4394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:55.076203  4387 solver.cpp:398]     Test net output #0: accuracy = 0.0703
I0428 20:33:55.076226  4387 solver.cpp:398]     Test net output #1: loss = 2.32294 (* 1 = 2.32294 loss)
I0428 20:33:55.081867  4387 solver.cpp:219] Iteration 0 (0 iter/s, 0.118687s/100 iters), loss = 2.33316
I0428 20:33:55.081912  4387 solver.cpp:238]     Train net output #0: loss = 2.33316 (* 1 = 2.33316 loss)
I0428 20:33:55.081926  4387 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:33:55.305479  4387 solver.cpp:219] Iteration 100 (447.345 iter/s, 0.223541s/100 iters), loss = 0.394452
I0428 20:33:55.305526  4387 solver.cpp:238]     Train net output #0: loss = 0.394452 (* 1 = 0.394452 loss)
I0428 20:33:55.305538  4387 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:33:55.520485  4387 solver.cpp:219] Iteration 200 (465.236 iter/s, 0.214945s/100 iters), loss = 0.42501
I0428 20:33:55.520527  4387 solver.cpp:238]     Train net output #0: loss = 0.42501 (* 1 = 0.42501 loss)
I0428 20:33:55.520539  4387 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:33:55.735329  4387 solver.cpp:219] Iteration 300 (465.582 iter/s, 0.214785s/100 iters), loss = 0.501783
I0428 20:33:55.735378  4387 solver.cpp:238]     Train net output #0: loss = 0.501783 (* 1 = 0.501783 loss)
I0428 20:33:55.735391  4387 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:33:55.969511  4387 solver.cpp:219] Iteration 400 (427.14 iter/s, 0.234115s/100 iters), loss = 0.0839724
I0428 20:33:55.969563  4387 solver.cpp:238]     Train net output #0: loss = 0.0839724 (* 1 = 0.0839724 loss)
I0428 20:33:55.969578  4387 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:33:56.200510  4387 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:33:56.307651  4394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:56.311264  4387 solver.cpp:398]     Test net output #0: accuracy = 0.9727
I0428 20:33:56.311292  4387 solver.cpp:398]     Test net output #1: loss = 0.0854525 (* 1 = 0.0854525 loss)
I0428 20:33:56.313299  4387 solver.cpp:219] Iteration 500 (290.936 iter/s, 0.343718s/100 iters), loss = 0.140476
I0428 20:33:56.313328  4387 solver.cpp:238]     Train net output #0: loss = 0.140476 (* 1 = 0.140476 loss)
I0428 20:33:56.313356  4387 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:33:56.534051  4387 solver.cpp:219] Iteration 600 (453.094 iter/s, 0.220705s/100 iters), loss = 0.12476
I0428 20:33:56.534092  4387 solver.cpp:238]     Train net output #0: loss = 0.12476 (* 1 = 0.12476 loss)
I0428 20:33:56.534102  4387 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:33:56.747709  4387 solver.cpp:219] Iteration 700 (468.158 iter/s, 0.213603s/100 iters), loss = 0.103618
I0428 20:33:56.747741  4387 solver.cpp:238]     Train net output #0: loss = 0.103618 (* 1 = 0.103618 loss)
I0428 20:33:56.747750  4387 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:33:56.958935  4387 solver.cpp:219] Iteration 800 (473.533 iter/s, 0.211179s/100 iters), loss = 0.253082
I0428 20:33:56.958967  4387 solver.cpp:238]     Train net output #0: loss = 0.253082 (* 1 = 0.253082 loss)
I0428 20:33:56.958976  4387 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:33:57.174206  4387 solver.cpp:219] Iteration 900 (464.643 iter/s, 0.215219s/100 iters), loss = 0.111859
I0428 20:33:57.174260  4387 solver.cpp:238]     Train net output #0: loss = 0.111859 (* 1 = 0.111859 loss)
I0428 20:33:57.174273  4387 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:33:57.253124  4393 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:57.408532  4387 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:33:57.412212  4387 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:33:57.414436  4387 solver.cpp:311] Iteration 1000, loss = 0.104316
I0428 20:33:57.414469  4387 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:33:57.522470  4394 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:33:57.525339  4387 solver.cpp:398]     Test net output #0: accuracy = 0.9786
I0428 20:33:57.525365  4387 solver.cpp:398]     Test net output #1: loss = 0.0666783 (* 1 = 0.0666783 loss)
I0428 20:33:57.525372  4387 solver.cpp:316] Optimization Done.
I0428 20:33:57.525375  4387 caffe.cpp:259] Optimization Done.
