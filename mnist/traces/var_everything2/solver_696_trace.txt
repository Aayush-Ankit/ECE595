I0428 19:53:46.897073 27869 caffe.cpp:218] Using GPUs 0
I0428 19:53:46.933159 27869 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:47.393193 27869 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test696.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:47.393333 27869 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test696.prototxt
I0428 19:53:47.393707 27869 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:47.393738 27869 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:47.393832 27869 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:47.393896 27869 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:47.393980 27869 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:47.393997 27869 net.cpp:86] Creating Layer mnist
I0428 19:53:47.394007 27869 net.cpp:382] mnist -> data
I0428 19:53:47.394026 27869 net.cpp:382] mnist -> label
I0428 19:53:47.394996 27869 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:47.397212 27869 net.cpp:124] Setting up mnist
I0428 19:53:47.397227 27869 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:47.397231 27869 net.cpp:131] Top shape: 64 (64)
I0428 19:53:47.397234 27869 net.cpp:139] Memory required for data: 200960
I0428 19:53:47.397239 27869 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:47.397275 27869 net.cpp:86] Creating Layer conv0
I0428 19:53:47.397292 27869 net.cpp:408] conv0 <- data
I0428 19:53:47.397302 27869 net.cpp:382] conv0 -> conv0
I0428 19:53:47.626317 27869 net.cpp:124] Setting up conv0
I0428 19:53:47.626343 27869 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:47.626346 27869 net.cpp:139] Memory required for data: 938240
I0428 19:53:47.626360 27869 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:47.626372 27869 net.cpp:86] Creating Layer pool0
I0428 19:53:47.626376 27869 net.cpp:408] pool0 <- conv0
I0428 19:53:47.626381 27869 net.cpp:382] pool0 -> pool0
I0428 19:53:47.626440 27869 net.cpp:124] Setting up pool0
I0428 19:53:47.626444 27869 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:47.626447 27869 net.cpp:139] Memory required for data: 1122560
I0428 19:53:47.626451 27869 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:47.626461 27869 net.cpp:86] Creating Layer conv1
I0428 19:53:47.626463 27869 net.cpp:408] conv1 <- pool0
I0428 19:53:47.626468 27869 net.cpp:382] conv1 -> conv1
I0428 19:53:47.629232 27869 net.cpp:124] Setting up conv1
I0428 19:53:47.629276 27869 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:47.629278 27869 net.cpp:139] Memory required for data: 1941760
I0428 19:53:47.629302 27869 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:47.629324 27869 net.cpp:86] Creating Layer pool1
I0428 19:53:47.629329 27869 net.cpp:408] pool1 <- conv1
I0428 19:53:47.629334 27869 net.cpp:382] pool1 -> pool1
I0428 19:53:47.629385 27869 net.cpp:124] Setting up pool1
I0428 19:53:47.629390 27869 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:47.629393 27869 net.cpp:139] Memory required for data: 2146560
I0428 19:53:47.629396 27869 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:47.629403 27869 net.cpp:86] Creating Layer ip1
I0428 19:53:47.629406 27869 net.cpp:408] ip1 <- pool1
I0428 19:53:47.629410 27869 net.cpp:382] ip1 -> ip1
I0428 19:53:47.629755 27869 net.cpp:124] Setting up ip1
I0428 19:53:47.629762 27869 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:47.629781 27869 net.cpp:139] Memory required for data: 2159360
I0428 19:53:47.629788 27869 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:47.629793 27869 net.cpp:86] Creating Layer relu1
I0428 19:53:47.629797 27869 net.cpp:408] relu1 <- ip1
I0428 19:53:47.629801 27869 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:47.629954 27869 net.cpp:124] Setting up relu1
I0428 19:53:47.629979 27869 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:53:47.629982 27869 net.cpp:139] Memory required for data: 2172160
I0428 19:53:47.629986 27869 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:47.629992 27869 net.cpp:86] Creating Layer ip2
I0428 19:53:47.629994 27869 net.cpp:408] ip2 <- ip1
I0428 19:53:47.629999 27869 net.cpp:382] ip2 -> ip2
I0428 19:53:47.631023 27869 net.cpp:124] Setting up ip2
I0428 19:53:47.631036 27869 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:47.631053 27869 net.cpp:139] Memory required for data: 2178560
I0428 19:53:47.631059 27869 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:47.631067 27869 net.cpp:86] Creating Layer relu2
I0428 19:53:47.631070 27869 net.cpp:408] relu2 <- ip2
I0428 19:53:47.631074 27869 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:47.631831 27869 net.cpp:124] Setting up relu2
I0428 19:53:47.631844 27869 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:47.631862 27869 net.cpp:139] Memory required for data: 2184960
I0428 19:53:47.631866 27869 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:47.631872 27869 net.cpp:86] Creating Layer ip3
I0428 19:53:47.631876 27869 net.cpp:408] ip3 <- ip2
I0428 19:53:47.631881 27869 net.cpp:382] ip3 -> ip3
I0428 19:53:47.631994 27869 net.cpp:124] Setting up ip3
I0428 19:53:47.632001 27869 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:47.632004 27869 net.cpp:139] Memory required for data: 2187520
I0428 19:53:47.632011 27869 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:47.632016 27869 net.cpp:86] Creating Layer relu3
I0428 19:53:47.632019 27869 net.cpp:408] relu3 <- ip3
I0428 19:53:47.632024 27869 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:47.632182 27869 net.cpp:124] Setting up relu3
I0428 19:53:47.632191 27869 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:47.632194 27869 net.cpp:139] Memory required for data: 2190080
I0428 19:53:47.632197 27869 layer_factory.hpp:77] Creating layer loss
I0428 19:53:47.632203 27869 net.cpp:86] Creating Layer loss
I0428 19:53:47.632206 27869 net.cpp:408] loss <- ip3
I0428 19:53:47.632210 27869 net.cpp:408] loss <- label
I0428 19:53:47.632230 27869 net.cpp:382] loss -> loss
I0428 19:53:47.632261 27869 layer_factory.hpp:77] Creating layer loss
I0428 19:53:47.632488 27869 net.cpp:124] Setting up loss
I0428 19:53:47.632496 27869 net.cpp:131] Top shape: (1)
I0428 19:53:47.632500 27869 net.cpp:134]     with loss weight 1
I0428 19:53:47.632514 27869 net.cpp:139] Memory required for data: 2190084
I0428 19:53:47.632519 27869 net.cpp:200] loss needs backward computation.
I0428 19:53:47.632521 27869 net.cpp:200] relu3 needs backward computation.
I0428 19:53:47.632524 27869 net.cpp:200] ip3 needs backward computation.
I0428 19:53:47.632529 27869 net.cpp:200] relu2 needs backward computation.
I0428 19:53:47.632530 27869 net.cpp:200] ip2 needs backward computation.
I0428 19:53:47.632534 27869 net.cpp:200] relu1 needs backward computation.
I0428 19:53:47.632536 27869 net.cpp:200] ip1 needs backward computation.
I0428 19:53:47.632539 27869 net.cpp:200] pool1 needs backward computation.
I0428 19:53:47.632557 27869 net.cpp:200] conv1 needs backward computation.
I0428 19:53:47.632561 27869 net.cpp:200] pool0 needs backward computation.
I0428 19:53:47.632565 27869 net.cpp:200] conv0 needs backward computation.
I0428 19:53:47.632567 27869 net.cpp:202] mnist does not need backward computation.
I0428 19:53:47.632570 27869 net.cpp:244] This network produces output loss
I0428 19:53:47.632580 27869 net.cpp:257] Network initialization done.
I0428 19:53:47.632982 27869 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test696.prototxt
I0428 19:53:47.633044 27869 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:47.633201 27869 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:47.633311 27869 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:47.633365 27869 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:47.633378 27869 net.cpp:86] Creating Layer mnist
I0428 19:53:47.633383 27869 net.cpp:382] mnist -> data
I0428 19:53:47.633390 27869 net.cpp:382] mnist -> label
I0428 19:53:47.633476 27869 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:47.635414 27869 net.cpp:124] Setting up mnist
I0428 19:53:47.635442 27869 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:47.635447 27869 net.cpp:131] Top shape: 100 (100)
I0428 19:53:47.635462 27869 net.cpp:139] Memory required for data: 314000
I0428 19:53:47.635465 27869 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:47.635471 27869 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:47.635474 27869 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:47.635478 27869 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:47.635484 27869 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:47.635551 27869 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:47.635556 27869 net.cpp:131] Top shape: 100 (100)
I0428 19:53:47.635560 27869 net.cpp:131] Top shape: 100 (100)
I0428 19:53:47.635562 27869 net.cpp:139] Memory required for data: 314800
I0428 19:53:47.635565 27869 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:47.635573 27869 net.cpp:86] Creating Layer conv0
I0428 19:53:47.635576 27869 net.cpp:408] conv0 <- data
I0428 19:53:47.635581 27869 net.cpp:382] conv0 -> conv0
I0428 19:53:47.637231 27869 net.cpp:124] Setting up conv0
I0428 19:53:47.637245 27869 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:47.637248 27869 net.cpp:139] Memory required for data: 1466800
I0428 19:53:47.637257 27869 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:47.637264 27869 net.cpp:86] Creating Layer pool0
I0428 19:53:47.637266 27869 net.cpp:408] pool0 <- conv0
I0428 19:53:47.637270 27869 net.cpp:382] pool0 -> pool0
I0428 19:53:47.637303 27869 net.cpp:124] Setting up pool0
I0428 19:53:47.637307 27869 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:47.637310 27869 net.cpp:139] Memory required for data: 1754800
I0428 19:53:47.637313 27869 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:47.637320 27869 net.cpp:86] Creating Layer conv1
I0428 19:53:47.637323 27869 net.cpp:408] conv1 <- pool0
I0428 19:53:47.637327 27869 net.cpp:382] conv1 -> conv1
I0428 19:53:47.638877 27869 net.cpp:124] Setting up conv1
I0428 19:53:47.638891 27869 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:47.638900 27869 net.cpp:139] Memory required for data: 3034800
I0428 19:53:47.638909 27869 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:47.638921 27869 net.cpp:86] Creating Layer pool1
I0428 19:53:47.638924 27869 net.cpp:408] pool1 <- conv1
I0428 19:53:47.638929 27869 net.cpp:382] pool1 -> pool1
I0428 19:53:47.638964 27869 net.cpp:124] Setting up pool1
I0428 19:53:47.638969 27869 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:47.638972 27869 net.cpp:139] Memory required for data: 3354800
I0428 19:53:47.638975 27869 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:47.638991 27869 net.cpp:86] Creating Layer ip1
I0428 19:53:47.638994 27869 net.cpp:408] ip1 <- pool1
I0428 19:53:47.638999 27869 net.cpp:382] ip1 -> ip1
I0428 19:53:47.639345 27869 net.cpp:124] Setting up ip1
I0428 19:53:47.639353 27869 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:47.639366 27869 net.cpp:139] Memory required for data: 3374800
I0428 19:53:47.639395 27869 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:47.639400 27869 net.cpp:86] Creating Layer relu1
I0428 19:53:47.639403 27869 net.cpp:408] relu1 <- ip1
I0428 19:53:47.639407 27869 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:47.639564 27869 net.cpp:124] Setting up relu1
I0428 19:53:47.639572 27869 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:53:47.639576 27869 net.cpp:139] Memory required for data: 3394800
I0428 19:53:47.639580 27869 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:47.639592 27869 net.cpp:86] Creating Layer ip2
I0428 19:53:47.639595 27869 net.cpp:408] ip2 <- ip1
I0428 19:53:47.639600 27869 net.cpp:382] ip2 -> ip2
I0428 19:53:47.639714 27869 net.cpp:124] Setting up ip2
I0428 19:53:47.639721 27869 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:47.639724 27869 net.cpp:139] Memory required for data: 3404800
I0428 19:53:47.639729 27869 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:47.639734 27869 net.cpp:86] Creating Layer relu2
I0428 19:53:47.639737 27869 net.cpp:408] relu2 <- ip2
I0428 19:53:47.639741 27869 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:47.639927 27869 net.cpp:124] Setting up relu2
I0428 19:53:47.639935 27869 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:47.639938 27869 net.cpp:139] Memory required for data: 3414800
I0428 19:53:47.639941 27869 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:47.639946 27869 net.cpp:86] Creating Layer ip3
I0428 19:53:47.639950 27869 net.cpp:408] ip3 <- ip2
I0428 19:53:47.639955 27869 net.cpp:382] ip3 -> ip3
I0428 19:53:47.640079 27869 net.cpp:124] Setting up ip3
I0428 19:53:47.640085 27869 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:47.640089 27869 net.cpp:139] Memory required for data: 3418800
I0428 19:53:47.640096 27869 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:47.640101 27869 net.cpp:86] Creating Layer relu3
I0428 19:53:47.640105 27869 net.cpp:408] relu3 <- ip3
I0428 19:53:47.640108 27869 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:47.640974 27869 net.cpp:124] Setting up relu3
I0428 19:53:47.640987 27869 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:47.640997 27869 net.cpp:139] Memory required for data: 3422800
I0428 19:53:47.641001 27869 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:47.641006 27869 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:47.641010 27869 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:47.641016 27869 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:47.641022 27869 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:47.641062 27869 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:47.641067 27869 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:47.641072 27869 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:47.641073 27869 net.cpp:139] Memory required for data: 3430800
I0428 19:53:47.641077 27869 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:47.641082 27869 net.cpp:86] Creating Layer accuracy
I0428 19:53:47.641090 27869 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:47.641095 27869 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:47.641099 27869 net.cpp:382] accuracy -> accuracy
I0428 19:53:47.641111 27869 net.cpp:124] Setting up accuracy
I0428 19:53:47.641126 27869 net.cpp:131] Top shape: (1)
I0428 19:53:47.641129 27869 net.cpp:139] Memory required for data: 3430804
I0428 19:53:47.641132 27869 layer_factory.hpp:77] Creating layer loss
I0428 19:53:47.641136 27869 net.cpp:86] Creating Layer loss
I0428 19:53:47.641147 27869 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:47.641151 27869 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:47.641155 27869 net.cpp:382] loss -> loss
I0428 19:53:47.641166 27869 layer_factory.hpp:77] Creating layer loss
I0428 19:53:47.641436 27869 net.cpp:124] Setting up loss
I0428 19:53:47.641444 27869 net.cpp:131] Top shape: (1)
I0428 19:53:47.641448 27869 net.cpp:134]     with loss weight 1
I0428 19:53:47.641453 27869 net.cpp:139] Memory required for data: 3430808
I0428 19:53:47.641470 27869 net.cpp:200] loss needs backward computation.
I0428 19:53:47.641476 27869 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:47.641479 27869 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:47.641482 27869 net.cpp:200] relu3 needs backward computation.
I0428 19:53:47.641485 27869 net.cpp:200] ip3 needs backward computation.
I0428 19:53:47.641489 27869 net.cpp:200] relu2 needs backward computation.
I0428 19:53:47.641490 27869 net.cpp:200] ip2 needs backward computation.
I0428 19:53:47.641494 27869 net.cpp:200] relu1 needs backward computation.
I0428 19:53:47.641495 27869 net.cpp:200] ip1 needs backward computation.
I0428 19:53:47.641499 27869 net.cpp:200] pool1 needs backward computation.
I0428 19:53:47.641510 27869 net.cpp:200] conv1 needs backward computation.
I0428 19:53:47.641513 27869 net.cpp:200] pool0 needs backward computation.
I0428 19:53:47.641516 27869 net.cpp:200] conv0 needs backward computation.
I0428 19:53:47.641541 27869 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:47.641544 27869 net.cpp:202] mnist does not need backward computation.
I0428 19:53:47.641547 27869 net.cpp:244] This network produces output accuracy
I0428 19:53:47.641554 27869 net.cpp:244] This network produces output loss
I0428 19:53:47.641567 27869 net.cpp:257] Network initialization done.
I0428 19:53:47.641611 27869 solver.cpp:56] Solver scaffolding done.
I0428 19:53:47.641964 27869 caffe.cpp:248] Starting Optimization
I0428 19:53:47.641971 27869 solver.cpp:273] Solving LeNet
I0428 19:53:47.641974 27869 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:47.642205 27869 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:47.647188 27869 blocking_queue.cpp:49] Waiting for data
I0428 19:53:47.724100 27876 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:47.724664 27869 solver.cpp:398]     Test net output #0: accuracy = 0.0569
I0428 19:53:47.724694 27869 solver.cpp:398]     Test net output #1: loss = 2.30949 (* 1 = 2.30949 loss)
I0428 19:53:47.728628 27869 solver.cpp:219] Iteration 0 (0 iter/s, 0.0866099s/100 iters), loss = 2.32308
I0428 19:53:47.728663 27869 solver.cpp:238]     Train net output #0: loss = 2.32308 (* 1 = 2.32308 loss)
I0428 19:53:47.728680 27869 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:47.841161 27869 solver.cpp:219] Iteration 100 (889.021 iter/s, 0.112483s/100 iters), loss = 1.01858
I0428 19:53:47.841188 27869 solver.cpp:238]     Train net output #0: loss = 1.01858 (* 1 = 1.01858 loss)
I0428 19:53:47.841195 27869 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:47.957525 27869 solver.cpp:219] Iteration 200 (859.673 iter/s, 0.116323s/100 iters), loss = 0.772984
I0428 19:53:47.957566 27869 solver.cpp:238]     Train net output #0: loss = 0.772984 (* 1 = 0.772984 loss)
I0428 19:53:47.957571 27869 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:48.070634 27869 solver.cpp:219] Iteration 300 (884.382 iter/s, 0.113073s/100 iters), loss = 0.659781
I0428 19:53:48.070674 27869 solver.cpp:238]     Train net output #0: loss = 0.659781 (* 1 = 0.659781 loss)
I0428 19:53:48.070680 27869 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:48.178992 27869 solver.cpp:219] Iteration 400 (923.306 iter/s, 0.108306s/100 iters), loss = 0.341622
I0428 19:53:48.179031 27869 solver.cpp:238]     Train net output #0: loss = 0.341622 (* 1 = 0.341622 loss)
I0428 19:53:48.179038 27869 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:48.281152 27869 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:48.357856 27876 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:48.358395 27869 solver.cpp:398]     Test net output #0: accuracy = 0.8775
I0428 19:53:48.358431 27869 solver.cpp:398]     Test net output #1: loss = 0.335694 (* 1 = 0.335694 loss)
I0428 19:53:48.359504 27869 solver.cpp:219] Iteration 500 (554.094 iter/s, 0.180475s/100 iters), loss = 0.441281
I0428 19:53:48.359544 27869 solver.cpp:238]     Train net output #0: loss = 0.441281 (* 1 = 0.441281 loss)
I0428 19:53:48.359566 27869 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:48.471313 27869 solver.cpp:219] Iteration 600 (894.845 iter/s, 0.111751s/100 iters), loss = 0.279628
I0428 19:53:48.471359 27869 solver.cpp:238]     Train net output #0: loss = 0.279628 (* 1 = 0.279628 loss)
I0428 19:53:48.471366 27869 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:48.577034 27869 solver.cpp:219] Iteration 700 (946.392 iter/s, 0.105665s/100 iters), loss = 0.595389
I0428 19:53:48.577061 27869 solver.cpp:238]     Train net output #0: loss = 0.595389 (* 1 = 0.595389 loss)
I0428 19:53:48.577067 27869 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:48.684828 27869 solver.cpp:219] Iteration 800 (928.02 iter/s, 0.107756s/100 iters), loss = 0.386802
I0428 19:53:48.684871 27869 solver.cpp:238]     Train net output #0: loss = 0.386802 (* 1 = 0.386802 loss)
I0428 19:53:48.684877 27869 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:48.791947 27869 solver.cpp:219] Iteration 900 (934 iter/s, 0.107066s/100 iters), loss = 0.282403
I0428 19:53:48.791990 27869 solver.cpp:238]     Train net output #0: loss = 0.282402 (* 1 = 0.282402 loss)
I0428 19:53:48.791996 27869 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:48.825909 27875 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:48.894011 27869 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:48.895643 27869 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:48.896466 27869 solver.cpp:311] Iteration 1000, loss = 0.0968211
I0428 19:53:48.896483 27869 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:48.970973 27876 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:48.971498 27869 solver.cpp:398]     Test net output #0: accuracy = 0.9684
I0428 19:53:48.971518 27869 solver.cpp:398]     Test net output #1: loss = 0.099946 (* 1 = 0.099946 loss)
I0428 19:53:48.971539 27869 solver.cpp:316] Optimization Done.
I0428 19:53:48.971542 27869 caffe.cpp:259] Optimization Done.
