I0428 19:44:29.897522 25615 caffe.cpp:218] Using GPUs 0
I0428 19:44:29.936244 25615 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:30.456836 25615 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test449.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:30.456977 25615 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test449.prototxt
I0428 19:44:30.457396 25615 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:30.457414 25615 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:30.457516 25615 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:30.457598 25615 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:30.457696 25615 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:30.457725 25615 net.cpp:86] Creating Layer mnist
I0428 19:44:30.457733 25615 net.cpp:382] mnist -> data
I0428 19:44:30.457757 25615 net.cpp:382] mnist -> label
I0428 19:44:30.458839 25615 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:30.461309 25615 net.cpp:124] Setting up mnist
I0428 19:44:30.461326 25615 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:30.461345 25615 net.cpp:131] Top shape: 64 (64)
I0428 19:44:30.461349 25615 net.cpp:139] Memory required for data: 200960
I0428 19:44:30.461356 25615 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:30.461374 25615 net.cpp:86] Creating Layer conv0
I0428 19:44:30.461397 25615 net.cpp:408] conv0 <- data
I0428 19:44:30.461411 25615 net.cpp:382] conv0 -> conv0
I0428 19:44:30.750754 25615 net.cpp:124] Setting up conv0
I0428 19:44:30.750782 25615 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:30.750787 25615 net.cpp:139] Memory required for data: 495872
I0428 19:44:30.750802 25615 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:30.750816 25615 net.cpp:86] Creating Layer pool0
I0428 19:44:30.750819 25615 net.cpp:408] pool0 <- conv0
I0428 19:44:30.750825 25615 net.cpp:382] pool0 -> pool0
I0428 19:44:30.750874 25615 net.cpp:124] Setting up pool0
I0428 19:44:30.750880 25615 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:30.750883 25615 net.cpp:139] Memory required for data: 569600
I0428 19:44:30.750886 25615 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:30.750897 25615 net.cpp:86] Creating Layer conv1
I0428 19:44:30.750900 25615 net.cpp:408] conv1 <- pool0
I0428 19:44:30.750907 25615 net.cpp:382] conv1 -> conv1
I0428 19:44:30.753659 25615 net.cpp:124] Setting up conv1
I0428 19:44:30.753675 25615 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:30.753679 25615 net.cpp:139] Memory required for data: 1388800
I0428 19:44:30.753689 25615 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:30.753695 25615 net.cpp:86] Creating Layer pool1
I0428 19:44:30.753700 25615 net.cpp:408] pool1 <- conv1
I0428 19:44:30.753705 25615 net.cpp:382] pool1 -> pool1
I0428 19:44:30.753746 25615 net.cpp:124] Setting up pool1
I0428 19:44:30.753752 25615 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:30.753756 25615 net.cpp:139] Memory required for data: 1593600
I0428 19:44:30.753758 25615 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:30.753765 25615 net.cpp:86] Creating Layer ip1
I0428 19:44:30.753769 25615 net.cpp:408] ip1 <- pool1
I0428 19:44:30.753774 25615 net.cpp:382] ip1 -> ip1
I0428 19:44:30.754753 25615 net.cpp:124] Setting up ip1
I0428 19:44:30.754767 25615 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:30.754771 25615 net.cpp:139] Memory required for data: 1596160
I0428 19:44:30.754779 25615 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:30.754786 25615 net.cpp:86] Creating Layer relu1
I0428 19:44:30.754788 25615 net.cpp:408] relu1 <- ip1
I0428 19:44:30.754793 25615 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:30.754979 25615 net.cpp:124] Setting up relu1
I0428 19:44:30.754989 25615 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:30.754992 25615 net.cpp:139] Memory required for data: 1598720
I0428 19:44:30.754995 25615 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:30.755003 25615 net.cpp:86] Creating Layer ip2
I0428 19:44:30.755007 25615 net.cpp:408] ip2 <- ip1
I0428 19:44:30.755012 25615 net.cpp:382] ip2 -> ip2
I0428 19:44:30.755120 25615 net.cpp:124] Setting up ip2
I0428 19:44:30.755126 25615 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:44:30.755129 25615 net.cpp:139] Memory required for data: 1611520
I0428 19:44:30.755136 25615 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:30.755141 25615 net.cpp:86] Creating Layer relu2
I0428 19:44:30.755144 25615 net.cpp:408] relu2 <- ip2
I0428 19:44:30.755151 25615 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:30.755890 25615 net.cpp:124] Setting up relu2
I0428 19:44:30.755903 25615 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:44:30.755906 25615 net.cpp:139] Memory required for data: 1624320
I0428 19:44:30.755909 25615 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:30.755918 25615 net.cpp:86] Creating Layer ip3
I0428 19:44:30.755920 25615 net.cpp:408] ip3 <- ip2
I0428 19:44:30.755925 25615 net.cpp:382] ip3 -> ip3
I0428 19:44:30.756036 25615 net.cpp:124] Setting up ip3
I0428 19:44:30.756045 25615 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:30.756048 25615 net.cpp:139] Memory required for data: 1626880
I0428 19:44:30.756055 25615 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:30.756064 25615 net.cpp:86] Creating Layer relu3
I0428 19:44:30.756067 25615 net.cpp:408] relu3 <- ip3
I0428 19:44:30.756072 25615 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:30.756248 25615 net.cpp:124] Setting up relu3
I0428 19:44:30.756258 25615 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:30.756261 25615 net.cpp:139] Memory required for data: 1629440
I0428 19:44:30.756280 25615 layer_factory.hpp:77] Creating layer loss
I0428 19:44:30.756288 25615 net.cpp:86] Creating Layer loss
I0428 19:44:30.756290 25615 net.cpp:408] loss <- ip3
I0428 19:44:30.756294 25615 net.cpp:408] loss <- label
I0428 19:44:30.756300 25615 net.cpp:382] loss -> loss
I0428 19:44:30.756314 25615 layer_factory.hpp:77] Creating layer loss
I0428 19:44:30.756580 25615 net.cpp:124] Setting up loss
I0428 19:44:30.756589 25615 net.cpp:131] Top shape: (1)
I0428 19:44:30.756593 25615 net.cpp:134]     with loss weight 1
I0428 19:44:30.756608 25615 net.cpp:139] Memory required for data: 1629444
I0428 19:44:30.756610 25615 net.cpp:200] loss needs backward computation.
I0428 19:44:30.756614 25615 net.cpp:200] relu3 needs backward computation.
I0428 19:44:30.756618 25615 net.cpp:200] ip3 needs backward computation.
I0428 19:44:30.756619 25615 net.cpp:200] relu2 needs backward computation.
I0428 19:44:30.756623 25615 net.cpp:200] ip2 needs backward computation.
I0428 19:44:30.756625 25615 net.cpp:200] relu1 needs backward computation.
I0428 19:44:30.756628 25615 net.cpp:200] ip1 needs backward computation.
I0428 19:44:30.756630 25615 net.cpp:200] pool1 needs backward computation.
I0428 19:44:30.756633 25615 net.cpp:200] conv1 needs backward computation.
I0428 19:44:30.756636 25615 net.cpp:200] pool0 needs backward computation.
I0428 19:44:30.756639 25615 net.cpp:200] conv0 needs backward computation.
I0428 19:44:30.756642 25615 net.cpp:202] mnist does not need backward computation.
I0428 19:44:30.756645 25615 net.cpp:244] This network produces output loss
I0428 19:44:30.756655 25615 net.cpp:257] Network initialization done.
I0428 19:44:30.757027 25615 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test449.prototxt
I0428 19:44:30.757072 25615 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:30.757182 25615 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:30.757269 25615 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:30.757311 25615 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:30.757324 25615 net.cpp:86] Creating Layer mnist
I0428 19:44:30.757328 25615 net.cpp:382] mnist -> data
I0428 19:44:30.757338 25615 net.cpp:382] mnist -> label
I0428 19:44:30.757426 25615 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:30.759516 25615 net.cpp:124] Setting up mnist
I0428 19:44:30.759528 25615 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:30.759533 25615 net.cpp:131] Top shape: 100 (100)
I0428 19:44:30.759536 25615 net.cpp:139] Memory required for data: 314000
I0428 19:44:30.759539 25615 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:30.759546 25615 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:30.759565 25615 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:30.759582 25615 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:30.759590 25615 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:30.759644 25615 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:30.759650 25615 net.cpp:131] Top shape: 100 (100)
I0428 19:44:30.759654 25615 net.cpp:131] Top shape: 100 (100)
I0428 19:44:30.759657 25615 net.cpp:139] Memory required for data: 314800
I0428 19:44:30.759660 25615 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:30.759671 25615 net.cpp:86] Creating Layer conv0
I0428 19:44:30.759675 25615 net.cpp:408] conv0 <- data
I0428 19:44:30.759680 25615 net.cpp:382] conv0 -> conv0
I0428 19:44:30.761451 25615 net.cpp:124] Setting up conv0
I0428 19:44:30.761466 25615 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:30.761469 25615 net.cpp:139] Memory required for data: 775600
I0428 19:44:30.761478 25615 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:30.761484 25615 net.cpp:86] Creating Layer pool0
I0428 19:44:30.761487 25615 net.cpp:408] pool0 <- conv0
I0428 19:44:30.761493 25615 net.cpp:382] pool0 -> pool0
I0428 19:44:30.761531 25615 net.cpp:124] Setting up pool0
I0428 19:44:30.761538 25615 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:30.761541 25615 net.cpp:139] Memory required for data: 890800
I0428 19:44:30.761543 25615 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:30.761554 25615 net.cpp:86] Creating Layer conv1
I0428 19:44:30.761556 25615 net.cpp:408] conv1 <- pool0
I0428 19:44:30.761561 25615 net.cpp:382] conv1 -> conv1
I0428 19:44:30.763154 25615 net.cpp:124] Setting up conv1
I0428 19:44:30.763167 25615 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:30.763171 25615 net.cpp:139] Memory required for data: 2170800
I0428 19:44:30.763180 25615 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:30.763188 25615 net.cpp:86] Creating Layer pool1
I0428 19:44:30.763191 25615 net.cpp:408] pool1 <- conv1
I0428 19:44:30.763197 25615 net.cpp:382] pool1 -> pool1
I0428 19:44:30.763242 25615 net.cpp:124] Setting up pool1
I0428 19:44:30.763248 25615 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:30.763250 25615 net.cpp:139] Memory required for data: 2490800
I0428 19:44:30.763253 25615 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:30.763260 25615 net.cpp:86] Creating Layer ip1
I0428 19:44:30.763263 25615 net.cpp:408] ip1 <- pool1
I0428 19:44:30.763269 25615 net.cpp:382] ip1 -> ip1
I0428 19:44:30.763434 25615 net.cpp:124] Setting up ip1
I0428 19:44:30.763444 25615 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:30.763483 25615 net.cpp:139] Memory required for data: 2494800
I0428 19:44:30.763492 25615 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:30.763499 25615 net.cpp:86] Creating Layer relu1
I0428 19:44:30.763502 25615 net.cpp:408] relu1 <- ip1
I0428 19:44:30.763509 25615 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:30.763702 25615 net.cpp:124] Setting up relu1
I0428 19:44:30.763712 25615 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:30.763715 25615 net.cpp:139] Memory required for data: 2498800
I0428 19:44:30.763720 25615 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:30.763727 25615 net.cpp:86] Creating Layer ip2
I0428 19:44:30.763731 25615 net.cpp:408] ip2 <- ip1
I0428 19:44:30.763736 25615 net.cpp:382] ip2 -> ip2
I0428 19:44:30.763859 25615 net.cpp:124] Setting up ip2
I0428 19:44:30.763865 25615 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:44:30.763870 25615 net.cpp:139] Memory required for data: 2518800
I0428 19:44:30.763875 25615 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:30.763880 25615 net.cpp:86] Creating Layer relu2
I0428 19:44:30.763885 25615 net.cpp:408] relu2 <- ip2
I0428 19:44:30.763887 25615 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:30.764137 25615 net.cpp:124] Setting up relu2
I0428 19:44:30.764147 25615 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:44:30.764152 25615 net.cpp:139] Memory required for data: 2538800
I0428 19:44:30.764154 25615 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:30.764161 25615 net.cpp:86] Creating Layer ip3
I0428 19:44:30.764170 25615 net.cpp:408] ip3 <- ip2
I0428 19:44:30.764175 25615 net.cpp:382] ip3 -> ip3
I0428 19:44:30.764297 25615 net.cpp:124] Setting up ip3
I0428 19:44:30.764305 25615 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:30.764308 25615 net.cpp:139] Memory required for data: 2542800
I0428 19:44:30.764320 25615 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:30.764328 25615 net.cpp:86] Creating Layer relu3
I0428 19:44:30.764330 25615 net.cpp:408] relu3 <- ip3
I0428 19:44:30.764334 25615 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:30.765218 25615 net.cpp:124] Setting up relu3
I0428 19:44:30.765230 25615 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:30.765233 25615 net.cpp:139] Memory required for data: 2546800
I0428 19:44:30.765236 25615 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:30.765241 25615 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:30.765245 25615 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:30.765250 25615 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:30.765256 25615 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:30.765300 25615 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:30.765307 25615 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:30.765311 25615 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:30.765313 25615 net.cpp:139] Memory required for data: 2554800
I0428 19:44:30.765316 25615 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:30.765322 25615 net.cpp:86] Creating Layer accuracy
I0428 19:44:30.765326 25615 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:30.765329 25615 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:30.765333 25615 net.cpp:382] accuracy -> accuracy
I0428 19:44:30.765341 25615 net.cpp:124] Setting up accuracy
I0428 19:44:30.765344 25615 net.cpp:131] Top shape: (1)
I0428 19:44:30.765347 25615 net.cpp:139] Memory required for data: 2554804
I0428 19:44:30.765349 25615 layer_factory.hpp:77] Creating layer loss
I0428 19:44:30.765355 25615 net.cpp:86] Creating Layer loss
I0428 19:44:30.765358 25615 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:30.765362 25615 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:30.765365 25615 net.cpp:382] loss -> loss
I0428 19:44:30.765372 25615 layer_factory.hpp:77] Creating layer loss
I0428 19:44:30.765614 25615 net.cpp:124] Setting up loss
I0428 19:44:30.765625 25615 net.cpp:131] Top shape: (1)
I0428 19:44:30.765627 25615 net.cpp:134]     with loss weight 1
I0428 19:44:30.765635 25615 net.cpp:139] Memory required for data: 2554808
I0428 19:44:30.765647 25615 net.cpp:200] loss needs backward computation.
I0428 19:44:30.765651 25615 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:30.765655 25615 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:30.765658 25615 net.cpp:200] relu3 needs backward computation.
I0428 19:44:30.765661 25615 net.cpp:200] ip3 needs backward computation.
I0428 19:44:30.765664 25615 net.cpp:200] relu2 needs backward computation.
I0428 19:44:30.765667 25615 net.cpp:200] ip2 needs backward computation.
I0428 19:44:30.765669 25615 net.cpp:200] relu1 needs backward computation.
I0428 19:44:30.765672 25615 net.cpp:200] ip1 needs backward computation.
I0428 19:44:30.765676 25615 net.cpp:200] pool1 needs backward computation.
I0428 19:44:30.765678 25615 net.cpp:200] conv1 needs backward computation.
I0428 19:44:30.765682 25615 net.cpp:200] pool0 needs backward computation.
I0428 19:44:30.765686 25615 net.cpp:200] conv0 needs backward computation.
I0428 19:44:30.765689 25615 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:30.765693 25615 net.cpp:202] mnist does not need backward computation.
I0428 19:44:30.765697 25615 net.cpp:244] This network produces output accuracy
I0428 19:44:30.765700 25615 net.cpp:244] This network produces output loss
I0428 19:44:30.765712 25615 net.cpp:257] Network initialization done.
I0428 19:44:30.765753 25615 solver.cpp:56] Solver scaffolding done.
I0428 19:44:30.766093 25615 caffe.cpp:248] Starting Optimization
I0428 19:44:30.766100 25615 solver.cpp:273] Solving LeNet
I0428 19:44:30.766103 25615 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:30.766963 25615 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:30.770418 25615 blocking_queue.cpp:49] Waiting for data
I0428 19:44:30.840551 25622 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:30.841058 25615 solver.cpp:398]     Test net output #0: accuracy = 0.1147
I0428 19:44:30.841096 25615 solver.cpp:398]     Test net output #1: loss = 2.34946 (* 1 = 2.34946 loss)
I0428 19:44:30.843247 25615 solver.cpp:219] Iteration 0 (0 iter/s, 0.0771018s/100 iters), loss = 2.37232
I0428 19:44:30.843271 25615 solver.cpp:238]     Train net output #0: loss = 2.37232 (* 1 = 2.37232 loss)
I0428 19:44:30.843283 25615 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:30.948326 25615 solver.cpp:219] Iteration 100 (952.017 iter/s, 0.10504s/100 iters), loss = 1.614
I0428 19:44:30.948366 25615 solver.cpp:238]     Train net output #0: loss = 1.614 (* 1 = 1.614 loss)
I0428 19:44:30.948372 25615 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:31.053766 25615 solver.cpp:219] Iteration 200 (948.727 iter/s, 0.105404s/100 iters), loss = 0.877502
I0428 19:44:31.053807 25615 solver.cpp:238]     Train net output #0: loss = 0.877502 (* 1 = 0.877502 loss)
I0428 19:44:31.053812 25615 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:31.159122 25615 solver.cpp:219] Iteration 300 (949.474 iter/s, 0.105321s/100 iters), loss = 0.302669
I0428 19:44:31.159160 25615 solver.cpp:238]     Train net output #0: loss = 0.302669 (* 1 = 0.302669 loss)
I0428 19:44:31.159167 25615 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:31.261584 25615 solver.cpp:219] Iteration 400 (976.289 iter/s, 0.102429s/100 iters), loss = 0.42602
I0428 19:44:31.261625 25615 solver.cpp:238]     Train net output #0: loss = 0.42602 (* 1 = 0.42602 loss)
I0428 19:44:31.261631 25615 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:31.367302 25615 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:31.434566 25622 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:31.435063 25615 solver.cpp:398]     Test net output #0: accuracy = 0.8557
I0428 19:44:31.435086 25615 solver.cpp:398]     Test net output #1: loss = 0.428487 (* 1 = 0.428487 loss)
I0428 19:44:31.436126 25615 solver.cpp:219] Iteration 500 (573.05 iter/s, 0.174505s/100 iters), loss = 0.529734
I0428 19:44:31.436166 25615 solver.cpp:238]     Train net output #0: loss = 0.529734 (* 1 = 0.529734 loss)
I0428 19:44:31.436188 25615 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:31.540426 25615 solver.cpp:219] Iteration 600 (959.096 iter/s, 0.104265s/100 iters), loss = 0.236789
I0428 19:44:31.540467 25615 solver.cpp:238]     Train net output #0: loss = 0.236789 (* 1 = 0.236789 loss)
I0428 19:44:31.540473 25615 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:31.639389 25615 solver.cpp:219] Iteration 700 (1011.02 iter/s, 0.0989102s/100 iters), loss = 0.782511
I0428 19:44:31.639430 25615 solver.cpp:238]     Train net output #0: loss = 0.782511 (* 1 = 0.782511 loss)
I0428 19:44:31.639436 25615 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:31.741308 25615 solver.cpp:219] Iteration 800 (981.509 iter/s, 0.101884s/100 iters), loss = 0.473466
I0428 19:44:31.741333 25615 solver.cpp:238]     Train net output #0: loss = 0.473466 (* 1 = 0.473466 loss)
I0428 19:44:31.741340 25615 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:31.841845 25615 solver.cpp:219] Iteration 900 (995.01 iter/s, 0.100502s/100 iters), loss = 0.353266
I0428 19:44:31.841886 25615 solver.cpp:238]     Train net output #0: loss = 0.353266 (* 1 = 0.353266 loss)
I0428 19:44:31.841892 25615 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:31.879886 25621 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:31.952896 25615 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:31.954048 25615 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:31.954731 25615 solver.cpp:311] Iteration 1000, loss = 0.50649
I0428 19:44:31.954749 25615 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:32.027882 25622 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:32.028527 25615 solver.cpp:398]     Test net output #0: accuracy = 0.8759
I0428 19:44:32.028578 25615 solver.cpp:398]     Test net output #1: loss = 0.341044 (* 1 = 0.341044 loss)
I0428 19:44:32.028586 25615 solver.cpp:316] Optimization Done.
I0428 19:44:32.028591 25615 caffe.cpp:259] Optimization Done.
