I0428 19:44:13.208024 25556 caffe.cpp:218] Using GPUs 0
I0428 19:44:13.248646 25556 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:44:13.768769 25556 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test442.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:44:13.768947 25556 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test442.prototxt
I0428 19:44:13.769379 25556 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:44:13.769405 25556 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:44:13.769525 25556 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:13.769640 25556 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:13.769773 25556 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:44:13.769807 25556 net.cpp:86] Creating Layer mnist
I0428 19:44:13.769819 25556 net.cpp:382] mnist -> data
I0428 19:44:13.769852 25556 net.cpp:382] mnist -> label
I0428 19:44:13.771119 25556 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:44:13.773617 25556 net.cpp:124] Setting up mnist
I0428 19:44:13.773639 25556 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:44:13.773650 25556 net.cpp:131] Top shape: 64 (64)
I0428 19:44:13.773656 25556 net.cpp:139] Memory required for data: 200960
I0428 19:44:13.773668 25556 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:13.773691 25556 net.cpp:86] Creating Layer conv0
I0428 19:44:13.773715 25556 net.cpp:408] conv0 <- data
I0428 19:44:13.773735 25556 net.cpp:382] conv0 -> conv0
I0428 19:44:14.063716 25556 net.cpp:124] Setting up conv0
I0428 19:44:14.063750 25556 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:44:14.063760 25556 net.cpp:139] Memory required for data: 495872
I0428 19:44:14.063784 25556 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:14.063804 25556 net.cpp:86] Creating Layer pool0
I0428 19:44:14.063820 25556 net.cpp:408] pool0 <- conv0
I0428 19:44:14.063832 25556 net.cpp:382] pool0 -> pool0
I0428 19:44:14.063897 25556 net.cpp:124] Setting up pool0
I0428 19:44:14.063910 25556 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:44:14.063915 25556 net.cpp:139] Memory required for data: 569600
I0428 19:44:14.063922 25556 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:14.063941 25556 net.cpp:86] Creating Layer conv1
I0428 19:44:14.063949 25556 net.cpp:408] conv1 <- pool0
I0428 19:44:14.063961 25556 net.cpp:382] conv1 -> conv1
I0428 19:44:14.067163 25556 net.cpp:124] Setting up conv1
I0428 19:44:14.067184 25556 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:44:14.067193 25556 net.cpp:139] Memory required for data: 1388800
I0428 19:44:14.067211 25556 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:14.067226 25556 net.cpp:86] Creating Layer pool1
I0428 19:44:14.067239 25556 net.cpp:408] pool1 <- conv1
I0428 19:44:14.067250 25556 net.cpp:382] pool1 -> pool1
I0428 19:44:14.067307 25556 net.cpp:124] Setting up pool1
I0428 19:44:14.067318 25556 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:44:14.067325 25556 net.cpp:139] Memory required for data: 1593600
I0428 19:44:14.067332 25556 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:14.067345 25556 net.cpp:86] Creating Layer ip1
I0428 19:44:14.067353 25556 net.cpp:408] ip1 <- pool1
I0428 19:44:14.067366 25556 net.cpp:382] ip1 -> ip1
I0428 19:44:14.068527 25556 net.cpp:124] Setting up ip1
I0428 19:44:14.068544 25556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:14.068550 25556 net.cpp:139] Memory required for data: 1596160
I0428 19:44:14.068567 25556 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:14.068578 25556 net.cpp:86] Creating Layer relu1
I0428 19:44:14.068586 25556 net.cpp:408] relu1 <- ip1
I0428 19:44:14.068598 25556 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:14.068830 25556 net.cpp:124] Setting up relu1
I0428 19:44:14.068845 25556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:14.068850 25556 net.cpp:139] Memory required for data: 1598720
I0428 19:44:14.068857 25556 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:14.068872 25556 net.cpp:86] Creating Layer ip2
I0428 19:44:14.068879 25556 net.cpp:408] ip2 <- ip1
I0428 19:44:14.068889 25556 net.cpp:382] ip2 -> ip2
I0428 19:44:14.069021 25556 net.cpp:124] Setting up ip2
I0428 19:44:14.069032 25556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:14.069039 25556 net.cpp:139] Memory required for data: 1601280
I0428 19:44:14.069051 25556 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:14.069062 25556 net.cpp:86] Creating Layer relu2
I0428 19:44:14.069074 25556 net.cpp:408] relu2 <- ip2
I0428 19:44:14.069085 25556 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:14.069958 25556 net.cpp:124] Setting up relu2
I0428 19:44:14.069975 25556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:14.069983 25556 net.cpp:139] Memory required for data: 1603840
I0428 19:44:14.069988 25556 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:14.070003 25556 net.cpp:86] Creating Layer ip3
I0428 19:44:14.070011 25556 net.cpp:408] ip3 <- ip2
I0428 19:44:14.070022 25556 net.cpp:382] ip3 -> ip3
I0428 19:44:14.070158 25556 net.cpp:124] Setting up ip3
I0428 19:44:14.070169 25556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:14.070175 25556 net.cpp:139] Memory required for data: 1606400
I0428 19:44:14.070190 25556 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:14.070204 25556 net.cpp:86] Creating Layer relu3
I0428 19:44:14.070212 25556 net.cpp:408] relu3 <- ip3
I0428 19:44:14.070221 25556 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:14.070442 25556 net.cpp:124] Setting up relu3
I0428 19:44:14.070456 25556 net.cpp:131] Top shape: 64 10 (640)
I0428 19:44:14.070461 25556 net.cpp:139] Memory required for data: 1608960
I0428 19:44:14.070468 25556 layer_factory.hpp:77] Creating layer loss
I0428 19:44:14.070482 25556 net.cpp:86] Creating Layer loss
I0428 19:44:14.070488 25556 net.cpp:408] loss <- ip3
I0428 19:44:14.070497 25556 net.cpp:408] loss <- label
I0428 19:44:14.070509 25556 net.cpp:382] loss -> loss
I0428 19:44:14.070538 25556 layer_factory.hpp:77] Creating layer loss
I0428 19:44:14.070833 25556 net.cpp:124] Setting up loss
I0428 19:44:14.070845 25556 net.cpp:131] Top shape: (1)
I0428 19:44:14.070852 25556 net.cpp:134]     with loss weight 1
I0428 19:44:14.070875 25556 net.cpp:139] Memory required for data: 1608964
I0428 19:44:14.070883 25556 net.cpp:200] loss needs backward computation.
I0428 19:44:14.070890 25556 net.cpp:200] relu3 needs backward computation.
I0428 19:44:14.070897 25556 net.cpp:200] ip3 needs backward computation.
I0428 19:44:14.070904 25556 net.cpp:200] relu2 needs backward computation.
I0428 19:44:14.070909 25556 net.cpp:200] ip2 needs backward computation.
I0428 19:44:14.070915 25556 net.cpp:200] relu1 needs backward computation.
I0428 19:44:14.070920 25556 net.cpp:200] ip1 needs backward computation.
I0428 19:44:14.070927 25556 net.cpp:200] pool1 needs backward computation.
I0428 19:44:14.070933 25556 net.cpp:200] conv1 needs backward computation.
I0428 19:44:14.070940 25556 net.cpp:200] pool0 needs backward computation.
I0428 19:44:14.070945 25556 net.cpp:200] conv0 needs backward computation.
I0428 19:44:14.070952 25556 net.cpp:202] mnist does not need backward computation.
I0428 19:44:14.070958 25556 net.cpp:244] This network produces output loss
I0428 19:44:14.070978 25556 net.cpp:257] Network initialization done.
I0428 19:44:14.071374 25556 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test442.prototxt
I0428 19:44:14.071416 25556 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:44:14.071540 25556 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:44:14.071684 25556 layer_factory.hpp:77] Creating layer mnist
I0428 19:44:14.071754 25556 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:44:14.071776 25556 net.cpp:86] Creating Layer mnist
I0428 19:44:14.071789 25556 net.cpp:382] mnist -> data
I0428 19:44:14.071804 25556 net.cpp:382] mnist -> label
I0428 19:44:14.071951 25556 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:44:14.074342 25556 net.cpp:124] Setting up mnist
I0428 19:44:14.074360 25556 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:44:14.074370 25556 net.cpp:131] Top shape: 100 (100)
I0428 19:44:14.074376 25556 net.cpp:139] Memory required for data: 314000
I0428 19:44:14.074383 25556 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:44:14.074419 25556 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:44:14.074425 25556 net.cpp:408] label_mnist_1_split <- label
I0428 19:44:14.074439 25556 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:44:14.074451 25556 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:44:14.074544 25556 net.cpp:124] Setting up label_mnist_1_split
I0428 19:44:14.074555 25556 net.cpp:131] Top shape: 100 (100)
I0428 19:44:14.074563 25556 net.cpp:131] Top shape: 100 (100)
I0428 19:44:14.074569 25556 net.cpp:139] Memory required for data: 314800
I0428 19:44:14.074576 25556 layer_factory.hpp:77] Creating layer conv0
I0428 19:44:14.074594 25556 net.cpp:86] Creating Layer conv0
I0428 19:44:14.074602 25556 net.cpp:408] conv0 <- data
I0428 19:44:14.074616 25556 net.cpp:382] conv0 -> conv0
I0428 19:44:14.076416 25556 net.cpp:124] Setting up conv0
I0428 19:44:14.076436 25556 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:44:14.076443 25556 net.cpp:139] Memory required for data: 775600
I0428 19:44:14.076460 25556 layer_factory.hpp:77] Creating layer pool0
I0428 19:44:14.076475 25556 net.cpp:86] Creating Layer pool0
I0428 19:44:14.076483 25556 net.cpp:408] pool0 <- conv0
I0428 19:44:14.076493 25556 net.cpp:382] pool0 -> pool0
I0428 19:44:14.076551 25556 net.cpp:124] Setting up pool0
I0428 19:44:14.076561 25556 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:44:14.076568 25556 net.cpp:139] Memory required for data: 890800
I0428 19:44:14.076575 25556 layer_factory.hpp:77] Creating layer conv1
I0428 19:44:14.076594 25556 net.cpp:86] Creating Layer conv1
I0428 19:44:14.076602 25556 net.cpp:408] conv1 <- pool0
I0428 19:44:14.076616 25556 net.cpp:382] conv1 -> conv1
I0428 19:44:14.078552 25556 net.cpp:124] Setting up conv1
I0428 19:44:14.078572 25556 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:44:14.078580 25556 net.cpp:139] Memory required for data: 2170800
I0428 19:44:14.078596 25556 layer_factory.hpp:77] Creating layer pool1
I0428 19:44:14.078609 25556 net.cpp:86] Creating Layer pool1
I0428 19:44:14.078616 25556 net.cpp:408] pool1 <- conv1
I0428 19:44:14.078629 25556 net.cpp:382] pool1 -> pool1
I0428 19:44:14.078687 25556 net.cpp:124] Setting up pool1
I0428 19:44:14.078703 25556 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:44:14.078711 25556 net.cpp:139] Memory required for data: 2490800
I0428 19:44:14.078716 25556 layer_factory.hpp:77] Creating layer ip1
I0428 19:44:14.078728 25556 net.cpp:86] Creating Layer ip1
I0428 19:44:14.078735 25556 net.cpp:408] ip1 <- pool1
I0428 19:44:14.078747 25556 net.cpp:382] ip1 -> ip1
I0428 19:44:14.078933 25556 net.cpp:124] Setting up ip1
I0428 19:44:14.078945 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.078966 25556 net.cpp:139] Memory required for data: 2494800
I0428 19:44:14.078985 25556 layer_factory.hpp:77] Creating layer relu1
I0428 19:44:14.079002 25556 net.cpp:86] Creating Layer relu1
I0428 19:44:14.079012 25556 net.cpp:408] relu1 <- ip1
I0428 19:44:14.079023 25556 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:44:14.079229 25556 net.cpp:124] Setting up relu1
I0428 19:44:14.079241 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.079248 25556 net.cpp:139] Memory required for data: 2498800
I0428 19:44:14.079254 25556 layer_factory.hpp:77] Creating layer ip2
I0428 19:44:14.079272 25556 net.cpp:86] Creating Layer ip2
I0428 19:44:14.079280 25556 net.cpp:408] ip2 <- ip1
I0428 19:44:14.079290 25556 net.cpp:382] ip2 -> ip2
I0428 19:44:14.079476 25556 net.cpp:124] Setting up ip2
I0428 19:44:14.079488 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.079495 25556 net.cpp:139] Memory required for data: 2502800
I0428 19:44:14.079507 25556 layer_factory.hpp:77] Creating layer relu2
I0428 19:44:14.079517 25556 net.cpp:86] Creating Layer relu2
I0428 19:44:14.079524 25556 net.cpp:408] relu2 <- ip2
I0428 19:44:14.079536 25556 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:44:14.079737 25556 net.cpp:124] Setting up relu2
I0428 19:44:14.079749 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.079756 25556 net.cpp:139] Memory required for data: 2506800
I0428 19:44:14.079763 25556 layer_factory.hpp:77] Creating layer ip3
I0428 19:44:14.079774 25556 net.cpp:86] Creating Layer ip3
I0428 19:44:14.079782 25556 net.cpp:408] ip3 <- ip2
I0428 19:44:14.079795 25556 net.cpp:382] ip3 -> ip3
I0428 19:44:14.079922 25556 net.cpp:124] Setting up ip3
I0428 19:44:14.079936 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.079942 25556 net.cpp:139] Memory required for data: 2510800
I0428 19:44:14.079957 25556 layer_factory.hpp:77] Creating layer relu3
I0428 19:44:14.079969 25556 net.cpp:86] Creating Layer relu3
I0428 19:44:14.079978 25556 net.cpp:408] relu3 <- ip3
I0428 19:44:14.079988 25556 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:44:14.080942 25556 net.cpp:124] Setting up relu3
I0428 19:44:14.080961 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.080968 25556 net.cpp:139] Memory required for data: 2514800
I0428 19:44:14.080976 25556 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:44:14.080988 25556 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:44:14.080996 25556 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:44:14.081004 25556 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:44:14.081017 25556 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:44:14.081073 25556 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:44:14.081084 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.081092 25556 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:44:14.081099 25556 net.cpp:139] Memory required for data: 2522800
I0428 19:44:14.081105 25556 layer_factory.hpp:77] Creating layer accuracy
I0428 19:44:14.081116 25556 net.cpp:86] Creating Layer accuracy
I0428 19:44:14.081123 25556 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:44:14.081132 25556 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:44:14.081143 25556 net.cpp:382] accuracy -> accuracy
I0428 19:44:14.081157 25556 net.cpp:124] Setting up accuracy
I0428 19:44:14.081167 25556 net.cpp:131] Top shape: (1)
I0428 19:44:14.081176 25556 net.cpp:139] Memory required for data: 2522804
I0428 19:44:14.081182 25556 layer_factory.hpp:77] Creating layer loss
I0428 19:44:14.081190 25556 net.cpp:86] Creating Layer loss
I0428 19:44:14.081197 25556 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:44:14.081205 25556 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:44:14.081217 25556 net.cpp:382] loss -> loss
I0428 19:44:14.081234 25556 layer_factory.hpp:77] Creating layer loss
I0428 19:44:14.081535 25556 net.cpp:124] Setting up loss
I0428 19:44:14.081547 25556 net.cpp:131] Top shape: (1)
I0428 19:44:14.081553 25556 net.cpp:134]     with loss weight 1
I0428 19:44:14.081565 25556 net.cpp:139] Memory required for data: 2522808
I0428 19:44:14.081588 25556 net.cpp:200] loss needs backward computation.
I0428 19:44:14.081595 25556 net.cpp:202] accuracy does not need backward computation.
I0428 19:44:14.081604 25556 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:44:14.081609 25556 net.cpp:200] relu3 needs backward computation.
I0428 19:44:14.081616 25556 net.cpp:200] ip3 needs backward computation.
I0428 19:44:14.081624 25556 net.cpp:200] relu2 needs backward computation.
I0428 19:44:14.081629 25556 net.cpp:200] ip2 needs backward computation.
I0428 19:44:14.081635 25556 net.cpp:200] relu1 needs backward computation.
I0428 19:44:14.081641 25556 net.cpp:200] ip1 needs backward computation.
I0428 19:44:14.081647 25556 net.cpp:200] pool1 needs backward computation.
I0428 19:44:14.081653 25556 net.cpp:200] conv1 needs backward computation.
I0428 19:44:14.081660 25556 net.cpp:200] pool0 needs backward computation.
I0428 19:44:14.081666 25556 net.cpp:200] conv0 needs backward computation.
I0428 19:44:14.081673 25556 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:44:14.081686 25556 net.cpp:202] mnist does not need backward computation.
I0428 19:44:14.081691 25556 net.cpp:244] This network produces output accuracy
I0428 19:44:14.081698 25556 net.cpp:244] This network produces output loss
I0428 19:44:14.081722 25556 net.cpp:257] Network initialization done.
I0428 19:44:14.081781 25556 solver.cpp:56] Solver scaffolding done.
I0428 19:44:14.082247 25556 caffe.cpp:248] Starting Optimization
I0428 19:44:14.082255 25556 solver.cpp:273] Solving LeNet
I0428 19:44:14.082262 25556 solver.cpp:274] Learning Rate Policy: inv
I0428 19:44:14.082464 25556 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:44:14.086822 25556 blocking_queue.cpp:49] Waiting for data
I0428 19:44:14.157614 25564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:14.158112 25556 solver.cpp:398]     Test net output #0: accuracy = 0.1148
I0428 19:44:14.158136 25556 solver.cpp:398]     Test net output #1: loss = 2.30353 (* 1 = 2.30353 loss)
I0428 19:44:14.160305 25556 solver.cpp:219] Iteration 0 (-1.74143e-31 iter/s, 0.0780042s/100 iters), loss = 2.30997
I0428 19:44:14.160341 25556 solver.cpp:238]     Train net output #0: loss = 2.30997 (* 1 = 2.30997 loss)
I0428 19:44:14.160362 25556 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:44:14.267621 25556 solver.cpp:219] Iteration 100 (932.199 iter/s, 0.107273s/100 iters), loss = 1.67281
I0428 19:44:14.267652 25556 solver.cpp:238]     Train net output #0: loss = 1.67281 (* 1 = 1.67281 loss)
I0428 19:44:14.267678 25556 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:44:14.377722 25556 solver.cpp:219] Iteration 200 (908.608 iter/s, 0.110058s/100 iters), loss = 0.984303
I0428 19:44:14.377758 25556 solver.cpp:238]     Train net output #0: loss = 0.984303 (* 1 = 0.984303 loss)
I0428 19:44:14.377771 25556 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:44:14.486660 25556 solver.cpp:219] Iteration 300 (918.348 iter/s, 0.108891s/100 iters), loss = 0.49144
I0428 19:44:14.486697 25556 solver.cpp:238]     Train net output #0: loss = 0.49144 (* 1 = 0.49144 loss)
I0428 19:44:14.486711 25556 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:44:14.588600 25556 solver.cpp:219] Iteration 400 (981.4 iter/s, 0.101895s/100 iters), loss = 0.496346
I0428 19:44:14.588632 25556 solver.cpp:238]     Train net output #0: loss = 0.496346 (* 1 = 0.496346 loss)
I0428 19:44:14.588644 25556 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:44:14.686944 25556 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:44:14.762498 25564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:14.763051 25556 solver.cpp:398]     Test net output #0: accuracy = 0.9249
I0428 19:44:14.763073 25556 solver.cpp:398]     Test net output #1: loss = 0.262108 (* 1 = 0.262108 loss)
I0428 19:44:14.764118 25556 solver.cpp:219] Iteration 500 (569.883 iter/s, 0.175475s/100 iters), loss = 0.282894
I0428 19:44:14.764160 25556 solver.cpp:238]     Train net output #0: loss = 0.282894 (* 1 = 0.282894 loss)
I0428 19:44:14.764184 25556 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:44:14.872632 25556 solver.cpp:219] Iteration 600 (921.959 iter/s, 0.108465s/100 iters), loss = 0.306538
I0428 19:44:14.872659 25556 solver.cpp:238]     Train net output #0: loss = 0.306538 (* 1 = 0.306538 loss)
I0428 19:44:14.872685 25556 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:44:14.979197 25556 solver.cpp:219] Iteration 700 (938.739 iter/s, 0.106526s/100 iters), loss = 0.274899
I0428 19:44:14.979226 25556 solver.cpp:238]     Train net output #0: loss = 0.274899 (* 1 = 0.274899 loss)
I0428 19:44:14.979236 25556 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:44:15.096931 25556 solver.cpp:219] Iteration 800 (849.695 iter/s, 0.117689s/100 iters), loss = 0.430271
I0428 19:44:15.096971 25556 solver.cpp:238]     Train net output #0: loss = 0.430271 (* 1 = 0.430271 loss)
I0428 19:44:15.096982 25556 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:44:15.209813 25556 solver.cpp:219] Iteration 900 (886.302 iter/s, 0.112828s/100 iters), loss = 0.31406
I0428 19:44:15.209848 25556 solver.cpp:238]     Train net output #0: loss = 0.31406 (* 1 = 0.31406 loss)
I0428 19:44:15.209857 25556 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:44:15.245020 25563 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:15.314513 25556 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:44:15.315624 25556 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:44:15.316519 25556 solver.cpp:311] Iteration 1000, loss = 0.120492
I0428 19:44:15.316577 25556 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:44:15.392442 25564 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:44:15.393036 25556 solver.cpp:398]     Test net output #0: accuracy = 0.9534
I0428 19:44:15.393069 25556 solver.cpp:398]     Test net output #1: loss = 0.153361 (* 1 = 0.153361 loss)
I0428 19:44:15.393076 25556 solver.cpp:316] Optimization Done.
I0428 19:44:15.393082 25556 caffe.cpp:259] Optimization Done.
