I0428 20:03:39.882077 30222 caffe.cpp:218] Using GPUs 0
I0428 20:03:39.911583 30222 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:40.359710 30222 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test956.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:40.359904 30222 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test956.prototxt
I0428 20:03:40.360622 30222 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:40.360643 30222 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:40.360738 30222 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:40.360882 30222 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:40.361003 30222 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:40.361037 30222 net.cpp:86] Creating Layer mnist
I0428 20:03:40.361048 30222 net.cpp:382] mnist -> data
I0428 20:03:40.361076 30222 net.cpp:382] mnist -> label
I0428 20:03:40.362248 30222 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:40.364414 30222 net.cpp:124] Setting up mnist
I0428 20:03:40.364446 30222 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:40.364454 30222 net.cpp:131] Top shape: 64 (64)
I0428 20:03:40.364475 30222 net.cpp:139] Memory required for data: 200960
I0428 20:03:40.364483 30222 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:40.364504 30222 net.cpp:86] Creating Layer conv0
I0428 20:03:40.364526 30222 net.cpp:408] conv0 <- data
I0428 20:03:40.364542 30222 net.cpp:382] conv0 -> conv0
I0428 20:03:40.590373 30222 net.cpp:124] Setting up conv0
I0428 20:03:40.590400 30222 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:40.590406 30222 net.cpp:139] Memory required for data: 1675520
I0428 20:03:40.590440 30222 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:40.590457 30222 net.cpp:86] Creating Layer pool0
I0428 20:03:40.590472 30222 net.cpp:408] pool0 <- conv0
I0428 20:03:40.590481 30222 net.cpp:382] pool0 -> pool0
I0428 20:03:40.590535 30222 net.cpp:124] Setting up pool0
I0428 20:03:40.590543 30222 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:40.590548 30222 net.cpp:139] Memory required for data: 2044160
I0428 20:03:40.590553 30222 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:40.590567 30222 net.cpp:86] Creating Layer conv1
I0428 20:03:40.590574 30222 net.cpp:408] conv1 <- pool0
I0428 20:03:40.590582 30222 net.cpp:382] conv1 -> conv1
I0428 20:03:40.592648 30222 net.cpp:124] Setting up conv1
I0428 20:03:40.592679 30222 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:40.592684 30222 net.cpp:139] Memory required for data: 3682560
I0428 20:03:40.592696 30222 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:40.592707 30222 net.cpp:86] Creating Layer pool1
I0428 20:03:40.592713 30222 net.cpp:408] pool1 <- conv1
I0428 20:03:40.592721 30222 net.cpp:382] pool1 -> pool1
I0428 20:03:40.592778 30222 net.cpp:124] Setting up pool1
I0428 20:03:40.592787 30222 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:40.592792 30222 net.cpp:139] Memory required for data: 4092160
I0428 20:03:40.592797 30222 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:40.592808 30222 net.cpp:86] Creating Layer ip1
I0428 20:03:40.592834 30222 net.cpp:408] ip1 <- pool1
I0428 20:03:40.592844 30222 net.cpp:382] ip1 -> ip1
I0428 20:03:40.594033 30222 net.cpp:124] Setting up ip1
I0428 20:03:40.594048 30222 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:40.594053 30222 net.cpp:139] Memory required for data: 4094720
I0428 20:03:40.594065 30222 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:40.594074 30222 net.cpp:86] Creating Layer relu1
I0428 20:03:40.594086 30222 net.cpp:408] relu1 <- ip1
I0428 20:03:40.594094 30222 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:40.594261 30222 net.cpp:124] Setting up relu1
I0428 20:03:40.594270 30222 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:40.594275 30222 net.cpp:139] Memory required for data: 4097280
I0428 20:03:40.594280 30222 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:40.594290 30222 net.cpp:86] Creating Layer ip2
I0428 20:03:40.594310 30222 net.cpp:408] ip2 <- ip1
I0428 20:03:40.594319 30222 net.cpp:382] ip2 -> ip2
I0428 20:03:40.594434 30222 net.cpp:124] Setting up ip2
I0428 20:03:40.594444 30222 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:40.594447 30222 net.cpp:139] Memory required for data: 4110080
I0428 20:03:40.594456 30222 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:40.594465 30222 net.cpp:86] Creating Layer relu2
I0428 20:03:40.594471 30222 net.cpp:408] relu2 <- ip2
I0428 20:03:40.594478 30222 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:40.595248 30222 net.cpp:124] Setting up relu2
I0428 20:03:40.595262 30222 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:40.595268 30222 net.cpp:139] Memory required for data: 4122880
I0428 20:03:40.595273 30222 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:40.595283 30222 net.cpp:86] Creating Layer ip3
I0428 20:03:40.595288 30222 net.cpp:408] ip3 <- ip2
I0428 20:03:40.595297 30222 net.cpp:382] ip3 -> ip3
I0428 20:03:40.595435 30222 net.cpp:124] Setting up ip3
I0428 20:03:40.595444 30222 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:40.595449 30222 net.cpp:139] Memory required for data: 4125440
I0428 20:03:40.595461 30222 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:40.595470 30222 net.cpp:86] Creating Layer relu3
I0428 20:03:40.595476 30222 net.cpp:408] relu3 <- ip3
I0428 20:03:40.595484 30222 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:40.595652 30222 net.cpp:124] Setting up relu3
I0428 20:03:40.595662 30222 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:40.595667 30222 net.cpp:139] Memory required for data: 4128000
I0428 20:03:40.595672 30222 layer_factory.hpp:77] Creating layer loss
I0428 20:03:40.595680 30222 net.cpp:86] Creating Layer loss
I0428 20:03:40.595687 30222 net.cpp:408] loss <- ip3
I0428 20:03:40.595693 30222 net.cpp:408] loss <- label
I0428 20:03:40.595701 30222 net.cpp:382] loss -> loss
I0428 20:03:40.595721 30222 layer_factory.hpp:77] Creating layer loss
I0428 20:03:40.595969 30222 net.cpp:124] Setting up loss
I0428 20:03:40.595979 30222 net.cpp:131] Top shape: (1)
I0428 20:03:40.595983 30222 net.cpp:134]     with loss weight 1
I0428 20:03:40.596002 30222 net.cpp:139] Memory required for data: 4128004
I0428 20:03:40.596009 30222 net.cpp:200] loss needs backward computation.
I0428 20:03:40.596014 30222 net.cpp:200] relu3 needs backward computation.
I0428 20:03:40.596019 30222 net.cpp:200] ip3 needs backward computation.
I0428 20:03:40.596024 30222 net.cpp:200] relu2 needs backward computation.
I0428 20:03:40.596027 30222 net.cpp:200] ip2 needs backward computation.
I0428 20:03:40.596031 30222 net.cpp:200] relu1 needs backward computation.
I0428 20:03:40.596035 30222 net.cpp:200] ip1 needs backward computation.
I0428 20:03:40.596040 30222 net.cpp:200] pool1 needs backward computation.
I0428 20:03:40.596045 30222 net.cpp:200] conv1 needs backward computation.
I0428 20:03:40.596050 30222 net.cpp:200] pool0 needs backward computation.
I0428 20:03:40.596055 30222 net.cpp:200] conv0 needs backward computation.
I0428 20:03:40.596060 30222 net.cpp:202] mnist does not need backward computation.
I0428 20:03:40.596063 30222 net.cpp:244] This network produces output loss
I0428 20:03:40.596079 30222 net.cpp:257] Network initialization done.
I0428 20:03:40.596472 30222 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test956.prototxt
I0428 20:03:40.596508 30222 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:40.596642 30222 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:03:40.596786 30222 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:40.596863 30222 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:40.596882 30222 net.cpp:86] Creating Layer mnist
I0428 20:03:40.596889 30222 net.cpp:382] mnist -> data
I0428 20:03:40.596900 30222 net.cpp:382] mnist -> label
I0428 20:03:40.597038 30222 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:40.599506 30222 net.cpp:124] Setting up mnist
I0428 20:03:40.599536 30222 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:40.599560 30222 net.cpp:131] Top shape: 100 (100)
I0428 20:03:40.599565 30222 net.cpp:139] Memory required for data: 314000
I0428 20:03:40.599570 30222 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:40.599601 30222 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:40.599607 30222 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:40.599616 30222 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:40.599627 30222 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:40.599725 30222 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:40.599733 30222 net.cpp:131] Top shape: 100 (100)
I0428 20:03:40.599740 30222 net.cpp:131] Top shape: 100 (100)
I0428 20:03:40.599745 30222 net.cpp:139] Memory required for data: 314800
I0428 20:03:40.599750 30222 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:40.599766 30222 net.cpp:86] Creating Layer conv0
I0428 20:03:40.599773 30222 net.cpp:408] conv0 <- data
I0428 20:03:40.599786 30222 net.cpp:382] conv0 -> conv0
I0428 20:03:40.601605 30222 net.cpp:124] Setting up conv0
I0428 20:03:40.601621 30222 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:40.601627 30222 net.cpp:139] Memory required for data: 2618800
I0428 20:03:40.601644 30222 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:40.601655 30222 net.cpp:86] Creating Layer pool0
I0428 20:03:40.601675 30222 net.cpp:408] pool0 <- conv0
I0428 20:03:40.601682 30222 net.cpp:382] pool0 -> pool0
I0428 20:03:40.601754 30222 net.cpp:124] Setting up pool0
I0428 20:03:40.601763 30222 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:40.601768 30222 net.cpp:139] Memory required for data: 3194800
I0428 20:03:40.601773 30222 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:40.601786 30222 net.cpp:86] Creating Layer conv1
I0428 20:03:40.601794 30222 net.cpp:408] conv1 <- pool0
I0428 20:03:40.601804 30222 net.cpp:382] conv1 -> conv1
I0428 20:03:40.603572 30222 net.cpp:124] Setting up conv1
I0428 20:03:40.603587 30222 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:40.603593 30222 net.cpp:139] Memory required for data: 5754800
I0428 20:03:40.603608 30222 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:40.603618 30222 net.cpp:86] Creating Layer pool1
I0428 20:03:40.603624 30222 net.cpp:408] pool1 <- conv1
I0428 20:03:40.603634 30222 net.cpp:382] pool1 -> pool1
I0428 20:03:40.603679 30222 net.cpp:124] Setting up pool1
I0428 20:03:40.603688 30222 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:40.603693 30222 net.cpp:139] Memory required for data: 6394800
I0428 20:03:40.603698 30222 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:40.603710 30222 net.cpp:86] Creating Layer ip1
I0428 20:03:40.603716 30222 net.cpp:408] ip1 <- pool1
I0428 20:03:40.603724 30222 net.cpp:382] ip1 -> ip1
I0428 20:03:40.603950 30222 net.cpp:124] Setting up ip1
I0428 20:03:40.603960 30222 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:40.603991 30222 net.cpp:139] Memory required for data: 6398800
I0428 20:03:40.604004 30222 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:40.604015 30222 net.cpp:86] Creating Layer relu1
I0428 20:03:40.604022 30222 net.cpp:408] relu1 <- ip1
I0428 20:03:40.604030 30222 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:40.604219 30222 net.cpp:124] Setting up relu1
I0428 20:03:40.604230 30222 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:40.604250 30222 net.cpp:139] Memory required for data: 6402800
I0428 20:03:40.604255 30222 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:40.604269 30222 net.cpp:86] Creating Layer ip2
I0428 20:03:40.604275 30222 net.cpp:408] ip2 <- ip1
I0428 20:03:40.604285 30222 net.cpp:382] ip2 -> ip2
I0428 20:03:40.604429 30222 net.cpp:124] Setting up ip2
I0428 20:03:40.604439 30222 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:40.604442 30222 net.cpp:139] Memory required for data: 6422800
I0428 20:03:40.604451 30222 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:40.604460 30222 net.cpp:86] Creating Layer relu2
I0428 20:03:40.604465 30222 net.cpp:408] relu2 <- ip2
I0428 20:03:40.604471 30222 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:40.604681 30222 net.cpp:124] Setting up relu2
I0428 20:03:40.604691 30222 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:40.604696 30222 net.cpp:139] Memory required for data: 6442800
I0428 20:03:40.604701 30222 layer_factory.hpp:77] Creating layer ip3
I0428 20:03:40.604710 30222 net.cpp:86] Creating Layer ip3
I0428 20:03:40.604715 30222 net.cpp:408] ip3 <- ip2
I0428 20:03:40.604727 30222 net.cpp:382] ip3 -> ip3
I0428 20:03:40.604866 30222 net.cpp:124] Setting up ip3
I0428 20:03:40.604876 30222 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:40.604882 30222 net.cpp:139] Memory required for data: 6446800
I0428 20:03:40.604894 30222 layer_factory.hpp:77] Creating layer relu3
I0428 20:03:40.604907 30222 net.cpp:86] Creating Layer relu3
I0428 20:03:40.604912 30222 net.cpp:408] relu3 <- ip3
I0428 20:03:40.604920 30222 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:03:40.605823 30222 net.cpp:124] Setting up relu3
I0428 20:03:40.605835 30222 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:40.605841 30222 net.cpp:139] Memory required for data: 6450800
I0428 20:03:40.605846 30222 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:03:40.605854 30222 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:03:40.605860 30222 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:03:40.605870 30222 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:03:40.605880 30222 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:03:40.605926 30222 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:03:40.605934 30222 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:40.605942 30222 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:40.605947 30222 net.cpp:139] Memory required for data: 6458800
I0428 20:03:40.605952 30222 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:40.605962 30222 net.cpp:86] Creating Layer accuracy
I0428 20:03:40.605968 30222 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:03:40.605975 30222 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:40.605985 30222 net.cpp:382] accuracy -> accuracy
I0428 20:03:40.605999 30222 net.cpp:124] Setting up accuracy
I0428 20:03:40.606007 30222 net.cpp:131] Top shape: (1)
I0428 20:03:40.606012 30222 net.cpp:139] Memory required for data: 6458804
I0428 20:03:40.606017 30222 layer_factory.hpp:77] Creating layer loss
I0428 20:03:40.606025 30222 net.cpp:86] Creating Layer loss
I0428 20:03:40.606030 30222 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:03:40.606037 30222 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:40.606045 30222 net.cpp:382] loss -> loss
I0428 20:03:40.606053 30222 layer_factory.hpp:77] Creating layer loss
I0428 20:03:40.606343 30222 net.cpp:124] Setting up loss
I0428 20:03:40.606367 30222 net.cpp:131] Top shape: (1)
I0428 20:03:40.606372 30222 net.cpp:134]     with loss weight 1
I0428 20:03:40.606392 30222 net.cpp:139] Memory required for data: 6458808
I0428 20:03:40.606398 30222 net.cpp:200] loss needs backward computation.
I0428 20:03:40.606405 30222 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:40.606410 30222 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:03:40.606416 30222 net.cpp:200] relu3 needs backward computation.
I0428 20:03:40.606421 30222 net.cpp:200] ip3 needs backward computation.
I0428 20:03:40.606427 30222 net.cpp:200] relu2 needs backward computation.
I0428 20:03:40.606431 30222 net.cpp:200] ip2 needs backward computation.
I0428 20:03:40.606436 30222 net.cpp:200] relu1 needs backward computation.
I0428 20:03:40.606459 30222 net.cpp:200] ip1 needs backward computation.
I0428 20:03:40.606464 30222 net.cpp:200] pool1 needs backward computation.
I0428 20:03:40.606482 30222 net.cpp:200] conv1 needs backward computation.
I0428 20:03:40.606488 30222 net.cpp:200] pool0 needs backward computation.
I0428 20:03:40.606493 30222 net.cpp:200] conv0 needs backward computation.
I0428 20:03:40.606499 30222 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:40.606505 30222 net.cpp:202] mnist does not need backward computation.
I0428 20:03:40.606510 30222 net.cpp:244] This network produces output accuracy
I0428 20:03:40.606516 30222 net.cpp:244] This network produces output loss
I0428 20:03:40.606534 30222 net.cpp:257] Network initialization done.
I0428 20:03:40.606585 30222 solver.cpp:56] Solver scaffolding done.
I0428 20:03:40.606981 30222 caffe.cpp:248] Starting Optimization
I0428 20:03:40.607002 30222 solver.cpp:273] Solving LeNet
I0428 20:03:40.607007 30222 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:40.607910 30222 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:40.613216 30222 blocking_queue.cpp:49] Waiting for data
I0428 20:03:40.683971 30229 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:40.684597 30222 solver.cpp:398]     Test net output #0: accuracy = 0.1053
I0428 20:03:40.684620 30222 solver.cpp:398]     Test net output #1: loss = 2.30829 (* 1 = 2.30829 loss)
I0428 20:03:40.688305 30222 solver.cpp:219] Iteration 0 (-1.46561e-31 iter/s, 0.0812595s/100 iters), loss = 2.29812
I0428 20:03:40.688333 30222 solver.cpp:238]     Train net output #0: loss = 2.29812 (* 1 = 2.29812 loss)
I0428 20:03:40.688366 30222 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:40.832840 30222 solver.cpp:219] Iteration 100 (692.073 iter/s, 0.144493s/100 iters), loss = 0.277032
I0428 20:03:40.832868 30222 solver.cpp:238]     Train net output #0: loss = 0.277032 (* 1 = 0.277032 loss)
I0428 20:03:40.832892 30222 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:40.978900 30222 solver.cpp:219] Iteration 200 (684.826 iter/s, 0.146022s/100 iters), loss = 0.220993
I0428 20:03:40.978929 30222 solver.cpp:238]     Train net output #0: loss = 0.220993 (* 1 = 0.220993 loss)
I0428 20:03:40.978940 30222 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:41.127643 30222 solver.cpp:219] Iteration 300 (672.48 iter/s, 0.148703s/100 iters), loss = 0.216661
I0428 20:03:41.127671 30222 solver.cpp:238]     Train net output #0: loss = 0.216661 (* 1 = 0.216661 loss)
I0428 20:03:41.127696 30222 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:41.273690 30222 solver.cpp:219] Iteration 400 (684.884 iter/s, 0.14601s/100 iters), loss = 0.207955
I0428 20:03:41.273717 30222 solver.cpp:238]     Train net output #0: loss = 0.207955 (* 1 = 0.207955 loss)
I0428 20:03:41.273742 30222 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:41.417780 30222 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:41.473573 30229 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:41.474517 30222 solver.cpp:398]     Test net output #0: accuracy = 0.9568
I0428 20:03:41.474539 30222 solver.cpp:398]     Test net output #1: loss = 0.14041 (* 1 = 0.14041 loss)
I0428 20:03:41.475968 30222 solver.cpp:219] Iteration 500 (494.502 iter/s, 0.202224s/100 iters), loss = 0.0798517
I0428 20:03:41.476007 30222 solver.cpp:238]     Train net output #0: loss = 0.0798518 (* 1 = 0.0798518 loss)
I0428 20:03:41.476018 30222 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:41.627435 30222 solver.cpp:219] Iteration 600 (660.429 iter/s, 0.151417s/100 iters), loss = 0.0995088
I0428 20:03:41.627465 30222 solver.cpp:238]     Train net output #0: loss = 0.0995089 (* 1 = 0.0995089 loss)
I0428 20:03:41.627490 30222 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:41.785056 30222 solver.cpp:219] Iteration 700 (634.601 iter/s, 0.157579s/100 iters), loss = 0.0983782
I0428 20:03:41.785097 30222 solver.cpp:238]     Train net output #0: loss = 0.0983783 (* 1 = 0.0983783 loss)
I0428 20:03:41.785120 30222 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:41.939329 30222 solver.cpp:219] Iteration 800 (648.413 iter/s, 0.154223s/100 iters), loss = 0.319028
I0428 20:03:41.939366 30222 solver.cpp:238]     Train net output #0: loss = 0.319028 (* 1 = 0.319028 loss)
I0428 20:03:41.939379 30222 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:42.101442 30222 solver.cpp:219] Iteration 900 (617.043 iter/s, 0.162063s/100 iters), loss = 0.198935
I0428 20:03:42.101480 30222 solver.cpp:238]     Train net output #0: loss = 0.198935 (* 1 = 0.198935 loss)
I0428 20:03:42.101493 30222 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:42.153985 30228 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:42.253121 30222 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:42.254859 30222 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:42.255651 30222 solver.cpp:311] Iteration 1000, loss = 0.0751562
I0428 20:03:42.255668 30222 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:42.330848 30229 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:42.331459 30222 solver.cpp:398]     Test net output #0: accuracy = 0.9722
I0428 20:03:42.331480 30222 solver.cpp:398]     Test net output #1: loss = 0.0869157 (* 1 = 0.0869157 loss)
I0428 20:03:42.331486 30222 solver.cpp:316] Optimization Done.
I0428 20:03:42.331491 30222 caffe.cpp:259] Optimization Done.
