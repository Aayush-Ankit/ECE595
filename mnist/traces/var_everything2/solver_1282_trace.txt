I0428 20:16:55.106942   757 caffe.cpp:218] Using GPUs 0
I0428 20:16:55.145112   757 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:16:55.656720   757 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1282.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:16:55.656885   757 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1282.prototxt
I0428 20:16:55.657546   757 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:16:55.657577   757 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:16:55.657737   757 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:55.657855   757 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:55.657989   757 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:16:55.658026   757 net.cpp:86] Creating Layer mnist
I0428 20:16:55.658046   757 net.cpp:382] mnist -> data
I0428 20:16:55.658078   757 net.cpp:382] mnist -> label
I0428 20:16:55.659626   757 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:16:55.662366   757 net.cpp:124] Setting up mnist
I0428 20:16:55.662386   757 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:16:55.662394   757 net.cpp:131] Top shape: 64 (64)
I0428 20:16:55.662396   757 net.cpp:139] Memory required for data: 200960
I0428 20:16:55.662403   757 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:55.662420   757 net.cpp:86] Creating Layer conv0
I0428 20:16:55.662442   757 net.cpp:408] conv0 <- data
I0428 20:16:55.662464   757 net.cpp:382] conv0 -> conv0
I0428 20:16:55.948011   757 net.cpp:124] Setting up conv0
I0428 20:16:55.948038   757 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:16:55.948042   757 net.cpp:139] Memory required for data: 7573760
I0428 20:16:55.948057   757 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:55.948070   757 net.cpp:86] Creating Layer pool0
I0428 20:16:55.948074   757 net.cpp:408] pool0 <- conv0
I0428 20:16:55.948079   757 net.cpp:382] pool0 -> pool0
I0428 20:16:55.948137   757 net.cpp:124] Setting up pool0
I0428 20:16:55.948148   757 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:16:55.948153   757 net.cpp:139] Memory required for data: 9416960
I0428 20:16:55.948158   757 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:55.948173   757 net.cpp:86] Creating Layer conv1
I0428 20:16:55.948179   757 net.cpp:408] conv1 <- pool0
I0428 20:16:55.948186   757 net.cpp:382] conv1 -> conv1
I0428 20:16:55.951273   757 net.cpp:124] Setting up conv1
I0428 20:16:55.951288   757 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:16:55.951292   757 net.cpp:139] Memory required for data: 9498880
I0428 20:16:55.951300   757 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:55.951308   757 net.cpp:86] Creating Layer pool1
I0428 20:16:55.951311   757 net.cpp:408] pool1 <- conv1
I0428 20:16:55.951316   757 net.cpp:382] pool1 -> pool1
I0428 20:16:55.951361   757 net.cpp:124] Setting up pool1
I0428 20:16:55.951371   757 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:16:55.951376   757 net.cpp:139] Memory required for data: 9519360
I0428 20:16:55.951382   757 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:55.951393   757 net.cpp:86] Creating Layer ip1
I0428 20:16:55.951398   757 net.cpp:408] ip1 <- pool1
I0428 20:16:55.951406   757 net.cpp:382] ip1 -> ip1
I0428 20:16:55.951581   757 net.cpp:124] Setting up ip1
I0428 20:16:55.951594   757 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:55.951599   757 net.cpp:139] Memory required for data: 9532160
I0428 20:16:55.951611   757 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:55.951619   757 net.cpp:86] Creating Layer relu1
I0428 20:16:55.951625   757 net.cpp:408] relu1 <- ip1
I0428 20:16:55.951632   757 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:55.951859   757 net.cpp:124] Setting up relu1
I0428 20:16:55.951872   757 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:16:55.951879   757 net.cpp:139] Memory required for data: 9544960
I0428 20:16:55.951884   757 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:55.951892   757 net.cpp:86] Creating Layer ip2
I0428 20:16:55.951898   757 net.cpp:408] ip2 <- ip1
I0428 20:16:55.951906   757 net.cpp:382] ip2 -> ip2
I0428 20:16:55.952051   757 net.cpp:124] Setting up ip2
I0428 20:16:55.952065   757 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:16:55.952071   757 net.cpp:139] Memory required for data: 9551360
I0428 20:16:55.952080   757 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:55.952090   757 net.cpp:86] Creating Layer relu2
I0428 20:16:55.952095   757 net.cpp:408] relu2 <- ip2
I0428 20:16:55.952103   757 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:55.953126   757 net.cpp:124] Setting up relu2
I0428 20:16:55.953145   757 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:16:55.953150   757 net.cpp:139] Memory required for data: 9557760
I0428 20:16:55.953156   757 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:55.953167   757 net.cpp:86] Creating Layer ip3
I0428 20:16:55.953173   757 net.cpp:408] ip3 <- ip2
I0428 20:16:55.953182   757 net.cpp:382] ip3 -> ip3
I0428 20:16:55.953320   757 net.cpp:124] Setting up ip3
I0428 20:16:55.953333   757 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:55.953339   757 net.cpp:139] Memory required for data: 9560320
I0428 20:16:55.953351   757 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:55.953359   757 net.cpp:86] Creating Layer relu3
I0428 20:16:55.953366   757 net.cpp:408] relu3 <- ip3
I0428 20:16:55.953372   757 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:55.953606   757 net.cpp:124] Setting up relu3
I0428 20:16:55.953620   757 net.cpp:131] Top shape: 64 10 (640)
I0428 20:16:55.953626   757 net.cpp:139] Memory required for data: 9562880
I0428 20:16:55.953632   757 layer_factory.hpp:77] Creating layer loss
I0428 20:16:55.953642   757 net.cpp:86] Creating Layer loss
I0428 20:16:55.953647   757 net.cpp:408] loss <- ip3
I0428 20:16:55.953654   757 net.cpp:408] loss <- label
I0428 20:16:55.953662   757 net.cpp:382] loss -> loss
I0428 20:16:55.953685   757 layer_factory.hpp:77] Creating layer loss
I0428 20:16:55.954020   757 net.cpp:124] Setting up loss
I0428 20:16:55.954033   757 net.cpp:131] Top shape: (1)
I0428 20:16:55.954038   757 net.cpp:134]     with loss weight 1
I0428 20:16:55.954057   757 net.cpp:139] Memory required for data: 9562884
I0428 20:16:55.954063   757 net.cpp:200] loss needs backward computation.
I0428 20:16:55.954069   757 net.cpp:200] relu3 needs backward computation.
I0428 20:16:55.954074   757 net.cpp:200] ip3 needs backward computation.
I0428 20:16:55.954079   757 net.cpp:200] relu2 needs backward computation.
I0428 20:16:55.954084   757 net.cpp:200] ip2 needs backward computation.
I0428 20:16:55.954088   757 net.cpp:200] relu1 needs backward computation.
I0428 20:16:55.954093   757 net.cpp:200] ip1 needs backward computation.
I0428 20:16:55.954098   757 net.cpp:200] pool1 needs backward computation.
I0428 20:16:55.954103   757 net.cpp:200] conv1 needs backward computation.
I0428 20:16:55.954108   757 net.cpp:200] pool0 needs backward computation.
I0428 20:16:55.954113   757 net.cpp:200] conv0 needs backward computation.
I0428 20:16:55.954120   757 net.cpp:202] mnist does not need backward computation.
I0428 20:16:55.954140   757 net.cpp:244] This network produces output loss
I0428 20:16:55.954169   757 net.cpp:257] Network initialization done.
I0428 20:16:55.954672   757 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1282.prototxt
I0428 20:16:55.954713   757 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:16:55.954860   757 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:16:55.954983   757 layer_factory.hpp:77] Creating layer mnist
I0428 20:16:55.955040   757 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:16:55.955057   757 net.cpp:86] Creating Layer mnist
I0428 20:16:55.955068   757 net.cpp:382] mnist -> data
I0428 20:16:55.955080   757 net.cpp:382] mnist -> label
I0428 20:16:55.955220   757 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:16:55.957604   757 net.cpp:124] Setting up mnist
I0428 20:16:55.957619   757 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:16:55.957624   757 net.cpp:131] Top shape: 100 (100)
I0428 20:16:55.957628   757 net.cpp:139] Memory required for data: 314000
I0428 20:16:55.957630   757 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:16:55.957640   757 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:16:55.957643   757 net.cpp:408] label_mnist_1_split <- label
I0428 20:16:55.957660   757 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:16:55.957669   757 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:16:55.957728   757 net.cpp:124] Setting up label_mnist_1_split
I0428 20:16:55.957751   757 net.cpp:131] Top shape: 100 (100)
I0428 20:16:55.957761   757 net.cpp:131] Top shape: 100 (100)
I0428 20:16:55.957765   757 net.cpp:139] Memory required for data: 314800
I0428 20:16:55.957770   757 layer_factory.hpp:77] Creating layer conv0
I0428 20:16:55.957783   757 net.cpp:86] Creating Layer conv0
I0428 20:16:55.957788   757 net.cpp:408] conv0 <- data
I0428 20:16:55.957798   757 net.cpp:382] conv0 -> conv0
I0428 20:16:55.959741   757 net.cpp:124] Setting up conv0
I0428 20:16:55.959755   757 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:16:55.959759   757 net.cpp:139] Memory required for data: 11834800
I0428 20:16:55.959769   757 layer_factory.hpp:77] Creating layer pool0
I0428 20:16:55.959774   757 net.cpp:86] Creating Layer pool0
I0428 20:16:55.959779   757 net.cpp:408] pool0 <- conv0
I0428 20:16:55.959784   757 net.cpp:382] pool0 -> pool0
I0428 20:16:55.959889   757 net.cpp:124] Setting up pool0
I0428 20:16:55.959903   757 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:16:55.959908   757 net.cpp:139] Memory required for data: 14714800
I0428 20:16:55.959915   757 layer_factory.hpp:77] Creating layer conv1
I0428 20:16:55.959930   757 net.cpp:86] Creating Layer conv1
I0428 20:16:55.959935   757 net.cpp:408] conv1 <- pool0
I0428 20:16:55.959944   757 net.cpp:382] conv1 -> conv1
I0428 20:16:55.961959   757 net.cpp:124] Setting up conv1
I0428 20:16:55.961989   757 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:16:55.961992   757 net.cpp:139] Memory required for data: 14842800
I0428 20:16:55.962003   757 layer_factory.hpp:77] Creating layer pool1
I0428 20:16:55.962021   757 net.cpp:86] Creating Layer pool1
I0428 20:16:55.962025   757 net.cpp:408] pool1 <- conv1
I0428 20:16:55.962030   757 net.cpp:382] pool1 -> pool1
I0428 20:16:55.962083   757 net.cpp:124] Setting up pool1
I0428 20:16:55.962093   757 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:16:55.962098   757 net.cpp:139] Memory required for data: 14874800
I0428 20:16:55.962105   757 layer_factory.hpp:77] Creating layer ip1
I0428 20:16:55.962116   757 net.cpp:86] Creating Layer ip1
I0428 20:16:55.962121   757 net.cpp:408] ip1 <- pool1
I0428 20:16:55.962131   757 net.cpp:382] ip1 -> ip1
I0428 20:16:55.962312   757 net.cpp:124] Setting up ip1
I0428 20:16:55.962326   757 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:55.962343   757 net.cpp:139] Memory required for data: 14894800
I0428 20:16:55.962355   757 layer_factory.hpp:77] Creating layer relu1
I0428 20:16:55.962365   757 net.cpp:86] Creating Layer relu1
I0428 20:16:55.962371   757 net.cpp:408] relu1 <- ip1
I0428 20:16:55.962378   757 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:16:55.962671   757 net.cpp:124] Setting up relu1
I0428 20:16:55.962698   757 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:16:55.962718   757 net.cpp:139] Memory required for data: 14914800
I0428 20:16:55.962723   757 layer_factory.hpp:77] Creating layer ip2
I0428 20:16:55.962750   757 net.cpp:86] Creating Layer ip2
I0428 20:16:55.962755   757 net.cpp:408] ip2 <- ip1
I0428 20:16:55.962764   757 net.cpp:382] ip2 -> ip2
I0428 20:16:55.962973   757 net.cpp:124] Setting up ip2
I0428 20:16:55.962990   757 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:16:55.962996   757 net.cpp:139] Memory required for data: 14924800
I0428 20:16:55.963006   757 layer_factory.hpp:77] Creating layer relu2
I0428 20:16:55.963016   757 net.cpp:86] Creating Layer relu2
I0428 20:16:55.963022   757 net.cpp:408] relu2 <- ip2
I0428 20:16:55.963030   757 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:16:55.963281   757 net.cpp:124] Setting up relu2
I0428 20:16:55.963294   757 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:16:55.963300   757 net.cpp:139] Memory required for data: 14934800
I0428 20:16:55.963305   757 layer_factory.hpp:77] Creating layer ip3
I0428 20:16:55.963315   757 net.cpp:86] Creating Layer ip3
I0428 20:16:55.963322   757 net.cpp:408] ip3 <- ip2
I0428 20:16:55.963331   757 net.cpp:382] ip3 -> ip3
I0428 20:16:55.963487   757 net.cpp:124] Setting up ip3
I0428 20:16:55.963497   757 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:55.963502   757 net.cpp:139] Memory required for data: 14938800
I0428 20:16:55.963515   757 layer_factory.hpp:77] Creating layer relu3
I0428 20:16:55.963521   757 net.cpp:86] Creating Layer relu3
I0428 20:16:55.963526   757 net.cpp:408] relu3 <- ip3
I0428 20:16:55.963546   757 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:16:55.964727   757 net.cpp:124] Setting up relu3
I0428 20:16:55.964756   757 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:55.964761   757 net.cpp:139] Memory required for data: 14942800
I0428 20:16:55.964767   757 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:16:55.964776   757 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:16:55.964782   757 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:16:55.964792   757 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:16:55.964802   757 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:16:55.964906   757 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:16:55.964918   757 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:55.964926   757 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:16:55.964931   757 net.cpp:139] Memory required for data: 14950800
I0428 20:16:55.964936   757 layer_factory.hpp:77] Creating layer accuracy
I0428 20:16:55.964946   757 net.cpp:86] Creating Layer accuracy
I0428 20:16:55.964953   757 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:16:55.964960   757 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:16:55.964968   757 net.cpp:382] accuracy -> accuracy
I0428 20:16:55.964979   757 net.cpp:124] Setting up accuracy
I0428 20:16:55.964985   757 net.cpp:131] Top shape: (1)
I0428 20:16:55.964990   757 net.cpp:139] Memory required for data: 14950804
I0428 20:16:55.964995   757 layer_factory.hpp:77] Creating layer loss
I0428 20:16:55.965005   757 net.cpp:86] Creating Layer loss
I0428 20:16:55.965010   757 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:16:55.965016   757 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:16:55.965023   757 net.cpp:382] loss -> loss
I0428 20:16:55.965032   757 layer_factory.hpp:77] Creating layer loss
I0428 20:16:55.965469   757 net.cpp:124] Setting up loss
I0428 20:16:55.965494   757 net.cpp:131] Top shape: (1)
I0428 20:16:55.965500   757 net.cpp:134]     with loss weight 1
I0428 20:16:55.965523   757 net.cpp:139] Memory required for data: 14950808
I0428 20:16:55.965529   757 net.cpp:200] loss needs backward computation.
I0428 20:16:55.965550   757 net.cpp:202] accuracy does not need backward computation.
I0428 20:16:55.965556   757 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:16:55.965561   757 net.cpp:200] relu3 needs backward computation.
I0428 20:16:55.965566   757 net.cpp:200] ip3 needs backward computation.
I0428 20:16:55.965571   757 net.cpp:200] relu2 needs backward computation.
I0428 20:16:55.965576   757 net.cpp:200] ip2 needs backward computation.
I0428 20:16:55.965580   757 net.cpp:200] relu1 needs backward computation.
I0428 20:16:55.965585   757 net.cpp:200] ip1 needs backward computation.
I0428 20:16:55.965590   757 net.cpp:200] pool1 needs backward computation.
I0428 20:16:55.965595   757 net.cpp:200] conv1 needs backward computation.
I0428 20:16:55.965600   757 net.cpp:200] pool0 needs backward computation.
I0428 20:16:55.965606   757 net.cpp:200] conv0 needs backward computation.
I0428 20:16:55.965612   757 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:16:55.965617   757 net.cpp:202] mnist does not need backward computation.
I0428 20:16:55.965622   757 net.cpp:244] This network produces output accuracy
I0428 20:16:55.965628   757 net.cpp:244] This network produces output loss
I0428 20:16:55.965647   757 net.cpp:257] Network initialization done.
I0428 20:16:55.965721   757 solver.cpp:56] Solver scaffolding done.
I0428 20:16:55.966243   757 caffe.cpp:248] Starting Optimization
I0428 20:16:55.966265   757 solver.cpp:273] Solving LeNet
I0428 20:16:55.966285   757 solver.cpp:274] Learning Rate Policy: inv
I0428 20:16:55.966503   757 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:16:55.974695   757 blocking_queue.cpp:49] Waiting for data
I0428 20:16:56.035496   764 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:56.036684   757 solver.cpp:398]     Test net output #0: accuracy = 0.1354
I0428 20:16:56.036720   757 solver.cpp:398]     Test net output #1: loss = 2.32609 (* 1 = 2.32609 loss)
I0428 20:16:56.041677   757 solver.cpp:219] Iteration 0 (-6.02724e-37 iter/s, 0.0753614s/100 iters), loss = 2.2965
I0428 20:16:56.041718   757 solver.cpp:238]     Train net output #0: loss = 2.2965 (* 1 = 2.2965 loss)
I0428 20:16:56.041730   757 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:16:56.156308   757 solver.cpp:219] Iteration 100 (872.796 iter/s, 0.114574s/100 iters), loss = 0.73101
I0428 20:16:56.156350   757 solver.cpp:238]     Train net output #0: loss = 0.73101 (* 1 = 0.73101 loss)
I0428 20:16:56.156358   757 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:16:56.273512   757 solver.cpp:219] Iteration 200 (853.594 iter/s, 0.117152s/100 iters), loss = 0.22868
I0428 20:16:56.273553   757 solver.cpp:238]     Train net output #0: loss = 0.22868 (* 1 = 0.22868 loss)
I0428 20:16:56.273561   757 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:16:56.404974   757 solver.cpp:219] Iteration 300 (760.895 iter/s, 0.131424s/100 iters), loss = 0.300765
I0428 20:16:56.404999   757 solver.cpp:238]     Train net output #0: loss = 0.300765 (* 1 = 0.300765 loss)
I0428 20:16:56.405007   757 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:16:56.522817   757 solver.cpp:219] Iteration 400 (848.852 iter/s, 0.117806s/100 iters), loss = 0.204002
I0428 20:16:56.522860   757 solver.cpp:238]     Train net output #0: loss = 0.204002 (* 1 = 0.204002 loss)
I0428 20:16:56.522866   757 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:16:56.642304   757 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:16:56.711274   764 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:56.712512   757 solver.cpp:398]     Test net output #0: accuracy = 0.9524
I0428 20:16:56.712550   757 solver.cpp:398]     Test net output #1: loss = 0.147156 (* 1 = 0.147156 loss)
I0428 20:16:56.713901   757 solver.cpp:219] Iteration 500 (523.441 iter/s, 0.191044s/100 iters), loss = 0.145381
I0428 20:16:56.713961   757 solver.cpp:238]     Train net output #0: loss = 0.145381 (* 1 = 0.145381 loss)
I0428 20:16:56.713985   757 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:16:56.843032   757 solver.cpp:219] Iteration 600 (774.828 iter/s, 0.129061s/100 iters), loss = 0.136293
I0428 20:16:56.843073   757 solver.cpp:238]     Train net output #0: loss = 0.136293 (* 1 = 0.136293 loss)
I0428 20:16:56.843080   757 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:16:56.960247   757 solver.cpp:219] Iteration 700 (853.511 iter/s, 0.117163s/100 iters), loss = 0.266628
I0428 20:16:56.960289   757 solver.cpp:238]     Train net output #0: loss = 0.266628 (* 1 = 0.266628 loss)
I0428 20:16:56.960296   757 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:16:57.075467   757 solver.cpp:219] Iteration 800 (868.295 iter/s, 0.115168s/100 iters), loss = 0.255914
I0428 20:16:57.075495   757 solver.cpp:238]     Train net output #0: loss = 0.255915 (* 1 = 0.255915 loss)
I0428 20:16:57.075501   757 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:16:57.192240   757 solver.cpp:219] Iteration 900 (856.641 iter/s, 0.116735s/100 iters), loss = 0.159685
I0428 20:16:57.192282   757 solver.cpp:238]     Train net output #0: loss = 0.159686 (* 1 = 0.159686 loss)
I0428 20:16:57.192289   757 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:16:57.231331   763 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:57.309051   757 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:16:57.310293   757 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:16:57.311276   757 solver.cpp:311] Iteration 1000, loss = 0.09598
I0428 20:16:57.311305   757 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:16:57.410281   764 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:16:57.411154   757 solver.cpp:398]     Test net output #0: accuracy = 0.9709
I0428 20:16:57.411182   757 solver.cpp:398]     Test net output #1: loss = 0.0941805 (* 1 = 0.0941805 loss)
I0428 20:16:57.411200   757 solver.cpp:316] Optimization Done.
I0428 20:16:57.411206   757 caffe.cpp:259] Optimization Done.
