I0428 19:32:02.949457 22740 caffe.cpp:218] Using GPUs 0
I0428 19:32:02.989292 22740 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:03.510665 22740 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test141.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:03.510838 22740 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test141.prototxt
I0428 19:32:03.511215 22740 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:03.511236 22740 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:03.511334 22740 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:03.511443 22740 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:03.511576 22740 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:03.511610 22740 net.cpp:86] Creating Layer mnist
I0428 19:32:03.511623 22740 net.cpp:382] mnist -> data
I0428 19:32:03.511654 22740 net.cpp:382] mnist -> label
I0428 19:32:03.512897 22740 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:03.515378 22740 net.cpp:124] Setting up mnist
I0428 19:32:03.515399 22740 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:03.515409 22740 net.cpp:131] Top shape: 64 (64)
I0428 19:32:03.515415 22740 net.cpp:139] Memory required for data: 200960
I0428 19:32:03.515426 22740 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:03.515451 22740 net.cpp:86] Creating Layer conv0
I0428 19:32:03.515462 22740 net.cpp:408] conv0 <- data
I0428 19:32:03.515482 22740 net.cpp:382] conv0 -> conv0
I0428 19:32:03.804955 22740 net.cpp:124] Setting up conv0
I0428 19:32:03.804986 22740 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:03.804991 22740 net.cpp:139] Memory required for data: 1675520
I0428 19:32:03.805013 22740 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:03.805032 22740 net.cpp:86] Creating Layer pool0
I0428 19:32:03.805058 22740 net.cpp:408] pool0 <- conv0
I0428 19:32:03.805070 22740 net.cpp:382] pool0 -> pool0
I0428 19:32:03.805145 22740 net.cpp:124] Setting up pool0
I0428 19:32:03.805155 22740 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:03.805160 22740 net.cpp:139] Memory required for data: 2044160
I0428 19:32:03.805166 22740 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:03.805182 22740 net.cpp:86] Creating Layer ip1
I0428 19:32:03.805189 22740 net.cpp:408] ip1 <- pool0
I0428 19:32:03.805198 22740 net.cpp:382] ip1 -> ip1
I0428 19:32:03.805521 22740 net.cpp:124] Setting up ip1
I0428 19:32:03.805531 22740 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:03.805537 22740 net.cpp:139] Memory required for data: 2050560
I0428 19:32:03.805549 22740 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:03.805559 22740 net.cpp:86] Creating Layer relu1
I0428 19:32:03.805568 22740 net.cpp:408] relu1 <- ip1
I0428 19:32:03.805577 22740 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:03.805754 22740 net.cpp:124] Setting up relu1
I0428 19:32:03.805764 22740 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:03.805770 22740 net.cpp:139] Memory required for data: 2056960
I0428 19:32:03.805775 22740 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:03.805785 22740 net.cpp:86] Creating Layer ip2
I0428 19:32:03.805791 22740 net.cpp:408] ip2 <- ip1
I0428 19:32:03.805800 22740 net.cpp:382] ip2 -> ip2
I0428 19:32:03.805905 22740 net.cpp:124] Setting up ip2
I0428 19:32:03.805914 22740 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:03.805920 22740 net.cpp:139] Memory required for data: 2063360
I0428 19:32:03.805932 22740 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:03.805941 22740 net.cpp:86] Creating Layer relu2
I0428 19:32:03.805948 22740 net.cpp:408] relu2 <- ip2
I0428 19:32:03.805955 22740 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:03.806705 22740 net.cpp:124] Setting up relu2
I0428 19:32:03.806721 22740 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:03.806727 22740 net.cpp:139] Memory required for data: 2069760
I0428 19:32:03.806733 22740 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:03.806744 22740 net.cpp:86] Creating Layer ip3
I0428 19:32:03.806751 22740 net.cpp:408] ip3 <- ip2
I0428 19:32:03.806759 22740 net.cpp:382] ip3 -> ip3
I0428 19:32:03.806867 22740 net.cpp:124] Setting up ip3
I0428 19:32:03.806876 22740 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:03.806882 22740 net.cpp:139] Memory required for data: 2072320
I0428 19:32:03.806891 22740 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:03.806902 22740 net.cpp:86] Creating Layer relu3
I0428 19:32:03.806907 22740 net.cpp:408] relu3 <- ip3
I0428 19:32:03.806915 22740 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:03.807077 22740 net.cpp:124] Setting up relu3
I0428 19:32:03.807087 22740 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:03.807092 22740 net.cpp:139] Memory required for data: 2074880
I0428 19:32:03.807097 22740 layer_factory.hpp:77] Creating layer loss
I0428 19:32:03.807107 22740 net.cpp:86] Creating Layer loss
I0428 19:32:03.807112 22740 net.cpp:408] loss <- ip3
I0428 19:32:03.807119 22740 net.cpp:408] loss <- label
I0428 19:32:03.807128 22740 net.cpp:382] loss -> loss
I0428 19:32:03.807153 22740 layer_factory.hpp:77] Creating layer loss
I0428 19:32:03.807396 22740 net.cpp:124] Setting up loss
I0428 19:32:03.807407 22740 net.cpp:131] Top shape: (1)
I0428 19:32:03.807412 22740 net.cpp:134]     with loss weight 1
I0428 19:32:03.807432 22740 net.cpp:139] Memory required for data: 2074884
I0428 19:32:03.807438 22740 net.cpp:200] loss needs backward computation.
I0428 19:32:03.807446 22740 net.cpp:200] relu3 needs backward computation.
I0428 19:32:03.807451 22740 net.cpp:200] ip3 needs backward computation.
I0428 19:32:03.807456 22740 net.cpp:200] relu2 needs backward computation.
I0428 19:32:03.807461 22740 net.cpp:200] ip2 needs backward computation.
I0428 19:32:03.807466 22740 net.cpp:200] relu1 needs backward computation.
I0428 19:32:03.807471 22740 net.cpp:200] ip1 needs backward computation.
I0428 19:32:03.807488 22740 net.cpp:200] pool0 needs backward computation.
I0428 19:32:03.807494 22740 net.cpp:200] conv0 needs backward computation.
I0428 19:32:03.807500 22740 net.cpp:202] mnist does not need backward computation.
I0428 19:32:03.807505 22740 net.cpp:244] This network produces output loss
I0428 19:32:03.807518 22740 net.cpp:257] Network initialization done.
I0428 19:32:03.807813 22740 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test141.prototxt
I0428 19:32:03.807847 22740 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:03.807934 22740 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:03.808032 22740 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:03.808091 22740 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:03.808109 22740 net.cpp:86] Creating Layer mnist
I0428 19:32:03.808117 22740 net.cpp:382] mnist -> data
I0428 19:32:03.808130 22740 net.cpp:382] mnist -> label
I0428 19:32:03.808249 22740 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:03.810294 22740 net.cpp:124] Setting up mnist
I0428 19:32:03.810326 22740 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:03.810335 22740 net.cpp:131] Top shape: 100 (100)
I0428 19:32:03.810341 22740 net.cpp:139] Memory required for data: 314000
I0428 19:32:03.810348 22740 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:03.810364 22740 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:03.810371 22740 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:03.810394 22740 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:03.810405 22740 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:03.810478 22740 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:03.810487 22740 net.cpp:131] Top shape: 100 (100)
I0428 19:32:03.810494 22740 net.cpp:131] Top shape: 100 (100)
I0428 19:32:03.810499 22740 net.cpp:139] Memory required for data: 314800
I0428 19:32:03.810518 22740 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:03.810534 22740 net.cpp:86] Creating Layer conv0
I0428 19:32:03.810540 22740 net.cpp:408] conv0 <- data
I0428 19:32:03.810549 22740 net.cpp:382] conv0 -> conv0
I0428 19:32:03.812115 22740 net.cpp:124] Setting up conv0
I0428 19:32:03.812131 22740 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:03.812139 22740 net.cpp:139] Memory required for data: 2618800
I0428 19:32:03.812153 22740 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:03.812163 22740 net.cpp:86] Creating Layer pool0
I0428 19:32:03.812170 22740 net.cpp:408] pool0 <- conv0
I0428 19:32:03.812177 22740 net.cpp:382] pool0 -> pool0
I0428 19:32:03.812221 22740 net.cpp:124] Setting up pool0
I0428 19:32:03.812230 22740 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:03.812235 22740 net.cpp:139] Memory required for data: 3194800
I0428 19:32:03.812242 22740 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:03.812253 22740 net.cpp:86] Creating Layer ip1
I0428 19:32:03.812260 22740 net.cpp:408] ip1 <- pool0
I0428 19:32:03.812269 22740 net.cpp:382] ip1 -> ip1
I0428 19:32:03.812583 22740 net.cpp:124] Setting up ip1
I0428 19:32:03.812593 22740 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:03.812598 22740 net.cpp:139] Memory required for data: 3204800
I0428 19:32:03.812610 22740 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:03.812619 22740 net.cpp:86] Creating Layer relu1
I0428 19:32:03.812626 22740 net.cpp:408] relu1 <- ip1
I0428 19:32:03.812634 22740 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:03.812906 22740 net.cpp:124] Setting up relu1
I0428 19:32:03.812916 22740 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:03.812922 22740 net.cpp:139] Memory required for data: 3214800
I0428 19:32:03.812927 22740 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:03.812937 22740 net.cpp:86] Creating Layer ip2
I0428 19:32:03.812942 22740 net.cpp:408] ip2 <- ip1
I0428 19:32:03.812952 22740 net.cpp:382] ip2 -> ip2
I0428 19:32:03.813069 22740 net.cpp:124] Setting up ip2
I0428 19:32:03.813079 22740 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:03.813100 22740 net.cpp:139] Memory required for data: 3224800
I0428 19:32:03.813113 22740 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:03.813136 22740 net.cpp:86] Creating Layer relu2
I0428 19:32:03.813144 22740 net.cpp:408] relu2 <- ip2
I0428 19:32:03.813153 22740 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:03.814010 22740 net.cpp:124] Setting up relu2
I0428 19:32:03.814024 22740 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:03.814030 22740 net.cpp:139] Memory required for data: 3234800
I0428 19:32:03.814036 22740 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:03.814049 22740 net.cpp:86] Creating Layer ip3
I0428 19:32:03.814054 22740 net.cpp:408] ip3 <- ip2
I0428 19:32:03.814064 22740 net.cpp:382] ip3 -> ip3
I0428 19:32:03.814175 22740 net.cpp:124] Setting up ip3
I0428 19:32:03.814185 22740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:03.814190 22740 net.cpp:139] Memory required for data: 3238800
I0428 19:32:03.814200 22740 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:03.814209 22740 net.cpp:86] Creating Layer relu3
I0428 19:32:03.814214 22740 net.cpp:408] relu3 <- ip3
I0428 19:32:03.814223 22740 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:03.814384 22740 net.cpp:124] Setting up relu3
I0428 19:32:03.814394 22740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:03.814399 22740 net.cpp:139] Memory required for data: 3242800
I0428 19:32:03.814405 22740 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:03.814414 22740 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:03.814419 22740 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:03.814427 22740 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:03.814438 22740 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:03.814496 22740 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:03.814504 22740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:03.814512 22740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:03.814530 22740 net.cpp:139] Memory required for data: 3250800
I0428 19:32:03.814538 22740 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:03.814546 22740 net.cpp:86] Creating Layer accuracy
I0428 19:32:03.814553 22740 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:03.814560 22740 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:03.814568 22740 net.cpp:382] accuracy -> accuracy
I0428 19:32:03.814581 22740 net.cpp:124] Setting up accuracy
I0428 19:32:03.814589 22740 net.cpp:131] Top shape: (1)
I0428 19:32:03.814595 22740 net.cpp:139] Memory required for data: 3250804
I0428 19:32:03.814602 22740 layer_factory.hpp:77] Creating layer loss
I0428 19:32:03.814610 22740 net.cpp:86] Creating Layer loss
I0428 19:32:03.814616 22740 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:03.814623 22740 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:03.814631 22740 net.cpp:382] loss -> loss
I0428 19:32:03.814642 22740 layer_factory.hpp:77] Creating layer loss
I0428 19:32:03.814904 22740 net.cpp:124] Setting up loss
I0428 19:32:03.814914 22740 net.cpp:131] Top shape: (1)
I0428 19:32:03.814920 22740 net.cpp:134]     with loss weight 1
I0428 19:32:03.814929 22740 net.cpp:139] Memory required for data: 3250808
I0428 19:32:03.814935 22740 net.cpp:200] loss needs backward computation.
I0428 19:32:03.814942 22740 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:03.814949 22740 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:03.814954 22740 net.cpp:200] relu3 needs backward computation.
I0428 19:32:03.814960 22740 net.cpp:200] ip3 needs backward computation.
I0428 19:32:03.814965 22740 net.cpp:200] relu2 needs backward computation.
I0428 19:32:03.814970 22740 net.cpp:200] ip2 needs backward computation.
I0428 19:32:03.814975 22740 net.cpp:200] relu1 needs backward computation.
I0428 19:32:03.814981 22740 net.cpp:200] ip1 needs backward computation.
I0428 19:32:03.814986 22740 net.cpp:200] pool0 needs backward computation.
I0428 19:32:03.814992 22740 net.cpp:200] conv0 needs backward computation.
I0428 19:32:03.814998 22740 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:03.815004 22740 net.cpp:202] mnist does not need backward computation.
I0428 19:32:03.815011 22740 net.cpp:244] This network produces output accuracy
I0428 19:32:03.815016 22740 net.cpp:244] This network produces output loss
I0428 19:32:03.815032 22740 net.cpp:257] Network initialization done.
I0428 19:32:03.815075 22740 solver.cpp:56] Solver scaffolding done.
I0428 19:32:03.815352 22740 caffe.cpp:248] Starting Optimization
I0428 19:32:03.815359 22740 solver.cpp:273] Solving LeNet
I0428 19:32:03.815364 22740 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:03.816153 22740 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:03.820281 22740 blocking_queue.cpp:49] Waiting for data
I0428 19:32:03.891144 22747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:03.891677 22740 solver.cpp:398]     Test net output #0: accuracy = 0.0944
I0428 19:32:03.891700 22740 solver.cpp:398]     Test net output #1: loss = 2.3166 (* 1 = 2.3166 loss)
I0428 19:32:03.893911 22740 solver.cpp:219] Iteration 0 (-1.46818e-31 iter/s, 0.0785192s/100 iters), loss = 2.31296
I0428 19:32:03.893966 22740 solver.cpp:238]     Train net output #0: loss = 2.31296 (* 1 = 2.31296 loss)
I0428 19:32:03.893999 22740 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:03.966831 22740 solver.cpp:219] Iteration 100 (1372.17 iter/s, 0.0728771s/100 iters), loss = 1.04276
I0428 19:32:03.966861 22740 solver.cpp:238]     Train net output #0: loss = 1.04276 (* 1 = 1.04276 loss)
I0428 19:32:03.966886 22740 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:04.033720 22740 solver.cpp:219] Iteration 200 (1495.82 iter/s, 0.0668529s/100 iters), loss = 0.988331
I0428 19:32:04.033746 22740 solver.cpp:238]     Train net output #0: loss = 0.988331 (* 1 = 0.988331 loss)
I0428 19:32:04.033771 22740 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:04.102659 22740 solver.cpp:219] Iteration 300 (1451.28 iter/s, 0.0689048s/100 iters), loss = 1.12592
I0428 19:32:04.102696 22740 solver.cpp:238]     Train net output #0: loss = 1.12592 (* 1 = 1.12592 loss)
I0428 19:32:04.102720 22740 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:04.170502 22740 solver.cpp:219] Iteration 400 (1474.97 iter/s, 0.0677981s/100 iters), loss = 0.715889
I0428 19:32:04.170537 22740 solver.cpp:238]     Train net output #0: loss = 0.715889 (* 1 = 0.715889 loss)
I0428 19:32:04.170558 22740 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:04.241160 22740 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:04.319363 22747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:04.320042 22740 solver.cpp:398]     Test net output #0: accuracy = 0.7467
I0428 19:32:04.320070 22740 solver.cpp:398]     Test net output #1: loss = 0.711006 (* 1 = 0.711006 loss)
I0428 19:32:04.320951 22740 solver.cpp:219] Iteration 500 (664.898 iter/s, 0.150399s/100 iters), loss = 0.667964
I0428 19:32:04.320986 22740 solver.cpp:238]     Train net output #0: loss = 0.667964 (* 1 = 0.667964 loss)
I0428 19:32:04.320997 22740 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:04.392155 22740 solver.cpp:219] Iteration 600 (1405.25 iter/s, 0.0711619s/100 iters), loss = 0.790996
I0428 19:32:04.392187 22740 solver.cpp:238]     Train net output #0: loss = 0.790996 (* 1 = 0.790996 loss)
I0428 19:32:04.392194 22740 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:04.460680 22740 solver.cpp:219] Iteration 700 (1460.19 iter/s, 0.0684841s/100 iters), loss = 0.627747
I0428 19:32:04.460711 22740 solver.cpp:238]     Train net output #0: loss = 0.627747 (* 1 = 0.627747 loss)
I0428 19:32:04.460718 22740 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:04.531869 22740 solver.cpp:219] Iteration 800 (1405.45 iter/s, 0.0711516s/100 iters), loss = 0.848043
I0428 19:32:04.531895 22740 solver.cpp:238]     Train net output #0: loss = 0.848043 (* 1 = 0.848043 loss)
I0428 19:32:04.531901 22740 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:04.602226 22740 solver.cpp:219] Iteration 900 (1422.01 iter/s, 0.0703232s/100 iters), loss = 1.00872
I0428 19:32:04.602248 22740 solver.cpp:238]     Train net output #0: loss = 1.00872 (* 1 = 1.00872 loss)
I0428 19:32:04.602254 22740 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:04.624042 22746 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:04.667021 22740 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:04.667999 22740 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:04.668727 22740 solver.cpp:311] Iteration 1000, loss = 0.627854
I0428 19:32:04.668740 22740 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:04.733336 22747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:04.733943 22740 solver.cpp:398]     Test net output #0: accuracy = 0.7632
I0428 19:32:04.733965 22740 solver.cpp:398]     Test net output #1: loss = 0.621095 (* 1 = 0.621095 loss)
I0428 19:32:04.733973 22740 solver.cpp:316] Optimization Done.
I0428 19:32:04.733978 22740 caffe.cpp:259] Optimization Done.
