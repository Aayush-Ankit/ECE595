I0428 19:43:12.341553 25290 caffe.cpp:218] Using GPUs 0
I0428 19:43:12.379374 25290 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:12.835014 25290 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test415.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:12.835151 25290 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test415.prototxt
I0428 19:43:12.835460 25290 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:12.835479 25290 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:12.835562 25290 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:12.835657 25290 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:12.835762 25290 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:12.835788 25290 net.cpp:86] Creating Layer mnist
I0428 19:43:12.835798 25290 net.cpp:382] mnist -> data
I0428 19:43:12.835821 25290 net.cpp:382] mnist -> label
I0428 19:43:12.836954 25290 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:12.839125 25290 net.cpp:124] Setting up mnist
I0428 19:43:12.839157 25290 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:12.839179 25290 net.cpp:131] Top shape: 64 (64)
I0428 19:43:12.839184 25290 net.cpp:139] Memory required for data: 200960
I0428 19:43:12.839193 25290 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:12.839210 25290 net.cpp:86] Creating Layer conv0
I0428 19:43:12.839231 25290 net.cpp:408] conv0 <- data
I0428 19:43:12.839246 25290 net.cpp:382] conv0 -> conv0
I0428 19:43:13.066828 25290 net.cpp:124] Setting up conv0
I0428 19:43:13.066859 25290 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:13.066865 25290 net.cpp:139] Memory required for data: 495872
I0428 19:43:13.066884 25290 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:13.066900 25290 net.cpp:86] Creating Layer pool0
I0428 19:43:13.066915 25290 net.cpp:408] pool0 <- conv0
I0428 19:43:13.066922 25290 net.cpp:382] pool0 -> pool0
I0428 19:43:13.066977 25290 net.cpp:124] Setting up pool0
I0428 19:43:13.066984 25290 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:13.066989 25290 net.cpp:139] Memory required for data: 569600
I0428 19:43:13.066994 25290 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:13.067008 25290 net.cpp:86] Creating Layer conv1
I0428 19:43:13.067015 25290 net.cpp:408] conv1 <- pool0
I0428 19:43:13.067023 25290 net.cpp:382] conv1 -> conv1
I0428 19:43:13.069787 25290 net.cpp:124] Setting up conv1
I0428 19:43:13.069802 25290 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:13.069808 25290 net.cpp:139] Memory required for data: 979200
I0428 19:43:13.069838 25290 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:13.069849 25290 net.cpp:86] Creating Layer pool1
I0428 19:43:13.069854 25290 net.cpp:408] pool1 <- conv1
I0428 19:43:13.069862 25290 net.cpp:382] pool1 -> pool1
I0428 19:43:13.069905 25290 net.cpp:124] Setting up pool1
I0428 19:43:13.069913 25290 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:13.069918 25290 net.cpp:139] Memory required for data: 1081600
I0428 19:43:13.069924 25290 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:13.069939 25290 net.cpp:86] Creating Layer ip1
I0428 19:43:13.069947 25290 net.cpp:408] ip1 <- pool1
I0428 19:43:13.069955 25290 net.cpp:382] ip1 -> ip1
I0428 19:43:13.070920 25290 net.cpp:124] Setting up ip1
I0428 19:43:13.070935 25290 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:13.070940 25290 net.cpp:139] Memory required for data: 1088000
I0428 19:43:13.070953 25290 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:13.070963 25290 net.cpp:86] Creating Layer relu1
I0428 19:43:13.070976 25290 net.cpp:408] relu1 <- ip1
I0428 19:43:13.070983 25290 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:13.071171 25290 net.cpp:124] Setting up relu1
I0428 19:43:13.071180 25290 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:13.071185 25290 net.cpp:139] Memory required for data: 1094400
I0428 19:43:13.071190 25290 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:13.071200 25290 net.cpp:86] Creating Layer ip2
I0428 19:43:13.071205 25290 net.cpp:408] ip2 <- ip1
I0428 19:43:13.071213 25290 net.cpp:382] ip2 -> ip2
I0428 19:43:13.071315 25290 net.cpp:124] Setting up ip2
I0428 19:43:13.071323 25290 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:13.071328 25290 net.cpp:139] Memory required for data: 1100800
I0428 19:43:13.071337 25290 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:13.071346 25290 net.cpp:86] Creating Layer relu2
I0428 19:43:13.071354 25290 net.cpp:408] relu2 <- ip2
I0428 19:43:13.071362 25290 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:13.072103 25290 net.cpp:124] Setting up relu2
I0428 19:43:13.072115 25290 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:13.072121 25290 net.cpp:139] Memory required for data: 1107200
I0428 19:43:13.072127 25290 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:13.072137 25290 net.cpp:86] Creating Layer ip3
I0428 19:43:13.072144 25290 net.cpp:408] ip3 <- ip2
I0428 19:43:13.072151 25290 net.cpp:382] ip3 -> ip3
I0428 19:43:13.072301 25290 net.cpp:124] Setting up ip3
I0428 19:43:13.072310 25290 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:13.072315 25290 net.cpp:139] Memory required for data: 1109760
I0428 19:43:13.072327 25290 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:13.072336 25290 net.cpp:86] Creating Layer relu3
I0428 19:43:13.072342 25290 net.cpp:408] relu3 <- ip3
I0428 19:43:13.072350 25290 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:13.072525 25290 net.cpp:124] Setting up relu3
I0428 19:43:13.072533 25290 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:13.072538 25290 net.cpp:139] Memory required for data: 1112320
I0428 19:43:13.072543 25290 layer_factory.hpp:77] Creating layer loss
I0428 19:43:13.072552 25290 net.cpp:86] Creating Layer loss
I0428 19:43:13.072557 25290 net.cpp:408] loss <- ip3
I0428 19:43:13.072563 25290 net.cpp:408] loss <- label
I0428 19:43:13.072571 25290 net.cpp:382] loss -> loss
I0428 19:43:13.072592 25290 layer_factory.hpp:77] Creating layer loss
I0428 19:43:13.072847 25290 net.cpp:124] Setting up loss
I0428 19:43:13.072859 25290 net.cpp:131] Top shape: (1)
I0428 19:43:13.072865 25290 net.cpp:134]     with loss weight 1
I0428 19:43:13.072885 25290 net.cpp:139] Memory required for data: 1112324
I0428 19:43:13.072891 25290 net.cpp:200] loss needs backward computation.
I0428 19:43:13.072897 25290 net.cpp:200] relu3 needs backward computation.
I0428 19:43:13.072903 25290 net.cpp:200] ip3 needs backward computation.
I0428 19:43:13.072908 25290 net.cpp:200] relu2 needs backward computation.
I0428 19:43:13.072913 25290 net.cpp:200] ip2 needs backward computation.
I0428 19:43:13.072918 25290 net.cpp:200] relu1 needs backward computation.
I0428 19:43:13.072923 25290 net.cpp:200] ip1 needs backward computation.
I0428 19:43:13.072929 25290 net.cpp:200] pool1 needs backward computation.
I0428 19:43:13.072948 25290 net.cpp:200] conv1 needs backward computation.
I0428 19:43:13.072954 25290 net.cpp:200] pool0 needs backward computation.
I0428 19:43:13.072959 25290 net.cpp:200] conv0 needs backward computation.
I0428 19:43:13.072965 25290 net.cpp:202] mnist does not need backward computation.
I0428 19:43:13.072970 25290 net.cpp:244] This network produces output loss
I0428 19:43:13.072983 25290 net.cpp:257] Network initialization done.
I0428 19:43:13.073377 25290 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test415.prototxt
I0428 19:43:13.073410 25290 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:13.073504 25290 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:13.073614 25290 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:13.073671 25290 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:13.073688 25290 net.cpp:86] Creating Layer mnist
I0428 19:43:13.073696 25290 net.cpp:382] mnist -> data
I0428 19:43:13.073707 25290 net.cpp:382] mnist -> label
I0428 19:43:13.073823 25290 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:13.075865 25290 net.cpp:124] Setting up mnist
I0428 19:43:13.075896 25290 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:13.075903 25290 net.cpp:131] Top shape: 100 (100)
I0428 19:43:13.075923 25290 net.cpp:139] Memory required for data: 314000
I0428 19:43:13.075928 25290 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:13.075951 25290 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:13.075958 25290 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:13.075964 25290 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:13.075975 25290 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:13.076047 25290 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:13.076056 25290 net.cpp:131] Top shape: 100 (100)
I0428 19:43:13.076061 25290 net.cpp:131] Top shape: 100 (100)
I0428 19:43:13.076066 25290 net.cpp:139] Memory required for data: 314800
I0428 19:43:13.076071 25290 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:13.076083 25290 net.cpp:86] Creating Layer conv0
I0428 19:43:13.076089 25290 net.cpp:408] conv0 <- data
I0428 19:43:13.076098 25290 net.cpp:382] conv0 -> conv0
I0428 19:43:13.077674 25290 net.cpp:124] Setting up conv0
I0428 19:43:13.077690 25290 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:13.077697 25290 net.cpp:139] Memory required for data: 775600
I0428 19:43:13.077741 25290 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:13.077751 25290 net.cpp:86] Creating Layer pool0
I0428 19:43:13.077757 25290 net.cpp:408] pool0 <- conv0
I0428 19:43:13.077765 25290 net.cpp:382] pool0 -> pool0
I0428 19:43:13.077819 25290 net.cpp:124] Setting up pool0
I0428 19:43:13.077828 25290 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:13.077833 25290 net.cpp:139] Memory required for data: 890800
I0428 19:43:13.077838 25290 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:13.077852 25290 net.cpp:86] Creating Layer conv1
I0428 19:43:13.077858 25290 net.cpp:408] conv1 <- pool0
I0428 19:43:13.077867 25290 net.cpp:382] conv1 -> conv1
I0428 19:43:13.079409 25290 net.cpp:124] Setting up conv1
I0428 19:43:13.079424 25290 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:13.079430 25290 net.cpp:139] Memory required for data: 1530800
I0428 19:43:13.079442 25290 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:13.079452 25290 net.cpp:86] Creating Layer pool1
I0428 19:43:13.079458 25290 net.cpp:408] pool1 <- conv1
I0428 19:43:13.079466 25290 net.cpp:382] pool1 -> pool1
I0428 19:43:13.079509 25290 net.cpp:124] Setting up pool1
I0428 19:43:13.079517 25290 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:13.079522 25290 net.cpp:139] Memory required for data: 1690800
I0428 19:43:13.079529 25290 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:13.079545 25290 net.cpp:86] Creating Layer ip1
I0428 19:43:13.079551 25290 net.cpp:408] ip1 <- pool1
I0428 19:43:13.079560 25290 net.cpp:382] ip1 -> ip1
I0428 19:43:13.079793 25290 net.cpp:124] Setting up ip1
I0428 19:43:13.079803 25290 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:13.079823 25290 net.cpp:139] Memory required for data: 1700800
I0428 19:43:13.079838 25290 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:13.079848 25290 net.cpp:86] Creating Layer relu1
I0428 19:43:13.079854 25290 net.cpp:408] relu1 <- ip1
I0428 19:43:13.079861 25290 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:13.080068 25290 net.cpp:124] Setting up relu1
I0428 19:43:13.080078 25290 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:13.080085 25290 net.cpp:139] Memory required for data: 1710800
I0428 19:43:13.080090 25290 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:13.080102 25290 net.cpp:86] Creating Layer ip2
I0428 19:43:13.080109 25290 net.cpp:408] ip2 <- ip1
I0428 19:43:13.080119 25290 net.cpp:382] ip2 -> ip2
I0428 19:43:13.080260 25290 net.cpp:124] Setting up ip2
I0428 19:43:13.080267 25290 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:13.080272 25290 net.cpp:139] Memory required for data: 1720800
I0428 19:43:13.080281 25290 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:13.080288 25290 net.cpp:86] Creating Layer relu2
I0428 19:43:13.080293 25290 net.cpp:408] relu2 <- ip2
I0428 19:43:13.080301 25290 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:13.080514 25290 net.cpp:124] Setting up relu2
I0428 19:43:13.080524 25290 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:13.080529 25290 net.cpp:139] Memory required for data: 1730800
I0428 19:43:13.080534 25290 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:13.080543 25290 net.cpp:86] Creating Layer ip3
I0428 19:43:13.080549 25290 net.cpp:408] ip3 <- ip2
I0428 19:43:13.080559 25290 net.cpp:382] ip3 -> ip3
I0428 19:43:13.080670 25290 net.cpp:124] Setting up ip3
I0428 19:43:13.080679 25290 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:13.080684 25290 net.cpp:139] Memory required for data: 1734800
I0428 19:43:13.080696 25290 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:13.080739 25290 net.cpp:86] Creating Layer relu3
I0428 19:43:13.080744 25290 net.cpp:408] relu3 <- ip3
I0428 19:43:13.080767 25290 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:13.081624 25290 net.cpp:124] Setting up relu3
I0428 19:43:13.081637 25290 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:13.081642 25290 net.cpp:139] Memory required for data: 1738800
I0428 19:43:13.081647 25290 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:13.081655 25290 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:13.081660 25290 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:13.081670 25290 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:13.081679 25290 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:13.081761 25290 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:13.081770 25290 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:13.081776 25290 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:13.081781 25290 net.cpp:139] Memory required for data: 1746800
I0428 19:43:13.081789 25290 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:13.081795 25290 net.cpp:86] Creating Layer accuracy
I0428 19:43:13.081800 25290 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:13.081825 25290 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:13.081835 25290 net.cpp:382] accuracy -> accuracy
I0428 19:43:13.081846 25290 net.cpp:124] Setting up accuracy
I0428 19:43:13.081854 25290 net.cpp:131] Top shape: (1)
I0428 19:43:13.081861 25290 net.cpp:139] Memory required for data: 1746804
I0428 19:43:13.081866 25290 layer_factory.hpp:77] Creating layer loss
I0428 19:43:13.081873 25290 net.cpp:86] Creating Layer loss
I0428 19:43:13.081878 25290 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:13.081885 25290 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:13.081892 25290 net.cpp:382] loss -> loss
I0428 19:43:13.081902 25290 layer_factory.hpp:77] Creating layer loss
I0428 19:43:13.082198 25290 net.cpp:124] Setting up loss
I0428 19:43:13.082209 25290 net.cpp:131] Top shape: (1)
I0428 19:43:13.082218 25290 net.cpp:134]     with loss weight 1
I0428 19:43:13.082227 25290 net.cpp:139] Memory required for data: 1746808
I0428 19:43:13.082243 25290 net.cpp:200] loss needs backward computation.
I0428 19:43:13.082252 25290 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:13.082257 25290 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:13.082263 25290 net.cpp:200] relu3 needs backward computation.
I0428 19:43:13.082268 25290 net.cpp:200] ip3 needs backward computation.
I0428 19:43:13.082274 25290 net.cpp:200] relu2 needs backward computation.
I0428 19:43:13.082280 25290 net.cpp:200] ip2 needs backward computation.
I0428 19:43:13.082285 25290 net.cpp:200] relu1 needs backward computation.
I0428 19:43:13.082290 25290 net.cpp:200] ip1 needs backward computation.
I0428 19:43:13.082296 25290 net.cpp:200] pool1 needs backward computation.
I0428 19:43:13.082301 25290 net.cpp:200] conv1 needs backward computation.
I0428 19:43:13.082307 25290 net.cpp:200] pool0 needs backward computation.
I0428 19:43:13.082314 25290 net.cpp:200] conv0 needs backward computation.
I0428 19:43:13.082319 25290 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:13.082326 25290 net.cpp:202] mnist does not need backward computation.
I0428 19:43:13.082331 25290 net.cpp:244] This network produces output accuracy
I0428 19:43:13.082337 25290 net.cpp:244] This network produces output loss
I0428 19:43:13.082372 25290 net.cpp:257] Network initialization done.
I0428 19:43:13.082432 25290 solver.cpp:56] Solver scaffolding done.
I0428 19:43:13.082788 25290 caffe.cpp:248] Starting Optimization
I0428 19:43:13.082794 25290 solver.cpp:273] Solving LeNet
I0428 19:43:13.082798 25290 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:13.083658 25290 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:13.087148 25290 blocking_queue.cpp:49] Waiting for data
I0428 19:43:13.158998 25298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:13.159461 25290 solver.cpp:398]     Test net output #0: accuracy = 0.0989
I0428 19:43:13.159485 25290 solver.cpp:398]     Test net output #1: loss = 2.31641 (* 1 = 2.31641 loss)
I0428 19:43:13.160948 25290 solver.cpp:219] Iteration 0 (1.64553e-39 iter/s, 0.0781138s/100 iters), loss = 2.30218
I0428 19:43:13.160977 25290 solver.cpp:238]     Train net output #0: loss = 2.30218 (* 1 = 2.30218 loss)
I0428 19:43:13.160995 25290 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:13.250777 25290 solver.cpp:219] Iteration 100 (1113.72 iter/s, 0.0897894s/100 iters), loss = 1.42181
I0428 19:43:13.250805 25290 solver.cpp:238]     Train net output #0: loss = 1.42181 (* 1 = 1.42181 loss)
I0428 19:43:13.250830 25290 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:13.334005 25290 solver.cpp:219] Iteration 200 (1202.07 iter/s, 0.0831898s/100 iters), loss = 1.27728
I0428 19:43:13.334033 25290 solver.cpp:238]     Train net output #0: loss = 1.27728 (* 1 = 1.27728 loss)
I0428 19:43:13.334058 25290 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:13.416591 25290 solver.cpp:219] Iteration 300 (1211.41 iter/s, 0.0825487s/100 iters), loss = 0.649392
I0428 19:43:13.416621 25290 solver.cpp:238]     Train net output #0: loss = 0.649392 (* 1 = 0.649392 loss)
I0428 19:43:13.416647 25290 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:13.499465 25290 solver.cpp:219] Iteration 400 (1207.24 iter/s, 0.0828336s/100 iters), loss = 0.802378
I0428 19:43:13.499495 25290 solver.cpp:238]     Train net output #0: loss = 0.802378 (* 1 = 0.802378 loss)
I0428 19:43:13.499521 25290 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:13.581149 25290 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:13.654121 25298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:13.654598 25290 solver.cpp:398]     Test net output #0: accuracy = 0.7571
I0428 19:43:13.654621 25290 solver.cpp:398]     Test net output #1: loss = 0.631227 (* 1 = 0.631227 loss)
I0428 19:43:13.655542 25290 solver.cpp:219] Iteration 500 (640.877 iter/s, 0.156036s/100 iters), loss = 0.750586
I0428 19:43:13.655571 25290 solver.cpp:238]     Train net output #0: loss = 0.750586 (* 1 = 0.750586 loss)
I0428 19:43:13.655612 25290 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:13.758954 25290 solver.cpp:219] Iteration 600 (967.42 iter/s, 0.103368s/100 iters), loss = 0.534451
I0428 19:43:13.758996 25290 solver.cpp:238]     Train net output #0: loss = 0.534451 (* 1 = 0.534451 loss)
I0428 19:43:13.759009 25290 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:13.848227 25290 solver.cpp:219] Iteration 700 (1120.79 iter/s, 0.0892232s/100 iters), loss = 0.554794
I0428 19:43:13.848258 25290 solver.cpp:238]     Train net output #0: loss = 0.554794 (* 1 = 0.554794 loss)
I0428 19:43:13.848269 25290 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:13.931538 25290 solver.cpp:219] Iteration 800 (1200.9 iter/s, 0.0832708s/100 iters), loss = 0.665331
I0428 19:43:13.931568 25290 solver.cpp:238]     Train net output #0: loss = 0.665331 (* 1 = 0.665331 loss)
I0428 19:43:13.931578 25290 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:14.014048 25290 solver.cpp:219] Iteration 900 (1212.55 iter/s, 0.0824708s/100 iters), loss = 0.307114
I0428 19:43:14.014078 25290 solver.cpp:238]     Train net output #0: loss = 0.307114 (* 1 = 0.307114 loss)
I0428 19:43:14.014106 25290 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:14.042346 25297 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:14.095927 25290 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:14.096884 25290 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:14.097381 25290 solver.cpp:311] Iteration 1000, loss = 0.448525
I0428 19:43:14.097400 25290 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:14.171785 25298 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:14.172222 25290 solver.cpp:398]     Test net output #0: accuracy = 0.7807
I0428 19:43:14.172243 25290 solver.cpp:398]     Test net output #1: loss = 0.549538 (* 1 = 0.549538 loss)
I0428 19:43:14.172252 25290 solver.cpp:316] Optimization Done.
I0428 19:43:14.172257 25290 caffe.cpp:259] Optimization Done.
