I0428 19:56:22.150182 28419 caffe.cpp:218] Using GPUs 0
I0428 19:56:22.193840 28419 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:22.794893 28419 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test757.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:22.795076 28419 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test757.prototxt
I0428 19:56:22.795670 28419 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:22.795697 28419 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:22.795850 28419 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:22.795958 28419 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:22.796082 28419 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:22.796113 28419 net.cpp:86] Creating Layer mnist
I0428 19:56:22.796126 28419 net.cpp:382] mnist -> data
I0428 19:56:22.796154 28419 net.cpp:382] mnist -> label
I0428 19:56:22.797560 28419 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:22.800758 28419 net.cpp:124] Setting up mnist
I0428 19:56:22.800781 28419 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:22.800789 28419 net.cpp:131] Top shape: 64 (64)
I0428 19:56:22.800796 28419 net.cpp:139] Memory required for data: 200960
I0428 19:56:22.800804 28419 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:22.800834 28419 net.cpp:86] Creating Layer conv0
I0428 19:56:22.800861 28419 net.cpp:408] conv0 <- data
I0428 19:56:22.800879 28419 net.cpp:382] conv0 -> conv0
I0428 19:56:23.130049 28419 net.cpp:124] Setting up conv0
I0428 19:56:23.130096 28419 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:23.130101 28419 net.cpp:139] Memory required for data: 1675520
I0428 19:56:23.130120 28419 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:23.130151 28419 net.cpp:86] Creating Layer pool0
I0428 19:56:23.130157 28419 net.cpp:408] pool0 <- conv0
I0428 19:56:23.130165 28419 net.cpp:382] pool0 -> pool0
I0428 19:56:23.130225 28419 net.cpp:124] Setting up pool0
I0428 19:56:23.130235 28419 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:23.130240 28419 net.cpp:139] Memory required for data: 2044160
I0428 19:56:23.130245 28419 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:23.130259 28419 net.cpp:86] Creating Layer conv1
I0428 19:56:23.130264 28419 net.cpp:408] conv1 <- pool0
I0428 19:56:23.130272 28419 net.cpp:382] conv1 -> conv1
I0428 19:56:23.132930 28419 net.cpp:124] Setting up conv1
I0428 19:56:23.132948 28419 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:23.132953 28419 net.cpp:139] Memory required for data: 2076928
I0428 19:56:23.132966 28419 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:23.132990 28419 net.cpp:86] Creating Layer pool1
I0428 19:56:23.132997 28419 net.cpp:408] pool1 <- conv1
I0428 19:56:23.133003 28419 net.cpp:382] pool1 -> pool1
I0428 19:56:23.133050 28419 net.cpp:124] Setting up pool1
I0428 19:56:23.133060 28419 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:23.133065 28419 net.cpp:139] Memory required for data: 2085120
I0428 19:56:23.133070 28419 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:23.133080 28419 net.cpp:86] Creating Layer ip1
I0428 19:56:23.133085 28419 net.cpp:408] ip1 <- pool1
I0428 19:56:23.133091 28419 net.cpp:382] ip1 -> ip1
I0428 19:56:23.133225 28419 net.cpp:124] Setting up ip1
I0428 19:56:23.133234 28419 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:23.133239 28419 net.cpp:139] Memory required for data: 2087680
I0428 19:56:23.133249 28419 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:23.133270 28419 net.cpp:86] Creating Layer relu1
I0428 19:56:23.133275 28419 net.cpp:408] relu1 <- ip1
I0428 19:56:23.133296 28419 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:23.133512 28419 net.cpp:124] Setting up relu1
I0428 19:56:23.133523 28419 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:23.133527 28419 net.cpp:139] Memory required for data: 2090240
I0428 19:56:23.133533 28419 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:23.133541 28419 net.cpp:86] Creating Layer ip2
I0428 19:56:23.133545 28419 net.cpp:408] ip2 <- ip1
I0428 19:56:23.133553 28419 net.cpp:382] ip2 -> ip2
I0428 19:56:23.133682 28419 net.cpp:124] Setting up ip2
I0428 19:56:23.133689 28419 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:23.133694 28419 net.cpp:139] Memory required for data: 2096640
I0428 19:56:23.133702 28419 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:23.133709 28419 net.cpp:86] Creating Layer relu2
I0428 19:56:23.133713 28419 net.cpp:408] relu2 <- ip2
I0428 19:56:23.133719 28419 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:23.134773 28419 net.cpp:124] Setting up relu2
I0428 19:56:23.134801 28419 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:56:23.134806 28419 net.cpp:139] Memory required for data: 2103040
I0428 19:56:23.134811 28419 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:23.134820 28419 net.cpp:86] Creating Layer ip3
I0428 19:56:23.134825 28419 net.cpp:408] ip3 <- ip2
I0428 19:56:23.134834 28419 net.cpp:382] ip3 -> ip3
I0428 19:56:23.134953 28419 net.cpp:124] Setting up ip3
I0428 19:56:23.134961 28419 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:23.134966 28419 net.cpp:139] Memory required for data: 2105600
I0428 19:56:23.134977 28419 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:23.134984 28419 net.cpp:86] Creating Layer relu3
I0428 19:56:23.134989 28419 net.cpp:408] relu3 <- ip3
I0428 19:56:23.135010 28419 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:23.135231 28419 net.cpp:124] Setting up relu3
I0428 19:56:23.135241 28419 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:23.135246 28419 net.cpp:139] Memory required for data: 2108160
I0428 19:56:23.135251 28419 layer_factory.hpp:77] Creating layer loss
I0428 19:56:23.135260 28419 net.cpp:86] Creating Layer loss
I0428 19:56:23.135264 28419 net.cpp:408] loss <- ip3
I0428 19:56:23.135270 28419 net.cpp:408] loss <- label
I0428 19:56:23.135278 28419 net.cpp:382] loss -> loss
I0428 19:56:23.135309 28419 layer_factory.hpp:77] Creating layer loss
I0428 19:56:23.135644 28419 net.cpp:124] Setting up loss
I0428 19:56:23.135671 28419 net.cpp:131] Top shape: (1)
I0428 19:56:23.135676 28419 net.cpp:134]     with loss weight 1
I0428 19:56:23.135694 28419 net.cpp:139] Memory required for data: 2108164
I0428 19:56:23.135699 28419 net.cpp:200] loss needs backward computation.
I0428 19:56:23.135705 28419 net.cpp:200] relu3 needs backward computation.
I0428 19:56:23.135710 28419 net.cpp:200] ip3 needs backward computation.
I0428 19:56:23.135715 28419 net.cpp:200] relu2 needs backward computation.
I0428 19:56:23.135720 28419 net.cpp:200] ip2 needs backward computation.
I0428 19:56:23.135723 28419 net.cpp:200] relu1 needs backward computation.
I0428 19:56:23.135728 28419 net.cpp:200] ip1 needs backward computation.
I0428 19:56:23.135733 28419 net.cpp:200] pool1 needs backward computation.
I0428 19:56:23.135738 28419 net.cpp:200] conv1 needs backward computation.
I0428 19:56:23.135743 28419 net.cpp:200] pool0 needs backward computation.
I0428 19:56:23.135748 28419 net.cpp:200] conv0 needs backward computation.
I0428 19:56:23.135753 28419 net.cpp:202] mnist does not need backward computation.
I0428 19:56:23.135758 28419 net.cpp:244] This network produces output loss
I0428 19:56:23.135772 28419 net.cpp:257] Network initialization done.
I0428 19:56:23.136261 28419 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test757.prototxt
I0428 19:56:23.136314 28419 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:23.136458 28419 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:23.136612 28419 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:23.136673 28419 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:23.136690 28419 net.cpp:86] Creating Layer mnist
I0428 19:56:23.136698 28419 net.cpp:382] mnist -> data
I0428 19:56:23.136709 28419 net.cpp:382] mnist -> label
I0428 19:56:23.136860 28419 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:23.139448 28419 net.cpp:124] Setting up mnist
I0428 19:56:23.139478 28419 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:23.139485 28419 net.cpp:131] Top shape: 100 (100)
I0428 19:56:23.139490 28419 net.cpp:139] Memory required for data: 314000
I0428 19:56:23.139495 28419 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:23.139503 28419 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:23.139508 28419 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:23.139514 28419 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:23.139523 28419 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:23.139577 28419 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:23.139593 28419 net.cpp:131] Top shape: 100 (100)
I0428 19:56:23.139600 28419 net.cpp:131] Top shape: 100 (100)
I0428 19:56:23.139603 28419 net.cpp:139] Memory required for data: 314800
I0428 19:56:23.139607 28419 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:23.139618 28419 net.cpp:86] Creating Layer conv0
I0428 19:56:23.139623 28419 net.cpp:408] conv0 <- data
I0428 19:56:23.139629 28419 net.cpp:382] conv0 -> conv0
I0428 19:56:23.141669 28419 net.cpp:124] Setting up conv0
I0428 19:56:23.141702 28419 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:23.141707 28419 net.cpp:139] Memory required for data: 2618800
I0428 19:56:23.141733 28419 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:23.141742 28419 net.cpp:86] Creating Layer pool0
I0428 19:56:23.141747 28419 net.cpp:408] pool0 <- conv0
I0428 19:56:23.141753 28419 net.cpp:382] pool0 -> pool0
I0428 19:56:23.141798 28419 net.cpp:124] Setting up pool0
I0428 19:56:23.141811 28419 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:23.141816 28419 net.cpp:139] Memory required for data: 3194800
I0428 19:56:23.141835 28419 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:23.141846 28419 net.cpp:86] Creating Layer conv1
I0428 19:56:23.141852 28419 net.cpp:408] conv1 <- pool0
I0428 19:56:23.141860 28419 net.cpp:382] conv1 -> conv1
I0428 19:56:23.144652 28419 net.cpp:124] Setting up conv1
I0428 19:56:23.144683 28419 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:23.144690 28419 net.cpp:139] Memory required for data: 3246000
I0428 19:56:23.144701 28419 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:23.144711 28419 net.cpp:86] Creating Layer pool1
I0428 19:56:23.144716 28419 net.cpp:408] pool1 <- conv1
I0428 19:56:23.144726 28419 net.cpp:382] pool1 -> pool1
I0428 19:56:23.144788 28419 net.cpp:124] Setting up pool1
I0428 19:56:23.144805 28419 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:23.144827 28419 net.cpp:139] Memory required for data: 3258800
I0428 19:56:23.144841 28419 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:23.144852 28419 net.cpp:86] Creating Layer ip1
I0428 19:56:23.144858 28419 net.cpp:408] ip1 <- pool1
I0428 19:56:23.144870 28419 net.cpp:382] ip1 -> ip1
I0428 19:56:23.145017 28419 net.cpp:124] Setting up ip1
I0428 19:56:23.145030 28419 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:23.145046 28419 net.cpp:139] Memory required for data: 3262800
I0428 19:56:23.145056 28419 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:23.145064 28419 net.cpp:86] Creating Layer relu1
I0428 19:56:23.145069 28419 net.cpp:408] relu1 <- ip1
I0428 19:56:23.145076 28419 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:23.145331 28419 net.cpp:124] Setting up relu1
I0428 19:56:23.145344 28419 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:23.145349 28419 net.cpp:139] Memory required for data: 3266800
I0428 19:56:23.145354 28419 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:23.145362 28419 net.cpp:86] Creating Layer ip2
I0428 19:56:23.145367 28419 net.cpp:408] ip2 <- ip1
I0428 19:56:23.145375 28419 net.cpp:382] ip2 -> ip2
I0428 19:56:23.145503 28419 net.cpp:124] Setting up ip2
I0428 19:56:23.145511 28419 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:23.145516 28419 net.cpp:139] Memory required for data: 3276800
I0428 19:56:23.145524 28419 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:23.145530 28419 net.cpp:86] Creating Layer relu2
I0428 19:56:23.145534 28419 net.cpp:408] relu2 <- ip2
I0428 19:56:23.145542 28419 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:23.145750 28419 net.cpp:124] Setting up relu2
I0428 19:56:23.145761 28419 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:56:23.145766 28419 net.cpp:139] Memory required for data: 3286800
I0428 19:56:23.145771 28419 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:23.145778 28419 net.cpp:86] Creating Layer ip3
I0428 19:56:23.145783 28419 net.cpp:408] ip3 <- ip2
I0428 19:56:23.145790 28419 net.cpp:382] ip3 -> ip3
I0428 19:56:23.145911 28419 net.cpp:124] Setting up ip3
I0428 19:56:23.145920 28419 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:23.145925 28419 net.cpp:139] Memory required for data: 3290800
I0428 19:56:23.145936 28419 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:23.145941 28419 net.cpp:86] Creating Layer relu3
I0428 19:56:23.145952 28419 net.cpp:408] relu3 <- ip3
I0428 19:56:23.145959 28419 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:23.147111 28419 net.cpp:124] Setting up relu3
I0428 19:56:23.147141 28419 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:23.147146 28419 net.cpp:139] Memory required for data: 3294800
I0428 19:56:23.147151 28419 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:23.147174 28419 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:23.147193 28419 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:23.147200 28419 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:23.147208 28419 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:23.147275 28419 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:23.147284 28419 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:23.147290 28419 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:23.147294 28419 net.cpp:139] Memory required for data: 3302800
I0428 19:56:23.147300 28419 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:23.147317 28419 net.cpp:86] Creating Layer accuracy
I0428 19:56:23.147321 28419 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:23.147327 28419 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:23.147336 28419 net.cpp:382] accuracy -> accuracy
I0428 19:56:23.147356 28419 net.cpp:124] Setting up accuracy
I0428 19:56:23.147362 28419 net.cpp:131] Top shape: (1)
I0428 19:56:23.147367 28419 net.cpp:139] Memory required for data: 3302804
I0428 19:56:23.147370 28419 layer_factory.hpp:77] Creating layer loss
I0428 19:56:23.147377 28419 net.cpp:86] Creating Layer loss
I0428 19:56:23.147382 28419 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:23.147387 28419 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:23.147400 28419 net.cpp:382] loss -> loss
I0428 19:56:23.147409 28419 layer_factory.hpp:77] Creating layer loss
I0428 19:56:23.147760 28419 net.cpp:124] Setting up loss
I0428 19:56:23.147773 28419 net.cpp:131] Top shape: (1)
I0428 19:56:23.147788 28419 net.cpp:134]     with loss weight 1
I0428 19:56:23.147795 28419 net.cpp:139] Memory required for data: 3302808
I0428 19:56:23.147825 28419 net.cpp:200] loss needs backward computation.
I0428 19:56:23.147842 28419 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:23.147847 28419 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:23.147857 28419 net.cpp:200] relu3 needs backward computation.
I0428 19:56:23.147861 28419 net.cpp:200] ip3 needs backward computation.
I0428 19:56:23.147866 28419 net.cpp:200] relu2 needs backward computation.
I0428 19:56:23.147871 28419 net.cpp:200] ip2 needs backward computation.
I0428 19:56:23.147874 28419 net.cpp:200] relu1 needs backward computation.
I0428 19:56:23.147877 28419 net.cpp:200] ip1 needs backward computation.
I0428 19:56:23.147882 28419 net.cpp:200] pool1 needs backward computation.
I0428 19:56:23.147887 28419 net.cpp:200] conv1 needs backward computation.
I0428 19:56:23.147891 28419 net.cpp:200] pool0 needs backward computation.
I0428 19:56:23.147896 28419 net.cpp:200] conv0 needs backward computation.
I0428 19:56:23.147905 28419 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:23.147910 28419 net.cpp:202] mnist does not need backward computation.
I0428 19:56:23.147914 28419 net.cpp:244] This network produces output accuracy
I0428 19:56:23.147920 28419 net.cpp:244] This network produces output loss
I0428 19:56:23.147935 28419 net.cpp:257] Network initialization done.
I0428 19:56:23.147989 28419 solver.cpp:56] Solver scaffolding done.
I0428 19:56:23.148403 28419 caffe.cpp:248] Starting Optimization
I0428 19:56:23.148411 28419 solver.cpp:273] Solving LeNet
I0428 19:56:23.148425 28419 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:23.149497 28419 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:23.153569 28419 blocking_queue.cpp:49] Waiting for data
I0428 19:56:23.222348 28426 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:23.222957 28419 solver.cpp:398]     Test net output #0: accuracy = 0.1226
I0428 19:56:23.222995 28419 solver.cpp:398]     Test net output #1: loss = 2.30897 (* 1 = 2.30897 loss)
I0428 19:56:23.226161 28419 solver.cpp:219] Iteration 0 (0 iter/s, 0.0777021s/100 iters), loss = 2.3276
I0428 19:56:23.226191 28419 solver.cpp:238]     Train net output #0: loss = 2.3276 (* 1 = 2.3276 loss)
I0428 19:56:23.226205 28419 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:23.310184 28419 solver.cpp:219] Iteration 100 (1190.73 iter/s, 0.0839823s/100 iters), loss = 1.42092
I0428 19:56:23.310228 28419 solver.cpp:238]     Train net output #0: loss = 1.42092 (* 1 = 1.42092 loss)
I0428 19:56:23.310236 28419 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:23.393790 28419 solver.cpp:219] Iteration 200 (1196.84 iter/s, 0.0835533s/100 iters), loss = 0.994831
I0428 19:56:23.393818 28419 solver.cpp:238]     Train net output #0: loss = 0.994831 (* 1 = 0.994831 loss)
I0428 19:56:23.393826 28419 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:23.478060 28419 solver.cpp:219] Iteration 300 (1187.19 iter/s, 0.0842322s/100 iters), loss = 0.922573
I0428 19:56:23.478101 28419 solver.cpp:238]     Train net output #0: loss = 0.922573 (* 1 = 0.922573 loss)
I0428 19:56:23.478109 28419 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:23.562077 28419 solver.cpp:219] Iteration 400 (1190.76 iter/s, 0.0839803s/100 iters), loss = 0.943142
I0428 19:56:23.562120 28419 solver.cpp:238]     Train net output #0: loss = 0.943142 (* 1 = 0.943142 loss)
I0428 19:56:23.562129 28419 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:23.646016 28419 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:23.699463 28426 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:23.699985 28419 solver.cpp:398]     Test net output #0: accuracy = 0.8006
I0428 19:56:23.700002 28419 solver.cpp:398]     Test net output #1: loss = 0.661014 (* 1 = 0.661014 loss)
I0428 19:56:23.700783 28419 solver.cpp:219] Iteration 500 (721.152 iter/s, 0.138667s/100 iters), loss = 0.804918
I0428 19:56:23.700829 28419 solver.cpp:238]     Train net output #0: loss = 0.804918 (* 1 = 0.804918 loss)
I0428 19:56:23.700867 28419 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:23.784399 28419 solver.cpp:219] Iteration 600 (1196.4 iter/s, 0.083584s/100 iters), loss = 0.420637
I0428 19:56:23.784423 28419 solver.cpp:238]     Train net output #0: loss = 0.420637 (* 1 = 0.420637 loss)
I0428 19:56:23.784430 28419 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:23.859055 28419 solver.cpp:219] Iteration 700 (1340.07 iter/s, 0.074623s/100 iters), loss = 0.646086
I0428 19:56:23.859092 28419 solver.cpp:238]     Train net output #0: loss = 0.646086 (* 1 = 0.646086 loss)
I0428 19:56:23.859098 28419 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:23.934343 28419 solver.cpp:219] Iteration 800 (1328.78 iter/s, 0.0752568s/100 iters), loss = 0.913262
I0428 19:56:23.934382 28419 solver.cpp:238]     Train net output #0: loss = 0.913262 (* 1 = 0.913262 loss)
I0428 19:56:23.934388 28419 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:24.014021 28419 solver.cpp:219] Iteration 900 (1255.58 iter/s, 0.0796447s/100 iters), loss = 0.392053
I0428 19:56:24.014060 28419 solver.cpp:238]     Train net output #0: loss = 0.392053 (* 1 = 0.392053 loss)
I0428 19:56:24.014065 28419 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:24.039335 28425 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:24.088873 28419 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:24.089574 28419 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:24.090021 28419 solver.cpp:311] Iteration 1000, loss = 0.379612
I0428 19:56:24.090051 28419 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:24.142781 28426 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:24.143280 28419 solver.cpp:398]     Test net output #0: accuracy = 0.841
I0428 19:56:24.143314 28419 solver.cpp:398]     Test net output #1: loss = 0.453923 (* 1 = 0.453923 loss)
I0428 19:56:24.143318 28419 solver.cpp:316] Optimization Done.
I0428 19:56:24.143321 28419 caffe.cpp:259] Optimization Done.
