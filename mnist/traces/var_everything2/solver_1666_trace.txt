I0428 20:38:30.744925  5134 caffe.cpp:218] Using GPUs 0
I0428 20:38:30.777302  5134 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:31.298857  5134 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1666.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:31.299015  5134 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1666.prototxt
I0428 20:38:31.299480  5134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:31.299530  5134 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:31.299643  5134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:31.299731  5134 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:31.299842  5134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:31.299865  5134 net.cpp:86] Creating Layer mnist
I0428 20:38:31.299876  5134 net.cpp:382] mnist -> data
I0428 20:38:31.299897  5134 net.cpp:382] mnist -> label
I0428 20:38:31.301069  5134 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:31.303925  5134 net.cpp:124] Setting up mnist
I0428 20:38:31.303944  5134 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:31.303951  5134 net.cpp:131] Top shape: 64 (64)
I0428 20:38:31.303956  5134 net.cpp:139] Memory required for data: 200960
I0428 20:38:31.303978  5134 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:31.303997  5134 net.cpp:86] Creating Layer conv0
I0428 20:38:31.304019  5134 net.cpp:408] conv0 <- data
I0428 20:38:31.304052  5134 net.cpp:382] conv0 -> conv0
I0428 20:38:31.594514  5134 net.cpp:124] Setting up conv0
I0428 20:38:31.594561  5134 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:31.594566  5134 net.cpp:139] Memory required for data: 14946560
I0428 20:38:31.594585  5134 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:31.594615  5134 net.cpp:86] Creating Layer pool0
I0428 20:38:31.594621  5134 net.cpp:408] pool0 <- conv0
I0428 20:38:31.594629  5134 net.cpp:382] pool0 -> pool0
I0428 20:38:31.594684  5134 net.cpp:124] Setting up pool0
I0428 20:38:31.594694  5134 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:31.594698  5134 net.cpp:139] Memory required for data: 18632960
I0428 20:38:31.594703  5134 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:31.594717  5134 net.cpp:86] Creating Layer conv1
I0428 20:38:31.594722  5134 net.cpp:408] conv1 <- pool0
I0428 20:38:31.594728  5134 net.cpp:382] conv1 -> conv1
I0428 20:38:31.600406  5134 net.cpp:124] Setting up conv1
I0428 20:38:31.600422  5134 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:31.600427  5134 net.cpp:139] Memory required for data: 20271360
I0428 20:38:31.600437  5134 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:31.600446  5134 net.cpp:86] Creating Layer pool1
I0428 20:38:31.600451  5134 net.cpp:408] pool1 <- conv1
I0428 20:38:31.600458  5134 net.cpp:382] pool1 -> pool1
I0428 20:38:31.600514  5134 net.cpp:124] Setting up pool1
I0428 20:38:31.600522  5134 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:31.600525  5134 net.cpp:139] Memory required for data: 20680960
I0428 20:38:31.600529  5134 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:31.600538  5134 net.cpp:86] Creating Layer ip1
I0428 20:38:31.600543  5134 net.cpp:408] ip1 <- pool1
I0428 20:38:31.600548  5134 net.cpp:382] ip1 -> ip1
I0428 20:38:31.601033  5134 net.cpp:124] Setting up ip1
I0428 20:38:31.601043  5134 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:31.601063  5134 net.cpp:139] Memory required for data: 20687360
I0428 20:38:31.601073  5134 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:31.601081  5134 net.cpp:86] Creating Layer relu1
I0428 20:38:31.601085  5134 net.cpp:408] relu1 <- ip1
I0428 20:38:31.601106  5134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:31.601320  5134 net.cpp:124] Setting up relu1
I0428 20:38:31.601331  5134 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:31.601336  5134 net.cpp:139] Memory required for data: 20693760
I0428 20:38:31.601341  5134 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:31.601349  5134 net.cpp:86] Creating Layer ip2
I0428 20:38:31.601353  5134 net.cpp:408] ip2 <- ip1
I0428 20:38:31.601361  5134 net.cpp:382] ip2 -> ip2
I0428 20:38:31.601502  5134 net.cpp:124] Setting up ip2
I0428 20:38:31.601511  5134 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:31.601516  5134 net.cpp:139] Memory required for data: 20706560
I0428 20:38:31.601522  5134 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:31.601531  5134 net.cpp:86] Creating Layer relu2
I0428 20:38:31.601534  5134 net.cpp:408] relu2 <- ip2
I0428 20:38:31.601541  5134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:31.602545  5134 net.cpp:124] Setting up relu2
I0428 20:38:31.602558  5134 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:38:31.602578  5134 net.cpp:139] Memory required for data: 20719360
I0428 20:38:31.602583  5134 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:31.602591  5134 net.cpp:86] Creating Layer ip3
I0428 20:38:31.602596  5134 net.cpp:408] ip3 <- ip2
I0428 20:38:31.602603  5134 net.cpp:382] ip3 -> ip3
I0428 20:38:31.602757  5134 net.cpp:124] Setting up ip3
I0428 20:38:31.602768  5134 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:31.602772  5134 net.cpp:139] Memory required for data: 20721920
I0428 20:38:31.602783  5134 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:31.602790  5134 net.cpp:86] Creating Layer relu3
I0428 20:38:31.602794  5134 net.cpp:408] relu3 <- ip3
I0428 20:38:31.602818  5134 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:31.603016  5134 net.cpp:124] Setting up relu3
I0428 20:38:31.603027  5134 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:31.603046  5134 net.cpp:139] Memory required for data: 20724480
I0428 20:38:31.603051  5134 layer_factory.hpp:77] Creating layer loss
I0428 20:38:31.603058  5134 net.cpp:86] Creating Layer loss
I0428 20:38:31.603063  5134 net.cpp:408] loss <- ip3
I0428 20:38:31.603068  5134 net.cpp:408] loss <- label
I0428 20:38:31.603075  5134 net.cpp:382] loss -> loss
I0428 20:38:31.603106  5134 layer_factory.hpp:77] Creating layer loss
I0428 20:38:31.603406  5134 net.cpp:124] Setting up loss
I0428 20:38:31.603417  5134 net.cpp:131] Top shape: (1)
I0428 20:38:31.603422  5134 net.cpp:134]     with loss weight 1
I0428 20:38:31.603440  5134 net.cpp:139] Memory required for data: 20724484
I0428 20:38:31.603446  5134 net.cpp:200] loss needs backward computation.
I0428 20:38:31.603451  5134 net.cpp:200] relu3 needs backward computation.
I0428 20:38:31.603456  5134 net.cpp:200] ip3 needs backward computation.
I0428 20:38:31.603461  5134 net.cpp:200] relu2 needs backward computation.
I0428 20:38:31.603464  5134 net.cpp:200] ip2 needs backward computation.
I0428 20:38:31.603468  5134 net.cpp:200] relu1 needs backward computation.
I0428 20:38:31.603472  5134 net.cpp:200] ip1 needs backward computation.
I0428 20:38:31.603477  5134 net.cpp:200] pool1 needs backward computation.
I0428 20:38:31.603482  5134 net.cpp:200] conv1 needs backward computation.
I0428 20:38:31.603485  5134 net.cpp:200] pool0 needs backward computation.
I0428 20:38:31.603490  5134 net.cpp:200] conv0 needs backward computation.
I0428 20:38:31.603494  5134 net.cpp:202] mnist does not need backward computation.
I0428 20:38:31.603498  5134 net.cpp:244] This network produces output loss
I0428 20:38:31.603513  5134 net.cpp:257] Network initialization done.
I0428 20:38:31.603991  5134 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1666.prototxt
I0428 20:38:31.604027  5134 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:31.604161  5134 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:31.604312  5134 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:31.604373  5134 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:31.604388  5134 net.cpp:86] Creating Layer mnist
I0428 20:38:31.604395  5134 net.cpp:382] mnist -> data
I0428 20:38:31.604406  5134 net.cpp:382] mnist -> label
I0428 20:38:31.604518  5134 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:31.607355  5134 net.cpp:124] Setting up mnist
I0428 20:38:31.607385  5134 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:31.607408  5134 net.cpp:131] Top shape: 100 (100)
I0428 20:38:31.607411  5134 net.cpp:139] Memory required for data: 314000
I0428 20:38:31.607416  5134 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:31.607427  5134 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:31.607432  5134 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:31.607439  5134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:31.607463  5134 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:31.607566  5134 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:31.607578  5134 net.cpp:131] Top shape: 100 (100)
I0428 20:38:31.607583  5134 net.cpp:131] Top shape: 100 (100)
I0428 20:38:31.607586  5134 net.cpp:139] Memory required for data: 314800
I0428 20:38:31.607590  5134 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:31.607614  5134 net.cpp:86] Creating Layer conv0
I0428 20:38:31.607620  5134 net.cpp:408] conv0 <- data
I0428 20:38:31.607626  5134 net.cpp:382] conv0 -> conv0
I0428 20:38:31.609849  5134 net.cpp:124] Setting up conv0
I0428 20:38:31.609886  5134 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:31.609894  5134 net.cpp:139] Memory required for data: 23354800
I0428 20:38:31.609907  5134 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:31.609918  5134 net.cpp:86] Creating Layer pool0
I0428 20:38:31.609923  5134 net.cpp:408] pool0 <- conv0
I0428 20:38:31.609933  5134 net.cpp:382] pool0 -> pool0
I0428 20:38:31.610034  5134 net.cpp:124] Setting up pool0
I0428 20:38:31.610045  5134 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:31.610051  5134 net.cpp:139] Memory required for data: 29114800
I0428 20:38:31.610057  5134 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:31.610071  5134 net.cpp:86] Creating Layer conv1
I0428 20:38:31.610080  5134 net.cpp:408] conv1 <- pool0
I0428 20:38:31.610090  5134 net.cpp:382] conv1 -> conv1
I0428 20:38:31.614239  5134 net.cpp:124] Setting up conv1
I0428 20:38:31.614270  5134 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:31.614274  5134 net.cpp:139] Memory required for data: 31674800
I0428 20:38:31.614285  5134 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:31.614293  5134 net.cpp:86] Creating Layer pool1
I0428 20:38:31.614298  5134 net.cpp:408] pool1 <- conv1
I0428 20:38:31.614305  5134 net.cpp:382] pool1 -> pool1
I0428 20:38:31.614365  5134 net.cpp:124] Setting up pool1
I0428 20:38:31.614392  5134 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:31.614395  5134 net.cpp:139] Memory required for data: 32314800
I0428 20:38:31.614399  5134 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:31.614408  5134 net.cpp:86] Creating Layer ip1
I0428 20:38:31.614413  5134 net.cpp:408] ip1 <- pool1
I0428 20:38:31.614420  5134 net.cpp:382] ip1 -> ip1
I0428 20:38:31.614907  5134 net.cpp:124] Setting up ip1
I0428 20:38:31.614928  5134 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:31.614948  5134 net.cpp:139] Memory required for data: 32324800
I0428 20:38:31.614959  5134 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:31.614966  5134 net.cpp:86] Creating Layer relu1
I0428 20:38:31.614970  5134 net.cpp:408] relu1 <- ip1
I0428 20:38:31.614979  5134 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:31.615218  5134 net.cpp:124] Setting up relu1
I0428 20:38:31.615229  5134 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:31.615234  5134 net.cpp:139] Memory required for data: 32334800
I0428 20:38:31.615239  5134 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:31.615249  5134 net.cpp:86] Creating Layer ip2
I0428 20:38:31.615254  5134 net.cpp:408] ip2 <- ip1
I0428 20:38:31.615262  5134 net.cpp:382] ip2 -> ip2
I0428 20:38:31.615418  5134 net.cpp:124] Setting up ip2
I0428 20:38:31.615428  5134 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:31.615432  5134 net.cpp:139] Memory required for data: 32354800
I0428 20:38:31.615439  5134 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:31.615447  5134 net.cpp:86] Creating Layer relu2
I0428 20:38:31.615450  5134 net.cpp:408] relu2 <- ip2
I0428 20:38:31.615458  5134 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:31.615665  5134 net.cpp:124] Setting up relu2
I0428 20:38:31.615675  5134 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:38:31.615679  5134 net.cpp:139] Memory required for data: 32374800
I0428 20:38:31.615684  5134 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:31.615691  5134 net.cpp:86] Creating Layer ip3
I0428 20:38:31.615696  5134 net.cpp:408] ip3 <- ip2
I0428 20:38:31.615702  5134 net.cpp:382] ip3 -> ip3
I0428 20:38:31.615824  5134 net.cpp:124] Setting up ip3
I0428 20:38:31.615833  5134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:31.615838  5134 net.cpp:139] Memory required for data: 32378800
I0428 20:38:31.615847  5134 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:31.615854  5134 net.cpp:86] Creating Layer relu3
I0428 20:38:31.615859  5134 net.cpp:408] relu3 <- ip3
I0428 20:38:31.615864  5134 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:31.616879  5134 net.cpp:124] Setting up relu3
I0428 20:38:31.616914  5134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:31.616919  5134 net.cpp:139] Memory required for data: 32382800
I0428 20:38:31.616925  5134 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:31.616932  5134 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:31.616937  5134 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:31.616945  5134 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:31.616952  5134 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:31.617025  5134 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:31.617035  5134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:31.617041  5134 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:31.617046  5134 net.cpp:139] Memory required for data: 32390800
I0428 20:38:31.617051  5134 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:31.617058  5134 net.cpp:86] Creating Layer accuracy
I0428 20:38:31.617063  5134 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:31.617070  5134 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:31.617079  5134 net.cpp:382] accuracy -> accuracy
I0428 20:38:31.617089  5134 net.cpp:124] Setting up accuracy
I0428 20:38:31.617094  5134 net.cpp:131] Top shape: (1)
I0428 20:38:31.617100  5134 net.cpp:139] Memory required for data: 32390804
I0428 20:38:31.617105  5134 layer_factory.hpp:77] Creating layer loss
I0428 20:38:31.617112  5134 net.cpp:86] Creating Layer loss
I0428 20:38:31.617117  5134 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:31.617123  5134 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:31.617135  5134 net.cpp:382] loss -> loss
I0428 20:38:31.617143  5134 layer_factory.hpp:77] Creating layer loss
I0428 20:38:31.617535  5134 net.cpp:124] Setting up loss
I0428 20:38:31.617545  5134 net.cpp:131] Top shape: (1)
I0428 20:38:31.617565  5134 net.cpp:134]     with loss weight 1
I0428 20:38:31.617584  5134 net.cpp:139] Memory required for data: 32390808
I0428 20:38:31.617589  5134 net.cpp:200] loss needs backward computation.
I0428 20:38:31.617595  5134 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:31.617600  5134 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:31.617604  5134 net.cpp:200] relu3 needs backward computation.
I0428 20:38:31.617609  5134 net.cpp:200] ip3 needs backward computation.
I0428 20:38:31.617614  5134 net.cpp:200] relu2 needs backward computation.
I0428 20:38:31.617617  5134 net.cpp:200] ip2 needs backward computation.
I0428 20:38:31.617622  5134 net.cpp:200] relu1 needs backward computation.
I0428 20:38:31.617626  5134 net.cpp:200] ip1 needs backward computation.
I0428 20:38:31.617630  5134 net.cpp:200] pool1 needs backward computation.
I0428 20:38:31.617635  5134 net.cpp:200] conv1 needs backward computation.
I0428 20:38:31.617640  5134 net.cpp:200] pool0 needs backward computation.
I0428 20:38:31.617645  5134 net.cpp:200] conv0 needs backward computation.
I0428 20:38:31.617650  5134 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:31.617668  5134 net.cpp:202] mnist does not need backward computation.
I0428 20:38:31.617672  5134 net.cpp:244] This network produces output accuracy
I0428 20:38:31.617677  5134 net.cpp:244] This network produces output loss
I0428 20:38:31.617692  5134 net.cpp:257] Network initialization done.
I0428 20:38:31.617743  5134 solver.cpp:56] Solver scaffolding done.
I0428 20:38:31.618163  5134 caffe.cpp:248] Starting Optimization
I0428 20:38:31.618172  5134 solver.cpp:273] Solving LeNet
I0428 20:38:31.618191  5134 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:31.619921  5134 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:31.751327  5141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:31.754653  5134 solver.cpp:398]     Test net output #0: accuracy = 0.1535
I0428 20:38:31.754688  5134 solver.cpp:398]     Test net output #1: loss = 2.29039 (* 1 = 2.29039 loss)
I0428 20:38:31.759940  5134 solver.cpp:219] Iteration 0 (-2.05601e-31 iter/s, 0.141717s/100 iters), loss = 2.32187
I0428 20:38:31.759979  5134 solver.cpp:238]     Train net output #0: loss = 2.32187 (* 1 = 2.32187 loss)
I0428 20:38:31.760004  5134 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:32.033330  5134 solver.cpp:219] Iteration 100 (365.847 iter/s, 0.273338s/100 iters), loss = 0.564991
I0428 20:38:32.033375  5134 solver.cpp:238]     Train net output #0: loss = 0.564991 (* 1 = 0.564991 loss)
I0428 20:38:32.033387  5134 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:32.319578  5134 solver.cpp:219] Iteration 200 (349.425 iter/s, 0.286184s/100 iters), loss = 0.441675
I0428 20:38:32.319631  5134 solver.cpp:238]     Train net output #0: loss = 0.441675 (* 1 = 0.441675 loss)
I0428 20:38:32.319643  5134 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:32.602397  5134 solver.cpp:219] Iteration 300 (353.672 iter/s, 0.282748s/100 iters), loss = 0.566415
I0428 20:38:32.602437  5134 solver.cpp:238]     Train net output #0: loss = 0.566415 (* 1 = 0.566415 loss)
I0428 20:38:32.602448  5134 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:32.886688  5134 solver.cpp:219] Iteration 400 (351.824 iter/s, 0.284233s/100 iters), loss = 0.863908
I0428 20:38:32.886726  5134 solver.cpp:238]     Train net output #0: loss = 0.863908 (* 1 = 0.863908 loss)
I0428 20:38:32.886736  5134 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:33.175014  5134 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:33.308971  5141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:33.313935  5134 solver.cpp:398]     Test net output #0: accuracy = 0.8673
I0428 20:38:33.313976  5134 solver.cpp:398]     Test net output #1: loss = 0.544264 (* 1 = 0.544264 loss)
I0428 20:38:33.316646  5134 solver.cpp:219] Iteration 500 (232.614 iter/s, 0.429897s/100 iters), loss = 0.688628
I0428 20:38:33.316689  5134 solver.cpp:238]     Train net output #0: loss = 0.688628 (* 1 = 0.688628 loss)
I0428 20:38:33.316725  5134 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:33.593130  5134 solver.cpp:219] Iteration 600 (361.751 iter/s, 0.276433s/100 iters), loss = 0.376965
I0428 20:38:33.593176  5134 solver.cpp:238]     Train net output #0: loss = 0.376965 (* 1 = 0.376965 loss)
I0428 20:38:33.593184  5134 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:33.872053  5134 solver.cpp:219] Iteration 700 (358.589 iter/s, 0.278871s/100 iters), loss = 0.489309
I0428 20:38:33.872092  5134 solver.cpp:238]     Train net output #0: loss = 0.489309 (* 1 = 0.489309 loss)
I0428 20:38:33.872099  5134 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:34.155103  5134 solver.cpp:219] Iteration 800 (353.355 iter/s, 0.283002s/100 iters), loss = 0.570046
I0428 20:38:34.155133  5134 solver.cpp:238]     Train net output #0: loss = 0.570047 (* 1 = 0.570047 loss)
I0428 20:38:34.155140  5134 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:34.438519  5134 solver.cpp:219] Iteration 900 (352.897 iter/s, 0.283368s/100 iters), loss = 0.333539
I0428 20:38:34.438560  5134 solver.cpp:238]     Train net output #0: loss = 0.333539 (* 1 = 0.333539 loss)
I0428 20:38:34.438565  5134 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:34.531914  5140 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:34.718125  5134 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:34.723583  5134 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:34.726766  5134 solver.cpp:311] Iteration 1000, loss = 0.496735
I0428 20:38:34.726783  5134 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:34.855187  5141 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:34.859717  5134 solver.cpp:398]     Test net output #0: accuracy = 0.8728
I0428 20:38:34.859752  5134 solver.cpp:398]     Test net output #1: loss = 0.527806 (* 1 = 0.527806 loss)
I0428 20:38:34.859757  5134 solver.cpp:316] Optimization Done.
I0428 20:38:34.859760  5134 caffe.cpp:259] Optimization Done.
