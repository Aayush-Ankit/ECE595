I0428 19:50:46.137549 27094 caffe.cpp:218] Using GPUs 0
I0428 19:50:46.169987 27094 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:46.629405 27094 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test614.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:46.629534 27094 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test614.prototxt
I0428 19:50:46.629860 27094 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:46.629875 27094 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:46.629958 27094 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:46.630038 27094 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:46.630117 27094 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:46.630136 27094 net.cpp:86] Creating Layer mnist
I0428 19:50:46.630142 27094 net.cpp:382] mnist -> data
I0428 19:50:46.630162 27094 net.cpp:382] mnist -> label
I0428 19:50:46.631088 27094 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:46.633360 27094 net.cpp:124] Setting up mnist
I0428 19:50:46.633394 27094 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:46.633399 27094 net.cpp:131] Top shape: 64 (64)
I0428 19:50:46.633401 27094 net.cpp:139] Memory required for data: 200960
I0428 19:50:46.633406 27094 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:46.633420 27094 net.cpp:86] Creating Layer conv0
I0428 19:50:46.633437 27094 net.cpp:408] conv0 <- data
I0428 19:50:46.633447 27094 net.cpp:382] conv0 -> conv0
I0428 19:50:46.862238 27094 net.cpp:124] Setting up conv0
I0428 19:50:46.862279 27094 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:46.862283 27094 net.cpp:139] Memory required for data: 938240
I0428 19:50:46.862299 27094 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:46.862327 27094 net.cpp:86] Creating Layer pool0
I0428 19:50:46.862331 27094 net.cpp:408] pool0 <- conv0
I0428 19:50:46.862337 27094 net.cpp:382] pool0 -> pool0
I0428 19:50:46.862381 27094 net.cpp:124] Setting up pool0
I0428 19:50:46.862390 27094 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:46.862392 27094 net.cpp:139] Memory required for data: 1122560
I0428 19:50:46.862396 27094 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:46.862406 27094 net.cpp:86] Creating Layer conv1
I0428 19:50:46.862409 27094 net.cpp:408] conv1 <- pool0
I0428 19:50:46.862413 27094 net.cpp:382] conv1 -> conv1
I0428 19:50:46.865262 27094 net.cpp:124] Setting up conv1
I0428 19:50:46.865290 27094 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:46.865294 27094 net.cpp:139] Memory required for data: 1286400
I0428 19:50:46.865303 27094 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:46.865309 27094 net.cpp:86] Creating Layer pool1
I0428 19:50:46.865312 27094 net.cpp:408] pool1 <- conv1
I0428 19:50:46.865332 27094 net.cpp:382] pool1 -> pool1
I0428 19:50:46.865368 27094 net.cpp:124] Setting up pool1
I0428 19:50:46.865375 27094 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:46.865378 27094 net.cpp:139] Memory required for data: 1327360
I0428 19:50:46.865381 27094 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:46.865387 27094 net.cpp:86] Creating Layer ip1
I0428 19:50:46.865391 27094 net.cpp:408] ip1 <- pool1
I0428 19:50:46.865396 27094 net.cpp:382] ip1 -> ip1
I0428 19:50:46.865528 27094 net.cpp:124] Setting up ip1
I0428 19:50:46.865535 27094 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:46.865538 27094 net.cpp:139] Memory required for data: 1333760
I0428 19:50:46.865545 27094 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:46.865551 27094 net.cpp:86] Creating Layer relu1
I0428 19:50:46.865555 27094 net.cpp:408] relu1 <- ip1
I0428 19:50:46.865558 27094 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:46.865716 27094 net.cpp:124] Setting up relu1
I0428 19:50:46.865725 27094 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:50:46.865744 27094 net.cpp:139] Memory required for data: 1340160
I0428 19:50:46.865747 27094 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:46.865753 27094 net.cpp:86] Creating Layer ip2
I0428 19:50:46.865756 27094 net.cpp:408] ip2 <- ip1
I0428 19:50:46.865761 27094 net.cpp:382] ip2 -> ip2
I0428 19:50:46.865855 27094 net.cpp:124] Setting up ip2
I0428 19:50:46.865862 27094 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:46.865865 27094 net.cpp:139] Memory required for data: 1352960
I0428 19:50:46.865870 27094 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:46.865875 27094 net.cpp:86] Creating Layer relu2
I0428 19:50:46.865880 27094 net.cpp:408] relu2 <- ip2
I0428 19:50:46.865883 27094 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:46.866581 27094 net.cpp:124] Setting up relu2
I0428 19:50:46.866593 27094 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:46.866612 27094 net.cpp:139] Memory required for data: 1365760
I0428 19:50:46.866616 27094 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:46.866622 27094 net.cpp:86] Creating Layer ip3
I0428 19:50:46.866626 27094 net.cpp:408] ip3 <- ip2
I0428 19:50:46.866631 27094 net.cpp:382] ip3 -> ip3
I0428 19:50:46.866758 27094 net.cpp:124] Setting up ip3
I0428 19:50:46.866766 27094 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:46.866770 27094 net.cpp:139] Memory required for data: 1368320
I0428 19:50:46.866777 27094 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:46.866782 27094 net.cpp:86] Creating Layer relu3
I0428 19:50:46.866786 27094 net.cpp:408] relu3 <- ip3
I0428 19:50:46.866789 27094 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:46.866987 27094 net.cpp:124] Setting up relu3
I0428 19:50:46.866997 27094 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:46.867000 27094 net.cpp:139] Memory required for data: 1370880
I0428 19:50:46.867003 27094 layer_factory.hpp:77] Creating layer loss
I0428 19:50:46.867008 27094 net.cpp:86] Creating Layer loss
I0428 19:50:46.867012 27094 net.cpp:408] loss <- ip3
I0428 19:50:46.867015 27094 net.cpp:408] loss <- label
I0428 19:50:46.867022 27094 net.cpp:382] loss -> loss
I0428 19:50:46.867036 27094 layer_factory.hpp:77] Creating layer loss
I0428 19:50:46.867269 27094 net.cpp:124] Setting up loss
I0428 19:50:46.867278 27094 net.cpp:131] Top shape: (1)
I0428 19:50:46.867281 27094 net.cpp:134]     with loss weight 1
I0428 19:50:46.867296 27094 net.cpp:139] Memory required for data: 1370884
I0428 19:50:46.867300 27094 net.cpp:200] loss needs backward computation.
I0428 19:50:46.867303 27094 net.cpp:200] relu3 needs backward computation.
I0428 19:50:46.867306 27094 net.cpp:200] ip3 needs backward computation.
I0428 19:50:46.867310 27094 net.cpp:200] relu2 needs backward computation.
I0428 19:50:46.867312 27094 net.cpp:200] ip2 needs backward computation.
I0428 19:50:46.867316 27094 net.cpp:200] relu1 needs backward computation.
I0428 19:50:46.867318 27094 net.cpp:200] ip1 needs backward computation.
I0428 19:50:46.867321 27094 net.cpp:200] pool1 needs backward computation.
I0428 19:50:46.867324 27094 net.cpp:200] conv1 needs backward computation.
I0428 19:50:46.867327 27094 net.cpp:200] pool0 needs backward computation.
I0428 19:50:46.867331 27094 net.cpp:200] conv0 needs backward computation.
I0428 19:50:46.867333 27094 net.cpp:202] mnist does not need backward computation.
I0428 19:50:46.867336 27094 net.cpp:244] This network produces output loss
I0428 19:50:46.867346 27094 net.cpp:257] Network initialization done.
I0428 19:50:46.867759 27094 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test614.prototxt
I0428 19:50:46.867817 27094 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:46.867908 27094 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:46.868000 27094 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:46.868041 27094 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:46.868053 27094 net.cpp:86] Creating Layer mnist
I0428 19:50:46.868058 27094 net.cpp:382] mnist -> data
I0428 19:50:46.868065 27094 net.cpp:382] mnist -> label
I0428 19:50:46.868145 27094 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:46.870370 27094 net.cpp:124] Setting up mnist
I0428 19:50:46.870400 27094 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:46.870405 27094 net.cpp:131] Top shape: 100 (100)
I0428 19:50:46.870409 27094 net.cpp:139] Memory required for data: 314000
I0428 19:50:46.870411 27094 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:46.870417 27094 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:46.870420 27094 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:46.870425 27094 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:46.870431 27094 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:46.870501 27094 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:46.870507 27094 net.cpp:131] Top shape: 100 (100)
I0428 19:50:46.870510 27094 net.cpp:131] Top shape: 100 (100)
I0428 19:50:46.870512 27094 net.cpp:139] Memory required for data: 314800
I0428 19:50:46.870515 27094 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:46.870523 27094 net.cpp:86] Creating Layer conv0
I0428 19:50:46.870542 27094 net.cpp:408] conv0 <- data
I0428 19:50:46.870546 27094 net.cpp:382] conv0 -> conv0
I0428 19:50:46.872149 27094 net.cpp:124] Setting up conv0
I0428 19:50:46.872162 27094 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:46.872165 27094 net.cpp:139] Memory required for data: 1466800
I0428 19:50:46.872174 27094 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:46.872181 27094 net.cpp:86] Creating Layer pool0
I0428 19:50:46.872184 27094 net.cpp:408] pool0 <- conv0
I0428 19:50:46.872189 27094 net.cpp:382] pool0 -> pool0
I0428 19:50:46.872223 27094 net.cpp:124] Setting up pool0
I0428 19:50:46.872231 27094 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:46.872233 27094 net.cpp:139] Memory required for data: 1754800
I0428 19:50:46.872236 27094 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:46.872243 27094 net.cpp:86] Creating Layer conv1
I0428 19:50:46.872247 27094 net.cpp:408] conv1 <- pool0
I0428 19:50:46.872251 27094 net.cpp:382] conv1 -> conv1
I0428 19:50:46.874471 27094 net.cpp:124] Setting up conv1
I0428 19:50:46.874485 27094 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:46.874488 27094 net.cpp:139] Memory required for data: 2010800
I0428 19:50:46.874497 27094 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:46.874503 27094 net.cpp:86] Creating Layer pool1
I0428 19:50:46.874507 27094 net.cpp:408] pool1 <- conv1
I0428 19:50:46.874512 27094 net.cpp:382] pool1 -> pool1
I0428 19:50:46.874624 27094 net.cpp:124] Setting up pool1
I0428 19:50:46.874631 27094 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:46.874634 27094 net.cpp:139] Memory required for data: 2074800
I0428 19:50:46.874637 27094 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:46.874644 27094 net.cpp:86] Creating Layer ip1
I0428 19:50:46.874646 27094 net.cpp:408] ip1 <- pool1
I0428 19:50:46.874666 27094 net.cpp:382] ip1 -> ip1
I0428 19:50:46.874783 27094 net.cpp:124] Setting up ip1
I0428 19:50:46.874790 27094 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:46.874819 27094 net.cpp:139] Memory required for data: 2084800
I0428 19:50:46.874827 27094 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:46.874832 27094 net.cpp:86] Creating Layer relu1
I0428 19:50:46.874836 27094 net.cpp:408] relu1 <- ip1
I0428 19:50:46.874846 27094 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:46.875005 27094 net.cpp:124] Setting up relu1
I0428 19:50:46.875012 27094 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:50:46.875015 27094 net.cpp:139] Memory required for data: 2094800
I0428 19:50:46.875018 27094 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:46.875025 27094 net.cpp:86] Creating Layer ip2
I0428 19:50:46.875028 27094 net.cpp:408] ip2 <- ip1
I0428 19:50:46.875038 27094 net.cpp:382] ip2 -> ip2
I0428 19:50:46.875140 27094 net.cpp:124] Setting up ip2
I0428 19:50:46.875147 27094 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:46.875150 27094 net.cpp:139] Memory required for data: 2114800
I0428 19:50:46.875155 27094 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:46.875178 27094 net.cpp:86] Creating Layer relu2
I0428 19:50:46.875181 27094 net.cpp:408] relu2 <- ip2
I0428 19:50:46.875185 27094 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:46.875432 27094 net.cpp:124] Setting up relu2
I0428 19:50:46.875442 27094 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:46.875444 27094 net.cpp:139] Memory required for data: 2134800
I0428 19:50:46.875447 27094 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:46.875453 27094 net.cpp:86] Creating Layer ip3
I0428 19:50:46.875457 27094 net.cpp:408] ip3 <- ip2
I0428 19:50:46.875473 27094 net.cpp:382] ip3 -> ip3
I0428 19:50:46.875576 27094 net.cpp:124] Setting up ip3
I0428 19:50:46.875582 27094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:46.875586 27094 net.cpp:139] Memory required for data: 2138800
I0428 19:50:46.875594 27094 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:46.875599 27094 net.cpp:86] Creating Layer relu3
I0428 19:50:46.875602 27094 net.cpp:408] relu3 <- ip3
I0428 19:50:46.875607 27094 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:46.876421 27094 net.cpp:124] Setting up relu3
I0428 19:50:46.876435 27094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:46.876437 27094 net.cpp:139] Memory required for data: 2142800
I0428 19:50:46.876441 27094 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:46.876446 27094 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:46.876451 27094 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:46.876456 27094 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:46.876472 27094 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:46.876509 27094 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:46.876516 27094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:46.876519 27094 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:46.876523 27094 net.cpp:139] Memory required for data: 2150800
I0428 19:50:46.876525 27094 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:46.876530 27094 net.cpp:86] Creating Layer accuracy
I0428 19:50:46.876533 27094 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:46.876538 27094 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:46.876541 27094 net.cpp:382] accuracy -> accuracy
I0428 19:50:46.876549 27094 net.cpp:124] Setting up accuracy
I0428 19:50:46.876552 27094 net.cpp:131] Top shape: (1)
I0428 19:50:46.876554 27094 net.cpp:139] Memory required for data: 2150804
I0428 19:50:46.876557 27094 layer_factory.hpp:77] Creating layer loss
I0428 19:50:46.876561 27094 net.cpp:86] Creating Layer loss
I0428 19:50:46.876564 27094 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:46.876569 27094 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:46.876572 27094 net.cpp:382] loss -> loss
I0428 19:50:46.876577 27094 layer_factory.hpp:77] Creating layer loss
I0428 19:50:46.876829 27094 net.cpp:124] Setting up loss
I0428 19:50:46.876839 27094 net.cpp:131] Top shape: (1)
I0428 19:50:46.876842 27094 net.cpp:134]     with loss weight 1
I0428 19:50:46.876860 27094 net.cpp:139] Memory required for data: 2150808
I0428 19:50:46.876891 27094 net.cpp:200] loss needs backward computation.
I0428 19:50:46.876895 27094 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:46.876899 27094 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:46.876904 27094 net.cpp:200] relu3 needs backward computation.
I0428 19:50:46.876906 27094 net.cpp:200] ip3 needs backward computation.
I0428 19:50:46.876909 27094 net.cpp:200] relu2 needs backward computation.
I0428 19:50:46.876929 27094 net.cpp:200] ip2 needs backward computation.
I0428 19:50:46.876932 27094 net.cpp:200] relu1 needs backward computation.
I0428 19:50:46.876935 27094 net.cpp:200] ip1 needs backward computation.
I0428 19:50:46.876940 27094 net.cpp:200] pool1 needs backward computation.
I0428 19:50:46.876942 27094 net.cpp:200] conv1 needs backward computation.
I0428 19:50:46.876946 27094 net.cpp:200] pool0 needs backward computation.
I0428 19:50:46.876950 27094 net.cpp:200] conv0 needs backward computation.
I0428 19:50:46.876955 27094 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:46.876958 27094 net.cpp:202] mnist does not need backward computation.
I0428 19:50:46.876961 27094 net.cpp:244] This network produces output accuracy
I0428 19:50:46.876965 27094 net.cpp:244] This network produces output loss
I0428 19:50:46.876976 27094 net.cpp:257] Network initialization done.
I0428 19:50:46.877022 27094 solver.cpp:56] Solver scaffolding done.
I0428 19:50:46.877409 27094 caffe.cpp:248] Starting Optimization
I0428 19:50:46.877415 27094 solver.cpp:273] Solving LeNet
I0428 19:50:46.877418 27094 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:46.878227 27094 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:46.881433 27094 blocking_queue.cpp:49] Waiting for data
I0428 19:50:46.933162 27126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:46.933699 27094 solver.cpp:398]     Test net output #0: accuracy = 0.0564
I0428 19:50:46.933717 27094 solver.cpp:398]     Test net output #1: loss = 2.30564 (* 1 = 2.30564 loss)
I0428 19:50:46.935626 27094 solver.cpp:219] Iteration 0 (-5.72e-31 iter/s, 0.0581857s/100 iters), loss = 2.30866
I0428 19:50:46.935649 27094 solver.cpp:238]     Train net output #0: loss = 2.30866 (* 1 = 2.30866 loss)
I0428 19:50:46.935677 27094 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:47.022213 27094 solver.cpp:219] Iteration 100 (1155.34 iter/s, 0.0865546s/100 iters), loss = 1.29627
I0428 19:50:47.022238 27094 solver.cpp:238]     Train net output #0: loss = 1.29627 (* 1 = 1.29627 loss)
I0428 19:50:47.022243 27094 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:47.100419 27094 solver.cpp:219] Iteration 200 (1279.23 iter/s, 0.0781722s/100 iters), loss = 1.41889
I0428 19:50:47.100459 27094 solver.cpp:238]     Train net output #0: loss = 1.41889 (* 1 = 1.41889 loss)
I0428 19:50:47.100466 27094 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:47.182351 27094 solver.cpp:219] Iteration 300 (1221.27 iter/s, 0.0818821s/100 iters), loss = 1.33226
I0428 19:50:47.182381 27094 solver.cpp:238]     Train net output #0: loss = 1.33226 (* 1 = 1.33226 loss)
I0428 19:50:47.182389 27094 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:47.260257 27094 solver.cpp:219] Iteration 400 (1284.21 iter/s, 0.077869s/100 iters), loss = 1.47477
I0428 19:50:47.260282 27094 solver.cpp:238]     Train net output #0: loss = 1.47477 (* 1 = 1.47477 loss)
I0428 19:50:47.260288 27094 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:47.332949 27094 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:47.386238 27126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:47.386749 27094 solver.cpp:398]     Test net output #0: accuracy = 0.5531
I0428 19:50:47.386766 27094 solver.cpp:398]     Test net output #1: loss = 1.27086 (* 1 = 1.27086 loss)
I0428 19:50:47.387573 27094 solver.cpp:219] Iteration 500 (785.669 iter/s, 0.12728s/100 iters), loss = 1.17558
I0428 19:50:47.387598 27094 solver.cpp:238]     Train net output #0: loss = 1.17558 (* 1 = 1.17558 loss)
I0428 19:50:47.387619 27094 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:47.470944 27094 solver.cpp:219] Iteration 600 (1199.97 iter/s, 0.0833352s/100 iters), loss = 1.0246
I0428 19:50:47.470985 27094 solver.cpp:238]     Train net output #0: loss = 1.0246 (* 1 = 1.0246 loss)
I0428 19:50:47.470993 27094 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:47.553988 27094 solver.cpp:219] Iteration 700 (1204.68 iter/s, 0.0830095s/100 iters), loss = 1.08832
I0428 19:50:47.554013 27094 solver.cpp:238]     Train net output #0: loss = 1.08832 (* 1 = 1.08832 loss)
I0428 19:50:47.554018 27094 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:47.633633 27094 solver.cpp:219] Iteration 800 (1256.13 iter/s, 0.0796099s/100 iters), loss = 1.01412
I0428 19:50:47.633668 27094 solver.cpp:238]     Train net output #0: loss = 1.01412 (* 1 = 1.01412 loss)
I0428 19:50:47.633677 27094 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:47.713537 27094 solver.cpp:219] Iteration 900 (1252.18 iter/s, 0.0798607s/100 iters), loss = 1.25416
I0428 19:50:47.713564 27094 solver.cpp:238]     Train net output #0: loss = 1.25416 (* 1 = 1.25416 loss)
I0428 19:50:47.713572 27094 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:47.739289 27125 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:47.790344 27094 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:47.791153 27094 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:47.791669 27094 solver.cpp:311] Iteration 1000, loss = 0.999932
I0428 19:50:47.791702 27094 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:47.844432 27126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:47.844919 27094 solver.cpp:398]     Test net output #0: accuracy = 0.6638
I0428 19:50:47.844939 27094 solver.cpp:398]     Test net output #1: loss = 1.03268 (* 1 = 1.03268 loss)
I0428 19:50:47.844944 27094 solver.cpp:316] Optimization Done.
I0428 19:50:47.844947 27094 caffe.cpp:259] Optimization Done.
