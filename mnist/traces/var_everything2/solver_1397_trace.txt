I0428 20:22:04.080412  1882 caffe.cpp:218] Using GPUs 0
I0428 20:22:04.108598  1882 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:22:04.555510  1882 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1397.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:22:04.555663  1882 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1397.prototxt
I0428 20:22:04.556035  1882 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:22:04.556066  1882 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:22:04.556149  1882 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:22:04.556215  1882 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:04.556313  1882 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:22:04.556332  1882 net.cpp:86] Creating Layer mnist
I0428 20:22:04.556341  1882 net.cpp:382] mnist -> data
I0428 20:22:04.556360  1882 net.cpp:382] mnist -> label
I0428 20:22:04.557373  1882 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:22:04.559659  1882 net.cpp:124] Setting up mnist
I0428 20:22:04.559705  1882 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:22:04.559710  1882 net.cpp:131] Top shape: 64 (64)
I0428 20:22:04.559712  1882 net.cpp:139] Memory required for data: 200960
I0428 20:22:04.559718  1882 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:04.559733  1882 net.cpp:86] Creating Layer conv0
I0428 20:22:04.559751  1882 net.cpp:408] conv0 <- data
I0428 20:22:04.559762  1882 net.cpp:382] conv0 -> conv0
I0428 20:22:04.790411  1882 net.cpp:124] Setting up conv0
I0428 20:22:04.790452  1882 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:22:04.790457  1882 net.cpp:139] Memory required for data: 7573760
I0428 20:22:04.790472  1882 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:04.790514  1882 net.cpp:86] Creating Layer pool0
I0428 20:22:04.790518  1882 net.cpp:408] pool0 <- conv0
I0428 20:22:04.790524  1882 net.cpp:382] pool0 -> pool0
I0428 20:22:04.790582  1882 net.cpp:124] Setting up pool0
I0428 20:22:04.790590  1882 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:22:04.790592  1882 net.cpp:139] Memory required for data: 9416960
I0428 20:22:04.790596  1882 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:04.790606  1882 net.cpp:86] Creating Layer conv1
I0428 20:22:04.790609  1882 net.cpp:408] conv1 <- pool0
I0428 20:22:04.790614  1882 net.cpp:382] conv1 -> conv1
I0428 20:22:04.792919  1882 net.cpp:124] Setting up conv1
I0428 20:22:04.792954  1882 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:22:04.792959  1882 net.cpp:139] Memory required for data: 10236160
I0428 20:22:04.792968  1882 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:04.792975  1882 net.cpp:86] Creating Layer pool1
I0428 20:22:04.792994  1882 net.cpp:408] pool1 <- conv1
I0428 20:22:04.792999  1882 net.cpp:382] pool1 -> pool1
I0428 20:22:04.793041  1882 net.cpp:124] Setting up pool1
I0428 20:22:04.793063  1882 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:22:04.793066  1882 net.cpp:139] Memory required for data: 10440960
I0428 20:22:04.793069  1882 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:04.793077  1882 net.cpp:86] Creating Layer ip1
I0428 20:22:04.793081  1882 net.cpp:408] ip1 <- pool1
I0428 20:22:04.793085  1882 net.cpp:382] ip1 -> ip1
I0428 20:22:04.793436  1882 net.cpp:124] Setting up ip1
I0428 20:22:04.793442  1882 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:22:04.793460  1882 net.cpp:139] Memory required for data: 10453760
I0428 20:22:04.793467  1882 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:04.793473  1882 net.cpp:86] Creating Layer relu1
I0428 20:22:04.793478  1882 net.cpp:408] relu1 <- ip1
I0428 20:22:04.793481  1882 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:04.793645  1882 net.cpp:124] Setting up relu1
I0428 20:22:04.793654  1882 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:22:04.793658  1882 net.cpp:139] Memory required for data: 10466560
I0428 20:22:04.793660  1882 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:04.793668  1882 net.cpp:86] Creating Layer ip2
I0428 20:22:04.793669  1882 net.cpp:408] ip2 <- ip1
I0428 20:22:04.793675  1882 net.cpp:382] ip2 -> ip2
I0428 20:22:04.793767  1882 net.cpp:124] Setting up ip2
I0428 20:22:04.793774  1882 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:04.793777  1882 net.cpp:139] Memory required for data: 10469120
I0428 20:22:04.793782  1882 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:04.793788  1882 net.cpp:86] Creating Layer relu2
I0428 20:22:04.793790  1882 net.cpp:408] relu2 <- ip2
I0428 20:22:04.793794  1882 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:04.794602  1882 net.cpp:124] Setting up relu2
I0428 20:22:04.794615  1882 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:04.794634  1882 net.cpp:139] Memory required for data: 10471680
I0428 20:22:04.794637  1882 layer_factory.hpp:77] Creating layer ip3
I0428 20:22:04.794646  1882 net.cpp:86] Creating Layer ip3
I0428 20:22:04.794648  1882 net.cpp:408] ip3 <- ip2
I0428 20:22:04.794654  1882 net.cpp:382] ip3 -> ip3
I0428 20:22:04.794787  1882 net.cpp:124] Setting up ip3
I0428 20:22:04.794795  1882 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:04.794797  1882 net.cpp:139] Memory required for data: 10474240
I0428 20:22:04.794806  1882 layer_factory.hpp:77] Creating layer relu3
I0428 20:22:04.794811  1882 net.cpp:86] Creating Layer relu3
I0428 20:22:04.794813  1882 net.cpp:408] relu3 <- ip3
I0428 20:22:04.794818  1882 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:22:04.795009  1882 net.cpp:124] Setting up relu3
I0428 20:22:04.795033  1882 net.cpp:131] Top shape: 64 10 (640)
I0428 20:22:04.795037  1882 net.cpp:139] Memory required for data: 10476800
I0428 20:22:04.795039  1882 layer_factory.hpp:77] Creating layer loss
I0428 20:22:04.795045  1882 net.cpp:86] Creating Layer loss
I0428 20:22:04.795048  1882 net.cpp:408] loss <- ip3
I0428 20:22:04.795053  1882 net.cpp:408] loss <- label
I0428 20:22:04.795058  1882 net.cpp:382] loss -> loss
I0428 20:22:04.795076  1882 layer_factory.hpp:77] Creating layer loss
I0428 20:22:04.795392  1882 net.cpp:124] Setting up loss
I0428 20:22:04.795421  1882 net.cpp:131] Top shape: (1)
I0428 20:22:04.795426  1882 net.cpp:134]     with loss weight 1
I0428 20:22:04.795441  1882 net.cpp:139] Memory required for data: 10476804
I0428 20:22:04.795445  1882 net.cpp:200] loss needs backward computation.
I0428 20:22:04.795464  1882 net.cpp:200] relu3 needs backward computation.
I0428 20:22:04.795467  1882 net.cpp:200] ip3 needs backward computation.
I0428 20:22:04.795469  1882 net.cpp:200] relu2 needs backward computation.
I0428 20:22:04.795472  1882 net.cpp:200] ip2 needs backward computation.
I0428 20:22:04.795475  1882 net.cpp:200] relu1 needs backward computation.
I0428 20:22:04.795477  1882 net.cpp:200] ip1 needs backward computation.
I0428 20:22:04.795480  1882 net.cpp:200] pool1 needs backward computation.
I0428 20:22:04.795483  1882 net.cpp:200] conv1 needs backward computation.
I0428 20:22:04.795486  1882 net.cpp:200] pool0 needs backward computation.
I0428 20:22:04.795490  1882 net.cpp:200] conv0 needs backward computation.
I0428 20:22:04.795492  1882 net.cpp:202] mnist does not need backward computation.
I0428 20:22:04.795495  1882 net.cpp:244] This network produces output loss
I0428 20:22:04.795505  1882 net.cpp:257] Network initialization done.
I0428 20:22:04.795837  1882 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1397.prototxt
I0428 20:22:04.795879  1882 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:22:04.795967  1882 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:22:04.796063  1882 layer_factory.hpp:77] Creating layer mnist
I0428 20:22:04.796108  1882 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:22:04.796120  1882 net.cpp:86] Creating Layer mnist
I0428 20:22:04.796125  1882 net.cpp:382] mnist -> data
I0428 20:22:04.796133  1882 net.cpp:382] mnist -> label
I0428 20:22:04.796231  1882 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:22:04.798497  1882 net.cpp:124] Setting up mnist
I0428 20:22:04.798545  1882 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:22:04.798568  1882 net.cpp:131] Top shape: 100 (100)
I0428 20:22:04.798573  1882 net.cpp:139] Memory required for data: 314000
I0428 20:22:04.798576  1882 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:22:04.798598  1882 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:22:04.798615  1882 net.cpp:408] label_mnist_1_split <- label
I0428 20:22:04.798620  1882 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:22:04.798626  1882 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:22:04.798732  1882 net.cpp:124] Setting up label_mnist_1_split
I0428 20:22:04.798740  1882 net.cpp:131] Top shape: 100 (100)
I0428 20:22:04.798744  1882 net.cpp:131] Top shape: 100 (100)
I0428 20:22:04.798746  1882 net.cpp:139] Memory required for data: 314800
I0428 20:22:04.798749  1882 layer_factory.hpp:77] Creating layer conv0
I0428 20:22:04.798759  1882 net.cpp:86] Creating Layer conv0
I0428 20:22:04.798763  1882 net.cpp:408] conv0 <- data
I0428 20:22:04.798769  1882 net.cpp:382] conv0 -> conv0
I0428 20:22:04.800420  1882 net.cpp:124] Setting up conv0
I0428 20:22:04.800468  1882 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:22:04.800475  1882 net.cpp:139] Memory required for data: 11834800
I0428 20:22:04.800490  1882 layer_factory.hpp:77] Creating layer pool0
I0428 20:22:04.800504  1882 net.cpp:86] Creating Layer pool0
I0428 20:22:04.800523  1882 net.cpp:408] pool0 <- conv0
I0428 20:22:04.800532  1882 net.cpp:382] pool0 -> pool0
I0428 20:22:04.800571  1882 net.cpp:124] Setting up pool0
I0428 20:22:04.800578  1882 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:22:04.800581  1882 net.cpp:139] Memory required for data: 14714800
I0428 20:22:04.800585  1882 layer_factory.hpp:77] Creating layer conv1
I0428 20:22:04.800593  1882 net.cpp:86] Creating Layer conv1
I0428 20:22:04.800596  1882 net.cpp:408] conv1 <- pool0
I0428 20:22:04.800602  1882 net.cpp:382] conv1 -> conv1
I0428 20:22:04.802734  1882 net.cpp:124] Setting up conv1
I0428 20:22:04.802764  1882 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:22:04.802768  1882 net.cpp:139] Memory required for data: 15994800
I0428 20:22:04.802778  1882 layer_factory.hpp:77] Creating layer pool1
I0428 20:22:04.802784  1882 net.cpp:86] Creating Layer pool1
I0428 20:22:04.802788  1882 net.cpp:408] pool1 <- conv1
I0428 20:22:04.802809  1882 net.cpp:382] pool1 -> pool1
I0428 20:22:04.802847  1882 net.cpp:124] Setting up pool1
I0428 20:22:04.802855  1882 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:22:04.802858  1882 net.cpp:139] Memory required for data: 16314800
I0428 20:22:04.802861  1882 layer_factory.hpp:77] Creating layer ip1
I0428 20:22:04.802867  1882 net.cpp:86] Creating Layer ip1
I0428 20:22:04.802870  1882 net.cpp:408] ip1 <- pool1
I0428 20:22:04.802877  1882 net.cpp:382] ip1 -> ip1
I0428 20:22:04.803243  1882 net.cpp:124] Setting up ip1
I0428 20:22:04.803251  1882 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:22:04.803278  1882 net.cpp:139] Memory required for data: 16334800
I0428 20:22:04.803285  1882 layer_factory.hpp:77] Creating layer relu1
I0428 20:22:04.803290  1882 net.cpp:86] Creating Layer relu1
I0428 20:22:04.803294  1882 net.cpp:408] relu1 <- ip1
I0428 20:22:04.803300  1882 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:22:04.803550  1882 net.cpp:124] Setting up relu1
I0428 20:22:04.803560  1882 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:22:04.803563  1882 net.cpp:139] Memory required for data: 16354800
I0428 20:22:04.803566  1882 layer_factory.hpp:77] Creating layer ip2
I0428 20:22:04.803575  1882 net.cpp:86] Creating Layer ip2
I0428 20:22:04.803577  1882 net.cpp:408] ip2 <- ip1
I0428 20:22:04.803582  1882 net.cpp:382] ip2 -> ip2
I0428 20:22:04.803681  1882 net.cpp:124] Setting up ip2
I0428 20:22:04.803689  1882 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:04.803690  1882 net.cpp:139] Memory required for data: 16358800
I0428 20:22:04.803695  1882 layer_factory.hpp:77] Creating layer relu2
I0428 20:22:04.803701  1882 net.cpp:86] Creating Layer relu2
I0428 20:22:04.803705  1882 net.cpp:408] relu2 <- ip2
I0428 20:22:04.803709  1882 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:22:04.803942  1882 net.cpp:124] Setting up relu2
I0428 20:22:04.803954  1882 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:04.803958  1882 net.cpp:139] Memory required for data: 16362800
I0428 20:22:04.803962  1882 layer_factory.hpp:77] Creating layer ip3
I0428 20:22:04.803975  1882 net.cpp:86] Creating Layer ip3
I0428 20:22:04.803979  1882 net.cpp:408] ip3 <- ip2
I0428 20:22:04.803990  1882 net.cpp:382] ip3 -> ip3
I0428 20:22:04.804108  1882 net.cpp:124] Setting up ip3
I0428 20:22:04.804116  1882 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:04.804118  1882 net.cpp:139] Memory required for data: 16366800
I0428 20:22:04.804126  1882 layer_factory.hpp:77] Creating layer relu3
I0428 20:22:04.804132  1882 net.cpp:86] Creating Layer relu3
I0428 20:22:04.804136  1882 net.cpp:408] relu3 <- ip3
I0428 20:22:04.804139  1882 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:22:04.805024  1882 net.cpp:124] Setting up relu3
I0428 20:22:04.805053  1882 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:04.805058  1882 net.cpp:139] Memory required for data: 16370800
I0428 20:22:04.805060  1882 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:22:04.805066  1882 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:22:04.805070  1882 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:22:04.805075  1882 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:22:04.805081  1882 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:22:04.805127  1882 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:22:04.805135  1882 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:04.805140  1882 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:22:04.805142  1882 net.cpp:139] Memory required for data: 16378800
I0428 20:22:04.805146  1882 layer_factory.hpp:77] Creating layer accuracy
I0428 20:22:04.805167  1882 net.cpp:86] Creating Layer accuracy
I0428 20:22:04.805171  1882 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:22:04.805189  1882 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:22:04.805197  1882 net.cpp:382] accuracy -> accuracy
I0428 20:22:04.805208  1882 net.cpp:124] Setting up accuracy
I0428 20:22:04.805217  1882 net.cpp:131] Top shape: (1)
I0428 20:22:04.805222  1882 net.cpp:139] Memory required for data: 16378804
I0428 20:22:04.805227  1882 layer_factory.hpp:77] Creating layer loss
I0428 20:22:04.805236  1882 net.cpp:86] Creating Layer loss
I0428 20:22:04.805243  1882 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:22:04.805250  1882 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:22:04.805256  1882 net.cpp:382] loss -> loss
I0428 20:22:04.805266  1882 layer_factory.hpp:77] Creating layer loss
I0428 20:22:04.805512  1882 net.cpp:124] Setting up loss
I0428 20:22:04.805522  1882 net.cpp:131] Top shape: (1)
I0428 20:22:04.805526  1882 net.cpp:134]     with loss weight 1
I0428 20:22:04.805542  1882 net.cpp:139] Memory required for data: 16378808
I0428 20:22:04.805546  1882 net.cpp:200] loss needs backward computation.
I0428 20:22:04.805552  1882 net.cpp:202] accuracy does not need backward computation.
I0428 20:22:04.805554  1882 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:22:04.805558  1882 net.cpp:200] relu3 needs backward computation.
I0428 20:22:04.805562  1882 net.cpp:200] ip3 needs backward computation.
I0428 20:22:04.805564  1882 net.cpp:200] relu2 needs backward computation.
I0428 20:22:04.805568  1882 net.cpp:200] ip2 needs backward computation.
I0428 20:22:04.805572  1882 net.cpp:200] relu1 needs backward computation.
I0428 20:22:04.805575  1882 net.cpp:200] ip1 needs backward computation.
I0428 20:22:04.805577  1882 net.cpp:200] pool1 needs backward computation.
I0428 20:22:04.805582  1882 net.cpp:200] conv1 needs backward computation.
I0428 20:22:04.805584  1882 net.cpp:200] pool0 needs backward computation.
I0428 20:22:04.805588  1882 net.cpp:200] conv0 needs backward computation.
I0428 20:22:04.805598  1882 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:22:04.805601  1882 net.cpp:202] mnist does not need backward computation.
I0428 20:22:04.805604  1882 net.cpp:244] This network produces output accuracy
I0428 20:22:04.805608  1882 net.cpp:244] This network produces output loss
I0428 20:22:04.805620  1882 net.cpp:257] Network initialization done.
I0428 20:22:04.805660  1882 solver.cpp:56] Solver scaffolding done.
I0428 20:22:04.806063  1882 caffe.cpp:248] Starting Optimization
I0428 20:22:04.806071  1882 solver.cpp:273] Solving LeNet
I0428 20:22:04.806074  1882 solver.cpp:274] Learning Rate Policy: inv
I0428 20:22:04.806991  1882 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:22:04.813863  1882 blocking_queue.cpp:49] Waiting for data
I0428 20:22:04.887336  1889 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:04.888420  1882 solver.cpp:398]     Test net output #0: accuracy = 0.1016
I0428 20:22:04.888468  1882 solver.cpp:398]     Test net output #1: loss = 2.30345 (* 1 = 2.30345 loss)
I0428 20:22:04.893277  1882 solver.cpp:219] Iteration 0 (-9.48679e-43 iter/s, 0.0871497s/100 iters), loss = 2.29608
I0428 20:22:04.893318  1882 solver.cpp:238]     Train net output #0: loss = 2.29608 (* 1 = 2.29608 loss)
I0428 20:22:04.893332  1882 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:22:05.056530  1882 solver.cpp:219] Iteration 100 (612.76 iter/s, 0.163196s/100 iters), loss = 0.831167
I0428 20:22:05.056567  1882 solver.cpp:238]     Train net output #0: loss = 0.831167 (* 1 = 0.831167 loss)
I0428 20:22:05.056576  1882 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:22:05.217710  1882 solver.cpp:219] Iteration 200 (620.626 iter/s, 0.161128s/100 iters), loss = 0.260819
I0428 20:22:05.217754  1882 solver.cpp:238]     Train net output #0: loss = 0.260819 (* 1 = 0.260819 loss)
I0428 20:22:05.217762  1882 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:22:05.377431  1882 solver.cpp:219] Iteration 300 (626.255 iter/s, 0.159679s/100 iters), loss = 0.46181
I0428 20:22:05.377462  1882 solver.cpp:238]     Train net output #0: loss = 0.46181 (* 1 = 0.46181 loss)
I0428 20:22:05.377470  1882 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:22:05.535231  1882 solver.cpp:219] Iteration 400 (633.885 iter/s, 0.157757s/100 iters), loss = 0.209568
I0428 20:22:05.535256  1882 solver.cpp:238]     Train net output #0: loss = 0.209568 (* 1 = 0.209568 loss)
I0428 20:22:05.535264  1882 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:22:05.690467  1882 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:22:05.763942  1889 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:05.766647  1882 solver.cpp:398]     Test net output #0: accuracy = 0.8679
I0428 20:22:05.766685  1882 solver.cpp:398]     Test net output #1: loss = 0.345753 (* 1 = 0.345753 loss)
I0428 20:22:05.768163  1882 solver.cpp:219] Iteration 500 (429.411 iter/s, 0.232877s/100 iters), loss = 0.289048
I0428 20:22:05.768203  1882 solver.cpp:238]     Train net output #0: loss = 0.289048 (* 1 = 0.289048 loss)
I0428 20:22:05.768213  1882 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:22:05.929227  1882 solver.cpp:219] Iteration 600 (621.069 iter/s, 0.161013s/100 iters), loss = 0.308551
I0428 20:22:05.929255  1882 solver.cpp:238]     Train net output #0: loss = 0.308551 (* 1 = 0.308551 loss)
I0428 20:22:05.929278  1882 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:22:06.092362  1882 solver.cpp:219] Iteration 700 (613.146 iter/s, 0.163093s/100 iters), loss = 0.474549
I0428 20:22:06.092393  1882 solver.cpp:238]     Train net output #0: loss = 0.474549 (* 1 = 0.474549 loss)
I0428 20:22:06.092417  1882 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:22:06.247231  1882 solver.cpp:219] Iteration 800 (645.891 iter/s, 0.154825s/100 iters), loss = 0.456005
I0428 20:22:06.247257  1882 solver.cpp:238]     Train net output #0: loss = 0.456005 (* 1 = 0.456005 loss)
I0428 20:22:06.247265  1882 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:22:06.402438  1882 solver.cpp:219] Iteration 900 (644.455 iter/s, 0.15517s/100 iters), loss = 0.454023
I0428 20:22:06.402464  1882 solver.cpp:238]     Train net output #0: loss = 0.454023 (* 1 = 0.454023 loss)
I0428 20:22:06.402472  1882 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:22:06.454527  1888 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:06.559216  1882 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:22:06.563365  1882 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:22:06.565834  1882 solver.cpp:311] Iteration 1000, loss = 0.366534
I0428 20:22:06.565865  1882 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:22:06.647809  1889 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:22:06.650769  1882 solver.cpp:398]     Test net output #0: accuracy = 0.8748
I0428 20:22:06.650797  1882 solver.cpp:398]     Test net output #1: loss = 0.314124 (* 1 = 0.314124 loss)
I0428 20:22:06.650805  1882 solver.cpp:316] Optimization Done.
I0428 20:22:06.650810  1882 caffe.cpp:259] Optimization Done.
