I0428 20:18:04.916648  1051 caffe.cpp:218] Using GPUs 0
I0428 20:18:04.952956  1051 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:05.405431  1051 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1310.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:05.405562  1051 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1310.prototxt
I0428 20:18:05.405902  1051 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:05.405933  1051 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:05.406013  1051 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:05.406090  1051 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:05.406177  1051 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:05.406195  1051 net.cpp:86] Creating Layer mnist
I0428 20:18:05.406201  1051 net.cpp:382] mnist -> data
I0428 20:18:05.406219  1051 net.cpp:382] mnist -> label
I0428 20:18:05.407229  1051 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:05.409493  1051 net.cpp:124] Setting up mnist
I0428 20:18:05.409524  1051 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:05.409529  1051 net.cpp:131] Top shape: 64 (64)
I0428 20:18:05.409533  1051 net.cpp:139] Memory required for data: 200960
I0428 20:18:05.409538  1051 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:05.409554  1051 net.cpp:86] Creating Layer conv0
I0428 20:18:05.409571  1051 net.cpp:408] conv0 <- data
I0428 20:18:05.409581  1051 net.cpp:382] conv0 -> conv0
I0428 20:18:05.635697  1051 net.cpp:124] Setting up conv0
I0428 20:18:05.635740  1051 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:05.635745  1051 net.cpp:139] Memory required for data: 7573760
I0428 20:18:05.635758  1051 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:05.635787  1051 net.cpp:86] Creating Layer pool0
I0428 20:18:05.635790  1051 net.cpp:408] pool0 <- conv0
I0428 20:18:05.635795  1051 net.cpp:382] pool0 -> pool0
I0428 20:18:05.635841  1051 net.cpp:124] Setting up pool0
I0428 20:18:05.635848  1051 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:05.635851  1051 net.cpp:139] Memory required for data: 9416960
I0428 20:18:05.635854  1051 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:05.635865  1051 net.cpp:86] Creating Layer conv1
I0428 20:18:05.635869  1051 net.cpp:408] conv1 <- pool0
I0428 20:18:05.635874  1051 net.cpp:382] conv1 -> conv1
I0428 20:18:05.638762  1051 net.cpp:124] Setting up conv1
I0428 20:18:05.638792  1051 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:05.638797  1051 net.cpp:139] Memory required for data: 9580800
I0428 20:18:05.638804  1051 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:05.638813  1051 net.cpp:86] Creating Layer pool1
I0428 20:18:05.638815  1051 net.cpp:408] pool1 <- conv1
I0428 20:18:05.638835  1051 net.cpp:382] pool1 -> pool1
I0428 20:18:05.638872  1051 net.cpp:124] Setting up pool1
I0428 20:18:05.638880  1051 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:05.638883  1051 net.cpp:139] Memory required for data: 9621760
I0428 20:18:05.638897  1051 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:05.638903  1051 net.cpp:86] Creating Layer ip1
I0428 20:18:05.638907  1051 net.cpp:408] ip1 <- pool1
I0428 20:18:05.638911  1051 net.cpp:382] ip1 -> ip1
I0428 20:18:05.639046  1051 net.cpp:124] Setting up ip1
I0428 20:18:05.639053  1051 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:05.639057  1051 net.cpp:139] Memory required for data: 9628160
I0428 20:18:05.639063  1051 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:05.639070  1051 net.cpp:86] Creating Layer relu1
I0428 20:18:05.639072  1051 net.cpp:408] relu1 <- ip1
I0428 20:18:05.639076  1051 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:05.639268  1051 net.cpp:124] Setting up relu1
I0428 20:18:05.639277  1051 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:05.639297  1051 net.cpp:139] Memory required for data: 9634560
I0428 20:18:05.639299  1051 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:05.639305  1051 net.cpp:86] Creating Layer ip2
I0428 20:18:05.639308  1051 net.cpp:408] ip2 <- ip1
I0428 20:18:05.639313  1051 net.cpp:382] ip2 -> ip2
I0428 20:18:05.639400  1051 net.cpp:124] Setting up ip2
I0428 20:18:05.639407  1051 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:05.639410  1051 net.cpp:139] Memory required for data: 9637120
I0428 20:18:05.639416  1051 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:05.639421  1051 net.cpp:86] Creating Layer relu2
I0428 20:18:05.639425  1051 net.cpp:408] relu2 <- ip2
I0428 20:18:05.639428  1051 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:05.640229  1051 net.cpp:124] Setting up relu2
I0428 20:18:05.640240  1051 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:05.640244  1051 net.cpp:139] Memory required for data: 9639680
I0428 20:18:05.640247  1051 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:05.640254  1051 net.cpp:86] Creating Layer ip3
I0428 20:18:05.640257  1051 net.cpp:408] ip3 <- ip2
I0428 20:18:05.640262  1051 net.cpp:382] ip3 -> ip3
I0428 20:18:05.640368  1051 net.cpp:124] Setting up ip3
I0428 20:18:05.640377  1051 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:05.640379  1051 net.cpp:139] Memory required for data: 9642240
I0428 20:18:05.640388  1051 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:05.640393  1051 net.cpp:86] Creating Layer relu3
I0428 20:18:05.640395  1051 net.cpp:408] relu3 <- ip3
I0428 20:18:05.640399  1051 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:05.640563  1051 net.cpp:124] Setting up relu3
I0428 20:18:05.640571  1051 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:05.640575  1051 net.cpp:139] Memory required for data: 9644800
I0428 20:18:05.640578  1051 layer_factory.hpp:77] Creating layer loss
I0428 20:18:05.640584  1051 net.cpp:86] Creating Layer loss
I0428 20:18:05.640588  1051 net.cpp:408] loss <- ip3
I0428 20:18:05.640591  1051 net.cpp:408] loss <- label
I0428 20:18:05.640597  1051 net.cpp:382] loss -> loss
I0428 20:18:05.640611  1051 layer_factory.hpp:77] Creating layer loss
I0428 20:18:05.640916  1051 net.cpp:124] Setting up loss
I0428 20:18:05.640926  1051 net.cpp:131] Top shape: (1)
I0428 20:18:05.640946  1051 net.cpp:134]     with loss weight 1
I0428 20:18:05.640974  1051 net.cpp:139] Memory required for data: 9644804
I0428 20:18:05.640979  1051 net.cpp:200] loss needs backward computation.
I0428 20:18:05.640982  1051 net.cpp:200] relu3 needs backward computation.
I0428 20:18:05.640985  1051 net.cpp:200] ip3 needs backward computation.
I0428 20:18:05.640988  1051 net.cpp:200] relu2 needs backward computation.
I0428 20:18:05.640991  1051 net.cpp:200] ip2 needs backward computation.
I0428 20:18:05.640995  1051 net.cpp:200] relu1 needs backward computation.
I0428 20:18:05.640997  1051 net.cpp:200] ip1 needs backward computation.
I0428 20:18:05.641000  1051 net.cpp:200] pool1 needs backward computation.
I0428 20:18:05.641003  1051 net.cpp:200] conv1 needs backward computation.
I0428 20:18:05.641007  1051 net.cpp:200] pool0 needs backward computation.
I0428 20:18:05.641010  1051 net.cpp:200] conv0 needs backward computation.
I0428 20:18:05.641013  1051 net.cpp:202] mnist does not need backward computation.
I0428 20:18:05.641017  1051 net.cpp:244] This network produces output loss
I0428 20:18:05.641026  1051 net.cpp:257] Network initialization done.
I0428 20:18:05.641448  1051 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1310.prototxt
I0428 20:18:05.641491  1051 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:05.641582  1051 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:05.641664  1051 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:05.641736  1051 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:05.641752  1051 net.cpp:86] Creating Layer mnist
I0428 20:18:05.641757  1051 net.cpp:382] mnist -> data
I0428 20:18:05.641764  1051 net.cpp:382] mnist -> label
I0428 20:18:05.641844  1051 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:05.643887  1051 net.cpp:124] Setting up mnist
I0428 20:18:05.643916  1051 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:05.643921  1051 net.cpp:131] Top shape: 100 (100)
I0428 20:18:05.643925  1051 net.cpp:139] Memory required for data: 314000
I0428 20:18:05.643929  1051 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:05.643935  1051 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:05.643939  1051 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:05.643944  1051 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:05.643950  1051 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:05.644058  1051 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:05.644067  1051 net.cpp:131] Top shape: 100 (100)
I0428 20:18:05.644069  1051 net.cpp:131] Top shape: 100 (100)
I0428 20:18:05.644073  1051 net.cpp:139] Memory required for data: 314800
I0428 20:18:05.644075  1051 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:05.644083  1051 net.cpp:86] Creating Layer conv0
I0428 20:18:05.644086  1051 net.cpp:408] conv0 <- data
I0428 20:18:05.644091  1051 net.cpp:382] conv0 -> conv0
I0428 20:18:05.645705  1051 net.cpp:124] Setting up conv0
I0428 20:18:05.645720  1051 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:05.645722  1051 net.cpp:139] Memory required for data: 11834800
I0428 20:18:05.645747  1051 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:05.645753  1051 net.cpp:86] Creating Layer pool0
I0428 20:18:05.645772  1051 net.cpp:408] pool0 <- conv0
I0428 20:18:05.645784  1051 net.cpp:382] pool0 -> pool0
I0428 20:18:05.645828  1051 net.cpp:124] Setting up pool0
I0428 20:18:05.645834  1051 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:05.645838  1051 net.cpp:139] Memory required for data: 14714800
I0428 20:18:05.645841  1051 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:05.645849  1051 net.cpp:86] Creating Layer conv1
I0428 20:18:05.645853  1051 net.cpp:408] conv1 <- pool0
I0428 20:18:05.645858  1051 net.cpp:382] conv1 -> conv1
I0428 20:18:05.647424  1051 net.cpp:124] Setting up conv1
I0428 20:18:05.647439  1051 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:05.647442  1051 net.cpp:139] Memory required for data: 14970800
I0428 20:18:05.647451  1051 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:05.647457  1051 net.cpp:86] Creating Layer pool1
I0428 20:18:05.647461  1051 net.cpp:408] pool1 <- conv1
I0428 20:18:05.647472  1051 net.cpp:382] pool1 -> pool1
I0428 20:18:05.647523  1051 net.cpp:124] Setting up pool1
I0428 20:18:05.647531  1051 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:05.647534  1051 net.cpp:139] Memory required for data: 15034800
I0428 20:18:05.647537  1051 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:05.647548  1051 net.cpp:86] Creating Layer ip1
I0428 20:18:05.647552  1051 net.cpp:408] ip1 <- pool1
I0428 20:18:05.647557  1051 net.cpp:382] ip1 -> ip1
I0428 20:18:05.647694  1051 net.cpp:124] Setting up ip1
I0428 20:18:05.647703  1051 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:05.647717  1051 net.cpp:139] Memory required for data: 15044800
I0428 20:18:05.647727  1051 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:05.647732  1051 net.cpp:86] Creating Layer relu1
I0428 20:18:05.647734  1051 net.cpp:408] relu1 <- ip1
I0428 20:18:05.647754  1051 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:05.648015  1051 net.cpp:124] Setting up relu1
I0428 20:18:05.648025  1051 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:05.648030  1051 net.cpp:139] Memory required for data: 15054800
I0428 20:18:05.648032  1051 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:05.648039  1051 net.cpp:86] Creating Layer ip2
I0428 20:18:05.648057  1051 net.cpp:408] ip2 <- ip1
I0428 20:18:05.648062  1051 net.cpp:382] ip2 -> ip2
I0428 20:18:05.648169  1051 net.cpp:124] Setting up ip2
I0428 20:18:05.648176  1051 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:05.648180  1051 net.cpp:139] Memory required for data: 15058800
I0428 20:18:05.648186  1051 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:05.648190  1051 net.cpp:86] Creating Layer relu2
I0428 20:18:05.648195  1051 net.cpp:408] relu2 <- ip2
I0428 20:18:05.648198  1051 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:05.648380  1051 net.cpp:124] Setting up relu2
I0428 20:18:05.648391  1051 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:05.648394  1051 net.cpp:139] Memory required for data: 15062800
I0428 20:18:05.648397  1051 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:05.648408  1051 net.cpp:86] Creating Layer ip3
I0428 20:18:05.648411  1051 net.cpp:408] ip3 <- ip2
I0428 20:18:05.648416  1051 net.cpp:382] ip3 -> ip3
I0428 20:18:05.648533  1051 net.cpp:124] Setting up ip3
I0428 20:18:05.648540  1051 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:05.648543  1051 net.cpp:139] Memory required for data: 15066800
I0428 20:18:05.648550  1051 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:05.648556  1051 net.cpp:86] Creating Layer relu3
I0428 20:18:05.648560  1051 net.cpp:408] relu3 <- ip3
I0428 20:18:05.648563  1051 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:05.649513  1051 net.cpp:124] Setting up relu3
I0428 20:18:05.649526  1051 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:05.649530  1051 net.cpp:139] Memory required for data: 15070800
I0428 20:18:05.649533  1051 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:05.649539  1051 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:05.649543  1051 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:05.649547  1051 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:05.649554  1051 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:05.649591  1051 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:05.649598  1051 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:05.649602  1051 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:05.649605  1051 net.cpp:139] Memory required for data: 15078800
I0428 20:18:05.649607  1051 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:05.649612  1051 net.cpp:86] Creating Layer accuracy
I0428 20:18:05.649626  1051 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:05.649631  1051 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:05.649636  1051 net.cpp:382] accuracy -> accuracy
I0428 20:18:05.649643  1051 net.cpp:124] Setting up accuracy
I0428 20:18:05.649647  1051 net.cpp:131] Top shape: (1)
I0428 20:18:05.649660  1051 net.cpp:139] Memory required for data: 15078804
I0428 20:18:05.649663  1051 layer_factory.hpp:77] Creating layer loss
I0428 20:18:05.649669  1051 net.cpp:86] Creating Layer loss
I0428 20:18:05.649672  1051 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:05.649677  1051 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:05.649680  1051 net.cpp:382] loss -> loss
I0428 20:18:05.649690  1051 layer_factory.hpp:77] Creating layer loss
I0428 20:18:05.649982  1051 net.cpp:124] Setting up loss
I0428 20:18:05.649992  1051 net.cpp:131] Top shape: (1)
I0428 20:18:05.649996  1051 net.cpp:134]     with loss weight 1
I0428 20:18:05.650012  1051 net.cpp:139] Memory required for data: 15078808
I0428 20:18:05.650017  1051 net.cpp:200] loss needs backward computation.
I0428 20:18:05.650025  1051 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:05.650029  1051 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:05.650032  1051 net.cpp:200] relu3 needs backward computation.
I0428 20:18:05.650035  1051 net.cpp:200] ip3 needs backward computation.
I0428 20:18:05.650038  1051 net.cpp:200] relu2 needs backward computation.
I0428 20:18:05.650045  1051 net.cpp:200] ip2 needs backward computation.
I0428 20:18:05.650048  1051 net.cpp:200] relu1 needs backward computation.
I0428 20:18:05.650053  1051 net.cpp:200] ip1 needs backward computation.
I0428 20:18:05.650055  1051 net.cpp:200] pool1 needs backward computation.
I0428 20:18:05.650058  1051 net.cpp:200] conv1 needs backward computation.
I0428 20:18:05.650063  1051 net.cpp:200] pool0 needs backward computation.
I0428 20:18:05.650065  1051 net.cpp:200] conv0 needs backward computation.
I0428 20:18:05.650069  1051 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:05.650074  1051 net.cpp:202] mnist does not need backward computation.
I0428 20:18:05.650084  1051 net.cpp:244] This network produces output accuracy
I0428 20:18:05.650087  1051 net.cpp:244] This network produces output loss
I0428 20:18:05.650100  1051 net.cpp:257] Network initialization done.
I0428 20:18:05.650157  1051 solver.cpp:56] Solver scaffolding done.
I0428 20:18:05.650571  1051 caffe.cpp:248] Starting Optimization
I0428 20:18:05.650578  1051 solver.cpp:273] Solving LeNet
I0428 20:18:05.650581  1051 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:05.650732  1051 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:05.718413  1058 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:05.720715  1051 solver.cpp:398]     Test net output #0: accuracy = 0.1196
I0428 20:18:05.720733  1051 solver.cpp:398]     Test net output #1: loss = 2.29941 (* 1 = 2.29941 loss)
I0428 20:18:05.724895  1051 solver.cpp:219] Iteration 0 (-1.25971e-30 iter/s, 0.0742728s/100 iters), loss = 2.30739
I0428 20:18:05.724920  1051 solver.cpp:238]     Train net output #0: loss = 2.30739 (* 1 = 2.30739 loss)
I0428 20:18:05.724953  1051 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:05.848322  1051 solver.cpp:219] Iteration 100 (810.472 iter/s, 0.123385s/100 iters), loss = 1.44251
I0428 20:18:05.848351  1051 solver.cpp:238]     Train net output #0: loss = 1.44251 (* 1 = 1.44251 loss)
I0428 20:18:05.848357  1051 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:05.984148  1051 solver.cpp:219] Iteration 200 (736.467 iter/s, 0.135783s/100 iters), loss = 1.24596
I0428 20:18:05.984192  1051 solver.cpp:238]     Train net output #0: loss = 1.24596 (* 1 = 1.24596 loss)
I0428 20:18:05.984212  1051 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:06.111816  1051 solver.cpp:219] Iteration 300 (783.613 iter/s, 0.127614s/100 iters), loss = 0.746621
I0428 20:18:06.111842  1051 solver.cpp:238]     Train net output #0: loss = 0.746621 (* 1 = 0.746621 loss)
I0428 20:18:06.111848  1051 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:06.231761  1051 solver.cpp:219] Iteration 400 (833.969 iter/s, 0.119909s/100 iters), loss = 1.0244
I0428 20:18:06.231787  1051 solver.cpp:238]     Train net output #0: loss = 1.0244 (* 1 = 1.0244 loss)
I0428 20:18:06.231793  1051 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:06.350203  1051 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:06.414775  1058 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:06.417023  1051 solver.cpp:398]     Test net output #0: accuracy = 0.7362
I0428 20:18:06.417043  1051 solver.cpp:398]     Test net output #1: loss = 0.706882 (* 1 = 0.706882 loss)
I0428 20:18:06.418156  1051 solver.cpp:219] Iteration 500 (536.652 iter/s, 0.18634s/100 iters), loss = 0.852333
I0428 20:18:06.418179  1051 solver.cpp:238]     Train net output #0: loss = 0.852333 (* 1 = 0.852333 loss)
I0428 20:18:06.418200  1051 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:06.552446  1051 solver.cpp:219] Iteration 600 (744.882 iter/s, 0.134249s/100 iters), loss = 0.623632
I0428 20:18:06.552495  1051 solver.cpp:238]     Train net output #0: loss = 0.623632 (* 1 = 0.623632 loss)
I0428 20:18:06.552505  1051 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:06.685151  1051 solver.cpp:219] Iteration 700 (753.893 iter/s, 0.132645s/100 iters), loss = 0.529518
I0428 20:18:06.685187  1051 solver.cpp:238]     Train net output #0: loss = 0.529518 (* 1 = 0.529518 loss)
I0428 20:18:06.685196  1051 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:06.819450  1051 solver.cpp:219] Iteration 800 (744.882 iter/s, 0.134249s/100 iters), loss = 0.635064
I0428 20:18:06.819489  1051 solver.cpp:238]     Train net output #0: loss = 0.635064 (* 1 = 0.635064 loss)
I0428 20:18:06.819499  1051 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:06.949031  1051 solver.cpp:219] Iteration 900 (772.022 iter/s, 0.12953s/100 iters), loss = 0.472422
I0428 20:18:06.949065  1051 solver.cpp:238]     Train net output #0: loss = 0.472422 (* 1 = 0.472422 loss)
I0428 20:18:06.949074  1051 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:06.992126  1057 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:07.078527  1051 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:07.079780  1051 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:07.080574  1051 solver.cpp:311] Iteration 1000, loss = 0.513488
I0428 20:18:07.080591  1051 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:07.148239  1058 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:07.150626  1051 solver.cpp:398]     Test net output #0: accuracy = 0.7671
I0428 20:18:07.150648  1051 solver.cpp:398]     Test net output #1: loss = 0.579469 (* 1 = 0.579469 loss)
I0428 20:18:07.150655  1051 solver.cpp:316] Optimization Done.
I0428 20:18:07.150658  1051 caffe.cpp:259] Optimization Done.
