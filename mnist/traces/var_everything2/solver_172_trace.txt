I0428 19:33:09.012872 23039 caffe.cpp:218] Using GPUs 0
I0428 19:33:09.050976 23039 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:09.579542 23039 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test172.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:09.579687 23039 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test172.prototxt
I0428 19:33:09.580056 23039 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:09.580075 23039 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:09.580162 23039 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:09.580236 23039 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:09.580335 23039 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:09.580359 23039 net.cpp:86] Creating Layer mnist
I0428 19:33:09.580369 23039 net.cpp:382] mnist -> data
I0428 19:33:09.580391 23039 net.cpp:382] mnist -> label
I0428 19:33:09.581521 23039 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:09.584022 23039 net.cpp:124] Setting up mnist
I0428 19:33:09.584040 23039 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:09.584046 23039 net.cpp:131] Top shape: 64 (64)
I0428 19:33:09.584049 23039 net.cpp:139] Memory required for data: 200960
I0428 19:33:09.584058 23039 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:09.584075 23039 net.cpp:86] Creating Layer conv0
I0428 19:33:09.584080 23039 net.cpp:408] conv0 <- data
I0428 19:33:09.584095 23039 net.cpp:382] conv0 -> conv0
I0428 19:33:09.875079 23039 net.cpp:124] Setting up conv0
I0428 19:33:09.875113 23039 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:09.875118 23039 net.cpp:139] Memory required for data: 3887360
I0428 19:33:09.875134 23039 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:09.875150 23039 net.cpp:86] Creating Layer pool0
I0428 19:33:09.875183 23039 net.cpp:408] pool0 <- conv0
I0428 19:33:09.875191 23039 net.cpp:382] pool0 -> pool0
I0428 19:33:09.875247 23039 net.cpp:124] Setting up pool0
I0428 19:33:09.875257 23039 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:09.875260 23039 net.cpp:139] Memory required for data: 4808960
I0428 19:33:09.875264 23039 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:09.875274 23039 net.cpp:86] Creating Layer ip1
I0428 19:33:09.875278 23039 net.cpp:408] ip1 <- pool0
I0428 19:33:09.875283 23039 net.cpp:382] ip1 -> ip1
I0428 19:33:09.875646 23039 net.cpp:124] Setting up ip1
I0428 19:33:09.875655 23039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:09.875659 23039 net.cpp:139] Memory required for data: 4811520
I0428 19:33:09.875668 23039 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:09.875674 23039 net.cpp:86] Creating Layer relu1
I0428 19:33:09.875679 23039 net.cpp:408] relu1 <- ip1
I0428 19:33:09.875684 23039 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:09.875880 23039 net.cpp:124] Setting up relu1
I0428 19:33:09.875890 23039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:09.875893 23039 net.cpp:139] Memory required for data: 4814080
I0428 19:33:09.875897 23039 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:09.875905 23039 net.cpp:86] Creating Layer ip2
I0428 19:33:09.875908 23039 net.cpp:408] ip2 <- ip1
I0428 19:33:09.875915 23039 net.cpp:382] ip2 -> ip2
I0428 19:33:09.876026 23039 net.cpp:124] Setting up ip2
I0428 19:33:09.876035 23039 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:09.876039 23039 net.cpp:139] Memory required for data: 4820480
I0428 19:33:09.876047 23039 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:09.876054 23039 net.cpp:86] Creating Layer relu2
I0428 19:33:09.876057 23039 net.cpp:408] relu2 <- ip2
I0428 19:33:09.876061 23039 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:09.876927 23039 net.cpp:124] Setting up relu2
I0428 19:33:09.876943 23039 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:09.876947 23039 net.cpp:139] Memory required for data: 4826880
I0428 19:33:09.876951 23039 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:09.876960 23039 net.cpp:86] Creating Layer ip3
I0428 19:33:09.876963 23039 net.cpp:408] ip3 <- ip2
I0428 19:33:09.876971 23039 net.cpp:382] ip3 -> ip3
I0428 19:33:09.877081 23039 net.cpp:124] Setting up ip3
I0428 19:33:09.877091 23039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:09.877094 23039 net.cpp:139] Memory required for data: 4829440
I0428 19:33:09.877101 23039 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:09.877109 23039 net.cpp:86] Creating Layer relu3
I0428 19:33:09.877112 23039 net.cpp:408] relu3 <- ip3
I0428 19:33:09.877117 23039 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:09.877291 23039 net.cpp:124] Setting up relu3
I0428 19:33:09.877301 23039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:09.877305 23039 net.cpp:139] Memory required for data: 4832000
I0428 19:33:09.877310 23039 layer_factory.hpp:77] Creating layer loss
I0428 19:33:09.877316 23039 net.cpp:86] Creating Layer loss
I0428 19:33:09.877321 23039 net.cpp:408] loss <- ip3
I0428 19:33:09.877326 23039 net.cpp:408] loss <- label
I0428 19:33:09.877332 23039 net.cpp:382] loss -> loss
I0428 19:33:09.877353 23039 layer_factory.hpp:77] Creating layer loss
I0428 19:33:09.877616 23039 net.cpp:124] Setting up loss
I0428 19:33:09.877627 23039 net.cpp:131] Top shape: (1)
I0428 19:33:09.877631 23039 net.cpp:134]     with loss weight 1
I0428 19:33:09.877646 23039 net.cpp:139] Memory required for data: 4832004
I0428 19:33:09.877650 23039 net.cpp:200] loss needs backward computation.
I0428 19:33:09.877655 23039 net.cpp:200] relu3 needs backward computation.
I0428 19:33:09.877660 23039 net.cpp:200] ip3 needs backward computation.
I0428 19:33:09.877663 23039 net.cpp:200] relu2 needs backward computation.
I0428 19:33:09.877666 23039 net.cpp:200] ip2 needs backward computation.
I0428 19:33:09.877670 23039 net.cpp:200] relu1 needs backward computation.
I0428 19:33:09.877673 23039 net.cpp:200] ip1 needs backward computation.
I0428 19:33:09.877689 23039 net.cpp:200] pool0 needs backward computation.
I0428 19:33:09.877693 23039 net.cpp:200] conv0 needs backward computation.
I0428 19:33:09.877697 23039 net.cpp:202] mnist does not need backward computation.
I0428 19:33:09.877701 23039 net.cpp:244] This network produces output loss
I0428 19:33:09.877710 23039 net.cpp:257] Network initialization done.
I0428 19:33:09.878058 23039 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test172.prototxt
I0428 19:33:09.878088 23039 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:09.878182 23039 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:09.878255 23039 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:09.878306 23039 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:09.878324 23039 net.cpp:86] Creating Layer mnist
I0428 19:33:09.878329 23039 net.cpp:382] mnist -> data
I0428 19:33:09.878338 23039 net.cpp:382] mnist -> label
I0428 19:33:09.878437 23039 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:09.880646 23039 net.cpp:124] Setting up mnist
I0428 19:33:09.880662 23039 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:09.880668 23039 net.cpp:131] Top shape: 100 (100)
I0428 19:33:09.880672 23039 net.cpp:139] Memory required for data: 314000
I0428 19:33:09.880676 23039 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:09.880689 23039 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:09.880693 23039 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:09.880699 23039 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:09.880707 23039 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:09.880767 23039 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:09.880774 23039 net.cpp:131] Top shape: 100 (100)
I0428 19:33:09.880779 23039 net.cpp:131] Top shape: 100 (100)
I0428 19:33:09.880782 23039 net.cpp:139] Memory required for data: 314800
I0428 19:33:09.880798 23039 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:09.880816 23039 net.cpp:86] Creating Layer conv0
I0428 19:33:09.880823 23039 net.cpp:408] conv0 <- data
I0428 19:33:09.880833 23039 net.cpp:382] conv0 -> conv0
I0428 19:33:09.882720 23039 net.cpp:124] Setting up conv0
I0428 19:33:09.882738 23039 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:09.882742 23039 net.cpp:139] Memory required for data: 6074800
I0428 19:33:09.882753 23039 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:09.882761 23039 net.cpp:86] Creating Layer pool0
I0428 19:33:09.882766 23039 net.cpp:408] pool0 <- conv0
I0428 19:33:09.882771 23039 net.cpp:382] pool0 -> pool0
I0428 19:33:09.882812 23039 net.cpp:124] Setting up pool0
I0428 19:33:09.882819 23039 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:09.882823 23039 net.cpp:139] Memory required for data: 7514800
I0428 19:33:09.882827 23039 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:09.882834 23039 net.cpp:86] Creating Layer ip1
I0428 19:33:09.882838 23039 net.cpp:408] ip1 <- pool0
I0428 19:33:09.882843 23039 net.cpp:382] ip1 -> ip1
I0428 19:33:09.883208 23039 net.cpp:124] Setting up ip1
I0428 19:33:09.883219 23039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:09.883222 23039 net.cpp:139] Memory required for data: 7518800
I0428 19:33:09.883230 23039 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:09.883236 23039 net.cpp:86] Creating Layer relu1
I0428 19:33:09.883240 23039 net.cpp:408] relu1 <- ip1
I0428 19:33:09.883245 23039 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:09.883509 23039 net.cpp:124] Setting up relu1
I0428 19:33:09.883520 23039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:09.883524 23039 net.cpp:139] Memory required for data: 7522800
I0428 19:33:09.883528 23039 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:09.883535 23039 net.cpp:86] Creating Layer ip2
I0428 19:33:09.883538 23039 net.cpp:408] ip2 <- ip1
I0428 19:33:09.883544 23039 net.cpp:382] ip2 -> ip2
I0428 19:33:09.883707 23039 net.cpp:124] Setting up ip2
I0428 19:33:09.883716 23039 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:09.883720 23039 net.cpp:139] Memory required for data: 7532800
I0428 19:33:09.883740 23039 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:09.883746 23039 net.cpp:86] Creating Layer relu2
I0428 19:33:09.883750 23039 net.cpp:408] relu2 <- ip2
I0428 19:33:09.883755 23039 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:09.884680 23039 net.cpp:124] Setting up relu2
I0428 19:33:09.884696 23039 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:09.884701 23039 net.cpp:139] Memory required for data: 7542800
I0428 19:33:09.884704 23039 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:09.884714 23039 net.cpp:86] Creating Layer ip3
I0428 19:33:09.884718 23039 net.cpp:408] ip3 <- ip2
I0428 19:33:09.884726 23039 net.cpp:382] ip3 -> ip3
I0428 19:33:09.884872 23039 net.cpp:124] Setting up ip3
I0428 19:33:09.884882 23039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:09.884886 23039 net.cpp:139] Memory required for data: 7546800
I0428 19:33:09.884893 23039 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:09.884899 23039 net.cpp:86] Creating Layer relu3
I0428 19:33:09.884909 23039 net.cpp:408] relu3 <- ip3
I0428 19:33:09.884915 23039 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:09.885092 23039 net.cpp:124] Setting up relu3
I0428 19:33:09.885102 23039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:09.885107 23039 net.cpp:139] Memory required for data: 7550800
I0428 19:33:09.885110 23039 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:09.885116 23039 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:09.885119 23039 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:09.885126 23039 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:09.885133 23039 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:09.885172 23039 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:09.885179 23039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:09.885184 23039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:09.885200 23039 net.cpp:139] Memory required for data: 7558800
I0428 19:33:09.885203 23039 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:09.885210 23039 net.cpp:86] Creating Layer accuracy
I0428 19:33:09.885213 23039 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:09.885227 23039 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:09.885233 23039 net.cpp:382] accuracy -> accuracy
I0428 19:33:09.885242 23039 net.cpp:124] Setting up accuracy
I0428 19:33:09.885247 23039 net.cpp:131] Top shape: (1)
I0428 19:33:09.885251 23039 net.cpp:139] Memory required for data: 7558804
I0428 19:33:09.885254 23039 layer_factory.hpp:77] Creating layer loss
I0428 19:33:09.885259 23039 net.cpp:86] Creating Layer loss
I0428 19:33:09.885263 23039 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:09.885267 23039 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:09.885273 23039 net.cpp:382] loss -> loss
I0428 19:33:09.885280 23039 layer_factory.hpp:77] Creating layer loss
I0428 19:33:09.885543 23039 net.cpp:124] Setting up loss
I0428 19:33:09.885555 23039 net.cpp:131] Top shape: (1)
I0428 19:33:09.885560 23039 net.cpp:134]     with loss weight 1
I0428 19:33:09.885574 23039 net.cpp:139] Memory required for data: 7558808
I0428 19:33:09.885579 23039 net.cpp:200] loss needs backward computation.
I0428 19:33:09.885589 23039 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:09.885593 23039 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:09.885598 23039 net.cpp:200] relu3 needs backward computation.
I0428 19:33:09.885602 23039 net.cpp:200] ip3 needs backward computation.
I0428 19:33:09.885606 23039 net.cpp:200] relu2 needs backward computation.
I0428 19:33:09.885609 23039 net.cpp:200] ip2 needs backward computation.
I0428 19:33:09.885612 23039 net.cpp:200] relu1 needs backward computation.
I0428 19:33:09.885617 23039 net.cpp:200] ip1 needs backward computation.
I0428 19:33:09.885619 23039 net.cpp:200] pool0 needs backward computation.
I0428 19:33:09.885623 23039 net.cpp:200] conv0 needs backward computation.
I0428 19:33:09.885628 23039 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:09.885632 23039 net.cpp:202] mnist does not need backward computation.
I0428 19:33:09.885635 23039 net.cpp:244] This network produces output accuracy
I0428 19:33:09.885639 23039 net.cpp:244] This network produces output loss
I0428 19:33:09.885651 23039 net.cpp:257] Network initialization done.
I0428 19:33:09.885694 23039 solver.cpp:56] Solver scaffolding done.
I0428 19:33:09.886014 23039 caffe.cpp:248] Starting Optimization
I0428 19:33:09.886023 23039 solver.cpp:273] Solving LeNet
I0428 19:33:09.886028 23039 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:09.886976 23039 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:09.895326 23039 blocking_queue.cpp:49] Waiting for data
I0428 19:33:09.964367 23046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:09.965311 23039 solver.cpp:398]     Test net output #0: accuracy = 0.1241
I0428 19:33:09.965334 23039 solver.cpp:398]     Test net output #1: loss = 2.30573 (* 1 = 2.30573 loss)
I0428 19:33:09.969251 23039 solver.cpp:219] Iteration 0 (-9.76705e-43 iter/s, 0.0831816s/100 iters), loss = 2.31248
I0428 19:33:09.969281 23039 solver.cpp:238]     Train net output #0: loss = 2.31248 (* 1 = 2.31248 loss)
I0428 19:33:09.969295 23039 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:10.069052 23039 solver.cpp:219] Iteration 100 (1002.4 iter/s, 0.0997601s/100 iters), loss = 1.05789
I0428 19:33:10.069084 23039 solver.cpp:238]     Train net output #0: loss = 1.05789 (* 1 = 1.05789 loss)
I0428 19:33:10.069092 23039 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:10.180634 23039 solver.cpp:219] Iteration 200 (896.562 iter/s, 0.111537s/100 iters), loss = 0.75244
I0428 19:33:10.180675 23039 solver.cpp:238]     Train net output #0: loss = 0.75244 (* 1 = 0.75244 loss)
I0428 19:33:10.180685 23039 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:10.281443 23039 solver.cpp:219] Iteration 300 (992.471 iter/s, 0.100759s/100 iters), loss = 0.993941
I0428 19:33:10.281476 23039 solver.cpp:238]     Train net output #0: loss = 0.993941 (* 1 = 0.993941 loss)
I0428 19:33:10.281484 23039 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:10.383230 23039 solver.cpp:219] Iteration 400 (982.863 iter/s, 0.101744s/100 iters), loss = 0.956313
I0428 19:33:10.383263 23039 solver.cpp:238]     Train net output #0: loss = 0.956313 (* 1 = 0.956313 loss)
I0428 19:33:10.383271 23039 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:10.484210 23039 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:10.562885 23046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:10.564473 23039 solver.cpp:398]     Test net output #0: accuracy = 0.7503
I0428 19:33:10.564517 23039 solver.cpp:398]     Test net output #1: loss = 0.695689 (* 1 = 0.695689 loss)
I0428 19:33:10.565764 23039 solver.cpp:219] Iteration 500 (547.993 iter/s, 0.182484s/100 iters), loss = 1.00771
I0428 19:33:10.565809 23039 solver.cpp:238]     Train net output #0: loss = 1.00771 (* 1 = 1.00771 loss)
I0428 19:33:10.565824 23039 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:10.672823 23039 solver.cpp:219] Iteration 600 (934.618 iter/s, 0.106996s/100 iters), loss = 0.476607
I0428 19:33:10.672858 23039 solver.cpp:238]     Train net output #0: loss = 0.476607 (* 1 = 0.476607 loss)
I0428 19:33:10.672868 23039 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:10.772522 23039 solver.cpp:219] Iteration 700 (1003.47 iter/s, 0.0996547s/100 iters), loss = 0.574993
I0428 19:33:10.772557 23039 solver.cpp:238]     Train net output #0: loss = 0.574993 (* 1 = 0.574993 loss)
I0428 19:33:10.772565 23039 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:10.875589 23039 solver.cpp:219] Iteration 800 (970.68 iter/s, 0.103021s/100 iters), loss = 0.896461
I0428 19:33:10.875622 23039 solver.cpp:238]     Train net output #0: loss = 0.896461 (* 1 = 0.896461 loss)
I0428 19:33:10.875629 23039 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:10.976222 23039 solver.cpp:219] Iteration 900 (994.149 iter/s, 0.100589s/100 iters), loss = 0.524147
I0428 19:33:10.976253 23039 solver.cpp:238]     Train net output #0: loss = 0.524147 (* 1 = 0.524147 loss)
I0428 19:33:10.976260 23039 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:11.011201 23045 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:11.077149 23039 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:11.078276 23039 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:11.079257 23039 solver.cpp:311] Iteration 1000, loss = 0.502438
I0428 19:33:11.079275 23039 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:11.156286 23046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:11.157101 23039 solver.cpp:398]     Test net output #0: accuracy = 0.7632
I0428 19:33:11.157124 23039 solver.cpp:398]     Test net output #1: loss = 0.63291 (* 1 = 0.63291 loss)
I0428 19:33:11.157130 23039 solver.cpp:316] Optimization Done.
I0428 19:33:11.157133 23039 caffe.cpp:259] Optimization Done.
