I0428 20:37:26.882583  4945 caffe.cpp:218] Using GPUs 0
I0428 20:37:26.919558  4945 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:37:27.377034  4945 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1651.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:37:27.377188  4945 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1651.prototxt
I0428 20:37:27.377530  4945 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:37:27.377544  4945 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:37:27.377619  4945 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:27.377678  4945 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:27.377760  4945 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:37:27.377779  4945 net.cpp:86] Creating Layer mnist
I0428 20:37:27.377785  4945 net.cpp:382] mnist -> data
I0428 20:37:27.377804  4945 net.cpp:382] mnist -> label
I0428 20:37:27.378720  4945 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:37:27.380851  4945 net.cpp:124] Setting up mnist
I0428 20:37:27.380882  4945 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:37:27.380887  4945 net.cpp:131] Top shape: 64 (64)
I0428 20:37:27.380889  4945 net.cpp:139] Memory required for data: 200960
I0428 20:37:27.380897  4945 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:27.380908  4945 net.cpp:86] Creating Layer conv0
I0428 20:37:27.380941  4945 net.cpp:408] conv0 <- data
I0428 20:37:27.380952  4945 net.cpp:382] conv0 -> conv0
I0428 20:37:27.610939  4945 net.cpp:124] Setting up conv0
I0428 20:37:27.610980  4945 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:37:27.610983  4945 net.cpp:139] Memory required for data: 14946560
I0428 20:37:27.610999  4945 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:27.611011  4945 net.cpp:86] Creating Layer pool0
I0428 20:37:27.611016  4945 net.cpp:408] pool0 <- conv0
I0428 20:37:27.611021  4945 net.cpp:382] pool0 -> pool0
I0428 20:37:27.611066  4945 net.cpp:124] Setting up pool0
I0428 20:37:27.611073  4945 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:37:27.611075  4945 net.cpp:139] Memory required for data: 18632960
I0428 20:37:27.611078  4945 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:27.611088  4945 net.cpp:86] Creating Layer conv1
I0428 20:37:27.611091  4945 net.cpp:408] conv1 <- pool0
I0428 20:37:27.611096  4945 net.cpp:382] conv1 -> conv1
I0428 20:37:27.615250  4945 net.cpp:124] Setting up conv1
I0428 20:37:27.615279  4945 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:37:27.615283  4945 net.cpp:139] Memory required for data: 20271360
I0428 20:37:27.615291  4945 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:27.615298  4945 net.cpp:86] Creating Layer pool1
I0428 20:37:27.615303  4945 net.cpp:408] pool1 <- conv1
I0428 20:37:27.615308  4945 net.cpp:382] pool1 -> pool1
I0428 20:37:27.615342  4945 net.cpp:124] Setting up pool1
I0428 20:37:27.615347  4945 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:37:27.615350  4945 net.cpp:139] Memory required for data: 20680960
I0428 20:37:27.615353  4945 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:27.615360  4945 net.cpp:86] Creating Layer ip1
I0428 20:37:27.615363  4945 net.cpp:408] ip1 <- pool1
I0428 20:37:27.615367  4945 net.cpp:382] ip1 -> ip1
I0428 20:37:27.616374  4945 net.cpp:124] Setting up ip1
I0428 20:37:27.616385  4945 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:27.616405  4945 net.cpp:139] Memory required for data: 20683520
I0428 20:37:27.616412  4945 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:27.616418  4945 net.cpp:86] Creating Layer relu1
I0428 20:37:27.616421  4945 net.cpp:408] relu1 <- ip1
I0428 20:37:27.616426  4945 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:27.616590  4945 net.cpp:124] Setting up relu1
I0428 20:37:27.616600  4945 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:27.616603  4945 net.cpp:139] Memory required for data: 20686080
I0428 20:37:27.616606  4945 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:27.616613  4945 net.cpp:86] Creating Layer ip2
I0428 20:37:27.616616  4945 net.cpp:408] ip2 <- ip1
I0428 20:37:27.616621  4945 net.cpp:382] ip2 -> ip2
I0428 20:37:27.616716  4945 net.cpp:124] Setting up ip2
I0428 20:37:27.616724  4945 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:27.616726  4945 net.cpp:139] Memory required for data: 20688640
I0428 20:37:27.616731  4945 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:27.616739  4945 net.cpp:86] Creating Layer relu2
I0428 20:37:27.616741  4945 net.cpp:408] relu2 <- ip2
I0428 20:37:27.616745  4945 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:27.617566  4945 net.cpp:124] Setting up relu2
I0428 20:37:27.617578  4945 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:27.617597  4945 net.cpp:139] Memory required for data: 20691200
I0428 20:37:27.617600  4945 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:27.617624  4945 net.cpp:86] Creating Layer ip3
I0428 20:37:27.617627  4945 net.cpp:408] ip3 <- ip2
I0428 20:37:27.617633  4945 net.cpp:382] ip3 -> ip3
I0428 20:37:27.617745  4945 net.cpp:124] Setting up ip3
I0428 20:37:27.617753  4945 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:27.617756  4945 net.cpp:139] Memory required for data: 20693760
I0428 20:37:27.617763  4945 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:27.617769  4945 net.cpp:86] Creating Layer relu3
I0428 20:37:27.617771  4945 net.cpp:408] relu3 <- ip3
I0428 20:37:27.617789  4945 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:27.617981  4945 net.cpp:124] Setting up relu3
I0428 20:37:27.617990  4945 net.cpp:131] Top shape: 64 10 (640)
I0428 20:37:27.617993  4945 net.cpp:139] Memory required for data: 20696320
I0428 20:37:27.617996  4945 layer_factory.hpp:77] Creating layer loss
I0428 20:37:27.618002  4945 net.cpp:86] Creating Layer loss
I0428 20:37:27.618005  4945 net.cpp:408] loss <- ip3
I0428 20:37:27.618010  4945 net.cpp:408] loss <- label
I0428 20:37:27.618016  4945 net.cpp:382] loss -> loss
I0428 20:37:27.618032  4945 layer_factory.hpp:77] Creating layer loss
I0428 20:37:27.618280  4945 net.cpp:124] Setting up loss
I0428 20:37:27.618290  4945 net.cpp:131] Top shape: (1)
I0428 20:37:27.618294  4945 net.cpp:134]     with loss weight 1
I0428 20:37:27.618306  4945 net.cpp:139] Memory required for data: 20696324
I0428 20:37:27.618309  4945 net.cpp:200] loss needs backward computation.
I0428 20:37:27.618314  4945 net.cpp:200] relu3 needs backward computation.
I0428 20:37:27.618316  4945 net.cpp:200] ip3 needs backward computation.
I0428 20:37:27.618319  4945 net.cpp:200] relu2 needs backward computation.
I0428 20:37:27.618321  4945 net.cpp:200] ip2 needs backward computation.
I0428 20:37:27.618324  4945 net.cpp:200] relu1 needs backward computation.
I0428 20:37:27.618326  4945 net.cpp:200] ip1 needs backward computation.
I0428 20:37:27.618330  4945 net.cpp:200] pool1 needs backward computation.
I0428 20:37:27.618332  4945 net.cpp:200] conv1 needs backward computation.
I0428 20:37:27.618335  4945 net.cpp:200] pool0 needs backward computation.
I0428 20:37:27.618337  4945 net.cpp:200] conv0 needs backward computation.
I0428 20:37:27.618340  4945 net.cpp:202] mnist does not need backward computation.
I0428 20:37:27.618343  4945 net.cpp:244] This network produces output loss
I0428 20:37:27.618352  4945 net.cpp:257] Network initialization done.
I0428 20:37:27.618675  4945 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1651.prototxt
I0428 20:37:27.618732  4945 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:37:27.618824  4945 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:37:27.618906  4945 layer_factory.hpp:77] Creating layer mnist
I0428 20:37:27.618965  4945 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:37:27.618979  4945 net.cpp:86] Creating Layer mnist
I0428 20:37:27.618983  4945 net.cpp:382] mnist -> data
I0428 20:37:27.618991  4945 net.cpp:382] mnist -> label
I0428 20:37:27.619081  4945 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:37:27.621153  4945 net.cpp:124] Setting up mnist
I0428 20:37:27.621182  4945 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:37:27.621204  4945 net.cpp:131] Top shape: 100 (100)
I0428 20:37:27.621207  4945 net.cpp:139] Memory required for data: 314000
I0428 20:37:27.621212  4945 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:37:27.621222  4945 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:37:27.621224  4945 net.cpp:408] label_mnist_1_split <- label
I0428 20:37:27.621229  4945 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:37:27.621235  4945 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:37:27.621317  4945 net.cpp:124] Setting up label_mnist_1_split
I0428 20:37:27.621325  4945 net.cpp:131] Top shape: 100 (100)
I0428 20:37:27.621328  4945 net.cpp:131] Top shape: 100 (100)
I0428 20:37:27.621332  4945 net.cpp:139] Memory required for data: 314800
I0428 20:37:27.621335  4945 layer_factory.hpp:77] Creating layer conv0
I0428 20:37:27.621345  4945 net.cpp:86] Creating Layer conv0
I0428 20:37:27.621347  4945 net.cpp:408] conv0 <- data
I0428 20:37:27.621353  4945 net.cpp:382] conv0 -> conv0
I0428 20:37:27.623059  4945 net.cpp:124] Setting up conv0
I0428 20:37:27.623073  4945 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:37:27.623077  4945 net.cpp:139] Memory required for data: 23354800
I0428 20:37:27.623086  4945 layer_factory.hpp:77] Creating layer pool0
I0428 20:37:27.623096  4945 net.cpp:86] Creating Layer pool0
I0428 20:37:27.623100  4945 net.cpp:408] pool0 <- conv0
I0428 20:37:27.623105  4945 net.cpp:382] pool0 -> pool0
I0428 20:37:27.623142  4945 net.cpp:124] Setting up pool0
I0428 20:37:27.623147  4945 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:37:27.623150  4945 net.cpp:139] Memory required for data: 29114800
I0428 20:37:27.623153  4945 layer_factory.hpp:77] Creating layer conv1
I0428 20:37:27.623162  4945 net.cpp:86] Creating Layer conv1
I0428 20:37:27.623165  4945 net.cpp:408] conv1 <- pool0
I0428 20:37:27.623172  4945 net.cpp:382] conv1 -> conv1
I0428 20:37:27.626137  4945 net.cpp:124] Setting up conv1
I0428 20:37:27.626149  4945 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:37:27.626153  4945 net.cpp:139] Memory required for data: 31674800
I0428 20:37:27.626176  4945 layer_factory.hpp:77] Creating layer pool1
I0428 20:37:27.626183  4945 net.cpp:86] Creating Layer pool1
I0428 20:37:27.626186  4945 net.cpp:408] pool1 <- conv1
I0428 20:37:27.626193  4945 net.cpp:382] pool1 -> pool1
I0428 20:37:27.626230  4945 net.cpp:124] Setting up pool1
I0428 20:37:27.626237  4945 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:37:27.626240  4945 net.cpp:139] Memory required for data: 32314800
I0428 20:37:27.626243  4945 layer_factory.hpp:77] Creating layer ip1
I0428 20:37:27.626250  4945 net.cpp:86] Creating Layer ip1
I0428 20:37:27.626253  4945 net.cpp:408] ip1 <- pool1
I0428 20:37:27.626260  4945 net.cpp:382] ip1 -> ip1
I0428 20:37:27.626441  4945 net.cpp:124] Setting up ip1
I0428 20:37:27.626464  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.626468  4945 net.cpp:139] Memory required for data: 32318800
I0428 20:37:27.626476  4945 layer_factory.hpp:77] Creating layer relu1
I0428 20:37:27.626482  4945 net.cpp:86] Creating Layer relu1
I0428 20:37:27.626484  4945 net.cpp:408] relu1 <- ip1
I0428 20:37:27.626488  4945 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:37:27.626669  4945 net.cpp:124] Setting up relu1
I0428 20:37:27.626680  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.626683  4945 net.cpp:139] Memory required for data: 32322800
I0428 20:37:27.626688  4945 layer_factory.hpp:77] Creating layer ip2
I0428 20:37:27.626693  4945 net.cpp:86] Creating Layer ip2
I0428 20:37:27.626698  4945 net.cpp:408] ip2 <- ip1
I0428 20:37:27.626703  4945 net.cpp:382] ip2 -> ip2
I0428 20:37:27.626808  4945 net.cpp:124] Setting up ip2
I0428 20:37:27.626816  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.626818  4945 net.cpp:139] Memory required for data: 32326800
I0428 20:37:27.626824  4945 layer_factory.hpp:77] Creating layer relu2
I0428 20:37:27.626828  4945 net.cpp:86] Creating Layer relu2
I0428 20:37:27.626832  4945 net.cpp:408] relu2 <- ip2
I0428 20:37:27.626837  4945 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:37:27.627038  4945 net.cpp:124] Setting up relu2
I0428 20:37:27.627046  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.627049  4945 net.cpp:139] Memory required for data: 32330800
I0428 20:37:27.627053  4945 layer_factory.hpp:77] Creating layer ip3
I0428 20:37:27.627059  4945 net.cpp:86] Creating Layer ip3
I0428 20:37:27.627063  4945 net.cpp:408] ip3 <- ip2
I0428 20:37:27.627068  4945 net.cpp:382] ip3 -> ip3
I0428 20:37:27.627216  4945 net.cpp:124] Setting up ip3
I0428 20:37:27.627224  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.627228  4945 net.cpp:139] Memory required for data: 32334800
I0428 20:37:27.627234  4945 layer_factory.hpp:77] Creating layer relu3
I0428 20:37:27.627240  4945 net.cpp:86] Creating Layer relu3
I0428 20:37:27.627243  4945 net.cpp:408] relu3 <- ip3
I0428 20:37:27.627248  4945 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:37:27.628021  4945 net.cpp:124] Setting up relu3
I0428 20:37:27.628032  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.628051  4945 net.cpp:139] Memory required for data: 32338800
I0428 20:37:27.628054  4945 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:37:27.628062  4945 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:37:27.628065  4945 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:37:27.628070  4945 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:37:27.628077  4945 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:37:27.628115  4945 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:37:27.628123  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.628126  4945 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:37:27.628129  4945 net.cpp:139] Memory required for data: 32346800
I0428 20:37:27.628131  4945 layer_factory.hpp:77] Creating layer accuracy
I0428 20:37:27.628136  4945 net.cpp:86] Creating Layer accuracy
I0428 20:37:27.628139  4945 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:37:27.628144  4945 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:37:27.628147  4945 net.cpp:382] accuracy -> accuracy
I0428 20:37:27.628154  4945 net.cpp:124] Setting up accuracy
I0428 20:37:27.628159  4945 net.cpp:131] Top shape: (1)
I0428 20:37:27.628161  4945 net.cpp:139] Memory required for data: 32346804
I0428 20:37:27.628165  4945 layer_factory.hpp:77] Creating layer loss
I0428 20:37:27.628170  4945 net.cpp:86] Creating Layer loss
I0428 20:37:27.628172  4945 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:37:27.628176  4945 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:37:27.628180  4945 net.cpp:382] loss -> loss
I0428 20:37:27.628185  4945 layer_factory.hpp:77] Creating layer loss
I0428 20:37:27.628422  4945 net.cpp:124] Setting up loss
I0428 20:37:27.628432  4945 net.cpp:131] Top shape: (1)
I0428 20:37:27.628434  4945 net.cpp:134]     with loss weight 1
I0428 20:37:27.628449  4945 net.cpp:139] Memory required for data: 32346808
I0428 20:37:27.628453  4945 net.cpp:200] loss needs backward computation.
I0428 20:37:27.628456  4945 net.cpp:202] accuracy does not need backward computation.
I0428 20:37:27.628460  4945 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:37:27.628463  4945 net.cpp:200] relu3 needs backward computation.
I0428 20:37:27.628465  4945 net.cpp:200] ip3 needs backward computation.
I0428 20:37:27.628468  4945 net.cpp:200] relu2 needs backward computation.
I0428 20:37:27.628471  4945 net.cpp:200] ip2 needs backward computation.
I0428 20:37:27.628474  4945 net.cpp:200] relu1 needs backward computation.
I0428 20:37:27.628478  4945 net.cpp:200] ip1 needs backward computation.
I0428 20:37:27.628480  4945 net.cpp:200] pool1 needs backward computation.
I0428 20:37:27.628484  4945 net.cpp:200] conv1 needs backward computation.
I0428 20:37:27.628486  4945 net.cpp:200] pool0 needs backward computation.
I0428 20:37:27.628489  4945 net.cpp:200] conv0 needs backward computation.
I0428 20:37:27.628492  4945 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:37:27.628496  4945 net.cpp:202] mnist does not need backward computation.
I0428 20:37:27.628499  4945 net.cpp:244] This network produces output accuracy
I0428 20:37:27.628502  4945 net.cpp:244] This network produces output loss
I0428 20:37:27.628514  4945 net.cpp:257] Network initialization done.
I0428 20:37:27.628553  4945 solver.cpp:56] Solver scaffolding done.
I0428 20:37:27.628906  4945 caffe.cpp:248] Starting Optimization
I0428 20:37:27.628914  4945 solver.cpp:273] Solving LeNet
I0428 20:37:27.628917  4945 solver.cpp:274] Learning Rate Policy: inv
I0428 20:37:27.629712  4945 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:37:27.760864  4954 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:27.763039  4945 solver.cpp:398]     Test net output #0: accuracy = 0.0945
I0428 20:37:27.763077  4945 solver.cpp:398]     Test net output #1: loss = 2.30309 (* 1 = 2.30309 loss)
I0428 20:37:27.768481  4945 solver.cpp:219] Iteration 0 (0 iter/s, 0.139532s/100 iters), loss = 2.31198
I0428 20:37:27.768519  4945 solver.cpp:238]     Train net output #0: loss = 2.31198 (* 1 = 2.31198 loss)
I0428 20:37:27.768532  4945 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:37:28.027554  4945 solver.cpp:219] Iteration 100 (386.08 iter/s, 0.259014s/100 iters), loss = 1.27345
I0428 20:37:28.027597  4945 solver.cpp:238]     Train net output #0: loss = 1.27345 (* 1 = 1.27345 loss)
I0428 20:37:28.027604  4945 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:37:28.285631  4945 solver.cpp:219] Iteration 200 (387.571 iter/s, 0.258017s/100 iters), loss = 0.866627
I0428 20:37:28.285655  4945 solver.cpp:238]     Train net output #0: loss = 0.866627 (* 1 = 0.866627 loss)
I0428 20:37:28.285677  4945 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:37:28.547253  4945 solver.cpp:219] Iteration 300 (382.291 iter/s, 0.261581s/100 iters), loss = 0.545486
I0428 20:37:28.547296  4945 solver.cpp:238]     Train net output #0: loss = 0.545486 (* 1 = 0.545486 loss)
I0428 20:37:28.547302  4945 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:37:28.809725  4945 solver.cpp:219] Iteration 400 (381.059 iter/s, 0.262427s/100 iters), loss = 0.652
I0428 20:37:28.809767  4945 solver.cpp:238]     Train net output #0: loss = 0.652 (* 1 = 0.652 loss)
I0428 20:37:28.809774  4945 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:37:29.071113  4945 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:37:29.195619  4954 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:29.200232  4945 solver.cpp:398]     Test net output #0: accuracy = 0.8739
I0428 20:37:29.200269  4945 solver.cpp:398]     Test net output #1: loss = 0.545519 (* 1 = 0.545519 loss)
I0428 20:37:29.202831  4945 solver.cpp:219] Iteration 500 (254.416 iter/s, 0.393057s/100 iters), loss = 0.581062
I0428 20:37:29.202870  4945 solver.cpp:238]     Train net output #0: loss = 0.581062 (* 1 = 0.581062 loss)
I0428 20:37:29.202908  4945 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:37:29.474844  4945 solver.cpp:219] Iteration 600 (367.685 iter/s, 0.271972s/100 iters), loss = 0.423293
I0428 20:37:29.474871  4945 solver.cpp:238]     Train net output #0: loss = 0.423293 (* 1 = 0.423293 loss)
I0428 20:37:29.474885  4945 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:37:29.750197  4945 solver.cpp:219] Iteration 700 (363.229 iter/s, 0.275308s/100 iters), loss = 0.761987
I0428 20:37:29.750238  4945 solver.cpp:238]     Train net output #0: loss = 0.761987 (* 1 = 0.761987 loss)
I0428 20:37:29.750246  4945 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:37:30.028334  4945 solver.cpp:219] Iteration 800 (359.591 iter/s, 0.278094s/100 iters), loss = 0.744878
I0428 20:37:30.028376  4945 solver.cpp:238]     Train net output #0: loss = 0.744878 (* 1 = 0.744878 loss)
I0428 20:37:30.028383  4945 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:37:30.308455  4945 solver.cpp:219] Iteration 900 (357.047 iter/s, 0.280075s/100 iters), loss = 0.494953
I0428 20:37:30.308497  4945 solver.cpp:238]     Train net output #0: loss = 0.494953 (* 1 = 0.494953 loss)
I0428 20:37:30.308504  4945 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:37:30.401727  4952 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:30.585361  4945 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:37:30.590685  4945 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:37:30.593693  4945 solver.cpp:311] Iteration 1000, loss = 0.672757
I0428 20:37:30.593710  4945 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:37:30.722542  4954 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:37:30.725986  4945 solver.cpp:398]     Test net output #0: accuracy = 0.8883
I0428 20:37:30.726022  4945 solver.cpp:398]     Test net output #1: loss = 0.514221 (* 1 = 0.514221 loss)
I0428 20:37:30.726027  4945 solver.cpp:316] Optimization Done.
I0428 20:37:30.726030  4945 caffe.cpp:259] Optimization Done.
