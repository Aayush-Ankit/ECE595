I0428 19:48:29.974212 26496 caffe.cpp:218] Using GPUs 0
I0428 19:48:30.014300 26496 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:48:30.532984 26496 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test546.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:48:30.533130 26496 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test546.prototxt
I0428 19:48:30.533478 26496 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:48:30.533493 26496 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:48:30.533573 26496 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:48:30.533643 26496 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:30.533741 26496 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:48:30.533766 26496 net.cpp:86] Creating Layer mnist
I0428 19:48:30.533773 26496 net.cpp:382] mnist -> data
I0428 19:48:30.533797 26496 net.cpp:382] mnist -> label
I0428 19:48:30.534888 26496 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:48:30.537572 26496 net.cpp:124] Setting up mnist
I0428 19:48:30.537592 26496 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:48:30.537598 26496 net.cpp:131] Top shape: 64 (64)
I0428 19:48:30.537601 26496 net.cpp:139] Memory required for data: 200960
I0428 19:48:30.537611 26496 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:30.537652 26496 net.cpp:86] Creating Layer conv0
I0428 19:48:30.537657 26496 net.cpp:408] conv0 <- data
I0428 19:48:30.537670 26496 net.cpp:382] conv0 -> conv0
I0428 19:48:30.828835 26496 net.cpp:124] Setting up conv0
I0428 19:48:30.828866 26496 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:48:30.828871 26496 net.cpp:139] Memory required for data: 938240
I0428 19:48:30.828888 26496 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:30.828903 26496 net.cpp:86] Creating Layer pool0
I0428 19:48:30.828908 26496 net.cpp:408] pool0 <- conv0
I0428 19:48:30.828914 26496 net.cpp:382] pool0 -> pool0
I0428 19:48:30.828974 26496 net.cpp:124] Setting up pool0
I0428 19:48:30.828981 26496 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:48:30.829005 26496 net.cpp:139] Memory required for data: 1122560
I0428 19:48:30.829010 26496 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:30.829023 26496 net.cpp:86] Creating Layer conv1
I0428 19:48:30.829027 26496 net.cpp:408] conv1 <- pool0
I0428 19:48:30.829033 26496 net.cpp:382] conv1 -> conv1
I0428 19:48:30.831182 26496 net.cpp:124] Setting up conv1
I0428 19:48:30.831199 26496 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:48:30.831203 26496 net.cpp:139] Memory required for data: 1204480
I0428 19:48:30.831213 26496 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:30.831223 26496 net.cpp:86] Creating Layer pool1
I0428 19:48:30.831228 26496 net.cpp:408] pool1 <- conv1
I0428 19:48:30.831233 26496 net.cpp:382] pool1 -> pool1
I0428 19:48:30.831277 26496 net.cpp:124] Setting up pool1
I0428 19:48:30.831284 26496 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:48:30.831286 26496 net.cpp:139] Memory required for data: 1224960
I0428 19:48:30.831290 26496 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:30.831298 26496 net.cpp:86] Creating Layer ip1
I0428 19:48:30.831302 26496 net.cpp:408] ip1 <- pool1
I0428 19:48:30.831307 26496 net.cpp:382] ip1 -> ip1
I0428 19:48:30.831428 26496 net.cpp:124] Setting up ip1
I0428 19:48:30.831435 26496 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:30.831439 26496 net.cpp:139] Memory required for data: 1227520
I0428 19:48:30.831447 26496 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:30.831454 26496 net.cpp:86] Creating Layer relu1
I0428 19:48:30.831457 26496 net.cpp:408] relu1 <- ip1
I0428 19:48:30.831462 26496 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:30.831657 26496 net.cpp:124] Setting up relu1
I0428 19:48:30.831667 26496 net.cpp:131] Top shape: 64 10 (640)
I0428 19:48:30.831671 26496 net.cpp:139] Memory required for data: 1230080
I0428 19:48:30.831674 26496 layer_factory.hpp:77] Creating layer loss
I0428 19:48:30.831682 26496 net.cpp:86] Creating Layer loss
I0428 19:48:30.831686 26496 net.cpp:408] loss <- ip1
I0428 19:48:30.831691 26496 net.cpp:408] loss <- label
I0428 19:48:30.831696 26496 net.cpp:382] loss -> loss
I0428 19:48:30.831718 26496 layer_factory.hpp:77] Creating layer loss
I0428 19:48:30.832650 26496 net.cpp:124] Setting up loss
I0428 19:48:30.832665 26496 net.cpp:131] Top shape: (1)
I0428 19:48:30.832669 26496 net.cpp:134]     with loss weight 1
I0428 19:48:30.832686 26496 net.cpp:139] Memory required for data: 1230084
I0428 19:48:30.832690 26496 net.cpp:200] loss needs backward computation.
I0428 19:48:30.832696 26496 net.cpp:200] relu1 needs backward computation.
I0428 19:48:30.832700 26496 net.cpp:200] ip1 needs backward computation.
I0428 19:48:30.832705 26496 net.cpp:200] pool1 needs backward computation.
I0428 19:48:30.832707 26496 net.cpp:200] conv1 needs backward computation.
I0428 19:48:30.832711 26496 net.cpp:200] pool0 needs backward computation.
I0428 19:48:30.832715 26496 net.cpp:200] conv0 needs backward computation.
I0428 19:48:30.832718 26496 net.cpp:202] mnist does not need backward computation.
I0428 19:48:30.832722 26496 net.cpp:244] This network produces output loss
I0428 19:48:30.832732 26496 net.cpp:257] Network initialization done.
I0428 19:48:30.833047 26496 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test546.prototxt
I0428 19:48:30.833077 26496 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:48:30.833164 26496 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:48:30.833247 26496 layer_factory.hpp:77] Creating layer mnist
I0428 19:48:30.833302 26496 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:48:30.833314 26496 net.cpp:86] Creating Layer mnist
I0428 19:48:30.833320 26496 net.cpp:382] mnist -> data
I0428 19:48:30.833329 26496 net.cpp:382] mnist -> label
I0428 19:48:30.833428 26496 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:48:30.835628 26496 net.cpp:124] Setting up mnist
I0428 19:48:30.835644 26496 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:48:30.835649 26496 net.cpp:131] Top shape: 100 (100)
I0428 19:48:30.835654 26496 net.cpp:139] Memory required for data: 314000
I0428 19:48:30.835659 26496 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:48:30.835670 26496 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:48:30.835675 26496 net.cpp:408] label_mnist_1_split <- label
I0428 19:48:30.835680 26496 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:48:30.835688 26496 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:48:30.835741 26496 net.cpp:124] Setting up label_mnist_1_split
I0428 19:48:30.835748 26496 net.cpp:131] Top shape: 100 (100)
I0428 19:48:30.835752 26496 net.cpp:131] Top shape: 100 (100)
I0428 19:48:30.835757 26496 net.cpp:139] Memory required for data: 314800
I0428 19:48:30.835760 26496 layer_factory.hpp:77] Creating layer conv0
I0428 19:48:30.835769 26496 net.cpp:86] Creating Layer conv0
I0428 19:48:30.835773 26496 net.cpp:408] conv0 <- data
I0428 19:48:30.835779 26496 net.cpp:382] conv0 -> conv0
I0428 19:48:30.836788 26496 net.cpp:124] Setting up conv0
I0428 19:48:30.836803 26496 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:48:30.836807 26496 net.cpp:139] Memory required for data: 1466800
I0428 19:48:30.836827 26496 layer_factory.hpp:77] Creating layer pool0
I0428 19:48:30.836833 26496 net.cpp:86] Creating Layer pool0
I0428 19:48:30.836838 26496 net.cpp:408] pool0 <- conv0
I0428 19:48:30.836843 26496 net.cpp:382] pool0 -> pool0
I0428 19:48:30.836885 26496 net.cpp:124] Setting up pool0
I0428 19:48:30.836891 26496 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:48:30.836894 26496 net.cpp:139] Memory required for data: 1754800
I0428 19:48:30.836897 26496 layer_factory.hpp:77] Creating layer conv1
I0428 19:48:30.836908 26496 net.cpp:86] Creating Layer conv1
I0428 19:48:30.836912 26496 net.cpp:408] conv1 <- pool0
I0428 19:48:30.836917 26496 net.cpp:382] conv1 -> conv1
I0428 19:48:30.839197 26496 net.cpp:124] Setting up conv1
I0428 19:48:30.839212 26496 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:48:30.839217 26496 net.cpp:139] Memory required for data: 1882800
I0428 19:48:30.839227 26496 layer_factory.hpp:77] Creating layer pool1
I0428 19:48:30.839236 26496 net.cpp:86] Creating Layer pool1
I0428 19:48:30.839252 26496 net.cpp:408] pool1 <- conv1
I0428 19:48:30.839259 26496 net.cpp:382] pool1 -> pool1
I0428 19:48:30.839349 26496 net.cpp:124] Setting up pool1
I0428 19:48:30.839359 26496 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:48:30.839368 26496 net.cpp:139] Memory required for data: 1914800
I0428 19:48:30.839372 26496 layer_factory.hpp:77] Creating layer ip1
I0428 19:48:30.839380 26496 net.cpp:86] Creating Layer ip1
I0428 19:48:30.839385 26496 net.cpp:408] ip1 <- pool1
I0428 19:48:30.839390 26496 net.cpp:382] ip1 -> ip1
I0428 19:48:30.839506 26496 net.cpp:124] Setting up ip1
I0428 19:48:30.839515 26496 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:30.839519 26496 net.cpp:139] Memory required for data: 1918800
I0428 19:48:30.839529 26496 layer_factory.hpp:77] Creating layer relu1
I0428 19:48:30.839534 26496 net.cpp:86] Creating Layer relu1
I0428 19:48:30.839539 26496 net.cpp:408] relu1 <- ip1
I0428 19:48:30.839545 26496 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:48:30.840457 26496 net.cpp:124] Setting up relu1
I0428 19:48:30.840474 26496 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:30.840478 26496 net.cpp:139] Memory required for data: 1922800
I0428 19:48:30.840482 26496 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:48:30.840490 26496 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:48:30.840494 26496 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:48:30.840500 26496 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:48:30.840508 26496 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:48:30.840561 26496 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:48:30.840569 26496 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:30.840574 26496 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:48:30.840577 26496 net.cpp:139] Memory required for data: 1930800
I0428 19:48:30.840582 26496 layer_factory.hpp:77] Creating layer accuracy
I0428 19:48:30.840589 26496 net.cpp:86] Creating Layer accuracy
I0428 19:48:30.840592 26496 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:48:30.840598 26496 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:48:30.840603 26496 net.cpp:382] accuracy -> accuracy
I0428 19:48:30.840611 26496 net.cpp:124] Setting up accuracy
I0428 19:48:30.840616 26496 net.cpp:131] Top shape: (1)
I0428 19:48:30.840620 26496 net.cpp:139] Memory required for data: 1930804
I0428 19:48:30.840623 26496 layer_factory.hpp:77] Creating layer loss
I0428 19:48:30.840628 26496 net.cpp:86] Creating Layer loss
I0428 19:48:30.840633 26496 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:48:30.840637 26496 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:48:30.840643 26496 net.cpp:382] loss -> loss
I0428 19:48:30.840651 26496 layer_factory.hpp:77] Creating layer loss
I0428 19:48:30.840927 26496 net.cpp:124] Setting up loss
I0428 19:48:30.840939 26496 net.cpp:131] Top shape: (1)
I0428 19:48:30.840945 26496 net.cpp:134]     with loss weight 1
I0428 19:48:30.840951 26496 net.cpp:139] Memory required for data: 1930808
I0428 19:48:30.840955 26496 net.cpp:200] loss needs backward computation.
I0428 19:48:30.840960 26496 net.cpp:202] accuracy does not need backward computation.
I0428 19:48:30.840965 26496 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:48:30.840968 26496 net.cpp:200] relu1 needs backward computation.
I0428 19:48:30.840971 26496 net.cpp:200] ip1 needs backward computation.
I0428 19:48:30.840975 26496 net.cpp:200] pool1 needs backward computation.
I0428 19:48:30.840979 26496 net.cpp:200] conv1 needs backward computation.
I0428 19:48:30.840983 26496 net.cpp:200] pool0 needs backward computation.
I0428 19:48:30.840986 26496 net.cpp:200] conv0 needs backward computation.
I0428 19:48:30.840991 26496 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:48:30.840996 26496 net.cpp:202] mnist does not need backward computation.
I0428 19:48:30.840999 26496 net.cpp:244] This network produces output accuracy
I0428 19:48:30.841003 26496 net.cpp:244] This network produces output loss
I0428 19:48:30.841014 26496 net.cpp:257] Network initialization done.
I0428 19:48:30.841065 26496 solver.cpp:56] Solver scaffolding done.
I0428 19:48:30.841320 26496 caffe.cpp:248] Starting Optimization
I0428 19:48:30.841328 26496 solver.cpp:273] Solving LeNet
I0428 19:48:30.841332 26496 solver.cpp:274] Learning Rate Policy: inv
I0428 19:48:30.842218 26496 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:48:30.845615 26496 blocking_queue.cpp:49] Waiting for data
I0428 19:48:30.913373 26503 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:30.913823 26496 solver.cpp:398]     Test net output #0: accuracy = 0.114
I0428 19:48:30.913844 26496 solver.cpp:398]     Test net output #1: loss = 2.33695 (* 1 = 2.33695 loss)
I0428 19:48:30.915530 26496 solver.cpp:219] Iteration 0 (0 iter/s, 0.074168s/100 iters), loss = 2.34282
I0428 19:48:30.915558 26496 solver.cpp:238]     Train net output #0: loss = 2.34282 (* 1 = 2.34282 loss)
I0428 19:48:30.915571 26496 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:48:30.985306 26496 solver.cpp:219] Iteration 100 (1433.93 iter/s, 0.0697385s/100 iters), loss = 1.71628
I0428 19:48:30.985332 26496 solver.cpp:238]     Train net output #0: loss = 1.71628 (* 1 = 1.71628 loss)
I0428 19:48:30.985338 26496 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:48:31.049368 26496 solver.cpp:219] Iteration 200 (1561.8 iter/s, 0.0640287s/100 iters), loss = 1.25981
I0428 19:48:31.049391 26496 solver.cpp:238]     Train net output #0: loss = 1.25981 (* 1 = 1.25981 loss)
I0428 19:48:31.049413 26496 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:48:31.112411 26496 solver.cpp:219] Iteration 300 (1587.08 iter/s, 0.0630088s/100 iters), loss = 1.30804
I0428 19:48:31.112442 26496 solver.cpp:238]     Train net output #0: loss = 1.30804 (* 1 = 1.30804 loss)
I0428 19:48:31.112449 26496 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:48:31.175873 26496 solver.cpp:219] Iteration 400 (1576.73 iter/s, 0.0634225s/100 iters), loss = 1.60445
I0428 19:48:31.175915 26496 solver.cpp:238]     Train net output #0: loss = 1.60445 (* 1 = 1.60445 loss)
I0428 19:48:31.175925 26496 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:48:31.233461 26496 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:48:31.298622 26503 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:31.299397 26496 solver.cpp:398]     Test net output #0: accuracy = 0.4667
I0428 19:48:31.299438 26496 solver.cpp:398]     Test net output #1: loss = 1.34503 (* 1 = 1.34503 loss)
I0428 19:48:31.300357 26496 solver.cpp:219] Iteration 500 (803.675 iter/s, 0.124428s/100 iters), loss = 1.47559
I0428 19:48:31.300398 26496 solver.cpp:238]     Train net output #0: loss = 1.47559 (* 1 = 1.47559 loss)
I0428 19:48:31.300412 26496 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:48:31.370915 26496 solver.cpp:219] Iteration 600 (1418.25 iter/s, 0.0705096s/100 iters), loss = 1.32766
I0428 19:48:31.370947 26496 solver.cpp:238]     Train net output #0: loss = 1.32766 (* 1 = 1.32766 loss)
I0428 19:48:31.370957 26496 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:48:31.435400 26496 solver.cpp:219] Iteration 700 (1551.75 iter/s, 0.0644434s/100 iters), loss = 1.04002
I0428 19:48:31.435428 26496 solver.cpp:238]     Train net output #0: loss = 1.04002 (* 1 = 1.04002 loss)
I0428 19:48:31.435439 26496 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:48:31.501325 26496 solver.cpp:219] Iteration 800 (1517.72 iter/s, 0.0658882s/100 iters), loss = 1.50935
I0428 19:48:31.501355 26496 solver.cpp:238]     Train net output #0: loss = 1.50935 (* 1 = 1.50935 loss)
I0428 19:48:31.501364 26496 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:48:31.567852 26496 solver.cpp:219] Iteration 900 (1504.05 iter/s, 0.0664873s/100 iters), loss = 0.956096
I0428 19:48:31.567898 26496 solver.cpp:238]     Train net output #0: loss = 0.956096 (* 1 = 0.956096 loss)
I0428 19:48:31.567908 26496 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:48:31.587927 26502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:31.626422 26496 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:48:31.626969 26496 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:48:31.627372 26496 solver.cpp:311] Iteration 1000, loss = 0.991351
I0428 19:48:31.627394 26496 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:48:31.681922 26503 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:48:31.682471 26496 solver.cpp:398]     Test net output #0: accuracy = 0.5834
I0428 19:48:31.682503 26496 solver.cpp:398]     Test net output #1: loss = 1.06837 (* 1 = 1.06837 loss)
I0428 19:48:31.682515 26496 solver.cpp:316] Optimization Done.
I0428 19:48:31.682520 26496 caffe.cpp:259] Optimization Done.
