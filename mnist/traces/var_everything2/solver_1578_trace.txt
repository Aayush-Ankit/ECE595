I0428 20:32:49.591527  4202 caffe.cpp:218] Using GPUs 0
I0428 20:32:49.632863  4202 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:32:50.156378  4202 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1578.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:32:50.156519  4202 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1578.prototxt
I0428 20:32:50.156945  4202 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:32:50.156967  4202 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:32:50.157073  4202 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:50.157156  4202 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:50.157258  4202 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:32:50.157280  4202 net.cpp:86] Creating Layer mnist
I0428 20:32:50.157289  4202 net.cpp:382] mnist -> data
I0428 20:32:50.157312  4202 net.cpp:382] mnist -> label
I0428 20:32:50.158403  4202 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:32:50.160864  4202 net.cpp:124] Setting up mnist
I0428 20:32:50.160900  4202 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:32:50.160907  4202 net.cpp:131] Top shape: 64 (64)
I0428 20:32:50.160910  4202 net.cpp:139] Memory required for data: 200960
I0428 20:32:50.160918  4202 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:50.160936  4202 net.cpp:86] Creating Layer conv0
I0428 20:32:50.160957  4202 net.cpp:408] conv0 <- data
I0428 20:32:50.160969  4202 net.cpp:382] conv0 -> conv0
I0428 20:32:50.454324  4202 net.cpp:124] Setting up conv0
I0428 20:32:50.454358  4202 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:32:50.454363  4202 net.cpp:139] Memory required for data: 14946560
I0428 20:32:50.454381  4202 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:50.454396  4202 net.cpp:86] Creating Layer pool0
I0428 20:32:50.454401  4202 net.cpp:408] pool0 <- conv0
I0428 20:32:50.454408  4202 net.cpp:382] pool0 -> pool0
I0428 20:32:50.454464  4202 net.cpp:124] Setting up pool0
I0428 20:32:50.454471  4202 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:32:50.454475  4202 net.cpp:139] Memory required for data: 18632960
I0428 20:32:50.454479  4202 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:50.454493  4202 net.cpp:86] Creating Layer conv1
I0428 20:32:50.454497  4202 net.cpp:408] conv1 <- pool0
I0428 20:32:50.454504  4202 net.cpp:382] conv1 -> conv1
I0428 20:32:50.457073  4202 net.cpp:124] Setting up conv1
I0428 20:32:50.457092  4202 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:32:50.457096  4202 net.cpp:139] Memory required for data: 19042560
I0428 20:32:50.457106  4202 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:50.457115  4202 net.cpp:86] Creating Layer pool1
I0428 20:32:50.457119  4202 net.cpp:408] pool1 <- conv1
I0428 20:32:50.457126  4202 net.cpp:382] pool1 -> pool1
I0428 20:32:50.457170  4202 net.cpp:124] Setting up pool1
I0428 20:32:50.457177  4202 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:32:50.457181  4202 net.cpp:139] Memory required for data: 19144960
I0428 20:32:50.457185  4202 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:50.457195  4202 net.cpp:86] Creating Layer ip1
I0428 20:32:50.457198  4202 net.cpp:408] ip1 <- pool1
I0428 20:32:50.457204  4202 net.cpp:382] ip1 -> ip1
I0428 20:32:50.457350  4202 net.cpp:124] Setting up ip1
I0428 20:32:50.457360  4202 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:50.457363  4202 net.cpp:139] Memory required for data: 19147520
I0428 20:32:50.457371  4202 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:50.457379  4202 net.cpp:86] Creating Layer relu1
I0428 20:32:50.457384  4202 net.cpp:408] relu1 <- ip1
I0428 20:32:50.457389  4202 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:50.457586  4202 net.cpp:124] Setting up relu1
I0428 20:32:50.457597  4202 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:50.457600  4202 net.cpp:139] Memory required for data: 19150080
I0428 20:32:50.457604  4202 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:50.457612  4202 net.cpp:86] Creating Layer ip2
I0428 20:32:50.457617  4202 net.cpp:408] ip2 <- ip1
I0428 20:32:50.457623  4202 net.cpp:382] ip2 -> ip2
I0428 20:32:50.457738  4202 net.cpp:124] Setting up ip2
I0428 20:32:50.457747  4202 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:32:50.457751  4202 net.cpp:139] Memory required for data: 19162880
I0428 20:32:50.457758  4202 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:50.457765  4202 net.cpp:86] Creating Layer relu2
I0428 20:32:50.457769  4202 net.cpp:408] relu2 <- ip2
I0428 20:32:50.457774  4202 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:50.458619  4202 net.cpp:124] Setting up relu2
I0428 20:32:50.458634  4202 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:32:50.458638  4202 net.cpp:139] Memory required for data: 19175680
I0428 20:32:50.458642  4202 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:50.458652  4202 net.cpp:86] Creating Layer ip3
I0428 20:32:50.458655  4202 net.cpp:408] ip3 <- ip2
I0428 20:32:50.458662  4202 net.cpp:382] ip3 -> ip3
I0428 20:32:50.458783  4202 net.cpp:124] Setting up ip3
I0428 20:32:50.458793  4202 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:50.458797  4202 net.cpp:139] Memory required for data: 19178240
I0428 20:32:50.458807  4202 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:50.458813  4202 net.cpp:86] Creating Layer relu3
I0428 20:32:50.458817  4202 net.cpp:408] relu3 <- ip3
I0428 20:32:50.458822  4202 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:50.459019  4202 net.cpp:124] Setting up relu3
I0428 20:32:50.459030  4202 net.cpp:131] Top shape: 64 10 (640)
I0428 20:32:50.459034  4202 net.cpp:139] Memory required for data: 19180800
I0428 20:32:50.459038  4202 layer_factory.hpp:77] Creating layer loss
I0428 20:32:50.459046  4202 net.cpp:86] Creating Layer loss
I0428 20:32:50.459049  4202 net.cpp:408] loss <- ip3
I0428 20:32:50.459054  4202 net.cpp:408] loss <- label
I0428 20:32:50.459061  4202 net.cpp:382] loss -> loss
I0428 20:32:50.459084  4202 layer_factory.hpp:77] Creating layer loss
I0428 20:32:50.459347  4202 net.cpp:124] Setting up loss
I0428 20:32:50.459357  4202 net.cpp:131] Top shape: (1)
I0428 20:32:50.459362  4202 net.cpp:134]     with loss weight 1
I0428 20:32:50.459378  4202 net.cpp:139] Memory required for data: 19180804
I0428 20:32:50.459383  4202 net.cpp:200] loss needs backward computation.
I0428 20:32:50.459388  4202 net.cpp:200] relu3 needs backward computation.
I0428 20:32:50.459391  4202 net.cpp:200] ip3 needs backward computation.
I0428 20:32:50.459394  4202 net.cpp:200] relu2 needs backward computation.
I0428 20:32:50.459398  4202 net.cpp:200] ip2 needs backward computation.
I0428 20:32:50.459401  4202 net.cpp:200] relu1 needs backward computation.
I0428 20:32:50.459404  4202 net.cpp:200] ip1 needs backward computation.
I0428 20:32:50.459408  4202 net.cpp:200] pool1 needs backward computation.
I0428 20:32:50.459411  4202 net.cpp:200] conv1 needs backward computation.
I0428 20:32:50.459415  4202 net.cpp:200] pool0 needs backward computation.
I0428 20:32:50.459419  4202 net.cpp:200] conv0 needs backward computation.
I0428 20:32:50.459424  4202 net.cpp:202] mnist does not need backward computation.
I0428 20:32:50.459426  4202 net.cpp:244] This network produces output loss
I0428 20:32:50.459437  4202 net.cpp:257] Network initialization done.
I0428 20:32:50.459825  4202 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1578.prototxt
I0428 20:32:50.459857  4202 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:32:50.459966  4202 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:32:50.460062  4202 layer_factory.hpp:77] Creating layer mnist
I0428 20:32:50.460113  4202 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:32:50.460131  4202 net.cpp:86] Creating Layer mnist
I0428 20:32:50.460136  4202 net.cpp:382] mnist -> data
I0428 20:32:50.460146  4202 net.cpp:382] mnist -> label
I0428 20:32:50.460248  4202 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:32:50.462471  4202 net.cpp:124] Setting up mnist
I0428 20:32:50.462487  4202 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:32:50.462493  4202 net.cpp:131] Top shape: 100 (100)
I0428 20:32:50.462497  4202 net.cpp:139] Memory required for data: 314000
I0428 20:32:50.462502  4202 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:32:50.462513  4202 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:32:50.462519  4202 net.cpp:408] label_mnist_1_split <- label
I0428 20:32:50.462525  4202 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:32:50.462533  4202 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:32:50.462589  4202 net.cpp:124] Setting up label_mnist_1_split
I0428 20:32:50.462596  4202 net.cpp:131] Top shape: 100 (100)
I0428 20:32:50.462601  4202 net.cpp:131] Top shape: 100 (100)
I0428 20:32:50.462604  4202 net.cpp:139] Memory required for data: 314800
I0428 20:32:50.462608  4202 layer_factory.hpp:77] Creating layer conv0
I0428 20:32:50.462618  4202 net.cpp:86] Creating Layer conv0
I0428 20:32:50.462623  4202 net.cpp:408] conv0 <- data
I0428 20:32:50.462630  4202 net.cpp:382] conv0 -> conv0
I0428 20:32:50.464484  4202 net.cpp:124] Setting up conv0
I0428 20:32:50.464503  4202 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:32:50.464506  4202 net.cpp:139] Memory required for data: 23354800
I0428 20:32:50.464517  4202 layer_factory.hpp:77] Creating layer pool0
I0428 20:32:50.464525  4202 net.cpp:86] Creating Layer pool0
I0428 20:32:50.464531  4202 net.cpp:408] pool0 <- conv0
I0428 20:32:50.464537  4202 net.cpp:382] pool0 -> pool0
I0428 20:32:50.464581  4202 net.cpp:124] Setting up pool0
I0428 20:32:50.464586  4202 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:32:50.464591  4202 net.cpp:139] Memory required for data: 29114800
I0428 20:32:50.464594  4202 layer_factory.hpp:77] Creating layer conv1
I0428 20:32:50.464604  4202 net.cpp:86] Creating Layer conv1
I0428 20:32:50.464608  4202 net.cpp:408] conv1 <- pool0
I0428 20:32:50.464615  4202 net.cpp:382] conv1 -> conv1
I0428 20:32:50.466791  4202 net.cpp:124] Setting up conv1
I0428 20:32:50.466809  4202 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:32:50.466814  4202 net.cpp:139] Memory required for data: 29754800
I0428 20:32:50.466823  4202 layer_factory.hpp:77] Creating layer pool1
I0428 20:32:50.466831  4202 net.cpp:86] Creating Layer pool1
I0428 20:32:50.466835  4202 net.cpp:408] pool1 <- conv1
I0428 20:32:50.466841  4202 net.cpp:382] pool1 -> pool1
I0428 20:32:50.466886  4202 net.cpp:124] Setting up pool1
I0428 20:32:50.466892  4202 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:32:50.466897  4202 net.cpp:139] Memory required for data: 29914800
I0428 20:32:50.466900  4202 layer_factory.hpp:77] Creating layer ip1
I0428 20:32:50.466907  4202 net.cpp:86] Creating Layer ip1
I0428 20:32:50.466912  4202 net.cpp:408] ip1 <- pool1
I0428 20:32:50.466918  4202 net.cpp:382] ip1 -> ip1
I0428 20:32:50.467057  4202 net.cpp:124] Setting up ip1
I0428 20:32:50.467079  4202 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:50.467084  4202 net.cpp:139] Memory required for data: 29918800
I0428 20:32:50.467093  4202 layer_factory.hpp:77] Creating layer relu1
I0428 20:32:50.467100  4202 net.cpp:86] Creating Layer relu1
I0428 20:32:50.467104  4202 net.cpp:408] relu1 <- ip1
I0428 20:32:50.467110  4202 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:32:50.467298  4202 net.cpp:124] Setting up relu1
I0428 20:32:50.467308  4202 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:50.467313  4202 net.cpp:139] Memory required for data: 29922800
I0428 20:32:50.467316  4202 layer_factory.hpp:77] Creating layer ip2
I0428 20:32:50.467325  4202 net.cpp:86] Creating Layer ip2
I0428 20:32:50.467329  4202 net.cpp:408] ip2 <- ip1
I0428 20:32:50.467335  4202 net.cpp:382] ip2 -> ip2
I0428 20:32:50.467453  4202 net.cpp:124] Setting up ip2
I0428 20:32:50.467463  4202 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:32:50.467466  4202 net.cpp:139] Memory required for data: 29942800
I0428 20:32:50.467473  4202 layer_factory.hpp:77] Creating layer relu2
I0428 20:32:50.467479  4202 net.cpp:86] Creating Layer relu2
I0428 20:32:50.467483  4202 net.cpp:408] relu2 <- ip2
I0428 20:32:50.467488  4202 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:32:50.467746  4202 net.cpp:124] Setting up relu2
I0428 20:32:50.467756  4202 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:32:50.467761  4202 net.cpp:139] Memory required for data: 29962800
I0428 20:32:50.467764  4202 layer_factory.hpp:77] Creating layer ip3
I0428 20:32:50.467770  4202 net.cpp:86] Creating Layer ip3
I0428 20:32:50.467774  4202 net.cpp:408] ip3 <- ip2
I0428 20:32:50.467780  4202 net.cpp:382] ip3 -> ip3
I0428 20:32:50.467897  4202 net.cpp:124] Setting up ip3
I0428 20:32:50.467906  4202 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:50.467911  4202 net.cpp:139] Memory required for data: 29966800
I0428 20:32:50.467921  4202 layer_factory.hpp:77] Creating layer relu3
I0428 20:32:50.467926  4202 net.cpp:86] Creating Layer relu3
I0428 20:32:50.467929  4202 net.cpp:408] relu3 <- ip3
I0428 20:32:50.467934  4202 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:32:50.468850  4202 net.cpp:124] Setting up relu3
I0428 20:32:50.468868  4202 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:50.468873  4202 net.cpp:139] Memory required for data: 29970800
I0428 20:32:50.468876  4202 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:32:50.468883  4202 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:32:50.468888  4202 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:32:50.468894  4202 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:32:50.468902  4202 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:32:50.468961  4202 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:32:50.468968  4202 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:50.468973  4202 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:32:50.468976  4202 net.cpp:139] Memory required for data: 29978800
I0428 20:32:50.468981  4202 layer_factory.hpp:77] Creating layer accuracy
I0428 20:32:50.468986  4202 net.cpp:86] Creating Layer accuracy
I0428 20:32:50.468991  4202 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:32:50.468996  4202 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:32:50.469002  4202 net.cpp:382] accuracy -> accuracy
I0428 20:32:50.469010  4202 net.cpp:124] Setting up accuracy
I0428 20:32:50.469015  4202 net.cpp:131] Top shape: (1)
I0428 20:32:50.469018  4202 net.cpp:139] Memory required for data: 29978804
I0428 20:32:50.469023  4202 layer_factory.hpp:77] Creating layer loss
I0428 20:32:50.469028  4202 net.cpp:86] Creating Layer loss
I0428 20:32:50.469033  4202 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:32:50.469038  4202 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:32:50.469043  4202 net.cpp:382] loss -> loss
I0428 20:32:50.469050  4202 layer_factory.hpp:77] Creating layer loss
I0428 20:32:50.469317  4202 net.cpp:124] Setting up loss
I0428 20:32:50.469327  4202 net.cpp:131] Top shape: (1)
I0428 20:32:50.469331  4202 net.cpp:134]     with loss weight 1
I0428 20:32:50.469352  4202 net.cpp:139] Memory required for data: 29978808
I0428 20:32:50.469357  4202 net.cpp:200] loss needs backward computation.
I0428 20:32:50.469362  4202 net.cpp:202] accuracy does not need backward computation.
I0428 20:32:50.469367  4202 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:32:50.469372  4202 net.cpp:200] relu3 needs backward computation.
I0428 20:32:50.469375  4202 net.cpp:200] ip3 needs backward computation.
I0428 20:32:50.469378  4202 net.cpp:200] relu2 needs backward computation.
I0428 20:32:50.469382  4202 net.cpp:200] ip2 needs backward computation.
I0428 20:32:50.469385  4202 net.cpp:200] relu1 needs backward computation.
I0428 20:32:50.469388  4202 net.cpp:200] ip1 needs backward computation.
I0428 20:32:50.469393  4202 net.cpp:200] pool1 needs backward computation.
I0428 20:32:50.469396  4202 net.cpp:200] conv1 needs backward computation.
I0428 20:32:50.469400  4202 net.cpp:200] pool0 needs backward computation.
I0428 20:32:50.469404  4202 net.cpp:200] conv0 needs backward computation.
I0428 20:32:50.469409  4202 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:32:50.469413  4202 net.cpp:202] mnist does not need backward computation.
I0428 20:32:50.469418  4202 net.cpp:244] This network produces output accuracy
I0428 20:32:50.469421  4202 net.cpp:244] This network produces output loss
I0428 20:32:50.469434  4202 net.cpp:257] Network initialization done.
I0428 20:32:50.469485  4202 solver.cpp:56] Solver scaffolding done.
I0428 20:32:50.469897  4202 caffe.cpp:248] Starting Optimization
I0428 20:32:50.469903  4202 solver.cpp:273] Solving LeNet
I0428 20:32:50.469907  4202 solver.cpp:274] Learning Rate Policy: inv
I0428 20:32:50.470788  4202 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:32:50.570631  4209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:50.573277  4202 solver.cpp:398]     Test net output #0: accuracy = 0.099
I0428 20:32:50.573303  4202 solver.cpp:398]     Test net output #1: loss = 2.30402 (* 1 = 2.30402 loss)
I0428 20:32:50.581992  4202 solver.cpp:219] Iteration 0 (0 iter/s, 0.112054s/100 iters), loss = 2.31563
I0428 20:32:50.582020  4202 solver.cpp:238]     Train net output #0: loss = 2.31563 (* 1 = 2.31563 loss)
I0428 20:32:50.582032  4202 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:32:50.794226  4202 solver.cpp:219] Iteration 100 (471.278 iter/s, 0.212189s/100 iters), loss = 0.379373
I0428 20:32:50.794265  4202 solver.cpp:238]     Train net output #0: loss = 0.379373 (* 1 = 0.379373 loss)
I0428 20:32:50.794275  4202 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:32:51.013200  4202 solver.cpp:219] Iteration 200 (456.792 iter/s, 0.218918s/100 iters), loss = 0.478956
I0428 20:32:51.013242  4202 solver.cpp:238]     Train net output #0: loss = 0.478956 (* 1 = 0.478956 loss)
I0428 20:32:51.013254  4202 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:32:51.239490  4202 solver.cpp:219] Iteration 300 (442.027 iter/s, 0.22623s/100 iters), loss = 0.437746
I0428 20:32:51.239539  4202 solver.cpp:238]     Train net output #0: loss = 0.437746 (* 1 = 0.437746 loss)
I0428 20:32:51.239552  4202 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:32:51.468375  4202 solver.cpp:219] Iteration 400 (437.025 iter/s, 0.22882s/100 iters), loss = 0.539589
I0428 20:32:51.468425  4202 solver.cpp:238]     Train net output #0: loss = 0.539589 (* 1 = 0.539589 loss)
I0428 20:32:51.468436  4202 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:32:51.696377  4202 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:32:51.803387  4209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:51.807382  4202 solver.cpp:398]     Test net output #0: accuracy = 0.9463
I0428 20:32:51.807426  4202 solver.cpp:398]     Test net output #1: loss = 0.351315 (* 1 = 0.351315 loss)
I0428 20:32:51.809571  4202 solver.cpp:219] Iteration 500 (293.148 iter/s, 0.341124s/100 iters), loss = 0.306364
I0428 20:32:51.809618  4202 solver.cpp:238]     Train net output #0: loss = 0.306364 (* 1 = 0.306364 loss)
I0428 20:32:51.809656  4202 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:32:52.039191  4202 solver.cpp:219] Iteration 600 (435.621 iter/s, 0.229557s/100 iters), loss = 0.265123
I0428 20:32:52.039237  4202 solver.cpp:238]     Train net output #0: loss = 0.265123 (* 1 = 0.265123 loss)
I0428 20:32:52.039249  4202 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:32:52.264546  4202 solver.cpp:219] Iteration 700 (443.864 iter/s, 0.225294s/100 iters), loss = 0.449435
I0428 20:32:52.264591  4202 solver.cpp:238]     Train net output #0: loss = 0.449435 (* 1 = 0.449435 loss)
I0428 20:32:52.264603  4202 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:32:52.493708  4202 solver.cpp:219] Iteration 800 (436.492 iter/s, 0.2291s/100 iters), loss = 0.47173
I0428 20:32:52.493753  4202 solver.cpp:238]     Train net output #0: loss = 0.47173 (* 1 = 0.47173 loss)
I0428 20:32:52.493765  4202 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:32:52.721076  4202 solver.cpp:219] Iteration 900 (439.939 iter/s, 0.227304s/100 iters), loss = 0.323444
I0428 20:32:52.721127  4202 solver.cpp:238]     Train net output #0: loss = 0.323444 (* 1 = 0.323444 loss)
I0428 20:32:52.721139  4202 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:32:52.796717  4208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:52.946741  4202 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:32:52.949601  4202 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:32:52.951424  4202 solver.cpp:311] Iteration 1000, loss = 0.434118
I0428 20:32:52.951449  4202 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:32:53.052997  4209 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:32:53.056573  4202 solver.cpp:398]     Test net output #0: accuracy = 0.9583
I0428 20:32:53.056596  4202 solver.cpp:398]     Test net output #1: loss = 0.328191 (* 1 = 0.328191 loss)
I0428 20:32:53.056602  4202 solver.cpp:316] Optimization Done.
I0428 20:32:53.056605  4202 caffe.cpp:259] Optimization Done.
