I0428 19:37:37.211607 23846 caffe.cpp:218] Using GPUs 0
I0428 19:37:37.246155 23846 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:37.696969 23846 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test261.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:37.697156 23846 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test261.prototxt
I0428 19:37:37.697475 23846 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:37.697494 23846 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:37.697569 23846 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:37.697654 23846 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:37.697758 23846 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:37.697784 23846 net.cpp:86] Creating Layer mnist
I0428 19:37:37.697795 23846 net.cpp:382] mnist -> data
I0428 19:37:37.697820 23846 net.cpp:382] mnist -> label
I0428 19:37:37.698899 23846 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:37.701166 23846 net.cpp:124] Setting up mnist
I0428 19:37:37.701198 23846 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:37.701208 23846 net.cpp:131] Top shape: 64 (64)
I0428 19:37:37.701213 23846 net.cpp:139] Memory required for data: 200960
I0428 19:37:37.701221 23846 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:37.701239 23846 net.cpp:86] Creating Layer conv0
I0428 19:37:37.701248 23846 net.cpp:408] conv0 <- data
I0428 19:37:37.701266 23846 net.cpp:382] conv0 -> conv0
I0428 19:37:37.935576 23846 net.cpp:124] Setting up conv0
I0428 19:37:37.935605 23846 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:37.935611 23846 net.cpp:139] Memory required for data: 14946560
I0428 19:37:37.935629 23846 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:37.935645 23846 net.cpp:86] Creating Layer pool0
I0428 19:37:37.935669 23846 net.cpp:408] pool0 <- conv0
I0428 19:37:37.935679 23846 net.cpp:382] pool0 -> pool0
I0428 19:37:37.935734 23846 net.cpp:124] Setting up pool0
I0428 19:37:37.935742 23846 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:37.935747 23846 net.cpp:139] Memory required for data: 18632960
I0428 19:37:37.935752 23846 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:37.935763 23846 net.cpp:86] Creating Layer ip1
I0428 19:37:37.935768 23846 net.cpp:408] ip1 <- pool0
I0428 19:37:37.935791 23846 net.cpp:382] ip1 -> ip1
I0428 19:37:37.939003 23846 net.cpp:124] Setting up ip1
I0428 19:37:37.939018 23846 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:37.939038 23846 net.cpp:139] Memory required for data: 18639360
I0428 19:37:37.939051 23846 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:37.939062 23846 net.cpp:86] Creating Layer relu1
I0428 19:37:37.939069 23846 net.cpp:408] relu1 <- ip1
I0428 19:37:37.939075 23846 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:37.939241 23846 net.cpp:124] Setting up relu1
I0428 19:37:37.939252 23846 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:37:37.939257 23846 net.cpp:139] Memory required for data: 18645760
I0428 19:37:37.939263 23846 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:37.939272 23846 net.cpp:86] Creating Layer ip2
I0428 19:37:37.939278 23846 net.cpp:408] ip2 <- ip1
I0428 19:37:37.939286 23846 net.cpp:382] ip2 -> ip2
I0428 19:37:37.939412 23846 net.cpp:124] Setting up ip2
I0428 19:37:37.939421 23846 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:37.939426 23846 net.cpp:139] Memory required for data: 18658560
I0428 19:37:37.939437 23846 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:37.939447 23846 net.cpp:86] Creating Layer relu2
I0428 19:37:37.939453 23846 net.cpp:408] relu2 <- ip2
I0428 19:37:37.939460 23846 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:37.940294 23846 net.cpp:124] Setting up relu2
I0428 19:37:37.940309 23846 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:37.940313 23846 net.cpp:139] Memory required for data: 18671360
I0428 19:37:37.940320 23846 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:37.940330 23846 net.cpp:86] Creating Layer ip3
I0428 19:37:37.940336 23846 net.cpp:408] ip3 <- ip2
I0428 19:37:37.940346 23846 net.cpp:382] ip3 -> ip3
I0428 19:37:37.940450 23846 net.cpp:124] Setting up ip3
I0428 19:37:37.940474 23846 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:37.940479 23846 net.cpp:139] Memory required for data: 18673920
I0428 19:37:37.940488 23846 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:37.940497 23846 net.cpp:86] Creating Layer relu3
I0428 19:37:37.940505 23846 net.cpp:408] relu3 <- ip3
I0428 19:37:37.940513 23846 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:37.940659 23846 net.cpp:124] Setting up relu3
I0428 19:37:37.940670 23846 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:37.940675 23846 net.cpp:139] Memory required for data: 18676480
I0428 19:37:37.940680 23846 layer_factory.hpp:77] Creating layer loss
I0428 19:37:37.940687 23846 net.cpp:86] Creating Layer loss
I0428 19:37:37.940692 23846 net.cpp:408] loss <- ip3
I0428 19:37:37.940699 23846 net.cpp:408] loss <- label
I0428 19:37:37.940707 23846 net.cpp:382] loss -> loss
I0428 19:37:37.940731 23846 layer_factory.hpp:77] Creating layer loss
I0428 19:37:37.941023 23846 net.cpp:124] Setting up loss
I0428 19:37:37.941035 23846 net.cpp:131] Top shape: (1)
I0428 19:37:37.941040 23846 net.cpp:134]     with loss weight 1
I0428 19:37:37.941061 23846 net.cpp:139] Memory required for data: 18676484
I0428 19:37:37.941067 23846 net.cpp:200] loss needs backward computation.
I0428 19:37:37.941089 23846 net.cpp:200] relu3 needs backward computation.
I0428 19:37:37.941094 23846 net.cpp:200] ip3 needs backward computation.
I0428 19:37:37.941103 23846 net.cpp:200] relu2 needs backward computation.
I0428 19:37:37.941109 23846 net.cpp:200] ip2 needs backward computation.
I0428 19:37:37.941114 23846 net.cpp:200] relu1 needs backward computation.
I0428 19:37:37.941119 23846 net.cpp:200] ip1 needs backward computation.
I0428 19:37:37.941153 23846 net.cpp:200] pool0 needs backward computation.
I0428 19:37:37.941159 23846 net.cpp:200] conv0 needs backward computation.
I0428 19:37:37.941165 23846 net.cpp:202] mnist does not need backward computation.
I0428 19:37:37.941171 23846 net.cpp:244] This network produces output loss
I0428 19:37:37.941185 23846 net.cpp:257] Network initialization done.
I0428 19:37:37.941558 23846 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test261.prototxt
I0428 19:37:37.941604 23846 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:37.941686 23846 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:37.941778 23846 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:37.941836 23846 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:37.941854 23846 net.cpp:86] Creating Layer mnist
I0428 19:37:37.941862 23846 net.cpp:382] mnist -> data
I0428 19:37:37.941874 23846 net.cpp:382] mnist -> label
I0428 19:37:37.941984 23846 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:37.943975 23846 net.cpp:124] Setting up mnist
I0428 19:37:37.943989 23846 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:37.943996 23846 net.cpp:131] Top shape: 100 (100)
I0428 19:37:37.944001 23846 net.cpp:139] Memory required for data: 314000
I0428 19:37:37.944007 23846 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:37.944021 23846 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:37.944027 23846 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:37.944036 23846 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:37.944046 23846 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:37.944130 23846 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:37.944154 23846 net.cpp:131] Top shape: 100 (100)
I0428 19:37:37.944160 23846 net.cpp:131] Top shape: 100 (100)
I0428 19:37:37.944165 23846 net.cpp:139] Memory required for data: 314800
I0428 19:37:37.944181 23846 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:37.944195 23846 net.cpp:86] Creating Layer conv0
I0428 19:37:37.944201 23846 net.cpp:408] conv0 <- data
I0428 19:37:37.944211 23846 net.cpp:382] conv0 -> conv0
I0428 19:37:37.945864 23846 net.cpp:124] Setting up conv0
I0428 19:37:37.945879 23846 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:37.945884 23846 net.cpp:139] Memory required for data: 23354800
I0428 19:37:37.945899 23846 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:37.945907 23846 net.cpp:86] Creating Layer pool0
I0428 19:37:37.945914 23846 net.cpp:408] pool0 <- conv0
I0428 19:37:37.945924 23846 net.cpp:382] pool0 -> pool0
I0428 19:37:37.945964 23846 net.cpp:124] Setting up pool0
I0428 19:37:37.945972 23846 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:37.945977 23846 net.cpp:139] Memory required for data: 29114800
I0428 19:37:37.945982 23846 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:37.945993 23846 net.cpp:86] Creating Layer ip1
I0428 19:37:37.946000 23846 net.cpp:408] ip1 <- pool0
I0428 19:37:37.946009 23846 net.cpp:382] ip1 -> ip1
I0428 19:37:37.948299 23846 net.cpp:124] Setting up ip1
I0428 19:37:37.948309 23846 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:37.948314 23846 net.cpp:139] Memory required for data: 29124800
I0428 19:37:37.948325 23846 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:37.948333 23846 net.cpp:86] Creating Layer relu1
I0428 19:37:37.948338 23846 net.cpp:408] relu1 <- ip1
I0428 19:37:37.948345 23846 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:37.948595 23846 net.cpp:124] Setting up relu1
I0428 19:37:37.948606 23846 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:37:37.948611 23846 net.cpp:139] Memory required for data: 29134800
I0428 19:37:37.948616 23846 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:37.948626 23846 net.cpp:86] Creating Layer ip2
I0428 19:37:37.948631 23846 net.cpp:408] ip2 <- ip1
I0428 19:37:37.948640 23846 net.cpp:382] ip2 -> ip2
I0428 19:37:37.948763 23846 net.cpp:124] Setting up ip2
I0428 19:37:37.948772 23846 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:37.948778 23846 net.cpp:139] Memory required for data: 29154800
I0428 19:37:37.948791 23846 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:37.948801 23846 net.cpp:86] Creating Layer relu2
I0428 19:37:37.948807 23846 net.cpp:408] relu2 <- ip2
I0428 19:37:37.948834 23846 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:37.949790 23846 net.cpp:124] Setting up relu2
I0428 19:37:37.949803 23846 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:37.949808 23846 net.cpp:139] Memory required for data: 29174800
I0428 19:37:37.949813 23846 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:37.949826 23846 net.cpp:86] Creating Layer ip3
I0428 19:37:37.949832 23846 net.cpp:408] ip3 <- ip2
I0428 19:37:37.949842 23846 net.cpp:382] ip3 -> ip3
I0428 19:37:37.949954 23846 net.cpp:124] Setting up ip3
I0428 19:37:37.949965 23846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:37.949970 23846 net.cpp:139] Memory required for data: 29178800
I0428 19:37:37.949980 23846 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:37.949987 23846 net.cpp:86] Creating Layer relu3
I0428 19:37:37.949992 23846 net.cpp:408] relu3 <- ip3
I0428 19:37:37.950000 23846 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:37.950161 23846 net.cpp:124] Setting up relu3
I0428 19:37:37.950173 23846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:37.950178 23846 net.cpp:139] Memory required for data: 29182800
I0428 19:37:37.950184 23846 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:37.950192 23846 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:37.950197 23846 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:37.950204 23846 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:37.950214 23846 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:37.950255 23846 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:37.950263 23846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:37.950281 23846 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:37.950286 23846 net.cpp:139] Memory required for data: 29190800
I0428 19:37:37.950291 23846 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:37.950299 23846 net.cpp:86] Creating Layer accuracy
I0428 19:37:37.950304 23846 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:37.950312 23846 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:37.950320 23846 net.cpp:382] accuracy -> accuracy
I0428 19:37:37.950331 23846 net.cpp:124] Setting up accuracy
I0428 19:37:37.950340 23846 net.cpp:131] Top shape: (1)
I0428 19:37:37.950345 23846 net.cpp:139] Memory required for data: 29190804
I0428 19:37:37.950350 23846 layer_factory.hpp:77] Creating layer loss
I0428 19:37:37.950359 23846 net.cpp:86] Creating Layer loss
I0428 19:37:37.950364 23846 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:37.950371 23846 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:37.950378 23846 net.cpp:382] loss -> loss
I0428 19:37:37.950403 23846 layer_factory.hpp:77] Creating layer loss
I0428 19:37:37.950692 23846 net.cpp:124] Setting up loss
I0428 19:37:37.950703 23846 net.cpp:131] Top shape: (1)
I0428 19:37:37.950708 23846 net.cpp:134]     with loss weight 1
I0428 19:37:37.950717 23846 net.cpp:139] Memory required for data: 29190808
I0428 19:37:37.950723 23846 net.cpp:200] loss needs backward computation.
I0428 19:37:37.950731 23846 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:37.950736 23846 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:37.950742 23846 net.cpp:200] relu3 needs backward computation.
I0428 19:37:37.950747 23846 net.cpp:200] ip3 needs backward computation.
I0428 19:37:37.950752 23846 net.cpp:200] relu2 needs backward computation.
I0428 19:37:37.950757 23846 net.cpp:200] ip2 needs backward computation.
I0428 19:37:37.950775 23846 net.cpp:200] relu1 needs backward computation.
I0428 19:37:37.950780 23846 net.cpp:200] ip1 needs backward computation.
I0428 19:37:37.950785 23846 net.cpp:200] pool0 needs backward computation.
I0428 19:37:37.950790 23846 net.cpp:200] conv0 needs backward computation.
I0428 19:37:37.950796 23846 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:37.950803 23846 net.cpp:202] mnist does not need backward computation.
I0428 19:37:37.950806 23846 net.cpp:244] This network produces output accuracy
I0428 19:37:37.950825 23846 net.cpp:244] This network produces output loss
I0428 19:37:37.950841 23846 net.cpp:257] Network initialization done.
I0428 19:37:37.950882 23846 solver.cpp:56] Solver scaffolding done.
I0428 19:37:37.951202 23846 caffe.cpp:248] Starting Optimization
I0428 19:37:37.951210 23846 solver.cpp:273] Solving LeNet
I0428 19:37:37.951215 23846 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:37.953176 23846 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:38.122753 23853 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:38.127264 23846 solver.cpp:398]     Test net output #0: accuracy = 0.1225
I0428 19:37:38.127288 23846 solver.cpp:398]     Test net output #1: loss = 2.3045 (* 1 = 2.3045 loss)
I0428 19:37:38.132774 23846 solver.cpp:219] Iteration 0 (0 iter/s, 0.181518s/100 iters), loss = 2.29659
I0428 19:37:38.132803 23846 solver.cpp:238]     Train net output #0: loss = 2.29659 (* 1 = 2.29659 loss)
I0428 19:37:38.132836 23846 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:38.367539 23846 solver.cpp:219] Iteration 100 (426.067 iter/s, 0.234705s/100 iters), loss = 0.474451
I0428 19:37:38.367594 23846 solver.cpp:238]     Train net output #0: loss = 0.474451 (* 1 = 0.474451 loss)
I0428 19:37:38.367606 23846 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:38.611755 23846 solver.cpp:219] Iteration 200 (409.59 iter/s, 0.244146s/100 iters), loss = 0.306626
I0428 19:37:38.611791 23846 solver.cpp:238]     Train net output #0: loss = 0.306626 (* 1 = 0.306626 loss)
I0428 19:37:38.611800 23846 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:38.857401 23846 solver.cpp:219] Iteration 300 (407.189 iter/s, 0.245586s/100 iters), loss = 0.222523
I0428 19:37:38.857487 23846 solver.cpp:238]     Train net output #0: loss = 0.222523 (* 1 = 0.222523 loss)
I0428 19:37:38.857504 23846 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:39.101789 23846 solver.cpp:219] Iteration 400 (409.352 iter/s, 0.244289s/100 iters), loss = 0.11604
I0428 19:37:39.101826 23846 solver.cpp:238]     Train net output #0: loss = 0.11604 (* 1 = 0.11604 loss)
I0428 19:37:39.101835 23846 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:39.332878 23846 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:39.494917 23853 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:39.500998 23846 solver.cpp:398]     Test net output #0: accuracy = 0.9538
I0428 19:37:39.501026 23846 solver.cpp:398]     Test net output #1: loss = 0.156132 (* 1 = 0.156132 loss)
I0428 19:37:39.503231 23846 solver.cpp:219] Iteration 500 (249.141 iter/s, 0.401379s/100 iters), loss = 0.270938
I0428 19:37:39.503257 23846 solver.cpp:238]     Train net output #0: loss = 0.270938 (* 1 = 0.270938 loss)
I0428 19:37:39.503265 23846 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:39.751502 23846 solver.cpp:219] Iteration 600 (402.867 iter/s, 0.248221s/100 iters), loss = 0.139186
I0428 19:37:39.751554 23846 solver.cpp:238]     Train net output #0: loss = 0.139186 (* 1 = 0.139186 loss)
I0428 19:37:39.751565 23846 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:39.993252 23846 solver.cpp:219] Iteration 700 (413.766 iter/s, 0.241682s/100 iters), loss = 0.231891
I0428 19:37:39.993293 23846 solver.cpp:238]     Train net output #0: loss = 0.231891 (* 1 = 0.231891 loss)
I0428 19:37:39.993302 23846 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:40.230700 23846 solver.cpp:219] Iteration 800 (421.248 iter/s, 0.23739s/100 iters), loss = 0.183058
I0428 19:37:40.230741 23846 solver.cpp:238]     Train net output #0: loss = 0.183058 (* 1 = 0.183058 loss)
I0428 19:37:40.230751 23846 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:40.475525 23846 solver.cpp:219] Iteration 900 (408.557 iter/s, 0.244764s/100 iters), loss = 0.188315
I0428 19:37:40.475576 23846 solver.cpp:238]     Train net output #0: loss = 0.188315 (* 1 = 0.188315 loss)
I0428 19:37:40.475592 23846 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:40.553117 23852 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:40.706064 23846 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:40.712970 23846 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:40.717381 23846 solver.cpp:311] Iteration 1000, loss = 0.174056
I0428 19:37:40.717403 23846 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:40.879905 23853 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:40.886042 23846 solver.cpp:398]     Test net output #0: accuracy = 0.9646
I0428 19:37:40.886070 23846 solver.cpp:398]     Test net output #1: loss = 0.109919 (* 1 = 0.109919 loss)
I0428 19:37:40.886081 23846 solver.cpp:316] Optimization Done.
I0428 19:37:40.886087 23846 caffe.cpp:259] Optimization Done.
