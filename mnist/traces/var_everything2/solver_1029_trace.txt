I0428 20:06:29.136696 30884 caffe.cpp:218] Using GPUs 0
I0428 20:06:29.174304 30884 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:06:29.687278 30884 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1029.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:06:29.687422 30884 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1029.prototxt
I0428 20:06:29.687839 30884 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:06:29.687858 30884 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:06:29.687961 30884 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:29.688043 30884 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:29.688146 30884 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:06:29.688171 30884 net.cpp:86] Creating Layer mnist
I0428 20:06:29.688181 30884 net.cpp:382] mnist -> data
I0428 20:06:29.688204 30884 net.cpp:382] mnist -> label
I0428 20:06:29.689399 30884 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:06:29.692123 30884 net.cpp:124] Setting up mnist
I0428 20:06:29.692143 30884 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:06:29.692153 30884 net.cpp:131] Top shape: 64 (64)
I0428 20:06:29.692160 30884 net.cpp:139] Memory required for data: 200960
I0428 20:06:29.692167 30884 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:29.692199 30884 net.cpp:86] Creating Layer conv0
I0428 20:06:29.692220 30884 net.cpp:408] conv0 <- data
I0428 20:06:29.692234 30884 net.cpp:382] conv0 -> conv0
I0428 20:06:29.965821 30884 net.cpp:124] Setting up conv0
I0428 20:06:29.965847 30884 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:06:29.965850 30884 net.cpp:139] Memory required for data: 3887360
I0428 20:06:29.965865 30884 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:29.965878 30884 net.cpp:86] Creating Layer pool0
I0428 20:06:29.965881 30884 net.cpp:408] pool0 <- conv0
I0428 20:06:29.965886 30884 net.cpp:382] pool0 -> pool0
I0428 20:06:29.965943 30884 net.cpp:124] Setting up pool0
I0428 20:06:29.965948 30884 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:06:29.965951 30884 net.cpp:139] Memory required for data: 4808960
I0428 20:06:29.965955 30884 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:29.965965 30884 net.cpp:86] Creating Layer conv1
I0428 20:06:29.965967 30884 net.cpp:408] conv1 <- pool0
I0428 20:06:29.965972 30884 net.cpp:382] conv1 -> conv1
I0428 20:06:29.968642 30884 net.cpp:124] Setting up conv1
I0428 20:06:29.968672 30884 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:06:29.968677 30884 net.cpp:139] Memory required for data: 4890880
I0428 20:06:29.968684 30884 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:29.968693 30884 net.cpp:86] Creating Layer pool1
I0428 20:06:29.968696 30884 net.cpp:408] pool1 <- conv1
I0428 20:06:29.968700 30884 net.cpp:382] pool1 -> pool1
I0428 20:06:29.968765 30884 net.cpp:124] Setting up pool1
I0428 20:06:29.968778 30884 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:06:29.968782 30884 net.cpp:139] Memory required for data: 4911360
I0428 20:06:29.968786 30884 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:29.968792 30884 net.cpp:86] Creating Layer ip1
I0428 20:06:29.968796 30884 net.cpp:408] ip1 <- pool1
I0428 20:06:29.968801 30884 net.cpp:382] ip1 -> ip1
I0428 20:06:29.968932 30884 net.cpp:124] Setting up ip1
I0428 20:06:29.968940 30884 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:29.968943 30884 net.cpp:139] Memory required for data: 4913920
I0428 20:06:29.968950 30884 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:29.968957 30884 net.cpp:86] Creating Layer relu1
I0428 20:06:29.968961 30884 net.cpp:408] relu1 <- ip1
I0428 20:06:29.968966 30884 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:29.969127 30884 net.cpp:124] Setting up relu1
I0428 20:06:29.969151 30884 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:29.969153 30884 net.cpp:139] Memory required for data: 4916480
I0428 20:06:29.969156 30884 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:29.969161 30884 net.cpp:86] Creating Layer ip2
I0428 20:06:29.969166 30884 net.cpp:408] ip2 <- ip1
I0428 20:06:29.969169 30884 net.cpp:382] ip2 -> ip2
I0428 20:06:29.969254 30884 net.cpp:124] Setting up ip2
I0428 20:06:29.969260 30884 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:29.969264 30884 net.cpp:139] Memory required for data: 4922880
I0428 20:06:29.969269 30884 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:29.969274 30884 net.cpp:86] Creating Layer relu2
I0428 20:06:29.969276 30884 net.cpp:408] relu2 <- ip2
I0428 20:06:29.969280 30884 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:29.969995 30884 net.cpp:124] Setting up relu2
I0428 20:06:29.970008 30884 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:06:29.970027 30884 net.cpp:139] Memory required for data: 4929280
I0428 20:06:29.970031 30884 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:29.970037 30884 net.cpp:86] Creating Layer ip3
I0428 20:06:29.970041 30884 net.cpp:408] ip3 <- ip2
I0428 20:06:29.970046 30884 net.cpp:382] ip3 -> ip3
I0428 20:06:29.970139 30884 net.cpp:124] Setting up ip3
I0428 20:06:29.970147 30884 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:29.970150 30884 net.cpp:139] Memory required for data: 4931840
I0428 20:06:29.970157 30884 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:29.970162 30884 net.cpp:86] Creating Layer relu3
I0428 20:06:29.970165 30884 net.cpp:408] relu3 <- ip3
I0428 20:06:29.970170 30884 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:29.970326 30884 net.cpp:124] Setting up relu3
I0428 20:06:29.970335 30884 net.cpp:131] Top shape: 64 10 (640)
I0428 20:06:29.970338 30884 net.cpp:139] Memory required for data: 4934400
I0428 20:06:29.970341 30884 layer_factory.hpp:77] Creating layer loss
I0428 20:06:29.970350 30884 net.cpp:86] Creating Layer loss
I0428 20:06:29.970355 30884 net.cpp:408] loss <- ip3
I0428 20:06:29.970360 30884 net.cpp:408] loss <- label
I0428 20:06:29.970366 30884 net.cpp:382] loss -> loss
I0428 20:06:29.970381 30884 layer_factory.hpp:77] Creating layer loss
I0428 20:06:29.970595 30884 net.cpp:124] Setting up loss
I0428 20:06:29.970605 30884 net.cpp:131] Top shape: (1)
I0428 20:06:29.970608 30884 net.cpp:134]     with loss weight 1
I0428 20:06:29.970623 30884 net.cpp:139] Memory required for data: 4934404
I0428 20:06:29.970626 30884 net.cpp:200] loss needs backward computation.
I0428 20:06:29.970630 30884 net.cpp:200] relu3 needs backward computation.
I0428 20:06:29.970633 30884 net.cpp:200] ip3 needs backward computation.
I0428 20:06:29.970635 30884 net.cpp:200] relu2 needs backward computation.
I0428 20:06:29.970638 30884 net.cpp:200] ip2 needs backward computation.
I0428 20:06:29.970641 30884 net.cpp:200] relu1 needs backward computation.
I0428 20:06:29.970644 30884 net.cpp:200] ip1 needs backward computation.
I0428 20:06:29.970648 30884 net.cpp:200] pool1 needs backward computation.
I0428 20:06:29.970650 30884 net.cpp:200] conv1 needs backward computation.
I0428 20:06:29.970654 30884 net.cpp:200] pool0 needs backward computation.
I0428 20:06:29.970656 30884 net.cpp:200] conv0 needs backward computation.
I0428 20:06:29.970659 30884 net.cpp:202] mnist does not need backward computation.
I0428 20:06:29.970662 30884 net.cpp:244] This network produces output loss
I0428 20:06:29.970671 30884 net.cpp:257] Network initialization done.
I0428 20:06:29.971071 30884 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1029.prototxt
I0428 20:06:29.971115 30884 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:06:29.971206 30884 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:06:29.971299 30884 layer_factory.hpp:77] Creating layer mnist
I0428 20:06:29.971345 30884 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:06:29.971359 30884 net.cpp:86] Creating Layer mnist
I0428 20:06:29.971364 30884 net.cpp:382] mnist -> data
I0428 20:06:29.971371 30884 net.cpp:382] mnist -> label
I0428 20:06:29.971448 30884 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:06:29.973331 30884 net.cpp:124] Setting up mnist
I0428 20:06:29.973361 30884 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:06:29.973366 30884 net.cpp:131] Top shape: 100 (100)
I0428 20:06:29.973371 30884 net.cpp:139] Memory required for data: 314000
I0428 20:06:29.973376 30884 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:06:29.973402 30884 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:06:29.973407 30884 net.cpp:408] label_mnist_1_split <- label
I0428 20:06:29.973414 30884 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:06:29.973424 30884 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:06:29.973492 30884 net.cpp:124] Setting up label_mnist_1_split
I0428 20:06:29.973500 30884 net.cpp:131] Top shape: 100 (100)
I0428 20:06:29.973505 30884 net.cpp:131] Top shape: 100 (100)
I0428 20:06:29.973507 30884 net.cpp:139] Memory required for data: 314800
I0428 20:06:29.973510 30884 layer_factory.hpp:77] Creating layer conv0
I0428 20:06:29.973520 30884 net.cpp:86] Creating Layer conv0
I0428 20:06:29.973522 30884 net.cpp:408] conv0 <- data
I0428 20:06:29.973527 30884 net.cpp:382] conv0 -> conv0
I0428 20:06:29.975191 30884 net.cpp:124] Setting up conv0
I0428 20:06:29.975205 30884 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:06:29.975208 30884 net.cpp:139] Memory required for data: 6074800
I0428 20:06:29.975217 30884 layer_factory.hpp:77] Creating layer pool0
I0428 20:06:29.975239 30884 net.cpp:86] Creating Layer pool0
I0428 20:06:29.975242 30884 net.cpp:408] pool0 <- conv0
I0428 20:06:29.975263 30884 net.cpp:382] pool0 -> pool0
I0428 20:06:29.975313 30884 net.cpp:124] Setting up pool0
I0428 20:06:29.975319 30884 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:06:29.975322 30884 net.cpp:139] Memory required for data: 7514800
I0428 20:06:29.975324 30884 layer_factory.hpp:77] Creating layer conv1
I0428 20:06:29.975334 30884 net.cpp:86] Creating Layer conv1
I0428 20:06:29.975337 30884 net.cpp:408] conv1 <- pool0
I0428 20:06:29.975342 30884 net.cpp:382] conv1 -> conv1
I0428 20:06:29.977458 30884 net.cpp:124] Setting up conv1
I0428 20:06:29.977473 30884 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:06:29.977476 30884 net.cpp:139] Memory required for data: 7642800
I0428 20:06:29.977485 30884 layer_factory.hpp:77] Creating layer pool1
I0428 20:06:29.977493 30884 net.cpp:86] Creating Layer pool1
I0428 20:06:29.977524 30884 net.cpp:408] pool1 <- conv1
I0428 20:06:29.977531 30884 net.cpp:382] pool1 -> pool1
I0428 20:06:29.977573 30884 net.cpp:124] Setting up pool1
I0428 20:06:29.977586 30884 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:06:29.977589 30884 net.cpp:139] Memory required for data: 7674800
I0428 20:06:29.977603 30884 layer_factory.hpp:77] Creating layer ip1
I0428 20:06:29.977609 30884 net.cpp:86] Creating Layer ip1
I0428 20:06:29.977619 30884 net.cpp:408] ip1 <- pool1
I0428 20:06:29.977623 30884 net.cpp:382] ip1 -> ip1
I0428 20:06:29.977732 30884 net.cpp:124] Setting up ip1
I0428 20:06:29.977740 30884 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:29.977752 30884 net.cpp:139] Memory required for data: 7678800
I0428 20:06:29.977759 30884 layer_factory.hpp:77] Creating layer relu1
I0428 20:06:29.977764 30884 net.cpp:86] Creating Layer relu1
I0428 20:06:29.977767 30884 net.cpp:408] relu1 <- ip1
I0428 20:06:29.977777 30884 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:06:29.978031 30884 net.cpp:124] Setting up relu1
I0428 20:06:29.978040 30884 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:29.978044 30884 net.cpp:139] Memory required for data: 7682800
I0428 20:06:29.978046 30884 layer_factory.hpp:77] Creating layer ip2
I0428 20:06:29.978054 30884 net.cpp:86] Creating Layer ip2
I0428 20:06:29.978057 30884 net.cpp:408] ip2 <- ip1
I0428 20:06:29.978068 30884 net.cpp:382] ip2 -> ip2
I0428 20:06:29.978163 30884 net.cpp:124] Setting up ip2
I0428 20:06:29.978170 30884 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:29.978174 30884 net.cpp:139] Memory required for data: 7692800
I0428 20:06:29.978179 30884 layer_factory.hpp:77] Creating layer relu2
I0428 20:06:29.978183 30884 net.cpp:86] Creating Layer relu2
I0428 20:06:29.978186 30884 net.cpp:408] relu2 <- ip2
I0428 20:06:29.978195 30884 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:06:29.978376 30884 net.cpp:124] Setting up relu2
I0428 20:06:29.978391 30884 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:06:29.978395 30884 net.cpp:139] Memory required for data: 7702800
I0428 20:06:29.978399 30884 layer_factory.hpp:77] Creating layer ip3
I0428 20:06:29.978404 30884 net.cpp:86] Creating Layer ip3
I0428 20:06:29.978407 30884 net.cpp:408] ip3 <- ip2
I0428 20:06:29.978413 30884 net.cpp:382] ip3 -> ip3
I0428 20:06:29.978510 30884 net.cpp:124] Setting up ip3
I0428 20:06:29.978518 30884 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:29.978520 30884 net.cpp:139] Memory required for data: 7706800
I0428 20:06:29.978528 30884 layer_factory.hpp:77] Creating layer relu3
I0428 20:06:29.978533 30884 net.cpp:86] Creating Layer relu3
I0428 20:06:29.978536 30884 net.cpp:408] relu3 <- ip3
I0428 20:06:29.978540 30884 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:06:29.979333 30884 net.cpp:124] Setting up relu3
I0428 20:06:29.979346 30884 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:29.979351 30884 net.cpp:139] Memory required for data: 7710800
I0428 20:06:29.979357 30884 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:06:29.979363 30884 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:06:29.979367 30884 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:06:29.979372 30884 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:06:29.979379 30884 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:06:29.979434 30884 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:06:29.979442 30884 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:29.979446 30884 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:06:29.979449 30884 net.cpp:139] Memory required for data: 7718800
I0428 20:06:29.979451 30884 layer_factory.hpp:77] Creating layer accuracy
I0428 20:06:29.979465 30884 net.cpp:86] Creating Layer accuracy
I0428 20:06:29.979467 30884 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:06:29.979471 30884 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:06:29.979475 30884 net.cpp:382] accuracy -> accuracy
I0428 20:06:29.979481 30884 net.cpp:124] Setting up accuracy
I0428 20:06:29.979485 30884 net.cpp:131] Top shape: (1)
I0428 20:06:29.979488 30884 net.cpp:139] Memory required for data: 7718804
I0428 20:06:29.979496 30884 layer_factory.hpp:77] Creating layer loss
I0428 20:06:29.979502 30884 net.cpp:86] Creating Layer loss
I0428 20:06:29.979506 30884 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:06:29.979509 30884 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:06:29.979513 30884 net.cpp:382] loss -> loss
I0428 20:06:29.979519 30884 layer_factory.hpp:77] Creating layer loss
I0428 20:06:29.979758 30884 net.cpp:124] Setting up loss
I0428 20:06:29.979766 30884 net.cpp:131] Top shape: (1)
I0428 20:06:29.979769 30884 net.cpp:134]     with loss weight 1
I0428 20:06:29.979776 30884 net.cpp:139] Memory required for data: 7718808
I0428 20:06:29.979789 30884 net.cpp:200] loss needs backward computation.
I0428 20:06:29.979792 30884 net.cpp:202] accuracy does not need backward computation.
I0428 20:06:29.979796 30884 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:06:29.979799 30884 net.cpp:200] relu3 needs backward computation.
I0428 20:06:29.979801 30884 net.cpp:200] ip3 needs backward computation.
I0428 20:06:29.979804 30884 net.cpp:200] relu2 needs backward computation.
I0428 20:06:29.979813 30884 net.cpp:200] ip2 needs backward computation.
I0428 20:06:29.979816 30884 net.cpp:200] relu1 needs backward computation.
I0428 20:06:29.979820 30884 net.cpp:200] ip1 needs backward computation.
I0428 20:06:29.979821 30884 net.cpp:200] pool1 needs backward computation.
I0428 20:06:29.979825 30884 net.cpp:200] conv1 needs backward computation.
I0428 20:06:29.979828 30884 net.cpp:200] pool0 needs backward computation.
I0428 20:06:29.979830 30884 net.cpp:200] conv0 needs backward computation.
I0428 20:06:29.979835 30884 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:06:29.979838 30884 net.cpp:202] mnist does not need backward computation.
I0428 20:06:29.979846 30884 net.cpp:244] This network produces output accuracy
I0428 20:06:29.979851 30884 net.cpp:244] This network produces output loss
I0428 20:06:29.979863 30884 net.cpp:257] Network initialization done.
I0428 20:06:29.979953 30884 solver.cpp:56] Solver scaffolding done.
I0428 20:06:29.980279 30884 caffe.cpp:248] Starting Optimization
I0428 20:06:29.980286 30884 solver.cpp:273] Solving LeNet
I0428 20:06:29.980288 30884 solver.cpp:274] Learning Rate Policy: inv
I0428 20:06:29.981112 30884 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:06:29.986264 30884 blocking_queue.cpp:49] Waiting for data
I0428 20:06:30.057477 30891 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:30.058094 30884 solver.cpp:398]     Test net output #0: accuracy = 0.0803
I0428 20:06:30.058111 30884 solver.cpp:398]     Test net output #1: loss = 2.31802 (* 1 = 2.31802 loss)
I0428 20:06:30.061619 30884 solver.cpp:219] Iteration 0 (-1.63194e-31 iter/s, 0.0813056s/100 iters), loss = 2.30624
I0428 20:06:30.061643 30884 solver.cpp:238]     Train net output #0: loss = 2.30624 (* 1 = 2.30624 loss)
I0428 20:06:30.061655 30884 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:06:30.153384 30884 solver.cpp:219] Iteration 100 (1090.18 iter/s, 0.0917279s/100 iters), loss = 1.28345
I0428 20:06:30.153410 30884 solver.cpp:238]     Train net output #0: loss = 1.28345 (* 1 = 1.28345 loss)
I0428 20:06:30.153431 30884 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:06:30.244377 30884 solver.cpp:219] Iteration 200 (1099.4 iter/s, 0.0909588s/100 iters), loss = 0.675161
I0428 20:06:30.244400 30884 solver.cpp:238]     Train net output #0: loss = 0.675161 (* 1 = 0.675161 loss)
I0428 20:06:30.244406 30884 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:06:30.332509 30884 solver.cpp:219] Iteration 300 (1135.09 iter/s, 0.0880988s/100 iters), loss = 0.623433
I0428 20:06:30.332532 30884 solver.cpp:238]     Train net output #0: loss = 0.623433 (* 1 = 0.623433 loss)
I0428 20:06:30.332538 30884 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:06:30.420907 30884 solver.cpp:219] Iteration 400 (1131.84 iter/s, 0.0883517s/100 iters), loss = 0.730198
I0428 20:06:30.420933 30884 solver.cpp:238]     Train net output #0: loss = 0.730198 (* 1 = 0.730198 loss)
I0428 20:06:30.420954 30884 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:06:30.508931 30884 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:06:30.563596 30891 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:30.564188 30884 solver.cpp:398]     Test net output #0: accuracy = 0.8382
I0428 20:06:30.564208 30884 solver.cpp:398]     Test net output #1: loss = 0.495356 (* 1 = 0.495356 loss)
I0428 20:06:30.565116 30884 solver.cpp:219] Iteration 500 (693.621 iter/s, 0.144171s/100 iters), loss = 0.668011
I0428 20:06:30.565157 30884 solver.cpp:238]     Train net output #0: loss = 0.668011 (* 1 = 0.668011 loss)
I0428 20:06:30.565165 30884 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:06:30.658471 30884 solver.cpp:219] Iteration 600 (1071.76 iter/s, 0.0933046s/100 iters), loss = 0.36587
I0428 20:06:30.658496 30884 solver.cpp:238]     Train net output #0: loss = 0.36587 (* 1 = 0.36587 loss)
I0428 20:06:30.658517 30884 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:06:30.748551 30884 solver.cpp:219] Iteration 700 (1110.55 iter/s, 0.0900455s/100 iters), loss = 0.393147
I0428 20:06:30.748576 30884 solver.cpp:238]     Train net output #0: loss = 0.393147 (* 1 = 0.393147 loss)
I0428 20:06:30.748598 30884 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:06:30.839359 30884 solver.cpp:219] Iteration 800 (1101.66 iter/s, 0.0907725s/100 iters), loss = 0.391869
I0428 20:06:30.839383 30884 solver.cpp:238]     Train net output #0: loss = 0.391869 (* 1 = 0.391869 loss)
I0428 20:06:30.839406 30884 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:06:30.929419 30884 solver.cpp:219] Iteration 900 (1110.79 iter/s, 0.090026s/100 iters), loss = 0.445048
I0428 20:06:30.929460 30884 solver.cpp:238]     Train net output #0: loss = 0.445048 (* 1 = 0.445048 loss)
I0428 20:06:30.929481 30884 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:06:30.959529 30890 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:31.018290 30884 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:06:31.019070 30884 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:06:31.019636 30884 solver.cpp:311] Iteration 1000, loss = 0.237918
I0428 20:06:31.019652 30884 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:06:31.073570 30891 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:06:31.074146 30884 solver.cpp:398]     Test net output #0: accuracy = 0.867
I0428 20:06:31.074164 30884 solver.cpp:398]     Test net output #1: loss = 0.357676 (* 1 = 0.357676 loss)
I0428 20:06:31.074169 30884 solver.cpp:316] Optimization Done.
I0428 20:06:31.074172 30884 caffe.cpp:259] Optimization Done.
