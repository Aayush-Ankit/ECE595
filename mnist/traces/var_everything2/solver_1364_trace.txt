I0428 20:20:29.483762  1561 caffe.cpp:218] Using GPUs 0
I0428 20:20:29.515491  1561 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:30.023869  1561 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1364.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:30.023988  1561 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1364.prototxt
I0428 20:20:30.024341  1561 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:30.024356  1561 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:30.024441  1561 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:30.024507  1561 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:30.024597  1561 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:30.024618  1561 net.cpp:86] Creating Layer mnist
I0428 20:20:30.024626  1561 net.cpp:382] mnist -> data
I0428 20:20:30.024644  1561 net.cpp:382] mnist -> label
I0428 20:20:30.025631  1561 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:30.027750  1561 net.cpp:124] Setting up mnist
I0428 20:20:30.027765  1561 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:30.027770  1561 net.cpp:131] Top shape: 64 (64)
I0428 20:20:30.027773  1561 net.cpp:139] Memory required for data: 200960
I0428 20:20:30.027779  1561 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:30.027792  1561 net.cpp:86] Creating Layer conv0
I0428 20:20:30.027811  1561 net.cpp:408] conv0 <- data
I0428 20:20:30.027820  1561 net.cpp:382] conv0 -> conv0
I0428 20:20:30.264554  1561 net.cpp:124] Setting up conv0
I0428 20:20:30.264597  1561 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:30.264600  1561 net.cpp:139] Memory required for data: 7573760
I0428 20:20:30.264616  1561 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:30.264628  1561 net.cpp:86] Creating Layer pool0
I0428 20:20:30.264632  1561 net.cpp:408] pool0 <- conv0
I0428 20:20:30.264637  1561 net.cpp:382] pool0 -> pool0
I0428 20:20:30.264699  1561 net.cpp:124] Setting up pool0
I0428 20:20:30.264705  1561 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:30.264708  1561 net.cpp:139] Memory required for data: 9416960
I0428 20:20:30.264711  1561 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:30.264722  1561 net.cpp:86] Creating Layer conv1
I0428 20:20:30.264725  1561 net.cpp:408] conv1 <- pool0
I0428 20:20:30.264730  1561 net.cpp:382] conv1 -> conv1
I0428 20:20:30.266808  1561 net.cpp:124] Setting up conv1
I0428 20:20:30.266840  1561 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:20:30.266844  1561 net.cpp:139] Memory required for data: 9826560
I0428 20:20:30.266854  1561 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:30.266860  1561 net.cpp:86] Creating Layer pool1
I0428 20:20:30.266865  1561 net.cpp:408] pool1 <- conv1
I0428 20:20:30.266885  1561 net.cpp:382] pool1 -> pool1
I0428 20:20:30.266938  1561 net.cpp:124] Setting up pool1
I0428 20:20:30.266945  1561 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:20:30.266948  1561 net.cpp:139] Memory required for data: 9928960
I0428 20:20:30.266952  1561 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:30.266960  1561 net.cpp:86] Creating Layer ip1
I0428 20:20:30.266963  1561 net.cpp:408] ip1 <- pool1
I0428 20:20:30.266969  1561 net.cpp:382] ip1 -> ip1
I0428 20:20:30.267192  1561 net.cpp:124] Setting up ip1
I0428 20:20:30.267199  1561 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:30.267204  1561 net.cpp:139] Memory required for data: 9941760
I0428 20:20:30.267211  1561 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:30.267217  1561 net.cpp:86] Creating Layer relu1
I0428 20:20:30.267220  1561 net.cpp:408] relu1 <- ip1
I0428 20:20:30.267225  1561 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:30.267401  1561 net.cpp:124] Setting up relu1
I0428 20:20:30.267410  1561 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:30.267413  1561 net.cpp:139] Memory required for data: 9954560
I0428 20:20:30.267417  1561 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:30.267424  1561 net.cpp:86] Creating Layer ip2
I0428 20:20:30.267427  1561 net.cpp:408] ip2 <- ip1
I0428 20:20:30.267433  1561 net.cpp:382] ip2 -> ip2
I0428 20:20:30.267567  1561 net.cpp:124] Setting up ip2
I0428 20:20:30.267575  1561 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:30.267577  1561 net.cpp:139] Memory required for data: 9967360
I0428 20:20:30.267598  1561 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:30.267604  1561 net.cpp:86] Creating Layer relu2
I0428 20:20:30.267607  1561 net.cpp:408] relu2 <- ip2
I0428 20:20:30.267611  1561 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:30.268350  1561 net.cpp:124] Setting up relu2
I0428 20:20:30.268362  1561 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:20:30.268383  1561 net.cpp:139] Memory required for data: 9980160
I0428 20:20:30.268385  1561 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:30.268393  1561 net.cpp:86] Creating Layer ip3
I0428 20:20:30.268398  1561 net.cpp:408] ip3 <- ip2
I0428 20:20:30.268404  1561 net.cpp:382] ip3 -> ip3
I0428 20:20:30.268508  1561 net.cpp:124] Setting up ip3
I0428 20:20:30.268517  1561 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:30.268518  1561 net.cpp:139] Memory required for data: 9982720
I0428 20:20:30.268527  1561 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:30.268532  1561 net.cpp:86] Creating Layer relu3
I0428 20:20:30.268534  1561 net.cpp:408] relu3 <- ip3
I0428 20:20:30.268539  1561 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:30.268709  1561 net.cpp:124] Setting up relu3
I0428 20:20:30.268718  1561 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:30.268721  1561 net.cpp:139] Memory required for data: 9985280
I0428 20:20:30.268724  1561 layer_factory.hpp:77] Creating layer loss
I0428 20:20:30.268729  1561 net.cpp:86] Creating Layer loss
I0428 20:20:30.268733  1561 net.cpp:408] loss <- ip3
I0428 20:20:30.268738  1561 net.cpp:408] loss <- label
I0428 20:20:30.268743  1561 net.cpp:382] loss -> loss
I0428 20:20:30.268756  1561 layer_factory.hpp:77] Creating layer loss
I0428 20:20:30.269079  1561 net.cpp:124] Setting up loss
I0428 20:20:30.269089  1561 net.cpp:131] Top shape: (1)
I0428 20:20:30.269109  1561 net.cpp:134]     with loss weight 1
I0428 20:20:30.269124  1561 net.cpp:139] Memory required for data: 9985284
I0428 20:20:30.269129  1561 net.cpp:200] loss needs backward computation.
I0428 20:20:30.269132  1561 net.cpp:200] relu3 needs backward computation.
I0428 20:20:30.269135  1561 net.cpp:200] ip3 needs backward computation.
I0428 20:20:30.269139  1561 net.cpp:200] relu2 needs backward computation.
I0428 20:20:30.269141  1561 net.cpp:200] ip2 needs backward computation.
I0428 20:20:30.269145  1561 net.cpp:200] relu1 needs backward computation.
I0428 20:20:30.269147  1561 net.cpp:200] ip1 needs backward computation.
I0428 20:20:30.269150  1561 net.cpp:200] pool1 needs backward computation.
I0428 20:20:30.269155  1561 net.cpp:200] conv1 needs backward computation.
I0428 20:20:30.269157  1561 net.cpp:200] pool0 needs backward computation.
I0428 20:20:30.269160  1561 net.cpp:200] conv0 needs backward computation.
I0428 20:20:30.269165  1561 net.cpp:202] mnist does not need backward computation.
I0428 20:20:30.269167  1561 net.cpp:244] This network produces output loss
I0428 20:20:30.269178  1561 net.cpp:257] Network initialization done.
I0428 20:20:30.269557  1561 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1364.prototxt
I0428 20:20:30.269599  1561 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:30.269692  1561 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:20:30.269773  1561 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:30.269816  1561 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:30.269829  1561 net.cpp:86] Creating Layer mnist
I0428 20:20:30.269834  1561 net.cpp:382] mnist -> data
I0428 20:20:30.269840  1561 net.cpp:382] mnist -> label
I0428 20:20:30.269925  1561 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:30.271780  1561 net.cpp:124] Setting up mnist
I0428 20:20:30.271792  1561 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:30.271813  1561 net.cpp:131] Top shape: 100 (100)
I0428 20:20:30.271816  1561 net.cpp:139] Memory required for data: 314000
I0428 20:20:30.271819  1561 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:30.271826  1561 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:30.271831  1561 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:30.271834  1561 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:30.271841  1561 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:30.271920  1561 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:30.271929  1561 net.cpp:131] Top shape: 100 (100)
I0428 20:20:30.271931  1561 net.cpp:131] Top shape: 100 (100)
I0428 20:20:30.271934  1561 net.cpp:139] Memory required for data: 314800
I0428 20:20:30.271937  1561 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:30.271946  1561 net.cpp:86] Creating Layer conv0
I0428 20:20:30.271950  1561 net.cpp:408] conv0 <- data
I0428 20:20:30.271955  1561 net.cpp:382] conv0 -> conv0
I0428 20:20:30.273749  1561 net.cpp:124] Setting up conv0
I0428 20:20:30.273763  1561 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:30.273766  1561 net.cpp:139] Memory required for data: 11834800
I0428 20:20:30.273792  1561 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:30.273799  1561 net.cpp:86] Creating Layer pool0
I0428 20:20:30.273803  1561 net.cpp:408] pool0 <- conv0
I0428 20:20:30.273809  1561 net.cpp:382] pool0 -> pool0
I0428 20:20:30.273845  1561 net.cpp:124] Setting up pool0
I0428 20:20:30.273850  1561 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:30.273854  1561 net.cpp:139] Memory required for data: 14714800
I0428 20:20:30.273856  1561 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:30.273865  1561 net.cpp:86] Creating Layer conv1
I0428 20:20:30.273869  1561 net.cpp:408] conv1 <- pool0
I0428 20:20:30.273874  1561 net.cpp:382] conv1 -> conv1
I0428 20:20:30.275769  1561 net.cpp:124] Setting up conv1
I0428 20:20:30.275782  1561 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:20:30.275802  1561 net.cpp:139] Memory required for data: 15354800
I0428 20:20:30.275811  1561 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:30.275820  1561 net.cpp:86] Creating Layer pool1
I0428 20:20:30.275822  1561 net.cpp:408] pool1 <- conv1
I0428 20:20:30.275828  1561 net.cpp:382] pool1 -> pool1
I0428 20:20:30.275866  1561 net.cpp:124] Setting up pool1
I0428 20:20:30.275871  1561 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:20:30.275873  1561 net.cpp:139] Memory required for data: 15514800
I0428 20:20:30.275877  1561 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:30.275884  1561 net.cpp:86] Creating Layer ip1
I0428 20:20:30.275887  1561 net.cpp:408] ip1 <- pool1
I0428 20:20:30.275893  1561 net.cpp:382] ip1 -> ip1
I0428 20:20:30.276115  1561 net.cpp:124] Setting up ip1
I0428 20:20:30.276124  1561 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:30.276136  1561 net.cpp:139] Memory required for data: 15534800
I0428 20:20:30.276144  1561 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:30.276150  1561 net.cpp:86] Creating Layer relu1
I0428 20:20:30.276154  1561 net.cpp:408] relu1 <- ip1
I0428 20:20:30.276159  1561 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:30.276384  1561 net.cpp:124] Setting up relu1
I0428 20:20:30.276394  1561 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:30.276397  1561 net.cpp:139] Memory required for data: 15554800
I0428 20:20:30.276401  1561 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:30.276407  1561 net.cpp:86] Creating Layer ip2
I0428 20:20:30.276410  1561 net.cpp:408] ip2 <- ip1
I0428 20:20:30.276417  1561 net.cpp:382] ip2 -> ip2
I0428 20:20:30.276561  1561 net.cpp:124] Setting up ip2
I0428 20:20:30.276571  1561 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:30.276574  1561 net.cpp:139] Memory required for data: 15574800
I0428 20:20:30.276579  1561 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:30.276584  1561 net.cpp:86] Creating Layer relu2
I0428 20:20:30.276587  1561 net.cpp:408] relu2 <- ip2
I0428 20:20:30.276612  1561 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:30.276798  1561 net.cpp:124] Setting up relu2
I0428 20:20:30.276806  1561 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:20:30.276820  1561 net.cpp:139] Memory required for data: 15594800
I0428 20:20:30.276823  1561 layer_factory.hpp:77] Creating layer ip3
I0428 20:20:30.276831  1561 net.cpp:86] Creating Layer ip3
I0428 20:20:30.276835  1561 net.cpp:408] ip3 <- ip2
I0428 20:20:30.276840  1561 net.cpp:382] ip3 -> ip3
I0428 20:20:30.276953  1561 net.cpp:124] Setting up ip3
I0428 20:20:30.276962  1561 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:30.276965  1561 net.cpp:139] Memory required for data: 15598800
I0428 20:20:30.276973  1561 layer_factory.hpp:77] Creating layer relu3
I0428 20:20:30.276996  1561 net.cpp:86] Creating Layer relu3
I0428 20:20:30.277000  1561 net.cpp:408] relu3 <- ip3
I0428 20:20:30.277004  1561 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:20:30.277866  1561 net.cpp:124] Setting up relu3
I0428 20:20:30.277895  1561 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:30.277899  1561 net.cpp:139] Memory required for data: 15602800
I0428 20:20:30.277902  1561 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:20:30.277909  1561 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:20:30.277911  1561 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:20:30.277916  1561 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:20:30.277922  1561 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:20:30.277966  1561 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:20:30.277972  1561 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:30.277976  1561 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:30.277979  1561 net.cpp:139] Memory required for data: 15610800
I0428 20:20:30.277982  1561 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:30.277988  1561 net.cpp:86] Creating Layer accuracy
I0428 20:20:30.277992  1561 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:20:30.277997  1561 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:30.278002  1561 net.cpp:382] accuracy -> accuracy
I0428 20:20:30.278009  1561 net.cpp:124] Setting up accuracy
I0428 20:20:30.278013  1561 net.cpp:131] Top shape: (1)
I0428 20:20:30.278017  1561 net.cpp:139] Memory required for data: 15610804
I0428 20:20:30.278019  1561 layer_factory.hpp:77] Creating layer loss
I0428 20:20:30.278023  1561 net.cpp:86] Creating Layer loss
I0428 20:20:30.278028  1561 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:20:30.278033  1561 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:30.278038  1561 net.cpp:382] loss -> loss
I0428 20:20:30.278043  1561 layer_factory.hpp:77] Creating layer loss
I0428 20:20:30.278307  1561 net.cpp:124] Setting up loss
I0428 20:20:30.278316  1561 net.cpp:131] Top shape: (1)
I0428 20:20:30.278319  1561 net.cpp:134]     with loss weight 1
I0428 20:20:30.278337  1561 net.cpp:139] Memory required for data: 15610808
I0428 20:20:30.278339  1561 net.cpp:200] loss needs backward computation.
I0428 20:20:30.278343  1561 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:30.278347  1561 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:20:30.278350  1561 net.cpp:200] relu3 needs backward computation.
I0428 20:20:30.278354  1561 net.cpp:200] ip3 needs backward computation.
I0428 20:20:30.278357  1561 net.cpp:200] relu2 needs backward computation.
I0428 20:20:30.278360  1561 net.cpp:200] ip2 needs backward computation.
I0428 20:20:30.278363  1561 net.cpp:200] relu1 needs backward computation.
I0428 20:20:30.278367  1561 net.cpp:200] ip1 needs backward computation.
I0428 20:20:30.278369  1561 net.cpp:200] pool1 needs backward computation.
I0428 20:20:30.278373  1561 net.cpp:200] conv1 needs backward computation.
I0428 20:20:30.278375  1561 net.cpp:200] pool0 needs backward computation.
I0428 20:20:30.278378  1561 net.cpp:200] conv0 needs backward computation.
I0428 20:20:30.278383  1561 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:30.278386  1561 net.cpp:202] mnist does not need backward computation.
I0428 20:20:30.278389  1561 net.cpp:244] This network produces output accuracy
I0428 20:20:30.278393  1561 net.cpp:244] This network produces output loss
I0428 20:20:30.278404  1561 net.cpp:257] Network initialization done.
I0428 20:20:30.278446  1561 solver.cpp:56] Solver scaffolding done.
I0428 20:20:30.278818  1561 caffe.cpp:248] Starting Optimization
I0428 20:20:30.278825  1561 solver.cpp:273] Solving LeNet
I0428 20:20:30.278827  1561 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:30.279788  1561 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:30.286888  1561 blocking_queue.cpp:49] Waiting for data
I0428 20:20:30.354038  1568 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:30.354984  1561 solver.cpp:398]     Test net output #0: accuracy = 0.1362
I0428 20:20:30.355020  1561 solver.cpp:398]     Test net output #1: loss = 2.29839 (* 1 = 2.29839 loss)
I0428 20:20:30.359508  1561 solver.cpp:219] Iteration 0 (-1.42756e-31 iter/s, 0.0806328s/100 iters), loss = 2.31044
I0428 20:20:30.359549  1561 solver.cpp:238]     Train net output #0: loss = 2.31044 (* 1 = 2.31044 loss)
I0428 20:20:30.359560  1561 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:30.502445  1561 solver.cpp:219] Iteration 100 (699.835 iter/s, 0.142891s/100 iters), loss = 0.777375
I0428 20:20:30.502519  1561 solver.cpp:238]     Train net output #0: loss = 0.777375 (* 1 = 0.777375 loss)
I0428 20:20:30.502532  1561 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:30.641294  1561 solver.cpp:219] Iteration 200 (720.647 iter/s, 0.138764s/100 iters), loss = 0.735272
I0428 20:20:30.641335  1561 solver.cpp:238]     Train net output #0: loss = 0.735272 (* 1 = 0.735272 loss)
I0428 20:20:30.641341  1561 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:30.779125  1561 solver.cpp:219] Iteration 300 (725.718 iter/s, 0.137795s/100 iters), loss = 0.564984
I0428 20:20:30.779165  1561 solver.cpp:238]     Train net output #0: loss = 0.564984 (* 1 = 0.564984 loss)
I0428 20:20:30.779171  1561 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:30.918432  1561 solver.cpp:219] Iteration 400 (718.028 iter/s, 0.13927s/100 iters), loss = 0.640149
I0428 20:20:30.918488  1561 solver.cpp:238]     Train net output #0: loss = 0.640149 (* 1 = 0.640149 loss)
I0428 20:20:30.918493  1561 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:31.054388  1561 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:31.132244  1568 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:31.133087  1561 solver.cpp:398]     Test net output #0: accuracy = 0.8596
I0428 20:20:31.133111  1561 solver.cpp:398]     Test net output #1: loss = 0.464788 (* 1 = 0.464788 loss)
I0428 20:20:31.134389  1561 solver.cpp:219] Iteration 500 (463.172 iter/s, 0.215902s/100 iters), loss = 0.514228
I0428 20:20:31.134452  1561 solver.cpp:238]     Train net output #0: loss = 0.514228 (* 1 = 0.514228 loss)
I0428 20:20:31.134462  1561 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:31.272819  1561 solver.cpp:219] Iteration 600 (722.786 iter/s, 0.138353s/100 iters), loss = 0.265474
I0428 20:20:31.272858  1561 solver.cpp:238]     Train net output #0: loss = 0.265474 (* 1 = 0.265474 loss)
I0428 20:20:31.272864  1561 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:31.407063  1561 solver.cpp:219] Iteration 700 (745.104 iter/s, 0.134209s/100 iters), loss = 0.49969
I0428 20:20:31.407102  1561 solver.cpp:238]     Train net output #0: loss = 0.49969 (* 1 = 0.49969 loss)
I0428 20:20:31.407109  1561 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:31.540602  1561 solver.cpp:219] Iteration 800 (749.047 iter/s, 0.133503s/100 iters), loss = 0.496719
I0428 20:20:31.540627  1561 solver.cpp:238]     Train net output #0: loss = 0.496719 (* 1 = 0.496719 loss)
I0428 20:20:31.540633  1561 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:31.673915  1561 solver.cpp:219] Iteration 900 (750.313 iter/s, 0.133278s/100 iters), loss = 0.396853
I0428 20:20:31.673954  1561 solver.cpp:238]     Train net output #0: loss = 0.396853 (* 1 = 0.396853 loss)
I0428 20:20:31.673960  1561 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:31.719274  1567 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:31.812088  1561 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:31.813927  1561 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:31.815187  1561 solver.cpp:311] Iteration 1000, loss = 0.413951
I0428 20:20:31.815220  1561 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:31.897758  1568 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:31.899029  1561 solver.cpp:398]     Test net output #0: accuracy = 0.9666
I0428 20:20:31.899055  1561 solver.cpp:398]     Test net output #1: loss = 0.303368 (* 1 = 0.303368 loss)
I0428 20:20:31.899062  1561 solver.cpp:316] Optimization Done.
I0428 20:20:31.899067  1561 caffe.cpp:259] Optimization Done.
