I0428 19:47:07.714779 26119 caffe.cpp:218] Using GPUs 0
I0428 19:47:07.754758 26119 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:47:08.271961 26119 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test506.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:47:08.272095 26119 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test506.prototxt
I0428 19:47:08.272500 26119 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:47:08.272518 26119 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:47:08.272616 26119 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:08.272691 26119 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:08.272791 26119 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:47:08.272820 26119 net.cpp:86] Creating Layer mnist
I0428 19:47:08.272830 26119 net.cpp:382] mnist -> data
I0428 19:47:08.272852 26119 net.cpp:382] mnist -> label
I0428 19:47:08.273948 26119 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:47:08.276394 26119 net.cpp:124] Setting up mnist
I0428 19:47:08.276412 26119 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:47:08.276419 26119 net.cpp:131] Top shape: 64 (64)
I0428 19:47:08.276423 26119 net.cpp:139] Memory required for data: 200960
I0428 19:47:08.276430 26119 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:08.276446 26119 net.cpp:86] Creating Layer conv0
I0428 19:47:08.276468 26119 net.cpp:408] conv0 <- data
I0428 19:47:08.276480 26119 net.cpp:382] conv0 -> conv0
I0428 19:47:08.557799 26119 net.cpp:124] Setting up conv0
I0428 19:47:08.557826 26119 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:47:08.557829 26119 net.cpp:139] Memory required for data: 495872
I0428 19:47:08.557844 26119 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:08.557857 26119 net.cpp:86] Creating Layer pool0
I0428 19:47:08.557860 26119 net.cpp:408] pool0 <- conv0
I0428 19:47:08.557868 26119 net.cpp:382] pool0 -> pool0
I0428 19:47:08.557914 26119 net.cpp:124] Setting up pool0
I0428 19:47:08.557919 26119 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:47:08.557921 26119 net.cpp:139] Memory required for data: 569600
I0428 19:47:08.557924 26119 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:08.557936 26119 net.cpp:86] Creating Layer conv1
I0428 19:47:08.557940 26119 net.cpp:408] conv1 <- pool0
I0428 19:47:08.557945 26119 net.cpp:382] conv1 -> conv1
I0428 19:47:08.560739 26119 net.cpp:124] Setting up conv1
I0428 19:47:08.560755 26119 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:47:08.560758 26119 net.cpp:139] Memory required for data: 2208000
I0428 19:47:08.560766 26119 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:08.560775 26119 net.cpp:86] Creating Layer pool1
I0428 19:47:08.560777 26119 net.cpp:408] pool1 <- conv1
I0428 19:47:08.560781 26119 net.cpp:382] pool1 -> pool1
I0428 19:47:08.560873 26119 net.cpp:124] Setting up pool1
I0428 19:47:08.560880 26119 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:47:08.560883 26119 net.cpp:139] Memory required for data: 2617600
I0428 19:47:08.560887 26119 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:08.560897 26119 net.cpp:86] Creating Layer ip1
I0428 19:47:08.560900 26119 net.cpp:408] ip1 <- pool1
I0428 19:47:08.560905 26119 net.cpp:382] ip1 -> ip1
I0428 19:47:08.562389 26119 net.cpp:124] Setting up ip1
I0428 19:47:08.562402 26119 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:08.562422 26119 net.cpp:139] Memory required for data: 2630400
I0428 19:47:08.562429 26119 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:08.562436 26119 net.cpp:86] Creating Layer relu1
I0428 19:47:08.562440 26119 net.cpp:408] relu1 <- ip1
I0428 19:47:08.562445 26119 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:08.562644 26119 net.cpp:124] Setting up relu1
I0428 19:47:08.562654 26119 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:08.562657 26119 net.cpp:139] Memory required for data: 2643200
I0428 19:47:08.562660 26119 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:08.562669 26119 net.cpp:86] Creating Layer ip2
I0428 19:47:08.562671 26119 net.cpp:408] ip2 <- ip1
I0428 19:47:08.562676 26119 net.cpp:382] ip2 -> ip2
I0428 19:47:08.563665 26119 net.cpp:124] Setting up ip2
I0428 19:47:08.563678 26119 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:08.563680 26119 net.cpp:139] Memory required for data: 2656000
I0428 19:47:08.563686 26119 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:08.563694 26119 net.cpp:86] Creating Layer relu2
I0428 19:47:08.563712 26119 net.cpp:408] relu2 <- ip2
I0428 19:47:08.563717 26119 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:08.564481 26119 net.cpp:124] Setting up relu2
I0428 19:47:08.564524 26119 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:47:08.564528 26119 net.cpp:139] Memory required for data: 2668800
I0428 19:47:08.564532 26119 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:08.564540 26119 net.cpp:86] Creating Layer ip3
I0428 19:47:08.564544 26119 net.cpp:408] ip3 <- ip2
I0428 19:47:08.564550 26119 net.cpp:382] ip3 -> ip3
I0428 19:47:08.564692 26119 net.cpp:124] Setting up ip3
I0428 19:47:08.564699 26119 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:08.564702 26119 net.cpp:139] Memory required for data: 2671360
I0428 19:47:08.564710 26119 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:08.564715 26119 net.cpp:86] Creating Layer relu3
I0428 19:47:08.564718 26119 net.cpp:408] relu3 <- ip3
I0428 19:47:08.564726 26119 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:08.564939 26119 net.cpp:124] Setting up relu3
I0428 19:47:08.564947 26119 net.cpp:131] Top shape: 64 10 (640)
I0428 19:47:08.564951 26119 net.cpp:139] Memory required for data: 2673920
I0428 19:47:08.564954 26119 layer_factory.hpp:77] Creating layer loss
I0428 19:47:08.564960 26119 net.cpp:86] Creating Layer loss
I0428 19:47:08.564963 26119 net.cpp:408] loss <- ip3
I0428 19:47:08.564967 26119 net.cpp:408] loss <- label
I0428 19:47:08.564975 26119 net.cpp:382] loss -> loss
I0428 19:47:08.564991 26119 layer_factory.hpp:77] Creating layer loss
I0428 19:47:08.565274 26119 net.cpp:124] Setting up loss
I0428 19:47:08.565285 26119 net.cpp:131] Top shape: (1)
I0428 19:47:08.565302 26119 net.cpp:134]     with loss weight 1
I0428 19:47:08.565332 26119 net.cpp:139] Memory required for data: 2673924
I0428 19:47:08.565335 26119 net.cpp:200] loss needs backward computation.
I0428 19:47:08.565340 26119 net.cpp:200] relu3 needs backward computation.
I0428 19:47:08.565341 26119 net.cpp:200] ip3 needs backward computation.
I0428 19:47:08.565345 26119 net.cpp:200] relu2 needs backward computation.
I0428 19:47:08.565347 26119 net.cpp:200] ip2 needs backward computation.
I0428 19:47:08.565351 26119 net.cpp:200] relu1 needs backward computation.
I0428 19:47:08.565352 26119 net.cpp:200] ip1 needs backward computation.
I0428 19:47:08.565356 26119 net.cpp:200] pool1 needs backward computation.
I0428 19:47:08.565358 26119 net.cpp:200] conv1 needs backward computation.
I0428 19:47:08.565361 26119 net.cpp:200] pool0 needs backward computation.
I0428 19:47:08.565364 26119 net.cpp:200] conv0 needs backward computation.
I0428 19:47:08.565367 26119 net.cpp:202] mnist does not need backward computation.
I0428 19:47:08.565371 26119 net.cpp:244] This network produces output loss
I0428 19:47:08.565381 26119 net.cpp:257] Network initialization done.
I0428 19:47:08.565791 26119 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test506.prototxt
I0428 19:47:08.565836 26119 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:47:08.565963 26119 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:47:08.566045 26119 layer_factory.hpp:77] Creating layer mnist
I0428 19:47:08.566085 26119 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:47:08.566097 26119 net.cpp:86] Creating Layer mnist
I0428 19:47:08.566102 26119 net.cpp:382] mnist -> data
I0428 19:47:08.566109 26119 net.cpp:382] mnist -> label
I0428 19:47:08.566195 26119 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:47:08.567338 26119 net.cpp:124] Setting up mnist
I0428 19:47:08.567368 26119 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:47:08.567373 26119 net.cpp:131] Top shape: 100 (100)
I0428 19:47:08.567375 26119 net.cpp:139] Memory required for data: 314000
I0428 19:47:08.567379 26119 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:47:08.567414 26119 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:47:08.567418 26119 net.cpp:408] label_mnist_1_split <- label
I0428 19:47:08.567432 26119 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:47:08.567440 26119 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:47:08.567490 26119 net.cpp:124] Setting up label_mnist_1_split
I0428 19:47:08.567499 26119 net.cpp:131] Top shape: 100 (100)
I0428 19:47:08.567503 26119 net.cpp:131] Top shape: 100 (100)
I0428 19:47:08.567507 26119 net.cpp:139] Memory required for data: 314800
I0428 19:47:08.567509 26119 layer_factory.hpp:77] Creating layer conv0
I0428 19:47:08.567518 26119 net.cpp:86] Creating Layer conv0
I0428 19:47:08.567523 26119 net.cpp:408] conv0 <- data
I0428 19:47:08.567528 26119 net.cpp:382] conv0 -> conv0
I0428 19:47:08.569432 26119 net.cpp:124] Setting up conv0
I0428 19:47:08.569447 26119 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:47:08.569452 26119 net.cpp:139] Memory required for data: 775600
I0428 19:47:08.569461 26119 layer_factory.hpp:77] Creating layer pool0
I0428 19:47:08.569469 26119 net.cpp:86] Creating Layer pool0
I0428 19:47:08.569473 26119 net.cpp:408] pool0 <- conv0
I0428 19:47:08.569478 26119 net.cpp:382] pool0 -> pool0
I0428 19:47:08.569519 26119 net.cpp:124] Setting up pool0
I0428 19:47:08.569525 26119 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:47:08.569530 26119 net.cpp:139] Memory required for data: 890800
I0428 19:47:08.569532 26119 layer_factory.hpp:77] Creating layer conv1
I0428 19:47:08.569542 26119 net.cpp:86] Creating Layer conv1
I0428 19:47:08.569546 26119 net.cpp:408] conv1 <- pool0
I0428 19:47:08.569552 26119 net.cpp:382] conv1 -> conv1
I0428 19:47:08.571184 26119 net.cpp:124] Setting up conv1
I0428 19:47:08.571198 26119 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:47:08.571202 26119 net.cpp:139] Memory required for data: 3450800
I0428 19:47:08.571210 26119 layer_factory.hpp:77] Creating layer pool1
I0428 19:47:08.571218 26119 net.cpp:86] Creating Layer pool1
I0428 19:47:08.571230 26119 net.cpp:408] pool1 <- conv1
I0428 19:47:08.571235 26119 net.cpp:382] pool1 -> pool1
I0428 19:47:08.571287 26119 net.cpp:124] Setting up pool1
I0428 19:47:08.571293 26119 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:47:08.571295 26119 net.cpp:139] Memory required for data: 4090800
I0428 19:47:08.571300 26119 layer_factory.hpp:77] Creating layer ip1
I0428 19:47:08.571305 26119 net.cpp:86] Creating Layer ip1
I0428 19:47:08.571315 26119 net.cpp:408] ip1 <- pool1
I0428 19:47:08.571318 26119 net.cpp:382] ip1 -> ip1
I0428 19:47:08.571882 26119 net.cpp:124] Setting up ip1
I0428 19:47:08.571890 26119 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:08.571904 26119 net.cpp:139] Memory required for data: 4110800
I0428 19:47:08.571913 26119 layer_factory.hpp:77] Creating layer relu1
I0428 19:47:08.571920 26119 net.cpp:86] Creating Layer relu1
I0428 19:47:08.571923 26119 net.cpp:408] relu1 <- ip1
I0428 19:47:08.571928 26119 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:47:08.572161 26119 net.cpp:124] Setting up relu1
I0428 19:47:08.572171 26119 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:08.572175 26119 net.cpp:139] Memory required for data: 4130800
I0428 19:47:08.572178 26119 layer_factory.hpp:77] Creating layer ip2
I0428 19:47:08.572186 26119 net.cpp:86] Creating Layer ip2
I0428 19:47:08.572190 26119 net.cpp:408] ip2 <- ip1
I0428 19:47:08.572196 26119 net.cpp:382] ip2 -> ip2
I0428 19:47:08.572414 26119 net.cpp:124] Setting up ip2
I0428 19:47:08.572422 26119 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:08.572424 26119 net.cpp:139] Memory required for data: 4150800
I0428 19:47:08.572430 26119 layer_factory.hpp:77] Creating layer relu2
I0428 19:47:08.572435 26119 net.cpp:86] Creating Layer relu2
I0428 19:47:08.572438 26119 net.cpp:408] relu2 <- ip2
I0428 19:47:08.572443 26119 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:47:08.572615 26119 net.cpp:124] Setting up relu2
I0428 19:47:08.572623 26119 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:47:08.572625 26119 net.cpp:139] Memory required for data: 4170800
I0428 19:47:08.572628 26119 layer_factory.hpp:77] Creating layer ip3
I0428 19:47:08.572633 26119 net.cpp:86] Creating Layer ip3
I0428 19:47:08.572636 26119 net.cpp:408] ip3 <- ip2
I0428 19:47:08.572643 26119 net.cpp:382] ip3 -> ip3
I0428 19:47:08.572741 26119 net.cpp:124] Setting up ip3
I0428 19:47:08.572748 26119 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:08.572751 26119 net.cpp:139] Memory required for data: 4174800
I0428 19:47:08.572758 26119 layer_factory.hpp:77] Creating layer relu3
I0428 19:47:08.572762 26119 net.cpp:86] Creating Layer relu3
I0428 19:47:08.572765 26119 net.cpp:408] relu3 <- ip3
I0428 19:47:08.572772 26119 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:47:08.573738 26119 net.cpp:124] Setting up relu3
I0428 19:47:08.573751 26119 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:08.573762 26119 net.cpp:139] Memory required for data: 4178800
I0428 19:47:08.573766 26119 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:47:08.573771 26119 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:47:08.573776 26119 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:47:08.573782 26119 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:47:08.573789 26119 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:47:08.573855 26119 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:47:08.573878 26119 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:08.573896 26119 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:47:08.573900 26119 net.cpp:139] Memory required for data: 4186800
I0428 19:47:08.573902 26119 layer_factory.hpp:77] Creating layer accuracy
I0428 19:47:08.573909 26119 net.cpp:86] Creating Layer accuracy
I0428 19:47:08.573912 26119 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:47:08.573916 26119 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:47:08.573921 26119 net.cpp:382] accuracy -> accuracy
I0428 19:47:08.573935 26119 net.cpp:124] Setting up accuracy
I0428 19:47:08.573940 26119 net.cpp:131] Top shape: (1)
I0428 19:47:08.573942 26119 net.cpp:139] Memory required for data: 4186804
I0428 19:47:08.573964 26119 layer_factory.hpp:77] Creating layer loss
I0428 19:47:08.573969 26119 net.cpp:86] Creating Layer loss
I0428 19:47:08.573972 26119 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:47:08.573976 26119 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:47:08.573979 26119 net.cpp:382] loss -> loss
I0428 19:47:08.573985 26119 layer_factory.hpp:77] Creating layer loss
I0428 19:47:08.574210 26119 net.cpp:124] Setting up loss
I0428 19:47:08.574220 26119 net.cpp:131] Top shape: (1)
I0428 19:47:08.574223 26119 net.cpp:134]     with loss weight 1
I0428 19:47:08.574250 26119 net.cpp:139] Memory required for data: 4186808
I0428 19:47:08.574254 26119 net.cpp:200] loss needs backward computation.
I0428 19:47:08.574257 26119 net.cpp:202] accuracy does not need backward computation.
I0428 19:47:08.574261 26119 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:47:08.574265 26119 net.cpp:200] relu3 needs backward computation.
I0428 19:47:08.574267 26119 net.cpp:200] ip3 needs backward computation.
I0428 19:47:08.574270 26119 net.cpp:200] relu2 needs backward computation.
I0428 19:47:08.574272 26119 net.cpp:200] ip2 needs backward computation.
I0428 19:47:08.574275 26119 net.cpp:200] relu1 needs backward computation.
I0428 19:47:08.574300 26119 net.cpp:200] ip1 needs backward computation.
I0428 19:47:08.574302 26119 net.cpp:200] pool1 needs backward computation.
I0428 19:47:08.574306 26119 net.cpp:200] conv1 needs backward computation.
I0428 19:47:08.574308 26119 net.cpp:200] pool0 needs backward computation.
I0428 19:47:08.574316 26119 net.cpp:200] conv0 needs backward computation.
I0428 19:47:08.574321 26119 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:47:08.574324 26119 net.cpp:202] mnist does not need backward computation.
I0428 19:47:08.574326 26119 net.cpp:244] This network produces output accuracy
I0428 19:47:08.574350 26119 net.cpp:244] This network produces output loss
I0428 19:47:08.574363 26119 net.cpp:257] Network initialization done.
I0428 19:47:08.574405 26119 solver.cpp:56] Solver scaffolding done.
I0428 19:47:08.574797 26119 caffe.cpp:248] Starting Optimization
I0428 19:47:08.574805 26119 solver.cpp:273] Solving LeNet
I0428 19:47:08.574807 26119 solver.cpp:274] Learning Rate Policy: inv
I0428 19:47:08.575665 26119 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:47:08.580296 26119 blocking_queue.cpp:49] Waiting for data
I0428 19:47:08.650765 26126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:08.651376 26119 solver.cpp:398]     Test net output #0: accuracy = 0.0919
I0428 19:47:08.651394 26119 solver.cpp:398]     Test net output #1: loss = 2.34129 (* 1 = 2.34129 loss)
I0428 19:47:08.655226 26119 solver.cpp:219] Iteration 0 (2.83234 iter/s, 0.0803748s/100 iters), loss = 2.37033
I0428 19:47:08.655249 26119 solver.cpp:238]     Train net output #0: loss = 2.37033 (* 1 = 2.37033 loss)
I0428 19:47:08.655277 26119 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:47:08.809739 26119 solver.cpp:219] Iteration 100 (647.36 iter/s, 0.154474s/100 iters), loss = 0.674845
I0428 19:47:08.809763 26119 solver.cpp:238]     Train net output #0: loss = 0.674845 (* 1 = 0.674845 loss)
I0428 19:47:08.809769 26119 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:08.956460 26119 solver.cpp:219] Iteration 200 (681.733 iter/s, 0.146685s/100 iters), loss = 0.621112
I0428 19:47:08.956485 26119 solver.cpp:238]     Train net output #0: loss = 0.621112 (* 1 = 0.621112 loss)
I0428 19:47:08.956490 26119 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:09.108937 26119 solver.cpp:219] Iteration 300 (655.997 iter/s, 0.15244s/100 iters), loss = 0.602035
I0428 19:47:09.108960 26119 solver.cpp:238]     Train net output #0: loss = 0.602035 (* 1 = 0.602035 loss)
I0428 19:47:09.108966 26119 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:09.262219 26119 solver.cpp:219] Iteration 400 (652.552 iter/s, 0.153245s/100 iters), loss = 0.737954
I0428 19:47:09.262253 26119 solver.cpp:238]     Train net output #0: loss = 0.737954 (* 1 = 0.737954 loss)
I0428 19:47:09.262262 26119 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:09.433893 26119 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:09.492535 26126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:09.494350 26119 solver.cpp:398]     Test net output #0: accuracy = 0.9154
I0428 19:47:09.494380 26119 solver.cpp:398]     Test net output #1: loss = 0.415668 (* 1 = 0.415668 loss)
I0428 19:47:09.495877 26119 solver.cpp:219] Iteration 500 (428.069 iter/s, 0.233607s/100 iters), loss = 0.546089
I0428 19:47:09.495925 26119 solver.cpp:238]     Train net output #0: loss = 0.546089 (* 1 = 0.546089 loss)
I0428 19:47:09.495935 26119 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:09.667793 26119 solver.cpp:219] Iteration 600 (581.886 iter/s, 0.171855s/100 iters), loss = 0.312826
I0428 19:47:09.667830 26119 solver.cpp:238]     Train net output #0: loss = 0.312826 (* 1 = 0.312826 loss)
I0428 19:47:09.667840 26119 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:09.848315 26119 solver.cpp:219] Iteration 700 (554.113 iter/s, 0.180469s/100 iters), loss = 0.42901
I0428 19:47:09.848356 26119 solver.cpp:238]     Train net output #0: loss = 0.42901 (* 1 = 0.42901 loss)
I0428 19:47:09.848366 26119 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:10.035907 26119 solver.cpp:219] Iteration 800 (533.242 iter/s, 0.187532s/100 iters), loss = 0.587721
I0428 19:47:10.035960 26119 solver.cpp:238]     Train net output #0: loss = 0.587721 (* 1 = 0.587721 loss)
I0428 19:47:10.035974 26119 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:10.222223 26119 solver.cpp:219] Iteration 900 (536.915 iter/s, 0.186249s/100 iters), loss = 0.187658
I0428 19:47:10.222265 26119 solver.cpp:238]     Train net output #0: loss = 0.187658 (* 1 = 0.187658 loss)
I0428 19:47:10.222280 26119 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:10.276491 26125 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:10.376844 26119 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:10.379647 26119 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:10.381022 26119 solver.cpp:311] Iteration 1000, loss = 0.118995
I0428 19:47:10.381042 26119 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:10.435950 26126 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:10.437562 26119 solver.cpp:398]     Test net output #0: accuracy = 0.9693
I0428 19:47:10.437585 26119 solver.cpp:398]     Test net output #1: loss = 0.0953588 (* 1 = 0.0953588 loss)
I0428 19:47:10.437592 26119 solver.cpp:316] Optimization Done.
I0428 19:47:10.437597 26119 caffe.cpp:259] Optimization Done.
