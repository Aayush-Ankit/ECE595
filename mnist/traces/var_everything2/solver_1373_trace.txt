I0428 20:20:54.829946  1659 caffe.cpp:218] Using GPUs 0
I0428 20:20:54.858502  1659 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:55.311534  1659 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1373.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:55.311668  1659 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1373.prototxt
I0428 20:20:55.311965  1659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:55.311980  1659 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:55.312048  1659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:55.312109  1659 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:55.312191  1659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:55.312209  1659 net.cpp:86] Creating Layer mnist
I0428 20:20:55.312216  1659 net.cpp:382] mnist -> data
I0428 20:20:55.312234  1659 net.cpp:382] mnist -> label
I0428 20:20:55.313273  1659 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:55.315496  1659 net.cpp:124] Setting up mnist
I0428 20:20:55.315526  1659 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:55.315532  1659 net.cpp:131] Top shape: 64 (64)
I0428 20:20:55.315551  1659 net.cpp:139] Memory required for data: 200960
I0428 20:20:55.315557  1659 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:55.315582  1659 net.cpp:86] Creating Layer conv0
I0428 20:20:55.315587  1659 net.cpp:408] conv0 <- data
I0428 20:20:55.315599  1659 net.cpp:382] conv0 -> conv0
I0428 20:20:55.552640  1659 net.cpp:124] Setting up conv0
I0428 20:20:55.552666  1659 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:55.552670  1659 net.cpp:139] Memory required for data: 7573760
I0428 20:20:55.552702  1659 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:55.552714  1659 net.cpp:86] Creating Layer pool0
I0428 20:20:55.552718  1659 net.cpp:408] pool0 <- conv0
I0428 20:20:55.552724  1659 net.cpp:382] pool0 -> pool0
I0428 20:20:55.552769  1659 net.cpp:124] Setting up pool0
I0428 20:20:55.552776  1659 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:55.552778  1659 net.cpp:139] Memory required for data: 9416960
I0428 20:20:55.552781  1659 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:55.552791  1659 net.cpp:86] Creating Layer conv1
I0428 20:20:55.552794  1659 net.cpp:408] conv1 <- pool0
I0428 20:20:55.552799  1659 net.cpp:382] conv1 -> conv1
I0428 20:20:55.555182  1659 net.cpp:124] Setting up conv1
I0428 20:20:55.555197  1659 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:20:55.555200  1659 net.cpp:139] Memory required for data: 10236160
I0428 20:20:55.555224  1659 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:55.555232  1659 net.cpp:86] Creating Layer pool1
I0428 20:20:55.555238  1659 net.cpp:408] pool1 <- conv1
I0428 20:20:55.555243  1659 net.cpp:382] pool1 -> pool1
I0428 20:20:55.555277  1659 net.cpp:124] Setting up pool1
I0428 20:20:55.555284  1659 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:20:55.555287  1659 net.cpp:139] Memory required for data: 10440960
I0428 20:20:55.555290  1659 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:55.555297  1659 net.cpp:86] Creating Layer ip1
I0428 20:20:55.555300  1659 net.cpp:408] ip1 <- pool1
I0428 20:20:55.555305  1659 net.cpp:382] ip1 -> ip1
I0428 20:20:55.555526  1659 net.cpp:124] Setting up ip1
I0428 20:20:55.555534  1659 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:55.555538  1659 net.cpp:139] Memory required for data: 10447360
I0428 20:20:55.555546  1659 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:55.555552  1659 net.cpp:86] Creating Layer relu1
I0428 20:20:55.555554  1659 net.cpp:408] relu1 <- ip1
I0428 20:20:55.555558  1659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:55.555743  1659 net.cpp:124] Setting up relu1
I0428 20:20:55.555752  1659 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:20:55.555755  1659 net.cpp:139] Memory required for data: 10453760
I0428 20:20:55.555759  1659 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:55.555764  1659 net.cpp:86] Creating Layer ip2
I0428 20:20:55.555768  1659 net.cpp:408] ip2 <- ip1
I0428 20:20:55.555773  1659 net.cpp:382] ip2 -> ip2
I0428 20:20:55.555876  1659 net.cpp:124] Setting up ip2
I0428 20:20:55.555881  1659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:55.555884  1659 net.cpp:139] Memory required for data: 10456320
I0428 20:20:55.555889  1659 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:55.555896  1659 net.cpp:86] Creating Layer relu2
I0428 20:20:55.555898  1659 net.cpp:408] relu2 <- ip2
I0428 20:20:55.555902  1659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:55.556668  1659 net.cpp:124] Setting up relu2
I0428 20:20:55.556680  1659 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:55.556694  1659 net.cpp:139] Memory required for data: 10458880
I0428 20:20:55.556699  1659 layer_factory.hpp:77] Creating layer loss
I0428 20:20:55.556704  1659 net.cpp:86] Creating Layer loss
I0428 20:20:55.556707  1659 net.cpp:408] loss <- ip2
I0428 20:20:55.556727  1659 net.cpp:408] loss <- label
I0428 20:20:55.556733  1659 net.cpp:382] loss -> loss
I0428 20:20:55.556753  1659 layer_factory.hpp:77] Creating layer loss
I0428 20:20:55.557044  1659 net.cpp:124] Setting up loss
I0428 20:20:55.557054  1659 net.cpp:131] Top shape: (1)
I0428 20:20:55.557057  1659 net.cpp:134]     with loss weight 1
I0428 20:20:55.557071  1659 net.cpp:139] Memory required for data: 10458884
I0428 20:20:55.557075  1659 net.cpp:200] loss needs backward computation.
I0428 20:20:55.557080  1659 net.cpp:200] relu2 needs backward computation.
I0428 20:20:55.557082  1659 net.cpp:200] ip2 needs backward computation.
I0428 20:20:55.557085  1659 net.cpp:200] relu1 needs backward computation.
I0428 20:20:55.557087  1659 net.cpp:200] ip1 needs backward computation.
I0428 20:20:55.557129  1659 net.cpp:200] pool1 needs backward computation.
I0428 20:20:55.557132  1659 net.cpp:200] conv1 needs backward computation.
I0428 20:20:55.557135  1659 net.cpp:200] pool0 needs backward computation.
I0428 20:20:55.557138  1659 net.cpp:200] conv0 needs backward computation.
I0428 20:20:55.557142  1659 net.cpp:202] mnist does not need backward computation.
I0428 20:20:55.557145  1659 net.cpp:244] This network produces output loss
I0428 20:20:55.557153  1659 net.cpp:257] Network initialization done.
I0428 20:20:55.557461  1659 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1373.prototxt
I0428 20:20:55.557487  1659 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:55.557590  1659 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:55.557657  1659 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:55.557716  1659 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:55.557732  1659 net.cpp:86] Creating Layer mnist
I0428 20:20:55.557739  1659 net.cpp:382] mnist -> data
I0428 20:20:55.557747  1659 net.cpp:382] mnist -> label
I0428 20:20:55.557839  1659 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:55.559949  1659 net.cpp:124] Setting up mnist
I0428 20:20:55.559964  1659 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:55.559970  1659 net.cpp:131] Top shape: 100 (100)
I0428 20:20:55.559973  1659 net.cpp:139] Memory required for data: 314000
I0428 20:20:55.559978  1659 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:55.559988  1659 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:55.559990  1659 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:55.559996  1659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:55.560003  1659 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:55.560098  1659 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:55.560106  1659 net.cpp:131] Top shape: 100 (100)
I0428 20:20:55.560111  1659 net.cpp:131] Top shape: 100 (100)
I0428 20:20:55.560113  1659 net.cpp:139] Memory required for data: 314800
I0428 20:20:55.560117  1659 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:55.560127  1659 net.cpp:86] Creating Layer conv0
I0428 20:20:55.560130  1659 net.cpp:408] conv0 <- data
I0428 20:20:55.560135  1659 net.cpp:382] conv0 -> conv0
I0428 20:20:55.561866  1659 net.cpp:124] Setting up conv0
I0428 20:20:55.561879  1659 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:55.561898  1659 net.cpp:139] Memory required for data: 11834800
I0428 20:20:55.561908  1659 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:55.561915  1659 net.cpp:86] Creating Layer pool0
I0428 20:20:55.561918  1659 net.cpp:408] pool0 <- conv0
I0428 20:20:55.561923  1659 net.cpp:382] pool0 -> pool0
I0428 20:20:55.561957  1659 net.cpp:124] Setting up pool0
I0428 20:20:55.561964  1659 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:55.561967  1659 net.cpp:139] Memory required for data: 14714800
I0428 20:20:55.561969  1659 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:55.561981  1659 net.cpp:86] Creating Layer conv1
I0428 20:20:55.561985  1659 net.cpp:408] conv1 <- pool0
I0428 20:20:55.561990  1659 net.cpp:382] conv1 -> conv1
I0428 20:20:55.563841  1659 net.cpp:124] Setting up conv1
I0428 20:20:55.563854  1659 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:20:55.563858  1659 net.cpp:139] Memory required for data: 15994800
I0428 20:20:55.563866  1659 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:55.563889  1659 net.cpp:86] Creating Layer pool1
I0428 20:20:55.563907  1659 net.cpp:408] pool1 <- conv1
I0428 20:20:55.563913  1659 net.cpp:382] pool1 -> pool1
I0428 20:20:55.563947  1659 net.cpp:124] Setting up pool1
I0428 20:20:55.563954  1659 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:20:55.563957  1659 net.cpp:139] Memory required for data: 16314800
I0428 20:20:55.563961  1659 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:55.563966  1659 net.cpp:86] Creating Layer ip1
I0428 20:20:55.563971  1659 net.cpp:408] ip1 <- pool1
I0428 20:20:55.563974  1659 net.cpp:382] ip1 -> ip1
I0428 20:20:55.564190  1659 net.cpp:124] Setting up ip1
I0428 20:20:55.564198  1659 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:55.564201  1659 net.cpp:139] Memory required for data: 16324800
I0428 20:20:55.564208  1659 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:55.564221  1659 net.cpp:86] Creating Layer relu1
I0428 20:20:55.564224  1659 net.cpp:408] relu1 <- ip1
I0428 20:20:55.564229  1659 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:55.564419  1659 net.cpp:124] Setting up relu1
I0428 20:20:55.564429  1659 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:20:55.564431  1659 net.cpp:139] Memory required for data: 16334800
I0428 20:20:55.564435  1659 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:55.564442  1659 net.cpp:86] Creating Layer ip2
I0428 20:20:55.564446  1659 net.cpp:408] ip2 <- ip1
I0428 20:20:55.564452  1659 net.cpp:382] ip2 -> ip2
I0428 20:20:55.564554  1659 net.cpp:124] Setting up ip2
I0428 20:20:55.564561  1659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:55.564579  1659 net.cpp:139] Memory required for data: 16338800
I0428 20:20:55.564584  1659 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:55.564589  1659 net.cpp:86] Creating Layer relu2
I0428 20:20:55.564592  1659 net.cpp:408] relu2 <- ip2
I0428 20:20:55.564602  1659 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:55.564774  1659 net.cpp:124] Setting up relu2
I0428 20:20:55.564784  1659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:55.564786  1659 net.cpp:139] Memory required for data: 16342800
I0428 20:20:55.564790  1659 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:20:55.564793  1659 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:20:55.564796  1659 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:20:55.564801  1659 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:20:55.564826  1659 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:20:55.564903  1659 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:20:55.564910  1659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:55.564914  1659 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:55.564916  1659 net.cpp:139] Memory required for data: 16350800
I0428 20:20:55.564919  1659 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:55.564926  1659 net.cpp:86] Creating Layer accuracy
I0428 20:20:55.564930  1659 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:20:55.564934  1659 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:55.564939  1659 net.cpp:382] accuracy -> accuracy
I0428 20:20:55.564945  1659 net.cpp:124] Setting up accuracy
I0428 20:20:55.564949  1659 net.cpp:131] Top shape: (1)
I0428 20:20:55.564952  1659 net.cpp:139] Memory required for data: 16350804
I0428 20:20:55.564955  1659 layer_factory.hpp:77] Creating layer loss
I0428 20:20:55.564961  1659 net.cpp:86] Creating Layer loss
I0428 20:20:55.564965  1659 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:20:55.564968  1659 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:55.564972  1659 net.cpp:382] loss -> loss
I0428 20:20:55.564978  1659 layer_factory.hpp:77] Creating layer loss
I0428 20:20:55.565248  1659 net.cpp:124] Setting up loss
I0428 20:20:55.565259  1659 net.cpp:131] Top shape: (1)
I0428 20:20:55.565263  1659 net.cpp:134]     with loss weight 1
I0428 20:20:55.565269  1659 net.cpp:139] Memory required for data: 16350808
I0428 20:20:55.565274  1659 net.cpp:200] loss needs backward computation.
I0428 20:20:55.565277  1659 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:55.565280  1659 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:20:55.565284  1659 net.cpp:200] relu2 needs backward computation.
I0428 20:20:55.565286  1659 net.cpp:200] ip2 needs backward computation.
I0428 20:20:55.565289  1659 net.cpp:200] relu1 needs backward computation.
I0428 20:20:55.565292  1659 net.cpp:200] ip1 needs backward computation.
I0428 20:20:55.565295  1659 net.cpp:200] pool1 needs backward computation.
I0428 20:20:55.565299  1659 net.cpp:200] conv1 needs backward computation.
I0428 20:20:55.565301  1659 net.cpp:200] pool0 needs backward computation.
I0428 20:20:55.565304  1659 net.cpp:200] conv0 needs backward computation.
I0428 20:20:55.565309  1659 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:55.565317  1659 net.cpp:202] mnist does not need backward computation.
I0428 20:20:55.565336  1659 net.cpp:244] This network produces output accuracy
I0428 20:20:55.565340  1659 net.cpp:244] This network produces output loss
I0428 20:20:55.565359  1659 net.cpp:257] Network initialization done.
I0428 20:20:55.565394  1659 solver.cpp:56] Solver scaffolding done.
I0428 20:20:55.565682  1659 caffe.cpp:248] Starting Optimization
I0428 20:20:55.565690  1659 solver.cpp:273] Solving LeNet
I0428 20:20:55.565692  1659 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:55.565914  1659 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:55.573088  1659 blocking_queue.cpp:49] Waiting for data
I0428 20:20:55.642570  1666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:55.643539  1659 solver.cpp:398]     Test net output #0: accuracy = 0.0832
I0428 20:20:55.643558  1659 solver.cpp:398]     Test net output #1: loss = 2.32872 (* 1 = 2.32872 loss)
I0428 20:20:55.647795  1659 solver.cpp:219] Iteration 0 (-9.90718e-43 iter/s, 0.0820756s/100 iters), loss = 2.32075
I0428 20:20:55.647837  1659 solver.cpp:238]     Train net output #0: loss = 2.32075 (* 1 = 2.32075 loss)
I0428 20:20:55.647850  1659 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:55.794930  1659 solver.cpp:219] Iteration 100 (679.911 iter/s, 0.147078s/100 iters), loss = 0.387778
I0428 20:20:55.794970  1659 solver.cpp:238]     Train net output #0: loss = 0.387778 (* 1 = 0.387778 loss)
I0428 20:20:55.794976  1659 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:55.941478  1659 solver.cpp:219] Iteration 200 (682.614 iter/s, 0.146496s/100 iters), loss = 0.307727
I0428 20:20:55.941515  1659 solver.cpp:238]     Train net output #0: loss = 0.307727 (* 1 = 0.307727 loss)
I0428 20:20:55.941521  1659 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:56.087916  1659 solver.cpp:219] Iteration 300 (683.04 iter/s, 0.146404s/100 iters), loss = 0.218685
I0428 20:20:56.087954  1659 solver.cpp:238]     Train net output #0: loss = 0.218685 (* 1 = 0.218685 loss)
I0428 20:20:56.087960  1659 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:56.234453  1659 solver.cpp:219] Iteration 400 (682.586 iter/s, 0.146502s/100 iters), loss = 0.111438
I0428 20:20:56.234491  1659 solver.cpp:238]     Train net output #0: loss = 0.111438 (* 1 = 0.111438 loss)
I0428 20:20:56.234498  1659 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:56.380532  1659 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:56.451555  1666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:56.454090  1659 solver.cpp:398]     Test net output #0: accuracy = 0.9566
I0428 20:20:56.454109  1659 solver.cpp:398]     Test net output #1: loss = 0.133324 (* 1 = 0.133324 loss)
I0428 20:20:56.455567  1659 solver.cpp:219] Iteration 500 (452.334 iter/s, 0.221076s/100 iters), loss = 0.121801
I0428 20:20:56.455605  1659 solver.cpp:238]     Train net output #0: loss = 0.121801 (* 1 = 0.121801 loss)
I0428 20:20:56.455610  1659 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:56.612467  1659 solver.cpp:219] Iteration 600 (637.493 iter/s, 0.156865s/100 iters), loss = 0.0874623
I0428 20:20:56.612507  1659 solver.cpp:238]     Train net output #0: loss = 0.0874622 (* 1 = 0.0874622 loss)
I0428 20:20:56.612514  1659 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:56.765105  1659 solver.cpp:219] Iteration 700 (655.302 iter/s, 0.152601s/100 iters), loss = 0.1186
I0428 20:20:56.765147  1659 solver.cpp:238]     Train net output #0: loss = 0.1186 (* 1 = 0.1186 loss)
I0428 20:20:56.765153  1659 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:56.915827  1659 solver.cpp:219] Iteration 800 (663.714 iter/s, 0.150667s/100 iters), loss = 0.228082
I0428 20:20:56.915868  1659 solver.cpp:238]     Train net output #0: loss = 0.228082 (* 1 = 0.228082 loss)
I0428 20:20:56.915874  1659 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:57.062458  1659 solver.cpp:219] Iteration 900 (682.152 iter/s, 0.146595s/100 iters), loss = 0.171901
I0428 20:20:57.062499  1659 solver.cpp:238]     Train net output #0: loss = 0.171901 (* 1 = 0.171901 loss)
I0428 20:20:57.062505  1659 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:57.110801  1665 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:57.205611  1659 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:57.207787  1659 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:57.209153  1659 solver.cpp:311] Iteration 1000, loss = 0.116528
I0428 20:20:57.209169  1659 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:57.280285  1666 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:57.281381  1659 solver.cpp:398]     Test net output #0: accuracy = 0.9767
I0428 20:20:57.281414  1659 solver.cpp:398]     Test net output #1: loss = 0.0706535 (* 1 = 0.0706535 loss)
I0428 20:20:57.281420  1659 solver.cpp:316] Optimization Done.
I0428 20:20:57.281424  1659 caffe.cpp:259] Optimization Done.
