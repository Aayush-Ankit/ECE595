I0428 20:23:44.255354  2281 caffe.cpp:218] Using GPUs 0
I0428 20:23:44.294482  2281 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:23:44.809062  2281 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1426.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:23:44.809204  2281 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1426.prototxt
I0428 20:23:44.809625  2281 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:23:44.809645  2281 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:23:44.809749  2281 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:44.809833  2281 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:44.809931  2281 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:23:44.809957  2281 net.cpp:86] Creating Layer mnist
I0428 20:23:44.809967  2281 net.cpp:382] mnist -> data
I0428 20:23:44.809993  2281 net.cpp:382] mnist -> label
I0428 20:23:44.811084  2281 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:23:44.813550  2281 net.cpp:124] Setting up mnist
I0428 20:23:44.813568  2281 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:23:44.813575  2281 net.cpp:131] Top shape: 64 (64)
I0428 20:23:44.813580  2281 net.cpp:139] Memory required for data: 200960
I0428 20:23:44.813586  2281 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:44.813606  2281 net.cpp:86] Creating Layer conv0
I0428 20:23:44.813632  2281 net.cpp:408] conv0 <- data
I0428 20:23:44.813644  2281 net.cpp:382] conv0 -> conv0
I0428 20:23:45.088418  2281 net.cpp:124] Setting up conv0
I0428 20:23:45.088444  2281 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:23:45.088449  2281 net.cpp:139] Memory required for data: 7573760
I0428 20:23:45.088464  2281 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:45.088475  2281 net.cpp:86] Creating Layer pool0
I0428 20:23:45.088480  2281 net.cpp:408] pool0 <- conv0
I0428 20:23:45.088485  2281 net.cpp:382] pool0 -> pool0
I0428 20:23:45.088560  2281 net.cpp:124] Setting up pool0
I0428 20:23:45.088568  2281 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:23:45.088572  2281 net.cpp:139] Memory required for data: 9416960
I0428 20:23:45.088574  2281 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:45.088600  2281 net.cpp:86] Creating Layer conv1
I0428 20:23:45.088605  2281 net.cpp:408] conv1 <- pool0
I0428 20:23:45.088611  2281 net.cpp:382] conv1 -> conv1
I0428 20:23:45.092038  2281 net.cpp:124] Setting up conv1
I0428 20:23:45.092068  2281 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:23:45.092072  2281 net.cpp:139] Memory required for data: 11055360
I0428 20:23:45.092080  2281 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:45.092089  2281 net.cpp:86] Creating Layer pool1
I0428 20:23:45.092092  2281 net.cpp:408] pool1 <- conv1
I0428 20:23:45.092097  2281 net.cpp:382] pool1 -> pool1
I0428 20:23:45.092166  2281 net.cpp:124] Setting up pool1
I0428 20:23:45.092173  2281 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:23:45.092176  2281 net.cpp:139] Memory required for data: 11464960
I0428 20:23:45.092178  2281 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:45.092185  2281 net.cpp:86] Creating Layer ip1
I0428 20:23:45.092190  2281 net.cpp:408] ip1 <- pool1
I0428 20:23:45.092195  2281 net.cpp:382] ip1 -> ip1
I0428 20:23:45.092511  2281 net.cpp:124] Setting up ip1
I0428 20:23:45.092519  2281 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:45.092521  2281 net.cpp:139] Memory required for data: 11471360
I0428 20:23:45.092543  2281 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:45.092550  2281 net.cpp:86] Creating Layer relu1
I0428 20:23:45.092553  2281 net.cpp:408] relu1 <- ip1
I0428 20:23:45.092557  2281 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:45.092717  2281 net.cpp:124] Setting up relu1
I0428 20:23:45.092725  2281 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:23:45.092728  2281 net.cpp:139] Memory required for data: 11477760
I0428 20:23:45.092731  2281 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:45.092737  2281 net.cpp:86] Creating Layer ip2
I0428 20:23:45.092741  2281 net.cpp:408] ip2 <- ip1
I0428 20:23:45.092746  2281 net.cpp:382] ip2 -> ip2
I0428 20:23:45.092893  2281 net.cpp:124] Setting up ip2
I0428 20:23:45.092918  2281 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:45.092921  2281 net.cpp:139] Memory required for data: 11480320
I0428 20:23:45.092942  2281 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:45.092952  2281 net.cpp:86] Creating Layer relu2
I0428 20:23:45.092955  2281 net.cpp:408] relu2 <- ip2
I0428 20:23:45.092962  2281 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:45.093798  2281 net.cpp:124] Setting up relu2
I0428 20:23:45.093811  2281 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:45.093813  2281 net.cpp:139] Memory required for data: 11482880
I0428 20:23:45.093817  2281 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:45.093824  2281 net.cpp:86] Creating Layer ip3
I0428 20:23:45.093828  2281 net.cpp:408] ip3 <- ip2
I0428 20:23:45.093833  2281 net.cpp:382] ip3 -> ip3
I0428 20:23:45.093946  2281 net.cpp:124] Setting up ip3
I0428 20:23:45.093955  2281 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:45.093957  2281 net.cpp:139] Memory required for data: 11485440
I0428 20:23:45.093966  2281 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:45.093973  2281 net.cpp:86] Creating Layer relu3
I0428 20:23:45.093978  2281 net.cpp:408] relu3 <- ip3
I0428 20:23:45.093998  2281 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:45.094172  2281 net.cpp:124] Setting up relu3
I0428 20:23:45.094182  2281 net.cpp:131] Top shape: 64 10 (640)
I0428 20:23:45.094184  2281 net.cpp:139] Memory required for data: 11488000
I0428 20:23:45.094188  2281 layer_factory.hpp:77] Creating layer loss
I0428 20:23:45.094195  2281 net.cpp:86] Creating Layer loss
I0428 20:23:45.094198  2281 net.cpp:408] loss <- ip3
I0428 20:23:45.094202  2281 net.cpp:408] loss <- label
I0428 20:23:45.094208  2281 net.cpp:382] loss -> loss
I0428 20:23:45.094224  2281 layer_factory.hpp:77] Creating layer loss
I0428 20:23:45.094470  2281 net.cpp:124] Setting up loss
I0428 20:23:45.094477  2281 net.cpp:131] Top shape: (1)
I0428 20:23:45.094480  2281 net.cpp:134]     with loss weight 1
I0428 20:23:45.094496  2281 net.cpp:139] Memory required for data: 11488004
I0428 20:23:45.094506  2281 net.cpp:200] loss needs backward computation.
I0428 20:23:45.094508  2281 net.cpp:200] relu3 needs backward computation.
I0428 20:23:45.094511  2281 net.cpp:200] ip3 needs backward computation.
I0428 20:23:45.094514  2281 net.cpp:200] relu2 needs backward computation.
I0428 20:23:45.094517  2281 net.cpp:200] ip2 needs backward computation.
I0428 20:23:45.094519  2281 net.cpp:200] relu1 needs backward computation.
I0428 20:23:45.094522  2281 net.cpp:200] ip1 needs backward computation.
I0428 20:23:45.094525  2281 net.cpp:200] pool1 needs backward computation.
I0428 20:23:45.094528  2281 net.cpp:200] conv1 needs backward computation.
I0428 20:23:45.094532  2281 net.cpp:200] pool0 needs backward computation.
I0428 20:23:45.094535  2281 net.cpp:200] conv0 needs backward computation.
I0428 20:23:45.094538  2281 net.cpp:202] mnist does not need backward computation.
I0428 20:23:45.094542  2281 net.cpp:244] This network produces output loss
I0428 20:23:45.094549  2281 net.cpp:257] Network initialization done.
I0428 20:23:45.094880  2281 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1426.prototxt
I0428 20:23:45.094916  2281 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:23:45.095002  2281 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:23:45.095134  2281 layer_factory.hpp:77] Creating layer mnist
I0428 20:23:45.095199  2281 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:23:45.095213  2281 net.cpp:86] Creating Layer mnist
I0428 20:23:45.095221  2281 net.cpp:382] mnist -> data
I0428 20:23:45.095229  2281 net.cpp:382] mnist -> label
I0428 20:23:45.095321  2281 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:23:45.096640  2281 net.cpp:124] Setting up mnist
I0428 20:23:45.096669  2281 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:23:45.096675  2281 net.cpp:131] Top shape: 100 (100)
I0428 20:23:45.096678  2281 net.cpp:139] Memory required for data: 314000
I0428 20:23:45.096683  2281 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:23:45.096689  2281 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:23:45.096693  2281 net.cpp:408] label_mnist_1_split <- label
I0428 20:23:45.096699  2281 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:23:45.096706  2281 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:23:45.096804  2281 net.cpp:124] Setting up label_mnist_1_split
I0428 20:23:45.096835  2281 net.cpp:131] Top shape: 100 (100)
I0428 20:23:45.096854  2281 net.cpp:131] Top shape: 100 (100)
I0428 20:23:45.096860  2281 net.cpp:139] Memory required for data: 314800
I0428 20:23:45.096864  2281 layer_factory.hpp:77] Creating layer conv0
I0428 20:23:45.096874  2281 net.cpp:86] Creating Layer conv0
I0428 20:23:45.096877  2281 net.cpp:408] conv0 <- data
I0428 20:23:45.096884  2281 net.cpp:382] conv0 -> conv0
I0428 20:23:45.098698  2281 net.cpp:124] Setting up conv0
I0428 20:23:45.098727  2281 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:23:45.098731  2281 net.cpp:139] Memory required for data: 11834800
I0428 20:23:45.098757  2281 layer_factory.hpp:77] Creating layer pool0
I0428 20:23:45.098764  2281 net.cpp:86] Creating Layer pool0
I0428 20:23:45.098767  2281 net.cpp:408] pool0 <- conv0
I0428 20:23:45.098773  2281 net.cpp:382] pool0 -> pool0
I0428 20:23:45.098827  2281 net.cpp:124] Setting up pool0
I0428 20:23:45.098835  2281 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:23:45.098839  2281 net.cpp:139] Memory required for data: 14714800
I0428 20:23:45.098841  2281 layer_factory.hpp:77] Creating layer conv1
I0428 20:23:45.098852  2281 net.cpp:86] Creating Layer conv1
I0428 20:23:45.098860  2281 net.cpp:408] conv1 <- pool0
I0428 20:23:45.098881  2281 net.cpp:382] conv1 -> conv1
I0428 20:23:45.102303  2281 net.cpp:124] Setting up conv1
I0428 20:23:45.102315  2281 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:23:45.102334  2281 net.cpp:139] Memory required for data: 17274800
I0428 20:23:45.102358  2281 layer_factory.hpp:77] Creating layer pool1
I0428 20:23:45.102372  2281 net.cpp:86] Creating Layer pool1
I0428 20:23:45.102376  2281 net.cpp:408] pool1 <- conv1
I0428 20:23:45.102382  2281 net.cpp:382] pool1 -> pool1
I0428 20:23:45.102433  2281 net.cpp:124] Setting up pool1
I0428 20:23:45.102440  2281 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:23:45.102443  2281 net.cpp:139] Memory required for data: 17914800
I0428 20:23:45.102447  2281 layer_factory.hpp:77] Creating layer ip1
I0428 20:23:45.102453  2281 net.cpp:86] Creating Layer ip1
I0428 20:23:45.102458  2281 net.cpp:408] ip1 <- pool1
I0428 20:23:45.102463  2281 net.cpp:382] ip1 -> ip1
I0428 20:23:45.102809  2281 net.cpp:124] Setting up ip1
I0428 20:23:45.102826  2281 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:45.102841  2281 net.cpp:139] Memory required for data: 17924800
I0428 20:23:45.102864  2281 layer_factory.hpp:77] Creating layer relu1
I0428 20:23:45.102874  2281 net.cpp:86] Creating Layer relu1
I0428 20:23:45.102892  2281 net.cpp:408] relu1 <- ip1
I0428 20:23:45.102897  2281 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:23:45.103058  2281 net.cpp:124] Setting up relu1
I0428 20:23:45.103067  2281 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:23:45.103071  2281 net.cpp:139] Memory required for data: 17934800
I0428 20:23:45.103075  2281 layer_factory.hpp:77] Creating layer ip2
I0428 20:23:45.103106  2281 net.cpp:86] Creating Layer ip2
I0428 20:23:45.103111  2281 net.cpp:408] ip2 <- ip1
I0428 20:23:45.103116  2281 net.cpp:382] ip2 -> ip2
I0428 20:23:45.103226  2281 net.cpp:124] Setting up ip2
I0428 20:23:45.103235  2281 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:45.103237  2281 net.cpp:139] Memory required for data: 17938800
I0428 20:23:45.103243  2281 layer_factory.hpp:77] Creating layer relu2
I0428 20:23:45.103250  2281 net.cpp:86] Creating Layer relu2
I0428 20:23:45.103253  2281 net.cpp:408] relu2 <- ip2
I0428 20:23:45.103257  2281 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:23:45.103533  2281 net.cpp:124] Setting up relu2
I0428 20:23:45.103556  2281 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:45.103559  2281 net.cpp:139] Memory required for data: 17942800
I0428 20:23:45.103562  2281 layer_factory.hpp:77] Creating layer ip3
I0428 20:23:45.103584  2281 net.cpp:86] Creating Layer ip3
I0428 20:23:45.103586  2281 net.cpp:408] ip3 <- ip2
I0428 20:23:45.103607  2281 net.cpp:382] ip3 -> ip3
I0428 20:23:45.103744  2281 net.cpp:124] Setting up ip3
I0428 20:23:45.103750  2281 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:45.103754  2281 net.cpp:139] Memory required for data: 17946800
I0428 20:23:45.103762  2281 layer_factory.hpp:77] Creating layer relu3
I0428 20:23:45.103767  2281 net.cpp:86] Creating Layer relu3
I0428 20:23:45.103771  2281 net.cpp:408] relu3 <- ip3
I0428 20:23:45.103776  2281 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:23:45.104609  2281 net.cpp:124] Setting up relu3
I0428 20:23:45.104619  2281 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:45.104645  2281 net.cpp:139] Memory required for data: 17950800
I0428 20:23:45.104648  2281 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:23:45.104655  2281 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:23:45.104657  2281 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:23:45.104663  2281 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:23:45.104670  2281 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:23:45.104722  2281 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:23:45.104727  2281 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:45.104732  2281 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:23:45.104750  2281 net.cpp:139] Memory required for data: 17958800
I0428 20:23:45.104753  2281 layer_factory.hpp:77] Creating layer accuracy
I0428 20:23:45.104759  2281 net.cpp:86] Creating Layer accuracy
I0428 20:23:45.104763  2281 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:23:45.104768  2281 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:23:45.104773  2281 net.cpp:382] accuracy -> accuracy
I0428 20:23:45.104779  2281 net.cpp:124] Setting up accuracy
I0428 20:23:45.104784  2281 net.cpp:131] Top shape: (1)
I0428 20:23:45.104787  2281 net.cpp:139] Memory required for data: 17958804
I0428 20:23:45.104795  2281 layer_factory.hpp:77] Creating layer loss
I0428 20:23:45.104801  2281 net.cpp:86] Creating Layer loss
I0428 20:23:45.104804  2281 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:23:45.104830  2281 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:23:45.104837  2281 net.cpp:382] loss -> loss
I0428 20:23:45.104843  2281 layer_factory.hpp:77] Creating layer loss
I0428 20:23:45.105113  2281 net.cpp:124] Setting up loss
I0428 20:23:45.105124  2281 net.cpp:131] Top shape: (1)
I0428 20:23:45.105129  2281 net.cpp:134]     with loss weight 1
I0428 20:23:45.105159  2281 net.cpp:139] Memory required for data: 17958808
I0428 20:23:45.105162  2281 net.cpp:200] loss needs backward computation.
I0428 20:23:45.105166  2281 net.cpp:202] accuracy does not need backward computation.
I0428 20:23:45.105170  2281 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:23:45.105173  2281 net.cpp:200] relu3 needs backward computation.
I0428 20:23:45.105198  2281 net.cpp:200] ip3 needs backward computation.
I0428 20:23:45.105201  2281 net.cpp:200] relu2 needs backward computation.
I0428 20:23:45.105208  2281 net.cpp:200] ip2 needs backward computation.
I0428 20:23:45.105211  2281 net.cpp:200] relu1 needs backward computation.
I0428 20:23:45.105217  2281 net.cpp:200] ip1 needs backward computation.
I0428 20:23:45.105221  2281 net.cpp:200] pool1 needs backward computation.
I0428 20:23:45.105227  2281 net.cpp:200] conv1 needs backward computation.
I0428 20:23:45.105231  2281 net.cpp:200] pool0 needs backward computation.
I0428 20:23:45.105237  2281 net.cpp:200] conv0 needs backward computation.
I0428 20:23:45.105242  2281 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:23:45.105245  2281 net.cpp:202] mnist does not need backward computation.
I0428 20:23:45.105248  2281 net.cpp:244] This network produces output accuracy
I0428 20:23:45.105252  2281 net.cpp:244] This network produces output loss
I0428 20:23:45.105262  2281 net.cpp:257] Network initialization done.
I0428 20:23:45.105303  2281 solver.cpp:56] Solver scaffolding done.
I0428 20:23:45.105649  2281 caffe.cpp:248] Starting Optimization
I0428 20:23:45.105655  2281 solver.cpp:273] Solving LeNet
I0428 20:23:45.105659  2281 solver.cpp:274] Learning Rate Policy: inv
I0428 20:23:45.105877  2281 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:23:45.124781  2281 blocking_queue.cpp:49] Waiting for data
I0428 20:23:45.195884  2315 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:45.197206  2281 solver.cpp:398]     Test net output #0: accuracy = 0.1091
I0428 20:23:45.197239  2281 solver.cpp:398]     Test net output #1: loss = 2.30219 (* 1 = 2.30219 loss)
I0428 20:23:45.202960  2281 solver.cpp:219] Iteration 0 (-2.02288e-34 iter/s, 0.0972708s/100 iters), loss = 2.30362
I0428 20:23:45.202999  2281 solver.cpp:238]     Train net output #0: loss = 2.30362 (* 1 = 2.30362 loss)
I0428 20:23:45.203011  2281 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:23:45.425374  2281 solver.cpp:219] Iteration 100 (449.703 iter/s, 0.222369s/100 iters), loss = 0.652194
I0428 20:23:45.425413  2281 solver.cpp:238]     Train net output #0: loss = 0.652194 (* 1 = 0.652194 loss)
I0428 20:23:45.425423  2281 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:23:45.651082  2281 solver.cpp:219] Iteration 200 (443.157 iter/s, 0.225654s/100 iters), loss = 0.3945
I0428 20:23:45.651114  2281 solver.cpp:238]     Train net output #0: loss = 0.3945 (* 1 = 0.3945 loss)
I0428 20:23:45.651121  2281 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:23:45.850857  2281 solver.cpp:219] Iteration 300 (500.681 iter/s, 0.199728s/100 iters), loss = 0.617122
I0428 20:23:45.850880  2281 solver.cpp:238]     Train net output #0: loss = 0.617122 (* 1 = 0.617122 loss)
I0428 20:23:45.850903  2281 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:23:46.076469  2281 solver.cpp:219] Iteration 400 (443.32 iter/s, 0.225571s/100 iters), loss = 0.306225
I0428 20:23:46.076503  2281 solver.cpp:238]     Train net output #0: loss = 0.306225 (* 1 = 0.306225 loss)
I0428 20:23:46.076510  2281 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:23:46.305510  2281 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:23:46.396414  2315 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:46.397943  2281 solver.cpp:398]     Test net output #0: accuracy = 0.8692
I0428 20:23:46.397970  2281 solver.cpp:398]     Test net output #1: loss = 0.348466 (* 1 = 0.348466 loss)
I0428 20:23:46.400261  2281 solver.cpp:219] Iteration 500 (308.89 iter/s, 0.32374s/100 iters), loss = 0.326411
I0428 20:23:46.400310  2281 solver.cpp:238]     Train net output #0: loss = 0.326411 (* 1 = 0.326411 loss)
I0428 20:23:46.400318  2281 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:23:46.634924  2281 solver.cpp:219] Iteration 600 (426.259 iter/s, 0.234599s/100 iters), loss = 0.248756
I0428 20:23:46.634958  2281 solver.cpp:238]     Train net output #0: loss = 0.248756 (* 1 = 0.248756 loss)
I0428 20:23:46.634973  2281 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:23:46.869168  2281 solver.cpp:219] Iteration 700 (427 iter/s, 0.234192s/100 iters), loss = 0.182032
I0428 20:23:46.869201  2281 solver.cpp:238]     Train net output #0: loss = 0.182032 (* 1 = 0.182032 loss)
I0428 20:23:46.869211  2281 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:23:47.105267  2281 solver.cpp:219] Iteration 800 (423.644 iter/s, 0.236047s/100 iters), loss = 0.526524
I0428 20:23:47.105300  2281 solver.cpp:238]     Train net output #0: loss = 0.526524 (* 1 = 0.526524 loss)
I0428 20:23:47.105315  2281 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:23:47.333639  2281 solver.cpp:219] Iteration 900 (437.976 iter/s, 0.228323s/100 iters), loss = 0.313891
I0428 20:23:47.333667  2281 solver.cpp:238]     Train net output #0: loss = 0.313891 (* 1 = 0.313891 loss)
I0428 20:23:47.333679  2281 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:23:47.408241  2314 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:47.560514  2281 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:23:47.565317  2281 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:23:47.567412  2281 solver.cpp:311] Iteration 1000, loss = 0.292077
I0428 20:23:47.567430  2281 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:23:47.652783  2315 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:23:47.655869  2281 solver.cpp:398]     Test net output #0: accuracy = 0.881
I0428 20:23:47.655889  2281 solver.cpp:398]     Test net output #1: loss = 0.302096 (* 1 = 0.302096 loss)
I0428 20:23:47.655894  2281 solver.cpp:316] Optimization Done.
I0428 20:23:47.655911  2281 caffe.cpp:259] Optimization Done.
