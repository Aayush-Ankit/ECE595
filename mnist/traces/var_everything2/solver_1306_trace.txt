I0428 20:17:55.205298  1015 caffe.cpp:218] Using GPUs 0
I0428 20:17:55.238435  1015 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:17:55.742105  1015 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1306.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:17:55.742239  1015 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1306.prototxt
I0428 20:17:55.742625  1015 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:17:55.742642  1015 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:17:55.742734  1015 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:55.742805  1015 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:55.742897  1015 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:17:55.742919  1015 net.cpp:86] Creating Layer mnist
I0428 20:17:55.742926  1015 net.cpp:382] mnist -> data
I0428 20:17:55.742947  1015 net.cpp:382] mnist -> label
I0428 20:17:55.743999  1015 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:17:55.746371  1015 net.cpp:124] Setting up mnist
I0428 20:17:55.746387  1015 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:17:55.746393  1015 net.cpp:131] Top shape: 64 (64)
I0428 20:17:55.746397  1015 net.cpp:139] Memory required for data: 200960
I0428 20:17:55.746405  1015 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:55.746419  1015 net.cpp:86] Creating Layer conv0
I0428 20:17:55.746439  1015 net.cpp:408] conv0 <- data
I0428 20:17:55.746450  1015 net.cpp:382] conv0 -> conv0
I0428 20:17:55.982655  1015 net.cpp:124] Setting up conv0
I0428 20:17:55.982681  1015 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:17:55.982686  1015 net.cpp:139] Memory required for data: 7573760
I0428 20:17:55.982699  1015 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:55.982712  1015 net.cpp:86] Creating Layer pool0
I0428 20:17:55.982715  1015 net.cpp:408] pool0 <- conv0
I0428 20:17:55.982720  1015 net.cpp:382] pool0 -> pool0
I0428 20:17:55.982779  1015 net.cpp:124] Setting up pool0
I0428 20:17:55.982785  1015 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:17:55.982787  1015 net.cpp:139] Memory required for data: 9416960
I0428 20:17:55.982790  1015 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:55.982800  1015 net.cpp:86] Creating Layer conv1
I0428 20:17:55.982803  1015 net.cpp:408] conv1 <- pool0
I0428 20:17:55.982808  1015 net.cpp:382] conv1 -> conv1
I0428 20:17:55.985721  1015 net.cpp:124] Setting up conv1
I0428 20:17:55.985735  1015 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:17:55.985740  1015 net.cpp:139] Memory required for data: 9580800
I0428 20:17:55.985749  1015 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:55.985755  1015 net.cpp:86] Creating Layer pool1
I0428 20:17:55.985759  1015 net.cpp:408] pool1 <- conv1
I0428 20:17:55.985780  1015 net.cpp:382] pool1 -> pool1
I0428 20:17:55.985816  1015 net.cpp:124] Setting up pool1
I0428 20:17:55.985821  1015 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:17:55.985823  1015 net.cpp:139] Memory required for data: 9621760
I0428 20:17:55.985826  1015 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:55.985834  1015 net.cpp:86] Creating Layer ip1
I0428 20:17:55.985837  1015 net.cpp:408] ip1 <- pool1
I0428 20:17:55.985842  1015 net.cpp:382] ip1 -> ip1
I0428 20:17:55.985945  1015 net.cpp:124] Setting up ip1
I0428 20:17:55.985952  1015 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:55.985955  1015 net.cpp:139] Memory required for data: 9624320
I0428 20:17:55.985962  1015 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:55.985968  1015 net.cpp:86] Creating Layer relu1
I0428 20:17:55.985971  1015 net.cpp:408] relu1 <- ip1
I0428 20:17:55.985975  1015 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:55.986167  1015 net.cpp:124] Setting up relu1
I0428 20:17:55.986176  1015 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:55.986179  1015 net.cpp:139] Memory required for data: 9626880
I0428 20:17:55.986182  1015 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:55.986187  1015 net.cpp:86] Creating Layer ip2
I0428 20:17:55.986191  1015 net.cpp:408] ip2 <- ip1
I0428 20:17:55.986196  1015 net.cpp:382] ip2 -> ip2
I0428 20:17:55.986294  1015 net.cpp:124] Setting up ip2
I0428 20:17:55.986300  1015 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:55.986304  1015 net.cpp:139] Memory required for data: 9639680
I0428 20:17:55.986309  1015 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:55.986313  1015 net.cpp:86] Creating Layer relu2
I0428 20:17:55.986316  1015 net.cpp:408] relu2 <- ip2
I0428 20:17:55.986321  1015 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:55.987097  1015 net.cpp:124] Setting up relu2
I0428 20:17:55.987108  1015 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:17:55.987128  1015 net.cpp:139] Memory required for data: 9652480
I0428 20:17:55.987130  1015 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:55.987138  1015 net.cpp:86] Creating Layer ip3
I0428 20:17:55.987143  1015 net.cpp:408] ip3 <- ip2
I0428 20:17:55.987148  1015 net.cpp:382] ip3 -> ip3
I0428 20:17:55.987248  1015 net.cpp:124] Setting up ip3
I0428 20:17:55.987257  1015 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:55.987259  1015 net.cpp:139] Memory required for data: 9655040
I0428 20:17:55.987267  1015 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:55.987272  1015 net.cpp:86] Creating Layer relu3
I0428 20:17:55.987275  1015 net.cpp:408] relu3 <- ip3
I0428 20:17:55.987278  1015 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:55.987447  1015 net.cpp:124] Setting up relu3
I0428 20:17:55.987454  1015 net.cpp:131] Top shape: 64 10 (640)
I0428 20:17:55.987457  1015 net.cpp:139] Memory required for data: 9657600
I0428 20:17:55.987460  1015 layer_factory.hpp:77] Creating layer loss
I0428 20:17:55.987467  1015 net.cpp:86] Creating Layer loss
I0428 20:17:55.987469  1015 net.cpp:408] loss <- ip3
I0428 20:17:55.987473  1015 net.cpp:408] loss <- label
I0428 20:17:55.987478  1015 net.cpp:382] loss -> loss
I0428 20:17:55.987494  1015 layer_factory.hpp:77] Creating layer loss
I0428 20:17:55.987751  1015 net.cpp:124] Setting up loss
I0428 20:17:55.987759  1015 net.cpp:131] Top shape: (1)
I0428 20:17:55.987762  1015 net.cpp:134]     with loss weight 1
I0428 20:17:55.987776  1015 net.cpp:139] Memory required for data: 9657604
I0428 20:17:55.987779  1015 net.cpp:200] loss needs backward computation.
I0428 20:17:55.987783  1015 net.cpp:200] relu3 needs backward computation.
I0428 20:17:55.987787  1015 net.cpp:200] ip3 needs backward computation.
I0428 20:17:55.987788  1015 net.cpp:200] relu2 needs backward computation.
I0428 20:17:55.987792  1015 net.cpp:200] ip2 needs backward computation.
I0428 20:17:55.987794  1015 net.cpp:200] relu1 needs backward computation.
I0428 20:17:55.987797  1015 net.cpp:200] ip1 needs backward computation.
I0428 20:17:55.987800  1015 net.cpp:200] pool1 needs backward computation.
I0428 20:17:55.987803  1015 net.cpp:200] conv1 needs backward computation.
I0428 20:17:55.987805  1015 net.cpp:200] pool0 needs backward computation.
I0428 20:17:55.987808  1015 net.cpp:200] conv0 needs backward computation.
I0428 20:17:55.987812  1015 net.cpp:202] mnist does not need backward computation.
I0428 20:17:55.987815  1015 net.cpp:244] This network produces output loss
I0428 20:17:55.987823  1015 net.cpp:257] Network initialization done.
I0428 20:17:55.988207  1015 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1306.prototxt
I0428 20:17:55.988250  1015 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:17:55.988343  1015 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:17:55.988425  1015 layer_factory.hpp:77] Creating layer mnist
I0428 20:17:55.988483  1015 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:17:55.988495  1015 net.cpp:86] Creating Layer mnist
I0428 20:17:55.988500  1015 net.cpp:382] mnist -> data
I0428 20:17:55.988507  1015 net.cpp:382] mnist -> label
I0428 20:17:55.988590  1015 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:17:55.990562  1015 net.cpp:124] Setting up mnist
I0428 20:17:55.990586  1015 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:17:55.990607  1015 net.cpp:131] Top shape: 100 (100)
I0428 20:17:55.990609  1015 net.cpp:139] Memory required for data: 314000
I0428 20:17:55.990613  1015 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:17:55.990633  1015 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:17:55.990638  1015 net.cpp:408] label_mnist_1_split <- label
I0428 20:17:55.990643  1015 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:17:55.990649  1015 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:17:55.990692  1015 net.cpp:124] Setting up label_mnist_1_split
I0428 20:17:55.990698  1015 net.cpp:131] Top shape: 100 (100)
I0428 20:17:55.990702  1015 net.cpp:131] Top shape: 100 (100)
I0428 20:17:55.990705  1015 net.cpp:139] Memory required for data: 314800
I0428 20:17:55.990707  1015 layer_factory.hpp:77] Creating layer conv0
I0428 20:17:55.990733  1015 net.cpp:86] Creating Layer conv0
I0428 20:17:55.990737  1015 net.cpp:408] conv0 <- data
I0428 20:17:55.990742  1015 net.cpp:382] conv0 -> conv0
I0428 20:17:55.992451  1015 net.cpp:124] Setting up conv0
I0428 20:17:55.992465  1015 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:17:55.992485  1015 net.cpp:139] Memory required for data: 11834800
I0428 20:17:55.992494  1015 layer_factory.hpp:77] Creating layer pool0
I0428 20:17:55.992501  1015 net.cpp:86] Creating Layer pool0
I0428 20:17:55.992523  1015 net.cpp:408] pool0 <- conv0
I0428 20:17:55.992528  1015 net.cpp:382] pool0 -> pool0
I0428 20:17:55.992578  1015 net.cpp:124] Setting up pool0
I0428 20:17:55.992583  1015 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:17:55.992586  1015 net.cpp:139] Memory required for data: 14714800
I0428 20:17:55.992589  1015 layer_factory.hpp:77] Creating layer conv1
I0428 20:17:55.992599  1015 net.cpp:86] Creating Layer conv1
I0428 20:17:55.992604  1015 net.cpp:408] conv1 <- pool0
I0428 20:17:55.992609  1015 net.cpp:382] conv1 -> conv1
I0428 20:17:55.994348  1015 net.cpp:124] Setting up conv1
I0428 20:17:55.994360  1015 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:17:55.994380  1015 net.cpp:139] Memory required for data: 14970800
I0428 20:17:55.994390  1015 layer_factory.hpp:77] Creating layer pool1
I0428 20:17:55.994397  1015 net.cpp:86] Creating Layer pool1
I0428 20:17:55.994401  1015 net.cpp:408] pool1 <- conv1
I0428 20:17:55.994407  1015 net.cpp:382] pool1 -> pool1
I0428 20:17:55.994446  1015 net.cpp:124] Setting up pool1
I0428 20:17:55.994453  1015 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:17:55.994457  1015 net.cpp:139] Memory required for data: 15034800
I0428 20:17:55.994467  1015 layer_factory.hpp:77] Creating layer ip1
I0428 20:17:55.994473  1015 net.cpp:86] Creating Layer ip1
I0428 20:17:55.994477  1015 net.cpp:408] ip1 <- pool1
I0428 20:17:55.994483  1015 net.cpp:382] ip1 -> ip1
I0428 20:17:55.994597  1015 net.cpp:124] Setting up ip1
I0428 20:17:55.994606  1015 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:55.994621  1015 net.cpp:139] Memory required for data: 15038800
I0428 20:17:55.994629  1015 layer_factory.hpp:77] Creating layer relu1
I0428 20:17:55.994637  1015 net.cpp:86] Creating Layer relu1
I0428 20:17:55.994640  1015 net.cpp:408] relu1 <- ip1
I0428 20:17:55.994647  1015 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:17:55.994823  1015 net.cpp:124] Setting up relu1
I0428 20:17:55.994843  1015 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:55.994846  1015 net.cpp:139] Memory required for data: 15042800
I0428 20:17:55.994849  1015 layer_factory.hpp:77] Creating layer ip2
I0428 20:17:55.994858  1015 net.cpp:86] Creating Layer ip2
I0428 20:17:55.994866  1015 net.cpp:408] ip2 <- ip1
I0428 20:17:55.994877  1015 net.cpp:382] ip2 -> ip2
I0428 20:17:55.994982  1015 net.cpp:124] Setting up ip2
I0428 20:17:55.994992  1015 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:55.994994  1015 net.cpp:139] Memory required for data: 15062800
I0428 20:17:55.994999  1015 layer_factory.hpp:77] Creating layer relu2
I0428 20:17:55.995004  1015 net.cpp:86] Creating Layer relu2
I0428 20:17:55.995007  1015 net.cpp:408] relu2 <- ip2
I0428 20:17:55.995012  1015 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:17:55.995218  1015 net.cpp:124] Setting up relu2
I0428 20:17:55.995227  1015 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:17:55.995232  1015 net.cpp:139] Memory required for data: 15082800
I0428 20:17:55.995235  1015 layer_factory.hpp:77] Creating layer ip3
I0428 20:17:55.995240  1015 net.cpp:86] Creating Layer ip3
I0428 20:17:55.995244  1015 net.cpp:408] ip3 <- ip2
I0428 20:17:55.995250  1015 net.cpp:382] ip3 -> ip3
I0428 20:17:55.995405  1015 net.cpp:124] Setting up ip3
I0428 20:17:55.995414  1015 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:55.995417  1015 net.cpp:139] Memory required for data: 15086800
I0428 20:17:55.995424  1015 layer_factory.hpp:77] Creating layer relu3
I0428 20:17:55.995431  1015 net.cpp:86] Creating Layer relu3
I0428 20:17:55.995434  1015 net.cpp:408] relu3 <- ip3
I0428 20:17:55.995438  1015 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:17:55.996260  1015 net.cpp:124] Setting up relu3
I0428 20:17:55.996273  1015 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:55.996292  1015 net.cpp:139] Memory required for data: 15090800
I0428 20:17:55.996295  1015 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:17:55.996300  1015 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:17:55.996304  1015 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:17:55.996309  1015 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:17:55.996316  1015 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:17:55.996363  1015 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:17:55.996382  1015 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:55.996387  1015 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:17:55.996389  1015 net.cpp:139] Memory required for data: 15098800
I0428 20:17:55.996392  1015 layer_factory.hpp:77] Creating layer accuracy
I0428 20:17:55.996398  1015 net.cpp:86] Creating Layer accuracy
I0428 20:17:55.996403  1015 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:17:55.996407  1015 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:17:55.996412  1015 net.cpp:382] accuracy -> accuracy
I0428 20:17:55.996423  1015 net.cpp:124] Setting up accuracy
I0428 20:17:55.996428  1015 net.cpp:131] Top shape: (1)
I0428 20:17:55.996431  1015 net.cpp:139] Memory required for data: 15098804
I0428 20:17:55.996434  1015 layer_factory.hpp:77] Creating layer loss
I0428 20:17:55.996439  1015 net.cpp:86] Creating Layer loss
I0428 20:17:55.996443  1015 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:17:55.996446  1015 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:17:55.996450  1015 net.cpp:382] loss -> loss
I0428 20:17:55.996456  1015 layer_factory.hpp:77] Creating layer loss
I0428 20:17:55.996714  1015 net.cpp:124] Setting up loss
I0428 20:17:55.996723  1015 net.cpp:131] Top shape: (1)
I0428 20:17:55.996732  1015 net.cpp:134]     with loss weight 1
I0428 20:17:55.996747  1015 net.cpp:139] Memory required for data: 15098808
I0428 20:17:55.996750  1015 net.cpp:200] loss needs backward computation.
I0428 20:17:55.996755  1015 net.cpp:202] accuracy does not need backward computation.
I0428 20:17:55.996758  1015 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:17:55.996762  1015 net.cpp:200] relu3 needs backward computation.
I0428 20:17:55.996764  1015 net.cpp:200] ip3 needs backward computation.
I0428 20:17:55.996767  1015 net.cpp:200] relu2 needs backward computation.
I0428 20:17:55.996770  1015 net.cpp:200] ip2 needs backward computation.
I0428 20:17:55.996773  1015 net.cpp:200] relu1 needs backward computation.
I0428 20:17:55.996775  1015 net.cpp:200] ip1 needs backward computation.
I0428 20:17:55.996778  1015 net.cpp:200] pool1 needs backward computation.
I0428 20:17:55.996780  1015 net.cpp:200] conv1 needs backward computation.
I0428 20:17:55.996783  1015 net.cpp:200] pool0 needs backward computation.
I0428 20:17:55.996788  1015 net.cpp:200] conv0 needs backward computation.
I0428 20:17:55.996790  1015 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:17:55.996800  1015 net.cpp:202] mnist does not need backward computation.
I0428 20:17:55.996803  1015 net.cpp:244] This network produces output accuracy
I0428 20:17:55.996806  1015 net.cpp:244] This network produces output loss
I0428 20:17:55.996839  1015 net.cpp:257] Network initialization done.
I0428 20:17:55.996907  1015 solver.cpp:56] Solver scaffolding done.
I0428 20:17:55.997294  1015 caffe.cpp:248] Starting Optimization
I0428 20:17:55.997299  1015 solver.cpp:273] Solving LeNet
I0428 20:17:55.997303  1015 solver.cpp:274] Learning Rate Policy: inv
I0428 20:17:55.998219  1015 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:17:56.004567  1015 blocking_queue.cpp:49] Waiting for data
I0428 20:17:56.075973  1022 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:56.076720  1015 solver.cpp:398]     Test net output #0: accuracy = 0.1005
I0428 20:17:56.076756  1015 solver.cpp:398]     Test net output #1: loss = 2.31798 (* 1 = 2.31798 loss)
I0428 20:17:56.081023  1015 solver.cpp:219] Iteration 0 (-9.87915e-43 iter/s, 0.083671s/100 iters), loss = 2.34989
I0428 20:17:56.081064  1015 solver.cpp:238]     Train net output #0: loss = 2.34989 (* 1 = 2.34989 loss)
I0428 20:17:56.081075  1015 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:17:56.204535  1015 solver.cpp:219] Iteration 100 (809.894 iter/s, 0.123473s/100 iters), loss = 0.330813
I0428 20:17:56.204576  1015 solver.cpp:238]     Train net output #0: loss = 0.330813 (* 1 = 0.330813 loss)
I0428 20:17:56.204582  1015 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:17:56.329124  1015 solver.cpp:219] Iteration 200 (802.936 iter/s, 0.124543s/100 iters), loss = 0.148884
I0428 20:17:56.329164  1015 solver.cpp:238]     Train net output #0: loss = 0.148884 (* 1 = 0.148884 loss)
I0428 20:17:56.329170  1015 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:17:56.454051  1015 solver.cpp:219] Iteration 300 (800.691 iter/s, 0.124892s/100 iters), loss = 0.209541
I0428 20:17:56.454095  1015 solver.cpp:238]     Train net output #0: loss = 0.209541 (* 1 = 0.209541 loss)
I0428 20:17:56.454102  1015 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:17:56.579670  1015 solver.cpp:219] Iteration 400 (796.407 iter/s, 0.125564s/100 iters), loss = 0.148969
I0428 20:17:56.579713  1015 solver.cpp:238]     Train net output #0: loss = 0.148969 (* 1 = 0.148969 loss)
I0428 20:17:56.579720  1015 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:17:56.702288  1015 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:17:56.768206  1022 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:56.770689  1015 solver.cpp:398]     Test net output #0: accuracy = 0.9542
I0428 20:17:56.770741  1015 solver.cpp:398]     Test net output #1: loss = 0.143886 (* 1 = 0.143886 loss)
I0428 20:17:56.771864  1015 solver.cpp:219] Iteration 500 (520.423 iter/s, 0.192152s/100 iters), loss = 0.167827
I0428 20:17:56.771919  1015 solver.cpp:238]     Train net output #0: loss = 0.167827 (* 1 = 0.167827 loss)
I0428 20:17:56.771925  1015 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:17:56.889096  1015 solver.cpp:219] Iteration 600 (853.37 iter/s, 0.117182s/100 iters), loss = 0.12502
I0428 20:17:56.889137  1015 solver.cpp:238]     Train net output #0: loss = 0.12502 (* 1 = 0.12502 loss)
I0428 20:17:56.889143  1015 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:17:57.006726  1015 solver.cpp:219] Iteration 700 (850.375 iter/s, 0.117595s/100 iters), loss = 0.196442
I0428 20:17:57.006767  1015 solver.cpp:238]     Train net output #0: loss = 0.196442 (* 1 = 0.196442 loss)
I0428 20:17:57.006773  1015 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:17:57.132688  1015 solver.cpp:219] Iteration 800 (794.114 iter/s, 0.125927s/100 iters), loss = 0.407017
I0428 20:17:57.132714  1015 solver.cpp:238]     Train net output #0: loss = 0.407017 (* 1 = 0.407017 loss)
I0428 20:17:57.132721  1015 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:17:57.254461  1015 solver.cpp:219] Iteration 900 (821.462 iter/s, 0.121734s/100 iters), loss = 0.0975387
I0428 20:17:57.254484  1015 solver.cpp:238]     Train net output #0: loss = 0.0975387 (* 1 = 0.0975387 loss)
I0428 20:17:57.254490  1015 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:17:57.293840  1021 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:57.372970  1015 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:17:57.374105  1015 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:17:57.374877  1015 solver.cpp:311] Iteration 1000, loss = 0.0890727
I0428 20:17:57.374892  1015 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:17:57.440873  1022 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:17:57.443157  1015 solver.cpp:398]     Test net output #0: accuracy = 0.968
I0428 20:17:57.443177  1015 solver.cpp:398]     Test net output #1: loss = 0.0976449 (* 1 = 0.0976449 loss)
I0428 20:17:57.443182  1015 solver.cpp:316] Optimization Done.
I0428 20:17:57.443186  1015 caffe.cpp:259] Optimization Done.
