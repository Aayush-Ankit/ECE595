I0428 20:35:16.222409  4593 caffe.cpp:218] Using GPUs 0
I0428 20:35:16.259655  4593 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:35:16.776638  4593 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1618.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:35:16.776782  4593 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1618.prototxt
I0428 20:35:16.777211  4593 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:35:16.777230  4593 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:35:16.777333  4593 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:16.777415  4593 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:16.777513  4593 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:35:16.777539  4593 net.cpp:86] Creating Layer mnist
I0428 20:35:16.777546  4593 net.cpp:382] mnist -> data
I0428 20:35:16.777567  4593 net.cpp:382] mnist -> label
I0428 20:35:16.778673  4593 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:35:16.781150  4593 net.cpp:124] Setting up mnist
I0428 20:35:16.781168  4593 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:35:16.781188  4593 net.cpp:131] Top shape: 64 (64)
I0428 20:35:16.781191  4593 net.cpp:139] Memory required for data: 200960
I0428 20:35:16.781198  4593 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:16.781215  4593 net.cpp:86] Creating Layer conv0
I0428 20:35:16.781235  4593 net.cpp:408] conv0 <- data
I0428 20:35:16.781250  4593 net.cpp:382] conv0 -> conv0
I0428 20:35:17.045301  4593 net.cpp:124] Setting up conv0
I0428 20:35:17.045343  4593 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:35:17.045348  4593 net.cpp:139] Memory required for data: 14946560
I0428 20:35:17.045363  4593 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:17.045377  4593 net.cpp:86] Creating Layer pool0
I0428 20:35:17.045380  4593 net.cpp:408] pool0 <- conv0
I0428 20:35:17.045387  4593 net.cpp:382] pool0 -> pool0
I0428 20:35:17.045439  4593 net.cpp:124] Setting up pool0
I0428 20:35:17.045454  4593 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:35:17.045457  4593 net.cpp:139] Memory required for data: 18632960
I0428 20:35:17.045461  4593 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:17.045472  4593 net.cpp:86] Creating Layer conv1
I0428 20:35:17.045475  4593 net.cpp:408] conv1 <- pool0
I0428 20:35:17.045480  4593 net.cpp:382] conv1 -> conv1
I0428 20:35:17.048941  4593 net.cpp:124] Setting up conv1
I0428 20:35:17.048956  4593 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:35:17.048960  4593 net.cpp:139] Memory required for data: 19452160
I0428 20:35:17.048969  4593 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:17.048976  4593 net.cpp:86] Creating Layer pool1
I0428 20:35:17.048996  4593 net.cpp:408] pool1 <- conv1
I0428 20:35:17.049002  4593 net.cpp:382] pool1 -> pool1
I0428 20:35:17.049052  4593 net.cpp:124] Setting up pool1
I0428 20:35:17.049062  4593 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:35:17.049080  4593 net.cpp:139] Memory required for data: 19656960
I0428 20:35:17.049084  4593 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:17.049093  4593 net.cpp:86] Creating Layer ip1
I0428 20:35:17.049096  4593 net.cpp:408] ip1 <- pool1
I0428 20:35:17.049101  4593 net.cpp:382] ip1 -> ip1
I0428 20:35:17.050194  4593 net.cpp:124] Setting up ip1
I0428 20:35:17.050221  4593 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:17.050225  4593 net.cpp:139] Memory required for data: 19659520
I0428 20:35:17.050248  4593 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:17.050254  4593 net.cpp:86] Creating Layer relu1
I0428 20:35:17.050258  4593 net.cpp:408] relu1 <- ip1
I0428 20:35:17.050263  4593 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:17.050447  4593 net.cpp:124] Setting up relu1
I0428 20:35:17.050457  4593 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:17.050460  4593 net.cpp:139] Memory required for data: 19662080
I0428 20:35:17.050463  4593 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:17.050469  4593 net.cpp:86] Creating Layer ip2
I0428 20:35:17.050473  4593 net.cpp:408] ip2 <- ip1
I0428 20:35:17.050478  4593 net.cpp:382] ip2 -> ip2
I0428 20:35:17.050576  4593 net.cpp:124] Setting up ip2
I0428 20:35:17.050601  4593 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:35:17.050604  4593 net.cpp:139] Memory required for data: 19674880
I0428 20:35:17.050609  4593 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:17.050616  4593 net.cpp:86] Creating Layer relu2
I0428 20:35:17.050619  4593 net.cpp:408] relu2 <- ip2
I0428 20:35:17.050624  4593 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:17.051393  4593 net.cpp:124] Setting up relu2
I0428 20:35:17.051421  4593 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:35:17.051440  4593 net.cpp:139] Memory required for data: 19687680
I0428 20:35:17.051445  4593 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:17.051451  4593 net.cpp:86] Creating Layer ip3
I0428 20:35:17.051455  4593 net.cpp:408] ip3 <- ip2
I0428 20:35:17.051461  4593 net.cpp:382] ip3 -> ip3
I0428 20:35:17.051584  4593 net.cpp:124] Setting up ip3
I0428 20:35:17.051591  4593 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:17.051595  4593 net.cpp:139] Memory required for data: 19690240
I0428 20:35:17.051604  4593 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:17.051609  4593 net.cpp:86] Creating Layer relu3
I0428 20:35:17.051612  4593 net.cpp:408] relu3 <- ip3
I0428 20:35:17.051617  4593 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:17.051792  4593 net.cpp:124] Setting up relu3
I0428 20:35:17.051802  4593 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:17.051805  4593 net.cpp:139] Memory required for data: 19692800
I0428 20:35:17.051808  4593 layer_factory.hpp:77] Creating layer loss
I0428 20:35:17.051829  4593 net.cpp:86] Creating Layer loss
I0428 20:35:17.051832  4593 net.cpp:408] loss <- ip3
I0428 20:35:17.051836  4593 net.cpp:408] loss <- label
I0428 20:35:17.051842  4593 net.cpp:382] loss -> loss
I0428 20:35:17.051861  4593 layer_factory.hpp:77] Creating layer loss
I0428 20:35:17.052106  4593 net.cpp:124] Setting up loss
I0428 20:35:17.052116  4593 net.cpp:131] Top shape: (1)
I0428 20:35:17.052119  4593 net.cpp:134]     with loss weight 1
I0428 20:35:17.052134  4593 net.cpp:139] Memory required for data: 19692804
I0428 20:35:17.052137  4593 net.cpp:200] loss needs backward computation.
I0428 20:35:17.052141  4593 net.cpp:200] relu3 needs backward computation.
I0428 20:35:17.052145  4593 net.cpp:200] ip3 needs backward computation.
I0428 20:35:17.052147  4593 net.cpp:200] relu2 needs backward computation.
I0428 20:35:17.052150  4593 net.cpp:200] ip2 needs backward computation.
I0428 20:35:17.052153  4593 net.cpp:200] relu1 needs backward computation.
I0428 20:35:17.052156  4593 net.cpp:200] ip1 needs backward computation.
I0428 20:35:17.052160  4593 net.cpp:200] pool1 needs backward computation.
I0428 20:35:17.052163  4593 net.cpp:200] conv1 needs backward computation.
I0428 20:35:17.052166  4593 net.cpp:200] pool0 needs backward computation.
I0428 20:35:17.052170  4593 net.cpp:200] conv0 needs backward computation.
I0428 20:35:17.052172  4593 net.cpp:202] mnist does not need backward computation.
I0428 20:35:17.052175  4593 net.cpp:244] This network produces output loss
I0428 20:35:17.052186  4593 net.cpp:257] Network initialization done.
I0428 20:35:17.052546  4593 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1618.prototxt
I0428 20:35:17.052588  4593 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:35:17.052683  4593 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:17.052776  4593 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:17.052839  4593 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:35:17.052856  4593 net.cpp:86] Creating Layer mnist
I0428 20:35:17.052861  4593 net.cpp:382] mnist -> data
I0428 20:35:17.052870  4593 net.cpp:382] mnist -> label
I0428 20:35:17.052971  4593 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:35:17.054201  4593 net.cpp:124] Setting up mnist
I0428 20:35:17.054246  4593 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:35:17.054251  4593 net.cpp:131] Top shape: 100 (100)
I0428 20:35:17.054265  4593 net.cpp:139] Memory required for data: 314000
I0428 20:35:17.054270  4593 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:35:17.054281  4593 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:35:17.054286  4593 net.cpp:408] label_mnist_1_split <- label
I0428 20:35:17.054291  4593 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:35:17.054298  4593 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:35:17.054390  4593 net.cpp:124] Setting up label_mnist_1_split
I0428 20:35:17.054399  4593 net.cpp:131] Top shape: 100 (100)
I0428 20:35:17.054404  4593 net.cpp:131] Top shape: 100 (100)
I0428 20:35:17.054406  4593 net.cpp:139] Memory required for data: 314800
I0428 20:35:17.054409  4593 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:17.054419  4593 net.cpp:86] Creating Layer conv0
I0428 20:35:17.054422  4593 net.cpp:408] conv0 <- data
I0428 20:35:17.054427  4593 net.cpp:382] conv0 -> conv0
I0428 20:35:17.056188  4593 net.cpp:124] Setting up conv0
I0428 20:35:17.056218  4593 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:35:17.056222  4593 net.cpp:139] Memory required for data: 23354800
I0428 20:35:17.056231  4593 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:17.056238  4593 net.cpp:86] Creating Layer pool0
I0428 20:35:17.056242  4593 net.cpp:408] pool0 <- conv0
I0428 20:35:17.056246  4593 net.cpp:382] pool0 -> pool0
I0428 20:35:17.056283  4593 net.cpp:124] Setting up pool0
I0428 20:35:17.056289  4593 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:35:17.056293  4593 net.cpp:139] Memory required for data: 29114800
I0428 20:35:17.056295  4593 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:17.056303  4593 net.cpp:86] Creating Layer conv1
I0428 20:35:17.056308  4593 net.cpp:408] conv1 <- pool0
I0428 20:35:17.056313  4593 net.cpp:382] conv1 -> conv1
I0428 20:35:17.059496  4593 net.cpp:124] Setting up conv1
I0428 20:35:17.059525  4593 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:35:17.059528  4593 net.cpp:139] Memory required for data: 30394800
I0428 20:35:17.059536  4593 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:17.059542  4593 net.cpp:86] Creating Layer pool1
I0428 20:35:17.059546  4593 net.cpp:408] pool1 <- conv1
I0428 20:35:17.059551  4593 net.cpp:382] pool1 -> pool1
I0428 20:35:17.059614  4593 net.cpp:124] Setting up pool1
I0428 20:35:17.059619  4593 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:35:17.059638  4593 net.cpp:139] Memory required for data: 30714800
I0428 20:35:17.059646  4593 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:17.059653  4593 net.cpp:86] Creating Layer ip1
I0428 20:35:17.059656  4593 net.cpp:408] ip1 <- pool1
I0428 20:35:17.059666  4593 net.cpp:382] ip1 -> ip1
I0428 20:35:17.059811  4593 net.cpp:124] Setting up ip1
I0428 20:35:17.059830  4593 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:17.059834  4593 net.cpp:139] Memory required for data: 30718800
I0428 20:35:17.059841  4593 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:17.059846  4593 net.cpp:86] Creating Layer relu1
I0428 20:35:17.059850  4593 net.cpp:408] relu1 <- ip1
I0428 20:35:17.059855  4593 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:17.060031  4593 net.cpp:124] Setting up relu1
I0428 20:35:17.060040  4593 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:17.060050  4593 net.cpp:139] Memory required for data: 30722800
I0428 20:35:17.060053  4593 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:17.060062  4593 net.cpp:86] Creating Layer ip2
I0428 20:35:17.060065  4593 net.cpp:408] ip2 <- ip1
I0428 20:35:17.060072  4593 net.cpp:382] ip2 -> ip2
I0428 20:35:17.060175  4593 net.cpp:124] Setting up ip2
I0428 20:35:17.060183  4593 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:35:17.060185  4593 net.cpp:139] Memory required for data: 30742800
I0428 20:35:17.060191  4593 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:17.060197  4593 net.cpp:86] Creating Layer relu2
I0428 20:35:17.060201  4593 net.cpp:408] relu2 <- ip2
I0428 20:35:17.060205  4593 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:17.060384  4593 net.cpp:124] Setting up relu2
I0428 20:35:17.060394  4593 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:35:17.060396  4593 net.cpp:139] Memory required for data: 30762800
I0428 20:35:17.060400  4593 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:17.060406  4593 net.cpp:86] Creating Layer ip3
I0428 20:35:17.060410  4593 net.cpp:408] ip3 <- ip2
I0428 20:35:17.060417  4593 net.cpp:382] ip3 -> ip3
I0428 20:35:17.060533  4593 net.cpp:124] Setting up ip3
I0428 20:35:17.060540  4593 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:17.060544  4593 net.cpp:139] Memory required for data: 30766800
I0428 20:35:17.060550  4593 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:17.060555  4593 net.cpp:86] Creating Layer relu3
I0428 20:35:17.060559  4593 net.cpp:408] relu3 <- ip3
I0428 20:35:17.060561  4593 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:17.061435  4593 net.cpp:124] Setting up relu3
I0428 20:35:17.061460  4593 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:17.061478  4593 net.cpp:139] Memory required for data: 30770800
I0428 20:35:17.061482  4593 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:35:17.061488  4593 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:35:17.061496  4593 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:35:17.061503  4593 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:35:17.061511  4593 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:35:17.061552  4593 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:35:17.061558  4593 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:17.061563  4593 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:17.061566  4593 net.cpp:139] Memory required for data: 30778800
I0428 20:35:17.061569  4593 layer_factory.hpp:77] Creating layer accuracy
I0428 20:35:17.061574  4593 net.cpp:86] Creating Layer accuracy
I0428 20:35:17.061578  4593 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:35:17.061583  4593 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:35:17.061586  4593 net.cpp:382] accuracy -> accuracy
I0428 20:35:17.061594  4593 net.cpp:124] Setting up accuracy
I0428 20:35:17.061604  4593 net.cpp:131] Top shape: (1)
I0428 20:35:17.061607  4593 net.cpp:139] Memory required for data: 30778804
I0428 20:35:17.061610  4593 layer_factory.hpp:77] Creating layer loss
I0428 20:35:17.061619  4593 net.cpp:86] Creating Layer loss
I0428 20:35:17.061626  4593 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:35:17.061630  4593 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:35:17.061635  4593 net.cpp:382] loss -> loss
I0428 20:35:17.061641  4593 layer_factory.hpp:77] Creating layer loss
I0428 20:35:17.061920  4593 net.cpp:124] Setting up loss
I0428 20:35:17.061931  4593 net.cpp:131] Top shape: (1)
I0428 20:35:17.061935  4593 net.cpp:134]     with loss weight 1
I0428 20:35:17.061951  4593 net.cpp:139] Memory required for data: 30778808
I0428 20:35:17.061955  4593 net.cpp:200] loss needs backward computation.
I0428 20:35:17.061960  4593 net.cpp:202] accuracy does not need backward computation.
I0428 20:35:17.061964  4593 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:35:17.061967  4593 net.cpp:200] relu3 needs backward computation.
I0428 20:35:17.061970  4593 net.cpp:200] ip3 needs backward computation.
I0428 20:35:17.061975  4593 net.cpp:200] relu2 needs backward computation.
I0428 20:35:17.061977  4593 net.cpp:200] ip2 needs backward computation.
I0428 20:35:17.061980  4593 net.cpp:200] relu1 needs backward computation.
I0428 20:35:17.061982  4593 net.cpp:200] ip1 needs backward computation.
I0428 20:35:17.061986  4593 net.cpp:200] pool1 needs backward computation.
I0428 20:35:17.061990  4593 net.cpp:200] conv1 needs backward computation.
I0428 20:35:17.061993  4593 net.cpp:200] pool0 needs backward computation.
I0428 20:35:17.061996  4593 net.cpp:200] conv0 needs backward computation.
I0428 20:35:17.062000  4593 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:35:17.062005  4593 net.cpp:202] mnist does not need backward computation.
I0428 20:35:17.062007  4593 net.cpp:244] This network produces output accuracy
I0428 20:35:17.062011  4593 net.cpp:244] This network produces output loss
I0428 20:35:17.062023  4593 net.cpp:257] Network initialization done.
I0428 20:35:17.062098  4593 solver.cpp:56] Solver scaffolding done.
I0428 20:35:17.062525  4593 caffe.cpp:248] Starting Optimization
I0428 20:35:17.062531  4593 solver.cpp:273] Solving LeNet
I0428 20:35:17.062535  4593 solver.cpp:274] Learning Rate Policy: inv
I0428 20:35:17.063493  4593 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:35:17.126514  4593 blocking_queue.cpp:49] Waiting for data
I0428 20:35:17.176002  4603 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:17.177806  4593 solver.cpp:398]     Test net output #0: accuracy = 0.1029
I0428 20:35:17.177857  4593 solver.cpp:398]     Test net output #1: loss = 2.30153 (* 1 = 2.30153 loss)
I0428 20:35:17.182781  4593 solver.cpp:219] Iteration 0 (0 iter/s, 0.120197s/100 iters), loss = 2.29419
I0428 20:35:17.182821  4593 solver.cpp:238]     Train net output #0: loss = 2.29419 (* 1 = 2.29419 loss)
I0428 20:35:17.182833  4593 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:35:17.413802  4593 solver.cpp:219] Iteration 100 (432.941 iter/s, 0.230978s/100 iters), loss = 0.887066
I0428 20:35:17.413830  4593 solver.cpp:238]     Train net output #0: loss = 0.887066 (* 1 = 0.887066 loss)
I0428 20:35:17.413836  4593 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:35:17.642276  4593 solver.cpp:219] Iteration 200 (437.771 iter/s, 0.22843s/100 iters), loss = 0.810857
I0428 20:35:17.642305  4593 solver.cpp:238]     Train net output #0: loss = 0.810857 (* 1 = 0.810857 loss)
I0428 20:35:17.642312  4593 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:35:17.874030  4593 solver.cpp:219] Iteration 300 (431.576 iter/s, 0.231709s/100 iters), loss = 0.634286
I0428 20:35:17.874080  4593 solver.cpp:238]     Train net output #0: loss = 0.634286 (* 1 = 0.634286 loss)
I0428 20:35:17.874088  4593 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:35:18.105006  4593 solver.cpp:219] Iteration 400 (433.067 iter/s, 0.230911s/100 iters), loss = 0.87721
I0428 20:35:18.105044  4593 solver.cpp:238]     Train net output #0: loss = 0.87721 (* 1 = 0.87721 loss)
I0428 20:35:18.105051  4593 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:35:18.338652  4593 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:35:18.446014  4603 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:18.449187  4593 solver.cpp:398]     Test net output #0: accuracy = 0.6594
I0428 20:35:18.449206  4593 solver.cpp:398]     Test net output #1: loss = 0.83839 (* 1 = 0.83839 loss)
I0428 20:35:18.451478  4593 solver.cpp:219] Iteration 500 (288.674 iter/s, 0.346412s/100 iters), loss = 0.928411
I0428 20:35:18.451530  4593 solver.cpp:238]     Train net output #0: loss = 0.928411 (* 1 = 0.928411 loss)
I0428 20:35:18.451536  4593 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:35:18.691309  4593 solver.cpp:219] Iteration 600 (417.053 iter/s, 0.239778s/100 iters), loss = 0.869619
I0428 20:35:18.691355  4593 solver.cpp:238]     Train net output #0: loss = 0.869619 (* 1 = 0.869619 loss)
I0428 20:35:18.691361  4593 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:35:18.932247  4593 solver.cpp:219] Iteration 700 (415.124 iter/s, 0.240892s/100 iters), loss = 0.650806
I0428 20:35:18.932287  4593 solver.cpp:238]     Train net output #0: loss = 0.650806 (* 1 = 0.650806 loss)
I0428 20:35:18.932293  4593 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:35:19.174181  4593 solver.cpp:219] Iteration 800 (413.405 iter/s, 0.241893s/100 iters), loss = 0.732049
I0428 20:35:19.174216  4593 solver.cpp:238]     Train net output #0: loss = 0.732049 (* 1 = 0.732049 loss)
I0428 20:35:19.174221  4593 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:35:19.415611  4593 solver.cpp:219] Iteration 900 (414.286 iter/s, 0.241379s/100 iters), loss = 0.528621
I0428 20:35:19.415650  4593 solver.cpp:238]     Train net output #0: loss = 0.528621 (* 1 = 0.528621 loss)
I0428 20:35:19.415657  4593 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:35:19.495837  4602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:19.652598  4593 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:35:19.657057  4593 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:35:19.659055  4593 solver.cpp:311] Iteration 1000, loss = 0.63994
I0428 20:35:19.659070  4593 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:35:19.768575  4603 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:19.770385  4593 solver.cpp:398]     Test net output #0: accuracy = 0.6747
I0428 20:35:19.770423  4593 solver.cpp:398]     Test net output #1: loss = 0.779778 (* 1 = 0.779778 loss)
I0428 20:35:19.770429  4593 solver.cpp:316] Optimization Done.
I0428 20:35:19.770432  4593 caffe.cpp:259] Optimization Done.
