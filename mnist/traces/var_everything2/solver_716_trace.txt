I0428 19:54:40.579671 28039 caffe.cpp:218] Using GPUs 0
I0428 19:54:40.616374 28039 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:54:41.128142 28039 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test716.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:54:41.128285 28039 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test716.prototxt
I0428 19:54:41.128705 28039 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:54:41.128724 28039 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:54:41.128836 28039 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:41.128918 28039 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:41.129016 28039 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:54:41.129040 28039 net.cpp:86] Creating Layer mnist
I0428 19:54:41.129050 28039 net.cpp:382] mnist -> data
I0428 19:54:41.129071 28039 net.cpp:382] mnist -> label
I0428 19:54:41.130161 28039 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:54:41.132633 28039 net.cpp:124] Setting up mnist
I0428 19:54:41.132653 28039 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:54:41.132659 28039 net.cpp:131] Top shape: 64 (64)
I0428 19:54:41.132663 28039 net.cpp:139] Memory required for data: 200960
I0428 19:54:41.132670 28039 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:41.132688 28039 net.cpp:86] Creating Layer conv0
I0428 19:54:41.132707 28039 net.cpp:408] conv0 <- data
I0428 19:54:41.132722 28039 net.cpp:382] conv0 -> conv0
I0428 19:54:41.422725 28039 net.cpp:124] Setting up conv0
I0428 19:54:41.422755 28039 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:54:41.422760 28039 net.cpp:139] Memory required for data: 938240
I0428 19:54:41.422776 28039 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:41.422791 28039 net.cpp:86] Creating Layer pool0
I0428 19:54:41.422794 28039 net.cpp:408] pool0 <- conv0
I0428 19:54:41.422801 28039 net.cpp:382] pool0 -> pool0
I0428 19:54:41.422854 28039 net.cpp:124] Setting up pool0
I0428 19:54:41.422861 28039 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:54:41.422864 28039 net.cpp:139] Memory required for data: 1122560
I0428 19:54:41.422868 28039 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:41.422879 28039 net.cpp:86] Creating Layer conv1
I0428 19:54:41.422883 28039 net.cpp:408] conv1 <- pool0
I0428 19:54:41.422888 28039 net.cpp:382] conv1 -> conv1
I0428 19:54:41.425848 28039 net.cpp:124] Setting up conv1
I0428 19:54:41.425864 28039 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:54:41.425868 28039 net.cpp:139] Memory required for data: 2760960
I0428 19:54:41.425879 28039 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:41.425886 28039 net.cpp:86] Creating Layer pool1
I0428 19:54:41.425890 28039 net.cpp:408] pool1 <- conv1
I0428 19:54:41.425896 28039 net.cpp:382] pool1 -> pool1
I0428 19:54:41.425937 28039 net.cpp:124] Setting up pool1
I0428 19:54:41.425943 28039 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:54:41.425946 28039 net.cpp:139] Memory required for data: 3170560
I0428 19:54:41.425951 28039 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:41.425962 28039 net.cpp:86] Creating Layer ip1
I0428 19:54:41.425966 28039 net.cpp:408] ip1 <- pool1
I0428 19:54:41.425971 28039 net.cpp:382] ip1 -> ip1
I0428 19:54:41.426175 28039 net.cpp:124] Setting up ip1
I0428 19:54:41.426184 28039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:41.426188 28039 net.cpp:139] Memory required for data: 3173120
I0428 19:54:41.426196 28039 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:41.426203 28039 net.cpp:86] Creating Layer relu1
I0428 19:54:41.426205 28039 net.cpp:408] relu1 <- ip1
I0428 19:54:41.426210 28039 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:41.426389 28039 net.cpp:124] Setting up relu1
I0428 19:54:41.426398 28039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:41.426403 28039 net.cpp:139] Memory required for data: 3175680
I0428 19:54:41.426405 28039 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:41.426412 28039 net.cpp:86] Creating Layer ip2
I0428 19:54:41.426416 28039 net.cpp:408] ip2 <- ip1
I0428 19:54:41.426421 28039 net.cpp:382] ip2 -> ip2
I0428 19:54:41.426524 28039 net.cpp:124] Setting up ip2
I0428 19:54:41.426532 28039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:41.426535 28039 net.cpp:139] Memory required for data: 3178240
I0428 19:54:41.426542 28039 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:41.426548 28039 net.cpp:86] Creating Layer relu2
I0428 19:54:41.426551 28039 net.cpp:408] relu2 <- ip2
I0428 19:54:41.426555 28039 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:41.427336 28039 net.cpp:124] Setting up relu2
I0428 19:54:41.427350 28039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:41.427353 28039 net.cpp:139] Memory required for data: 3180800
I0428 19:54:41.427357 28039 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:41.427366 28039 net.cpp:86] Creating Layer ip3
I0428 19:54:41.427368 28039 net.cpp:408] ip3 <- ip2
I0428 19:54:41.427374 28039 net.cpp:382] ip3 -> ip3
I0428 19:54:41.427482 28039 net.cpp:124] Setting up ip3
I0428 19:54:41.427491 28039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:41.427495 28039 net.cpp:139] Memory required for data: 3183360
I0428 19:54:41.427503 28039 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:41.427508 28039 net.cpp:86] Creating Layer relu3
I0428 19:54:41.427512 28039 net.cpp:408] relu3 <- ip3
I0428 19:54:41.427516 28039 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:41.427698 28039 net.cpp:124] Setting up relu3
I0428 19:54:41.427708 28039 net.cpp:131] Top shape: 64 10 (640)
I0428 19:54:41.427711 28039 net.cpp:139] Memory required for data: 3185920
I0428 19:54:41.427716 28039 layer_factory.hpp:77] Creating layer loss
I0428 19:54:41.427721 28039 net.cpp:86] Creating Layer loss
I0428 19:54:41.427724 28039 net.cpp:408] loss <- ip3
I0428 19:54:41.427728 28039 net.cpp:408] loss <- label
I0428 19:54:41.427734 28039 net.cpp:382] loss -> loss
I0428 19:54:41.427753 28039 layer_factory.hpp:77] Creating layer loss
I0428 19:54:41.428014 28039 net.cpp:124] Setting up loss
I0428 19:54:41.428025 28039 net.cpp:131] Top shape: (1)
I0428 19:54:41.428028 28039 net.cpp:134]     with loss weight 1
I0428 19:54:41.428042 28039 net.cpp:139] Memory required for data: 3185924
I0428 19:54:41.428046 28039 net.cpp:200] loss needs backward computation.
I0428 19:54:41.428050 28039 net.cpp:200] relu3 needs backward computation.
I0428 19:54:41.428055 28039 net.cpp:200] ip3 needs backward computation.
I0428 19:54:41.428057 28039 net.cpp:200] relu2 needs backward computation.
I0428 19:54:41.428061 28039 net.cpp:200] ip2 needs backward computation.
I0428 19:54:41.428063 28039 net.cpp:200] relu1 needs backward computation.
I0428 19:54:41.428066 28039 net.cpp:200] ip1 needs backward computation.
I0428 19:54:41.428071 28039 net.cpp:200] pool1 needs backward computation.
I0428 19:54:41.428073 28039 net.cpp:200] conv1 needs backward computation.
I0428 19:54:41.428077 28039 net.cpp:200] pool0 needs backward computation.
I0428 19:54:41.428081 28039 net.cpp:200] conv0 needs backward computation.
I0428 19:54:41.428084 28039 net.cpp:202] mnist does not need backward computation.
I0428 19:54:41.428087 28039 net.cpp:244] This network produces output loss
I0428 19:54:41.428098 28039 net.cpp:257] Network initialization done.
I0428 19:54:41.428450 28039 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test716.prototxt
I0428 19:54:41.428479 28039 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:54:41.428578 28039 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:54:41.428664 28039 layer_factory.hpp:77] Creating layer mnist
I0428 19:54:41.428712 28039 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:54:41.428726 28039 net.cpp:86] Creating Layer mnist
I0428 19:54:41.428731 28039 net.cpp:382] mnist -> data
I0428 19:54:41.428740 28039 net.cpp:382] mnist -> label
I0428 19:54:41.428836 28039 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:54:41.430867 28039 net.cpp:124] Setting up mnist
I0428 19:54:41.430881 28039 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:54:41.430887 28039 net.cpp:131] Top shape: 100 (100)
I0428 19:54:41.430891 28039 net.cpp:139] Memory required for data: 314000
I0428 19:54:41.430896 28039 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:54:41.430907 28039 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:54:41.430910 28039 net.cpp:408] label_mnist_1_split <- label
I0428 19:54:41.430917 28039 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:54:41.430924 28039 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:54:41.430981 28039 net.cpp:124] Setting up label_mnist_1_split
I0428 19:54:41.430987 28039 net.cpp:131] Top shape: 100 (100)
I0428 19:54:41.430991 28039 net.cpp:131] Top shape: 100 (100)
I0428 19:54:41.430995 28039 net.cpp:139] Memory required for data: 314800
I0428 19:54:41.430999 28039 layer_factory.hpp:77] Creating layer conv0
I0428 19:54:41.431007 28039 net.cpp:86] Creating Layer conv0
I0428 19:54:41.431010 28039 net.cpp:408] conv0 <- data
I0428 19:54:41.431015 28039 net.cpp:382] conv0 -> conv0
I0428 19:54:41.432850 28039 net.cpp:124] Setting up conv0
I0428 19:54:41.432867 28039 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:54:41.432870 28039 net.cpp:139] Memory required for data: 1466800
I0428 19:54:41.432880 28039 layer_factory.hpp:77] Creating layer pool0
I0428 19:54:41.432888 28039 net.cpp:86] Creating Layer pool0
I0428 19:54:41.432893 28039 net.cpp:408] pool0 <- conv0
I0428 19:54:41.432898 28039 net.cpp:382] pool0 -> pool0
I0428 19:54:41.432940 28039 net.cpp:124] Setting up pool0
I0428 19:54:41.432945 28039 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:54:41.432948 28039 net.cpp:139] Memory required for data: 1754800
I0428 19:54:41.432951 28039 layer_factory.hpp:77] Creating layer conv1
I0428 19:54:41.432962 28039 net.cpp:86] Creating Layer conv1
I0428 19:54:41.432965 28039 net.cpp:408] conv1 <- pool0
I0428 19:54:41.432972 28039 net.cpp:382] conv1 -> conv1
I0428 19:54:41.434623 28039 net.cpp:124] Setting up conv1
I0428 19:54:41.434638 28039 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:54:41.434641 28039 net.cpp:139] Memory required for data: 4314800
I0428 19:54:41.434650 28039 layer_factory.hpp:77] Creating layer pool1
I0428 19:54:41.434659 28039 net.cpp:86] Creating Layer pool1
I0428 19:54:41.434662 28039 net.cpp:408] pool1 <- conv1
I0428 19:54:41.434669 28039 net.cpp:382] pool1 -> pool1
I0428 19:54:41.434711 28039 net.cpp:124] Setting up pool1
I0428 19:54:41.434717 28039 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:54:41.434726 28039 net.cpp:139] Memory required for data: 4954800
I0428 19:54:41.434731 28039 layer_factory.hpp:77] Creating layer ip1
I0428 19:54:41.434737 28039 net.cpp:86] Creating Layer ip1
I0428 19:54:41.434741 28039 net.cpp:408] ip1 <- pool1
I0428 19:54:41.434748 28039 net.cpp:382] ip1 -> ip1
I0428 19:54:41.434949 28039 net.cpp:124] Setting up ip1
I0428 19:54:41.434958 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.434973 28039 net.cpp:139] Memory required for data: 4958800
I0428 19:54:41.434981 28039 layer_factory.hpp:77] Creating layer relu1
I0428 19:54:41.434986 28039 net.cpp:86] Creating Layer relu1
I0428 19:54:41.434991 28039 net.cpp:408] relu1 <- ip1
I0428 19:54:41.434998 28039 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:54:41.435184 28039 net.cpp:124] Setting up relu1
I0428 19:54:41.435194 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.435197 28039 net.cpp:139] Memory required for data: 4962800
I0428 19:54:41.435200 28039 layer_factory.hpp:77] Creating layer ip2
I0428 19:54:41.435209 28039 net.cpp:86] Creating Layer ip2
I0428 19:54:41.435212 28039 net.cpp:408] ip2 <- ip1
I0428 19:54:41.435217 28039 net.cpp:382] ip2 -> ip2
I0428 19:54:41.435336 28039 net.cpp:124] Setting up ip2
I0428 19:54:41.435344 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.435348 28039 net.cpp:139] Memory required for data: 4966800
I0428 19:54:41.435354 28039 layer_factory.hpp:77] Creating layer relu2
I0428 19:54:41.435360 28039 net.cpp:86] Creating Layer relu2
I0428 19:54:41.435364 28039 net.cpp:408] relu2 <- ip2
I0428 19:54:41.435367 28039 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:54:41.435581 28039 net.cpp:124] Setting up relu2
I0428 19:54:41.435590 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.435593 28039 net.cpp:139] Memory required for data: 4970800
I0428 19:54:41.435597 28039 layer_factory.hpp:77] Creating layer ip3
I0428 19:54:41.435605 28039 net.cpp:86] Creating Layer ip3
I0428 19:54:41.435607 28039 net.cpp:408] ip3 <- ip2
I0428 19:54:41.435612 28039 net.cpp:382] ip3 -> ip3
I0428 19:54:41.435719 28039 net.cpp:124] Setting up ip3
I0428 19:54:41.435725 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.435729 28039 net.cpp:139] Memory required for data: 4974800
I0428 19:54:41.435737 28039 layer_factory.hpp:77] Creating layer relu3
I0428 19:54:41.435745 28039 net.cpp:86] Creating Layer relu3
I0428 19:54:41.435748 28039 net.cpp:408] relu3 <- ip3
I0428 19:54:41.435758 28039 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:54:41.436591 28039 net.cpp:124] Setting up relu3
I0428 19:54:41.436604 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.436607 28039 net.cpp:139] Memory required for data: 4978800
I0428 19:54:41.436610 28039 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:54:41.436615 28039 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:54:41.436619 28039 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:54:41.436625 28039 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:54:41.436630 28039 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:54:41.436676 28039 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:54:41.436681 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.436684 28039 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:54:41.436687 28039 net.cpp:139] Memory required for data: 4986800
I0428 19:54:41.436691 28039 layer_factory.hpp:77] Creating layer accuracy
I0428 19:54:41.436697 28039 net.cpp:86] Creating Layer accuracy
I0428 19:54:41.436702 28039 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:54:41.436705 28039 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:54:41.436710 28039 net.cpp:382] accuracy -> accuracy
I0428 19:54:41.436717 28039 net.cpp:124] Setting up accuracy
I0428 19:54:41.436722 28039 net.cpp:131] Top shape: (1)
I0428 19:54:41.436724 28039 net.cpp:139] Memory required for data: 4986804
I0428 19:54:41.436728 28039 layer_factory.hpp:77] Creating layer loss
I0428 19:54:41.436733 28039 net.cpp:86] Creating Layer loss
I0428 19:54:41.436738 28039 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:54:41.436740 28039 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:54:41.436744 28039 net.cpp:382] loss -> loss
I0428 19:54:41.436756 28039 layer_factory.hpp:77] Creating layer loss
I0428 19:54:41.437039 28039 net.cpp:124] Setting up loss
I0428 19:54:41.437053 28039 net.cpp:131] Top shape: (1)
I0428 19:54:41.437057 28039 net.cpp:134]     with loss weight 1
I0428 19:54:41.437074 28039 net.cpp:139] Memory required for data: 4986808
I0428 19:54:41.437078 28039 net.cpp:200] loss needs backward computation.
I0428 19:54:41.437083 28039 net.cpp:202] accuracy does not need backward computation.
I0428 19:54:41.437088 28039 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:54:41.437090 28039 net.cpp:200] relu3 needs backward computation.
I0428 19:54:41.437093 28039 net.cpp:200] ip3 needs backward computation.
I0428 19:54:41.437098 28039 net.cpp:200] relu2 needs backward computation.
I0428 19:54:41.437100 28039 net.cpp:200] ip2 needs backward computation.
I0428 19:54:41.437103 28039 net.cpp:200] relu1 needs backward computation.
I0428 19:54:41.437117 28039 net.cpp:200] ip1 needs backward computation.
I0428 19:54:41.437120 28039 net.cpp:200] pool1 needs backward computation.
I0428 19:54:41.437124 28039 net.cpp:200] conv1 needs backward computation.
I0428 19:54:41.437126 28039 net.cpp:200] pool0 needs backward computation.
I0428 19:54:41.437129 28039 net.cpp:200] conv0 needs backward computation.
I0428 19:54:41.437134 28039 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:54:41.437137 28039 net.cpp:202] mnist does not need backward computation.
I0428 19:54:41.437140 28039 net.cpp:244] This network produces output accuracy
I0428 19:54:41.437144 28039 net.cpp:244] This network produces output loss
I0428 19:54:41.437156 28039 net.cpp:257] Network initialization done.
I0428 19:54:41.437199 28039 solver.cpp:56] Solver scaffolding done.
I0428 19:54:41.437562 28039 caffe.cpp:248] Starting Optimization
I0428 19:54:41.437568 28039 solver.cpp:273] Solving LeNet
I0428 19:54:41.437572 28039 solver.cpp:274] Learning Rate Policy: inv
I0428 19:54:41.437862 28039 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:54:41.443671 28039 blocking_queue.cpp:49] Waiting for data
I0428 19:54:41.512637 28046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:41.513226 28039 solver.cpp:398]     Test net output #0: accuracy = 0.1276
I0428 19:54:41.513244 28039 solver.cpp:398]     Test net output #1: loss = 2.29619 (* 1 = 2.29619 loss)
I0428 19:54:41.516882 28039 solver.cpp:219] Iteration 0 (-5.81332e-31 iter/s, 0.079268s/100 iters), loss = 2.29399
I0428 19:54:41.516923 28039 solver.cpp:238]     Train net output #0: loss = 2.29399 (* 1 = 2.29399 loss)
I0428 19:54:41.516935 28039 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:54:41.661576 28039 solver.cpp:219] Iteration 100 (691.342 iter/s, 0.144646s/100 iters), loss = 0.882138
I0428 19:54:41.661622 28039 solver.cpp:238]     Train net output #0: loss = 0.882138 (* 1 = 0.882138 loss)
I0428 19:54:41.661633 28039 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:54:41.831846 28039 solver.cpp:219] Iteration 200 (587.501 iter/s, 0.170212s/100 iters), loss = 0.578208
I0428 19:54:41.831888 28039 solver.cpp:238]     Train net output #0: loss = 0.578208 (* 1 = 0.578208 loss)
I0428 19:54:41.831898 28039 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:54:42.001462 28039 solver.cpp:219] Iteration 300 (589.765 iter/s, 0.169559s/100 iters), loss = 0.495646
I0428 19:54:42.001504 28039 solver.cpp:238]     Train net output #0: loss = 0.495646 (* 1 = 0.495646 loss)
I0428 19:54:42.001516 28039 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:54:42.174645 28039 solver.cpp:219] Iteration 400 (577.615 iter/s, 0.173126s/100 iters), loss = 0.615991
I0428 19:54:42.174691 28039 solver.cpp:238]     Train net output #0: loss = 0.615991 (* 1 = 0.615991 loss)
I0428 19:54:42.174702 28039 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:54:42.349603 28039 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:54:42.411840 28046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:42.413790 28039 solver.cpp:398]     Test net output #0: accuracy = 0.9338
I0428 19:54:42.413830 28039 solver.cpp:398]     Test net output #1: loss = 0.240001 (* 1 = 0.240001 loss)
I0428 19:54:42.415354 28039 solver.cpp:219] Iteration 500 (415.555 iter/s, 0.240642s/100 iters), loss = 0.198435
I0428 19:54:42.415426 28039 solver.cpp:238]     Train net output #0: loss = 0.198435 (* 1 = 0.198435 loss)
I0428 19:54:42.415436 28039 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:54:42.581710 28039 solver.cpp:219] Iteration 600 (601.395 iter/s, 0.16628s/100 iters), loss = 0.209446
I0428 19:54:42.581751 28039 solver.cpp:238]     Train net output #0: loss = 0.209446 (* 1 = 0.209446 loss)
I0428 19:54:42.581761 28039 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:54:42.752718 28039 solver.cpp:219] Iteration 700 (584.957 iter/s, 0.170953s/100 iters), loss = 0.312545
I0428 19:54:42.752768 28039 solver.cpp:238]     Train net output #0: loss = 0.312545 (* 1 = 0.312545 loss)
I0428 19:54:42.752779 28039 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:54:42.924320 28039 solver.cpp:219] Iteration 800 (582.939 iter/s, 0.171545s/100 iters), loss = 0.229681
I0428 19:54:42.924363 28039 solver.cpp:238]     Train net output #0: loss = 0.229681 (* 1 = 0.229681 loss)
I0428 19:54:42.924374 28039 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:54:43.092241 28039 solver.cpp:219] Iteration 900 (595.723 iter/s, 0.167863s/100 iters), loss = 0.153541
I0428 19:54:43.092284 28039 solver.cpp:238]     Train net output #0: loss = 0.153541 (* 1 = 0.153541 loss)
I0428 19:54:43.092295 28039 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:54:43.149435 28045 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:43.262264 28039 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:54:43.264272 28039 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:54:43.265244 28039 solver.cpp:311] Iteration 1000, loss = 0.179438
I0428 19:54:43.265269 28039 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:54:43.341089 28046 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:54:43.341702 28039 solver.cpp:398]     Test net output #0: accuracy = 0.9615
I0428 19:54:43.341725 28039 solver.cpp:398]     Test net output #1: loss = 0.134007 (* 1 = 0.134007 loss)
I0428 19:54:43.341732 28039 solver.cpp:316] Optimization Done.
I0428 19:54:43.341738 28039 caffe.cpp:259] Optimization Done.
