I0428 19:33:46.032445 23201 caffe.cpp:218] Using GPUs 0
I0428 19:33:46.070961 23201 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:46.529623 23201 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test188.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:46.529753 23201 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test188.prototxt
I0428 19:33:46.530164 23201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:46.530184 23201 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:46.530289 23201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:46.530405 23201 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:46.530540 23201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:46.530567 23201 net.cpp:86] Creating Layer mnist
I0428 19:33:46.530578 23201 net.cpp:382] mnist -> data
I0428 19:33:46.530618 23201 net.cpp:382] mnist -> label
I0428 19:33:46.531798 23201 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:46.534034 23201 net.cpp:124] Setting up mnist
I0428 19:33:46.534065 23201 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:46.534073 23201 net.cpp:131] Top shape: 64 (64)
I0428 19:33:46.534078 23201 net.cpp:139] Memory required for data: 200960
I0428 19:33:46.534086 23201 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:46.534106 23201 net.cpp:86] Creating Layer conv0
I0428 19:33:46.534132 23201 net.cpp:408] conv0 <- data
I0428 19:33:46.534148 23201 net.cpp:382] conv0 -> conv0
I0428 19:33:46.759009 23201 net.cpp:124] Setting up conv0
I0428 19:33:46.759037 23201 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:46.759042 23201 net.cpp:139] Memory required for data: 3887360
I0428 19:33:46.759061 23201 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:46.759078 23201 net.cpp:86] Creating Layer pool0
I0428 19:33:46.759104 23201 net.cpp:408] pool0 <- conv0
I0428 19:33:46.759114 23201 net.cpp:382] pool0 -> pool0
I0428 19:33:46.759166 23201 net.cpp:124] Setting up pool0
I0428 19:33:46.759173 23201 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:46.759178 23201 net.cpp:139] Memory required for data: 4808960
I0428 19:33:46.759182 23201 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:46.759193 23201 net.cpp:86] Creating Layer ip1
I0428 19:33:46.759198 23201 net.cpp:408] ip1 <- pool0
I0428 19:33:46.759205 23201 net.cpp:382] ip1 -> ip1
I0428 19:33:46.761075 23201 net.cpp:124] Setting up ip1
I0428 19:33:46.761091 23201 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:46.761098 23201 net.cpp:139] Memory required for data: 4821760
I0428 19:33:46.761111 23201 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:46.761122 23201 net.cpp:86] Creating Layer relu1
I0428 19:33:46.761129 23201 net.cpp:408] relu1 <- ip1
I0428 19:33:46.761137 23201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:46.761366 23201 net.cpp:124] Setting up relu1
I0428 19:33:46.761376 23201 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:46.761381 23201 net.cpp:139] Memory required for data: 4834560
I0428 19:33:46.761386 23201 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:46.761396 23201 net.cpp:86] Creating Layer ip2
I0428 19:33:46.761401 23201 net.cpp:408] ip2 <- ip1
I0428 19:33:46.761409 23201 net.cpp:382] ip2 -> ip2
I0428 19:33:46.761507 23201 net.cpp:124] Setting up ip2
I0428 19:33:46.761515 23201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:46.761520 23201 net.cpp:139] Memory required for data: 4837120
I0428 19:33:46.761531 23201 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:46.761538 23201 net.cpp:86] Creating Layer relu2
I0428 19:33:46.761548 23201 net.cpp:408] relu2 <- ip2
I0428 19:33:46.761555 23201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:46.762315 23201 net.cpp:124] Setting up relu2
I0428 19:33:46.762342 23201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:46.762347 23201 net.cpp:139] Memory required for data: 4839680
I0428 19:33:46.762367 23201 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:46.762377 23201 net.cpp:86] Creating Layer ip3
I0428 19:33:46.762383 23201 net.cpp:408] ip3 <- ip2
I0428 19:33:46.762392 23201 net.cpp:382] ip3 -> ip3
I0428 19:33:46.762492 23201 net.cpp:124] Setting up ip3
I0428 19:33:46.762502 23201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:46.762507 23201 net.cpp:139] Memory required for data: 4842240
I0428 19:33:46.762516 23201 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:46.762526 23201 net.cpp:86] Creating Layer relu3
I0428 19:33:46.762531 23201 net.cpp:408] relu3 <- ip3
I0428 19:33:46.762539 23201 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:46.762706 23201 net.cpp:124] Setting up relu3
I0428 19:33:46.762715 23201 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:46.762720 23201 net.cpp:139] Memory required for data: 4844800
I0428 19:33:46.762725 23201 layer_factory.hpp:77] Creating layer loss
I0428 19:33:46.762734 23201 net.cpp:86] Creating Layer loss
I0428 19:33:46.762739 23201 net.cpp:408] loss <- ip3
I0428 19:33:46.762747 23201 net.cpp:408] loss <- label
I0428 19:33:46.762754 23201 net.cpp:382] loss -> loss
I0428 19:33:46.762776 23201 layer_factory.hpp:77] Creating layer loss
I0428 19:33:46.763005 23201 net.cpp:124] Setting up loss
I0428 19:33:46.763015 23201 net.cpp:131] Top shape: (1)
I0428 19:33:46.763020 23201 net.cpp:134]     with loss weight 1
I0428 19:33:46.763056 23201 net.cpp:139] Memory required for data: 4844804
I0428 19:33:46.763062 23201 net.cpp:200] loss needs backward computation.
I0428 19:33:46.763067 23201 net.cpp:200] relu3 needs backward computation.
I0428 19:33:46.763072 23201 net.cpp:200] ip3 needs backward computation.
I0428 19:33:46.763077 23201 net.cpp:200] relu2 needs backward computation.
I0428 19:33:46.763082 23201 net.cpp:200] ip2 needs backward computation.
I0428 19:33:46.763087 23201 net.cpp:200] relu1 needs backward computation.
I0428 19:33:46.763092 23201 net.cpp:200] ip1 needs backward computation.
I0428 19:33:46.763135 23201 net.cpp:200] pool0 needs backward computation.
I0428 19:33:46.763141 23201 net.cpp:200] conv0 needs backward computation.
I0428 19:33:46.763147 23201 net.cpp:202] mnist does not need backward computation.
I0428 19:33:46.763152 23201 net.cpp:244] This network produces output loss
I0428 19:33:46.763165 23201 net.cpp:257] Network initialization done.
I0428 19:33:46.763485 23201 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test188.prototxt
I0428 19:33:46.763516 23201 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:46.763602 23201 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:46.763694 23201 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:46.763753 23201 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:46.763770 23201 net.cpp:86] Creating Layer mnist
I0428 19:33:46.763778 23201 net.cpp:382] mnist -> data
I0428 19:33:46.763789 23201 net.cpp:382] mnist -> label
I0428 19:33:46.763900 23201 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:46.765097 23201 net.cpp:124] Setting up mnist
I0428 19:33:46.765112 23201 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:46.765121 23201 net.cpp:131] Top shape: 100 (100)
I0428 19:33:46.765126 23201 net.cpp:139] Memory required for data: 314000
I0428 19:33:46.765132 23201 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:46.765146 23201 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:46.765156 23201 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:46.765163 23201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:46.765185 23201 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:46.765259 23201 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:46.765269 23201 net.cpp:131] Top shape: 100 (100)
I0428 19:33:46.765275 23201 net.cpp:131] Top shape: 100 (100)
I0428 19:33:46.765280 23201 net.cpp:139] Memory required for data: 314800
I0428 19:33:46.765327 23201 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:46.765343 23201 net.cpp:86] Creating Layer conv0
I0428 19:33:46.765350 23201 net.cpp:408] conv0 <- data
I0428 19:33:46.765370 23201 net.cpp:382] conv0 -> conv0
I0428 19:33:46.767016 23201 net.cpp:124] Setting up conv0
I0428 19:33:46.767031 23201 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:46.767037 23201 net.cpp:139] Memory required for data: 6074800
I0428 19:33:46.767066 23201 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:46.767076 23201 net.cpp:86] Creating Layer pool0
I0428 19:33:46.767081 23201 net.cpp:408] pool0 <- conv0
I0428 19:33:46.767088 23201 net.cpp:382] pool0 -> pool0
I0428 19:33:46.767128 23201 net.cpp:124] Setting up pool0
I0428 19:33:46.767138 23201 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:46.767143 23201 net.cpp:139] Memory required for data: 7514800
I0428 19:33:46.767148 23201 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:46.767158 23201 net.cpp:86] Creating Layer ip1
I0428 19:33:46.767163 23201 net.cpp:408] ip1 <- pool0
I0428 19:33:46.767170 23201 net.cpp:382] ip1 -> ip1
I0428 19:33:46.769345 23201 net.cpp:124] Setting up ip1
I0428 19:33:46.769359 23201 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:46.769364 23201 net.cpp:139] Memory required for data: 7534800
I0428 19:33:46.769392 23201 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:46.769402 23201 net.cpp:86] Creating Layer relu1
I0428 19:33:46.769407 23201 net.cpp:408] relu1 <- ip1
I0428 19:33:46.769414 23201 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:46.769593 23201 net.cpp:124] Setting up relu1
I0428 19:33:46.769621 23201 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:46.769626 23201 net.cpp:139] Memory required for data: 7554800
I0428 19:33:46.769631 23201 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:46.769639 23201 net.cpp:86] Creating Layer ip2
I0428 19:33:46.769644 23201 net.cpp:408] ip2 <- ip1
I0428 19:33:46.769652 23201 net.cpp:382] ip2 -> ip2
I0428 19:33:46.769781 23201 net.cpp:124] Setting up ip2
I0428 19:33:46.769791 23201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:46.769794 23201 net.cpp:139] Memory required for data: 7558800
I0428 19:33:46.769803 23201 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:46.769809 23201 net.cpp:86] Creating Layer relu2
I0428 19:33:46.769814 23201 net.cpp:408] relu2 <- ip2
I0428 19:33:46.769819 23201 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:46.770666 23201 net.cpp:124] Setting up relu2
I0428 19:33:46.770679 23201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:46.770684 23201 net.cpp:139] Memory required for data: 7562800
I0428 19:33:46.770687 23201 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:46.770695 23201 net.cpp:86] Creating Layer ip3
I0428 19:33:46.770700 23201 net.cpp:408] ip3 <- ip2
I0428 19:33:46.770705 23201 net.cpp:382] ip3 -> ip3
I0428 19:33:46.770936 23201 net.cpp:124] Setting up ip3
I0428 19:33:46.770946 23201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:46.770949 23201 net.cpp:139] Memory required for data: 7566800
I0428 19:33:46.770954 23201 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:46.770965 23201 net.cpp:86] Creating Layer relu3
I0428 19:33:46.770969 23201 net.cpp:408] relu3 <- ip3
I0428 19:33:46.770974 23201 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:46.771174 23201 net.cpp:124] Setting up relu3
I0428 19:33:46.771184 23201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:46.771193 23201 net.cpp:139] Memory required for data: 7570800
I0428 19:33:46.771198 23201 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:46.771203 23201 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:46.771205 23201 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:46.771210 23201 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:46.771216 23201 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:46.771251 23201 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:46.771257 23201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:46.771261 23201 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:46.771275 23201 net.cpp:139] Memory required for data: 7578800
I0428 19:33:46.771278 23201 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:46.771283 23201 net.cpp:86] Creating Layer accuracy
I0428 19:33:46.771287 23201 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:46.771291 23201 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:46.771296 23201 net.cpp:382] accuracy -> accuracy
I0428 19:33:46.771304 23201 net.cpp:124] Setting up accuracy
I0428 19:33:46.771309 23201 net.cpp:131] Top shape: (1)
I0428 19:33:46.771312 23201 net.cpp:139] Memory required for data: 7578804
I0428 19:33:46.771314 23201 layer_factory.hpp:77] Creating layer loss
I0428 19:33:46.771319 23201 net.cpp:86] Creating Layer loss
I0428 19:33:46.771322 23201 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:46.771327 23201 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:46.771330 23201 net.cpp:382] loss -> loss
I0428 19:33:46.771342 23201 layer_factory.hpp:77] Creating layer loss
I0428 19:33:46.771605 23201 net.cpp:124] Setting up loss
I0428 19:33:46.771615 23201 net.cpp:131] Top shape: (1)
I0428 19:33:46.771620 23201 net.cpp:134]     with loss weight 1
I0428 19:33:46.771626 23201 net.cpp:139] Memory required for data: 7578808
I0428 19:33:46.771630 23201 net.cpp:200] loss needs backward computation.
I0428 19:33:46.771633 23201 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:46.771637 23201 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:46.771641 23201 net.cpp:200] relu3 needs backward computation.
I0428 19:33:46.771644 23201 net.cpp:200] ip3 needs backward computation.
I0428 19:33:46.771647 23201 net.cpp:200] relu2 needs backward computation.
I0428 19:33:46.771656 23201 net.cpp:200] ip2 needs backward computation.
I0428 19:33:46.771659 23201 net.cpp:200] relu1 needs backward computation.
I0428 19:33:46.771662 23201 net.cpp:200] ip1 needs backward computation.
I0428 19:33:46.771666 23201 net.cpp:200] pool0 needs backward computation.
I0428 19:33:46.771668 23201 net.cpp:200] conv0 needs backward computation.
I0428 19:33:46.771672 23201 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:46.771677 23201 net.cpp:202] mnist does not need backward computation.
I0428 19:33:46.771679 23201 net.cpp:244] This network produces output accuracy
I0428 19:33:46.771683 23201 net.cpp:244] This network produces output loss
I0428 19:33:46.771693 23201 net.cpp:257] Network initialization done.
I0428 19:33:46.771729 23201 solver.cpp:56] Solver scaffolding done.
I0428 19:33:46.772073 23201 caffe.cpp:248] Starting Optimization
I0428 19:33:46.772078 23201 solver.cpp:273] Solving LeNet
I0428 19:33:46.772081 23201 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:46.772910 23201 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:46.779597 23201 blocking_queue.cpp:49] Waiting for data
I0428 19:33:46.851339 23208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:46.852125 23201 solver.cpp:398]     Test net output #0: accuracy = 0.1041
I0428 19:33:46.852144 23201 solver.cpp:398]     Test net output #1: loss = 2.3164 (* 1 = 2.3164 loss)
I0428 19:33:46.855801 23201 solver.cpp:219] Iteration 0 (0 iter/s, 0.0836944s/100 iters), loss = 2.30859
I0428 19:33:46.855825 23201 solver.cpp:238]     Train net output #0: loss = 2.30859 (* 1 = 2.30859 loss)
I0428 19:33:46.855835 23201 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:46.961256 23201 solver.cpp:219] Iteration 100 (948.607 iter/s, 0.105418s/100 iters), loss = 0.775907
I0428 19:33:46.961294 23201 solver.cpp:238]     Train net output #0: loss = 0.775907 (* 1 = 0.775907 loss)
I0428 19:33:46.961300 23201 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:47.066754 23201 solver.cpp:219] Iteration 200 (948.193 iter/s, 0.105464s/100 iters), loss = 0.303137
I0428 19:33:47.066779 23201 solver.cpp:238]     Train net output #0: loss = 0.303137 (* 1 = 0.303137 loss)
I0428 19:33:47.066786 23201 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:47.171448 23201 solver.cpp:219] Iteration 300 (955.484 iter/s, 0.104659s/100 iters), loss = 0.178247
I0428 19:33:47.171488 23201 solver.cpp:238]     Train net output #0: loss = 0.178247 (* 1 = 0.178247 loss)
I0428 19:33:47.171505 23201 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:47.275461 23201 solver.cpp:219] Iteration 400 (961.875 iter/s, 0.103964s/100 iters), loss = 0.152275
I0428 19:33:47.275501 23201 solver.cpp:238]     Train net output #0: loss = 0.152275 (* 1 = 0.152275 loss)
I0428 19:33:47.275508 23201 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:47.375910 23201 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:47.441612 23208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:47.443333 23201 solver.cpp:398]     Test net output #0: accuracy = 0.9445
I0428 19:33:47.443352 23201 solver.cpp:398]     Test net output #1: loss = 0.181878 (* 1 = 0.181878 loss)
I0428 19:33:47.444298 23201 solver.cpp:219] Iteration 500 (592.42 iter/s, 0.168799s/100 iters), loss = 0.344578
I0428 19:33:47.444334 23201 solver.cpp:238]     Train net output #0: loss = 0.344578 (* 1 = 0.344578 loss)
I0428 19:33:47.444355 23201 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:47.549681 23201 solver.cpp:219] Iteration 600 (949.335 iter/s, 0.105337s/100 iters), loss = 0.156026
I0428 19:33:47.549724 23201 solver.cpp:238]     Train net output #0: loss = 0.156026 (* 1 = 0.156026 loss)
I0428 19:33:47.549731 23201 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:47.653792 23201 solver.cpp:219] Iteration 700 (960.873 iter/s, 0.104072s/100 iters), loss = 0.339399
I0428 19:33:47.653833 23201 solver.cpp:238]     Train net output #0: loss = 0.339399 (* 1 = 0.339399 loss)
I0428 19:33:47.653841 23201 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:47.755836 23201 solver.cpp:219] Iteration 800 (980.455 iter/s, 0.101993s/100 iters), loss = 0.394617
I0428 19:33:47.755875 23201 solver.cpp:238]     Train net output #0: loss = 0.394618 (* 1 = 0.394618 loss)
I0428 19:33:47.755882 23201 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:47.857877 23201 solver.cpp:219] Iteration 900 (980.317 iter/s, 0.102008s/100 iters), loss = 0.205786
I0428 19:33:47.857918 23201 solver.cpp:238]     Train net output #0: loss = 0.205786 (* 1 = 0.205786 loss)
I0428 19:33:47.857924 23201 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:47.893951 23207 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:47.960626 23201 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:47.964537 23201 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:47.966483 23201 solver.cpp:311] Iteration 1000, loss = 0.145911
I0428 19:33:47.966497 23201 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:48.036790 23208 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:48.037823 23201 solver.cpp:398]     Test net output #0: accuracy = 0.9634
I0428 19:33:48.037858 23201 solver.cpp:398]     Test net output #1: loss = 0.116535 (* 1 = 0.116535 loss)
I0428 19:33:48.037863 23201 solver.cpp:316] Optimization Done.
I0428 19:33:48.037866 23201 caffe.cpp:259] Optimization Done.
