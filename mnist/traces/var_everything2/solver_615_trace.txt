I0428 19:50:48.112092 27127 caffe.cpp:218] Using GPUs 0
I0428 19:50:48.149494 27127 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:50:48.665210 27127 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test615.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:50:48.665343 27127 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test615.prototxt
I0428 19:50:48.665745 27127 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:50:48.665763 27127 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:50:48.665859 27127 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:48.665931 27127 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:48.666029 27127 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:50:48.666052 27127 net.cpp:86] Creating Layer mnist
I0428 19:50:48.666060 27127 net.cpp:382] mnist -> data
I0428 19:50:48.666082 27127 net.cpp:382] mnist -> label
I0428 19:50:48.667174 27127 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:50:48.669613 27127 net.cpp:124] Setting up mnist
I0428 19:50:48.669631 27127 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:50:48.669636 27127 net.cpp:131] Top shape: 64 (64)
I0428 19:50:48.669641 27127 net.cpp:139] Memory required for data: 200960
I0428 19:50:48.669649 27127 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:48.669664 27127 net.cpp:86] Creating Layer conv0
I0428 19:50:48.669684 27127 net.cpp:408] conv0 <- data
I0428 19:50:48.669697 27127 net.cpp:382] conv0 -> conv0
I0428 19:50:48.984779 27127 net.cpp:124] Setting up conv0
I0428 19:50:48.984818 27127 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:50:48.984823 27127 net.cpp:139] Memory required for data: 938240
I0428 19:50:48.984843 27127 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:48.984861 27127 net.cpp:86] Creating Layer pool0
I0428 19:50:48.984866 27127 net.cpp:408] pool0 <- conv0
I0428 19:50:48.984872 27127 net.cpp:382] pool0 -> pool0
I0428 19:50:48.984927 27127 net.cpp:124] Setting up pool0
I0428 19:50:48.984935 27127 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:50:48.984937 27127 net.cpp:139] Memory required for data: 1122560
I0428 19:50:48.984941 27127 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:48.984954 27127 net.cpp:86] Creating Layer conv1
I0428 19:50:48.984958 27127 net.cpp:408] conv1 <- pool0
I0428 19:50:48.984964 27127 net.cpp:382] conv1 -> conv1
I0428 19:50:48.988082 27127 net.cpp:124] Setting up conv1
I0428 19:50:48.988101 27127 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:50:48.988104 27127 net.cpp:139] Memory required for data: 1286400
I0428 19:50:48.988116 27127 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:48.988124 27127 net.cpp:86] Creating Layer pool1
I0428 19:50:48.988129 27127 net.cpp:408] pool1 <- conv1
I0428 19:50:48.988135 27127 net.cpp:382] pool1 -> pool1
I0428 19:50:48.988188 27127 net.cpp:124] Setting up pool1
I0428 19:50:48.988194 27127 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:50:48.988198 27127 net.cpp:139] Memory required for data: 1327360
I0428 19:50:48.988201 27127 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:48.988210 27127 net.cpp:86] Creating Layer ip1
I0428 19:50:48.988214 27127 net.cpp:408] ip1 <- pool1
I0428 19:50:48.988219 27127 net.cpp:382] ip1 -> ip1
I0428 19:50:48.989367 27127 net.cpp:124] Setting up ip1
I0428 19:50:48.989382 27127 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:48.989387 27127 net.cpp:139] Memory required for data: 1340160
I0428 19:50:48.989398 27127 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:48.989404 27127 net.cpp:86] Creating Layer relu1
I0428 19:50:48.989408 27127 net.cpp:408] relu1 <- ip1
I0428 19:50:48.989414 27127 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:48.989615 27127 net.cpp:124] Setting up relu1
I0428 19:50:48.989625 27127 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:50:48.989629 27127 net.cpp:139] Memory required for data: 1352960
I0428 19:50:48.989634 27127 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:48.989641 27127 net.cpp:86] Creating Layer ip2
I0428 19:50:48.989645 27127 net.cpp:408] ip2 <- ip1
I0428 19:50:48.989651 27127 net.cpp:382] ip2 -> ip2
I0428 19:50:48.989764 27127 net.cpp:124] Setting up ip2
I0428 19:50:48.989773 27127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:48.989776 27127 net.cpp:139] Memory required for data: 1355520
I0428 19:50:48.989783 27127 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:48.989789 27127 net.cpp:86] Creating Layer relu2
I0428 19:50:48.989794 27127 net.cpp:408] relu2 <- ip2
I0428 19:50:48.989799 27127 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:48.990651 27127 net.cpp:124] Setting up relu2
I0428 19:50:48.990666 27127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:48.990670 27127 net.cpp:139] Memory required for data: 1358080
I0428 19:50:48.990674 27127 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:48.990682 27127 net.cpp:86] Creating Layer ip3
I0428 19:50:48.990686 27127 net.cpp:408] ip3 <- ip2
I0428 19:50:48.990692 27127 net.cpp:382] ip3 -> ip3
I0428 19:50:48.990808 27127 net.cpp:124] Setting up ip3
I0428 19:50:48.990816 27127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:48.990820 27127 net.cpp:139] Memory required for data: 1360640
I0428 19:50:48.990829 27127 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:48.990835 27127 net.cpp:86] Creating Layer relu3
I0428 19:50:48.990839 27127 net.cpp:408] relu3 <- ip3
I0428 19:50:48.990844 27127 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:48.991042 27127 net.cpp:124] Setting up relu3
I0428 19:50:48.991060 27127 net.cpp:131] Top shape: 64 10 (640)
I0428 19:50:48.991065 27127 net.cpp:139] Memory required for data: 1363200
I0428 19:50:48.991068 27127 layer_factory.hpp:77] Creating layer loss
I0428 19:50:48.991080 27127 net.cpp:86] Creating Layer loss
I0428 19:50:48.991084 27127 net.cpp:408] loss <- ip3
I0428 19:50:48.991089 27127 net.cpp:408] loss <- label
I0428 19:50:48.991096 27127 net.cpp:382] loss -> loss
I0428 19:50:48.991111 27127 layer_factory.hpp:77] Creating layer loss
I0428 19:50:48.991375 27127 net.cpp:124] Setting up loss
I0428 19:50:48.991386 27127 net.cpp:131] Top shape: (1)
I0428 19:50:48.991390 27127 net.cpp:134]     with loss weight 1
I0428 19:50:48.991407 27127 net.cpp:139] Memory required for data: 1363204
I0428 19:50:48.991411 27127 net.cpp:200] loss needs backward computation.
I0428 19:50:48.991415 27127 net.cpp:200] relu3 needs backward computation.
I0428 19:50:48.991420 27127 net.cpp:200] ip3 needs backward computation.
I0428 19:50:48.991423 27127 net.cpp:200] relu2 needs backward computation.
I0428 19:50:48.991426 27127 net.cpp:200] ip2 needs backward computation.
I0428 19:50:48.991430 27127 net.cpp:200] relu1 needs backward computation.
I0428 19:50:48.991433 27127 net.cpp:200] ip1 needs backward computation.
I0428 19:50:48.991437 27127 net.cpp:200] pool1 needs backward computation.
I0428 19:50:48.991441 27127 net.cpp:200] conv1 needs backward computation.
I0428 19:50:48.991444 27127 net.cpp:200] pool0 needs backward computation.
I0428 19:50:48.991448 27127 net.cpp:200] conv0 needs backward computation.
I0428 19:50:48.991452 27127 net.cpp:202] mnist does not need backward computation.
I0428 19:50:48.991456 27127 net.cpp:244] This network produces output loss
I0428 19:50:48.991466 27127 net.cpp:257] Network initialization done.
I0428 19:50:48.991852 27127 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test615.prototxt
I0428 19:50:48.991884 27127 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:50:48.991991 27127 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:50:48.992085 27127 layer_factory.hpp:77] Creating layer mnist
I0428 19:50:48.992136 27127 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:50:48.992151 27127 net.cpp:86] Creating Layer mnist
I0428 19:50:48.992156 27127 net.cpp:382] mnist -> data
I0428 19:50:48.992164 27127 net.cpp:382] mnist -> label
I0428 19:50:48.992264 27127 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:50:48.994668 27127 net.cpp:124] Setting up mnist
I0428 19:50:48.994684 27127 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:50:48.994690 27127 net.cpp:131] Top shape: 100 (100)
I0428 19:50:48.994694 27127 net.cpp:139] Memory required for data: 314000
I0428 19:50:48.994699 27127 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:50:48.994707 27127 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:50:48.994711 27127 net.cpp:408] label_mnist_1_split <- label
I0428 19:50:48.994717 27127 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:50:48.994725 27127 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:50:48.994822 27127 net.cpp:124] Setting up label_mnist_1_split
I0428 19:50:48.994832 27127 net.cpp:131] Top shape: 100 (100)
I0428 19:50:48.994837 27127 net.cpp:131] Top shape: 100 (100)
I0428 19:50:48.994840 27127 net.cpp:139] Memory required for data: 314800
I0428 19:50:48.994844 27127 layer_factory.hpp:77] Creating layer conv0
I0428 19:50:48.994854 27127 net.cpp:86] Creating Layer conv0
I0428 19:50:48.994858 27127 net.cpp:408] conv0 <- data
I0428 19:50:48.994864 27127 net.cpp:382] conv0 -> conv0
I0428 19:50:48.996533 27127 net.cpp:124] Setting up conv0
I0428 19:50:48.996551 27127 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:50:48.996556 27127 net.cpp:139] Memory required for data: 1466800
I0428 19:50:48.996567 27127 layer_factory.hpp:77] Creating layer pool0
I0428 19:50:48.996575 27127 net.cpp:86] Creating Layer pool0
I0428 19:50:48.996582 27127 net.cpp:408] pool0 <- conv0
I0428 19:50:48.996587 27127 net.cpp:382] pool0 -> pool0
I0428 19:50:48.996634 27127 net.cpp:124] Setting up pool0
I0428 19:50:48.996639 27127 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:50:48.996644 27127 net.cpp:139] Memory required for data: 1754800
I0428 19:50:48.996647 27127 layer_factory.hpp:77] Creating layer conv1
I0428 19:50:48.996657 27127 net.cpp:86] Creating Layer conv1
I0428 19:50:48.996661 27127 net.cpp:408] conv1 <- pool0
I0428 19:50:48.996667 27127 net.cpp:382] conv1 -> conv1
I0428 19:50:48.998991 27127 net.cpp:124] Setting up conv1
I0428 19:50:48.999006 27127 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:50:48.999011 27127 net.cpp:139] Memory required for data: 2010800
I0428 19:50:48.999020 27127 layer_factory.hpp:77] Creating layer pool1
I0428 19:50:48.999028 27127 net.cpp:86] Creating Layer pool1
I0428 19:50:48.999032 27127 net.cpp:408] pool1 <- conv1
I0428 19:50:48.999038 27127 net.cpp:382] pool1 -> pool1
I0428 19:50:48.999125 27127 net.cpp:124] Setting up pool1
I0428 19:50:48.999133 27127 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:50:48.999137 27127 net.cpp:139] Memory required for data: 2074800
I0428 19:50:48.999140 27127 layer_factory.hpp:77] Creating layer ip1
I0428 19:50:48.999147 27127 net.cpp:86] Creating Layer ip1
I0428 19:50:48.999151 27127 net.cpp:408] ip1 <- pool1
I0428 19:50:48.999158 27127 net.cpp:382] ip1 -> ip1
I0428 19:50:48.999330 27127 net.cpp:124] Setting up ip1
I0428 19:50:48.999338 27127 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:48.999361 27127 net.cpp:139] Memory required for data: 2094800
I0428 19:50:48.999372 27127 layer_factory.hpp:77] Creating layer relu1
I0428 19:50:48.999378 27127 net.cpp:86] Creating Layer relu1
I0428 19:50:48.999382 27127 net.cpp:408] relu1 <- ip1
I0428 19:50:48.999388 27127 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:50:48.999611 27127 net.cpp:124] Setting up relu1
I0428 19:50:48.999621 27127 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:50:48.999625 27127 net.cpp:139] Memory required for data: 2114800
I0428 19:50:48.999629 27127 layer_factory.hpp:77] Creating layer ip2
I0428 19:50:48.999639 27127 net.cpp:86] Creating Layer ip2
I0428 19:50:48.999641 27127 net.cpp:408] ip2 <- ip1
I0428 19:50:48.999647 27127 net.cpp:382] ip2 -> ip2
I0428 19:50:48.999768 27127 net.cpp:124] Setting up ip2
I0428 19:50:48.999775 27127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:48.999779 27127 net.cpp:139] Memory required for data: 2118800
I0428 19:50:48.999785 27127 layer_factory.hpp:77] Creating layer relu2
I0428 19:50:48.999791 27127 net.cpp:86] Creating Layer relu2
I0428 19:50:48.999795 27127 net.cpp:408] relu2 <- ip2
I0428 19:50:48.999800 27127 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:50:48.999979 27127 net.cpp:124] Setting up relu2
I0428 19:50:48.999989 27127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:48.999992 27127 net.cpp:139] Memory required for data: 2122800
I0428 19:50:48.999996 27127 layer_factory.hpp:77] Creating layer ip3
I0428 19:50:49.000003 27127 net.cpp:86] Creating Layer ip3
I0428 19:50:49.000007 27127 net.cpp:408] ip3 <- ip2
I0428 19:50:49.000013 27127 net.cpp:382] ip3 -> ip3
I0428 19:50:49.000133 27127 net.cpp:124] Setting up ip3
I0428 19:50:49.000143 27127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:49.000145 27127 net.cpp:139] Memory required for data: 2126800
I0428 19:50:49.000154 27127 layer_factory.hpp:77] Creating layer relu3
I0428 19:50:49.000161 27127 net.cpp:86] Creating Layer relu3
I0428 19:50:49.000164 27127 net.cpp:408] relu3 <- ip3
I0428 19:50:49.000170 27127 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:50:49.001046 27127 net.cpp:124] Setting up relu3
I0428 19:50:49.001063 27127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:49.001067 27127 net.cpp:139] Memory required for data: 2130800
I0428 19:50:49.001071 27127 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:50:49.001077 27127 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:50:49.001081 27127 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:50:49.001086 27127 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:50:49.001094 27127 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:50:49.001142 27127 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:50:49.001147 27127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:49.001152 27127 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:50:49.001154 27127 net.cpp:139] Memory required for data: 2138800
I0428 19:50:49.001158 27127 layer_factory.hpp:77] Creating layer accuracy
I0428 19:50:49.001168 27127 net.cpp:86] Creating Layer accuracy
I0428 19:50:49.001170 27127 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:50:49.001175 27127 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:50:49.001180 27127 net.cpp:382] accuracy -> accuracy
I0428 19:50:49.001188 27127 net.cpp:124] Setting up accuracy
I0428 19:50:49.001193 27127 net.cpp:131] Top shape: (1)
I0428 19:50:49.001196 27127 net.cpp:139] Memory required for data: 2138804
I0428 19:50:49.001199 27127 layer_factory.hpp:77] Creating layer loss
I0428 19:50:49.001205 27127 net.cpp:86] Creating Layer loss
I0428 19:50:49.001209 27127 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:50:49.001214 27127 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:50:49.001219 27127 net.cpp:382] loss -> loss
I0428 19:50:49.001225 27127 layer_factory.hpp:77] Creating layer loss
I0428 19:50:49.001510 27127 net.cpp:124] Setting up loss
I0428 19:50:49.001520 27127 net.cpp:131] Top shape: (1)
I0428 19:50:49.001524 27127 net.cpp:134]     with loss weight 1
I0428 19:50:49.001530 27127 net.cpp:139] Memory required for data: 2138808
I0428 19:50:49.001546 27127 net.cpp:200] loss needs backward computation.
I0428 19:50:49.001552 27127 net.cpp:202] accuracy does not need backward computation.
I0428 19:50:49.001557 27127 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:50:49.001561 27127 net.cpp:200] relu3 needs backward computation.
I0428 19:50:49.001564 27127 net.cpp:200] ip3 needs backward computation.
I0428 19:50:49.001569 27127 net.cpp:200] relu2 needs backward computation.
I0428 19:50:49.001571 27127 net.cpp:200] ip2 needs backward computation.
I0428 19:50:49.001581 27127 net.cpp:200] relu1 needs backward computation.
I0428 19:50:49.001585 27127 net.cpp:200] ip1 needs backward computation.
I0428 19:50:49.001588 27127 net.cpp:200] pool1 needs backward computation.
I0428 19:50:49.001592 27127 net.cpp:200] conv1 needs backward computation.
I0428 19:50:49.001595 27127 net.cpp:200] pool0 needs backward computation.
I0428 19:50:49.001600 27127 net.cpp:200] conv0 needs backward computation.
I0428 19:50:49.001603 27127 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:50:49.001608 27127 net.cpp:202] mnist does not need backward computation.
I0428 19:50:49.001611 27127 net.cpp:244] This network produces output accuracy
I0428 19:50:49.001616 27127 net.cpp:244] This network produces output loss
I0428 19:50:49.001628 27127 net.cpp:257] Network initialization done.
I0428 19:50:49.001678 27127 solver.cpp:56] Solver scaffolding done.
I0428 19:50:49.002077 27127 caffe.cpp:248] Starting Optimization
I0428 19:50:49.002087 27127 solver.cpp:273] Solving LeNet
I0428 19:50:49.002090 27127 solver.cpp:274] Learning Rate Policy: inv
I0428 19:50:49.002949 27127 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:50:49.007872 27127 blocking_queue.cpp:49] Waiting for data
I0428 19:50:49.056903 27134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:49.057417 27127 solver.cpp:398]     Test net output #0: accuracy = 0.0919
I0428 19:50:49.057441 27127 solver.cpp:398]     Test net output #1: loss = 2.31845 (* 1 = 2.31845 loss)
I0428 19:50:49.059404 27127 solver.cpp:219] Iteration 0 (3.97392 iter/s, 0.0572856s/100 iters), loss = 2.32285
I0428 19:50:49.059432 27127 solver.cpp:238]     Train net output #0: loss = 2.32285 (* 1 = 2.32285 loss)
I0428 19:50:49.059445 27127 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:50:49.139340 27127 solver.cpp:219] Iteration 100 (1251.66 iter/s, 0.0798936s/100 iters), loss = 0.711574
I0428 19:50:49.139372 27127 solver.cpp:238]     Train net output #0: loss = 0.711574 (* 1 = 0.711574 loss)
I0428 19:50:49.139380 27127 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:50:49.218987 27127 solver.cpp:219] Iteration 200 (1256.24 iter/s, 0.0796026s/100 iters), loss = 0.253741
I0428 19:50:49.219017 27127 solver.cpp:238]     Train net output #0: loss = 0.253741 (* 1 = 0.253741 loss)
I0428 19:50:49.219025 27127 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:50:49.298941 27127 solver.cpp:219] Iteration 300 (1251.33 iter/s, 0.079915s/100 iters), loss = 0.244736
I0428 19:50:49.298970 27127 solver.cpp:238]     Train net output #0: loss = 0.244736 (* 1 = 0.244736 loss)
I0428 19:50:49.298977 27127 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:50:49.377640 27127 solver.cpp:219] Iteration 400 (1271.28 iter/s, 0.0786606s/100 iters), loss = 0.159066
I0428 19:50:49.377668 27127 solver.cpp:238]     Train net output #0: loss = 0.159066 (* 1 = 0.159066 loss)
I0428 19:50:49.377676 27127 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:50:49.454282 27127 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:50:49.529400 27134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:49.530012 27127 solver.cpp:398]     Test net output #0: accuracy = 0.9466
I0428 19:50:49.530046 27127 solver.cpp:398]     Test net output #1: loss = 0.166141 (* 1 = 0.166141 loss)
I0428 19:50:49.531021 27127 solver.cpp:219] Iteration 500 (652.15 iter/s, 0.153339s/100 iters), loss = 0.122178
I0428 19:50:49.531057 27127 solver.cpp:238]     Train net output #0: loss = 0.122178 (* 1 = 0.122178 loss)
I0428 19:50:49.531090 27127 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:50:49.614751 27127 solver.cpp:219] Iteration 600 (1194.95 iter/s, 0.0836854s/100 iters), loss = 0.0795425
I0428 19:50:49.614783 27127 solver.cpp:238]     Train net output #0: loss = 0.0795423 (* 1 = 0.0795423 loss)
I0428 19:50:49.614789 27127 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:50:49.706847 27127 solver.cpp:219] Iteration 700 (1086.34 iter/s, 0.0920524s/100 iters), loss = 0.276859
I0428 19:50:49.706897 27127 solver.cpp:238]     Train net output #0: loss = 0.276859 (* 1 = 0.276859 loss)
I0428 19:50:49.706908 27127 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:50:49.796033 27127 solver.cpp:219] Iteration 800 (1121.96 iter/s, 0.08913s/100 iters), loss = 0.205882
I0428 19:50:49.796066 27127 solver.cpp:238]     Train net output #0: loss = 0.205882 (* 1 = 0.205882 loss)
I0428 19:50:49.796073 27127 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:50:49.876163 27127 solver.cpp:219] Iteration 900 (1248.63 iter/s, 0.0800881s/100 iters), loss = 0.243368
I0428 19:50:49.876194 27127 solver.cpp:238]     Train net output #0: loss = 0.243368 (* 1 = 0.243368 loss)
I0428 19:50:49.876201 27127 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:50:49.903043 27133 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:49.956056 27127 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:50:49.956969 27127 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:50:49.957471 27127 solver.cpp:311] Iteration 1000, loss = 0.112106
I0428 19:50:49.957490 27127 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:50:50.034102 27134 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:50:50.034669 27127 solver.cpp:398]     Test net output #0: accuracy = 0.9702
I0428 19:50:50.034693 27127 solver.cpp:398]     Test net output #1: loss = 0.0940167 (* 1 = 0.0940167 loss)
I0428 19:50:50.034699 27127 solver.cpp:316] Optimization Done.
I0428 19:50:50.034703 27127 caffe.cpp:259] Optimization Done.
