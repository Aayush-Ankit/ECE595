I0428 19:56:54.840536 28550 caffe.cpp:218] Using GPUs 0
I0428 19:56:54.875074 28550 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:56:55.341245 28550 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test773.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:56:55.341408 28550 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test773.prototxt
I0428 19:56:55.341778 28550 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:56:55.341809 28550 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:56:55.341888 28550 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:55.341948 28550 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:55.342031 28550 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:56:55.342051 28550 net.cpp:86] Creating Layer mnist
I0428 19:56:55.342056 28550 net.cpp:382] mnist -> data
I0428 19:56:55.342075 28550 net.cpp:382] mnist -> label
I0428 19:56:55.343065 28550 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:56:55.345238 28550 net.cpp:124] Setting up mnist
I0428 19:56:55.345268 28550 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:56:55.345273 28550 net.cpp:131] Top shape: 64 (64)
I0428 19:56:55.345276 28550 net.cpp:139] Memory required for data: 200960
I0428 19:56:55.345281 28550 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:55.345294 28550 net.cpp:86] Creating Layer conv0
I0428 19:56:55.345310 28550 net.cpp:408] conv0 <- data
I0428 19:56:55.345320 28550 net.cpp:382] conv0 -> conv0
I0428 19:56:55.565985 28550 net.cpp:124] Setting up conv0
I0428 19:56:55.566012 28550 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:56:55.566015 28550 net.cpp:139] Memory required for data: 1675520
I0428 19:56:55.566030 28550 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:55.566041 28550 net.cpp:86] Creating Layer pool0
I0428 19:56:55.566045 28550 net.cpp:408] pool0 <- conv0
I0428 19:56:55.566049 28550 net.cpp:382] pool0 -> pool0
I0428 19:56:55.566108 28550 net.cpp:124] Setting up pool0
I0428 19:56:55.566114 28550 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:56:55.566117 28550 net.cpp:139] Memory required for data: 2044160
I0428 19:56:55.566119 28550 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:55.566130 28550 net.cpp:86] Creating Layer conv1
I0428 19:56:55.566133 28550 net.cpp:408] conv1 <- pool0
I0428 19:56:55.566138 28550 net.cpp:382] conv1 -> conv1
I0428 19:56:55.568094 28550 net.cpp:124] Setting up conv1
I0428 19:56:55.568125 28550 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:56:55.568130 28550 net.cpp:139] Memory required for data: 2076928
I0428 19:56:55.568137 28550 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:55.568145 28550 net.cpp:86] Creating Layer pool1
I0428 19:56:55.568150 28550 net.cpp:408] pool1 <- conv1
I0428 19:56:55.568155 28550 net.cpp:382] pool1 -> pool1
I0428 19:56:55.568192 28550 net.cpp:124] Setting up pool1
I0428 19:56:55.568197 28550 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:56:55.568214 28550 net.cpp:139] Memory required for data: 2085120
I0428 19:56:55.568217 28550 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:55.568224 28550 net.cpp:86] Creating Layer ip1
I0428 19:56:55.568228 28550 net.cpp:408] ip1 <- pool1
I0428 19:56:55.568231 28550 net.cpp:382] ip1 -> ip1
I0428 19:56:55.569195 28550 net.cpp:124] Setting up ip1
I0428 19:56:55.569208 28550 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:55.569227 28550 net.cpp:139] Memory required for data: 2097920
I0428 19:56:55.569236 28550 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:55.569242 28550 net.cpp:86] Creating Layer relu1
I0428 19:56:55.569245 28550 net.cpp:408] relu1 <- ip1
I0428 19:56:55.569249 28550 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:55.569418 28550 net.cpp:124] Setting up relu1
I0428 19:56:55.569427 28550 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:56:55.569430 28550 net.cpp:139] Memory required for data: 2110720
I0428 19:56:55.569433 28550 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:55.569439 28550 net.cpp:86] Creating Layer ip2
I0428 19:56:55.569442 28550 net.cpp:408] ip2 <- ip1
I0428 19:56:55.569447 28550 net.cpp:382] ip2 -> ip2
I0428 19:56:55.569548 28550 net.cpp:124] Setting up ip2
I0428 19:56:55.569556 28550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:55.569560 28550 net.cpp:139] Memory required for data: 2113280
I0428 19:56:55.569566 28550 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:55.569571 28550 net.cpp:86] Creating Layer relu2
I0428 19:56:55.569574 28550 net.cpp:408] relu2 <- ip2
I0428 19:56:55.569578 28550 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:55.570327 28550 net.cpp:124] Setting up relu2
I0428 19:56:55.570339 28550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:55.570358 28550 net.cpp:139] Memory required for data: 2115840
I0428 19:56:55.570363 28550 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:55.570369 28550 net.cpp:86] Creating Layer ip3
I0428 19:56:55.570372 28550 net.cpp:408] ip3 <- ip2
I0428 19:56:55.570377 28550 net.cpp:382] ip3 -> ip3
I0428 19:56:55.570472 28550 net.cpp:124] Setting up ip3
I0428 19:56:55.570479 28550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:55.570482 28550 net.cpp:139] Memory required for data: 2118400
I0428 19:56:55.570490 28550 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:55.570495 28550 net.cpp:86] Creating Layer relu3
I0428 19:56:55.570497 28550 net.cpp:408] relu3 <- ip3
I0428 19:56:55.570502 28550 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:55.570669 28550 net.cpp:124] Setting up relu3
I0428 19:56:55.570678 28550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:56:55.570682 28550 net.cpp:139] Memory required for data: 2120960
I0428 19:56:55.570685 28550 layer_factory.hpp:77] Creating layer loss
I0428 19:56:55.570690 28550 net.cpp:86] Creating Layer loss
I0428 19:56:55.570693 28550 net.cpp:408] loss <- ip3
I0428 19:56:55.570698 28550 net.cpp:408] loss <- label
I0428 19:56:55.570703 28550 net.cpp:382] loss -> loss
I0428 19:56:55.570727 28550 layer_factory.hpp:77] Creating layer loss
I0428 19:56:55.570935 28550 net.cpp:124] Setting up loss
I0428 19:56:55.570942 28550 net.cpp:131] Top shape: (1)
I0428 19:56:55.570945 28550 net.cpp:134]     with loss weight 1
I0428 19:56:55.570958 28550 net.cpp:139] Memory required for data: 2120964
I0428 19:56:55.570961 28550 net.cpp:200] loss needs backward computation.
I0428 19:56:55.570966 28550 net.cpp:200] relu3 needs backward computation.
I0428 19:56:55.570968 28550 net.cpp:200] ip3 needs backward computation.
I0428 19:56:55.570971 28550 net.cpp:200] relu2 needs backward computation.
I0428 19:56:55.570973 28550 net.cpp:200] ip2 needs backward computation.
I0428 19:56:55.570976 28550 net.cpp:200] relu1 needs backward computation.
I0428 19:56:55.570979 28550 net.cpp:200] ip1 needs backward computation.
I0428 19:56:55.570982 28550 net.cpp:200] pool1 needs backward computation.
I0428 19:56:55.570986 28550 net.cpp:200] conv1 needs backward computation.
I0428 19:56:55.570988 28550 net.cpp:200] pool0 needs backward computation.
I0428 19:56:55.570991 28550 net.cpp:200] conv0 needs backward computation.
I0428 19:56:55.570994 28550 net.cpp:202] mnist does not need backward computation.
I0428 19:56:55.570997 28550 net.cpp:244] This network produces output loss
I0428 19:56:55.571005 28550 net.cpp:257] Network initialization done.
I0428 19:56:55.571406 28550 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test773.prototxt
I0428 19:56:55.571449 28550 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:56:55.571554 28550 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:56:55.571631 28550 layer_factory.hpp:77] Creating layer mnist
I0428 19:56:55.571681 28550 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:56:55.571692 28550 net.cpp:86] Creating Layer mnist
I0428 19:56:55.571697 28550 net.cpp:382] mnist -> data
I0428 19:56:55.571705 28550 net.cpp:382] mnist -> label
I0428 19:56:55.571787 28550 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:56:55.574035 28550 net.cpp:124] Setting up mnist
I0428 19:56:55.574064 28550 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:56:55.574069 28550 net.cpp:131] Top shape: 100 (100)
I0428 19:56:55.574074 28550 net.cpp:139] Memory required for data: 314000
I0428 19:56:55.574077 28550 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:56:55.574084 28550 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:56:55.574087 28550 net.cpp:408] label_mnist_1_split <- label
I0428 19:56:55.574092 28550 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:56:55.574100 28550 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:56:55.574165 28550 net.cpp:124] Setting up label_mnist_1_split
I0428 19:56:55.574172 28550 net.cpp:131] Top shape: 100 (100)
I0428 19:56:55.574174 28550 net.cpp:131] Top shape: 100 (100)
I0428 19:56:55.574177 28550 net.cpp:139] Memory required for data: 314800
I0428 19:56:55.574180 28550 layer_factory.hpp:77] Creating layer conv0
I0428 19:56:55.574199 28550 net.cpp:86] Creating Layer conv0
I0428 19:56:55.574203 28550 net.cpp:408] conv0 <- data
I0428 19:56:55.574206 28550 net.cpp:382] conv0 -> conv0
I0428 19:56:55.575987 28550 net.cpp:124] Setting up conv0
I0428 19:56:55.576011 28550 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:56:55.576015 28550 net.cpp:139] Memory required for data: 2618800
I0428 19:56:55.576025 28550 layer_factory.hpp:77] Creating layer pool0
I0428 19:56:55.576030 28550 net.cpp:86] Creating Layer pool0
I0428 19:56:55.576050 28550 net.cpp:408] pool0 <- conv0
I0428 19:56:55.576055 28550 net.cpp:382] pool0 -> pool0
I0428 19:56:55.576091 28550 net.cpp:124] Setting up pool0
I0428 19:56:55.576097 28550 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:56:55.576099 28550 net.cpp:139] Memory required for data: 3194800
I0428 19:56:55.576102 28550 layer_factory.hpp:77] Creating layer conv1
I0428 19:56:55.576110 28550 net.cpp:86] Creating Layer conv1
I0428 19:56:55.576113 28550 net.cpp:408] conv1 <- pool0
I0428 19:56:55.576118 28550 net.cpp:382] conv1 -> conv1
I0428 19:56:55.578552 28550 net.cpp:124] Setting up conv1
I0428 19:56:55.578567 28550 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:56:55.578570 28550 net.cpp:139] Memory required for data: 3246000
I0428 19:56:55.578579 28550 layer_factory.hpp:77] Creating layer pool1
I0428 19:56:55.578585 28550 net.cpp:86] Creating Layer pool1
I0428 19:56:55.578605 28550 net.cpp:408] pool1 <- conv1
I0428 19:56:55.578610 28550 net.cpp:382] pool1 -> pool1
I0428 19:56:55.578667 28550 net.cpp:124] Setting up pool1
I0428 19:56:55.578673 28550 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:56:55.578676 28550 net.cpp:139] Memory required for data: 3258800
I0428 19:56:55.578680 28550 layer_factory.hpp:77] Creating layer ip1
I0428 19:56:55.578686 28550 net.cpp:86] Creating Layer ip1
I0428 19:56:55.578689 28550 net.cpp:408] ip1 <- pool1
I0428 19:56:55.578694 28550 net.cpp:382] ip1 -> ip1
I0428 19:56:55.578861 28550 net.cpp:124] Setting up ip1
I0428 19:56:55.578871 28550 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:55.578883 28550 net.cpp:139] Memory required for data: 3278800
I0428 19:56:55.578891 28550 layer_factory.hpp:77] Creating layer relu1
I0428 19:56:55.578896 28550 net.cpp:86] Creating Layer relu1
I0428 19:56:55.578900 28550 net.cpp:408] relu1 <- ip1
I0428 19:56:55.578905 28550 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:56:55.579097 28550 net.cpp:124] Setting up relu1
I0428 19:56:55.579105 28550 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:56:55.579108 28550 net.cpp:139] Memory required for data: 3298800
I0428 19:56:55.579111 28550 layer_factory.hpp:77] Creating layer ip2
I0428 19:56:55.579118 28550 net.cpp:86] Creating Layer ip2
I0428 19:56:55.579128 28550 net.cpp:408] ip2 <- ip1
I0428 19:56:55.579133 28550 net.cpp:382] ip2 -> ip2
I0428 19:56:55.579227 28550 net.cpp:124] Setting up ip2
I0428 19:56:55.579234 28550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:55.579236 28550 net.cpp:139] Memory required for data: 3302800
I0428 19:56:55.579257 28550 layer_factory.hpp:77] Creating layer relu2
I0428 19:56:55.579262 28550 net.cpp:86] Creating Layer relu2
I0428 19:56:55.579264 28550 net.cpp:408] relu2 <- ip2
I0428 19:56:55.579267 28550 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:56:55.579412 28550 net.cpp:124] Setting up relu2
I0428 19:56:55.579419 28550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:55.579422 28550 net.cpp:139] Memory required for data: 3306800
I0428 19:56:55.579426 28550 layer_factory.hpp:77] Creating layer ip3
I0428 19:56:55.579445 28550 net.cpp:86] Creating Layer ip3
I0428 19:56:55.579448 28550 net.cpp:408] ip3 <- ip2
I0428 19:56:55.579453 28550 net.cpp:382] ip3 -> ip3
I0428 19:56:55.579560 28550 net.cpp:124] Setting up ip3
I0428 19:56:55.579567 28550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:55.579571 28550 net.cpp:139] Memory required for data: 3310800
I0428 19:56:55.579586 28550 layer_factory.hpp:77] Creating layer relu3
I0428 19:56:55.579591 28550 net.cpp:86] Creating Layer relu3
I0428 19:56:55.579593 28550 net.cpp:408] relu3 <- ip3
I0428 19:56:55.579597 28550 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:56:55.582592 28550 net.cpp:124] Setting up relu3
I0428 19:56:55.582605 28550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:55.582609 28550 net.cpp:139] Memory required for data: 3314800
I0428 19:56:55.582612 28550 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:56:55.582617 28550 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:56:55.582622 28550 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:56:55.582643 28550 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:56:55.582648 28550 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:56:55.582690 28550 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:56:55.582695 28550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:55.582698 28550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:56:55.582701 28550 net.cpp:139] Memory required for data: 3322800
I0428 19:56:55.582705 28550 layer_factory.hpp:77] Creating layer accuracy
I0428 19:56:55.582710 28550 net.cpp:86] Creating Layer accuracy
I0428 19:56:55.582712 28550 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:56:55.582716 28550 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:56:55.582720 28550 net.cpp:382] accuracy -> accuracy
I0428 19:56:55.582727 28550 net.cpp:124] Setting up accuracy
I0428 19:56:55.582731 28550 net.cpp:131] Top shape: (1)
I0428 19:56:55.582734 28550 net.cpp:139] Memory required for data: 3322804
I0428 19:56:55.582737 28550 layer_factory.hpp:77] Creating layer loss
I0428 19:56:55.582741 28550 net.cpp:86] Creating Layer loss
I0428 19:56:55.582744 28550 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:56:55.582748 28550 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:56:55.582767 28550 net.cpp:382] loss -> loss
I0428 19:56:55.582772 28550 layer_factory.hpp:77] Creating layer loss
I0428 19:56:55.582999 28550 net.cpp:124] Setting up loss
I0428 19:56:55.583009 28550 net.cpp:131] Top shape: (1)
I0428 19:56:55.583011 28550 net.cpp:134]     with loss weight 1
I0428 19:56:55.583017 28550 net.cpp:139] Memory required for data: 3322808
I0428 19:56:55.583030 28550 net.cpp:200] loss needs backward computation.
I0428 19:56:55.583042 28550 net.cpp:202] accuracy does not need backward computation.
I0428 19:56:55.583046 28550 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:56:55.583050 28550 net.cpp:200] relu3 needs backward computation.
I0428 19:56:55.583052 28550 net.cpp:200] ip3 needs backward computation.
I0428 19:56:55.583055 28550 net.cpp:200] relu2 needs backward computation.
I0428 19:56:55.583057 28550 net.cpp:200] ip2 needs backward computation.
I0428 19:56:55.583060 28550 net.cpp:200] relu1 needs backward computation.
I0428 19:56:55.583063 28550 net.cpp:200] ip1 needs backward computation.
I0428 19:56:55.583066 28550 net.cpp:200] pool1 needs backward computation.
I0428 19:56:55.583076 28550 net.cpp:200] conv1 needs backward computation.
I0428 19:56:55.583079 28550 net.cpp:200] pool0 needs backward computation.
I0428 19:56:55.583082 28550 net.cpp:200] conv0 needs backward computation.
I0428 19:56:55.583086 28550 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:56:55.583101 28550 net.cpp:202] mnist does not need backward computation.
I0428 19:56:55.583102 28550 net.cpp:244] This network produces output accuracy
I0428 19:56:55.583106 28550 net.cpp:244] This network produces output loss
I0428 19:56:55.583115 28550 net.cpp:257] Network initialization done.
I0428 19:56:55.583155 28550 solver.cpp:56] Solver scaffolding done.
I0428 19:56:55.583487 28550 caffe.cpp:248] Starting Optimization
I0428 19:56:55.583494 28550 solver.cpp:273] Solving LeNet
I0428 19:56:55.583498 28550 solver.cpp:274] Learning Rate Policy: inv
I0428 19:56:55.584345 28550 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:56:55.587990 28550 blocking_queue.cpp:49] Waiting for data
I0428 19:56:55.660363 28557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:55.660862 28550 solver.cpp:398]     Test net output #0: accuracy = 0.0906
I0428 19:56:55.660882 28550 solver.cpp:398]     Test net output #1: loss = 2.37848 (* 1 = 2.37848 loss)
I0428 19:56:55.663457 28550 solver.cpp:219] Iteration 0 (0 iter/s, 0.0799201s/100 iters), loss = 2.32119
I0428 19:56:55.663478 28550 solver.cpp:238]     Train net output #0: loss = 2.32119 (* 1 = 2.32119 loss)
I0428 19:56:55.663506 28550 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:56:55.743939 28550 solver.cpp:219] Iteration 100 (1243 iter/s, 0.0804506s/100 iters), loss = 1.41351
I0428 19:56:55.743963 28550 solver.cpp:238]     Train net output #0: loss = 1.41351 (* 1 = 1.41351 loss)
I0428 19:56:55.743985 28550 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:56:55.818295 28550 solver.cpp:219] Iteration 200 (1345.48 iter/s, 0.0743231s/100 iters), loss = 1.10889
I0428 19:56:55.818320 28550 solver.cpp:238]     Train net output #0: loss = 1.10889 (* 1 = 1.10889 loss)
I0428 19:56:55.818341 28550 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:56:55.891685 28550 solver.cpp:219] Iteration 300 (1363.21 iter/s, 0.0733563s/100 iters), loss = 0.760877
I0428 19:56:55.891710 28550 solver.cpp:238]     Train net output #0: loss = 0.760877 (* 1 = 0.760877 loss)
I0428 19:56:55.891716 28550 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:56:55.964589 28550 solver.cpp:219] Iteration 400 (1372.27 iter/s, 0.0728719s/100 iters), loss = 0.970269
I0428 19:56:55.964628 28550 solver.cpp:238]     Train net output #0: loss = 0.970269 (* 1 = 0.970269 loss)
I0428 19:56:55.964634 28550 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:56:56.036623 28550 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:56:56.111169 28557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:56.111690 28550 solver.cpp:398]     Test net output #0: accuracy = 0.7958
I0428 19:56:56.111726 28550 solver.cpp:398]     Test net output #1: loss = 0.610429 (* 1 = 0.610429 loss)
I0428 19:56:56.112545 28550 solver.cpp:219] Iteration 500 (676.046 iter/s, 0.147919s/100 iters), loss = 0.752486
I0428 19:56:56.112567 28550 solver.cpp:238]     Train net output #0: loss = 0.752486 (* 1 = 0.752486 loss)
I0428 19:56:56.112589 28550 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:56:56.190547 28550 solver.cpp:219] Iteration 600 (1282.54 iter/s, 0.0779704s/100 iters), loss = 0.289191
I0428 19:56:56.190569 28550 solver.cpp:238]     Train net output #0: loss = 0.289191 (* 1 = 0.289191 loss)
I0428 19:56:56.190575 28550 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:56:56.265702 28550 solver.cpp:219] Iteration 700 (1331.14 iter/s, 0.0751235s/100 iters), loss = 0.572867
I0428 19:56:56.265735 28550 solver.cpp:238]     Train net output #0: loss = 0.572867 (* 1 = 0.572867 loss)
I0428 19:56:56.265756 28550 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:56:56.339087 28550 solver.cpp:219] Iteration 800 (1363.27 iter/s, 0.0733532s/100 iters), loss = 0.455883
I0428 19:56:56.339126 28550 solver.cpp:238]     Train net output #0: loss = 0.455883 (* 1 = 0.455883 loss)
I0428 19:56:56.339133 28550 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:56:56.412116 28550 solver.cpp:219] Iteration 900 (1369.92 iter/s, 0.0729969s/100 iters), loss = 0.557915
I0428 19:56:56.412153 28550 solver.cpp:238]     Train net output #0: loss = 0.557915 (* 1 = 0.557915 loss)
I0428 19:56:56.412158 28550 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:56:56.436892 28556 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:56.484446 28550 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:56:56.485254 28550 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:56:56.485672 28550 solver.cpp:311] Iteration 1000, loss = 0.431195
I0428 19:56:56.485702 28550 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:56:56.558806 28557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:56:56.559396 28550 solver.cpp:398]     Test net output #0: accuracy = 0.8484
I0428 19:56:56.559422 28550 solver.cpp:398]     Test net output #1: loss = 0.44161 (* 1 = 0.44161 loss)
I0428 19:56:56.559428 28550 solver.cpp:316] Optimization Done.
I0428 19:56:56.559432 28550 caffe.cpp:259] Optimization Done.
