I0428 19:28:09.513340 21550 caffe.cpp:218] Using GPUs 0
I0428 19:28:09.550643 21550 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:10.061703 21550 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test16.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:10.061844 21550 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test16.prototxt
I0428 19:28:10.062153 21550 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:10.062170 21550 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:10.062242 21550 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:10.062312 21550 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:10.062413 21550 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:10.062436 21550 net.cpp:86] Creating Layer mnist
I0428 19:28:10.062443 21550 net.cpp:382] mnist -> data
I0428 19:28:10.062467 21550 net.cpp:382] mnist -> label
I0428 19:28:10.063561 21550 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:10.066035 21550 net.cpp:124] Setting up mnist
I0428 19:28:10.066056 21550 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:10.066061 21550 net.cpp:131] Top shape: 64 (64)
I0428 19:28:10.066066 21550 net.cpp:139] Memory required for data: 200960
I0428 19:28:10.066072 21550 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:10.066084 21550 net.cpp:86] Creating Layer ip1
I0428 19:28:10.066090 21550 net.cpp:408] ip1 <- data
I0428 19:28:10.066102 21550 net.cpp:382] ip1 -> ip1
I0428 19:28:10.067356 21550 net.cpp:124] Setting up ip1
I0428 19:28:10.067371 21550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:10.067375 21550 net.cpp:139] Memory required for data: 203520
I0428 19:28:10.067390 21550 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:10.067399 21550 net.cpp:86] Creating Layer relu1
I0428 19:28:10.067405 21550 net.cpp:408] relu1 <- ip1
I0428 19:28:10.067411 21550 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:10.351749 21550 net.cpp:124] Setting up relu1
I0428 19:28:10.351778 21550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:10.351783 21550 net.cpp:139] Memory required for data: 206080
I0428 19:28:10.351788 21550 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:10.351802 21550 net.cpp:86] Creating Layer ip2
I0428 19:28:10.351822 21550 net.cpp:408] ip2 <- ip1
I0428 19:28:10.351833 21550 net.cpp:382] ip2 -> ip2
I0428 19:28:10.351953 21550 net.cpp:124] Setting up ip2
I0428 19:28:10.351963 21550 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:10.351966 21550 net.cpp:139] Memory required for data: 212480
I0428 19:28:10.351976 21550 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:10.351987 21550 net.cpp:86] Creating Layer relu2
I0428 19:28:10.351990 21550 net.cpp:408] relu2 <- ip2
I0428 19:28:10.351995 21550 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:10.352784 21550 net.cpp:124] Setting up relu2
I0428 19:28:10.352797 21550 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:28:10.352802 21550 net.cpp:139] Memory required for data: 218880
I0428 19:28:10.352805 21550 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:10.352821 21550 net.cpp:86] Creating Layer ip3
I0428 19:28:10.352825 21550 net.cpp:408] ip3 <- ip2
I0428 19:28:10.352833 21550 net.cpp:382] ip3 -> ip3
I0428 19:28:10.352951 21550 net.cpp:124] Setting up ip3
I0428 19:28:10.352959 21550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:10.352962 21550 net.cpp:139] Memory required for data: 221440
I0428 19:28:10.352972 21550 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:10.352977 21550 net.cpp:86] Creating Layer relu3
I0428 19:28:10.352982 21550 net.cpp:408] relu3 <- ip3
I0428 19:28:10.352985 21550 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:10.353143 21550 net.cpp:124] Setting up relu3
I0428 19:28:10.353152 21550 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:10.353155 21550 net.cpp:139] Memory required for data: 224000
I0428 19:28:10.353159 21550 layer_factory.hpp:77] Creating layer loss
I0428 19:28:10.353166 21550 net.cpp:86] Creating Layer loss
I0428 19:28:10.353169 21550 net.cpp:408] loss <- ip3
I0428 19:28:10.353174 21550 net.cpp:408] loss <- label
I0428 19:28:10.353179 21550 net.cpp:382] loss -> loss
I0428 19:28:10.353212 21550 layer_factory.hpp:77] Creating layer loss
I0428 19:28:10.354333 21550 net.cpp:124] Setting up loss
I0428 19:28:10.354347 21550 net.cpp:131] Top shape: (1)
I0428 19:28:10.354351 21550 net.cpp:134]     with loss weight 1
I0428 19:28:10.354365 21550 net.cpp:139] Memory required for data: 224004
I0428 19:28:10.354369 21550 net.cpp:200] loss needs backward computation.
I0428 19:28:10.354373 21550 net.cpp:200] relu3 needs backward computation.
I0428 19:28:10.354377 21550 net.cpp:200] ip3 needs backward computation.
I0428 19:28:10.354380 21550 net.cpp:200] relu2 needs backward computation.
I0428 19:28:10.354383 21550 net.cpp:200] ip2 needs backward computation.
I0428 19:28:10.354387 21550 net.cpp:200] relu1 needs backward computation.
I0428 19:28:10.354389 21550 net.cpp:200] ip1 needs backward computation.
I0428 19:28:10.354393 21550 net.cpp:202] mnist does not need backward computation.
I0428 19:28:10.354395 21550 net.cpp:244] This network produces output loss
I0428 19:28:10.354403 21550 net.cpp:257] Network initialization done.
I0428 19:28:10.354641 21550 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test16.prototxt
I0428 19:28:10.354663 21550 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:10.354733 21550 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:10.354804 21550 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:10.354846 21550 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:10.354861 21550 net.cpp:86] Creating Layer mnist
I0428 19:28:10.354866 21550 net.cpp:382] mnist -> data
I0428 19:28:10.354872 21550 net.cpp:382] mnist -> label
I0428 19:28:10.354959 21550 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:10.356905 21550 net.cpp:124] Setting up mnist
I0428 19:28:10.356935 21550 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:10.356940 21550 net.cpp:131] Top shape: 100 (100)
I0428 19:28:10.356945 21550 net.cpp:139] Memory required for data: 314000
I0428 19:28:10.356948 21550 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:10.356961 21550 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:10.356963 21550 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:10.356969 21550 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:10.356976 21550 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:10.357039 21550 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:10.357045 21550 net.cpp:131] Top shape: 100 (100)
I0428 19:28:10.357048 21550 net.cpp:131] Top shape: 100 (100)
I0428 19:28:10.357051 21550 net.cpp:139] Memory required for data: 314800
I0428 19:28:10.357055 21550 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:10.357061 21550 net.cpp:86] Creating Layer ip1
I0428 19:28:10.357064 21550 net.cpp:408] ip1 <- data
I0428 19:28:10.357069 21550 net.cpp:382] ip1 -> ip1
I0428 19:28:10.357293 21550 net.cpp:124] Setting up ip1
I0428 19:28:10.357301 21550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:10.357306 21550 net.cpp:139] Memory required for data: 318800
I0428 19:28:10.357314 21550 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:10.357321 21550 net.cpp:86] Creating Layer relu1
I0428 19:28:10.357323 21550 net.cpp:408] relu1 <- ip1
I0428 19:28:10.357328 21550 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:10.358126 21550 net.cpp:124] Setting up relu1
I0428 19:28:10.358140 21550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:10.358144 21550 net.cpp:139] Memory required for data: 322800
I0428 19:28:10.358147 21550 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:10.358155 21550 net.cpp:86] Creating Layer ip2
I0428 19:28:10.358160 21550 net.cpp:408] ip2 <- ip1
I0428 19:28:10.358165 21550 net.cpp:382] ip2 -> ip2
I0428 19:28:10.358263 21550 net.cpp:124] Setting up ip2
I0428 19:28:10.358269 21550 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:10.358273 21550 net.cpp:139] Memory required for data: 332800
I0428 19:28:10.358280 21550 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:10.358285 21550 net.cpp:86] Creating Layer relu2
I0428 19:28:10.358289 21550 net.cpp:408] relu2 <- ip2
I0428 19:28:10.358294 21550 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:10.358444 21550 net.cpp:124] Setting up relu2
I0428 19:28:10.358453 21550 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:28:10.358455 21550 net.cpp:139] Memory required for data: 342800
I0428 19:28:10.358458 21550 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:10.358464 21550 net.cpp:86] Creating Layer ip3
I0428 19:28:10.358467 21550 net.cpp:408] ip3 <- ip2
I0428 19:28:10.358472 21550 net.cpp:382] ip3 -> ip3
I0428 19:28:10.358573 21550 net.cpp:124] Setting up ip3
I0428 19:28:10.358582 21550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:10.358584 21550 net.cpp:139] Memory required for data: 346800
I0428 19:28:10.358592 21550 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:10.358597 21550 net.cpp:86] Creating Layer relu3
I0428 19:28:10.358599 21550 net.cpp:408] relu3 <- ip3
I0428 19:28:10.358604 21550 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:10.358747 21550 net.cpp:124] Setting up relu3
I0428 19:28:10.358754 21550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:10.358758 21550 net.cpp:139] Memory required for data: 350800
I0428 19:28:10.358762 21550 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:10.358767 21550 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:10.358770 21550 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:10.358775 21550 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:10.358780 21550 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:10.358814 21550 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:10.358819 21550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:10.358822 21550 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:10.358824 21550 net.cpp:139] Memory required for data: 358800
I0428 19:28:10.358829 21550 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:10.358837 21550 net.cpp:86] Creating Layer accuracy
I0428 19:28:10.358840 21550 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:10.358844 21550 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:10.358850 21550 net.cpp:382] accuracy -> accuracy
I0428 19:28:10.358856 21550 net.cpp:124] Setting up accuracy
I0428 19:28:10.358860 21550 net.cpp:131] Top shape: (1)
I0428 19:28:10.358863 21550 net.cpp:139] Memory required for data: 358804
I0428 19:28:10.358866 21550 layer_factory.hpp:77] Creating layer loss
I0428 19:28:10.358870 21550 net.cpp:86] Creating Layer loss
I0428 19:28:10.358873 21550 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:10.358877 21550 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:10.358881 21550 net.cpp:382] loss -> loss
I0428 19:28:10.358887 21550 layer_factory.hpp:77] Creating layer loss
I0428 19:28:10.359118 21550 net.cpp:124] Setting up loss
I0428 19:28:10.359127 21550 net.cpp:131] Top shape: (1)
I0428 19:28:10.359130 21550 net.cpp:134]     with loss weight 1
I0428 19:28:10.359138 21550 net.cpp:139] Memory required for data: 358808
I0428 19:28:10.359140 21550 net.cpp:200] loss needs backward computation.
I0428 19:28:10.359145 21550 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:10.359148 21550 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:10.359153 21550 net.cpp:200] relu3 needs backward computation.
I0428 19:28:10.359155 21550 net.cpp:200] ip3 needs backward computation.
I0428 19:28:10.359158 21550 net.cpp:200] relu2 needs backward computation.
I0428 19:28:10.359161 21550 net.cpp:200] ip2 needs backward computation.
I0428 19:28:10.359164 21550 net.cpp:200] relu1 needs backward computation.
I0428 19:28:10.359167 21550 net.cpp:200] ip1 needs backward computation.
I0428 19:28:10.359171 21550 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:10.359175 21550 net.cpp:202] mnist does not need backward computation.
I0428 19:28:10.359179 21550 net.cpp:244] This network produces output accuracy
I0428 19:28:10.359182 21550 net.cpp:244] This network produces output loss
I0428 19:28:10.359191 21550 net.cpp:257] Network initialization done.
I0428 19:28:10.359223 21550 solver.cpp:56] Solver scaffolding done.
I0428 19:28:10.359433 21550 caffe.cpp:248] Starting Optimization
I0428 19:28:10.359441 21550 solver.cpp:273] Solving LeNet
I0428 19:28:10.359443 21550 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:10.359536 21550 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:10.359637 21550 blocking_queue.cpp:49] Waiting for data
I0428 19:28:10.433629 21557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:10.434031 21550 solver.cpp:398]     Test net output #0: accuracy = 0.1244
I0428 19:28:10.434051 21550 solver.cpp:398]     Test net output #1: loss = 2.29528 (* 1 = 2.29528 loss)
I0428 19:28:10.434617 21550 solver.cpp:219] Iteration 0 (3.02916 iter/s, 0.0751524s/100 iters), loss = 2.28918
I0428 19:28:10.434638 21550 solver.cpp:238]     Train net output #0: loss = 2.28918 (* 1 = 2.28918 loss)
I0428 19:28:10.434650 21550 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:10.494375 21550 solver.cpp:219] Iteration 100 (1674.35 iter/s, 0.0597247s/100 iters), loss = 1.29688
I0428 19:28:10.494416 21550 solver.cpp:238]     Train net output #0: loss = 1.29688 (* 1 = 1.29688 loss)
I0428 19:28:10.494439 21550 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:10.548285 21550 solver.cpp:219] Iteration 200 (1856.69 iter/s, 0.0538593s/100 iters), loss = 0.858298
I0428 19:28:10.548332 21550 solver.cpp:238]     Train net output #0: loss = 0.858298 (* 1 = 0.858298 loss)
I0428 19:28:10.548346 21550 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:10.612071 21550 solver.cpp:219] Iteration 300 (1569.1 iter/s, 0.0637307s/100 iters), loss = 1.23982
I0428 19:28:10.612107 21550 solver.cpp:238]     Train net output #0: loss = 1.23982 (* 1 = 1.23982 loss)
I0428 19:28:10.612118 21550 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:10.666859 21550 solver.cpp:219] Iteration 400 (1826.65 iter/s, 0.0547451s/100 iters), loss = 1.11791
I0428 19:28:10.666905 21550 solver.cpp:238]     Train net output #0: loss = 1.11791 (* 1 = 1.11791 loss)
I0428 19:28:10.666914 21550 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:10.723536 21550 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:10.779230 21557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:10.779768 21550 solver.cpp:398]     Test net output #0: accuracy = 0.7208
I0428 19:28:10.779809 21550 solver.cpp:398]     Test net output #1: loss = 0.973895 (* 1 = 0.973895 loss)
I0428 19:28:10.780424 21550 solver.cpp:219] Iteration 500 (881.048 iter/s, 0.113501s/100 iters), loss = 1.00972
I0428 19:28:10.780472 21550 solver.cpp:238]     Train net output #0: loss = 1.00972 (* 1 = 1.00972 loss)
I0428 19:28:10.780493 21550 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:10.846838 21550 solver.cpp:219] Iteration 600 (1507 iter/s, 0.0663572s/100 iters), loss = 0.86164
I0428 19:28:10.846884 21550 solver.cpp:238]     Train net output #0: loss = 0.86164 (* 1 = 0.86164 loss)
I0428 19:28:10.846895 21550 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:10.906913 21550 solver.cpp:219] Iteration 700 (1666.06 iter/s, 0.0600218s/100 iters), loss = 0.904753
I0428 19:28:10.906946 21550 solver.cpp:238]     Train net output #0: loss = 0.904753 (* 1 = 0.904753 loss)
I0428 19:28:10.906956 21550 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:10.979708 21550 solver.cpp:219] Iteration 800 (1374.59 iter/s, 0.0727491s/100 iters), loss = 1.05173
I0428 19:28:10.979763 21550 solver.cpp:238]     Train net output #0: loss = 1.05173 (* 1 = 1.05173 loss)
I0428 19:28:10.979774 21550 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:11.039733 21550 solver.cpp:219] Iteration 900 (1667.66 iter/s, 0.0599642s/100 iters), loss = 0.955591
I0428 19:28:11.039772 21550 solver.cpp:238]     Train net output #0: loss = 0.955591 (* 1 = 0.955591 loss)
I0428 19:28:11.039780 21550 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:11.058135 21556 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:11.091861 21550 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:11.092458 21550 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:11.092912 21550 solver.cpp:311] Iteration 1000, loss = 0.705663
I0428 19:28:11.092932 21550 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:11.148157 21557 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:11.148591 21550 solver.cpp:398]     Test net output #0: accuracy = 0.7985
I0428 19:28:11.148612 21550 solver.cpp:398]     Test net output #1: loss = 0.760491 (* 1 = 0.760491 loss)
I0428 19:28:11.148617 21550 solver.cpp:316] Optimization Done.
I0428 19:28:11.148622 21550 caffe.cpp:259] Optimization Done.
