I0428 20:35:31.277684  4635 caffe.cpp:218] Using GPUs 0
I0428 20:35:31.314576  4635 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:35:31.767714  4635 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1622.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:35:31.767895  4635 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1622.prototxt
I0428 20:35:31.768265  4635 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:35:31.768295  4635 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:35:31.768373  4635 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:31.768436  4635 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:31.768517  4635 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:35:31.768537  4635 net.cpp:86] Creating Layer mnist
I0428 20:35:31.768543  4635 net.cpp:382] mnist -> data
I0428 20:35:31.768561  4635 net.cpp:382] mnist -> label
I0428 20:35:31.769601  4635 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:35:31.771739  4635 net.cpp:124] Setting up mnist
I0428 20:35:31.771752  4635 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:35:31.771757  4635 net.cpp:131] Top shape: 64 (64)
I0428 20:35:31.771760  4635 net.cpp:139] Memory required for data: 200960
I0428 20:35:31.771765  4635 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:31.771780  4635 net.cpp:86] Creating Layer conv0
I0428 20:35:31.771795  4635 net.cpp:408] conv0 <- data
I0428 20:35:31.771818  4635 net.cpp:382] conv0 -> conv0
I0428 20:35:31.998780  4635 net.cpp:124] Setting up conv0
I0428 20:35:31.998807  4635 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:35:31.998811  4635 net.cpp:139] Memory required for data: 14946560
I0428 20:35:31.998826  4635 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:31.998836  4635 net.cpp:86] Creating Layer pool0
I0428 20:35:31.998841  4635 net.cpp:408] pool0 <- conv0
I0428 20:35:31.998845  4635 net.cpp:382] pool0 -> pool0
I0428 20:35:31.998908  4635 net.cpp:124] Setting up pool0
I0428 20:35:31.998914  4635 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:35:31.998917  4635 net.cpp:139] Memory required for data: 18632960
I0428 20:35:31.998920  4635 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:31.998930  4635 net.cpp:86] Creating Layer conv1
I0428 20:35:31.998934  4635 net.cpp:408] conv1 <- pool0
I0428 20:35:31.998939  4635 net.cpp:382] conv1 -> conv1
I0428 20:35:32.002415  4635 net.cpp:124] Setting up conv1
I0428 20:35:32.002446  4635 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:35:32.002450  4635 net.cpp:139] Memory required for data: 19452160
I0428 20:35:32.002459  4635 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:32.002466  4635 net.cpp:86] Creating Layer pool1
I0428 20:35:32.002470  4635 net.cpp:408] pool1 <- conv1
I0428 20:35:32.002475  4635 net.cpp:382] pool1 -> pool1
I0428 20:35:32.002516  4635 net.cpp:124] Setting up pool1
I0428 20:35:32.002521  4635 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:35:32.002523  4635 net.cpp:139] Memory required for data: 19656960
I0428 20:35:32.002526  4635 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:32.002538  4635 net.cpp:86] Creating Layer ip1
I0428 20:35:32.002542  4635 net.cpp:408] ip1 <- pool1
I0428 20:35:32.002547  4635 net.cpp:382] ip1 -> ip1
I0428 20:35:32.002777  4635 net.cpp:124] Setting up ip1
I0428 20:35:32.002785  4635 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:35:32.002787  4635 net.cpp:139] Memory required for data: 19663360
I0428 20:35:32.002795  4635 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:32.002804  4635 net.cpp:86] Creating Layer relu1
I0428 20:35:32.002806  4635 net.cpp:408] relu1 <- ip1
I0428 20:35:32.002810  4635 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:32.002975  4635 net.cpp:124] Setting up relu1
I0428 20:35:32.002985  4635 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:35:32.002987  4635 net.cpp:139] Memory required for data: 19669760
I0428 20:35:32.002990  4635 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:32.003000  4635 net.cpp:86] Creating Layer ip2
I0428 20:35:32.003003  4635 net.cpp:408] ip2 <- ip1
I0428 20:35:32.003007  4635 net.cpp:382] ip2 -> ip2
I0428 20:35:32.003103  4635 net.cpp:124] Setting up ip2
I0428 20:35:32.003109  4635 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:32.003113  4635 net.cpp:139] Memory required for data: 19672320
I0428 20:35:32.003118  4635 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:32.003125  4635 net.cpp:86] Creating Layer relu2
I0428 20:35:32.003129  4635 net.cpp:408] relu2 <- ip2
I0428 20:35:32.003132  4635 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:32.003896  4635 net.cpp:124] Setting up relu2
I0428 20:35:32.003908  4635 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:32.003928  4635 net.cpp:139] Memory required for data: 19674880
I0428 20:35:32.003931  4635 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:32.003939  4635 net.cpp:86] Creating Layer ip3
I0428 20:35:32.003943  4635 net.cpp:408] ip3 <- ip2
I0428 20:35:32.003949  4635 net.cpp:382] ip3 -> ip3
I0428 20:35:32.004052  4635 net.cpp:124] Setting up ip3
I0428 20:35:32.004060  4635 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:32.004063  4635 net.cpp:139] Memory required for data: 19677440
I0428 20:35:32.004070  4635 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:32.004076  4635 net.cpp:86] Creating Layer relu3
I0428 20:35:32.004078  4635 net.cpp:408] relu3 <- ip3
I0428 20:35:32.004082  4635 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:32.004278  4635 net.cpp:124] Setting up relu3
I0428 20:35:32.004287  4635 net.cpp:131] Top shape: 64 10 (640)
I0428 20:35:32.004290  4635 net.cpp:139] Memory required for data: 19680000
I0428 20:35:32.004293  4635 layer_factory.hpp:77] Creating layer loss
I0428 20:35:32.004299  4635 net.cpp:86] Creating Layer loss
I0428 20:35:32.004302  4635 net.cpp:408] loss <- ip3
I0428 20:35:32.004307  4635 net.cpp:408] loss <- label
I0428 20:35:32.004312  4635 net.cpp:382] loss -> loss
I0428 20:35:32.004328  4635 layer_factory.hpp:77] Creating layer loss
I0428 20:35:32.004546  4635 net.cpp:124] Setting up loss
I0428 20:35:32.004570  4635 net.cpp:131] Top shape: (1)
I0428 20:35:32.004575  4635 net.cpp:134]     with loss weight 1
I0428 20:35:32.004587  4635 net.cpp:139] Memory required for data: 19680004
I0428 20:35:32.004590  4635 net.cpp:200] loss needs backward computation.
I0428 20:35:32.004595  4635 net.cpp:200] relu3 needs backward computation.
I0428 20:35:32.004596  4635 net.cpp:200] ip3 needs backward computation.
I0428 20:35:32.004600  4635 net.cpp:200] relu2 needs backward computation.
I0428 20:35:32.004602  4635 net.cpp:200] ip2 needs backward computation.
I0428 20:35:32.004606  4635 net.cpp:200] relu1 needs backward computation.
I0428 20:35:32.004607  4635 net.cpp:200] ip1 needs backward computation.
I0428 20:35:32.004611  4635 net.cpp:200] pool1 needs backward computation.
I0428 20:35:32.004613  4635 net.cpp:200] conv1 needs backward computation.
I0428 20:35:32.004616  4635 net.cpp:200] pool0 needs backward computation.
I0428 20:35:32.004619  4635 net.cpp:200] conv0 needs backward computation.
I0428 20:35:32.004622  4635 net.cpp:202] mnist does not need backward computation.
I0428 20:35:32.004624  4635 net.cpp:244] This network produces output loss
I0428 20:35:32.004634  4635 net.cpp:257] Network initialization done.
I0428 20:35:32.005019  4635 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1622.prototxt
I0428 20:35:32.005048  4635 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:35:32.005156  4635 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:35:32.005251  4635 layer_factory.hpp:77] Creating layer mnist
I0428 20:35:32.005293  4635 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:35:32.005307  4635 net.cpp:86] Creating Layer mnist
I0428 20:35:32.005312  4635 net.cpp:382] mnist -> data
I0428 20:35:32.005319  4635 net.cpp:382] mnist -> label
I0428 20:35:32.005403  4635 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:35:32.006762  4635 net.cpp:124] Setting up mnist
I0428 20:35:32.006790  4635 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:35:32.006795  4635 net.cpp:131] Top shape: 100 (100)
I0428 20:35:32.006800  4635 net.cpp:139] Memory required for data: 314000
I0428 20:35:32.006804  4635 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:35:32.006861  4635 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:35:32.006865  4635 net.cpp:408] label_mnist_1_split <- label
I0428 20:35:32.006870  4635 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:35:32.006877  4635 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:35:32.006929  4635 net.cpp:124] Setting up label_mnist_1_split
I0428 20:35:32.006937  4635 net.cpp:131] Top shape: 100 (100)
I0428 20:35:32.006942  4635 net.cpp:131] Top shape: 100 (100)
I0428 20:35:32.006944  4635 net.cpp:139] Memory required for data: 314800
I0428 20:35:32.006963  4635 layer_factory.hpp:77] Creating layer conv0
I0428 20:35:32.006971  4635 net.cpp:86] Creating Layer conv0
I0428 20:35:32.006974  4635 net.cpp:408] conv0 <- data
I0428 20:35:32.006980  4635 net.cpp:382] conv0 -> conv0
I0428 20:35:32.008792  4635 net.cpp:124] Setting up conv0
I0428 20:35:32.008805  4635 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:35:32.008831  4635 net.cpp:139] Memory required for data: 23354800
I0428 20:35:32.008842  4635 layer_factory.hpp:77] Creating layer pool0
I0428 20:35:32.008848  4635 net.cpp:86] Creating Layer pool0
I0428 20:35:32.008862  4635 net.cpp:408] pool0 <- conv0
I0428 20:35:32.008867  4635 net.cpp:382] pool0 -> pool0
I0428 20:35:32.008922  4635 net.cpp:124] Setting up pool0
I0428 20:35:32.008929  4635 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:35:32.008931  4635 net.cpp:139] Memory required for data: 29114800
I0428 20:35:32.008934  4635 layer_factory.hpp:77] Creating layer conv1
I0428 20:35:32.008944  4635 net.cpp:86] Creating Layer conv1
I0428 20:35:32.008963  4635 net.cpp:408] conv1 <- pool0
I0428 20:35:32.008970  4635 net.cpp:382] conv1 -> conv1
I0428 20:35:32.012188  4635 net.cpp:124] Setting up conv1
I0428 20:35:32.012202  4635 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:35:32.012205  4635 net.cpp:139] Memory required for data: 30394800
I0428 20:35:32.012213  4635 layer_factory.hpp:77] Creating layer pool1
I0428 20:35:32.012219  4635 net.cpp:86] Creating Layer pool1
I0428 20:35:32.012240  4635 net.cpp:408] pool1 <- conv1
I0428 20:35:32.012274  4635 net.cpp:382] pool1 -> pool1
I0428 20:35:32.012311  4635 net.cpp:124] Setting up pool1
I0428 20:35:32.012326  4635 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:35:32.012329  4635 net.cpp:139] Memory required for data: 30714800
I0428 20:35:32.012337  4635 layer_factory.hpp:77] Creating layer ip1
I0428 20:35:32.012346  4635 net.cpp:86] Creating Layer ip1
I0428 20:35:32.012348  4635 net.cpp:408] ip1 <- pool1
I0428 20:35:32.012353  4635 net.cpp:382] ip1 -> ip1
I0428 20:35:32.012610  4635 net.cpp:124] Setting up ip1
I0428 20:35:32.012627  4635 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:35:32.012631  4635 net.cpp:139] Memory required for data: 30724800
I0428 20:35:32.012639  4635 layer_factory.hpp:77] Creating layer relu1
I0428 20:35:32.012643  4635 net.cpp:86] Creating Layer relu1
I0428 20:35:32.012647  4635 net.cpp:408] relu1 <- ip1
I0428 20:35:32.012657  4635 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:35:32.012853  4635 net.cpp:124] Setting up relu1
I0428 20:35:32.012862  4635 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:35:32.012866  4635 net.cpp:139] Memory required for data: 30734800
I0428 20:35:32.012869  4635 layer_factory.hpp:77] Creating layer ip2
I0428 20:35:32.012892  4635 net.cpp:86] Creating Layer ip2
I0428 20:35:32.012894  4635 net.cpp:408] ip2 <- ip1
I0428 20:35:32.012900  4635 net.cpp:382] ip2 -> ip2
I0428 20:35:32.013020  4635 net.cpp:124] Setting up ip2
I0428 20:35:32.013028  4635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:32.013031  4635 net.cpp:139] Memory required for data: 30738800
I0428 20:35:32.013036  4635 layer_factory.hpp:77] Creating layer relu2
I0428 20:35:32.013049  4635 net.cpp:86] Creating Layer relu2
I0428 20:35:32.013052  4635 net.cpp:408] relu2 <- ip2
I0428 20:35:32.013057  4635 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:35:32.013393  4635 net.cpp:124] Setting up relu2
I0428 20:35:32.013402  4635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:32.013406  4635 net.cpp:139] Memory required for data: 30742800
I0428 20:35:32.013414  4635 layer_factory.hpp:77] Creating layer ip3
I0428 20:35:32.013422  4635 net.cpp:86] Creating Layer ip3
I0428 20:35:32.013424  4635 net.cpp:408] ip3 <- ip2
I0428 20:35:32.013429  4635 net.cpp:382] ip3 -> ip3
I0428 20:35:32.013530  4635 net.cpp:124] Setting up ip3
I0428 20:35:32.013538  4635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:32.013541  4635 net.cpp:139] Memory required for data: 30746800
I0428 20:35:32.013550  4635 layer_factory.hpp:77] Creating layer relu3
I0428 20:35:32.013556  4635 net.cpp:86] Creating Layer relu3
I0428 20:35:32.013558  4635 net.cpp:408] relu3 <- ip3
I0428 20:35:32.013562  4635 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:35:32.014318  4635 net.cpp:124] Setting up relu3
I0428 20:35:32.014330  4635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:32.014335  4635 net.cpp:139] Memory required for data: 30750800
I0428 20:35:32.014338  4635 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:35:32.014343  4635 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:35:32.014348  4635 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:35:32.014365  4635 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:35:32.014371  4635 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:35:32.014413  4635 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:35:32.014420  4635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:32.014438  4635 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:35:32.014441  4635 net.cpp:139] Memory required for data: 30758800
I0428 20:35:32.014443  4635 layer_factory.hpp:77] Creating layer accuracy
I0428 20:35:32.014448  4635 net.cpp:86] Creating Layer accuracy
I0428 20:35:32.014451  4635 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:35:32.014456  4635 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:35:32.014461  4635 net.cpp:382] accuracy -> accuracy
I0428 20:35:32.014467  4635 net.cpp:124] Setting up accuracy
I0428 20:35:32.014472  4635 net.cpp:131] Top shape: (1)
I0428 20:35:32.014474  4635 net.cpp:139] Memory required for data: 30758804
I0428 20:35:32.014477  4635 layer_factory.hpp:77] Creating layer loss
I0428 20:35:32.014482  4635 net.cpp:86] Creating Layer loss
I0428 20:35:32.014484  4635 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:35:32.014487  4635 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:35:32.014492  4635 net.cpp:382] loss -> loss
I0428 20:35:32.014498  4635 layer_factory.hpp:77] Creating layer loss
I0428 20:35:32.014778  4635 net.cpp:124] Setting up loss
I0428 20:35:32.014788  4635 net.cpp:131] Top shape: (1)
I0428 20:35:32.014791  4635 net.cpp:134]     with loss weight 1
I0428 20:35:32.014807  4635 net.cpp:139] Memory required for data: 30758808
I0428 20:35:32.014811  4635 net.cpp:200] loss needs backward computation.
I0428 20:35:32.014816  4635 net.cpp:202] accuracy does not need backward computation.
I0428 20:35:32.014827  4635 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:35:32.014829  4635 net.cpp:200] relu3 needs backward computation.
I0428 20:35:32.014832  4635 net.cpp:200] ip3 needs backward computation.
I0428 20:35:32.014835  4635 net.cpp:200] relu2 needs backward computation.
I0428 20:35:32.014838  4635 net.cpp:200] ip2 needs backward computation.
I0428 20:35:32.014840  4635 net.cpp:200] relu1 needs backward computation.
I0428 20:35:32.014843  4635 net.cpp:200] ip1 needs backward computation.
I0428 20:35:32.014847  4635 net.cpp:200] pool1 needs backward computation.
I0428 20:35:32.014849  4635 net.cpp:200] conv1 needs backward computation.
I0428 20:35:32.014853  4635 net.cpp:200] pool0 needs backward computation.
I0428 20:35:32.014855  4635 net.cpp:200] conv0 needs backward computation.
I0428 20:35:32.014859  4635 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:35:32.014863  4635 net.cpp:202] mnist does not need backward computation.
I0428 20:35:32.014866  4635 net.cpp:244] This network produces output accuracy
I0428 20:35:32.014870  4635 net.cpp:244] This network produces output loss
I0428 20:35:32.014881  4635 net.cpp:257] Network initialization done.
I0428 20:35:32.014932  4635 solver.cpp:56] Solver scaffolding done.
I0428 20:35:32.015252  4635 caffe.cpp:248] Starting Optimization
I0428 20:35:32.015259  4635 solver.cpp:273] Solving LeNet
I0428 20:35:32.015264  4635 solver.cpp:274] Learning Rate Policy: inv
I0428 20:35:32.015447  4635 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:35:32.075817  4635 blocking_queue.cpp:49] Waiting for data
I0428 20:35:32.128501  4642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:32.130439  4635 solver.cpp:398]     Test net output #0: accuracy = 0.0892
I0428 20:35:32.130473  4635 solver.cpp:398]     Test net output #1: loss = 2.30756 (* 1 = 2.30756 loss)
I0428 20:35:32.135432  4635 solver.cpp:219] Iteration 0 (0 iter/s, 0.120141s/100 iters), loss = 2.31448
I0428 20:35:32.135454  4635 solver.cpp:238]     Train net output #0: loss = 2.31448 (* 1 = 2.31448 loss)
I0428 20:35:32.135465  4635 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:35:32.368964  4635 solver.cpp:219] Iteration 100 (428.285 iter/s, 0.233489s/100 iters), loss = 0.585019
I0428 20:35:32.368991  4635 solver.cpp:238]     Train net output #0: loss = 0.585019 (* 1 = 0.585019 loss)
I0428 20:35:32.368999  4635 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:35:32.600857  4635 solver.cpp:219] Iteration 200 (431.317 iter/s, 0.231848s/100 iters), loss = 0.590775
I0428 20:35:32.600883  4635 solver.cpp:238]     Train net output #0: loss = 0.590775 (* 1 = 0.590775 loss)
I0428 20:35:32.600890  4635 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:35:32.836272  4635 solver.cpp:219] Iteration 300 (424.86 iter/s, 0.235372s/100 iters), loss = 0.23614
I0428 20:35:32.836298  4635 solver.cpp:238]     Train net output #0: loss = 0.23614 (* 1 = 0.23614 loss)
I0428 20:35:32.836307  4635 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:35:33.070662  4635 solver.cpp:219] Iteration 400 (426.717 iter/s, 0.234348s/100 iters), loss = 0.338569
I0428 20:35:33.070704  4635 solver.cpp:238]     Train net output #0: loss = 0.338569 (* 1 = 0.338569 loss)
I0428 20:35:33.070713  4635 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:35:33.306026  4635 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:35:33.417728  4642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:33.419564  4635 solver.cpp:398]     Test net output #0: accuracy = 0.8786
I0428 20:35:33.419587  4635 solver.cpp:398]     Test net output #1: loss = 0.333809 (* 1 = 0.333809 loss)
I0428 20:35:33.421895  4635 solver.cpp:219] Iteration 500 (284.751 iter/s, 0.351184s/100 iters), loss = 0.377257
I0428 20:35:33.421932  4635 solver.cpp:238]     Train net output #0: loss = 0.377257 (* 1 = 0.377257 loss)
I0428 20:35:33.421942  4635 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:35:33.660154  4635 solver.cpp:219] Iteration 600 (419.809 iter/s, 0.238204s/100 iters), loss = 0.201211
I0428 20:35:33.660190  4635 solver.cpp:238]     Train net output #0: loss = 0.201211 (* 1 = 0.201211 loss)
I0428 20:35:33.660197  4635 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:35:33.897833  4635 solver.cpp:219] Iteration 700 (420.829 iter/s, 0.237626s/100 iters), loss = 0.550709
I0428 20:35:33.897862  4635 solver.cpp:238]     Train net output #0: loss = 0.550709 (* 1 = 0.550709 loss)
I0428 20:35:33.897886  4635 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:35:34.135303  4635 solver.cpp:219] Iteration 800 (421.19 iter/s, 0.237423s/100 iters), loss = 0.553752
I0428 20:35:34.135334  4635 solver.cpp:238]     Train net output #0: loss = 0.553752 (* 1 = 0.553752 loss)
I0428 20:35:34.135341  4635 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:35:34.370474  4635 solver.cpp:219] Iteration 900 (425.306 iter/s, 0.235125s/100 iters), loss = 0.367293
I0428 20:35:34.370502  4635 solver.cpp:238]     Train net output #0: loss = 0.367293 (* 1 = 0.367293 loss)
I0428 20:35:34.370524  4635 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:35:34.447662  4641 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:34.603932  4635 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:35:34.608281  4635 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:35:34.610321  4635 solver.cpp:311] Iteration 1000, loss = 0.361574
I0428 20:35:34.610338  4635 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:35:34.719291  4642 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:35:34.721168  4635 solver.cpp:398]     Test net output #0: accuracy = 0.8875
I0428 20:35:34.721189  4635 solver.cpp:398]     Test net output #1: loss = 0.295357 (* 1 = 0.295357 loss)
I0428 20:35:34.721194  4635 solver.cpp:316] Optimization Done.
I0428 20:35:34.721212  4635 caffe.cpp:259] Optimization Done.
