I0428 19:51:05.051735 27191 caffe.cpp:218] Using GPUs 0
I0428 19:51:05.085474 27191 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:05.593662 27191 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test623.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:05.593803 27191 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test623.prototxt
I0428 19:51:05.594223 27191 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:05.594243 27191 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:05.594347 27191 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:05.594427 27191 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:05.594528 27191 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:05.594552 27191 net.cpp:86] Creating Layer mnist
I0428 19:51:05.594559 27191 net.cpp:382] mnist -> data
I0428 19:51:05.594583 27191 net.cpp:382] mnist -> label
I0428 19:51:05.595670 27191 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:05.598143 27191 net.cpp:124] Setting up mnist
I0428 19:51:05.598162 27191 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:05.598168 27191 net.cpp:131] Top shape: 64 (64)
I0428 19:51:05.598171 27191 net.cpp:139] Memory required for data: 200960
I0428 19:51:05.598179 27191 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:05.598207 27191 net.cpp:86] Creating Layer conv0
I0428 19:51:05.598228 27191 net.cpp:408] conv0 <- data
I0428 19:51:05.598242 27191 net.cpp:382] conv0 -> conv0
I0428 19:51:05.865252 27191 net.cpp:124] Setting up conv0
I0428 19:51:05.865309 27191 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:05.865312 27191 net.cpp:139] Memory required for data: 938240
I0428 19:51:05.865329 27191 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:05.865341 27191 net.cpp:86] Creating Layer pool0
I0428 19:51:05.865345 27191 net.cpp:408] pool0 <- conv0
I0428 19:51:05.865366 27191 net.cpp:382] pool0 -> pool0
I0428 19:51:05.865416 27191 net.cpp:124] Setting up pool0
I0428 19:51:05.865433 27191 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:05.865437 27191 net.cpp:139] Memory required for data: 1122560
I0428 19:51:05.865439 27191 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:05.865450 27191 net.cpp:86] Creating Layer conv1
I0428 19:51:05.865454 27191 net.cpp:408] conv1 <- pool0
I0428 19:51:05.865459 27191 net.cpp:382] conv1 -> conv1
I0428 19:51:05.868110 27191 net.cpp:124] Setting up conv1
I0428 19:51:05.868139 27191 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:51:05.868142 27191 net.cpp:139] Memory required for data: 1286400
I0428 19:51:05.868151 27191 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:05.868160 27191 net.cpp:86] Creating Layer pool1
I0428 19:51:05.868163 27191 net.cpp:408] pool1 <- conv1
I0428 19:51:05.868167 27191 net.cpp:382] pool1 -> pool1
I0428 19:51:05.868217 27191 net.cpp:124] Setting up pool1
I0428 19:51:05.868222 27191 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:51:05.868226 27191 net.cpp:139] Memory required for data: 1327360
I0428 19:51:05.868228 27191 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:05.868234 27191 net.cpp:86] Creating Layer ip1
I0428 19:51:05.868237 27191 net.cpp:408] ip1 <- pool1
I0428 19:51:05.868242 27191 net.cpp:382] ip1 -> ip1
I0428 19:51:05.869272 27191 net.cpp:124] Setting up ip1
I0428 19:51:05.869284 27191 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:05.869304 27191 net.cpp:139] Memory required for data: 1340160
I0428 19:51:05.869312 27191 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:05.869318 27191 net.cpp:86] Creating Layer relu1
I0428 19:51:05.869321 27191 net.cpp:408] relu1 <- ip1
I0428 19:51:05.869325 27191 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:05.869499 27191 net.cpp:124] Setting up relu1
I0428 19:51:05.869508 27191 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:05.869511 27191 net.cpp:139] Memory required for data: 1352960
I0428 19:51:05.869513 27191 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:05.869520 27191 net.cpp:86] Creating Layer ip2
I0428 19:51:05.869523 27191 net.cpp:408] ip2 <- ip1
I0428 19:51:05.869527 27191 net.cpp:382] ip2 -> ip2
I0428 19:51:05.869630 27191 net.cpp:124] Setting up ip2
I0428 19:51:05.869637 27191 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:05.869639 27191 net.cpp:139] Memory required for data: 1365760
I0428 19:51:05.869644 27191 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:05.869650 27191 net.cpp:86] Creating Layer relu2
I0428 19:51:05.869652 27191 net.cpp:408] relu2 <- ip2
I0428 19:51:05.869673 27191 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:05.870398 27191 net.cpp:124] Setting up relu2
I0428 19:51:05.870409 27191 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:05.870429 27191 net.cpp:139] Memory required for data: 1378560
I0428 19:51:05.870431 27191 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:05.870438 27191 net.cpp:86] Creating Layer ip3
I0428 19:51:05.870441 27191 net.cpp:408] ip3 <- ip2
I0428 19:51:05.870446 27191 net.cpp:382] ip3 -> ip3
I0428 19:51:05.870539 27191 net.cpp:124] Setting up ip3
I0428 19:51:05.870546 27191 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:05.870549 27191 net.cpp:139] Memory required for data: 1381120
I0428 19:51:05.870556 27191 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:05.870561 27191 net.cpp:86] Creating Layer relu3
I0428 19:51:05.870564 27191 net.cpp:408] relu3 <- ip3
I0428 19:51:05.870568 27191 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:05.870726 27191 net.cpp:124] Setting up relu3
I0428 19:51:05.870734 27191 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:05.870738 27191 net.cpp:139] Memory required for data: 1383680
I0428 19:51:05.870740 27191 layer_factory.hpp:77] Creating layer loss
I0428 19:51:05.870746 27191 net.cpp:86] Creating Layer loss
I0428 19:51:05.870764 27191 net.cpp:408] loss <- ip3
I0428 19:51:05.870769 27191 net.cpp:408] loss <- label
I0428 19:51:05.870774 27191 net.cpp:382] loss -> loss
I0428 19:51:05.870791 27191 layer_factory.hpp:77] Creating layer loss
I0428 19:51:05.871011 27191 net.cpp:124] Setting up loss
I0428 19:51:05.871021 27191 net.cpp:131] Top shape: (1)
I0428 19:51:05.871024 27191 net.cpp:134]     with loss weight 1
I0428 19:51:05.871037 27191 net.cpp:139] Memory required for data: 1383684
I0428 19:51:05.871042 27191 net.cpp:200] loss needs backward computation.
I0428 19:51:05.871044 27191 net.cpp:200] relu3 needs backward computation.
I0428 19:51:05.871047 27191 net.cpp:200] ip3 needs backward computation.
I0428 19:51:05.871050 27191 net.cpp:200] relu2 needs backward computation.
I0428 19:51:05.871053 27191 net.cpp:200] ip2 needs backward computation.
I0428 19:51:05.871057 27191 net.cpp:200] relu1 needs backward computation.
I0428 19:51:05.871059 27191 net.cpp:200] ip1 needs backward computation.
I0428 19:51:05.871062 27191 net.cpp:200] pool1 needs backward computation.
I0428 19:51:05.871065 27191 net.cpp:200] conv1 needs backward computation.
I0428 19:51:05.871068 27191 net.cpp:200] pool0 needs backward computation.
I0428 19:51:05.871086 27191 net.cpp:200] conv0 needs backward computation.
I0428 19:51:05.871089 27191 net.cpp:202] mnist does not need backward computation.
I0428 19:51:05.871093 27191 net.cpp:244] This network produces output loss
I0428 19:51:05.871101 27191 net.cpp:257] Network initialization done.
I0428 19:51:05.871407 27191 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test623.prototxt
I0428 19:51:05.871462 27191 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:05.871548 27191 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:51:05.871624 27191 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:05.871668 27191 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:05.871680 27191 net.cpp:86] Creating Layer mnist
I0428 19:51:05.871685 27191 net.cpp:382] mnist -> data
I0428 19:51:05.871691 27191 net.cpp:382] mnist -> label
I0428 19:51:05.871770 27191 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:05.873975 27191 net.cpp:124] Setting up mnist
I0428 19:51:05.874003 27191 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:05.874007 27191 net.cpp:131] Top shape: 100 (100)
I0428 19:51:05.874011 27191 net.cpp:139] Memory required for data: 314000
I0428 19:51:05.874014 27191 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:05.874064 27191 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:05.874068 27191 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:05.874073 27191 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:05.874080 27191 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:05.874125 27191 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:05.874130 27191 net.cpp:131] Top shape: 100 (100)
I0428 19:51:05.874135 27191 net.cpp:131] Top shape: 100 (100)
I0428 19:51:05.874137 27191 net.cpp:139] Memory required for data: 314800
I0428 19:51:05.874140 27191 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:05.874148 27191 net.cpp:86] Creating Layer conv0
I0428 19:51:05.874151 27191 net.cpp:408] conv0 <- data
I0428 19:51:05.874155 27191 net.cpp:382] conv0 -> conv0
I0428 19:51:05.875850 27191 net.cpp:124] Setting up conv0
I0428 19:51:05.875864 27191 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:05.875867 27191 net.cpp:139] Memory required for data: 1466800
I0428 19:51:05.875875 27191 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:05.875881 27191 net.cpp:86] Creating Layer pool0
I0428 19:51:05.875895 27191 net.cpp:408] pool0 <- conv0
I0428 19:51:05.875900 27191 net.cpp:382] pool0 -> pool0
I0428 19:51:05.875934 27191 net.cpp:124] Setting up pool0
I0428 19:51:05.875939 27191 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:05.875942 27191 net.cpp:139] Memory required for data: 1754800
I0428 19:51:05.875944 27191 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:05.875952 27191 net.cpp:86] Creating Layer conv1
I0428 19:51:05.875955 27191 net.cpp:408] conv1 <- pool0
I0428 19:51:05.875960 27191 net.cpp:382] conv1 -> conv1
I0428 19:51:05.878073 27191 net.cpp:124] Setting up conv1
I0428 19:51:05.878087 27191 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:51:05.878092 27191 net.cpp:139] Memory required for data: 2010800
I0428 19:51:05.878099 27191 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:05.878106 27191 net.cpp:86] Creating Layer pool1
I0428 19:51:05.878110 27191 net.cpp:408] pool1 <- conv1
I0428 19:51:05.878114 27191 net.cpp:382] pool1 -> pool1
I0428 19:51:05.878159 27191 net.cpp:124] Setting up pool1
I0428 19:51:05.878165 27191 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:51:05.878166 27191 net.cpp:139] Memory required for data: 2074800
I0428 19:51:05.878175 27191 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:05.878181 27191 net.cpp:86] Creating Layer ip1
I0428 19:51:05.878185 27191 net.cpp:408] ip1 <- pool1
I0428 19:51:05.878188 27191 net.cpp:382] ip1 -> ip1
I0428 19:51:05.878320 27191 net.cpp:124] Setting up ip1
I0428 19:51:05.878329 27191 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:05.878341 27191 net.cpp:139] Memory required for data: 2094800
I0428 19:51:05.878348 27191 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:05.878353 27191 net.cpp:86] Creating Layer relu1
I0428 19:51:05.878356 27191 net.cpp:408] relu1 <- ip1
I0428 19:51:05.878360 27191 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:05.878664 27191 net.cpp:124] Setting up relu1
I0428 19:51:05.878672 27191 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:05.878675 27191 net.cpp:139] Memory required for data: 2114800
I0428 19:51:05.878679 27191 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:05.878685 27191 net.cpp:86] Creating Layer ip2
I0428 19:51:05.878689 27191 net.cpp:408] ip2 <- ip1
I0428 19:51:05.878695 27191 net.cpp:382] ip2 -> ip2
I0428 19:51:05.878823 27191 net.cpp:124] Setting up ip2
I0428 19:51:05.878830 27191 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:05.878834 27191 net.cpp:139] Memory required for data: 2134800
I0428 19:51:05.878839 27191 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:05.878844 27191 net.cpp:86] Creating Layer relu2
I0428 19:51:05.878847 27191 net.cpp:408] relu2 <- ip2
I0428 19:51:05.878852 27191 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:05.879015 27191 net.cpp:124] Setting up relu2
I0428 19:51:05.879024 27191 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:05.879034 27191 net.cpp:139] Memory required for data: 2154800
I0428 19:51:05.879036 27191 layer_factory.hpp:77] Creating layer ip3
I0428 19:51:05.879041 27191 net.cpp:86] Creating Layer ip3
I0428 19:51:05.879050 27191 net.cpp:408] ip3 <- ip2
I0428 19:51:05.879055 27191 net.cpp:382] ip3 -> ip3
I0428 19:51:05.879153 27191 net.cpp:124] Setting up ip3
I0428 19:51:05.879159 27191 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:05.879163 27191 net.cpp:139] Memory required for data: 2158800
I0428 19:51:05.879170 27191 layer_factory.hpp:77] Creating layer relu3
I0428 19:51:05.879174 27191 net.cpp:86] Creating Layer relu3
I0428 19:51:05.879184 27191 net.cpp:408] relu3 <- ip3
I0428 19:51:05.879187 27191 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:51:05.879986 27191 net.cpp:124] Setting up relu3
I0428 19:51:05.879997 27191 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:05.879999 27191 net.cpp:139] Memory required for data: 2162800
I0428 19:51:05.880003 27191 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:51:05.880008 27191 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:51:05.880012 27191 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:51:05.880017 27191 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:51:05.880022 27191 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:51:05.880069 27191 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:51:05.880074 27191 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:05.880077 27191 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:05.880080 27191 net.cpp:139] Memory required for data: 2170800
I0428 19:51:05.880084 27191 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:05.880095 27191 net.cpp:86] Creating Layer accuracy
I0428 19:51:05.880097 27191 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:51:05.880101 27191 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:05.880105 27191 net.cpp:382] accuracy -> accuracy
I0428 19:51:05.880112 27191 net.cpp:124] Setting up accuracy
I0428 19:51:05.880115 27191 net.cpp:131] Top shape: (1)
I0428 19:51:05.880118 27191 net.cpp:139] Memory required for data: 2170804
I0428 19:51:05.880120 27191 layer_factory.hpp:77] Creating layer loss
I0428 19:51:05.880125 27191 net.cpp:86] Creating Layer loss
I0428 19:51:05.880127 27191 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:51:05.880131 27191 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:05.880134 27191 net.cpp:382] loss -> loss
I0428 19:51:05.880141 27191 layer_factory.hpp:77] Creating layer loss
I0428 19:51:05.880406 27191 net.cpp:124] Setting up loss
I0428 19:51:05.880415 27191 net.cpp:131] Top shape: (1)
I0428 19:51:05.880419 27191 net.cpp:134]     with loss weight 1
I0428 19:51:05.880425 27191 net.cpp:139] Memory required for data: 2170808
I0428 19:51:05.880439 27191 net.cpp:200] loss needs backward computation.
I0428 19:51:05.880450 27191 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:05.880453 27191 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:51:05.880456 27191 net.cpp:200] relu3 needs backward computation.
I0428 19:51:05.880460 27191 net.cpp:200] ip3 needs backward computation.
I0428 19:51:05.880462 27191 net.cpp:200] relu2 needs backward computation.
I0428 19:51:05.880465 27191 net.cpp:200] ip2 needs backward computation.
I0428 19:51:05.880467 27191 net.cpp:200] relu1 needs backward computation.
I0428 19:51:05.880470 27191 net.cpp:200] ip1 needs backward computation.
I0428 19:51:05.880473 27191 net.cpp:200] pool1 needs backward computation.
I0428 19:51:05.880477 27191 net.cpp:200] conv1 needs backward computation.
I0428 19:51:05.880481 27191 net.cpp:200] pool0 needs backward computation.
I0428 19:51:05.880483 27191 net.cpp:200] conv0 needs backward computation.
I0428 19:51:05.880486 27191 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:05.880491 27191 net.cpp:202] mnist does not need backward computation.
I0428 19:51:05.880492 27191 net.cpp:244] This network produces output accuracy
I0428 19:51:05.880496 27191 net.cpp:244] This network produces output loss
I0428 19:51:05.880506 27191 net.cpp:257] Network initialization done.
I0428 19:51:05.880545 27191 solver.cpp:56] Solver scaffolding done.
I0428 19:51:05.880993 27191 caffe.cpp:248] Starting Optimization
I0428 19:51:05.881001 27191 solver.cpp:273] Solving LeNet
I0428 19:51:05.881006 27191 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:05.881845 27191 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:05.884925 27191 blocking_queue.cpp:49] Waiting for data
I0428 19:51:05.957871 27198 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:05.958384 27191 solver.cpp:398]     Test net output #0: accuracy = 0.1052
I0428 19:51:05.958406 27191 solver.cpp:398]     Test net output #1: loss = 2.29668 (* 1 = 2.29668 loss)
I0428 19:51:05.960240 27191 solver.cpp:219] Iteration 0 (-1.34882e-30 iter/s, 0.0792115s/100 iters), loss = 2.2931
I0428 19:51:05.960263 27191 solver.cpp:238]     Train net output #0: loss = 2.2931 (* 1 = 2.2931 loss)
I0428 19:51:05.960274 27191 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:06.040529 27191 solver.cpp:219] Iteration 100 (1246.03 iter/s, 0.080255s/100 iters), loss = 1.26637
I0428 19:51:06.040568 27191 solver.cpp:238]     Train net output #0: loss = 1.26637 (* 1 = 1.26637 loss)
I0428 19:51:06.040575 27191 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:06.120146 27191 solver.cpp:219] Iteration 200 (1256.51 iter/s, 0.0795853s/100 iters), loss = 1.1424
I0428 19:51:06.120185 27191 solver.cpp:238]     Train net output #0: loss = 1.1424 (* 1 = 1.1424 loss)
I0428 19:51:06.120192 27191 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:06.196424 27191 solver.cpp:219] Iteration 300 (1311.56 iter/s, 0.0762449s/100 iters), loss = 0.980765
I0428 19:51:06.196462 27191 solver.cpp:238]     Train net output #0: loss = 0.980765 (* 1 = 0.980765 loss)
I0428 19:51:06.196468 27191 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:06.273407 27191 solver.cpp:219] Iteration 400 (1299.54 iter/s, 0.0769506s/100 iters), loss = 1.32865
I0428 19:51:06.273430 27191 solver.cpp:238]     Train net output #0: loss = 1.32865 (* 1 = 1.32865 loss)
I0428 19:51:06.273435 27191 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:06.348281 27191 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:06.419625 27198 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:06.420121 27191 solver.cpp:398]     Test net output #0: accuracy = 0.6736
I0428 19:51:06.420142 27191 solver.cpp:398]     Test net output #1: loss = 0.922013 (* 1 = 0.922013 loss)
I0428 19:51:06.420961 27191 solver.cpp:219] Iteration 500 (677.882 iter/s, 0.147518s/100 iters), loss = 0.983905
I0428 19:51:06.420984 27191 solver.cpp:238]     Train net output #0: loss = 0.983905 (* 1 = 0.983905 loss)
I0428 19:51:06.421016 27191 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:06.505414 27191 solver.cpp:219] Iteration 600 (1184.56 iter/s, 0.0844197s/100 iters), loss = 0.682811
I0428 19:51:06.505439 27191 solver.cpp:238]     Train net output #0: loss = 0.682811 (* 1 = 0.682811 loss)
I0428 19:51:06.505445 27191 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:06.583772 27191 solver.cpp:219] Iteration 700 (1276.74 iter/s, 0.0783247s/100 iters), loss = 0.827009
I0428 19:51:06.583812 27191 solver.cpp:238]     Train net output #0: loss = 0.827009 (* 1 = 0.827009 loss)
I0428 19:51:06.583818 27191 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:06.660323 27191 solver.cpp:219] Iteration 800 (1306.88 iter/s, 0.0765184s/100 iters), loss = 0.739189
I0428 19:51:06.660362 27191 solver.cpp:238]     Train net output #0: loss = 0.739189 (* 1 = 0.739189 loss)
I0428 19:51:06.660383 27191 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:06.743434 27191 solver.cpp:219] Iteration 900 (1203.7 iter/s, 0.0830771s/100 iters), loss = 0.375401
I0428 19:51:06.743468 27191 solver.cpp:238]     Train net output #0: loss = 0.375401 (* 1 = 0.375401 loss)
I0428 19:51:06.743476 27191 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:06.770608 27197 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:06.821795 27191 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:06.822612 27191 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:06.823086 27191 solver.cpp:311] Iteration 1000, loss = 0.474218
I0428 19:51:06.823103 27191 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:06.898640 27198 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:06.899147 27191 solver.cpp:398]     Test net output #0: accuracy = 0.7794
I0428 19:51:06.899165 27191 solver.cpp:398]     Test net output #1: loss = 0.570612 (* 1 = 0.570612 loss)
I0428 19:51:06.899170 27191 solver.cpp:316] Optimization Done.
I0428 19:51:06.899174 27191 caffe.cpp:259] Optimization Done.
