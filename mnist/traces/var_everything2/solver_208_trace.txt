I0428 19:34:38.259241 23365 caffe.cpp:218] Using GPUs 0
I0428 19:34:38.298717 23365 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:34:38.815075 23365 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test208.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:34:38.815230 23365 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test208.prototxt
I0428 19:34:38.815595 23365 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:34:38.815613 23365 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:34:38.815701 23365 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:38.815778 23365 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:38.815877 23365 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:34:38.815901 23365 net.cpp:86] Creating Layer mnist
I0428 19:34:38.815912 23365 net.cpp:382] mnist -> data
I0428 19:34:38.815933 23365 net.cpp:382] mnist -> label
I0428 19:34:38.817049 23365 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:34:38.819516 23365 net.cpp:124] Setting up mnist
I0428 19:34:38.819535 23365 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:34:38.819540 23365 net.cpp:131] Top shape: 64 (64)
I0428 19:34:38.819545 23365 net.cpp:139] Memory required for data: 200960
I0428 19:34:38.819551 23365 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:38.819568 23365 net.cpp:86] Creating Layer conv0
I0428 19:34:38.819573 23365 net.cpp:408] conv0 <- data
I0428 19:34:38.819593 23365 net.cpp:382] conv0 -> conv0
I0428 19:34:39.101001 23365 net.cpp:124] Setting up conv0
I0428 19:34:39.101027 23365 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:34:39.101032 23365 net.cpp:139] Memory required for data: 7573760
I0428 19:34:39.101047 23365 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:39.101058 23365 net.cpp:86] Creating Layer pool0
I0428 19:34:39.101083 23365 net.cpp:408] pool0 <- conv0
I0428 19:34:39.101089 23365 net.cpp:382] pool0 -> pool0
I0428 19:34:39.101152 23365 net.cpp:124] Setting up pool0
I0428 19:34:39.101158 23365 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:34:39.101161 23365 net.cpp:139] Memory required for data: 9416960
I0428 19:34:39.101164 23365 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:39.101171 23365 net.cpp:86] Creating Layer ip1
I0428 19:34:39.101174 23365 net.cpp:408] ip1 <- pool0
I0428 19:34:39.101178 23365 net.cpp:382] ip1 -> ip1
I0428 19:34:39.102573 23365 net.cpp:124] Setting up ip1
I0428 19:34:39.102586 23365 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:39.102605 23365 net.cpp:139] Memory required for data: 9419520
I0428 19:34:39.102613 23365 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:39.102620 23365 net.cpp:86] Creating Layer relu1
I0428 19:34:39.102623 23365 net.cpp:408] relu1 <- ip1
I0428 19:34:39.102628 23365 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:39.102803 23365 net.cpp:124] Setting up relu1
I0428 19:34:39.102813 23365 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:39.102815 23365 net.cpp:139] Memory required for data: 9422080
I0428 19:34:39.102819 23365 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:39.102825 23365 net.cpp:86] Creating Layer ip2
I0428 19:34:39.102828 23365 net.cpp:408] ip2 <- ip1
I0428 19:34:39.102833 23365 net.cpp:382] ip2 -> ip2
I0428 19:34:39.102936 23365 net.cpp:124] Setting up ip2
I0428 19:34:39.102942 23365 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:39.102958 23365 net.cpp:139] Memory required for data: 9424640
I0428 19:34:39.102965 23365 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:39.102970 23365 net.cpp:86] Creating Layer relu2
I0428 19:34:39.102973 23365 net.cpp:408] relu2 <- ip2
I0428 19:34:39.102977 23365 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:39.103780 23365 net.cpp:124] Setting up relu2
I0428 19:34:39.103791 23365 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:39.103796 23365 net.cpp:139] Memory required for data: 9427200
I0428 19:34:39.103798 23365 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:39.103806 23365 net.cpp:86] Creating Layer ip3
I0428 19:34:39.103809 23365 net.cpp:408] ip3 <- ip2
I0428 19:34:39.103814 23365 net.cpp:382] ip3 -> ip3
I0428 19:34:39.103906 23365 net.cpp:124] Setting up ip3
I0428 19:34:39.103914 23365 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:39.103917 23365 net.cpp:139] Memory required for data: 9429760
I0428 19:34:39.103924 23365 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:39.103929 23365 net.cpp:86] Creating Layer relu3
I0428 19:34:39.103932 23365 net.cpp:408] relu3 <- ip3
I0428 19:34:39.103936 23365 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:39.104096 23365 net.cpp:124] Setting up relu3
I0428 19:34:39.104105 23365 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:39.104109 23365 net.cpp:139] Memory required for data: 9432320
I0428 19:34:39.104111 23365 layer_factory.hpp:77] Creating layer loss
I0428 19:34:39.104116 23365 net.cpp:86] Creating Layer loss
I0428 19:34:39.104120 23365 net.cpp:408] loss <- ip3
I0428 19:34:39.104123 23365 net.cpp:408] loss <- label
I0428 19:34:39.104128 23365 net.cpp:382] loss -> loss
I0428 19:34:39.104146 23365 layer_factory.hpp:77] Creating layer loss
I0428 19:34:39.104383 23365 net.cpp:124] Setting up loss
I0428 19:34:39.104393 23365 net.cpp:131] Top shape: (1)
I0428 19:34:39.104395 23365 net.cpp:134]     with loss weight 1
I0428 19:34:39.104409 23365 net.cpp:139] Memory required for data: 9432324
I0428 19:34:39.104413 23365 net.cpp:200] loss needs backward computation.
I0428 19:34:39.104416 23365 net.cpp:200] relu3 needs backward computation.
I0428 19:34:39.104419 23365 net.cpp:200] ip3 needs backward computation.
I0428 19:34:39.104421 23365 net.cpp:200] relu2 needs backward computation.
I0428 19:34:39.104424 23365 net.cpp:200] ip2 needs backward computation.
I0428 19:34:39.104427 23365 net.cpp:200] relu1 needs backward computation.
I0428 19:34:39.104430 23365 net.cpp:200] ip1 needs backward computation.
I0428 19:34:39.104442 23365 net.cpp:200] pool0 needs backward computation.
I0428 19:34:39.104446 23365 net.cpp:200] conv0 needs backward computation.
I0428 19:34:39.104449 23365 net.cpp:202] mnist does not need backward computation.
I0428 19:34:39.104452 23365 net.cpp:244] This network produces output loss
I0428 19:34:39.104460 23365 net.cpp:257] Network initialization done.
I0428 19:34:39.104734 23365 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test208.prototxt
I0428 19:34:39.104760 23365 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:34:39.104864 23365 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:39.104946 23365 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:39.104992 23365 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:34:39.105005 23365 net.cpp:86] Creating Layer mnist
I0428 19:34:39.105010 23365 net.cpp:382] mnist -> data
I0428 19:34:39.105017 23365 net.cpp:382] mnist -> label
I0428 19:34:39.105118 23365 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:34:39.106262 23365 net.cpp:124] Setting up mnist
I0428 19:34:39.106290 23365 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:34:39.106295 23365 net.cpp:131] Top shape: 100 (100)
I0428 19:34:39.106299 23365 net.cpp:139] Memory required for data: 314000
I0428 19:34:39.106303 23365 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:34:39.106340 23365 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:34:39.106344 23365 net.cpp:408] label_mnist_1_split <- label
I0428 19:34:39.106349 23365 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:34:39.106355 23365 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:34:39.106400 23365 net.cpp:124] Setting up label_mnist_1_split
I0428 19:34:39.106405 23365 net.cpp:131] Top shape: 100 (100)
I0428 19:34:39.106410 23365 net.cpp:131] Top shape: 100 (100)
I0428 19:34:39.106411 23365 net.cpp:139] Memory required for data: 314800
I0428 19:34:39.106425 23365 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:39.106433 23365 net.cpp:86] Creating Layer conv0
I0428 19:34:39.106436 23365 net.cpp:408] conv0 <- data
I0428 19:34:39.106441 23365 net.cpp:382] conv0 -> conv0
I0428 19:34:39.108319 23365 net.cpp:124] Setting up conv0
I0428 19:34:39.108331 23365 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:34:39.108335 23365 net.cpp:139] Memory required for data: 11834800
I0428 19:34:39.108343 23365 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:39.108350 23365 net.cpp:86] Creating Layer pool0
I0428 19:34:39.108367 23365 net.cpp:408] pool0 <- conv0
I0428 19:34:39.108372 23365 net.cpp:382] pool0 -> pool0
I0428 19:34:39.108405 23365 net.cpp:124] Setting up pool0
I0428 19:34:39.108410 23365 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:34:39.108413 23365 net.cpp:139] Memory required for data: 14714800
I0428 19:34:39.108417 23365 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:39.108422 23365 net.cpp:86] Creating Layer ip1
I0428 19:34:39.108427 23365 net.cpp:408] ip1 <- pool0
I0428 19:34:39.108430 23365 net.cpp:382] ip1 -> ip1
I0428 19:34:39.108922 23365 net.cpp:124] Setting up ip1
I0428 19:34:39.108930 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.108933 23365 net.cpp:139] Memory required for data: 14718800
I0428 19:34:39.108940 23365 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:39.108944 23365 net.cpp:86] Creating Layer relu1
I0428 19:34:39.108947 23365 net.cpp:408] relu1 <- ip1
I0428 19:34:39.108952 23365 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:39.109230 23365 net.cpp:124] Setting up relu1
I0428 19:34:39.109237 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.109256 23365 net.cpp:139] Memory required for data: 14722800
I0428 19:34:39.109259 23365 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:39.109264 23365 net.cpp:86] Creating Layer ip2
I0428 19:34:39.109267 23365 net.cpp:408] ip2 <- ip1
I0428 19:34:39.109272 23365 net.cpp:382] ip2 -> ip2
I0428 19:34:39.109436 23365 net.cpp:124] Setting up ip2
I0428 19:34:39.109443 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.109447 23365 net.cpp:139] Memory required for data: 14726800
I0428 19:34:39.109453 23365 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:39.109458 23365 net.cpp:86] Creating Layer relu2
I0428 19:34:39.109462 23365 net.cpp:408] relu2 <- ip2
I0428 19:34:39.109467 23365 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:39.110247 23365 net.cpp:124] Setting up relu2
I0428 19:34:39.110260 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.110265 23365 net.cpp:139] Memory required for data: 14730800
I0428 19:34:39.110267 23365 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:39.110275 23365 net.cpp:86] Creating Layer ip3
I0428 19:34:39.110278 23365 net.cpp:408] ip3 <- ip2
I0428 19:34:39.110285 23365 net.cpp:382] ip3 -> ip3
I0428 19:34:39.110400 23365 net.cpp:124] Setting up ip3
I0428 19:34:39.110407 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.110410 23365 net.cpp:139] Memory required for data: 14734800
I0428 19:34:39.110415 23365 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:39.110435 23365 net.cpp:86] Creating Layer relu3
I0428 19:34:39.110438 23365 net.cpp:408] relu3 <- ip3
I0428 19:34:39.110442 23365 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:39.110693 23365 net.cpp:124] Setting up relu3
I0428 19:34:39.110702 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.110710 23365 net.cpp:139] Memory required for data: 14738800
I0428 19:34:39.110714 23365 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:34:39.110718 23365 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:34:39.110721 23365 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:34:39.110726 23365 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:34:39.110746 23365 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:34:39.110780 23365 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:34:39.110785 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.110788 23365 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:39.110816 23365 net.cpp:139] Memory required for data: 14746800
I0428 19:34:39.110819 23365 layer_factory.hpp:77] Creating layer accuracy
I0428 19:34:39.110824 23365 net.cpp:86] Creating Layer accuracy
I0428 19:34:39.110833 23365 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:34:39.110837 23365 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:34:39.110841 23365 net.cpp:382] accuracy -> accuracy
I0428 19:34:39.110848 23365 net.cpp:124] Setting up accuracy
I0428 19:34:39.110852 23365 net.cpp:131] Top shape: (1)
I0428 19:34:39.110854 23365 net.cpp:139] Memory required for data: 14746804
I0428 19:34:39.110857 23365 layer_factory.hpp:77] Creating layer loss
I0428 19:34:39.110867 23365 net.cpp:86] Creating Layer loss
I0428 19:34:39.110869 23365 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:34:39.110873 23365 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:34:39.110877 23365 net.cpp:382] loss -> loss
I0428 19:34:39.110882 23365 layer_factory.hpp:77] Creating layer loss
I0428 19:34:39.111112 23365 net.cpp:124] Setting up loss
I0428 19:34:39.111121 23365 net.cpp:131] Top shape: (1)
I0428 19:34:39.111125 23365 net.cpp:134]     with loss weight 1
I0428 19:34:39.111131 23365 net.cpp:139] Memory required for data: 14746808
I0428 19:34:39.111142 23365 net.cpp:200] loss needs backward computation.
I0428 19:34:39.111145 23365 net.cpp:202] accuracy does not need backward computation.
I0428 19:34:39.111155 23365 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:34:39.111157 23365 net.cpp:200] relu3 needs backward computation.
I0428 19:34:39.111160 23365 net.cpp:200] ip3 needs backward computation.
I0428 19:34:39.111163 23365 net.cpp:200] relu2 needs backward computation.
I0428 19:34:39.111171 23365 net.cpp:200] ip2 needs backward computation.
I0428 19:34:39.111176 23365 net.cpp:200] relu1 needs backward computation.
I0428 19:34:39.111177 23365 net.cpp:200] ip1 needs backward computation.
I0428 19:34:39.111181 23365 net.cpp:200] pool0 needs backward computation.
I0428 19:34:39.111183 23365 net.cpp:200] conv0 needs backward computation.
I0428 19:34:39.111192 23365 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:34:39.111196 23365 net.cpp:202] mnist does not need backward computation.
I0428 19:34:39.111198 23365 net.cpp:244] This network produces output accuracy
I0428 19:34:39.111202 23365 net.cpp:244] This network produces output loss
I0428 19:34:39.111215 23365 net.cpp:257] Network initialization done.
I0428 19:34:39.111268 23365 solver.cpp:56] Solver scaffolding done.
I0428 19:34:39.111558 23365 caffe.cpp:248] Starting Optimization
I0428 19:34:39.111564 23365 solver.cpp:273] Solving LeNet
I0428 19:34:39.111567 23365 solver.cpp:274] Learning Rate Policy: inv
I0428 19:34:39.112298 23365 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:34:39.210448 23372 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:39.213016 23365 solver.cpp:398]     Test net output #0: accuracy = 0.0993
I0428 19:34:39.213052 23365 solver.cpp:398]     Test net output #1: loss = 2.31857 (* 1 = 2.31857 loss)
I0428 19:34:39.217388 23365 solver.cpp:219] Iteration 0 (0 iter/s, 0.105796s/100 iters), loss = 2.31247
I0428 19:34:39.217427 23365 solver.cpp:238]     Train net output #0: loss = 2.31247 (* 1 = 2.31247 loss)
I0428 19:34:39.217438 23365 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:34:39.356367 23365 solver.cpp:219] Iteration 100 (719.732 iter/s, 0.138941s/100 iters), loss = 0.641921
I0428 19:34:39.356411 23365 solver.cpp:238]     Train net output #0: loss = 0.641921 (* 1 = 0.641921 loss)
I0428 19:34:39.356417 23365 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:34:39.506424 23365 solver.cpp:219] Iteration 200 (666.682 iter/s, 0.149997s/100 iters), loss = 0.410389
I0428 19:34:39.506467 23365 solver.cpp:238]     Train net output #0: loss = 0.410389 (* 1 = 0.410389 loss)
I0428 19:34:39.506477 23365 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:34:39.651418 23365 solver.cpp:219] Iteration 300 (689.94 iter/s, 0.14494s/100 iters), loss = 0.344667
I0428 19:34:39.651469 23365 solver.cpp:238]     Train net output #0: loss = 0.344667 (* 1 = 0.344667 loss)
I0428 19:34:39.651477 23365 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:34:39.794401 23365 solver.cpp:219] Iteration 400 (699.689 iter/s, 0.142921s/100 iters), loss = 0.276183
I0428 19:34:39.794433 23365 solver.cpp:238]     Train net output #0: loss = 0.276183 (* 1 = 0.276183 loss)
I0428 19:34:39.794440 23365 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:34:39.936282 23365 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:34:40.037441 23372 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:40.040290 23365 solver.cpp:398]     Test net output #0: accuracy = 0.9331
I0428 19:34:40.040315 23365 solver.cpp:398]     Test net output #1: loss = 0.237421 (* 1 = 0.237421 loss)
I0428 19:34:40.041707 23365 solver.cpp:219] Iteration 500 (404.439 iter/s, 0.247256s/100 iters), loss = 0.323529
I0428 19:34:40.041734 23365 solver.cpp:238]     Train net output #0: loss = 0.323529 (* 1 = 0.323529 loss)
I0428 19:34:40.041743 23365 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:34:40.186002 23365 solver.cpp:219] Iteration 600 (693.232 iter/s, 0.144252s/100 iters), loss = 0.155827
I0428 19:34:40.186050 23365 solver.cpp:238]     Train net output #0: loss = 0.155827 (* 1 = 0.155827 loss)
I0428 19:34:40.186064 23365 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:34:40.329447 23365 solver.cpp:219] Iteration 700 (697.411 iter/s, 0.143388s/100 iters), loss = 0.33463
I0428 19:34:40.329475 23365 solver.cpp:238]     Train net output #0: loss = 0.33463 (* 1 = 0.33463 loss)
I0428 19:34:40.329483 23365 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:34:40.475047 23365 solver.cpp:219] Iteration 800 (687.004 iter/s, 0.14556s/100 iters), loss = 0.314367
I0428 19:34:40.475076 23365 solver.cpp:238]     Train net output #0: loss = 0.314367 (* 1 = 0.314367 loss)
I0428 19:34:40.475085 23365 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:34:40.618263 23365 solver.cpp:219] Iteration 900 (698.453 iter/s, 0.143174s/100 iters), loss = 0.329192
I0428 19:34:40.618294 23365 solver.cpp:238]     Train net output #0: loss = 0.329191 (* 1 = 0.329191 loss)
I0428 19:34:40.618302 23365 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:34:40.664988 23371 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:40.758538 23365 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:34:40.760500 23365 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:34:40.762123 23365 solver.cpp:311] Iteration 1000, loss = 0.163018
I0428 19:34:40.762140 23365 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:34:40.860452 23372 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:40.864019 23365 solver.cpp:398]     Test net output #0: accuracy = 0.9588
I0428 19:34:40.864042 23365 solver.cpp:398]     Test net output #1: loss = 0.146213 (* 1 = 0.146213 loss)
I0428 19:34:40.864058 23365 solver.cpp:316] Optimization Done.
I0428 19:34:40.864061 23365 caffe.cpp:259] Optimization Done.
