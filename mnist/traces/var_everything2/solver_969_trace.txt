I0428 20:04:17.150645 30358 caffe.cpp:218] Using GPUs 0
I0428 20:04:17.180717 30358 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:04:17.700979 30358 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test969.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:04:17.701120 30358 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test969.prototxt
I0428 20:04:17.701536 30358 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:04:17.701565 30358 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:04:17.701666 30358 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:17.701746 30358 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:17.701844 30358 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:04:17.701869 30358 net.cpp:86] Creating Layer mnist
I0428 20:04:17.701877 30358 net.cpp:382] mnist -> data
I0428 20:04:17.701898 30358 net.cpp:382] mnist -> label
I0428 20:04:17.702998 30358 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:04:17.705461 30358 net.cpp:124] Setting up mnist
I0428 20:04:17.705479 30358 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:04:17.705485 30358 net.cpp:131] Top shape: 64 (64)
I0428 20:04:17.705488 30358 net.cpp:139] Memory required for data: 200960
I0428 20:04:17.705497 30358 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:17.705513 30358 net.cpp:86] Creating Layer conv0
I0428 20:04:17.705534 30358 net.cpp:408] conv0 <- data
I0428 20:04:17.705549 30358 net.cpp:382] conv0 -> conv0
I0428 20:04:17.996940 30358 net.cpp:124] Setting up conv0
I0428 20:04:17.996973 30358 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:04:17.996978 30358 net.cpp:139] Memory required for data: 1675520
I0428 20:04:17.996995 30358 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:17.997012 30358 net.cpp:86] Creating Layer pool0
I0428 20:04:17.997017 30358 net.cpp:408] pool0 <- conv0
I0428 20:04:17.997023 30358 net.cpp:382] pool0 -> pool0
I0428 20:04:17.997078 30358 net.cpp:124] Setting up pool0
I0428 20:04:17.997086 30358 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:04:17.997088 30358 net.cpp:139] Memory required for data: 2044160
I0428 20:04:17.997092 30358 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:17.997105 30358 net.cpp:86] Creating Layer conv1
I0428 20:04:17.997109 30358 net.cpp:408] conv1 <- pool0
I0428 20:04:17.997115 30358 net.cpp:382] conv1 -> conv1
I0428 20:04:17.999430 30358 net.cpp:124] Setting up conv1
I0428 20:04:17.999449 30358 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:04:17.999454 30358 net.cpp:139] Memory required for data: 3682560
I0428 20:04:17.999464 30358 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:17.999472 30358 net.cpp:86] Creating Layer pool1
I0428 20:04:17.999477 30358 net.cpp:408] pool1 <- conv1
I0428 20:04:17.999483 30358 net.cpp:382] pool1 -> pool1
I0428 20:04:17.999527 30358 net.cpp:124] Setting up pool1
I0428 20:04:17.999533 30358 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:04:17.999537 30358 net.cpp:139] Memory required for data: 4092160
I0428 20:04:17.999541 30358 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:17.999549 30358 net.cpp:86] Creating Layer ip1
I0428 20:04:17.999552 30358 net.cpp:408] ip1 <- pool1
I0428 20:04:17.999558 30358 net.cpp:382] ip1 -> ip1
I0428 20:04:18.001199 30358 net.cpp:124] Setting up ip1
I0428 20:04:18.001214 30358 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:18.001219 30358 net.cpp:139] Memory required for data: 4104960
I0428 20:04:18.001229 30358 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:18.001235 30358 net.cpp:86] Creating Layer relu1
I0428 20:04:18.001238 30358 net.cpp:408] relu1 <- ip1
I0428 20:04:18.001246 30358 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:18.001454 30358 net.cpp:124] Setting up relu1
I0428 20:04:18.001466 30358 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:04:18.001469 30358 net.cpp:139] Memory required for data: 4117760
I0428 20:04:18.001473 30358 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:18.001482 30358 net.cpp:86] Creating Layer ip2
I0428 20:04:18.001485 30358 net.cpp:408] ip2 <- ip1
I0428 20:04:18.001492 30358 net.cpp:382] ip2 -> ip2
I0428 20:04:18.002585 30358 net.cpp:124] Setting up ip2
I0428 20:04:18.002601 30358 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:18.002605 30358 net.cpp:139] Memory required for data: 4124160
I0428 20:04:18.002612 30358 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:18.002620 30358 net.cpp:86] Creating Layer relu2
I0428 20:04:18.002624 30358 net.cpp:408] relu2 <- ip2
I0428 20:04:18.002630 30358 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:18.003482 30358 net.cpp:124] Setting up relu2
I0428 20:04:18.003497 30358 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:04:18.003501 30358 net.cpp:139] Memory required for data: 4130560
I0428 20:04:18.003505 30358 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:18.003515 30358 net.cpp:86] Creating Layer ip3
I0428 20:04:18.003518 30358 net.cpp:408] ip3 <- ip2
I0428 20:04:18.003525 30358 net.cpp:382] ip3 -> ip3
I0428 20:04:18.003640 30358 net.cpp:124] Setting up ip3
I0428 20:04:18.003650 30358 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:18.003654 30358 net.cpp:139] Memory required for data: 4133120
I0428 20:04:18.003664 30358 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:18.003669 30358 net.cpp:86] Creating Layer relu3
I0428 20:04:18.003674 30358 net.cpp:408] relu3 <- ip3
I0428 20:04:18.003679 30358 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:18.003873 30358 net.cpp:124] Setting up relu3
I0428 20:04:18.003885 30358 net.cpp:131] Top shape: 64 10 (640)
I0428 20:04:18.003888 30358 net.cpp:139] Memory required for data: 4135680
I0428 20:04:18.003892 30358 layer_factory.hpp:77] Creating layer loss
I0428 20:04:18.003901 30358 net.cpp:86] Creating Layer loss
I0428 20:04:18.003904 30358 net.cpp:408] loss <- ip3
I0428 20:04:18.003908 30358 net.cpp:408] loss <- label
I0428 20:04:18.003916 30358 net.cpp:382] loss -> loss
I0428 20:04:18.003932 30358 layer_factory.hpp:77] Creating layer loss
I0428 20:04:18.004194 30358 net.cpp:124] Setting up loss
I0428 20:04:18.004204 30358 net.cpp:131] Top shape: (1)
I0428 20:04:18.004209 30358 net.cpp:134]     with loss weight 1
I0428 20:04:18.004225 30358 net.cpp:139] Memory required for data: 4135684
I0428 20:04:18.004228 30358 net.cpp:200] loss needs backward computation.
I0428 20:04:18.004233 30358 net.cpp:200] relu3 needs backward computation.
I0428 20:04:18.004236 30358 net.cpp:200] ip3 needs backward computation.
I0428 20:04:18.004241 30358 net.cpp:200] relu2 needs backward computation.
I0428 20:04:18.004245 30358 net.cpp:200] ip2 needs backward computation.
I0428 20:04:18.004248 30358 net.cpp:200] relu1 needs backward computation.
I0428 20:04:18.004251 30358 net.cpp:200] ip1 needs backward computation.
I0428 20:04:18.004254 30358 net.cpp:200] pool1 needs backward computation.
I0428 20:04:18.004258 30358 net.cpp:200] conv1 needs backward computation.
I0428 20:04:18.004262 30358 net.cpp:200] pool0 needs backward computation.
I0428 20:04:18.004266 30358 net.cpp:200] conv0 needs backward computation.
I0428 20:04:18.004269 30358 net.cpp:202] mnist does not need backward computation.
I0428 20:04:18.004273 30358 net.cpp:244] This network produces output loss
I0428 20:04:18.004283 30358 net.cpp:257] Network initialization done.
I0428 20:04:18.004664 30358 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test969.prototxt
I0428 20:04:18.004695 30358 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:04:18.004802 30358 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:04:18.004905 30358 layer_factory.hpp:77] Creating layer mnist
I0428 20:04:18.004959 30358 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:04:18.004974 30358 net.cpp:86] Creating Layer mnist
I0428 20:04:18.004979 30358 net.cpp:382] mnist -> data
I0428 20:04:18.004989 30358 net.cpp:382] mnist -> label
I0428 20:04:18.005089 30358 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:04:18.006314 30358 net.cpp:124] Setting up mnist
I0428 20:04:18.006330 30358 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:04:18.006336 30358 net.cpp:131] Top shape: 100 (100)
I0428 20:04:18.006340 30358 net.cpp:139] Memory required for data: 314000
I0428 20:04:18.006343 30358 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:04:18.006351 30358 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:04:18.006356 30358 net.cpp:408] label_mnist_1_split <- label
I0428 20:04:18.006361 30358 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:04:18.006369 30358 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:04:18.006424 30358 net.cpp:124] Setting up label_mnist_1_split
I0428 20:04:18.006431 30358 net.cpp:131] Top shape: 100 (100)
I0428 20:04:18.006435 30358 net.cpp:131] Top shape: 100 (100)
I0428 20:04:18.006438 30358 net.cpp:139] Memory required for data: 314800
I0428 20:04:18.006443 30358 layer_factory.hpp:77] Creating layer conv0
I0428 20:04:18.006451 30358 net.cpp:86] Creating Layer conv0
I0428 20:04:18.006455 30358 net.cpp:408] conv0 <- data
I0428 20:04:18.006463 30358 net.cpp:382] conv0 -> conv0
I0428 20:04:18.008417 30358 net.cpp:124] Setting up conv0
I0428 20:04:18.008435 30358 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:04:18.008438 30358 net.cpp:139] Memory required for data: 2618800
I0428 20:04:18.008450 30358 layer_factory.hpp:77] Creating layer pool0
I0428 20:04:18.008457 30358 net.cpp:86] Creating Layer pool0
I0428 20:04:18.008461 30358 net.cpp:408] pool0 <- conv0
I0428 20:04:18.008467 30358 net.cpp:382] pool0 -> pool0
I0428 20:04:18.008509 30358 net.cpp:124] Setting up pool0
I0428 20:04:18.008515 30358 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:04:18.008519 30358 net.cpp:139] Memory required for data: 3194800
I0428 20:04:18.008523 30358 layer_factory.hpp:77] Creating layer conv1
I0428 20:04:18.008533 30358 net.cpp:86] Creating Layer conv1
I0428 20:04:18.008536 30358 net.cpp:408] conv1 <- pool0
I0428 20:04:18.008543 30358 net.cpp:382] conv1 -> conv1
I0428 20:04:18.010432 30358 net.cpp:124] Setting up conv1
I0428 20:04:18.010449 30358 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:04:18.010454 30358 net.cpp:139] Memory required for data: 5754800
I0428 20:04:18.010465 30358 layer_factory.hpp:77] Creating layer pool1
I0428 20:04:18.010473 30358 net.cpp:86] Creating Layer pool1
I0428 20:04:18.010478 30358 net.cpp:408] pool1 <- conv1
I0428 20:04:18.010483 30358 net.cpp:382] pool1 -> pool1
I0428 20:04:18.010524 30358 net.cpp:124] Setting up pool1
I0428 20:04:18.010531 30358 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:04:18.010545 30358 net.cpp:139] Memory required for data: 6394800
I0428 20:04:18.010547 30358 layer_factory.hpp:77] Creating layer ip1
I0428 20:04:18.010555 30358 net.cpp:86] Creating Layer ip1
I0428 20:04:18.010560 30358 net.cpp:408] ip1 <- pool1
I0428 20:04:18.010565 30358 net.cpp:382] ip1 -> ip1
I0428 20:04:18.011230 30358 net.cpp:124] Setting up ip1
I0428 20:04:18.011240 30358 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:18.011255 30358 net.cpp:139] Memory required for data: 6414800
I0428 20:04:18.011265 30358 layer_factory.hpp:77] Creating layer relu1
I0428 20:04:18.011271 30358 net.cpp:86] Creating Layer relu1
I0428 20:04:18.011276 30358 net.cpp:408] relu1 <- ip1
I0428 20:04:18.011281 30358 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:04:18.011551 30358 net.cpp:124] Setting up relu1
I0428 20:04:18.011564 30358 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:04:18.011567 30358 net.cpp:139] Memory required for data: 6434800
I0428 20:04:18.011571 30358 layer_factory.hpp:77] Creating layer ip2
I0428 20:04:18.011580 30358 net.cpp:86] Creating Layer ip2
I0428 20:04:18.011585 30358 net.cpp:408] ip2 <- ip1
I0428 20:04:18.011591 30358 net.cpp:382] ip2 -> ip2
I0428 20:04:18.011716 30358 net.cpp:124] Setting up ip2
I0428 20:04:18.011725 30358 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:18.011729 30358 net.cpp:139] Memory required for data: 6444800
I0428 20:04:18.011735 30358 layer_factory.hpp:77] Creating layer relu2
I0428 20:04:18.011741 30358 net.cpp:86] Creating Layer relu2
I0428 20:04:18.011745 30358 net.cpp:408] relu2 <- ip2
I0428 20:04:18.011750 30358 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:04:18.011925 30358 net.cpp:124] Setting up relu2
I0428 20:04:18.011935 30358 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:04:18.011940 30358 net.cpp:139] Memory required for data: 6454800
I0428 20:04:18.011943 30358 layer_factory.hpp:77] Creating layer ip3
I0428 20:04:18.011950 30358 net.cpp:86] Creating Layer ip3
I0428 20:04:18.011955 30358 net.cpp:408] ip3 <- ip2
I0428 20:04:18.011960 30358 net.cpp:382] ip3 -> ip3
I0428 20:04:18.012071 30358 net.cpp:124] Setting up ip3
I0428 20:04:18.012079 30358 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:18.012084 30358 net.cpp:139] Memory required for data: 6458800
I0428 20:04:18.012094 30358 layer_factory.hpp:77] Creating layer relu3
I0428 20:04:18.012106 30358 net.cpp:86] Creating Layer relu3
I0428 20:04:18.012111 30358 net.cpp:408] relu3 <- ip3
I0428 20:04:18.012116 30358 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:04:18.013049 30358 net.cpp:124] Setting up relu3
I0428 20:04:18.013064 30358 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:18.013068 30358 net.cpp:139] Memory required for data: 6462800
I0428 20:04:18.013072 30358 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:04:18.013079 30358 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:04:18.013083 30358 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:04:18.013089 30358 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:04:18.013097 30358 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:04:18.013145 30358 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:04:18.013151 30358 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:18.013155 30358 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:04:18.013159 30358 net.cpp:139] Memory required for data: 6470800
I0428 20:04:18.013162 30358 layer_factory.hpp:77] Creating layer accuracy
I0428 20:04:18.013175 30358 net.cpp:86] Creating Layer accuracy
I0428 20:04:18.013178 30358 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:04:18.013185 30358 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:04:18.013190 30358 net.cpp:382] accuracy -> accuracy
I0428 20:04:18.013197 30358 net.cpp:124] Setting up accuracy
I0428 20:04:18.013202 30358 net.cpp:131] Top shape: (1)
I0428 20:04:18.013206 30358 net.cpp:139] Memory required for data: 6470804
I0428 20:04:18.013211 30358 layer_factory.hpp:77] Creating layer loss
I0428 20:04:18.013221 30358 net.cpp:86] Creating Layer loss
I0428 20:04:18.013226 30358 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:04:18.013229 30358 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:04:18.013242 30358 net.cpp:382] loss -> loss
I0428 20:04:18.013248 30358 layer_factory.hpp:77] Creating layer loss
I0428 20:04:18.013515 30358 net.cpp:124] Setting up loss
I0428 20:04:18.013526 30358 net.cpp:131] Top shape: (1)
I0428 20:04:18.013530 30358 net.cpp:134]     with loss weight 1
I0428 20:04:18.013551 30358 net.cpp:139] Memory required for data: 6470808
I0428 20:04:18.013556 30358 net.cpp:200] loss needs backward computation.
I0428 20:04:18.013561 30358 net.cpp:202] accuracy does not need backward computation.
I0428 20:04:18.013566 30358 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:04:18.013569 30358 net.cpp:200] relu3 needs backward computation.
I0428 20:04:18.013572 30358 net.cpp:200] ip3 needs backward computation.
I0428 20:04:18.013577 30358 net.cpp:200] relu2 needs backward computation.
I0428 20:04:18.013581 30358 net.cpp:200] ip2 needs backward computation.
I0428 20:04:18.013584 30358 net.cpp:200] relu1 needs backward computation.
I0428 20:04:18.013587 30358 net.cpp:200] ip1 needs backward computation.
I0428 20:04:18.013592 30358 net.cpp:200] pool1 needs backward computation.
I0428 20:04:18.013595 30358 net.cpp:200] conv1 needs backward computation.
I0428 20:04:18.013598 30358 net.cpp:200] pool0 needs backward computation.
I0428 20:04:18.013602 30358 net.cpp:200] conv0 needs backward computation.
I0428 20:04:18.013607 30358 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:04:18.013612 30358 net.cpp:202] mnist does not need backward computation.
I0428 20:04:18.013615 30358 net.cpp:244] This network produces output accuracy
I0428 20:04:18.013619 30358 net.cpp:244] This network produces output loss
I0428 20:04:18.013631 30358 net.cpp:257] Network initialization done.
I0428 20:04:18.013680 30358 solver.cpp:56] Solver scaffolding done.
I0428 20:04:18.014086 30358 caffe.cpp:248] Starting Optimization
I0428 20:04:18.014092 30358 solver.cpp:273] Solving LeNet
I0428 20:04:18.014096 30358 solver.cpp:274] Learning Rate Policy: inv
I0428 20:04:18.014417 30358 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:04:18.021040 30358 blocking_queue.cpp:49] Waiting for data
I0428 20:04:18.095083 30366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:18.096329 30358 solver.cpp:398]     Test net output #0: accuracy = 0.1359
I0428 20:04:18.096371 30358 solver.cpp:398]     Test net output #1: loss = 2.3271 (* 1 = 2.3271 loss)
I0428 20:04:18.102018 30358 solver.cpp:219] Iteration 0 (0 iter/s, 0.0878808s/100 iters), loss = 2.31305
I0428 20:04:18.102062 30358 solver.cpp:238]     Train net output #0: loss = 2.31305 (* 1 = 2.31305 loss)
I0428 20:04:18.102080 30358 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:04:18.299139 30358 solver.cpp:219] Iteration 100 (507.469 iter/s, 0.197057s/100 iters), loss = 0.508985
I0428 20:04:18.299202 30358 solver.cpp:238]     Train net output #0: loss = 0.508985 (* 1 = 0.508985 loss)
I0428 20:04:18.299217 30358 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:04:18.485911 30358 solver.cpp:219] Iteration 200 (535.625 iter/s, 0.186698s/100 iters), loss = 0.815749
I0428 20:04:18.485955 30358 solver.cpp:238]     Train net output #0: loss = 0.815749 (* 1 = 0.815749 loss)
I0428 20:04:18.485966 30358 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:04:18.662793 30358 solver.cpp:219] Iteration 300 (565.537 iter/s, 0.176823s/100 iters), loss = 0.632565
I0428 20:04:18.662833 30358 solver.cpp:238]     Train net output #0: loss = 0.632565 (* 1 = 0.632565 loss)
I0428 20:04:18.662844 30358 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:04:18.844339 30358 solver.cpp:219] Iteration 400 (550.996 iter/s, 0.18149s/100 iters), loss = 0.526979
I0428 20:04:18.844382 30358 solver.cpp:238]     Train net output #0: loss = 0.526979 (* 1 = 0.526979 loss)
I0428 20:04:18.844391 30358 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:04:19.028260 30358 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:04:19.094319 30366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:19.096390 30358 solver.cpp:398]     Test net output #0: accuracy = 0.7778
I0428 20:04:19.096421 30358 solver.cpp:398]     Test net output #1: loss = 0.566723 (* 1 = 0.566723 loss)
I0428 20:04:19.098021 30358 solver.cpp:219] Iteration 500 (394.285 iter/s, 0.253623s/100 iters), loss = 0.526831
I0428 20:04:19.098073 30358 solver.cpp:238]     Train net output #0: loss = 0.526831 (* 1 = 0.526831 loss)
I0428 20:04:19.098083 30358 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:04:19.281361 30358 solver.cpp:219] Iteration 600 (545.645 iter/s, 0.183269s/100 iters), loss = 0.737887
I0428 20:04:19.281415 30358 solver.cpp:238]     Train net output #0: loss = 0.737887 (* 1 = 0.737887 loss)
I0428 20:04:19.281430 30358 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:04:19.480244 30358 solver.cpp:219] Iteration 700 (502.988 iter/s, 0.198812s/100 iters), loss = 0.505161
I0428 20:04:19.480300 30358 solver.cpp:238]     Train net output #0: loss = 0.505161 (* 1 = 0.505161 loss)
I0428 20:04:19.480314 30358 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:04:19.678120 30358 solver.cpp:219] Iteration 800 (505.553 iter/s, 0.197803s/100 iters), loss = 0.755412
I0428 20:04:19.678174 30358 solver.cpp:238]     Train net output #0: loss = 0.755412 (* 1 = 0.755412 loss)
I0428 20:04:19.678191 30358 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:04:19.860026 30358 solver.cpp:219] Iteration 900 (549.931 iter/s, 0.181841s/100 iters), loss = 0.906695
I0428 20:04:19.860064 30358 solver.cpp:238]     Train net output #0: loss = 0.906695 (* 1 = 0.906695 loss)
I0428 20:04:19.860072 30358 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:04:19.914130 30364 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:20.018419 30358 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:04:20.021344 30358 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:04:20.022850 30358 solver.cpp:311] Iteration 1000, loss = 0.557934
I0428 20:04:20.022871 30358 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:04:20.084995 30366 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:04:20.086657 30358 solver.cpp:398]     Test net output #0: accuracy = 0.7827
I0428 20:04:20.086680 30358 solver.cpp:398]     Test net output #1: loss = 0.532811 (* 1 = 0.532811 loss)
I0428 20:04:20.086686 30358 solver.cpp:316] Optimization Done.
I0428 20:04:20.086691 30358 caffe.cpp:259] Optimization Done.
