I0428 19:34:58.243275 23423 caffe.cpp:218] Using GPUs 0
I0428 19:34:58.284948 23423 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:34:58.804044 23423 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test215.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:34:58.804186 23423 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test215.prototxt
I0428 19:34:58.804556 23423 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:34:58.804574 23423 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:34:58.804662 23423 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:58.804740 23423 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:58.804852 23423 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:34:58.804877 23423 net.cpp:86] Creating Layer mnist
I0428 19:34:58.804885 23423 net.cpp:382] mnist -> data
I0428 19:34:58.804909 23423 net.cpp:382] mnist -> label
I0428 19:34:58.806025 23423 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:34:58.808492 23423 net.cpp:124] Setting up mnist
I0428 19:34:58.808511 23423 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:34:58.808516 23423 net.cpp:131] Top shape: 64 (64)
I0428 19:34:58.808521 23423 net.cpp:139] Memory required for data: 200960
I0428 19:34:58.808527 23423 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:58.808545 23423 net.cpp:86] Creating Layer conv0
I0428 19:34:58.808552 23423 net.cpp:408] conv0 <- data
I0428 19:34:58.808563 23423 net.cpp:382] conv0 -> conv0
I0428 19:34:59.096302 23423 net.cpp:124] Setting up conv0
I0428 19:34:59.096329 23423 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:34:59.096334 23423 net.cpp:139] Memory required for data: 7573760
I0428 19:34:59.096349 23423 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:59.096361 23423 net.cpp:86] Creating Layer pool0
I0428 19:34:59.096385 23423 net.cpp:408] pool0 <- conv0
I0428 19:34:59.096392 23423 net.cpp:382] pool0 -> pool0
I0428 19:34:59.096441 23423 net.cpp:124] Setting up pool0
I0428 19:34:59.096447 23423 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:34:59.096451 23423 net.cpp:139] Memory required for data: 9416960
I0428 19:34:59.096453 23423 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:59.096462 23423 net.cpp:86] Creating Layer ip1
I0428 19:34:59.096464 23423 net.cpp:408] ip1 <- pool0
I0428 19:34:59.096469 23423 net.cpp:382] ip1 -> ip1
I0428 19:34:59.097815 23423 net.cpp:124] Setting up ip1
I0428 19:34:59.097831 23423 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:59.097833 23423 net.cpp:139] Memory required for data: 9419520
I0428 19:34:59.097842 23423 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:59.097849 23423 net.cpp:86] Creating Layer relu1
I0428 19:34:59.097852 23423 net.cpp:408] relu1 <- ip1
I0428 19:34:59.097857 23423 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:59.098026 23423 net.cpp:124] Setting up relu1
I0428 19:34:59.098036 23423 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:59.098038 23423 net.cpp:139] Memory required for data: 9422080
I0428 19:34:59.098042 23423 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:59.098048 23423 net.cpp:86] Creating Layer ip2
I0428 19:34:59.098052 23423 net.cpp:408] ip2 <- ip1
I0428 19:34:59.098057 23423 net.cpp:382] ip2 -> ip2
I0428 19:34:59.098153 23423 net.cpp:124] Setting up ip2
I0428 19:34:59.098161 23423 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:34:59.098165 23423 net.cpp:139] Memory required for data: 9434880
I0428 19:34:59.098171 23423 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:59.098176 23423 net.cpp:86] Creating Layer relu2
I0428 19:34:59.098181 23423 net.cpp:408] relu2 <- ip2
I0428 19:34:59.098184 23423 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:59.098915 23423 net.cpp:124] Setting up relu2
I0428 19:34:59.098928 23423 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:34:59.098932 23423 net.cpp:139] Memory required for data: 9447680
I0428 19:34:59.098935 23423 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:59.098942 23423 net.cpp:86] Creating Layer ip3
I0428 19:34:59.098947 23423 net.cpp:408] ip3 <- ip2
I0428 19:34:59.098951 23423 net.cpp:382] ip3 -> ip3
I0428 19:34:59.099051 23423 net.cpp:124] Setting up ip3
I0428 19:34:59.099059 23423 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:59.099062 23423 net.cpp:139] Memory required for data: 9450240
I0428 19:34:59.099068 23423 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:59.099074 23423 net.cpp:86] Creating Layer relu3
I0428 19:34:59.099077 23423 net.cpp:408] relu3 <- ip3
I0428 19:34:59.099082 23423 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:59.099228 23423 net.cpp:124] Setting up relu3
I0428 19:34:59.099237 23423 net.cpp:131] Top shape: 64 10 (640)
I0428 19:34:59.099241 23423 net.cpp:139] Memory required for data: 9452800
I0428 19:34:59.099243 23423 layer_factory.hpp:77] Creating layer loss
I0428 19:34:59.099254 23423 net.cpp:86] Creating Layer loss
I0428 19:34:59.099259 23423 net.cpp:408] loss <- ip3
I0428 19:34:59.099263 23423 net.cpp:408] loss <- label
I0428 19:34:59.099268 23423 net.cpp:382] loss -> loss
I0428 19:34:59.099287 23423 layer_factory.hpp:77] Creating layer loss
I0428 19:34:59.099520 23423 net.cpp:124] Setting up loss
I0428 19:34:59.099529 23423 net.cpp:131] Top shape: (1)
I0428 19:34:59.099532 23423 net.cpp:134]     with loss weight 1
I0428 19:34:59.099548 23423 net.cpp:139] Memory required for data: 9452804
I0428 19:34:59.099552 23423 net.cpp:200] loss needs backward computation.
I0428 19:34:59.099556 23423 net.cpp:200] relu3 needs backward computation.
I0428 19:34:59.099560 23423 net.cpp:200] ip3 needs backward computation.
I0428 19:34:59.099562 23423 net.cpp:200] relu2 needs backward computation.
I0428 19:34:59.099565 23423 net.cpp:200] ip2 needs backward computation.
I0428 19:34:59.099567 23423 net.cpp:200] relu1 needs backward computation.
I0428 19:34:59.099570 23423 net.cpp:200] ip1 needs backward computation.
I0428 19:34:59.099583 23423 net.cpp:200] pool0 needs backward computation.
I0428 19:34:59.099586 23423 net.cpp:200] conv0 needs backward computation.
I0428 19:34:59.099589 23423 net.cpp:202] mnist does not need backward computation.
I0428 19:34:59.099592 23423 net.cpp:244] This network produces output loss
I0428 19:34:59.099601 23423 net.cpp:257] Network initialization done.
I0428 19:34:59.099885 23423 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test215.prototxt
I0428 19:34:59.099911 23423 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:34:59.099993 23423 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:34:59.100062 23423 layer_factory.hpp:77] Creating layer mnist
I0428 19:34:59.100106 23423 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:34:59.100124 23423 net.cpp:86] Creating Layer mnist
I0428 19:34:59.100131 23423 net.cpp:382] mnist -> data
I0428 19:34:59.100139 23423 net.cpp:382] mnist -> label
I0428 19:34:59.100227 23423 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:34:59.101364 23423 net.cpp:124] Setting up mnist
I0428 19:34:59.101377 23423 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:34:59.101382 23423 net.cpp:131] Top shape: 100 (100)
I0428 19:34:59.101385 23423 net.cpp:139] Memory required for data: 314000
I0428 19:34:59.101388 23423 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:34:59.101398 23423 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:34:59.101402 23423 net.cpp:408] label_mnist_1_split <- label
I0428 19:34:59.101408 23423 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:34:59.101413 23423 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:34:59.101457 23423 net.cpp:124] Setting up label_mnist_1_split
I0428 19:34:59.101462 23423 net.cpp:131] Top shape: 100 (100)
I0428 19:34:59.101466 23423 net.cpp:131] Top shape: 100 (100)
I0428 19:34:59.101469 23423 net.cpp:139] Memory required for data: 314800
I0428 19:34:59.101481 23423 layer_factory.hpp:77] Creating layer conv0
I0428 19:34:59.101491 23423 net.cpp:86] Creating Layer conv0
I0428 19:34:59.101495 23423 net.cpp:408] conv0 <- data
I0428 19:34:59.101500 23423 net.cpp:382] conv0 -> conv0
I0428 19:34:59.103220 23423 net.cpp:124] Setting up conv0
I0428 19:34:59.103236 23423 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:34:59.103240 23423 net.cpp:139] Memory required for data: 11834800
I0428 19:34:59.103250 23423 layer_factory.hpp:77] Creating layer pool0
I0428 19:34:59.103273 23423 net.cpp:86] Creating Layer pool0
I0428 19:34:59.103276 23423 net.cpp:408] pool0 <- conv0
I0428 19:34:59.103284 23423 net.cpp:382] pool0 -> pool0
I0428 19:34:59.103337 23423 net.cpp:124] Setting up pool0
I0428 19:34:59.103345 23423 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:34:59.103348 23423 net.cpp:139] Memory required for data: 14714800
I0428 19:34:59.103351 23423 layer_factory.hpp:77] Creating layer ip1
I0428 19:34:59.103358 23423 net.cpp:86] Creating Layer ip1
I0428 19:34:59.103361 23423 net.cpp:408] ip1 <- pool0
I0428 19:34:59.103366 23423 net.cpp:382] ip1 -> ip1
I0428 19:34:59.103968 23423 net.cpp:124] Setting up ip1
I0428 19:34:59.103976 23423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:59.103989 23423 net.cpp:139] Memory required for data: 14718800
I0428 19:34:59.103996 23423 layer_factory.hpp:77] Creating layer relu1
I0428 19:34:59.104003 23423 net.cpp:86] Creating Layer relu1
I0428 19:34:59.104007 23423 net.cpp:408] relu1 <- ip1
I0428 19:34:59.104012 23423 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:34:59.104248 23423 net.cpp:124] Setting up relu1
I0428 19:34:59.104257 23423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:59.104262 23423 net.cpp:139] Memory required for data: 14722800
I0428 19:34:59.104265 23423 layer_factory.hpp:77] Creating layer ip2
I0428 19:34:59.104272 23423 net.cpp:86] Creating Layer ip2
I0428 19:34:59.104275 23423 net.cpp:408] ip2 <- ip1
I0428 19:34:59.104285 23423 net.cpp:382] ip2 -> ip2
I0428 19:34:59.104395 23423 net.cpp:124] Setting up ip2
I0428 19:34:59.104403 23423 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:34:59.104408 23423 net.cpp:139] Memory required for data: 14742800
I0428 19:34:59.104415 23423 layer_factory.hpp:77] Creating layer relu2
I0428 19:34:59.104420 23423 net.cpp:86] Creating Layer relu2
I0428 19:34:59.104423 23423 net.cpp:408] relu2 <- ip2
I0428 19:34:59.104429 23423 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:34:59.105301 23423 net.cpp:124] Setting up relu2
I0428 19:34:59.105315 23423 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:34:59.105319 23423 net.cpp:139] Memory required for data: 14762800
I0428 19:34:59.105324 23423 layer_factory.hpp:77] Creating layer ip3
I0428 19:34:59.105332 23423 net.cpp:86] Creating Layer ip3
I0428 19:34:59.105336 23423 net.cpp:408] ip3 <- ip2
I0428 19:34:59.105341 23423 net.cpp:382] ip3 -> ip3
I0428 19:34:59.105494 23423 net.cpp:124] Setting up ip3
I0428 19:34:59.105501 23423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:59.105505 23423 net.cpp:139] Memory required for data: 14766800
I0428 19:34:59.105511 23423 layer_factory.hpp:77] Creating layer relu3
I0428 19:34:59.105520 23423 net.cpp:86] Creating Layer relu3
I0428 19:34:59.105522 23423 net.cpp:408] relu3 <- ip3
I0428 19:34:59.105527 23423 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:34:59.105695 23423 net.cpp:124] Setting up relu3
I0428 19:34:59.105705 23423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:59.105708 23423 net.cpp:139] Memory required for data: 14770800
I0428 19:34:59.105711 23423 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:34:59.105717 23423 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:34:59.105721 23423 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:34:59.105726 23423 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:34:59.105732 23423 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:34:59.105772 23423 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:34:59.105778 23423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:59.105793 23423 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:34:59.105798 23423 net.cpp:139] Memory required for data: 14778800
I0428 19:34:59.105800 23423 layer_factory.hpp:77] Creating layer accuracy
I0428 19:34:59.105808 23423 net.cpp:86] Creating Layer accuracy
I0428 19:34:59.105811 23423 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:34:59.105815 23423 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:34:59.105820 23423 net.cpp:382] accuracy -> accuracy
I0428 19:34:59.105829 23423 net.cpp:124] Setting up accuracy
I0428 19:34:59.105832 23423 net.cpp:131] Top shape: (1)
I0428 19:34:59.105835 23423 net.cpp:139] Memory required for data: 14778804
I0428 19:34:59.105839 23423 layer_factory.hpp:77] Creating layer loss
I0428 19:34:59.105842 23423 net.cpp:86] Creating Layer loss
I0428 19:34:59.105845 23423 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:34:59.105849 23423 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:34:59.105855 23423 net.cpp:382] loss -> loss
I0428 19:34:59.105862 23423 layer_factory.hpp:77] Creating layer loss
I0428 19:34:59.106104 23423 net.cpp:124] Setting up loss
I0428 19:34:59.106114 23423 net.cpp:131] Top shape: (1)
I0428 19:34:59.106117 23423 net.cpp:134]     with loss weight 1
I0428 19:34:59.106124 23423 net.cpp:139] Memory required for data: 14778808
I0428 19:34:59.106128 23423 net.cpp:200] loss needs backward computation.
I0428 19:34:59.106132 23423 net.cpp:202] accuracy does not need backward computation.
I0428 19:34:59.106137 23423 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:34:59.106139 23423 net.cpp:200] relu3 needs backward computation.
I0428 19:34:59.106142 23423 net.cpp:200] ip3 needs backward computation.
I0428 19:34:59.106145 23423 net.cpp:200] relu2 needs backward computation.
I0428 19:34:59.106148 23423 net.cpp:200] ip2 needs backward computation.
I0428 19:34:59.106150 23423 net.cpp:200] relu1 needs backward computation.
I0428 19:34:59.106154 23423 net.cpp:200] ip1 needs backward computation.
I0428 19:34:59.106158 23423 net.cpp:200] pool0 needs backward computation.
I0428 19:34:59.106160 23423 net.cpp:200] conv0 needs backward computation.
I0428 19:34:59.106164 23423 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:34:59.106168 23423 net.cpp:202] mnist does not need backward computation.
I0428 19:34:59.106170 23423 net.cpp:244] This network produces output accuracy
I0428 19:34:59.106174 23423 net.cpp:244] This network produces output loss
I0428 19:34:59.106185 23423 net.cpp:257] Network initialization done.
I0428 19:34:59.106223 23423 solver.cpp:56] Solver scaffolding done.
I0428 19:34:59.106606 23423 caffe.cpp:248] Starting Optimization
I0428 19:34:59.106612 23423 solver.cpp:273] Solving LeNet
I0428 19:34:59.106631 23423 solver.cpp:274] Learning Rate Policy: inv
I0428 19:34:59.108017 23423 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:34:59.206660 23430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:34:59.209378 23423 solver.cpp:398]     Test net output #0: accuracy = 0.1044
I0428 19:34:59.209414 23423 solver.cpp:398]     Test net output #1: loss = 2.32358 (* 1 = 2.32358 loss)
I0428 19:34:59.213845 23423 solver.cpp:219] Iteration 0 (0 iter/s, 0.107144s/100 iters), loss = 2.33289
I0428 19:34:59.213888 23423 solver.cpp:238]     Train net output #0: loss = 2.33289 (* 1 = 2.33289 loss)
I0428 19:34:59.213901 23423 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:34:59.359663 23423 solver.cpp:219] Iteration 100 (686.058 iter/s, 0.14576s/100 iters), loss = 0.811751
I0428 19:34:59.359688 23423 solver.cpp:238]     Train net output #0: loss = 0.811751 (* 1 = 0.811751 loss)
I0428 19:34:59.359696 23423 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:34:59.501338 23423 solver.cpp:219] Iteration 200 (706.027 iter/s, 0.141638s/100 iters), loss = 0.348413
I0428 19:34:59.501380 23423 solver.cpp:238]     Train net output #0: loss = 0.348413 (* 1 = 0.348413 loss)
I0428 19:34:59.501389 23423 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:34:59.641149 23423 solver.cpp:219] Iteration 300 (715.525 iter/s, 0.139758s/100 iters), loss = 0.31287
I0428 19:34:59.641203 23423 solver.cpp:238]     Train net output #0: loss = 0.31287 (* 1 = 0.31287 loss)
I0428 19:34:59.641225 23423 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:34:59.784107 23423 solver.cpp:219] Iteration 400 (699.824 iter/s, 0.142893s/100 iters), loss = 0.125363
I0428 19:34:59.784132 23423 solver.cpp:238]     Train net output #0: loss = 0.125363 (* 1 = 0.125363 loss)
I0428 19:34:59.784138 23423 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:34:59.923082 23423 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:00.018931 23430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:00.021672 23423 solver.cpp:398]     Test net output #0: accuracy = 0.9388
I0428 19:35:00.021708 23423 solver.cpp:398]     Test net output #1: loss = 0.204867 (* 1 = 0.204867 loss)
I0428 19:35:00.023036 23423 solver.cpp:219] Iteration 500 (418.608 iter/s, 0.238887s/100 iters), loss = 0.30715
I0428 19:35:00.023077 23423 solver.cpp:238]     Train net output #0: loss = 0.30715 (* 1 = 0.30715 loss)
I0428 19:35:00.023084 23423 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:00.167750 23423 solver.cpp:219] Iteration 600 (691.264 iter/s, 0.144663s/100 iters), loss = 0.132977
I0428 19:35:00.167793 23423 solver.cpp:238]     Train net output #0: loss = 0.132977 (* 1 = 0.132977 loss)
I0428 19:35:00.167799 23423 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:00.310684 23423 solver.cpp:219] Iteration 700 (699.894 iter/s, 0.142879s/100 iters), loss = 0.24965
I0428 19:35:00.310719 23423 solver.cpp:238]     Train net output #0: loss = 0.24965 (* 1 = 0.24965 loss)
I0428 19:35:00.310727 23423 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:00.453719 23423 solver.cpp:219] Iteration 800 (699.358 iter/s, 0.142988s/100 iters), loss = 0.4329
I0428 19:35:00.453747 23423 solver.cpp:238]     Train net output #0: loss = 0.4329 (* 1 = 0.4329 loss)
I0428 19:35:00.453753 23423 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:00.594329 23423 solver.cpp:219] Iteration 900 (711.382 iter/s, 0.140572s/100 iters), loss = 0.221809
I0428 19:35:00.594372 23423 solver.cpp:238]     Train net output #0: loss = 0.221809 (* 1 = 0.221809 loss)
I0428 19:35:00.594379 23423 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:00.641310 23429 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:00.734112 23423 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:00.736012 23423 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:00.737532 23423 solver.cpp:311] Iteration 1000, loss = 0.168337
I0428 19:35:00.737547 23423 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:00.832800 23430 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:00.836231 23423 solver.cpp:398]     Test net output #0: accuracy = 0.9643
I0428 19:35:00.836266 23423 solver.cpp:398]     Test net output #1: loss = 0.118886 (* 1 = 0.118886 loss)
I0428 19:35:00.836272 23423 solver.cpp:316] Optimization Done.
I0428 19:35:00.836274 23423 caffe.cpp:259] Optimization Done.
