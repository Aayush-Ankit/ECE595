I0428 19:59:35.597615 29278 caffe.cpp:218] Using GPUs 0
I0428 19:59:35.640744 29278 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:36.155014 29278 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test852.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:36.155160 29278 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test852.prototxt
I0428 19:59:36.155578 29278 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:36.155599 29278 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:36.155704 29278 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:36.155784 29278 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:36.155880 29278 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:36.155905 29278 net.cpp:86] Creating Layer mnist
I0428 19:59:36.155913 29278 net.cpp:382] mnist -> data
I0428 19:59:36.155936 29278 net.cpp:382] mnist -> label
I0428 19:59:36.157050 29278 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:36.159508 29278 net.cpp:124] Setting up mnist
I0428 19:59:36.159526 29278 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:36.159533 29278 net.cpp:131] Top shape: 64 (64)
I0428 19:59:36.159538 29278 net.cpp:139] Memory required for data: 200960
I0428 19:59:36.159544 29278 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:36.159559 29278 net.cpp:86] Creating Layer conv0
I0428 19:59:36.159579 29278 net.cpp:408] conv0 <- data
I0428 19:59:36.159593 29278 net.cpp:382] conv0 -> conv0
I0428 19:59:36.447412 29278 net.cpp:124] Setting up conv0
I0428 19:59:36.447439 29278 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:36.447443 29278 net.cpp:139] Memory required for data: 1675520
I0428 19:59:36.447460 29278 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:36.447474 29278 net.cpp:86] Creating Layer pool0
I0428 19:59:36.447479 29278 net.cpp:408] pool0 <- conv0
I0428 19:59:36.447484 29278 net.cpp:382] pool0 -> pool0
I0428 19:59:36.447535 29278 net.cpp:124] Setting up pool0
I0428 19:59:36.447541 29278 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:36.447545 29278 net.cpp:139] Memory required for data: 2044160
I0428 19:59:36.447548 29278 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:36.447559 29278 net.cpp:86] Creating Layer conv1
I0428 19:59:36.447563 29278 net.cpp:408] conv1 <- pool0
I0428 19:59:36.447568 29278 net.cpp:382] conv1 -> conv1
I0428 19:59:36.450336 29278 net.cpp:124] Setting up conv1
I0428 19:59:36.450351 29278 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:36.450356 29278 net.cpp:139] Memory required for data: 2208000
I0428 19:59:36.450366 29278 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:36.450372 29278 net.cpp:86] Creating Layer pool1
I0428 19:59:36.450376 29278 net.cpp:408] pool1 <- conv1
I0428 19:59:36.450381 29278 net.cpp:382] pool1 -> pool1
I0428 19:59:36.450420 29278 net.cpp:124] Setting up pool1
I0428 19:59:36.450426 29278 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:36.450429 29278 net.cpp:139] Memory required for data: 2248960
I0428 19:59:36.450433 29278 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:36.450444 29278 net.cpp:86] Creating Layer ip1
I0428 19:59:36.450448 29278 net.cpp:408] ip1 <- pool1
I0428 19:59:36.450453 29278 net.cpp:382] ip1 -> ip1
I0428 19:59:36.451434 29278 net.cpp:124] Setting up ip1
I0428 19:59:36.451448 29278 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:36.451452 29278 net.cpp:139] Memory required for data: 2261760
I0428 19:59:36.451462 29278 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:36.451467 29278 net.cpp:86] Creating Layer relu1
I0428 19:59:36.451472 29278 net.cpp:408] relu1 <- ip1
I0428 19:59:36.451475 29278 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:36.451658 29278 net.cpp:124] Setting up relu1
I0428 19:59:36.451668 29278 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:36.451670 29278 net.cpp:139] Memory required for data: 2274560
I0428 19:59:36.451673 29278 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:36.451680 29278 net.cpp:86] Creating Layer ip2
I0428 19:59:36.451683 29278 net.cpp:408] ip2 <- ip1
I0428 19:59:36.451689 29278 net.cpp:382] ip2 -> ip2
I0428 19:59:36.451797 29278 net.cpp:124] Setting up ip2
I0428 19:59:36.451805 29278 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:36.451808 29278 net.cpp:139] Memory required for data: 2280960
I0428 19:59:36.451813 29278 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:36.451819 29278 net.cpp:86] Creating Layer relu2
I0428 19:59:36.451822 29278 net.cpp:408] relu2 <- ip2
I0428 19:59:36.451828 29278 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:36.452584 29278 net.cpp:124] Setting up relu2
I0428 19:59:36.452596 29278 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:36.452600 29278 net.cpp:139] Memory required for data: 2287360
I0428 19:59:36.452603 29278 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:36.452611 29278 net.cpp:86] Creating Layer ip3
I0428 19:59:36.452615 29278 net.cpp:408] ip3 <- ip2
I0428 19:59:36.452620 29278 net.cpp:382] ip3 -> ip3
I0428 19:59:36.452716 29278 net.cpp:124] Setting up ip3
I0428 19:59:36.452724 29278 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:36.452728 29278 net.cpp:139] Memory required for data: 2289920
I0428 19:59:36.452735 29278 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:36.452740 29278 net.cpp:86] Creating Layer relu3
I0428 19:59:36.452744 29278 net.cpp:408] relu3 <- ip3
I0428 19:59:36.452747 29278 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:36.452925 29278 net.cpp:124] Setting up relu3
I0428 19:59:36.452934 29278 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:36.452937 29278 net.cpp:139] Memory required for data: 2292480
I0428 19:59:36.452940 29278 layer_factory.hpp:77] Creating layer loss
I0428 19:59:36.452946 29278 net.cpp:86] Creating Layer loss
I0428 19:59:36.452950 29278 net.cpp:408] loss <- ip3
I0428 19:59:36.452955 29278 net.cpp:408] loss <- label
I0428 19:59:36.452960 29278 net.cpp:382] loss -> loss
I0428 19:59:36.452978 29278 layer_factory.hpp:77] Creating layer loss
I0428 19:59:36.453203 29278 net.cpp:124] Setting up loss
I0428 19:59:36.453212 29278 net.cpp:131] Top shape: (1)
I0428 19:59:36.453215 29278 net.cpp:134]     with loss weight 1
I0428 19:59:36.453230 29278 net.cpp:139] Memory required for data: 2292484
I0428 19:59:36.453233 29278 net.cpp:200] loss needs backward computation.
I0428 19:59:36.453238 29278 net.cpp:200] relu3 needs backward computation.
I0428 19:59:36.453240 29278 net.cpp:200] ip3 needs backward computation.
I0428 19:59:36.453243 29278 net.cpp:200] relu2 needs backward computation.
I0428 19:59:36.453246 29278 net.cpp:200] ip2 needs backward computation.
I0428 19:59:36.453249 29278 net.cpp:200] relu1 needs backward computation.
I0428 19:59:36.453251 29278 net.cpp:200] ip1 needs backward computation.
I0428 19:59:36.453254 29278 net.cpp:200] pool1 needs backward computation.
I0428 19:59:36.453258 29278 net.cpp:200] conv1 needs backward computation.
I0428 19:59:36.453261 29278 net.cpp:200] pool0 needs backward computation.
I0428 19:59:36.453264 29278 net.cpp:200] conv0 needs backward computation.
I0428 19:59:36.453268 29278 net.cpp:202] mnist does not need backward computation.
I0428 19:59:36.453270 29278 net.cpp:244] This network produces output loss
I0428 19:59:36.453279 29278 net.cpp:257] Network initialization done.
I0428 19:59:36.453605 29278 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test852.prototxt
I0428 19:59:36.453635 29278 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:36.453729 29278 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:36.453807 29278 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:36.453852 29278 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:36.453865 29278 net.cpp:86] Creating Layer mnist
I0428 19:59:36.453877 29278 net.cpp:382] mnist -> data
I0428 19:59:36.453886 29278 net.cpp:382] mnist -> label
I0428 19:59:36.453969 29278 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:36.455879 29278 net.cpp:124] Setting up mnist
I0428 19:59:36.455893 29278 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:36.455899 29278 net.cpp:131] Top shape: 100 (100)
I0428 19:59:36.455902 29278 net.cpp:139] Memory required for data: 314000
I0428 19:59:36.455905 29278 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:36.455916 29278 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:36.455919 29278 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:36.455924 29278 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:36.455931 29278 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:36.455971 29278 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:36.455976 29278 net.cpp:131] Top shape: 100 (100)
I0428 19:59:36.455981 29278 net.cpp:131] Top shape: 100 (100)
I0428 19:59:36.455983 29278 net.cpp:139] Memory required for data: 314800
I0428 19:59:36.455986 29278 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:36.455994 29278 net.cpp:86] Creating Layer conv0
I0428 19:59:36.455999 29278 net.cpp:408] conv0 <- data
I0428 19:59:36.456006 29278 net.cpp:382] conv0 -> conv0
I0428 19:59:36.457684 29278 net.cpp:124] Setting up conv0
I0428 19:59:36.457700 29278 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:36.457703 29278 net.cpp:139] Memory required for data: 2618800
I0428 19:59:36.457712 29278 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:36.457720 29278 net.cpp:86] Creating Layer pool0
I0428 19:59:36.457722 29278 net.cpp:408] pool0 <- conv0
I0428 19:59:36.457727 29278 net.cpp:382] pool0 -> pool0
I0428 19:59:36.457763 29278 net.cpp:124] Setting up pool0
I0428 19:59:36.457768 29278 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:36.457772 29278 net.cpp:139] Memory required for data: 3194800
I0428 19:59:36.457774 29278 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:36.457782 29278 net.cpp:86] Creating Layer conv1
I0428 19:59:36.457785 29278 net.cpp:408] conv1 <- pool0
I0428 19:59:36.457790 29278 net.cpp:382] conv1 -> conv1
I0428 19:59:36.459811 29278 net.cpp:124] Setting up conv1
I0428 19:59:36.459827 29278 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:36.459831 29278 net.cpp:139] Memory required for data: 3450800
I0428 19:59:36.459841 29278 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:36.459847 29278 net.cpp:86] Creating Layer pool1
I0428 19:59:36.459853 29278 net.cpp:408] pool1 <- conv1
I0428 19:59:36.459859 29278 net.cpp:382] pool1 -> pool1
I0428 19:59:36.459897 29278 net.cpp:124] Setting up pool1
I0428 19:59:36.459903 29278 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:36.459906 29278 net.cpp:139] Memory required for data: 3514800
I0428 19:59:36.459910 29278 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:36.459915 29278 net.cpp:86] Creating Layer ip1
I0428 19:59:36.459918 29278 net.cpp:408] ip1 <- pool1
I0428 19:59:36.459923 29278 net.cpp:382] ip1 -> ip1
I0428 19:59:36.460110 29278 net.cpp:124] Setting up ip1
I0428 19:59:36.460119 29278 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:36.460132 29278 net.cpp:139] Memory required for data: 3534800
I0428 19:59:36.460141 29278 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:36.460146 29278 net.cpp:86] Creating Layer relu1
I0428 19:59:36.460150 29278 net.cpp:408] relu1 <- ip1
I0428 19:59:36.460155 29278 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:36.460319 29278 net.cpp:124] Setting up relu1
I0428 19:59:36.460328 29278 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:36.460331 29278 net.cpp:139] Memory required for data: 3554800
I0428 19:59:36.460335 29278 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:36.460341 29278 net.cpp:86] Creating Layer ip2
I0428 19:59:36.460345 29278 net.cpp:408] ip2 <- ip1
I0428 19:59:36.460350 29278 net.cpp:382] ip2 -> ip2
I0428 19:59:36.460455 29278 net.cpp:124] Setting up ip2
I0428 19:59:36.460463 29278 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:36.460465 29278 net.cpp:139] Memory required for data: 3564800
I0428 19:59:36.460471 29278 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:36.460476 29278 net.cpp:86] Creating Layer relu2
I0428 19:59:36.460479 29278 net.cpp:408] relu2 <- ip2
I0428 19:59:36.460484 29278 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:36.460630 29278 net.cpp:124] Setting up relu2
I0428 19:59:36.460639 29278 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:36.460642 29278 net.cpp:139] Memory required for data: 3574800
I0428 19:59:36.460645 29278 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:36.460650 29278 net.cpp:86] Creating Layer ip3
I0428 19:59:36.460654 29278 net.cpp:408] ip3 <- ip2
I0428 19:59:36.460659 29278 net.cpp:382] ip3 -> ip3
I0428 19:59:36.460754 29278 net.cpp:124] Setting up ip3
I0428 19:59:36.460760 29278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:36.460764 29278 net.cpp:139] Memory required for data: 3578800
I0428 19:59:36.460772 29278 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:36.460777 29278 net.cpp:86] Creating Layer relu3
I0428 19:59:36.460779 29278 net.cpp:408] relu3 <- ip3
I0428 19:59:36.460783 29278 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:36.461627 29278 net.cpp:124] Setting up relu3
I0428 19:59:36.461639 29278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:36.461642 29278 net.cpp:139] Memory required for data: 3582800
I0428 19:59:36.461647 29278 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:36.461652 29278 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:36.461654 29278 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:36.461659 29278 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:36.461665 29278 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:36.461706 29278 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:36.461712 29278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:36.461715 29278 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:36.461719 29278 net.cpp:139] Memory required for data: 3590800
I0428 19:59:36.461721 29278 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:36.461726 29278 net.cpp:86] Creating Layer accuracy
I0428 19:59:36.461730 29278 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:36.461733 29278 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:36.461737 29278 net.cpp:382] accuracy -> accuracy
I0428 19:59:36.461745 29278 net.cpp:124] Setting up accuracy
I0428 19:59:36.461750 29278 net.cpp:131] Top shape: (1)
I0428 19:59:36.461751 29278 net.cpp:139] Memory required for data: 3590804
I0428 19:59:36.461755 29278 layer_factory.hpp:77] Creating layer loss
I0428 19:59:36.461760 29278 net.cpp:86] Creating Layer loss
I0428 19:59:36.461762 29278 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:36.461766 29278 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:36.461771 29278 net.cpp:382] loss -> loss
I0428 19:59:36.461776 29278 layer_factory.hpp:77] Creating layer loss
I0428 19:59:36.461999 29278 net.cpp:124] Setting up loss
I0428 19:59:36.462008 29278 net.cpp:131] Top shape: (1)
I0428 19:59:36.462013 29278 net.cpp:134]     with loss weight 1
I0428 19:59:36.462028 29278 net.cpp:139] Memory required for data: 3590808
I0428 19:59:36.462033 29278 net.cpp:200] loss needs backward computation.
I0428 19:59:36.462036 29278 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:36.462040 29278 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:36.462044 29278 net.cpp:200] relu3 needs backward computation.
I0428 19:59:36.462045 29278 net.cpp:200] ip3 needs backward computation.
I0428 19:59:36.462049 29278 net.cpp:200] relu2 needs backward computation.
I0428 19:59:36.462052 29278 net.cpp:200] ip2 needs backward computation.
I0428 19:59:36.462055 29278 net.cpp:200] relu1 needs backward computation.
I0428 19:59:36.462059 29278 net.cpp:200] ip1 needs backward computation.
I0428 19:59:36.462061 29278 net.cpp:200] pool1 needs backward computation.
I0428 19:59:36.462064 29278 net.cpp:200] conv1 needs backward computation.
I0428 19:59:36.462067 29278 net.cpp:200] pool0 needs backward computation.
I0428 19:59:36.462070 29278 net.cpp:200] conv0 needs backward computation.
I0428 19:59:36.462074 29278 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:36.462079 29278 net.cpp:202] mnist does not need backward computation.
I0428 19:59:36.462087 29278 net.cpp:244] This network produces output accuracy
I0428 19:59:36.462090 29278 net.cpp:244] This network produces output loss
I0428 19:59:36.462100 29278 net.cpp:257] Network initialization done.
I0428 19:59:36.462141 29278 solver.cpp:56] Solver scaffolding done.
I0428 19:59:36.462494 29278 caffe.cpp:248] Starting Optimization
I0428 19:59:36.462501 29278 solver.cpp:273] Solving LeNet
I0428 19:59:36.462503 29278 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:36.462783 29278 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:36.466905 29278 blocking_queue.cpp:49] Waiting for data
I0428 19:59:36.535485 29285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:36.536129 29278 solver.cpp:398]     Test net output #0: accuracy = 0.0655
I0428 19:59:36.536166 29278 solver.cpp:398]     Test net output #1: loss = 2.47862 (* 1 = 2.47862 loss)
I0428 19:59:36.539819 29278 solver.cpp:219] Iteration 0 (-1.07059e-42 iter/s, 0.0772659s/100 iters), loss = 2.44649
I0428 19:59:36.539860 29278 solver.cpp:238]     Train net output #0: loss = 2.44649 (* 1 = 2.44649 loss)
I0428 19:59:36.539878 29278 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:36.628738 29278 solver.cpp:219] Iteration 100 (1125.24 iter/s, 0.08887s/100 iters), loss = 0.956289
I0428 19:59:36.628772 29278 solver.cpp:238]     Train net output #0: loss = 0.956289 (* 1 = 0.956289 loss)
I0428 19:59:36.628780 29278 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:36.710928 29278 solver.cpp:219] Iteration 200 (1217.33 iter/s, 0.0821473s/100 iters), loss = 0.313286
I0428 19:59:36.710960 29278 solver.cpp:238]     Train net output #0: loss = 0.313286 (* 1 = 0.313286 loss)
I0428 19:59:36.710968 29278 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:36.806901 29278 solver.cpp:219] Iteration 300 (1042.43 iter/s, 0.0959293s/100 iters), loss = 0.536824
I0428 19:59:36.806941 29278 solver.cpp:238]     Train net output #0: loss = 0.536824 (* 1 = 0.536824 loss)
I0428 19:59:36.806951 29278 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:36.906070 29278 solver.cpp:219] Iteration 400 (1008.91 iter/s, 0.0991172s/100 iters), loss = 0.253311
I0428 19:59:36.906107 29278 solver.cpp:238]     Train net output #0: loss = 0.253311 (* 1 = 0.253311 loss)
I0428 19:59:36.906116 29278 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:36.988265 29278 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:37.041095 29285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:37.041620 29278 solver.cpp:398]     Test net output #0: accuracy = 0.8585
I0428 19:59:37.041643 29278 solver.cpp:398]     Test net output #1: loss = 0.367417 (* 1 = 0.367417 loss)
I0428 19:59:37.042459 29278 solver.cpp:219] Iteration 500 (733.458 iter/s, 0.136341s/100 iters), loss = 0.231698
I0428 19:59:37.042501 29278 solver.cpp:238]     Train net output #0: loss = 0.231698 (* 1 = 0.231698 loss)
I0428 19:59:37.042510 29278 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:37.136414 29278 solver.cpp:219] Iteration 600 (1064.97 iter/s, 0.0938998s/100 iters), loss = 0.346452
I0428 19:59:37.136461 29278 solver.cpp:238]     Train net output #0: loss = 0.346452 (* 1 = 0.346452 loss)
I0428 19:59:37.136471 29278 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:37.224308 29278 solver.cpp:219] Iteration 700 (1138.42 iter/s, 0.0878408s/100 iters), loss = 0.500715
I0428 19:59:37.224340 29278 solver.cpp:238]     Train net output #0: loss = 0.500714 (* 1 = 0.500714 loss)
I0428 19:59:37.224349 29278 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:37.310961 29278 solver.cpp:219] Iteration 800 (1154.62 iter/s, 0.0866089s/100 iters), loss = 0.462449
I0428 19:59:37.310998 29278 solver.cpp:238]     Train net output #0: loss = 0.462449 (* 1 = 0.462449 loss)
I0428 19:59:37.311007 29278 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:37.394690 29278 solver.cpp:219] Iteration 900 (1195 iter/s, 0.0836823s/100 iters), loss = 0.446628
I0428 19:59:37.394721 29278 solver.cpp:238]     Train net output #0: loss = 0.446628 (* 1 = 0.446628 loss)
I0428 19:59:37.394729 29278 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:37.422132 29284 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:37.476408 29278 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:37.477354 29278 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:37.477907 29278 solver.cpp:311] Iteration 1000, loss = 0.348998
I0428 19:59:37.477927 29278 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:37.536574 29285 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:37.537098 29278 solver.cpp:398]     Test net output #0: accuracy = 0.8746
I0428 19:59:37.537122 29278 solver.cpp:398]     Test net output #1: loss = 0.319298 (* 1 = 0.319298 loss)
I0428 19:59:37.537127 29278 solver.cpp:316] Optimization Done.
I0428 19:59:37.537132 29278 caffe.cpp:259] Optimization Done.
