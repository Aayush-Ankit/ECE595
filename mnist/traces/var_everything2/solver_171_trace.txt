I0428 19:33:06.716347 23031 caffe.cpp:218] Using GPUs 0
I0428 19:33:06.757642 23031 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:07.276538 23031 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test171.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:07.276708 23031 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test171.prototxt
I0428 19:33:07.277091 23031 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:07.277115 23031 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:07.277212 23031 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:07.277318 23031 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:07.277451 23031 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:07.277482 23031 net.cpp:86] Creating Layer mnist
I0428 19:33:07.277496 23031 net.cpp:382] mnist -> data
I0428 19:33:07.277528 23031 net.cpp:382] mnist -> label
I0428 19:33:07.278751 23031 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:07.281221 23031 net.cpp:124] Setting up mnist
I0428 19:33:07.281241 23031 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:07.281252 23031 net.cpp:131] Top shape: 64 (64)
I0428 19:33:07.281257 23031 net.cpp:139] Memory required for data: 200960
I0428 19:33:07.281268 23031 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:07.281292 23031 net.cpp:86] Creating Layer conv0
I0428 19:33:07.281302 23031 net.cpp:408] conv0 <- data
I0428 19:33:07.281322 23031 net.cpp:382] conv0 -> conv0
I0428 19:33:07.574189 23031 net.cpp:124] Setting up conv0
I0428 19:33:07.574223 23031 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:07.574229 23031 net.cpp:139] Memory required for data: 3887360
I0428 19:33:07.574254 23031 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:07.574272 23031 net.cpp:86] Creating Layer pool0
I0428 19:33:07.574302 23031 net.cpp:408] pool0 <- conv0
I0428 19:33:07.574316 23031 net.cpp:382] pool0 -> pool0
I0428 19:33:07.574383 23031 net.cpp:124] Setting up pool0
I0428 19:33:07.574394 23031 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:07.574400 23031 net.cpp:139] Memory required for data: 4808960
I0428 19:33:07.574407 23031 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:07.574425 23031 net.cpp:86] Creating Layer ip1
I0428 19:33:07.574434 23031 net.cpp:408] ip1 <- pool0
I0428 19:33:07.574443 23031 net.cpp:382] ip1 -> ip1
I0428 19:33:07.574802 23031 net.cpp:124] Setting up ip1
I0428 19:33:07.574815 23031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:07.574820 23031 net.cpp:139] Memory required for data: 4811520
I0428 19:33:07.574834 23031 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:07.574846 23031 net.cpp:86] Creating Layer relu1
I0428 19:33:07.574856 23031 net.cpp:408] relu1 <- ip1
I0428 19:33:07.574864 23031 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:07.575062 23031 net.cpp:124] Setting up relu1
I0428 19:33:07.575074 23031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:07.575080 23031 net.cpp:139] Memory required for data: 4814080
I0428 19:33:07.575086 23031 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:07.575098 23031 net.cpp:86] Creating Layer ip2
I0428 19:33:07.575104 23031 net.cpp:408] ip2 <- ip1
I0428 19:33:07.575114 23031 net.cpp:382] ip2 -> ip2
I0428 19:33:07.575232 23031 net.cpp:124] Setting up ip2
I0428 19:33:07.575243 23031 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:07.575248 23031 net.cpp:139] Memory required for data: 4820480
I0428 19:33:07.575263 23031 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:07.575273 23031 net.cpp:86] Creating Layer relu2
I0428 19:33:07.575280 23031 net.cpp:408] relu2 <- ip2
I0428 19:33:07.575289 23031 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:07.576118 23031 net.cpp:124] Setting up relu2
I0428 19:33:07.576135 23031 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:07.576143 23031 net.cpp:139] Memory required for data: 4826880
I0428 19:33:07.576150 23031 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:07.576162 23031 net.cpp:86] Creating Layer ip3
I0428 19:33:07.576169 23031 net.cpp:408] ip3 <- ip2
I0428 19:33:07.576179 23031 net.cpp:382] ip3 -> ip3
I0428 19:33:07.576295 23031 net.cpp:124] Setting up ip3
I0428 19:33:07.576306 23031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:07.576313 23031 net.cpp:139] Memory required for data: 4829440
I0428 19:33:07.576323 23031 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:07.576334 23031 net.cpp:86] Creating Layer relu3
I0428 19:33:07.576341 23031 net.cpp:408] relu3 <- ip3
I0428 19:33:07.576370 23031 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:07.576550 23031 net.cpp:124] Setting up relu3
I0428 19:33:07.576561 23031 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:07.576567 23031 net.cpp:139] Memory required for data: 4832000
I0428 19:33:07.576573 23031 layer_factory.hpp:77] Creating layer loss
I0428 19:33:07.576583 23031 net.cpp:86] Creating Layer loss
I0428 19:33:07.576589 23031 net.cpp:408] loss <- ip3
I0428 19:33:07.576597 23031 net.cpp:408] loss <- label
I0428 19:33:07.576607 23031 net.cpp:382] loss -> loss
I0428 19:33:07.576633 23031 layer_factory.hpp:77] Creating layer loss
I0428 19:33:07.576911 23031 net.cpp:124] Setting up loss
I0428 19:33:07.576925 23031 net.cpp:131] Top shape: (1)
I0428 19:33:07.576932 23031 net.cpp:134]     with loss weight 1
I0428 19:33:07.576954 23031 net.cpp:139] Memory required for data: 4832004
I0428 19:33:07.576961 23031 net.cpp:200] loss needs backward computation.
I0428 19:33:07.576968 23031 net.cpp:200] relu3 needs backward computation.
I0428 19:33:07.576974 23031 net.cpp:200] ip3 needs backward computation.
I0428 19:33:07.576980 23031 net.cpp:200] relu2 needs backward computation.
I0428 19:33:07.576987 23031 net.cpp:200] ip2 needs backward computation.
I0428 19:33:07.576992 23031 net.cpp:200] relu1 needs backward computation.
I0428 19:33:07.576998 23031 net.cpp:200] ip1 needs backward computation.
I0428 19:33:07.577016 23031 net.cpp:200] pool0 needs backward computation.
I0428 19:33:07.577023 23031 net.cpp:200] conv0 needs backward computation.
I0428 19:33:07.577030 23031 net.cpp:202] mnist does not need backward computation.
I0428 19:33:07.577035 23031 net.cpp:244] This network produces output loss
I0428 19:33:07.577050 23031 net.cpp:257] Network initialization done.
I0428 19:33:07.577376 23031 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test171.prototxt
I0428 19:33:07.577414 23031 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:07.577515 23031 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:07.577625 23031 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:07.577693 23031 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:07.577714 23031 net.cpp:86] Creating Layer mnist
I0428 19:33:07.577723 23031 net.cpp:382] mnist -> data
I0428 19:33:07.577738 23031 net.cpp:382] mnist -> label
I0428 19:33:07.577872 23031 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:07.580344 23031 net.cpp:124] Setting up mnist
I0428 19:33:07.580361 23031 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:07.580371 23031 net.cpp:131] Top shape: 100 (100)
I0428 19:33:07.580377 23031 net.cpp:139] Memory required for data: 314000
I0428 19:33:07.580384 23031 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:07.580401 23031 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:07.580409 23031 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:07.580417 23031 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:07.580430 23031 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:07.580521 23031 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:07.580533 23031 net.cpp:131] Top shape: 100 (100)
I0428 19:33:07.580539 23031 net.cpp:131] Top shape: 100 (100)
I0428 19:33:07.580545 23031 net.cpp:139] Memory required for data: 314800
I0428 19:33:07.580564 23031 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:07.580579 23031 net.cpp:86] Creating Layer conv0
I0428 19:33:07.580587 23031 net.cpp:408] conv0 <- data
I0428 19:33:07.580597 23031 net.cpp:382] conv0 -> conv0
I0428 19:33:07.582249 23031 net.cpp:124] Setting up conv0
I0428 19:33:07.582267 23031 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:07.582274 23031 net.cpp:139] Memory required for data: 6074800
I0428 19:33:07.582291 23031 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:07.582303 23031 net.cpp:86] Creating Layer pool0
I0428 19:33:07.582309 23031 net.cpp:408] pool0 <- conv0
I0428 19:33:07.582319 23031 net.cpp:382] pool0 -> pool0
I0428 19:33:07.582367 23031 net.cpp:124] Setting up pool0
I0428 19:33:07.582377 23031 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:07.582384 23031 net.cpp:139] Memory required for data: 7514800
I0428 19:33:07.582391 23031 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:07.582404 23031 net.cpp:86] Creating Layer ip1
I0428 19:33:07.582412 23031 net.cpp:408] ip1 <- pool0
I0428 19:33:07.582422 23031 net.cpp:382] ip1 -> ip1
I0428 19:33:07.582824 23031 net.cpp:124] Setting up ip1
I0428 19:33:07.582835 23031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:07.582841 23031 net.cpp:139] Memory required for data: 7518800
I0428 19:33:07.582855 23031 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:07.582865 23031 net.cpp:86] Creating Layer relu1
I0428 19:33:07.582872 23031 net.cpp:408] relu1 <- ip1
I0428 19:33:07.582881 23031 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:07.583079 23031 net.cpp:124] Setting up relu1
I0428 19:33:07.583092 23031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:07.583098 23031 net.cpp:139] Memory required for data: 7522800
I0428 19:33:07.583104 23031 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:07.583117 23031 net.cpp:86] Creating Layer ip2
I0428 19:33:07.583122 23031 net.cpp:408] ip2 <- ip1
I0428 19:33:07.583133 23031 net.cpp:382] ip2 -> ip2
I0428 19:33:07.583252 23031 net.cpp:124] Setting up ip2
I0428 19:33:07.583266 23031 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:07.583271 23031 net.cpp:139] Memory required for data: 7532800
I0428 19:33:07.583286 23031 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:07.583299 23031 net.cpp:86] Creating Layer relu2
I0428 19:33:07.583307 23031 net.cpp:408] relu2 <- ip2
I0428 19:33:07.583315 23031 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:07.584219 23031 net.cpp:124] Setting up relu2
I0428 19:33:07.584234 23031 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:07.584241 23031 net.cpp:139] Memory required for data: 7542800
I0428 19:33:07.584247 23031 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:07.584264 23031 net.cpp:86] Creating Layer ip3
I0428 19:33:07.584271 23031 net.cpp:408] ip3 <- ip2
I0428 19:33:07.584286 23031 net.cpp:382] ip3 -> ip3
I0428 19:33:07.584421 23031 net.cpp:124] Setting up ip3
I0428 19:33:07.584432 23031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:07.584439 23031 net.cpp:139] Memory required for data: 7546800
I0428 19:33:07.584450 23031 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:07.584458 23031 net.cpp:86] Creating Layer relu3
I0428 19:33:07.584465 23031 net.cpp:408] relu3 <- ip3
I0428 19:33:07.584472 23031 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:07.584681 23031 net.cpp:124] Setting up relu3
I0428 19:33:07.584694 23031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:07.584700 23031 net.cpp:139] Memory required for data: 7550800
I0428 19:33:07.584707 23031 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:07.584717 23031 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:07.584722 23031 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:07.584733 23031 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:07.584744 23031 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:07.584794 23031 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:07.584803 23031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:07.584818 23031 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:07.584837 23031 net.cpp:139] Memory required for data: 7558800
I0428 19:33:07.584846 23031 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:07.584857 23031 net.cpp:86] Creating Layer accuracy
I0428 19:33:07.584864 23031 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:07.584879 23031 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:07.584888 23031 net.cpp:382] accuracy -> accuracy
I0428 19:33:07.584906 23031 net.cpp:124] Setting up accuracy
I0428 19:33:07.584915 23031 net.cpp:131] Top shape: (1)
I0428 19:33:07.584923 23031 net.cpp:139] Memory required for data: 7558804
I0428 19:33:07.584928 23031 layer_factory.hpp:77] Creating layer loss
I0428 19:33:07.584936 23031 net.cpp:86] Creating Layer loss
I0428 19:33:07.584942 23031 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:07.584950 23031 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:07.584959 23031 net.cpp:382] loss -> loss
I0428 19:33:07.584969 23031 layer_factory.hpp:77] Creating layer loss
I0428 19:33:07.585335 23031 net.cpp:124] Setting up loss
I0428 19:33:07.585350 23031 net.cpp:131] Top shape: (1)
I0428 19:33:07.585356 23031 net.cpp:134]     with loss weight 1
I0428 19:33:07.585367 23031 net.cpp:139] Memory required for data: 7558808
I0428 19:33:07.585373 23031 net.cpp:200] loss needs backward computation.
I0428 19:33:07.585381 23031 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:07.585387 23031 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:07.585393 23031 net.cpp:200] relu3 needs backward computation.
I0428 19:33:07.585399 23031 net.cpp:200] ip3 needs backward computation.
I0428 19:33:07.585405 23031 net.cpp:200] relu2 needs backward computation.
I0428 19:33:07.585410 23031 net.cpp:200] ip2 needs backward computation.
I0428 19:33:07.585417 23031 net.cpp:200] relu1 needs backward computation.
I0428 19:33:07.585422 23031 net.cpp:200] ip1 needs backward computation.
I0428 19:33:07.585429 23031 net.cpp:200] pool0 needs backward computation.
I0428 19:33:07.585434 23031 net.cpp:200] conv0 needs backward computation.
I0428 19:33:07.585441 23031 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:07.585449 23031 net.cpp:202] mnist does not need backward computation.
I0428 19:33:07.585455 23031 net.cpp:244] This network produces output accuracy
I0428 19:33:07.585461 23031 net.cpp:244] This network produces output loss
I0428 19:33:07.585479 23031 net.cpp:257] Network initialization done.
I0428 19:33:07.585528 23031 solver.cpp:56] Solver scaffolding done.
I0428 19:33:07.585844 23031 caffe.cpp:248] Starting Optimization
I0428 19:33:07.585852 23031 solver.cpp:273] Solving LeNet
I0428 19:33:07.585857 23031 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:07.586825 23031 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:07.653800 23038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:07.656057 23031 solver.cpp:398]     Test net output #0: accuracy = 0.0953
I0428 19:33:07.656080 23031 solver.cpp:398]     Test net output #1: loss = 2.3277 (* 1 = 2.3277 loss)
I0428 19:33:07.659472 23031 solver.cpp:219] Iteration 0 (-1.10422e-42 iter/s, 0.0735816s/100 iters), loss = 2.32697
I0428 19:33:07.659502 23031 solver.cpp:238]     Train net output #0: loss = 2.32697 (* 1 = 2.32697 loss)
I0428 19:33:07.659533 23031 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:07.753461 23031 solver.cpp:219] Iteration 100 (1064.37 iter/s, 0.093952s/100 iters), loss = 1.14918
I0428 19:33:07.753490 23031 solver.cpp:238]     Train net output #0: loss = 1.14918 (* 1 = 1.14918 loss)
I0428 19:33:07.753500 23031 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:07.846302 23031 solver.cpp:219] Iteration 200 (1077.53 iter/s, 0.0928051s/100 iters), loss = 0.561881
I0428 19:33:07.846329 23031 solver.cpp:238]     Train net output #0: loss = 0.561881 (* 1 = 0.561881 loss)
I0428 19:33:07.846354 23031 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:07.939328 23031 solver.cpp:219] Iteration 300 (1075.38 iter/s, 0.0929905s/100 iters), loss = 0.357732
I0428 19:33:07.939368 23031 solver.cpp:238]     Train net output #0: loss = 0.357732 (* 1 = 0.357732 loss)
I0428 19:33:07.939394 23031 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:08.032418 23031 solver.cpp:219] Iteration 400 (1074.76 iter/s, 0.0930437s/100 iters), loss = 0.257931
I0428 19:33:08.032445 23031 solver.cpp:238]     Train net output #0: loss = 0.257931 (* 1 = 0.257931 loss)
I0428 19:33:08.032469 23031 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:08.125932 23031 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:08.189687 23038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:08.191982 23031 solver.cpp:398]     Test net output #0: accuracy = 0.9315
I0428 19:33:08.192003 23031 solver.cpp:398]     Test net output #1: loss = 0.226974 (* 1 = 0.226974 loss)
I0428 19:33:08.192890 23031 solver.cpp:219] Iteration 500 (623.309 iter/s, 0.160434s/100 iters), loss = 0.336515
I0428 19:33:08.192915 23031 solver.cpp:238]     Train net output #0: loss = 0.336515 (* 1 = 0.336515 loss)
I0428 19:33:08.192924 23031 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:08.288576 23031 solver.cpp:219] Iteration 600 (1045.45 iter/s, 0.0956529s/100 iters), loss = 0.18047
I0428 19:33:08.288606 23031 solver.cpp:238]     Train net output #0: loss = 0.18047 (* 1 = 0.18047 loss)
I0428 19:33:08.288617 23031 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:08.384585 23031 solver.cpp:219] Iteration 700 (1041.98 iter/s, 0.0959715s/100 iters), loss = 0.230663
I0428 19:33:08.384613 23031 solver.cpp:238]     Train net output #0: loss = 0.230663 (* 1 = 0.230663 loss)
I0428 19:33:08.384624 23031 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:08.479562 23031 solver.cpp:219] Iteration 800 (1053.3 iter/s, 0.0949402s/100 iters), loss = 0.250127
I0428 19:33:08.479589 23031 solver.cpp:238]     Train net output #0: loss = 0.250127 (* 1 = 0.250127 loss)
I0428 19:33:08.479599 23031 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:08.575590 23031 solver.cpp:219] Iteration 900 (1041.74 iter/s, 0.0959928s/100 iters), loss = 0.225095
I0428 19:33:08.575634 23031 solver.cpp:238]     Train net output #0: loss = 0.225095 (* 1 = 0.225095 loss)
I0428 19:33:08.575644 23031 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:08.607327 23037 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:08.669286 23031 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:08.670428 23031 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:08.671387 23031 solver.cpp:311] Iteration 1000, loss = 0.1854
I0428 19:33:08.671403 23031 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:08.736579 23031 blocking_queue.cpp:49] Waiting for data
I0428 19:33:08.737490 23038 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:08.738240 23031 solver.cpp:398]     Test net output #0: accuracy = 0.9591
I0428 19:33:08.738258 23031 solver.cpp:398]     Test net output #1: loss = 0.138071 (* 1 = 0.138071 loss)
I0428 19:33:08.738267 23031 solver.cpp:316] Optimization Done.
I0428 19:33:08.738271 23031 caffe.cpp:259] Optimization Done.
