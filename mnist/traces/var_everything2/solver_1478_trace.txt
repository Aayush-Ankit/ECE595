I0428 20:26:51.008702  2886 caffe.cpp:218] Using GPUs 0
I0428 20:26:51.046131  2886 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:51.556936  2886 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1478.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:51.557077  2886 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1478.prototxt
I0428 20:26:51.557492  2886 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:51.557512  2886 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:51.557615  2886 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:51.557696  2886 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:51.557793  2886 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:51.557816  2886 net.cpp:86] Creating Layer mnist
I0428 20:26:51.557823  2886 net.cpp:382] mnist -> data
I0428 20:26:51.557847  2886 net.cpp:382] mnist -> label
I0428 20:26:51.558918  2886 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:51.561342  2886 net.cpp:124] Setting up mnist
I0428 20:26:51.561360  2886 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:51.561367  2886 net.cpp:131] Top shape: 64 (64)
I0428 20:26:51.561370  2886 net.cpp:139] Memory required for data: 200960
I0428 20:26:51.561378  2886 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:51.561408  2886 net.cpp:86] Creating Layer conv0
I0428 20:26:51.561429  2886 net.cpp:408] conv0 <- data
I0428 20:26:51.561441  2886 net.cpp:382] conv0 -> conv0
I0428 20:26:51.848976  2886 net.cpp:124] Setting up conv0
I0428 20:26:51.849004  2886 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:51.849007  2886 net.cpp:139] Memory required for data: 14946560
I0428 20:26:51.849022  2886 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:51.849035  2886 net.cpp:86] Creating Layer pool0
I0428 20:26:51.849040  2886 net.cpp:408] pool0 <- conv0
I0428 20:26:51.849045  2886 net.cpp:382] pool0 -> pool0
I0428 20:26:51.849100  2886 net.cpp:124] Setting up pool0
I0428 20:26:51.849105  2886 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:51.849108  2886 net.cpp:139] Memory required for data: 18632960
I0428 20:26:51.849112  2886 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:51.849123  2886 net.cpp:86] Creating Layer conv1
I0428 20:26:51.849125  2886 net.cpp:408] conv1 <- pool0
I0428 20:26:51.849130  2886 net.cpp:382] conv1 -> conv1
I0428 20:26:51.851790  2886 net.cpp:124] Setting up conv1
I0428 20:26:51.851805  2886 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:51.851809  2886 net.cpp:139] Memory required for data: 18665728
I0428 20:26:51.851817  2886 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:51.851826  2886 net.cpp:86] Creating Layer pool1
I0428 20:26:51.851830  2886 net.cpp:408] pool1 <- conv1
I0428 20:26:51.851835  2886 net.cpp:382] pool1 -> pool1
I0428 20:26:51.851872  2886 net.cpp:124] Setting up pool1
I0428 20:26:51.851877  2886 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:51.851881  2886 net.cpp:139] Memory required for data: 18673920
I0428 20:26:51.851883  2886 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:51.851891  2886 net.cpp:86] Creating Layer ip1
I0428 20:26:51.851893  2886 net.cpp:408] ip1 <- pool1
I0428 20:26:51.851897  2886 net.cpp:382] ip1 -> ip1
I0428 20:26:51.852004  2886 net.cpp:124] Setting up ip1
I0428 20:26:51.852010  2886 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:51.852013  2886 net.cpp:139] Memory required for data: 18686720
I0428 20:26:51.852021  2886 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:51.852026  2886 net.cpp:86] Creating Layer relu1
I0428 20:26:51.852030  2886 net.cpp:408] relu1 <- ip1
I0428 20:26:51.852035  2886 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:51.852195  2886 net.cpp:124] Setting up relu1
I0428 20:26:51.852202  2886 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:26:51.852205  2886 net.cpp:139] Memory required for data: 18699520
I0428 20:26:51.852210  2886 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:51.852216  2886 net.cpp:86] Creating Layer ip2
I0428 20:26:51.852218  2886 net.cpp:408] ip2 <- ip1
I0428 20:26:51.852222  2886 net.cpp:382] ip2 -> ip2
I0428 20:26:51.852322  2886 net.cpp:124] Setting up ip2
I0428 20:26:51.852339  2886 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:51.852342  2886 net.cpp:139] Memory required for data: 18705920
I0428 20:26:51.852347  2886 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:51.852354  2886 net.cpp:86] Creating Layer relu2
I0428 20:26:51.852356  2886 net.cpp:408] relu2 <- ip2
I0428 20:26:51.852360  2886 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:51.853181  2886 net.cpp:124] Setting up relu2
I0428 20:26:51.853193  2886 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:51.853198  2886 net.cpp:139] Memory required for data: 18712320
I0428 20:26:51.853200  2886 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:51.853207  2886 net.cpp:86] Creating Layer ip3
I0428 20:26:51.853210  2886 net.cpp:408] ip3 <- ip2
I0428 20:26:51.853215  2886 net.cpp:382] ip3 -> ip3
I0428 20:26:51.853310  2886 net.cpp:124] Setting up ip3
I0428 20:26:51.853317  2886 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:51.853320  2886 net.cpp:139] Memory required for data: 18714880
I0428 20:26:51.853328  2886 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:51.853333  2886 net.cpp:86] Creating Layer relu3
I0428 20:26:51.853337  2886 net.cpp:408] relu3 <- ip3
I0428 20:26:51.853340  2886 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:51.853498  2886 net.cpp:124] Setting up relu3
I0428 20:26:51.853507  2886 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:51.853509  2886 net.cpp:139] Memory required for data: 18717440
I0428 20:26:51.853513  2886 layer_factory.hpp:77] Creating layer loss
I0428 20:26:51.853518  2886 net.cpp:86] Creating Layer loss
I0428 20:26:51.853521  2886 net.cpp:408] loss <- ip3
I0428 20:26:51.853524  2886 net.cpp:408] loss <- label
I0428 20:26:51.853529  2886 net.cpp:382] loss -> loss
I0428 20:26:51.853546  2886 layer_factory.hpp:77] Creating layer loss
I0428 20:26:51.853755  2886 net.cpp:124] Setting up loss
I0428 20:26:51.853765  2886 net.cpp:131] Top shape: (1)
I0428 20:26:51.853767  2886 net.cpp:134]     with loss weight 1
I0428 20:26:51.853783  2886 net.cpp:139] Memory required for data: 18717444
I0428 20:26:51.853787  2886 net.cpp:200] loss needs backward computation.
I0428 20:26:51.853790  2886 net.cpp:200] relu3 needs backward computation.
I0428 20:26:51.853793  2886 net.cpp:200] ip3 needs backward computation.
I0428 20:26:51.853796  2886 net.cpp:200] relu2 needs backward computation.
I0428 20:26:51.853799  2886 net.cpp:200] ip2 needs backward computation.
I0428 20:26:51.853802  2886 net.cpp:200] relu1 needs backward computation.
I0428 20:26:51.853806  2886 net.cpp:200] ip1 needs backward computation.
I0428 20:26:51.853808  2886 net.cpp:200] pool1 needs backward computation.
I0428 20:26:51.853811  2886 net.cpp:200] conv1 needs backward computation.
I0428 20:26:51.853814  2886 net.cpp:200] pool0 needs backward computation.
I0428 20:26:51.853817  2886 net.cpp:200] conv0 needs backward computation.
I0428 20:26:51.853821  2886 net.cpp:202] mnist does not need backward computation.
I0428 20:26:51.853823  2886 net.cpp:244] This network produces output loss
I0428 20:26:51.853832  2886 net.cpp:257] Network initialization done.
I0428 20:26:51.854187  2886 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1478.prototxt
I0428 20:26:51.854213  2886 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:51.854303  2886 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:51.854393  2886 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:51.854435  2886 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:51.854449  2886 net.cpp:86] Creating Layer mnist
I0428 20:26:51.854452  2886 net.cpp:382] mnist -> data
I0428 20:26:51.854460  2886 net.cpp:382] mnist -> label
I0428 20:26:51.854539  2886 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:51.856533  2886 net.cpp:124] Setting up mnist
I0428 20:26:51.856544  2886 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:51.856549  2886 net.cpp:131] Top shape: 100 (100)
I0428 20:26:51.856552  2886 net.cpp:139] Memory required for data: 314000
I0428 20:26:51.856572  2886 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:51.856581  2886 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:51.856585  2886 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:51.856590  2886 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:51.856596  2886 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:51.856637  2886 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:51.856643  2886 net.cpp:131] Top shape: 100 (100)
I0428 20:26:51.856647  2886 net.cpp:131] Top shape: 100 (100)
I0428 20:26:51.856649  2886 net.cpp:139] Memory required for data: 314800
I0428 20:26:51.856652  2886 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:51.856660  2886 net.cpp:86] Creating Layer conv0
I0428 20:26:51.856663  2886 net.cpp:408] conv0 <- data
I0428 20:26:51.856668  2886 net.cpp:382] conv0 -> conv0
I0428 20:26:51.858410  2886 net.cpp:124] Setting up conv0
I0428 20:26:51.858424  2886 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:51.858428  2886 net.cpp:139] Memory required for data: 23354800
I0428 20:26:51.858436  2886 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:51.858443  2886 net.cpp:86] Creating Layer pool0
I0428 20:26:51.858446  2886 net.cpp:408] pool0 <- conv0
I0428 20:26:51.858450  2886 net.cpp:382] pool0 -> pool0
I0428 20:26:51.858484  2886 net.cpp:124] Setting up pool0
I0428 20:26:51.858490  2886 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:51.858494  2886 net.cpp:139] Memory required for data: 29114800
I0428 20:26:51.858496  2886 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:51.858503  2886 net.cpp:86] Creating Layer conv1
I0428 20:26:51.858507  2886 net.cpp:408] conv1 <- pool0
I0428 20:26:51.858511  2886 net.cpp:382] conv1 -> conv1
I0428 20:26:51.860036  2886 net.cpp:124] Setting up conv1
I0428 20:26:51.860049  2886 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:51.860052  2886 net.cpp:139] Memory required for data: 29166000
I0428 20:26:51.860060  2886 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:51.860066  2886 net.cpp:86] Creating Layer pool1
I0428 20:26:51.860070  2886 net.cpp:408] pool1 <- conv1
I0428 20:26:51.860074  2886 net.cpp:382] pool1 -> pool1
I0428 20:26:51.860108  2886 net.cpp:124] Setting up pool1
I0428 20:26:51.860115  2886 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:51.860117  2886 net.cpp:139] Memory required for data: 29178800
I0428 20:26:51.860132  2886 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:51.860138  2886 net.cpp:86] Creating Layer ip1
I0428 20:26:51.860141  2886 net.cpp:408] ip1 <- pool1
I0428 20:26:51.860162  2886 net.cpp:382] ip1 -> ip1
I0428 20:26:51.860303  2886 net.cpp:124] Setting up ip1
I0428 20:26:51.860311  2886 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:51.860327  2886 net.cpp:139] Memory required for data: 29198800
I0428 20:26:51.860337  2886 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:51.860342  2886 net.cpp:86] Creating Layer relu1
I0428 20:26:51.860345  2886 net.cpp:408] relu1 <- ip1
I0428 20:26:51.860350  2886 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:51.860534  2886 net.cpp:124] Setting up relu1
I0428 20:26:51.860556  2886 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:26:51.860560  2886 net.cpp:139] Memory required for data: 29218800
I0428 20:26:51.860579  2886 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:51.860600  2886 net.cpp:86] Creating Layer ip2
I0428 20:26:51.860605  2886 net.cpp:408] ip2 <- ip1
I0428 20:26:51.860623  2886 net.cpp:382] ip2 -> ip2
I0428 20:26:51.860726  2886 net.cpp:124] Setting up ip2
I0428 20:26:51.860733  2886 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:51.860736  2886 net.cpp:139] Memory required for data: 29228800
I0428 20:26:51.860741  2886 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:51.860746  2886 net.cpp:86] Creating Layer relu2
I0428 20:26:51.860749  2886 net.cpp:408] relu2 <- ip2
I0428 20:26:51.860754  2886 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:51.860982  2886 net.cpp:124] Setting up relu2
I0428 20:26:51.860991  2886 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:51.860994  2886 net.cpp:139] Memory required for data: 29238800
I0428 20:26:51.860997  2886 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:51.861002  2886 net.cpp:86] Creating Layer ip3
I0428 20:26:51.861006  2886 net.cpp:408] ip3 <- ip2
I0428 20:26:51.861011  2886 net.cpp:382] ip3 -> ip3
I0428 20:26:51.861122  2886 net.cpp:124] Setting up ip3
I0428 20:26:51.861129  2886 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:51.861132  2886 net.cpp:139] Memory required for data: 29242800
I0428 20:26:51.861140  2886 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:51.861145  2886 net.cpp:86] Creating Layer relu3
I0428 20:26:51.861148  2886 net.cpp:408] relu3 <- ip3
I0428 20:26:51.861152  2886 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:51.862047  2886 net.cpp:124] Setting up relu3
I0428 20:26:51.862059  2886 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:51.862062  2886 net.cpp:139] Memory required for data: 29246800
I0428 20:26:51.862066  2886 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:51.862072  2886 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:51.862076  2886 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:51.862082  2886 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:51.862087  2886 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:51.862123  2886 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:51.862130  2886 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:51.862134  2886 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:51.862138  2886 net.cpp:139] Memory required for data: 29254800
I0428 20:26:51.862148  2886 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:51.862152  2886 net.cpp:86] Creating Layer accuracy
I0428 20:26:51.862155  2886 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:51.862159  2886 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:51.862164  2886 net.cpp:382] accuracy -> accuracy
I0428 20:26:51.862170  2886 net.cpp:124] Setting up accuracy
I0428 20:26:51.862174  2886 net.cpp:131] Top shape: (1)
I0428 20:26:51.862182  2886 net.cpp:139] Memory required for data: 29254804
I0428 20:26:51.862190  2886 layer_factory.hpp:77] Creating layer loss
I0428 20:26:51.862195  2886 net.cpp:86] Creating Layer loss
I0428 20:26:51.862198  2886 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:51.862201  2886 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:51.862211  2886 net.cpp:382] loss -> loss
I0428 20:26:51.862216  2886 layer_factory.hpp:77] Creating layer loss
I0428 20:26:51.862457  2886 net.cpp:124] Setting up loss
I0428 20:26:51.862465  2886 net.cpp:131] Top shape: (1)
I0428 20:26:51.862468  2886 net.cpp:134]     with loss weight 1
I0428 20:26:51.862488  2886 net.cpp:139] Memory required for data: 29254808
I0428 20:26:51.862491  2886 net.cpp:200] loss needs backward computation.
I0428 20:26:51.862495  2886 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:51.862499  2886 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:51.862502  2886 net.cpp:200] relu3 needs backward computation.
I0428 20:26:51.862505  2886 net.cpp:200] ip3 needs backward computation.
I0428 20:26:51.862509  2886 net.cpp:200] relu2 needs backward computation.
I0428 20:26:51.862511  2886 net.cpp:200] ip2 needs backward computation.
I0428 20:26:51.862514  2886 net.cpp:200] relu1 needs backward computation.
I0428 20:26:51.862516  2886 net.cpp:200] ip1 needs backward computation.
I0428 20:26:51.862519  2886 net.cpp:200] pool1 needs backward computation.
I0428 20:26:51.862524  2886 net.cpp:200] conv1 needs backward computation.
I0428 20:26:51.862526  2886 net.cpp:200] pool0 needs backward computation.
I0428 20:26:51.862529  2886 net.cpp:200] conv0 needs backward computation.
I0428 20:26:51.862534  2886 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:51.862536  2886 net.cpp:202] mnist does not need backward computation.
I0428 20:26:51.862540  2886 net.cpp:244] This network produces output accuracy
I0428 20:26:51.862542  2886 net.cpp:244] This network produces output loss
I0428 20:26:51.862568  2886 net.cpp:257] Network initialization done.
I0428 20:26:51.862607  2886 solver.cpp:56] Solver scaffolding done.
I0428 20:26:51.862998  2886 caffe.cpp:248] Starting Optimization
I0428 20:26:51.863020  2886 solver.cpp:273] Solving LeNet
I0428 20:26:51.863023  2886 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:51.863310  2886 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:51.959699  2893 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:51.962160  2886 solver.cpp:398]     Test net output #0: accuracy = 0.0977
I0428 20:26:51.962194  2886 solver.cpp:398]     Test net output #1: loss = 2.30188 (* 1 = 2.30188 loss)
I0428 20:26:51.966787  2886 solver.cpp:219] Iteration 0 (0 iter/s, 0.103734s/100 iters), loss = 2.32278
I0428 20:26:51.966826  2886 solver.cpp:238]     Train net output #0: loss = 2.32278 (* 1 = 2.32278 loss)
I0428 20:26:51.966837  2886 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:52.176067  2886 solver.cpp:219] Iteration 100 (477.983 iter/s, 0.209212s/100 iters), loss = 0.718585
I0428 20:26:52.176110  2886 solver.cpp:238]     Train net output #0: loss = 0.718585 (* 1 = 0.718585 loss)
I0428 20:26:52.176120  2886 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:52.386837  2886 solver.cpp:219] Iteration 200 (474.585 iter/s, 0.210711s/100 iters), loss = 0.286993
I0428 20:26:52.386886  2886 solver.cpp:238]     Train net output #0: loss = 0.286993 (* 1 = 0.286993 loss)
I0428 20:26:52.386899  2886 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:52.604735  2886 solver.cpp:219] Iteration 300 (459.064 iter/s, 0.217835s/100 iters), loss = 0.27412
I0428 20:26:52.604780  2886 solver.cpp:238]     Train net output #0: loss = 0.27412 (* 1 = 0.27412 loss)
I0428 20:26:52.604792  2886 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:52.815778  2886 solver.cpp:219] Iteration 400 (473.974 iter/s, 0.210982s/100 iters), loss = 0.175854
I0428 20:26:52.815830  2886 solver.cpp:238]     Train net output #0: loss = 0.175854 (* 1 = 0.175854 loss)
I0428 20:26:52.815843  2886 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:53.026446  2886 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:53.125154  2893 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:53.128589  2886 solver.cpp:398]     Test net output #0: accuracy = 0.94
I0428 20:26:53.128615  2886 solver.cpp:398]     Test net output #1: loss = 0.192971 (* 1 = 0.192971 loss)
I0428 20:26:53.130527  2886 solver.cpp:219] Iteration 500 (317.782 iter/s, 0.314681s/100 iters), loss = 0.36203
I0428 20:26:53.130554  2886 solver.cpp:238]     Train net output #0: loss = 0.36203 (* 1 = 0.36203 loss)
I0428 20:26:53.130580  2886 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:53.335314  2886 solver.cpp:219] Iteration 600 (488.42 iter/s, 0.204742s/100 iters), loss = 0.127316
I0428 20:26:53.335371  2886 solver.cpp:238]     Train net output #0: loss = 0.127316 (* 1 = 0.127316 loss)
I0428 20:26:53.335381  2886 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:53.544261  2886 solver.cpp:219] Iteration 700 (478.749 iter/s, 0.208878s/100 iters), loss = 0.27601
I0428 20:26:53.544298  2886 solver.cpp:238]     Train net output #0: loss = 0.27601 (* 1 = 0.27601 loss)
I0428 20:26:53.544308  2886 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:53.754272  2886 solver.cpp:219] Iteration 800 (476.286 iter/s, 0.209958s/100 iters), loss = 0.327409
I0428 20:26:53.754309  2886 solver.cpp:238]     Train net output #0: loss = 0.327409 (* 1 = 0.327409 loss)
I0428 20:26:53.754319  2886 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:53.966709  2886 solver.cpp:219] Iteration 900 (470.844 iter/s, 0.212385s/100 iters), loss = 0.184205
I0428 20:26:53.966743  2886 solver.cpp:238]     Train net output #0: loss = 0.184205 (* 1 = 0.184205 loss)
I0428 20:26:53.966751  2886 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:54.039860  2892 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:54.182399  2886 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:54.184087  2886 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:54.185140  2886 solver.cpp:311] Iteration 1000, loss = 0.135542
I0428 20:26:54.185161  2886 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:54.284415  2893 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:54.287298  2886 solver.cpp:398]     Test net output #0: accuracy = 0.961
I0428 20:26:54.287322  2886 solver.cpp:398]     Test net output #1: loss = 0.11809 (* 1 = 0.11809 loss)
I0428 20:26:54.287328  2886 solver.cpp:316] Optimization Done.
I0428 20:26:54.287333  2886 caffe.cpp:259] Optimization Done.
