I0428 19:59:06.655176 29161 caffe.cpp:218] Using GPUs 0
I0428 19:59:06.691987 29161 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:07.204216 29161 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test838.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:07.204355 29161 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test838.prototxt
I0428 19:59:07.204774 29161 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:07.204793 29161 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:07.204905 29161 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:07.204985 29161 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:07.205087 29161 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:07.205111 29161 net.cpp:86] Creating Layer mnist
I0428 19:59:07.205119 29161 net.cpp:382] mnist -> data
I0428 19:59:07.205142 29161 net.cpp:382] mnist -> label
I0428 19:59:07.206248 29161 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:07.208678 29161 net.cpp:124] Setting up mnist
I0428 19:59:07.208695 29161 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:07.208701 29161 net.cpp:131] Top shape: 64 (64)
I0428 19:59:07.208704 29161 net.cpp:139] Memory required for data: 200960
I0428 19:59:07.208712 29161 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:07.208729 29161 net.cpp:86] Creating Layer conv0
I0428 19:59:07.208748 29161 net.cpp:408] conv0 <- data
I0428 19:59:07.208761 29161 net.cpp:382] conv0 -> conv0
I0428 19:59:07.484359 29161 net.cpp:124] Setting up conv0
I0428 19:59:07.484401 29161 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:07.484406 29161 net.cpp:139] Memory required for data: 1675520
I0428 19:59:07.484421 29161 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:07.484433 29161 net.cpp:86] Creating Layer pool0
I0428 19:59:07.484446 29161 net.cpp:408] pool0 <- conv0
I0428 19:59:07.484450 29161 net.cpp:382] pool0 -> pool0
I0428 19:59:07.484495 29161 net.cpp:124] Setting up pool0
I0428 19:59:07.484500 29161 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:07.484503 29161 net.cpp:139] Memory required for data: 2044160
I0428 19:59:07.484506 29161 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:07.484516 29161 net.cpp:86] Creating Layer conv1
I0428 19:59:07.484519 29161 net.cpp:408] conv1 <- pool0
I0428 19:59:07.484524 29161 net.cpp:382] conv1 -> conv1
I0428 19:59:07.487395 29161 net.cpp:124] Setting up conv1
I0428 19:59:07.487424 29161 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:07.487428 29161 net.cpp:139] Memory required for data: 2208000
I0428 19:59:07.487437 29161 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:07.487444 29161 net.cpp:86] Creating Layer pool1
I0428 19:59:07.487448 29161 net.cpp:408] pool1 <- conv1
I0428 19:59:07.487453 29161 net.cpp:382] pool1 -> pool1
I0428 19:59:07.487507 29161 net.cpp:124] Setting up pool1
I0428 19:59:07.487512 29161 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:07.487515 29161 net.cpp:139] Memory required for data: 2248960
I0428 19:59:07.487519 29161 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:07.487525 29161 net.cpp:86] Creating Layer ip1
I0428 19:59:07.487529 29161 net.cpp:408] ip1 <- pool1
I0428 19:59:07.487534 29161 net.cpp:382] ip1 -> ip1
I0428 19:59:07.487643 29161 net.cpp:124] Setting up ip1
I0428 19:59:07.487651 29161 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:07.487654 29161 net.cpp:139] Memory required for data: 2251520
I0428 19:59:07.487661 29161 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:07.487668 29161 net.cpp:86] Creating Layer relu1
I0428 19:59:07.487671 29161 net.cpp:408] relu1 <- ip1
I0428 19:59:07.487675 29161 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:07.487855 29161 net.cpp:124] Setting up relu1
I0428 19:59:07.487864 29161 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:07.487867 29161 net.cpp:139] Memory required for data: 2254080
I0428 19:59:07.487870 29161 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:07.487875 29161 net.cpp:86] Creating Layer ip2
I0428 19:59:07.487879 29161 net.cpp:408] ip2 <- ip1
I0428 19:59:07.487884 29161 net.cpp:382] ip2 -> ip2
I0428 19:59:07.487977 29161 net.cpp:124] Setting up ip2
I0428 19:59:07.487983 29161 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:07.487987 29161 net.cpp:139] Memory required for data: 2266880
I0428 19:59:07.487992 29161 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:07.487998 29161 net.cpp:86] Creating Layer relu2
I0428 19:59:07.488000 29161 net.cpp:408] relu2 <- ip2
I0428 19:59:07.488004 29161 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:07.488790 29161 net.cpp:124] Setting up relu2
I0428 19:59:07.488803 29161 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:07.488827 29161 net.cpp:139] Memory required for data: 2279680
I0428 19:59:07.488847 29161 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:07.488869 29161 net.cpp:86] Creating Layer ip3
I0428 19:59:07.488873 29161 net.cpp:408] ip3 <- ip2
I0428 19:59:07.488893 29161 net.cpp:382] ip3 -> ip3
I0428 19:59:07.488997 29161 net.cpp:124] Setting up ip3
I0428 19:59:07.489006 29161 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:07.489008 29161 net.cpp:139] Memory required for data: 2282240
I0428 19:59:07.489017 29161 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:07.489022 29161 net.cpp:86] Creating Layer relu3
I0428 19:59:07.489025 29161 net.cpp:408] relu3 <- ip3
I0428 19:59:07.489029 29161 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:07.489230 29161 net.cpp:124] Setting up relu3
I0428 19:59:07.489238 29161 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:07.489243 29161 net.cpp:139] Memory required for data: 2284800
I0428 19:59:07.489245 29161 layer_factory.hpp:77] Creating layer loss
I0428 19:59:07.489250 29161 net.cpp:86] Creating Layer loss
I0428 19:59:07.489253 29161 net.cpp:408] loss <- ip3
I0428 19:59:07.489258 29161 net.cpp:408] loss <- label
I0428 19:59:07.489264 29161 net.cpp:382] loss -> loss
I0428 19:59:07.489277 29161 layer_factory.hpp:77] Creating layer loss
I0428 19:59:07.489512 29161 net.cpp:124] Setting up loss
I0428 19:59:07.489521 29161 net.cpp:131] Top shape: (1)
I0428 19:59:07.489526 29161 net.cpp:134]     with loss weight 1
I0428 19:59:07.489554 29161 net.cpp:139] Memory required for data: 2284804
I0428 19:59:07.489558 29161 net.cpp:200] loss needs backward computation.
I0428 19:59:07.489562 29161 net.cpp:200] relu3 needs backward computation.
I0428 19:59:07.489564 29161 net.cpp:200] ip3 needs backward computation.
I0428 19:59:07.489567 29161 net.cpp:200] relu2 needs backward computation.
I0428 19:59:07.489570 29161 net.cpp:200] ip2 needs backward computation.
I0428 19:59:07.489573 29161 net.cpp:200] relu1 needs backward computation.
I0428 19:59:07.489575 29161 net.cpp:200] ip1 needs backward computation.
I0428 19:59:07.489578 29161 net.cpp:200] pool1 needs backward computation.
I0428 19:59:07.489580 29161 net.cpp:200] conv1 needs backward computation.
I0428 19:59:07.489583 29161 net.cpp:200] pool0 needs backward computation.
I0428 19:59:07.489586 29161 net.cpp:200] conv0 needs backward computation.
I0428 19:59:07.489589 29161 net.cpp:202] mnist does not need backward computation.
I0428 19:59:07.489593 29161 net.cpp:244] This network produces output loss
I0428 19:59:07.489601 29161 net.cpp:257] Network initialization done.
I0428 19:59:07.490010 29161 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test838.prototxt
I0428 19:59:07.490052 29161 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:07.490162 29161 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:07.490257 29161 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:07.490300 29161 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:07.490314 29161 net.cpp:86] Creating Layer mnist
I0428 19:59:07.490319 29161 net.cpp:382] mnist -> data
I0428 19:59:07.490326 29161 net.cpp:382] mnist -> label
I0428 19:59:07.490413 29161 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:07.492683 29161 net.cpp:124] Setting up mnist
I0428 19:59:07.492712 29161 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:07.492717 29161 net.cpp:131] Top shape: 100 (100)
I0428 19:59:07.492719 29161 net.cpp:139] Memory required for data: 314000
I0428 19:59:07.492722 29161 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:07.492728 29161 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:07.492732 29161 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:07.492765 29161 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:07.492772 29161 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:07.492838 29161 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:07.492846 29161 net.cpp:131] Top shape: 100 (100)
I0428 19:59:07.492849 29161 net.cpp:131] Top shape: 100 (100)
I0428 19:59:07.492852 29161 net.cpp:139] Memory required for data: 314800
I0428 19:59:07.492856 29161 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:07.492864 29161 net.cpp:86] Creating Layer conv0
I0428 19:59:07.492867 29161 net.cpp:408] conv0 <- data
I0428 19:59:07.492887 29161 net.cpp:382] conv0 -> conv0
I0428 19:59:07.494683 29161 net.cpp:124] Setting up conv0
I0428 19:59:07.494696 29161 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:07.494700 29161 net.cpp:139] Memory required for data: 2618800
I0428 19:59:07.494709 29161 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:07.494714 29161 net.cpp:86] Creating Layer pool0
I0428 19:59:07.494717 29161 net.cpp:408] pool0 <- conv0
I0428 19:59:07.494724 29161 net.cpp:382] pool0 -> pool0
I0428 19:59:07.494758 29161 net.cpp:124] Setting up pool0
I0428 19:59:07.494762 29161 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:07.494765 29161 net.cpp:139] Memory required for data: 3194800
I0428 19:59:07.494768 29161 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:07.494778 29161 net.cpp:86] Creating Layer conv1
I0428 19:59:07.494781 29161 net.cpp:408] conv1 <- pool0
I0428 19:59:07.494786 29161 net.cpp:382] conv1 -> conv1
I0428 19:59:07.497040 29161 net.cpp:124] Setting up conv1
I0428 19:59:07.497057 29161 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:07.497061 29161 net.cpp:139] Memory required for data: 3450800
I0428 19:59:07.497069 29161 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:07.497077 29161 net.cpp:86] Creating Layer pool1
I0428 19:59:07.497097 29161 net.cpp:408] pool1 <- conv1
I0428 19:59:07.497107 29161 net.cpp:382] pool1 -> pool1
I0428 19:59:07.497180 29161 net.cpp:124] Setting up pool1
I0428 19:59:07.497193 29161 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:07.497196 29161 net.cpp:139] Memory required for data: 3514800
I0428 19:59:07.497198 29161 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:07.497205 29161 net.cpp:86] Creating Layer ip1
I0428 19:59:07.497210 29161 net.cpp:408] ip1 <- pool1
I0428 19:59:07.497213 29161 net.cpp:382] ip1 -> ip1
I0428 19:59:07.497357 29161 net.cpp:124] Setting up ip1
I0428 19:59:07.497365 29161 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:07.497392 29161 net.cpp:139] Memory required for data: 3518800
I0428 19:59:07.497416 29161 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:07.497421 29161 net.cpp:86] Creating Layer relu1
I0428 19:59:07.497423 29161 net.cpp:408] relu1 <- ip1
I0428 19:59:07.497429 29161 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:07.497668 29161 net.cpp:124] Setting up relu1
I0428 19:59:07.497678 29161 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:07.497680 29161 net.cpp:139] Memory required for data: 3522800
I0428 19:59:07.497684 29161 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:07.497691 29161 net.cpp:86] Creating Layer ip2
I0428 19:59:07.497694 29161 net.cpp:408] ip2 <- ip1
I0428 19:59:07.497700 29161 net.cpp:382] ip2 -> ip2
I0428 19:59:07.497807 29161 net.cpp:124] Setting up ip2
I0428 19:59:07.497815 29161 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:07.497817 29161 net.cpp:139] Memory required for data: 3542800
I0428 19:59:07.497823 29161 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:07.497828 29161 net.cpp:86] Creating Layer relu2
I0428 19:59:07.497830 29161 net.cpp:408] relu2 <- ip2
I0428 19:59:07.497834 29161 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:07.497983 29161 net.cpp:124] Setting up relu2
I0428 19:59:07.497992 29161 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:07.498001 29161 net.cpp:139] Memory required for data: 3562800
I0428 19:59:07.498004 29161 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:07.498009 29161 net.cpp:86] Creating Layer ip3
I0428 19:59:07.498018 29161 net.cpp:408] ip3 <- ip2
I0428 19:59:07.498023 29161 net.cpp:382] ip3 -> ip3
I0428 19:59:07.498164 29161 net.cpp:124] Setting up ip3
I0428 19:59:07.498188 29161 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:07.498195 29161 net.cpp:139] Memory required for data: 3566800
I0428 19:59:07.498203 29161 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:07.498209 29161 net.cpp:86] Creating Layer relu3
I0428 19:59:07.498219 29161 net.cpp:408] relu3 <- ip3
I0428 19:59:07.498222 29161 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:07.499114 29161 net.cpp:124] Setting up relu3
I0428 19:59:07.499125 29161 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:07.499128 29161 net.cpp:139] Memory required for data: 3570800
I0428 19:59:07.499132 29161 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:07.499136 29161 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:07.499140 29161 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:07.499145 29161 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:07.499151 29161 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:07.499198 29161 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:07.499204 29161 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:07.499208 29161 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:07.499210 29161 net.cpp:139] Memory required for data: 3578800
I0428 19:59:07.499213 29161 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:07.499219 29161 net.cpp:86] Creating Layer accuracy
I0428 19:59:07.499222 29161 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:07.499228 29161 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:07.499231 29161 net.cpp:382] accuracy -> accuracy
I0428 19:59:07.499238 29161 net.cpp:124] Setting up accuracy
I0428 19:59:07.499248 29161 net.cpp:131] Top shape: (1)
I0428 19:59:07.499250 29161 net.cpp:139] Memory required for data: 3578804
I0428 19:59:07.499253 29161 layer_factory.hpp:77] Creating layer loss
I0428 19:59:07.499259 29161 net.cpp:86] Creating Layer loss
I0428 19:59:07.499263 29161 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:07.499265 29161 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:07.499269 29161 net.cpp:382] loss -> loss
I0428 19:59:07.499275 29161 layer_factory.hpp:77] Creating layer loss
I0428 19:59:07.499534 29161 net.cpp:124] Setting up loss
I0428 19:59:07.499543 29161 net.cpp:131] Top shape: (1)
I0428 19:59:07.499547 29161 net.cpp:134]     with loss weight 1
I0428 19:59:07.499562 29161 net.cpp:139] Memory required for data: 3578808
I0428 19:59:07.499565 29161 net.cpp:200] loss needs backward computation.
I0428 19:59:07.499577 29161 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:07.499580 29161 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:07.499583 29161 net.cpp:200] relu3 needs backward computation.
I0428 19:59:07.499586 29161 net.cpp:200] ip3 needs backward computation.
I0428 19:59:07.499589 29161 net.cpp:200] relu2 needs backward computation.
I0428 19:59:07.499593 29161 net.cpp:200] ip2 needs backward computation.
I0428 19:59:07.499594 29161 net.cpp:200] relu1 needs backward computation.
I0428 19:59:07.499598 29161 net.cpp:200] ip1 needs backward computation.
I0428 19:59:07.499600 29161 net.cpp:200] pool1 needs backward computation.
I0428 19:59:07.499609 29161 net.cpp:200] conv1 needs backward computation.
I0428 19:59:07.499613 29161 net.cpp:200] pool0 needs backward computation.
I0428 19:59:07.499615 29161 net.cpp:200] conv0 needs backward computation.
I0428 19:59:07.499620 29161 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:07.499624 29161 net.cpp:202] mnist does not need backward computation.
I0428 19:59:07.499627 29161 net.cpp:244] This network produces output accuracy
I0428 19:59:07.499630 29161 net.cpp:244] This network produces output loss
I0428 19:59:07.499640 29161 net.cpp:257] Network initialization done.
I0428 19:59:07.499683 29161 solver.cpp:56] Solver scaffolding done.
I0428 19:59:07.500035 29161 caffe.cpp:248] Starting Optimization
I0428 19:59:07.500041 29161 solver.cpp:273] Solving LeNet
I0428 19:59:07.500044 29161 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:07.500936 29161 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:07.504840 29161 blocking_queue.cpp:49] Waiting for data
I0428 19:59:07.574923 29168 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:07.575467 29161 solver.cpp:398]     Test net output #0: accuracy = 0.1285
I0428 19:59:07.575486 29161 solver.cpp:398]     Test net output #1: loss = 2.30414 (* 1 = 2.30414 loss)
I0428 19:59:07.578116 29161 solver.cpp:219] Iteration 0 (-8.7534e-31 iter/s, 0.0780472s/100 iters), loss = 2.334
I0428 19:59:07.578155 29161 solver.cpp:238]     Train net output #0: loss = 2.334 (* 1 = 2.334 loss)
I0428 19:59:07.578181 29161 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:07.658959 29161 solver.cpp:219] Iteration 100 (1237.77 iter/s, 0.0807905s/100 iters), loss = 0.833601
I0428 19:59:07.658983 29161 solver.cpp:238]     Train net output #0: loss = 0.833601 (* 1 = 0.833601 loss)
I0428 19:59:07.658989 29161 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:07.738822 29161 solver.cpp:219] Iteration 200 (1252.71 iter/s, 0.0798269s/100 iters), loss = 0.223773
I0428 19:59:07.738845 29161 solver.cpp:238]     Train net output #0: loss = 0.223773 (* 1 = 0.223773 loss)
I0428 19:59:07.738852 29161 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:07.818823 29161 solver.cpp:219] Iteration 300 (1250.5 iter/s, 0.0799683s/100 iters), loss = 0.298348
I0428 19:59:07.818846 29161 solver.cpp:238]     Train net output #0: loss = 0.298348 (* 1 = 0.298348 loss)
I0428 19:59:07.818852 29161 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:07.900101 29161 solver.cpp:219] Iteration 400 (1230.84 iter/s, 0.0812452s/100 iters), loss = 0.267551
I0428 19:59:07.900125 29161 solver.cpp:238]     Train net output #0: loss = 0.267551 (* 1 = 0.267551 loss)
I0428 19:59:07.900130 29161 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:07.979861 29161 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:08.033114 29168 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:08.033653 29161 solver.cpp:398]     Test net output #0: accuracy = 0.9561
I0428 19:59:08.033677 29161 solver.cpp:398]     Test net output #1: loss = 0.142267 (* 1 = 0.142267 loss)
I0428 19:59:08.034523 29161 solver.cpp:219] Iteration 500 (744.133 iter/s, 0.134385s/100 iters), loss = 0.106423
I0428 19:59:08.034582 29161 solver.cpp:238]     Train net output #0: loss = 0.106423 (* 1 = 0.106423 loss)
I0428 19:59:08.034595 29161 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:08.118634 29161 solver.cpp:219] Iteration 600 (1189.83 iter/s, 0.0840458s/100 iters), loss = 0.0904015
I0428 19:59:08.118659 29161 solver.cpp:238]     Train net output #0: loss = 0.0904016 (* 1 = 0.0904016 loss)
I0428 19:59:08.118666 29161 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:08.199486 29161 solver.cpp:219] Iteration 700 (1237.35 iter/s, 0.0808182s/100 iters), loss = 0.196585
I0428 19:59:08.199512 29161 solver.cpp:238]     Train net output #0: loss = 0.196585 (* 1 = 0.196585 loss)
I0428 19:59:08.199532 29161 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:08.276648 29161 solver.cpp:219] Iteration 800 (1296.55 iter/s, 0.0771277s/100 iters), loss = 0.320138
I0428 19:59:08.276671 29161 solver.cpp:238]     Train net output #0: loss = 0.320138 (* 1 = 0.320138 loss)
I0428 19:59:08.276677 29161 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:08.357820 29161 solver.cpp:219] Iteration 900 (1232.44 iter/s, 0.0811397s/100 iters), loss = 0.146509
I0428 19:59:08.357844 29161 solver.cpp:238]     Train net output #0: loss = 0.146509 (* 1 = 0.146509 loss)
I0428 19:59:08.357867 29161 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:08.391249 29167 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:08.449893 29161 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:08.450609 29161 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:08.451056 29161 solver.cpp:311] Iteration 1000, loss = 0.126644
I0428 19:59:08.451084 29161 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:08.525960 29168 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:08.526507 29161 solver.cpp:398]     Test net output #0: accuracy = 0.9681
I0428 19:59:08.526528 29161 solver.cpp:398]     Test net output #1: loss = 0.096572 (* 1 = 0.096572 loss)
I0428 19:59:08.526533 29161 solver.cpp:316] Optimization Done.
I0428 19:59:08.526543 29161 caffe.cpp:259] Optimization Done.
