I0428 19:35:26.899616 23510 caffe.cpp:218] Using GPUs 0
I0428 19:35:26.939009 23510 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:27.459332 23510 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test225.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:27.459465 23510 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test225.prototxt
I0428 19:35:27.459818 23510 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:27.459834 23510 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:27.459918 23510 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:27.459986 23510 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:27.460085 23510 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:27.460108 23510 net.cpp:86] Creating Layer mnist
I0428 19:35:27.460116 23510 net.cpp:382] mnist -> data
I0428 19:35:27.460139 23510 net.cpp:382] mnist -> label
I0428 19:35:27.461230 23510 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:27.463685 23510 net.cpp:124] Setting up mnist
I0428 19:35:27.463703 23510 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:27.463709 23510 net.cpp:131] Top shape: 64 (64)
I0428 19:35:27.463713 23510 net.cpp:139] Memory required for data: 200960
I0428 19:35:27.463721 23510 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:27.463737 23510 net.cpp:86] Creating Layer conv0
I0428 19:35:27.463742 23510 net.cpp:408] conv0 <- data
I0428 19:35:27.463753 23510 net.cpp:382] conv0 -> conv0
I0428 19:35:27.753458 23510 net.cpp:124] Setting up conv0
I0428 19:35:27.753485 23510 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:27.753489 23510 net.cpp:139] Memory required for data: 7573760
I0428 19:35:27.753506 23510 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:27.753521 23510 net.cpp:86] Creating Layer pool0
I0428 19:35:27.753545 23510 net.cpp:408] pool0 <- conv0
I0428 19:35:27.753553 23510 net.cpp:382] pool0 -> pool0
I0428 19:35:27.753604 23510 net.cpp:124] Setting up pool0
I0428 19:35:27.753618 23510 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:27.753620 23510 net.cpp:139] Memory required for data: 9416960
I0428 19:35:27.753624 23510 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:27.753633 23510 net.cpp:86] Creating Layer ip1
I0428 19:35:27.753635 23510 net.cpp:408] ip1 <- pool0
I0428 19:35:27.753641 23510 net.cpp:382] ip1 -> ip1
I0428 19:35:27.756875 23510 net.cpp:124] Setting up ip1
I0428 19:35:27.756891 23510 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:27.756894 23510 net.cpp:139] Memory required for data: 9429760
I0428 19:35:27.756903 23510 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:27.756911 23510 net.cpp:86] Creating Layer relu1
I0428 19:35:27.756916 23510 net.cpp:408] relu1 <- ip1
I0428 19:35:27.756920 23510 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:27.757102 23510 net.cpp:124] Setting up relu1
I0428 19:35:27.757112 23510 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:27.757115 23510 net.cpp:139] Memory required for data: 9442560
I0428 19:35:27.757119 23510 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:27.757127 23510 net.cpp:86] Creating Layer ip2
I0428 19:35:27.757129 23510 net.cpp:408] ip2 <- ip1
I0428 19:35:27.757134 23510 net.cpp:382] ip2 -> ip2
I0428 19:35:27.757238 23510 net.cpp:124] Setting up ip2
I0428 19:35:27.757246 23510 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:27.757249 23510 net.cpp:139] Memory required for data: 9445120
I0428 19:35:27.757257 23510 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:27.757262 23510 net.cpp:86] Creating Layer relu2
I0428 19:35:27.757266 23510 net.cpp:408] relu2 <- ip2
I0428 19:35:27.757269 23510 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:27.758051 23510 net.cpp:124] Setting up relu2
I0428 19:35:27.758064 23510 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:27.758069 23510 net.cpp:139] Memory required for data: 9447680
I0428 19:35:27.758072 23510 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:27.758080 23510 net.cpp:86] Creating Layer ip3
I0428 19:35:27.758083 23510 net.cpp:408] ip3 <- ip2
I0428 19:35:27.758088 23510 net.cpp:382] ip3 -> ip3
I0428 19:35:27.758188 23510 net.cpp:124] Setting up ip3
I0428 19:35:27.758196 23510 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:27.758199 23510 net.cpp:139] Memory required for data: 9450240
I0428 19:35:27.758205 23510 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:27.758211 23510 net.cpp:86] Creating Layer relu3
I0428 19:35:27.758215 23510 net.cpp:408] relu3 <- ip3
I0428 19:35:27.758219 23510 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:27.758374 23510 net.cpp:124] Setting up relu3
I0428 19:35:27.758383 23510 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:27.758386 23510 net.cpp:139] Memory required for data: 9452800
I0428 19:35:27.758389 23510 layer_factory.hpp:77] Creating layer loss
I0428 19:35:27.758396 23510 net.cpp:86] Creating Layer loss
I0428 19:35:27.758399 23510 net.cpp:408] loss <- ip3
I0428 19:35:27.758404 23510 net.cpp:408] loss <- label
I0428 19:35:27.758409 23510 net.cpp:382] loss -> loss
I0428 19:35:27.758427 23510 layer_factory.hpp:77] Creating layer loss
I0428 19:35:27.758666 23510 net.cpp:124] Setting up loss
I0428 19:35:27.758677 23510 net.cpp:131] Top shape: (1)
I0428 19:35:27.758679 23510 net.cpp:134]     with loss weight 1
I0428 19:35:27.758693 23510 net.cpp:139] Memory required for data: 9452804
I0428 19:35:27.758697 23510 net.cpp:200] loss needs backward computation.
I0428 19:35:27.758702 23510 net.cpp:200] relu3 needs backward computation.
I0428 19:35:27.758704 23510 net.cpp:200] ip3 needs backward computation.
I0428 19:35:27.758708 23510 net.cpp:200] relu2 needs backward computation.
I0428 19:35:27.758710 23510 net.cpp:200] ip2 needs backward computation.
I0428 19:35:27.758713 23510 net.cpp:200] relu1 needs backward computation.
I0428 19:35:27.758716 23510 net.cpp:200] ip1 needs backward computation.
I0428 19:35:27.758730 23510 net.cpp:200] pool0 needs backward computation.
I0428 19:35:27.758733 23510 net.cpp:200] conv0 needs backward computation.
I0428 19:35:27.758738 23510 net.cpp:202] mnist does not need backward computation.
I0428 19:35:27.758740 23510 net.cpp:244] This network produces output loss
I0428 19:35:27.758749 23510 net.cpp:257] Network initialization done.
I0428 19:35:27.759044 23510 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test225.prototxt
I0428 19:35:27.759073 23510 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:27.759156 23510 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:27.759223 23510 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:27.759268 23510 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:27.759281 23510 net.cpp:86] Creating Layer mnist
I0428 19:35:27.759286 23510 net.cpp:382] mnist -> data
I0428 19:35:27.759294 23510 net.cpp:382] mnist -> label
I0428 19:35:27.759382 23510 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:27.761555 23510 net.cpp:124] Setting up mnist
I0428 19:35:27.761570 23510 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:27.761576 23510 net.cpp:131] Top shape: 100 (100)
I0428 19:35:27.761579 23510 net.cpp:139] Memory required for data: 314000
I0428 19:35:27.761582 23510 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:27.761595 23510 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:27.761598 23510 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:27.761603 23510 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:27.761610 23510 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:27.761669 23510 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:27.761675 23510 net.cpp:131] Top shape: 100 (100)
I0428 19:35:27.761678 23510 net.cpp:131] Top shape: 100 (100)
I0428 19:35:27.761682 23510 net.cpp:139] Memory required for data: 314800
I0428 19:35:27.761698 23510 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:27.761708 23510 net.cpp:86] Creating Layer conv0
I0428 19:35:27.761711 23510 net.cpp:408] conv0 <- data
I0428 19:35:27.761718 23510 net.cpp:382] conv0 -> conv0
I0428 19:35:27.763550 23510 net.cpp:124] Setting up conv0
I0428 19:35:27.763564 23510 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:27.763568 23510 net.cpp:139] Memory required for data: 11834800
I0428 19:35:27.763578 23510 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:27.763586 23510 net.cpp:86] Creating Layer pool0
I0428 19:35:27.763589 23510 net.cpp:408] pool0 <- conv0
I0428 19:35:27.763595 23510 net.cpp:382] pool0 -> pool0
I0428 19:35:27.763634 23510 net.cpp:124] Setting up pool0
I0428 19:35:27.763643 23510 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:27.763645 23510 net.cpp:139] Memory required for data: 14714800
I0428 19:35:27.763648 23510 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:27.763656 23510 net.cpp:86] Creating Layer ip1
I0428 19:35:27.763659 23510 net.cpp:408] ip1 <- pool0
I0428 19:35:27.763664 23510 net.cpp:382] ip1 -> ip1
I0428 19:35:27.765938 23510 net.cpp:124] Setting up ip1
I0428 19:35:27.765947 23510 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:27.765952 23510 net.cpp:139] Memory required for data: 14734800
I0428 19:35:27.765960 23510 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:27.765965 23510 net.cpp:86] Creating Layer relu1
I0428 19:35:27.765969 23510 net.cpp:408] relu1 <- ip1
I0428 19:35:27.765974 23510 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:27.766201 23510 net.cpp:124] Setting up relu1
I0428 19:35:27.766216 23510 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:27.766219 23510 net.cpp:139] Memory required for data: 14754800
I0428 19:35:27.766223 23510 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:27.766230 23510 net.cpp:86] Creating Layer ip2
I0428 19:35:27.766234 23510 net.cpp:408] ip2 <- ip1
I0428 19:35:27.766248 23510 net.cpp:382] ip2 -> ip2
I0428 19:35:27.766381 23510 net.cpp:124] Setting up ip2
I0428 19:35:27.766391 23510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:27.766393 23510 net.cpp:139] Memory required for data: 14758800
I0428 19:35:27.766407 23510 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:27.766417 23510 net.cpp:86] Creating Layer relu2
I0428 19:35:27.766422 23510 net.cpp:408] relu2 <- ip2
I0428 19:35:27.766427 23510 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:27.767284 23510 net.cpp:124] Setting up relu2
I0428 19:35:27.767297 23510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:27.767300 23510 net.cpp:139] Memory required for data: 14762800
I0428 19:35:27.767304 23510 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:27.767313 23510 net.cpp:86] Creating Layer ip3
I0428 19:35:27.767318 23510 net.cpp:408] ip3 <- ip2
I0428 19:35:27.767323 23510 net.cpp:382] ip3 -> ip3
I0428 19:35:27.767446 23510 net.cpp:124] Setting up ip3
I0428 19:35:27.767453 23510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:27.767457 23510 net.cpp:139] Memory required for data: 14766800
I0428 19:35:27.767463 23510 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:27.767468 23510 net.cpp:86] Creating Layer relu3
I0428 19:35:27.767472 23510 net.cpp:408] relu3 <- ip3
I0428 19:35:27.767477 23510 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:27.767655 23510 net.cpp:124] Setting up relu3
I0428 19:35:27.767664 23510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:27.767668 23510 net.cpp:139] Memory required for data: 14770800
I0428 19:35:27.767671 23510 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:27.767676 23510 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:27.767679 23510 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:27.767685 23510 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:27.767691 23510 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:27.767729 23510 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:27.767736 23510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:27.767758 23510 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:27.767762 23510 net.cpp:139] Memory required for data: 14778800
I0428 19:35:27.767765 23510 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:27.767771 23510 net.cpp:86] Creating Layer accuracy
I0428 19:35:27.767776 23510 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:27.767779 23510 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:27.767786 23510 net.cpp:382] accuracy -> accuracy
I0428 19:35:27.767793 23510 net.cpp:124] Setting up accuracy
I0428 19:35:27.767797 23510 net.cpp:131] Top shape: (1)
I0428 19:35:27.767801 23510 net.cpp:139] Memory required for data: 14778804
I0428 19:35:27.767802 23510 layer_factory.hpp:77] Creating layer loss
I0428 19:35:27.767807 23510 net.cpp:86] Creating Layer loss
I0428 19:35:27.767812 23510 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:27.767814 23510 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:27.767819 23510 net.cpp:382] loss -> loss
I0428 19:35:27.767825 23510 layer_factory.hpp:77] Creating layer loss
I0428 19:35:27.768079 23510 net.cpp:124] Setting up loss
I0428 19:35:27.768087 23510 net.cpp:131] Top shape: (1)
I0428 19:35:27.768091 23510 net.cpp:134]     with loss weight 1
I0428 19:35:27.768098 23510 net.cpp:139] Memory required for data: 14778808
I0428 19:35:27.768102 23510 net.cpp:200] loss needs backward computation.
I0428 19:35:27.768105 23510 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:27.768110 23510 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:27.768113 23510 net.cpp:200] relu3 needs backward computation.
I0428 19:35:27.768123 23510 net.cpp:200] ip3 needs backward computation.
I0428 19:35:27.768126 23510 net.cpp:200] relu2 needs backward computation.
I0428 19:35:27.768129 23510 net.cpp:200] ip2 needs backward computation.
I0428 19:35:27.768132 23510 net.cpp:200] relu1 needs backward computation.
I0428 19:35:27.768136 23510 net.cpp:200] ip1 needs backward computation.
I0428 19:35:27.768146 23510 net.cpp:200] pool0 needs backward computation.
I0428 19:35:27.768149 23510 net.cpp:200] conv0 needs backward computation.
I0428 19:35:27.768152 23510 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:27.768157 23510 net.cpp:202] mnist does not need backward computation.
I0428 19:35:27.768160 23510 net.cpp:244] This network produces output accuracy
I0428 19:35:27.768163 23510 net.cpp:244] This network produces output loss
I0428 19:35:27.768174 23510 net.cpp:257] Network initialization done.
I0428 19:35:27.768213 23510 solver.cpp:56] Solver scaffolding done.
I0428 19:35:27.768535 23510 caffe.cpp:248] Starting Optimization
I0428 19:35:27.768542 23510 solver.cpp:273] Solving LeNet
I0428 19:35:27.768544 23510 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:27.770546 23510 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:27.869360 23517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:27.872030 23510 solver.cpp:398]     Test net output #0: accuracy = 0.0787
I0428 19:35:27.872063 23510 solver.cpp:398]     Test net output #1: loss = 2.31125 (* 1 = 2.31125 loss)
I0428 19:35:27.876549 23510 solver.cpp:219] Iteration 0 (-6.61021e-31 iter/s, 0.107963s/100 iters), loss = 2.31021
I0428 19:35:27.876579 23510 solver.cpp:238]     Train net output #0: loss = 2.31021 (* 1 = 2.31021 loss)
I0428 19:35:27.876590 23510 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:28.022786 23510 solver.cpp:219] Iteration 100 (684.025 iter/s, 0.146193s/100 iters), loss = 0.489719
I0428 19:35:28.022828 23510 solver.cpp:238]     Train net output #0: loss = 0.489719 (* 1 = 0.489719 loss)
I0428 19:35:28.022835 23510 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:28.168900 23510 solver.cpp:219] Iteration 200 (684.673 iter/s, 0.146055s/100 iters), loss = 0.395089
I0428 19:35:28.168925 23510 solver.cpp:238]     Train net output #0: loss = 0.395089 (* 1 = 0.395089 loss)
I0428 19:35:28.168931 23510 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:28.315673 23510 solver.cpp:219] Iteration 300 (681.491 iter/s, 0.146737s/100 iters), loss = 0.501152
I0428 19:35:28.315742 23510 solver.cpp:238]     Train net output #0: loss = 0.501152 (* 1 = 0.501152 loss)
I0428 19:35:28.315749 23510 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:28.462707 23510 solver.cpp:219] Iteration 400 (680.417 iter/s, 0.146969s/100 iters), loss = 0.37382
I0428 19:35:28.462733 23510 solver.cpp:238]     Train net output #0: loss = 0.37382 (* 1 = 0.37382 loss)
I0428 19:35:28.462739 23510 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:28.608934 23510 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:28.704839 23517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:28.708448 23510 solver.cpp:398]     Test net output #0: accuracy = 0.8635
I0428 19:35:28.708482 23510 solver.cpp:398]     Test net output #1: loss = 0.384916 (* 1 = 0.384916 loss)
I0428 19:35:28.709830 23510 solver.cpp:219] Iteration 500 (404.727 iter/s, 0.24708s/100 iters), loss = 0.528945
I0428 19:35:28.709869 23510 solver.cpp:238]     Train net output #0: loss = 0.528945 (* 1 = 0.528945 loss)
I0428 19:35:28.709875 23510 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:28.862751 23510 solver.cpp:219] Iteration 600 (654.098 iter/s, 0.152882s/100 iters), loss = 0.385672
I0428 19:35:28.862793 23510 solver.cpp:238]     Train net output #0: loss = 0.385672 (* 1 = 0.385672 loss)
I0428 19:35:28.862803 23510 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:29.014750 23510 solver.cpp:219] Iteration 700 (658.136 iter/s, 0.151944s/100 iters), loss = 0.431733
I0428 19:35:29.014780 23510 solver.cpp:238]     Train net output #0: loss = 0.431733 (* 1 = 0.431733 loss)
I0428 19:35:29.014786 23510 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:29.162214 23510 solver.cpp:219] Iteration 800 (678.329 iter/s, 0.147421s/100 iters), loss = 0.491722
I0428 19:35:29.162243 23510 solver.cpp:238]     Train net output #0: loss = 0.491722 (* 1 = 0.491722 loss)
I0428 19:35:29.162250 23510 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:29.310751 23510 solver.cpp:219] Iteration 900 (673.417 iter/s, 0.148496s/100 iters), loss = 0.515947
I0428 19:35:29.310783 23510 solver.cpp:238]     Train net output #0: loss = 0.515947 (* 1 = 0.515947 loss)
I0428 19:35:29.310791 23510 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:29.360967 23516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:29.460023 23510 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:29.466558 23510 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:29.470286 23510 solver.cpp:311] Iteration 1000, loss = 0.381325
I0428 19:35:29.470305 23510 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:29.570958 23517 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:29.574542 23510 solver.cpp:398]     Test net output #0: accuracy = 0.8726
I0428 19:35:29.574564 23510 solver.cpp:398]     Test net output #1: loss = 0.33542 (* 1 = 0.33542 loss)
I0428 19:35:29.574570 23510 solver.cpp:316] Optimization Done.
I0428 19:35:29.574574 23510 caffe.cpp:259] Optimization Done.
