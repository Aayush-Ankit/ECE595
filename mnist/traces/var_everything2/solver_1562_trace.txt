I0428 20:31:51.253329  4016 caffe.cpp:218] Using GPUs 0
I0428 20:31:51.290825  4016 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:31:51.811913  4016 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1562.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:31:51.812109  4016 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1562.prototxt
I0428 20:31:51.812613  4016 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:31:51.812636  4016 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:31:51.812762  4016 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:31:51.812875  4016 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:51.813024  4016 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:31:51.813058  4016 net.cpp:86] Creating Layer mnist
I0428 20:31:51.813068  4016 net.cpp:382] mnist -> data
I0428 20:31:51.813098  4016 net.cpp:382] mnist -> label
I0428 20:31:51.814581  4016 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:31:51.817940  4016 net.cpp:124] Setting up mnist
I0428 20:31:51.817968  4016 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:31:51.817977  4016 net.cpp:131] Top shape: 64 (64)
I0428 20:31:51.817983  4016 net.cpp:139] Memory required for data: 200960
I0428 20:31:51.817992  4016 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:51.818018  4016 net.cpp:86] Creating Layer conv0
I0428 20:31:51.818032  4016 net.cpp:408] conv0 <- data
I0428 20:31:51.818048  4016 net.cpp:382] conv0 -> conv0
I0428 20:31:52.129493  4016 net.cpp:124] Setting up conv0
I0428 20:31:52.129525  4016 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:31:52.129530  4016 net.cpp:139] Memory required for data: 14946560
I0428 20:31:52.129549  4016 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:52.129565  4016 net.cpp:86] Creating Layer pool0
I0428 20:31:52.129568  4016 net.cpp:408] pool0 <- conv0
I0428 20:31:52.129575  4016 net.cpp:382] pool0 -> pool0
I0428 20:31:52.129632  4016 net.cpp:124] Setting up pool0
I0428 20:31:52.129645  4016 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:31:52.129673  4016 net.cpp:139] Memory required for data: 18632960
I0428 20:31:52.129678  4016 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:52.129691  4016 net.cpp:86] Creating Layer conv1
I0428 20:31:52.129695  4016 net.cpp:408] conv1 <- pool0
I0428 20:31:52.129703  4016 net.cpp:382] conv1 -> conv1
I0428 20:31:52.132275  4016 net.cpp:124] Setting up conv1
I0428 20:31:52.132293  4016 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:31:52.132297  4016 net.cpp:139] Memory required for data: 19042560
I0428 20:31:52.132308  4016 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:52.132318  4016 net.cpp:86] Creating Layer pool1
I0428 20:31:52.132321  4016 net.cpp:408] pool1 <- conv1
I0428 20:31:52.132328  4016 net.cpp:382] pool1 -> pool1
I0428 20:31:52.132372  4016 net.cpp:124] Setting up pool1
I0428 20:31:52.132378  4016 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:31:52.132382  4016 net.cpp:139] Memory required for data: 19144960
I0428 20:31:52.132386  4016 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:52.132395  4016 net.cpp:86] Creating Layer ip1
I0428 20:31:52.132398  4016 net.cpp:408] ip1 <- pool1
I0428 20:31:52.132405  4016 net.cpp:382] ip1 -> ip1
I0428 20:31:52.132550  4016 net.cpp:124] Setting up ip1
I0428 20:31:52.132558  4016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:52.132562  4016 net.cpp:139] Memory required for data: 19147520
I0428 20:31:52.132571  4016 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:52.132578  4016 net.cpp:86] Creating Layer relu1
I0428 20:31:52.132582  4016 net.cpp:408] relu1 <- ip1
I0428 20:31:52.132587  4016 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:52.132788  4016 net.cpp:124] Setting up relu1
I0428 20:31:52.132798  4016 net.cpp:131] Top shape: 64 10 (640)
I0428 20:31:52.132802  4016 net.cpp:139] Memory required for data: 19150080
I0428 20:31:52.132807  4016 layer_factory.hpp:77] Creating layer loss
I0428 20:31:52.132818  4016 net.cpp:86] Creating Layer loss
I0428 20:31:52.132822  4016 net.cpp:408] loss <- ip1
I0428 20:31:52.132827  4016 net.cpp:408] loss <- label
I0428 20:31:52.132833  4016 net.cpp:382] loss -> loss
I0428 20:31:52.132849  4016 layer_factory.hpp:77] Creating layer loss
I0428 20:31:52.133785  4016 net.cpp:124] Setting up loss
I0428 20:31:52.133800  4016 net.cpp:131] Top shape: (1)
I0428 20:31:52.133805  4016 net.cpp:134]     with loss weight 1
I0428 20:31:52.133821  4016 net.cpp:139] Memory required for data: 19150084
I0428 20:31:52.133826  4016 net.cpp:200] loss needs backward computation.
I0428 20:31:52.133831  4016 net.cpp:200] relu1 needs backward computation.
I0428 20:31:52.133834  4016 net.cpp:200] ip1 needs backward computation.
I0428 20:31:52.133838  4016 net.cpp:200] pool1 needs backward computation.
I0428 20:31:52.133842  4016 net.cpp:200] conv1 needs backward computation.
I0428 20:31:52.133846  4016 net.cpp:200] pool0 needs backward computation.
I0428 20:31:52.133849  4016 net.cpp:200] conv0 needs backward computation.
I0428 20:31:52.133853  4016 net.cpp:202] mnist does not need backward computation.
I0428 20:31:52.133857  4016 net.cpp:244] This network produces output loss
I0428 20:31:52.133867  4016 net.cpp:257] Network initialization done.
I0428 20:31:52.134173  4016 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1562.prototxt
I0428 20:31:52.134202  4016 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:31:52.134291  4016 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:31:52.134376  4016 layer_factory.hpp:77] Creating layer mnist
I0428 20:31:52.134428  4016 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:31:52.134441  4016 net.cpp:86] Creating Layer mnist
I0428 20:31:52.134448  4016 net.cpp:382] mnist -> data
I0428 20:31:52.134456  4016 net.cpp:382] mnist -> label
I0428 20:31:52.134557  4016 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:31:52.136756  4016 net.cpp:124] Setting up mnist
I0428 20:31:52.136772  4016 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:31:52.136780  4016 net.cpp:131] Top shape: 100 (100)
I0428 20:31:52.136785  4016 net.cpp:139] Memory required for data: 314000
I0428 20:31:52.136788  4016 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:31:52.136796  4016 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:31:52.136801  4016 net.cpp:408] label_mnist_1_split <- label
I0428 20:31:52.136806  4016 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:31:52.136821  4016 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:31:52.136937  4016 net.cpp:124] Setting up label_mnist_1_split
I0428 20:31:52.136946  4016 net.cpp:131] Top shape: 100 (100)
I0428 20:31:52.136951  4016 net.cpp:131] Top shape: 100 (100)
I0428 20:31:52.136955  4016 net.cpp:139] Memory required for data: 314800
I0428 20:31:52.136960  4016 layer_factory.hpp:77] Creating layer conv0
I0428 20:31:52.136970  4016 net.cpp:86] Creating Layer conv0
I0428 20:31:52.136976  4016 net.cpp:408] conv0 <- data
I0428 20:31:52.136982  4016 net.cpp:382] conv0 -> conv0
I0428 20:31:52.137996  4016 net.cpp:124] Setting up conv0
I0428 20:31:52.138011  4016 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:31:52.138015  4016 net.cpp:139] Memory required for data: 23354800
I0428 20:31:52.138026  4016 layer_factory.hpp:77] Creating layer pool0
I0428 20:31:52.138036  4016 net.cpp:86] Creating Layer pool0
I0428 20:31:52.138039  4016 net.cpp:408] pool0 <- conv0
I0428 20:31:52.138046  4016 net.cpp:382] pool0 -> pool0
I0428 20:31:52.138092  4016 net.cpp:124] Setting up pool0
I0428 20:31:52.138098  4016 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:31:52.138103  4016 net.cpp:139] Memory required for data: 29114800
I0428 20:31:52.138106  4016 layer_factory.hpp:77] Creating layer conv1
I0428 20:31:52.138116  4016 net.cpp:86] Creating Layer conv1
I0428 20:31:52.138120  4016 net.cpp:408] conv1 <- pool0
I0428 20:31:52.138128  4016 net.cpp:382] conv1 -> conv1
I0428 20:31:52.140331  4016 net.cpp:124] Setting up conv1
I0428 20:31:52.140347  4016 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:31:52.140353  4016 net.cpp:139] Memory required for data: 29754800
I0428 20:31:52.140363  4016 layer_factory.hpp:77] Creating layer pool1
I0428 20:31:52.140372  4016 net.cpp:86] Creating Layer pool1
I0428 20:31:52.140388  4016 net.cpp:408] pool1 <- conv1
I0428 20:31:52.140395  4016 net.cpp:382] pool1 -> pool1
I0428 20:31:52.140437  4016 net.cpp:124] Setting up pool1
I0428 20:31:52.140444  4016 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:31:52.140449  4016 net.cpp:139] Memory required for data: 29914800
I0428 20:31:52.140452  4016 layer_factory.hpp:77] Creating layer ip1
I0428 20:31:52.140460  4016 net.cpp:86] Creating Layer ip1
I0428 20:31:52.140465  4016 net.cpp:408] ip1 <- pool1
I0428 20:31:52.140470  4016 net.cpp:382] ip1 -> ip1
I0428 20:31:52.140609  4016 net.cpp:124] Setting up ip1
I0428 20:31:52.140619  4016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:52.140621  4016 net.cpp:139] Memory required for data: 29918800
I0428 20:31:52.140630  4016 layer_factory.hpp:77] Creating layer relu1
I0428 20:31:52.140636  4016 net.cpp:86] Creating Layer relu1
I0428 20:31:52.140640  4016 net.cpp:408] relu1 <- ip1
I0428 20:31:52.140645  4016 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:31:52.141562  4016 net.cpp:124] Setting up relu1
I0428 20:31:52.141577  4016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:52.141582  4016 net.cpp:139] Memory required for data: 29922800
I0428 20:31:52.141587  4016 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:31:52.141594  4016 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:31:52.141599  4016 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:31:52.141607  4016 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:31:52.141613  4016 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:31:52.141687  4016 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:31:52.141696  4016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:52.141701  4016 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:31:52.141705  4016 net.cpp:139] Memory required for data: 29930800
I0428 20:31:52.141710  4016 layer_factory.hpp:77] Creating layer accuracy
I0428 20:31:52.141716  4016 net.cpp:86] Creating Layer accuracy
I0428 20:31:52.141719  4016 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:31:52.141731  4016 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:31:52.141736  4016 net.cpp:382] accuracy -> accuracy
I0428 20:31:52.141744  4016 net.cpp:124] Setting up accuracy
I0428 20:31:52.141749  4016 net.cpp:131] Top shape: (1)
I0428 20:31:52.141752  4016 net.cpp:139] Memory required for data: 29930804
I0428 20:31:52.141757  4016 layer_factory.hpp:77] Creating layer loss
I0428 20:31:52.141762  4016 net.cpp:86] Creating Layer loss
I0428 20:31:52.141767  4016 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:31:52.141770  4016 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:31:52.141775  4016 net.cpp:382] loss -> loss
I0428 20:31:52.141783  4016 layer_factory.hpp:77] Creating layer loss
I0428 20:31:52.142056  4016 net.cpp:124] Setting up loss
I0428 20:31:52.142067  4016 net.cpp:131] Top shape: (1)
I0428 20:31:52.142071  4016 net.cpp:134]     with loss weight 1
I0428 20:31:52.142078  4016 net.cpp:139] Memory required for data: 29930808
I0428 20:31:52.142082  4016 net.cpp:200] loss needs backward computation.
I0428 20:31:52.142087  4016 net.cpp:202] accuracy does not need backward computation.
I0428 20:31:52.142092  4016 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:31:52.142096  4016 net.cpp:200] relu1 needs backward computation.
I0428 20:31:52.142099  4016 net.cpp:200] ip1 needs backward computation.
I0428 20:31:52.142103  4016 net.cpp:200] pool1 needs backward computation.
I0428 20:31:52.142108  4016 net.cpp:200] conv1 needs backward computation.
I0428 20:31:52.142112  4016 net.cpp:200] pool0 needs backward computation.
I0428 20:31:52.142117  4016 net.cpp:200] conv0 needs backward computation.
I0428 20:31:52.142122  4016 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:31:52.142125  4016 net.cpp:202] mnist does not need backward computation.
I0428 20:31:52.142129  4016 net.cpp:244] This network produces output accuracy
I0428 20:31:52.142133  4016 net.cpp:244] This network produces output loss
I0428 20:31:52.142156  4016 net.cpp:257] Network initialization done.
I0428 20:31:52.142197  4016 solver.cpp:56] Solver scaffolding done.
I0428 20:31:52.142444  4016 caffe.cpp:248] Starting Optimization
I0428 20:31:52.142452  4016 solver.cpp:273] Solving LeNet
I0428 20:31:52.142457  4016 solver.cpp:274] Learning Rate Policy: inv
I0428 20:31:52.142648  4016 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:31:52.238816  4025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:52.241230  4016 solver.cpp:398]     Test net output #0: accuracy = 0.1033
I0428 20:31:52.241253  4016 solver.cpp:398]     Test net output #1: loss = 2.31982 (* 1 = 2.31982 loss)
I0428 20:31:52.245960  4016 solver.cpp:219] Iteration 0 (4.00188e+37 iter/s, 0.103475s/100 iters), loss = 2.29841
I0428 20:31:52.245991  4016 solver.cpp:238]     Train net output #0: loss = 2.29841 (* 1 = 2.29841 loss)
I0428 20:31:52.246006  4016 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:31:52.450062  4016 solver.cpp:219] Iteration 100 (490.077 iter/s, 0.204049s/100 iters), loss = 1.20442
I0428 20:31:52.450114  4016 solver.cpp:238]     Train net output #0: loss = 1.20442 (* 1 = 1.20442 loss)
I0428 20:31:52.450127  4016 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:31:52.655230  4016 solver.cpp:219] Iteration 200 (487.572 iter/s, 0.205098s/100 iters), loss = 0.554031
I0428 20:31:52.655282  4016 solver.cpp:238]     Train net output #0: loss = 0.554031 (* 1 = 0.554031 loss)
I0428 20:31:52.655294  4016 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:31:52.856315  4016 solver.cpp:219] Iteration 300 (497.457 iter/s, 0.201022s/100 iters), loss = 0.142795
I0428 20:31:52.856346  4016 solver.cpp:238]     Train net output #0: loss = 0.142795 (* 1 = 0.142795 loss)
I0428 20:31:52.856354  4016 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:31:53.060120  4016 solver.cpp:219] Iteration 400 (490.789 iter/s, 0.203753s/100 iters), loss = 0.0867422
I0428 20:31:53.060174  4016 solver.cpp:238]     Train net output #0: loss = 0.0867423 (* 1 = 0.0867423 loss)
I0428 20:31:53.060190  4016 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:31:53.270596  4016 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:31:53.372779  4025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:53.375116  4016 solver.cpp:398]     Test net output #0: accuracy = 0.9673
I0428 20:31:53.375146  4016 solver.cpp:398]     Test net output #1: loss = 0.106869 (* 1 = 0.106869 loss)
I0428 20:31:53.377112  4016 solver.cpp:219] Iteration 500 (315.553 iter/s, 0.316904s/100 iters), loss = 0.110168
I0428 20:31:53.377143  4016 solver.cpp:238]     Train net output #0: loss = 0.110168 (* 1 = 0.110168 loss)
I0428 20:31:53.377152  4016 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:31:53.584689  4016 solver.cpp:219] Iteration 600 (481.865 iter/s, 0.207527s/100 iters), loss = 0.0931009
I0428 20:31:53.584738  4016 solver.cpp:238]     Train net output #0: loss = 0.093101 (* 1 = 0.093101 loss)
I0428 20:31:53.584749  4016 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:31:53.787914  4016 solver.cpp:219] Iteration 700 (492.217 iter/s, 0.203163s/100 iters), loss = 0.109868
I0428 20:31:53.787948  4016 solver.cpp:238]     Train net output #0: loss = 0.109869 (* 1 = 0.109869 loss)
I0428 20:31:53.787957  4016 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:31:53.992352  4016 solver.cpp:219] Iteration 800 (489.274 iter/s, 0.204384s/100 iters), loss = 0.187716
I0428 20:31:53.992398  4016 solver.cpp:238]     Train net output #0: loss = 0.187717 (* 1 = 0.187717 loss)
I0428 20:31:53.992408  4016 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:31:54.196702  4016 solver.cpp:219] Iteration 900 (489.503 iter/s, 0.204289s/100 iters), loss = 0.137352
I0428 20:31:54.196741  4016 solver.cpp:238]     Train net output #0: loss = 0.137352 (* 1 = 0.137352 loss)
I0428 20:31:54.196751  4016 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:31:54.263020  4023 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:54.399853  4016 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:31:54.402565  4016 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:31:54.404333  4016 solver.cpp:311] Iteration 1000, loss = 0.1381
I0428 20:31:54.404361  4016 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:31:54.499318  4025 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:31:54.501744  4016 solver.cpp:398]     Test net output #0: accuracy = 0.9754
I0428 20:31:54.501766  4016 solver.cpp:398]     Test net output #1: loss = 0.0765816 (* 1 = 0.0765816 loss)
I0428 20:31:54.501773  4016 solver.cpp:316] Optimization Done.
I0428 20:31:54.501776  4016 caffe.cpp:259] Optimization Done.
