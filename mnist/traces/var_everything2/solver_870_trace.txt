I0428 20:00:12.949586 29425 caffe.cpp:218] Using GPUs 0
I0428 20:00:12.983233 29425 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:13.493640 29425 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test870.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:13.493777 29425 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test870.prototxt
I0428 20:00:13.494194 29425 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:13.494212 29425 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:13.494316 29425 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:13.494397 29425 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:13.494496 29425 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:13.494519 29425 net.cpp:86] Creating Layer mnist
I0428 20:00:13.494529 29425 net.cpp:382] mnist -> data
I0428 20:00:13.494551 29425 net.cpp:382] mnist -> label
I0428 20:00:13.495646 29425 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:13.498113 29425 net.cpp:124] Setting up mnist
I0428 20:00:13.498132 29425 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:13.498139 29425 net.cpp:131] Top shape: 64 (64)
I0428 20:00:13.498143 29425 net.cpp:139] Memory required for data: 200960
I0428 20:00:13.498150 29425 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:13.498165 29425 net.cpp:86] Creating Layer conv0
I0428 20:00:13.498184 29425 net.cpp:408] conv0 <- data
I0428 20:00:13.498198 29425 net.cpp:382] conv0 -> conv0
I0428 20:00:13.761235 29425 net.cpp:124] Setting up conv0
I0428 20:00:13.761261 29425 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:13.761265 29425 net.cpp:139] Memory required for data: 1675520
I0428 20:00:13.761278 29425 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:13.761291 29425 net.cpp:86] Creating Layer pool0
I0428 20:00:13.761294 29425 net.cpp:408] pool0 <- conv0
I0428 20:00:13.761299 29425 net.cpp:382] pool0 -> pool0
I0428 20:00:13.761358 29425 net.cpp:124] Setting up pool0
I0428 20:00:13.761363 29425 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:13.761365 29425 net.cpp:139] Memory required for data: 2044160
I0428 20:00:13.761368 29425 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:13.761394 29425 net.cpp:86] Creating Layer conv1
I0428 20:00:13.761397 29425 net.cpp:408] conv1 <- pool0
I0428 20:00:13.761402 29425 net.cpp:382] conv1 -> conv1
I0428 20:00:13.764209 29425 net.cpp:124] Setting up conv1
I0428 20:00:13.764237 29425 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:13.764241 29425 net.cpp:139] Memory required for data: 2453760
I0428 20:00:13.764250 29425 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:13.764256 29425 net.cpp:86] Creating Layer pool1
I0428 20:00:13.764261 29425 net.cpp:408] pool1 <- conv1
I0428 20:00:13.764264 29425 net.cpp:382] pool1 -> pool1
I0428 20:00:13.764317 29425 net.cpp:124] Setting up pool1
I0428 20:00:13.764323 29425 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:13.764327 29425 net.cpp:139] Memory required for data: 2556160
I0428 20:00:13.764328 29425 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:13.764335 29425 net.cpp:86] Creating Layer ip1
I0428 20:00:13.764338 29425 net.cpp:408] ip1 <- pool1
I0428 20:00:13.764343 29425 net.cpp:382] ip1 -> ip1
I0428 20:00:13.765471 29425 net.cpp:124] Setting up ip1
I0428 20:00:13.765501 29425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:13.765504 29425 net.cpp:139] Memory required for data: 2558720
I0428 20:00:13.765513 29425 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:13.765522 29425 net.cpp:86] Creating Layer relu1
I0428 20:00:13.765525 29425 net.cpp:408] relu1 <- ip1
I0428 20:00:13.765530 29425 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:13.765722 29425 net.cpp:124] Setting up relu1
I0428 20:00:13.765744 29425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:13.765748 29425 net.cpp:139] Memory required for data: 2561280
I0428 20:00:13.765751 29425 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:13.765758 29425 net.cpp:86] Creating Layer ip2
I0428 20:00:13.765761 29425 net.cpp:408] ip2 <- ip1
I0428 20:00:13.765766 29425 net.cpp:382] ip2 -> ip2
I0428 20:00:13.765879 29425 net.cpp:124] Setting up ip2
I0428 20:00:13.765887 29425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:13.765890 29425 net.cpp:139] Memory required for data: 2563840
I0428 20:00:13.765897 29425 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:13.765902 29425 net.cpp:86] Creating Layer relu2
I0428 20:00:13.765905 29425 net.cpp:408] relu2 <- ip2
I0428 20:00:13.765910 29425 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:13.766721 29425 net.cpp:124] Setting up relu2
I0428 20:00:13.766732 29425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:13.766752 29425 net.cpp:139] Memory required for data: 2566400
I0428 20:00:13.766757 29425 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:13.766763 29425 net.cpp:86] Creating Layer ip3
I0428 20:00:13.766767 29425 net.cpp:408] ip3 <- ip2
I0428 20:00:13.766772 29425 net.cpp:382] ip3 -> ip3
I0428 20:00:13.766886 29425 net.cpp:124] Setting up ip3
I0428 20:00:13.766894 29425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:13.766897 29425 net.cpp:139] Memory required for data: 2568960
I0428 20:00:13.766908 29425 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:13.766917 29425 net.cpp:86] Creating Layer relu3
I0428 20:00:13.766922 29425 net.cpp:408] relu3 <- ip3
I0428 20:00:13.766927 29425 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:13.767101 29425 net.cpp:124] Setting up relu3
I0428 20:00:13.767109 29425 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:13.767112 29425 net.cpp:139] Memory required for data: 2571520
I0428 20:00:13.767117 29425 layer_factory.hpp:77] Creating layer loss
I0428 20:00:13.767125 29425 net.cpp:86] Creating Layer loss
I0428 20:00:13.767128 29425 net.cpp:408] loss <- ip3
I0428 20:00:13.767132 29425 net.cpp:408] loss <- label
I0428 20:00:13.767139 29425 net.cpp:382] loss -> loss
I0428 20:00:13.767154 29425 layer_factory.hpp:77] Creating layer loss
I0428 20:00:13.767416 29425 net.cpp:124] Setting up loss
I0428 20:00:13.767424 29425 net.cpp:131] Top shape: (1)
I0428 20:00:13.767426 29425 net.cpp:134]     with loss weight 1
I0428 20:00:13.767441 29425 net.cpp:139] Memory required for data: 2571524
I0428 20:00:13.767458 29425 net.cpp:200] loss needs backward computation.
I0428 20:00:13.767462 29425 net.cpp:200] relu3 needs backward computation.
I0428 20:00:13.767465 29425 net.cpp:200] ip3 needs backward computation.
I0428 20:00:13.767468 29425 net.cpp:200] relu2 needs backward computation.
I0428 20:00:13.767470 29425 net.cpp:200] ip2 needs backward computation.
I0428 20:00:13.767473 29425 net.cpp:200] relu1 needs backward computation.
I0428 20:00:13.767477 29425 net.cpp:200] ip1 needs backward computation.
I0428 20:00:13.767479 29425 net.cpp:200] pool1 needs backward computation.
I0428 20:00:13.767483 29425 net.cpp:200] conv1 needs backward computation.
I0428 20:00:13.767487 29425 net.cpp:200] pool0 needs backward computation.
I0428 20:00:13.767489 29425 net.cpp:200] conv0 needs backward computation.
I0428 20:00:13.767493 29425 net.cpp:202] mnist does not need backward computation.
I0428 20:00:13.767511 29425 net.cpp:244] This network produces output loss
I0428 20:00:13.767521 29425 net.cpp:257] Network initialization done.
I0428 20:00:13.767910 29425 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test870.prototxt
I0428 20:00:13.767951 29425 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:13.768074 29425 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:13.768155 29425 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:13.768198 29425 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:13.768210 29425 net.cpp:86] Creating Layer mnist
I0428 20:00:13.768218 29425 net.cpp:382] mnist -> data
I0428 20:00:13.768224 29425 net.cpp:382] mnist -> label
I0428 20:00:13.768342 29425 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:13.770422 29425 net.cpp:124] Setting up mnist
I0428 20:00:13.770452 29425 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:13.770457 29425 net.cpp:131] Top shape: 100 (100)
I0428 20:00:13.770462 29425 net.cpp:139] Memory required for data: 314000
I0428 20:00:13.770464 29425 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:13.770472 29425 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:13.770474 29425 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:13.770481 29425 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:13.770488 29425 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:13.770596 29425 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:13.770606 29425 net.cpp:131] Top shape: 100 (100)
I0428 20:00:13.770609 29425 net.cpp:131] Top shape: 100 (100)
I0428 20:00:13.770612 29425 net.cpp:139] Memory required for data: 314800
I0428 20:00:13.770615 29425 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:13.770625 29425 net.cpp:86] Creating Layer conv0
I0428 20:00:13.770629 29425 net.cpp:408] conv0 <- data
I0428 20:00:13.770639 29425 net.cpp:382] conv0 -> conv0
I0428 20:00:13.772411 29425 net.cpp:124] Setting up conv0
I0428 20:00:13.772424 29425 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:13.772428 29425 net.cpp:139] Memory required for data: 2618800
I0428 20:00:13.772438 29425 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:13.772444 29425 net.cpp:86] Creating Layer pool0
I0428 20:00:13.772447 29425 net.cpp:408] pool0 <- conv0
I0428 20:00:13.772452 29425 net.cpp:382] pool0 -> pool0
I0428 20:00:13.772488 29425 net.cpp:124] Setting up pool0
I0428 20:00:13.772493 29425 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:13.772496 29425 net.cpp:139] Memory required for data: 3194800
I0428 20:00:13.772500 29425 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:13.772508 29425 net.cpp:86] Creating Layer conv1
I0428 20:00:13.772511 29425 net.cpp:408] conv1 <- pool0
I0428 20:00:13.772517 29425 net.cpp:382] conv1 -> conv1
I0428 20:00:13.774907 29425 net.cpp:124] Setting up conv1
I0428 20:00:13.774919 29425 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:13.774940 29425 net.cpp:139] Memory required for data: 3834800
I0428 20:00:13.774950 29425 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:13.774956 29425 net.cpp:86] Creating Layer pool1
I0428 20:00:13.774960 29425 net.cpp:408] pool1 <- conv1
I0428 20:00:13.774966 29425 net.cpp:382] pool1 -> pool1
I0428 20:00:13.775022 29425 net.cpp:124] Setting up pool1
I0428 20:00:13.775027 29425 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:13.775030 29425 net.cpp:139] Memory required for data: 3994800
I0428 20:00:13.775033 29425 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:13.775041 29425 net.cpp:86] Creating Layer ip1
I0428 20:00:13.775044 29425 net.cpp:408] ip1 <- pool1
I0428 20:00:13.775050 29425 net.cpp:382] ip1 -> ip1
I0428 20:00:13.775185 29425 net.cpp:124] Setting up ip1
I0428 20:00:13.775193 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.775207 29425 net.cpp:139] Memory required for data: 3998800
I0428 20:00:13.775214 29425 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:13.775221 29425 net.cpp:86] Creating Layer relu1
I0428 20:00:13.775224 29425 net.cpp:408] relu1 <- ip1
I0428 20:00:13.775229 29425 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:13.775398 29425 net.cpp:124] Setting up relu1
I0428 20:00:13.775408 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.775411 29425 net.cpp:139] Memory required for data: 4002800
I0428 20:00:13.775415 29425 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:13.775421 29425 net.cpp:86] Creating Layer ip2
I0428 20:00:13.775425 29425 net.cpp:408] ip2 <- ip1
I0428 20:00:13.775431 29425 net.cpp:382] ip2 -> ip2
I0428 20:00:13.775547 29425 net.cpp:124] Setting up ip2
I0428 20:00:13.775555 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.775558 29425 net.cpp:139] Memory required for data: 4006800
I0428 20:00:13.775563 29425 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:13.775569 29425 net.cpp:86] Creating Layer relu2
I0428 20:00:13.775573 29425 net.cpp:408] relu2 <- ip2
I0428 20:00:13.775576 29425 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:13.775727 29425 net.cpp:124] Setting up relu2
I0428 20:00:13.775737 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.775740 29425 net.cpp:139] Memory required for data: 4010800
I0428 20:00:13.775743 29425 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:13.775749 29425 net.cpp:86] Creating Layer ip3
I0428 20:00:13.775753 29425 net.cpp:408] ip3 <- ip2
I0428 20:00:13.775758 29425 net.cpp:382] ip3 -> ip3
I0428 20:00:13.775864 29425 net.cpp:124] Setting up ip3
I0428 20:00:13.775871 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.775874 29425 net.cpp:139] Memory required for data: 4014800
I0428 20:00:13.775882 29425 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:13.775887 29425 net.cpp:86] Creating Layer relu3
I0428 20:00:13.775889 29425 net.cpp:408] relu3 <- ip3
I0428 20:00:13.775893 29425 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:13.776821 29425 net.cpp:124] Setting up relu3
I0428 20:00:13.776836 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.776840 29425 net.cpp:139] Memory required for data: 4018800
I0428 20:00:13.776844 29425 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:13.776850 29425 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:13.776854 29425 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:13.776860 29425 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:13.776866 29425 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:13.776906 29425 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:13.776914 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.776919 29425 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:13.776922 29425 net.cpp:139] Memory required for data: 4026800
I0428 20:00:13.776926 29425 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:13.776931 29425 net.cpp:86] Creating Layer accuracy
I0428 20:00:13.776940 29425 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:13.776944 29425 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:13.776949 29425 net.cpp:382] accuracy -> accuracy
I0428 20:00:13.776957 29425 net.cpp:124] Setting up accuracy
I0428 20:00:13.776960 29425 net.cpp:131] Top shape: (1)
I0428 20:00:13.776963 29425 net.cpp:139] Memory required for data: 4026804
I0428 20:00:13.776967 29425 layer_factory.hpp:77] Creating layer loss
I0428 20:00:13.776973 29425 net.cpp:86] Creating Layer loss
I0428 20:00:13.776976 29425 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:13.776980 29425 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:13.776984 29425 net.cpp:382] loss -> loss
I0428 20:00:13.776990 29425 layer_factory.hpp:77] Creating layer loss
I0428 20:00:13.777253 29425 net.cpp:124] Setting up loss
I0428 20:00:13.777262 29425 net.cpp:131] Top shape: (1)
I0428 20:00:13.777266 29425 net.cpp:134]     with loss weight 1
I0428 20:00:13.777282 29425 net.cpp:139] Memory required for data: 4026808
I0428 20:00:13.777287 29425 net.cpp:200] loss needs backward computation.
I0428 20:00:13.777290 29425 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:13.777294 29425 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:13.777298 29425 net.cpp:200] relu3 needs backward computation.
I0428 20:00:13.777302 29425 net.cpp:200] ip3 needs backward computation.
I0428 20:00:13.777318 29425 net.cpp:200] relu2 needs backward computation.
I0428 20:00:13.777321 29425 net.cpp:200] ip2 needs backward computation.
I0428 20:00:13.777324 29425 net.cpp:200] relu1 needs backward computation.
I0428 20:00:13.777326 29425 net.cpp:200] ip1 needs backward computation.
I0428 20:00:13.777330 29425 net.cpp:200] pool1 needs backward computation.
I0428 20:00:13.777333 29425 net.cpp:200] conv1 needs backward computation.
I0428 20:00:13.777343 29425 net.cpp:200] pool0 needs backward computation.
I0428 20:00:13.777346 29425 net.cpp:200] conv0 needs backward computation.
I0428 20:00:13.777350 29425 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:13.777354 29425 net.cpp:202] mnist does not need backward computation.
I0428 20:00:13.777357 29425 net.cpp:244] This network produces output accuracy
I0428 20:00:13.777360 29425 net.cpp:244] This network produces output loss
I0428 20:00:13.777371 29425 net.cpp:257] Network initialization done.
I0428 20:00:13.777411 29425 solver.cpp:56] Solver scaffolding done.
I0428 20:00:13.777763 29425 caffe.cpp:248] Starting Optimization
I0428 20:00:13.777770 29425 solver.cpp:273] Solving LeNet
I0428 20:00:13.777773 29425 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:13.778029 29425 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:13.783098 29425 blocking_queue.cpp:49] Waiting for data
I0428 20:00:13.851027 29432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:13.851568 29425 solver.cpp:398]     Test net output #0: accuracy = 0.1109
I0428 20:00:13.851605 29425 solver.cpp:398]     Test net output #1: loss = 2.30018 (* 1 = 2.30018 loss)
I0428 20:00:13.854130 29425 solver.cpp:219] Iteration 0 (-2.4117e-31 iter/s, 0.0763095s/100 iters), loss = 2.31173
I0428 20:00:13.854154 29425 solver.cpp:238]     Train net output #0: loss = 2.31173 (* 1 = 2.31173 loss)
I0428 20:00:13.854182 29425 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:13.943766 29425 solver.cpp:219] Iteration 100 (1116.07 iter/s, 0.0896s/100 iters), loss = 1.51513
I0428 20:00:13.943791 29425 solver.cpp:238]     Train net output #0: loss = 1.51513 (* 1 = 1.51513 loss)
I0428 20:00:13.943797 29425 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:14.033166 29425 solver.cpp:219] Iteration 200 (1119.04 iter/s, 0.0893626s/100 iters), loss = 1.09815
I0428 20:00:14.033206 29425 solver.cpp:238]     Train net output #0: loss = 1.09815 (* 1 = 1.09815 loss)
I0428 20:00:14.033212 29425 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:14.134459 29425 solver.cpp:219] Iteration 300 (987.564 iter/s, 0.101259s/100 iters), loss = 1.09976
I0428 20:00:14.134500 29425 solver.cpp:238]     Train net output #0: loss = 1.09976 (* 1 = 1.09976 loss)
I0428 20:00:14.134505 29425 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:14.226481 29425 solver.cpp:219] Iteration 400 (1087.09 iter/s, 0.0919889s/100 iters), loss = 0.901242
I0428 20:00:14.226522 29425 solver.cpp:238]     Train net output #0: loss = 0.901242 (* 1 = 0.901242 loss)
I0428 20:00:14.226528 29425 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:14.315414 29425 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:14.391764 29432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:14.392312 29425 solver.cpp:398]     Test net output #0: accuracy = 0.5791
I0428 20:00:14.392349 29425 solver.cpp:398]     Test net output #1: loss = 1.04562 (* 1 = 1.04562 loss)
I0428 20:00:14.393322 29425 solver.cpp:219] Iteration 500 (599.53 iter/s, 0.166797s/100 iters), loss = 1.12325
I0428 20:00:14.393378 29425 solver.cpp:238]     Train net output #0: loss = 1.12325 (* 1 = 1.12325 loss)
I0428 20:00:14.393415 29425 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:14.491886 29425 solver.cpp:219] Iteration 600 (1015.24 iter/s, 0.0984989s/100 iters), loss = 1.01341
I0428 20:00:14.491911 29425 solver.cpp:238]     Train net output #0: loss = 1.01341 (* 1 = 1.01341 loss)
I0428 20:00:14.491917 29425 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:14.580691 29425 solver.cpp:219] Iteration 700 (1126.5 iter/s, 0.0887705s/100 iters), loss = 0.714397
I0428 20:00:14.580716 29425 solver.cpp:238]     Train net output #0: loss = 0.714397 (* 1 = 0.714397 loss)
I0428 20:00:14.580723 29425 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:14.667982 29425 solver.cpp:219] Iteration 800 (1146.04 iter/s, 0.0872571s/100 iters), loss = 0.502013
I0428 20:00:14.668021 29425 solver.cpp:238]     Train net output #0: loss = 0.502013 (* 1 = 0.502013 loss)
I0428 20:00:14.668027 29425 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:14.756450 29425 solver.cpp:219] Iteration 900 (1130.78 iter/s, 0.0884348s/100 iters), loss = 0.335118
I0428 20:00:14.756489 29425 solver.cpp:238]     Train net output #0: loss = 0.335118 (* 1 = 0.335118 loss)
I0428 20:00:14.756495 29425 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:14.786031 29431 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:14.843411 29425 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:14.844498 29425 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:14.845046 29425 solver.cpp:311] Iteration 1000, loss = 0.415756
I0428 20:00:14.845074 29425 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:14.914223 29432 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:14.914772 29425 solver.cpp:398]     Test net output #0: accuracy = 0.8751
I0428 20:00:14.914808 29425 solver.cpp:398]     Test net output #1: loss = 0.343546 (* 1 = 0.343546 loss)
I0428 20:00:14.914813 29425 solver.cpp:316] Optimization Done.
I0428 20:00:14.914815 29425 caffe.cpp:259] Optimization Done.
