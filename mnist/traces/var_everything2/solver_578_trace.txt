I0428 19:49:32.981287 26791 caffe.cpp:218] Using GPUs 0
I0428 19:49:33.017601 26791 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:33.473969 26791 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test578.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:33.474134 26791 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test578.prototxt
I0428 19:49:33.474539 26791 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:33.474557 26791 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:33.474658 26791 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:33.474741 26791 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:33.474844 26791 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:33.474870 26791 net.cpp:86] Creating Layer mnist
I0428 19:49:33.474879 26791 net.cpp:382] mnist -> data
I0428 19:49:33.474903 26791 net.cpp:382] mnist -> label
I0428 19:49:33.476033 26791 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:33.478242 26791 net.cpp:124] Setting up mnist
I0428 19:49:33.478273 26791 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:33.478281 26791 net.cpp:131] Top shape: 64 (64)
I0428 19:49:33.478286 26791 net.cpp:139] Memory required for data: 200960
I0428 19:49:33.478296 26791 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:33.478312 26791 net.cpp:86] Creating Layer conv0
I0428 19:49:33.478333 26791 net.cpp:408] conv0 <- data
I0428 19:49:33.478348 26791 net.cpp:382] conv0 -> conv0
I0428 19:49:33.709074 26791 net.cpp:124] Setting up conv0
I0428 19:49:33.709101 26791 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:33.709106 26791 net.cpp:139] Memory required for data: 938240
I0428 19:49:33.709141 26791 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:33.709172 26791 net.cpp:86] Creating Layer pool0
I0428 19:49:33.709177 26791 net.cpp:408] pool0 <- conv0
I0428 19:49:33.709185 26791 net.cpp:382] pool0 -> pool0
I0428 19:49:33.709242 26791 net.cpp:124] Setting up pool0
I0428 19:49:33.709250 26791 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:33.709254 26791 net.cpp:139] Memory required for data: 1122560
I0428 19:49:33.709259 26791 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:33.709275 26791 net.cpp:86] Creating Layer conv1
I0428 19:49:33.709280 26791 net.cpp:408] conv1 <- pool0
I0428 19:49:33.709288 26791 net.cpp:382] conv1 -> conv1
I0428 19:49:33.711117 26791 net.cpp:124] Setting up conv1
I0428 19:49:33.711133 26791 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:33.711138 26791 net.cpp:139] Memory required for data: 1204480
I0428 19:49:33.711150 26791 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:33.711160 26791 net.cpp:86] Creating Layer pool1
I0428 19:49:33.711166 26791 net.cpp:408] pool1 <- conv1
I0428 19:49:33.711174 26791 net.cpp:382] pool1 -> pool1
I0428 19:49:33.711217 26791 net.cpp:124] Setting up pool1
I0428 19:49:33.711226 26791 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:33.711231 26791 net.cpp:139] Memory required for data: 1224960
I0428 19:49:33.711236 26791 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:33.711246 26791 net.cpp:86] Creating Layer ip1
I0428 19:49:33.711252 26791 net.cpp:408] ip1 <- pool1
I0428 19:49:33.711261 26791 net.cpp:382] ip1 -> ip1
I0428 19:49:33.712193 26791 net.cpp:124] Setting up ip1
I0428 19:49:33.712208 26791 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:33.712211 26791 net.cpp:139] Memory required for data: 1237760
I0428 19:49:33.712224 26791 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:33.712232 26791 net.cpp:86] Creating Layer relu1
I0428 19:49:33.712239 26791 net.cpp:408] relu1 <- ip1
I0428 19:49:33.712245 26791 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:33.712406 26791 net.cpp:124] Setting up relu1
I0428 19:49:33.712416 26791 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:33.712421 26791 net.cpp:139] Memory required for data: 1250560
I0428 19:49:33.712426 26791 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:33.712436 26791 net.cpp:86] Creating Layer ip2
I0428 19:49:33.712441 26791 net.cpp:408] ip2 <- ip1
I0428 19:49:33.712450 26791 net.cpp:382] ip2 -> ip2
I0428 19:49:33.712554 26791 net.cpp:124] Setting up ip2
I0428 19:49:33.712563 26791 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:33.712566 26791 net.cpp:139] Memory required for data: 1253120
I0428 19:49:33.712575 26791 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:33.712584 26791 net.cpp:86] Creating Layer relu2
I0428 19:49:33.712602 26791 net.cpp:408] relu2 <- ip2
I0428 19:49:33.712610 26791 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:33.713520 26791 net.cpp:124] Setting up relu2
I0428 19:49:33.713532 26791 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:33.713537 26791 net.cpp:139] Memory required for data: 1255680
I0428 19:49:33.713543 26791 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:33.713553 26791 net.cpp:86] Creating Layer ip3
I0428 19:49:33.713558 26791 net.cpp:408] ip3 <- ip2
I0428 19:49:33.713567 26791 net.cpp:382] ip3 -> ip3
I0428 19:49:33.713686 26791 net.cpp:124] Setting up ip3
I0428 19:49:33.713696 26791 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:33.713701 26791 net.cpp:139] Memory required for data: 1258240
I0428 19:49:33.713711 26791 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:33.713722 26791 net.cpp:86] Creating Layer relu3
I0428 19:49:33.713729 26791 net.cpp:408] relu3 <- ip3
I0428 19:49:33.713735 26791 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:33.713892 26791 net.cpp:124] Setting up relu3
I0428 19:49:33.713901 26791 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:33.713907 26791 net.cpp:139] Memory required for data: 1260800
I0428 19:49:33.713912 26791 layer_factory.hpp:77] Creating layer loss
I0428 19:49:33.713920 26791 net.cpp:86] Creating Layer loss
I0428 19:49:33.713925 26791 net.cpp:408] loss <- ip3
I0428 19:49:33.713932 26791 net.cpp:408] loss <- label
I0428 19:49:33.713939 26791 net.cpp:382] loss -> loss
I0428 19:49:33.713959 26791 layer_factory.hpp:77] Creating layer loss
I0428 19:49:33.714171 26791 net.cpp:124] Setting up loss
I0428 19:49:33.714180 26791 net.cpp:131] Top shape: (1)
I0428 19:49:33.714185 26791 net.cpp:134]     with loss weight 1
I0428 19:49:33.714205 26791 net.cpp:139] Memory required for data: 1260804
I0428 19:49:33.714210 26791 net.cpp:200] loss needs backward computation.
I0428 19:49:33.714215 26791 net.cpp:200] relu3 needs backward computation.
I0428 19:49:33.714221 26791 net.cpp:200] ip3 needs backward computation.
I0428 19:49:33.714226 26791 net.cpp:200] relu2 needs backward computation.
I0428 19:49:33.714229 26791 net.cpp:200] ip2 needs backward computation.
I0428 19:49:33.714234 26791 net.cpp:200] relu1 needs backward computation.
I0428 19:49:33.714238 26791 net.cpp:200] ip1 needs backward computation.
I0428 19:49:33.714243 26791 net.cpp:200] pool1 needs backward computation.
I0428 19:49:33.714248 26791 net.cpp:200] conv1 needs backward computation.
I0428 19:49:33.714253 26791 net.cpp:200] pool0 needs backward computation.
I0428 19:49:33.714258 26791 net.cpp:200] conv0 needs backward computation.
I0428 19:49:33.714263 26791 net.cpp:202] mnist does not need backward computation.
I0428 19:49:33.714268 26791 net.cpp:244] This network produces output loss
I0428 19:49:33.714282 26791 net.cpp:257] Network initialization done.
I0428 19:49:33.714586 26791 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test578.prototxt
I0428 19:49:33.714617 26791 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:33.714720 26791 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:33.714835 26791 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:33.714890 26791 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:33.714906 26791 net.cpp:86] Creating Layer mnist
I0428 19:49:33.714915 26791 net.cpp:382] mnist -> data
I0428 19:49:33.714925 26791 net.cpp:382] mnist -> label
I0428 19:49:33.715032 26791 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:33.717257 26791 net.cpp:124] Setting up mnist
I0428 19:49:33.717286 26791 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:33.717294 26791 net.cpp:131] Top shape: 100 (100)
I0428 19:49:33.717299 26791 net.cpp:139] Memory required for data: 314000
I0428 19:49:33.717304 26791 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:33.717334 26791 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:33.717339 26791 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:33.717346 26791 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:33.717356 26791 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:33.717444 26791 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:33.717453 26791 net.cpp:131] Top shape: 100 (100)
I0428 19:49:33.717473 26791 net.cpp:131] Top shape: 100 (100)
I0428 19:49:33.717478 26791 net.cpp:139] Memory required for data: 314800
I0428 19:49:33.717483 26791 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:33.717495 26791 net.cpp:86] Creating Layer conv0
I0428 19:49:33.717500 26791 net.cpp:408] conv0 <- data
I0428 19:49:33.717509 26791 net.cpp:382] conv0 -> conv0
I0428 19:49:33.719128 26791 net.cpp:124] Setting up conv0
I0428 19:49:33.719143 26791 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:33.719148 26791 net.cpp:139] Memory required for data: 1466800
I0428 19:49:33.719162 26791 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:33.719172 26791 net.cpp:86] Creating Layer pool0
I0428 19:49:33.719179 26791 net.cpp:408] pool0 <- conv0
I0428 19:49:33.719187 26791 net.cpp:382] pool0 -> pool0
I0428 19:49:33.719226 26791 net.cpp:124] Setting up pool0
I0428 19:49:33.719234 26791 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:33.719239 26791 net.cpp:139] Memory required for data: 1754800
I0428 19:49:33.719244 26791 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:33.719257 26791 net.cpp:86] Creating Layer conv1
I0428 19:49:33.719264 26791 net.cpp:408] conv1 <- pool0
I0428 19:49:33.719271 26791 net.cpp:382] conv1 -> conv1
I0428 19:49:33.721506 26791 net.cpp:124] Setting up conv1
I0428 19:49:33.721521 26791 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:33.721527 26791 net.cpp:139] Memory required for data: 1882800
I0428 19:49:33.721557 26791 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:33.721566 26791 net.cpp:86] Creating Layer pool1
I0428 19:49:33.721587 26791 net.cpp:408] pool1 <- conv1
I0428 19:49:33.721596 26791 net.cpp:382] pool1 -> pool1
I0428 19:49:33.721643 26791 net.cpp:124] Setting up pool1
I0428 19:49:33.721652 26791 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:33.721657 26791 net.cpp:139] Memory required for data: 1914800
I0428 19:49:33.721662 26791 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:33.721670 26791 net.cpp:86] Creating Layer ip1
I0428 19:49:33.721675 26791 net.cpp:408] ip1 <- pool1
I0428 19:49:33.721683 26791 net.cpp:382] ip1 -> ip1
I0428 19:49:33.721858 26791 net.cpp:124] Setting up ip1
I0428 19:49:33.721868 26791 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:33.721884 26791 net.cpp:139] Memory required for data: 1934800
I0428 19:49:33.721896 26791 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:33.721905 26791 net.cpp:86] Creating Layer relu1
I0428 19:49:33.721911 26791 net.cpp:408] relu1 <- ip1
I0428 19:49:33.721918 26791 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:33.722121 26791 net.cpp:124] Setting up relu1
I0428 19:49:33.722131 26791 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:33.722136 26791 net.cpp:139] Memory required for data: 1954800
I0428 19:49:33.722141 26791 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:33.722153 26791 net.cpp:86] Creating Layer ip2
I0428 19:49:33.722168 26791 net.cpp:408] ip2 <- ip1
I0428 19:49:33.722177 26791 net.cpp:382] ip2 -> ip2
I0428 19:49:33.722280 26791 net.cpp:124] Setting up ip2
I0428 19:49:33.722287 26791 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:33.722292 26791 net.cpp:139] Memory required for data: 1958800
I0428 19:49:33.722301 26791 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:33.722309 26791 net.cpp:86] Creating Layer relu2
I0428 19:49:33.722316 26791 net.cpp:408] relu2 <- ip2
I0428 19:49:33.722322 26791 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:33.722517 26791 net.cpp:124] Setting up relu2
I0428 19:49:33.722527 26791 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:33.722532 26791 net.cpp:139] Memory required for data: 1962800
I0428 19:49:33.722537 26791 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:33.722545 26791 net.cpp:86] Creating Layer ip3
I0428 19:49:33.722550 26791 net.cpp:408] ip3 <- ip2
I0428 19:49:33.722558 26791 net.cpp:382] ip3 -> ip3
I0428 19:49:33.722653 26791 net.cpp:124] Setting up ip3
I0428 19:49:33.722661 26791 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:33.722666 26791 net.cpp:139] Memory required for data: 1966800
I0428 19:49:33.722692 26791 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:33.722700 26791 net.cpp:86] Creating Layer relu3
I0428 19:49:33.722705 26791 net.cpp:408] relu3 <- ip3
I0428 19:49:33.722712 26791 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:33.723526 26791 net.cpp:124] Setting up relu3
I0428 19:49:33.723539 26791 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:33.723544 26791 net.cpp:139] Memory required for data: 1970800
I0428 19:49:33.723551 26791 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:33.723557 26791 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:33.723563 26791 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:33.723572 26791 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:33.723580 26791 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:33.723634 26791 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:33.723640 26791 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:33.723647 26791 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:33.723651 26791 net.cpp:139] Memory required for data: 1978800
I0428 19:49:33.723657 26791 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:33.723672 26791 net.cpp:86] Creating Layer accuracy
I0428 19:49:33.723680 26791 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:33.723686 26791 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:33.723697 26791 net.cpp:382] accuracy -> accuracy
I0428 19:49:33.723708 26791 net.cpp:124] Setting up accuracy
I0428 19:49:33.723716 26791 net.cpp:131] Top shape: (1)
I0428 19:49:33.723721 26791 net.cpp:139] Memory required for data: 1978804
I0428 19:49:33.723726 26791 layer_factory.hpp:77] Creating layer loss
I0428 19:49:33.723732 26791 net.cpp:86] Creating Layer loss
I0428 19:49:33.723748 26791 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:33.723755 26791 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:33.723776 26791 net.cpp:382] loss -> loss
I0428 19:49:33.723785 26791 layer_factory.hpp:77] Creating layer loss
I0428 19:49:33.724027 26791 net.cpp:124] Setting up loss
I0428 19:49:33.724037 26791 net.cpp:131] Top shape: (1)
I0428 19:49:33.724043 26791 net.cpp:134]     with loss weight 1
I0428 19:49:33.724052 26791 net.cpp:139] Memory required for data: 1978808
I0428 19:49:33.724069 26791 net.cpp:200] loss needs backward computation.
I0428 19:49:33.724076 26791 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:33.724082 26791 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:33.724087 26791 net.cpp:200] relu3 needs backward computation.
I0428 19:49:33.724093 26791 net.cpp:200] ip3 needs backward computation.
I0428 19:49:33.724098 26791 net.cpp:200] relu2 needs backward computation.
I0428 19:49:33.724103 26791 net.cpp:200] ip2 needs backward computation.
I0428 19:49:33.724108 26791 net.cpp:200] relu1 needs backward computation.
I0428 19:49:33.724113 26791 net.cpp:200] ip1 needs backward computation.
I0428 19:49:33.724119 26791 net.cpp:200] pool1 needs backward computation.
I0428 19:49:33.724125 26791 net.cpp:200] conv1 needs backward computation.
I0428 19:49:33.724131 26791 net.cpp:200] pool0 needs backward computation.
I0428 19:49:33.724136 26791 net.cpp:200] conv0 needs backward computation.
I0428 19:49:33.724143 26791 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:33.724149 26791 net.cpp:202] mnist does not need backward computation.
I0428 19:49:33.724153 26791 net.cpp:244] This network produces output accuracy
I0428 19:49:33.724160 26791 net.cpp:244] This network produces output loss
I0428 19:49:33.724190 26791 net.cpp:257] Network initialization done.
I0428 19:49:33.724237 26791 solver.cpp:56] Solver scaffolding done.
I0428 19:49:33.724586 26791 caffe.cpp:248] Starting Optimization
I0428 19:49:33.724592 26791 solver.cpp:273] Solving LeNet
I0428 19:49:33.724597 26791 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:33.725505 26791 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:33.729318 26791 blocking_queue.cpp:49] Waiting for data
I0428 19:49:33.800624 26798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:33.801156 26791 solver.cpp:398]     Test net output #0: accuracy = 0.0506
I0428 19:49:33.801183 26791 solver.cpp:398]     Test net output #1: loss = 2.36449 (* 1 = 2.36449 loss)
I0428 19:49:33.803160 26791 solver.cpp:219] Iteration 0 (-1.03556e-42 iter/s, 0.0785306s/100 iters), loss = 2.35122
I0428 19:49:33.803194 26791 solver.cpp:238]     Train net output #0: loss = 2.35122 (* 1 = 2.35122 loss)
I0428 19:49:33.803213 26791 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:33.877728 26791 solver.cpp:219] Iteration 100 (1341.75 iter/s, 0.0745298s/100 iters), loss = 1.49236
I0428 19:49:33.877758 26791 solver.cpp:238]     Train net output #0: loss = 1.49236 (* 1 = 1.49236 loss)
I0428 19:49:33.877768 26791 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:33.948174 26791 solver.cpp:219] Iteration 200 (1420.23 iter/s, 0.0704113s/100 iters), loss = 0.735533
I0428 19:49:33.948200 26791 solver.cpp:238]     Train net output #0: loss = 0.735533 (* 1 = 0.735533 loss)
I0428 19:49:33.948225 26791 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:34.020033 26791 solver.cpp:219] Iteration 300 (1392.24 iter/s, 0.0718265s/100 iters), loss = 0.863571
I0428 19:49:34.020061 26791 solver.cpp:238]     Train net output #0: loss = 0.863571 (* 1 = 0.863571 loss)
I0428 19:49:34.020086 26791 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:34.091230 26791 solver.cpp:219] Iteration 400 (1405.19 iter/s, 0.0711648s/100 iters), loss = 0.414096
I0428 19:49:34.091258 26791 solver.cpp:238]     Train net output #0: loss = 0.414096 (* 1 = 0.414096 loss)
I0428 19:49:34.091281 26791 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:34.162096 26791 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:34.215117 26798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:34.215598 26791 solver.cpp:398]     Test net output #0: accuracy = 0.9197
I0428 19:49:34.215620 26791 solver.cpp:398]     Test net output #1: loss = 0.3093 (* 1 = 0.3093 loss)
I0428 19:49:34.216431 26791 solver.cpp:219] Iteration 500 (798.942 iter/s, 0.125166s/100 iters), loss = 0.352685
I0428 19:49:34.216461 26791 solver.cpp:238]     Train net output #0: loss = 0.352685 (* 1 = 0.352685 loss)
I0428 19:49:34.216485 26791 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:34.292440 26791 solver.cpp:219] Iteration 600 (1316.26 iter/s, 0.0759727s/100 iters), loss = 0.213515
I0428 19:49:34.292469 26791 solver.cpp:238]     Train net output #0: loss = 0.213515 (* 1 = 0.213515 loss)
I0428 19:49:34.292495 26791 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:34.366483 26791 solver.cpp:219] Iteration 700 (1351.19 iter/s, 0.0740086s/100 iters), loss = 0.330066
I0428 19:49:34.366510 26791 solver.cpp:238]     Train net output #0: loss = 0.330066 (* 1 = 0.330066 loss)
I0428 19:49:34.366535 26791 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:34.444371 26791 solver.cpp:219] Iteration 800 (1284.46 iter/s, 0.0778539s/100 iters), loss = 0.366072
I0428 19:49:34.444397 26791 solver.cpp:238]     Train net output #0: loss = 0.366072 (* 1 = 0.366072 loss)
I0428 19:49:34.444422 26791 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:34.518687 26791 solver.cpp:219] Iteration 900 (1346.2 iter/s, 0.074283s/100 iters), loss = 0.417755
I0428 19:49:34.518713 26791 solver.cpp:238]     Train net output #0: loss = 0.417755 (* 1 = 0.417755 loss)
I0428 19:49:34.518738 26791 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:34.542577 26797 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:34.590093 26791 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:34.590812 26791 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:34.591289 26791 solver.cpp:311] Iteration 1000, loss = 0.24336
I0428 19:49:34.591305 26791 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:34.656852 26798 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:34.657357 26791 solver.cpp:398]     Test net output #0: accuracy = 0.9534
I0428 19:49:34.657377 26791 solver.cpp:398]     Test net output #1: loss = 0.16598 (* 1 = 0.16598 loss)
I0428 19:49:34.657385 26791 solver.cpp:316] Optimization Done.
I0428 19:49:34.657389 26791 caffe.cpp:259] Optimization Done.
