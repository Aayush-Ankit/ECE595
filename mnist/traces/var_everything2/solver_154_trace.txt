I0428 19:32:29.055754 22849 caffe.cpp:218] Using GPUs 0
I0428 19:32:29.095708 22849 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:29.610357 22849 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test154.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:29.610530 22849 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test154.prototxt
I0428 19:32:29.610913 22849 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:29.610936 22849 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:29.611043 22849 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:29.611151 22849 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:29.611284 22849 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:29.611315 22849 net.cpp:86] Creating Layer mnist
I0428 19:32:29.611330 22849 net.cpp:382] mnist -> data
I0428 19:32:29.611361 22849 net.cpp:382] mnist -> label
I0428 19:32:29.612584 22849 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:29.615051 22849 net.cpp:124] Setting up mnist
I0428 19:32:29.615072 22849 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:29.615085 22849 net.cpp:131] Top shape: 64 (64)
I0428 19:32:29.615092 22849 net.cpp:139] Memory required for data: 200960
I0428 19:32:29.615101 22849 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:29.615123 22849 net.cpp:86] Creating Layer conv0
I0428 19:32:29.615134 22849 net.cpp:408] conv0 <- data
I0428 19:32:29.615155 22849 net.cpp:382] conv0 -> conv0
I0428 19:32:29.899552 22849 net.cpp:124] Setting up conv0
I0428 19:32:29.899582 22849 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:29.899588 22849 net.cpp:139] Memory required for data: 1675520
I0428 19:32:29.899610 22849 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:29.899626 22849 net.cpp:86] Creating Layer pool0
I0428 19:32:29.899652 22849 net.cpp:408] pool0 <- conv0
I0428 19:32:29.899662 22849 net.cpp:382] pool0 -> pool0
I0428 19:32:29.899722 22849 net.cpp:124] Setting up pool0
I0428 19:32:29.899731 22849 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:29.899736 22849 net.cpp:139] Memory required for data: 2044160
I0428 19:32:29.899742 22849 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:29.899754 22849 net.cpp:86] Creating Layer ip1
I0428 19:32:29.899762 22849 net.cpp:408] ip1 <- pool0
I0428 19:32:29.899771 22849 net.cpp:382] ip1 -> ip1
I0428 19:32:29.901162 22849 net.cpp:124] Setting up ip1
I0428 19:32:29.901178 22849 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:29.901183 22849 net.cpp:139] Memory required for data: 2056960
I0428 19:32:29.901196 22849 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:29.901207 22849 net.cpp:86] Creating Layer relu1
I0428 19:32:29.901213 22849 net.cpp:408] relu1 <- ip1
I0428 19:32:29.901221 22849 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:29.901392 22849 net.cpp:124] Setting up relu1
I0428 19:32:29.901417 22849 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:29.901422 22849 net.cpp:139] Memory required for data: 2069760
I0428 19:32:29.901428 22849 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:29.901439 22849 net.cpp:86] Creating Layer ip2
I0428 19:32:29.901444 22849 net.cpp:408] ip2 <- ip1
I0428 19:32:29.901459 22849 net.cpp:382] ip2 -> ip2
I0428 19:32:29.902484 22849 net.cpp:124] Setting up ip2
I0428 19:32:29.902499 22849 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:29.902505 22849 net.cpp:139] Memory required for data: 2082560
I0428 19:32:29.902518 22849 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:29.902528 22849 net.cpp:86] Creating Layer relu2
I0428 19:32:29.902534 22849 net.cpp:408] relu2 <- ip2
I0428 19:32:29.902541 22849 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:29.903301 22849 net.cpp:124] Setting up relu2
I0428 19:32:29.903314 22849 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:29.903319 22849 net.cpp:139] Memory required for data: 2095360
I0428 19:32:29.903326 22849 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:29.903337 22849 net.cpp:86] Creating Layer ip3
I0428 19:32:29.903342 22849 net.cpp:408] ip3 <- ip2
I0428 19:32:29.903352 22849 net.cpp:382] ip3 -> ip3
I0428 19:32:29.903471 22849 net.cpp:124] Setting up ip3
I0428 19:32:29.903481 22849 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:29.903486 22849 net.cpp:139] Memory required for data: 2097920
I0428 19:32:29.903496 22849 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:29.903506 22849 net.cpp:86] Creating Layer relu3
I0428 19:32:29.903513 22849 net.cpp:408] relu3 <- ip3
I0428 19:32:29.903520 22849 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:29.903676 22849 net.cpp:124] Setting up relu3
I0428 19:32:29.903686 22849 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:29.903690 22849 net.cpp:139] Memory required for data: 2100480
I0428 19:32:29.903695 22849 layer_factory.hpp:77] Creating layer loss
I0428 19:32:29.903704 22849 net.cpp:86] Creating Layer loss
I0428 19:32:29.903709 22849 net.cpp:408] loss <- ip3
I0428 19:32:29.903717 22849 net.cpp:408] loss <- label
I0428 19:32:29.903724 22849 net.cpp:382] loss -> loss
I0428 19:32:29.903748 22849 layer_factory.hpp:77] Creating layer loss
I0428 19:32:29.903995 22849 net.cpp:124] Setting up loss
I0428 19:32:29.904005 22849 net.cpp:131] Top shape: (1)
I0428 19:32:29.904011 22849 net.cpp:134]     with loss weight 1
I0428 19:32:29.904031 22849 net.cpp:139] Memory required for data: 2100484
I0428 19:32:29.904036 22849 net.cpp:200] loss needs backward computation.
I0428 19:32:29.904042 22849 net.cpp:200] relu3 needs backward computation.
I0428 19:32:29.904047 22849 net.cpp:200] ip3 needs backward computation.
I0428 19:32:29.904053 22849 net.cpp:200] relu2 needs backward computation.
I0428 19:32:29.904058 22849 net.cpp:200] ip2 needs backward computation.
I0428 19:32:29.904063 22849 net.cpp:200] relu1 needs backward computation.
I0428 19:32:29.904068 22849 net.cpp:200] ip1 needs backward computation.
I0428 19:32:29.904086 22849 net.cpp:200] pool0 needs backward computation.
I0428 19:32:29.904093 22849 net.cpp:200] conv0 needs backward computation.
I0428 19:32:29.904099 22849 net.cpp:202] mnist does not need backward computation.
I0428 19:32:29.904104 22849 net.cpp:244] This network produces output loss
I0428 19:32:29.904117 22849 net.cpp:257] Network initialization done.
I0428 19:32:29.904418 22849 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test154.prototxt
I0428 19:32:29.904451 22849 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:29.904537 22849 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:29.904633 22849 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:29.904692 22849 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:29.904709 22849 net.cpp:86] Creating Layer mnist
I0428 19:32:29.904716 22849 net.cpp:382] mnist -> data
I0428 19:32:29.904727 22849 net.cpp:382] mnist -> label
I0428 19:32:29.904850 22849 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:29.906208 22849 net.cpp:124] Setting up mnist
I0428 19:32:29.906239 22849 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:29.906247 22849 net.cpp:131] Top shape: 100 (100)
I0428 19:32:29.906252 22849 net.cpp:139] Memory required for data: 314000
I0428 19:32:29.906258 22849 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:29.906287 22849 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:29.906294 22849 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:29.906302 22849 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:29.906313 22849 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:29.906442 22849 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:29.906452 22849 net.cpp:131] Top shape: 100 (100)
I0428 19:32:29.906460 22849 net.cpp:131] Top shape: 100 (100)
I0428 19:32:29.906464 22849 net.cpp:139] Memory required for data: 314800
I0428 19:32:29.906483 22849 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:29.906497 22849 net.cpp:86] Creating Layer conv0
I0428 19:32:29.906505 22849 net.cpp:408] conv0 <- data
I0428 19:32:29.906514 22849 net.cpp:382] conv0 -> conv0
I0428 19:32:29.908097 22849 net.cpp:124] Setting up conv0
I0428 19:32:29.908113 22849 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:29.908118 22849 net.cpp:139] Memory required for data: 2618800
I0428 19:32:29.908133 22849 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:29.908143 22849 net.cpp:86] Creating Layer pool0
I0428 19:32:29.908150 22849 net.cpp:408] pool0 <- conv0
I0428 19:32:29.908159 22849 net.cpp:382] pool0 -> pool0
I0428 19:32:29.908200 22849 net.cpp:124] Setting up pool0
I0428 19:32:29.908208 22849 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:29.908215 22849 net.cpp:139] Memory required for data: 3194800
I0428 19:32:29.908219 22849 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:29.908231 22849 net.cpp:86] Creating Layer ip1
I0428 19:32:29.908237 22849 net.cpp:408] ip1 <- pool0
I0428 19:32:29.908246 22849 net.cpp:382] ip1 -> ip1
I0428 19:32:29.908778 22849 net.cpp:124] Setting up ip1
I0428 19:32:29.908789 22849 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:29.908795 22849 net.cpp:139] Memory required for data: 3214800
I0428 19:32:29.908808 22849 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:29.908848 22849 net.cpp:86] Creating Layer relu1
I0428 19:32:29.908854 22849 net.cpp:408] relu1 <- ip1
I0428 19:32:29.908862 22849 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:29.909061 22849 net.cpp:124] Setting up relu1
I0428 19:32:29.909072 22849 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:29.909078 22849 net.cpp:139] Memory required for data: 3234800
I0428 19:32:29.909083 22849 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:29.909093 22849 net.cpp:86] Creating Layer ip2
I0428 19:32:29.909099 22849 net.cpp:408] ip2 <- ip1
I0428 19:32:29.909108 22849 net.cpp:382] ip2 -> ip2
I0428 19:32:29.909276 22849 net.cpp:124] Setting up ip2
I0428 19:32:29.909286 22849 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:29.909291 22849 net.cpp:139] Memory required for data: 3254800
I0428 19:32:29.909303 22849 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:29.909313 22849 net.cpp:86] Creating Layer relu2
I0428 19:32:29.909318 22849 net.cpp:408] relu2 <- ip2
I0428 19:32:29.909327 22849 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:29.910224 22849 net.cpp:124] Setting up relu2
I0428 19:32:29.910238 22849 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:29.910244 22849 net.cpp:139] Memory required for data: 3274800
I0428 19:32:29.910249 22849 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:29.910261 22849 net.cpp:86] Creating Layer ip3
I0428 19:32:29.910267 22849 net.cpp:408] ip3 <- ip2
I0428 19:32:29.910292 22849 net.cpp:382] ip3 -> ip3
I0428 19:32:29.910424 22849 net.cpp:124] Setting up ip3
I0428 19:32:29.910436 22849 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:29.910442 22849 net.cpp:139] Memory required for data: 3278800
I0428 19:32:29.910454 22849 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:29.910461 22849 net.cpp:86] Creating Layer relu3
I0428 19:32:29.910467 22849 net.cpp:408] relu3 <- ip3
I0428 19:32:29.910490 22849 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:29.910686 22849 net.cpp:124] Setting up relu3
I0428 19:32:29.910696 22849 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:29.910702 22849 net.cpp:139] Memory required for data: 3282800
I0428 19:32:29.910707 22849 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:29.910715 22849 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:29.910737 22849 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:29.910744 22849 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:29.910754 22849 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:29.910799 22849 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:29.910807 22849 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:29.910815 22849 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:29.910832 22849 net.cpp:139] Memory required for data: 3290800
I0428 19:32:29.910840 22849 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:29.910848 22849 net.cpp:86] Creating Layer accuracy
I0428 19:32:29.910854 22849 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:29.910861 22849 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:29.910869 22849 net.cpp:382] accuracy -> accuracy
I0428 19:32:29.910881 22849 net.cpp:124] Setting up accuracy
I0428 19:32:29.910889 22849 net.cpp:131] Top shape: (1)
I0428 19:32:29.910894 22849 net.cpp:139] Memory required for data: 3290804
I0428 19:32:29.910902 22849 layer_factory.hpp:77] Creating layer loss
I0428 19:32:29.910908 22849 net.cpp:86] Creating Layer loss
I0428 19:32:29.910914 22849 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:29.910922 22849 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:29.910928 22849 net.cpp:382] loss -> loss
I0428 19:32:29.910938 22849 layer_factory.hpp:77] Creating layer loss
I0428 19:32:29.911197 22849 net.cpp:124] Setting up loss
I0428 19:32:29.911207 22849 net.cpp:131] Top shape: (1)
I0428 19:32:29.911213 22849 net.cpp:134]     with loss weight 1
I0428 19:32:29.911222 22849 net.cpp:139] Memory required for data: 3290808
I0428 19:32:29.911228 22849 net.cpp:200] loss needs backward computation.
I0428 19:32:29.911234 22849 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:29.911242 22849 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:29.911247 22849 net.cpp:200] relu3 needs backward computation.
I0428 19:32:29.911252 22849 net.cpp:200] ip3 needs backward computation.
I0428 19:32:29.911257 22849 net.cpp:200] relu2 needs backward computation.
I0428 19:32:29.911288 22849 net.cpp:200] ip2 needs backward computation.
I0428 19:32:29.911293 22849 net.cpp:200] relu1 needs backward computation.
I0428 19:32:29.911298 22849 net.cpp:200] ip1 needs backward computation.
I0428 19:32:29.911303 22849 net.cpp:200] pool0 needs backward computation.
I0428 19:32:29.911309 22849 net.cpp:200] conv0 needs backward computation.
I0428 19:32:29.911315 22849 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:29.911321 22849 net.cpp:202] mnist does not need backward computation.
I0428 19:32:29.911326 22849 net.cpp:244] This network produces output accuracy
I0428 19:32:29.911331 22849 net.cpp:244] This network produces output loss
I0428 19:32:29.911346 22849 net.cpp:257] Network initialization done.
I0428 19:32:29.911388 22849 solver.cpp:56] Solver scaffolding done.
I0428 19:32:29.911696 22849 caffe.cpp:248] Starting Optimization
I0428 19:32:29.911703 22849 solver.cpp:273] Solving LeNet
I0428 19:32:29.911710 22849 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:29.913123 22849 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:29.916774 22849 blocking_queue.cpp:49] Waiting for data
I0428 19:32:29.988239 22856 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:29.988772 22849 solver.cpp:398]     Test net output #0: accuracy = 0.1761
I0428 19:32:29.988795 22849 solver.cpp:398]     Test net output #1: loss = 2.29495 (* 1 = 2.29495 loss)
I0428 19:32:29.991256 22849 solver.cpp:219] Iteration 0 (0 iter/s, 0.0795173s/100 iters), loss = 2.30074
I0428 19:32:29.991300 22849 solver.cpp:238]     Train net output #0: loss = 2.30074 (* 1 = 2.30074 loss)
I0428 19:32:29.991318 22849 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:30.066277 22849 solver.cpp:219] Iteration 100 (1333.78 iter/s, 0.0749747s/100 iters), loss = 0.88285
I0428 19:32:30.066305 22849 solver.cpp:238]     Train net output #0: loss = 0.88285 (* 1 = 0.88285 loss)
I0428 19:32:30.066331 22849 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:30.141635 22849 solver.cpp:219] Iteration 200 (1327.61 iter/s, 0.0753234s/100 iters), loss = 0.33719
I0428 19:32:30.141662 22849 solver.cpp:238]     Train net output #0: loss = 0.33719 (* 1 = 0.33719 loss)
I0428 19:32:30.141688 22849 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:30.216413 22849 solver.cpp:219] Iteration 300 (1337.92 iter/s, 0.0747428s/100 iters), loss = 0.247456
I0428 19:32:30.216440 22849 solver.cpp:238]     Train net output #0: loss = 0.247456 (* 1 = 0.247456 loss)
I0428 19:32:30.216450 22849 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:30.289328 22849 solver.cpp:219] Iteration 400 (1372.1 iter/s, 0.0728811s/100 iters), loss = 0.171169
I0428 19:32:30.289356 22849 solver.cpp:238]     Train net output #0: loss = 0.171169 (* 1 = 0.171169 loss)
I0428 19:32:30.289381 22849 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:30.362674 22849 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:30.416071 22856 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:30.416605 22849 solver.cpp:398]     Test net output #0: accuracy = 0.9488
I0428 19:32:30.416628 22849 solver.cpp:398]     Test net output #1: loss = 0.1693 (* 1 = 0.1693 loss)
I0428 19:32:30.417450 22849 solver.cpp:219] Iteration 500 (780.733 iter/s, 0.128085s/100 iters), loss = 0.272461
I0428 19:32:30.417476 22849 solver.cpp:238]     Train net output #0: loss = 0.272461 (* 1 = 0.272461 loss)
I0428 19:32:30.417487 22849 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:30.492333 22849 solver.cpp:219] Iteration 600 (1335.99 iter/s, 0.0748511s/100 iters), loss = 0.16173
I0428 19:32:30.492360 22849 solver.cpp:238]     Train net output #0: loss = 0.16173 (* 1 = 0.16173 loss)
I0428 19:32:30.492385 22849 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:30.567965 22849 solver.cpp:219] Iteration 700 (1322.79 iter/s, 0.0755979s/100 iters), loss = 0.23099
I0428 19:32:30.567991 22849 solver.cpp:238]     Train net output #0: loss = 0.23099 (* 1 = 0.23099 loss)
I0428 19:32:30.568017 22849 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:30.640836 22849 solver.cpp:219] Iteration 800 (1373.29 iter/s, 0.0728177s/100 iters), loss = 0.261553
I0428 19:32:30.640894 22849 solver.cpp:238]     Train net output #0: loss = 0.261553 (* 1 = 0.261553 loss)
I0428 19:32:30.640905 22849 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:30.712600 22849 solver.cpp:219] Iteration 900 (1394.41 iter/s, 0.0717148s/100 iters), loss = 0.239662
I0428 19:32:30.712627 22849 solver.cpp:238]     Train net output #0: loss = 0.239662 (* 1 = 0.239662 loss)
I0428 19:32:30.712652 22849 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:30.736714 22855 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:30.789075 22849 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:30.790657 22849 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:30.791712 22849 solver.cpp:311] Iteration 1000, loss = 0.204174
I0428 19:32:30.791730 22849 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:30.853634 22856 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:30.854153 22849 solver.cpp:398]     Test net output #0: accuracy = 0.9638
I0428 19:32:30.854176 22849 solver.cpp:398]     Test net output #1: loss = 0.114258 (* 1 = 0.114258 loss)
I0428 19:32:30.854184 22849 solver.cpp:316] Optimization Done.
I0428 19:32:30.854189 22849 caffe.cpp:259] Optimization Done.
