I0428 19:46:38.562944 26036 caffe.cpp:218] Using GPUs 0
I0428 19:46:38.603685 26036 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:39.119791 26036 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test496.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:39.119931 26036 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test496.prototxt
I0428 19:46:39.120345 26036 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:39.120364 26036 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:39.120467 26036 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:39.120546 26036 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:39.120648 26036 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:39.120671 26036 net.cpp:86] Creating Layer mnist
I0428 19:46:39.120678 26036 net.cpp:382] mnist -> data
I0428 19:46:39.120702 26036 net.cpp:382] mnist -> label
I0428 19:46:39.121804 26036 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:39.124248 26036 net.cpp:124] Setting up mnist
I0428 19:46:39.124264 26036 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:39.124272 26036 net.cpp:131] Top shape: 64 (64)
I0428 19:46:39.124275 26036 net.cpp:139] Memory required for data: 200960
I0428 19:46:39.124284 26036 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:39.124318 26036 net.cpp:86] Creating Layer conv0
I0428 19:46:39.124339 26036 net.cpp:408] conv0 <- data
I0428 19:46:39.124351 26036 net.cpp:382] conv0 -> conv0
I0428 19:46:39.410732 26036 net.cpp:124] Setting up conv0
I0428 19:46:39.410764 26036 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:39.410769 26036 net.cpp:139] Memory required for data: 495872
I0428 19:46:39.410787 26036 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:39.410802 26036 net.cpp:86] Creating Layer pool0
I0428 19:46:39.410807 26036 net.cpp:408] pool0 <- conv0
I0428 19:46:39.410814 26036 net.cpp:382] pool0 -> pool0
I0428 19:46:39.410868 26036 net.cpp:124] Setting up pool0
I0428 19:46:39.410874 26036 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:39.410878 26036 net.cpp:139] Memory required for data: 569600
I0428 19:46:39.410882 26036 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:39.410895 26036 net.cpp:86] Creating Layer conv1
I0428 19:46:39.410899 26036 net.cpp:408] conv1 <- pool0
I0428 19:46:39.410905 26036 net.cpp:382] conv1 -> conv1
I0428 19:46:39.414044 26036 net.cpp:124] Setting up conv1
I0428 19:46:39.414062 26036 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:39.414067 26036 net.cpp:139] Memory required for data: 2208000
I0428 19:46:39.414077 26036 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:39.414086 26036 net.cpp:86] Creating Layer pool1
I0428 19:46:39.414093 26036 net.cpp:408] pool1 <- conv1
I0428 19:46:39.414098 26036 net.cpp:382] pool1 -> pool1
I0428 19:46:39.414141 26036 net.cpp:124] Setting up pool1
I0428 19:46:39.414147 26036 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:39.414151 26036 net.cpp:139] Memory required for data: 2617600
I0428 19:46:39.414155 26036 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:39.414162 26036 net.cpp:86] Creating Layer ip1
I0428 19:46:39.414166 26036 net.cpp:408] ip1 <- pool1
I0428 19:46:39.414172 26036 net.cpp:382] ip1 -> ip1
I0428 19:46:39.414566 26036 net.cpp:124] Setting up ip1
I0428 19:46:39.414575 26036 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:39.414579 26036 net.cpp:139] Memory required for data: 2624000
I0428 19:46:39.414587 26036 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:39.414594 26036 net.cpp:86] Creating Layer relu1
I0428 19:46:39.414598 26036 net.cpp:408] relu1 <- ip1
I0428 19:46:39.414603 26036 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:39.414808 26036 net.cpp:124] Setting up relu1
I0428 19:46:39.414818 26036 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:39.414820 26036 net.cpp:139] Memory required for data: 2630400
I0428 19:46:39.414824 26036 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:39.414834 26036 net.cpp:86] Creating Layer ip2
I0428 19:46:39.414836 26036 net.cpp:408] ip2 <- ip1
I0428 19:46:39.414844 26036 net.cpp:382] ip2 -> ip2
I0428 19:46:39.415942 26036 net.cpp:124] Setting up ip2
I0428 19:46:39.415958 26036 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:39.415961 26036 net.cpp:139] Memory required for data: 2643200
I0428 19:46:39.415968 26036 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:39.415978 26036 net.cpp:86] Creating Layer relu2
I0428 19:46:39.415982 26036 net.cpp:408] relu2 <- ip2
I0428 19:46:39.415987 26036 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:39.416856 26036 net.cpp:124] Setting up relu2
I0428 19:46:39.416873 26036 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:39.416877 26036 net.cpp:139] Memory required for data: 2656000
I0428 19:46:39.416882 26036 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:39.416890 26036 net.cpp:86] Creating Layer ip3
I0428 19:46:39.416894 26036 net.cpp:408] ip3 <- ip2
I0428 19:46:39.416901 26036 net.cpp:382] ip3 -> ip3
I0428 19:46:39.417034 26036 net.cpp:124] Setting up ip3
I0428 19:46:39.417044 26036 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:39.417047 26036 net.cpp:139] Memory required for data: 2658560
I0428 19:46:39.417057 26036 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:39.417062 26036 net.cpp:86] Creating Layer relu3
I0428 19:46:39.417067 26036 net.cpp:408] relu3 <- ip3
I0428 19:46:39.417073 26036 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:39.417276 26036 net.cpp:124] Setting up relu3
I0428 19:46:39.417287 26036 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:39.417290 26036 net.cpp:139] Memory required for data: 2661120
I0428 19:46:39.417294 26036 layer_factory.hpp:77] Creating layer loss
I0428 19:46:39.417300 26036 net.cpp:86] Creating Layer loss
I0428 19:46:39.417304 26036 net.cpp:408] loss <- ip3
I0428 19:46:39.417309 26036 net.cpp:408] loss <- label
I0428 19:46:39.417316 26036 net.cpp:382] loss -> loss
I0428 19:46:39.417340 26036 layer_factory.hpp:77] Creating layer loss
I0428 19:46:39.417624 26036 net.cpp:124] Setting up loss
I0428 19:46:39.417635 26036 net.cpp:131] Top shape: (1)
I0428 19:46:39.417639 26036 net.cpp:134]     with loss weight 1
I0428 19:46:39.417655 26036 net.cpp:139] Memory required for data: 2661124
I0428 19:46:39.417660 26036 net.cpp:200] loss needs backward computation.
I0428 19:46:39.417665 26036 net.cpp:200] relu3 needs backward computation.
I0428 19:46:39.417667 26036 net.cpp:200] ip3 needs backward computation.
I0428 19:46:39.417671 26036 net.cpp:200] relu2 needs backward computation.
I0428 19:46:39.417675 26036 net.cpp:200] ip2 needs backward computation.
I0428 19:46:39.417677 26036 net.cpp:200] relu1 needs backward computation.
I0428 19:46:39.417680 26036 net.cpp:200] ip1 needs backward computation.
I0428 19:46:39.417683 26036 net.cpp:200] pool1 needs backward computation.
I0428 19:46:39.417687 26036 net.cpp:200] conv1 needs backward computation.
I0428 19:46:39.417691 26036 net.cpp:200] pool0 needs backward computation.
I0428 19:46:39.417695 26036 net.cpp:200] conv0 needs backward computation.
I0428 19:46:39.417698 26036 net.cpp:202] mnist does not need backward computation.
I0428 19:46:39.417701 26036 net.cpp:244] This network produces output loss
I0428 19:46:39.417714 26036 net.cpp:257] Network initialization done.
I0428 19:46:39.418097 26036 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test496.prototxt
I0428 19:46:39.418128 26036 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:39.418237 26036 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:39.418337 26036 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:39.418386 26036 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:39.418401 26036 net.cpp:86] Creating Layer mnist
I0428 19:46:39.418407 26036 net.cpp:382] mnist -> data
I0428 19:46:39.418416 26036 net.cpp:382] mnist -> label
I0428 19:46:39.418519 26036 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:39.420938 26036 net.cpp:124] Setting up mnist
I0428 19:46:39.420953 26036 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:39.420959 26036 net.cpp:131] Top shape: 100 (100)
I0428 19:46:39.420964 26036 net.cpp:139] Memory required for data: 314000
I0428 19:46:39.420967 26036 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:39.421008 26036 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:39.421013 26036 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:39.421018 26036 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:39.421026 26036 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:39.421171 26036 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:39.421180 26036 net.cpp:131] Top shape: 100 (100)
I0428 19:46:39.421185 26036 net.cpp:131] Top shape: 100 (100)
I0428 19:46:39.421188 26036 net.cpp:139] Memory required for data: 314800
I0428 19:46:39.421191 26036 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:39.421203 26036 net.cpp:86] Creating Layer conv0
I0428 19:46:39.421207 26036 net.cpp:408] conv0 <- data
I0428 19:46:39.421214 26036 net.cpp:382] conv0 -> conv0
I0428 19:46:39.423100 26036 net.cpp:124] Setting up conv0
I0428 19:46:39.423116 26036 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:39.423121 26036 net.cpp:139] Memory required for data: 775600
I0428 19:46:39.423133 26036 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:39.423141 26036 net.cpp:86] Creating Layer pool0
I0428 19:46:39.423146 26036 net.cpp:408] pool0 <- conv0
I0428 19:46:39.423151 26036 net.cpp:382] pool0 -> pool0
I0428 19:46:39.423197 26036 net.cpp:124] Setting up pool0
I0428 19:46:39.423202 26036 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:39.423205 26036 net.cpp:139] Memory required for data: 890800
I0428 19:46:39.423209 26036 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:39.423219 26036 net.cpp:86] Creating Layer conv1
I0428 19:46:39.423223 26036 net.cpp:408] conv1 <- pool0
I0428 19:46:39.423231 26036 net.cpp:382] conv1 -> conv1
I0428 19:46:39.425034 26036 net.cpp:124] Setting up conv1
I0428 19:46:39.425050 26036 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:39.425055 26036 net.cpp:139] Memory required for data: 3450800
I0428 19:46:39.425066 26036 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:39.425074 26036 net.cpp:86] Creating Layer pool1
I0428 19:46:39.425079 26036 net.cpp:408] pool1 <- conv1
I0428 19:46:39.425094 26036 net.cpp:382] pool1 -> pool1
I0428 19:46:39.425138 26036 net.cpp:124] Setting up pool1
I0428 19:46:39.425145 26036 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:39.425155 26036 net.cpp:139] Memory required for data: 4090800
I0428 19:46:39.425159 26036 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:39.425168 26036 net.cpp:86] Creating Layer ip1
I0428 19:46:39.425171 26036 net.cpp:408] ip1 <- pool1
I0428 19:46:39.425178 26036 net.cpp:382] ip1 -> ip1
I0428 19:46:39.425580 26036 net.cpp:124] Setting up ip1
I0428 19:46:39.425588 26036 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:39.425603 26036 net.cpp:139] Memory required for data: 4100800
I0428 19:46:39.425612 26036 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:39.425621 26036 net.cpp:86] Creating Layer relu1
I0428 19:46:39.425624 26036 net.cpp:408] relu1 <- ip1
I0428 19:46:39.425629 26036 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:39.425827 26036 net.cpp:124] Setting up relu1
I0428 19:46:39.425837 26036 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:39.425840 26036 net.cpp:139] Memory required for data: 4110800
I0428 19:46:39.425843 26036 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:39.425853 26036 net.cpp:86] Creating Layer ip2
I0428 19:46:39.425856 26036 net.cpp:408] ip2 <- ip1
I0428 19:46:39.425865 26036 net.cpp:382] ip2 -> ip2
I0428 19:46:39.426009 26036 net.cpp:124] Setting up ip2
I0428 19:46:39.426017 26036 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:39.426020 26036 net.cpp:139] Memory required for data: 4130800
I0428 19:46:39.426026 26036 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:39.426033 26036 net.cpp:86] Creating Layer relu2
I0428 19:46:39.426035 26036 net.cpp:408] relu2 <- ip2
I0428 19:46:39.426040 26036 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:39.426324 26036 net.cpp:124] Setting up relu2
I0428 19:46:39.426334 26036 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:39.426337 26036 net.cpp:139] Memory required for data: 4150800
I0428 19:46:39.426342 26036 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:39.426347 26036 net.cpp:86] Creating Layer ip3
I0428 19:46:39.426352 26036 net.cpp:408] ip3 <- ip2
I0428 19:46:39.426357 26036 net.cpp:382] ip3 -> ip3
I0428 19:46:39.426487 26036 net.cpp:124] Setting up ip3
I0428 19:46:39.426496 26036 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:39.426501 26036 net.cpp:139] Memory required for data: 4154800
I0428 19:46:39.426509 26036 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:39.426528 26036 net.cpp:86] Creating Layer relu3
I0428 19:46:39.426532 26036 net.cpp:408] relu3 <- ip3
I0428 19:46:39.426537 26036 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:39.427450 26036 net.cpp:124] Setting up relu3
I0428 19:46:39.427464 26036 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:39.427469 26036 net.cpp:139] Memory required for data: 4158800
I0428 19:46:39.427474 26036 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:39.427479 26036 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:39.427484 26036 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:39.427490 26036 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:39.427498 26036 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:39.427564 26036 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:39.427574 26036 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:39.427579 26036 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:39.427582 26036 net.cpp:139] Memory required for data: 4166800
I0428 19:46:39.427587 26036 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:39.427592 26036 net.cpp:86] Creating Layer accuracy
I0428 19:46:39.427595 26036 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:39.427600 26036 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:39.427613 26036 net.cpp:382] accuracy -> accuracy
I0428 19:46:39.427621 26036 net.cpp:124] Setting up accuracy
I0428 19:46:39.427626 26036 net.cpp:131] Top shape: (1)
I0428 19:46:39.427629 26036 net.cpp:139] Memory required for data: 4166804
I0428 19:46:39.427634 26036 layer_factory.hpp:77] Creating layer loss
I0428 19:46:39.427645 26036 net.cpp:86] Creating Layer loss
I0428 19:46:39.427649 26036 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:39.427654 26036 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:39.427664 26036 net.cpp:382] loss -> loss
I0428 19:46:39.427670 26036 layer_factory.hpp:77] Creating layer loss
I0428 19:46:39.427953 26036 net.cpp:124] Setting up loss
I0428 19:46:39.427963 26036 net.cpp:131] Top shape: (1)
I0428 19:46:39.427965 26036 net.cpp:134]     with loss weight 1
I0428 19:46:39.427983 26036 net.cpp:139] Memory required for data: 4166808
I0428 19:46:39.427989 26036 net.cpp:200] loss needs backward computation.
I0428 19:46:39.427992 26036 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:39.427996 26036 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:39.428000 26036 net.cpp:200] relu3 needs backward computation.
I0428 19:46:39.428004 26036 net.cpp:200] ip3 needs backward computation.
I0428 19:46:39.428006 26036 net.cpp:200] relu2 needs backward computation.
I0428 19:46:39.428019 26036 net.cpp:200] ip2 needs backward computation.
I0428 19:46:39.428022 26036 net.cpp:200] relu1 needs backward computation.
I0428 19:46:39.428025 26036 net.cpp:200] ip1 needs backward computation.
I0428 19:46:39.428030 26036 net.cpp:200] pool1 needs backward computation.
I0428 19:46:39.428038 26036 net.cpp:200] conv1 needs backward computation.
I0428 19:46:39.428042 26036 net.cpp:200] pool0 needs backward computation.
I0428 19:46:39.428046 26036 net.cpp:200] conv0 needs backward computation.
I0428 19:46:39.428050 26036 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:39.428055 26036 net.cpp:202] mnist does not need backward computation.
I0428 19:46:39.428057 26036 net.cpp:244] This network produces output accuracy
I0428 19:46:39.428061 26036 net.cpp:244] This network produces output loss
I0428 19:46:39.428076 26036 net.cpp:257] Network initialization done.
I0428 19:46:39.428125 26036 solver.cpp:56] Solver scaffolding done.
I0428 19:46:39.428516 26036 caffe.cpp:248] Starting Optimization
I0428 19:46:39.428524 26036 solver.cpp:273] Solving LeNet
I0428 19:46:39.428529 26036 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:39.429543 26036 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:39.434396 26036 blocking_queue.cpp:49] Waiting for data
I0428 19:46:39.503649 26043 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:39.504262 26036 solver.cpp:398]     Test net output #0: accuracy = 0.1293
I0428 19:46:39.504286 26036 solver.cpp:398]     Test net output #1: loss = 2.29222 (* 1 = 2.29222 loss)
I0428 19:46:39.508229 26036 solver.cpp:219] Iteration 0 (-1.36315e-31 iter/s, 0.0796703s/100 iters), loss = 2.30428
I0428 19:46:39.508260 26036 solver.cpp:238]     Train net output #0: loss = 2.30428 (* 1 = 2.30428 loss)
I0428 19:46:39.508272 26036 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:39.679515 26036 solver.cpp:219] Iteration 100 (583.988 iter/s, 0.171236s/100 iters), loss = 1.38138
I0428 19:46:39.679558 26036 solver.cpp:238]     Train net output #0: loss = 1.38138 (* 1 = 1.38138 loss)
I0428 19:46:39.679569 26036 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:46:39.860204 26036 solver.cpp:219] Iteration 200 (553.614 iter/s, 0.180631s/100 iters), loss = 0.903804
I0428 19:46:39.860249 26036 solver.cpp:238]     Train net output #0: loss = 0.903804 (* 1 = 0.903804 loss)
I0428 19:46:39.860260 26036 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:46:40.043025 26036 solver.cpp:219] Iteration 300 (547.164 iter/s, 0.18276s/100 iters), loss = 1.30463
I0428 19:46:40.043071 26036 solver.cpp:238]     Train net output #0: loss = 1.30463 (* 1 = 1.30463 loss)
I0428 19:46:40.043083 26036 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:46:40.229821 26036 solver.cpp:219] Iteration 400 (535.523 iter/s, 0.186733s/100 iters), loss = 0.807418
I0428 19:46:40.229873 26036 solver.cpp:238]     Train net output #0: loss = 0.807418 (* 1 = 0.807418 loss)
I0428 19:46:40.229887 26036 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:46:40.416465 26036 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:46:40.482333 26043 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:40.483155 26036 solver.cpp:398]     Test net output #0: accuracy = 0.595
I0428 19:46:40.483186 26036 solver.cpp:398]     Test net output #1: loss = 0.997925 (* 1 = 0.997925 loss)
I0428 19:46:40.484894 26036 solver.cpp:219] Iteration 500 (392.15 iter/s, 0.255005s/100 iters), loss = 0.998725
I0428 19:46:40.484946 26036 solver.cpp:238]     Train net output #0: loss = 0.998725 (* 1 = 0.998725 loss)
I0428 19:46:40.484956 26036 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:46:40.645308 26036 solver.cpp:219] Iteration 600 (623.643 iter/s, 0.160348s/100 iters), loss = 0.974816
I0428 19:46:40.645341 26036 solver.cpp:238]     Train net output #0: loss = 0.974816 (* 1 = 0.974816 loss)
I0428 19:46:40.645355 26036 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:46:40.801533 26036 solver.cpp:219] Iteration 700 (640.293 iter/s, 0.156178s/100 iters), loss = 0.748431
I0428 19:46:40.801565 26036 solver.cpp:238]     Train net output #0: loss = 0.748431 (* 1 = 0.748431 loss)
I0428 19:46:40.801573 26036 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:46:40.968849 26036 solver.cpp:219] Iteration 800 (597.842 iter/s, 0.167268s/100 iters), loss = 1.02394
I0428 19:46:40.968885 26036 solver.cpp:238]     Train net output #0: loss = 1.02394 (* 1 = 1.02394 loss)
I0428 19:46:40.968895 26036 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:46:41.143342 26036 solver.cpp:219] Iteration 900 (573.262 iter/s, 0.17444s/100 iters), loss = 0.58271
I0428 19:46:41.143380 26036 solver.cpp:238]     Train net output #0: loss = 0.58271 (* 1 = 0.58271 loss)
I0428 19:46:41.143390 26036 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:46:41.200649 26042 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:41.317016 26036 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:46:41.319325 26036 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:46:41.320726 26036 solver.cpp:311] Iteration 1000, loss = 0.381572
I0428 19:46:41.320765 26036 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:46:41.427173 26043 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:41.428001 26036 solver.cpp:398]     Test net output #0: accuracy = 0.8691
I0428 19:46:41.428032 26036 solver.cpp:398]     Test net output #1: loss = 0.349757 (* 1 = 0.349757 loss)
I0428 19:46:41.428041 26036 solver.cpp:316] Optimization Done.
I0428 19:46:41.428047 26036 caffe.cpp:259] Optimization Done.
