I0428 19:49:41.151559 26825 caffe.cpp:218] Using GPUs 0
I0428 19:49:41.185869 26825 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:41.701697 26825 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test582.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:41.701866 26825 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test582.prototxt
I0428 19:49:41.702358 26825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:41.702392 26825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:41.702504 26825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:41.702589 26825 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:41.702687 26825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:41.702713 26825 net.cpp:86] Creating Layer mnist
I0428 19:49:41.702720 26825 net.cpp:382] mnist -> data
I0428 19:49:41.702744 26825 net.cpp:382] mnist -> label
I0428 19:49:41.704007 26825 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:41.706878 26825 net.cpp:124] Setting up mnist
I0428 19:49:41.706894 26825 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:41.706903 26825 net.cpp:131] Top shape: 64 (64)
I0428 19:49:41.706907 26825 net.cpp:139] Memory required for data: 200960
I0428 19:49:41.706915 26825 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:41.706931 26825 net.cpp:86] Creating Layer conv0
I0428 19:49:41.706953 26825 net.cpp:408] conv0 <- data
I0428 19:49:41.706966 26825 net.cpp:382] conv0 -> conv0
I0428 19:49:41.993561 26825 net.cpp:124] Setting up conv0
I0428 19:49:41.993607 26825 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:41.993613 26825 net.cpp:139] Memory required for data: 938240
I0428 19:49:41.993633 26825 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:41.993647 26825 net.cpp:86] Creating Layer pool0
I0428 19:49:41.993669 26825 net.cpp:408] pool0 <- conv0
I0428 19:49:41.993676 26825 net.cpp:382] pool0 -> pool0
I0428 19:49:41.993731 26825 net.cpp:124] Setting up pool0
I0428 19:49:41.993757 26825 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:41.993762 26825 net.cpp:139] Memory required for data: 1122560
I0428 19:49:41.993765 26825 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:41.993779 26825 net.cpp:86] Creating Layer conv1
I0428 19:49:41.993784 26825 net.cpp:408] conv1 <- pool0
I0428 19:49:41.993791 26825 net.cpp:382] conv1 -> conv1
I0428 19:49:41.996382 26825 net.cpp:124] Setting up conv1
I0428 19:49:41.996399 26825 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:41.996404 26825 net.cpp:139] Memory required for data: 1204480
I0428 19:49:41.996415 26825 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:41.996424 26825 net.cpp:86] Creating Layer pool1
I0428 19:49:41.996444 26825 net.cpp:408] pool1 <- conv1
I0428 19:49:41.996451 26825 net.cpp:382] pool1 -> pool1
I0428 19:49:41.996497 26825 net.cpp:124] Setting up pool1
I0428 19:49:41.996507 26825 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:41.996512 26825 net.cpp:139] Memory required for data: 1224960
I0428 19:49:41.996516 26825 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:41.996526 26825 net.cpp:86] Creating Layer ip1
I0428 19:49:41.996531 26825 net.cpp:408] ip1 <- pool1
I0428 19:49:41.996538 26825 net.cpp:382] ip1 -> ip1
I0428 19:49:41.997790 26825 net.cpp:124] Setting up ip1
I0428 19:49:41.997819 26825 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:41.997824 26825 net.cpp:139] Memory required for data: 1237760
I0428 19:49:41.997836 26825 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:41.997844 26825 net.cpp:86] Creating Layer relu1
I0428 19:49:41.997849 26825 net.cpp:408] relu1 <- ip1
I0428 19:49:41.997856 26825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:41.998080 26825 net.cpp:124] Setting up relu1
I0428 19:49:41.998092 26825 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:41.998096 26825 net.cpp:139] Memory required for data: 1250560
I0428 19:49:41.998101 26825 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:41.998111 26825 net.cpp:86] Creating Layer ip2
I0428 19:49:41.998114 26825 net.cpp:408] ip2 <- ip1
I0428 19:49:41.998142 26825 net.cpp:382] ip2 -> ip2
I0428 19:49:41.998286 26825 net.cpp:124] Setting up ip2
I0428 19:49:41.998296 26825 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:41.998301 26825 net.cpp:139] Memory required for data: 1263360
I0428 19:49:41.998307 26825 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:41.998317 26825 net.cpp:86] Creating Layer relu2
I0428 19:49:41.998320 26825 net.cpp:408] relu2 <- ip2
I0428 19:49:41.998327 26825 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:41.999322 26825 net.cpp:124] Setting up relu2
I0428 19:49:41.999352 26825 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:49:41.999357 26825 net.cpp:139] Memory required for data: 1276160
I0428 19:49:41.999361 26825 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:41.999372 26825 net.cpp:86] Creating Layer ip3
I0428 19:49:41.999377 26825 net.cpp:408] ip3 <- ip2
I0428 19:49:41.999388 26825 net.cpp:382] ip3 -> ip3
I0428 19:49:41.999524 26825 net.cpp:124] Setting up ip3
I0428 19:49:41.999534 26825 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:41.999539 26825 net.cpp:139] Memory required for data: 1278720
I0428 19:49:41.999550 26825 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:41.999572 26825 net.cpp:86] Creating Layer relu3
I0428 19:49:41.999575 26825 net.cpp:408] relu3 <- ip3
I0428 19:49:41.999583 26825 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:41.999794 26825 net.cpp:124] Setting up relu3
I0428 19:49:41.999805 26825 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:41.999809 26825 net.cpp:139] Memory required for data: 1281280
I0428 19:49:41.999814 26825 layer_factory.hpp:77] Creating layer loss
I0428 19:49:41.999821 26825 net.cpp:86] Creating Layer loss
I0428 19:49:41.999826 26825 net.cpp:408] loss <- ip3
I0428 19:49:41.999832 26825 net.cpp:408] loss <- label
I0428 19:49:41.999840 26825 net.cpp:382] loss -> loss
I0428 19:49:41.999861 26825 layer_factory.hpp:77] Creating layer loss
I0428 19:49:42.000154 26825 net.cpp:124] Setting up loss
I0428 19:49:42.000166 26825 net.cpp:131] Top shape: (1)
I0428 19:49:42.000185 26825 net.cpp:134]     with loss weight 1
I0428 19:49:42.000203 26825 net.cpp:139] Memory required for data: 1281284
I0428 19:49:42.000208 26825 net.cpp:200] loss needs backward computation.
I0428 19:49:42.000213 26825 net.cpp:200] relu3 needs backward computation.
I0428 19:49:42.000218 26825 net.cpp:200] ip3 needs backward computation.
I0428 19:49:42.000222 26825 net.cpp:200] relu2 needs backward computation.
I0428 19:49:42.000226 26825 net.cpp:200] ip2 needs backward computation.
I0428 19:49:42.000231 26825 net.cpp:200] relu1 needs backward computation.
I0428 19:49:42.000236 26825 net.cpp:200] ip1 needs backward computation.
I0428 19:49:42.000239 26825 net.cpp:200] pool1 needs backward computation.
I0428 19:49:42.000244 26825 net.cpp:200] conv1 needs backward computation.
I0428 19:49:42.000248 26825 net.cpp:200] pool0 needs backward computation.
I0428 19:49:42.000253 26825 net.cpp:200] conv0 needs backward computation.
I0428 19:49:42.000258 26825 net.cpp:202] mnist does not need backward computation.
I0428 19:49:42.000262 26825 net.cpp:244] This network produces output loss
I0428 19:49:42.000277 26825 net.cpp:257] Network initialization done.
I0428 19:49:42.000737 26825 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test582.prototxt
I0428 19:49:42.000784 26825 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:42.000959 26825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:42.001083 26825 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:42.001154 26825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:42.001173 26825 net.cpp:86] Creating Layer mnist
I0428 19:49:42.001179 26825 net.cpp:382] mnist -> data
I0428 19:49:42.001205 26825 net.cpp:382] mnist -> label
I0428 19:49:42.001332 26825 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:42.003748 26825 net.cpp:124] Setting up mnist
I0428 19:49:42.003782 26825 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:42.003789 26825 net.cpp:131] Top shape: 100 (100)
I0428 19:49:42.003794 26825 net.cpp:139] Memory required for data: 314000
I0428 19:49:42.003799 26825 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:42.003813 26825 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:42.003818 26825 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:42.003825 26825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:42.003835 26825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:42.003934 26825 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:42.003945 26825 net.cpp:131] Top shape: 100 (100)
I0428 19:49:42.003952 26825 net.cpp:131] Top shape: 100 (100)
I0428 19:49:42.003957 26825 net.cpp:139] Memory required for data: 314800
I0428 19:49:42.003962 26825 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:42.003978 26825 net.cpp:86] Creating Layer conv0
I0428 19:49:42.003983 26825 net.cpp:408] conv0 <- data
I0428 19:49:42.003993 26825 net.cpp:382] conv0 -> conv0
I0428 19:49:42.006187 26825 net.cpp:124] Setting up conv0
I0428 19:49:42.006220 26825 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:42.006227 26825 net.cpp:139] Memory required for data: 1466800
I0428 19:49:42.006242 26825 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:42.006252 26825 net.cpp:86] Creating Layer pool0
I0428 19:49:42.006258 26825 net.cpp:408] pool0 <- conv0
I0428 19:49:42.006264 26825 net.cpp:382] pool0 -> pool0
I0428 19:49:42.006314 26825 net.cpp:124] Setting up pool0
I0428 19:49:42.006325 26825 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:42.006330 26825 net.cpp:139] Memory required for data: 1754800
I0428 19:49:42.006333 26825 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:42.006347 26825 net.cpp:86] Creating Layer conv1
I0428 19:49:42.006352 26825 net.cpp:408] conv1 <- pool0
I0428 19:49:42.006361 26825 net.cpp:382] conv1 -> conv1
I0428 19:49:42.009341 26825 net.cpp:124] Setting up conv1
I0428 19:49:42.009371 26825 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:42.009376 26825 net.cpp:139] Memory required for data: 1882800
I0428 19:49:42.009387 26825 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:42.009397 26825 net.cpp:86] Creating Layer pool1
I0428 19:49:42.009402 26825 net.cpp:408] pool1 <- conv1
I0428 19:49:42.009425 26825 net.cpp:382] pool1 -> pool1
I0428 19:49:42.009507 26825 net.cpp:124] Setting up pool1
I0428 19:49:42.009517 26825 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:42.009522 26825 net.cpp:139] Memory required for data: 1914800
I0428 19:49:42.009527 26825 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:42.009536 26825 net.cpp:86] Creating Layer ip1
I0428 19:49:42.009541 26825 net.cpp:408] ip1 <- pool1
I0428 19:49:42.009548 26825 net.cpp:382] ip1 -> ip1
I0428 19:49:42.009717 26825 net.cpp:124] Setting up ip1
I0428 19:49:42.009728 26825 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:42.009745 26825 net.cpp:139] Memory required for data: 1934800
I0428 19:49:42.009757 26825 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:42.009763 26825 net.cpp:86] Creating Layer relu1
I0428 19:49:42.009768 26825 net.cpp:408] relu1 <- ip1
I0428 19:49:42.009778 26825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:42.009999 26825 net.cpp:124] Setting up relu1
I0428 19:49:42.010016 26825 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:42.010021 26825 net.cpp:139] Memory required for data: 1954800
I0428 19:49:42.010026 26825 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:42.010037 26825 net.cpp:86] Creating Layer ip2
I0428 19:49:42.010042 26825 net.cpp:408] ip2 <- ip1
I0428 19:49:42.010049 26825 net.cpp:382] ip2 -> ip2
I0428 19:49:42.010208 26825 net.cpp:124] Setting up ip2
I0428 19:49:42.010218 26825 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:42.010222 26825 net.cpp:139] Memory required for data: 1974800
I0428 19:49:42.010231 26825 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:42.010237 26825 net.cpp:86] Creating Layer relu2
I0428 19:49:42.010241 26825 net.cpp:408] relu2 <- ip2
I0428 19:49:42.010248 26825 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:42.010572 26825 net.cpp:124] Setting up relu2
I0428 19:49:42.010584 26825 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:49:42.010604 26825 net.cpp:139] Memory required for data: 1994800
I0428 19:49:42.010609 26825 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:42.010620 26825 net.cpp:86] Creating Layer ip3
I0428 19:49:42.010624 26825 net.cpp:408] ip3 <- ip2
I0428 19:49:42.010632 26825 net.cpp:382] ip3 -> ip3
I0428 19:49:42.010787 26825 net.cpp:124] Setting up ip3
I0428 19:49:42.010797 26825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:42.010802 26825 net.cpp:139] Memory required for data: 1998800
I0428 19:49:42.010813 26825 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:42.010819 26825 net.cpp:86] Creating Layer relu3
I0428 19:49:42.010824 26825 net.cpp:408] relu3 <- ip3
I0428 19:49:42.010830 26825 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:42.011930 26825 net.cpp:124] Setting up relu3
I0428 19:49:42.011961 26825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:42.011966 26825 net.cpp:139] Memory required for data: 2002800
I0428 19:49:42.011971 26825 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:42.011981 26825 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:42.011986 26825 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:42.011993 26825 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:42.012003 26825 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:42.012051 26825 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:42.012064 26825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:42.012070 26825 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:42.012075 26825 net.cpp:139] Memory required for data: 2010800
I0428 19:49:42.012079 26825 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:42.012089 26825 net.cpp:86] Creating Layer accuracy
I0428 19:49:42.012092 26825 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:42.012099 26825 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:42.012105 26825 net.cpp:382] accuracy -> accuracy
I0428 19:49:42.012115 26825 net.cpp:124] Setting up accuracy
I0428 19:49:42.012120 26825 net.cpp:131] Top shape: (1)
I0428 19:49:42.012125 26825 net.cpp:139] Memory required for data: 2010804
I0428 19:49:42.012130 26825 layer_factory.hpp:77] Creating layer loss
I0428 19:49:42.012136 26825 net.cpp:86] Creating Layer loss
I0428 19:49:42.012140 26825 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:42.012161 26825 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:42.012168 26825 net.cpp:382] loss -> loss
I0428 19:49:42.012176 26825 layer_factory.hpp:77] Creating layer loss
I0428 19:49:42.012516 26825 net.cpp:124] Setting up loss
I0428 19:49:42.012527 26825 net.cpp:131] Top shape: (1)
I0428 19:49:42.012542 26825 net.cpp:134]     with loss weight 1
I0428 19:49:42.012550 26825 net.cpp:139] Memory required for data: 2010808
I0428 19:49:42.012567 26825 net.cpp:200] loss needs backward computation.
I0428 19:49:42.012573 26825 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:42.012578 26825 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:42.012583 26825 net.cpp:200] relu3 needs backward computation.
I0428 19:49:42.012588 26825 net.cpp:200] ip3 needs backward computation.
I0428 19:49:42.012591 26825 net.cpp:200] relu2 needs backward computation.
I0428 19:49:42.012596 26825 net.cpp:200] ip2 needs backward computation.
I0428 19:49:42.012601 26825 net.cpp:200] relu1 needs backward computation.
I0428 19:49:42.012605 26825 net.cpp:200] ip1 needs backward computation.
I0428 19:49:42.012625 26825 net.cpp:200] pool1 needs backward computation.
I0428 19:49:42.012630 26825 net.cpp:200] conv1 needs backward computation.
I0428 19:49:42.012635 26825 net.cpp:200] pool0 needs backward computation.
I0428 19:49:42.012640 26825 net.cpp:200] conv0 needs backward computation.
I0428 19:49:42.012656 26825 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:42.012662 26825 net.cpp:202] mnist does not need backward computation.
I0428 19:49:42.012666 26825 net.cpp:244] This network produces output accuracy
I0428 19:49:42.012671 26825 net.cpp:244] This network produces output loss
I0428 19:49:42.012688 26825 net.cpp:257] Network initialization done.
I0428 19:49:42.012758 26825 solver.cpp:56] Solver scaffolding done.
I0428 19:49:42.013234 26825 caffe.cpp:248] Starting Optimization
I0428 19:49:42.013258 26825 solver.cpp:273] Solving LeNet
I0428 19:49:42.013262 26825 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:42.014333 26825 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:42.019256 26825 blocking_queue.cpp:49] Waiting for data
I0428 19:49:42.088127 26832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:42.088749 26825 solver.cpp:398]     Test net output #0: accuracy = 0.1402
I0428 19:49:42.088788 26825 solver.cpp:398]     Test net output #1: loss = 2.29773 (* 1 = 2.29773 loss)
I0428 19:49:42.091243 26825 solver.cpp:219] Iteration 0 (0 iter/s, 0.0779509s/100 iters), loss = 2.31251
I0428 19:49:42.091286 26825 solver.cpp:238]     Train net output #0: loss = 2.31251 (* 1 = 2.31251 loss)
I0428 19:49:42.091301 26825 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:42.174157 26825 solver.cpp:219] Iteration 100 (1206.88 iter/s, 0.082858s/100 iters), loss = 1.32721
I0428 19:49:42.174187 26825 solver.cpp:238]     Train net output #0: loss = 1.32721 (* 1 = 1.32721 loss)
I0428 19:49:42.174196 26825 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:42.260104 26825 solver.cpp:219] Iteration 200 (1164.03 iter/s, 0.0859083s/100 iters), loss = 0.759889
I0428 19:49:42.260148 26825 solver.cpp:238]     Train net output #0: loss = 0.759889 (* 1 = 0.759889 loss)
I0428 19:49:42.260155 26825 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:42.343317 26825 solver.cpp:219] Iteration 300 (1202.5 iter/s, 0.0831601s/100 iters), loss = 0.320739
I0428 19:49:42.343361 26825 solver.cpp:238]     Train net output #0: loss = 0.320739 (* 1 = 0.320739 loss)
I0428 19:49:42.343369 26825 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:42.425885 26825 solver.cpp:219] Iteration 400 (1211.69 iter/s, 0.0825293s/100 iters), loss = 0.326701
I0428 19:49:42.425914 26825 solver.cpp:238]     Train net output #0: loss = 0.326701 (* 1 = 0.326701 loss)
I0428 19:49:42.425921 26825 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:42.510303 26825 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:42.571341 26832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:42.571928 26825 solver.cpp:398]     Test net output #0: accuracy = 0.8359
I0428 19:49:42.571951 26825 solver.cpp:398]     Test net output #1: loss = 0.438721 (* 1 = 0.438721 loss)
I0428 19:49:42.573022 26825 solver.cpp:219] Iteration 500 (679.826 iter/s, 0.147097s/100 iters), loss = 0.448002
I0428 19:49:42.573065 26825 solver.cpp:238]     Train net output #0: loss = 0.448002 (* 1 = 0.448002 loss)
I0428 19:49:42.573091 26825 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:42.659611 26825 solver.cpp:219] Iteration 600 (1155.56 iter/s, 0.0865383s/100 iters), loss = 0.562441
I0428 19:49:42.659656 26825 solver.cpp:238]     Train net output #0: loss = 0.562441 (* 1 = 0.562441 loss)
I0428 19:49:42.659663 26825 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:42.743804 26825 solver.cpp:219] Iteration 700 (1188.51 iter/s, 0.084139s/100 iters), loss = 0.491281
I0428 19:49:42.743832 26825 solver.cpp:238]     Train net output #0: loss = 0.491281 (* 1 = 0.491281 loss)
I0428 19:49:42.743840 26825 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:42.826356 26825 solver.cpp:219] Iteration 800 (1211.9 iter/s, 0.0825149s/100 iters), loss = 0.458626
I0428 19:49:42.826398 26825 solver.cpp:238]     Train net output #0: loss = 0.458626 (* 1 = 0.458626 loss)
I0428 19:49:42.826406 26825 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:42.908890 26825 solver.cpp:219] Iteration 900 (1212.4 iter/s, 0.0824813s/100 iters), loss = 0.537277
I0428 19:49:42.908946 26825 solver.cpp:238]     Train net output #0: loss = 0.537277 (* 1 = 0.537277 loss)
I0428 19:49:42.908956 26825 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:42.936969 26831 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:42.991526 26825 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:42.992475 26825 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:42.993180 26825 solver.cpp:311] Iteration 1000, loss = 0.445266
I0428 19:49:42.993197 26825 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:43.067849 26832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:43.068455 26825 solver.cpp:398]     Test net output #0: accuracy = 0.8522
I0428 19:49:43.068493 26825 solver.cpp:398]     Test net output #1: loss = 0.374876 (* 1 = 0.374876 loss)
I0428 19:49:43.068506 26825 solver.cpp:316] Optimization Done.
I0428 19:49:43.068512 26825 caffe.cpp:259] Optimization Done.
