I0428 19:43:20.960942 25324 caffe.cpp:218] Using GPUs 0
I0428 19:43:20.997102 25324 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:21.509158 25324 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test419.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:21.509301 25324 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test419.prototxt
I0428 19:43:21.509703 25324 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:21.509721 25324 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:21.509819 25324 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:21.509892 25324 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:21.509994 25324 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:21.510016 25324 net.cpp:86] Creating Layer mnist
I0428 19:43:21.510023 25324 net.cpp:382] mnist -> data
I0428 19:43:21.510046 25324 net.cpp:382] mnist -> label
I0428 19:43:21.511135 25324 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:21.513793 25324 net.cpp:124] Setting up mnist
I0428 19:43:21.513811 25324 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:21.513818 25324 net.cpp:131] Top shape: 64 (64)
I0428 19:43:21.513823 25324 net.cpp:139] Memory required for data: 200960
I0428 19:43:21.513830 25324 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:21.513845 25324 net.cpp:86] Creating Layer conv0
I0428 19:43:21.513866 25324 net.cpp:408] conv0 <- data
I0428 19:43:21.513878 25324 net.cpp:382] conv0 -> conv0
I0428 19:43:21.797801 25324 net.cpp:124] Setting up conv0
I0428 19:43:21.797828 25324 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:21.797832 25324 net.cpp:139] Memory required for data: 495872
I0428 19:43:21.797848 25324 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:21.797861 25324 net.cpp:86] Creating Layer pool0
I0428 19:43:21.797865 25324 net.cpp:408] pool0 <- conv0
I0428 19:43:21.797871 25324 net.cpp:382] pool0 -> pool0
I0428 19:43:21.797921 25324 net.cpp:124] Setting up pool0
I0428 19:43:21.797927 25324 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:21.797930 25324 net.cpp:139] Memory required for data: 569600
I0428 19:43:21.797933 25324 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:21.797945 25324 net.cpp:86] Creating Layer conv1
I0428 19:43:21.797947 25324 net.cpp:408] conv1 <- pool0
I0428 19:43:21.797952 25324 net.cpp:382] conv1 -> conv1
I0428 19:43:21.800863 25324 net.cpp:124] Setting up conv1
I0428 19:43:21.800896 25324 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:21.800912 25324 net.cpp:139] Memory required for data: 979200
I0428 19:43:21.800921 25324 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:21.800945 25324 net.cpp:86] Creating Layer pool1
I0428 19:43:21.800947 25324 net.cpp:408] pool1 <- conv1
I0428 19:43:21.800953 25324 net.cpp:382] pool1 -> pool1
I0428 19:43:21.800992 25324 net.cpp:124] Setting up pool1
I0428 19:43:21.801007 25324 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:21.801010 25324 net.cpp:139] Memory required for data: 1081600
I0428 19:43:21.801013 25324 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:21.801020 25324 net.cpp:86] Creating Layer ip1
I0428 19:43:21.801023 25324 net.cpp:408] ip1 <- pool1
I0428 19:43:21.801028 25324 net.cpp:382] ip1 -> ip1
I0428 19:43:21.802043 25324 net.cpp:124] Setting up ip1
I0428 19:43:21.802057 25324 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:21.802076 25324 net.cpp:139] Memory required for data: 1088000
I0428 19:43:21.802085 25324 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:21.802091 25324 net.cpp:86] Creating Layer relu1
I0428 19:43:21.802095 25324 net.cpp:408] relu1 <- ip1
I0428 19:43:21.802100 25324 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:21.802304 25324 net.cpp:124] Setting up relu1
I0428 19:43:21.802312 25324 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:43:21.802315 25324 net.cpp:139] Memory required for data: 1094400
I0428 19:43:21.802319 25324 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:21.802325 25324 net.cpp:86] Creating Layer ip2
I0428 19:43:21.802328 25324 net.cpp:408] ip2 <- ip1
I0428 19:43:21.802332 25324 net.cpp:382] ip2 -> ip2
I0428 19:43:21.802436 25324 net.cpp:124] Setting up ip2
I0428 19:43:21.802443 25324 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:21.802446 25324 net.cpp:139] Memory required for data: 1107200
I0428 19:43:21.802451 25324 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:21.802458 25324 net.cpp:86] Creating Layer relu2
I0428 19:43:21.802460 25324 net.cpp:408] relu2 <- ip2
I0428 19:43:21.802464 25324 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:21.803244 25324 net.cpp:124] Setting up relu2
I0428 19:43:21.803257 25324 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:21.803261 25324 net.cpp:139] Memory required for data: 1120000
I0428 19:43:21.803263 25324 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:21.803270 25324 net.cpp:86] Creating Layer ip3
I0428 19:43:21.803274 25324 net.cpp:408] ip3 <- ip2
I0428 19:43:21.803279 25324 net.cpp:382] ip3 -> ip3
I0428 19:43:21.803378 25324 net.cpp:124] Setting up ip3
I0428 19:43:21.803386 25324 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:21.803390 25324 net.cpp:139] Memory required for data: 1122560
I0428 19:43:21.803397 25324 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:21.803402 25324 net.cpp:86] Creating Layer relu3
I0428 19:43:21.803406 25324 net.cpp:408] relu3 <- ip3
I0428 19:43:21.803409 25324 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:21.803572 25324 net.cpp:124] Setting up relu3
I0428 19:43:21.803580 25324 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:21.803584 25324 net.cpp:139] Memory required for data: 1125120
I0428 19:43:21.803587 25324 layer_factory.hpp:77] Creating layer loss
I0428 19:43:21.803592 25324 net.cpp:86] Creating Layer loss
I0428 19:43:21.803596 25324 net.cpp:408] loss <- ip3
I0428 19:43:21.803599 25324 net.cpp:408] loss <- label
I0428 19:43:21.803604 25324 net.cpp:382] loss -> loss
I0428 19:43:21.803622 25324 layer_factory.hpp:77] Creating layer loss
I0428 19:43:21.803838 25324 net.cpp:124] Setting up loss
I0428 19:43:21.803848 25324 net.cpp:131] Top shape: (1)
I0428 19:43:21.803850 25324 net.cpp:134]     with loss weight 1
I0428 19:43:21.803864 25324 net.cpp:139] Memory required for data: 1125124
I0428 19:43:21.803869 25324 net.cpp:200] loss needs backward computation.
I0428 19:43:21.803872 25324 net.cpp:200] relu3 needs backward computation.
I0428 19:43:21.803875 25324 net.cpp:200] ip3 needs backward computation.
I0428 19:43:21.803879 25324 net.cpp:200] relu2 needs backward computation.
I0428 19:43:21.803881 25324 net.cpp:200] ip2 needs backward computation.
I0428 19:43:21.803884 25324 net.cpp:200] relu1 needs backward computation.
I0428 19:43:21.803886 25324 net.cpp:200] ip1 needs backward computation.
I0428 19:43:21.803889 25324 net.cpp:200] pool1 needs backward computation.
I0428 19:43:21.803894 25324 net.cpp:200] conv1 needs backward computation.
I0428 19:43:21.803896 25324 net.cpp:200] pool0 needs backward computation.
I0428 19:43:21.803900 25324 net.cpp:200] conv0 needs backward computation.
I0428 19:43:21.803902 25324 net.cpp:202] mnist does not need backward computation.
I0428 19:43:21.803905 25324 net.cpp:244] This network produces output loss
I0428 19:43:21.803913 25324 net.cpp:257] Network initialization done.
I0428 19:43:21.804280 25324 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test419.prototxt
I0428 19:43:21.804337 25324 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:21.804427 25324 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:21.804503 25324 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:21.804548 25324 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:21.804560 25324 net.cpp:86] Creating Layer mnist
I0428 19:43:21.804564 25324 net.cpp:382] mnist -> data
I0428 19:43:21.804572 25324 net.cpp:382] mnist -> label
I0428 19:43:21.804656 25324 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:21.806565 25324 net.cpp:124] Setting up mnist
I0428 19:43:21.806596 25324 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:21.806602 25324 net.cpp:131] Top shape: 100 (100)
I0428 19:43:21.806604 25324 net.cpp:139] Memory required for data: 314000
I0428 19:43:21.806608 25324 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:21.806618 25324 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:21.806622 25324 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:21.806627 25324 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:21.806634 25324 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:21.806715 25324 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:21.806723 25324 net.cpp:131] Top shape: 100 (100)
I0428 19:43:21.806727 25324 net.cpp:131] Top shape: 100 (100)
I0428 19:43:21.806730 25324 net.cpp:139] Memory required for data: 314800
I0428 19:43:21.806733 25324 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:21.806741 25324 net.cpp:86] Creating Layer conv0
I0428 19:43:21.806746 25324 net.cpp:408] conv0 <- data
I0428 19:43:21.806751 25324 net.cpp:382] conv0 -> conv0
I0428 19:43:21.808229 25324 net.cpp:124] Setting up conv0
I0428 19:43:21.808248 25324 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:21.808253 25324 net.cpp:139] Memory required for data: 775600
I0428 19:43:21.808264 25324 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:21.808269 25324 net.cpp:86] Creating Layer pool0
I0428 19:43:21.808272 25324 net.cpp:408] pool0 <- conv0
I0428 19:43:21.808277 25324 net.cpp:382] pool0 -> pool0
I0428 19:43:21.808336 25324 net.cpp:124] Setting up pool0
I0428 19:43:21.808346 25324 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:21.808349 25324 net.cpp:139] Memory required for data: 890800
I0428 19:43:21.808352 25324 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:21.808362 25324 net.cpp:86] Creating Layer conv1
I0428 19:43:21.808365 25324 net.cpp:408] conv1 <- pool0
I0428 19:43:21.808372 25324 net.cpp:382] conv1 -> conv1
I0428 19:43:21.809864 25324 net.cpp:124] Setting up conv1
I0428 19:43:21.809892 25324 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:21.809896 25324 net.cpp:139] Memory required for data: 1530800
I0428 19:43:21.809904 25324 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:21.809911 25324 net.cpp:86] Creating Layer pool1
I0428 19:43:21.809916 25324 net.cpp:408] pool1 <- conv1
I0428 19:43:21.809922 25324 net.cpp:382] pool1 -> pool1
I0428 19:43:21.809958 25324 net.cpp:124] Setting up pool1
I0428 19:43:21.809965 25324 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:21.809968 25324 net.cpp:139] Memory required for data: 1690800
I0428 19:43:21.809972 25324 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:21.809976 25324 net.cpp:86] Creating Layer ip1
I0428 19:43:21.809979 25324 net.cpp:408] ip1 <- pool1
I0428 19:43:21.809985 25324 net.cpp:382] ip1 -> ip1
I0428 19:43:21.810143 25324 net.cpp:124] Setting up ip1
I0428 19:43:21.810154 25324 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:21.810168 25324 net.cpp:139] Memory required for data: 1700800
I0428 19:43:21.810175 25324 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:21.810180 25324 net.cpp:86] Creating Layer relu1
I0428 19:43:21.810184 25324 net.cpp:408] relu1 <- ip1
I0428 19:43:21.810190 25324 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:21.810436 25324 net.cpp:124] Setting up relu1
I0428 19:43:21.810444 25324 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:43:21.810448 25324 net.cpp:139] Memory required for data: 1710800
I0428 19:43:21.810451 25324 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:21.810461 25324 net.cpp:86] Creating Layer ip2
I0428 19:43:21.810463 25324 net.cpp:408] ip2 <- ip1
I0428 19:43:21.810468 25324 net.cpp:382] ip2 -> ip2
I0428 19:43:21.810580 25324 net.cpp:124] Setting up ip2
I0428 19:43:21.810587 25324 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:21.810590 25324 net.cpp:139] Memory required for data: 1730800
I0428 19:43:21.810595 25324 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:21.810601 25324 net.cpp:86] Creating Layer relu2
I0428 19:43:21.810605 25324 net.cpp:408] relu2 <- ip2
I0428 19:43:21.810609 25324 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:21.810766 25324 net.cpp:124] Setting up relu2
I0428 19:43:21.810776 25324 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:21.810780 25324 net.cpp:139] Memory required for data: 1750800
I0428 19:43:21.810782 25324 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:21.810789 25324 net.cpp:86] Creating Layer ip3
I0428 19:43:21.810792 25324 net.cpp:408] ip3 <- ip2
I0428 19:43:21.810797 25324 net.cpp:382] ip3 -> ip3
I0428 19:43:21.810923 25324 net.cpp:124] Setting up ip3
I0428 19:43:21.810930 25324 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:21.810933 25324 net.cpp:139] Memory required for data: 1754800
I0428 19:43:21.810942 25324 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:21.810948 25324 net.cpp:86] Creating Layer relu3
I0428 19:43:21.810951 25324 net.cpp:408] relu3 <- ip3
I0428 19:43:21.810955 25324 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:21.811728 25324 net.cpp:124] Setting up relu3
I0428 19:43:21.811740 25324 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:21.811744 25324 net.cpp:139] Memory required for data: 1758800
I0428 19:43:21.811748 25324 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:21.811754 25324 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:21.811758 25324 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:21.811765 25324 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:21.811772 25324 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:21.811822 25324 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:21.811830 25324 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:21.811832 25324 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:21.811836 25324 net.cpp:139] Memory required for data: 1766800
I0428 19:43:21.811839 25324 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:21.811846 25324 net.cpp:86] Creating Layer accuracy
I0428 19:43:21.811848 25324 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:21.811852 25324 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:21.811856 25324 net.cpp:382] accuracy -> accuracy
I0428 19:43:21.811873 25324 net.cpp:124] Setting up accuracy
I0428 19:43:21.811877 25324 net.cpp:131] Top shape: (1)
I0428 19:43:21.811880 25324 net.cpp:139] Memory required for data: 1766804
I0428 19:43:21.811883 25324 layer_factory.hpp:77] Creating layer loss
I0428 19:43:21.811888 25324 net.cpp:86] Creating Layer loss
I0428 19:43:21.811892 25324 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:21.811895 25324 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:21.811900 25324 net.cpp:382] loss -> loss
I0428 19:43:21.811906 25324 layer_factory.hpp:77] Creating layer loss
I0428 19:43:21.812165 25324 net.cpp:124] Setting up loss
I0428 19:43:21.812173 25324 net.cpp:131] Top shape: (1)
I0428 19:43:21.812176 25324 net.cpp:134]     with loss weight 1
I0428 19:43:21.812182 25324 net.cpp:139] Memory required for data: 1766808
I0428 19:43:21.812194 25324 net.cpp:200] loss needs backward computation.
I0428 19:43:21.812198 25324 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:21.812201 25324 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:21.812204 25324 net.cpp:200] relu3 needs backward computation.
I0428 19:43:21.812207 25324 net.cpp:200] ip3 needs backward computation.
I0428 19:43:21.812211 25324 net.cpp:200] relu2 needs backward computation.
I0428 19:43:21.812212 25324 net.cpp:200] ip2 needs backward computation.
I0428 19:43:21.812216 25324 net.cpp:200] relu1 needs backward computation.
I0428 19:43:21.812217 25324 net.cpp:200] ip1 needs backward computation.
I0428 19:43:21.812221 25324 net.cpp:200] pool1 needs backward computation.
I0428 19:43:21.812223 25324 net.cpp:200] conv1 needs backward computation.
I0428 19:43:21.812227 25324 net.cpp:200] pool0 needs backward computation.
I0428 19:43:21.812229 25324 net.cpp:200] conv0 needs backward computation.
I0428 19:43:21.812233 25324 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:21.812237 25324 net.cpp:202] mnist does not need backward computation.
I0428 19:43:21.812240 25324 net.cpp:244] This network produces output accuracy
I0428 19:43:21.812254 25324 net.cpp:244] This network produces output loss
I0428 19:43:21.812265 25324 net.cpp:257] Network initialization done.
I0428 19:43:21.812307 25324 solver.cpp:56] Solver scaffolding done.
I0428 19:43:21.812656 25324 caffe.cpp:248] Starting Optimization
I0428 19:43:21.812662 25324 solver.cpp:273] Solving LeNet
I0428 19:43:21.812665 25324 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:21.813479 25324 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:21.817448 25324 blocking_queue.cpp:49] Waiting for data
I0428 19:43:21.891497 25331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:21.891994 25324 solver.cpp:398]     Test net output #0: accuracy = 0.0962
I0428 19:43:21.892030 25324 solver.cpp:398]     Test net output #1: loss = 2.33471 (* 1 = 2.33471 loss)
I0428 19:43:21.893404 25324 solver.cpp:219] Iteration 0 (0 iter/s, 0.0806964s/100 iters), loss = 2.33771
I0428 19:43:21.893442 25324 solver.cpp:238]     Train net output #0: loss = 2.33771 (* 1 = 2.33771 loss)
I0428 19:43:21.893453 25324 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:21.985532 25324 solver.cpp:219] Iteration 100 (1086.11 iter/s, 0.092072s/100 iters), loss = 0.823622
I0428 19:43:21.985574 25324 solver.cpp:238]     Train net output #0: loss = 0.823622 (* 1 = 0.823622 loss)
I0428 19:43:21.985581 25324 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:22.065807 25324 solver.cpp:219] Iteration 200 (1246.55 iter/s, 0.0802212s/100 iters), loss = 0.414704
I0428 19:43:22.065847 25324 solver.cpp:238]     Train net output #0: loss = 0.414704 (* 1 = 0.414704 loss)
I0428 19:43:22.065855 25324 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:22.146327 25324 solver.cpp:219] Iteration 300 (1242.53 iter/s, 0.0804813s/100 iters), loss = 0.641237
I0428 19:43:22.146366 25324 solver.cpp:238]     Train net output #0: loss = 0.641237 (* 1 = 0.641237 loss)
I0428 19:43:22.146373 25324 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:22.227183 25324 solver.cpp:219] Iteration 400 (1237.36 iter/s, 0.0808172s/100 iters), loss = 0.240493
I0428 19:43:22.227223 25324 solver.cpp:238]     Train net output #0: loss = 0.240493 (* 1 = 0.240493 loss)
I0428 19:43:22.227229 25324 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:22.311134 25324 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:22.357841 25331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:22.358319 25324 solver.cpp:398]     Test net output #0: accuracy = 0.9488
I0428 19:43:22.358353 25324 solver.cpp:398]     Test net output #1: loss = 0.159464 (* 1 = 0.159464 loss)
I0428 19:43:22.359274 25324 solver.cpp:219] Iteration 500 (757.259 iter/s, 0.132055s/100 iters), loss = 0.117038
I0428 19:43:22.359313 25324 solver.cpp:238]     Train net output #0: loss = 0.117038 (* 1 = 0.117038 loss)
I0428 19:43:22.359333 25324 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:22.441095 25324 solver.cpp:219] Iteration 600 (1222.9 iter/s, 0.0817725s/100 iters), loss = 0.113166
I0428 19:43:22.441136 25324 solver.cpp:238]     Train net output #0: loss = 0.113166 (* 1 = 0.113166 loss)
I0428 19:43:22.441143 25324 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:22.533097 25324 solver.cpp:219] Iteration 700 (1087.45 iter/s, 0.0919583s/100 iters), loss = 0.201951
I0428 19:43:22.533140 25324 solver.cpp:238]     Train net output #0: loss = 0.201951 (* 1 = 0.201951 loss)
I0428 19:43:22.533149 25324 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:22.619753 25324 solver.cpp:219] Iteration 800 (1154.67 iter/s, 0.0866047s/100 iters), loss = 0.355801
I0428 19:43:22.619788 25324 solver.cpp:238]     Train net output #0: loss = 0.355801 (* 1 = 0.355801 loss)
I0428 19:43:22.619796 25324 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:22.700892 25324 solver.cpp:219] Iteration 900 (1233.03 iter/s, 0.0811008s/100 iters), loss = 0.149434
I0428 19:43:22.700927 25324 solver.cpp:238]     Train net output #0: loss = 0.149434 (* 1 = 0.149434 loss)
I0428 19:43:22.700932 25324 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:22.727946 25330 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:22.780699 25324 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:22.781617 25324 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:22.782169 25324 solver.cpp:311] Iteration 1000, loss = 0.104382
I0428 19:43:22.782203 25324 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:22.834381 25331 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:22.836061 25324 solver.cpp:398]     Test net output #0: accuracy = 0.965
I0428 19:43:22.836104 25324 solver.cpp:398]     Test net output #1: loss = 0.105234 (* 1 = 0.105234 loss)
I0428 19:43:22.836113 25324 solver.cpp:316] Optimization Done.
I0428 19:43:22.836118 25324 caffe.cpp:259] Optimization Done.
