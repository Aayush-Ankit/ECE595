I0428 19:28:38.689162 21705 caffe.cpp:218] Using GPUs 0
I0428 19:28:38.729416 21705 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:28:39.245524 21705 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test32.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:28:39.245694 21705 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test32.prototxt
I0428 19:28:39.246011 21705 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:28:39.246033 21705 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:28:39.246119 21705 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:39.246214 21705 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:39.246348 21705 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:28:39.246381 21705 net.cpp:86] Creating Layer mnist
I0428 19:28:39.246395 21705 net.cpp:382] mnist -> data
I0428 19:28:39.246426 21705 net.cpp:382] mnist -> label
I0428 19:28:39.247615 21705 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:28:39.250083 21705 net.cpp:124] Setting up mnist
I0428 19:28:39.250107 21705 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:28:39.250116 21705 net.cpp:131] Top shape: 64 (64)
I0428 19:28:39.250123 21705 net.cpp:139] Memory required for data: 200960
I0428 19:28:39.250133 21705 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:39.250151 21705 net.cpp:86] Creating Layer ip1
I0428 19:28:39.250164 21705 net.cpp:408] ip1 <- data
I0428 19:28:39.250182 21705 net.cpp:382] ip1 -> ip1
I0428 19:28:39.250655 21705 net.cpp:124] Setting up ip1
I0428 19:28:39.250669 21705 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:39.250674 21705 net.cpp:139] Memory required for data: 213760
I0428 19:28:39.250695 21705 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:39.250708 21705 net.cpp:86] Creating Layer relu1
I0428 19:28:39.250718 21705 net.cpp:408] relu1 <- ip1
I0428 19:28:39.250727 21705 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:39.535197 21705 net.cpp:124] Setting up relu1
I0428 19:28:39.535228 21705 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:28:39.535234 21705 net.cpp:139] Memory required for data: 226560
I0428 19:28:39.535243 21705 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:39.535260 21705 net.cpp:86] Creating Layer ip2
I0428 19:28:39.535292 21705 net.cpp:408] ip2 <- ip1
I0428 19:28:39.535306 21705 net.cpp:382] ip2 -> ip2
I0428 19:28:39.536353 21705 net.cpp:124] Setting up ip2
I0428 19:28:39.536370 21705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:39.536376 21705 net.cpp:139] Memory required for data: 229120
I0428 19:28:39.536392 21705 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:39.536412 21705 net.cpp:86] Creating Layer relu2
I0428 19:28:39.536418 21705 net.cpp:408] relu2 <- ip2
I0428 19:28:39.536427 21705 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:39.537226 21705 net.cpp:124] Setting up relu2
I0428 19:28:39.537242 21705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:39.537248 21705 net.cpp:139] Memory required for data: 231680
I0428 19:28:39.537256 21705 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:39.537266 21705 net.cpp:86] Creating Layer ip3
I0428 19:28:39.537272 21705 net.cpp:408] ip3 <- ip2
I0428 19:28:39.537281 21705 net.cpp:382] ip3 -> ip3
I0428 19:28:39.537395 21705 net.cpp:124] Setting up ip3
I0428 19:28:39.537405 21705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:39.537410 21705 net.cpp:139] Memory required for data: 234240
I0428 19:28:39.537425 21705 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:39.537436 21705 net.cpp:86] Creating Layer relu3
I0428 19:28:39.537443 21705 net.cpp:408] relu3 <- ip3
I0428 19:28:39.537466 21705 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:39.537624 21705 net.cpp:124] Setting up relu3
I0428 19:28:39.537634 21705 net.cpp:131] Top shape: 64 10 (640)
I0428 19:28:39.537641 21705 net.cpp:139] Memory required for data: 236800
I0428 19:28:39.537645 21705 layer_factory.hpp:77] Creating layer loss
I0428 19:28:39.537654 21705 net.cpp:86] Creating Layer loss
I0428 19:28:39.537659 21705 net.cpp:408] loss <- ip3
I0428 19:28:39.537667 21705 net.cpp:408] loss <- label
I0428 19:28:39.537675 21705 net.cpp:382] loss -> loss
I0428 19:28:39.537700 21705 layer_factory.hpp:77] Creating layer loss
I0428 19:28:39.537937 21705 net.cpp:124] Setting up loss
I0428 19:28:39.537948 21705 net.cpp:131] Top shape: (1)
I0428 19:28:39.537953 21705 net.cpp:134]     with loss weight 1
I0428 19:28:39.537974 21705 net.cpp:139] Memory required for data: 236804
I0428 19:28:39.537981 21705 net.cpp:200] loss needs backward computation.
I0428 19:28:39.537987 21705 net.cpp:200] relu3 needs backward computation.
I0428 19:28:39.537992 21705 net.cpp:200] ip3 needs backward computation.
I0428 19:28:39.537998 21705 net.cpp:200] relu2 needs backward computation.
I0428 19:28:39.538003 21705 net.cpp:200] ip2 needs backward computation.
I0428 19:28:39.538008 21705 net.cpp:200] relu1 needs backward computation.
I0428 19:28:39.538013 21705 net.cpp:200] ip1 needs backward computation.
I0428 19:28:39.538019 21705 net.cpp:202] mnist does not need backward computation.
I0428 19:28:39.538024 21705 net.cpp:244] This network produces output loss
I0428 19:28:39.538036 21705 net.cpp:257] Network initialization done.
I0428 19:28:39.538280 21705 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test32.prototxt
I0428 19:28:39.538310 21705 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:28:39.538384 21705 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "data"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:28:39.538482 21705 layer_factory.hpp:77] Creating layer mnist
I0428 19:28:39.538545 21705 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:28:39.538563 21705 net.cpp:86] Creating Layer mnist
I0428 19:28:39.538571 21705 net.cpp:382] mnist -> data
I0428 19:28:39.538584 21705 net.cpp:382] mnist -> label
I0428 19:28:39.538704 21705 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:28:39.540673 21705 net.cpp:124] Setting up mnist
I0428 19:28:39.540688 21705 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:28:39.540698 21705 net.cpp:131] Top shape: 100 (100)
I0428 19:28:39.540702 21705 net.cpp:139] Memory required for data: 314000
I0428 19:28:39.540709 21705 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:28:39.540740 21705 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:28:39.540746 21705 net.cpp:408] label_mnist_1_split <- label
I0428 19:28:39.540755 21705 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:28:39.540766 21705 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:28:39.540874 21705 net.cpp:124] Setting up label_mnist_1_split
I0428 19:28:39.540884 21705 net.cpp:131] Top shape: 100 (100)
I0428 19:28:39.540889 21705 net.cpp:131] Top shape: 100 (100)
I0428 19:28:39.540895 21705 net.cpp:139] Memory required for data: 314800
I0428 19:28:39.540900 21705 layer_factory.hpp:77] Creating layer ip1
I0428 19:28:39.540927 21705 net.cpp:86] Creating Layer ip1
I0428 19:28:39.540933 21705 net.cpp:408] ip1 <- data
I0428 19:28:39.540941 21705 net.cpp:382] ip1 -> ip1
I0428 19:28:39.541343 21705 net.cpp:124] Setting up ip1
I0428 19:28:39.541353 21705 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:39.541358 21705 net.cpp:139] Memory required for data: 334800
I0428 19:28:39.541371 21705 layer_factory.hpp:77] Creating layer relu1
I0428 19:28:39.541380 21705 net.cpp:86] Creating Layer relu1
I0428 19:28:39.541386 21705 net.cpp:408] relu1 <- ip1
I0428 19:28:39.541393 21705 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:28:39.542304 21705 net.cpp:124] Setting up relu1
I0428 19:28:39.542320 21705 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:28:39.542325 21705 net.cpp:139] Memory required for data: 354800
I0428 19:28:39.542331 21705 layer_factory.hpp:77] Creating layer ip2
I0428 19:28:39.542343 21705 net.cpp:86] Creating Layer ip2
I0428 19:28:39.542349 21705 net.cpp:408] ip2 <- ip1
I0428 19:28:39.542358 21705 net.cpp:382] ip2 -> ip2
I0428 19:28:39.542464 21705 net.cpp:124] Setting up ip2
I0428 19:28:39.542474 21705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:39.542479 21705 net.cpp:139] Memory required for data: 358800
I0428 19:28:39.542491 21705 layer_factory.hpp:77] Creating layer relu2
I0428 19:28:39.542500 21705 net.cpp:86] Creating Layer relu2
I0428 19:28:39.542506 21705 net.cpp:408] relu2 <- ip2
I0428 19:28:39.542513 21705 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:28:39.542677 21705 net.cpp:124] Setting up relu2
I0428 19:28:39.542688 21705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:39.542693 21705 net.cpp:139] Memory required for data: 362800
I0428 19:28:39.542698 21705 layer_factory.hpp:77] Creating layer ip3
I0428 19:28:39.542708 21705 net.cpp:86] Creating Layer ip3
I0428 19:28:39.542713 21705 net.cpp:408] ip3 <- ip2
I0428 19:28:39.542722 21705 net.cpp:382] ip3 -> ip3
I0428 19:28:39.542840 21705 net.cpp:124] Setting up ip3
I0428 19:28:39.542850 21705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:39.542855 21705 net.cpp:139] Memory required for data: 366800
I0428 19:28:39.542868 21705 layer_factory.hpp:77] Creating layer relu3
I0428 19:28:39.542876 21705 net.cpp:86] Creating Layer relu3
I0428 19:28:39.542883 21705 net.cpp:408] relu3 <- ip3
I0428 19:28:39.542891 21705 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:28:39.543159 21705 net.cpp:124] Setting up relu3
I0428 19:28:39.543169 21705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:39.543174 21705 net.cpp:139] Memory required for data: 370800
I0428 19:28:39.543180 21705 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:28:39.543190 21705 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:28:39.543196 21705 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:28:39.543205 21705 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:28:39.543215 21705 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:28:39.543257 21705 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:28:39.543267 21705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:39.543273 21705 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:28:39.543278 21705 net.cpp:139] Memory required for data: 378800
I0428 19:28:39.543284 21705 layer_factory.hpp:77] Creating layer accuracy
I0428 19:28:39.543292 21705 net.cpp:86] Creating Layer accuracy
I0428 19:28:39.543299 21705 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:28:39.543308 21705 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:28:39.543314 21705 net.cpp:382] accuracy -> accuracy
I0428 19:28:39.543331 21705 net.cpp:124] Setting up accuracy
I0428 19:28:39.543339 21705 net.cpp:131] Top shape: (1)
I0428 19:28:39.543344 21705 net.cpp:139] Memory required for data: 378804
I0428 19:28:39.543349 21705 layer_factory.hpp:77] Creating layer loss
I0428 19:28:39.543357 21705 net.cpp:86] Creating Layer loss
I0428 19:28:39.543364 21705 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:28:39.543370 21705 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:28:39.543377 21705 net.cpp:382] loss -> loss
I0428 19:28:39.543387 21705 layer_factory.hpp:77] Creating layer loss
I0428 19:28:39.543629 21705 net.cpp:124] Setting up loss
I0428 19:28:39.543640 21705 net.cpp:131] Top shape: (1)
I0428 19:28:39.543647 21705 net.cpp:134]     with loss weight 1
I0428 19:28:39.543655 21705 net.cpp:139] Memory required for data: 378808
I0428 19:28:39.543661 21705 net.cpp:200] loss needs backward computation.
I0428 19:28:39.543668 21705 net.cpp:202] accuracy does not need backward computation.
I0428 19:28:39.543673 21705 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:28:39.543679 21705 net.cpp:200] relu3 needs backward computation.
I0428 19:28:39.543684 21705 net.cpp:200] ip3 needs backward computation.
I0428 19:28:39.543689 21705 net.cpp:200] relu2 needs backward computation.
I0428 19:28:39.543694 21705 net.cpp:200] ip2 needs backward computation.
I0428 19:28:39.543699 21705 net.cpp:200] relu1 needs backward computation.
I0428 19:28:39.543704 21705 net.cpp:200] ip1 needs backward computation.
I0428 19:28:39.543709 21705 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:28:39.543715 21705 net.cpp:202] mnist does not need backward computation.
I0428 19:28:39.543720 21705 net.cpp:244] This network produces output accuracy
I0428 19:28:39.543727 21705 net.cpp:244] This network produces output loss
I0428 19:28:39.543745 21705 net.cpp:257] Network initialization done.
I0428 19:28:39.543782 21705 solver.cpp:56] Solver scaffolding done.
I0428 19:28:39.543998 21705 caffe.cpp:248] Starting Optimization
I0428 19:28:39.544005 21705 solver.cpp:273] Solving LeNet
I0428 19:28:39.544009 21705 solver.cpp:274] Learning Rate Policy: inv
I0428 19:28:39.544893 21705 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:28:39.545667 21705 blocking_queue.cpp:49] Waiting for data
I0428 19:28:39.622514 21718 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:39.622900 21705 solver.cpp:398]     Test net output #0: accuracy = 0.1059
I0428 19:28:39.622920 21705 solver.cpp:398]     Test net output #1: loss = 2.30202 (* 1 = 2.30202 loss)
I0428 19:28:39.624172 21705 solver.cpp:219] Iteration 0 (0 iter/s, 0.0801209s/100 iters), loss = 2.30632
I0428 19:28:39.624199 21705 solver.cpp:238]     Train net output #0: loss = 2.30632 (* 1 = 2.30632 loss)
I0428 19:28:39.624217 21705 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:28:39.679024 21705 solver.cpp:219] Iteration 100 (1824.29 iter/s, 0.0548157s/100 iters), loss = 1.23642
I0428 19:28:39.679052 21705 solver.cpp:238]     Train net output #0: loss = 1.23642 (* 1 = 1.23642 loss)
I0428 19:28:39.679065 21705 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:28:39.725394 21705 solver.cpp:219] Iteration 200 (2158.1 iter/s, 0.046337s/100 iters), loss = 0.544081
I0428 19:28:39.725419 21705 solver.cpp:238]     Train net output #0: loss = 0.544081 (* 1 = 0.544081 loss)
I0428 19:28:39.725445 21705 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:28:39.768820 21705 solver.cpp:219] Iteration 300 (2304.41 iter/s, 0.043395s/100 iters), loss = 0.37962
I0428 19:28:39.768844 21705 solver.cpp:238]     Train net output #0: loss = 0.37962 (* 1 = 0.37962 loss)
I0428 19:28:39.768869 21705 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:28:39.811905 21705 solver.cpp:219] Iteration 400 (2322.55 iter/s, 0.0430561s/100 iters), loss = 0.312508
I0428 19:28:39.811929 21705 solver.cpp:238]     Train net output #0: loss = 0.312508 (* 1 = 0.312508 loss)
I0428 19:28:39.811954 21705 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:28:39.854568 21705 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:28:39.911559 21718 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:39.911965 21705 solver.cpp:398]     Test net output #0: accuracy = 0.9027
I0428 19:28:39.911985 21705 solver.cpp:398]     Test net output #1: loss = 0.337517 (* 1 = 0.337517 loss)
I0428 19:28:39.912454 21705 solver.cpp:219] Iteration 500 (994.848 iter/s, 0.100518s/100 iters), loss = 0.393782
I0428 19:28:39.912478 21705 solver.cpp:238]     Train net output #0: loss = 0.393782 (* 1 = 0.393782 loss)
I0428 19:28:39.912492 21705 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:28:39.969686 21705 solver.cpp:219] Iteration 600 (1748.17 iter/s, 0.0572027s/100 iters), loss = 0.284327
I0428 19:28:39.969712 21705 solver.cpp:238]     Train net output #0: loss = 0.284327 (* 1 = 0.284327 loss)
I0428 19:28:39.969738 21705 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:28:40.016469 21705 solver.cpp:219] Iteration 700 (2138.91 iter/s, 0.0467528s/100 iters), loss = 0.460562
I0428 19:28:40.016494 21705 solver.cpp:238]     Train net output #0: loss = 0.460562 (* 1 = 0.460562 loss)
I0428 19:28:40.016522 21705 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:28:40.058989 21705 solver.cpp:219] Iteration 800 (2353.56 iter/s, 0.0424888s/100 iters), loss = 0.378046
I0428 19:28:40.059015 21705 solver.cpp:238]     Train net output #0: loss = 0.378046 (* 1 = 0.378046 loss)
I0428 19:28:40.059047 21705 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:28:40.067597 21705 blocking_queue.cpp:49] Waiting for data
I0428 19:28:40.102170 21705 solver.cpp:219] Iteration 900 (2317.48 iter/s, 0.0431503s/100 iters), loss = 0.30897
I0428 19:28:40.102197 21705 solver.cpp:238]     Train net output #0: loss = 0.30897 (* 1 = 0.30897 loss)
I0428 19:28:40.102226 21705 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:28:40.117005 21717 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:40.144184 21705 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:28:40.145185 21705 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:28:40.145879 21705 solver.cpp:311] Iteration 1000, loss = 0.35149
I0428 19:28:40.145894 21705 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:28:40.209556 21718 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:28:40.209930 21705 solver.cpp:398]     Test net output #0: accuracy = 0.9262
I0428 19:28:40.209952 21705 solver.cpp:398]     Test net output #1: loss = 0.245717 (* 1 = 0.245717 loss)
I0428 19:28:40.209960 21705 solver.cpp:316] Optimization Done.
I0428 19:28:40.209966 21705 caffe.cpp:259] Optimization Done.
