I0428 19:45:47.943541 25891 caffe.cpp:218] Using GPUs 0
I0428 19:45:47.980624 25891 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:45:48.489315 25891 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test479.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:45:48.489462 25891 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test479.prototxt
I0428 19:45:48.489845 25891 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:45:48.489861 25891 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:45:48.489954 25891 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:48.490030 25891 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:48.490128 25891 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:45:48.490152 25891 net.cpp:86] Creating Layer mnist
I0428 19:45:48.490160 25891 net.cpp:382] mnist -> data
I0428 19:45:48.490183 25891 net.cpp:382] mnist -> label
I0428 19:45:48.491286 25891 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:45:48.493746 25891 net.cpp:124] Setting up mnist
I0428 19:45:48.493767 25891 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:45:48.493772 25891 net.cpp:131] Top shape: 64 (64)
I0428 19:45:48.493777 25891 net.cpp:139] Memory required for data: 200960
I0428 19:45:48.493783 25891 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:48.493800 25891 net.cpp:86] Creating Layer conv0
I0428 19:45:48.493806 25891 net.cpp:408] conv0 <- data
I0428 19:45:48.493818 25891 net.cpp:382] conv0 -> conv0
I0428 19:45:48.779358 25891 net.cpp:124] Setting up conv0
I0428 19:45:48.779386 25891 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:45:48.779391 25891 net.cpp:139] Memory required for data: 495872
I0428 19:45:48.779424 25891 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:48.779438 25891 net.cpp:86] Creating Layer pool0
I0428 19:45:48.779443 25891 net.cpp:408] pool0 <- conv0
I0428 19:45:48.779448 25891 net.cpp:382] pool0 -> pool0
I0428 19:45:48.779496 25891 net.cpp:124] Setting up pool0
I0428 19:45:48.779502 25891 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:45:48.779505 25891 net.cpp:139] Memory required for data: 569600
I0428 19:45:48.779508 25891 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:48.779520 25891 net.cpp:86] Creating Layer conv1
I0428 19:45:48.779522 25891 net.cpp:408] conv1 <- pool0
I0428 19:45:48.779527 25891 net.cpp:382] conv1 -> conv1
I0428 19:45:48.782340 25891 net.cpp:124] Setting up conv1
I0428 19:45:48.782354 25891 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:45:48.782358 25891 net.cpp:139] Memory required for data: 2208000
I0428 19:45:48.782366 25891 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:48.782373 25891 net.cpp:86] Creating Layer pool1
I0428 19:45:48.782377 25891 net.cpp:408] pool1 <- conv1
I0428 19:45:48.782382 25891 net.cpp:382] pool1 -> pool1
I0428 19:45:48.782435 25891 net.cpp:124] Setting up pool1
I0428 19:45:48.782440 25891 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:45:48.782444 25891 net.cpp:139] Memory required for data: 2617600
I0428 19:45:48.782447 25891 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:48.782454 25891 net.cpp:86] Creating Layer ip1
I0428 19:45:48.782457 25891 net.cpp:408] ip1 <- pool1
I0428 19:45:48.782461 25891 net.cpp:382] ip1 -> ip1
I0428 19:45:48.783851 25891 net.cpp:124] Setting up ip1
I0428 19:45:48.783864 25891 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:45:48.783867 25891 net.cpp:139] Memory required for data: 2630400
I0428 19:45:48.783875 25891 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:48.783881 25891 net.cpp:86] Creating Layer relu1
I0428 19:45:48.783885 25891 net.cpp:408] relu1 <- ip1
I0428 19:45:48.783888 25891 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:48.784054 25891 net.cpp:124] Setting up relu1
I0428 19:45:48.784063 25891 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:45:48.784066 25891 net.cpp:139] Memory required for data: 2643200
I0428 19:45:48.784070 25891 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:48.784076 25891 net.cpp:86] Creating Layer ip2
I0428 19:45:48.784080 25891 net.cpp:408] ip2 <- ip1
I0428 19:45:48.784085 25891 net.cpp:382] ip2 -> ip2
I0428 19:45:48.784196 25891 net.cpp:124] Setting up ip2
I0428 19:45:48.784204 25891 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:48.784207 25891 net.cpp:139] Memory required for data: 2645760
I0428 19:45:48.784212 25891 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:48.784219 25891 net.cpp:86] Creating Layer relu2
I0428 19:45:48.784222 25891 net.cpp:408] relu2 <- ip2
I0428 19:45:48.784226 25891 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:48.785018 25891 net.cpp:124] Setting up relu2
I0428 19:45:48.785032 25891 net.cpp:131] Top shape: 64 10 (640)
I0428 19:45:48.785051 25891 net.cpp:139] Memory required for data: 2648320
I0428 19:45:48.785055 25891 layer_factory.hpp:77] Creating layer loss
I0428 19:45:48.785064 25891 net.cpp:86] Creating Layer loss
I0428 19:45:48.785068 25891 net.cpp:408] loss <- ip2
I0428 19:45:48.785073 25891 net.cpp:408] loss <- label
I0428 19:45:48.785079 25891 net.cpp:382] loss -> loss
I0428 19:45:48.785099 25891 layer_factory.hpp:77] Creating layer loss
I0428 19:45:48.785367 25891 net.cpp:124] Setting up loss
I0428 19:45:48.785377 25891 net.cpp:131] Top shape: (1)
I0428 19:45:48.785380 25891 net.cpp:134]     with loss weight 1
I0428 19:45:48.785394 25891 net.cpp:139] Memory required for data: 2648324
I0428 19:45:48.785398 25891 net.cpp:200] loss needs backward computation.
I0428 19:45:48.785401 25891 net.cpp:200] relu2 needs backward computation.
I0428 19:45:48.785404 25891 net.cpp:200] ip2 needs backward computation.
I0428 19:45:48.785406 25891 net.cpp:200] relu1 needs backward computation.
I0428 19:45:48.785409 25891 net.cpp:200] ip1 needs backward computation.
I0428 19:45:48.785423 25891 net.cpp:200] pool1 needs backward computation.
I0428 19:45:48.785425 25891 net.cpp:200] conv1 needs backward computation.
I0428 19:45:48.785429 25891 net.cpp:200] pool0 needs backward computation.
I0428 19:45:48.785430 25891 net.cpp:200] conv0 needs backward computation.
I0428 19:45:48.785434 25891 net.cpp:202] mnist does not need backward computation.
I0428 19:45:48.785436 25891 net.cpp:244] This network produces output loss
I0428 19:45:48.785445 25891 net.cpp:257] Network initialization done.
I0428 19:45:48.785787 25891 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test479.prototxt
I0428 19:45:48.785830 25891 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:45:48.785931 25891 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:45:48.786012 25891 layer_factory.hpp:77] Creating layer mnist
I0428 19:45:48.786056 25891 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:45:48.786068 25891 net.cpp:86] Creating Layer mnist
I0428 19:45:48.786073 25891 net.cpp:382] mnist -> data
I0428 19:45:48.786082 25891 net.cpp:382] mnist -> label
I0428 19:45:48.786168 25891 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:45:48.787433 25891 net.cpp:124] Setting up mnist
I0428 19:45:48.787446 25891 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:45:48.787451 25891 net.cpp:131] Top shape: 100 (100)
I0428 19:45:48.787453 25891 net.cpp:139] Memory required for data: 314000
I0428 19:45:48.787456 25891 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:45:48.787467 25891 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:45:48.787469 25891 net.cpp:408] label_mnist_1_split <- label
I0428 19:45:48.787475 25891 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:45:48.787482 25891 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:45:48.787566 25891 net.cpp:124] Setting up label_mnist_1_split
I0428 19:45:48.787585 25891 net.cpp:131] Top shape: 100 (100)
I0428 19:45:48.787588 25891 net.cpp:131] Top shape: 100 (100)
I0428 19:45:48.787591 25891 net.cpp:139] Memory required for data: 314800
I0428 19:45:48.787593 25891 layer_factory.hpp:77] Creating layer conv0
I0428 19:45:48.787603 25891 net.cpp:86] Creating Layer conv0
I0428 19:45:48.787606 25891 net.cpp:408] conv0 <- data
I0428 19:45:48.787611 25891 net.cpp:382] conv0 -> conv0
I0428 19:45:48.789463 25891 net.cpp:124] Setting up conv0
I0428 19:45:48.789487 25891 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:45:48.789491 25891 net.cpp:139] Memory required for data: 775600
I0428 19:45:48.789500 25891 layer_factory.hpp:77] Creating layer pool0
I0428 19:45:48.789522 25891 net.cpp:86] Creating Layer pool0
I0428 19:45:48.789525 25891 net.cpp:408] pool0 <- conv0
I0428 19:45:48.789531 25891 net.cpp:382] pool0 -> pool0
I0428 19:45:48.789583 25891 net.cpp:124] Setting up pool0
I0428 19:45:48.789590 25891 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:45:48.789593 25891 net.cpp:139] Memory required for data: 890800
I0428 19:45:48.789597 25891 layer_factory.hpp:77] Creating layer conv1
I0428 19:45:48.789608 25891 net.cpp:86] Creating Layer conv1
I0428 19:45:48.789610 25891 net.cpp:408] conv1 <- pool0
I0428 19:45:48.789616 25891 net.cpp:382] conv1 -> conv1
I0428 19:45:48.791327 25891 net.cpp:124] Setting up conv1
I0428 19:45:48.791340 25891 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:45:48.791354 25891 net.cpp:139] Memory required for data: 3450800
I0428 19:45:48.791363 25891 layer_factory.hpp:77] Creating layer pool1
I0428 19:45:48.791370 25891 net.cpp:86] Creating Layer pool1
I0428 19:45:48.791374 25891 net.cpp:408] pool1 <- conv1
I0428 19:45:48.791379 25891 net.cpp:382] pool1 -> pool1
I0428 19:45:48.791435 25891 net.cpp:124] Setting up pool1
I0428 19:45:48.791441 25891 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:45:48.791445 25891 net.cpp:139] Memory required for data: 4090800
I0428 19:45:48.791447 25891 layer_factory.hpp:77] Creating layer ip1
I0428 19:45:48.791453 25891 net.cpp:86] Creating Layer ip1
I0428 19:45:48.791456 25891 net.cpp:408] ip1 <- pool1
I0428 19:45:48.791474 25891 net.cpp:382] ip1 -> ip1
I0428 19:45:48.792140 25891 net.cpp:124] Setting up ip1
I0428 19:45:48.792147 25891 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:45:48.792150 25891 net.cpp:139] Memory required for data: 4110800
I0428 19:45:48.792157 25891 layer_factory.hpp:77] Creating layer relu1
I0428 19:45:48.792161 25891 net.cpp:86] Creating Layer relu1
I0428 19:45:48.792167 25891 net.cpp:408] relu1 <- ip1
I0428 19:45:48.792171 25891 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:45:48.792426 25891 net.cpp:124] Setting up relu1
I0428 19:45:48.792436 25891 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:45:48.792439 25891 net.cpp:139] Memory required for data: 4130800
I0428 19:45:48.792443 25891 layer_factory.hpp:77] Creating layer ip2
I0428 19:45:48.792451 25891 net.cpp:86] Creating Layer ip2
I0428 19:45:48.792455 25891 net.cpp:408] ip2 <- ip1
I0428 19:45:48.792460 25891 net.cpp:382] ip2 -> ip2
I0428 19:45:48.792578 25891 net.cpp:124] Setting up ip2
I0428 19:45:48.792587 25891 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:48.792589 25891 net.cpp:139] Memory required for data: 4134800
I0428 19:45:48.792594 25891 layer_factory.hpp:77] Creating layer relu2
I0428 19:45:48.792600 25891 net.cpp:86] Creating Layer relu2
I0428 19:45:48.792603 25891 net.cpp:408] relu2 <- ip2
I0428 19:45:48.792609 25891 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:45:48.792803 25891 net.cpp:124] Setting up relu2
I0428 19:45:48.792817 25891 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:48.792821 25891 net.cpp:139] Memory required for data: 4138800
I0428 19:45:48.792825 25891 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:45:48.792834 25891 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:45:48.792836 25891 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:45:48.792841 25891 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:45:48.792858 25891 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:45:48.792898 25891 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:45:48.792906 25891 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:48.792910 25891 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:45:48.792913 25891 net.cpp:139] Memory required for data: 4146800
I0428 19:45:48.792917 25891 layer_factory.hpp:77] Creating layer accuracy
I0428 19:45:48.792922 25891 net.cpp:86] Creating Layer accuracy
I0428 19:45:48.792927 25891 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:45:48.792937 25891 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:45:48.792943 25891 net.cpp:382] accuracy -> accuracy
I0428 19:45:48.792950 25891 net.cpp:124] Setting up accuracy
I0428 19:45:48.792955 25891 net.cpp:131] Top shape: (1)
I0428 19:45:48.792959 25891 net.cpp:139] Memory required for data: 4146804
I0428 19:45:48.792963 25891 layer_factory.hpp:77] Creating layer loss
I0428 19:45:48.792968 25891 net.cpp:86] Creating Layer loss
I0428 19:45:48.792970 25891 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:45:48.792975 25891 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:45:48.792979 25891 net.cpp:382] loss -> loss
I0428 19:45:48.792987 25891 layer_factory.hpp:77] Creating layer loss
I0428 19:45:48.793277 25891 net.cpp:124] Setting up loss
I0428 19:45:48.793285 25891 net.cpp:131] Top shape: (1)
I0428 19:45:48.793288 25891 net.cpp:134]     with loss weight 1
I0428 19:45:48.793294 25891 net.cpp:139] Memory required for data: 4146808
I0428 19:45:48.793298 25891 net.cpp:200] loss needs backward computation.
I0428 19:45:48.793301 25891 net.cpp:202] accuracy does not need backward computation.
I0428 19:45:48.793305 25891 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:45:48.793308 25891 net.cpp:200] relu2 needs backward computation.
I0428 19:45:48.793310 25891 net.cpp:200] ip2 needs backward computation.
I0428 19:45:48.793314 25891 net.cpp:200] relu1 needs backward computation.
I0428 19:45:48.793318 25891 net.cpp:200] ip1 needs backward computation.
I0428 19:45:48.793320 25891 net.cpp:200] pool1 needs backward computation.
I0428 19:45:48.793323 25891 net.cpp:200] conv1 needs backward computation.
I0428 19:45:48.793326 25891 net.cpp:200] pool0 needs backward computation.
I0428 19:45:48.793329 25891 net.cpp:200] conv0 needs backward computation.
I0428 19:45:48.793349 25891 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:45:48.793352 25891 net.cpp:202] mnist does not need backward computation.
I0428 19:45:48.793355 25891 net.cpp:244] This network produces output accuracy
I0428 19:45:48.793359 25891 net.cpp:244] This network produces output loss
I0428 19:45:48.793371 25891 net.cpp:257] Network initialization done.
I0428 19:45:48.793409 25891 solver.cpp:56] Solver scaffolding done.
I0428 19:45:48.793725 25891 caffe.cpp:248] Starting Optimization
I0428 19:45:48.793732 25891 solver.cpp:273] Solving LeNet
I0428 19:45:48.793735 25891 solver.cpp:274] Learning Rate Policy: inv
I0428 19:45:48.794534 25891 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:45:48.798503 25891 blocking_queue.cpp:49] Waiting for data
I0428 19:45:48.870076 25898 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:48.870632 25891 solver.cpp:398]     Test net output #0: accuracy = 0.1075
I0428 19:45:48.870652 25891 solver.cpp:398]     Test net output #1: loss = 2.29047 (* 1 = 2.29047 loss)
I0428 19:45:48.874398 25891 solver.cpp:219] Iteration 0 (0 iter/s, 0.0806238s/100 iters), loss = 2.28957
I0428 19:45:48.874423 25891 solver.cpp:238]     Train net output #0: loss = 2.28957 (* 1 = 2.28957 loss)
I0428 19:45:48.874434 25891 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:45:49.046919 25891 solver.cpp:219] Iteration 100 (579.807 iter/s, 0.172471s/100 iters), loss = 0.565221
I0428 19:45:49.046970 25891 solver.cpp:238]     Train net output #0: loss = 0.565221 (* 1 = 0.565221 loss)
I0428 19:45:49.046983 25891 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:45:49.228301 25891 solver.cpp:219] Iteration 200 (551.528 iter/s, 0.181315s/100 iters), loss = 0.360596
I0428 19:45:49.228375 25891 solver.cpp:238]     Train net output #0: loss = 0.360596 (* 1 = 0.360596 loss)
I0428 19:45:49.228389 25891 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:45:49.409909 25891 solver.cpp:219] Iteration 300 (550.902 iter/s, 0.18152s/100 iters), loss = 0.605646
I0428 19:45:49.409958 25891 solver.cpp:238]     Train net output #0: loss = 0.605646 (* 1 = 0.605646 loss)
I0428 19:45:49.409970 25891 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:45:49.588078 25891 solver.cpp:219] Iteration 400 (561.469 iter/s, 0.178104s/100 iters), loss = 0.367667
I0428 19:45:49.588126 25891 solver.cpp:238]     Train net output #0: loss = 0.367667 (* 1 = 0.367667 loss)
I0428 19:45:49.588140 25891 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:45:49.761798 25891 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:45:49.836521 25898 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:49.837136 25891 solver.cpp:398]     Test net output #0: accuracy = 0.8672
I0428 19:45:49.837169 25891 solver.cpp:398]     Test net output #1: loss = 0.358618 (* 1 = 0.358618 loss)
I0428 19:45:49.838759 25891 solver.cpp:219] Iteration 500 (399.015 iter/s, 0.250617s/100 iters), loss = 0.458272
I0428 19:45:49.838812 25891 solver.cpp:238]     Train net output #0: loss = 0.458272 (* 1 = 0.458272 loss)
I0428 19:45:49.838830 25891 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:45:49.988307 25891 solver.cpp:219] Iteration 600 (668.966 iter/s, 0.149484s/100 iters), loss = 0.297922
I0428 19:45:49.988340 25891 solver.cpp:238]     Train net output #0: loss = 0.297922 (* 1 = 0.297922 loss)
I0428 19:45:49.988348 25891 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:45:50.146271 25891 solver.cpp:219] Iteration 700 (633.26 iter/s, 0.157913s/100 iters), loss = 0.352582
I0428 19:45:50.146322 25891 solver.cpp:238]     Train net output #0: loss = 0.352582 (* 1 = 0.352582 loss)
I0428 19:45:50.146334 25891 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:45:50.319712 25891 solver.cpp:219] Iteration 800 (576.783 iter/s, 0.173375s/100 iters), loss = 0.702247
I0428 19:45:50.319764 25891 solver.cpp:238]     Train net output #0: loss = 0.702247 (* 1 = 0.702247 loss)
I0428 19:45:50.319777 25891 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:45:50.502737 25891 solver.cpp:219] Iteration 900 (546.576 iter/s, 0.182957s/100 iters), loss = 0.383834
I0428 19:45:50.502790 25891 solver.cpp:238]     Train net output #0: loss = 0.383834 (* 1 = 0.383834 loss)
I0428 19:45:50.502804 25891 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:45:50.562806 25897 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:50.684248 25891 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:45:50.687983 25891 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:45:50.690107 25891 solver.cpp:311] Iteration 1000, loss = 0.343898
I0428 19:45:50.690141 25891 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:45:50.766804 25898 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:45:50.767465 25891 solver.cpp:398]     Test net output #0: accuracy = 0.8826
I0428 19:45:50.767498 25891 solver.cpp:398]     Test net output #1: loss = 0.316728 (* 1 = 0.316728 loss)
I0428 19:45:50.767506 25891 solver.cpp:316] Optimization Done.
I0428 19:45:50.767511 25891 caffe.cpp:259] Optimization Done.
