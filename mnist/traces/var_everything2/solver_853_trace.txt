I0428 19:59:37.799579 29286 caffe.cpp:218] Using GPUs 0
I0428 19:59:37.831321 29286 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:38.292665 29286 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test853.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:38.292793 29286 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test853.prototxt
I0428 19:59:38.293215 29286 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:38.293258 29286 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:38.293344 29286 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:38.293401 29286 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:38.293484 29286 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:38.293503 29286 net.cpp:86] Creating Layer mnist
I0428 19:59:38.293509 29286 net.cpp:382] mnist -> data
I0428 19:59:38.293527 29286 net.cpp:382] mnist -> label
I0428 19:59:38.294495 29286 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:38.296665 29286 net.cpp:124] Setting up mnist
I0428 19:59:38.296710 29286 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:38.296715 29286 net.cpp:131] Top shape: 64 (64)
I0428 19:59:38.296718 29286 net.cpp:139] Memory required for data: 200960
I0428 19:59:38.296725 29286 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:38.296737 29286 net.cpp:86] Creating Layer conv0
I0428 19:59:38.296754 29286 net.cpp:408] conv0 <- data
I0428 19:59:38.296764 29286 net.cpp:382] conv0 -> conv0
I0428 19:59:38.525807 29286 net.cpp:124] Setting up conv0
I0428 19:59:38.525849 29286 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:38.525853 29286 net.cpp:139] Memory required for data: 1675520
I0428 19:59:38.525867 29286 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:38.525880 29286 net.cpp:86] Creating Layer pool0
I0428 19:59:38.525884 29286 net.cpp:408] pool0 <- conv0
I0428 19:59:38.525889 29286 net.cpp:382] pool0 -> pool0
I0428 19:59:38.525964 29286 net.cpp:124] Setting up pool0
I0428 19:59:38.525969 29286 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:38.525971 29286 net.cpp:139] Memory required for data: 2044160
I0428 19:59:38.525974 29286 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:38.525985 29286 net.cpp:86] Creating Layer conv1
I0428 19:59:38.525987 29286 net.cpp:408] conv1 <- pool0
I0428 19:59:38.525991 29286 net.cpp:382] conv1 -> conv1
I0428 19:59:38.528754 29286 net.cpp:124] Setting up conv1
I0428 19:59:38.528784 29286 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:38.528787 29286 net.cpp:139] Memory required for data: 2208000
I0428 19:59:38.528795 29286 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:38.528802 29286 net.cpp:86] Creating Layer pool1
I0428 19:59:38.528806 29286 net.cpp:408] pool1 <- conv1
I0428 19:59:38.528815 29286 net.cpp:382] pool1 -> pool1
I0428 19:59:38.528884 29286 net.cpp:124] Setting up pool1
I0428 19:59:38.528904 29286 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:38.528908 29286 net.cpp:139] Memory required for data: 2248960
I0428 19:59:38.528910 29286 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:38.528933 29286 net.cpp:86] Creating Layer ip1
I0428 19:59:38.528936 29286 net.cpp:408] ip1 <- pool1
I0428 19:59:38.528941 29286 net.cpp:382] ip1 -> ip1
I0428 19:59:38.529933 29286 net.cpp:124] Setting up ip1
I0428 19:59:38.529945 29286 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:38.529964 29286 net.cpp:139] Memory required for data: 2261760
I0428 19:59:38.529973 29286 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:38.529979 29286 net.cpp:86] Creating Layer relu1
I0428 19:59:38.529983 29286 net.cpp:408] relu1 <- ip1
I0428 19:59:38.529988 29286 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:38.530199 29286 net.cpp:124] Setting up relu1
I0428 19:59:38.530207 29286 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:59:38.530211 29286 net.cpp:139] Memory required for data: 2274560
I0428 19:59:38.530215 29286 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:38.530221 29286 net.cpp:86] Creating Layer ip2
I0428 19:59:38.530225 29286 net.cpp:408] ip2 <- ip1
I0428 19:59:38.530230 29286 net.cpp:382] ip2 -> ip2
I0428 19:59:38.530356 29286 net.cpp:124] Setting up ip2
I0428 19:59:38.530364 29286 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:38.530366 29286 net.cpp:139] Memory required for data: 2280960
I0428 19:59:38.530371 29286 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:38.530377 29286 net.cpp:86] Creating Layer relu2
I0428 19:59:38.530380 29286 net.cpp:408] relu2 <- ip2
I0428 19:59:38.530385 29286 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:38.531175 29286 net.cpp:124] Setting up relu2
I0428 19:59:38.531188 29286 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:38.531206 29286 net.cpp:139] Memory required for data: 2287360
I0428 19:59:38.531210 29286 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:38.531219 29286 net.cpp:86] Creating Layer ip3
I0428 19:59:38.531222 29286 net.cpp:408] ip3 <- ip2
I0428 19:59:38.531229 29286 net.cpp:382] ip3 -> ip3
I0428 19:59:38.531332 29286 net.cpp:124] Setting up ip3
I0428 19:59:38.531339 29286 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:38.531342 29286 net.cpp:139] Memory required for data: 2289920
I0428 19:59:38.531350 29286 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:38.531355 29286 net.cpp:86] Creating Layer relu3
I0428 19:59:38.531358 29286 net.cpp:408] relu3 <- ip3
I0428 19:59:38.531363 29286 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:38.531575 29286 net.cpp:124] Setting up relu3
I0428 19:59:38.531584 29286 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:38.531587 29286 net.cpp:139] Memory required for data: 2292480
I0428 19:59:38.531590 29286 layer_factory.hpp:77] Creating layer loss
I0428 19:59:38.531595 29286 net.cpp:86] Creating Layer loss
I0428 19:59:38.531599 29286 net.cpp:408] loss <- ip3
I0428 19:59:38.531604 29286 net.cpp:408] loss <- label
I0428 19:59:38.531610 29286 net.cpp:382] loss -> loss
I0428 19:59:38.531626 29286 layer_factory.hpp:77] Creating layer loss
I0428 19:59:38.531863 29286 net.cpp:124] Setting up loss
I0428 19:59:38.531872 29286 net.cpp:131] Top shape: (1)
I0428 19:59:38.531875 29286 net.cpp:134]     with loss weight 1
I0428 19:59:38.531904 29286 net.cpp:139] Memory required for data: 2292484
I0428 19:59:38.531908 29286 net.cpp:200] loss needs backward computation.
I0428 19:59:38.531911 29286 net.cpp:200] relu3 needs backward computation.
I0428 19:59:38.531913 29286 net.cpp:200] ip3 needs backward computation.
I0428 19:59:38.531916 29286 net.cpp:200] relu2 needs backward computation.
I0428 19:59:38.531919 29286 net.cpp:200] ip2 needs backward computation.
I0428 19:59:38.531921 29286 net.cpp:200] relu1 needs backward computation.
I0428 19:59:38.531924 29286 net.cpp:200] ip1 needs backward computation.
I0428 19:59:38.531927 29286 net.cpp:200] pool1 needs backward computation.
I0428 19:59:38.531929 29286 net.cpp:200] conv1 needs backward computation.
I0428 19:59:38.531932 29286 net.cpp:200] pool0 needs backward computation.
I0428 19:59:38.531935 29286 net.cpp:200] conv0 needs backward computation.
I0428 19:59:38.531939 29286 net.cpp:202] mnist does not need backward computation.
I0428 19:59:38.531941 29286 net.cpp:244] This network produces output loss
I0428 19:59:38.531950 29286 net.cpp:257] Network initialization done.
I0428 19:59:38.532325 29286 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test853.prototxt
I0428 19:59:38.532369 29286 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:38.532461 29286 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:38.532557 29286 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:38.532601 29286 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:38.532614 29286 net.cpp:86] Creating Layer mnist
I0428 19:59:38.532618 29286 net.cpp:382] mnist -> data
I0428 19:59:38.532625 29286 net.cpp:382] mnist -> label
I0428 19:59:38.532707 29286 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:38.534838 29286 net.cpp:124] Setting up mnist
I0428 19:59:38.534868 29286 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:38.534873 29286 net.cpp:131] Top shape: 100 (100)
I0428 19:59:38.534875 29286 net.cpp:139] Memory required for data: 314000
I0428 19:59:38.534893 29286 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:38.534900 29286 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:38.534904 29286 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:38.534907 29286 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:38.534914 29286 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:38.535007 29286 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:38.535015 29286 net.cpp:131] Top shape: 100 (100)
I0428 19:59:38.535019 29286 net.cpp:131] Top shape: 100 (100)
I0428 19:59:38.535022 29286 net.cpp:139] Memory required for data: 314800
I0428 19:59:38.535024 29286 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:38.535033 29286 net.cpp:86] Creating Layer conv0
I0428 19:59:38.535037 29286 net.cpp:408] conv0 <- data
I0428 19:59:38.535043 29286 net.cpp:382] conv0 -> conv0
I0428 19:59:38.536732 29286 net.cpp:124] Setting up conv0
I0428 19:59:38.536762 29286 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:38.536765 29286 net.cpp:139] Memory required for data: 2618800
I0428 19:59:38.536774 29286 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:38.536782 29286 net.cpp:86] Creating Layer pool0
I0428 19:59:38.536787 29286 net.cpp:408] pool0 <- conv0
I0428 19:59:38.536792 29286 net.cpp:382] pool0 -> pool0
I0428 19:59:38.536856 29286 net.cpp:124] Setting up pool0
I0428 19:59:38.536864 29286 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:38.536866 29286 net.cpp:139] Memory required for data: 3194800
I0428 19:59:38.536870 29286 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:38.536895 29286 net.cpp:86] Creating Layer conv1
I0428 19:59:38.536898 29286 net.cpp:408] conv1 <- pool0
I0428 19:59:38.536906 29286 net.cpp:382] conv1 -> conv1
I0428 19:59:38.539048 29286 net.cpp:124] Setting up conv1
I0428 19:59:38.539062 29286 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:38.539082 29286 net.cpp:139] Memory required for data: 3450800
I0428 19:59:38.539089 29286 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:38.539095 29286 net.cpp:86] Creating Layer pool1
I0428 19:59:38.539100 29286 net.cpp:408] pool1 <- conv1
I0428 19:59:38.539105 29286 net.cpp:382] pool1 -> pool1
I0428 19:59:38.539158 29286 net.cpp:124] Setting up pool1
I0428 19:59:38.539165 29286 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:38.539168 29286 net.cpp:139] Memory required for data: 3514800
I0428 19:59:38.539171 29286 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:38.539177 29286 net.cpp:86] Creating Layer ip1
I0428 19:59:38.539180 29286 net.cpp:408] ip1 <- pool1
I0428 19:59:38.539192 29286 net.cpp:382] ip1 -> ip1
I0428 19:59:38.539364 29286 net.cpp:124] Setting up ip1
I0428 19:59:38.539371 29286 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:38.539384 29286 net.cpp:139] Memory required for data: 3534800
I0428 19:59:38.539392 29286 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:38.539397 29286 net.cpp:86] Creating Layer relu1
I0428 19:59:38.539400 29286 net.cpp:408] relu1 <- ip1
I0428 19:59:38.539405 29286 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:38.539603 29286 net.cpp:124] Setting up relu1
I0428 19:59:38.539613 29286 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:59:38.539615 29286 net.cpp:139] Memory required for data: 3554800
I0428 19:59:38.539618 29286 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:38.539628 29286 net.cpp:86] Creating Layer ip2
I0428 19:59:38.539630 29286 net.cpp:408] ip2 <- ip1
I0428 19:59:38.539635 29286 net.cpp:382] ip2 -> ip2
I0428 19:59:38.539742 29286 net.cpp:124] Setting up ip2
I0428 19:59:38.539749 29286 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:38.539752 29286 net.cpp:139] Memory required for data: 3564800
I0428 19:59:38.539757 29286 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:38.539762 29286 net.cpp:86] Creating Layer relu2
I0428 19:59:38.539764 29286 net.cpp:408] relu2 <- ip2
I0428 19:59:38.539769 29286 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:38.539937 29286 net.cpp:124] Setting up relu2
I0428 19:59:38.539947 29286 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:38.539949 29286 net.cpp:139] Memory required for data: 3574800
I0428 19:59:38.539952 29286 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:38.539958 29286 net.cpp:86] Creating Layer ip3
I0428 19:59:38.539961 29286 net.cpp:408] ip3 <- ip2
I0428 19:59:38.539966 29286 net.cpp:382] ip3 -> ip3
I0428 19:59:38.540066 29286 net.cpp:124] Setting up ip3
I0428 19:59:38.540072 29286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:38.540074 29286 net.cpp:139] Memory required for data: 3578800
I0428 19:59:38.540082 29286 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:38.540087 29286 net.cpp:86] Creating Layer relu3
I0428 19:59:38.540091 29286 net.cpp:408] relu3 <- ip3
I0428 19:59:38.540094 29286 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:38.540884 29286 net.cpp:124] Setting up relu3
I0428 19:59:38.540911 29286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:38.540915 29286 net.cpp:139] Memory required for data: 3582800
I0428 19:59:38.540918 29286 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:38.540925 29286 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:38.540928 29286 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:38.540933 29286 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:38.540938 29286 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:38.541018 29286 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:38.541024 29286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:38.541028 29286 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:38.541031 29286 net.cpp:139] Memory required for data: 3590800
I0428 19:59:38.541034 29286 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:38.541040 29286 net.cpp:86] Creating Layer accuracy
I0428 19:59:38.541044 29286 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:38.541049 29286 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:38.541054 29286 net.cpp:382] accuracy -> accuracy
I0428 19:59:38.541060 29286 net.cpp:124] Setting up accuracy
I0428 19:59:38.541064 29286 net.cpp:131] Top shape: (1)
I0428 19:59:38.541067 29286 net.cpp:139] Memory required for data: 3590804
I0428 19:59:38.541069 29286 layer_factory.hpp:77] Creating layer loss
I0428 19:59:38.541074 29286 net.cpp:86] Creating Layer loss
I0428 19:59:38.541077 29286 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:38.541080 29286 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:38.541085 29286 net.cpp:382] loss -> loss
I0428 19:59:38.541092 29286 layer_factory.hpp:77] Creating layer loss
I0428 19:59:38.541340 29286 net.cpp:124] Setting up loss
I0428 19:59:38.541350 29286 net.cpp:131] Top shape: (1)
I0428 19:59:38.541353 29286 net.cpp:134]     with loss weight 1
I0428 19:59:38.541368 29286 net.cpp:139] Memory required for data: 3590808
I0428 19:59:38.541373 29286 net.cpp:200] loss needs backward computation.
I0428 19:59:38.541375 29286 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:38.541379 29286 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:38.541383 29286 net.cpp:200] relu3 needs backward computation.
I0428 19:59:38.541384 29286 net.cpp:200] ip3 needs backward computation.
I0428 19:59:38.541388 29286 net.cpp:200] relu2 needs backward computation.
I0428 19:59:38.541390 29286 net.cpp:200] ip2 needs backward computation.
I0428 19:59:38.541393 29286 net.cpp:200] relu1 needs backward computation.
I0428 19:59:38.541396 29286 net.cpp:200] ip1 needs backward computation.
I0428 19:59:38.541399 29286 net.cpp:200] pool1 needs backward computation.
I0428 19:59:38.541402 29286 net.cpp:200] conv1 needs backward computation.
I0428 19:59:38.541405 29286 net.cpp:200] pool0 needs backward computation.
I0428 19:59:38.541407 29286 net.cpp:200] conv0 needs backward computation.
I0428 19:59:38.541411 29286 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:38.541414 29286 net.cpp:202] mnist does not need backward computation.
I0428 19:59:38.541417 29286 net.cpp:244] This network produces output accuracy
I0428 19:59:38.541420 29286 net.cpp:244] This network produces output loss
I0428 19:59:38.541431 29286 net.cpp:257] Network initialization done.
I0428 19:59:38.541471 29286 solver.cpp:56] Solver scaffolding done.
I0428 19:59:38.541851 29286 caffe.cpp:248] Starting Optimization
I0428 19:59:38.541857 29286 solver.cpp:273] Solving LeNet
I0428 19:59:38.541882 29286 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:38.542183 29286 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:38.546280 29286 blocking_queue.cpp:49] Waiting for data
I0428 19:59:38.613909 29293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:38.614461 29286 solver.cpp:398]     Test net output #0: accuracy = 0.0956
I0428 19:59:38.614496 29286 solver.cpp:398]     Test net output #1: loss = 2.3181 (* 1 = 2.3181 loss)
I0428 19:59:38.616999 29286 solver.cpp:219] Iteration 0 (0 iter/s, 0.075092s/100 iters), loss = 2.30798
I0428 19:59:38.617022 29286 solver.cpp:238]     Train net output #0: loss = 2.30798 (* 1 = 2.30798 loss)
I0428 19:59:38.617048 29286 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:38.699115 29286 solver.cpp:219] Iteration 100 (1218.33 iter/s, 0.0820797s/100 iters), loss = 0.426436
I0428 19:59:38.699153 29286 solver.cpp:238]     Train net output #0: loss = 0.426436 (* 1 = 0.426436 loss)
I0428 19:59:38.699174 29286 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:38.781235 29286 solver.cpp:219] Iteration 200 (1218.4 iter/s, 0.0820746s/100 iters), loss = 0.270582
I0428 19:59:38.781273 29286 solver.cpp:238]     Train net output #0: loss = 0.270582 (* 1 = 0.270582 loss)
I0428 19:59:38.781280 29286 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:38.862494 29286 solver.cpp:219] Iteration 300 (1231.12 iter/s, 0.0812268s/100 iters), loss = 0.295627
I0428 19:59:38.862531 29286 solver.cpp:238]     Train net output #0: loss = 0.295627 (* 1 = 0.295627 loss)
I0428 19:59:38.862537 29286 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:38.944126 29286 solver.cpp:219] Iteration 400 (1225.48 iter/s, 0.0816006s/100 iters), loss = 0.0929181
I0428 19:59:38.944180 29286 solver.cpp:238]     Train net output #0: loss = 0.0929181 (* 1 = 0.0929181 loss)
I0428 19:59:38.944186 29286 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:39.022716 29286 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:39.075479 29293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:39.076025 29286 solver.cpp:398]     Test net output #0: accuracy = 0.9486
I0428 19:59:39.076058 29286 solver.cpp:398]     Test net output #1: loss = 0.162458 (* 1 = 0.162458 loss)
I0428 19:59:39.076853 29286 solver.cpp:219] Iteration 500 (753.799 iter/s, 0.132661s/100 iters), loss = 0.173315
I0428 19:59:39.076908 29286 solver.cpp:238]     Train net output #0: loss = 0.173315 (* 1 = 0.173315 loss)
I0428 19:59:39.076917 29286 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:39.160707 29286 solver.cpp:219] Iteration 600 (1193.43 iter/s, 0.0837918s/100 iters), loss = 0.0541898
I0428 19:59:39.160748 29286 solver.cpp:238]     Train net output #0: loss = 0.0541898 (* 1 = 0.0541898 loss)
I0428 19:59:39.160754 29286 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:39.242647 29286 solver.cpp:219] Iteration 700 (1220.92 iter/s, 0.0819057s/100 iters), loss = 0.227954
I0428 19:59:39.242686 29286 solver.cpp:238]     Train net output #0: loss = 0.227954 (* 1 = 0.227954 loss)
I0428 19:59:39.242692 29286 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:39.321751 29286 solver.cpp:219] Iteration 800 (1264.68 iter/s, 0.0790712s/100 iters), loss = 0.260804
I0428 19:59:39.321775 29286 solver.cpp:238]     Train net output #0: loss = 0.260804 (* 1 = 0.260804 loss)
I0428 19:59:39.321781 29286 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:39.407297 29286 solver.cpp:219] Iteration 900 (1169.42 iter/s, 0.0855122s/100 iters), loss = 0.264051
I0428 19:59:39.407325 29286 solver.cpp:238]     Train net output #0: loss = 0.264051 (* 1 = 0.264051 loss)
I0428 19:59:39.407330 29286 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:39.435161 29292 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:39.487488 29286 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:39.488395 29286 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:39.488945 29286 solver.cpp:311] Iteration 1000, loss = 0.199878
I0428 19:59:39.488961 29286 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:39.541658 29293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:39.542168 29286 solver.cpp:398]     Test net output #0: accuracy = 0.9692
I0428 19:59:39.542188 29286 solver.cpp:398]     Test net output #1: loss = 0.0984773 (* 1 = 0.0984773 loss)
I0428 19:59:39.542193 29286 solver.cpp:316] Optimization Done.
I0428 19:59:39.542196 29286 caffe.cpp:259] Optimization Done.
