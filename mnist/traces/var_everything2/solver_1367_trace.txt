I0428 20:20:37.771095  1592 caffe.cpp:218] Using GPUs 0
I0428 20:20:37.808465  1592 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:38.314630  1592 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1367.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:38.314771  1592 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1367.prototxt
I0428 20:20:38.315112  1592 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:38.315129  1592 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:38.315207  1592 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:20:38.315279  1592 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:38.315372  1592 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:38.315394  1592 net.cpp:86] Creating Layer mnist
I0428 20:20:38.315403  1592 net.cpp:382] mnist -> data
I0428 20:20:38.315425  1592 net.cpp:382] mnist -> label
I0428 20:20:38.316510  1592 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:38.318974  1592 net.cpp:124] Setting up mnist
I0428 20:20:38.318994  1592 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:38.319000  1592 net.cpp:131] Top shape: 64 (64)
I0428 20:20:38.319003  1592 net.cpp:139] Memory required for data: 200960
I0428 20:20:38.319020  1592 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:38.319048  1592 net.cpp:86] Creating Layer conv0
I0428 20:20:38.319054  1592 net.cpp:408] conv0 <- data
I0428 20:20:38.319066  1592 net.cpp:382] conv0 -> conv0
I0428 20:20:38.568608  1592 net.cpp:124] Setting up conv0
I0428 20:20:38.568634  1592 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:38.568637  1592 net.cpp:139] Memory required for data: 7573760
I0428 20:20:38.568652  1592 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:38.568665  1592 net.cpp:86] Creating Layer pool0
I0428 20:20:38.568668  1592 net.cpp:408] pool0 <- conv0
I0428 20:20:38.568688  1592 net.cpp:382] pool0 -> pool0
I0428 20:20:38.568766  1592 net.cpp:124] Setting up pool0
I0428 20:20:38.568774  1592 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:38.568791  1592 net.cpp:139] Memory required for data: 9416960
I0428 20:20:38.568795  1592 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:38.568806  1592 net.cpp:86] Creating Layer conv1
I0428 20:20:38.568831  1592 net.cpp:408] conv1 <- pool0
I0428 20:20:38.568837  1592 net.cpp:382] conv1 -> conv1
I0428 20:20:38.571108  1592 net.cpp:124] Setting up conv1
I0428 20:20:38.571138  1592 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:20:38.571141  1592 net.cpp:139] Memory required for data: 10236160
I0428 20:20:38.571151  1592 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:38.571158  1592 net.cpp:86] Creating Layer pool1
I0428 20:20:38.571177  1592 net.cpp:408] pool1 <- conv1
I0428 20:20:38.571182  1592 net.cpp:382] pool1 -> pool1
I0428 20:20:38.571244  1592 net.cpp:124] Setting up pool1
I0428 20:20:38.571251  1592 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:20:38.571254  1592 net.cpp:139] Memory required for data: 10440960
I0428 20:20:38.571256  1592 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:38.571264  1592 net.cpp:86] Creating Layer ip1
I0428 20:20:38.571266  1592 net.cpp:408] ip1 <- pool1
I0428 20:20:38.571272  1592 net.cpp:382] ip1 -> ip1
I0428 20:20:38.572284  1592 net.cpp:124] Setting up ip1
I0428 20:20:38.572300  1592 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:38.572320  1592 net.cpp:139] Memory required for data: 10443520
I0428 20:20:38.572329  1592 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:38.572335  1592 net.cpp:86] Creating Layer relu1
I0428 20:20:38.572340  1592 net.cpp:408] relu1 <- ip1
I0428 20:20:38.572343  1592 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:38.572549  1592 net.cpp:124] Setting up relu1
I0428 20:20:38.572558  1592 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:38.572561  1592 net.cpp:139] Memory required for data: 10446080
I0428 20:20:38.572564  1592 layer_factory.hpp:77] Creating layer loss
I0428 20:20:38.572571  1592 net.cpp:86] Creating Layer loss
I0428 20:20:38.572573  1592 net.cpp:408] loss <- ip1
I0428 20:20:38.572577  1592 net.cpp:408] loss <- label
I0428 20:20:38.572583  1592 net.cpp:382] loss -> loss
I0428 20:20:38.572600  1592 layer_factory.hpp:77] Creating layer loss
I0428 20:20:38.573524  1592 net.cpp:124] Setting up loss
I0428 20:20:38.573551  1592 net.cpp:131] Top shape: (1)
I0428 20:20:38.573570  1592 net.cpp:134]     with loss weight 1
I0428 20:20:38.573598  1592 net.cpp:139] Memory required for data: 10446084
I0428 20:20:38.573602  1592 net.cpp:200] loss needs backward computation.
I0428 20:20:38.573606  1592 net.cpp:200] relu1 needs backward computation.
I0428 20:20:38.573608  1592 net.cpp:200] ip1 needs backward computation.
I0428 20:20:38.573612  1592 net.cpp:200] pool1 needs backward computation.
I0428 20:20:38.573616  1592 net.cpp:200] conv1 needs backward computation.
I0428 20:20:38.573617  1592 net.cpp:200] pool0 needs backward computation.
I0428 20:20:38.573621  1592 net.cpp:200] conv0 needs backward computation.
I0428 20:20:38.573623  1592 net.cpp:202] mnist does not need backward computation.
I0428 20:20:38.573626  1592 net.cpp:244] This network produces output loss
I0428 20:20:38.573634  1592 net.cpp:257] Network initialization done.
I0428 20:20:38.573900  1592 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1367.prototxt
I0428 20:20:38.573923  1592 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:38.573995  1592 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:20:38.574069  1592 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:38.574115  1592 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:38.574126  1592 net.cpp:86] Creating Layer mnist
I0428 20:20:38.574131  1592 net.cpp:382] mnist -> data
I0428 20:20:38.574138  1592 net.cpp:382] mnist -> label
I0428 20:20:38.574239  1592 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:38.576263  1592 net.cpp:124] Setting up mnist
I0428 20:20:38.576292  1592 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:38.576297  1592 net.cpp:131] Top shape: 100 (100)
I0428 20:20:38.576299  1592 net.cpp:139] Memory required for data: 314000
I0428 20:20:38.576303  1592 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:38.576313  1592 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:38.576316  1592 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:38.576320  1592 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:38.576328  1592 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:38.576407  1592 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:38.576416  1592 net.cpp:131] Top shape: 100 (100)
I0428 20:20:38.576418  1592 net.cpp:131] Top shape: 100 (100)
I0428 20:20:38.576421  1592 net.cpp:139] Memory required for data: 314800
I0428 20:20:38.576424  1592 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:38.576434  1592 net.cpp:86] Creating Layer conv0
I0428 20:20:38.576437  1592 net.cpp:408] conv0 <- data
I0428 20:20:38.576442  1592 net.cpp:382] conv0 -> conv0
I0428 20:20:38.577390  1592 net.cpp:124] Setting up conv0
I0428 20:20:38.577402  1592 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:38.577406  1592 net.cpp:139] Memory required for data: 11834800
I0428 20:20:38.577415  1592 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:38.577420  1592 net.cpp:86] Creating Layer pool0
I0428 20:20:38.577440  1592 net.cpp:408] pool0 <- conv0
I0428 20:20:38.577445  1592 net.cpp:382] pool0 -> pool0
I0428 20:20:38.577483  1592 net.cpp:124] Setting up pool0
I0428 20:20:38.577488  1592 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:38.577491  1592 net.cpp:139] Memory required for data: 14714800
I0428 20:20:38.577493  1592 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:38.577503  1592 net.cpp:86] Creating Layer conv1
I0428 20:20:38.577507  1592 net.cpp:408] conv1 <- pool0
I0428 20:20:38.577512  1592 net.cpp:382] conv1 -> conv1
I0428 20:20:38.579396  1592 net.cpp:124] Setting up conv1
I0428 20:20:38.579412  1592 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:20:38.579423  1592 net.cpp:139] Memory required for data: 15994800
I0428 20:20:38.579447  1592 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:38.579453  1592 net.cpp:86] Creating Layer pool1
I0428 20:20:38.579466  1592 net.cpp:408] pool1 <- conv1
I0428 20:20:38.579471  1592 net.cpp:382] pool1 -> pool1
I0428 20:20:38.579507  1592 net.cpp:124] Setting up pool1
I0428 20:20:38.579512  1592 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:20:38.579515  1592 net.cpp:139] Memory required for data: 16314800
I0428 20:20:38.579519  1592 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:38.579524  1592 net.cpp:86] Creating Layer ip1
I0428 20:20:38.579533  1592 net.cpp:408] ip1 <- pool1
I0428 20:20:38.579538  1592 net.cpp:382] ip1 -> ip1
I0428 20:20:38.579697  1592 net.cpp:124] Setting up ip1
I0428 20:20:38.579720  1592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:38.579723  1592 net.cpp:139] Memory required for data: 16318800
I0428 20:20:38.579731  1592 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:38.579744  1592 net.cpp:86] Creating Layer relu1
I0428 20:20:38.579747  1592 net.cpp:408] relu1 <- ip1
I0428 20:20:38.579766  1592 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:38.580580  1592 net.cpp:124] Setting up relu1
I0428 20:20:38.580592  1592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:38.580595  1592 net.cpp:139] Memory required for data: 16322800
I0428 20:20:38.580598  1592 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:20:38.580606  1592 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:20:38.580616  1592 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:20:38.580621  1592 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:20:38.580627  1592 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:20:38.580698  1592 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:20:38.580705  1592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:38.580709  1592 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:38.580711  1592 net.cpp:139] Memory required for data: 16330800
I0428 20:20:38.580714  1592 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:38.580720  1592 net.cpp:86] Creating Layer accuracy
I0428 20:20:38.580724  1592 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:20:38.580729  1592 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:38.580732  1592 net.cpp:382] accuracy -> accuracy
I0428 20:20:38.580745  1592 net.cpp:124] Setting up accuracy
I0428 20:20:38.580749  1592 net.cpp:131] Top shape: (1)
I0428 20:20:38.580752  1592 net.cpp:139] Memory required for data: 16330804
I0428 20:20:38.580760  1592 layer_factory.hpp:77] Creating layer loss
I0428 20:20:38.580765  1592 net.cpp:86] Creating Layer loss
I0428 20:20:38.580767  1592 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:20:38.580771  1592 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:38.580791  1592 net.cpp:382] loss -> loss
I0428 20:20:38.580797  1592 layer_factory.hpp:77] Creating layer loss
I0428 20:20:38.581149  1592 net.cpp:124] Setting up loss
I0428 20:20:38.581159  1592 net.cpp:131] Top shape: (1)
I0428 20:20:38.581162  1592 net.cpp:134]     with loss weight 1
I0428 20:20:38.581169  1592 net.cpp:139] Memory required for data: 16330808
I0428 20:20:38.581174  1592 net.cpp:200] loss needs backward computation.
I0428 20:20:38.581178  1592 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:38.581197  1592 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:20:38.581200  1592 net.cpp:200] relu1 needs backward computation.
I0428 20:20:38.581202  1592 net.cpp:200] ip1 needs backward computation.
I0428 20:20:38.581220  1592 net.cpp:200] pool1 needs backward computation.
I0428 20:20:38.581223  1592 net.cpp:200] conv1 needs backward computation.
I0428 20:20:38.581226  1592 net.cpp:200] pool0 needs backward computation.
I0428 20:20:38.581229  1592 net.cpp:200] conv0 needs backward computation.
I0428 20:20:38.581233  1592 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:38.581238  1592 net.cpp:202] mnist does not need backward computation.
I0428 20:20:38.581239  1592 net.cpp:244] This network produces output accuracy
I0428 20:20:38.581257  1592 net.cpp:244] This network produces output loss
I0428 20:20:38.581276  1592 net.cpp:257] Network initialization done.
I0428 20:20:38.581310  1592 solver.cpp:56] Solver scaffolding done.
I0428 20:20:38.581507  1592 caffe.cpp:248] Starting Optimization
I0428 20:20:38.581514  1592 solver.cpp:273] Solving LeNet
I0428 20:20:38.581517  1592 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:38.581634  1592 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:38.591270  1592 blocking_queue.cpp:49] Waiting for data
I0428 20:20:38.655804  1602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:38.656776  1592 solver.cpp:398]     Test net output #0: accuracy = 0.0238
I0428 20:20:38.656821  1592 solver.cpp:398]     Test net output #1: loss = 2.39329 (* 1 = 2.39329 loss)
I0428 20:20:38.661031  1592 solver.cpp:219] Iteration 0 (-1.84732e-31 iter/s, 0.079488s/100 iters), loss = 2.37249
I0428 20:20:38.661070  1592 solver.cpp:238]     Train net output #0: loss = 2.37249 (* 1 = 2.37249 loss)
I0428 20:20:38.661082  1592 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:38.805161  1592 solver.cpp:219] Iteration 100 (694.074 iter/s, 0.144077s/100 iters), loss = 0.316403
I0428 20:20:38.805188  1592 solver.cpp:238]     Train net output #0: loss = 0.316403 (* 1 = 0.316403 loss)
I0428 20:20:38.805194  1592 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:38.946362  1592 solver.cpp:219] Iteration 200 (708.409 iter/s, 0.141161s/100 iters), loss = 0.155221
I0428 20:20:38.946384  1592 solver.cpp:238]     Train net output #0: loss = 0.155221 (* 1 = 0.155221 loss)
I0428 20:20:38.946390  1592 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:39.088063  1592 solver.cpp:219] Iteration 300 (705.894 iter/s, 0.141664s/100 iters), loss = 0.122309
I0428 20:20:39.088104  1592 solver.cpp:238]     Train net output #0: loss = 0.122309 (* 1 = 0.122309 loss)
I0428 20:20:39.088109  1592 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:39.229730  1592 solver.cpp:219] Iteration 400 (706.139 iter/s, 0.141615s/100 iters), loss = 0.0753292
I0428 20:20:39.229758  1592 solver.cpp:238]     Train net output #0: loss = 0.0753292 (* 1 = 0.0753292 loss)
I0428 20:20:39.229763  1592 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:39.368154  1592 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:39.435401  1602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:39.437731  1592 solver.cpp:398]     Test net output #0: accuracy = 0.9726
I0428 20:20:39.437749  1592 solver.cpp:398]     Test net output #1: loss = 0.0962082 (* 1 = 0.0962082 loss)
I0428 20:20:39.439090  1592 solver.cpp:219] Iteration 500 (477.742 iter/s, 0.209318s/100 iters), loss = 0.12564
I0428 20:20:39.439112  1592 solver.cpp:238]     Train net output #0: loss = 0.12564 (* 1 = 0.12564 loss)
I0428 20:20:39.439119  1592 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:39.581548  1592 solver.cpp:219] Iteration 600 (702.149 iter/s, 0.14242s/100 iters), loss = 0.0852159
I0428 20:20:39.581581  1592 solver.cpp:238]     Train net output #0: loss = 0.0852159 (* 1 = 0.0852159 loss)
I0428 20:20:39.581588  1592 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:39.723628  1592 solver.cpp:219] Iteration 700 (704.052 iter/s, 0.142035s/100 iters), loss = 0.0943088
I0428 20:20:39.723654  1592 solver.cpp:238]     Train net output #0: loss = 0.0943087 (* 1 = 0.0943087 loss)
I0428 20:20:39.723659  1592 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:39.868237  1592 solver.cpp:219] Iteration 800 (691.7 iter/s, 0.144571s/100 iters), loss = 0.193973
I0428 20:20:39.868260  1592 solver.cpp:238]     Train net output #0: loss = 0.193973 (* 1 = 0.193973 loss)
I0428 20:20:39.868268  1592 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:40.011351  1592 solver.cpp:219] Iteration 900 (698.917 iter/s, 0.143078s/100 iters), loss = 0.175257
I0428 20:20:40.011378  1592 solver.cpp:238]     Train net output #0: loss = 0.175257 (* 1 = 0.175257 loss)
I0428 20:20:40.011384  1592 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:40.058117  1601 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:40.152256  1592 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:40.154142  1592 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:40.155351  1592 solver.cpp:311] Iteration 1000, loss = 0.1008
I0428 20:20:40.155366  1592 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:40.221546  1602 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:40.223891  1592 solver.cpp:398]     Test net output #0: accuracy = 0.9786
I0428 20:20:40.223911  1592 solver.cpp:398]     Test net output #1: loss = 0.0696645 (* 1 = 0.0696645 loss)
I0428 20:20:40.223914  1592 solver.cpp:316] Optimization Done.
I0428 20:20:40.223933  1592 caffe.cpp:259] Optimization Done.
