I0428 19:33:22.973017 23093 caffe.cpp:218] Using GPUs 0
I0428 19:33:23.010675 23093 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:23.520941 23093 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test178.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:23.521080 23093 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test178.prototxt
I0428 19:33:23.521447 23093 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:23.521467 23093 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:23.521556 23093 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:23.521632 23093 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:23.521733 23093 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:23.521756 23093 net.cpp:86] Creating Layer mnist
I0428 19:33:23.521766 23093 net.cpp:382] mnist -> data
I0428 19:33:23.521790 23093 net.cpp:382] mnist -> label
I0428 19:33:23.522882 23093 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:23.525358 23093 net.cpp:124] Setting up mnist
I0428 19:33:23.525375 23093 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:23.525382 23093 net.cpp:131] Top shape: 64 (64)
I0428 19:33:23.525387 23093 net.cpp:139] Memory required for data: 200960
I0428 19:33:23.525393 23093 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:23.525437 23093 net.cpp:86] Creating Layer conv0
I0428 19:33:23.525444 23093 net.cpp:408] conv0 <- data
I0428 19:33:23.525456 23093 net.cpp:382] conv0 -> conv0
I0428 19:33:23.804767 23093 net.cpp:124] Setting up conv0
I0428 19:33:23.804793 23093 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:23.804797 23093 net.cpp:139] Memory required for data: 3887360
I0428 19:33:23.804832 23093 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:23.804862 23093 net.cpp:86] Creating Layer pool0
I0428 19:33:23.804883 23093 net.cpp:408] pool0 <- conv0
I0428 19:33:23.804890 23093 net.cpp:382] pool0 -> pool0
I0428 19:33:23.804939 23093 net.cpp:124] Setting up pool0
I0428 19:33:23.804949 23093 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:23.804951 23093 net.cpp:139] Memory required for data: 4808960
I0428 19:33:23.804955 23093 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:23.804962 23093 net.cpp:86] Creating Layer ip1
I0428 19:33:23.804965 23093 net.cpp:408] ip1 <- pool0
I0428 19:33:23.804970 23093 net.cpp:382] ip1 -> ip1
I0428 19:33:23.806625 23093 net.cpp:124] Setting up ip1
I0428 19:33:23.806654 23093 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:23.806659 23093 net.cpp:139] Memory required for data: 4815360
I0428 19:33:23.806684 23093 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:23.806690 23093 net.cpp:86] Creating Layer relu1
I0428 19:33:23.806694 23093 net.cpp:408] relu1 <- ip1
I0428 19:33:23.806699 23093 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:23.806900 23093 net.cpp:124] Setting up relu1
I0428 19:33:23.806910 23093 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:33:23.806912 23093 net.cpp:139] Memory required for data: 4821760
I0428 19:33:23.806915 23093 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:23.806922 23093 net.cpp:86] Creating Layer ip2
I0428 19:33:23.806926 23093 net.cpp:408] ip2 <- ip1
I0428 19:33:23.806929 23093 net.cpp:382] ip2 -> ip2
I0428 19:33:23.807037 23093 net.cpp:124] Setting up ip2
I0428 19:33:23.807045 23093 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:23.807049 23093 net.cpp:139] Memory required for data: 4824320
I0428 19:33:23.807056 23093 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:23.807062 23093 net.cpp:86] Creating Layer relu2
I0428 19:33:23.807065 23093 net.cpp:408] relu2 <- ip2
I0428 19:33:23.807068 23093 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:23.807801 23093 net.cpp:124] Setting up relu2
I0428 19:33:23.807813 23093 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:23.807816 23093 net.cpp:139] Memory required for data: 4826880
I0428 19:33:23.807821 23093 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:23.807827 23093 net.cpp:86] Creating Layer ip3
I0428 19:33:23.807831 23093 net.cpp:408] ip3 <- ip2
I0428 19:33:23.807837 23093 net.cpp:382] ip3 -> ip3
I0428 19:33:23.807929 23093 net.cpp:124] Setting up ip3
I0428 19:33:23.807936 23093 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:23.807940 23093 net.cpp:139] Memory required for data: 4829440
I0428 19:33:23.807945 23093 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:23.807950 23093 net.cpp:86] Creating Layer relu3
I0428 19:33:23.807953 23093 net.cpp:408] relu3 <- ip3
I0428 19:33:23.807957 23093 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:23.808104 23093 net.cpp:124] Setting up relu3
I0428 19:33:23.808112 23093 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:23.808115 23093 net.cpp:139] Memory required for data: 4832000
I0428 19:33:23.808118 23093 layer_factory.hpp:77] Creating layer loss
I0428 19:33:23.808125 23093 net.cpp:86] Creating Layer loss
I0428 19:33:23.808127 23093 net.cpp:408] loss <- ip3
I0428 19:33:23.808131 23093 net.cpp:408] loss <- label
I0428 19:33:23.808136 23093 net.cpp:382] loss -> loss
I0428 19:33:23.808151 23093 layer_factory.hpp:77] Creating layer loss
I0428 19:33:23.808368 23093 net.cpp:124] Setting up loss
I0428 19:33:23.808377 23093 net.cpp:131] Top shape: (1)
I0428 19:33:23.808380 23093 net.cpp:134]     with loss weight 1
I0428 19:33:23.808394 23093 net.cpp:139] Memory required for data: 4832004
I0428 19:33:23.808398 23093 net.cpp:200] loss needs backward computation.
I0428 19:33:23.808403 23093 net.cpp:200] relu3 needs backward computation.
I0428 19:33:23.808405 23093 net.cpp:200] ip3 needs backward computation.
I0428 19:33:23.808408 23093 net.cpp:200] relu2 needs backward computation.
I0428 19:33:23.808410 23093 net.cpp:200] ip2 needs backward computation.
I0428 19:33:23.808413 23093 net.cpp:200] relu1 needs backward computation.
I0428 19:33:23.808416 23093 net.cpp:200] ip1 needs backward computation.
I0428 19:33:23.808429 23093 net.cpp:200] pool0 needs backward computation.
I0428 19:33:23.808432 23093 net.cpp:200] conv0 needs backward computation.
I0428 19:33:23.808435 23093 net.cpp:202] mnist does not need backward computation.
I0428 19:33:23.808439 23093 net.cpp:244] This network produces output loss
I0428 19:33:23.808446 23093 net.cpp:257] Network initialization done.
I0428 19:33:23.808738 23093 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test178.prototxt
I0428 19:33:23.808766 23093 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:23.808884 23093 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:23.808948 23093 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:23.808996 23093 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:23.809023 23093 net.cpp:86] Creating Layer mnist
I0428 19:33:23.809028 23093 net.cpp:382] mnist -> data
I0428 19:33:23.809036 23093 net.cpp:382] mnist -> label
I0428 19:33:23.809118 23093 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:23.810163 23093 net.cpp:124] Setting up mnist
I0428 19:33:23.810175 23093 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:23.810180 23093 net.cpp:131] Top shape: 100 (100)
I0428 19:33:23.810184 23093 net.cpp:139] Memory required for data: 314000
I0428 19:33:23.810187 23093 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:23.810194 23093 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:23.810197 23093 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:23.810202 23093 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:23.810209 23093 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:23.810245 23093 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:23.810250 23093 net.cpp:131] Top shape: 100 (100)
I0428 19:33:23.810253 23093 net.cpp:131] Top shape: 100 (100)
I0428 19:33:23.810256 23093 net.cpp:139] Memory required for data: 314800
I0428 19:33:23.810269 23093 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:23.810278 23093 net.cpp:86] Creating Layer conv0
I0428 19:33:23.810281 23093 net.cpp:408] conv0 <- data
I0428 19:33:23.810286 23093 net.cpp:382] conv0 -> conv0
I0428 19:33:23.811995 23093 net.cpp:124] Setting up conv0
I0428 19:33:23.812010 23093 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:23.812013 23093 net.cpp:139] Memory required for data: 6074800
I0428 19:33:23.812022 23093 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:23.812029 23093 net.cpp:86] Creating Layer pool0
I0428 19:33:23.812032 23093 net.cpp:408] pool0 <- conv0
I0428 19:33:23.812037 23093 net.cpp:382] pool0 -> pool0
I0428 19:33:23.812073 23093 net.cpp:124] Setting up pool0
I0428 19:33:23.812078 23093 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:23.812081 23093 net.cpp:139] Memory required for data: 7514800
I0428 19:33:23.812084 23093 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:23.812091 23093 net.cpp:86] Creating Layer ip1
I0428 19:33:23.812094 23093 net.cpp:408] ip1 <- pool0
I0428 19:33:23.812098 23093 net.cpp:382] ip1 -> ip1
I0428 19:33:23.812701 23093 net.cpp:124] Setting up ip1
I0428 19:33:23.812708 23093 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:23.812712 23093 net.cpp:139] Memory required for data: 7524800
I0428 19:33:23.812719 23093 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:23.812724 23093 net.cpp:86] Creating Layer relu1
I0428 19:33:23.812727 23093 net.cpp:408] relu1 <- ip1
I0428 19:33:23.812731 23093 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:23.813036 23093 net.cpp:124] Setting up relu1
I0428 19:33:23.813045 23093 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:33:23.813050 23093 net.cpp:139] Memory required for data: 7534800
I0428 19:33:23.813052 23093 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:23.813058 23093 net.cpp:86] Creating Layer ip2
I0428 19:33:23.813061 23093 net.cpp:408] ip2 <- ip1
I0428 19:33:23.813066 23093 net.cpp:382] ip2 -> ip2
I0428 19:33:23.813181 23093 net.cpp:124] Setting up ip2
I0428 19:33:23.813189 23093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:23.813191 23093 net.cpp:139] Memory required for data: 7538800
I0428 19:33:23.813199 23093 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:23.813210 23093 net.cpp:86] Creating Layer relu2
I0428 19:33:23.813212 23093 net.cpp:408] relu2 <- ip2
I0428 19:33:23.813217 23093 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:23.813980 23093 net.cpp:124] Setting up relu2
I0428 19:33:23.814007 23093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:23.814025 23093 net.cpp:139] Memory required for data: 7542800
I0428 19:33:23.814029 23093 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:23.814038 23093 net.cpp:86] Creating Layer ip3
I0428 19:33:23.814040 23093 net.cpp:408] ip3 <- ip2
I0428 19:33:23.814046 23093 net.cpp:382] ip3 -> ip3
I0428 19:33:23.814155 23093 net.cpp:124] Setting up ip3
I0428 19:33:23.814163 23093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:23.814167 23093 net.cpp:139] Memory required for data: 7546800
I0428 19:33:23.814172 23093 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:23.814177 23093 net.cpp:86] Creating Layer relu3
I0428 19:33:23.814179 23093 net.cpp:408] relu3 <- ip3
I0428 19:33:23.814184 23093 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:23.814393 23093 net.cpp:124] Setting up relu3
I0428 19:33:23.814402 23093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:23.814405 23093 net.cpp:139] Memory required for data: 7550800
I0428 19:33:23.814409 23093 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:23.814414 23093 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:23.814415 23093 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:23.814420 23093 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:23.814426 23093 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:23.814460 23093 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:23.814465 23093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:23.814468 23093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:23.814487 23093 net.cpp:139] Memory required for data: 7558800
I0428 19:33:23.814491 23093 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:23.814497 23093 net.cpp:86] Creating Layer accuracy
I0428 19:33:23.814501 23093 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:23.814505 23093 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:23.814509 23093 net.cpp:382] accuracy -> accuracy
I0428 19:33:23.814517 23093 net.cpp:124] Setting up accuracy
I0428 19:33:23.814522 23093 net.cpp:131] Top shape: (1)
I0428 19:33:23.814524 23093 net.cpp:139] Memory required for data: 7558804
I0428 19:33:23.814532 23093 layer_factory.hpp:77] Creating layer loss
I0428 19:33:23.814535 23093 net.cpp:86] Creating Layer loss
I0428 19:33:23.814538 23093 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:23.814543 23093 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:23.814551 23093 net.cpp:382] loss -> loss
I0428 19:33:23.814558 23093 layer_factory.hpp:77] Creating layer loss
I0428 19:33:23.814779 23093 net.cpp:124] Setting up loss
I0428 19:33:23.814788 23093 net.cpp:131] Top shape: (1)
I0428 19:33:23.814791 23093 net.cpp:134]     with loss weight 1
I0428 19:33:23.814798 23093 net.cpp:139] Memory required for data: 7558808
I0428 19:33:23.814801 23093 net.cpp:200] loss needs backward computation.
I0428 19:33:23.814805 23093 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:23.814815 23093 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:23.814818 23093 net.cpp:200] relu3 needs backward computation.
I0428 19:33:23.814821 23093 net.cpp:200] ip3 needs backward computation.
I0428 19:33:23.814823 23093 net.cpp:200] relu2 needs backward computation.
I0428 19:33:23.814832 23093 net.cpp:200] ip2 needs backward computation.
I0428 19:33:23.814836 23093 net.cpp:200] relu1 needs backward computation.
I0428 19:33:23.814838 23093 net.cpp:200] ip1 needs backward computation.
I0428 19:33:23.814841 23093 net.cpp:200] pool0 needs backward computation.
I0428 19:33:23.814844 23093 net.cpp:200] conv0 needs backward computation.
I0428 19:33:23.814847 23093 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:23.814851 23093 net.cpp:202] mnist does not need backward computation.
I0428 19:33:23.814854 23093 net.cpp:244] This network produces output accuracy
I0428 19:33:23.814857 23093 net.cpp:244] This network produces output loss
I0428 19:33:23.814870 23093 net.cpp:257] Network initialization done.
I0428 19:33:23.814906 23093 solver.cpp:56] Solver scaffolding done.
I0428 19:33:23.815165 23093 caffe.cpp:248] Starting Optimization
I0428 19:33:23.815171 23093 solver.cpp:273] Solving LeNet
I0428 19:33:23.815174 23093 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:23.815917 23093 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:23.822152 23093 blocking_queue.cpp:49] Waiting for data
I0428 19:33:23.894248 23100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:23.895105 23093 solver.cpp:398]     Test net output #0: accuracy = 0.0935
I0428 19:33:23.895139 23093 solver.cpp:398]     Test net output #1: loss = 2.30851 (* 1 = 2.30851 loss)
I0428 19:33:23.898761 23093 solver.cpp:219] Iteration 0 (0 iter/s, 0.0835596s/100 iters), loss = 2.31942
I0428 19:33:23.898782 23093 solver.cpp:238]     Train net output #0: loss = 2.31942 (* 1 = 2.31942 loss)
I0428 19:33:23.898807 23093 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:24.003301 23093 solver.cpp:219] Iteration 100 (957.02 iter/s, 0.104491s/100 iters), loss = 0.56768
I0428 19:33:24.003325 23093 solver.cpp:238]     Train net output #0: loss = 0.56768 (* 1 = 0.56768 loss)
I0428 19:33:24.003331 23093 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:24.103983 23093 solver.cpp:219] Iteration 200 (993.562 iter/s, 0.100648s/100 iters), loss = 0.368339
I0428 19:33:24.104005 23093 solver.cpp:238]     Train net output #0: loss = 0.368339 (* 1 = 0.368339 loss)
I0428 19:33:24.104012 23093 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:24.205530 23093 solver.cpp:219] Iteration 300 (985.074 iter/s, 0.101515s/100 iters), loss = 0.247964
I0428 19:33:24.205554 23093 solver.cpp:238]     Train net output #0: loss = 0.247964 (* 1 = 0.247964 loss)
I0428 19:33:24.205559 23093 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:24.304066 23093 solver.cpp:219] Iteration 400 (1015.21 iter/s, 0.0985017s/100 iters), loss = 0.169141
I0428 19:33:24.304093 23093 solver.cpp:238]     Train net output #0: loss = 0.169141 (* 1 = 0.169141 loss)
I0428 19:33:24.304100 23093 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:24.398937 23093 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:24.461695 23100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:24.463795 23093 solver.cpp:398]     Test net output #0: accuracy = 0.9395
I0428 19:33:24.463814 23093 solver.cpp:398]     Test net output #1: loss = 0.198083 (* 1 = 0.198083 loss)
I0428 19:33:24.464740 23093 solver.cpp:219] Iteration 500 (622.542 iter/s, 0.160632s/100 iters), loss = 0.205704
I0428 19:33:24.464759 23093 solver.cpp:238]     Train net output #0: loss = 0.205704 (* 1 = 0.205704 loss)
I0428 19:33:24.464766 23093 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:24.564332 23093 solver.cpp:219] Iteration 600 (1004.41 iter/s, 0.0995605s/100 iters), loss = 0.10854
I0428 19:33:24.564355 23093 solver.cpp:238]     Train net output #0: loss = 0.10854 (* 1 = 0.10854 loss)
I0428 19:33:24.564362 23093 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:24.668113 23093 solver.cpp:219] Iteration 700 (963.877 iter/s, 0.103748s/100 iters), loss = 0.319441
I0428 19:33:24.668136 23093 solver.cpp:238]     Train net output #0: loss = 0.319441 (* 1 = 0.319441 loss)
I0428 19:33:24.668143 23093 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:24.772337 23093 solver.cpp:219] Iteration 800 (959.786 iter/s, 0.10419s/100 iters), loss = 0.290401
I0428 19:33:24.772361 23093 solver.cpp:238]     Train net output #0: loss = 0.290401 (* 1 = 0.290401 loss)
I0428 19:33:24.772367 23093 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:24.872964 23093 solver.cpp:219] Iteration 900 (994.108 iter/s, 0.100593s/100 iters), loss = 0.216306
I0428 19:33:24.872988 23093 solver.cpp:238]     Train net output #0: loss = 0.216306 (* 1 = 0.216306 loss)
I0428 19:33:24.872994 23093 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:24.906723 23099 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:24.971021 23093 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:24.972913 23093 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:24.974196 23093 solver.cpp:311] Iteration 1000, loss = 0.136806
I0428 19:33:24.974211 23093 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:25.036551 23100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:25.038661 23093 solver.cpp:398]     Test net output #0: accuracy = 0.9594
I0428 19:33:25.038679 23093 solver.cpp:398]     Test net output #1: loss = 0.130808 (* 1 = 0.130808 loss)
I0428 19:33:25.038684 23093 solver.cpp:316] Optimization Done.
I0428 19:33:25.038687 23093 caffe.cpp:259] Optimization Done.
