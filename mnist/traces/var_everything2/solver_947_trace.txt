I0428 20:03:14.673382 30146 caffe.cpp:218] Using GPUs 0
I0428 20:03:14.704814 30146 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:03:15.178783 30146 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test947.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:03:15.178920 30146 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test947.prototxt
I0428 20:03:15.179217 30146 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:03:15.179231 30146 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:03:15.179301 30146 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:03:15.179361 30146 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:15.179457 30146 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:03:15.179493 30146 net.cpp:86] Creating Layer mnist
I0428 20:03:15.179499 30146 net.cpp:382] mnist -> data
I0428 20:03:15.179518 30146 net.cpp:382] mnist -> label
I0428 20:03:15.180469 30146 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:03:15.182679 30146 net.cpp:124] Setting up mnist
I0428 20:03:15.182708 30146 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:03:15.182714 30146 net.cpp:131] Top shape: 64 (64)
I0428 20:03:15.182718 30146 net.cpp:139] Memory required for data: 200960
I0428 20:03:15.182723 30146 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:15.182739 30146 net.cpp:86] Creating Layer conv0
I0428 20:03:15.182744 30146 net.cpp:408] conv0 <- data
I0428 20:03:15.182754 30146 net.cpp:382] conv0 -> conv0
I0428 20:03:15.420368 30146 net.cpp:124] Setting up conv0
I0428 20:03:15.420413 30146 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:03:15.420416 30146 net.cpp:139] Memory required for data: 1675520
I0428 20:03:15.420450 30146 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:15.420480 30146 net.cpp:86] Creating Layer pool0
I0428 20:03:15.420482 30146 net.cpp:408] pool0 <- conv0
I0428 20:03:15.420490 30146 net.cpp:382] pool0 -> pool0
I0428 20:03:15.420537 30146 net.cpp:124] Setting up pool0
I0428 20:03:15.420547 30146 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:03:15.420550 30146 net.cpp:139] Memory required for data: 2044160
I0428 20:03:15.420553 30146 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:15.420567 30146 net.cpp:86] Creating Layer conv1
I0428 20:03:15.420570 30146 net.cpp:408] conv1 <- pool0
I0428 20:03:15.420575 30146 net.cpp:382] conv1 -> conv1
I0428 20:03:15.422708 30146 net.cpp:124] Setting up conv1
I0428 20:03:15.422724 30146 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:03:15.422727 30146 net.cpp:139] Memory required for data: 3682560
I0428 20:03:15.422736 30146 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:15.422761 30146 net.cpp:86] Creating Layer pool1
I0428 20:03:15.422765 30146 net.cpp:408] pool1 <- conv1
I0428 20:03:15.422770 30146 net.cpp:382] pool1 -> pool1
I0428 20:03:15.422811 30146 net.cpp:124] Setting up pool1
I0428 20:03:15.422816 30146 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:03:15.422819 30146 net.cpp:139] Memory required for data: 4092160
I0428 20:03:15.422823 30146 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:15.422832 30146 net.cpp:86] Creating Layer ip1
I0428 20:03:15.422834 30146 net.cpp:408] ip1 <- pool1
I0428 20:03:15.422842 30146 net.cpp:382] ip1 -> ip1
I0428 20:03:15.424355 30146 net.cpp:124] Setting up ip1
I0428 20:03:15.424367 30146 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:15.424386 30146 net.cpp:139] Memory required for data: 4104960
I0428 20:03:15.424394 30146 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:15.424401 30146 net.cpp:86] Creating Layer relu1
I0428 20:03:15.424404 30146 net.cpp:408] relu1 <- ip1
I0428 20:03:15.424410 30146 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:15.424589 30146 net.cpp:124] Setting up relu1
I0428 20:03:15.424598 30146 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:03:15.424602 30146 net.cpp:139] Memory required for data: 4117760
I0428 20:03:15.424605 30146 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:15.424613 30146 net.cpp:86] Creating Layer ip2
I0428 20:03:15.424616 30146 net.cpp:408] ip2 <- ip1
I0428 20:03:15.424621 30146 net.cpp:382] ip2 -> ip2
I0428 20:03:15.424742 30146 net.cpp:124] Setting up ip2
I0428 20:03:15.424751 30146 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:15.424754 30146 net.cpp:139] Memory required for data: 4120320
I0428 20:03:15.424760 30146 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:15.424767 30146 net.cpp:86] Creating Layer relu2
I0428 20:03:15.424770 30146 net.cpp:408] relu2 <- ip2
I0428 20:03:15.424777 30146 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:15.425601 30146 net.cpp:124] Setting up relu2
I0428 20:03:15.425627 30146 net.cpp:131] Top shape: 64 10 (640)
I0428 20:03:15.425631 30146 net.cpp:139] Memory required for data: 4122880
I0428 20:03:15.425635 30146 layer_factory.hpp:77] Creating layer loss
I0428 20:03:15.425642 30146 net.cpp:86] Creating Layer loss
I0428 20:03:15.425647 30146 net.cpp:408] loss <- ip2
I0428 20:03:15.425650 30146 net.cpp:408] loss <- label
I0428 20:03:15.425657 30146 net.cpp:382] loss -> loss
I0428 20:03:15.425674 30146 layer_factory.hpp:77] Creating layer loss
I0428 20:03:15.425963 30146 net.cpp:124] Setting up loss
I0428 20:03:15.425976 30146 net.cpp:131] Top shape: (1)
I0428 20:03:15.425979 30146 net.cpp:134]     with loss weight 1
I0428 20:03:15.425994 30146 net.cpp:139] Memory required for data: 4122884
I0428 20:03:15.425998 30146 net.cpp:200] loss needs backward computation.
I0428 20:03:15.426002 30146 net.cpp:200] relu2 needs backward computation.
I0428 20:03:15.426005 30146 net.cpp:200] ip2 needs backward computation.
I0428 20:03:15.426008 30146 net.cpp:200] relu1 needs backward computation.
I0428 20:03:15.426012 30146 net.cpp:200] ip1 needs backward computation.
I0428 20:03:15.426024 30146 net.cpp:200] pool1 needs backward computation.
I0428 20:03:15.426028 30146 net.cpp:200] conv1 needs backward computation.
I0428 20:03:15.426031 30146 net.cpp:200] pool0 needs backward computation.
I0428 20:03:15.426034 30146 net.cpp:200] conv0 needs backward computation.
I0428 20:03:15.426038 30146 net.cpp:202] mnist does not need backward computation.
I0428 20:03:15.426041 30146 net.cpp:244] This network produces output loss
I0428 20:03:15.426050 30146 net.cpp:257] Network initialization done.
I0428 20:03:15.426367 30146 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test947.prototxt
I0428 20:03:15.426421 30146 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:03:15.426506 30146 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:03:15.426571 30146 layer_factory.hpp:77] Creating layer mnist
I0428 20:03:15.426617 30146 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:03:15.426628 30146 net.cpp:86] Creating Layer mnist
I0428 20:03:15.426635 30146 net.cpp:382] mnist -> data
I0428 20:03:15.426642 30146 net.cpp:382] mnist -> label
I0428 20:03:15.426731 30146 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:03:15.428086 30146 net.cpp:124] Setting up mnist
I0428 20:03:15.428127 30146 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:03:15.428133 30146 net.cpp:131] Top shape: 100 (100)
I0428 20:03:15.428136 30146 net.cpp:139] Memory required for data: 314000
I0428 20:03:15.428140 30146 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:03:15.428150 30146 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:03:15.428154 30146 net.cpp:408] label_mnist_1_split <- label
I0428 20:03:15.428160 30146 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:03:15.428167 30146 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:03:15.428236 30146 net.cpp:124] Setting up label_mnist_1_split
I0428 20:03:15.428246 30146 net.cpp:131] Top shape: 100 (100)
I0428 20:03:15.428251 30146 net.cpp:131] Top shape: 100 (100)
I0428 20:03:15.428253 30146 net.cpp:139] Memory required for data: 314800
I0428 20:03:15.428256 30146 layer_factory.hpp:77] Creating layer conv0
I0428 20:03:15.428264 30146 net.cpp:86] Creating Layer conv0
I0428 20:03:15.428268 30146 net.cpp:408] conv0 <- data
I0428 20:03:15.428274 30146 net.cpp:382] conv0 -> conv0
I0428 20:03:15.430011 30146 net.cpp:124] Setting up conv0
I0428 20:03:15.430025 30146 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:03:15.430029 30146 net.cpp:139] Memory required for data: 2618800
I0428 20:03:15.430037 30146 layer_factory.hpp:77] Creating layer pool0
I0428 20:03:15.430044 30146 net.cpp:86] Creating Layer pool0
I0428 20:03:15.430047 30146 net.cpp:408] pool0 <- conv0
I0428 20:03:15.430053 30146 net.cpp:382] pool0 -> pool0
I0428 20:03:15.430089 30146 net.cpp:124] Setting up pool0
I0428 20:03:15.430094 30146 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:03:15.430097 30146 net.cpp:139] Memory required for data: 3194800
I0428 20:03:15.430099 30146 layer_factory.hpp:77] Creating layer conv1
I0428 20:03:15.430110 30146 net.cpp:86] Creating Layer conv1
I0428 20:03:15.430114 30146 net.cpp:408] conv1 <- pool0
I0428 20:03:15.430119 30146 net.cpp:382] conv1 -> conv1
I0428 20:03:15.431815 30146 net.cpp:124] Setting up conv1
I0428 20:03:15.431860 30146 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:03:15.431864 30146 net.cpp:139] Memory required for data: 5754800
I0428 20:03:15.431887 30146 layer_factory.hpp:77] Creating layer pool1
I0428 20:03:15.431895 30146 net.cpp:86] Creating Layer pool1
I0428 20:03:15.431900 30146 net.cpp:408] pool1 <- conv1
I0428 20:03:15.431905 30146 net.cpp:382] pool1 -> pool1
I0428 20:03:15.431941 30146 net.cpp:124] Setting up pool1
I0428 20:03:15.431946 30146 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:03:15.431951 30146 net.cpp:139] Memory required for data: 6394800
I0428 20:03:15.431953 30146 layer_factory.hpp:77] Creating layer ip1
I0428 20:03:15.431958 30146 net.cpp:86] Creating Layer ip1
I0428 20:03:15.431962 30146 net.cpp:408] ip1 <- pool1
I0428 20:03:15.431985 30146 net.cpp:382] ip1 -> ip1
I0428 20:03:15.432659 30146 net.cpp:124] Setting up ip1
I0428 20:03:15.432687 30146 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:15.432690 30146 net.cpp:139] Memory required for data: 6414800
I0428 20:03:15.432713 30146 layer_factory.hpp:77] Creating layer relu1
I0428 20:03:15.432734 30146 net.cpp:86] Creating Layer relu1
I0428 20:03:15.432737 30146 net.cpp:408] relu1 <- ip1
I0428 20:03:15.432742 30146 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:03:15.432976 30146 net.cpp:124] Setting up relu1
I0428 20:03:15.432987 30146 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:03:15.432991 30146 net.cpp:139] Memory required for data: 6434800
I0428 20:03:15.432994 30146 layer_factory.hpp:77] Creating layer ip2
I0428 20:03:15.433004 30146 net.cpp:86] Creating Layer ip2
I0428 20:03:15.433007 30146 net.cpp:408] ip2 <- ip1
I0428 20:03:15.433013 30146 net.cpp:382] ip2 -> ip2
I0428 20:03:15.433125 30146 net.cpp:124] Setting up ip2
I0428 20:03:15.433133 30146 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:15.433137 30146 net.cpp:139] Memory required for data: 6438800
I0428 20:03:15.433143 30146 layer_factory.hpp:77] Creating layer relu2
I0428 20:03:15.433148 30146 net.cpp:86] Creating Layer relu2
I0428 20:03:15.433157 30146 net.cpp:408] relu2 <- ip2
I0428 20:03:15.433183 30146 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:03:15.433359 30146 net.cpp:124] Setting up relu2
I0428 20:03:15.433367 30146 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:15.433372 30146 net.cpp:139] Memory required for data: 6442800
I0428 20:03:15.433374 30146 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:03:15.433379 30146 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:03:15.433383 30146 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:03:15.433388 30146 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:03:15.433405 30146 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:03:15.433444 30146 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:03:15.433451 30146 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:15.433470 30146 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:03:15.433488 30146 net.cpp:139] Memory required for data: 6450800
I0428 20:03:15.433492 30146 layer_factory.hpp:77] Creating layer accuracy
I0428 20:03:15.433497 30146 net.cpp:86] Creating Layer accuracy
I0428 20:03:15.433501 30146 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:03:15.433511 30146 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:03:15.433516 30146 net.cpp:382] accuracy -> accuracy
I0428 20:03:15.433524 30146 net.cpp:124] Setting up accuracy
I0428 20:03:15.433528 30146 net.cpp:131] Top shape: (1)
I0428 20:03:15.433531 30146 net.cpp:139] Memory required for data: 6450804
I0428 20:03:15.433534 30146 layer_factory.hpp:77] Creating layer loss
I0428 20:03:15.433539 30146 net.cpp:86] Creating Layer loss
I0428 20:03:15.433543 30146 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:03:15.433547 30146 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:03:15.433552 30146 net.cpp:382] loss -> loss
I0428 20:03:15.433557 30146 layer_factory.hpp:77] Creating layer loss
I0428 20:03:15.433979 30146 net.cpp:124] Setting up loss
I0428 20:03:15.433986 30146 net.cpp:131] Top shape: (1)
I0428 20:03:15.433990 30146 net.cpp:134]     with loss weight 1
I0428 20:03:15.433996 30146 net.cpp:139] Memory required for data: 6450808
I0428 20:03:15.434005 30146 net.cpp:200] loss needs backward computation.
I0428 20:03:15.434008 30146 net.cpp:202] accuracy does not need backward computation.
I0428 20:03:15.434028 30146 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:03:15.434031 30146 net.cpp:200] relu2 needs backward computation.
I0428 20:03:15.434034 30146 net.cpp:200] ip2 needs backward computation.
I0428 20:03:15.434037 30146 net.cpp:200] relu1 needs backward computation.
I0428 20:03:15.434041 30146 net.cpp:200] ip1 needs backward computation.
I0428 20:03:15.434043 30146 net.cpp:200] pool1 needs backward computation.
I0428 20:03:15.434047 30146 net.cpp:200] conv1 needs backward computation.
I0428 20:03:15.434052 30146 net.cpp:200] pool0 needs backward computation.
I0428 20:03:15.434056 30146 net.cpp:200] conv0 needs backward computation.
I0428 20:03:15.434058 30146 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:03:15.434062 30146 net.cpp:202] mnist does not need backward computation.
I0428 20:03:15.434065 30146 net.cpp:244] This network produces output accuracy
I0428 20:03:15.434068 30146 net.cpp:244] This network produces output loss
I0428 20:03:15.434079 30146 net.cpp:257] Network initialization done.
I0428 20:03:15.434128 30146 solver.cpp:56] Solver scaffolding done.
I0428 20:03:15.434424 30146 caffe.cpp:248] Starting Optimization
I0428 20:03:15.434432 30146 solver.cpp:273] Solving LeNet
I0428 20:03:15.434435 30146 solver.cpp:274] Learning Rate Policy: inv
I0428 20:03:15.435241 30146 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:03:15.440543 30146 blocking_queue.cpp:49] Waiting for data
I0428 20:03:15.509694 30153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:15.510313 30146 solver.cpp:398]     Test net output #0: accuracy = 0.0803
I0428 20:03:15.510331 30146 solver.cpp:398]     Test net output #1: loss = 2.3294 (* 1 = 2.3294 loss)
I0428 20:03:15.514024 30146 solver.cpp:219] Iteration 0 (2.86124 iter/s, 0.0795631s/100 iters), loss = 2.32212
I0428 20:03:15.514062 30146 solver.cpp:238]     Train net output #0: loss = 2.32212 (* 1 = 2.32212 loss)
I0428 20:03:15.514076 30146 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:03:15.664461 30146 solver.cpp:219] Iteration 100 (664.898 iter/s, 0.150399s/100 iters), loss = 0.250941
I0428 20:03:15.664485 30146 solver.cpp:238]     Train net output #0: loss = 0.250941 (* 1 = 0.250941 loss)
I0428 20:03:15.664491 30146 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:03:15.816623 30146 solver.cpp:219] Iteration 200 (657.365 iter/s, 0.152122s/100 iters), loss = 0.173287
I0428 20:03:15.816676 30146 solver.cpp:238]     Train net output #0: loss = 0.173287 (* 1 = 0.173287 loss)
I0428 20:03:15.816682 30146 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:03:15.967239 30146 solver.cpp:219] Iteration 300 (664.166 iter/s, 0.150565s/100 iters), loss = 0.180343
I0428 20:03:15.967275 30146 solver.cpp:238]     Train net output #0: loss = 0.180343 (* 1 = 0.180343 loss)
I0428 20:03:15.967281 30146 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:03:16.115031 30146 solver.cpp:219] Iteration 400 (676.791 iter/s, 0.147756s/100 iters), loss = 0.0821846
I0428 20:03:16.115068 30146 solver.cpp:238]     Train net output #0: loss = 0.0821846 (* 1 = 0.0821846 loss)
I0428 20:03:16.115075 30146 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:03:16.264941 30146 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:03:16.317657 30153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:16.319552 30146 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 20:03:16.319587 30146 solver.cpp:398]     Test net output #1: loss = 0.114736 (* 1 = 0.114736 loss)
I0428 20:03:16.320930 30146 solver.cpp:219] Iteration 500 (485.777 iter/s, 0.205856s/100 iters), loss = 0.0847118
I0428 20:03:16.320969 30146 solver.cpp:238]     Train net output #0: loss = 0.0847118 (* 1 = 0.0847118 loss)
I0428 20:03:16.320976 30146 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:03:16.471549 30146 solver.cpp:219] Iteration 600 (664.089 iter/s, 0.150582s/100 iters), loss = 0.109433
I0428 20:03:16.471578 30146 solver.cpp:238]     Train net output #0: loss = 0.109433 (* 1 = 0.109433 loss)
I0428 20:03:16.471585 30146 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:03:16.625542 30146 solver.cpp:219] Iteration 700 (649.556 iter/s, 0.153951s/100 iters), loss = 0.115675
I0428 20:03:16.625587 30146 solver.cpp:238]     Train net output #0: loss = 0.115675 (* 1 = 0.115675 loss)
I0428 20:03:16.625609 30146 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:03:16.772639 30146 solver.cpp:219] Iteration 800 (680.015 iter/s, 0.147056s/100 iters), loss = 0.187357
I0428 20:03:16.772681 30146 solver.cpp:238]     Train net output #0: loss = 0.187357 (* 1 = 0.187357 loss)
I0428 20:03:16.772688 30146 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:03:16.919723 30146 solver.cpp:219] Iteration 900 (680.062 iter/s, 0.147045s/100 iters), loss = 0.134343
I0428 20:03:16.919759 30146 solver.cpp:238]     Train net output #0: loss = 0.134343 (* 1 = 0.134343 loss)
I0428 20:03:16.919765 30146 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:03:16.967936 30152 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:17.065582 30146 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:03:17.068363 30146 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:03:17.069728 30146 solver.cpp:311] Iteration 1000, loss = 0.101117
I0428 20:03:17.069746 30146 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:03:17.123129 30153 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:03:17.124526 30146 solver.cpp:398]     Test net output #0: accuracy = 0.9781
I0428 20:03:17.124563 30146 solver.cpp:398]     Test net output #1: loss = 0.0710847 (* 1 = 0.0710847 loss)
I0428 20:03:17.124570 30146 solver.cpp:316] Optimization Done.
I0428 20:03:17.124588 30146 caffe.cpp:259] Optimization Done.
