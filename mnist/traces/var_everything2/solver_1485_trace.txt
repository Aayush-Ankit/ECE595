I0428 20:27:14.869931  3007 caffe.cpp:218] Using GPUs 0
I0428 20:27:14.901433  3007 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:27:15.410081  3007 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1485.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:27:15.410218  3007 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1485.prototxt
I0428 20:27:15.410604  3007 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:27:15.410622  3007 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:27:15.410713  3007 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:15.410786  3007 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:15.410887  3007 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:27:15.410909  3007 net.cpp:86] Creating Layer mnist
I0428 20:27:15.410918  3007 net.cpp:382] mnist -> data
I0428 20:27:15.410941  3007 net.cpp:382] mnist -> label
I0428 20:27:15.412065  3007 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:27:15.414649  3007 net.cpp:124] Setting up mnist
I0428 20:27:15.414667  3007 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:27:15.414674  3007 net.cpp:131] Top shape: 64 (64)
I0428 20:27:15.414677  3007 net.cpp:139] Memory required for data: 200960
I0428 20:27:15.414685  3007 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:15.414701  3007 net.cpp:86] Creating Layer conv0
I0428 20:27:15.414707  3007 net.cpp:408] conv0 <- data
I0428 20:27:15.414721  3007 net.cpp:382] conv0 -> conv0
I0428 20:27:15.677741  3007 net.cpp:124] Setting up conv0
I0428 20:27:15.677765  3007 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:27:15.677769  3007 net.cpp:139] Memory required for data: 14946560
I0428 20:27:15.677801  3007 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:15.677814  3007 net.cpp:86] Creating Layer pool0
I0428 20:27:15.677819  3007 net.cpp:408] pool0 <- conv0
I0428 20:27:15.677839  3007 net.cpp:382] pool0 -> pool0
I0428 20:27:15.677884  3007 net.cpp:124] Setting up pool0
I0428 20:27:15.677891  3007 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:27:15.677892  3007 net.cpp:139] Memory required for data: 18632960
I0428 20:27:15.677896  3007 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:15.677906  3007 net.cpp:86] Creating Layer conv1
I0428 20:27:15.677908  3007 net.cpp:408] conv1 <- pool0
I0428 20:27:15.677913  3007 net.cpp:382] conv1 -> conv1
I0428 20:27:15.680635  3007 net.cpp:124] Setting up conv1
I0428 20:27:15.680649  3007 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:27:15.680652  3007 net.cpp:139] Memory required for data: 18714880
I0428 20:27:15.680660  3007 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:15.680667  3007 net.cpp:86] Creating Layer pool1
I0428 20:27:15.680671  3007 net.cpp:408] pool1 <- conv1
I0428 20:27:15.680675  3007 net.cpp:382] pool1 -> pool1
I0428 20:27:15.680748  3007 net.cpp:124] Setting up pool1
I0428 20:27:15.680754  3007 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:27:15.680757  3007 net.cpp:139] Memory required for data: 18735360
I0428 20:27:15.680760  3007 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:15.680768  3007 net.cpp:86] Creating Layer ip1
I0428 20:27:15.680771  3007 net.cpp:408] ip1 <- pool1
I0428 20:27:15.680775  3007 net.cpp:382] ip1 -> ip1
I0428 20:27:15.680889  3007 net.cpp:124] Setting up ip1
I0428 20:27:15.680897  3007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:15.680901  3007 net.cpp:139] Memory required for data: 18737920
I0428 20:27:15.680908  3007 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:15.680913  3007 net.cpp:86] Creating Layer relu1
I0428 20:27:15.680917  3007 net.cpp:408] relu1 <- ip1
I0428 20:27:15.680922  3007 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:15.681084  3007 net.cpp:124] Setting up relu1
I0428 20:27:15.681093  3007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:15.681097  3007 net.cpp:139] Memory required for data: 18740480
I0428 20:27:15.681099  3007 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:15.681120  3007 net.cpp:86] Creating Layer ip2
I0428 20:27:15.681123  3007 net.cpp:408] ip2 <- ip1
I0428 20:27:15.681128  3007 net.cpp:382] ip2 -> ip2
I0428 20:27:15.681233  3007 net.cpp:124] Setting up ip2
I0428 20:27:15.681241  3007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:15.681243  3007 net.cpp:139] Memory required for data: 18743040
I0428 20:27:15.681248  3007 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:15.681253  3007 net.cpp:86] Creating Layer relu2
I0428 20:27:15.681257  3007 net.cpp:408] relu2 <- ip2
I0428 20:27:15.681260  3007 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:15.682018  3007 net.cpp:124] Setting up relu2
I0428 20:27:15.682046  3007 net.cpp:131] Top shape: 64 10 (640)
I0428 20:27:15.682050  3007 net.cpp:139] Memory required for data: 18745600
I0428 20:27:15.682054  3007 layer_factory.hpp:77] Creating layer loss
I0428 20:27:15.682060  3007 net.cpp:86] Creating Layer loss
I0428 20:27:15.682065  3007 net.cpp:408] loss <- ip2
I0428 20:27:15.682070  3007 net.cpp:408] loss <- label
I0428 20:27:15.682075  3007 net.cpp:382] loss -> loss
I0428 20:27:15.682092  3007 layer_factory.hpp:77] Creating layer loss
I0428 20:27:15.682337  3007 net.cpp:124] Setting up loss
I0428 20:27:15.682348  3007 net.cpp:131] Top shape: (1)
I0428 20:27:15.682351  3007 net.cpp:134]     with loss weight 1
I0428 20:27:15.682364  3007 net.cpp:139] Memory required for data: 18745604
I0428 20:27:15.682368  3007 net.cpp:200] loss needs backward computation.
I0428 20:27:15.682371  3007 net.cpp:200] relu2 needs backward computation.
I0428 20:27:15.682374  3007 net.cpp:200] ip2 needs backward computation.
I0428 20:27:15.682377  3007 net.cpp:200] relu1 needs backward computation.
I0428 20:27:15.682380  3007 net.cpp:200] ip1 needs backward computation.
I0428 20:27:15.682394  3007 net.cpp:200] pool1 needs backward computation.
I0428 20:27:15.682396  3007 net.cpp:200] conv1 needs backward computation.
I0428 20:27:15.682399  3007 net.cpp:200] pool0 needs backward computation.
I0428 20:27:15.682402  3007 net.cpp:200] conv0 needs backward computation.
I0428 20:27:15.682406  3007 net.cpp:202] mnist does not need backward computation.
I0428 20:27:15.682409  3007 net.cpp:244] This network produces output loss
I0428 20:27:15.682417  3007 net.cpp:257] Network initialization done.
I0428 20:27:15.682701  3007 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1485.prototxt
I0428 20:27:15.682737  3007 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:27:15.682821  3007 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:27:15.682880  3007 layer_factory.hpp:77] Creating layer mnist
I0428 20:27:15.682937  3007 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:27:15.682950  3007 net.cpp:86] Creating Layer mnist
I0428 20:27:15.682955  3007 net.cpp:382] mnist -> data
I0428 20:27:15.682962  3007 net.cpp:382] mnist -> label
I0428 20:27:15.683050  3007 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:27:15.685106  3007 net.cpp:124] Setting up mnist
I0428 20:27:15.685137  3007 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:27:15.685142  3007 net.cpp:131] Top shape: 100 (100)
I0428 20:27:15.685148  3007 net.cpp:139] Memory required for data: 314000
I0428 20:27:15.685153  3007 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:27:15.685178  3007 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:27:15.685199  3007 net.cpp:408] label_mnist_1_split <- label
I0428 20:27:15.685225  3007 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:27:15.685250  3007 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:27:15.685391  3007 net.cpp:124] Setting up label_mnist_1_split
I0428 20:27:15.685401  3007 net.cpp:131] Top shape: 100 (100)
I0428 20:27:15.685405  3007 net.cpp:131] Top shape: 100 (100)
I0428 20:27:15.685408  3007 net.cpp:139] Memory required for data: 314800
I0428 20:27:15.685411  3007 layer_factory.hpp:77] Creating layer conv0
I0428 20:27:15.685421  3007 net.cpp:86] Creating Layer conv0
I0428 20:27:15.685425  3007 net.cpp:408] conv0 <- data
I0428 20:27:15.685431  3007 net.cpp:382] conv0 -> conv0
I0428 20:27:15.687026  3007 net.cpp:124] Setting up conv0
I0428 20:27:15.687038  3007 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:27:15.687057  3007 net.cpp:139] Memory required for data: 23354800
I0428 20:27:15.687067  3007 layer_factory.hpp:77] Creating layer pool0
I0428 20:27:15.687073  3007 net.cpp:86] Creating Layer pool0
I0428 20:27:15.687077  3007 net.cpp:408] pool0 <- conv0
I0428 20:27:15.687081  3007 net.cpp:382] pool0 -> pool0
I0428 20:27:15.687139  3007 net.cpp:124] Setting up pool0
I0428 20:27:15.687144  3007 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:27:15.687146  3007 net.cpp:139] Memory required for data: 29114800
I0428 20:27:15.687150  3007 layer_factory.hpp:77] Creating layer conv1
I0428 20:27:15.687160  3007 net.cpp:86] Creating Layer conv1
I0428 20:27:15.687163  3007 net.cpp:408] conv1 <- pool0
I0428 20:27:15.687170  3007 net.cpp:382] conv1 -> conv1
I0428 20:27:15.688835  3007 net.cpp:124] Setting up conv1
I0428 20:27:15.688865  3007 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:27:15.688869  3007 net.cpp:139] Memory required for data: 29242800
I0428 20:27:15.688879  3007 layer_factory.hpp:77] Creating layer pool1
I0428 20:27:15.688885  3007 net.cpp:86] Creating Layer pool1
I0428 20:27:15.688889  3007 net.cpp:408] pool1 <- conv1
I0428 20:27:15.688895  3007 net.cpp:382] pool1 -> pool1
I0428 20:27:15.688935  3007 net.cpp:124] Setting up pool1
I0428 20:27:15.688941  3007 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:27:15.688944  3007 net.cpp:139] Memory required for data: 29274800
I0428 20:27:15.688947  3007 layer_factory.hpp:77] Creating layer ip1
I0428 20:27:15.688952  3007 net.cpp:86] Creating Layer ip1
I0428 20:27:15.688956  3007 net.cpp:408] ip1 <- pool1
I0428 20:27:15.688963  3007 net.cpp:382] ip1 -> ip1
I0428 20:27:15.689129  3007 net.cpp:124] Setting up ip1
I0428 20:27:15.689141  3007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:15.689143  3007 net.cpp:139] Memory required for data: 29278800
I0428 20:27:15.689152  3007 layer_factory.hpp:77] Creating layer relu1
I0428 20:27:15.689158  3007 net.cpp:86] Creating Layer relu1
I0428 20:27:15.689162  3007 net.cpp:408] relu1 <- ip1
I0428 20:27:15.689168  3007 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:27:15.689358  3007 net.cpp:124] Setting up relu1
I0428 20:27:15.689368  3007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:15.689371  3007 net.cpp:139] Memory required for data: 29282800
I0428 20:27:15.689375  3007 layer_factory.hpp:77] Creating layer ip2
I0428 20:27:15.689384  3007 net.cpp:86] Creating Layer ip2
I0428 20:27:15.689388  3007 net.cpp:408] ip2 <- ip1
I0428 20:27:15.689393  3007 net.cpp:382] ip2 -> ip2
I0428 20:27:15.689505  3007 net.cpp:124] Setting up ip2
I0428 20:27:15.689513  3007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:15.689517  3007 net.cpp:139] Memory required for data: 29286800
I0428 20:27:15.689522  3007 layer_factory.hpp:77] Creating layer relu2
I0428 20:27:15.689527  3007 net.cpp:86] Creating Layer relu2
I0428 20:27:15.689530  3007 net.cpp:408] relu2 <- ip2
I0428 20:27:15.689537  3007 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:27:15.689704  3007 net.cpp:124] Setting up relu2
I0428 20:27:15.689735  3007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:15.689739  3007 net.cpp:139] Memory required for data: 29290800
I0428 20:27:15.689743  3007 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:27:15.689746  3007 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:27:15.689750  3007 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:27:15.689756  3007 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:27:15.689774  3007 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:27:15.689813  3007 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:27:15.689821  3007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:15.689824  3007 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:27:15.689827  3007 net.cpp:139] Memory required for data: 29298800
I0428 20:27:15.689829  3007 layer_factory.hpp:77] Creating layer accuracy
I0428 20:27:15.689836  3007 net.cpp:86] Creating Layer accuracy
I0428 20:27:15.689839  3007 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:27:15.689843  3007 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:27:15.689848  3007 net.cpp:382] accuracy -> accuracy
I0428 20:27:15.689854  3007 net.cpp:124] Setting up accuracy
I0428 20:27:15.689858  3007 net.cpp:131] Top shape: (1)
I0428 20:27:15.689862  3007 net.cpp:139] Memory required for data: 29298804
I0428 20:27:15.689863  3007 layer_factory.hpp:77] Creating layer loss
I0428 20:27:15.689868  3007 net.cpp:86] Creating Layer loss
I0428 20:27:15.689872  3007 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:27:15.689874  3007 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:27:15.689878  3007 net.cpp:382] loss -> loss
I0428 20:27:15.689883  3007 layer_factory.hpp:77] Creating layer loss
I0428 20:27:15.690137  3007 net.cpp:124] Setting up loss
I0428 20:27:15.690152  3007 net.cpp:131] Top shape: (1)
I0428 20:27:15.690155  3007 net.cpp:134]     with loss weight 1
I0428 20:27:15.690162  3007 net.cpp:139] Memory required for data: 29298808
I0428 20:27:15.690165  3007 net.cpp:200] loss needs backward computation.
I0428 20:27:15.690170  3007 net.cpp:202] accuracy does not need backward computation.
I0428 20:27:15.690173  3007 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:27:15.690176  3007 net.cpp:200] relu2 needs backward computation.
I0428 20:27:15.690178  3007 net.cpp:200] ip2 needs backward computation.
I0428 20:27:15.690181  3007 net.cpp:200] relu1 needs backward computation.
I0428 20:27:15.690184  3007 net.cpp:200] ip1 needs backward computation.
I0428 20:27:15.690187  3007 net.cpp:200] pool1 needs backward computation.
I0428 20:27:15.690191  3007 net.cpp:200] conv1 needs backward computation.
I0428 20:27:15.690193  3007 net.cpp:200] pool0 needs backward computation.
I0428 20:27:15.690197  3007 net.cpp:200] conv0 needs backward computation.
I0428 20:27:15.690201  3007 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:27:15.690204  3007 net.cpp:202] mnist does not need backward computation.
I0428 20:27:15.690207  3007 net.cpp:244] This network produces output accuracy
I0428 20:27:15.690210  3007 net.cpp:244] This network produces output loss
I0428 20:27:15.690219  3007 net.cpp:257] Network initialization done.
I0428 20:27:15.690255  3007 solver.cpp:56] Solver scaffolding done.
I0428 20:27:15.690526  3007 caffe.cpp:248] Starting Optimization
I0428 20:27:15.690533  3007 solver.cpp:273] Solving LeNet
I0428 20:27:15.690536  3007 solver.cpp:274] Learning Rate Policy: inv
I0428 20:27:15.691335  3007 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:27:15.705060  3007 blocking_queue.cpp:49] Waiting for data
I0428 20:27:15.784924  3015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:15.786414  3007 solver.cpp:398]     Test net output #0: accuracy = 0.1006
I0428 20:27:15.786450  3007 solver.cpp:398]     Test net output #1: loss = 2.35483 (* 1 = 2.35483 loss)
I0428 20:27:15.790987  3007 solver.cpp:219] Iteration 0 (-2.90148e-31 iter/s, 0.100422s/100 iters), loss = 2.3495
I0428 20:27:15.791028  3007 solver.cpp:238]     Train net output #0: loss = 2.3495 (* 1 = 2.3495 loss)
I0428 20:27:15.791039  3007 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:27:15.989882  3007 solver.cpp:219] Iteration 100 (502.921 iter/s, 0.198838s/100 iters), loss = 0.447813
I0428 20:27:15.989924  3007 solver.cpp:238]     Train net output #0: loss = 0.447813 (* 1 = 0.447813 loss)
I0428 20:27:15.989930  3007 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:27:16.194053  3007 solver.cpp:219] Iteration 200 (489.935 iter/s, 0.204109s/100 iters), loss = 0.233335
I0428 20:27:16.194106  3007 solver.cpp:238]     Train net output #0: loss = 0.233335 (* 1 = 0.233335 loss)
I0428 20:27:16.194119  3007 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:27:16.404665  3007 solver.cpp:219] Iteration 300 (474.959 iter/s, 0.210544s/100 iters), loss = 0.311206
I0428 20:27:16.404709  3007 solver.cpp:238]     Train net output #0: loss = 0.311206 (* 1 = 0.311206 loss)
I0428 20:27:16.404721  3007 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:27:16.605726  3007 solver.cpp:219] Iteration 400 (497.508 iter/s, 0.201002s/100 iters), loss = 0.165824
I0428 20:27:16.605762  3007 solver.cpp:238]     Train net output #0: loss = 0.165824 (* 1 = 0.165824 loss)
I0428 20:27:16.605770  3007 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:27:16.803884  3007 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:27:16.897101  3015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:16.899688  3007 solver.cpp:398]     Test net output #0: accuracy = 0.9395
I0428 20:27:16.899716  3007 solver.cpp:398]     Test net output #1: loss = 0.189268 (* 1 = 0.189268 loss)
I0428 20:27:16.901595  3007 solver.cpp:219] Iteration 500 (338.05 iter/s, 0.295814s/100 iters), loss = 0.126983
I0428 20:27:16.901625  3007 solver.cpp:238]     Train net output #0: loss = 0.126983 (* 1 = 0.126983 loss)
I0428 20:27:16.901633  3007 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:27:17.101620  3007 solver.cpp:219] Iteration 600 (500.052 iter/s, 0.199979s/100 iters), loss = 0.0986459
I0428 20:27:17.101656  3007 solver.cpp:238]     Train net output #0: loss = 0.0986458 (* 1 = 0.0986458 loss)
I0428 20:27:17.101665  3007 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:27:17.303918  3007 solver.cpp:219] Iteration 700 (494.455 iter/s, 0.202243s/100 iters), loss = 0.229837
I0428 20:27:17.303966  3007 solver.cpp:238]     Train net output #0: loss = 0.229837 (* 1 = 0.229837 loss)
I0428 20:27:17.303979  3007 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:27:17.514958  3007 solver.cpp:219] Iteration 800 (473.986 iter/s, 0.210977s/100 iters), loss = 0.264282
I0428 20:27:17.515004  3007 solver.cpp:238]     Train net output #0: loss = 0.264282 (* 1 = 0.264282 loss)
I0428 20:27:17.515015  3007 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:27:17.727811  3007 solver.cpp:219] Iteration 900 (469.951 iter/s, 0.212788s/100 iters), loss = 0.225966
I0428 20:27:17.727864  3007 solver.cpp:238]     Train net output #0: loss = 0.225966 (* 1 = 0.225966 loss)
I0428 20:27:17.727877  3007 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:27:17.800133  3014 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:17.941671  3007 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:27:17.943665  3007 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:27:17.944983  3007 solver.cpp:311] Iteration 1000, loss = 0.112335
I0428 20:27:17.945014  3007 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:27:18.047816  3015 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:27:18.050415  3007 solver.cpp:398]     Test net output #0: accuracy = 0.9689
I0428 20:27:18.050441  3007 solver.cpp:398]     Test net output #1: loss = 0.100051 (* 1 = 0.100051 loss)
I0428 20:27:18.050446  3007 solver.cpp:316] Optimization Done.
I0428 20:27:18.050453  3007 caffe.cpp:259] Optimization Done.
