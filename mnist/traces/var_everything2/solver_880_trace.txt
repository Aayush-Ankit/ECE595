I0428 20:00:35.035774 29509 caffe.cpp:218] Using GPUs 0
I0428 20:00:35.072012 29509 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:35.580971 29509 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test880.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:35.581125 29509 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test880.prototxt
I0428 20:00:35.582255 29509 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:35.582299 29509 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:35.582465 29509 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:35.582589 29509 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:35.582737 29509 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:35.582770 29509 net.cpp:86] Creating Layer mnist
I0428 20:00:35.582785 29509 net.cpp:382] mnist -> data
I0428 20:00:35.582818 29509 net.cpp:382] mnist -> label
I0428 20:00:35.584465 29509 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:35.588186 29509 net.cpp:124] Setting up mnist
I0428 20:00:35.588215 29509 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:35.588227 29509 net.cpp:131] Top shape: 64 (64)
I0428 20:00:35.588232 29509 net.cpp:139] Memory required for data: 200960
I0428 20:00:35.588243 29509 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:35.588268 29509 net.cpp:86] Creating Layer conv0
I0428 20:00:35.588299 29509 net.cpp:408] conv0 <- data
I0428 20:00:35.588318 29509 net.cpp:382] conv0 -> conv0
I0428 20:00:35.900851 29509 net.cpp:124] Setting up conv0
I0428 20:00:35.900882 29509 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:35.900887 29509 net.cpp:139] Memory required for data: 1675520
I0428 20:00:35.900904 29509 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:35.900919 29509 net.cpp:86] Creating Layer pool0
I0428 20:00:35.900924 29509 net.cpp:408] pool0 <- conv0
I0428 20:00:35.900931 29509 net.cpp:382] pool0 -> pool0
I0428 20:00:35.900987 29509 net.cpp:124] Setting up pool0
I0428 20:00:35.900996 29509 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:35.901001 29509 net.cpp:139] Memory required for data: 2044160
I0428 20:00:35.901005 29509 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:35.901018 29509 net.cpp:86] Creating Layer conv1
I0428 20:00:35.901022 29509 net.cpp:408] conv1 <- pool0
I0428 20:00:35.901028 29509 net.cpp:382] conv1 -> conv1
I0428 20:00:35.904181 29509 net.cpp:124] Setting up conv1
I0428 20:00:35.904198 29509 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:35.904203 29509 net.cpp:139] Memory required for data: 2453760
I0428 20:00:35.904214 29509 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:35.904223 29509 net.cpp:86] Creating Layer pool1
I0428 20:00:35.904227 29509 net.cpp:408] pool1 <- conv1
I0428 20:00:35.904233 29509 net.cpp:382] pool1 -> pool1
I0428 20:00:35.904279 29509 net.cpp:124] Setting up pool1
I0428 20:00:35.904289 29509 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:35.904291 29509 net.cpp:139] Memory required for data: 2556160
I0428 20:00:35.904295 29509 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:35.904304 29509 net.cpp:86] Creating Layer ip1
I0428 20:00:35.904307 29509 net.cpp:408] ip1 <- pool1
I0428 20:00:35.904314 29509 net.cpp:382] ip1 -> ip1
I0428 20:00:35.904497 29509 net.cpp:124] Setting up ip1
I0428 20:00:35.904506 29509 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:35.904510 29509 net.cpp:139] Memory required for data: 2562560
I0428 20:00:35.904520 29509 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:35.904526 29509 net.cpp:86] Creating Layer relu1
I0428 20:00:35.904531 29509 net.cpp:408] relu1 <- ip1
I0428 20:00:35.904536 29509 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:35.904727 29509 net.cpp:124] Setting up relu1
I0428 20:00:35.904737 29509 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:00:35.904742 29509 net.cpp:139] Memory required for data: 2568960
I0428 20:00:35.904744 29509 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:35.904752 29509 net.cpp:86] Creating Layer ip2
I0428 20:00:35.904757 29509 net.cpp:408] ip2 <- ip1
I0428 20:00:35.904762 29509 net.cpp:382] ip2 -> ip2
I0428 20:00:35.904898 29509 net.cpp:124] Setting up ip2
I0428 20:00:35.904908 29509 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:35.904912 29509 net.cpp:139] Memory required for data: 2571520
I0428 20:00:35.904918 29509 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:35.904927 29509 net.cpp:86] Creating Layer relu2
I0428 20:00:35.904929 29509 net.cpp:408] relu2 <- ip2
I0428 20:00:35.904934 29509 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:35.905773 29509 net.cpp:124] Setting up relu2
I0428 20:00:35.905789 29509 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:35.905793 29509 net.cpp:139] Memory required for data: 2574080
I0428 20:00:35.905798 29509 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:35.905807 29509 net.cpp:86] Creating Layer ip3
I0428 20:00:35.905810 29509 net.cpp:408] ip3 <- ip2
I0428 20:00:35.905817 29509 net.cpp:382] ip3 -> ip3
I0428 20:00:35.905936 29509 net.cpp:124] Setting up ip3
I0428 20:00:35.905956 29509 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:35.905959 29509 net.cpp:139] Memory required for data: 2576640
I0428 20:00:35.905968 29509 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:35.905975 29509 net.cpp:86] Creating Layer relu3
I0428 20:00:35.905978 29509 net.cpp:408] relu3 <- ip3
I0428 20:00:35.905984 29509 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:35.906182 29509 net.cpp:124] Setting up relu3
I0428 20:00:35.906191 29509 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:35.906195 29509 net.cpp:139] Memory required for data: 2579200
I0428 20:00:35.906199 29509 layer_factory.hpp:77] Creating layer loss
I0428 20:00:35.906206 29509 net.cpp:86] Creating Layer loss
I0428 20:00:35.906210 29509 net.cpp:408] loss <- ip3
I0428 20:00:35.906215 29509 net.cpp:408] loss <- label
I0428 20:00:35.906221 29509 net.cpp:382] loss -> loss
I0428 20:00:35.906239 29509 layer_factory.hpp:77] Creating layer loss
I0428 20:00:35.906505 29509 net.cpp:124] Setting up loss
I0428 20:00:35.906517 29509 net.cpp:131] Top shape: (1)
I0428 20:00:35.906520 29509 net.cpp:134]     with loss weight 1
I0428 20:00:35.906541 29509 net.cpp:139] Memory required for data: 2579204
I0428 20:00:35.906546 29509 net.cpp:200] loss needs backward computation.
I0428 20:00:35.906550 29509 net.cpp:200] relu3 needs backward computation.
I0428 20:00:35.906555 29509 net.cpp:200] ip3 needs backward computation.
I0428 20:00:35.906558 29509 net.cpp:200] relu2 needs backward computation.
I0428 20:00:35.906563 29509 net.cpp:200] ip2 needs backward computation.
I0428 20:00:35.906565 29509 net.cpp:200] relu1 needs backward computation.
I0428 20:00:35.906570 29509 net.cpp:200] ip1 needs backward computation.
I0428 20:00:35.906574 29509 net.cpp:200] pool1 needs backward computation.
I0428 20:00:35.906577 29509 net.cpp:200] conv1 needs backward computation.
I0428 20:00:35.906581 29509 net.cpp:200] pool0 needs backward computation.
I0428 20:00:35.906585 29509 net.cpp:200] conv0 needs backward computation.
I0428 20:00:35.906589 29509 net.cpp:202] mnist does not need backward computation.
I0428 20:00:35.906592 29509 net.cpp:244] This network produces output loss
I0428 20:00:35.906604 29509 net.cpp:257] Network initialization done.
I0428 20:00:35.906988 29509 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test880.prototxt
I0428 20:00:35.907030 29509 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:35.907137 29509 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:35.907232 29509 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:35.907286 29509 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:35.907301 29509 net.cpp:86] Creating Layer mnist
I0428 20:00:35.907306 29509 net.cpp:382] mnist -> data
I0428 20:00:35.907316 29509 net.cpp:382] mnist -> label
I0428 20:00:35.907415 29509 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:35.909826 29509 net.cpp:124] Setting up mnist
I0428 20:00:35.909842 29509 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:35.909848 29509 net.cpp:131] Top shape: 100 (100)
I0428 20:00:35.909852 29509 net.cpp:139] Memory required for data: 314000
I0428 20:00:35.909857 29509 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:35.909865 29509 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:35.909869 29509 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:35.909875 29509 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:35.909883 29509 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:35.909939 29509 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:35.909947 29509 net.cpp:131] Top shape: 100 (100)
I0428 20:00:35.909952 29509 net.cpp:131] Top shape: 100 (100)
I0428 20:00:35.909955 29509 net.cpp:139] Memory required for data: 314800
I0428 20:00:35.909960 29509 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:35.909970 29509 net.cpp:86] Creating Layer conv0
I0428 20:00:35.909973 29509 net.cpp:408] conv0 <- data
I0428 20:00:35.909981 29509 net.cpp:382] conv0 -> conv0
I0428 20:00:35.911893 29509 net.cpp:124] Setting up conv0
I0428 20:00:35.911911 29509 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:35.911916 29509 net.cpp:139] Memory required for data: 2618800
I0428 20:00:35.911926 29509 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:35.911934 29509 net.cpp:86] Creating Layer pool0
I0428 20:00:35.911938 29509 net.cpp:408] pool0 <- conv0
I0428 20:00:35.911944 29509 net.cpp:382] pool0 -> pool0
I0428 20:00:35.911988 29509 net.cpp:124] Setting up pool0
I0428 20:00:35.911996 29509 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:35.912000 29509 net.cpp:139] Memory required for data: 3194800
I0428 20:00:35.912003 29509 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:35.912014 29509 net.cpp:86] Creating Layer conv1
I0428 20:00:35.912019 29509 net.cpp:408] conv1 <- pool0
I0428 20:00:35.912025 29509 net.cpp:382] conv1 -> conv1
I0428 20:00:35.914362 29509 net.cpp:124] Setting up conv1
I0428 20:00:35.914378 29509 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:35.914382 29509 net.cpp:139] Memory required for data: 3834800
I0428 20:00:35.914393 29509 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:35.914400 29509 net.cpp:86] Creating Layer pool1
I0428 20:00:35.914404 29509 net.cpp:408] pool1 <- conv1
I0428 20:00:35.914412 29509 net.cpp:382] pool1 -> pool1
I0428 20:00:35.914465 29509 net.cpp:124] Setting up pool1
I0428 20:00:35.914472 29509 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:35.914476 29509 net.cpp:139] Memory required for data: 3994800
I0428 20:00:35.914480 29509 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:35.914489 29509 net.cpp:86] Creating Layer ip1
I0428 20:00:35.914492 29509 net.cpp:408] ip1 <- pool1
I0428 20:00:35.914497 29509 net.cpp:382] ip1 -> ip1
I0428 20:00:35.914718 29509 net.cpp:124] Setting up ip1
I0428 20:00:35.914729 29509 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:35.914747 29509 net.cpp:139] Memory required for data: 4004800
I0428 20:00:35.914757 29509 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:35.914763 29509 net.cpp:86] Creating Layer relu1
I0428 20:00:35.914767 29509 net.cpp:408] relu1 <- ip1
I0428 20:00:35.914773 29509 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:35.914971 29509 net.cpp:124] Setting up relu1
I0428 20:00:35.914983 29509 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:00:35.914986 29509 net.cpp:139] Memory required for data: 4014800
I0428 20:00:35.914990 29509 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:35.914999 29509 net.cpp:86] Creating Layer ip2
I0428 20:00:35.915004 29509 net.cpp:408] ip2 <- ip1
I0428 20:00:35.915009 29509 net.cpp:382] ip2 -> ip2
I0428 20:00:35.915127 29509 net.cpp:124] Setting up ip2
I0428 20:00:35.915134 29509 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:35.915138 29509 net.cpp:139] Memory required for data: 4018800
I0428 20:00:35.915145 29509 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:35.915150 29509 net.cpp:86] Creating Layer relu2
I0428 20:00:35.915154 29509 net.cpp:408] relu2 <- ip2
I0428 20:00:35.915159 29509 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:35.915361 29509 net.cpp:124] Setting up relu2
I0428 20:00:35.915371 29509 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:35.915375 29509 net.cpp:139] Memory required for data: 4022800
I0428 20:00:35.915379 29509 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:35.915387 29509 net.cpp:86] Creating Layer ip3
I0428 20:00:35.915390 29509 net.cpp:408] ip3 <- ip2
I0428 20:00:35.915397 29509 net.cpp:382] ip3 -> ip3
I0428 20:00:35.915565 29509 net.cpp:124] Setting up ip3
I0428 20:00:35.915585 29509 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:35.915591 29509 net.cpp:139] Memory required for data: 4026800
I0428 20:00:35.915599 29509 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:35.915606 29509 net.cpp:86] Creating Layer relu3
I0428 20:00:35.915609 29509 net.cpp:408] relu3 <- ip3
I0428 20:00:35.915614 29509 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:35.916532 29509 net.cpp:124] Setting up relu3
I0428 20:00:35.916546 29509 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:35.916550 29509 net.cpp:139] Memory required for data: 4030800
I0428 20:00:35.916554 29509 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:35.916561 29509 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:35.916565 29509 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:35.916571 29509 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:35.916579 29509 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:35.916625 29509 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:35.916630 29509 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:35.916635 29509 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:35.916637 29509 net.cpp:139] Memory required for data: 4038800
I0428 20:00:35.916641 29509 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:35.916647 29509 net.cpp:86] Creating Layer accuracy
I0428 20:00:35.916651 29509 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:35.916656 29509 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:35.916661 29509 net.cpp:382] accuracy -> accuracy
I0428 20:00:35.916669 29509 net.cpp:124] Setting up accuracy
I0428 20:00:35.916674 29509 net.cpp:131] Top shape: (1)
I0428 20:00:35.916678 29509 net.cpp:139] Memory required for data: 4038804
I0428 20:00:35.916682 29509 layer_factory.hpp:77] Creating layer loss
I0428 20:00:35.916695 29509 net.cpp:86] Creating Layer loss
I0428 20:00:35.916705 29509 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:35.916712 29509 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:35.916716 29509 net.cpp:382] loss -> loss
I0428 20:00:35.916723 29509 layer_factory.hpp:77] Creating layer loss
I0428 20:00:35.917001 29509 net.cpp:124] Setting up loss
I0428 20:00:35.917013 29509 net.cpp:131] Top shape: (1)
I0428 20:00:35.917018 29509 net.cpp:134]     with loss weight 1
I0428 20:00:35.917037 29509 net.cpp:139] Memory required for data: 4038808
I0428 20:00:35.917042 29509 net.cpp:200] loss needs backward computation.
I0428 20:00:35.917047 29509 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:35.917052 29509 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:35.917055 29509 net.cpp:200] relu3 needs backward computation.
I0428 20:00:35.917059 29509 net.cpp:200] ip3 needs backward computation.
I0428 20:00:35.917063 29509 net.cpp:200] relu2 needs backward computation.
I0428 20:00:35.917068 29509 net.cpp:200] ip2 needs backward computation.
I0428 20:00:35.917070 29509 net.cpp:200] relu1 needs backward computation.
I0428 20:00:35.917074 29509 net.cpp:200] ip1 needs backward computation.
I0428 20:00:35.917078 29509 net.cpp:200] pool1 needs backward computation.
I0428 20:00:35.917083 29509 net.cpp:200] conv1 needs backward computation.
I0428 20:00:35.917086 29509 net.cpp:200] pool0 needs backward computation.
I0428 20:00:35.917090 29509 net.cpp:200] conv0 needs backward computation.
I0428 20:00:35.917094 29509 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:35.917099 29509 net.cpp:202] mnist does not need backward computation.
I0428 20:00:35.917104 29509 net.cpp:244] This network produces output accuracy
I0428 20:00:35.917107 29509 net.cpp:244] This network produces output loss
I0428 20:00:35.917120 29509 net.cpp:257] Network initialization done.
I0428 20:00:35.917171 29509 solver.cpp:56] Solver scaffolding done.
I0428 20:00:35.917599 29509 caffe.cpp:248] Starting Optimization
I0428 20:00:35.917606 29509 solver.cpp:273] Solving LeNet
I0428 20:00:35.917609 29509 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:35.917793 29509 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:35.923012 29509 blocking_queue.cpp:49] Waiting for data
I0428 20:00:35.994719 29516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:35.995293 29509 solver.cpp:398]     Test net output #0: accuracy = 0.0974
I0428 20:00:35.995329 29509 solver.cpp:398]     Test net output #1: loss = 2.33819 (* 1 = 2.33819 loss)
I0428 20:00:35.998108 29509 solver.cpp:219] Iteration 0 (-3.34189e-31 iter/s, 0.0804669s/100 iters), loss = 2.33613
I0428 20:00:35.998139 29509 solver.cpp:238]     Train net output #0: loss = 2.33613 (* 1 = 2.33613 loss)
I0428 20:00:35.998153 29509 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:36.090770 29509 solver.cpp:219] Iteration 100 (1079.68 iter/s, 0.0926198s/100 iters), loss = 1.35808
I0428 20:00:36.090802 29509 solver.cpp:238]     Train net output #0: loss = 1.35808 (* 1 = 1.35808 loss)
I0428 20:00:36.090811 29509 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:36.183122 29509 solver.cpp:219] Iteration 200 (1083.31 iter/s, 0.0923095s/100 iters), loss = 0.90767
I0428 20:00:36.183152 29509 solver.cpp:238]     Train net output #0: loss = 0.90767 (* 1 = 0.90767 loss)
I0428 20:00:36.183161 29509 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:36.275396 29509 solver.cpp:219] Iteration 300 (1084.19 iter/s, 0.0922347s/100 iters), loss = 0.700385
I0428 20:00:36.275427 29509 solver.cpp:238]     Train net output #0: loss = 0.700385 (* 1 = 0.700385 loss)
I0428 20:00:36.275435 29509 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:36.367406 29509 solver.cpp:219] Iteration 400 (1087.32 iter/s, 0.0919694s/100 iters), loss = 0.556559
I0428 20:00:36.367437 29509 solver.cpp:238]     Train net output #0: loss = 0.556559 (* 1 = 0.556559 loss)
I0428 20:00:36.367444 29509 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:36.457296 29509 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:36.504711 29516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:36.505935 29509 solver.cpp:398]     Test net output #0: accuracy = 0.778
I0428 20:00:36.505975 29509 solver.cpp:398]     Test net output #1: loss = 0.576162 (* 1 = 0.576162 loss)
I0428 20:00:36.506829 29509 solver.cpp:219] Iteration 500 (717.453 iter/s, 0.139382s/100 iters), loss = 0.644352
I0428 20:00:36.506886 29509 solver.cpp:238]     Train net output #0: loss = 0.644352 (* 1 = 0.644352 loss)
I0428 20:00:36.506892 29509 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:36.594516 29509 solver.cpp:219] Iteration 600 (1141.14 iter/s, 0.0876318s/100 iters), loss = 0.401528
I0428 20:00:36.594550 29509 solver.cpp:238]     Train net output #0: loss = 0.401528 (* 1 = 0.401528 loss)
I0428 20:00:36.594557 29509 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:36.681917 29509 solver.cpp:219] Iteration 700 (1144.61 iter/s, 0.0873659s/100 iters), loss = 0.675842
I0428 20:00:36.681957 29509 solver.cpp:238]     Train net output #0: loss = 0.675842 (* 1 = 0.675842 loss)
I0428 20:00:36.681963 29509 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:36.768376 29509 solver.cpp:219] Iteration 800 (1157.05 iter/s, 0.0864266s/100 iters), loss = 0.705892
I0428 20:00:36.768415 29509 solver.cpp:238]     Train net output #0: loss = 0.705892 (* 1 = 0.705892 loss)
I0428 20:00:36.768421 29509 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:36.853988 29509 solver.cpp:219] Iteration 900 (1168.5 iter/s, 0.0855798s/100 iters), loss = 0.588901
I0428 20:00:36.854027 29509 solver.cpp:238]     Train net output #0: loss = 0.588901 (* 1 = 0.588901 loss)
I0428 20:00:36.854032 29509 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:36.882853 29515 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:36.950522 29509 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:36.951783 29509 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:36.952577 29509 solver.cpp:311] Iteration 1000, loss = 0.678824
I0428 20:00:36.952600 29509 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:37.005595 29516 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:37.007380 29509 solver.cpp:398]     Test net output #0: accuracy = 0.7869
I0428 20:00:37.007416 29509 solver.cpp:398]     Test net output #1: loss = 0.534997 (* 1 = 0.534997 loss)
I0428 20:00:37.007421 29509 solver.cpp:316] Optimization Done.
I0428 20:00:37.007426 29509 caffe.cpp:259] Optimization Done.
