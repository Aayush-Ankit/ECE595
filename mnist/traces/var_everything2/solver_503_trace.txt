I0428 19:46:58.893910 26093 caffe.cpp:218] Using GPUs 0
I0428 19:46:58.925962 26093 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:46:59.371917 26093 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test503.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:46:59.372071 26093 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test503.prototxt
I0428 19:46:59.372423 26093 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:46:59.372452 26093 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:46:59.372550 26093 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:59.372613 26093 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:59.372694 26093 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:46:59.372712 26093 net.cpp:86] Creating Layer mnist
I0428 19:46:59.372719 26093 net.cpp:382] mnist -> data
I0428 19:46:59.372738 26093 net.cpp:382] mnist -> label
I0428 19:46:59.373705 26093 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:46:59.376154 26093 net.cpp:124] Setting up mnist
I0428 19:46:59.376183 26093 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:46:59.376190 26093 net.cpp:131] Top shape: 64 (64)
I0428 19:46:59.376194 26093 net.cpp:139] Memory required for data: 200960
I0428 19:46:59.376199 26093 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:59.376236 26093 net.cpp:86] Creating Layer conv0
I0428 19:46:59.376253 26093 net.cpp:408] conv0 <- data
I0428 19:46:59.376266 26093 net.cpp:382] conv0 -> conv0
I0428 19:46:59.600469 26093 net.cpp:124] Setting up conv0
I0428 19:46:59.600497 26093 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:46:59.600500 26093 net.cpp:139] Memory required for data: 495872
I0428 19:46:59.600514 26093 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:59.600527 26093 net.cpp:86] Creating Layer pool0
I0428 19:46:59.600529 26093 net.cpp:408] pool0 <- conv0
I0428 19:46:59.600536 26093 net.cpp:382] pool0 -> pool0
I0428 19:46:59.600597 26093 net.cpp:124] Setting up pool0
I0428 19:46:59.600603 26093 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:46:59.600606 26093 net.cpp:139] Memory required for data: 569600
I0428 19:46:59.600608 26093 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:59.600620 26093 net.cpp:86] Creating Layer conv1
I0428 19:46:59.600625 26093 net.cpp:408] conv1 <- pool0
I0428 19:46:59.600628 26093 net.cpp:382] conv1 -> conv1
I0428 19:46:59.603605 26093 net.cpp:124] Setting up conv1
I0428 19:46:59.603621 26093 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 19:46:59.603624 26093 net.cpp:139] Memory required for data: 2208000
I0428 19:46:59.603632 26093 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:59.603641 26093 net.cpp:86] Creating Layer pool1
I0428 19:46:59.603643 26093 net.cpp:408] pool1 <- conv1
I0428 19:46:59.603648 26093 net.cpp:382] pool1 -> pool1
I0428 19:46:59.603701 26093 net.cpp:124] Setting up pool1
I0428 19:46:59.603708 26093 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 19:46:59.603710 26093 net.cpp:139] Memory required for data: 2617600
I0428 19:46:59.603713 26093 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:59.603721 26093 net.cpp:86] Creating Layer ip1
I0428 19:46:59.603725 26093 net.cpp:408] ip1 <- pool1
I0428 19:46:59.603730 26093 net.cpp:382] ip1 -> ip1
I0428 19:46:59.605259 26093 net.cpp:124] Setting up ip1
I0428 19:46:59.605271 26093 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:59.605290 26093 net.cpp:139] Memory required for data: 2630400
I0428 19:46:59.605298 26093 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:59.605305 26093 net.cpp:86] Creating Layer relu1
I0428 19:46:59.605309 26093 net.cpp:408] relu1 <- ip1
I0428 19:46:59.605314 26093 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:59.605521 26093 net.cpp:124] Setting up relu1
I0428 19:46:59.605532 26093 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:46:59.605551 26093 net.cpp:139] Memory required for data: 2643200
I0428 19:46:59.605554 26093 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:59.605561 26093 net.cpp:86] Creating Layer ip2
I0428 19:46:59.605564 26093 net.cpp:408] ip2 <- ip1
I0428 19:46:59.605571 26093 net.cpp:382] ip2 -> ip2
I0428 19:46:59.606588 26093 net.cpp:124] Setting up ip2
I0428 19:46:59.606617 26093 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:59.606621 26093 net.cpp:139] Memory required for data: 2649600
I0428 19:46:59.606627 26093 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:59.606634 26093 net.cpp:86] Creating Layer relu2
I0428 19:46:59.606637 26093 net.cpp:408] relu2 <- ip2
I0428 19:46:59.606642 26093 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:59.607436 26093 net.cpp:124] Setting up relu2
I0428 19:46:59.607447 26093 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:46:59.607467 26093 net.cpp:139] Memory required for data: 2656000
I0428 19:46:59.607470 26093 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:59.607478 26093 net.cpp:86] Creating Layer ip3
I0428 19:46:59.607482 26093 net.cpp:408] ip3 <- ip2
I0428 19:46:59.607488 26093 net.cpp:382] ip3 -> ip3
I0428 19:46:59.607611 26093 net.cpp:124] Setting up ip3
I0428 19:46:59.607620 26093 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:59.607622 26093 net.cpp:139] Memory required for data: 2658560
I0428 19:46:59.607630 26093 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:59.607635 26093 net.cpp:86] Creating Layer relu3
I0428 19:46:59.607637 26093 net.cpp:408] relu3 <- ip3
I0428 19:46:59.607645 26093 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:59.607863 26093 net.cpp:124] Setting up relu3
I0428 19:46:59.607873 26093 net.cpp:131] Top shape: 64 10 (640)
I0428 19:46:59.607877 26093 net.cpp:139] Memory required for data: 2661120
I0428 19:46:59.607880 26093 layer_factory.hpp:77] Creating layer loss
I0428 19:46:59.607887 26093 net.cpp:86] Creating Layer loss
I0428 19:46:59.607890 26093 net.cpp:408] loss <- ip3
I0428 19:46:59.607894 26093 net.cpp:408] loss <- label
I0428 19:46:59.607902 26093 net.cpp:382] loss -> loss
I0428 19:46:59.607920 26093 layer_factory.hpp:77] Creating layer loss
I0428 19:46:59.608191 26093 net.cpp:124] Setting up loss
I0428 19:46:59.608201 26093 net.cpp:131] Top shape: (1)
I0428 19:46:59.608204 26093 net.cpp:134]     with loss weight 1
I0428 19:46:59.608218 26093 net.cpp:139] Memory required for data: 2661124
I0428 19:46:59.608222 26093 net.cpp:200] loss needs backward computation.
I0428 19:46:59.608224 26093 net.cpp:200] relu3 needs backward computation.
I0428 19:46:59.608227 26093 net.cpp:200] ip3 needs backward computation.
I0428 19:46:59.608232 26093 net.cpp:200] relu2 needs backward computation.
I0428 19:46:59.608233 26093 net.cpp:200] ip2 needs backward computation.
I0428 19:46:59.608237 26093 net.cpp:200] relu1 needs backward computation.
I0428 19:46:59.608239 26093 net.cpp:200] ip1 needs backward computation.
I0428 19:46:59.608242 26093 net.cpp:200] pool1 needs backward computation.
I0428 19:46:59.608244 26093 net.cpp:200] conv1 needs backward computation.
I0428 19:46:59.608247 26093 net.cpp:200] pool0 needs backward computation.
I0428 19:46:59.608250 26093 net.cpp:200] conv0 needs backward computation.
I0428 19:46:59.608253 26093 net.cpp:202] mnist does not need backward computation.
I0428 19:46:59.608256 26093 net.cpp:244] This network produces output loss
I0428 19:46:59.608266 26093 net.cpp:257] Network initialization done.
I0428 19:46:59.608587 26093 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test503.prototxt
I0428 19:46:59.608613 26093 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:46:59.608707 26093 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:46:59.608801 26093 layer_factory.hpp:77] Creating layer mnist
I0428 19:46:59.608882 26093 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:46:59.608896 26093 net.cpp:86] Creating Layer mnist
I0428 19:46:59.608901 26093 net.cpp:382] mnist -> data
I0428 19:46:59.608909 26093 net.cpp:382] mnist -> label
I0428 19:46:59.609000 26093 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:46:59.610328 26093 net.cpp:124] Setting up mnist
I0428 19:46:59.610357 26093 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:46:59.610363 26093 net.cpp:131] Top shape: 100 (100)
I0428 19:46:59.610365 26093 net.cpp:139] Memory required for data: 314000
I0428 19:46:59.610368 26093 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:46:59.610440 26093 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:46:59.610460 26093 net.cpp:408] label_mnist_1_split <- label
I0428 19:46:59.610465 26093 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:46:59.610486 26093 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:46:59.610534 26093 net.cpp:124] Setting up label_mnist_1_split
I0428 19:46:59.610543 26093 net.cpp:131] Top shape: 100 (100)
I0428 19:46:59.610546 26093 net.cpp:131] Top shape: 100 (100)
I0428 19:46:59.610549 26093 net.cpp:139] Memory required for data: 314800
I0428 19:46:59.610553 26093 layer_factory.hpp:77] Creating layer conv0
I0428 19:46:59.610563 26093 net.cpp:86] Creating Layer conv0
I0428 19:46:59.610565 26093 net.cpp:408] conv0 <- data
I0428 19:46:59.610572 26093 net.cpp:382] conv0 -> conv0
I0428 19:46:59.612695 26093 net.cpp:124] Setting up conv0
I0428 19:46:59.612709 26093 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:46:59.612712 26093 net.cpp:139] Memory required for data: 775600
I0428 19:46:59.612722 26093 layer_factory.hpp:77] Creating layer pool0
I0428 19:46:59.612745 26093 net.cpp:86] Creating Layer pool0
I0428 19:46:59.612747 26093 net.cpp:408] pool0 <- conv0
I0428 19:46:59.612752 26093 net.cpp:382] pool0 -> pool0
I0428 19:46:59.612790 26093 net.cpp:124] Setting up pool0
I0428 19:46:59.612797 26093 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:46:59.612799 26093 net.cpp:139] Memory required for data: 890800
I0428 19:46:59.612802 26093 layer_factory.hpp:77] Creating layer conv1
I0428 19:46:59.612838 26093 net.cpp:86] Creating Layer conv1
I0428 19:46:59.612844 26093 net.cpp:408] conv1 <- pool0
I0428 19:46:59.612853 26093 net.cpp:382] conv1 -> conv1
I0428 19:46:59.614658 26093 net.cpp:124] Setting up conv1
I0428 19:46:59.614676 26093 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 19:46:59.614681 26093 net.cpp:139] Memory required for data: 3450800
I0428 19:46:59.614691 26093 layer_factory.hpp:77] Creating layer pool1
I0428 19:46:59.614706 26093 net.cpp:86] Creating Layer pool1
I0428 19:46:59.614722 26093 net.cpp:408] pool1 <- conv1
I0428 19:46:59.614729 26093 net.cpp:382] pool1 -> pool1
I0428 19:46:59.614769 26093 net.cpp:124] Setting up pool1
I0428 19:46:59.614780 26093 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 19:46:59.614784 26093 net.cpp:139] Memory required for data: 4090800
I0428 19:46:59.614787 26093 layer_factory.hpp:77] Creating layer ip1
I0428 19:46:59.614795 26093 net.cpp:86] Creating Layer ip1
I0428 19:46:59.614799 26093 net.cpp:408] ip1 <- pool1
I0428 19:46:59.614804 26093 net.cpp:382] ip1 -> ip1
I0428 19:46:59.615414 26093 net.cpp:124] Setting up ip1
I0428 19:46:59.615423 26093 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:59.615438 26093 net.cpp:139] Memory required for data: 4110800
I0428 19:46:59.615445 26093 layer_factory.hpp:77] Creating layer relu1
I0428 19:46:59.615453 26093 net.cpp:86] Creating Layer relu1
I0428 19:46:59.615456 26093 net.cpp:408] relu1 <- ip1
I0428 19:46:59.615483 26093 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:46:59.615741 26093 net.cpp:124] Setting up relu1
I0428 19:46:59.615749 26093 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:46:59.615752 26093 net.cpp:139] Memory required for data: 4130800
I0428 19:46:59.615756 26093 layer_factory.hpp:77] Creating layer ip2
I0428 19:46:59.615764 26093 net.cpp:86] Creating Layer ip2
I0428 19:46:59.615768 26093 net.cpp:408] ip2 <- ip1
I0428 19:46:59.615774 26093 net.cpp:382] ip2 -> ip2
I0428 19:46:59.615922 26093 net.cpp:124] Setting up ip2
I0428 19:46:59.615931 26093 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:59.615933 26093 net.cpp:139] Memory required for data: 4140800
I0428 19:46:59.615939 26093 layer_factory.hpp:77] Creating layer relu2
I0428 19:46:59.615943 26093 net.cpp:86] Creating Layer relu2
I0428 19:46:59.615947 26093 net.cpp:408] relu2 <- ip2
I0428 19:46:59.615952 26093 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:46:59.616125 26093 net.cpp:124] Setting up relu2
I0428 19:46:59.616133 26093 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:46:59.616137 26093 net.cpp:139] Memory required for data: 4150800
I0428 19:46:59.616139 26093 layer_factory.hpp:77] Creating layer ip3
I0428 19:46:59.616145 26093 net.cpp:86] Creating Layer ip3
I0428 19:46:59.616149 26093 net.cpp:408] ip3 <- ip2
I0428 19:46:59.616155 26093 net.cpp:382] ip3 -> ip3
I0428 19:46:59.616255 26093 net.cpp:124] Setting up ip3
I0428 19:46:59.616277 26093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:59.616281 26093 net.cpp:139] Memory required for data: 4154800
I0428 19:46:59.616288 26093 layer_factory.hpp:77] Creating layer relu3
I0428 19:46:59.616292 26093 net.cpp:86] Creating Layer relu3
I0428 19:46:59.616295 26093 net.cpp:408] relu3 <- ip3
I0428 19:46:59.616300 26093 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:46:59.617256 26093 net.cpp:124] Setting up relu3
I0428 19:46:59.617269 26093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:59.617272 26093 net.cpp:139] Memory required for data: 4158800
I0428 19:46:59.617276 26093 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:46:59.617281 26093 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:46:59.617285 26093 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:46:59.617291 26093 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:46:59.617298 26093 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:46:59.617359 26093 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:46:59.617365 26093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:59.617369 26093 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:46:59.617372 26093 net.cpp:139] Memory required for data: 4166800
I0428 19:46:59.617375 26093 layer_factory.hpp:77] Creating layer accuracy
I0428 19:46:59.617382 26093 net.cpp:86] Creating Layer accuracy
I0428 19:46:59.617384 26093 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:46:59.617389 26093 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:46:59.617394 26093 net.cpp:382] accuracy -> accuracy
I0428 19:46:59.617401 26093 net.cpp:124] Setting up accuracy
I0428 19:46:59.617411 26093 net.cpp:131] Top shape: (1)
I0428 19:46:59.617414 26093 net.cpp:139] Memory required for data: 4166804
I0428 19:46:59.617418 26093 layer_factory.hpp:77] Creating layer loss
I0428 19:46:59.617422 26093 net.cpp:86] Creating Layer loss
I0428 19:46:59.617425 26093 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:46:59.617429 26093 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:46:59.617434 26093 net.cpp:382] loss -> loss
I0428 19:46:59.617439 26093 layer_factory.hpp:77] Creating layer loss
I0428 19:46:59.617676 26093 net.cpp:124] Setting up loss
I0428 19:46:59.617686 26093 net.cpp:131] Top shape: (1)
I0428 19:46:59.617688 26093 net.cpp:134]     with loss weight 1
I0428 19:46:59.617703 26093 net.cpp:139] Memory required for data: 4166808
I0428 19:46:59.617707 26093 net.cpp:200] loss needs backward computation.
I0428 19:46:59.617712 26093 net.cpp:202] accuracy does not need backward computation.
I0428 19:46:59.617717 26093 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:46:59.617719 26093 net.cpp:200] relu3 needs backward computation.
I0428 19:46:59.617722 26093 net.cpp:200] ip3 needs backward computation.
I0428 19:46:59.617724 26093 net.cpp:200] relu2 needs backward computation.
I0428 19:46:59.617735 26093 net.cpp:200] ip2 needs backward computation.
I0428 19:46:59.617738 26093 net.cpp:200] relu1 needs backward computation.
I0428 19:46:59.617740 26093 net.cpp:200] ip1 needs backward computation.
I0428 19:46:59.617743 26093 net.cpp:200] pool1 needs backward computation.
I0428 19:46:59.617746 26093 net.cpp:200] conv1 needs backward computation.
I0428 19:46:59.617750 26093 net.cpp:200] pool0 needs backward computation.
I0428 19:46:59.617753 26093 net.cpp:200] conv0 needs backward computation.
I0428 19:46:59.617756 26093 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:46:59.617760 26093 net.cpp:202] mnist does not need backward computation.
I0428 19:46:59.617769 26093 net.cpp:244] This network produces output accuracy
I0428 19:46:59.617771 26093 net.cpp:244] This network produces output loss
I0428 19:46:59.617784 26093 net.cpp:257] Network initialization done.
I0428 19:46:59.617825 26093 solver.cpp:56] Solver scaffolding done.
I0428 19:46:59.618182 26093 caffe.cpp:248] Starting Optimization
I0428 19:46:59.618190 26093 solver.cpp:273] Solving LeNet
I0428 19:46:59.618192 26093 solver.cpp:274] Learning Rate Policy: inv
I0428 19:46:59.618383 26093 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:46:59.623806 26093 blocking_queue.cpp:49] Waiting for data
I0428 19:46:59.694293 26100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:46:59.694891 26093 solver.cpp:398]     Test net output #0: accuracy = 0.1109
I0428 19:46:59.694911 26093 solver.cpp:398]     Test net output #1: loss = 2.30663 (* 1 = 2.30663 loss)
I0428 19:46:59.698850 26093 solver.cpp:219] Iteration 0 (-3.4813e-31 iter/s, 0.0806308s/100 iters), loss = 2.31318
I0428 19:46:59.698875 26093 solver.cpp:238]     Train net output #0: loss = 2.31318 (* 1 = 2.31318 loss)
I0428 19:46:59.698902 26093 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:46:59.853510 26093 solver.cpp:219] Iteration 100 (646.747 iter/s, 0.15462s/100 iters), loss = 0.445768
I0428 19:46:59.853550 26093 solver.cpp:238]     Train net output #0: loss = 0.445768 (* 1 = 0.445768 loss)
I0428 19:46:59.853556 26093 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:47:00.008105 26093 solver.cpp:219] Iteration 200 (647.077 iter/s, 0.154541s/100 iters), loss = 0.434251
I0428 19:47:00.008132 26093 solver.cpp:238]     Train net output #0: loss = 0.434251 (* 1 = 0.434251 loss)
I0428 19:47:00.008157 26093 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:47:00.156651 26093 solver.cpp:219] Iteration 300 (673.361 iter/s, 0.148509s/100 iters), loss = 0.436223
I0428 19:47:00.156677 26093 solver.cpp:238]     Train net output #0: loss = 0.436223 (* 1 = 0.436223 loss)
I0428 19:47:00.156683 26093 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:47:00.303549 26093 solver.cpp:219] Iteration 400 (680.925 iter/s, 0.146859s/100 iters), loss = 0.364049
I0428 19:47:00.303588 26093 solver.cpp:238]     Train net output #0: loss = 0.364049 (* 1 = 0.364049 loss)
I0428 19:47:00.303594 26093 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:47:00.447146 26093 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:47:00.523310 26100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:00.523924 26093 solver.cpp:398]     Test net output #0: accuracy = 0.8689
I0428 19:47:00.523948 26093 solver.cpp:398]     Test net output #1: loss = 0.349555 (* 1 = 0.349555 loss)
I0428 19:47:00.525441 26093 solver.cpp:219] Iteration 500 (450.781 iter/s, 0.221837s/100 iters), loss = 0.32974
I0428 19:47:00.525485 26093 solver.cpp:238]     Train net output #0: loss = 0.32974 (* 1 = 0.32974 loss)
I0428 19:47:00.525492 26093 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:47:00.677278 26093 solver.cpp:219] Iteration 600 (658.834 iter/s, 0.151783s/100 iters), loss = 0.404092
I0428 19:47:00.677319 26093 solver.cpp:238]     Train net output #0: loss = 0.404092 (* 1 = 0.404092 loss)
I0428 19:47:00.677325 26093 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:47:00.822823 26093 solver.cpp:219] Iteration 700 (687.246 iter/s, 0.145508s/100 iters), loss = 0.398366
I0428 19:47:00.822863 26093 solver.cpp:238]     Train net output #0: loss = 0.398366 (* 1 = 0.398366 loss)
I0428 19:47:00.822870 26093 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:47:00.974174 26093 solver.cpp:219] Iteration 800 (660.947 iter/s, 0.151298s/100 iters), loss = 0.504359
I0428 19:47:00.974217 26093 solver.cpp:238]     Train net output #0: loss = 0.504359 (* 1 = 0.504359 loss)
I0428 19:47:00.974225 26093 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:47:01.127218 26093 solver.cpp:219] Iteration 900 (653.643 iter/s, 0.152989s/100 iters), loss = 0.218061
I0428 19:47:01.127246 26093 solver.cpp:238]     Train net output #0: loss = 0.218061 (* 1 = 0.218061 loss)
I0428 19:47:01.127254 26093 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:47:01.175268 26099 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:01.267866 26093 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:47:01.270351 26093 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:47:01.271553 26093 solver.cpp:311] Iteration 1000, loss = 0.314387
I0428 19:47:01.271569 26093 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:47:01.346066 26100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:47:01.346662 26093 solver.cpp:398]     Test net output #0: accuracy = 0.8778
I0428 19:47:01.346681 26093 solver.cpp:398]     Test net output #1: loss = 0.319717 (* 1 = 0.319717 loss)
I0428 19:47:01.346693 26093 solver.cpp:316] Optimization Done.
I0428 19:47:01.346700 26093 caffe.cpp:259] Optimization Done.
