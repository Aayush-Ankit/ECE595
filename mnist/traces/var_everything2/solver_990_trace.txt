I0428 20:05:05.486161 30535 caffe.cpp:218] Using GPUs 0
I0428 20:05:05.515910 30535 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:05:05.963562 30535 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test990.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:05:05.963728 30535 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test990.prototxt
I0428 20:05:05.964051 30535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:05:05.964066 30535 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:05:05.964146 30535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:05.964215 30535 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:05.964293 30535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:05:05.964313 30535 net.cpp:86] Creating Layer mnist
I0428 20:05:05.964319 30535 net.cpp:382] mnist -> data
I0428 20:05:05.964339 30535 net.cpp:382] mnist -> label
I0428 20:05:05.965325 30535 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:05:05.967438 30535 net.cpp:124] Setting up mnist
I0428 20:05:05.967483 30535 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:05:05.967489 30535 net.cpp:131] Top shape: 64 (64)
I0428 20:05:05.967491 30535 net.cpp:139] Memory required for data: 200960
I0428 20:05:05.967497 30535 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:05.967533 30535 net.cpp:86] Creating Layer conv0
I0428 20:05:05.967550 30535 net.cpp:408] conv0 <- data
I0428 20:05:05.967561 30535 net.cpp:382] conv0 -> conv0
I0428 20:05:06.194990 30535 net.cpp:124] Setting up conv0
I0428 20:05:06.195032 30535 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:05:06.195036 30535 net.cpp:139] Memory required for data: 3887360
I0428 20:05:06.195051 30535 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:06.195065 30535 net.cpp:86] Creating Layer pool0
I0428 20:05:06.195070 30535 net.cpp:408] pool0 <- conv0
I0428 20:05:06.195091 30535 net.cpp:382] pool0 -> pool0
I0428 20:05:06.195155 30535 net.cpp:124] Setting up pool0
I0428 20:05:06.195165 30535 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:05:06.195168 30535 net.cpp:139] Memory required for data: 4808960
I0428 20:05:06.195171 30535 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:06.195183 30535 net.cpp:86] Creating Layer conv1
I0428 20:05:06.195185 30535 net.cpp:408] conv1 <- pool0
I0428 20:05:06.195189 30535 net.cpp:382] conv1 -> conv1
I0428 20:05:06.197928 30535 net.cpp:124] Setting up conv1
I0428 20:05:06.197958 30535 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:05:06.197962 30535 net.cpp:139] Memory required for data: 4841728
I0428 20:05:06.197984 30535 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:06.197991 30535 net.cpp:86] Creating Layer pool1
I0428 20:05:06.197994 30535 net.cpp:408] pool1 <- conv1
I0428 20:05:06.197999 30535 net.cpp:382] pool1 -> pool1
I0428 20:05:06.198050 30535 net.cpp:124] Setting up pool1
I0428 20:05:06.198055 30535 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:05:06.198058 30535 net.cpp:139] Memory required for data: 4849920
I0428 20:05:06.198060 30535 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:06.198084 30535 net.cpp:86] Creating Layer ip1
I0428 20:05:06.198086 30535 net.cpp:408] ip1 <- pool1
I0428 20:05:06.198092 30535 net.cpp:382] ip1 -> ip1
I0428 20:05:06.198187 30535 net.cpp:124] Setting up ip1
I0428 20:05:06.198194 30535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:06.198197 30535 net.cpp:139] Memory required for data: 4852480
I0428 20:05:06.198204 30535 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:06.198210 30535 net.cpp:86] Creating Layer relu1
I0428 20:05:06.198213 30535 net.cpp:408] relu1 <- ip1
I0428 20:05:06.198217 30535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:06.198402 30535 net.cpp:124] Setting up relu1
I0428 20:05:06.198410 30535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:06.198413 30535 net.cpp:139] Memory required for data: 4855040
I0428 20:05:06.198416 30535 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:06.198426 30535 net.cpp:86] Creating Layer ip2
I0428 20:05:06.198428 30535 net.cpp:408] ip2 <- ip1
I0428 20:05:06.198433 30535 net.cpp:382] ip2 -> ip2
I0428 20:05:06.198525 30535 net.cpp:124] Setting up ip2
I0428 20:05:06.198532 30535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:06.198535 30535 net.cpp:139] Memory required for data: 4861440
I0428 20:05:06.198540 30535 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:06.198546 30535 net.cpp:86] Creating Layer relu2
I0428 20:05:06.198549 30535 net.cpp:408] relu2 <- ip2
I0428 20:05:06.198554 30535 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:06.199271 30535 net.cpp:124] Setting up relu2
I0428 20:05:06.199282 30535 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:05:06.199301 30535 net.cpp:139] Memory required for data: 4867840
I0428 20:05:06.199306 30535 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:06.199312 30535 net.cpp:86] Creating Layer ip3
I0428 20:05:06.199316 30535 net.cpp:408] ip3 <- ip2
I0428 20:05:06.199321 30535 net.cpp:382] ip3 -> ip3
I0428 20:05:06.199417 30535 net.cpp:124] Setting up ip3
I0428 20:05:06.199424 30535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:06.199426 30535 net.cpp:139] Memory required for data: 4870400
I0428 20:05:06.199434 30535 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:06.199440 30535 net.cpp:86] Creating Layer relu3
I0428 20:05:06.199443 30535 net.cpp:408] relu3 <- ip3
I0428 20:05:06.199446 30535 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:06.199662 30535 net.cpp:124] Setting up relu3
I0428 20:05:06.199671 30535 net.cpp:131] Top shape: 64 10 (640)
I0428 20:05:06.199674 30535 net.cpp:139] Memory required for data: 4872960
I0428 20:05:06.199677 30535 layer_factory.hpp:77] Creating layer loss
I0428 20:05:06.199684 30535 net.cpp:86] Creating Layer loss
I0428 20:05:06.199687 30535 net.cpp:408] loss <- ip3
I0428 20:05:06.199690 30535 net.cpp:408] loss <- label
I0428 20:05:06.199697 30535 net.cpp:382] loss -> loss
I0428 20:05:06.199713 30535 layer_factory.hpp:77] Creating layer loss
I0428 20:05:06.199972 30535 net.cpp:124] Setting up loss
I0428 20:05:06.199980 30535 net.cpp:131] Top shape: (1)
I0428 20:05:06.199983 30535 net.cpp:134]     with loss weight 1
I0428 20:05:06.199998 30535 net.cpp:139] Memory required for data: 4872964
I0428 20:05:06.200002 30535 net.cpp:200] loss needs backward computation.
I0428 20:05:06.200006 30535 net.cpp:200] relu3 needs backward computation.
I0428 20:05:06.200008 30535 net.cpp:200] ip3 needs backward computation.
I0428 20:05:06.200012 30535 net.cpp:200] relu2 needs backward computation.
I0428 20:05:06.200014 30535 net.cpp:200] ip2 needs backward computation.
I0428 20:05:06.200017 30535 net.cpp:200] relu1 needs backward computation.
I0428 20:05:06.200019 30535 net.cpp:200] ip1 needs backward computation.
I0428 20:05:06.200022 30535 net.cpp:200] pool1 needs backward computation.
I0428 20:05:06.200026 30535 net.cpp:200] conv1 needs backward computation.
I0428 20:05:06.200028 30535 net.cpp:200] pool0 needs backward computation.
I0428 20:05:06.200031 30535 net.cpp:200] conv0 needs backward computation.
I0428 20:05:06.200033 30535 net.cpp:202] mnist does not need backward computation.
I0428 20:05:06.200037 30535 net.cpp:244] This network produces output loss
I0428 20:05:06.200045 30535 net.cpp:257] Network initialization done.
I0428 20:05:06.200412 30535 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test990.prototxt
I0428 20:05:06.200455 30535 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:05:06.200549 30535 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:05:06.200644 30535 layer_factory.hpp:77] Creating layer mnist
I0428 20:05:06.200685 30535 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:05:06.200700 30535 net.cpp:86] Creating Layer mnist
I0428 20:05:06.200706 30535 net.cpp:382] mnist -> data
I0428 20:05:06.200727 30535 net.cpp:382] mnist -> label
I0428 20:05:06.200834 30535 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:05:06.202850 30535 net.cpp:124] Setting up mnist
I0428 20:05:06.202863 30535 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:05:06.202867 30535 net.cpp:131] Top shape: 100 (100)
I0428 20:05:06.202870 30535 net.cpp:139] Memory required for data: 314000
I0428 20:05:06.202873 30535 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:05:06.202896 30535 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:05:06.202900 30535 net.cpp:408] label_mnist_1_split <- label
I0428 20:05:06.202915 30535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:05:06.202921 30535 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:05:06.203052 30535 net.cpp:124] Setting up label_mnist_1_split
I0428 20:05:06.203058 30535 net.cpp:131] Top shape: 100 (100)
I0428 20:05:06.203063 30535 net.cpp:131] Top shape: 100 (100)
I0428 20:05:06.203065 30535 net.cpp:139] Memory required for data: 314800
I0428 20:05:06.203068 30535 layer_factory.hpp:77] Creating layer conv0
I0428 20:05:06.203078 30535 net.cpp:86] Creating Layer conv0
I0428 20:05:06.203081 30535 net.cpp:408] conv0 <- data
I0428 20:05:06.203086 30535 net.cpp:382] conv0 -> conv0
I0428 20:05:06.204877 30535 net.cpp:124] Setting up conv0
I0428 20:05:06.204891 30535 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:05:06.204895 30535 net.cpp:139] Memory required for data: 6074800
I0428 20:05:06.204905 30535 layer_factory.hpp:77] Creating layer pool0
I0428 20:05:06.204922 30535 net.cpp:86] Creating Layer pool0
I0428 20:05:06.204926 30535 net.cpp:408] pool0 <- conv0
I0428 20:05:06.204946 30535 net.cpp:382] pool0 -> pool0
I0428 20:05:06.205015 30535 net.cpp:124] Setting up pool0
I0428 20:05:06.205037 30535 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:05:06.205040 30535 net.cpp:139] Memory required for data: 7514800
I0428 20:05:06.205044 30535 layer_factory.hpp:77] Creating layer conv1
I0428 20:05:06.205054 30535 net.cpp:86] Creating Layer conv1
I0428 20:05:06.205056 30535 net.cpp:408] conv1 <- pool0
I0428 20:05:06.205062 30535 net.cpp:382] conv1 -> conv1
I0428 20:05:06.207178 30535 net.cpp:124] Setting up conv1
I0428 20:05:06.207192 30535 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:05:06.207197 30535 net.cpp:139] Memory required for data: 7566000
I0428 20:05:06.207207 30535 layer_factory.hpp:77] Creating layer pool1
I0428 20:05:06.207229 30535 net.cpp:86] Creating Layer pool1
I0428 20:05:06.207233 30535 net.cpp:408] pool1 <- conv1
I0428 20:05:06.207257 30535 net.cpp:382] pool1 -> pool1
I0428 20:05:06.207315 30535 net.cpp:124] Setting up pool1
I0428 20:05:06.207321 30535 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:05:06.207339 30535 net.cpp:139] Memory required for data: 7578800
I0428 20:05:06.207341 30535 layer_factory.hpp:77] Creating layer ip1
I0428 20:05:06.207347 30535 net.cpp:86] Creating Layer ip1
I0428 20:05:06.207350 30535 net.cpp:408] ip1 <- pool1
I0428 20:05:06.207355 30535 net.cpp:382] ip1 -> ip1
I0428 20:05:06.207464 30535 net.cpp:124] Setting up ip1
I0428 20:05:06.207473 30535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:06.207484 30535 net.cpp:139] Memory required for data: 7582800
I0428 20:05:06.207492 30535 layer_factory.hpp:77] Creating layer relu1
I0428 20:05:06.207499 30535 net.cpp:86] Creating Layer relu1
I0428 20:05:06.207501 30535 net.cpp:408] relu1 <- ip1
I0428 20:05:06.207506 30535 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:05:06.207767 30535 net.cpp:124] Setting up relu1
I0428 20:05:06.207775 30535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:06.207778 30535 net.cpp:139] Memory required for data: 7586800
I0428 20:05:06.207782 30535 layer_factory.hpp:77] Creating layer ip2
I0428 20:05:06.207794 30535 net.cpp:86] Creating Layer ip2
I0428 20:05:06.207798 30535 net.cpp:408] ip2 <- ip1
I0428 20:05:06.207803 30535 net.cpp:382] ip2 -> ip2
I0428 20:05:06.207940 30535 net.cpp:124] Setting up ip2
I0428 20:05:06.207962 30535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:06.207965 30535 net.cpp:139] Memory required for data: 7596800
I0428 20:05:06.207972 30535 layer_factory.hpp:77] Creating layer relu2
I0428 20:05:06.207978 30535 net.cpp:86] Creating Layer relu2
I0428 20:05:06.207986 30535 net.cpp:408] relu2 <- ip2
I0428 20:05:06.207990 30535 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:05:06.208160 30535 net.cpp:124] Setting up relu2
I0428 20:05:06.208169 30535 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:05:06.208173 30535 net.cpp:139] Memory required for data: 7606800
I0428 20:05:06.208175 30535 layer_factory.hpp:77] Creating layer ip3
I0428 20:05:06.208183 30535 net.cpp:86] Creating Layer ip3
I0428 20:05:06.208185 30535 net.cpp:408] ip3 <- ip2
I0428 20:05:06.208191 30535 net.cpp:382] ip3 -> ip3
I0428 20:05:06.208310 30535 net.cpp:124] Setting up ip3
I0428 20:05:06.208317 30535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:06.208322 30535 net.cpp:139] Memory required for data: 7610800
I0428 20:05:06.208328 30535 layer_factory.hpp:77] Creating layer relu3
I0428 20:05:06.208333 30535 net.cpp:86] Creating Layer relu3
I0428 20:05:06.208336 30535 net.cpp:408] relu3 <- ip3
I0428 20:05:06.208339 30535 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:05:06.209189 30535 net.cpp:124] Setting up relu3
I0428 20:05:06.209216 30535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:06.209219 30535 net.cpp:139] Memory required for data: 7614800
I0428 20:05:06.209223 30535 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:05:06.209228 30535 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:05:06.209231 30535 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:05:06.209259 30535 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:05:06.209264 30535 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:05:06.209367 30535 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:05:06.209375 30535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:06.209378 30535 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:05:06.209381 30535 net.cpp:139] Memory required for data: 7622800
I0428 20:05:06.209383 30535 layer_factory.hpp:77] Creating layer accuracy
I0428 20:05:06.209388 30535 net.cpp:86] Creating Layer accuracy
I0428 20:05:06.209391 30535 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:05:06.209394 30535 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:05:06.209398 30535 net.cpp:382] accuracy -> accuracy
I0428 20:05:06.209405 30535 net.cpp:124] Setting up accuracy
I0428 20:05:06.209408 30535 net.cpp:131] Top shape: (1)
I0428 20:05:06.209411 30535 net.cpp:139] Memory required for data: 7622804
I0428 20:05:06.209414 30535 layer_factory.hpp:77] Creating layer loss
I0428 20:05:06.209425 30535 net.cpp:86] Creating Layer loss
I0428 20:05:06.209429 30535 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:05:06.209432 30535 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:05:06.209435 30535 net.cpp:382] loss -> loss
I0428 20:05:06.209441 30535 layer_factory.hpp:77] Creating layer loss
I0428 20:05:06.209666 30535 net.cpp:124] Setting up loss
I0428 20:05:06.209676 30535 net.cpp:131] Top shape: (1)
I0428 20:05:06.209678 30535 net.cpp:134]     with loss weight 1
I0428 20:05:06.209686 30535 net.cpp:139] Memory required for data: 7622808
I0428 20:05:06.209697 30535 net.cpp:200] loss needs backward computation.
I0428 20:05:06.209702 30535 net.cpp:202] accuracy does not need backward computation.
I0428 20:05:06.209704 30535 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:05:06.209707 30535 net.cpp:200] relu3 needs backward computation.
I0428 20:05:06.209710 30535 net.cpp:200] ip3 needs backward computation.
I0428 20:05:06.209712 30535 net.cpp:200] relu2 needs backward computation.
I0428 20:05:06.209715 30535 net.cpp:200] ip2 needs backward computation.
I0428 20:05:06.209718 30535 net.cpp:200] relu1 needs backward computation.
I0428 20:05:06.209722 30535 net.cpp:200] ip1 needs backward computation.
I0428 20:05:06.209723 30535 net.cpp:200] pool1 needs backward computation.
I0428 20:05:06.209727 30535 net.cpp:200] conv1 needs backward computation.
I0428 20:05:06.209729 30535 net.cpp:200] pool0 needs backward computation.
I0428 20:05:06.209733 30535 net.cpp:200] conv0 needs backward computation.
I0428 20:05:06.209736 30535 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:05:06.209741 30535 net.cpp:202] mnist does not need backward computation.
I0428 20:05:06.209743 30535 net.cpp:244] This network produces output accuracy
I0428 20:05:06.209746 30535 net.cpp:244] This network produces output loss
I0428 20:05:06.209764 30535 net.cpp:257] Network initialization done.
I0428 20:05:06.209802 30535 solver.cpp:56] Solver scaffolding done.
I0428 20:05:06.210115 30535 caffe.cpp:248] Starting Optimization
I0428 20:05:06.210121 30535 solver.cpp:273] Solving LeNet
I0428 20:05:06.210130 30535 solver.cpp:274] Learning Rate Policy: inv
I0428 20:05:06.210906 30535 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:05:06.216612 30535 blocking_queue.cpp:49] Waiting for data
I0428 20:05:06.286144 30542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:06.286725 30535 solver.cpp:398]     Test net output #0: accuracy = 0.0995
I0428 20:05:06.286744 30535 solver.cpp:398]     Test net output #1: loss = 2.34068 (* 1 = 2.34068 loss)
I0428 20:05:06.289968 30535 solver.cpp:219] Iteration 0 (0 iter/s, 0.0798126s/100 iters), loss = 2.34879
I0428 20:05:06.290006 30535 solver.cpp:238]     Train net output #0: loss = 2.34879 (* 1 = 2.34879 loss)
I0428 20:05:06.290033 30535 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:05:06.377110 30535 solver.cpp:219] Iteration 100 (1148.22 iter/s, 0.0870912s/100 iters), loss = 0.898731
I0428 20:05:06.377135 30535 solver.cpp:238]     Train net output #0: loss = 0.898731 (* 1 = 0.898731 loss)
I0428 20:05:06.377158 30535 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:05:06.470027 30535 solver.cpp:219] Iteration 200 (1076.65 iter/s, 0.0928809s/100 iters), loss = 0.488158
I0428 20:05:06.470072 30535 solver.cpp:238]     Train net output #0: loss = 0.488158 (* 1 = 0.488158 loss)
I0428 20:05:06.470079 30535 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:05:06.555806 30535 solver.cpp:219] Iteration 300 (1166.5 iter/s, 0.0857262s/100 iters), loss = 0.46291
I0428 20:05:06.555831 30535 solver.cpp:238]     Train net output #0: loss = 0.46291 (* 1 = 0.46291 loss)
I0428 20:05:06.555841 30535 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:05:06.641484 30535 solver.cpp:219] Iteration 400 (1167.64 iter/s, 0.0856431s/100 iters), loss = 0.391378
I0428 20:05:06.641523 30535 solver.cpp:238]     Train net output #0: loss = 0.391378 (* 1 = 0.391378 loss)
I0428 20:05:06.641531 30535 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:05:06.726284 30535 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:05:06.780434 30542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:06.781030 30535 solver.cpp:398]     Test net output #0: accuracy = 0.9064
I0428 20:05:06.781050 30535 solver.cpp:398]     Test net output #1: loss = 0.312161 (* 1 = 0.312161 loss)
I0428 20:05:06.781926 30535 solver.cpp:219] Iteration 500 (712.216 iter/s, 0.140407s/100 iters), loss = 0.404419
I0428 20:05:06.781991 30535 solver.cpp:238]     Train net output #0: loss = 0.404419 (* 1 = 0.404419 loss)
I0428 20:05:06.782014 30535 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:05:06.872848 30535 solver.cpp:219] Iteration 600 (1100.65 iter/s, 0.0908553s/100 iters), loss = 0.36132
I0428 20:05:06.872892 30535 solver.cpp:238]     Train net output #0: loss = 0.36132 (* 1 = 0.36132 loss)
I0428 20:05:06.872903 30535 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:05:06.960317 30535 solver.cpp:219] Iteration 700 (1143.93 iter/s, 0.0874178s/100 iters), loss = 0.209865
I0428 20:05:06.960342 30535 solver.cpp:238]     Train net output #0: loss = 0.209865 (* 1 = 0.209865 loss)
I0428 20:05:06.960350 30535 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:05:07.046399 30535 solver.cpp:219] Iteration 800 (1162.15 iter/s, 0.0860477s/100 iters), loss = 0.330038
I0428 20:05:07.046424 30535 solver.cpp:238]     Train net output #0: loss = 0.330038 (* 1 = 0.330038 loss)
I0428 20:05:07.046432 30535 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:05:07.131896 30535 solver.cpp:219] Iteration 900 (1170.1 iter/s, 0.085463s/100 iters), loss = 0.339974
I0428 20:05:07.131922 30535 solver.cpp:238]     Train net output #0: loss = 0.339974 (* 1 = 0.339974 loss)
I0428 20:05:07.131929 30535 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:05:07.160459 30541 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:07.216596 30535 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:05:07.217381 30535 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:05:07.217924 30535 solver.cpp:311] Iteration 1000, loss = 0.317675
I0428 20:05:07.217939 30535 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:05:07.271466 30542 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:05:07.272027 30535 solver.cpp:398]     Test net output #0: accuracy = 0.929501
I0428 20:05:07.272047 30535 solver.cpp:398]     Test net output #1: loss = 0.231995 (* 1 = 0.231995 loss)
I0428 20:05:07.272053 30535 solver.cpp:316] Optimization Done.
I0428 20:05:07.272055 30535 caffe.cpp:259] Optimization Done.
