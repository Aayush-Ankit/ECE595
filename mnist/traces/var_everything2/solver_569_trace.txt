I0428 19:49:15.212116 26714 caffe.cpp:218] Using GPUs 0
I0428 19:49:15.248742 26714 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:49:15.759624 26714 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test569.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:49:15.759799 26714 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test569.prototxt
I0428 19:49:15.760457 26714 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:49:15.760484 26714 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:49:15.760645 26714 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:15.760762 26714 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:15.760902 26714 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:49:15.760941 26714 net.cpp:86] Creating Layer mnist
I0428 19:49:15.760956 26714 net.cpp:382] mnist -> data
I0428 19:49:15.760987 26714 net.cpp:382] mnist -> label
I0428 19:49:15.762562 26714 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:49:15.765429 26714 net.cpp:124] Setting up mnist
I0428 19:49:15.765447 26714 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:49:15.765455 26714 net.cpp:131] Top shape: 64 (64)
I0428 19:49:15.765460 26714 net.cpp:139] Memory required for data: 200960
I0428 19:49:15.765468 26714 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:15.765489 26714 net.cpp:86] Creating Layer conv0
I0428 19:49:15.765519 26714 net.cpp:408] conv0 <- data
I0428 19:49:15.765540 26714 net.cpp:382] conv0 -> conv0
I0428 19:49:16.039881 26714 net.cpp:124] Setting up conv0
I0428 19:49:16.039923 26714 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:49:16.039927 26714 net.cpp:139] Memory required for data: 938240
I0428 19:49:16.039942 26714 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:16.039957 26714 net.cpp:86] Creating Layer pool0
I0428 19:49:16.039963 26714 net.cpp:408] pool0 <- conv0
I0428 19:49:16.039969 26714 net.cpp:382] pool0 -> pool0
I0428 19:49:16.040046 26714 net.cpp:124] Setting up pool0
I0428 19:49:16.040057 26714 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:49:16.040066 26714 net.cpp:139] Memory required for data: 1122560
I0428 19:49:16.040069 26714 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:16.040083 26714 net.cpp:86] Creating Layer conv1
I0428 19:49:16.040089 26714 net.cpp:408] conv1 <- pool0
I0428 19:49:16.040097 26714 net.cpp:382] conv1 -> conv1
I0428 19:49:16.042424 26714 net.cpp:124] Setting up conv1
I0428 19:49:16.042454 26714 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:49:16.042459 26714 net.cpp:139] Memory required for data: 1204480
I0428 19:49:16.042466 26714 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:16.042475 26714 net.cpp:86] Creating Layer pool1
I0428 19:49:16.042480 26714 net.cpp:408] pool1 <- conv1
I0428 19:49:16.042487 26714 net.cpp:382] pool1 -> pool1
I0428 19:49:16.042537 26714 net.cpp:124] Setting up pool1
I0428 19:49:16.042548 26714 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:49:16.042557 26714 net.cpp:139] Memory required for data: 1224960
I0428 19:49:16.042562 26714 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:16.042572 26714 net.cpp:86] Creating Layer ip1
I0428 19:49:16.042579 26714 net.cpp:408] ip1 <- pool1
I0428 19:49:16.042587 26714 net.cpp:382] ip1 -> ip1
I0428 19:49:16.043995 26714 net.cpp:124] Setting up ip1
I0428 19:49:16.044026 26714 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:16.044034 26714 net.cpp:139] Memory required for data: 1231360
I0428 19:49:16.044075 26714 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:16.044083 26714 net.cpp:86] Creating Layer relu1
I0428 19:49:16.044107 26714 net.cpp:408] relu1 <- ip1
I0428 19:49:16.044116 26714 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:16.044437 26714 net.cpp:124] Setting up relu1
I0428 19:49:16.044450 26714 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:49:16.044471 26714 net.cpp:139] Memory required for data: 1237760
I0428 19:49:16.044488 26714 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:16.044512 26714 net.cpp:86] Creating Layer ip2
I0428 19:49:16.044517 26714 net.cpp:408] ip2 <- ip1
I0428 19:49:16.044525 26714 net.cpp:382] ip2 -> ip2
I0428 19:49:16.044661 26714 net.cpp:124] Setting up ip2
I0428 19:49:16.044670 26714 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:16.044677 26714 net.cpp:139] Memory required for data: 1240320
I0428 19:49:16.044685 26714 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:16.044695 26714 net.cpp:86] Creating Layer relu2
I0428 19:49:16.044701 26714 net.cpp:408] relu2 <- ip2
I0428 19:49:16.044708 26714 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:16.045814 26714 net.cpp:124] Setting up relu2
I0428 19:49:16.045845 26714 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:16.045851 26714 net.cpp:139] Memory required for data: 1242880
I0428 19:49:16.045856 26714 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:16.045866 26714 net.cpp:86] Creating Layer ip3
I0428 19:49:16.045871 26714 net.cpp:408] ip3 <- ip2
I0428 19:49:16.045879 26714 net.cpp:382] ip3 -> ip3
I0428 19:49:16.046005 26714 net.cpp:124] Setting up ip3
I0428 19:49:16.046015 26714 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:16.046021 26714 net.cpp:139] Memory required for data: 1245440
I0428 19:49:16.046032 26714 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:16.046041 26714 net.cpp:86] Creating Layer relu3
I0428 19:49:16.046048 26714 net.cpp:408] relu3 <- ip3
I0428 19:49:16.046056 26714 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:16.046334 26714 net.cpp:124] Setting up relu3
I0428 19:49:16.046349 26714 net.cpp:131] Top shape: 64 10 (640)
I0428 19:49:16.046355 26714 net.cpp:139] Memory required for data: 1248000
I0428 19:49:16.046361 26714 layer_factory.hpp:77] Creating layer loss
I0428 19:49:16.046371 26714 net.cpp:86] Creating Layer loss
I0428 19:49:16.046391 26714 net.cpp:408] loss <- ip3
I0428 19:49:16.046398 26714 net.cpp:408] loss <- label
I0428 19:49:16.046418 26714 net.cpp:382] loss -> loss
I0428 19:49:16.046443 26714 layer_factory.hpp:77] Creating layer loss
I0428 19:49:16.046772 26714 net.cpp:124] Setting up loss
I0428 19:49:16.046783 26714 net.cpp:131] Top shape: (1)
I0428 19:49:16.046790 26714 net.cpp:134]     with loss weight 1
I0428 19:49:16.046809 26714 net.cpp:139] Memory required for data: 1248004
I0428 19:49:16.046815 26714 net.cpp:200] loss needs backward computation.
I0428 19:49:16.046823 26714 net.cpp:200] relu3 needs backward computation.
I0428 19:49:16.046829 26714 net.cpp:200] ip3 needs backward computation.
I0428 19:49:16.046834 26714 net.cpp:200] relu2 needs backward computation.
I0428 19:49:16.046839 26714 net.cpp:200] ip2 needs backward computation.
I0428 19:49:16.046845 26714 net.cpp:200] relu1 needs backward computation.
I0428 19:49:16.046850 26714 net.cpp:200] ip1 needs backward computation.
I0428 19:49:16.046855 26714 net.cpp:200] pool1 needs backward computation.
I0428 19:49:16.046862 26714 net.cpp:200] conv1 needs backward computation.
I0428 19:49:16.046867 26714 net.cpp:200] pool0 needs backward computation.
I0428 19:49:16.046874 26714 net.cpp:200] conv0 needs backward computation.
I0428 19:49:16.046880 26714 net.cpp:202] mnist does not need backward computation.
I0428 19:49:16.046885 26714 net.cpp:244] This network produces output loss
I0428 19:49:16.046901 26714 net.cpp:257] Network initialization done.
I0428 19:49:16.047521 26714 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test569.prototxt
I0428 19:49:16.047562 26714 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:49:16.047718 26714 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:49:16.047838 26714 layer_factory.hpp:77] Creating layer mnist
I0428 19:49:16.047909 26714 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:49:16.047945 26714 net.cpp:86] Creating Layer mnist
I0428 19:49:16.047952 26714 net.cpp:382] mnist -> data
I0428 19:49:16.047962 26714 net.cpp:382] mnist -> label
I0428 19:49:16.048071 26714 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:49:16.050779 26714 net.cpp:124] Setting up mnist
I0428 19:49:16.050794 26714 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:49:16.050812 26714 net.cpp:131] Top shape: 100 (100)
I0428 19:49:16.050818 26714 net.cpp:139] Memory required for data: 314000
I0428 19:49:16.050824 26714 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:49:16.050837 26714 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:49:16.050844 26714 net.cpp:408] label_mnist_1_split <- label
I0428 19:49:16.050853 26714 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:49:16.050863 26714 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:49:16.050977 26714 net.cpp:124] Setting up label_mnist_1_split
I0428 19:49:16.050989 26714 net.cpp:131] Top shape: 100 (100)
I0428 19:49:16.050995 26714 net.cpp:131] Top shape: 100 (100)
I0428 19:49:16.050999 26714 net.cpp:139] Memory required for data: 314800
I0428 19:49:16.051004 26714 layer_factory.hpp:77] Creating layer conv0
I0428 19:49:16.051018 26714 net.cpp:86] Creating Layer conv0
I0428 19:49:16.051025 26714 net.cpp:408] conv0 <- data
I0428 19:49:16.051035 26714 net.cpp:382] conv0 -> conv0
I0428 19:49:16.052956 26714 net.cpp:124] Setting up conv0
I0428 19:49:16.052973 26714 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:49:16.052978 26714 net.cpp:139] Memory required for data: 1466800
I0428 19:49:16.052989 26714 layer_factory.hpp:77] Creating layer pool0
I0428 19:49:16.053000 26714 net.cpp:86] Creating Layer pool0
I0428 19:49:16.053006 26714 net.cpp:408] pool0 <- conv0
I0428 19:49:16.053014 26714 net.cpp:382] pool0 -> pool0
I0428 19:49:16.053072 26714 net.cpp:124] Setting up pool0
I0428 19:49:16.053086 26714 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:49:16.053092 26714 net.cpp:139] Memory required for data: 1754800
I0428 19:49:16.053112 26714 layer_factory.hpp:77] Creating layer conv1
I0428 19:49:16.053127 26714 net.cpp:86] Creating Layer conv1
I0428 19:49:16.053133 26714 net.cpp:408] conv1 <- pool0
I0428 19:49:16.053143 26714 net.cpp:382] conv1 -> conv1
I0428 19:49:16.055757 26714 net.cpp:124] Setting up conv1
I0428 19:49:16.055768 26714 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:49:16.055773 26714 net.cpp:139] Memory required for data: 1882800
I0428 19:49:16.055784 26714 layer_factory.hpp:77] Creating layer pool1
I0428 19:49:16.055794 26714 net.cpp:86] Creating Layer pool1
I0428 19:49:16.055799 26714 net.cpp:408] pool1 <- conv1
I0428 19:49:16.055809 26714 net.cpp:382] pool1 -> pool1
I0428 19:49:16.055894 26714 net.cpp:124] Setting up pool1
I0428 19:49:16.055907 26714 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:49:16.055912 26714 net.cpp:139] Memory required for data: 1914800
I0428 19:49:16.055917 26714 layer_factory.hpp:77] Creating layer ip1
I0428 19:49:16.055925 26714 net.cpp:86] Creating Layer ip1
I0428 19:49:16.055930 26714 net.cpp:408] ip1 <- pool1
I0428 19:49:16.055938 26714 net.cpp:382] ip1 -> ip1
I0428 19:49:16.056124 26714 net.cpp:124] Setting up ip1
I0428 19:49:16.056135 26714 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:16.056159 26714 net.cpp:139] Memory required for data: 1924800
I0428 19:49:16.056171 26714 layer_factory.hpp:77] Creating layer relu1
I0428 19:49:16.056181 26714 net.cpp:86] Creating Layer relu1
I0428 19:49:16.056188 26714 net.cpp:408] relu1 <- ip1
I0428 19:49:16.056198 26714 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:49:16.056453 26714 net.cpp:124] Setting up relu1
I0428 19:49:16.056464 26714 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:49:16.056469 26714 net.cpp:139] Memory required for data: 1934800
I0428 19:49:16.056474 26714 layer_factory.hpp:77] Creating layer ip2
I0428 19:49:16.056502 26714 net.cpp:86] Creating Layer ip2
I0428 19:49:16.056524 26714 net.cpp:408] ip2 <- ip1
I0428 19:49:16.056532 26714 net.cpp:382] ip2 -> ip2
I0428 19:49:16.056711 26714 net.cpp:124] Setting up ip2
I0428 19:49:16.056722 26714 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:16.056730 26714 net.cpp:139] Memory required for data: 1938800
I0428 19:49:16.056738 26714 layer_factory.hpp:77] Creating layer relu2
I0428 19:49:16.056747 26714 net.cpp:86] Creating Layer relu2
I0428 19:49:16.056754 26714 net.cpp:408] relu2 <- ip2
I0428 19:49:16.056763 26714 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:49:16.057062 26714 net.cpp:124] Setting up relu2
I0428 19:49:16.057085 26714 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:16.057090 26714 net.cpp:139] Memory required for data: 1942800
I0428 19:49:16.057096 26714 layer_factory.hpp:77] Creating layer ip3
I0428 19:49:16.057103 26714 net.cpp:86] Creating Layer ip3
I0428 19:49:16.057109 26714 net.cpp:408] ip3 <- ip2
I0428 19:49:16.057118 26714 net.cpp:382] ip3 -> ip3
I0428 19:49:16.057277 26714 net.cpp:124] Setting up ip3
I0428 19:49:16.057287 26714 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:16.057293 26714 net.cpp:139] Memory required for data: 1946800
I0428 19:49:16.057304 26714 layer_factory.hpp:77] Creating layer relu3
I0428 19:49:16.057314 26714 net.cpp:86] Creating Layer relu3
I0428 19:49:16.057320 26714 net.cpp:408] relu3 <- ip3
I0428 19:49:16.057327 26714 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:49:16.058409 26714 net.cpp:124] Setting up relu3
I0428 19:49:16.058426 26714 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:16.058434 26714 net.cpp:139] Memory required for data: 1950800
I0428 19:49:16.058439 26714 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:49:16.058449 26714 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:49:16.058456 26714 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:49:16.058480 26714 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:49:16.058490 26714 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:49:16.058557 26714 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:49:16.058565 26714 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:16.058573 26714 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:49:16.058576 26714 net.cpp:139] Memory required for data: 1958800
I0428 19:49:16.058583 26714 layer_factory.hpp:77] Creating layer accuracy
I0428 19:49:16.058590 26714 net.cpp:86] Creating Layer accuracy
I0428 19:49:16.058596 26714 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:49:16.058603 26714 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:49:16.058611 26714 net.cpp:382] accuracy -> accuracy
I0428 19:49:16.058622 26714 net.cpp:124] Setting up accuracy
I0428 19:49:16.058629 26714 net.cpp:131] Top shape: (1)
I0428 19:49:16.058634 26714 net.cpp:139] Memory required for data: 1958804
I0428 19:49:16.058640 26714 layer_factory.hpp:77] Creating layer loss
I0428 19:49:16.058646 26714 net.cpp:86] Creating Layer loss
I0428 19:49:16.058652 26714 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:49:16.058658 26714 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:49:16.058666 26714 net.cpp:382] loss -> loss
I0428 19:49:16.058676 26714 layer_factory.hpp:77] Creating layer loss
I0428 19:49:16.059084 26714 net.cpp:124] Setting up loss
I0428 19:49:16.059099 26714 net.cpp:131] Top shape: (1)
I0428 19:49:16.059106 26714 net.cpp:134]     with loss weight 1
I0428 19:49:16.059116 26714 net.cpp:139] Memory required for data: 1958808
I0428 19:49:16.059136 26714 net.cpp:200] loss needs backward computation.
I0428 19:49:16.059144 26714 net.cpp:202] accuracy does not need backward computation.
I0428 19:49:16.059150 26714 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:49:16.059156 26714 net.cpp:200] relu3 needs backward computation.
I0428 19:49:16.059164 26714 net.cpp:200] ip3 needs backward computation.
I0428 19:49:16.059168 26714 net.cpp:200] relu2 needs backward computation.
I0428 19:49:16.059175 26714 net.cpp:200] ip2 needs backward computation.
I0428 19:49:16.059180 26714 net.cpp:200] relu1 needs backward computation.
I0428 19:49:16.059185 26714 net.cpp:200] ip1 needs backward computation.
I0428 19:49:16.059192 26714 net.cpp:200] pool1 needs backward computation.
I0428 19:49:16.059212 26714 net.cpp:200] conv1 needs backward computation.
I0428 19:49:16.059233 26714 net.cpp:200] pool0 needs backward computation.
I0428 19:49:16.059239 26714 net.cpp:200] conv0 needs backward computation.
I0428 19:49:16.059245 26714 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:49:16.059252 26714 net.cpp:202] mnist does not need backward computation.
I0428 19:49:16.059257 26714 net.cpp:244] This network produces output accuracy
I0428 19:49:16.059278 26714 net.cpp:244] This network produces output loss
I0428 19:49:16.059295 26714 net.cpp:257] Network initialization done.
I0428 19:49:16.059356 26714 solver.cpp:56] Solver scaffolding done.
I0428 19:49:16.059859 26714 caffe.cpp:248] Starting Optimization
I0428 19:49:16.059869 26714 solver.cpp:273] Solving LeNet
I0428 19:49:16.059872 26714 solver.cpp:274] Learning Rate Policy: inv
I0428 19:49:16.061019 26714 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:49:16.069378 26714 blocking_queue.cpp:49] Waiting for data
I0428 19:49:16.107882 26721 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:16.108513 26714 solver.cpp:398]     Test net output #0: accuracy = 0.1376
I0428 19:49:16.108537 26714 solver.cpp:398]     Test net output #1: loss = 2.3244 (* 1 = 2.3244 loss)
I0428 19:49:16.110644 26714 solver.cpp:219] Iteration 0 (0 iter/s, 0.0507453s/100 iters), loss = 2.30458
I0428 19:49:16.110685 26714 solver.cpp:238]     Train net output #0: loss = 2.30458 (* 1 = 2.30458 loss)
I0428 19:49:16.110702 26714 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:49:16.180591 26714 solver.cpp:219] Iteration 100 (1430.69 iter/s, 0.0698962s/100 iters), loss = 1.49868
I0428 19:49:16.180615 26714 solver.cpp:238]     Train net output #0: loss = 1.49868 (* 1 = 1.49868 loss)
I0428 19:49:16.180624 26714 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:49:16.252285 26714 solver.cpp:219] Iteration 200 (1395.45 iter/s, 0.0716616s/100 iters), loss = 0.754803
I0428 19:49:16.252311 26714 solver.cpp:238]     Train net output #0: loss = 0.754803 (* 1 = 0.754803 loss)
I0428 19:49:16.252321 26714 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:49:16.323282 26714 solver.cpp:219] Iteration 300 (1409.2 iter/s, 0.0709622s/100 iters), loss = 0.418105
I0428 19:49:16.323305 26714 solver.cpp:238]     Train net output #0: loss = 0.418105 (* 1 = 0.418105 loss)
I0428 19:49:16.323313 26714 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:49:16.392693 26714 solver.cpp:219] Iteration 400 (1441.36 iter/s, 0.0693791s/100 iters), loss = 0.266101
I0428 19:49:16.392716 26714 solver.cpp:238]     Train net output #0: loss = 0.266101 (* 1 = 0.266101 loss)
I0428 19:49:16.392724 26714 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:49:16.462170 26714 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:49:16.506817 26721 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:16.507494 26714 solver.cpp:398]     Test net output #0: accuracy = 0.9301
I0428 19:49:16.507519 26714 solver.cpp:398]     Test net output #1: loss = 0.227915 (* 1 = 0.227915 loss)
I0428 19:49:16.508540 26714 solver.cpp:219] Iteration 500 (863.466 iter/s, 0.115812s/100 iters), loss = 0.204046
I0428 19:49:16.508566 26714 solver.cpp:238]     Train net output #0: loss = 0.204046 (* 1 = 0.204046 loss)
I0428 19:49:16.508595 26714 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:49:16.586076 26714 solver.cpp:219] Iteration 600 (1290.3 iter/s, 0.0775014s/100 iters), loss = 0.130522
I0428 19:49:16.586115 26714 solver.cpp:238]     Train net output #0: loss = 0.130522 (* 1 = 0.130522 loss)
I0428 19:49:16.586122 26714 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:49:16.657618 26714 solver.cpp:219] Iteration 700 (1398.41 iter/s, 0.07151s/100 iters), loss = 0.227401
I0428 19:49:16.657656 26714 solver.cpp:238]     Train net output #0: loss = 0.227401 (* 1 = 0.227401 loss)
I0428 19:49:16.657662 26714 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:49:16.727394 26714 solver.cpp:219] Iteration 800 (1433.8 iter/s, 0.0697447s/100 iters), loss = 0.208953
I0428 19:49:16.727434 26714 solver.cpp:238]     Train net output #0: loss = 0.208953 (* 1 = 0.208953 loss)
I0428 19:49:16.727440 26714 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:49:16.797621 26714 solver.cpp:219] Iteration 900 (1424.6 iter/s, 0.0701952s/100 iters), loss = 0.156349
I0428 19:49:16.797660 26714 solver.cpp:238]     Train net output #0: loss = 0.156349 (* 1 = 0.156349 loss)
I0428 19:49:16.797667 26714 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:49:16.821476 26720 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:16.867485 26714 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:49:16.868376 26714 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:49:16.869055 26714 solver.cpp:311] Iteration 1000, loss = 0.239801
I0428 19:49:16.869072 26714 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:49:16.914814 26721 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:49:16.915460 26714 solver.cpp:398]     Test net output #0: accuracy = 0.9616
I0428 19:49:16.915482 26714 solver.cpp:398]     Test net output #1: loss = 0.120037 (* 1 = 0.120037 loss)
I0428 19:49:16.915489 26714 solver.cpp:316] Optimization Done.
I0428 19:49:16.915494 26714 caffe.cpp:259] Optimization Done.
