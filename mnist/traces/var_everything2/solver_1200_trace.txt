I0428 20:13:29.015669 32471 caffe.cpp:218] Using GPUs 0
I0428 20:13:29.049806 32471 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:13:29.502815 32471 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1200.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:13:29.502971 32471 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1200.prototxt
I0428 20:13:29.503340 32471 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:13:29.503372 32471 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:13:29.503458 32471 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:29.503522 32471 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:29.503618 32471 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:13:29.503636 32471 net.cpp:86] Creating Layer mnist
I0428 20:13:29.503645 32471 net.cpp:382] mnist -> data
I0428 20:13:29.503664 32471 net.cpp:382] mnist -> label
I0428 20:13:29.504619 32471 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:13:29.506850 32471 net.cpp:124] Setting up mnist
I0428 20:13:29.506881 32471 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:13:29.506886 32471 net.cpp:131] Top shape: 64 (64)
I0428 20:13:29.506889 32471 net.cpp:139] Memory required for data: 200960
I0428 20:13:29.506894 32471 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:29.506908 32471 net.cpp:86] Creating Layer conv0
I0428 20:13:29.506925 32471 net.cpp:408] conv0 <- data
I0428 20:13:29.506937 32471 net.cpp:382] conv0 -> conv0
I0428 20:13:29.727912 32471 net.cpp:124] Setting up conv0
I0428 20:13:29.727937 32471 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:13:29.727941 32471 net.cpp:139] Memory required for data: 3887360
I0428 20:13:29.727954 32471 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:29.727967 32471 net.cpp:86] Creating Layer pool0
I0428 20:13:29.727972 32471 net.cpp:408] pool0 <- conv0
I0428 20:13:29.727993 32471 net.cpp:382] pool0 -> pool0
I0428 20:13:29.728036 32471 net.cpp:124] Setting up pool0
I0428 20:13:29.728044 32471 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:13:29.728045 32471 net.cpp:139] Memory required for data: 4808960
I0428 20:13:29.728049 32471 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:29.728060 32471 net.cpp:86] Creating Layer conv1
I0428 20:13:29.728065 32471 net.cpp:408] conv1 <- pool0
I0428 20:13:29.728070 32471 net.cpp:382] conv1 -> conv1
I0428 20:13:29.730468 32471 net.cpp:124] Setting up conv1
I0428 20:13:29.730481 32471 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:13:29.730484 32471 net.cpp:139] Memory required for data: 6447360
I0428 20:13:29.730492 32471 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:29.730500 32471 net.cpp:86] Creating Layer pool1
I0428 20:13:29.730504 32471 net.cpp:408] pool1 <- conv1
I0428 20:13:29.730507 32471 net.cpp:382] pool1 -> pool1
I0428 20:13:29.730558 32471 net.cpp:124] Setting up pool1
I0428 20:13:29.730564 32471 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:13:29.730567 32471 net.cpp:139] Memory required for data: 6856960
I0428 20:13:29.730571 32471 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:29.730577 32471 net.cpp:86] Creating Layer ip1
I0428 20:13:29.730581 32471 net.cpp:408] ip1 <- pool1
I0428 20:13:29.730585 32471 net.cpp:382] ip1 -> ip1
I0428 20:13:29.731984 32471 net.cpp:124] Setting up ip1
I0428 20:13:29.731997 32471 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:29.732015 32471 net.cpp:139] Memory required for data: 6869760
I0428 20:13:29.732023 32471 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:29.732030 32471 net.cpp:86] Creating Layer relu1
I0428 20:13:29.732034 32471 net.cpp:408] relu1 <- ip1
I0428 20:13:29.732039 32471 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:29.732221 32471 net.cpp:124] Setting up relu1
I0428 20:13:29.732229 32471 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:13:29.732233 32471 net.cpp:139] Memory required for data: 6882560
I0428 20:13:29.732235 32471 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:29.732244 32471 net.cpp:86] Creating Layer ip2
I0428 20:13:29.732249 32471 net.cpp:408] ip2 <- ip1
I0428 20:13:29.732254 32471 net.cpp:382] ip2 -> ip2
I0428 20:13:29.732364 32471 net.cpp:124] Setting up ip2
I0428 20:13:29.732370 32471 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:29.732373 32471 net.cpp:139] Memory required for data: 6885120
I0428 20:13:29.732378 32471 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:29.732385 32471 net.cpp:86] Creating Layer relu2
I0428 20:13:29.732390 32471 net.cpp:408] relu2 <- ip2
I0428 20:13:29.732394 32471 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:29.733218 32471 net.cpp:124] Setting up relu2
I0428 20:13:29.733232 32471 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:29.733250 32471 net.cpp:139] Memory required for data: 6887680
I0428 20:13:29.733254 32471 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:29.733278 32471 net.cpp:86] Creating Layer ip3
I0428 20:13:29.733280 32471 net.cpp:408] ip3 <- ip2
I0428 20:13:29.733288 32471 net.cpp:382] ip3 -> ip3
I0428 20:13:29.733383 32471 net.cpp:124] Setting up ip3
I0428 20:13:29.733392 32471 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:29.733395 32471 net.cpp:139] Memory required for data: 6890240
I0428 20:13:29.733402 32471 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:29.733408 32471 net.cpp:86] Creating Layer relu3
I0428 20:13:29.733412 32471 net.cpp:408] relu3 <- ip3
I0428 20:13:29.733415 32471 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:29.733583 32471 net.cpp:124] Setting up relu3
I0428 20:13:29.733592 32471 net.cpp:131] Top shape: 64 10 (640)
I0428 20:13:29.733594 32471 net.cpp:139] Memory required for data: 6892800
I0428 20:13:29.733597 32471 layer_factory.hpp:77] Creating layer loss
I0428 20:13:29.733603 32471 net.cpp:86] Creating Layer loss
I0428 20:13:29.733606 32471 net.cpp:408] loss <- ip3
I0428 20:13:29.733609 32471 net.cpp:408] loss <- label
I0428 20:13:29.733614 32471 net.cpp:382] loss -> loss
I0428 20:13:29.733633 32471 layer_factory.hpp:77] Creating layer loss
I0428 20:13:29.733881 32471 net.cpp:124] Setting up loss
I0428 20:13:29.733891 32471 net.cpp:131] Top shape: (1)
I0428 20:13:29.733893 32471 net.cpp:134]     with loss weight 1
I0428 20:13:29.733908 32471 net.cpp:139] Memory required for data: 6892804
I0428 20:13:29.733912 32471 net.cpp:200] loss needs backward computation.
I0428 20:13:29.733916 32471 net.cpp:200] relu3 needs backward computation.
I0428 20:13:29.733918 32471 net.cpp:200] ip3 needs backward computation.
I0428 20:13:29.733922 32471 net.cpp:200] relu2 needs backward computation.
I0428 20:13:29.733923 32471 net.cpp:200] ip2 needs backward computation.
I0428 20:13:29.733927 32471 net.cpp:200] relu1 needs backward computation.
I0428 20:13:29.733929 32471 net.cpp:200] ip1 needs backward computation.
I0428 20:13:29.733932 32471 net.cpp:200] pool1 needs backward computation.
I0428 20:13:29.733934 32471 net.cpp:200] conv1 needs backward computation.
I0428 20:13:29.733937 32471 net.cpp:200] pool0 needs backward computation.
I0428 20:13:29.733940 32471 net.cpp:200] conv0 needs backward computation.
I0428 20:13:29.733943 32471 net.cpp:202] mnist does not need backward computation.
I0428 20:13:29.733947 32471 net.cpp:244] This network produces output loss
I0428 20:13:29.733954 32471 net.cpp:257] Network initialization done.
I0428 20:13:29.734333 32471 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1200.prototxt
I0428 20:13:29.734390 32471 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:13:29.734475 32471 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:13:29.734570 32471 layer_factory.hpp:77] Creating layer mnist
I0428 20:13:29.734616 32471 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:13:29.734628 32471 net.cpp:86] Creating Layer mnist
I0428 20:13:29.734633 32471 net.cpp:382] mnist -> data
I0428 20:13:29.734640 32471 net.cpp:382] mnist -> label
I0428 20:13:29.734724 32471 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:13:29.736081 32471 net.cpp:124] Setting up mnist
I0428 20:13:29.736094 32471 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:13:29.736099 32471 net.cpp:131] Top shape: 100 (100)
I0428 20:13:29.736101 32471 net.cpp:139] Memory required for data: 314000
I0428 20:13:29.736105 32471 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:13:29.736114 32471 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:13:29.736117 32471 net.cpp:408] label_mnist_1_split <- label
I0428 20:13:29.736124 32471 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:13:29.736129 32471 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:13:29.736209 32471 net.cpp:124] Setting up label_mnist_1_split
I0428 20:13:29.736217 32471 net.cpp:131] Top shape: 100 (100)
I0428 20:13:29.736235 32471 net.cpp:131] Top shape: 100 (100)
I0428 20:13:29.736238 32471 net.cpp:139] Memory required for data: 314800
I0428 20:13:29.736241 32471 layer_factory.hpp:77] Creating layer conv0
I0428 20:13:29.736253 32471 net.cpp:86] Creating Layer conv0
I0428 20:13:29.736255 32471 net.cpp:408] conv0 <- data
I0428 20:13:29.736260 32471 net.cpp:382] conv0 -> conv0
I0428 20:13:29.737906 32471 net.cpp:124] Setting up conv0
I0428 20:13:29.737918 32471 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:13:29.737922 32471 net.cpp:139] Memory required for data: 6074800
I0428 20:13:29.737931 32471 layer_factory.hpp:77] Creating layer pool0
I0428 20:13:29.737938 32471 net.cpp:86] Creating Layer pool0
I0428 20:13:29.737957 32471 net.cpp:408] pool0 <- conv0
I0428 20:13:29.737963 32471 net.cpp:382] pool0 -> pool0
I0428 20:13:29.738046 32471 net.cpp:124] Setting up pool0
I0428 20:13:29.738054 32471 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:13:29.738057 32471 net.cpp:139] Memory required for data: 7514800
I0428 20:13:29.738060 32471 layer_factory.hpp:77] Creating layer conv1
I0428 20:13:29.738070 32471 net.cpp:86] Creating Layer conv1
I0428 20:13:29.738073 32471 net.cpp:408] conv1 <- pool0
I0428 20:13:29.738080 32471 net.cpp:382] conv1 -> conv1
I0428 20:13:29.739992 32471 net.cpp:124] Setting up conv1
I0428 20:13:29.740010 32471 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:13:29.740015 32471 net.cpp:139] Memory required for data: 10074800
I0428 20:13:29.740023 32471 layer_factory.hpp:77] Creating layer pool1
I0428 20:13:29.740031 32471 net.cpp:86] Creating Layer pool1
I0428 20:13:29.740034 32471 net.cpp:408] pool1 <- conv1
I0428 20:13:29.740041 32471 net.cpp:382] pool1 -> pool1
I0428 20:13:29.740084 32471 net.cpp:124] Setting up pool1
I0428 20:13:29.740092 32471 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:13:29.740094 32471 net.cpp:139] Memory required for data: 10714800
I0428 20:13:29.740097 32471 layer_factory.hpp:77] Creating layer ip1
I0428 20:13:29.740104 32471 net.cpp:86] Creating Layer ip1
I0428 20:13:29.740108 32471 net.cpp:408] ip1 <- pool1
I0428 20:13:29.740113 32471 net.cpp:382] ip1 -> ip1
I0428 20:13:29.740685 32471 net.cpp:124] Setting up ip1
I0428 20:13:29.740694 32471 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:29.740705 32471 net.cpp:139] Memory required for data: 10734800
I0428 20:13:29.740713 32471 layer_factory.hpp:77] Creating layer relu1
I0428 20:13:29.740720 32471 net.cpp:86] Creating Layer relu1
I0428 20:13:29.740723 32471 net.cpp:408] relu1 <- ip1
I0428 20:13:29.740728 32471 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:13:29.740964 32471 net.cpp:124] Setting up relu1
I0428 20:13:29.740975 32471 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:13:29.740978 32471 net.cpp:139] Memory required for data: 10754800
I0428 20:13:29.740981 32471 layer_factory.hpp:77] Creating layer ip2
I0428 20:13:29.740990 32471 net.cpp:86] Creating Layer ip2
I0428 20:13:29.740993 32471 net.cpp:408] ip2 <- ip1
I0428 20:13:29.741000 32471 net.cpp:382] ip2 -> ip2
I0428 20:13:29.741111 32471 net.cpp:124] Setting up ip2
I0428 20:13:29.741118 32471 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:29.741122 32471 net.cpp:139] Memory required for data: 10758800
I0428 20:13:29.741127 32471 layer_factory.hpp:77] Creating layer relu2
I0428 20:13:29.741132 32471 net.cpp:86] Creating Layer relu2
I0428 20:13:29.741134 32471 net.cpp:408] relu2 <- ip2
I0428 20:13:29.741138 32471 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:13:29.741353 32471 net.cpp:124] Setting up relu2
I0428 20:13:29.741361 32471 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:29.741364 32471 net.cpp:139] Memory required for data: 10762800
I0428 20:13:29.741367 32471 layer_factory.hpp:77] Creating layer ip3
I0428 20:13:29.741372 32471 net.cpp:86] Creating Layer ip3
I0428 20:13:29.741375 32471 net.cpp:408] ip3 <- ip2
I0428 20:13:29.741382 32471 net.cpp:382] ip3 -> ip3
I0428 20:13:29.741473 32471 net.cpp:124] Setting up ip3
I0428 20:13:29.741480 32471 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:29.741483 32471 net.cpp:139] Memory required for data: 10766800
I0428 20:13:29.741490 32471 layer_factory.hpp:77] Creating layer relu3
I0428 20:13:29.741495 32471 net.cpp:86] Creating Layer relu3
I0428 20:13:29.741498 32471 net.cpp:408] relu3 <- ip3
I0428 20:13:29.741503 32471 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:13:29.742261 32471 net.cpp:124] Setting up relu3
I0428 20:13:29.742274 32471 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:29.742276 32471 net.cpp:139] Memory required for data: 10770800
I0428 20:13:29.742280 32471 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:13:29.742285 32471 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:13:29.742288 32471 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:13:29.742295 32471 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:13:29.742300 32471 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:13:29.742336 32471 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:13:29.742342 32471 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:29.742347 32471 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:13:29.742348 32471 net.cpp:139] Memory required for data: 10778800
I0428 20:13:29.742352 32471 layer_factory.hpp:77] Creating layer accuracy
I0428 20:13:29.742357 32471 net.cpp:86] Creating Layer accuracy
I0428 20:13:29.742360 32471 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:13:29.742364 32471 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:13:29.742369 32471 net.cpp:382] accuracy -> accuracy
I0428 20:13:29.742375 32471 net.cpp:124] Setting up accuracy
I0428 20:13:29.742380 32471 net.cpp:131] Top shape: (1)
I0428 20:13:29.742383 32471 net.cpp:139] Memory required for data: 10778804
I0428 20:13:29.742386 32471 layer_factory.hpp:77] Creating layer loss
I0428 20:13:29.742390 32471 net.cpp:86] Creating Layer loss
I0428 20:13:29.742393 32471 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:13:29.742396 32471 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:13:29.742400 32471 net.cpp:382] loss -> loss
I0428 20:13:29.742405 32471 layer_factory.hpp:77] Creating layer loss
I0428 20:13:29.742630 32471 net.cpp:124] Setting up loss
I0428 20:13:29.742640 32471 net.cpp:131] Top shape: (1)
I0428 20:13:29.742642 32471 net.cpp:134]     with loss weight 1
I0428 20:13:29.742658 32471 net.cpp:139] Memory required for data: 10778808
I0428 20:13:29.742661 32471 net.cpp:200] loss needs backward computation.
I0428 20:13:29.742666 32471 net.cpp:202] accuracy does not need backward computation.
I0428 20:13:29.742669 32471 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:13:29.742672 32471 net.cpp:200] relu3 needs backward computation.
I0428 20:13:29.742674 32471 net.cpp:200] ip3 needs backward computation.
I0428 20:13:29.742677 32471 net.cpp:200] relu2 needs backward computation.
I0428 20:13:29.742679 32471 net.cpp:200] ip2 needs backward computation.
I0428 20:13:29.742682 32471 net.cpp:200] relu1 needs backward computation.
I0428 20:13:29.742684 32471 net.cpp:200] ip1 needs backward computation.
I0428 20:13:29.742687 32471 net.cpp:200] pool1 needs backward computation.
I0428 20:13:29.742691 32471 net.cpp:200] conv1 needs backward computation.
I0428 20:13:29.742692 32471 net.cpp:200] pool0 needs backward computation.
I0428 20:13:29.742696 32471 net.cpp:200] conv0 needs backward computation.
I0428 20:13:29.742698 32471 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:13:29.742702 32471 net.cpp:202] mnist does not need backward computation.
I0428 20:13:29.742704 32471 net.cpp:244] This network produces output accuracy
I0428 20:13:29.742707 32471 net.cpp:244] This network produces output loss
I0428 20:13:29.742718 32471 net.cpp:257] Network initialization done.
I0428 20:13:29.742758 32471 solver.cpp:56] Solver scaffolding done.
I0428 20:13:29.743105 32471 caffe.cpp:248] Starting Optimization
I0428 20:13:29.743111 32471 solver.cpp:273] Solving LeNet
I0428 20:13:29.743114 32471 solver.cpp:274] Learning Rate Policy: inv
I0428 20:13:29.743921 32471 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:13:29.751022 32471 blocking_queue.cpp:49] Waiting for data
I0428 20:13:29.816709 32478 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:29.817940 32471 solver.cpp:398]     Test net output #0: accuracy = 0.0757
I0428 20:13:29.817960 32471 solver.cpp:398]     Test net output #1: loss = 2.32167 (* 1 = 2.32167 loss)
I0428 20:13:29.822804 32471 solver.cpp:219] Iteration 0 (-1.03836e-42 iter/s, 0.0796641s/100 iters), loss = 2.31653
I0428 20:13:29.822829 32471 solver.cpp:238]     Train net output #0: loss = 2.31653 (* 1 = 2.31653 loss)
I0428 20:13:29.822860 32471 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:13:29.991716 32471 solver.cpp:219] Iteration 100 (592.172 iter/s, 0.16887s/100 iters), loss = 0.362341
I0428 20:13:29.991745 32471 solver.cpp:238]     Train net output #0: loss = 0.362341 (* 1 = 0.362341 loss)
I0428 20:13:29.991752 32471 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:13:30.154350 32471 solver.cpp:219] Iteration 200 (615.049 iter/s, 0.162589s/100 iters), loss = 0.212454
I0428 20:13:30.154391 32471 solver.cpp:238]     Train net output #0: loss = 0.212454 (* 1 = 0.212454 loss)
I0428 20:13:30.154397 32471 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:13:30.316859 32471 solver.cpp:219] Iteration 300 (615.495 iter/s, 0.162471s/100 iters), loss = 0.236642
I0428 20:13:30.316900 32471 solver.cpp:238]     Train net output #0: loss = 0.236642 (* 1 = 0.236642 loss)
I0428 20:13:30.316905 32471 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:13:30.480777 32471 solver.cpp:219] Iteration 400 (610.271 iter/s, 0.163862s/100 iters), loss = 0.0960226
I0428 20:13:30.480815 32471 solver.cpp:238]     Train net output #0: loss = 0.0960226 (* 1 = 0.0960226 loss)
I0428 20:13:30.480839 32471 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:13:30.645604 32471 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:13:30.725286 32478 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:30.726161 32471 solver.cpp:398]     Test net output #0: accuracy = 0.9645
I0428 20:13:30.726181 32471 solver.cpp:398]     Test net output #1: loss = 0.120841 (* 1 = 0.120841 loss)
I0428 20:13:30.727871 32471 solver.cpp:219] Iteration 500 (404.783 iter/s, 0.247046s/100 iters), loss = 0.0994613
I0428 20:13:30.727912 32471 solver.cpp:238]     Train net output #0: loss = 0.0994613 (* 1 = 0.0994613 loss)
I0428 20:13:30.727921 32471 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:13:30.894906 32471 solver.cpp:219] Iteration 600 (598.872 iter/s, 0.166981s/100 iters), loss = 0.0987439
I0428 20:13:30.894948 32471 solver.cpp:238]     Train net output #0: loss = 0.098744 (* 1 = 0.098744 loss)
I0428 20:13:30.894954 32471 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:13:31.056972 32471 solver.cpp:219] Iteration 700 (617.242 iter/s, 0.162011s/100 iters), loss = 0.157352
I0428 20:13:31.056996 32471 solver.cpp:238]     Train net output #0: loss = 0.157352 (* 1 = 0.157352 loss)
I0428 20:13:31.057003 32471 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:13:31.217365 32471 solver.cpp:219] Iteration 800 (623.615 iter/s, 0.160355s/100 iters), loss = 0.264962
I0428 20:13:31.217406 32471 solver.cpp:238]     Train net output #0: loss = 0.264962 (* 1 = 0.264962 loss)
I0428 20:13:31.217411 32471 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:13:31.385069 32471 solver.cpp:219] Iteration 900 (596.476 iter/s, 0.167651s/100 iters), loss = 0.166723
I0428 20:13:31.385110 32471 solver.cpp:238]     Train net output #0: loss = 0.166723 (* 1 = 0.166723 loss)
I0428 20:13:31.385116 32471 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:13:31.438452 32477 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:31.543562 32471 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:13:31.546746 32471 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:13:31.548385 32471 solver.cpp:311] Iteration 1000, loss = 0.0629795
I0428 20:13:31.548414 32471 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:13:31.625527 32478 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:13:31.626410 32471 solver.cpp:398]     Test net output #0: accuracy = 0.9787
I0428 20:13:31.626428 32471 solver.cpp:398]     Test net output #1: loss = 0.0721567 (* 1 = 0.0721567 loss)
I0428 20:13:31.626433 32471 solver.cpp:316] Optimization Done.
I0428 20:13:31.626436 32471 caffe.cpp:259] Optimization Done.
