I0428 19:29:25.343422 22017 caffe.cpp:218] Using GPUs 0
I0428 19:29:25.383764 22017 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:25.897639 22017 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test58.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:25.897804 22017 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test58.prototxt
I0428 19:29:25.898174 22017 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:25.898195 22017 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:25.898288 22017 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:25.898385 22017 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:25.898519 22017 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:25.898551 22017 net.cpp:86] Creating Layer mnist
I0428 19:29:25.898563 22017 net.cpp:382] mnist -> data
I0428 19:29:25.898596 22017 net.cpp:382] mnist -> label
I0428 19:29:25.899824 22017 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:25.902525 22017 net.cpp:124] Setting up mnist
I0428 19:29:25.902546 22017 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:25.902556 22017 net.cpp:131] Top shape: 64 (64)
I0428 19:29:25.902564 22017 net.cpp:139] Memory required for data: 200960
I0428 19:29:25.902575 22017 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:25.902597 22017 net.cpp:86] Creating Layer conv0
I0428 19:29:25.902607 22017 net.cpp:408] conv0 <- data
I0428 19:29:25.902626 22017 net.cpp:382] conv0 -> conv0
I0428 19:29:26.187062 22017 net.cpp:124] Setting up conv0
I0428 19:29:26.187090 22017 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:26.187096 22017 net.cpp:139] Memory required for data: 495872
I0428 19:29:26.187117 22017 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:26.187134 22017 net.cpp:86] Creating Layer pool0
I0428 19:29:26.187155 22017 net.cpp:408] pool0 <- conv0
I0428 19:29:26.187166 22017 net.cpp:382] pool0 -> pool0
I0428 19:29:26.187228 22017 net.cpp:124] Setting up pool0
I0428 19:29:26.187237 22017 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:26.187242 22017 net.cpp:139] Memory required for data: 569600
I0428 19:29:26.187247 22017 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:26.187258 22017 net.cpp:86] Creating Layer ip1
I0428 19:29:26.187264 22017 net.cpp:408] ip1 <- pool0
I0428 19:29:26.187273 22017 net.cpp:382] ip1 -> ip1
I0428 19:29:26.188282 22017 net.cpp:124] Setting up ip1
I0428 19:29:26.188297 22017 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:26.188302 22017 net.cpp:139] Memory required for data: 572160
I0428 19:29:26.188316 22017 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:26.188328 22017 net.cpp:86] Creating Layer relu1
I0428 19:29:26.188340 22017 net.cpp:408] relu1 <- ip1
I0428 19:29:26.188349 22017 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:26.188560 22017 net.cpp:124] Setting up relu1
I0428 19:29:26.188572 22017 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:26.188580 22017 net.cpp:139] Memory required for data: 574720
I0428 19:29:26.188585 22017 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:26.188596 22017 net.cpp:86] Creating Layer ip2
I0428 19:29:26.188614 22017 net.cpp:408] ip2 <- ip1
I0428 19:29:26.188624 22017 net.cpp:382] ip2 -> ip2
I0428 19:29:26.188738 22017 net.cpp:124] Setting up ip2
I0428 19:29:26.188747 22017 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:26.188752 22017 net.cpp:139] Memory required for data: 587520
I0428 19:29:26.188766 22017 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:26.188776 22017 net.cpp:86] Creating Layer relu2
I0428 19:29:26.188782 22017 net.cpp:408] relu2 <- ip2
I0428 19:29:26.188789 22017 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:26.189568 22017 net.cpp:124] Setting up relu2
I0428 19:29:26.189581 22017 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:29:26.189586 22017 net.cpp:139] Memory required for data: 600320
I0428 19:29:26.189591 22017 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:26.189601 22017 net.cpp:86] Creating Layer ip3
I0428 19:29:26.189607 22017 net.cpp:408] ip3 <- ip2
I0428 19:29:26.189617 22017 net.cpp:382] ip3 -> ip3
I0428 19:29:26.189731 22017 net.cpp:124] Setting up ip3
I0428 19:29:26.189740 22017 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:26.189745 22017 net.cpp:139] Memory required for data: 602880
I0428 19:29:26.189754 22017 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:26.189764 22017 net.cpp:86] Creating Layer relu3
I0428 19:29:26.189769 22017 net.cpp:408] relu3 <- ip3
I0428 19:29:26.189777 22017 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:26.189942 22017 net.cpp:124] Setting up relu3
I0428 19:29:26.189952 22017 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:26.189956 22017 net.cpp:139] Memory required for data: 605440
I0428 19:29:26.189961 22017 layer_factory.hpp:77] Creating layer loss
I0428 19:29:26.189970 22017 net.cpp:86] Creating Layer loss
I0428 19:29:26.189975 22017 net.cpp:408] loss <- ip3
I0428 19:29:26.189981 22017 net.cpp:408] loss <- label
I0428 19:29:26.189991 22017 net.cpp:382] loss -> loss
I0428 19:29:26.190009 22017 layer_factory.hpp:77] Creating layer loss
I0428 19:29:26.190255 22017 net.cpp:124] Setting up loss
I0428 19:29:26.190265 22017 net.cpp:131] Top shape: (1)
I0428 19:29:26.190270 22017 net.cpp:134]     with loss weight 1
I0428 19:29:26.190289 22017 net.cpp:139] Memory required for data: 605444
I0428 19:29:26.190295 22017 net.cpp:200] loss needs backward computation.
I0428 19:29:26.190301 22017 net.cpp:200] relu3 needs backward computation.
I0428 19:29:26.190306 22017 net.cpp:200] ip3 needs backward computation.
I0428 19:29:26.190311 22017 net.cpp:200] relu2 needs backward computation.
I0428 19:29:26.190316 22017 net.cpp:200] ip2 needs backward computation.
I0428 19:29:26.190321 22017 net.cpp:200] relu1 needs backward computation.
I0428 19:29:26.190325 22017 net.cpp:200] ip1 needs backward computation.
I0428 19:29:26.190342 22017 net.cpp:200] pool0 needs backward computation.
I0428 19:29:26.190348 22017 net.cpp:200] conv0 needs backward computation.
I0428 19:29:26.190354 22017 net.cpp:202] mnist does not need backward computation.
I0428 19:29:26.190359 22017 net.cpp:244] This network produces output loss
I0428 19:29:26.190371 22017 net.cpp:257] Network initialization done.
I0428 19:29:26.190657 22017 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test58.prototxt
I0428 19:29:26.190690 22017 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:26.190774 22017 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:26.190877 22017 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:26.190940 22017 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:26.190958 22017 net.cpp:86] Creating Layer mnist
I0428 19:29:26.190968 22017 net.cpp:382] mnist -> data
I0428 19:29:26.190979 22017 net.cpp:382] mnist -> label
I0428 19:29:26.191100 22017 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:26.193161 22017 net.cpp:124] Setting up mnist
I0428 19:29:26.193176 22017 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:26.193184 22017 net.cpp:131] Top shape: 100 (100)
I0428 19:29:26.193189 22017 net.cpp:139] Memory required for data: 314000
I0428 19:29:26.193194 22017 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:26.193220 22017 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:26.193226 22017 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:26.193234 22017 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:26.193244 22017 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:26.193348 22017 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:26.193357 22017 net.cpp:131] Top shape: 100 (100)
I0428 19:29:26.193363 22017 net.cpp:131] Top shape: 100 (100)
I0428 19:29:26.193367 22017 net.cpp:139] Memory required for data: 314800
I0428 19:29:26.193384 22017 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:26.193400 22017 net.cpp:86] Creating Layer conv0
I0428 19:29:26.193408 22017 net.cpp:408] conv0 <- data
I0428 19:29:26.193418 22017 net.cpp:382] conv0 -> conv0
I0428 19:29:26.194986 22017 net.cpp:124] Setting up conv0
I0428 19:29:26.195001 22017 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:26.195022 22017 net.cpp:139] Memory required for data: 775600
I0428 19:29:26.195039 22017 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:26.195049 22017 net.cpp:86] Creating Layer pool0
I0428 19:29:26.195055 22017 net.cpp:408] pool0 <- conv0
I0428 19:29:26.195061 22017 net.cpp:382] pool0 -> pool0
I0428 19:29:26.195107 22017 net.cpp:124] Setting up pool0
I0428 19:29:26.195116 22017 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:26.195122 22017 net.cpp:139] Memory required for data: 890800
I0428 19:29:26.195127 22017 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:26.195138 22017 net.cpp:86] Creating Layer ip1
I0428 19:29:26.195144 22017 net.cpp:408] ip1 <- pool0
I0428 19:29:26.195152 22017 net.cpp:382] ip1 -> ip1
I0428 19:29:26.195277 22017 net.cpp:124] Setting up ip1
I0428 19:29:26.195287 22017 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:26.195292 22017 net.cpp:139] Memory required for data: 894800
I0428 19:29:26.195303 22017 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:26.195315 22017 net.cpp:86] Creating Layer relu1
I0428 19:29:26.195322 22017 net.cpp:408] relu1 <- ip1
I0428 19:29:26.195329 22017 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:26.195515 22017 net.cpp:124] Setting up relu1
I0428 19:29:26.195528 22017 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:26.195533 22017 net.cpp:139] Memory required for data: 898800
I0428 19:29:26.195536 22017 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:26.195545 22017 net.cpp:86] Creating Layer ip2
I0428 19:29:26.195550 22017 net.cpp:408] ip2 <- ip1
I0428 19:29:26.195559 22017 net.cpp:382] ip2 -> ip2
I0428 19:29:26.195680 22017 net.cpp:124] Setting up ip2
I0428 19:29:26.195689 22017 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:26.195694 22017 net.cpp:139] Memory required for data: 918800
I0428 19:29:26.195706 22017 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:26.195719 22017 net.cpp:86] Creating Layer relu2
I0428 19:29:26.195724 22017 net.cpp:408] relu2 <- ip2
I0428 19:29:26.195731 22017 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:26.196569 22017 net.cpp:124] Setting up relu2
I0428 19:29:26.196583 22017 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:29:26.196588 22017 net.cpp:139] Memory required for data: 938800
I0428 19:29:26.196594 22017 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:26.196606 22017 net.cpp:86] Creating Layer ip3
I0428 19:29:26.196612 22017 net.cpp:408] ip3 <- ip2
I0428 19:29:26.196624 22017 net.cpp:382] ip3 -> ip3
I0428 19:29:26.196753 22017 net.cpp:124] Setting up ip3
I0428 19:29:26.196763 22017 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:26.196768 22017 net.cpp:139] Memory required for data: 942800
I0428 19:29:26.196779 22017 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:26.196786 22017 net.cpp:86] Creating Layer relu3
I0428 19:29:26.196791 22017 net.cpp:408] relu3 <- ip3
I0428 19:29:26.196800 22017 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:26.197027 22017 net.cpp:124] Setting up relu3
I0428 19:29:26.197041 22017 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:26.197046 22017 net.cpp:139] Memory required for data: 946800
I0428 19:29:26.197052 22017 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:26.197060 22017 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:26.197067 22017 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:26.197077 22017 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:26.197088 22017 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:26.197139 22017 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:26.197162 22017 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:26.197173 22017 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:26.197190 22017 net.cpp:139] Memory required for data: 954800
I0428 19:29:26.197211 22017 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:26.197221 22017 net.cpp:86] Creating Layer accuracy
I0428 19:29:26.197227 22017 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:26.197234 22017 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:26.197243 22017 net.cpp:382] accuracy -> accuracy
I0428 19:29:26.197255 22017 net.cpp:124] Setting up accuracy
I0428 19:29:26.197263 22017 net.cpp:131] Top shape: (1)
I0428 19:29:26.197283 22017 net.cpp:139] Memory required for data: 954804
I0428 19:29:26.197288 22017 layer_factory.hpp:77] Creating layer loss
I0428 19:29:26.197298 22017 net.cpp:86] Creating Layer loss
I0428 19:29:26.197304 22017 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:26.197309 22017 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:26.197316 22017 net.cpp:382] loss -> loss
I0428 19:29:26.197341 22017 layer_factory.hpp:77] Creating layer loss
I0428 19:29:26.197674 22017 net.cpp:124] Setting up loss
I0428 19:29:26.197684 22017 net.cpp:131] Top shape: (1)
I0428 19:29:26.197688 22017 net.cpp:134]     with loss weight 1
I0428 19:29:26.197696 22017 net.cpp:139] Memory required for data: 954808
I0428 19:29:26.197702 22017 net.cpp:200] loss needs backward computation.
I0428 19:29:26.197708 22017 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:26.197715 22017 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:26.197720 22017 net.cpp:200] relu3 needs backward computation.
I0428 19:29:26.197724 22017 net.cpp:200] ip3 needs backward computation.
I0428 19:29:26.197729 22017 net.cpp:200] relu2 needs backward computation.
I0428 19:29:26.197734 22017 net.cpp:200] ip2 needs backward computation.
I0428 19:29:26.197741 22017 net.cpp:200] relu1 needs backward computation.
I0428 19:29:26.197744 22017 net.cpp:200] ip1 needs backward computation.
I0428 19:29:26.197751 22017 net.cpp:200] pool0 needs backward computation.
I0428 19:29:26.197757 22017 net.cpp:200] conv0 needs backward computation.
I0428 19:29:26.197763 22017 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:26.197769 22017 net.cpp:202] mnist does not need backward computation.
I0428 19:29:26.197774 22017 net.cpp:244] This network produces output accuracy
I0428 19:29:26.197789 22017 net.cpp:244] This network produces output loss
I0428 19:29:26.197806 22017 net.cpp:257] Network initialization done.
I0428 19:29:26.197847 22017 solver.cpp:56] Solver scaffolding done.
I0428 19:29:26.198117 22017 caffe.cpp:248] Starting Optimization
I0428 19:29:26.198124 22017 solver.cpp:273] Solving LeNet
I0428 19:29:26.198128 22017 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:26.199600 22017 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:26.201498 22017 blocking_queue.cpp:49] Waiting for data
I0428 19:29:26.274760 22024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:26.275172 22017 solver.cpp:398]     Test net output #0: accuracy = 0.07
I0428 19:29:26.275195 22017 solver.cpp:398]     Test net output #1: loss = 2.30933 (* 1 = 2.30933 loss)
I0428 19:29:26.276860 22017 solver.cpp:219] Iteration 0 (-2.40902e-31 iter/s, 0.0787019s/100 iters), loss = 2.31491
I0428 19:29:26.276892 22017 solver.cpp:238]     Train net output #0: loss = 2.31491 (* 1 = 2.31491 loss)
I0428 19:29:26.276911 22017 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:26.333993 22017 solver.cpp:219] Iteration 100 (1751.6 iter/s, 0.0570907s/100 iters), loss = 1.80029
I0428 19:29:26.334050 22017 solver.cpp:238]     Train net output #0: loss = 1.80029 (* 1 = 1.80029 loss)
I0428 19:29:26.334077 22017 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:26.390139 22017 solver.cpp:219] Iteration 200 (1782.92 iter/s, 0.0560876s/100 iters), loss = 1.3479
I0428 19:29:26.390189 22017 solver.cpp:238]     Train net output #0: loss = 1.3479 (* 1 = 1.3479 loss)
I0428 19:29:26.390205 22017 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:26.445646 22017 solver.cpp:219] Iteration 300 (1802.84 iter/s, 0.055468s/100 iters), loss = 1.36896
I0428 19:29:26.445685 22017 solver.cpp:238]     Train net output #0: loss = 1.36896 (* 1 = 1.36896 loss)
I0428 19:29:26.445711 22017 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:26.500164 22017 solver.cpp:219] Iteration 400 (1835.75 iter/s, 0.0544737s/100 iters), loss = 1.48423
I0428 19:29:26.500191 22017 solver.cpp:238]     Train net output #0: loss = 1.48423 (* 1 = 1.48423 loss)
I0428 19:29:26.500217 22017 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:26.554343 22017 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:26.606920 22024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:26.607336 22017 solver.cpp:398]     Test net output #0: accuracy = 0.4582
I0428 19:29:26.607358 22017 solver.cpp:398]     Test net output #1: loss = 1.37551 (* 1 = 1.37551 loss)
I0428 19:29:26.608006 22017 solver.cpp:219] Iteration 500 (927.586 iter/s, 0.107807s/100 iters), loss = 1.44899
I0428 19:29:26.608031 22017 solver.cpp:238]     Train net output #0: loss = 1.44899 (* 1 = 1.44899 loss)
I0428 19:29:26.608047 22017 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:26.666048 22017 solver.cpp:219] Iteration 600 (1723.85 iter/s, 0.0580096s/100 iters), loss = 1.29778
I0428 19:29:26.666112 22017 solver.cpp:238]     Train net output #0: loss = 1.29778 (* 1 = 1.29778 loss)
I0428 19:29:26.666122 22017 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:26.735064 22017 solver.cpp:219] Iteration 700 (1450.44 iter/s, 0.0689447s/100 iters), loss = 1.31953
I0428 19:29:26.735110 22017 solver.cpp:238]     Train net output #0: loss = 1.31953 (* 1 = 1.31953 loss)
I0428 19:29:26.735122 22017 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:26.803797 22017 solver.cpp:219] Iteration 800 (1456.01 iter/s, 0.0686807s/100 iters), loss = 1.39266
I0428 19:29:26.803828 22017 solver.cpp:238]     Train net output #0: loss = 1.39266 (* 1 = 1.39266 loss)
I0428 19:29:26.803838 22017 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:26.863668 22017 solver.cpp:219] Iteration 900 (1671.34 iter/s, 0.0598322s/100 iters), loss = 1.23754
I0428 19:29:26.863695 22017 solver.cpp:238]     Train net output #0: loss = 1.23754 (* 1 = 1.23754 loss)
I0428 19:29:26.863704 22017 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:26.883282 22023 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:26.921427 22017 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:26.922082 22017 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:26.922485 22017 solver.cpp:311] Iteration 1000, loss = 1.26077
I0428 19:29:26.922504 22017 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:26.997305 22024 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:26.997777 22017 solver.cpp:398]     Test net output #0: accuracy = 0.4692
I0428 19:29:26.997808 22017 solver.cpp:398]     Test net output #1: loss = 1.31523 (* 1 = 1.31523 loss)
I0428 19:29:26.997814 22017 solver.cpp:316] Optimization Done.
I0428 19:29:26.997818 22017 caffe.cpp:259] Optimization Done.
