I0428 19:37:09.883886 23780 caffe.cpp:218] Using GPUs 0
I0428 19:37:09.923506 23780 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:10.382802 23780 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test254.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:10.382943 23780 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test254.prototxt
I0428 19:37:10.383232 23780 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:10.383265 23780 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:10.383343 23780 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:10.383430 23780 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:10.383533 23780 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:10.383558 23780 net.cpp:86] Creating Layer mnist
I0428 19:37:10.383581 23780 net.cpp:382] mnist -> data
I0428 19:37:10.383607 23780 net.cpp:382] mnist -> label
I0428 19:37:10.384690 23780 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:10.386975 23780 net.cpp:124] Setting up mnist
I0428 19:37:10.387007 23780 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:10.387014 23780 net.cpp:131] Top shape: 64 (64)
I0428 19:37:10.387019 23780 net.cpp:139] Memory required for data: 200960
I0428 19:37:10.387027 23780 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:10.387063 23780 net.cpp:86] Creating Layer conv0
I0428 19:37:10.387070 23780 net.cpp:408] conv0 <- data
I0428 19:37:10.387085 23780 net.cpp:382] conv0 -> conv0
I0428 19:37:10.620352 23780 net.cpp:124] Setting up conv0
I0428 19:37:10.620380 23780 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:10.620386 23780 net.cpp:139] Memory required for data: 14946560
I0428 19:37:10.620421 23780 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:10.620452 23780 net.cpp:86] Creating Layer pool0
I0428 19:37:10.620479 23780 net.cpp:408] pool0 <- conv0
I0428 19:37:10.620489 23780 net.cpp:382] pool0 -> pool0
I0428 19:37:10.620544 23780 net.cpp:124] Setting up pool0
I0428 19:37:10.620553 23780 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:10.620558 23780 net.cpp:139] Memory required for data: 18632960
I0428 19:37:10.620563 23780 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:10.620573 23780 net.cpp:86] Creating Layer ip1
I0428 19:37:10.620579 23780 net.cpp:408] ip1 <- pool0
I0428 19:37:10.620586 23780 net.cpp:382] ip1 -> ip1
I0428 19:37:10.622413 23780 net.cpp:124] Setting up ip1
I0428 19:37:10.622428 23780 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:10.622434 23780 net.cpp:139] Memory required for data: 18635520
I0428 19:37:10.622448 23780 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:10.622458 23780 net.cpp:86] Creating Layer relu1
I0428 19:37:10.622470 23780 net.cpp:408] relu1 <- ip1
I0428 19:37:10.622478 23780 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:10.622663 23780 net.cpp:124] Setting up relu1
I0428 19:37:10.622673 23780 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:10.622678 23780 net.cpp:139] Memory required for data: 18638080
I0428 19:37:10.622684 23780 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:10.622694 23780 net.cpp:86] Creating Layer ip2
I0428 19:37:10.622699 23780 net.cpp:408] ip2 <- ip1
I0428 19:37:10.622707 23780 net.cpp:382] ip2 -> ip2
I0428 19:37:10.622807 23780 net.cpp:124] Setting up ip2
I0428 19:37:10.622817 23780 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:10.622822 23780 net.cpp:139] Memory required for data: 18650880
I0428 19:37:10.622833 23780 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:10.622844 23780 net.cpp:86] Creating Layer relu2
I0428 19:37:10.622853 23780 net.cpp:408] relu2 <- ip2
I0428 19:37:10.622860 23780 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:10.623618 23780 net.cpp:124] Setting up relu2
I0428 19:37:10.623632 23780 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:10.623637 23780 net.cpp:139] Memory required for data: 18663680
I0428 19:37:10.623643 23780 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:10.623653 23780 net.cpp:86] Creating Layer ip3
I0428 19:37:10.623659 23780 net.cpp:408] ip3 <- ip2
I0428 19:37:10.623668 23780 net.cpp:382] ip3 -> ip3
I0428 19:37:10.623805 23780 net.cpp:124] Setting up ip3
I0428 19:37:10.623814 23780 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:10.623819 23780 net.cpp:139] Memory required for data: 18666240
I0428 19:37:10.623829 23780 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:10.623838 23780 net.cpp:86] Creating Layer relu3
I0428 19:37:10.623845 23780 net.cpp:408] relu3 <- ip3
I0428 19:37:10.623852 23780 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:10.624006 23780 net.cpp:124] Setting up relu3
I0428 19:37:10.624016 23780 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:10.624020 23780 net.cpp:139] Memory required for data: 18668800
I0428 19:37:10.624039 23780 layer_factory.hpp:77] Creating layer loss
I0428 19:37:10.624048 23780 net.cpp:86] Creating Layer loss
I0428 19:37:10.624053 23780 net.cpp:408] loss <- ip3
I0428 19:37:10.624060 23780 net.cpp:408] loss <- label
I0428 19:37:10.624068 23780 net.cpp:382] loss -> loss
I0428 19:37:10.624090 23780 layer_factory.hpp:77] Creating layer loss
I0428 19:37:10.624327 23780 net.cpp:124] Setting up loss
I0428 19:37:10.624338 23780 net.cpp:131] Top shape: (1)
I0428 19:37:10.624343 23780 net.cpp:134]     with loss weight 1
I0428 19:37:10.624363 23780 net.cpp:139] Memory required for data: 18668804
I0428 19:37:10.624370 23780 net.cpp:200] loss needs backward computation.
I0428 19:37:10.624377 23780 net.cpp:200] relu3 needs backward computation.
I0428 19:37:10.624382 23780 net.cpp:200] ip3 needs backward computation.
I0428 19:37:10.624387 23780 net.cpp:200] relu2 needs backward computation.
I0428 19:37:10.624390 23780 net.cpp:200] ip2 needs backward computation.
I0428 19:37:10.624395 23780 net.cpp:200] relu1 needs backward computation.
I0428 19:37:10.624400 23780 net.cpp:200] ip1 needs backward computation.
I0428 19:37:10.624416 23780 net.cpp:200] pool0 needs backward computation.
I0428 19:37:10.624423 23780 net.cpp:200] conv0 needs backward computation.
I0428 19:37:10.624428 23780 net.cpp:202] mnist does not need backward computation.
I0428 19:37:10.624433 23780 net.cpp:244] This network produces output loss
I0428 19:37:10.624446 23780 net.cpp:257] Network initialization done.
I0428 19:37:10.624760 23780 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test254.prototxt
I0428 19:37:10.624792 23780 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:10.624949 23780 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:10.625072 23780 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:10.625133 23780 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:10.625164 23780 net.cpp:86] Creating Layer mnist
I0428 19:37:10.625174 23780 net.cpp:382] mnist -> data
I0428 19:37:10.625185 23780 net.cpp:382] mnist -> label
I0428 19:37:10.625320 23780 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:10.626510 23780 net.cpp:124] Setting up mnist
I0428 19:37:10.626524 23780 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:10.626534 23780 net.cpp:131] Top shape: 100 (100)
I0428 19:37:10.626539 23780 net.cpp:139] Memory required for data: 314000
I0428 19:37:10.626545 23780 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:10.626559 23780 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:10.626565 23780 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:10.626587 23780 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:10.626597 23780 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:10.626668 23780 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:10.626677 23780 net.cpp:131] Top shape: 100 (100)
I0428 19:37:10.626684 23780 net.cpp:131] Top shape: 100 (100)
I0428 19:37:10.626688 23780 net.cpp:139] Memory required for data: 314800
I0428 19:37:10.626721 23780 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:10.626736 23780 net.cpp:86] Creating Layer conv0
I0428 19:37:10.626742 23780 net.cpp:408] conv0 <- data
I0428 19:37:10.626754 23780 net.cpp:382] conv0 -> conv0
I0428 19:37:10.628393 23780 net.cpp:124] Setting up conv0
I0428 19:37:10.628407 23780 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:10.628413 23780 net.cpp:139] Memory required for data: 23354800
I0428 19:37:10.628442 23780 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:10.628468 23780 net.cpp:86] Creating Layer pool0
I0428 19:37:10.628474 23780 net.cpp:408] pool0 <- conv0
I0428 19:37:10.628481 23780 net.cpp:382] pool0 -> pool0
I0428 19:37:10.628522 23780 net.cpp:124] Setting up pool0
I0428 19:37:10.628530 23780 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:10.628535 23780 net.cpp:139] Memory required for data: 29114800
I0428 19:37:10.628540 23780 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:10.628549 23780 net.cpp:86] Creating Layer ip1
I0428 19:37:10.628554 23780 net.cpp:408] ip1 <- pool0
I0428 19:37:10.628563 23780 net.cpp:382] ip1 -> ip1
I0428 19:37:10.630450 23780 net.cpp:124] Setting up ip1
I0428 19:37:10.630465 23780 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:10.630470 23780 net.cpp:139] Memory required for data: 29118800
I0428 19:37:10.630486 23780 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:10.630494 23780 net.cpp:86] Creating Layer relu1
I0428 19:37:10.630501 23780 net.cpp:408] relu1 <- ip1
I0428 19:37:10.630520 23780 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:10.630787 23780 net.cpp:124] Setting up relu1
I0428 19:37:10.630798 23780 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:10.630803 23780 net.cpp:139] Memory required for data: 29122800
I0428 19:37:10.630808 23780 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:10.630820 23780 net.cpp:86] Creating Layer ip2
I0428 19:37:10.630825 23780 net.cpp:408] ip2 <- ip1
I0428 19:37:10.630832 23780 net.cpp:382] ip2 -> ip2
I0428 19:37:10.630949 23780 net.cpp:124] Setting up ip2
I0428 19:37:10.630957 23780 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:10.630962 23780 net.cpp:139] Memory required for data: 29142800
I0428 19:37:10.630990 23780 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:10.631003 23780 net.cpp:86] Creating Layer relu2
I0428 19:37:10.631009 23780 net.cpp:408] relu2 <- ip2
I0428 19:37:10.631017 23780 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:10.631912 23780 net.cpp:124] Setting up relu2
I0428 19:37:10.631942 23780 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:10.631947 23780 net.cpp:139] Memory required for data: 29162800
I0428 19:37:10.631953 23780 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:10.631964 23780 net.cpp:86] Creating Layer ip3
I0428 19:37:10.631970 23780 net.cpp:408] ip3 <- ip2
I0428 19:37:10.631980 23780 net.cpp:382] ip3 -> ip3
I0428 19:37:10.632097 23780 net.cpp:124] Setting up ip3
I0428 19:37:10.632105 23780 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:10.632128 23780 net.cpp:139] Memory required for data: 29166800
I0428 19:37:10.632146 23780 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:10.632156 23780 net.cpp:86] Creating Layer relu3
I0428 19:37:10.632163 23780 net.cpp:408] relu3 <- ip3
I0428 19:37:10.632169 23780 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:10.632380 23780 net.cpp:124] Setting up relu3
I0428 19:37:10.632406 23780 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:10.632411 23780 net.cpp:139] Memory required for data: 29170800
I0428 19:37:10.632417 23780 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:10.632426 23780 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:10.632431 23780 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:10.632441 23780 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:10.632450 23780 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:10.632494 23780 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:10.632521 23780 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:10.632555 23780 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:10.632560 23780 net.cpp:139] Memory required for data: 29178800
I0428 19:37:10.632565 23780 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:10.632575 23780 net.cpp:86] Creating Layer accuracy
I0428 19:37:10.632580 23780 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:10.632594 23780 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:10.632602 23780 net.cpp:382] accuracy -> accuracy
I0428 19:37:10.632629 23780 net.cpp:124] Setting up accuracy
I0428 19:37:10.632638 23780 net.cpp:131] Top shape: (1)
I0428 19:37:10.632644 23780 net.cpp:139] Memory required for data: 29178804
I0428 19:37:10.632649 23780 layer_factory.hpp:77] Creating layer loss
I0428 19:37:10.632659 23780 net.cpp:86] Creating Layer loss
I0428 19:37:10.632665 23780 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:10.632673 23780 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:10.632679 23780 net.cpp:382] loss -> loss
I0428 19:37:10.632689 23780 layer_factory.hpp:77] Creating layer loss
I0428 19:37:10.632969 23780 net.cpp:124] Setting up loss
I0428 19:37:10.632988 23780 net.cpp:131] Top shape: (1)
I0428 19:37:10.633000 23780 net.cpp:134]     with loss weight 1
I0428 19:37:10.633013 23780 net.cpp:139] Memory required for data: 29178808
I0428 19:37:10.633018 23780 net.cpp:200] loss needs backward computation.
I0428 19:37:10.633024 23780 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:10.633031 23780 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:10.633036 23780 net.cpp:200] relu3 needs backward computation.
I0428 19:37:10.633041 23780 net.cpp:200] ip3 needs backward computation.
I0428 19:37:10.633047 23780 net.cpp:200] relu2 needs backward computation.
I0428 19:37:10.633052 23780 net.cpp:200] ip2 needs backward computation.
I0428 19:37:10.633057 23780 net.cpp:200] relu1 needs backward computation.
I0428 19:37:10.633062 23780 net.cpp:200] ip1 needs backward computation.
I0428 19:37:10.633067 23780 net.cpp:200] pool0 needs backward computation.
I0428 19:37:10.633072 23780 net.cpp:200] conv0 needs backward computation.
I0428 19:37:10.633080 23780 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:10.633085 23780 net.cpp:202] mnist does not need backward computation.
I0428 19:37:10.633090 23780 net.cpp:244] This network produces output accuracy
I0428 19:37:10.633096 23780 net.cpp:244] This network produces output loss
I0428 19:37:10.633127 23780 net.cpp:257] Network initialization done.
I0428 19:37:10.633185 23780 solver.cpp:56] Solver scaffolding done.
I0428 19:37:10.633484 23780 caffe.cpp:248] Starting Optimization
I0428 19:37:10.633492 23780 solver.cpp:273] Solving LeNet
I0428 19:37:10.633503 23780 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:10.634912 23780 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:10.794657 23787 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:10.800582 23780 solver.cpp:398]     Test net output #0: accuracy = 0.0962
I0428 19:37:10.800606 23780 solver.cpp:398]     Test net output #1: loss = 2.30545 (* 1 = 2.30545 loss)
I0428 19:37:10.805554 23780 solver.cpp:219] Iteration 0 (0 iter/s, 0.172016s/100 iters), loss = 2.3022
I0428 19:37:10.805580 23780 solver.cpp:238]     Train net output #0: loss = 2.3022 (* 1 = 2.3022 loss)
I0428 19:37:10.805626 23780 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:11.035169 23780 solver.cpp:219] Iteration 100 (435.619 iter/s, 0.229558s/100 iters), loss = 0.703744
I0428 19:37:11.035223 23780 solver.cpp:238]     Train net output #0: loss = 0.703744 (* 1 = 0.703744 loss)
I0428 19:37:11.035238 23780 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:11.277123 23780 solver.cpp:219] Iteration 200 (413.421 iter/s, 0.241884s/100 iters), loss = 0.326164
I0428 19:37:11.277168 23780 solver.cpp:238]     Train net output #0: loss = 0.326164 (* 1 = 0.326164 loss)
I0428 19:37:11.277180 23780 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:11.514637 23780 solver.cpp:219] Iteration 300 (421.134 iter/s, 0.237454s/100 iters), loss = 0.272016
I0428 19:37:11.514691 23780 solver.cpp:238]     Train net output #0: loss = 0.272015 (* 1 = 0.272015 loss)
I0428 19:37:11.514701 23780 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:11.744778 23780 solver.cpp:219] Iteration 400 (434.65 iter/s, 0.23007s/100 iters), loss = 0.257636
I0428 19:37:11.744820 23780 solver.cpp:238]     Train net output #0: loss = 0.257636 (* 1 = 0.257636 loss)
I0428 19:37:11.744829 23780 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:11.971776 23780 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:12.132499 23787 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:12.138641 23780 solver.cpp:398]     Test net output #0: accuracy = 0.9309
I0428 19:37:12.138667 23780 solver.cpp:398]     Test net output #1: loss = 0.224375 (* 1 = 0.224375 loss)
I0428 19:37:12.140877 23780 solver.cpp:219] Iteration 500 (252.5 iter/s, 0.396039s/100 iters), loss = 0.30866
I0428 19:37:12.140908 23780 solver.cpp:238]     Train net output #0: loss = 0.30866 (* 1 = 0.30866 loss)
I0428 19:37:12.140914 23780 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:12.372102 23780 solver.cpp:219] Iteration 600 (432.57 iter/s, 0.231176s/100 iters), loss = 0.124528
I0428 19:37:12.372140 23780 solver.cpp:238]     Train net output #0: loss = 0.124528 (* 1 = 0.124528 loss)
I0428 19:37:12.372148 23780 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:12.602396 23780 solver.cpp:219] Iteration 700 (434.333 iter/s, 0.230238s/100 iters), loss = 0.16765
I0428 19:37:12.602428 23780 solver.cpp:238]     Train net output #0: loss = 0.16765 (* 1 = 0.16765 loss)
I0428 19:37:12.602437 23780 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:12.829692 23780 solver.cpp:219] Iteration 800 (440.046 iter/s, 0.227249s/100 iters), loss = 0.321506
I0428 19:37:12.829736 23780 solver.cpp:238]     Train net output #0: loss = 0.321506 (* 1 = 0.321506 loss)
I0428 19:37:12.829743 23780 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:13.054090 23780 solver.cpp:219] Iteration 900 (445.758 iter/s, 0.224337s/100 iters), loss = 0.225245
I0428 19:37:13.054131 23780 solver.cpp:238]     Train net output #0: loss = 0.225245 (* 1 = 0.225245 loss)
I0428 19:37:13.054137 23780 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:13.129250 23786 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:13.276808 23780 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:13.280849 23780 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:13.283375 23780 solver.cpp:311] Iteration 1000, loss = 0.188387
I0428 19:37:13.283392 23780 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:13.442237 23787 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:13.448092 23780 solver.cpp:398]     Test net output #0: accuracy = 0.9591
I0428 19:37:13.448129 23780 solver.cpp:398]     Test net output #1: loss = 0.134977 (* 1 = 0.134977 loss)
I0428 19:37:13.448134 23780 solver.cpp:316] Optimization Done.
I0428 19:37:13.448137 23780 caffe.cpp:259] Optimization Done.
