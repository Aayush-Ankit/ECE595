I0428 19:31:14.350802 22527 caffe.cpp:218] Using GPUs 0
I0428 19:31:14.389732 22527 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:14.908049 22527 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test116.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:14.908221 22527 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test116.prototxt
I0428 19:31:14.908603 22527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:14.908627 22527 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:14.908723 22527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:14.908838 22527 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:14.908969 22527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:14.909003 22527 net.cpp:86] Creating Layer mnist
I0428 19:31:14.909018 22527 net.cpp:382] mnist -> data
I0428 19:31:14.909049 22527 net.cpp:382] mnist -> label
I0428 19:31:14.910272 22527 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:14.912739 22527 net.cpp:124] Setting up mnist
I0428 19:31:14.912758 22527 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:14.912768 22527 net.cpp:131] Top shape: 64 (64)
I0428 19:31:14.912775 22527 net.cpp:139] Memory required for data: 200960
I0428 19:31:14.912786 22527 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:14.912817 22527 net.cpp:86] Creating Layer conv0
I0428 19:31:14.912829 22527 net.cpp:408] conv0 <- data
I0428 19:31:14.912850 22527 net.cpp:382] conv0 -> conv0
I0428 19:31:15.196431 22527 net.cpp:124] Setting up conv0
I0428 19:31:15.196460 22527 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:15.196465 22527 net.cpp:139] Memory required for data: 938240
I0428 19:31:15.196486 22527 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:15.196504 22527 net.cpp:86] Creating Layer pool0
I0428 19:31:15.196529 22527 net.cpp:408] pool0 <- conv0
I0428 19:31:15.196539 22527 net.cpp:382] pool0 -> pool0
I0428 19:31:15.196593 22527 net.cpp:124] Setting up pool0
I0428 19:31:15.196604 22527 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:15.196609 22527 net.cpp:139] Memory required for data: 1122560
I0428 19:31:15.196614 22527 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:15.196625 22527 net.cpp:86] Creating Layer ip1
I0428 19:31:15.196635 22527 net.cpp:408] ip1 <- pool0
I0428 19:31:15.196643 22527 net.cpp:382] ip1 -> ip1
I0428 19:31:15.196969 22527 net.cpp:124] Setting up ip1
I0428 19:31:15.196979 22527 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:15.196985 22527 net.cpp:139] Memory required for data: 1135360
I0428 19:31:15.196996 22527 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:15.197011 22527 net.cpp:86] Creating Layer relu1
I0428 19:31:15.197017 22527 net.cpp:408] relu1 <- ip1
I0428 19:31:15.197026 22527 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:15.197211 22527 net.cpp:124] Setting up relu1
I0428 19:31:15.197221 22527 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:15.197224 22527 net.cpp:139] Memory required for data: 1148160
I0428 19:31:15.197229 22527 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:15.197242 22527 net.cpp:86] Creating Layer ip2
I0428 19:31:15.197247 22527 net.cpp:408] ip2 <- ip1
I0428 19:31:15.197257 22527 net.cpp:382] ip2 -> ip2
I0428 19:31:15.198171 22527 net.cpp:124] Setting up ip2
I0428 19:31:15.198185 22527 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:15.198189 22527 net.cpp:139] Memory required for data: 1160960
I0428 19:31:15.198204 22527 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:15.198213 22527 net.cpp:86] Creating Layer relu2
I0428 19:31:15.198220 22527 net.cpp:408] relu2 <- ip2
I0428 19:31:15.198230 22527 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:15.198940 22527 net.cpp:124] Setting up relu2
I0428 19:31:15.198953 22527 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:15.198958 22527 net.cpp:139] Memory required for data: 1173760
I0428 19:31:15.198963 22527 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:15.198973 22527 net.cpp:86] Creating Layer ip3
I0428 19:31:15.198979 22527 net.cpp:408] ip3 <- ip2
I0428 19:31:15.198989 22527 net.cpp:382] ip3 -> ip3
I0428 19:31:15.199097 22527 net.cpp:124] Setting up ip3
I0428 19:31:15.199106 22527 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:15.199110 22527 net.cpp:139] Memory required for data: 1176320
I0428 19:31:15.199120 22527 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:15.199129 22527 net.cpp:86] Creating Layer relu3
I0428 19:31:15.199136 22527 net.cpp:408] relu3 <- ip3
I0428 19:31:15.199143 22527 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:15.199303 22527 net.cpp:124] Setting up relu3
I0428 19:31:15.199312 22527 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:15.199317 22527 net.cpp:139] Memory required for data: 1178880
I0428 19:31:15.199321 22527 layer_factory.hpp:77] Creating layer loss
I0428 19:31:15.199331 22527 net.cpp:86] Creating Layer loss
I0428 19:31:15.199337 22527 net.cpp:408] loss <- ip3
I0428 19:31:15.199343 22527 net.cpp:408] loss <- label
I0428 19:31:15.199352 22527 net.cpp:382] loss -> loss
I0428 19:31:15.199373 22527 layer_factory.hpp:77] Creating layer loss
I0428 19:31:15.199614 22527 net.cpp:124] Setting up loss
I0428 19:31:15.199623 22527 net.cpp:131] Top shape: (1)
I0428 19:31:15.199628 22527 net.cpp:134]     with loss weight 1
I0428 19:31:15.199646 22527 net.cpp:139] Memory required for data: 1178884
I0428 19:31:15.199652 22527 net.cpp:200] loss needs backward computation.
I0428 19:31:15.199658 22527 net.cpp:200] relu3 needs backward computation.
I0428 19:31:15.199662 22527 net.cpp:200] ip3 needs backward computation.
I0428 19:31:15.199667 22527 net.cpp:200] relu2 needs backward computation.
I0428 19:31:15.199671 22527 net.cpp:200] ip2 needs backward computation.
I0428 19:31:15.199676 22527 net.cpp:200] relu1 needs backward computation.
I0428 19:31:15.199681 22527 net.cpp:200] ip1 needs backward computation.
I0428 19:31:15.199695 22527 net.cpp:200] pool0 needs backward computation.
I0428 19:31:15.199702 22527 net.cpp:200] conv0 needs backward computation.
I0428 19:31:15.199707 22527 net.cpp:202] mnist does not need backward computation.
I0428 19:31:15.199710 22527 net.cpp:244] This network produces output loss
I0428 19:31:15.199724 22527 net.cpp:257] Network initialization done.
I0428 19:31:15.200001 22527 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test116.prototxt
I0428 19:31:15.200031 22527 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:15.200114 22527 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:15.200211 22527 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:15.200266 22527 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:15.200283 22527 net.cpp:86] Creating Layer mnist
I0428 19:31:15.200291 22527 net.cpp:382] mnist -> data
I0428 19:31:15.200302 22527 net.cpp:382] mnist -> label
I0428 19:31:15.200420 22527 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:15.202342 22527 net.cpp:124] Setting up mnist
I0428 19:31:15.202358 22527 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:15.202364 22527 net.cpp:131] Top shape: 100 (100)
I0428 19:31:15.202369 22527 net.cpp:139] Memory required for data: 314000
I0428 19:31:15.202374 22527 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:15.202416 22527 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:15.202422 22527 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:15.202431 22527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:15.202442 22527 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:15.202538 22527 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:15.202546 22527 net.cpp:131] Top shape: 100 (100)
I0428 19:31:15.202553 22527 net.cpp:131] Top shape: 100 (100)
I0428 19:31:15.202558 22527 net.cpp:139] Memory required for data: 314800
I0428 19:31:15.202572 22527 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:15.202587 22527 net.cpp:86] Creating Layer conv0
I0428 19:31:15.202592 22527 net.cpp:408] conv0 <- data
I0428 19:31:15.202602 22527 net.cpp:382] conv0 -> conv0
I0428 19:31:15.204457 22527 net.cpp:124] Setting up conv0
I0428 19:31:15.204488 22527 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:15.204494 22527 net.cpp:139] Memory required for data: 1466800
I0428 19:31:15.204509 22527 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:15.204519 22527 net.cpp:86] Creating Layer pool0
I0428 19:31:15.204526 22527 net.cpp:408] pool0 <- conv0
I0428 19:31:15.204536 22527 net.cpp:382] pool0 -> pool0
I0428 19:31:15.204581 22527 net.cpp:124] Setting up pool0
I0428 19:31:15.204591 22527 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:15.204596 22527 net.cpp:139] Memory required for data: 1754800
I0428 19:31:15.204601 22527 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:15.204613 22527 net.cpp:86] Creating Layer ip1
I0428 19:31:15.204620 22527 net.cpp:408] ip1 <- pool0
I0428 19:31:15.204630 22527 net.cpp:382] ip1 -> ip1
I0428 19:31:15.205080 22527 net.cpp:124] Setting up ip1
I0428 19:31:15.205091 22527 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:15.205096 22527 net.cpp:139] Memory required for data: 1774800
I0428 19:31:15.205109 22527 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:15.205119 22527 net.cpp:86] Creating Layer relu1
I0428 19:31:15.205126 22527 net.cpp:408] relu1 <- ip1
I0428 19:31:15.205132 22527 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:15.205375 22527 net.cpp:124] Setting up relu1
I0428 19:31:15.205384 22527 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:15.205391 22527 net.cpp:139] Memory required for data: 1794800
I0428 19:31:15.205396 22527 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:15.205405 22527 net.cpp:86] Creating Layer ip2
I0428 19:31:15.205410 22527 net.cpp:408] ip2 <- ip1
I0428 19:31:15.205421 22527 net.cpp:382] ip2 -> ip2
I0428 19:31:15.205549 22527 net.cpp:124] Setting up ip2
I0428 19:31:15.205557 22527 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:15.205561 22527 net.cpp:139] Memory required for data: 1814800
I0428 19:31:15.205590 22527 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:15.205598 22527 net.cpp:86] Creating Layer relu2
I0428 19:31:15.205608 22527 net.cpp:408] relu2 <- ip2
I0428 19:31:15.205616 22527 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:15.206423 22527 net.cpp:124] Setting up relu2
I0428 19:31:15.206436 22527 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:15.206441 22527 net.cpp:139] Memory required for data: 1834800
I0428 19:31:15.206446 22527 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:15.206459 22527 net.cpp:86] Creating Layer ip3
I0428 19:31:15.206465 22527 net.cpp:408] ip3 <- ip2
I0428 19:31:15.206473 22527 net.cpp:382] ip3 -> ip3
I0428 19:31:15.206588 22527 net.cpp:124] Setting up ip3
I0428 19:31:15.206598 22527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:15.206604 22527 net.cpp:139] Memory required for data: 1838800
I0428 19:31:15.206614 22527 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:15.206624 22527 net.cpp:86] Creating Layer relu3
I0428 19:31:15.206629 22527 net.cpp:408] relu3 <- ip3
I0428 19:31:15.206636 22527 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:15.206814 22527 net.cpp:124] Setting up relu3
I0428 19:31:15.206825 22527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:15.206830 22527 net.cpp:139] Memory required for data: 1842800
I0428 19:31:15.206835 22527 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:15.206845 22527 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:15.206849 22527 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:15.206856 22527 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:15.206873 22527 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:15.206918 22527 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:15.206925 22527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:15.206931 22527 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:15.206948 22527 net.cpp:139] Memory required for data: 1850800
I0428 19:31:15.206954 22527 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:15.206962 22527 net.cpp:86] Creating Layer accuracy
I0428 19:31:15.206974 22527 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:15.206995 22527 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:15.207006 22527 net.cpp:382] accuracy -> accuracy
I0428 19:31:15.207018 22527 net.cpp:124] Setting up accuracy
I0428 19:31:15.207026 22527 net.cpp:131] Top shape: (1)
I0428 19:31:15.207031 22527 net.cpp:139] Memory required for data: 1850804
I0428 19:31:15.207036 22527 layer_factory.hpp:77] Creating layer loss
I0428 19:31:15.207043 22527 net.cpp:86] Creating Layer loss
I0428 19:31:15.207048 22527 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:15.207054 22527 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:15.207062 22527 net.cpp:382] loss -> loss
I0428 19:31:15.207072 22527 layer_factory.hpp:77] Creating layer loss
I0428 19:31:15.207315 22527 net.cpp:124] Setting up loss
I0428 19:31:15.207325 22527 net.cpp:131] Top shape: (1)
I0428 19:31:15.207330 22527 net.cpp:134]     with loss weight 1
I0428 19:31:15.207339 22527 net.cpp:139] Memory required for data: 1850808
I0428 19:31:15.207343 22527 net.cpp:200] loss needs backward computation.
I0428 19:31:15.207350 22527 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:15.207355 22527 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:15.207360 22527 net.cpp:200] relu3 needs backward computation.
I0428 19:31:15.207365 22527 net.cpp:200] ip3 needs backward computation.
I0428 19:31:15.207368 22527 net.cpp:200] relu2 needs backward computation.
I0428 19:31:15.207381 22527 net.cpp:200] ip2 needs backward computation.
I0428 19:31:15.207384 22527 net.cpp:200] relu1 needs backward computation.
I0428 19:31:15.207389 22527 net.cpp:200] ip1 needs backward computation.
I0428 19:31:15.207393 22527 net.cpp:200] pool0 needs backward computation.
I0428 19:31:15.207398 22527 net.cpp:200] conv0 needs backward computation.
I0428 19:31:15.207403 22527 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:15.207409 22527 net.cpp:202] mnist does not need backward computation.
I0428 19:31:15.207413 22527 net.cpp:244] This network produces output accuracy
I0428 19:31:15.207418 22527 net.cpp:244] This network produces output loss
I0428 19:31:15.207434 22527 net.cpp:257] Network initialization done.
I0428 19:31:15.207478 22527 solver.cpp:56] Solver scaffolding done.
I0428 19:31:15.207738 22527 caffe.cpp:248] Starting Optimization
I0428 19:31:15.207746 22527 solver.cpp:273] Solving LeNet
I0428 19:31:15.207751 22527 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:15.209065 22527 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:15.212198 22527 blocking_queue.cpp:49] Waiting for data
I0428 19:31:15.284162 22534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:15.284762 22527 solver.cpp:398]     Test net output #0: accuracy = 0.0827
I0428 19:31:15.284806 22527 solver.cpp:398]     Test net output #1: loss = 2.3108 (* 1 = 2.3108 loss)
I0428 19:31:15.287544 22527 solver.cpp:219] Iteration 0 (-1.53801e-31 iter/s, 0.0797582s/100 iters), loss = 2.29588
I0428 19:31:15.287588 22527 solver.cpp:238]     Train net output #0: loss = 2.29588 (* 1 = 2.29588 loss)
I0428 19:31:15.287607 22527 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:15.363467 22527 solver.cpp:219] Iteration 100 (1318.09 iter/s, 0.0758671s/100 iters), loss = 0.980322
I0428 19:31:15.363503 22527 solver.cpp:238]     Train net output #0: loss = 0.980322 (* 1 = 0.980322 loss)
I0428 19:31:15.363512 22527 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:15.430184 22527 solver.cpp:219] Iteration 200 (1499.93 iter/s, 0.0666696s/100 iters), loss = 1.23908
I0428 19:31:15.430215 22527 solver.cpp:238]     Train net output #0: loss = 1.23908 (* 1 = 1.23908 loss)
I0428 19:31:15.430223 22527 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:15.499347 22527 solver.cpp:219] Iteration 300 (1446.82 iter/s, 0.0691169s/100 iters), loss = 1.0148
I0428 19:31:15.499398 22527 solver.cpp:238]     Train net output #0: loss = 1.0148 (* 1 = 1.0148 loss)
I0428 19:31:15.499411 22527 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:15.578469 22527 solver.cpp:219] Iteration 400 (1264.9 iter/s, 0.0790579s/100 iters), loss = 1.14536
I0428 19:31:15.578526 22527 solver.cpp:238]     Train net output #0: loss = 1.14536 (* 1 = 1.14536 loss)
I0428 19:31:15.578539 22527 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:15.656462 22527 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:15.709233 22534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:15.709671 22527 solver.cpp:398]     Test net output #0: accuracy = 0.7413
I0428 19:31:15.709695 22527 solver.cpp:398]     Test net output #1: loss = 0.865449 (* 1 = 0.865449 loss)
I0428 19:31:15.710376 22527 solver.cpp:219] Iteration 500 (758.483 iter/s, 0.131842s/100 iters), loss = 1.09719
I0428 19:31:15.710402 22527 solver.cpp:238]     Train net output #0: loss = 1.09719 (* 1 = 1.09719 loss)
I0428 19:31:15.710410 22527 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:15.776901 22527 solver.cpp:219] Iteration 600 (1504.09 iter/s, 0.0664852s/100 iters), loss = 0.703579
I0428 19:31:15.776958 22527 solver.cpp:238]     Train net output #0: loss = 0.703579 (* 1 = 0.703579 loss)
I0428 19:31:15.776968 22527 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:15.840139 22527 solver.cpp:219] Iteration 700 (1582.9 iter/s, 0.0631752s/100 iters), loss = 0.864115
I0428 19:31:15.840169 22527 solver.cpp:238]     Train net output #0: loss = 0.864115 (* 1 = 0.864115 loss)
I0428 19:31:15.840176 22527 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:15.910827 22527 solver.cpp:219] Iteration 800 (1415.53 iter/s, 0.0706447s/100 iters), loss = 0.826176
I0428 19:31:15.910874 22527 solver.cpp:238]     Train net output #0: loss = 0.826176 (* 1 = 0.826176 loss)
I0428 19:31:15.910887 22527 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:15.991770 22527 solver.cpp:219] Iteration 900 (1236.3 iter/s, 0.0808868s/100 iters), loss = 0.512008
I0428 19:31:15.991809 22527 solver.cpp:238]     Train net output #0: loss = 0.512008 (* 1 = 0.512008 loss)
I0428 19:31:15.991819 22527 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:16.014802 22533 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:16.056972 22527 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:16.058233 22527 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:16.059177 22527 solver.cpp:311] Iteration 1000, loss = 0.702479
I0428 19:31:16.059212 22527 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:16.134407 22534 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:16.134898 22527 solver.cpp:398]     Test net output #0: accuracy = 0.7712
I0428 19:31:16.134927 22527 solver.cpp:398]     Test net output #1: loss = 0.78535 (* 1 = 0.78535 loss)
I0428 19:31:16.134943 22527 solver.cpp:316] Optimization Done.
I0428 19:31:16.134951 22527 caffe.cpp:259] Optimization Done.
