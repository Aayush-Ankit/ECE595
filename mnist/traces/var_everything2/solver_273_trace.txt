I0428 19:38:25.644341 24011 caffe.cpp:218] Using GPUs 0
I0428 19:38:25.685204 24011 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:38:26.200275 24011 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test273.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:38:26.200425 24011 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test273.prototxt
I0428 19:38:26.200774 24011 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:38:26.200790 24011 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:38:26.200882 24011 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:38:26.200956 24011 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:26.201058 24011 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:38:26.201083 24011 net.cpp:86] Creating Layer mnist
I0428 19:38:26.201094 24011 net.cpp:382] mnist -> data
I0428 19:38:26.201117 24011 net.cpp:382] mnist -> label
I0428 19:38:26.202217 24011 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:38:26.204668 24011 net.cpp:124] Setting up mnist
I0428 19:38:26.204684 24011 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:38:26.204691 24011 net.cpp:131] Top shape: 64 (64)
I0428 19:38:26.204694 24011 net.cpp:139] Memory required for data: 200960
I0428 19:38:26.204701 24011 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:26.204716 24011 net.cpp:86] Creating Layer conv0
I0428 19:38:26.204722 24011 net.cpp:408] conv0 <- data
I0428 19:38:26.204741 24011 net.cpp:382] conv0 -> conv0
I0428 19:38:26.478755 24011 net.cpp:124] Setting up conv0
I0428 19:38:26.478796 24011 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:38:26.478801 24011 net.cpp:139] Memory required for data: 495872
I0428 19:38:26.478829 24011 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:26.478842 24011 net.cpp:86] Creating Layer pool0
I0428 19:38:26.478844 24011 net.cpp:408] pool0 <- conv0
I0428 19:38:26.478864 24011 net.cpp:382] pool0 -> pool0
I0428 19:38:26.478919 24011 net.cpp:124] Setting up pool0
I0428 19:38:26.478936 24011 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:38:26.478953 24011 net.cpp:139] Memory required for data: 569600
I0428 19:38:26.478956 24011 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:26.478967 24011 net.cpp:86] Creating Layer conv1
I0428 19:38:26.478971 24011 net.cpp:408] conv1 <- pool0
I0428 19:38:26.478976 24011 net.cpp:382] conv1 -> conv1
I0428 19:38:26.480881 24011 net.cpp:124] Setting up conv1
I0428 19:38:26.480912 24011 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 19:38:26.480916 24011 net.cpp:139] Memory required for data: 602368
I0428 19:38:26.480927 24011 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:26.480936 24011 net.cpp:86] Creating Layer pool1
I0428 19:38:26.480938 24011 net.cpp:408] pool1 <- conv1
I0428 19:38:26.480944 24011 net.cpp:382] pool1 -> pool1
I0428 19:38:26.480983 24011 net.cpp:124] Setting up pool1
I0428 19:38:26.480988 24011 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 19:38:26.480990 24011 net.cpp:139] Memory required for data: 610560
I0428 19:38:26.481009 24011 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:26.481015 24011 net.cpp:86] Creating Layer ip1
I0428 19:38:26.481019 24011 net.cpp:408] ip1 <- pool1
I0428 19:38:26.481024 24011 net.cpp:382] ip1 -> ip1
I0428 19:38:26.481119 24011 net.cpp:124] Setting up ip1
I0428 19:38:26.481127 24011 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:26.481144 24011 net.cpp:139] Memory required for data: 613120
I0428 19:38:26.481153 24011 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:26.481158 24011 net.cpp:86] Creating Layer relu1
I0428 19:38:26.481161 24011 net.cpp:408] relu1 <- ip1
I0428 19:38:26.481165 24011 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:26.481323 24011 net.cpp:124] Setting up relu1
I0428 19:38:26.481333 24011 net.cpp:131] Top shape: 64 10 (640)
I0428 19:38:26.481335 24011 net.cpp:139] Memory required for data: 615680
I0428 19:38:26.481338 24011 layer_factory.hpp:77] Creating layer loss
I0428 19:38:26.481343 24011 net.cpp:86] Creating Layer loss
I0428 19:38:26.481346 24011 net.cpp:408] loss <- ip1
I0428 19:38:26.481350 24011 net.cpp:408] loss <- label
I0428 19:38:26.481355 24011 net.cpp:382] loss -> loss
I0428 19:38:26.481374 24011 layer_factory.hpp:77] Creating layer loss
I0428 19:38:26.482189 24011 net.cpp:124] Setting up loss
I0428 19:38:26.482201 24011 net.cpp:131] Top shape: (1)
I0428 19:38:26.482220 24011 net.cpp:134]     with loss weight 1
I0428 19:38:26.482235 24011 net.cpp:139] Memory required for data: 615684
I0428 19:38:26.482239 24011 net.cpp:200] loss needs backward computation.
I0428 19:38:26.482244 24011 net.cpp:200] relu1 needs backward computation.
I0428 19:38:26.482246 24011 net.cpp:200] ip1 needs backward computation.
I0428 19:38:26.482249 24011 net.cpp:200] pool1 needs backward computation.
I0428 19:38:26.482252 24011 net.cpp:200] conv1 needs backward computation.
I0428 19:38:26.482255 24011 net.cpp:200] pool0 needs backward computation.
I0428 19:38:26.482259 24011 net.cpp:200] conv0 needs backward computation.
I0428 19:38:26.482261 24011 net.cpp:202] mnist does not need backward computation.
I0428 19:38:26.482264 24011 net.cpp:244] This network produces output loss
I0428 19:38:26.482272 24011 net.cpp:257] Network initialization done.
I0428 19:38:26.482527 24011 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test273.prototxt
I0428 19:38:26.482552 24011 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:38:26.482625 24011 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:38:26.482694 24011 layer_factory.hpp:77] Creating layer mnist
I0428 19:38:26.482738 24011 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:38:26.482751 24011 net.cpp:86] Creating Layer mnist
I0428 19:38:26.482755 24011 net.cpp:382] mnist -> data
I0428 19:38:26.482764 24011 net.cpp:382] mnist -> label
I0428 19:38:26.482844 24011 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:38:26.485098 24011 net.cpp:124] Setting up mnist
I0428 19:38:26.485127 24011 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:38:26.485133 24011 net.cpp:131] Top shape: 100 (100)
I0428 19:38:26.485136 24011 net.cpp:139] Memory required for data: 314000
I0428 19:38:26.485141 24011 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:38:26.485150 24011 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:38:26.485154 24011 net.cpp:408] label_mnist_1_split <- label
I0428 19:38:26.485160 24011 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:38:26.485167 24011 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:38:26.485281 24011 net.cpp:124] Setting up label_mnist_1_split
I0428 19:38:26.485288 24011 net.cpp:131] Top shape: 100 (100)
I0428 19:38:26.485292 24011 net.cpp:131] Top shape: 100 (100)
I0428 19:38:26.485296 24011 net.cpp:139] Memory required for data: 314800
I0428 19:38:26.485298 24011 layer_factory.hpp:77] Creating layer conv0
I0428 19:38:26.485306 24011 net.cpp:86] Creating Layer conv0
I0428 19:38:26.485311 24011 net.cpp:408] conv0 <- data
I0428 19:38:26.485316 24011 net.cpp:382] conv0 -> conv0
I0428 19:38:26.486135 24011 net.cpp:124] Setting up conv0
I0428 19:38:26.486161 24011 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:38:26.486166 24011 net.cpp:139] Memory required for data: 775600
I0428 19:38:26.486189 24011 layer_factory.hpp:77] Creating layer pool0
I0428 19:38:26.486205 24011 net.cpp:86] Creating Layer pool0
I0428 19:38:26.486209 24011 net.cpp:408] pool0 <- conv0
I0428 19:38:26.486213 24011 net.cpp:382] pool0 -> pool0
I0428 19:38:26.486246 24011 net.cpp:124] Setting up pool0
I0428 19:38:26.486251 24011 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:38:26.486254 24011 net.cpp:139] Memory required for data: 890800
I0428 19:38:26.486258 24011 layer_factory.hpp:77] Creating layer conv1
I0428 19:38:26.486264 24011 net.cpp:86] Creating Layer conv1
I0428 19:38:26.486268 24011 net.cpp:408] conv1 <- pool0
I0428 19:38:26.486273 24011 net.cpp:382] conv1 -> conv1
I0428 19:38:26.487758 24011 net.cpp:124] Setting up conv1
I0428 19:38:26.487772 24011 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 19:38:26.487793 24011 net.cpp:139] Memory required for data: 942000
I0428 19:38:26.487803 24011 layer_factory.hpp:77] Creating layer pool1
I0428 19:38:26.487810 24011 net.cpp:86] Creating Layer pool1
I0428 19:38:26.487825 24011 net.cpp:408] pool1 <- conv1
I0428 19:38:26.487830 24011 net.cpp:382] pool1 -> pool1
I0428 19:38:26.487869 24011 net.cpp:124] Setting up pool1
I0428 19:38:26.487874 24011 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 19:38:26.487879 24011 net.cpp:139] Memory required for data: 954800
I0428 19:38:26.487881 24011 layer_factory.hpp:77] Creating layer ip1
I0428 19:38:26.487889 24011 net.cpp:86] Creating Layer ip1
I0428 19:38:26.487892 24011 net.cpp:408] ip1 <- pool1
I0428 19:38:26.487897 24011 net.cpp:382] ip1 -> ip1
I0428 19:38:26.488003 24011 net.cpp:124] Setting up ip1
I0428 19:38:26.488013 24011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:26.488015 24011 net.cpp:139] Memory required for data: 958800
I0428 19:38:26.488044 24011 layer_factory.hpp:77] Creating layer relu1
I0428 19:38:26.488050 24011 net.cpp:86] Creating Layer relu1
I0428 19:38:26.488054 24011 net.cpp:408] relu1 <- ip1
I0428 19:38:26.488059 24011 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:38:26.488850 24011 net.cpp:124] Setting up relu1
I0428 19:38:26.488862 24011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:26.488881 24011 net.cpp:139] Memory required for data: 962800
I0428 19:38:26.488884 24011 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:38:26.488891 24011 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:38:26.488895 24011 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:38:26.488914 24011 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:38:26.488921 24011 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:38:26.488961 24011 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:38:26.488966 24011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:26.488970 24011 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:38:26.488972 24011 net.cpp:139] Memory required for data: 970800
I0428 19:38:26.488976 24011 layer_factory.hpp:77] Creating layer accuracy
I0428 19:38:26.488981 24011 net.cpp:86] Creating Layer accuracy
I0428 19:38:26.488983 24011 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:38:26.488987 24011 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:38:26.488991 24011 net.cpp:382] accuracy -> accuracy
I0428 19:38:26.489008 24011 net.cpp:124] Setting up accuracy
I0428 19:38:26.489012 24011 net.cpp:131] Top shape: (1)
I0428 19:38:26.489015 24011 net.cpp:139] Memory required for data: 970804
I0428 19:38:26.489018 24011 layer_factory.hpp:77] Creating layer loss
I0428 19:38:26.489022 24011 net.cpp:86] Creating Layer loss
I0428 19:38:26.489025 24011 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:38:26.489029 24011 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:38:26.489033 24011 net.cpp:382] loss -> loss
I0428 19:38:26.489039 24011 layer_factory.hpp:77] Creating layer loss
I0428 19:38:26.489266 24011 net.cpp:124] Setting up loss
I0428 19:38:26.489276 24011 net.cpp:131] Top shape: (1)
I0428 19:38:26.489280 24011 net.cpp:134]     with loss weight 1
I0428 19:38:26.489287 24011 net.cpp:139] Memory required for data: 970808
I0428 19:38:26.489291 24011 net.cpp:200] loss needs backward computation.
I0428 19:38:26.489295 24011 net.cpp:202] accuracy does not need backward computation.
I0428 19:38:26.489300 24011 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:38:26.489302 24011 net.cpp:200] relu1 needs backward computation.
I0428 19:38:26.489305 24011 net.cpp:200] ip1 needs backward computation.
I0428 19:38:26.489310 24011 net.cpp:200] pool1 needs backward computation.
I0428 19:38:26.489312 24011 net.cpp:200] conv1 needs backward computation.
I0428 19:38:26.489316 24011 net.cpp:200] pool0 needs backward computation.
I0428 19:38:26.489320 24011 net.cpp:200] conv0 needs backward computation.
I0428 19:38:26.489323 24011 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:38:26.489327 24011 net.cpp:202] mnist does not need backward computation.
I0428 19:38:26.489331 24011 net.cpp:244] This network produces output accuracy
I0428 19:38:26.489334 24011 net.cpp:244] This network produces output loss
I0428 19:38:26.489343 24011 net.cpp:257] Network initialization done.
I0428 19:38:26.489387 24011 solver.cpp:56] Solver scaffolding done.
I0428 19:38:26.489590 24011 caffe.cpp:248] Starting Optimization
I0428 19:38:26.489596 24011 solver.cpp:273] Solving LeNet
I0428 19:38:26.489599 24011 solver.cpp:274] Learning Rate Policy: inv
I0428 19:38:26.490357 24011 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:38:26.491981 24011 blocking_queue.cpp:49] Waiting for data
I0428 19:38:26.564272 24020 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:26.564676 24011 solver.cpp:398]     Test net output #0: accuracy = 0.1851
I0428 19:38:26.564709 24011 solver.cpp:398]     Test net output #1: loss = 2.2609 (* 1 = 2.2609 loss)
I0428 19:38:26.566615 24011 solver.cpp:219] Iteration 0 (0 iter/s, 0.0769875s/100 iters), loss = 2.25116
I0428 19:38:26.566653 24011 solver.cpp:238]     Train net output #0: loss = 2.25116 (* 1 = 2.25116 loss)
I0428 19:38:26.566670 24011 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:38:26.631482 24011 solver.cpp:219] Iteration 100 (1542.79 iter/s, 0.0648177s/100 iters), loss = 1.5553
I0428 19:38:26.631531 24011 solver.cpp:238]     Train net output #0: loss = 1.5553 (* 1 = 1.5553 loss)
I0428 19:38:26.631541 24011 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:38:26.688735 24011 solver.cpp:219] Iteration 200 (1748.32 iter/s, 0.0571979s/100 iters), loss = 1.01611
I0428 19:38:26.688779 24011 solver.cpp:238]     Train net output #0: loss = 1.01611 (* 1 = 1.01611 loss)
I0428 19:38:26.688787 24011 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:38:26.742523 24011 solver.cpp:219] Iteration 300 (1860.86 iter/s, 0.0537386s/100 iters), loss = 0.558038
I0428 19:38:26.742563 24011 solver.cpp:238]     Train net output #0: loss = 0.558038 (* 1 = 0.558038 loss)
I0428 19:38:26.742569 24011 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:38:26.795950 24011 solver.cpp:219] Iteration 400 (1873.36 iter/s, 0.0533801s/100 iters), loss = 0.508203
I0428 19:38:26.795989 24011 solver.cpp:238]     Train net output #0: loss = 0.508203 (* 1 = 0.508203 loss)
I0428 19:38:26.795996 24011 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:38:26.848323 24011 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:38:26.908891 24020 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:26.909299 24011 solver.cpp:398]     Test net output #0: accuracy = 0.7979
I0428 19:38:26.909333 24011 solver.cpp:398]     Test net output #1: loss = 0.571959 (* 1 = 0.571959 loss)
I0428 19:38:26.910038 24011 solver.cpp:219] Iteration 500 (876.895 iter/s, 0.114039s/100 iters), loss = 0.550215
I0428 19:38:26.910078 24011 solver.cpp:238]     Train net output #0: loss = 0.550215 (* 1 = 0.550215 loss)
I0428 19:38:26.910085 24011 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:38:26.967046 24011 solver.cpp:219] Iteration 600 (1755.11 iter/s, 0.0569764s/100 iters), loss = 0.660101
I0428 19:38:26.967072 24011 solver.cpp:238]     Train net output #0: loss = 0.660101 (* 1 = 0.660101 loss)
I0428 19:38:26.967079 24011 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:38:27.024150 24011 solver.cpp:219] Iteration 700 (1752.21 iter/s, 0.0570709s/100 iters), loss = 0.666414
I0428 19:38:27.024194 24011 solver.cpp:238]     Train net output #0: loss = 0.666414 (* 1 = 0.666414 loss)
I0428 19:38:27.024200 24011 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:38:27.077580 24011 solver.cpp:219] Iteration 800 (1873.28 iter/s, 0.0533822s/100 iters), loss = 0.528628
I0428 19:38:27.077620 24011 solver.cpp:238]     Train net output #0: loss = 0.528628 (* 1 = 0.528628 loss)
I0428 19:38:27.077627 24011 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:38:27.131300 24011 solver.cpp:219] Iteration 900 (1862.6 iter/s, 0.0536883s/100 iters), loss = 0.691851
I0428 19:38:27.131340 24011 solver.cpp:238]     Train net output #0: loss = 0.691851 (* 1 = 0.691851 loss)
I0428 19:38:27.131348 24011 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:38:27.149041 24019 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:27.184147 24011 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:38:27.185056 24011 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:38:27.185837 24011 solver.cpp:311] Iteration 1000, loss = 0.503218
I0428 19:38:27.185853 24011 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:38:27.248639 24020 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:38:27.249056 24011 solver.cpp:398]     Test net output #0: accuracy = 0.8125
I0428 19:38:27.249094 24011 solver.cpp:398]     Test net output #1: loss = 0.50146 (* 1 = 0.50146 loss)
I0428 19:38:27.249099 24011 solver.cpp:316] Optimization Done.
I0428 19:38:27.249104 24011 caffe.cpp:259] Optimization Done.
