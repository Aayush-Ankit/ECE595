I0428 20:20:43.231900  1616 caffe.cpp:218] Using GPUs 0
I0428 20:20:43.274622  1616 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:20:43.827088  1616 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1369.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:20:43.827247  1616 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1369.prototxt
I0428 20:20:43.827654  1616 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:20:43.827673  1616 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:20:43.827762  1616 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:43.827836  1616 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:43.827932  1616 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:20:43.827955  1616 net.cpp:86] Creating Layer mnist
I0428 20:20:43.827963  1616 net.cpp:382] mnist -> data
I0428 20:20:43.827986  1616 net.cpp:382] mnist -> label
I0428 20:20:43.829121  1616 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:20:43.831804  1616 net.cpp:124] Setting up mnist
I0428 20:20:43.831822  1616 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:20:43.831828  1616 net.cpp:131] Top shape: 64 (64)
I0428 20:20:43.831832  1616 net.cpp:139] Memory required for data: 200960
I0428 20:20:43.831840  1616 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:43.831877  1616 net.cpp:86] Creating Layer conv0
I0428 20:20:43.831884  1616 net.cpp:408] conv0 <- data
I0428 20:20:43.831898  1616 net.cpp:382] conv0 -> conv0
I0428 20:20:44.082051  1616 net.cpp:124] Setting up conv0
I0428 20:20:44.082092  1616 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:20:44.082095  1616 net.cpp:139] Memory required for data: 7573760
I0428 20:20:44.082130  1616 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:44.082159  1616 net.cpp:86] Creating Layer pool0
I0428 20:20:44.082162  1616 net.cpp:408] pool0 <- conv0
I0428 20:20:44.082167  1616 net.cpp:382] pool0 -> pool0
I0428 20:20:44.082216  1616 net.cpp:124] Setting up pool0
I0428 20:20:44.082223  1616 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:20:44.082226  1616 net.cpp:139] Memory required for data: 9416960
I0428 20:20:44.082229  1616 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:44.082240  1616 net.cpp:86] Creating Layer conv1
I0428 20:20:44.082243  1616 net.cpp:408] conv1 <- pool0
I0428 20:20:44.082248  1616 net.cpp:382] conv1 -> conv1
I0428 20:20:44.084594  1616 net.cpp:124] Setting up conv1
I0428 20:20:44.084609  1616 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:20:44.084612  1616 net.cpp:139] Memory required for data: 10236160
I0428 20:20:44.084620  1616 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:44.084627  1616 net.cpp:86] Creating Layer pool1
I0428 20:20:44.084646  1616 net.cpp:408] pool1 <- conv1
I0428 20:20:44.084651  1616 net.cpp:382] pool1 -> pool1
I0428 20:20:44.084686  1616 net.cpp:124] Setting up pool1
I0428 20:20:44.084692  1616 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:20:44.084695  1616 net.cpp:139] Memory required for data: 10440960
I0428 20:20:44.084698  1616 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:44.084705  1616 net.cpp:86] Creating Layer ip1
I0428 20:20:44.084708  1616 net.cpp:408] ip1 <- pool1
I0428 20:20:44.084713  1616 net.cpp:382] ip1 -> ip1
I0428 20:20:44.085808  1616 net.cpp:124] Setting up ip1
I0428 20:20:44.085820  1616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:44.085824  1616 net.cpp:139] Memory required for data: 10443520
I0428 20:20:44.085832  1616 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:44.085839  1616 net.cpp:86] Creating Layer relu1
I0428 20:20:44.085842  1616 net.cpp:408] relu1 <- ip1
I0428 20:20:44.085847  1616 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:44.086033  1616 net.cpp:124] Setting up relu1
I0428 20:20:44.086041  1616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:44.086045  1616 net.cpp:139] Memory required for data: 10446080
I0428 20:20:44.086048  1616 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:44.086055  1616 net.cpp:86] Creating Layer ip2
I0428 20:20:44.086060  1616 net.cpp:408] ip2 <- ip1
I0428 20:20:44.086078  1616 net.cpp:382] ip2 -> ip2
I0428 20:20:44.086186  1616 net.cpp:124] Setting up ip2
I0428 20:20:44.086194  1616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:44.086196  1616 net.cpp:139] Memory required for data: 10448640
I0428 20:20:44.086201  1616 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:44.086207  1616 net.cpp:86] Creating Layer relu2
I0428 20:20:44.086211  1616 net.cpp:408] relu2 <- ip2
I0428 20:20:44.086215  1616 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:44.087090  1616 net.cpp:124] Setting up relu2
I0428 20:20:44.087102  1616 net.cpp:131] Top shape: 64 10 (640)
I0428 20:20:44.087105  1616 net.cpp:139] Memory required for data: 10451200
I0428 20:20:44.087110  1616 layer_factory.hpp:77] Creating layer loss
I0428 20:20:44.087116  1616 net.cpp:86] Creating Layer loss
I0428 20:20:44.087119  1616 net.cpp:408] loss <- ip2
I0428 20:20:44.087124  1616 net.cpp:408] loss <- label
I0428 20:20:44.087131  1616 net.cpp:382] loss -> loss
I0428 20:20:44.087147  1616 layer_factory.hpp:77] Creating layer loss
I0428 20:20:44.087440  1616 net.cpp:124] Setting up loss
I0428 20:20:44.087450  1616 net.cpp:131] Top shape: (1)
I0428 20:20:44.087453  1616 net.cpp:134]     with loss weight 1
I0428 20:20:44.087466  1616 net.cpp:139] Memory required for data: 10451204
I0428 20:20:44.087471  1616 net.cpp:200] loss needs backward computation.
I0428 20:20:44.087473  1616 net.cpp:200] relu2 needs backward computation.
I0428 20:20:44.087476  1616 net.cpp:200] ip2 needs backward computation.
I0428 20:20:44.087479  1616 net.cpp:200] relu1 needs backward computation.
I0428 20:20:44.087482  1616 net.cpp:200] ip1 needs backward computation.
I0428 20:20:44.087496  1616 net.cpp:200] pool1 needs backward computation.
I0428 20:20:44.087499  1616 net.cpp:200] conv1 needs backward computation.
I0428 20:20:44.087502  1616 net.cpp:200] pool0 needs backward computation.
I0428 20:20:44.087505  1616 net.cpp:200] conv0 needs backward computation.
I0428 20:20:44.087508  1616 net.cpp:202] mnist does not need backward computation.
I0428 20:20:44.087512  1616 net.cpp:244] This network produces output loss
I0428 20:20:44.087520  1616 net.cpp:257] Network initialization done.
I0428 20:20:44.087837  1616 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1369.prototxt
I0428 20:20:44.087891  1616 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:20:44.087976  1616 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 20:20:44.088040  1616 layer_factory.hpp:77] Creating layer mnist
I0428 20:20:44.088109  1616 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:20:44.088121  1616 net.cpp:86] Creating Layer mnist
I0428 20:20:44.088140  1616 net.cpp:382] mnist -> data
I0428 20:20:44.088148  1616 net.cpp:382] mnist -> label
I0428 20:20:44.088233  1616 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:20:44.090207  1616 net.cpp:124] Setting up mnist
I0428 20:20:44.090239  1616 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:20:44.090243  1616 net.cpp:131] Top shape: 100 (100)
I0428 20:20:44.090247  1616 net.cpp:139] Memory required for data: 314000
I0428 20:20:44.090251  1616 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:20:44.090258  1616 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:20:44.090261  1616 net.cpp:408] label_mnist_1_split <- label
I0428 20:20:44.090267  1616 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:20:44.090275  1616 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:20:44.090404  1616 net.cpp:124] Setting up label_mnist_1_split
I0428 20:20:44.090426  1616 net.cpp:131] Top shape: 100 (100)
I0428 20:20:44.090430  1616 net.cpp:131] Top shape: 100 (100)
I0428 20:20:44.090433  1616 net.cpp:139] Memory required for data: 314800
I0428 20:20:44.090436  1616 layer_factory.hpp:77] Creating layer conv0
I0428 20:20:44.090445  1616 net.cpp:86] Creating Layer conv0
I0428 20:20:44.090448  1616 net.cpp:408] conv0 <- data
I0428 20:20:44.090453  1616 net.cpp:382] conv0 -> conv0
I0428 20:20:44.092012  1616 net.cpp:124] Setting up conv0
I0428 20:20:44.092042  1616 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:20:44.092046  1616 net.cpp:139] Memory required for data: 11834800
I0428 20:20:44.092057  1616 layer_factory.hpp:77] Creating layer pool0
I0428 20:20:44.092064  1616 net.cpp:86] Creating Layer pool0
I0428 20:20:44.092067  1616 net.cpp:408] pool0 <- conv0
I0428 20:20:44.092073  1616 net.cpp:382] pool0 -> pool0
I0428 20:20:44.092113  1616 net.cpp:124] Setting up pool0
I0428 20:20:44.092119  1616 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:20:44.092123  1616 net.cpp:139] Memory required for data: 14714800
I0428 20:20:44.092125  1616 layer_factory.hpp:77] Creating layer conv1
I0428 20:20:44.092134  1616 net.cpp:86] Creating Layer conv1
I0428 20:20:44.092139  1616 net.cpp:408] conv1 <- pool0
I0428 20:20:44.092144  1616 net.cpp:382] conv1 -> conv1
I0428 20:20:44.094396  1616 net.cpp:124] Setting up conv1
I0428 20:20:44.094409  1616 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:20:44.094413  1616 net.cpp:139] Memory required for data: 15994800
I0428 20:20:44.094421  1616 layer_factory.hpp:77] Creating layer pool1
I0428 20:20:44.094429  1616 net.cpp:86] Creating Layer pool1
I0428 20:20:44.094452  1616 net.cpp:408] pool1 <- conv1
I0428 20:20:44.094457  1616 net.cpp:382] pool1 -> pool1
I0428 20:20:44.094496  1616 net.cpp:124] Setting up pool1
I0428 20:20:44.094501  1616 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:20:44.094504  1616 net.cpp:139] Memory required for data: 16314800
I0428 20:20:44.094507  1616 layer_factory.hpp:77] Creating layer ip1
I0428 20:20:44.094514  1616 net.cpp:86] Creating Layer ip1
I0428 20:20:44.094517  1616 net.cpp:408] ip1 <- pool1
I0428 20:20:44.094522  1616 net.cpp:382] ip1 -> ip1
I0428 20:20:44.094666  1616 net.cpp:124] Setting up ip1
I0428 20:20:44.094673  1616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:44.094676  1616 net.cpp:139] Memory required for data: 16318800
I0428 20:20:44.094684  1616 layer_factory.hpp:77] Creating layer relu1
I0428 20:20:44.094691  1616 net.cpp:86] Creating Layer relu1
I0428 20:20:44.094698  1616 net.cpp:408] relu1 <- ip1
I0428 20:20:44.094703  1616 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:20:44.094885  1616 net.cpp:124] Setting up relu1
I0428 20:20:44.094894  1616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:44.094898  1616 net.cpp:139] Memory required for data: 16322800
I0428 20:20:44.094902  1616 layer_factory.hpp:77] Creating layer ip2
I0428 20:20:44.094908  1616 net.cpp:86] Creating Layer ip2
I0428 20:20:44.094911  1616 net.cpp:408] ip2 <- ip1
I0428 20:20:44.094919  1616 net.cpp:382] ip2 -> ip2
I0428 20:20:44.095054  1616 net.cpp:124] Setting up ip2
I0428 20:20:44.095062  1616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:44.095065  1616 net.cpp:139] Memory required for data: 16326800
I0428 20:20:44.095070  1616 layer_factory.hpp:77] Creating layer relu2
I0428 20:20:44.095077  1616 net.cpp:86] Creating Layer relu2
I0428 20:20:44.095080  1616 net.cpp:408] relu2 <- ip2
I0428 20:20:44.095084  1616 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:20:44.095259  1616 net.cpp:124] Setting up relu2
I0428 20:20:44.095268  1616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:44.095270  1616 net.cpp:139] Memory required for data: 16330800
I0428 20:20:44.095273  1616 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 20:20:44.095278  1616 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 20:20:44.095283  1616 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 20:20:44.095286  1616 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 20:20:44.095304  1616 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 20:20:44.095340  1616 net.cpp:124] Setting up ip2_relu2_0_split
I0428 20:20:44.095347  1616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:44.095350  1616 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:20:44.095353  1616 net.cpp:139] Memory required for data: 16338800
I0428 20:20:44.095356  1616 layer_factory.hpp:77] Creating layer accuracy
I0428 20:20:44.095362  1616 net.cpp:86] Creating Layer accuracy
I0428 20:20:44.095366  1616 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 20:20:44.095369  1616 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:20:44.095373  1616 net.cpp:382] accuracy -> accuracy
I0428 20:20:44.095379  1616 net.cpp:124] Setting up accuracy
I0428 20:20:44.095383  1616 net.cpp:131] Top shape: (1)
I0428 20:20:44.095386  1616 net.cpp:139] Memory required for data: 16338804
I0428 20:20:44.095389  1616 layer_factory.hpp:77] Creating layer loss
I0428 20:20:44.095394  1616 net.cpp:86] Creating Layer loss
I0428 20:20:44.095397  1616 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 20:20:44.095402  1616 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:20:44.095405  1616 net.cpp:382] loss -> loss
I0428 20:20:44.095412  1616 layer_factory.hpp:77] Creating layer loss
I0428 20:20:44.095649  1616 net.cpp:124] Setting up loss
I0428 20:20:44.095659  1616 net.cpp:131] Top shape: (1)
I0428 20:20:44.095661  1616 net.cpp:134]     with loss weight 1
I0428 20:20:44.095667  1616 net.cpp:139] Memory required for data: 16338808
I0428 20:20:44.095670  1616 net.cpp:200] loss needs backward computation.
I0428 20:20:44.095674  1616 net.cpp:202] accuracy does not need backward computation.
I0428 20:20:44.095677  1616 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 20:20:44.095680  1616 net.cpp:200] relu2 needs backward computation.
I0428 20:20:44.095684  1616 net.cpp:200] ip2 needs backward computation.
I0428 20:20:44.095687  1616 net.cpp:200] relu1 needs backward computation.
I0428 20:20:44.095690  1616 net.cpp:200] ip1 needs backward computation.
I0428 20:20:44.095692  1616 net.cpp:200] pool1 needs backward computation.
I0428 20:20:44.095695  1616 net.cpp:200] conv1 needs backward computation.
I0428 20:20:44.095698  1616 net.cpp:200] pool0 needs backward computation.
I0428 20:20:44.095701  1616 net.cpp:200] conv0 needs backward computation.
I0428 20:20:44.095705  1616 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:20:44.095708  1616 net.cpp:202] mnist does not need backward computation.
I0428 20:20:44.095711  1616 net.cpp:244] This network produces output accuracy
I0428 20:20:44.095715  1616 net.cpp:244] This network produces output loss
I0428 20:20:44.095726  1616 net.cpp:257] Network initialization done.
I0428 20:20:44.095763  1616 solver.cpp:56] Solver scaffolding done.
I0428 20:20:44.096052  1616 caffe.cpp:248] Starting Optimization
I0428 20:20:44.096072  1616 solver.cpp:273] Solving LeNet
I0428 20:20:44.096076  1616 solver.cpp:274] Learning Rate Policy: inv
I0428 20:20:44.096262  1616 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:20:44.104100  1616 blocking_queue.cpp:49] Waiting for data
I0428 20:20:44.171989  1623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:44.172957  1616 solver.cpp:398]     Test net output #0: accuracy = 0.1056
I0428 20:20:44.172976  1616 solver.cpp:398]     Test net output #1: loss = 2.40093 (* 1 = 2.40093 loss)
I0428 20:20:44.177057  1616 solver.cpp:219] Iteration 0 (0 iter/s, 0.0809411s/100 iters), loss = 2.42532
I0428 20:20:44.177083  1616 solver.cpp:238]     Train net output #0: loss = 2.42532 (* 1 = 2.42532 loss)
I0428 20:20:44.177094  1616 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:20:44.327131  1616 solver.cpp:219] Iteration 100 (666.518 iter/s, 0.150033s/100 iters), loss = 0.417636
I0428 20:20:44.327169  1616 solver.cpp:238]     Train net output #0: loss = 0.417636 (* 1 = 0.417636 loss)
I0428 20:20:44.327175  1616 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:20:44.476971  1616 solver.cpp:219] Iteration 200 (667.534 iter/s, 0.149805s/100 iters), loss = 0.241842
I0428 20:20:44.476996  1616 solver.cpp:238]     Train net output #0: loss = 0.241842 (* 1 = 0.241842 loss)
I0428 20:20:44.477004  1616 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:20:44.626274  1616 solver.cpp:219] Iteration 300 (669.948 iter/s, 0.149265s/100 iters), loss = 0.235521
I0428 20:20:44.626312  1616 solver.cpp:238]     Train net output #0: loss = 0.235521 (* 1 = 0.235521 loss)
I0428 20:20:44.626318  1616 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:20:44.776865  1616 solver.cpp:219] Iteration 400 (664.215 iter/s, 0.150554s/100 iters), loss = 0.174798
I0428 20:20:44.776901  1616 solver.cpp:238]     Train net output #0: loss = 0.174798 (* 1 = 0.174798 loss)
I0428 20:20:44.776907  1616 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:20:44.923662  1616 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:20:44.993702  1623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:44.996131  1616 solver.cpp:398]     Test net output #0: accuracy = 0.9455
I0428 20:20:44.996150  1616 solver.cpp:398]     Test net output #1: loss = 0.173234 (* 1 = 0.173234 loss)
I0428 20:20:44.997568  1616 solver.cpp:219] Iteration 500 (453.174 iter/s, 0.220666s/100 iters), loss = 0.213947
I0428 20:20:44.997599  1616 solver.cpp:238]     Train net output #0: loss = 0.213948 (* 1 = 0.213948 loss)
I0428 20:20:44.997620  1616 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:20:45.150552  1616 solver.cpp:219] Iteration 600 (653.853 iter/s, 0.15294s/100 iters), loss = 0.0867198
I0428 20:20:45.150593  1616 solver.cpp:238]     Train net output #0: loss = 0.0867201 (* 1 = 0.0867201 loss)
I0428 20:20:45.150600  1616 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:20:45.309859  1616 solver.cpp:219] Iteration 700 (627.893 iter/s, 0.159263s/100 iters), loss = 0.111574
I0428 20:20:45.309896  1616 solver.cpp:238]     Train net output #0: loss = 0.111575 (* 1 = 0.111575 loss)
I0428 20:20:45.309906  1616 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:20:45.476483  1616 solver.cpp:219] Iteration 800 (600.337 iter/s, 0.166573s/100 iters), loss = 0.340133
I0428 20:20:45.476524  1616 solver.cpp:238]     Train net output #0: loss = 0.340133 (* 1 = 0.340133 loss)
I0428 20:20:45.476536  1616 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:20:45.650229  1616 solver.cpp:219] Iteration 900 (575.752 iter/s, 0.173686s/100 iters), loss = 0.153086
I0428 20:20:45.650283  1616 solver.cpp:238]     Train net output #0: loss = 0.153087 (* 1 = 0.153087 loss)
I0428 20:20:45.650296  1616 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:20:45.709487  1622 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:45.826150  1616 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:20:45.828986  1616 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:20:45.830693  1616 solver.cpp:311] Iteration 1000, loss = 0.12067
I0428 20:20:45.830720  1616 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:20:45.910940  1623 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:20:45.911944  1616 solver.cpp:398]     Test net output #0: accuracy = 0.9767
I0428 20:20:45.911972  1616 solver.cpp:398]     Test net output #1: loss = 0.0774407 (* 1 = 0.0774407 loss)
I0428 20:20:45.911980  1616 solver.cpp:316] Optimization Done.
I0428 20:20:45.911984  1616 caffe.cpp:259] Optimization Done.
