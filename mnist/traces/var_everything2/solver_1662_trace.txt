I0428 20:38:13.375357  5091 caffe.cpp:218] Using GPUs 0
I0428 20:38:13.413239  5091 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:38:13.928688  5091 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1662.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:38:13.928833  5091 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1662.prototxt
I0428 20:38:13.929242  5091 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:38:13.929261  5091 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:38:13.929363  5091 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:13.929440  5091 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:13.929535  5091 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:38:13.929560  5091 net.cpp:86] Creating Layer mnist
I0428 20:38:13.929569  5091 net.cpp:382] mnist -> data
I0428 20:38:13.929589  5091 net.cpp:382] mnist -> label
I0428 20:38:13.930660  5091 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:38:13.933090  5091 net.cpp:124] Setting up mnist
I0428 20:38:13.933107  5091 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:38:13.933115  5091 net.cpp:131] Top shape: 64 (64)
I0428 20:38:13.933120  5091 net.cpp:139] Memory required for data: 200960
I0428 20:38:13.933126  5091 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:13.933142  5091 net.cpp:86] Creating Layer conv0
I0428 20:38:13.933162  5091 net.cpp:408] conv0 <- data
I0428 20:38:13.933176  5091 net.cpp:382] conv0 -> conv0
I0428 20:38:14.207211  5091 net.cpp:124] Setting up conv0
I0428 20:38:14.207254  5091 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:38:14.207257  5091 net.cpp:139] Memory required for data: 14946560
I0428 20:38:14.207273  5091 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:14.207285  5091 net.cpp:86] Creating Layer pool0
I0428 20:38:14.207288  5091 net.cpp:408] pool0 <- conv0
I0428 20:38:14.207309  5091 net.cpp:382] pool0 -> pool0
I0428 20:38:14.207358  5091 net.cpp:124] Setting up pool0
I0428 20:38:14.207372  5091 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:38:14.207376  5091 net.cpp:139] Memory required for data: 18632960
I0428 20:38:14.207378  5091 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:14.207389  5091 net.cpp:86] Creating Layer conv1
I0428 20:38:14.207392  5091 net.cpp:408] conv1 <- pool0
I0428 20:38:14.207399  5091 net.cpp:382] conv1 -> conv1
I0428 20:38:14.211570  5091 net.cpp:124] Setting up conv1
I0428 20:38:14.211599  5091 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:38:14.211602  5091 net.cpp:139] Memory required for data: 20271360
I0428 20:38:14.211611  5091 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:14.211618  5091 net.cpp:86] Creating Layer pool1
I0428 20:38:14.211622  5091 net.cpp:408] pool1 <- conv1
I0428 20:38:14.211642  5091 net.cpp:382] pool1 -> pool1
I0428 20:38:14.211695  5091 net.cpp:124] Setting up pool1
I0428 20:38:14.211701  5091 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:38:14.211704  5091 net.cpp:139] Memory required for data: 20680960
I0428 20:38:14.211706  5091 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:14.211714  5091 net.cpp:86] Creating Layer ip1
I0428 20:38:14.211717  5091 net.cpp:408] ip1 <- pool1
I0428 20:38:14.211721  5091 net.cpp:382] ip1 -> ip1
I0428 20:38:14.212075  5091 net.cpp:124] Setting up ip1
I0428 20:38:14.212082  5091 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:14.212085  5091 net.cpp:139] Memory required for data: 20687360
I0428 20:38:14.212106  5091 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:14.212111  5091 net.cpp:86] Creating Layer relu1
I0428 20:38:14.212115  5091 net.cpp:408] relu1 <- ip1
I0428 20:38:14.212118  5091 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:14.212276  5091 net.cpp:124] Setting up relu1
I0428 20:38:14.212285  5091 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:14.212287  5091 net.cpp:139] Memory required for data: 20693760
I0428 20:38:14.212291  5091 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:14.212297  5091 net.cpp:86] Creating Layer ip2
I0428 20:38:14.212301  5091 net.cpp:408] ip2 <- ip1
I0428 20:38:14.212304  5091 net.cpp:382] ip2 -> ip2
I0428 20:38:14.212395  5091 net.cpp:124] Setting up ip2
I0428 20:38:14.212401  5091 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:14.212404  5091 net.cpp:139] Memory required for data: 20700160
I0428 20:38:14.212409  5091 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:14.212414  5091 net.cpp:86] Creating Layer relu2
I0428 20:38:14.212417  5091 net.cpp:408] relu2 <- ip2
I0428 20:38:14.212422  5091 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:14.213238  5091 net.cpp:124] Setting up relu2
I0428 20:38:14.213249  5091 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:38:14.213253  5091 net.cpp:139] Memory required for data: 20706560
I0428 20:38:14.213256  5091 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:14.213263  5091 net.cpp:86] Creating Layer ip3
I0428 20:38:14.213266  5091 net.cpp:408] ip3 <- ip2
I0428 20:38:14.213271  5091 net.cpp:382] ip3 -> ip3
I0428 20:38:14.213368  5091 net.cpp:124] Setting up ip3
I0428 20:38:14.213376  5091 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:14.213378  5091 net.cpp:139] Memory required for data: 20709120
I0428 20:38:14.213387  5091 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:14.213392  5091 net.cpp:86] Creating Layer relu3
I0428 20:38:14.213394  5091 net.cpp:408] relu3 <- ip3
I0428 20:38:14.213412  5091 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:14.213562  5091 net.cpp:124] Setting up relu3
I0428 20:38:14.213570  5091 net.cpp:131] Top shape: 64 10 (640)
I0428 20:38:14.213572  5091 net.cpp:139] Memory required for data: 20711680
I0428 20:38:14.213577  5091 layer_factory.hpp:77] Creating layer loss
I0428 20:38:14.213582  5091 net.cpp:86] Creating Layer loss
I0428 20:38:14.213585  5091 net.cpp:408] loss <- ip3
I0428 20:38:14.213588  5091 net.cpp:408] loss <- label
I0428 20:38:14.213593  5091 net.cpp:382] loss -> loss
I0428 20:38:14.213610  5091 layer_factory.hpp:77] Creating layer loss
I0428 20:38:14.213850  5091 net.cpp:124] Setting up loss
I0428 20:38:14.213860  5091 net.cpp:131] Top shape: (1)
I0428 20:38:14.213861  5091 net.cpp:134]     with loss weight 1
I0428 20:38:14.213876  5091 net.cpp:139] Memory required for data: 20711684
I0428 20:38:14.213878  5091 net.cpp:200] loss needs backward computation.
I0428 20:38:14.213882  5091 net.cpp:200] relu3 needs backward computation.
I0428 20:38:14.213886  5091 net.cpp:200] ip3 needs backward computation.
I0428 20:38:14.213888  5091 net.cpp:200] relu2 needs backward computation.
I0428 20:38:14.213891  5091 net.cpp:200] ip2 needs backward computation.
I0428 20:38:14.213893  5091 net.cpp:200] relu1 needs backward computation.
I0428 20:38:14.213896  5091 net.cpp:200] ip1 needs backward computation.
I0428 20:38:14.213899  5091 net.cpp:200] pool1 needs backward computation.
I0428 20:38:14.213902  5091 net.cpp:200] conv1 needs backward computation.
I0428 20:38:14.213907  5091 net.cpp:200] pool0 needs backward computation.
I0428 20:38:14.213909  5091 net.cpp:200] conv0 needs backward computation.
I0428 20:38:14.213912  5091 net.cpp:202] mnist does not need backward computation.
I0428 20:38:14.213914  5091 net.cpp:244] This network produces output loss
I0428 20:38:14.213923  5091 net.cpp:257] Network initialization done.
I0428 20:38:14.214267  5091 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1662.prototxt
I0428 20:38:14.214308  5091 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:38:14.214395  5091 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:38:14.214476  5091 layer_factory.hpp:77] Creating layer mnist
I0428 20:38:14.214516  5091 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:38:14.214542  5091 net.cpp:86] Creating Layer mnist
I0428 20:38:14.214548  5091 net.cpp:382] mnist -> data
I0428 20:38:14.214555  5091 net.cpp:382] mnist -> label
I0428 20:38:14.214633  5091 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:38:14.216609  5091 net.cpp:124] Setting up mnist
I0428 20:38:14.216636  5091 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:38:14.216641  5091 net.cpp:131] Top shape: 100 (100)
I0428 20:38:14.216645  5091 net.cpp:139] Memory required for data: 314000
I0428 20:38:14.216648  5091 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:38:14.216696  5091 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:38:14.216699  5091 net.cpp:408] label_mnist_1_split <- label
I0428 20:38:14.216720  5091 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:38:14.216727  5091 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:38:14.216769  5091 net.cpp:124] Setting up label_mnist_1_split
I0428 20:38:14.216775  5091 net.cpp:131] Top shape: 100 (100)
I0428 20:38:14.216779  5091 net.cpp:131] Top shape: 100 (100)
I0428 20:38:14.216781  5091 net.cpp:139] Memory required for data: 314800
I0428 20:38:14.216784  5091 layer_factory.hpp:77] Creating layer conv0
I0428 20:38:14.216796  5091 net.cpp:86] Creating Layer conv0
I0428 20:38:14.216800  5091 net.cpp:408] conv0 <- data
I0428 20:38:14.216804  5091 net.cpp:382] conv0 -> conv0
I0428 20:38:14.218699  5091 net.cpp:124] Setting up conv0
I0428 20:38:14.218713  5091 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:38:14.218716  5091 net.cpp:139] Memory required for data: 23354800
I0428 20:38:14.218725  5091 layer_factory.hpp:77] Creating layer pool0
I0428 20:38:14.218732  5091 net.cpp:86] Creating Layer pool0
I0428 20:38:14.218736  5091 net.cpp:408] pool0 <- conv0
I0428 20:38:14.218740  5091 net.cpp:382] pool0 -> pool0
I0428 20:38:14.218776  5091 net.cpp:124] Setting up pool0
I0428 20:38:14.218781  5091 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:38:14.218783  5091 net.cpp:139] Memory required for data: 29114800
I0428 20:38:14.218786  5091 layer_factory.hpp:77] Creating layer conv1
I0428 20:38:14.218796  5091 net.cpp:86] Creating Layer conv1
I0428 20:38:14.218798  5091 net.cpp:408] conv1 <- pool0
I0428 20:38:14.218803  5091 net.cpp:382] conv1 -> conv1
I0428 20:38:14.221895  5091 net.cpp:124] Setting up conv1
I0428 20:38:14.221909  5091 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:38:14.221912  5091 net.cpp:139] Memory required for data: 31674800
I0428 20:38:14.221921  5091 layer_factory.hpp:77] Creating layer pool1
I0428 20:38:14.221927  5091 net.cpp:86] Creating Layer pool1
I0428 20:38:14.221930  5091 net.cpp:408] pool1 <- conv1
I0428 20:38:14.221957  5091 net.cpp:382] pool1 -> pool1
I0428 20:38:14.221992  5091 net.cpp:124] Setting up pool1
I0428 20:38:14.221997  5091 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:38:14.222000  5091 net.cpp:139] Memory required for data: 32314800
I0428 20:38:14.222003  5091 layer_factory.hpp:77] Creating layer ip1
I0428 20:38:14.222015  5091 net.cpp:86] Creating Layer ip1
I0428 20:38:14.222018  5091 net.cpp:408] ip1 <- pool1
I0428 20:38:14.222023  5091 net.cpp:382] ip1 -> ip1
I0428 20:38:14.222350  5091 net.cpp:124] Setting up ip1
I0428 20:38:14.222369  5091 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:14.222373  5091 net.cpp:139] Memory required for data: 32324800
I0428 20:38:14.222384  5091 layer_factory.hpp:77] Creating layer relu1
I0428 20:38:14.222391  5091 net.cpp:86] Creating Layer relu1
I0428 20:38:14.222399  5091 net.cpp:408] relu1 <- ip1
I0428 20:38:14.222404  5091 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:38:14.222553  5091 net.cpp:124] Setting up relu1
I0428 20:38:14.222561  5091 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:14.222564  5091 net.cpp:139] Memory required for data: 32334800
I0428 20:38:14.222573  5091 layer_factory.hpp:77] Creating layer ip2
I0428 20:38:14.222580  5091 net.cpp:86] Creating Layer ip2
I0428 20:38:14.222589  5091 net.cpp:408] ip2 <- ip1
I0428 20:38:14.222594  5091 net.cpp:382] ip2 -> ip2
I0428 20:38:14.222709  5091 net.cpp:124] Setting up ip2
I0428 20:38:14.222717  5091 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:14.222719  5091 net.cpp:139] Memory required for data: 32344800
I0428 20:38:14.222724  5091 layer_factory.hpp:77] Creating layer relu2
I0428 20:38:14.222728  5091 net.cpp:86] Creating Layer relu2
I0428 20:38:14.222738  5091 net.cpp:408] relu2 <- ip2
I0428 20:38:14.222757  5091 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:38:14.222937  5091 net.cpp:124] Setting up relu2
I0428 20:38:14.222945  5091 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:38:14.222949  5091 net.cpp:139] Memory required for data: 32354800
I0428 20:38:14.222951  5091 layer_factory.hpp:77] Creating layer ip3
I0428 20:38:14.222957  5091 net.cpp:86] Creating Layer ip3
I0428 20:38:14.222960  5091 net.cpp:408] ip3 <- ip2
I0428 20:38:14.222965  5091 net.cpp:382] ip3 -> ip3
I0428 20:38:14.223100  5091 net.cpp:124] Setting up ip3
I0428 20:38:14.223107  5091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:14.223111  5091 net.cpp:139] Memory required for data: 32358800
I0428 20:38:14.223119  5091 layer_factory.hpp:77] Creating layer relu3
I0428 20:38:14.223122  5091 net.cpp:86] Creating Layer relu3
I0428 20:38:14.223125  5091 net.cpp:408] relu3 <- ip3
I0428 20:38:14.223130  5091 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:38:14.223924  5091 net.cpp:124] Setting up relu3
I0428 20:38:14.223937  5091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:14.223940  5091 net.cpp:139] Memory required for data: 32362800
I0428 20:38:14.223943  5091 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:38:14.223948  5091 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:38:14.223951  5091 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:38:14.223963  5091 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:38:14.223985  5091 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:38:14.224022  5091 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:38:14.224027  5091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:14.224031  5091 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:38:14.224035  5091 net.cpp:139] Memory required for data: 32370800
I0428 20:38:14.224037  5091 layer_factory.hpp:77] Creating layer accuracy
I0428 20:38:14.224042  5091 net.cpp:86] Creating Layer accuracy
I0428 20:38:14.224052  5091 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:38:14.224056  5091 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:38:14.224061  5091 net.cpp:382] accuracy -> accuracy
I0428 20:38:14.224087  5091 net.cpp:124] Setting up accuracy
I0428 20:38:14.224092  5091 net.cpp:131] Top shape: (1)
I0428 20:38:14.224094  5091 net.cpp:139] Memory required for data: 32370804
I0428 20:38:14.224097  5091 layer_factory.hpp:77] Creating layer loss
I0428 20:38:14.224102  5091 net.cpp:86] Creating Layer loss
I0428 20:38:14.224104  5091 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:38:14.224107  5091 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:38:14.224112  5091 net.cpp:382] loss -> loss
I0428 20:38:14.224117  5091 layer_factory.hpp:77] Creating layer loss
I0428 20:38:14.224359  5091 net.cpp:124] Setting up loss
I0428 20:38:14.224369  5091 net.cpp:131] Top shape: (1)
I0428 20:38:14.224371  5091 net.cpp:134]     with loss weight 1
I0428 20:38:14.224386  5091 net.cpp:139] Memory required for data: 32370808
I0428 20:38:14.224390  5091 net.cpp:200] loss needs backward computation.
I0428 20:38:14.224393  5091 net.cpp:202] accuracy does not need backward computation.
I0428 20:38:14.224397  5091 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:38:14.224400  5091 net.cpp:200] relu3 needs backward computation.
I0428 20:38:14.224402  5091 net.cpp:200] ip3 needs backward computation.
I0428 20:38:14.224406  5091 net.cpp:200] relu2 needs backward computation.
I0428 20:38:14.224408  5091 net.cpp:200] ip2 needs backward computation.
I0428 20:38:14.224411  5091 net.cpp:200] relu1 needs backward computation.
I0428 20:38:14.224413  5091 net.cpp:200] ip1 needs backward computation.
I0428 20:38:14.224423  5091 net.cpp:200] pool1 needs backward computation.
I0428 20:38:14.224426  5091 net.cpp:200] conv1 needs backward computation.
I0428 20:38:14.224429  5091 net.cpp:200] pool0 needs backward computation.
I0428 20:38:14.224432  5091 net.cpp:200] conv0 needs backward computation.
I0428 20:38:14.224442  5091 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:38:14.224445  5091 net.cpp:202] mnist does not need backward computation.
I0428 20:38:14.224448  5091 net.cpp:244] This network produces output accuracy
I0428 20:38:14.224457  5091 net.cpp:244] This network produces output loss
I0428 20:38:14.224467  5091 net.cpp:257] Network initialization done.
I0428 20:38:14.224522  5091 solver.cpp:56] Solver scaffolding done.
I0428 20:38:14.224879  5091 caffe.cpp:248] Starting Optimization
I0428 20:38:14.224890  5091 solver.cpp:273] Solving LeNet
I0428 20:38:14.224910  5091 solver.cpp:274] Learning Rate Policy: inv
I0428 20:38:14.226348  5091 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:38:14.357069  5098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:14.360373  5091 solver.cpp:398]     Test net output #0: accuracy = 0.109
I0428 20:38:14.360407  5091 solver.cpp:398]     Test net output #1: loss = 2.32224 (* 1 = 2.32224 loss)
I0428 20:38:14.365622  5091 solver.cpp:219] Iteration 0 (1.6182 iter/s, 0.14068s/100 iters), loss = 2.3234
I0428 20:38:14.365659  5091 solver.cpp:238]     Train net output #0: loss = 2.3234 (* 1 = 2.3234 loss)
I0428 20:38:14.365689  5091 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:38:14.639551  5091 solver.cpp:219] Iteration 100 (365.116 iter/s, 0.273885s/100 iters), loss = 0.999748
I0428 20:38:14.639593  5091 solver.cpp:238]     Train net output #0: loss = 0.999748 (* 1 = 0.999748 loss)
I0428 20:38:14.639600  5091 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:38:14.910879  5091 solver.cpp:219] Iteration 200 (368.639 iter/s, 0.271268s/100 iters), loss = 0.785992
I0428 20:38:14.910922  5091 solver.cpp:238]     Train net output #0: loss = 0.785992 (* 1 = 0.785992 loss)
I0428 20:38:14.910928  5091 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:38:15.181979  5091 solver.cpp:219] Iteration 300 (368.949 iter/s, 0.27104s/100 iters), loss = 0.698736
I0428 20:38:15.182020  5091 solver.cpp:238]     Train net output #0: loss = 0.698736 (* 1 = 0.698736 loss)
I0428 20:38:15.182027  5091 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:38:15.455226  5091 solver.cpp:219] Iteration 400 (366.028 iter/s, 0.273203s/100 iters), loss = 0.76573
I0428 20:38:15.455251  5091 solver.cpp:238]     Train net output #0: loss = 0.76573 (* 1 = 0.76573 loss)
I0428 20:38:15.455258  5091 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:38:15.727911  5091 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:38:15.853392  5098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:15.856744  5091 solver.cpp:398]     Test net output #0: accuracy = 0.7833
I0428 20:38:15.856781  5091 solver.cpp:398]     Test net output #1: loss = 0.758471 (* 1 = 0.758471 loss)
I0428 20:38:15.859491  5091 solver.cpp:219] Iteration 500 (247.393 iter/s, 0.404215s/100 iters), loss = 0.72423
I0428 20:38:15.859529  5091 solver.cpp:238]     Train net output #0: loss = 0.72423 (* 1 = 0.72423 loss)
I0428 20:38:15.859551  5091 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:38:16.144724  5091 solver.cpp:219] Iteration 600 (350.639 iter/s, 0.285193s/100 iters), loss = 0.63825
I0428 20:38:16.144765  5091 solver.cpp:238]     Train net output #0: loss = 0.63825 (* 1 = 0.63825 loss)
I0428 20:38:16.144773  5091 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:38:16.431565  5091 solver.cpp:219] Iteration 700 (348.698 iter/s, 0.286781s/100 iters), loss = 1.07881
I0428 20:38:16.431605  5091 solver.cpp:238]     Train net output #0: loss = 1.07881 (* 1 = 1.07881 loss)
I0428 20:38:16.431612  5091 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:38:16.724201  5091 solver.cpp:219] Iteration 800 (341.79 iter/s, 0.292577s/100 iters), loss = 0.838562
I0428 20:38:16.724227  5091 solver.cpp:238]     Train net output #0: loss = 0.838562 (* 1 = 0.838562 loss)
I0428 20:38:16.724233  5091 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:38:17.014401  5091 solver.cpp:219] Iteration 900 (344.645 iter/s, 0.290153s/100 iters), loss = 0.732811
I0428 20:38:17.014444  5091 solver.cpp:238]     Train net output #0: loss = 0.732811 (* 1 = 0.732811 loss)
I0428 20:38:17.014451  5091 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:38:17.109117  5097 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:17.293735  5091 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:38:17.299125  5091 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:38:17.302330  5091 solver.cpp:311] Iteration 1000, loss = 0.894911
I0428 20:38:17.302346  5091 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:38:17.427677  5098 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:38:17.431012  5091 solver.cpp:398]     Test net output #0: accuracy = 0.794
I0428 20:38:17.431048  5091 solver.cpp:398]     Test net output #1: loss = 0.721611 (* 1 = 0.721611 loss)
I0428 20:38:17.431053  5091 solver.cpp:316] Optimization Done.
I0428 20:38:17.431056  5091 caffe.cpp:259] Optimization Done.
