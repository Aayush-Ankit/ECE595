I0428 19:42:18.898409 25038 caffe.cpp:218] Using GPUs 0
I0428 19:42:18.927321 25038 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:42:19.378808 25038 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test390.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:42:19.378959 25038 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test390.prototxt
I0428 19:42:19.379236 25038 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:42:19.379279 25038 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:42:19.379343 25038 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:42:19.379400 25038 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:19.379487 25038 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:42:19.379524 25038 net.cpp:86] Creating Layer mnist
I0428 19:42:19.379532 25038 net.cpp:382] mnist -> data
I0428 19:42:19.379551 25038 net.cpp:382] mnist -> label
I0428 19:42:19.380463 25038 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:42:19.382952 25038 net.cpp:124] Setting up mnist
I0428 19:42:19.382985 25038 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:42:19.382992 25038 net.cpp:131] Top shape: 64 (64)
I0428 19:42:19.382994 25038 net.cpp:139] Memory required for data: 200960
I0428 19:42:19.383000 25038 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:19.383015 25038 net.cpp:86] Creating Layer conv0
I0428 19:42:19.383023 25038 net.cpp:408] conv0 <- data
I0428 19:42:19.383033 25038 net.cpp:382] conv0 -> conv0
I0428 19:42:19.615816 25038 net.cpp:124] Setting up conv0
I0428 19:42:19.615859 25038 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:42:19.615862 25038 net.cpp:139] Memory required for data: 495872
I0428 19:42:19.615876 25038 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:19.615888 25038 net.cpp:86] Creating Layer pool0
I0428 19:42:19.615892 25038 net.cpp:408] pool0 <- conv0
I0428 19:42:19.615897 25038 net.cpp:382] pool0 -> pool0
I0428 19:42:19.615958 25038 net.cpp:124] Setting up pool0
I0428 19:42:19.615973 25038 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:42:19.615990 25038 net.cpp:139] Memory required for data: 569600
I0428 19:42:19.615994 25038 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:19.616005 25038 net.cpp:86] Creating Layer conv1
I0428 19:42:19.616008 25038 net.cpp:408] conv1 <- pool0
I0428 19:42:19.616014 25038 net.cpp:382] conv1 -> conv1
I0428 19:42:19.618867 25038 net.cpp:124] Setting up conv1
I0428 19:42:19.618897 25038 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:42:19.618901 25038 net.cpp:139] Memory required for data: 979200
I0428 19:42:19.618909 25038 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:19.618917 25038 net.cpp:86] Creating Layer pool1
I0428 19:42:19.618921 25038 net.cpp:408] pool1 <- conv1
I0428 19:42:19.618927 25038 net.cpp:382] pool1 -> pool1
I0428 19:42:19.618981 25038 net.cpp:124] Setting up pool1
I0428 19:42:19.618988 25038 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:42:19.618990 25038 net.cpp:139] Memory required for data: 1081600
I0428 19:42:19.618993 25038 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:19.619001 25038 net.cpp:86] Creating Layer ip1
I0428 19:42:19.619005 25038 net.cpp:408] ip1 <- pool1
I0428 19:42:19.619010 25038 net.cpp:382] ip1 -> ip1
I0428 19:42:19.619139 25038 net.cpp:124] Setting up ip1
I0428 19:42:19.619148 25038 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:19.619151 25038 net.cpp:139] Memory required for data: 1084160
I0428 19:42:19.619159 25038 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:19.619165 25038 net.cpp:86] Creating Layer relu1
I0428 19:42:19.619168 25038 net.cpp:408] relu1 <- ip1
I0428 19:42:19.619173 25038 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:19.619362 25038 net.cpp:124] Setting up relu1
I0428 19:42:19.619370 25038 net.cpp:131] Top shape: 64 10 (640)
I0428 19:42:19.619374 25038 net.cpp:139] Memory required for data: 1086720
I0428 19:42:19.619377 25038 layer_factory.hpp:77] Creating layer loss
I0428 19:42:19.619384 25038 net.cpp:86] Creating Layer loss
I0428 19:42:19.619386 25038 net.cpp:408] loss <- ip1
I0428 19:42:19.619390 25038 net.cpp:408] loss <- label
I0428 19:42:19.619395 25038 net.cpp:382] loss -> loss
I0428 19:42:19.619410 25038 layer_factory.hpp:77] Creating layer loss
I0428 19:42:19.620226 25038 net.cpp:124] Setting up loss
I0428 19:42:19.620237 25038 net.cpp:131] Top shape: (1)
I0428 19:42:19.620256 25038 net.cpp:134]     with loss weight 1
I0428 19:42:19.620271 25038 net.cpp:139] Memory required for data: 1086724
I0428 19:42:19.620275 25038 net.cpp:200] loss needs backward computation.
I0428 19:42:19.620278 25038 net.cpp:200] relu1 needs backward computation.
I0428 19:42:19.620281 25038 net.cpp:200] ip1 needs backward computation.
I0428 19:42:19.620285 25038 net.cpp:200] pool1 needs backward computation.
I0428 19:42:19.620287 25038 net.cpp:200] conv1 needs backward computation.
I0428 19:42:19.620290 25038 net.cpp:200] pool0 needs backward computation.
I0428 19:42:19.620293 25038 net.cpp:200] conv0 needs backward computation.
I0428 19:42:19.620296 25038 net.cpp:202] mnist does not need backward computation.
I0428 19:42:19.620299 25038 net.cpp:244] This network produces output loss
I0428 19:42:19.620307 25038 net.cpp:257] Network initialization done.
I0428 19:42:19.620613 25038 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test390.prototxt
I0428 19:42:19.620640 25038 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:42:19.620756 25038 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 19:42:19.620872 25038 layer_factory.hpp:77] Creating layer mnist
I0428 19:42:19.620925 25038 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:42:19.620939 25038 net.cpp:86] Creating Layer mnist
I0428 19:42:19.620944 25038 net.cpp:382] mnist -> data
I0428 19:42:19.620951 25038 net.cpp:382] mnist -> label
I0428 19:42:19.621044 25038 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:42:19.623087 25038 net.cpp:124] Setting up mnist
I0428 19:42:19.623133 25038 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:42:19.623138 25038 net.cpp:131] Top shape: 100 (100)
I0428 19:42:19.623141 25038 net.cpp:139] Memory required for data: 314000
I0428 19:42:19.623144 25038 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:42:19.623150 25038 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:42:19.623154 25038 net.cpp:408] label_mnist_1_split <- label
I0428 19:42:19.623159 25038 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:42:19.623179 25038 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:42:19.623244 25038 net.cpp:124] Setting up label_mnist_1_split
I0428 19:42:19.623248 25038 net.cpp:131] Top shape: 100 (100)
I0428 19:42:19.623252 25038 net.cpp:131] Top shape: 100 (100)
I0428 19:42:19.623255 25038 net.cpp:139] Memory required for data: 314800
I0428 19:42:19.623258 25038 layer_factory.hpp:77] Creating layer conv0
I0428 19:42:19.623267 25038 net.cpp:86] Creating Layer conv0
I0428 19:42:19.623271 25038 net.cpp:408] conv0 <- data
I0428 19:42:19.623277 25038 net.cpp:382] conv0 -> conv0
I0428 19:42:19.624290 25038 net.cpp:124] Setting up conv0
I0428 19:42:19.624320 25038 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:42:19.624323 25038 net.cpp:139] Memory required for data: 775600
I0428 19:42:19.624347 25038 layer_factory.hpp:77] Creating layer pool0
I0428 19:42:19.624354 25038 net.cpp:86] Creating Layer pool0
I0428 19:42:19.624358 25038 net.cpp:408] pool0 <- conv0
I0428 19:42:19.624362 25038 net.cpp:382] pool0 -> pool0
I0428 19:42:19.624418 25038 net.cpp:124] Setting up pool0
I0428 19:42:19.624423 25038 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:42:19.624426 25038 net.cpp:139] Memory required for data: 890800
I0428 19:42:19.624429 25038 layer_factory.hpp:77] Creating layer conv1
I0428 19:42:19.624440 25038 net.cpp:86] Creating Layer conv1
I0428 19:42:19.624444 25038 net.cpp:408] conv1 <- pool0
I0428 19:42:19.624449 25038 net.cpp:382] conv1 -> conv1
I0428 19:42:19.626149 25038 net.cpp:124] Setting up conv1
I0428 19:42:19.626163 25038 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:42:19.626185 25038 net.cpp:139] Memory required for data: 1530800
I0428 19:42:19.626194 25038 layer_factory.hpp:77] Creating layer pool1
I0428 19:42:19.626202 25038 net.cpp:86] Creating Layer pool1
I0428 19:42:19.626216 25038 net.cpp:408] pool1 <- conv1
I0428 19:42:19.626238 25038 net.cpp:382] pool1 -> pool1
I0428 19:42:19.626278 25038 net.cpp:124] Setting up pool1
I0428 19:42:19.626286 25038 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:42:19.626288 25038 net.cpp:139] Memory required for data: 1690800
I0428 19:42:19.626302 25038 layer_factory.hpp:77] Creating layer ip1
I0428 19:42:19.626309 25038 net.cpp:86] Creating Layer ip1
I0428 19:42:19.626312 25038 net.cpp:408] ip1 <- pool1
I0428 19:42:19.626318 25038 net.cpp:382] ip1 -> ip1
I0428 19:42:19.626456 25038 net.cpp:124] Setting up ip1
I0428 19:42:19.626463 25038 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:19.626467 25038 net.cpp:139] Memory required for data: 1694800
I0428 19:42:19.626476 25038 layer_factory.hpp:77] Creating layer relu1
I0428 19:42:19.626480 25038 net.cpp:86] Creating Layer relu1
I0428 19:42:19.626484 25038 net.cpp:408] relu1 <- ip1
I0428 19:42:19.626490 25038 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:42:19.627394 25038 net.cpp:124] Setting up relu1
I0428 19:42:19.627423 25038 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:19.627425 25038 net.cpp:139] Memory required for data: 1698800
I0428 19:42:19.627429 25038 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 19:42:19.627435 25038 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 19:42:19.627440 25038 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 19:42:19.627447 25038 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 19:42:19.627454 25038 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 19:42:19.627501 25038 net.cpp:124] Setting up ip1_relu1_0_split
I0428 19:42:19.627506 25038 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:19.627511 25038 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:42:19.627513 25038 net.cpp:139] Memory required for data: 1706800
I0428 19:42:19.627516 25038 layer_factory.hpp:77] Creating layer accuracy
I0428 19:42:19.627522 25038 net.cpp:86] Creating Layer accuracy
I0428 19:42:19.627526 25038 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 19:42:19.627530 25038 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:42:19.627535 25038 net.cpp:382] accuracy -> accuracy
I0428 19:42:19.627543 25038 net.cpp:124] Setting up accuracy
I0428 19:42:19.627547 25038 net.cpp:131] Top shape: (1)
I0428 19:42:19.627552 25038 net.cpp:139] Memory required for data: 1706804
I0428 19:42:19.627554 25038 layer_factory.hpp:77] Creating layer loss
I0428 19:42:19.627559 25038 net.cpp:86] Creating Layer loss
I0428 19:42:19.627562 25038 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 19:42:19.627566 25038 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:42:19.627570 25038 net.cpp:382] loss -> loss
I0428 19:42:19.627576 25038 layer_factory.hpp:77] Creating layer loss
I0428 19:42:19.627832 25038 net.cpp:124] Setting up loss
I0428 19:42:19.627842 25038 net.cpp:131] Top shape: (1)
I0428 19:42:19.627846 25038 net.cpp:134]     with loss weight 1
I0428 19:42:19.627851 25038 net.cpp:139] Memory required for data: 1706808
I0428 19:42:19.627854 25038 net.cpp:200] loss needs backward computation.
I0428 19:42:19.627858 25038 net.cpp:202] accuracy does not need backward computation.
I0428 19:42:19.627862 25038 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 19:42:19.627866 25038 net.cpp:200] relu1 needs backward computation.
I0428 19:42:19.627878 25038 net.cpp:200] ip1 needs backward computation.
I0428 19:42:19.627882 25038 net.cpp:200] pool1 needs backward computation.
I0428 19:42:19.627887 25038 net.cpp:200] conv1 needs backward computation.
I0428 19:42:19.627889 25038 net.cpp:200] pool0 needs backward computation.
I0428 19:42:19.627892 25038 net.cpp:200] conv0 needs backward computation.
I0428 19:42:19.627897 25038 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:42:19.627900 25038 net.cpp:202] mnist does not need backward computation.
I0428 19:42:19.627904 25038 net.cpp:244] This network produces output accuracy
I0428 19:42:19.627907 25038 net.cpp:244] This network produces output loss
I0428 19:42:19.627926 25038 net.cpp:257] Network initialization done.
I0428 19:42:19.627961 25038 solver.cpp:56] Solver scaffolding done.
I0428 19:42:19.628185 25038 caffe.cpp:248] Starting Optimization
I0428 19:42:19.628190 25038 solver.cpp:273] Solving LeNet
I0428 19:42:19.628193 25038 solver.cpp:274] Learning Rate Policy: inv
I0428 19:42:19.628379 25038 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:42:19.631685 25038 blocking_queue.cpp:49] Waiting for data
I0428 19:42:19.703594 25045 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:19.704016 25038 solver.cpp:398]     Test net output #0: accuracy = 0.0908
I0428 19:42:19.704054 25038 solver.cpp:398]     Test net output #1: loss = 2.30912 (* 1 = 2.30912 loss)
I0428 19:42:19.705087 25038 solver.cpp:219] Iteration 0 (-6.05994e-31 iter/s, 0.0768676s/100 iters), loss = 2.29561
I0428 19:42:19.705128 25038 solver.cpp:238]     Train net output #0: loss = 2.29561 (* 1 = 2.29561 loss)
I0428 19:42:19.705154 25038 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:42:19.787428 25038 solver.cpp:219] Iteration 100 (1215.31 iter/s, 0.0822835s/100 iters), loss = 0.817832
I0428 19:42:19.787469 25038 solver.cpp:238]     Train net output #0: loss = 0.817832 (* 1 = 0.817832 loss)
I0428 19:42:19.787489 25038 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:42:19.856077 25038 solver.cpp:219] Iteration 200 (1457.47 iter/s, 0.0686121s/100 iters), loss = 0.319105
I0428 19:42:19.856118 25038 solver.cpp:238]     Train net output #0: loss = 0.319106 (* 1 = 0.319106 loss)
I0428 19:42:19.856124 25038 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:42:19.923017 25038 solver.cpp:219] Iteration 300 (1495.36 iter/s, 0.0668733s/100 iters), loss = 0.493729
I0428 19:42:19.923056 25038 solver.cpp:238]     Train net output #0: loss = 0.493729 (* 1 = 0.493729 loss)
I0428 19:42:19.923063 25038 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:42:19.987857 25038 solver.cpp:219] Iteration 400 (1543.51 iter/s, 0.0647874s/100 iters), loss = 0.225978
I0428 19:42:19.987897 25038 solver.cpp:238]     Train net output #0: loss = 0.225979 (* 1 = 0.225979 loss)
I0428 19:42:19.987903 25038 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:42:20.053550 25038 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:42:20.118604 25045 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:20.119174 25038 solver.cpp:398]     Test net output #0: accuracy = 0.8604
I0428 19:42:20.119216 25038 solver.cpp:398]     Test net output #1: loss = 0.373552 (* 1 = 0.373552 loss)
I0428 19:42:20.120241 25038 solver.cpp:219] Iteration 500 (755.596 iter/s, 0.132346s/100 iters), loss = 0.389327
I0428 19:42:20.120276 25038 solver.cpp:238]     Train net output #0: loss = 0.389327 (* 1 = 0.389327 loss)
I0428 19:42:20.120286 25038 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:42:20.198096 25038 solver.cpp:219] Iteration 600 (1285.22 iter/s, 0.0778077s/100 iters), loss = 0.518722
I0428 19:42:20.198132 25038 solver.cpp:238]     Train net output #0: loss = 0.518722 (* 1 = 0.518722 loss)
I0428 19:42:20.198139 25038 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:42:20.267024 25038 solver.cpp:219] Iteration 700 (1451.58 iter/s, 0.0688906s/100 iters), loss = 0.54268
I0428 19:42:20.267050 25038 solver.cpp:238]     Train net output #0: loss = 0.54268 (* 1 = 0.54268 loss)
I0428 19:42:20.267056 25038 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:42:20.348274 25038 solver.cpp:219] Iteration 800 (1231.56 iter/s, 0.081198s/100 iters), loss = 0.482324
I0428 19:42:20.348345 25038 solver.cpp:238]     Train net output #0: loss = 0.482324 (* 1 = 0.482324 loss)
I0428 19:42:20.348351 25038 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:42:20.416970 25038 solver.cpp:219] Iteration 900 (1457.1 iter/s, 0.0686295s/100 iters), loss = 0.460845
I0428 19:42:20.417009 25038 solver.cpp:238]     Train net output #0: loss = 0.460845 (* 1 = 0.460845 loss)
I0428 19:42:20.417016 25038 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:42:20.438727 25044 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:20.481452 25038 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:42:20.482175 25038 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:42:20.482600 25038 solver.cpp:311] Iteration 1000, loss = 0.358857
I0428 19:42:20.482632 25038 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:42:20.543668 25045 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:42:20.544221 25038 solver.cpp:398]     Test net output #0: accuracy = 0.8747
I0428 19:42:20.544261 25038 solver.cpp:398]     Test net output #1: loss = 0.320072 (* 1 = 0.320072 loss)
I0428 19:42:20.544268 25038 solver.cpp:316] Optimization Done.
I0428 19:42:20.544273 25038 caffe.cpp:259] Optimization Done.
