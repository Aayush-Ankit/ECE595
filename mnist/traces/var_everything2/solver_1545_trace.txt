I0428 20:30:49.896791  3839 caffe.cpp:218] Using GPUs 0
I0428 20:30:49.936414  3839 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:50.387245  3839 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1545.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:50.387399  3839 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1545.prototxt
I0428 20:30:50.387728  3839 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:50.387747  3839 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:50.387830  3839 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:50.387912  3839 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:50.388020  3839 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:50.388047  3839 net.cpp:86] Creating Layer mnist
I0428 20:30:50.388056  3839 net.cpp:382] mnist -> data
I0428 20:30:50.388080  3839 net.cpp:382] mnist -> label
I0428 20:30:50.389116  3839 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:50.391438  3839 net.cpp:124] Setting up mnist
I0428 20:30:50.391469  3839 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:50.391477  3839 net.cpp:131] Top shape: 64 (64)
I0428 20:30:50.391484  3839 net.cpp:139] Memory required for data: 200960
I0428 20:30:50.391492  3839 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:50.391526  3839 net.cpp:86] Creating Layer conv0
I0428 20:30:50.391553  3839 net.cpp:408] conv0 <- data
I0428 20:30:50.391569  3839 net.cpp:382] conv0 -> conv0
I0428 20:30:50.621999  3839 net.cpp:124] Setting up conv0
I0428 20:30:50.622026  3839 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:50.622031  3839 net.cpp:139] Memory required for data: 14946560
I0428 20:30:50.622051  3839 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:50.622067  3839 net.cpp:86] Creating Layer pool0
I0428 20:30:50.622074  3839 net.cpp:408] pool0 <- conv0
I0428 20:30:50.622082  3839 net.cpp:382] pool0 -> pool0
I0428 20:30:50.622154  3839 net.cpp:124] Setting up pool0
I0428 20:30:50.622164  3839 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:50.622169  3839 net.cpp:139] Memory required for data: 18632960
I0428 20:30:50.622174  3839 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:50.622189  3839 net.cpp:86] Creating Layer conv1
I0428 20:30:50.622195  3839 net.cpp:408] conv1 <- pool0
I0428 20:30:50.622203  3839 net.cpp:382] conv1 -> conv1
I0428 20:30:50.624178  3839 net.cpp:124] Setting up conv1
I0428 20:30:50.624194  3839 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:50.624214  3839 net.cpp:139] Memory required for data: 18796800
I0428 20:30:50.624258  3839 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:50.624274  3839 net.cpp:86] Creating Layer pool1
I0428 20:30:50.624284  3839 net.cpp:408] pool1 <- conv1
I0428 20:30:50.624292  3839 net.cpp:382] pool1 -> pool1
I0428 20:30:50.624333  3839 net.cpp:124] Setting up pool1
I0428 20:30:50.624342  3839 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:50.624347  3839 net.cpp:139] Memory required for data: 18837760
I0428 20:30:50.624352  3839 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:50.624363  3839 net.cpp:86] Creating Layer ip1
I0428 20:30:50.624372  3839 net.cpp:408] ip1 <- pool1
I0428 20:30:50.624380  3839 net.cpp:382] ip1 -> ip1
I0428 20:30:50.624510  3839 net.cpp:124] Setting up ip1
I0428 20:30:50.624518  3839 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:50.624523  3839 net.cpp:139] Memory required for data: 18844160
I0428 20:30:50.624536  3839 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:50.624543  3839 net.cpp:86] Creating Layer relu1
I0428 20:30:50.624552  3839 net.cpp:408] relu1 <- ip1
I0428 20:30:50.624560  3839 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:50.624723  3839 net.cpp:124] Setting up relu1
I0428 20:30:50.624733  3839 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:50.624738  3839 net.cpp:139] Memory required for data: 18850560
I0428 20:30:50.624743  3839 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:50.624754  3839 net.cpp:86] Creating Layer ip2
I0428 20:30:50.624760  3839 net.cpp:408] ip2 <- ip1
I0428 20:30:50.624768  3839 net.cpp:382] ip2 -> ip2
I0428 20:30:50.624874  3839 net.cpp:124] Setting up ip2
I0428 20:30:50.624884  3839 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:50.624889  3839 net.cpp:139] Memory required for data: 18856960
I0428 20:30:50.624899  3839 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:50.624908  3839 net.cpp:86] Creating Layer relu2
I0428 20:30:50.624914  3839 net.cpp:408] relu2 <- ip2
I0428 20:30:50.624922  3839 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:50.625658  3839 net.cpp:124] Setting up relu2
I0428 20:30:50.625686  3839 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:30:50.625691  3839 net.cpp:139] Memory required for data: 18863360
I0428 20:30:50.625697  3839 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:50.625707  3839 net.cpp:86] Creating Layer ip3
I0428 20:30:50.625713  3839 net.cpp:408] ip3 <- ip2
I0428 20:30:50.625722  3839 net.cpp:382] ip3 -> ip3
I0428 20:30:50.625821  3839 net.cpp:124] Setting up ip3
I0428 20:30:50.625831  3839 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:50.625836  3839 net.cpp:139] Memory required for data: 18865920
I0428 20:30:50.625849  3839 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:50.625859  3839 net.cpp:86] Creating Layer relu3
I0428 20:30:50.625864  3839 net.cpp:408] relu3 <- ip3
I0428 20:30:50.625870  3839 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:50.626050  3839 net.cpp:124] Setting up relu3
I0428 20:30:50.626060  3839 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:50.626065  3839 net.cpp:139] Memory required for data: 18868480
I0428 20:30:50.626070  3839 layer_factory.hpp:77] Creating layer loss
I0428 20:30:50.626080  3839 net.cpp:86] Creating Layer loss
I0428 20:30:50.626085  3839 net.cpp:408] loss <- ip3
I0428 20:30:50.626091  3839 net.cpp:408] loss <- label
I0428 20:30:50.626099  3839 net.cpp:382] loss -> loss
I0428 20:30:50.626117  3839 layer_factory.hpp:77] Creating layer loss
I0428 20:30:50.626353  3839 net.cpp:124] Setting up loss
I0428 20:30:50.626363  3839 net.cpp:131] Top shape: (1)
I0428 20:30:50.626368  3839 net.cpp:134]     with loss weight 1
I0428 20:30:50.626387  3839 net.cpp:139] Memory required for data: 18868484
I0428 20:30:50.626394  3839 net.cpp:200] loss needs backward computation.
I0428 20:30:50.626399  3839 net.cpp:200] relu3 needs backward computation.
I0428 20:30:50.626405  3839 net.cpp:200] ip3 needs backward computation.
I0428 20:30:50.626410  3839 net.cpp:200] relu2 needs backward computation.
I0428 20:30:50.626415  3839 net.cpp:200] ip2 needs backward computation.
I0428 20:30:50.626420  3839 net.cpp:200] relu1 needs backward computation.
I0428 20:30:50.626425  3839 net.cpp:200] ip1 needs backward computation.
I0428 20:30:50.626430  3839 net.cpp:200] pool1 needs backward computation.
I0428 20:30:50.626436  3839 net.cpp:200] conv1 needs backward computation.
I0428 20:30:50.626441  3839 net.cpp:200] pool0 needs backward computation.
I0428 20:30:50.626447  3839 net.cpp:200] conv0 needs backward computation.
I0428 20:30:50.626453  3839 net.cpp:202] mnist does not need backward computation.
I0428 20:30:50.626458  3839 net.cpp:244] This network produces output loss
I0428 20:30:50.626472  3839 net.cpp:257] Network initialization done.
I0428 20:30:50.626785  3839 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1545.prototxt
I0428 20:30:50.626817  3839 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:50.626911  3839 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:50.627029  3839 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:50.627085  3839 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:50.627101  3839 net.cpp:86] Creating Layer mnist
I0428 20:30:50.627109  3839 net.cpp:382] mnist -> data
I0428 20:30:50.627120  3839 net.cpp:382] mnist -> label
I0428 20:30:50.627230  3839 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:50.629462  3839 net.cpp:124] Setting up mnist
I0428 20:30:50.629493  3839 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:50.629503  3839 net.cpp:131] Top shape: 100 (100)
I0428 20:30:50.629508  3839 net.cpp:139] Memory required for data: 314000
I0428 20:30:50.629513  3839 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:50.629524  3839 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:50.629530  3839 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:50.629539  3839 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:50.629550  3839 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:50.629670  3839 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:50.629679  3839 net.cpp:131] Top shape: 100 (100)
I0428 20:30:50.629686  3839 net.cpp:131] Top shape: 100 (100)
I0428 20:30:50.629691  3839 net.cpp:139] Memory required for data: 314800
I0428 20:30:50.629696  3839 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:50.629709  3839 net.cpp:86] Creating Layer conv0
I0428 20:30:50.629716  3839 net.cpp:408] conv0 <- data
I0428 20:30:50.629725  3839 net.cpp:382] conv0 -> conv0
I0428 20:30:50.631309  3839 net.cpp:124] Setting up conv0
I0428 20:30:50.631335  3839 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:50.631341  3839 net.cpp:139] Memory required for data: 23354800
I0428 20:30:50.631355  3839 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:50.631363  3839 net.cpp:86] Creating Layer pool0
I0428 20:30:50.631371  3839 net.cpp:408] pool0 <- conv0
I0428 20:30:50.631378  3839 net.cpp:382] pool0 -> pool0
I0428 20:30:50.631418  3839 net.cpp:124] Setting up pool0
I0428 20:30:50.631427  3839 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:50.631431  3839 net.cpp:139] Memory required for data: 29114800
I0428 20:30:50.631436  3839 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:50.631448  3839 net.cpp:86] Creating Layer conv1
I0428 20:30:50.631455  3839 net.cpp:408] conv1 <- pool0
I0428 20:30:50.631464  3839 net.cpp:382] conv1 -> conv1
I0428 20:30:50.633313  3839 net.cpp:124] Setting up conv1
I0428 20:30:50.633329  3839 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:50.633338  3839 net.cpp:139] Memory required for data: 29370800
I0428 20:30:50.633352  3839 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:50.633363  3839 net.cpp:86] Creating Layer pool1
I0428 20:30:50.633371  3839 net.cpp:408] pool1 <- conv1
I0428 20:30:50.633388  3839 net.cpp:382] pool1 -> pool1
I0428 20:30:50.633432  3839 net.cpp:124] Setting up pool1
I0428 20:30:50.633441  3839 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:50.633447  3839 net.cpp:139] Memory required for data: 29434800
I0428 20:30:50.633452  3839 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:50.633462  3839 net.cpp:86] Creating Layer ip1
I0428 20:30:50.633468  3839 net.cpp:408] ip1 <- pool1
I0428 20:30:50.633476  3839 net.cpp:382] ip1 -> ip1
I0428 20:30:50.633623  3839 net.cpp:124] Setting up ip1
I0428 20:30:50.633644  3839 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:50.633651  3839 net.cpp:139] Memory required for data: 29444800
I0428 20:30:50.633662  3839 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:50.633672  3839 net.cpp:86] Creating Layer relu1
I0428 20:30:50.633683  3839 net.cpp:408] relu1 <- ip1
I0428 20:30:50.633690  3839 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:50.633895  3839 net.cpp:124] Setting up relu1
I0428 20:30:50.633905  3839 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:50.633911  3839 net.cpp:139] Memory required for data: 29454800
I0428 20:30:50.633916  3839 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:50.633927  3839 net.cpp:86] Creating Layer ip2
I0428 20:30:50.633934  3839 net.cpp:408] ip2 <- ip1
I0428 20:30:50.633944  3839 net.cpp:382] ip2 -> ip2
I0428 20:30:50.634079  3839 net.cpp:124] Setting up ip2
I0428 20:30:50.634088  3839 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:50.634093  3839 net.cpp:139] Memory required for data: 29464800
I0428 20:30:50.634104  3839 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:50.634111  3839 net.cpp:86] Creating Layer relu2
I0428 20:30:50.634119  3839 net.cpp:408] relu2 <- ip2
I0428 20:30:50.634130  3839 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:50.634348  3839 net.cpp:124] Setting up relu2
I0428 20:30:50.634358  3839 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:30:50.634366  3839 net.cpp:139] Memory required for data: 29474800
I0428 20:30:50.634371  3839 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:50.634380  3839 net.cpp:86] Creating Layer ip3
I0428 20:30:50.634387  3839 net.cpp:408] ip3 <- ip2
I0428 20:30:50.634395  3839 net.cpp:382] ip3 -> ip3
I0428 20:30:50.634500  3839 net.cpp:124] Setting up ip3
I0428 20:30:50.634510  3839 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:50.634516  3839 net.cpp:139] Memory required for data: 29478800
I0428 20:30:50.634533  3839 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:50.634557  3839 net.cpp:86] Creating Layer relu3
I0428 20:30:50.634562  3839 net.cpp:408] relu3 <- ip3
I0428 20:30:50.634569  3839 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:50.635372  3839 net.cpp:124] Setting up relu3
I0428 20:30:50.635385  3839 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:50.635390  3839 net.cpp:139] Memory required for data: 29482800
I0428 20:30:50.635396  3839 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:50.635404  3839 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:50.635409  3839 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:50.635418  3839 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:50.635428  3839 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:50.635471  3839 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:50.635480  3839 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:50.635488  3839 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:50.635493  3839 net.cpp:139] Memory required for data: 29490800
I0428 20:30:50.635498  3839 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:50.635509  3839 net.cpp:86] Creating Layer accuracy
I0428 20:30:50.635516  3839 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:50.635524  3839 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:50.635531  3839 net.cpp:382] accuracy -> accuracy
I0428 20:30:50.635543  3839 net.cpp:124] Setting up accuracy
I0428 20:30:50.635552  3839 net.cpp:131] Top shape: (1)
I0428 20:30:50.635557  3839 net.cpp:139] Memory required for data: 29490804
I0428 20:30:50.635562  3839 layer_factory.hpp:77] Creating layer loss
I0428 20:30:50.635570  3839 net.cpp:86] Creating Layer loss
I0428 20:30:50.635576  3839 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:50.635581  3839 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:50.635591  3839 net.cpp:382] loss -> loss
I0428 20:30:50.635601  3839 layer_factory.hpp:77] Creating layer loss
I0428 20:30:50.635848  3839 net.cpp:124] Setting up loss
I0428 20:30:50.635859  3839 net.cpp:131] Top shape: (1)
I0428 20:30:50.635864  3839 net.cpp:134]     with loss weight 1
I0428 20:30:50.635885  3839 net.cpp:139] Memory required for data: 29490808
I0428 20:30:50.635892  3839 net.cpp:200] loss needs backward computation.
I0428 20:30:50.635898  3839 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:50.635905  3839 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:50.635915  3839 net.cpp:200] relu3 needs backward computation.
I0428 20:30:50.635921  3839 net.cpp:200] ip3 needs backward computation.
I0428 20:30:50.635926  3839 net.cpp:200] relu2 needs backward computation.
I0428 20:30:50.635931  3839 net.cpp:200] ip2 needs backward computation.
I0428 20:30:50.635937  3839 net.cpp:200] relu1 needs backward computation.
I0428 20:30:50.635957  3839 net.cpp:200] ip1 needs backward computation.
I0428 20:30:50.635962  3839 net.cpp:200] pool1 needs backward computation.
I0428 20:30:50.635967  3839 net.cpp:200] conv1 needs backward computation.
I0428 20:30:50.635973  3839 net.cpp:200] pool0 needs backward computation.
I0428 20:30:50.635978  3839 net.cpp:200] conv0 needs backward computation.
I0428 20:30:50.635984  3839 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:50.635992  3839 net.cpp:202] mnist does not need backward computation.
I0428 20:30:50.635996  3839 net.cpp:244] This network produces output accuracy
I0428 20:30:50.636001  3839 net.cpp:244] This network produces output loss
I0428 20:30:50.636018  3839 net.cpp:257] Network initialization done.
I0428 20:30:50.636063  3839 solver.cpp:56] Solver scaffolding done.
I0428 20:30:50.636463  3839 caffe.cpp:248] Starting Optimization
I0428 20:30:50.636469  3839 solver.cpp:273] Solving LeNet
I0428 20:30:50.636474  3839 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:50.637339  3839 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:50.687417  3839 blocking_queue.cpp:49] Waiting for data
I0428 20:30:50.736202  3849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:50.737612  3839 solver.cpp:398]     Test net output #0: accuracy = 0.0857
I0428 20:30:50.737663  3839 solver.cpp:398]     Test net output #1: loss = 2.30448 (* 1 = 2.30448 loss)
I0428 20:30:50.742350  3839 solver.cpp:219] Iteration 0 (-1.53113e-33 iter/s, 0.10584s/100 iters), loss = 2.28859
I0428 20:30:50.742377  3839 solver.cpp:238]     Train net output #0: loss = 2.28859 (* 1 = 2.28859 loss)
I0428 20:30:50.742408  3839 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:50.956521  3839 solver.cpp:219] Iteration 100 (467.031 iter/s, 0.214118s/100 iters), loss = 0.251292
I0428 20:30:50.956573  3839 solver.cpp:238]     Train net output #0: loss = 0.251292 (* 1 = 0.251292 loss)
I0428 20:30:50.956586  3839 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:51.187777  3839 solver.cpp:219] Iteration 200 (432.553 iter/s, 0.231185s/100 iters), loss = 0.158994
I0428 20:30:51.187832  3839 solver.cpp:238]     Train net output #0: loss = 0.158994 (* 1 = 0.158994 loss)
I0428 20:30:51.187847  3839 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:51.415230  3839 solver.cpp:219] Iteration 300 (439.788 iter/s, 0.227382s/100 iters), loss = 0.156211
I0428 20:30:51.415269  3839 solver.cpp:238]     Train net output #0: loss = 0.156211 (* 1 = 0.156211 loss)
I0428 20:30:51.415279  3839 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:51.632163  3839 solver.cpp:219] Iteration 400 (461.093 iter/s, 0.216876s/100 iters), loss = 0.152415
I0428 20:30:51.632211  3839 solver.cpp:238]     Train net output #0: loss = 0.152415 (* 1 = 0.152415 loss)
I0428 20:30:51.632222  3839 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:51.839056  3839 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:51.938113  3849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:51.939790  3839 solver.cpp:398]     Test net output #0: accuracy = 0.9571
I0428 20:30:51.939817  3839 solver.cpp:398]     Test net output #1: loss = 0.139161 (* 1 = 0.139161 loss)
I0428 20:30:51.941864  3839 solver.cpp:219] Iteration 500 (322.96 iter/s, 0.309636s/100 iters), loss = 0.178396
I0428 20:30:51.941912  3839 solver.cpp:238]     Train net output #0: loss = 0.178396 (* 1 = 0.178396 loss)
I0428 20:30:51.941922  3839 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:52.158407  3839 solver.cpp:219] Iteration 600 (461.939 iter/s, 0.216479s/100 iters), loss = 0.0972587
I0428 20:30:52.158447  3839 solver.cpp:238]     Train net output #0: loss = 0.0972586 (* 1 = 0.0972586 loss)
I0428 20:30:52.158457  3839 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:52.375658  3839 solver.cpp:219] Iteration 700 (460.417 iter/s, 0.217195s/100 iters), loss = 0.146073
I0428 20:30:52.375701  3839 solver.cpp:238]     Train net output #0: loss = 0.146073 (* 1 = 0.146073 loss)
I0428 20:30:52.375712  3839 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:52.593448  3839 solver.cpp:219] Iteration 800 (459.286 iter/s, 0.217729s/100 iters), loss = 0.213549
I0428 20:30:52.593490  3839 solver.cpp:238]     Train net output #0: loss = 0.213549 (* 1 = 0.213549 loss)
I0428 20:30:52.593502  3839 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:52.806766  3839 solver.cpp:219] Iteration 900 (468.908 iter/s, 0.213261s/100 iters), loss = 0.175205
I0428 20:30:52.806800  3839 solver.cpp:238]     Train net output #0: loss = 0.175205 (* 1 = 0.175205 loss)
I0428 20:30:52.806809  3839 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:52.881183  3848 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:53.023839  3839 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:53.025918  3839 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:53.027132  3839 solver.cpp:311] Iteration 1000, loss = 0.1364
I0428 20:30:53.027151  3839 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:53.125560  3849 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:53.128167  3839 solver.cpp:398]     Test net output #0: accuracy = 0.9738
I0428 20:30:53.128196  3839 solver.cpp:398]     Test net output #1: loss = 0.0802421 (* 1 = 0.0802421 loss)
I0428 20:30:53.128201  3839 solver.cpp:316] Optimization Done.
I0428 20:30:53.128206  3839 caffe.cpp:259] Optimization Done.
