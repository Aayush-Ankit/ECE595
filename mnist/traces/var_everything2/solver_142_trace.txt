I0428 19:32:05.002152 22750 caffe.cpp:218] Using GPUs 0
I0428 19:32:05.041944 22750 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:05.557873 22750 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test142.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:05.558018 22750 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test142.prototxt
I0428 19:32:05.558387 22750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:05.558401 22750 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:05.558488 22750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:05.558562 22750 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:05.558660 22750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:05.558684 22750 net.cpp:86] Creating Layer mnist
I0428 19:32:05.558691 22750 net.cpp:382] mnist -> data
I0428 19:32:05.558715 22750 net.cpp:382] mnist -> label
I0428 19:32:05.559798 22750 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:05.562477 22750 net.cpp:124] Setting up mnist
I0428 19:32:05.562497 22750 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:05.562503 22750 net.cpp:131] Top shape: 64 (64)
I0428 19:32:05.562506 22750 net.cpp:139] Memory required for data: 200960
I0428 19:32:05.562515 22750 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:05.562546 22750 net.cpp:86] Creating Layer conv0
I0428 19:32:05.562552 22750 net.cpp:408] conv0 <- data
I0428 19:32:05.562564 22750 net.cpp:382] conv0 -> conv0
I0428 19:32:05.850862 22750 net.cpp:124] Setting up conv0
I0428 19:32:05.850893 22750 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:05.850898 22750 net.cpp:139] Memory required for data: 1675520
I0428 19:32:05.850915 22750 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:05.850929 22750 net.cpp:86] Creating Layer pool0
I0428 19:32:05.850957 22750 net.cpp:408] pool0 <- conv0
I0428 19:32:05.850965 22750 net.cpp:382] pool0 -> pool0
I0428 19:32:05.851022 22750 net.cpp:124] Setting up pool0
I0428 19:32:05.851037 22750 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:05.851042 22750 net.cpp:139] Memory required for data: 2044160
I0428 19:32:05.851045 22750 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:05.851054 22750 net.cpp:86] Creating Layer ip1
I0428 19:32:05.851058 22750 net.cpp:408] ip1 <- pool0
I0428 19:32:05.851063 22750 net.cpp:382] ip1 -> ip1
I0428 19:32:05.851428 22750 net.cpp:124] Setting up ip1
I0428 19:32:05.851438 22750 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:05.851441 22750 net.cpp:139] Memory required for data: 2050560
I0428 19:32:05.851449 22750 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:05.851456 22750 net.cpp:86] Creating Layer relu1
I0428 19:32:05.851460 22750 net.cpp:408] relu1 <- ip1
I0428 19:32:05.851465 22750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:05.851655 22750 net.cpp:124] Setting up relu1
I0428 19:32:05.851665 22750 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:05.851670 22750 net.cpp:139] Memory required for data: 2056960
I0428 19:32:05.851672 22750 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:05.851680 22750 net.cpp:86] Creating Layer ip2
I0428 19:32:05.851685 22750 net.cpp:408] ip2 <- ip1
I0428 19:32:05.851689 22750 net.cpp:382] ip2 -> ip2
I0428 19:32:05.851800 22750 net.cpp:124] Setting up ip2
I0428 19:32:05.851809 22750 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:05.851812 22750 net.cpp:139] Memory required for data: 2063360
I0428 19:32:05.851821 22750 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:05.851827 22750 net.cpp:86] Creating Layer relu2
I0428 19:32:05.851830 22750 net.cpp:408] relu2 <- ip2
I0428 19:32:05.851835 22750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:05.852689 22750 net.cpp:124] Setting up relu2
I0428 19:32:05.852704 22750 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:05.852708 22750 net.cpp:139] Memory required for data: 2069760
I0428 19:32:05.852712 22750 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:05.852720 22750 net.cpp:86] Creating Layer ip3
I0428 19:32:05.852725 22750 net.cpp:408] ip3 <- ip2
I0428 19:32:05.852730 22750 net.cpp:382] ip3 -> ip3
I0428 19:32:05.852854 22750 net.cpp:124] Setting up ip3
I0428 19:32:05.852864 22750 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:05.852869 22750 net.cpp:139] Memory required for data: 2072320
I0428 19:32:05.852874 22750 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:05.852882 22750 net.cpp:86] Creating Layer relu3
I0428 19:32:05.852885 22750 net.cpp:408] relu3 <- ip3
I0428 19:32:05.852891 22750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:05.853065 22750 net.cpp:124] Setting up relu3
I0428 19:32:05.853075 22750 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:05.853080 22750 net.cpp:139] Memory required for data: 2074880
I0428 19:32:05.853085 22750 layer_factory.hpp:77] Creating layer loss
I0428 19:32:05.853091 22750 net.cpp:86] Creating Layer loss
I0428 19:32:05.853094 22750 net.cpp:408] loss <- ip3
I0428 19:32:05.853099 22750 net.cpp:408] loss <- label
I0428 19:32:05.853106 22750 net.cpp:382] loss -> loss
I0428 19:32:05.853127 22750 layer_factory.hpp:77] Creating layer loss
I0428 19:32:05.853387 22750 net.cpp:124] Setting up loss
I0428 19:32:05.853399 22750 net.cpp:131] Top shape: (1)
I0428 19:32:05.853404 22750 net.cpp:134]     with loss weight 1
I0428 19:32:05.853420 22750 net.cpp:139] Memory required for data: 2074884
I0428 19:32:05.853425 22750 net.cpp:200] loss needs backward computation.
I0428 19:32:05.853430 22750 net.cpp:200] relu3 needs backward computation.
I0428 19:32:05.853433 22750 net.cpp:200] ip3 needs backward computation.
I0428 19:32:05.853436 22750 net.cpp:200] relu2 needs backward computation.
I0428 19:32:05.853440 22750 net.cpp:200] ip2 needs backward computation.
I0428 19:32:05.853443 22750 net.cpp:200] relu1 needs backward computation.
I0428 19:32:05.853446 22750 net.cpp:200] ip1 needs backward computation.
I0428 19:32:05.853462 22750 net.cpp:200] pool0 needs backward computation.
I0428 19:32:05.853466 22750 net.cpp:200] conv0 needs backward computation.
I0428 19:32:05.853471 22750 net.cpp:202] mnist does not need backward computation.
I0428 19:32:05.853474 22750 net.cpp:244] This network produces output loss
I0428 19:32:05.853483 22750 net.cpp:257] Network initialization done.
I0428 19:32:05.853814 22750 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test142.prototxt
I0428 19:32:05.853844 22750 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:05.853938 22750 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:05.854013 22750 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:05.854070 22750 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:05.854085 22750 net.cpp:86] Creating Layer mnist
I0428 19:32:05.854090 22750 net.cpp:382] mnist -> data
I0428 19:32:05.854099 22750 net.cpp:382] mnist -> label
I0428 19:32:05.854199 22750 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:05.856380 22750 net.cpp:124] Setting up mnist
I0428 19:32:05.856396 22750 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:05.856402 22750 net.cpp:131] Top shape: 100 (100)
I0428 19:32:05.856406 22750 net.cpp:139] Memory required for data: 314000
I0428 19:32:05.856410 22750 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:05.856423 22750 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:05.856427 22750 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:05.856432 22750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:05.856441 22750 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:05.856492 22750 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:05.856499 22750 net.cpp:131] Top shape: 100 (100)
I0428 19:32:05.856503 22750 net.cpp:131] Top shape: 100 (100)
I0428 19:32:05.856506 22750 net.cpp:139] Memory required for data: 314800
I0428 19:32:05.856521 22750 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:05.856533 22750 net.cpp:86] Creating Layer conv0
I0428 19:32:05.856536 22750 net.cpp:408] conv0 <- data
I0428 19:32:05.856544 22750 net.cpp:382] conv0 -> conv0
I0428 19:32:05.858428 22750 net.cpp:124] Setting up conv0
I0428 19:32:05.858444 22750 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:05.858449 22750 net.cpp:139] Memory required for data: 2618800
I0428 19:32:05.858460 22750 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:05.858467 22750 net.cpp:86] Creating Layer pool0
I0428 19:32:05.858471 22750 net.cpp:408] pool0 <- conv0
I0428 19:32:05.858477 22750 net.cpp:382] pool0 -> pool0
I0428 19:32:05.858518 22750 net.cpp:124] Setting up pool0
I0428 19:32:05.858525 22750 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:05.858530 22750 net.cpp:139] Memory required for data: 3194800
I0428 19:32:05.858532 22750 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:05.858541 22750 net.cpp:86] Creating Layer ip1
I0428 19:32:05.858544 22750 net.cpp:408] ip1 <- pool0
I0428 19:32:05.858549 22750 net.cpp:382] ip1 -> ip1
I0428 19:32:05.858908 22750 net.cpp:124] Setting up ip1
I0428 19:32:05.858918 22750 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:05.858922 22750 net.cpp:139] Memory required for data: 3204800
I0428 19:32:05.858930 22750 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:05.858937 22750 net.cpp:86] Creating Layer relu1
I0428 19:32:05.858940 22750 net.cpp:408] relu1 <- ip1
I0428 19:32:05.858944 22750 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:05.859191 22750 net.cpp:124] Setting up relu1
I0428 19:32:05.859205 22750 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:05.859210 22750 net.cpp:139] Memory required for data: 3214800
I0428 19:32:05.859212 22750 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:05.859220 22750 net.cpp:86] Creating Layer ip2
I0428 19:32:05.859222 22750 net.cpp:408] ip2 <- ip1
I0428 19:32:05.859228 22750 net.cpp:382] ip2 -> ip2
I0428 19:32:05.859405 22750 net.cpp:124] Setting up ip2
I0428 19:32:05.859414 22750 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:05.859424 22750 net.cpp:139] Memory required for data: 3224800
I0428 19:32:05.859433 22750 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:05.859439 22750 net.cpp:86] Creating Layer relu2
I0428 19:32:05.859443 22750 net.cpp:408] relu2 <- ip2
I0428 19:32:05.859448 22750 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:05.860365 22750 net.cpp:124] Setting up relu2
I0428 19:32:05.860381 22750 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:05.860385 22750 net.cpp:139] Memory required for data: 3234800
I0428 19:32:05.860390 22750 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:05.860399 22750 net.cpp:86] Creating Layer ip3
I0428 19:32:05.860404 22750 net.cpp:408] ip3 <- ip2
I0428 19:32:05.860409 22750 net.cpp:382] ip3 -> ip3
I0428 19:32:05.860543 22750 net.cpp:124] Setting up ip3
I0428 19:32:05.860551 22750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:05.860554 22750 net.cpp:139] Memory required for data: 3238800
I0428 19:32:05.860561 22750 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:05.860566 22750 net.cpp:86] Creating Layer relu3
I0428 19:32:05.860570 22750 net.cpp:408] relu3 <- ip3
I0428 19:32:05.860575 22750 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:05.860752 22750 net.cpp:124] Setting up relu3
I0428 19:32:05.860761 22750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:05.860765 22750 net.cpp:139] Memory required for data: 3242800
I0428 19:32:05.860769 22750 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:05.860783 22750 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:05.860787 22750 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:05.860793 22750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:05.860800 22750 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:05.860848 22750 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:05.860855 22750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:05.860860 22750 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:05.860877 22750 net.cpp:139] Memory required for data: 3250800
I0428 19:32:05.860882 22750 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:05.860888 22750 net.cpp:86] Creating Layer accuracy
I0428 19:32:05.860891 22750 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:05.860896 22750 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:05.860901 22750 net.cpp:382] accuracy -> accuracy
I0428 19:32:05.860910 22750 net.cpp:124] Setting up accuracy
I0428 19:32:05.860916 22750 net.cpp:131] Top shape: (1)
I0428 19:32:05.860919 22750 net.cpp:139] Memory required for data: 3250804
I0428 19:32:05.860924 22750 layer_factory.hpp:77] Creating layer loss
I0428 19:32:05.860936 22750 net.cpp:86] Creating Layer loss
I0428 19:32:05.860940 22750 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:05.860945 22750 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:05.860950 22750 net.cpp:382] loss -> loss
I0428 19:32:05.860957 22750 layer_factory.hpp:77] Creating layer loss
I0428 19:32:05.861227 22750 net.cpp:124] Setting up loss
I0428 19:32:05.861240 22750 net.cpp:131] Top shape: (1)
I0428 19:32:05.861244 22750 net.cpp:134]     with loss weight 1
I0428 19:32:05.861253 22750 net.cpp:139] Memory required for data: 3250808
I0428 19:32:05.861256 22750 net.cpp:200] loss needs backward computation.
I0428 19:32:05.861261 22750 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:05.861265 22750 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:05.861276 22750 net.cpp:200] relu3 needs backward computation.
I0428 19:32:05.861279 22750 net.cpp:200] ip3 needs backward computation.
I0428 19:32:05.861284 22750 net.cpp:200] relu2 needs backward computation.
I0428 19:32:05.861286 22750 net.cpp:200] ip2 needs backward computation.
I0428 19:32:05.861302 22750 net.cpp:200] relu1 needs backward computation.
I0428 19:32:05.861305 22750 net.cpp:200] ip1 needs backward computation.
I0428 19:32:05.861310 22750 net.cpp:200] pool0 needs backward computation.
I0428 19:32:05.861313 22750 net.cpp:200] conv0 needs backward computation.
I0428 19:32:05.861317 22750 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:05.861322 22750 net.cpp:202] mnist does not need backward computation.
I0428 19:32:05.861325 22750 net.cpp:244] This network produces output accuracy
I0428 19:32:05.861349 22750 net.cpp:244] This network produces output loss
I0428 19:32:05.861361 22750 net.cpp:257] Network initialization done.
I0428 19:32:05.861403 22750 solver.cpp:56] Solver scaffolding done.
I0428 19:32:05.861729 22750 caffe.cpp:248] Starting Optimization
I0428 19:32:05.861737 22750 solver.cpp:273] Solving LeNet
I0428 19:32:05.861742 22750 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:05.862673 22750 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:05.867866 22750 blocking_queue.cpp:49] Waiting for data
I0428 19:32:05.936741 22757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:05.937274 22750 solver.cpp:398]     Test net output #0: accuracy = 0.1057
I0428 19:32:05.937295 22750 solver.cpp:398]     Test net output #1: loss = 2.32998 (* 1 = 2.32998 loss)
I0428 19:32:05.939447 22750 solver.cpp:219] Iteration 0 (-1.19093e-31 iter/s, 0.0776756s/100 iters), loss = 2.33607
I0428 19:32:05.939487 22750 solver.cpp:238]     Train net output #0: loss = 2.33607 (* 1 = 2.33607 loss)
I0428 19:32:05.939501 22750 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:06.003679 22750 solver.cpp:219] Iteration 100 (1558.02 iter/s, 0.0641841s/100 iters), loss = 0.838138
I0428 19:32:06.003702 22750 solver.cpp:238]     Train net output #0: loss = 0.838138 (* 1 = 0.838138 loss)
I0428 19:32:06.003723 22750 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:06.068171 22750 solver.cpp:219] Iteration 200 (1551.35 iter/s, 0.0644598s/100 iters), loss = 0.521292
I0428 19:32:06.068193 22750 solver.cpp:238]     Train net output #0: loss = 0.521292 (* 1 = 0.521292 loss)
I0428 19:32:06.068215 22750 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:06.133258 22750 solver.cpp:219] Iteration 300 (1537.12 iter/s, 0.0650568s/100 iters), loss = 0.633399
I0428 19:32:06.133297 22750 solver.cpp:238]     Train net output #0: loss = 0.633399 (* 1 = 0.633399 loss)
I0428 19:32:06.133306 22750 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:06.197921 22750 solver.cpp:219] Iteration 400 (1547.62 iter/s, 0.0646154s/100 iters), loss = 0.425344
I0428 19:32:06.197944 22750 solver.cpp:238]     Train net output #0: loss = 0.425344 (* 1 = 0.425344 loss)
I0428 19:32:06.197950 22750 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:06.262446 22750 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:06.324795 22757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:06.325338 22750 solver.cpp:398]     Test net output #0: accuracy = 0.8422
I0428 19:32:06.325361 22750 solver.cpp:398]     Test net output #1: loss = 0.446577 (* 1 = 0.446577 loss)
I0428 19:32:06.326004 22750 solver.cpp:219] Iteration 500 (781.05 iter/s, 0.128033s/100 iters), loss = 0.533486
I0428 19:32:06.326026 22750 solver.cpp:238]     Train net output #0: loss = 0.533486 (* 1 = 0.533486 loss)
I0428 19:32:06.326033 22750 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:06.397848 22750 solver.cpp:219] Iteration 600 (1392.58 iter/s, 0.071809s/100 iters), loss = 0.293446
I0428 19:32:06.397871 22750 solver.cpp:238]     Train net output #0: loss = 0.293446 (* 1 = 0.293446 loss)
I0428 19:32:06.397877 22750 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:06.465070 22750 solver.cpp:219] Iteration 700 (1488.32 iter/s, 0.0671898s/100 iters), loss = 0.403002
I0428 19:32:06.465095 22750 solver.cpp:238]     Train net output #0: loss = 0.403002 (* 1 = 0.403002 loss)
I0428 19:32:06.465112 22750 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:06.537380 22750 solver.cpp:219] Iteration 800 (1383.59 iter/s, 0.072276s/100 iters), loss = 0.618927
I0428 19:32:06.537403 22750 solver.cpp:238]     Train net output #0: loss = 0.618927 (* 1 = 0.618927 loss)
I0428 19:32:06.537411 22750 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:06.602321 22750 solver.cpp:219] Iteration 900 (1540.63 iter/s, 0.0649085s/100 iters), loss = 0.433279
I0428 19:32:06.602344 22750 solver.cpp:238]     Train net output #0: loss = 0.433279 (* 1 = 0.433279 loss)
I0428 19:32:06.602354 22750 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:06.624053 22756 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:06.666522 22750 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:06.667613 22750 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:06.668280 22750 solver.cpp:311] Iteration 1000, loss = 0.413838
I0428 19:32:06.668298 22750 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:06.715523 22757 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:06.716073 22750 solver.cpp:398]     Test net output #0: accuracy = 0.8646
I0428 19:32:06.716090 22750 solver.cpp:398]     Test net output #1: loss = 0.364788 (* 1 = 0.364788 loss)
I0428 19:32:06.716094 22750 solver.cpp:316] Optimization Done.
I0428 19:32:06.716097 22750 caffe.cpp:259] Optimization Done.
