I0428 19:36:50.410161 23738 caffe.cpp:218] Using GPUs 0
I0428 19:36:50.449967 23738 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:36:50.913079 23738 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test249.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:36:50.913221 23738 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test249.prototxt
I0428 19:36:50.913535 23738 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:36:50.913552 23738 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:36:50.913628 23738 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:50.913748 23738 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:50.913858 23738 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:36:50.913885 23738 net.cpp:86] Creating Layer mnist
I0428 19:36:50.913897 23738 net.cpp:382] mnist -> data
I0428 19:36:50.913923 23738 net.cpp:382] mnist -> label
I0428 19:36:50.914984 23738 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:36:50.917196 23738 net.cpp:124] Setting up mnist
I0428 19:36:50.917227 23738 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:36:50.917253 23738 net.cpp:131] Top shape: 64 (64)
I0428 19:36:50.917258 23738 net.cpp:139] Memory required for data: 200960
I0428 19:36:50.917282 23738 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:50.917300 23738 net.cpp:86] Creating Layer conv0
I0428 19:36:50.917309 23738 net.cpp:408] conv0 <- data
I0428 19:36:50.917325 23738 net.cpp:382] conv0 -> conv0
I0428 19:36:51.150830 23738 net.cpp:124] Setting up conv0
I0428 19:36:51.150859 23738 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:36:51.150866 23738 net.cpp:139] Memory required for data: 14946560
I0428 19:36:51.150884 23738 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:51.150902 23738 net.cpp:86] Creating Layer pool0
I0428 19:36:51.150926 23738 net.cpp:408] pool0 <- conv0
I0428 19:36:51.150936 23738 net.cpp:382] pool0 -> pool0
I0428 19:36:51.150990 23738 net.cpp:124] Setting up pool0
I0428 19:36:51.150998 23738 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:36:51.151003 23738 net.cpp:139] Memory required for data: 18632960
I0428 19:36:51.151008 23738 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:51.151018 23738 net.cpp:86] Creating Layer ip1
I0428 19:36:51.151023 23738 net.cpp:408] ip1 <- pool0
I0428 19:36:51.151031 23738 net.cpp:382] ip1 -> ip1
I0428 19:36:51.152907 23738 net.cpp:124] Setting up ip1
I0428 19:36:51.152922 23738 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:51.152927 23738 net.cpp:139] Memory required for data: 18635520
I0428 19:36:51.152940 23738 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:51.152952 23738 net.cpp:86] Creating Layer relu1
I0428 19:36:51.152961 23738 net.cpp:408] relu1 <- ip1
I0428 19:36:51.152967 23738 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:51.153156 23738 net.cpp:124] Setting up relu1
I0428 19:36:51.153165 23738 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:51.153170 23738 net.cpp:139] Memory required for data: 18638080
I0428 19:36:51.153175 23738 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:51.153185 23738 net.cpp:86] Creating Layer ip2
I0428 19:36:51.153190 23738 net.cpp:408] ip2 <- ip1
I0428 19:36:51.153201 23738 net.cpp:382] ip2 -> ip2
I0428 19:36:51.153316 23738 net.cpp:124] Setting up ip2
I0428 19:36:51.153324 23738 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:36:51.153328 23738 net.cpp:139] Memory required for data: 18644480
I0428 19:36:51.153339 23738 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:51.153350 23738 net.cpp:86] Creating Layer relu2
I0428 19:36:51.153355 23738 net.cpp:408] relu2 <- ip2
I0428 19:36:51.153362 23738 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:51.154201 23738 net.cpp:124] Setting up relu2
I0428 19:36:51.154214 23738 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:36:51.154219 23738 net.cpp:139] Memory required for data: 18650880
I0428 19:36:51.154224 23738 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:51.154234 23738 net.cpp:86] Creating Layer ip3
I0428 19:36:51.154240 23738 net.cpp:408] ip3 <- ip2
I0428 19:36:51.154248 23738 net.cpp:382] ip3 -> ip3
I0428 19:36:51.154347 23738 net.cpp:124] Setting up ip3
I0428 19:36:51.154371 23738 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:51.154376 23738 net.cpp:139] Memory required for data: 18653440
I0428 19:36:51.154384 23738 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:51.154393 23738 net.cpp:86] Creating Layer relu3
I0428 19:36:51.154402 23738 net.cpp:408] relu3 <- ip3
I0428 19:36:51.154408 23738 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:51.154556 23738 net.cpp:124] Setting up relu3
I0428 19:36:51.154566 23738 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:51.154569 23738 net.cpp:139] Memory required for data: 18656000
I0428 19:36:51.154574 23738 layer_factory.hpp:77] Creating layer loss
I0428 19:36:51.154582 23738 net.cpp:86] Creating Layer loss
I0428 19:36:51.154587 23738 net.cpp:408] loss <- ip3
I0428 19:36:51.154593 23738 net.cpp:408] loss <- label
I0428 19:36:51.154602 23738 net.cpp:382] loss -> loss
I0428 19:36:51.154623 23738 layer_factory.hpp:77] Creating layer loss
I0428 19:36:51.154839 23738 net.cpp:124] Setting up loss
I0428 19:36:51.154848 23738 net.cpp:131] Top shape: (1)
I0428 19:36:51.154852 23738 net.cpp:134]     with loss weight 1
I0428 19:36:51.154872 23738 net.cpp:139] Memory required for data: 18656004
I0428 19:36:51.154878 23738 net.cpp:200] loss needs backward computation.
I0428 19:36:51.154884 23738 net.cpp:200] relu3 needs backward computation.
I0428 19:36:51.154888 23738 net.cpp:200] ip3 needs backward computation.
I0428 19:36:51.154893 23738 net.cpp:200] relu2 needs backward computation.
I0428 19:36:51.154898 23738 net.cpp:200] ip2 needs backward computation.
I0428 19:36:51.154903 23738 net.cpp:200] relu1 needs backward computation.
I0428 19:36:51.154908 23738 net.cpp:200] ip1 needs backward computation.
I0428 19:36:51.154923 23738 net.cpp:200] pool0 needs backward computation.
I0428 19:36:51.154929 23738 net.cpp:200] conv0 needs backward computation.
I0428 19:36:51.154934 23738 net.cpp:202] mnist does not need backward computation.
I0428 19:36:51.154939 23738 net.cpp:244] This network produces output loss
I0428 19:36:51.154952 23738 net.cpp:257] Network initialization done.
I0428 19:36:51.155238 23738 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test249.prototxt
I0428 19:36:51.155269 23738 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:36:51.155352 23738 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:51.155470 23738 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:51.155527 23738 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:36:51.155544 23738 net.cpp:86] Creating Layer mnist
I0428 19:36:51.155551 23738 net.cpp:382] mnist -> data
I0428 19:36:51.155561 23738 net.cpp:382] mnist -> label
I0428 19:36:51.155684 23738 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:36:51.157094 23738 net.cpp:124] Setting up mnist
I0428 19:36:51.157125 23738 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:36:51.157133 23738 net.cpp:131] Top shape: 100 (100)
I0428 19:36:51.157140 23738 net.cpp:139] Memory required for data: 314000
I0428 19:36:51.157145 23738 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:36:51.157186 23738 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:36:51.157209 23738 net.cpp:408] label_mnist_1_split <- label
I0428 19:36:51.157217 23738 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:36:51.157243 23738 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:36:51.157311 23738 net.cpp:124] Setting up label_mnist_1_split
I0428 19:36:51.157331 23738 net.cpp:131] Top shape: 100 (100)
I0428 19:36:51.157337 23738 net.cpp:131] Top shape: 100 (100)
I0428 19:36:51.157342 23738 net.cpp:139] Memory required for data: 314800
I0428 19:36:51.157361 23738 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:51.157376 23738 net.cpp:86] Creating Layer conv0
I0428 19:36:51.157382 23738 net.cpp:408] conv0 <- data
I0428 19:36:51.157390 23738 net.cpp:382] conv0 -> conv0
I0428 19:36:51.158941 23738 net.cpp:124] Setting up conv0
I0428 19:36:51.158956 23738 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:36:51.158962 23738 net.cpp:139] Memory required for data: 23354800
I0428 19:36:51.158975 23738 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:51.158984 23738 net.cpp:86] Creating Layer pool0
I0428 19:36:51.158990 23738 net.cpp:408] pool0 <- conv0
I0428 19:36:51.158998 23738 net.cpp:382] pool0 -> pool0
I0428 19:36:51.159039 23738 net.cpp:124] Setting up pool0
I0428 19:36:51.159046 23738 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:36:51.159051 23738 net.cpp:139] Memory required for data: 29114800
I0428 19:36:51.159056 23738 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:51.159066 23738 net.cpp:86] Creating Layer ip1
I0428 19:36:51.159071 23738 net.cpp:408] ip1 <- pool0
I0428 19:36:51.159080 23738 net.cpp:382] ip1 -> ip1
I0428 19:36:51.161039 23738 net.cpp:124] Setting up ip1
I0428 19:36:51.161069 23738 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:51.161087 23738 net.cpp:139] Memory required for data: 29118800
I0428 19:36:51.161115 23738 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:51.161125 23738 net.cpp:86] Creating Layer relu1
I0428 19:36:51.161131 23738 net.cpp:408] relu1 <- ip1
I0428 19:36:51.161141 23738 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:51.161404 23738 net.cpp:124] Setting up relu1
I0428 19:36:51.161415 23738 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:51.161420 23738 net.cpp:139] Memory required for data: 29122800
I0428 19:36:51.161425 23738 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:51.161437 23738 net.cpp:86] Creating Layer ip2
I0428 19:36:51.161443 23738 net.cpp:408] ip2 <- ip1
I0428 19:36:51.161454 23738 net.cpp:382] ip2 -> ip2
I0428 19:36:51.161583 23738 net.cpp:124] Setting up ip2
I0428 19:36:51.161595 23738 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:36:51.161600 23738 net.cpp:139] Memory required for data: 29132800
I0428 19:36:51.161613 23738 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:51.161623 23738 net.cpp:86] Creating Layer relu2
I0428 19:36:51.161628 23738 net.cpp:408] relu2 <- ip2
I0428 19:36:51.161635 23738 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:51.162509 23738 net.cpp:124] Setting up relu2
I0428 19:36:51.162523 23738 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:36:51.162528 23738 net.cpp:139] Memory required for data: 29142800
I0428 19:36:51.162534 23738 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:51.162547 23738 net.cpp:86] Creating Layer ip3
I0428 19:36:51.162554 23738 net.cpp:408] ip3 <- ip2
I0428 19:36:51.162564 23738 net.cpp:382] ip3 -> ip3
I0428 19:36:51.162703 23738 net.cpp:124] Setting up ip3
I0428 19:36:51.162713 23738 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:51.162717 23738 net.cpp:139] Memory required for data: 29146800
I0428 19:36:51.162726 23738 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:51.162734 23738 net.cpp:86] Creating Layer relu3
I0428 19:36:51.162739 23738 net.cpp:408] relu3 <- ip3
I0428 19:36:51.162747 23738 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:51.162922 23738 net.cpp:124] Setting up relu3
I0428 19:36:51.162932 23738 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:51.162937 23738 net.cpp:139] Memory required for data: 29150800
I0428 19:36:51.162942 23738 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:36:51.162950 23738 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:36:51.162955 23738 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:36:51.162966 23738 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:36:51.162974 23738 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:36:51.163028 23738 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:36:51.163035 23738 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:51.163053 23738 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:51.163059 23738 net.cpp:139] Memory required for data: 29158800
I0428 19:36:51.163064 23738 layer_factory.hpp:77] Creating layer accuracy
I0428 19:36:51.163075 23738 net.cpp:86] Creating Layer accuracy
I0428 19:36:51.163081 23738 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:36:51.163089 23738 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:36:51.163096 23738 net.cpp:382] accuracy -> accuracy
I0428 19:36:51.163107 23738 net.cpp:124] Setting up accuracy
I0428 19:36:51.163130 23738 net.cpp:131] Top shape: (1)
I0428 19:36:51.163134 23738 net.cpp:139] Memory required for data: 29158804
I0428 19:36:51.163139 23738 layer_factory.hpp:77] Creating layer loss
I0428 19:36:51.163148 23738 net.cpp:86] Creating Layer loss
I0428 19:36:51.163153 23738 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:36:51.163159 23738 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:36:51.163166 23738 net.cpp:382] loss -> loss
I0428 19:36:51.163177 23738 layer_factory.hpp:77] Creating layer loss
I0428 19:36:51.163416 23738 net.cpp:124] Setting up loss
I0428 19:36:51.163427 23738 net.cpp:131] Top shape: (1)
I0428 19:36:51.163432 23738 net.cpp:134]     with loss weight 1
I0428 19:36:51.163441 23738 net.cpp:139] Memory required for data: 29158808
I0428 19:36:51.163446 23738 net.cpp:200] loss needs backward computation.
I0428 19:36:51.163453 23738 net.cpp:202] accuracy does not need backward computation.
I0428 19:36:51.163460 23738 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:36:51.163465 23738 net.cpp:200] relu3 needs backward computation.
I0428 19:36:51.163470 23738 net.cpp:200] ip3 needs backward computation.
I0428 19:36:51.163475 23738 net.cpp:200] relu2 needs backward computation.
I0428 19:36:51.163480 23738 net.cpp:200] ip2 needs backward computation.
I0428 19:36:51.163486 23738 net.cpp:200] relu1 needs backward computation.
I0428 19:36:51.163489 23738 net.cpp:200] ip1 needs backward computation.
I0428 19:36:51.163496 23738 net.cpp:200] pool0 needs backward computation.
I0428 19:36:51.163501 23738 net.cpp:200] conv0 needs backward computation.
I0428 19:36:51.163506 23738 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:36:51.163512 23738 net.cpp:202] mnist does not need backward computation.
I0428 19:36:51.163517 23738 net.cpp:244] This network produces output accuracy
I0428 19:36:51.163522 23738 net.cpp:244] This network produces output loss
I0428 19:36:51.163537 23738 net.cpp:257] Network initialization done.
I0428 19:36:51.163578 23738 solver.cpp:56] Solver scaffolding done.
I0428 19:36:51.163848 23738 caffe.cpp:248] Starting Optimization
I0428 19:36:51.163856 23738 solver.cpp:273] Solving LeNet
I0428 19:36:51.163861 23738 solver.cpp:274] Learning Rate Policy: inv
I0428 19:36:51.164675 23738 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:36:51.327342 23745 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:51.332042 23738 solver.cpp:398]     Test net output #0: accuracy = 0.1281
I0428 19:36:51.332067 23738 solver.cpp:398]     Test net output #1: loss = 2.29174 (* 1 = 2.29174 loss)
I0428 19:36:51.337014 23738 solver.cpp:219] Iteration 0 (0 iter/s, 0.173119s/100 iters), loss = 2.31766
I0428 19:36:51.337040 23738 solver.cpp:238]     Train net output #0: loss = 2.31766 (* 1 = 2.31766 loss)
I0428 19:36:51.337072 23738 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:36:51.561859 23738 solver.cpp:219] Iteration 100 (444.839 iter/s, 0.224801s/100 iters), loss = 0.401085
I0428 19:36:51.561889 23738 solver.cpp:238]     Train net output #0: loss = 0.401085 (* 1 = 0.401085 loss)
I0428 19:36:51.561899 23738 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:36:51.787912 23738 solver.cpp:219] Iteration 200 (442.46 iter/s, 0.226009s/100 iters), loss = 0.353557
I0428 19:36:51.787941 23738 solver.cpp:238]     Train net output #0: loss = 0.353557 (* 1 = 0.353557 loss)
I0428 19:36:51.787966 23738 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:36:52.013478 23738 solver.cpp:219] Iteration 300 (443.417 iter/s, 0.225522s/100 iters), loss = 0.295869
I0428 19:36:52.013520 23738 solver.cpp:238]     Train net output #0: loss = 0.295869 (* 1 = 0.295869 loss)
I0428 19:36:52.013530 23738 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:36:52.236678 23738 solver.cpp:219] Iteration 400 (448.139 iter/s, 0.223145s/100 iters), loss = 0.154435
I0428 19:36:52.236706 23738 solver.cpp:238]     Train net output #0: loss = 0.154435 (* 1 = 0.154435 loss)
I0428 19:36:52.236732 23738 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:36:52.460150 23738 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:36:52.629431 23745 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:52.635663 23738 solver.cpp:398]     Test net output #0: accuracy = 0.946
I0428 19:36:52.635702 23738 solver.cpp:398]     Test net output #1: loss = 0.176632 (* 1 = 0.176632 loss)
I0428 19:36:52.637907 23738 solver.cpp:219] Iteration 500 (249.268 iter/s, 0.401175s/100 iters), loss = 0.267265
I0428 19:36:52.637945 23738 solver.cpp:238]     Train net output #0: loss = 0.267265 (* 1 = 0.267265 loss)
I0428 19:36:52.637953 23738 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:36:52.869459 23738 solver.cpp:219] Iteration 600 (431.951 iter/s, 0.231508s/100 iters), loss = 0.157724
I0428 19:36:52.869503 23738 solver.cpp:238]     Train net output #0: loss = 0.157724 (* 1 = 0.157724 loss)
I0428 19:36:52.869511 23738 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:36:53.100847 23738 solver.cpp:219] Iteration 700 (432.274 iter/s, 0.231335s/100 iters), loss = 0.259445
I0428 19:36:53.100878 23738 solver.cpp:238]     Train net output #0: loss = 0.259445 (* 1 = 0.259445 loss)
I0428 19:36:53.100886 23738 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:36:53.331105 23738 solver.cpp:219] Iteration 800 (434.385 iter/s, 0.230211s/100 iters), loss = 0.323282
I0428 19:36:53.331137 23738 solver.cpp:238]     Train net output #0: loss = 0.323282 (* 1 = 0.323282 loss)
I0428 19:36:53.331146 23738 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:36:53.562057 23738 solver.cpp:219] Iteration 900 (433.085 iter/s, 0.230902s/100 iters), loss = 0.177536
I0428 19:36:53.562089 23738 solver.cpp:238]     Train net output #0: loss = 0.177536 (* 1 = 0.177536 loss)
I0428 19:36:53.562098 23738 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:36:53.638957 23744 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:53.790640 23738 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:36:53.794687 23738 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:36:53.797435 23738 solver.cpp:311] Iteration 1000, loss = 0.151994
I0428 19:36:53.797453 23738 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:36:53.958798 23745 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:53.965018 23738 solver.cpp:398]     Test net output #0: accuracy = 0.9615
I0428 19:36:53.965042 23738 solver.cpp:398]     Test net output #1: loss = 0.123415 (* 1 = 0.123415 loss)
I0428 19:36:53.965049 23738 solver.cpp:316] Optimization Done.
I0428 19:36:53.965051 23738 caffe.cpp:259] Optimization Done.
