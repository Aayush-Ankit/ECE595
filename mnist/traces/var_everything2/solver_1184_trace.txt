I0428 20:12:38.676031 32287 caffe.cpp:218] Using GPUs 0
I0428 20:12:38.715307 32287 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:12:39.315706 32287 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1184.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:12:39.315879 32287 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1184.prototxt
I0428 20:12:39.316474 32287 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:12:39.316500 32287 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:12:39.316648 32287 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:39.316761 32287 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:39.316895 32287 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:12:39.316926 32287 net.cpp:86] Creating Layer mnist
I0428 20:12:39.316936 32287 net.cpp:382] mnist -> data
I0428 20:12:39.316967 32287 net.cpp:382] mnist -> label
I0428 20:12:39.318392 32287 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:12:39.321862 32287 net.cpp:124] Setting up mnist
I0428 20:12:39.321884 32287 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:12:39.321893 32287 net.cpp:131] Top shape: 64 (64)
I0428 20:12:39.321899 32287 net.cpp:139] Memory required for data: 200960
I0428 20:12:39.321909 32287 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:39.321969 32287 net.cpp:86] Creating Layer conv0
I0428 20:12:39.321996 32287 net.cpp:408] conv0 <- data
I0428 20:12:39.322012 32287 net.cpp:382] conv0 -> conv0
I0428 20:12:39.573113 32287 net.cpp:124] Setting up conv0
I0428 20:12:39.573156 32287 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:12:39.573175 32287 net.cpp:139] Memory required for data: 3887360
I0428 20:12:39.573204 32287 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:39.573217 32287 net.cpp:86] Creating Layer pool0
I0428 20:12:39.573237 32287 net.cpp:408] pool0 <- conv0
I0428 20:12:39.573256 32287 net.cpp:382] pool0 -> pool0
I0428 20:12:39.573328 32287 net.cpp:124] Setting up pool0
I0428 20:12:39.573334 32287 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:12:39.573338 32287 net.cpp:139] Memory required for data: 4808960
I0428 20:12:39.573340 32287 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:39.573351 32287 net.cpp:86] Creating Layer conv1
I0428 20:12:39.573354 32287 net.cpp:408] conv1 <- pool0
I0428 20:12:39.573359 32287 net.cpp:382] conv1 -> conv1
I0428 20:12:39.575739 32287 net.cpp:124] Setting up conv1
I0428 20:12:39.575752 32287 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:12:39.575755 32287 net.cpp:139] Memory required for data: 6447360
I0428 20:12:39.575763 32287 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:39.575772 32287 net.cpp:86] Creating Layer pool1
I0428 20:12:39.575774 32287 net.cpp:408] pool1 <- conv1
I0428 20:12:39.575779 32287 net.cpp:382] pool1 -> pool1
I0428 20:12:39.575814 32287 net.cpp:124] Setting up pool1
I0428 20:12:39.575821 32287 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:12:39.575839 32287 net.cpp:139] Memory required for data: 6856960
I0428 20:12:39.575842 32287 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:39.575848 32287 net.cpp:86] Creating Layer ip1
I0428 20:12:39.575851 32287 net.cpp:408] ip1 <- pool1
I0428 20:12:39.575856 32287 net.cpp:382] ip1 -> ip1
I0428 20:12:39.576941 32287 net.cpp:124] Setting up ip1
I0428 20:12:39.576953 32287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:39.576972 32287 net.cpp:139] Memory required for data: 6859520
I0428 20:12:39.576980 32287 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:39.576987 32287 net.cpp:86] Creating Layer relu1
I0428 20:12:39.576990 32287 net.cpp:408] relu1 <- ip1
I0428 20:12:39.576997 32287 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:39.577169 32287 net.cpp:124] Setting up relu1
I0428 20:12:39.577178 32287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:39.577181 32287 net.cpp:139] Memory required for data: 6862080
I0428 20:12:39.577184 32287 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:39.577191 32287 net.cpp:86] Creating Layer ip2
I0428 20:12:39.577195 32287 net.cpp:408] ip2 <- ip1
I0428 20:12:39.577199 32287 net.cpp:382] ip2 -> ip2
I0428 20:12:39.577306 32287 net.cpp:124] Setting up ip2
I0428 20:12:39.577313 32287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:39.577316 32287 net.cpp:139] Memory required for data: 6864640
I0428 20:12:39.577322 32287 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:39.577342 32287 net.cpp:86] Creating Layer relu2
I0428 20:12:39.577347 32287 net.cpp:408] relu2 <- ip2
I0428 20:12:39.577353 32287 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:39.578088 32287 net.cpp:124] Setting up relu2
I0428 20:12:39.578099 32287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:39.578117 32287 net.cpp:139] Memory required for data: 6867200
I0428 20:12:39.578121 32287 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:39.578128 32287 net.cpp:86] Creating Layer ip3
I0428 20:12:39.578131 32287 net.cpp:408] ip3 <- ip2
I0428 20:12:39.578137 32287 net.cpp:382] ip3 -> ip3
I0428 20:12:39.578234 32287 net.cpp:124] Setting up ip3
I0428 20:12:39.578241 32287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:39.578244 32287 net.cpp:139] Memory required for data: 6869760
I0428 20:12:39.578253 32287 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:39.578258 32287 net.cpp:86] Creating Layer relu3
I0428 20:12:39.578260 32287 net.cpp:408] relu3 <- ip3
I0428 20:12:39.578264 32287 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:39.578459 32287 net.cpp:124] Setting up relu3
I0428 20:12:39.578467 32287 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:39.578470 32287 net.cpp:139] Memory required for data: 6872320
I0428 20:12:39.578474 32287 layer_factory.hpp:77] Creating layer loss
I0428 20:12:39.578480 32287 net.cpp:86] Creating Layer loss
I0428 20:12:39.578482 32287 net.cpp:408] loss <- ip3
I0428 20:12:39.578486 32287 net.cpp:408] loss <- label
I0428 20:12:39.578492 32287 net.cpp:382] loss -> loss
I0428 20:12:39.578512 32287 layer_factory.hpp:77] Creating layer loss
I0428 20:12:39.578734 32287 net.cpp:124] Setting up loss
I0428 20:12:39.578743 32287 net.cpp:131] Top shape: (1)
I0428 20:12:39.578747 32287 net.cpp:134]     with loss weight 1
I0428 20:12:39.578763 32287 net.cpp:139] Memory required for data: 6872324
I0428 20:12:39.578780 32287 net.cpp:200] loss needs backward computation.
I0428 20:12:39.578785 32287 net.cpp:200] relu3 needs backward computation.
I0428 20:12:39.578788 32287 net.cpp:200] ip3 needs backward computation.
I0428 20:12:39.578791 32287 net.cpp:200] relu2 needs backward computation.
I0428 20:12:39.578794 32287 net.cpp:200] ip2 needs backward computation.
I0428 20:12:39.578796 32287 net.cpp:200] relu1 needs backward computation.
I0428 20:12:39.578799 32287 net.cpp:200] ip1 needs backward computation.
I0428 20:12:39.578802 32287 net.cpp:200] pool1 needs backward computation.
I0428 20:12:39.578805 32287 net.cpp:200] conv1 needs backward computation.
I0428 20:12:39.578807 32287 net.cpp:200] pool0 needs backward computation.
I0428 20:12:39.578810 32287 net.cpp:200] conv0 needs backward computation.
I0428 20:12:39.578814 32287 net.cpp:202] mnist does not need backward computation.
I0428 20:12:39.578817 32287 net.cpp:244] This network produces output loss
I0428 20:12:39.578829 32287 net.cpp:257] Network initialization done.
I0428 20:12:39.579138 32287 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1184.prototxt
I0428 20:12:39.579172 32287 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:12:39.579260 32287 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:39.579340 32287 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:39.579385 32287 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:12:39.579397 32287 net.cpp:86] Creating Layer mnist
I0428 20:12:39.579406 32287 net.cpp:382] mnist -> data
I0428 20:12:39.579412 32287 net.cpp:382] mnist -> label
I0428 20:12:39.579512 32287 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:12:39.581404 32287 net.cpp:124] Setting up mnist
I0428 20:12:39.581447 32287 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:12:39.581452 32287 net.cpp:131] Top shape: 100 (100)
I0428 20:12:39.581455 32287 net.cpp:139] Memory required for data: 314000
I0428 20:12:39.581459 32287 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:12:39.581493 32287 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:12:39.581501 32287 net.cpp:408] label_mnist_1_split <- label
I0428 20:12:39.581521 32287 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:12:39.581528 32287 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:12:39.581672 32287 net.cpp:124] Setting up label_mnist_1_split
I0428 20:12:39.581681 32287 net.cpp:131] Top shape: 100 (100)
I0428 20:12:39.581684 32287 net.cpp:131] Top shape: 100 (100)
I0428 20:12:39.581687 32287 net.cpp:139] Memory required for data: 314800
I0428 20:12:39.581691 32287 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:39.581701 32287 net.cpp:86] Creating Layer conv0
I0428 20:12:39.581707 32287 net.cpp:408] conv0 <- data
I0428 20:12:39.581728 32287 net.cpp:382] conv0 -> conv0
I0428 20:12:39.583395 32287 net.cpp:124] Setting up conv0
I0428 20:12:39.583408 32287 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:12:39.583411 32287 net.cpp:139] Memory required for data: 6074800
I0428 20:12:39.583420 32287 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:39.583427 32287 net.cpp:86] Creating Layer pool0
I0428 20:12:39.583446 32287 net.cpp:408] pool0 <- conv0
I0428 20:12:39.583451 32287 net.cpp:382] pool0 -> pool0
I0428 20:12:39.583489 32287 net.cpp:124] Setting up pool0
I0428 20:12:39.583503 32287 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:12:39.583505 32287 net.cpp:139] Memory required for data: 7514800
I0428 20:12:39.583508 32287 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:39.583518 32287 net.cpp:86] Creating Layer conv1
I0428 20:12:39.583520 32287 net.cpp:408] conv1 <- pool0
I0428 20:12:39.583526 32287 net.cpp:382] conv1 -> conv1
I0428 20:12:39.585502 32287 net.cpp:124] Setting up conv1
I0428 20:12:39.585518 32287 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:12:39.585522 32287 net.cpp:139] Memory required for data: 10074800
I0428 20:12:39.585532 32287 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:39.585539 32287 net.cpp:86] Creating Layer pool1
I0428 20:12:39.585542 32287 net.cpp:408] pool1 <- conv1
I0428 20:12:39.585554 32287 net.cpp:382] pool1 -> pool1
I0428 20:12:39.585594 32287 net.cpp:124] Setting up pool1
I0428 20:12:39.585602 32287 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:12:39.585604 32287 net.cpp:139] Memory required for data: 10714800
I0428 20:12:39.585608 32287 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:39.585614 32287 net.cpp:86] Creating Layer ip1
I0428 20:12:39.585618 32287 net.cpp:408] ip1 <- pool1
I0428 20:12:39.585623 32287 net.cpp:382] ip1 -> ip1
I0428 20:12:39.585800 32287 net.cpp:124] Setting up ip1
I0428 20:12:39.585809 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.585822 32287 net.cpp:139] Memory required for data: 10718800
I0428 20:12:39.585830 32287 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:39.585837 32287 net.cpp:86] Creating Layer relu1
I0428 20:12:39.585841 32287 net.cpp:408] relu1 <- ip1
I0428 20:12:39.585845 32287 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:39.586006 32287 net.cpp:124] Setting up relu1
I0428 20:12:39.586015 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.586035 32287 net.cpp:139] Memory required for data: 10722800
I0428 20:12:39.586045 32287 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:39.586056 32287 net.cpp:86] Creating Layer ip2
I0428 20:12:39.586060 32287 net.cpp:408] ip2 <- ip1
I0428 20:12:39.586066 32287 net.cpp:382] ip2 -> ip2
I0428 20:12:39.586168 32287 net.cpp:124] Setting up ip2
I0428 20:12:39.586176 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.586179 32287 net.cpp:139] Memory required for data: 10726800
I0428 20:12:39.586185 32287 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:39.586190 32287 net.cpp:86] Creating Layer relu2
I0428 20:12:39.586194 32287 net.cpp:408] relu2 <- ip2
I0428 20:12:39.586199 32287 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:39.586467 32287 net.cpp:124] Setting up relu2
I0428 20:12:39.586477 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.586480 32287 net.cpp:139] Memory required for data: 10730800
I0428 20:12:39.586484 32287 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:39.586489 32287 net.cpp:86] Creating Layer ip3
I0428 20:12:39.586493 32287 net.cpp:408] ip3 <- ip2
I0428 20:12:39.586498 32287 net.cpp:382] ip3 -> ip3
I0428 20:12:39.586606 32287 net.cpp:124] Setting up ip3
I0428 20:12:39.586614 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.586617 32287 net.cpp:139] Memory required for data: 10734800
I0428 20:12:39.586627 32287 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:39.586630 32287 net.cpp:86] Creating Layer relu3
I0428 20:12:39.586633 32287 net.cpp:408] relu3 <- ip3
I0428 20:12:39.586638 32287 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:39.587548 32287 net.cpp:124] Setting up relu3
I0428 20:12:39.587559 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.587563 32287 net.cpp:139] Memory required for data: 10738800
I0428 20:12:39.587566 32287 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:12:39.587573 32287 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:12:39.587575 32287 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:12:39.587581 32287 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:12:39.587587 32287 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:12:39.587636 32287 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:12:39.587644 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.587648 32287 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:39.587651 32287 net.cpp:139] Memory required for data: 10746800
I0428 20:12:39.587653 32287 layer_factory.hpp:77] Creating layer accuracy
I0428 20:12:39.587661 32287 net.cpp:86] Creating Layer accuracy
I0428 20:12:39.587663 32287 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:12:39.587668 32287 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:12:39.587673 32287 net.cpp:382] accuracy -> accuracy
I0428 20:12:39.587682 32287 net.cpp:124] Setting up accuracy
I0428 20:12:39.587685 32287 net.cpp:131] Top shape: (1)
I0428 20:12:39.587688 32287 net.cpp:139] Memory required for data: 10746804
I0428 20:12:39.587692 32287 layer_factory.hpp:77] Creating layer loss
I0428 20:12:39.587695 32287 net.cpp:86] Creating Layer loss
I0428 20:12:39.587704 32287 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:12:39.587708 32287 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:12:39.587716 32287 net.cpp:382] loss -> loss
I0428 20:12:39.587723 32287 layer_factory.hpp:77] Creating layer loss
I0428 20:12:39.587976 32287 net.cpp:124] Setting up loss
I0428 20:12:39.587987 32287 net.cpp:131] Top shape: (1)
I0428 20:12:39.587990 32287 net.cpp:134]     with loss weight 1
I0428 20:12:39.588007 32287 net.cpp:139] Memory required for data: 10746808
I0428 20:12:39.588011 32287 net.cpp:200] loss needs backward computation.
I0428 20:12:39.588016 32287 net.cpp:202] accuracy does not need backward computation.
I0428 20:12:39.588021 32287 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:12:39.588023 32287 net.cpp:200] relu3 needs backward computation.
I0428 20:12:39.588027 32287 net.cpp:200] ip3 needs backward computation.
I0428 20:12:39.588029 32287 net.cpp:200] relu2 needs backward computation.
I0428 20:12:39.588032 32287 net.cpp:200] ip2 needs backward computation.
I0428 20:12:39.588037 32287 net.cpp:200] relu1 needs backward computation.
I0428 20:12:39.588039 32287 net.cpp:200] ip1 needs backward computation.
I0428 20:12:39.588042 32287 net.cpp:200] pool1 needs backward computation.
I0428 20:12:39.588045 32287 net.cpp:200] conv1 needs backward computation.
I0428 20:12:39.588048 32287 net.cpp:200] pool0 needs backward computation.
I0428 20:12:39.588052 32287 net.cpp:200] conv0 needs backward computation.
I0428 20:12:39.588057 32287 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:12:39.588060 32287 net.cpp:202] mnist does not need backward computation.
I0428 20:12:39.588063 32287 net.cpp:244] This network produces output accuracy
I0428 20:12:39.588066 32287 net.cpp:244] This network produces output loss
I0428 20:12:39.588076 32287 net.cpp:257] Network initialization done.
I0428 20:12:39.588119 32287 solver.cpp:56] Solver scaffolding done.
I0428 20:12:39.588516 32287 caffe.cpp:248] Starting Optimization
I0428 20:12:39.588537 32287 solver.cpp:273] Solving LeNet
I0428 20:12:39.588539 32287 solver.cpp:274] Learning Rate Policy: inv
I0428 20:12:39.589345 32287 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:12:39.596581 32287 blocking_queue.cpp:49] Waiting for data
I0428 20:12:39.670452 32294 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:39.671304 32287 solver.cpp:398]     Test net output #0: accuracy = 0.1061
I0428 20:12:39.671340 32287 solver.cpp:398]     Test net output #1: loss = 2.32642 (* 1 = 2.32642 loss)
I0428 20:12:39.676103 32287 solver.cpp:219] Iteration 0 (-2.02833e-31 iter/s, 0.0875192s/100 iters), loss = 2.30979
I0428 20:12:39.676128 32287 solver.cpp:238]     Train net output #0: loss = 2.30979 (* 1 = 2.30979 loss)
I0428 20:12:39.676141 32287 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:39.832726 32287 solver.cpp:219] Iteration 100 (638.648 iter/s, 0.156581s/100 iters), loss = 0.73025
I0428 20:12:39.832767 32287 solver.cpp:238]     Train net output #0: loss = 0.73025 (* 1 = 0.73025 loss)
I0428 20:12:39.832774 32287 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:40.016058 32287 solver.cpp:219] Iteration 200 (545.627 iter/s, 0.183276s/100 iters), loss = 0.268481
I0428 20:12:40.016094 32287 solver.cpp:238]     Train net output #0: loss = 0.268481 (* 1 = 0.268481 loss)
I0428 20:12:40.016104 32287 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:40.224575 32287 solver.cpp:219] Iteration 300 (479.704 iter/s, 0.208462s/100 iters), loss = 0.249997
I0428 20:12:40.224627 32287 solver.cpp:238]     Train net output #0: loss = 0.249997 (* 1 = 0.249997 loss)
I0428 20:12:40.224642 32287 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:40.440935 32287 solver.cpp:219] Iteration 400 (462.342 iter/s, 0.21629s/100 iters), loss = 0.140726
I0428 20:12:40.440987 32287 solver.cpp:238]     Train net output #0: loss = 0.140726 (* 1 = 0.140726 loss)
I0428 20:12:40.441004 32287 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:40.656132 32287 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:40.733357 32294 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:40.735883 32287 solver.cpp:398]     Test net output #0: accuracy = 0.9394
I0428 20:12:40.735913 32287 solver.cpp:398]     Test net output #1: loss = 0.196733 (* 1 = 0.196733 loss)
I0428 20:12:40.737748 32287 solver.cpp:219] Iteration 500 (336.991 iter/s, 0.296744s/100 iters), loss = 0.171678
I0428 20:12:40.737802 32287 solver.cpp:238]     Train net output #0: loss = 0.171678 (* 1 = 0.171678 loss)
I0428 20:12:40.737813 32287 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:40.942852 32287 solver.cpp:219] Iteration 600 (487.733 iter/s, 0.20503s/100 iters), loss = 0.120681
I0428 20:12:40.942910 32287 solver.cpp:238]     Train net output #0: loss = 0.120681 (* 1 = 0.120681 loss)
I0428 20:12:40.942926 32287 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:41.163959 32287 solver.cpp:219] Iteration 700 (452.422 iter/s, 0.221032s/100 iters), loss = 0.168132
I0428 20:12:41.164012 32287 solver.cpp:238]     Train net output #0: loss = 0.168132 (* 1 = 0.168132 loss)
I0428 20:12:41.164027 32287 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:41.380327 32287 solver.cpp:219] Iteration 800 (462.324 iter/s, 0.216298s/100 iters), loss = 0.377721
I0428 20:12:41.380378 32287 solver.cpp:238]     Train net output #0: loss = 0.377721 (* 1 = 0.377721 loss)
I0428 20:12:41.380393 32287 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:41.597338 32287 solver.cpp:219] Iteration 900 (460.974 iter/s, 0.216932s/100 iters), loss = 0.163701
I0428 20:12:41.597393 32287 solver.cpp:238]     Train net output #0: loss = 0.163701 (* 1 = 0.163701 loss)
I0428 20:12:41.597407 32287 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:41.670122 32293 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:41.815896 32287 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:41.819456 32287 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:41.821208 32287 solver.cpp:311] Iteration 1000, loss = 0.0428218
I0428 20:12:41.821238 32287 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:41.901398 32294 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:41.902263 32287 solver.cpp:398]     Test net output #0: accuracy = 0.9732
I0428 20:12:41.902290 32287 solver.cpp:398]     Test net output #1: loss = 0.0899423 (* 1 = 0.0899423 loss)
I0428 20:12:41.902299 32287 solver.cpp:316] Optimization Done.
I0428 20:12:41.902304 32287 caffe.cpp:259] Optimization Done.
