I0428 20:07:08.009661 31033 caffe.cpp:218] Using GPUs 0
I0428 20:07:08.045796 31033 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:08.511345 31033 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1047.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:08.511520 31033 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1047.prototxt
I0428 20:07:08.511867 31033 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:08.511900 31033 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:08.511982 31033 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:08.512045 31033 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:08.512125 31033 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:08.512143 31033 net.cpp:86] Creating Layer mnist
I0428 20:07:08.512151 31033 net.cpp:382] mnist -> data
I0428 20:07:08.512169 31033 net.cpp:382] mnist -> label
I0428 20:07:08.513200 31033 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:08.515445 31033 net.cpp:124] Setting up mnist
I0428 20:07:08.515493 31033 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:08.515498 31033 net.cpp:131] Top shape: 64 (64)
I0428 20:07:08.515501 31033 net.cpp:139] Memory required for data: 200960
I0428 20:07:08.515507 31033 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:08.515522 31033 net.cpp:86] Creating Layer conv0
I0428 20:07:08.515538 31033 net.cpp:408] conv0 <- data
I0428 20:07:08.515550 31033 net.cpp:382] conv0 -> conv0
I0428 20:07:08.751819 31033 net.cpp:124] Setting up conv0
I0428 20:07:08.751860 31033 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:08.751865 31033 net.cpp:139] Memory required for data: 3887360
I0428 20:07:08.751880 31033 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:08.751907 31033 net.cpp:86] Creating Layer pool0
I0428 20:07:08.751925 31033 net.cpp:408] pool0 <- conv0
I0428 20:07:08.751930 31033 net.cpp:382] pool0 -> pool0
I0428 20:07:08.751989 31033 net.cpp:124] Setting up pool0
I0428 20:07:08.752002 31033 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:08.752005 31033 net.cpp:139] Memory required for data: 4808960
I0428 20:07:08.752008 31033 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:08.752018 31033 net.cpp:86] Creating Layer conv1
I0428 20:07:08.752022 31033 net.cpp:408] conv1 <- pool0
I0428 20:07:08.752027 31033 net.cpp:382] conv1 -> conv1
I0428 20:07:08.754752 31033 net.cpp:124] Setting up conv1
I0428 20:07:08.754782 31033 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:08.754786 31033 net.cpp:139] Memory required for data: 4890880
I0428 20:07:08.754793 31033 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:08.754817 31033 net.cpp:86] Creating Layer pool1
I0428 20:07:08.754819 31033 net.cpp:408] pool1 <- conv1
I0428 20:07:08.754824 31033 net.cpp:382] pool1 -> pool1
I0428 20:07:08.754875 31033 net.cpp:124] Setting up pool1
I0428 20:07:08.754881 31033 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:08.754884 31033 net.cpp:139] Memory required for data: 4911360
I0428 20:07:08.754887 31033 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:08.754894 31033 net.cpp:86] Creating Layer ip1
I0428 20:07:08.754910 31033 net.cpp:408] ip1 <- pool1
I0428 20:07:08.754915 31033 net.cpp:382] ip1 -> ip1
I0428 20:07:08.755023 31033 net.cpp:124] Setting up ip1
I0428 20:07:08.755030 31033 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:08.755033 31033 net.cpp:139] Memory required for data: 4924160
I0428 20:07:08.755040 31033 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:08.755045 31033 net.cpp:86] Creating Layer relu1
I0428 20:07:08.755048 31033 net.cpp:408] relu1 <- ip1
I0428 20:07:08.755053 31033 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:08.755221 31033 net.cpp:124] Setting up relu1
I0428 20:07:08.755229 31033 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:08.755233 31033 net.cpp:139] Memory required for data: 4936960
I0428 20:07:08.755235 31033 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:08.755240 31033 net.cpp:86] Creating Layer ip2
I0428 20:07:08.755244 31033 net.cpp:408] ip2 <- ip1
I0428 20:07:08.755249 31033 net.cpp:382] ip2 -> ip2
I0428 20:07:08.755339 31033 net.cpp:124] Setting up ip2
I0428 20:07:08.755347 31033 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:08.755349 31033 net.cpp:139] Memory required for data: 4943360
I0428 20:07:08.755354 31033 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:08.755360 31033 net.cpp:86] Creating Layer relu2
I0428 20:07:08.755362 31033 net.cpp:408] relu2 <- ip2
I0428 20:07:08.755367 31033 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:08.756114 31033 net.cpp:124] Setting up relu2
I0428 20:07:08.756126 31033 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:08.756145 31033 net.cpp:139] Memory required for data: 4949760
I0428 20:07:08.756148 31033 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:08.756155 31033 net.cpp:86] Creating Layer ip3
I0428 20:07:08.756158 31033 net.cpp:408] ip3 <- ip2
I0428 20:07:08.756163 31033 net.cpp:382] ip3 -> ip3
I0428 20:07:08.756270 31033 net.cpp:124] Setting up ip3
I0428 20:07:08.756278 31033 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:08.756280 31033 net.cpp:139] Memory required for data: 4952320
I0428 20:07:08.756289 31033 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:08.756294 31033 net.cpp:86] Creating Layer relu3
I0428 20:07:08.756311 31033 net.cpp:408] relu3 <- ip3
I0428 20:07:08.756315 31033 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:08.756472 31033 net.cpp:124] Setting up relu3
I0428 20:07:08.756480 31033 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:08.756484 31033 net.cpp:139] Memory required for data: 4954880
I0428 20:07:08.756486 31033 layer_factory.hpp:77] Creating layer loss
I0428 20:07:08.756494 31033 net.cpp:86] Creating Layer loss
I0428 20:07:08.756496 31033 net.cpp:408] loss <- ip3
I0428 20:07:08.756500 31033 net.cpp:408] loss <- label
I0428 20:07:08.756505 31033 net.cpp:382] loss -> loss
I0428 20:07:08.756522 31033 layer_factory.hpp:77] Creating layer loss
I0428 20:07:08.756747 31033 net.cpp:124] Setting up loss
I0428 20:07:08.756757 31033 net.cpp:131] Top shape: (1)
I0428 20:07:08.756759 31033 net.cpp:134]     with loss weight 1
I0428 20:07:08.756772 31033 net.cpp:139] Memory required for data: 4954884
I0428 20:07:08.756777 31033 net.cpp:200] loss needs backward computation.
I0428 20:07:08.756779 31033 net.cpp:200] relu3 needs backward computation.
I0428 20:07:08.756783 31033 net.cpp:200] ip3 needs backward computation.
I0428 20:07:08.756785 31033 net.cpp:200] relu2 needs backward computation.
I0428 20:07:08.756788 31033 net.cpp:200] ip2 needs backward computation.
I0428 20:07:08.756790 31033 net.cpp:200] relu1 needs backward computation.
I0428 20:07:08.756793 31033 net.cpp:200] ip1 needs backward computation.
I0428 20:07:08.756795 31033 net.cpp:200] pool1 needs backward computation.
I0428 20:07:08.756798 31033 net.cpp:200] conv1 needs backward computation.
I0428 20:07:08.756801 31033 net.cpp:200] pool0 needs backward computation.
I0428 20:07:08.756804 31033 net.cpp:200] conv0 needs backward computation.
I0428 20:07:08.756808 31033 net.cpp:202] mnist does not need backward computation.
I0428 20:07:08.756819 31033 net.cpp:244] This network produces output loss
I0428 20:07:08.756844 31033 net.cpp:257] Network initialization done.
I0428 20:07:08.757355 31033 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1047.prototxt
I0428 20:07:08.757400 31033 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:08.757489 31033 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:08.757587 31033 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:08.757632 31033 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:08.757644 31033 net.cpp:86] Creating Layer mnist
I0428 20:07:08.757649 31033 net.cpp:382] mnist -> data
I0428 20:07:08.757657 31033 net.cpp:382] mnist -> label
I0428 20:07:08.757735 31033 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:08.759829 31033 net.cpp:124] Setting up mnist
I0428 20:07:08.759856 31033 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:08.759876 31033 net.cpp:131] Top shape: 100 (100)
I0428 20:07:08.759879 31033 net.cpp:139] Memory required for data: 314000
I0428 20:07:08.759883 31033 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:08.759889 31033 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:08.759892 31033 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:08.759897 31033 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:08.759903 31033 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:08.759953 31033 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:08.759958 31033 net.cpp:131] Top shape: 100 (100)
I0428 20:07:08.759963 31033 net.cpp:131] Top shape: 100 (100)
I0428 20:07:08.759964 31033 net.cpp:139] Memory required for data: 314800
I0428 20:07:08.759968 31033 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:08.759975 31033 net.cpp:86] Creating Layer conv0
I0428 20:07:08.759979 31033 net.cpp:408] conv0 <- data
I0428 20:07:08.759982 31033 net.cpp:382] conv0 -> conv0
I0428 20:07:08.761744 31033 net.cpp:124] Setting up conv0
I0428 20:07:08.761772 31033 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:08.761776 31033 net.cpp:139] Memory required for data: 6074800
I0428 20:07:08.761785 31033 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:08.761791 31033 net.cpp:86] Creating Layer pool0
I0428 20:07:08.761795 31033 net.cpp:408] pool0 <- conv0
I0428 20:07:08.761800 31033 net.cpp:382] pool0 -> pool0
I0428 20:07:08.761850 31033 net.cpp:124] Setting up pool0
I0428 20:07:08.761855 31033 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:08.761858 31033 net.cpp:139] Memory required for data: 7514800
I0428 20:07:08.761860 31033 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:08.761869 31033 net.cpp:86] Creating Layer conv1
I0428 20:07:08.761873 31033 net.cpp:408] conv1 <- pool0
I0428 20:07:08.761878 31033 net.cpp:382] conv1 -> conv1
I0428 20:07:08.763980 31033 net.cpp:124] Setting up conv1
I0428 20:07:08.763993 31033 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:08.764011 31033 net.cpp:139] Memory required for data: 7642800
I0428 20:07:08.764020 31033 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:08.764029 31033 net.cpp:86] Creating Layer pool1
I0428 20:07:08.764032 31033 net.cpp:408] pool1 <- conv1
I0428 20:07:08.764037 31033 net.cpp:382] pool1 -> pool1
I0428 20:07:08.764101 31033 net.cpp:124] Setting up pool1
I0428 20:07:08.764108 31033 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:08.764111 31033 net.cpp:139] Memory required for data: 7674800
I0428 20:07:08.764114 31033 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:08.764120 31033 net.cpp:86] Creating Layer ip1
I0428 20:07:08.764123 31033 net.cpp:408] ip1 <- pool1
I0428 20:07:08.764130 31033 net.cpp:382] ip1 -> ip1
I0428 20:07:08.764256 31033 net.cpp:124] Setting up ip1
I0428 20:07:08.764266 31033 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:08.764279 31033 net.cpp:139] Memory required for data: 7694800
I0428 20:07:08.764287 31033 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:08.764292 31033 net.cpp:86] Creating Layer relu1
I0428 20:07:08.764295 31033 net.cpp:408] relu1 <- ip1
I0428 20:07:08.764302 31033 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:08.764474 31033 net.cpp:124] Setting up relu1
I0428 20:07:08.764483 31033 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:08.764487 31033 net.cpp:139] Memory required for data: 7714800
I0428 20:07:08.764489 31033 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:08.764498 31033 net.cpp:86] Creating Layer ip2
I0428 20:07:08.764502 31033 net.cpp:408] ip2 <- ip1
I0428 20:07:08.764506 31033 net.cpp:382] ip2 -> ip2
I0428 20:07:08.764619 31033 net.cpp:124] Setting up ip2
I0428 20:07:08.764626 31033 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:08.764629 31033 net.cpp:139] Memory required for data: 7724800
I0428 20:07:08.764636 31033 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:08.764641 31033 net.cpp:86] Creating Layer relu2
I0428 20:07:08.764643 31033 net.cpp:408] relu2 <- ip2
I0428 20:07:08.764648 31033 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:08.764807 31033 net.cpp:124] Setting up relu2
I0428 20:07:08.764842 31033 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:08.764847 31033 net.cpp:139] Memory required for data: 7734800
I0428 20:07:08.764853 31033 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:08.764861 31033 net.cpp:86] Creating Layer ip3
I0428 20:07:08.764865 31033 net.cpp:408] ip3 <- ip2
I0428 20:07:08.764870 31033 net.cpp:382] ip3 -> ip3
I0428 20:07:08.764988 31033 net.cpp:124] Setting up ip3
I0428 20:07:08.764995 31033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:08.764998 31033 net.cpp:139] Memory required for data: 7738800
I0428 20:07:08.765008 31033 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:08.765013 31033 net.cpp:86] Creating Layer relu3
I0428 20:07:08.765017 31033 net.cpp:408] relu3 <- ip3
I0428 20:07:08.765020 31033 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:08.765853 31033 net.cpp:124] Setting up relu3
I0428 20:07:08.765866 31033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:08.765884 31033 net.cpp:139] Memory required for data: 7742800
I0428 20:07:08.765887 31033 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:08.765894 31033 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:08.765899 31033 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:08.765904 31033 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:08.765910 31033 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:08.765949 31033 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:08.765954 31033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:08.765957 31033 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:08.765960 31033 net.cpp:139] Memory required for data: 7750800
I0428 20:07:08.765964 31033 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:08.765974 31033 net.cpp:86] Creating Layer accuracy
I0428 20:07:08.765976 31033 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:08.765980 31033 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:08.765985 31033 net.cpp:382] accuracy -> accuracy
I0428 20:07:08.765991 31033 net.cpp:124] Setting up accuracy
I0428 20:07:08.765995 31033 net.cpp:131] Top shape: (1)
I0428 20:07:08.765998 31033 net.cpp:139] Memory required for data: 7750804
I0428 20:07:08.766000 31033 layer_factory.hpp:77] Creating layer loss
I0428 20:07:08.766005 31033 net.cpp:86] Creating Layer loss
I0428 20:07:08.766008 31033 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:08.766011 31033 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:08.766017 31033 net.cpp:382] loss -> loss
I0428 20:07:08.766036 31033 layer_factory.hpp:77] Creating layer loss
I0428 20:07:08.766293 31033 net.cpp:124] Setting up loss
I0428 20:07:08.766304 31033 net.cpp:131] Top shape: (1)
I0428 20:07:08.766306 31033 net.cpp:134]     with loss weight 1
I0428 20:07:08.766312 31033 net.cpp:139] Memory required for data: 7750808
I0428 20:07:08.766324 31033 net.cpp:200] loss needs backward computation.
I0428 20:07:08.766330 31033 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:08.766332 31033 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:08.766336 31033 net.cpp:200] relu3 needs backward computation.
I0428 20:07:08.766338 31033 net.cpp:200] ip3 needs backward computation.
I0428 20:07:08.766341 31033 net.cpp:200] relu2 needs backward computation.
I0428 20:07:08.766345 31033 net.cpp:200] ip2 needs backward computation.
I0428 20:07:08.766347 31033 net.cpp:200] relu1 needs backward computation.
I0428 20:07:08.766350 31033 net.cpp:200] ip1 needs backward computation.
I0428 20:07:08.766353 31033 net.cpp:200] pool1 needs backward computation.
I0428 20:07:08.766356 31033 net.cpp:200] conv1 needs backward computation.
I0428 20:07:08.766366 31033 net.cpp:200] pool0 needs backward computation.
I0428 20:07:08.766369 31033 net.cpp:200] conv0 needs backward computation.
I0428 20:07:08.766373 31033 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:08.766376 31033 net.cpp:202] mnist does not need backward computation.
I0428 20:07:08.766379 31033 net.cpp:244] This network produces output accuracy
I0428 20:07:08.766383 31033 net.cpp:244] This network produces output loss
I0428 20:07:08.766394 31033 net.cpp:257] Network initialization done.
I0428 20:07:08.766436 31033 solver.cpp:56] Solver scaffolding done.
I0428 20:07:08.766809 31033 caffe.cpp:248] Starting Optimization
I0428 20:07:08.766815 31033 solver.cpp:273] Solving LeNet
I0428 20:07:08.766818 31033 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:08.767663 31033 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:08.772783 31033 blocking_queue.cpp:49] Waiting for data
I0428 20:07:08.844163 31040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:08.844758 31033 solver.cpp:398]     Test net output #0: accuracy = 0.1112
I0428 20:07:08.844797 31033 solver.cpp:398]     Test net output #1: loss = 2.30205 (* 1 = 2.30205 loss)
I0428 20:07:08.848261 31033 solver.cpp:219] Iteration 0 (-1.15051e-30 iter/s, 0.0813926s/100 iters), loss = 2.28933
I0428 20:07:08.848299 31033 solver.cpp:238]     Train net output #0: loss = 2.28933 (* 1 = 2.28933 loss)
I0428 20:07:08.848309 31033 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:08.938326 31033 solver.cpp:219] Iteration 100 (1110.74 iter/s, 0.0900299s/100 iters), loss = 0.649061
I0428 20:07:08.938365 31033 solver.cpp:238]     Train net output #0: loss = 0.649061 (* 1 = 0.649061 loss)
I0428 20:07:08.938386 31033 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:09.026226 31033 solver.cpp:219] Iteration 200 (1138.32 iter/s, 0.087849s/100 iters), loss = 0.279339
I0428 20:07:09.026273 31033 solver.cpp:238]     Train net output #0: loss = 0.279339 (* 1 = 0.279339 loss)
I0428 20:07:09.026281 31033 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:09.115339 31033 solver.cpp:219] Iteration 300 (1122.86 iter/s, 0.0890583s/100 iters), loss = 0.285057
I0428 20:07:09.115378 31033 solver.cpp:238]     Train net output #0: loss = 0.285057 (* 1 = 0.285057 loss)
I0428 20:07:09.115384 31033 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:09.202219 31033 solver.cpp:219] Iteration 400 (1151.46 iter/s, 0.0868465s/100 iters), loss = 0.168706
I0428 20:07:09.202257 31033 solver.cpp:238]     Train net output #0: loss = 0.168706 (* 1 = 0.168706 loss)
I0428 20:07:09.202280 31033 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:09.290076 31033 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:09.344404 31040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:09.345047 31033 solver.cpp:398]     Test net output #0: accuracy = 0.9572
I0428 20:07:09.345080 31033 solver.cpp:398]     Test net output #1: loss = 0.135098 (* 1 = 0.135098 loss)
I0428 20:07:09.346041 31033 solver.cpp:219] Iteration 500 (695.478 iter/s, 0.143786s/100 iters), loss = 0.148051
I0428 20:07:09.346093 31033 solver.cpp:238]     Train net output #0: loss = 0.148051 (* 1 = 0.148051 loss)
I0428 20:07:09.346101 31033 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:09.441910 31033 solver.cpp:219] Iteration 600 (1043.88 iter/s, 0.0957962s/100 iters), loss = 0.129044
I0428 20:07:09.441936 31033 solver.cpp:238]     Train net output #0: loss = 0.129045 (* 1 = 0.129045 loss)
I0428 20:07:09.441942 31033 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:09.536170 31033 solver.cpp:219] Iteration 700 (1061.31 iter/s, 0.0942234s/100 iters), loss = 0.244781
I0428 20:07:09.536195 31033 solver.cpp:238]     Train net output #0: loss = 0.244781 (* 1 = 0.244781 loss)
I0428 20:07:09.536201 31033 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:09.624919 31033 solver.cpp:219] Iteration 800 (1127.23 iter/s, 0.0887132s/100 iters), loss = 0.259812
I0428 20:07:09.624960 31033 solver.cpp:238]     Train net output #0: loss = 0.259812 (* 1 = 0.259812 loss)
I0428 20:07:09.624967 31033 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:09.713197 31033 solver.cpp:219] Iteration 900 (1133.43 iter/s, 0.0882278s/100 iters), loss = 0.173257
I0428 20:07:09.713222 31033 solver.cpp:238]     Train net output #0: loss = 0.173257 (* 1 = 0.173257 loss)
I0428 20:07:09.713228 31033 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:09.743768 31039 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:09.804010 31033 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:09.804869 31033 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:09.805444 31033 solver.cpp:311] Iteration 1000, loss = 0.0536964
I0428 20:07:09.805461 31033 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:09.881990 31040 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:09.882607 31033 solver.cpp:398]     Test net output #0: accuracy = 0.9698
I0428 20:07:09.882629 31033 solver.cpp:398]     Test net output #1: loss = 0.093745 (* 1 = 0.093745 loss)
I0428 20:07:09.882634 31033 solver.cpp:316] Optimization Done.
I0428 20:07:09.882638 31033 caffe.cpp:259] Optimization Done.
