I0428 20:18:17.480629  1093 caffe.cpp:218] Using GPUs 0
I0428 20:18:17.518494  1093 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:18.030617  1093 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1315.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:18.030752  1093 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1315.prototxt
I0428 20:18:18.031167  1093 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:18.031186  1093 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:18.031288  1093 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:18.031368  1093 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:18.031471  1093 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:18.031494  1093 net.cpp:86] Creating Layer mnist
I0428 20:18:18.031503  1093 net.cpp:382] mnist -> data
I0428 20:18:18.031525  1093 net.cpp:382] mnist -> label
I0428 20:18:18.032615  1093 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:18.035084  1093 net.cpp:124] Setting up mnist
I0428 20:18:18.035101  1093 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:18.035107  1093 net.cpp:131] Top shape: 64 (64)
I0428 20:18:18.035111  1093 net.cpp:139] Memory required for data: 200960
I0428 20:18:18.035117  1093 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:18.035157  1093 net.cpp:86] Creating Layer conv0
I0428 20:18:18.035178  1093 net.cpp:408] conv0 <- data
I0428 20:18:18.035192  1093 net.cpp:382] conv0 -> conv0
I0428 20:18:18.317154  1093 net.cpp:124] Setting up conv0
I0428 20:18:18.317178  1093 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:18.317183  1093 net.cpp:139] Memory required for data: 7573760
I0428 20:18:18.317196  1093 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:18.317210  1093 net.cpp:86] Creating Layer pool0
I0428 20:18:18.317214  1093 net.cpp:408] pool0 <- conv0
I0428 20:18:18.317219  1093 net.cpp:382] pool0 -> pool0
I0428 20:18:18.317279  1093 net.cpp:124] Setting up pool0
I0428 20:18:18.317286  1093 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:18.317287  1093 net.cpp:139] Memory required for data: 9416960
I0428 20:18:18.317291  1093 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:18.317301  1093 net.cpp:86] Creating Layer conv1
I0428 20:18:18.317306  1093 net.cpp:408] conv1 <- pool0
I0428 20:18:18.317309  1093 net.cpp:382] conv1 -> conv1
I0428 20:18:18.320066  1093 net.cpp:124] Setting up conv1
I0428 20:18:18.320080  1093 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:18.320099  1093 net.cpp:139] Memory required for data: 9580800
I0428 20:18:18.320122  1093 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:18.320129  1093 net.cpp:86] Creating Layer pool1
I0428 20:18:18.320132  1093 net.cpp:408] pool1 <- conv1
I0428 20:18:18.320137  1093 net.cpp:382] pool1 -> pool1
I0428 20:18:18.320188  1093 net.cpp:124] Setting up pool1
I0428 20:18:18.320204  1093 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:18.320206  1093 net.cpp:139] Memory required for data: 9621760
I0428 20:18:18.320209  1093 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:18.320215  1093 net.cpp:86] Creating Layer ip1
I0428 20:18:18.320219  1093 net.cpp:408] ip1 <- pool1
I0428 20:18:18.320222  1093 net.cpp:382] ip1 -> ip1
I0428 20:18:18.320343  1093 net.cpp:124] Setting up ip1
I0428 20:18:18.320350  1093 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:18.320369  1093 net.cpp:139] Memory required for data: 9628160
I0428 20:18:18.320376  1093 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:18.320381  1093 net.cpp:86] Creating Layer relu1
I0428 20:18:18.320384  1093 net.cpp:408] relu1 <- ip1
I0428 20:18:18.320389  1093 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:18.320588  1093 net.cpp:124] Setting up relu1
I0428 20:18:18.320596  1093 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:18.320600  1093 net.cpp:139] Memory required for data: 9634560
I0428 20:18:18.320603  1093 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:18.320610  1093 net.cpp:86] Creating Layer ip2
I0428 20:18:18.320613  1093 net.cpp:408] ip2 <- ip1
I0428 20:18:18.320634  1093 net.cpp:382] ip2 -> ip2
I0428 20:18:18.320752  1093 net.cpp:124] Setting up ip2
I0428 20:18:18.320773  1093 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:18.320776  1093 net.cpp:139] Memory required for data: 9647360
I0428 20:18:18.320781  1093 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:18.320787  1093 net.cpp:86] Creating Layer relu2
I0428 20:18:18.320791  1093 net.cpp:408] relu2 <- ip2
I0428 20:18:18.320794  1093 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:18.321650  1093 net.cpp:124] Setting up relu2
I0428 20:18:18.321662  1093 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:18:18.321681  1093 net.cpp:139] Memory required for data: 9660160
I0428 20:18:18.321684  1093 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:18.321691  1093 net.cpp:86] Creating Layer ip3
I0428 20:18:18.321694  1093 net.cpp:408] ip3 <- ip2
I0428 20:18:18.321701  1093 net.cpp:382] ip3 -> ip3
I0428 20:18:18.321799  1093 net.cpp:124] Setting up ip3
I0428 20:18:18.321806  1093 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:18.321810  1093 net.cpp:139] Memory required for data: 9662720
I0428 20:18:18.321816  1093 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:18.321821  1093 net.cpp:86] Creating Layer relu3
I0428 20:18:18.321825  1093 net.cpp:408] relu3 <- ip3
I0428 20:18:18.321828  1093 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:18.321997  1093 net.cpp:124] Setting up relu3
I0428 20:18:18.322005  1093 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:18.322008  1093 net.cpp:139] Memory required for data: 9665280
I0428 20:18:18.322011  1093 layer_factory.hpp:77] Creating layer loss
I0428 20:18:18.322017  1093 net.cpp:86] Creating Layer loss
I0428 20:18:18.322021  1093 net.cpp:408] loss <- ip3
I0428 20:18:18.322023  1093 net.cpp:408] loss <- label
I0428 20:18:18.322028  1093 net.cpp:382] loss -> loss
I0428 20:18:18.322042  1093 layer_factory.hpp:77] Creating layer loss
I0428 20:18:18.322278  1093 net.cpp:124] Setting up loss
I0428 20:18:18.322288  1093 net.cpp:131] Top shape: (1)
I0428 20:18:18.322290  1093 net.cpp:134]     with loss weight 1
I0428 20:18:18.322304  1093 net.cpp:139] Memory required for data: 9665284
I0428 20:18:18.322309  1093 net.cpp:200] loss needs backward computation.
I0428 20:18:18.322311  1093 net.cpp:200] relu3 needs backward computation.
I0428 20:18:18.322314  1093 net.cpp:200] ip3 needs backward computation.
I0428 20:18:18.322317  1093 net.cpp:200] relu2 needs backward computation.
I0428 20:18:18.322319  1093 net.cpp:200] ip2 needs backward computation.
I0428 20:18:18.322322  1093 net.cpp:200] relu1 needs backward computation.
I0428 20:18:18.322325  1093 net.cpp:200] ip1 needs backward computation.
I0428 20:18:18.322329  1093 net.cpp:200] pool1 needs backward computation.
I0428 20:18:18.322331  1093 net.cpp:200] conv1 needs backward computation.
I0428 20:18:18.322335  1093 net.cpp:200] pool0 needs backward computation.
I0428 20:18:18.322337  1093 net.cpp:200] conv0 needs backward computation.
I0428 20:18:18.322340  1093 net.cpp:202] mnist does not need backward computation.
I0428 20:18:18.322357  1093 net.cpp:244] This network produces output loss
I0428 20:18:18.322366  1093 net.cpp:257] Network initialization done.
I0428 20:18:18.322727  1093 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1315.prototxt
I0428 20:18:18.322770  1093 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:18.322861  1093 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:18.322955  1093 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:18.323015  1093 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:18.323027  1093 net.cpp:86] Creating Layer mnist
I0428 20:18:18.323032  1093 net.cpp:382] mnist -> data
I0428 20:18:18.323040  1093 net.cpp:382] mnist -> label
I0428 20:18:18.323118  1093 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:18.325284  1093 net.cpp:124] Setting up mnist
I0428 20:18:18.325314  1093 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:18.325318  1093 net.cpp:131] Top shape: 100 (100)
I0428 20:18:18.325321  1093 net.cpp:139] Memory required for data: 314000
I0428 20:18:18.325325  1093 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:18.325331  1093 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:18.325335  1093 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:18.325340  1093 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:18.325345  1093 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:18.325395  1093 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:18.325400  1093 net.cpp:131] Top shape: 100 (100)
I0428 20:18:18.325404  1093 net.cpp:131] Top shape: 100 (100)
I0428 20:18:18.325407  1093 net.cpp:139] Memory required for data: 314800
I0428 20:18:18.325409  1093 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:18.325417  1093 net.cpp:86] Creating Layer conv0
I0428 20:18:18.325420  1093 net.cpp:408] conv0 <- data
I0428 20:18:18.325424  1093 net.cpp:382] conv0 -> conv0
I0428 20:18:18.327173  1093 net.cpp:124] Setting up conv0
I0428 20:18:18.327186  1093 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:18.327190  1093 net.cpp:139] Memory required for data: 11834800
I0428 20:18:18.327198  1093 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:18.327204  1093 net.cpp:86] Creating Layer pool0
I0428 20:18:18.327222  1093 net.cpp:408] pool0 <- conv0
I0428 20:18:18.327227  1093 net.cpp:382] pool0 -> pool0
I0428 20:18:18.327261  1093 net.cpp:124] Setting up pool0
I0428 20:18:18.327266  1093 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:18.327268  1093 net.cpp:139] Memory required for data: 14714800
I0428 20:18:18.327271  1093 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:18.327280  1093 net.cpp:86] Creating Layer conv1
I0428 20:18:18.327282  1093 net.cpp:408] conv1 <- pool0
I0428 20:18:18.327287  1093 net.cpp:382] conv1 -> conv1
I0428 20:18:18.328837  1093 net.cpp:124] Setting up conv1
I0428 20:18:18.328866  1093 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:18.328871  1093 net.cpp:139] Memory required for data: 14970800
I0428 20:18:18.328881  1093 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:18.328893  1093 net.cpp:86] Creating Layer pool1
I0428 20:18:18.328897  1093 net.cpp:408] pool1 <- conv1
I0428 20:18:18.328908  1093 net.cpp:382] pool1 -> pool1
I0428 20:18:18.328944  1093 net.cpp:124] Setting up pool1
I0428 20:18:18.328950  1093 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:18.328953  1093 net.cpp:139] Memory required for data: 15034800
I0428 20:18:18.328956  1093 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:18.328963  1093 net.cpp:86] Creating Layer ip1
I0428 20:18:18.328971  1093 net.cpp:408] ip1 <- pool1
I0428 20:18:18.328976  1093 net.cpp:382] ip1 -> ip1
I0428 20:18:18.329107  1093 net.cpp:124] Setting up ip1
I0428 20:18:18.329128  1093 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:18.329152  1093 net.cpp:139] Memory required for data: 15044800
I0428 20:18:18.329160  1093 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:18.329185  1093 net.cpp:86] Creating Layer relu1
I0428 20:18:18.329188  1093 net.cpp:408] relu1 <- ip1
I0428 20:18:18.329197  1093 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:18.329391  1093 net.cpp:124] Setting up relu1
I0428 20:18:18.329401  1093 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:18.329404  1093 net.cpp:139] Memory required for data: 15054800
I0428 20:18:18.329407  1093 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:18.329414  1093 net.cpp:86] Creating Layer ip2
I0428 20:18:18.329417  1093 net.cpp:408] ip2 <- ip1
I0428 20:18:18.329422  1093 net.cpp:382] ip2 -> ip2
I0428 20:18:18.329530  1093 net.cpp:124] Setting up ip2
I0428 20:18:18.329538  1093 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:18.329541  1093 net.cpp:139] Memory required for data: 15074800
I0428 20:18:18.329546  1093 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:18.329566  1093 net.cpp:86] Creating Layer relu2
I0428 20:18:18.329589  1093 net.cpp:408] relu2 <- ip2
I0428 20:18:18.329593  1093 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:18.329766  1093 net.cpp:124] Setting up relu2
I0428 20:18:18.329776  1093 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:18:18.329778  1093 net.cpp:139] Memory required for data: 15094800
I0428 20:18:18.329782  1093 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:18.329787  1093 net.cpp:86] Creating Layer ip3
I0428 20:18:18.329789  1093 net.cpp:408] ip3 <- ip2
I0428 20:18:18.329794  1093 net.cpp:382] ip3 -> ip3
I0428 20:18:18.329921  1093 net.cpp:124] Setting up ip3
I0428 20:18:18.329942  1093 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:18.329946  1093 net.cpp:139] Memory required for data: 15098800
I0428 20:18:18.329968  1093 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:18.329974  1093 net.cpp:86] Creating Layer relu3
I0428 20:18:18.329977  1093 net.cpp:408] relu3 <- ip3
I0428 20:18:18.329980  1093 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:18.330809  1093 net.cpp:124] Setting up relu3
I0428 20:18:18.330822  1093 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:18.330826  1093 net.cpp:139] Memory required for data: 15102800
I0428 20:18:18.330829  1093 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:18.330834  1093 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:18.330837  1093 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:18.330842  1093 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:18.330848  1093 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:18.330891  1093 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:18.330896  1093 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:18.330899  1093 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:18.330902  1093 net.cpp:139] Memory required for data: 15110800
I0428 20:18:18.330904  1093 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:18.330909  1093 net.cpp:86] Creating Layer accuracy
I0428 20:18:18.330914  1093 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:18.330917  1093 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:18.330922  1093 net.cpp:382] accuracy -> accuracy
I0428 20:18:18.330929  1093 net.cpp:124] Setting up accuracy
I0428 20:18:18.330938  1093 net.cpp:131] Top shape: (1)
I0428 20:18:18.330941  1093 net.cpp:139] Memory required for data: 15110804
I0428 20:18:18.330945  1093 layer_factory.hpp:77] Creating layer loss
I0428 20:18:18.330948  1093 net.cpp:86] Creating Layer loss
I0428 20:18:18.330951  1093 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:18.330956  1093 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:18.330960  1093 net.cpp:382] loss -> loss
I0428 20:18:18.330965  1093 layer_factory.hpp:77] Creating layer loss
I0428 20:18:18.331207  1093 net.cpp:124] Setting up loss
I0428 20:18:18.331215  1093 net.cpp:131] Top shape: (1)
I0428 20:18:18.331218  1093 net.cpp:134]     with loss weight 1
I0428 20:18:18.331233  1093 net.cpp:139] Memory required for data: 15110808
I0428 20:18:18.331236  1093 net.cpp:200] loss needs backward computation.
I0428 20:18:18.331239  1093 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:18.331243  1093 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:18.331245  1093 net.cpp:200] relu3 needs backward computation.
I0428 20:18:18.331259  1093 net.cpp:200] ip3 needs backward computation.
I0428 20:18:18.331262  1093 net.cpp:200] relu2 needs backward computation.
I0428 20:18:18.331265  1093 net.cpp:200] ip2 needs backward computation.
I0428 20:18:18.331267  1093 net.cpp:200] relu1 needs backward computation.
I0428 20:18:18.331275  1093 net.cpp:200] ip1 needs backward computation.
I0428 20:18:18.331277  1093 net.cpp:200] pool1 needs backward computation.
I0428 20:18:18.331280  1093 net.cpp:200] conv1 needs backward computation.
I0428 20:18:18.331284  1093 net.cpp:200] pool0 needs backward computation.
I0428 20:18:18.331291  1093 net.cpp:200] conv0 needs backward computation.
I0428 20:18:18.331295  1093 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:18.331297  1093 net.cpp:202] mnist does not need backward computation.
I0428 20:18:18.331300  1093 net.cpp:244] This network produces output accuracy
I0428 20:18:18.331303  1093 net.cpp:244] This network produces output loss
I0428 20:18:18.331321  1093 net.cpp:257] Network initialization done.
I0428 20:18:18.331365  1093 solver.cpp:56] Solver scaffolding done.
I0428 20:18:18.331713  1093 caffe.cpp:248] Starting Optimization
I0428 20:18:18.331719  1093 solver.cpp:273] Solving LeNet
I0428 20:18:18.331722  1093 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:18.332514  1093 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:18.338435  1093 blocking_queue.cpp:49] Waiting for data
I0428 20:18:18.407186  1100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:18.408020  1093 solver.cpp:398]     Test net output #0: accuracy = 0.1215
I0428 20:18:18.408036  1093 solver.cpp:398]     Test net output #1: loss = 2.31783 (* 1 = 2.31783 loss)
I0428 20:18:18.412310  1093 solver.cpp:219] Iteration 0 (0 iter/s, 0.0805632s/100 iters), loss = 2.31651
I0428 20:18:18.412333  1093 solver.cpp:238]     Train net output #0: loss = 2.31651 (* 1 = 2.31651 loss)
I0428 20:18:18.412343  1093 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:18.534271  1093 solver.cpp:219] Iteration 100 (820.179 iter/s, 0.121925s/100 iters), loss = 1.42313
I0428 20:18:18.534301  1093 solver.cpp:238]     Train net output #0: loss = 1.42313 (* 1 = 1.42313 loss)
I0428 20:18:18.534307  1093 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:18.653750  1093 solver.cpp:219] Iteration 200 (837.252 iter/s, 0.119438s/100 iters), loss = 1.28192
I0428 20:18:18.653776  1093 solver.cpp:238]     Train net output #0: loss = 1.28192 (* 1 = 1.28192 loss)
I0428 20:18:18.653797  1093 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:18.771625  1093 solver.cpp:219] Iteration 300 (848.623 iter/s, 0.117838s/100 iters), loss = 1.39969
I0428 20:18:18.771647  1093 solver.cpp:238]     Train net output #0: loss = 1.39969 (* 1 = 1.39969 loss)
I0428 20:18:18.771653  1093 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:18.890223  1093 solver.cpp:219] Iteration 400 (843.427 iter/s, 0.118564s/100 iters), loss = 0.916878
I0428 20:18:18.890246  1093 solver.cpp:238]     Train net output #0: loss = 0.916878 (* 1 = 0.916878 loss)
I0428 20:18:18.890252  1093 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:19.009338  1093 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:19.074749  1100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:19.076949  1093 solver.cpp:398]     Test net output #0: accuracy = 0.6819
I0428 20:18:19.076969  1093 solver.cpp:398]     Test net output #1: loss = 0.827676 (* 1 = 0.827676 loss)
I0428 20:18:19.078109  1093 solver.cpp:219] Iteration 500 (532.343 iter/s, 0.187849s/100 iters), loss = 0.856411
I0428 20:18:19.078146  1093 solver.cpp:238]     Train net output #0: loss = 0.856411 (* 1 = 0.856411 loss)
I0428 20:18:19.078155  1093 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:19.197183  1093 solver.cpp:219] Iteration 600 (840.148 iter/s, 0.119027s/100 iters), loss = 0.658246
I0428 20:18:19.197207  1093 solver.cpp:238]     Train net output #0: loss = 0.658246 (* 1 = 0.658246 loss)
I0428 20:18:19.197214  1093 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:19.314724  1093 solver.cpp:219] Iteration 700 (851.027 iter/s, 0.117505s/100 iters), loss = 0.871964
I0428 20:18:19.314749  1093 solver.cpp:238]     Train net output #0: loss = 0.871964 (* 1 = 0.871964 loss)
I0428 20:18:19.314769  1093 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:19.432067  1093 solver.cpp:219] Iteration 800 (852.454 iter/s, 0.117308s/100 iters), loss = 0.960193
I0428 20:18:19.432091  1093 solver.cpp:238]     Train net output #0: loss = 0.960193 (* 1 = 0.960193 loss)
I0428 20:18:19.432113  1093 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:19.549856  1093 solver.cpp:219] Iteration 900 (849.229 iter/s, 0.117754s/100 iters), loss = 0.518868
I0428 20:18:19.549880  1093 solver.cpp:238]     Train net output #0: loss = 0.518868 (* 1 = 0.518868 loss)
I0428 20:18:19.549886  1093 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:19.589133  1099 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:19.671051  1093 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:19.672693  1093 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:19.673893  1093 solver.cpp:311] Iteration 1000, loss = 0.831326
I0428 20:18:19.673923  1093 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:19.749359  1100 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:19.751911  1093 solver.cpp:398]     Test net output #0: accuracy = 0.6957
I0428 20:18:19.751936  1093 solver.cpp:398]     Test net output #1: loss = 0.748307 (* 1 = 0.748307 loss)
I0428 20:18:19.751957  1093 solver.cpp:316] Optimization Done.
I0428 20:18:19.751961  1093 caffe.cpp:259] Optimization Done.
