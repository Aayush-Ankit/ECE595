I0428 19:51:29.290596 27294 caffe.cpp:218] Using GPUs 0
I0428 19:51:29.326519 27294 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:51:29.838549 27294 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test635.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:51:29.838696 27294 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test635.prototxt
I0428 19:51:29.839074 27294 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:51:29.839092 27294 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:51:29.839184 27294 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:29.839260 27294 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:29.839359 27294 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:51:29.839381 27294 net.cpp:86] Creating Layer mnist
I0428 19:51:29.839390 27294 net.cpp:382] mnist -> data
I0428 19:51:29.839411 27294 net.cpp:382] mnist -> label
I0428 19:51:29.840502 27294 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:51:29.842972 27294 net.cpp:124] Setting up mnist
I0428 19:51:29.842989 27294 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:51:29.842996 27294 net.cpp:131] Top shape: 64 (64)
I0428 19:51:29.843001 27294 net.cpp:139] Memory required for data: 200960
I0428 19:51:29.843009 27294 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:29.843024 27294 net.cpp:86] Creating Layer conv0
I0428 19:51:29.843029 27294 net.cpp:408] conv0 <- data
I0428 19:51:29.843044 27294 net.cpp:382] conv0 -> conv0
I0428 19:51:30.113103 27294 net.cpp:124] Setting up conv0
I0428 19:51:30.113131 27294 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:51:30.113134 27294 net.cpp:139] Memory required for data: 938240
I0428 19:51:30.113183 27294 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:30.113196 27294 net.cpp:86] Creating Layer pool0
I0428 19:51:30.113200 27294 net.cpp:408] pool0 <- conv0
I0428 19:51:30.113205 27294 net.cpp:382] pool0 -> pool0
I0428 19:51:30.113253 27294 net.cpp:124] Setting up pool0
I0428 19:51:30.113260 27294 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:51:30.113263 27294 net.cpp:139] Memory required for data: 1122560
I0428 19:51:30.113266 27294 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:30.113277 27294 net.cpp:86] Creating Layer conv1
I0428 19:51:30.113281 27294 net.cpp:408] conv1 <- pool0
I0428 19:51:30.113301 27294 net.cpp:382] conv1 -> conv1
I0428 19:51:30.115918 27294 net.cpp:124] Setting up conv1
I0428 19:51:30.115932 27294 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:51:30.115936 27294 net.cpp:139] Memory required for data: 1532160
I0428 19:51:30.115944 27294 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:30.115967 27294 net.cpp:86] Creating Layer pool1
I0428 19:51:30.115972 27294 net.cpp:408] pool1 <- conv1
I0428 19:51:30.115977 27294 net.cpp:382] pool1 -> pool1
I0428 19:51:30.116013 27294 net.cpp:124] Setting up pool1
I0428 19:51:30.116019 27294 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:51:30.116022 27294 net.cpp:139] Memory required for data: 1634560
I0428 19:51:30.116025 27294 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:30.116034 27294 net.cpp:86] Creating Layer ip1
I0428 19:51:30.116036 27294 net.cpp:408] ip1 <- pool1
I0428 19:51:30.116040 27294 net.cpp:382] ip1 -> ip1
I0428 19:51:30.116243 27294 net.cpp:124] Setting up ip1
I0428 19:51:30.116251 27294 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:30.116255 27294 net.cpp:139] Memory required for data: 1647360
I0428 19:51:30.116261 27294 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:30.116266 27294 net.cpp:86] Creating Layer relu1
I0428 19:51:30.116269 27294 net.cpp:408] relu1 <- ip1
I0428 19:51:30.116273 27294 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:30.116431 27294 net.cpp:124] Setting up relu1
I0428 19:51:30.116439 27294 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:51:30.116442 27294 net.cpp:139] Memory required for data: 1660160
I0428 19:51:30.116446 27294 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:30.116451 27294 net.cpp:86] Creating Layer ip2
I0428 19:51:30.116456 27294 net.cpp:408] ip2 <- ip1
I0428 19:51:30.116459 27294 net.cpp:382] ip2 -> ip2
I0428 19:51:30.116554 27294 net.cpp:124] Setting up ip2
I0428 19:51:30.116560 27294 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:30.116564 27294 net.cpp:139] Memory required for data: 1662720
I0428 19:51:30.116569 27294 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:30.116575 27294 net.cpp:86] Creating Layer relu2
I0428 19:51:30.116577 27294 net.cpp:408] relu2 <- ip2
I0428 19:51:30.116581 27294 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:30.117337 27294 net.cpp:124] Setting up relu2
I0428 19:51:30.117350 27294 net.cpp:131] Top shape: 64 10 (640)
I0428 19:51:30.117354 27294 net.cpp:139] Memory required for data: 1665280
I0428 19:51:30.117357 27294 layer_factory.hpp:77] Creating layer loss
I0428 19:51:30.117364 27294 net.cpp:86] Creating Layer loss
I0428 19:51:30.117383 27294 net.cpp:408] loss <- ip2
I0428 19:51:30.117388 27294 net.cpp:408] loss <- label
I0428 19:51:30.117393 27294 net.cpp:382] loss -> loss
I0428 19:51:30.117408 27294 layer_factory.hpp:77] Creating layer loss
I0428 19:51:30.117624 27294 net.cpp:124] Setting up loss
I0428 19:51:30.117633 27294 net.cpp:131] Top shape: (1)
I0428 19:51:30.117636 27294 net.cpp:134]     with loss weight 1
I0428 19:51:30.117650 27294 net.cpp:139] Memory required for data: 1665284
I0428 19:51:30.117653 27294 net.cpp:200] loss needs backward computation.
I0428 19:51:30.117657 27294 net.cpp:200] relu2 needs backward computation.
I0428 19:51:30.117660 27294 net.cpp:200] ip2 needs backward computation.
I0428 19:51:30.117662 27294 net.cpp:200] relu1 needs backward computation.
I0428 19:51:30.117681 27294 net.cpp:200] ip1 needs backward computation.
I0428 19:51:30.117694 27294 net.cpp:200] pool1 needs backward computation.
I0428 19:51:30.117697 27294 net.cpp:200] conv1 needs backward computation.
I0428 19:51:30.117700 27294 net.cpp:200] pool0 needs backward computation.
I0428 19:51:30.117703 27294 net.cpp:200] conv0 needs backward computation.
I0428 19:51:30.117707 27294 net.cpp:202] mnist does not need backward computation.
I0428 19:51:30.117710 27294 net.cpp:244] This network produces output loss
I0428 19:51:30.117718 27294 net.cpp:257] Network initialization done.
I0428 19:51:30.118044 27294 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test635.prototxt
I0428 19:51:30.118070 27294 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:51:30.118171 27294 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:51:30.118234 27294 layer_factory.hpp:77] Creating layer mnist
I0428 19:51:30.118276 27294 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:51:30.118293 27294 net.cpp:86] Creating Layer mnist
I0428 19:51:30.118296 27294 net.cpp:382] mnist -> data
I0428 19:51:30.118304 27294 net.cpp:382] mnist -> label
I0428 19:51:30.118398 27294 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:51:30.120299 27294 net.cpp:124] Setting up mnist
I0428 19:51:30.120311 27294 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:51:30.120316 27294 net.cpp:131] Top shape: 100 (100)
I0428 19:51:30.120319 27294 net.cpp:139] Memory required for data: 314000
I0428 19:51:30.120323 27294 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:51:30.120329 27294 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:51:30.120332 27294 net.cpp:408] label_mnist_1_split <- label
I0428 19:51:30.120337 27294 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:51:30.120343 27294 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:51:30.120393 27294 net.cpp:124] Setting up label_mnist_1_split
I0428 19:51:30.120407 27294 net.cpp:131] Top shape: 100 (100)
I0428 19:51:30.120410 27294 net.cpp:131] Top shape: 100 (100)
I0428 19:51:30.120414 27294 net.cpp:139] Memory required for data: 314800
I0428 19:51:30.120416 27294 layer_factory.hpp:77] Creating layer conv0
I0428 19:51:30.120424 27294 net.cpp:86] Creating Layer conv0
I0428 19:51:30.120427 27294 net.cpp:408] conv0 <- data
I0428 19:51:30.120431 27294 net.cpp:382] conv0 -> conv0
I0428 19:51:30.122130 27294 net.cpp:124] Setting up conv0
I0428 19:51:30.122144 27294 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:51:30.122148 27294 net.cpp:139] Memory required for data: 1466800
I0428 19:51:30.122156 27294 layer_factory.hpp:77] Creating layer pool0
I0428 19:51:30.122162 27294 net.cpp:86] Creating Layer pool0
I0428 19:51:30.122181 27294 net.cpp:408] pool0 <- conv0
I0428 19:51:30.122186 27294 net.cpp:382] pool0 -> pool0
I0428 19:51:30.122220 27294 net.cpp:124] Setting up pool0
I0428 19:51:30.122226 27294 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:51:30.122229 27294 net.cpp:139] Memory required for data: 1754800
I0428 19:51:30.122231 27294 layer_factory.hpp:77] Creating layer conv1
I0428 19:51:30.122239 27294 net.cpp:86] Creating Layer conv1
I0428 19:51:30.122242 27294 net.cpp:408] conv1 <- pool0
I0428 19:51:30.122247 27294 net.cpp:382] conv1 -> conv1
I0428 19:51:30.124310 27294 net.cpp:124] Setting up conv1
I0428 19:51:30.124323 27294 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:51:30.124327 27294 net.cpp:139] Memory required for data: 2394800
I0428 19:51:30.124336 27294 layer_factory.hpp:77] Creating layer pool1
I0428 19:51:30.124358 27294 net.cpp:86] Creating Layer pool1
I0428 19:51:30.124362 27294 net.cpp:408] pool1 <- conv1
I0428 19:51:30.124382 27294 net.cpp:382] pool1 -> pool1
I0428 19:51:30.124433 27294 net.cpp:124] Setting up pool1
I0428 19:51:30.124439 27294 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:51:30.124442 27294 net.cpp:139] Memory required for data: 2554800
I0428 19:51:30.124445 27294 layer_factory.hpp:77] Creating layer ip1
I0428 19:51:30.124451 27294 net.cpp:86] Creating Layer ip1
I0428 19:51:30.124454 27294 net.cpp:408] ip1 <- pool1
I0428 19:51:30.124459 27294 net.cpp:382] ip1 -> ip1
I0428 19:51:30.124706 27294 net.cpp:124] Setting up ip1
I0428 19:51:30.124714 27294 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:30.124718 27294 net.cpp:139] Memory required for data: 2574800
I0428 19:51:30.124725 27294 layer_factory.hpp:77] Creating layer relu1
I0428 19:51:30.124732 27294 net.cpp:86] Creating Layer relu1
I0428 19:51:30.124735 27294 net.cpp:408] relu1 <- ip1
I0428 19:51:30.124740 27294 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:51:30.124946 27294 net.cpp:124] Setting up relu1
I0428 19:51:30.124955 27294 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:51:30.124959 27294 net.cpp:139] Memory required for data: 2594800
I0428 19:51:30.124963 27294 layer_factory.hpp:77] Creating layer ip2
I0428 19:51:30.124970 27294 net.cpp:86] Creating Layer ip2
I0428 19:51:30.124974 27294 net.cpp:408] ip2 <- ip1
I0428 19:51:30.124979 27294 net.cpp:382] ip2 -> ip2
I0428 19:51:30.125085 27294 net.cpp:124] Setting up ip2
I0428 19:51:30.125093 27294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:30.125097 27294 net.cpp:139] Memory required for data: 2598800
I0428 19:51:30.125102 27294 layer_factory.hpp:77] Creating layer relu2
I0428 19:51:30.125107 27294 net.cpp:86] Creating Layer relu2
I0428 19:51:30.125110 27294 net.cpp:408] relu2 <- ip2
I0428 19:51:30.125123 27294 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:51:30.125289 27294 net.cpp:124] Setting up relu2
I0428 19:51:30.125299 27294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:30.125308 27294 net.cpp:139] Memory required for data: 2602800
I0428 19:51:30.125311 27294 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:51:30.125319 27294 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:51:30.125329 27294 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:51:30.125332 27294 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:51:30.125354 27294 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:51:30.125391 27294 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:51:30.125397 27294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:30.125401 27294 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:51:30.125403 27294 net.cpp:139] Memory required for data: 2610800
I0428 19:51:30.125406 27294 layer_factory.hpp:77] Creating layer accuracy
I0428 19:51:30.125411 27294 net.cpp:86] Creating Layer accuracy
I0428 19:51:30.125414 27294 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:51:30.125418 27294 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:51:30.125423 27294 net.cpp:382] accuracy -> accuracy
I0428 19:51:30.125430 27294 net.cpp:124] Setting up accuracy
I0428 19:51:30.125433 27294 net.cpp:131] Top shape: (1)
I0428 19:51:30.125437 27294 net.cpp:139] Memory required for data: 2610804
I0428 19:51:30.125439 27294 layer_factory.hpp:77] Creating layer loss
I0428 19:51:30.125443 27294 net.cpp:86] Creating Layer loss
I0428 19:51:30.125447 27294 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:51:30.125457 27294 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:51:30.125460 27294 net.cpp:382] loss -> loss
I0428 19:51:30.125468 27294 layer_factory.hpp:77] Creating layer loss
I0428 19:51:30.125793 27294 net.cpp:124] Setting up loss
I0428 19:51:30.125802 27294 net.cpp:131] Top shape: (1)
I0428 19:51:30.125805 27294 net.cpp:134]     with loss weight 1
I0428 19:51:30.125811 27294 net.cpp:139] Memory required for data: 2610808
I0428 19:51:30.125814 27294 net.cpp:200] loss needs backward computation.
I0428 19:51:30.125818 27294 net.cpp:202] accuracy does not need backward computation.
I0428 19:51:30.125821 27294 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:51:30.125824 27294 net.cpp:200] relu2 needs backward computation.
I0428 19:51:30.125826 27294 net.cpp:200] ip2 needs backward computation.
I0428 19:51:30.125830 27294 net.cpp:200] relu1 needs backward computation.
I0428 19:51:30.125833 27294 net.cpp:200] ip1 needs backward computation.
I0428 19:51:30.125836 27294 net.cpp:200] pool1 needs backward computation.
I0428 19:51:30.125838 27294 net.cpp:200] conv1 needs backward computation.
I0428 19:51:30.125841 27294 net.cpp:200] pool0 needs backward computation.
I0428 19:51:30.125844 27294 net.cpp:200] conv0 needs backward computation.
I0428 19:51:30.125847 27294 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:51:30.125851 27294 net.cpp:202] mnist does not need backward computation.
I0428 19:51:30.125854 27294 net.cpp:244] This network produces output accuracy
I0428 19:51:30.125856 27294 net.cpp:244] This network produces output loss
I0428 19:51:30.125866 27294 net.cpp:257] Network initialization done.
I0428 19:51:30.125902 27294 solver.cpp:56] Solver scaffolding done.
I0428 19:51:30.126181 27294 caffe.cpp:248] Starting Optimization
I0428 19:51:30.126188 27294 solver.cpp:273] Solving LeNet
I0428 19:51:30.126191 27294 solver.cpp:274] Learning Rate Policy: inv
I0428 19:51:30.126961 27294 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:51:30.130234 27294 blocking_queue.cpp:49] Waiting for data
I0428 19:51:30.204291 27301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:30.204787 27294 solver.cpp:398]     Test net output #0: accuracy = 0.0864
I0428 19:51:30.204804 27294 solver.cpp:398]     Test net output #1: loss = 2.30944 (* 1 = 2.30944 loss)
I0428 19:51:30.207253 27294 solver.cpp:219] Iteration 0 (-1.10627e-30 iter/s, 0.0810345s/100 iters), loss = 2.31629
I0428 19:51:30.207278 27294 solver.cpp:238]     Train net output #0: loss = 2.31629 (* 1 = 2.31629 loss)
I0428 19:51:30.207311 27294 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:51:30.286020 27294 solver.cpp:219] Iteration 100 (1270.17 iter/s, 0.0787294s/100 iters), loss = 1.1779
I0428 19:51:30.286043 27294 solver.cpp:238]     Train net output #0: loss = 1.1779 (* 1 = 1.1779 loss)
I0428 19:51:30.286049 27294 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:51:30.365633 27294 solver.cpp:219] Iteration 200 (1256.64 iter/s, 0.0795771s/100 iters), loss = 1.04574
I0428 19:51:30.365687 27294 solver.cpp:238]     Train net output #0: loss = 1.04574 (* 1 = 1.04574 loss)
I0428 19:51:30.365694 27294 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:51:30.444205 27294 solver.cpp:219] Iteration 300 (1273.74 iter/s, 0.0785091s/100 iters), loss = 0.534664
I0428 19:51:30.444244 27294 solver.cpp:238]     Train net output #0: loss = 0.534664 (* 1 = 0.534664 loss)
I0428 19:51:30.444250 27294 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:51:30.522532 27294 solver.cpp:219] Iteration 400 (1277.24 iter/s, 0.078294s/100 iters), loss = 0.641638
I0428 19:51:30.522570 27294 solver.cpp:238]     Train net output #0: loss = 0.641638 (* 1 = 0.641638 loss)
I0428 19:51:30.522575 27294 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:51:30.600721 27294 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:51:30.677536 27301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:30.678068 27294 solver.cpp:398]     Test net output #0: accuracy = 0.6706
I0428 19:51:30.678091 27294 solver.cpp:398]     Test net output #1: loss = 0.823416 (* 1 = 0.823416 loss)
I0428 19:51:30.678956 27294 solver.cpp:219] Iteration 500 (639.438 iter/s, 0.156387s/100 iters), loss = 0.957616
I0428 19:51:30.678977 27294 solver.cpp:238]     Train net output #0: loss = 0.957616 (* 1 = 0.957616 loss)
I0428 19:51:30.678984 27294 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:51:30.757880 27294 solver.cpp:219] Iteration 600 (1267.52 iter/s, 0.0788941s/100 iters), loss = 0.949297
I0428 19:51:30.757920 27294 solver.cpp:238]     Train net output #0: loss = 0.949297 (* 1 = 0.949297 loss)
I0428 19:51:30.757925 27294 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:51:30.840886 27294 solver.cpp:219] Iteration 700 (1205.26 iter/s, 0.0829695s/100 iters), loss = 0.898736
I0428 19:51:30.840924 27294 solver.cpp:238]     Train net output #0: loss = 0.898736 (* 1 = 0.898736 loss)
I0428 19:51:30.840934 27294 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:51:30.928066 27294 solver.cpp:219] Iteration 800 (1147.67 iter/s, 0.0871332s/100 iters), loss = 0.799895
I0428 19:51:30.928093 27294 solver.cpp:238]     Train net output #0: loss = 0.799895 (* 1 = 0.799895 loss)
I0428 19:51:30.928107 27294 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:51:31.009755 27294 solver.cpp:219] Iteration 900 (1224.68 iter/s, 0.0816538s/100 iters), loss = 0.551764
I0428 19:51:31.009779 27294 solver.cpp:238]     Train net output #0: loss = 0.551764 (* 1 = 0.551764 loss)
I0428 19:51:31.009785 27294 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:51:31.036751 27300 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:31.088444 27294 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:51:31.089490 27294 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:51:31.090057 27294 solver.cpp:311] Iteration 1000, loss = 0.830415
I0428 19:51:31.090087 27294 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:51:31.166601 27301 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:51:31.167076 27294 solver.cpp:398]     Test net output #0: accuracy = 0.6844
I0428 19:51:31.167095 27294 solver.cpp:398]     Test net output #1: loss = 0.763964 (* 1 = 0.763964 loss)
I0428 19:51:31.167100 27294 solver.cpp:316] Optimization Done.
I0428 19:51:31.167104 27294 caffe.cpp:259] Optimization Done.
