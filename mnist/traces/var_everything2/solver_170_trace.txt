I0428 19:33:04.451966 23023 caffe.cpp:218] Using GPUs 0
I0428 19:33:04.493393 23023 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:04.957029 23023 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test170.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:04.957170 23023 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test170.prototxt
I0428 19:33:04.957535 23023 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:04.957564 23023 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:04.957631 23023 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:04.957690 23023 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:04.957770 23023 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:04.957789 23023 net.cpp:86] Creating Layer mnist
I0428 19:33:04.957795 23023 net.cpp:382] mnist -> data
I0428 19:33:04.957813 23023 net.cpp:382] mnist -> label
I0428 19:33:04.958744 23023 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:04.961246 23023 net.cpp:124] Setting up mnist
I0428 19:33:04.961277 23023 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:04.961282 23023 net.cpp:131] Top shape: 64 (64)
I0428 19:33:04.961284 23023 net.cpp:139] Memory required for data: 200960
I0428 19:33:04.961289 23023 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:04.961344 23023 net.cpp:86] Creating Layer conv0
I0428 19:33:04.961350 23023 net.cpp:408] conv0 <- data
I0428 19:33:04.961375 23023 net.cpp:382] conv0 -> conv0
I0428 19:33:05.189255 23023 net.cpp:124] Setting up conv0
I0428 19:33:05.189281 23023 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:05.189285 23023 net.cpp:139] Memory required for data: 3887360
I0428 19:33:05.189299 23023 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:05.189311 23023 net.cpp:86] Creating Layer pool0
I0428 19:33:05.189349 23023 net.cpp:408] pool0 <- conv0
I0428 19:33:05.189355 23023 net.cpp:382] pool0 -> pool0
I0428 19:33:05.189399 23023 net.cpp:124] Setting up pool0
I0428 19:33:05.189404 23023 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:05.189407 23023 net.cpp:139] Memory required for data: 4808960
I0428 19:33:05.189410 23023 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:05.189417 23023 net.cpp:86] Creating Layer ip1
I0428 19:33:05.189421 23023 net.cpp:408] ip1 <- pool0
I0428 19:33:05.189425 23023 net.cpp:382] ip1 -> ip1
I0428 19:33:05.189723 23023 net.cpp:124] Setting up ip1
I0428 19:33:05.189731 23023 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:05.189749 23023 net.cpp:139] Memory required for data: 4811520
I0428 19:33:05.189755 23023 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:05.189776 23023 net.cpp:86] Creating Layer relu1
I0428 19:33:05.189779 23023 net.cpp:408] relu1 <- ip1
I0428 19:33:05.189784 23023 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:05.189952 23023 net.cpp:124] Setting up relu1
I0428 19:33:05.189963 23023 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:05.189966 23023 net.cpp:139] Memory required for data: 4814080
I0428 19:33:05.189985 23023 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:05.189990 23023 net.cpp:86] Creating Layer ip2
I0428 19:33:05.189993 23023 net.cpp:408] ip2 <- ip1
I0428 19:33:05.189997 23023 net.cpp:382] ip2 -> ip2
I0428 19:33:05.190102 23023 net.cpp:124] Setting up ip2
I0428 19:33:05.190109 23023 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:05.190112 23023 net.cpp:139] Memory required for data: 4816640
I0428 19:33:05.190119 23023 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:05.190124 23023 net.cpp:86] Creating Layer relu2
I0428 19:33:05.190127 23023 net.cpp:408] relu2 <- ip2
I0428 19:33:05.190131 23023 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:05.190944 23023 net.cpp:124] Setting up relu2
I0428 19:33:05.190956 23023 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:05.190975 23023 net.cpp:139] Memory required for data: 4819200
I0428 19:33:05.190979 23023 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:05.190985 23023 net.cpp:86] Creating Layer ip3
I0428 19:33:05.190989 23023 net.cpp:408] ip3 <- ip2
I0428 19:33:05.190994 23023 net.cpp:382] ip3 -> ip3
I0428 19:33:05.191082 23023 net.cpp:124] Setting up ip3
I0428 19:33:05.191103 23023 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:05.191107 23023 net.cpp:139] Memory required for data: 4821760
I0428 19:33:05.191112 23023 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:05.191118 23023 net.cpp:86] Creating Layer relu3
I0428 19:33:05.191120 23023 net.cpp:408] relu3 <- ip3
I0428 19:33:05.191124 23023 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:05.191293 23023 net.cpp:124] Setting up relu3
I0428 19:33:05.191303 23023 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:05.191306 23023 net.cpp:139] Memory required for data: 4824320
I0428 19:33:05.191309 23023 layer_factory.hpp:77] Creating layer loss
I0428 19:33:05.191314 23023 net.cpp:86] Creating Layer loss
I0428 19:33:05.191318 23023 net.cpp:408] loss <- ip3
I0428 19:33:05.191321 23023 net.cpp:408] loss <- label
I0428 19:33:05.191328 23023 net.cpp:382] loss -> loss
I0428 19:33:05.191344 23023 layer_factory.hpp:77] Creating layer loss
I0428 19:33:05.191578 23023 net.cpp:124] Setting up loss
I0428 19:33:05.191587 23023 net.cpp:131] Top shape: (1)
I0428 19:33:05.191591 23023 net.cpp:134]     with loss weight 1
I0428 19:33:05.191604 23023 net.cpp:139] Memory required for data: 4824324
I0428 19:33:05.191608 23023 net.cpp:200] loss needs backward computation.
I0428 19:33:05.191612 23023 net.cpp:200] relu3 needs backward computation.
I0428 19:33:05.191614 23023 net.cpp:200] ip3 needs backward computation.
I0428 19:33:05.191617 23023 net.cpp:200] relu2 needs backward computation.
I0428 19:33:05.191620 23023 net.cpp:200] ip2 needs backward computation.
I0428 19:33:05.191623 23023 net.cpp:200] relu1 needs backward computation.
I0428 19:33:05.191625 23023 net.cpp:200] ip1 needs backward computation.
I0428 19:33:05.191638 23023 net.cpp:200] pool0 needs backward computation.
I0428 19:33:05.191642 23023 net.cpp:200] conv0 needs backward computation.
I0428 19:33:05.191644 23023 net.cpp:202] mnist does not need backward computation.
I0428 19:33:05.191648 23023 net.cpp:244] This network produces output loss
I0428 19:33:05.191655 23023 net.cpp:257] Network initialization done.
I0428 19:33:05.192003 23023 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test170.prototxt
I0428 19:33:05.192040 23023 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:05.192148 23023 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:05.192222 23023 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:05.192266 23023 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:05.192277 23023 net.cpp:86] Creating Layer mnist
I0428 19:33:05.192281 23023 net.cpp:382] mnist -> data
I0428 19:33:05.192288 23023 net.cpp:382] mnist -> label
I0428 19:33:05.192363 23023 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:05.194420 23023 net.cpp:124] Setting up mnist
I0428 19:33:05.194465 23023 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:05.194470 23023 net.cpp:131] Top shape: 100 (100)
I0428 19:33:05.194473 23023 net.cpp:139] Memory required for data: 314000
I0428 19:33:05.194478 23023 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:05.194484 23023 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:05.194488 23023 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:05.194492 23023 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:05.194499 23023 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:05.194540 23023 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:05.194545 23023 net.cpp:131] Top shape: 100 (100)
I0428 19:33:05.194550 23023 net.cpp:131] Top shape: 100 (100)
I0428 19:33:05.194551 23023 net.cpp:139] Memory required for data: 314800
I0428 19:33:05.194564 23023 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:05.194573 23023 net.cpp:86] Creating Layer conv0
I0428 19:33:05.194576 23023 net.cpp:408] conv0 <- data
I0428 19:33:05.194581 23023 net.cpp:382] conv0 -> conv0
I0428 19:33:05.196403 23023 net.cpp:124] Setting up conv0
I0428 19:33:05.196434 23023 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:05.196437 23023 net.cpp:139] Memory required for data: 6074800
I0428 19:33:05.196447 23023 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:05.196455 23023 net.cpp:86] Creating Layer pool0
I0428 19:33:05.196457 23023 net.cpp:408] pool0 <- conv0
I0428 19:33:05.196462 23023 net.cpp:382] pool0 -> pool0
I0428 19:33:05.196498 23023 net.cpp:124] Setting up pool0
I0428 19:33:05.196504 23023 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:05.196507 23023 net.cpp:139] Memory required for data: 7514800
I0428 19:33:05.196511 23023 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:05.196516 23023 net.cpp:86] Creating Layer ip1
I0428 19:33:05.196519 23023 net.cpp:408] ip1 <- pool0
I0428 19:33:05.196524 23023 net.cpp:382] ip1 -> ip1
I0428 19:33:05.196883 23023 net.cpp:124] Setting up ip1
I0428 19:33:05.196907 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.196910 23023 net.cpp:139] Memory required for data: 7518800
I0428 19:33:05.196933 23023 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:05.196938 23023 net.cpp:86] Creating Layer relu1
I0428 19:33:05.196940 23023 net.cpp:408] relu1 <- ip1
I0428 19:33:05.196944 23023 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:05.197252 23023 net.cpp:124] Setting up relu1
I0428 19:33:05.197260 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.197264 23023 net.cpp:139] Memory required for data: 7522800
I0428 19:33:05.197268 23023 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:05.197273 23023 net.cpp:86] Creating Layer ip2
I0428 19:33:05.197276 23023 net.cpp:408] ip2 <- ip1
I0428 19:33:05.197281 23023 net.cpp:382] ip2 -> ip2
I0428 19:33:05.197439 23023 net.cpp:124] Setting up ip2
I0428 19:33:05.197446 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.197449 23023 net.cpp:139] Memory required for data: 7526800
I0428 19:33:05.197458 23023 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:05.197461 23023 net.cpp:86] Creating Layer relu2
I0428 19:33:05.197464 23023 net.cpp:408] relu2 <- ip2
I0428 19:33:05.197469 23023 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:05.198212 23023 net.cpp:124] Setting up relu2
I0428 19:33:05.198225 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.198245 23023 net.cpp:139] Memory required for data: 7530800
I0428 19:33:05.198248 23023 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:05.198256 23023 net.cpp:86] Creating Layer ip3
I0428 19:33:05.198259 23023 net.cpp:408] ip3 <- ip2
I0428 19:33:05.198264 23023 net.cpp:382] ip3 -> ip3
I0428 19:33:05.198397 23023 net.cpp:124] Setting up ip3
I0428 19:33:05.198405 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.198408 23023 net.cpp:139] Memory required for data: 7534800
I0428 19:33:05.198413 23023 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:05.198418 23023 net.cpp:86] Creating Layer relu3
I0428 19:33:05.198421 23023 net.cpp:408] relu3 <- ip3
I0428 19:33:05.198426 23023 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:05.198700 23023 net.cpp:124] Setting up relu3
I0428 19:33:05.198710 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.198714 23023 net.cpp:139] Memory required for data: 7538800
I0428 19:33:05.198716 23023 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:05.198721 23023 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:05.198725 23023 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:05.198730 23023 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:05.198736 23023 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:05.198776 23023 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:05.198784 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.198803 23023 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:05.198817 23023 net.cpp:139] Memory required for data: 7546800
I0428 19:33:05.198822 23023 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:05.198827 23023 net.cpp:86] Creating Layer accuracy
I0428 19:33:05.198844 23023 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:05.198854 23023 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:05.198858 23023 net.cpp:382] accuracy -> accuracy
I0428 19:33:05.198866 23023 net.cpp:124] Setting up accuracy
I0428 19:33:05.198870 23023 net.cpp:131] Top shape: (1)
I0428 19:33:05.198873 23023 net.cpp:139] Memory required for data: 7546804
I0428 19:33:05.198876 23023 layer_factory.hpp:77] Creating layer loss
I0428 19:33:05.198880 23023 net.cpp:86] Creating Layer loss
I0428 19:33:05.198900 23023 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:05.198904 23023 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:05.198907 23023 net.cpp:382] loss -> loss
I0428 19:33:05.198914 23023 layer_factory.hpp:77] Creating layer loss
I0428 19:33:05.199126 23023 net.cpp:124] Setting up loss
I0428 19:33:05.199136 23023 net.cpp:131] Top shape: (1)
I0428 19:33:05.199139 23023 net.cpp:134]     with loss weight 1
I0428 19:33:05.199146 23023 net.cpp:139] Memory required for data: 7546808
I0428 19:33:05.199149 23023 net.cpp:200] loss needs backward computation.
I0428 19:33:05.199152 23023 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:05.199157 23023 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:05.199160 23023 net.cpp:200] relu3 needs backward computation.
I0428 19:33:05.199163 23023 net.cpp:200] ip3 needs backward computation.
I0428 19:33:05.199167 23023 net.cpp:200] relu2 needs backward computation.
I0428 19:33:05.199168 23023 net.cpp:200] ip2 needs backward computation.
I0428 19:33:05.199178 23023 net.cpp:200] relu1 needs backward computation.
I0428 19:33:05.199182 23023 net.cpp:200] ip1 needs backward computation.
I0428 19:33:05.199184 23023 net.cpp:200] pool0 needs backward computation.
I0428 19:33:05.199188 23023 net.cpp:200] conv0 needs backward computation.
I0428 19:33:05.199192 23023 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:05.199195 23023 net.cpp:202] mnist does not need backward computation.
I0428 19:33:05.199198 23023 net.cpp:244] This network produces output accuracy
I0428 19:33:05.199201 23023 net.cpp:244] This network produces output loss
I0428 19:33:05.199210 23023 net.cpp:257] Network initialization done.
I0428 19:33:05.199262 23023 solver.cpp:56] Solver scaffolding done.
I0428 19:33:05.199594 23023 caffe.cpp:248] Starting Optimization
I0428 19:33:05.199601 23023 solver.cpp:273] Solving LeNet
I0428 19:33:05.199620 23023 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:05.200453 23023 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:05.206372 23023 blocking_queue.cpp:49] Waiting for data
I0428 19:33:05.285550 23030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:05.286867 23023 solver.cpp:398]     Test net output #0: accuracy = 0.1247
I0428 19:33:05.286901 23023 solver.cpp:398]     Test net output #1: loss = 2.30299 (* 1 = 2.30299 loss)
I0428 19:33:05.291966 23023 solver.cpp:219] Iteration 0 (-8.9543e-43 iter/s, 0.0923003s/100 iters), loss = 2.29477
I0428 19:33:05.292016 23023 solver.cpp:238]     Train net output #0: loss = 2.29477 (* 1 = 2.29477 loss)
I0428 19:33:05.292033 23023 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:05.392841 23023 solver.cpp:219] Iteration 100 (991.917 iter/s, 0.100815s/100 iters), loss = 1.15156
I0428 19:33:05.392882 23023 solver.cpp:238]     Train net output #0: loss = 1.15156 (* 1 = 1.15156 loss)
I0428 19:33:05.392890 23023 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:05.489331 23023 solver.cpp:219] Iteration 200 (1036.91 iter/s, 0.0964403s/100 iters), loss = 0.825763
I0428 19:33:05.489361 23023 solver.cpp:238]     Train net output #0: loss = 0.825763 (* 1 = 0.825763 loss)
I0428 19:33:05.489374 23023 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:05.590432 23023 solver.cpp:219] Iteration 300 (989.503 iter/s, 0.101061s/100 iters), loss = 0.816736
I0428 19:33:05.590461 23023 solver.cpp:238]     Train net output #0: loss = 0.816736 (* 1 = 0.816736 loss)
I0428 19:33:05.590469 23023 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:05.691418 23023 solver.cpp:219] Iteration 400 (990.62 iter/s, 0.100947s/100 iters), loss = 0.721858
I0428 19:33:05.691447 23023 solver.cpp:238]     Train net output #0: loss = 0.721858 (* 1 = 0.721858 loss)
I0428 19:33:05.691455 23023 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:05.790146 23023 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:05.859809 23030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:05.860863 23023 solver.cpp:398]     Test net output #0: accuracy = 0.7502
I0428 19:33:05.860887 23023 solver.cpp:398]     Test net output #1: loss = 0.67559 (* 1 = 0.67559 loss)
I0428 19:33:05.861888 23023 solver.cpp:219] Iteration 500 (586.764 iter/s, 0.170426s/100 iters), loss = 0.58497
I0428 19:33:05.861914 23023 solver.cpp:238]     Train net output #0: loss = 0.58497 (* 1 = 0.58497 loss)
I0428 19:33:05.861922 23023 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:05.969326 23023 solver.cpp:219] Iteration 600 (931.088 iter/s, 0.107401s/100 iters), loss = 0.617735
I0428 19:33:05.969358 23023 solver.cpp:238]     Train net output #0: loss = 0.617735 (* 1 = 0.617735 loss)
I0428 19:33:05.969367 23023 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:06.071110 23023 solver.cpp:219] Iteration 700 (982.884 iter/s, 0.101741s/100 iters), loss = 0.850462
I0428 19:33:06.071140 23023 solver.cpp:238]     Train net output #0: loss = 0.850462 (* 1 = 0.850462 loss)
I0428 19:33:06.071146 23023 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:06.166218 23023 solver.cpp:219] Iteration 800 (1051.84 iter/s, 0.0950711s/100 iters), loss = 0.691567
I0428 19:33:06.166257 23023 solver.cpp:238]     Train net output #0: loss = 0.691567 (* 1 = 0.691567 loss)
I0428 19:33:06.166263 23023 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:06.268097 23023 solver.cpp:219] Iteration 900 (981.914 iter/s, 0.101842s/100 iters), loss = 0.546464
I0428 19:33:06.268127 23023 solver.cpp:238]     Train net output #0: loss = 0.546464 (* 1 = 0.546464 loss)
I0428 19:33:06.268133 23023 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:06.301506 23029 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:06.367131 23023 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:06.368245 23023 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:06.369230 23023 solver.cpp:311] Iteration 1000, loss = 0.675591
I0428 19:33:06.369261 23023 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:06.442685 23030 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:06.443488 23023 solver.cpp:398]     Test net output #0: accuracy = 0.7659
I0428 19:33:06.443506 23023 solver.cpp:398]     Test net output #1: loss = 0.610131 (* 1 = 0.610131 loss)
I0428 19:33:06.443511 23023 solver.cpp:316] Optimization Done.
I0428 19:33:06.443514 23023 caffe.cpp:259] Optimization Done.
