I0428 19:59:00.245527 29137 caffe.cpp:218] Using GPUs 0
I0428 19:59:00.282563 29137 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:00.792698 29137 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test835.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:00.792848 29137 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test835.prototxt
I0428 19:59:00.793299 29137 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:00.793319 29137 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:00.793423 29137 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:00.793503 29137 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:00.793608 29137 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:00.793632 29137 net.cpp:86] Creating Layer mnist
I0428 19:59:00.793639 29137 net.cpp:382] mnist -> data
I0428 19:59:00.793663 29137 net.cpp:382] mnist -> label
I0428 19:59:00.794759 29137 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:00.797220 29137 net.cpp:124] Setting up mnist
I0428 19:59:00.797240 29137 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:00.797246 29137 net.cpp:131] Top shape: 64 (64)
I0428 19:59:00.797250 29137 net.cpp:139] Memory required for data: 200960
I0428 19:59:00.797257 29137 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:00.797281 29137 net.cpp:86] Creating Layer conv0
I0428 19:59:00.797302 29137 net.cpp:408] conv0 <- data
I0428 19:59:00.797324 29137 net.cpp:382] conv0 -> conv0
I0428 19:59:01.072969 29137 net.cpp:124] Setting up conv0
I0428 19:59:01.072996 29137 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:01.073000 29137 net.cpp:139] Memory required for data: 1675520
I0428 19:59:01.073015 29137 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:01.073043 29137 net.cpp:86] Creating Layer pool0
I0428 19:59:01.073047 29137 net.cpp:408] pool0 <- conv0
I0428 19:59:01.073053 29137 net.cpp:382] pool0 -> pool0
I0428 19:59:01.073101 29137 net.cpp:124] Setting up pool0
I0428 19:59:01.073107 29137 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:01.073110 29137 net.cpp:139] Memory required for data: 2044160
I0428 19:59:01.073114 29137 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:01.073124 29137 net.cpp:86] Creating Layer conv1
I0428 19:59:01.073141 29137 net.cpp:408] conv1 <- pool0
I0428 19:59:01.073146 29137 net.cpp:382] conv1 -> conv1
I0428 19:59:01.075804 29137 net.cpp:124] Setting up conv1
I0428 19:59:01.075819 29137 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 19:59:01.075821 29137 net.cpp:139] Memory required for data: 2208000
I0428 19:59:01.075829 29137 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:01.075836 29137 net.cpp:86] Creating Layer pool1
I0428 19:59:01.075840 29137 net.cpp:408] pool1 <- conv1
I0428 19:59:01.075845 29137 net.cpp:382] pool1 -> pool1
I0428 19:59:01.075878 29137 net.cpp:124] Setting up pool1
I0428 19:59:01.075891 29137 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 19:59:01.075894 29137 net.cpp:139] Memory required for data: 2248960
I0428 19:59:01.075896 29137 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:01.075907 29137 net.cpp:86] Creating Layer ip1
I0428 19:59:01.075911 29137 net.cpp:408] ip1 <- pool1
I0428 19:59:01.075914 29137 net.cpp:382] ip1 -> ip1
I0428 19:59:01.076009 29137 net.cpp:124] Setting up ip1
I0428 19:59:01.076015 29137 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:01.076019 29137 net.cpp:139] Memory required for data: 2251520
I0428 19:59:01.076025 29137 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:01.076030 29137 net.cpp:86] Creating Layer relu1
I0428 19:59:01.076033 29137 net.cpp:408] relu1 <- ip1
I0428 19:59:01.076037 29137 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:01.076187 29137 net.cpp:124] Setting up relu1
I0428 19:59:01.076195 29137 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:01.076198 29137 net.cpp:139] Memory required for data: 2254080
I0428 19:59:01.076201 29137 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:01.076207 29137 net.cpp:86] Creating Layer ip2
I0428 19:59:01.076210 29137 net.cpp:408] ip2 <- ip1
I0428 19:59:01.076215 29137 net.cpp:382] ip2 -> ip2
I0428 19:59:01.076298 29137 net.cpp:124] Setting up ip2
I0428 19:59:01.076305 29137 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:01.076308 29137 net.cpp:139] Memory required for data: 2260480
I0428 19:59:01.076313 29137 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:01.076318 29137 net.cpp:86] Creating Layer relu2
I0428 19:59:01.076321 29137 net.cpp:408] relu2 <- ip2
I0428 19:59:01.076325 29137 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:01.077097 29137 net.cpp:124] Setting up relu2
I0428 19:59:01.077111 29137 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:59:01.077114 29137 net.cpp:139] Memory required for data: 2266880
I0428 19:59:01.077118 29137 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:01.077124 29137 net.cpp:86] Creating Layer ip3
I0428 19:59:01.077127 29137 net.cpp:408] ip3 <- ip2
I0428 19:59:01.077133 29137 net.cpp:382] ip3 -> ip3
I0428 19:59:01.077235 29137 net.cpp:124] Setting up ip3
I0428 19:59:01.077244 29137 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:01.077246 29137 net.cpp:139] Memory required for data: 2269440
I0428 19:59:01.077253 29137 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:01.077258 29137 net.cpp:86] Creating Layer relu3
I0428 19:59:01.077261 29137 net.cpp:408] relu3 <- ip3
I0428 19:59:01.077265 29137 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:01.077417 29137 net.cpp:124] Setting up relu3
I0428 19:59:01.077425 29137 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:01.077428 29137 net.cpp:139] Memory required for data: 2272000
I0428 19:59:01.077431 29137 layer_factory.hpp:77] Creating layer loss
I0428 19:59:01.077440 29137 net.cpp:86] Creating Layer loss
I0428 19:59:01.077443 29137 net.cpp:408] loss <- ip3
I0428 19:59:01.077447 29137 net.cpp:408] loss <- label
I0428 19:59:01.077452 29137 net.cpp:382] loss -> loss
I0428 19:59:01.077473 29137 layer_factory.hpp:77] Creating layer loss
I0428 19:59:01.077688 29137 net.cpp:124] Setting up loss
I0428 19:59:01.077697 29137 net.cpp:131] Top shape: (1)
I0428 19:59:01.077699 29137 net.cpp:134]     with loss weight 1
I0428 19:59:01.077713 29137 net.cpp:139] Memory required for data: 2272004
I0428 19:59:01.077715 29137 net.cpp:200] loss needs backward computation.
I0428 19:59:01.077718 29137 net.cpp:200] relu3 needs backward computation.
I0428 19:59:01.077721 29137 net.cpp:200] ip3 needs backward computation.
I0428 19:59:01.077723 29137 net.cpp:200] relu2 needs backward computation.
I0428 19:59:01.077726 29137 net.cpp:200] ip2 needs backward computation.
I0428 19:59:01.077728 29137 net.cpp:200] relu1 needs backward computation.
I0428 19:59:01.077731 29137 net.cpp:200] ip1 needs backward computation.
I0428 19:59:01.077733 29137 net.cpp:200] pool1 needs backward computation.
I0428 19:59:01.077736 29137 net.cpp:200] conv1 needs backward computation.
I0428 19:59:01.077739 29137 net.cpp:200] pool0 needs backward computation.
I0428 19:59:01.077741 29137 net.cpp:200] conv0 needs backward computation.
I0428 19:59:01.077744 29137 net.cpp:202] mnist does not need backward computation.
I0428 19:59:01.077747 29137 net.cpp:244] This network produces output loss
I0428 19:59:01.077756 29137 net.cpp:257] Network initialization done.
I0428 19:59:01.078078 29137 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test835.prototxt
I0428 19:59:01.078104 29137 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:01.078192 29137 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:59:01.078287 29137 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:01.078328 29137 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:01.078339 29137 net.cpp:86] Creating Layer mnist
I0428 19:59:01.078343 29137 net.cpp:382] mnist -> data
I0428 19:59:01.078352 29137 net.cpp:382] mnist -> label
I0428 19:59:01.078429 29137 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:01.080338 29137 net.cpp:124] Setting up mnist
I0428 19:59:01.080365 29137 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:01.080370 29137 net.cpp:131] Top shape: 100 (100)
I0428 19:59:01.080374 29137 net.cpp:139] Memory required for data: 314000
I0428 19:59:01.080376 29137 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:01.080397 29137 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:01.080400 29137 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:01.080405 29137 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:01.080413 29137 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:01.080500 29137 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:01.080507 29137 net.cpp:131] Top shape: 100 (100)
I0428 19:59:01.080512 29137 net.cpp:131] Top shape: 100 (100)
I0428 19:59:01.080514 29137 net.cpp:139] Memory required for data: 314800
I0428 19:59:01.080518 29137 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:01.080528 29137 net.cpp:86] Creating Layer conv0
I0428 19:59:01.080530 29137 net.cpp:408] conv0 <- data
I0428 19:59:01.080535 29137 net.cpp:382] conv0 -> conv0
I0428 19:59:01.082139 29137 net.cpp:124] Setting up conv0
I0428 19:59:01.082154 29137 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:01.082156 29137 net.cpp:139] Memory required for data: 2618800
I0428 19:59:01.082180 29137 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:01.082187 29137 net.cpp:86] Creating Layer pool0
I0428 19:59:01.082191 29137 net.cpp:408] pool0 <- conv0
I0428 19:59:01.082200 29137 net.cpp:382] pool0 -> pool0
I0428 19:59:01.082233 29137 net.cpp:124] Setting up pool0
I0428 19:59:01.082240 29137 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:01.082242 29137 net.cpp:139] Memory required for data: 3194800
I0428 19:59:01.082245 29137 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:01.082254 29137 net.cpp:86] Creating Layer conv1
I0428 19:59:01.082257 29137 net.cpp:408] conv1 <- pool0
I0428 19:59:01.082263 29137 net.cpp:382] conv1 -> conv1
I0428 19:59:01.084322 29137 net.cpp:124] Setting up conv1
I0428 19:59:01.084336 29137 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 19:59:01.084339 29137 net.cpp:139] Memory required for data: 3450800
I0428 19:59:01.084348 29137 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:01.084357 29137 net.cpp:86] Creating Layer pool1
I0428 19:59:01.084360 29137 net.cpp:408] pool1 <- conv1
I0428 19:59:01.084365 29137 net.cpp:382] pool1 -> pool1
I0428 19:59:01.084403 29137 net.cpp:124] Setting up pool1
I0428 19:59:01.084410 29137 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 19:59:01.084414 29137 net.cpp:139] Memory required for data: 3514800
I0428 19:59:01.084417 29137 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:01.084424 29137 net.cpp:86] Creating Layer ip1
I0428 19:59:01.084425 29137 net.cpp:408] ip1 <- pool1
I0428 19:59:01.084431 29137 net.cpp:382] ip1 -> ip1
I0428 19:59:01.084547 29137 net.cpp:124] Setting up ip1
I0428 19:59:01.084553 29137 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:01.084566 29137 net.cpp:139] Memory required for data: 3518800
I0428 19:59:01.084573 29137 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:01.084578 29137 net.cpp:86] Creating Layer relu1
I0428 19:59:01.084581 29137 net.cpp:408] relu1 <- ip1
I0428 19:59:01.084588 29137 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:01.084858 29137 net.cpp:124] Setting up relu1
I0428 19:59:01.084867 29137 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:01.084870 29137 net.cpp:139] Memory required for data: 3522800
I0428 19:59:01.084873 29137 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:01.084882 29137 net.cpp:86] Creating Layer ip2
I0428 19:59:01.084885 29137 net.cpp:408] ip2 <- ip1
I0428 19:59:01.084892 29137 net.cpp:382] ip2 -> ip2
I0428 19:59:01.084991 29137 net.cpp:124] Setting up ip2
I0428 19:59:01.084998 29137 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:01.085001 29137 net.cpp:139] Memory required for data: 3532800
I0428 19:59:01.085007 29137 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:01.085012 29137 net.cpp:86] Creating Layer relu2
I0428 19:59:01.085016 29137 net.cpp:408] relu2 <- ip2
I0428 19:59:01.085021 29137 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:01.085186 29137 net.cpp:124] Setting up relu2
I0428 19:59:01.085194 29137 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:59:01.085197 29137 net.cpp:139] Memory required for data: 3542800
I0428 19:59:01.085201 29137 layer_factory.hpp:77] Creating layer ip3
I0428 19:59:01.085207 29137 net.cpp:86] Creating Layer ip3
I0428 19:59:01.085211 29137 net.cpp:408] ip3 <- ip2
I0428 19:59:01.085216 29137 net.cpp:382] ip3 -> ip3
I0428 19:59:01.085325 29137 net.cpp:124] Setting up ip3
I0428 19:59:01.085347 29137 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:01.085351 29137 net.cpp:139] Memory required for data: 3546800
I0428 19:59:01.085361 29137 layer_factory.hpp:77] Creating layer relu3
I0428 19:59:01.085366 29137 net.cpp:86] Creating Layer relu3
I0428 19:59:01.085368 29137 net.cpp:408] relu3 <- ip3
I0428 19:59:01.085372 29137 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:59:01.086169 29137 net.cpp:124] Setting up relu3
I0428 19:59:01.086180 29137 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:01.086184 29137 net.cpp:139] Memory required for data: 3550800
I0428 19:59:01.086186 29137 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:59:01.086192 29137 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:59:01.086196 29137 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:59:01.086200 29137 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:59:01.086206 29137 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:59:01.086262 29137 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:59:01.086269 29137 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:01.086272 29137 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:01.086280 29137 net.cpp:139] Memory required for data: 3558800
I0428 19:59:01.086283 29137 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:01.086289 29137 net.cpp:86] Creating Layer accuracy
I0428 19:59:01.086292 29137 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:59:01.086297 29137 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:01.086302 29137 net.cpp:382] accuracy -> accuracy
I0428 19:59:01.086308 29137 net.cpp:124] Setting up accuracy
I0428 19:59:01.086313 29137 net.cpp:131] Top shape: (1)
I0428 19:59:01.086315 29137 net.cpp:139] Memory required for data: 3558804
I0428 19:59:01.086318 29137 layer_factory.hpp:77] Creating layer loss
I0428 19:59:01.086323 29137 net.cpp:86] Creating Layer loss
I0428 19:59:01.086325 29137 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:59:01.086333 29137 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:01.086338 29137 net.cpp:382] loss -> loss
I0428 19:59:01.086344 29137 layer_factory.hpp:77] Creating layer loss
I0428 19:59:01.086575 29137 net.cpp:124] Setting up loss
I0428 19:59:01.086583 29137 net.cpp:131] Top shape: (1)
I0428 19:59:01.086587 29137 net.cpp:134]     with loss weight 1
I0428 19:59:01.086603 29137 net.cpp:139] Memory required for data: 3558808
I0428 19:59:01.086607 29137 net.cpp:200] loss needs backward computation.
I0428 19:59:01.086611 29137 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:01.086616 29137 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:59:01.086618 29137 net.cpp:200] relu3 needs backward computation.
I0428 19:59:01.086621 29137 net.cpp:200] ip3 needs backward computation.
I0428 19:59:01.086623 29137 net.cpp:200] relu2 needs backward computation.
I0428 19:59:01.086627 29137 net.cpp:200] ip2 needs backward computation.
I0428 19:59:01.086629 29137 net.cpp:200] relu1 needs backward computation.
I0428 19:59:01.086632 29137 net.cpp:200] ip1 needs backward computation.
I0428 19:59:01.086634 29137 net.cpp:200] pool1 needs backward computation.
I0428 19:59:01.086637 29137 net.cpp:200] conv1 needs backward computation.
I0428 19:59:01.086640 29137 net.cpp:200] pool0 needs backward computation.
I0428 19:59:01.086643 29137 net.cpp:200] conv0 needs backward computation.
I0428 19:59:01.086647 29137 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:01.086650 29137 net.cpp:202] mnist does not need backward computation.
I0428 19:59:01.086653 29137 net.cpp:244] This network produces output accuracy
I0428 19:59:01.086657 29137 net.cpp:244] This network produces output loss
I0428 19:59:01.086668 29137 net.cpp:257] Network initialization done.
I0428 19:59:01.086706 29137 solver.cpp:56] Solver scaffolding done.
I0428 19:59:01.087064 29137 caffe.cpp:248] Starting Optimization
I0428 19:59:01.087070 29137 solver.cpp:273] Solving LeNet
I0428 19:59:01.087074 29137 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:01.087326 29137 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:01.091590 29137 blocking_queue.cpp:49] Waiting for data
I0428 19:59:01.162001 29144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:01.162513 29137 solver.cpp:398]     Test net output #0: accuracy = 0.0935
I0428 19:59:01.162530 29137 solver.cpp:398]     Test net output #1: loss = 2.30493 (* 1 = 2.30493 loss)
I0428 19:59:01.165009 29137 solver.cpp:219] Iteration 0 (0 iter/s, 0.0778957s/100 iters), loss = 2.30512
I0428 19:59:01.165063 29137 solver.cpp:238]     Train net output #0: loss = 2.30512 (* 1 = 2.30512 loss)
I0428 19:59:01.165076 29137 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:01.243569 29137 solver.cpp:219] Iteration 100 (1273.97 iter/s, 0.0784946s/100 iters), loss = 0.827923
I0428 19:59:01.243593 29137 solver.cpp:238]     Train net output #0: loss = 0.827923 (* 1 = 0.827923 loss)
I0428 19:59:01.243599 29137 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:01.321178 29137 solver.cpp:219] Iteration 200 (1289.06 iter/s, 0.0775762s/100 iters), loss = 1.0247
I0428 19:59:01.321202 29137 solver.cpp:238]     Train net output #0: loss = 1.0247 (* 1 = 1.0247 loss)
I0428 19:59:01.321208 29137 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:01.399196 29137 solver.cpp:219] Iteration 300 (1282.3 iter/s, 0.0779847s/100 iters), loss = 0.624398
I0428 19:59:01.399235 29137 solver.cpp:238]     Train net output #0: loss = 0.624398 (* 1 = 0.624398 loss)
I0428 19:59:01.399240 29137 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:01.477208 29137 solver.cpp:219] Iteration 400 (1282.37 iter/s, 0.0779806s/100 iters), loss = 0.570741
I0428 19:59:01.477232 29137 solver.cpp:238]     Train net output #0: loss = 0.570741 (* 1 = 0.570741 loss)
I0428 19:59:01.477238 29137 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:01.553876 29137 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:01.601215 29144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:01.601714 29137 solver.cpp:398]     Test net output #0: accuracy = 0.7612
I0428 19:59:01.601734 29137 solver.cpp:398]     Test net output #1: loss = 0.667896 (* 1 = 0.667896 loss)
I0428 19:59:01.602514 29137 solver.cpp:219] Iteration 500 (798.269 iter/s, 0.125271s/100 iters), loss = 0.674314
I0428 19:59:01.602537 29137 solver.cpp:238]     Train net output #0: loss = 0.674314 (* 1 = 0.674314 loss)
I0428 19:59:01.602558 29137 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:01.680616 29137 solver.cpp:219] Iteration 600 (1280.89 iter/s, 0.0780707s/100 iters), loss = 0.41879
I0428 19:59:01.680641 29137 solver.cpp:238]     Train net output #0: loss = 0.41879 (* 1 = 0.41879 loss)
I0428 19:59:01.680647 29137 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:01.758038 29137 solver.cpp:219] Iteration 700 (1292.21 iter/s, 0.0773869s/100 iters), loss = 0.931568
I0428 19:59:01.758076 29137 solver.cpp:238]     Train net output #0: loss = 0.931568 (* 1 = 0.931568 loss)
I0428 19:59:01.758081 29137 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:01.842900 29137 solver.cpp:219] Iteration 800 (1178.81 iter/s, 0.0848312s/100 iters), loss = 0.577433
I0428 19:59:01.842924 29137 solver.cpp:238]     Train net output #0: loss = 0.577433 (* 1 = 0.577433 loss)
I0428 19:59:01.842931 29137 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:01.923785 29137 solver.cpp:219] Iteration 900 (1236.84 iter/s, 0.0808509s/100 iters), loss = 0.612168
I0428 19:59:01.923810 29137 solver.cpp:238]     Train net output #0: loss = 0.612168 (* 1 = 0.612168 loss)
I0428 19:59:01.923815 29137 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:01.949854 29143 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:02.000383 29137 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:02.001286 29137 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:02.001752 29137 solver.cpp:311] Iteration 1000, loss = 0.731297
I0428 19:59:02.001767 29137 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:02.076289 29144 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:02.076833 29137 solver.cpp:398]     Test net output #0: accuracy = 0.7803
I0428 19:59:02.076850 29137 solver.cpp:398]     Test net output #1: loss = 0.581543 (* 1 = 0.581543 loss)
I0428 19:59:02.076872 29137 solver.cpp:316] Optimization Done.
I0428 19:59:02.076875 29137 caffe.cpp:259] Optimization Done.
