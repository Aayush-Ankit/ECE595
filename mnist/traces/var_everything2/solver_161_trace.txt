I0428 19:32:44.040719 22907 caffe.cpp:218] Using GPUs 0
I0428 19:32:44.078815 22907 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:44.590106 22907 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test161.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:44.590242 22907 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test161.prototxt
I0428 19:32:44.590566 22907 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:44.590582 22907 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:44.590658 22907 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:32:44.590721 22907 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:44.590826 22907 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:44.590848 22907 net.cpp:86] Creating Layer mnist
I0428 19:32:44.590855 22907 net.cpp:382] mnist -> data
I0428 19:32:44.590879 22907 net.cpp:382] mnist -> label
I0428 19:32:44.592017 22907 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:44.594477 22907 net.cpp:124] Setting up mnist
I0428 19:32:44.594496 22907 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:44.594502 22907 net.cpp:131] Top shape: 64 (64)
I0428 19:32:44.594506 22907 net.cpp:139] Memory required for data: 200960
I0428 19:32:44.594514 22907 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:44.594532 22907 net.cpp:86] Creating Layer conv0
I0428 19:32:44.594537 22907 net.cpp:408] conv0 <- data
I0428 19:32:44.594549 22907 net.cpp:382] conv0 -> conv0
I0428 19:32:44.876929 22907 net.cpp:124] Setting up conv0
I0428 19:32:44.876953 22907 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:32:44.876957 22907 net.cpp:139] Memory required for data: 3887360
I0428 19:32:44.876972 22907 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:44.876986 22907 net.cpp:86] Creating Layer pool0
I0428 19:32:44.876989 22907 net.cpp:408] pool0 <- conv0
I0428 19:32:44.876994 22907 net.cpp:382] pool0 -> pool0
I0428 19:32:44.877055 22907 net.cpp:124] Setting up pool0
I0428 19:32:44.877063 22907 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:32:44.877066 22907 net.cpp:139] Memory required for data: 4808960
I0428 19:32:44.877086 22907 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:44.877095 22907 net.cpp:86] Creating Layer ip1
I0428 19:32:44.877099 22907 net.cpp:408] ip1 <- pool0
I0428 19:32:44.877104 22907 net.cpp:382] ip1 -> ip1
I0428 19:32:44.877423 22907 net.cpp:124] Setting up ip1
I0428 19:32:44.877430 22907 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:44.877434 22907 net.cpp:139] Memory required for data: 4811520
I0428 19:32:44.877439 22907 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:44.877445 22907 net.cpp:86] Creating Layer relu1
I0428 19:32:44.877449 22907 net.cpp:408] relu1 <- ip1
I0428 19:32:44.877452 22907 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:44.877605 22907 net.cpp:124] Setting up relu1
I0428 19:32:44.877614 22907 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:44.877616 22907 net.cpp:139] Memory required for data: 4814080
I0428 19:32:44.877619 22907 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:44.877625 22907 net.cpp:86] Creating Layer ip2
I0428 19:32:44.877629 22907 net.cpp:408] ip2 <- ip1
I0428 19:32:44.877632 22907 net.cpp:382] ip2 -> ip2
I0428 19:32:44.877718 22907 net.cpp:124] Setting up ip2
I0428 19:32:44.877725 22907 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:44.877728 22907 net.cpp:139] Memory required for data: 4816640
I0428 19:32:44.877734 22907 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:44.877739 22907 net.cpp:86] Creating Layer relu2
I0428 19:32:44.877743 22907 net.cpp:408] relu2 <- ip2
I0428 19:32:44.877746 22907 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:44.878430 22907 net.cpp:124] Setting up relu2
I0428 19:32:44.878443 22907 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:44.878446 22907 net.cpp:139] Memory required for data: 4819200
I0428 19:32:44.878449 22907 layer_factory.hpp:77] Creating layer loss
I0428 19:32:44.878455 22907 net.cpp:86] Creating Layer loss
I0428 19:32:44.878459 22907 net.cpp:408] loss <- ip2
I0428 19:32:44.878463 22907 net.cpp:408] loss <- label
I0428 19:32:44.878468 22907 net.cpp:382] loss -> loss
I0428 19:32:44.878486 22907 layer_factory.hpp:77] Creating layer loss
I0428 19:32:44.878695 22907 net.cpp:124] Setting up loss
I0428 19:32:44.878705 22907 net.cpp:131] Top shape: (1)
I0428 19:32:44.878707 22907 net.cpp:134]     with loss weight 1
I0428 19:32:44.878722 22907 net.cpp:139] Memory required for data: 4819204
I0428 19:32:44.878726 22907 net.cpp:200] loss needs backward computation.
I0428 19:32:44.878729 22907 net.cpp:200] relu2 needs backward computation.
I0428 19:32:44.878732 22907 net.cpp:200] ip2 needs backward computation.
I0428 19:32:44.878734 22907 net.cpp:200] relu1 needs backward computation.
I0428 19:32:44.878737 22907 net.cpp:200] ip1 needs backward computation.
I0428 19:32:44.878741 22907 net.cpp:200] pool0 needs backward computation.
I0428 19:32:44.878743 22907 net.cpp:200] conv0 needs backward computation.
I0428 19:32:44.878746 22907 net.cpp:202] mnist does not need backward computation.
I0428 19:32:44.878749 22907 net.cpp:244] This network produces output loss
I0428 19:32:44.878756 22907 net.cpp:257] Network initialization done.
I0428 19:32:44.878996 22907 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test161.prototxt
I0428 19:32:44.879020 22907 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:44.879089 22907 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:32:44.879155 22907 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:44.879199 22907 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:44.879214 22907 net.cpp:86] Creating Layer mnist
I0428 19:32:44.879220 22907 net.cpp:382] mnist -> data
I0428 19:32:44.879227 22907 net.cpp:382] mnist -> label
I0428 19:32:44.879307 22907 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:44.881345 22907 net.cpp:124] Setting up mnist
I0428 19:32:44.881357 22907 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:44.881362 22907 net.cpp:131] Top shape: 100 (100)
I0428 19:32:44.881366 22907 net.cpp:139] Memory required for data: 314000
I0428 19:32:44.881368 22907 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:44.881378 22907 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:44.881382 22907 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:44.881386 22907 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:44.881394 22907 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:44.881429 22907 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:44.881436 22907 net.cpp:131] Top shape: 100 (100)
I0428 19:32:44.881439 22907 net.cpp:131] Top shape: 100 (100)
I0428 19:32:44.881443 22907 net.cpp:139] Memory required for data: 314800
I0428 19:32:44.881445 22907 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:44.881453 22907 net.cpp:86] Creating Layer conv0
I0428 19:32:44.881458 22907 net.cpp:408] conv0 <- data
I0428 19:32:44.881479 22907 net.cpp:382] conv0 -> conv0
I0428 19:32:44.883271 22907 net.cpp:124] Setting up conv0
I0428 19:32:44.883285 22907 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:32:44.883304 22907 net.cpp:139] Memory required for data: 6074800
I0428 19:32:44.883312 22907 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:44.883321 22907 net.cpp:86] Creating Layer pool0
I0428 19:32:44.883324 22907 net.cpp:408] pool0 <- conv0
I0428 19:32:44.883329 22907 net.cpp:382] pool0 -> pool0
I0428 19:32:44.883368 22907 net.cpp:124] Setting up pool0
I0428 19:32:44.883374 22907 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:32:44.883378 22907 net.cpp:139] Memory required for data: 7514800
I0428 19:32:44.883380 22907 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:44.883388 22907 net.cpp:86] Creating Layer ip1
I0428 19:32:44.883390 22907 net.cpp:408] ip1 <- pool0
I0428 19:32:44.883396 22907 net.cpp:382] ip1 -> ip1
I0428 19:32:44.883805 22907 net.cpp:124] Setting up ip1
I0428 19:32:44.883812 22907 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:44.883831 22907 net.cpp:139] Memory required for data: 7518800
I0428 19:32:44.883853 22907 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:44.883858 22907 net.cpp:86] Creating Layer relu1
I0428 19:32:44.883862 22907 net.cpp:408] relu1 <- ip1
I0428 19:32:44.883891 22907 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:44.884271 22907 net.cpp:124] Setting up relu1
I0428 19:32:44.884280 22907 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:44.884310 22907 net.cpp:139] Memory required for data: 7522800
I0428 19:32:44.884330 22907 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:44.884337 22907 net.cpp:86] Creating Layer ip2
I0428 19:32:44.884341 22907 net.cpp:408] ip2 <- ip1
I0428 19:32:44.884346 22907 net.cpp:382] ip2 -> ip2
I0428 19:32:44.884450 22907 net.cpp:124] Setting up ip2
I0428 19:32:44.884459 22907 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:44.884461 22907 net.cpp:139] Memory required for data: 7526800
I0428 19:32:44.884469 22907 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:44.884479 22907 net.cpp:86] Creating Layer relu2
I0428 19:32:44.884482 22907 net.cpp:408] relu2 <- ip2
I0428 19:32:44.884487 22907 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:44.884654 22907 net.cpp:124] Setting up relu2
I0428 19:32:44.884662 22907 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:44.884665 22907 net.cpp:139] Memory required for data: 7530800
I0428 19:32:44.884668 22907 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:32:44.884675 22907 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:32:44.884680 22907 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:32:44.884683 22907 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:32:44.884724 22907 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:32:44.884763 22907 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:32:44.884768 22907 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:44.884773 22907 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:44.884786 22907 net.cpp:139] Memory required for data: 7538800
I0428 19:32:44.884790 22907 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:44.884798 22907 net.cpp:86] Creating Layer accuracy
I0428 19:32:44.884800 22907 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:32:44.884804 22907 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:44.884817 22907 net.cpp:382] accuracy -> accuracy
I0428 19:32:44.884825 22907 net.cpp:124] Setting up accuracy
I0428 19:32:44.884829 22907 net.cpp:131] Top shape: (1)
I0428 19:32:44.884834 22907 net.cpp:139] Memory required for data: 7538804
I0428 19:32:44.884836 22907 layer_factory.hpp:77] Creating layer loss
I0428 19:32:44.884841 22907 net.cpp:86] Creating Layer loss
I0428 19:32:44.884845 22907 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:32:44.884848 22907 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:44.884860 22907 net.cpp:382] loss -> loss
I0428 19:32:44.884867 22907 layer_factory.hpp:77] Creating layer loss
I0428 19:32:44.885835 22907 net.cpp:124] Setting up loss
I0428 19:32:44.885869 22907 net.cpp:131] Top shape: (1)
I0428 19:32:44.885872 22907 net.cpp:134]     with loss weight 1
I0428 19:32:44.885879 22907 net.cpp:139] Memory required for data: 7538808
I0428 19:32:44.885882 22907 net.cpp:200] loss needs backward computation.
I0428 19:32:44.885887 22907 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:44.885890 22907 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:32:44.885893 22907 net.cpp:200] relu2 needs backward computation.
I0428 19:32:44.885896 22907 net.cpp:200] ip2 needs backward computation.
I0428 19:32:44.885900 22907 net.cpp:200] relu1 needs backward computation.
I0428 19:32:44.885902 22907 net.cpp:200] ip1 needs backward computation.
I0428 19:32:44.885905 22907 net.cpp:200] pool0 needs backward computation.
I0428 19:32:44.885908 22907 net.cpp:200] conv0 needs backward computation.
I0428 19:32:44.885912 22907 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:44.885916 22907 net.cpp:202] mnist does not need backward computation.
I0428 19:32:44.885918 22907 net.cpp:244] This network produces output accuracy
I0428 19:32:44.885922 22907 net.cpp:244] This network produces output loss
I0428 19:32:44.885942 22907 net.cpp:257] Network initialization done.
I0428 19:32:44.885977 22907 solver.cpp:56] Solver scaffolding done.
I0428 19:32:44.886198 22907 caffe.cpp:248] Starting Optimization
I0428 19:32:44.886204 22907 solver.cpp:273] Solving LeNet
I0428 19:32:44.886219 22907 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:44.887001 22907 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:44.892534 22907 blocking_queue.cpp:49] Waiting for data
I0428 19:32:44.963804 22953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:44.964507 22907 solver.cpp:398]     Test net output #0: accuracy = 0.1201
I0428 19:32:44.964540 22907 solver.cpp:398]     Test net output #1: loss = 2.29052 (* 1 = 2.29052 loss)
I0428 19:32:44.968186 22907 solver.cpp:219] Iteration 0 (0 iter/s, 0.0819398s/100 iters), loss = 2.29591
I0428 19:32:44.968224 22907 solver.cpp:238]     Train net output #0: loss = 2.29591 (* 1 = 2.29591 loss)
I0428 19:32:44.968233 22907 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:45.056977 22907 solver.cpp:219] Iteration 100 (1126.68 iter/s, 0.0887561s/100 iters), loss = 0.772976
I0428 19:32:45.057016 22907 solver.cpp:238]     Train net output #0: loss = 0.772976 (* 1 = 0.772976 loss)
I0428 19:32:45.057024 22907 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:45.145172 22907 solver.cpp:219] Iteration 200 (1134.3 iter/s, 0.0881603s/100 iters), loss = 0.492714
I0428 19:32:45.145211 22907 solver.cpp:238]     Train net output #0: loss = 0.492714 (* 1 = 0.492714 loss)
I0428 19:32:45.145217 22907 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:45.233355 22907 solver.cpp:219] Iteration 300 (1134.44 iter/s, 0.088149s/100 iters), loss = 0.48684
I0428 19:32:45.233378 22907 solver.cpp:238]     Train net output #0: loss = 0.48684 (* 1 = 0.48684 loss)
I0428 19:32:45.233384 22907 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:45.321470 22907 solver.cpp:219] Iteration 400 (1135.31 iter/s, 0.0880816s/100 iters), loss = 0.221777
I0428 19:32:45.321496 22907 solver.cpp:238]     Train net output #0: loss = 0.221777 (* 1 = 0.221777 loss)
I0428 19:32:45.321501 22907 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:45.408577 22907 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:45.467684 22953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:45.469238 22907 solver.cpp:398]     Test net output #0: accuracy = 0.9343
I0428 19:32:45.469259 22907 solver.cpp:398]     Test net output #1: loss = 0.22756 (* 1 = 0.22756 loss)
I0428 19:32:45.470163 22907 solver.cpp:219] Iteration 500 (672.698 iter/s, 0.148655s/100 iters), loss = 0.317127
I0428 19:32:45.470193 22907 solver.cpp:238]     Train net output #0: loss = 0.317127 (* 1 = 0.317127 loss)
I0428 19:32:45.470201 22907 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:45.566372 22907 solver.cpp:219] Iteration 600 (1039.75 iter/s, 0.0961772s/100 iters), loss = 0.142647
I0428 19:32:45.566397 22907 solver.cpp:238]     Train net output #0: loss = 0.142647 (* 1 = 0.142647 loss)
I0428 19:32:45.566404 22907 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:45.662196 22907 solver.cpp:219] Iteration 700 (1043.96 iter/s, 0.0957891s/100 iters), loss = 0.265443
I0428 19:32:45.662240 22907 solver.cpp:238]     Train net output #0: loss = 0.265443 (* 1 = 0.265443 loss)
I0428 19:32:45.662247 22907 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:45.757536 22907 solver.cpp:219] Iteration 800 (1049.29 iter/s, 0.0953027s/100 iters), loss = 0.374206
I0428 19:32:45.757565 22907 solver.cpp:238]     Train net output #0: loss = 0.374206 (* 1 = 0.374206 loss)
I0428 19:32:45.757570 22907 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:45.846171 22907 solver.cpp:219] Iteration 900 (1128.7 iter/s, 0.0885975s/100 iters), loss = 0.227993
I0428 19:32:45.846196 22907 solver.cpp:238]     Train net output #0: loss = 0.227993 (* 1 = 0.227993 loss)
I0428 19:32:45.846202 22907 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:45.875600 22942 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:45.937875 22907 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:45.938990 22907 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:45.939899 22907 solver.cpp:311] Iteration 1000, loss = 0.129979
I0428 19:32:45.939915 22907 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:46.014997 22953 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:46.015682 22907 solver.cpp:398]     Test net output #0: accuracy = 0.9591
I0428 19:32:46.015714 22907 solver.cpp:398]     Test net output #1: loss = 0.134201 (* 1 = 0.134201 loss)
I0428 19:32:46.015719 22907 solver.cpp:316] Optimization Done.
I0428 19:32:46.015722 22907 caffe.cpp:259] Optimization Done.
