I0428 20:18:12.361136  1076 caffe.cpp:218] Using GPUs 0
I0428 20:18:12.393364  1076 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:18:12.840764  1076 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1313.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:18:12.840931  1076 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1313.prototxt
I0428 20:18:12.841323  1076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:18:12.841356  1076 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:18:12.841437  1076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:12.841500  1076 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:12.841583  1076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:18:12.841603  1076 net.cpp:86] Creating Layer mnist
I0428 20:18:12.841609  1076 net.cpp:382] mnist -> data
I0428 20:18:12.841627  1076 net.cpp:382] mnist -> label
I0428 20:18:12.842509  1076 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:18:12.844835  1076 net.cpp:124] Setting up mnist
I0428 20:18:12.844866  1076 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:18:12.844888  1076 net.cpp:131] Top shape: 64 (64)
I0428 20:18:12.844892  1076 net.cpp:139] Memory required for data: 200960
I0428 20:18:12.844897  1076 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:12.844910  1076 net.cpp:86] Creating Layer conv0
I0428 20:18:12.844928  1076 net.cpp:408] conv0 <- data
I0428 20:18:12.844940  1076 net.cpp:382] conv0 -> conv0
I0428 20:18:13.070263  1076 net.cpp:124] Setting up conv0
I0428 20:18:13.070304  1076 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 20:18:13.070309  1076 net.cpp:139] Memory required for data: 7573760
I0428 20:18:13.070324  1076 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:13.070354  1076 net.cpp:86] Creating Layer pool0
I0428 20:18:13.070358  1076 net.cpp:408] pool0 <- conv0
I0428 20:18:13.070363  1076 net.cpp:382] pool0 -> pool0
I0428 20:18:13.070410  1076 net.cpp:124] Setting up pool0
I0428 20:18:13.070417  1076 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 20:18:13.070420  1076 net.cpp:139] Memory required for data: 9416960
I0428 20:18:13.070423  1076 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:13.070436  1076 net.cpp:86] Creating Layer conv1
I0428 20:18:13.070439  1076 net.cpp:408] conv1 <- pool0
I0428 20:18:13.070444  1076 net.cpp:382] conv1 -> conv1
I0428 20:18:13.073269  1076 net.cpp:124] Setting up conv1
I0428 20:18:13.073298  1076 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:18:13.073302  1076 net.cpp:139] Memory required for data: 9580800
I0428 20:18:13.073328  1076 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:13.073335  1076 net.cpp:86] Creating Layer pool1
I0428 20:18:13.073338  1076 net.cpp:408] pool1 <- conv1
I0428 20:18:13.073343  1076 net.cpp:382] pool1 -> pool1
I0428 20:18:13.073380  1076 net.cpp:124] Setting up pool1
I0428 20:18:13.073387  1076 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:18:13.073390  1076 net.cpp:139] Memory required for data: 9621760
I0428 20:18:13.073393  1076 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:13.073400  1076 net.cpp:86] Creating Layer ip1
I0428 20:18:13.073403  1076 net.cpp:408] ip1 <- pool1
I0428 20:18:13.073407  1076 net.cpp:382] ip1 -> ip1
I0428 20:18:13.073535  1076 net.cpp:124] Setting up ip1
I0428 20:18:13.073544  1076 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:13.073546  1076 net.cpp:139] Memory required for data: 9628160
I0428 20:18:13.073554  1076 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:13.073559  1076 net.cpp:86] Creating Layer relu1
I0428 20:18:13.073563  1076 net.cpp:408] relu1 <- ip1
I0428 20:18:13.073567  1076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:13.073727  1076 net.cpp:124] Setting up relu1
I0428 20:18:13.073735  1076 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:13.073738  1076 net.cpp:139] Memory required for data: 9634560
I0428 20:18:13.073741  1076 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:13.073748  1076 net.cpp:86] Creating Layer ip2
I0428 20:18:13.073751  1076 net.cpp:408] ip2 <- ip1
I0428 20:18:13.073755  1076 net.cpp:382] ip2 -> ip2
I0428 20:18:13.073848  1076 net.cpp:124] Setting up ip2
I0428 20:18:13.073855  1076 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:13.073858  1076 net.cpp:139] Memory required for data: 9640960
I0428 20:18:13.073864  1076 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:13.073870  1076 net.cpp:86] Creating Layer relu2
I0428 20:18:13.073873  1076 net.cpp:408] relu2 <- ip2
I0428 20:18:13.073878  1076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:13.074604  1076 net.cpp:124] Setting up relu2
I0428 20:18:13.074617  1076 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:18:13.074635  1076 net.cpp:139] Memory required for data: 9647360
I0428 20:18:13.074640  1076 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:13.074646  1076 net.cpp:86] Creating Layer ip3
I0428 20:18:13.074650  1076 net.cpp:408] ip3 <- ip2
I0428 20:18:13.074656  1076 net.cpp:382] ip3 -> ip3
I0428 20:18:13.074753  1076 net.cpp:124] Setting up ip3
I0428 20:18:13.074760  1076 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:13.074764  1076 net.cpp:139] Memory required for data: 9649920
I0428 20:18:13.074771  1076 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:13.074779  1076 net.cpp:86] Creating Layer relu3
I0428 20:18:13.074781  1076 net.cpp:408] relu3 <- ip3
I0428 20:18:13.074786  1076 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:13.074951  1076 net.cpp:124] Setting up relu3
I0428 20:18:13.074959  1076 net.cpp:131] Top shape: 64 10 (640)
I0428 20:18:13.074964  1076 net.cpp:139] Memory required for data: 9652480
I0428 20:18:13.074966  1076 layer_factory.hpp:77] Creating layer loss
I0428 20:18:13.074971  1076 net.cpp:86] Creating Layer loss
I0428 20:18:13.074975  1076 net.cpp:408] loss <- ip3
I0428 20:18:13.074980  1076 net.cpp:408] loss <- label
I0428 20:18:13.074985  1076 net.cpp:382] loss -> loss
I0428 20:18:13.075000  1076 layer_factory.hpp:77] Creating layer loss
I0428 20:18:13.075223  1076 net.cpp:124] Setting up loss
I0428 20:18:13.075232  1076 net.cpp:131] Top shape: (1)
I0428 20:18:13.075237  1076 net.cpp:134]     with loss weight 1
I0428 20:18:13.075250  1076 net.cpp:139] Memory required for data: 9652484
I0428 20:18:13.075254  1076 net.cpp:200] loss needs backward computation.
I0428 20:18:13.075258  1076 net.cpp:200] relu3 needs backward computation.
I0428 20:18:13.075261  1076 net.cpp:200] ip3 needs backward computation.
I0428 20:18:13.075264  1076 net.cpp:200] relu2 needs backward computation.
I0428 20:18:13.075268  1076 net.cpp:200] ip2 needs backward computation.
I0428 20:18:13.075270  1076 net.cpp:200] relu1 needs backward computation.
I0428 20:18:13.075273  1076 net.cpp:200] ip1 needs backward computation.
I0428 20:18:13.075276  1076 net.cpp:200] pool1 needs backward computation.
I0428 20:18:13.075279  1076 net.cpp:200] conv1 needs backward computation.
I0428 20:18:13.075284  1076 net.cpp:200] pool0 needs backward computation.
I0428 20:18:13.075286  1076 net.cpp:200] conv0 needs backward computation.
I0428 20:18:13.075290  1076 net.cpp:202] mnist does not need backward computation.
I0428 20:18:13.075294  1076 net.cpp:244] This network produces output loss
I0428 20:18:13.075302  1076 net.cpp:257] Network initialization done.
I0428 20:18:13.075664  1076 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1313.prototxt
I0428 20:18:13.075702  1076 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:18:13.075810  1076 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:18:13.075891  1076 layer_factory.hpp:77] Creating layer mnist
I0428 20:18:13.075939  1076 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:18:13.075953  1076 net.cpp:86] Creating Layer mnist
I0428 20:18:13.075958  1076 net.cpp:382] mnist -> data
I0428 20:18:13.075980  1076 net.cpp:382] mnist -> label
I0428 20:18:13.076064  1076 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:18:13.078112  1076 net.cpp:124] Setting up mnist
I0428 20:18:13.078152  1076 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:18:13.078158  1076 net.cpp:131] Top shape: 100 (100)
I0428 20:18:13.078172  1076 net.cpp:139] Memory required for data: 314000
I0428 20:18:13.078176  1076 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:18:13.078183  1076 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:18:13.078186  1076 net.cpp:408] label_mnist_1_split <- label
I0428 20:18:13.078191  1076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:18:13.078198  1076 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:18:13.078291  1076 net.cpp:124] Setting up label_mnist_1_split
I0428 20:18:13.078300  1076 net.cpp:131] Top shape: 100 (100)
I0428 20:18:13.078305  1076 net.cpp:131] Top shape: 100 (100)
I0428 20:18:13.078307  1076 net.cpp:139] Memory required for data: 314800
I0428 20:18:13.078310  1076 layer_factory.hpp:77] Creating layer conv0
I0428 20:18:13.078320  1076 net.cpp:86] Creating Layer conv0
I0428 20:18:13.078322  1076 net.cpp:408] conv0 <- data
I0428 20:18:13.078327  1076 net.cpp:382] conv0 -> conv0
I0428 20:18:13.080040  1076 net.cpp:124] Setting up conv0
I0428 20:18:13.080054  1076 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 20:18:13.080073  1076 net.cpp:139] Memory required for data: 11834800
I0428 20:18:13.080082  1076 layer_factory.hpp:77] Creating layer pool0
I0428 20:18:13.080088  1076 net.cpp:86] Creating Layer pool0
I0428 20:18:13.080092  1076 net.cpp:408] pool0 <- conv0
I0428 20:18:13.080096  1076 net.cpp:382] pool0 -> pool0
I0428 20:18:13.080143  1076 net.cpp:124] Setting up pool0
I0428 20:18:13.080148  1076 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 20:18:13.080152  1076 net.cpp:139] Memory required for data: 14714800
I0428 20:18:13.080154  1076 layer_factory.hpp:77] Creating layer conv1
I0428 20:18:13.080163  1076 net.cpp:86] Creating Layer conv1
I0428 20:18:13.080168  1076 net.cpp:408] conv1 <- pool0
I0428 20:18:13.080171  1076 net.cpp:382] conv1 -> conv1
I0428 20:18:13.081900  1076 net.cpp:124] Setting up conv1
I0428 20:18:13.081933  1076 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:18:13.081939  1076 net.cpp:139] Memory required for data: 14970800
I0428 20:18:13.081965  1076 layer_factory.hpp:77] Creating layer pool1
I0428 20:18:13.081972  1076 net.cpp:86] Creating Layer pool1
I0428 20:18:13.081976  1076 net.cpp:408] pool1 <- conv1
I0428 20:18:13.081984  1076 net.cpp:382] pool1 -> pool1
I0428 20:18:13.082022  1076 net.cpp:124] Setting up pool1
I0428 20:18:13.082041  1076 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:18:13.082044  1076 net.cpp:139] Memory required for data: 15034800
I0428 20:18:13.082069  1076 layer_factory.hpp:77] Creating layer ip1
I0428 20:18:13.082075  1076 net.cpp:86] Creating Layer ip1
I0428 20:18:13.082078  1076 net.cpp:408] ip1 <- pool1
I0428 20:18:13.082085  1076 net.cpp:382] ip1 -> ip1
I0428 20:18:13.082221  1076 net.cpp:124] Setting up ip1
I0428 20:18:13.082229  1076 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:13.082243  1076 net.cpp:139] Memory required for data: 15044800
I0428 20:18:13.082252  1076 layer_factory.hpp:77] Creating layer relu1
I0428 20:18:13.082275  1076 net.cpp:86] Creating Layer relu1
I0428 20:18:13.082279  1076 net.cpp:408] relu1 <- ip1
I0428 20:18:13.082285  1076 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:18:13.082463  1076 net.cpp:124] Setting up relu1
I0428 20:18:13.082473  1076 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:13.082478  1076 net.cpp:139] Memory required for data: 15054800
I0428 20:18:13.082480  1076 layer_factory.hpp:77] Creating layer ip2
I0428 20:18:13.082489  1076 net.cpp:86] Creating Layer ip2
I0428 20:18:13.082499  1076 net.cpp:408] ip2 <- ip1
I0428 20:18:13.082504  1076 net.cpp:382] ip2 -> ip2
I0428 20:18:13.082610  1076 net.cpp:124] Setting up ip2
I0428 20:18:13.082617  1076 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:13.082635  1076 net.cpp:139] Memory required for data: 15064800
I0428 20:18:13.082641  1076 layer_factory.hpp:77] Creating layer relu2
I0428 20:18:13.082646  1076 net.cpp:86] Creating Layer relu2
I0428 20:18:13.082649  1076 net.cpp:408] relu2 <- ip2
I0428 20:18:13.082655  1076 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:18:13.082978  1076 net.cpp:124] Setting up relu2
I0428 20:18:13.082986  1076 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:18:13.082989  1076 net.cpp:139] Memory required for data: 15074800
I0428 20:18:13.082993  1076 layer_factory.hpp:77] Creating layer ip3
I0428 20:18:13.083014  1076 net.cpp:86] Creating Layer ip3
I0428 20:18:13.083019  1076 net.cpp:408] ip3 <- ip2
I0428 20:18:13.083026  1076 net.cpp:382] ip3 -> ip3
I0428 20:18:13.083155  1076 net.cpp:124] Setting up ip3
I0428 20:18:13.083163  1076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:13.083168  1076 net.cpp:139] Memory required for data: 15078800
I0428 20:18:13.083175  1076 layer_factory.hpp:77] Creating layer relu3
I0428 20:18:13.083181  1076 net.cpp:86] Creating Layer relu3
I0428 20:18:13.083184  1076 net.cpp:408] relu3 <- ip3
I0428 20:18:13.083189  1076 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:18:13.084060  1076 net.cpp:124] Setting up relu3
I0428 20:18:13.084071  1076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:13.084091  1076 net.cpp:139] Memory required for data: 15082800
I0428 20:18:13.084095  1076 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:18:13.084101  1076 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:18:13.084105  1076 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:18:13.084110  1076 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:18:13.084115  1076 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:18:13.084177  1076 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:18:13.084184  1076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:13.084188  1076 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:18:13.084192  1076 net.cpp:139] Memory required for data: 15090800
I0428 20:18:13.084194  1076 layer_factory.hpp:77] Creating layer accuracy
I0428 20:18:13.084198  1076 net.cpp:86] Creating Layer accuracy
I0428 20:18:13.084202  1076 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:18:13.084206  1076 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:18:13.084211  1076 net.cpp:382] accuracy -> accuracy
I0428 20:18:13.084218  1076 net.cpp:124] Setting up accuracy
I0428 20:18:13.084223  1076 net.cpp:131] Top shape: (1)
I0428 20:18:13.084225  1076 net.cpp:139] Memory required for data: 15090804
I0428 20:18:13.084228  1076 layer_factory.hpp:77] Creating layer loss
I0428 20:18:13.084233  1076 net.cpp:86] Creating Layer loss
I0428 20:18:13.084235  1076 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:18:13.084240  1076 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:18:13.084245  1076 net.cpp:382] loss -> loss
I0428 20:18:13.084256  1076 layer_factory.hpp:77] Creating layer loss
I0428 20:18:13.084545  1076 net.cpp:124] Setting up loss
I0428 20:18:13.084555  1076 net.cpp:131] Top shape: (1)
I0428 20:18:13.084569  1076 net.cpp:134]     with loss weight 1
I0428 20:18:13.084596  1076 net.cpp:139] Memory required for data: 15090808
I0428 20:18:13.084600  1076 net.cpp:200] loss needs backward computation.
I0428 20:18:13.084604  1076 net.cpp:202] accuracy does not need backward computation.
I0428 20:18:13.084609  1076 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:18:13.084612  1076 net.cpp:200] relu3 needs backward computation.
I0428 20:18:13.084615  1076 net.cpp:200] ip3 needs backward computation.
I0428 20:18:13.084619  1076 net.cpp:200] relu2 needs backward computation.
I0428 20:18:13.084622  1076 net.cpp:200] ip2 needs backward computation.
I0428 20:18:13.084631  1076 net.cpp:200] relu1 needs backward computation.
I0428 20:18:13.084635  1076 net.cpp:200] ip1 needs backward computation.
I0428 20:18:13.084638  1076 net.cpp:200] pool1 needs backward computation.
I0428 20:18:13.084641  1076 net.cpp:200] conv1 needs backward computation.
I0428 20:18:13.084645  1076 net.cpp:200] pool0 needs backward computation.
I0428 20:18:13.084653  1076 net.cpp:200] conv0 needs backward computation.
I0428 20:18:13.084658  1076 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:18:13.084662  1076 net.cpp:202] mnist does not need backward computation.
I0428 20:18:13.084666  1076 net.cpp:244] This network produces output accuracy
I0428 20:18:13.084668  1076 net.cpp:244] This network produces output loss
I0428 20:18:13.084681  1076 net.cpp:257] Network initialization done.
I0428 20:18:13.084739  1076 solver.cpp:56] Solver scaffolding done.
I0428 20:18:13.085151  1076 caffe.cpp:248] Starting Optimization
I0428 20:18:13.085160  1076 solver.cpp:273] Solving LeNet
I0428 20:18:13.085177  1076 solver.cpp:274] Learning Rate Policy: inv
I0428 20:18:13.086102  1076 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:18:13.092495  1076 blocking_queue.cpp:49] Waiting for data
I0428 20:18:13.159775  1083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:13.160992  1076 solver.cpp:398]     Test net output #0: accuracy = 0.0871
I0428 20:18:13.161031  1076 solver.cpp:398]     Test net output #1: loss = 2.31459 (* 1 = 2.31459 loss)
I0428 20:18:13.165380  1076 solver.cpp:219] Iteration 0 (0 iter/s, 0.0801567s/100 iters), loss = 2.31084
I0428 20:18:13.165421  1076 solver.cpp:238]     Train net output #0: loss = 2.31084 (* 1 = 2.31084 loss)
I0428 20:18:13.165434  1076 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:18:13.282143  1076 solver.cpp:219] Iteration 100 (856.822 iter/s, 0.11671s/100 iters), loss = 1.19921
I0428 20:18:13.282183  1076 solver.cpp:238]     Train net output #0: loss = 1.19921 (* 1 = 1.19921 loss)
I0428 20:18:13.282189  1076 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:18:13.397763  1076 solver.cpp:219] Iteration 200 (865.171 iter/s, 0.115584s/100 iters), loss = 0.744927
I0428 20:18:13.397805  1076 solver.cpp:238]     Train net output #0: loss = 0.744927 (* 1 = 0.744927 loss)
I0428 20:18:13.397811  1076 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:18:13.513802  1076 solver.cpp:219] Iteration 300 (862.062 iter/s, 0.116001s/100 iters), loss = 0.759405
I0428 20:18:13.513840  1076 solver.cpp:238]     Train net output #0: loss = 0.759405 (* 1 = 0.759405 loss)
I0428 20:18:13.513846  1076 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:18:13.632217  1076 solver.cpp:219] Iteration 400 (844.719 iter/s, 0.118383s/100 iters), loss = 0.988244
I0428 20:18:13.632258  1076 solver.cpp:238]     Train net output #0: loss = 0.988244 (* 1 = 0.988244 loss)
I0428 20:18:13.632266  1076 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:18:13.748257  1076 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:18:13.813043  1083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:13.815479  1076 solver.cpp:398]     Test net output #0: accuracy = 0.667
I0428 20:18:13.815503  1076 solver.cpp:398]     Test net output #1: loss = 0.830909 (* 1 = 0.830909 loss)
I0428 20:18:13.816633  1076 solver.cpp:219] Iteration 500 (542.405 iter/s, 0.184364s/100 iters), loss = 1.02263
I0428 20:18:13.816687  1076 solver.cpp:238]     Train net output #0: loss = 1.02263 (* 1 = 1.02263 loss)
I0428 20:18:13.816694  1076 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:18:13.934989  1076 solver.cpp:219] Iteration 600 (845.362 iter/s, 0.118292s/100 iters), loss = 0.879723
I0428 20:18:13.935014  1076 solver.cpp:238]     Train net output #0: loss = 0.879723 (* 1 = 0.879723 loss)
I0428 20:18:13.935019  1076 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:18:14.067160  1076 solver.cpp:219] Iteration 700 (756.825 iter/s, 0.132131s/100 iters), loss = 0.736107
I0428 20:18:14.067201  1076 solver.cpp:238]     Train net output #0: loss = 0.736107 (* 1 = 0.736107 loss)
I0428 20:18:14.067211  1076 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:18:14.199159  1076 solver.cpp:219] Iteration 800 (757.872 iter/s, 0.131948s/100 iters), loss = 0.865784
I0428 20:18:14.199190  1076 solver.cpp:238]     Train net output #0: loss = 0.865784 (* 1 = 0.865784 loss)
I0428 20:18:14.199198  1076 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:18:14.332597  1076 solver.cpp:219] Iteration 900 (749.662 iter/s, 0.133393s/100 iters), loss = 0.80529
I0428 20:18:14.332633  1076 solver.cpp:238]     Train net output #0: loss = 0.80529 (* 1 = 0.80529 loss)
I0428 20:18:14.332641  1076 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:18:14.374879  1082 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:14.457464  1076 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:18:14.458696  1076 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:18:14.459524  1076 solver.cpp:311] Iteration 1000, loss = 0.691567
I0428 20:18:14.459545  1076 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:18:14.536626  1083 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:18:14.537582  1076 solver.cpp:398]     Test net output #0: accuracy = 0.6756
I0428 20:18:14.537606  1076 solver.cpp:398]     Test net output #1: loss = 0.79511 (* 1 = 0.79511 loss)
I0428 20:18:14.537613  1076 solver.cpp:316] Optimization Done.
I0428 20:18:14.537616  1076 caffe.cpp:259] Optimization Done.
