I0428 19:36:46.493875 23728 caffe.cpp:218] Using GPUs 0
I0428 19:36:46.531420 23728 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:36:47.047798 23728 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test248.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:36:47.047932 23728 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test248.prototxt
I0428 19:36:47.048303 23728 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:36:47.048321 23728 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:36:47.048409 23728 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:47.048482 23728 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:47.048581 23728 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:36:47.048604 23728 net.cpp:86] Creating Layer mnist
I0428 19:36:47.048612 23728 net.cpp:382] mnist -> data
I0428 19:36:47.048635 23728 net.cpp:382] mnist -> label
I0428 19:36:47.049738 23728 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:36:47.052181 23728 net.cpp:124] Setting up mnist
I0428 19:36:47.052197 23728 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:36:47.052203 23728 net.cpp:131] Top shape: 64 (64)
I0428 19:36:47.052206 23728 net.cpp:139] Memory required for data: 200960
I0428 19:36:47.052213 23728 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:47.052232 23728 net.cpp:86] Creating Layer conv0
I0428 19:36:47.052237 23728 net.cpp:408] conv0 <- data
I0428 19:36:47.052248 23728 net.cpp:382] conv0 -> conv0
I0428 19:36:47.346349 23728 net.cpp:124] Setting up conv0
I0428 19:36:47.346382 23728 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:36:47.346387 23728 net.cpp:139] Memory required for data: 14946560
I0428 19:36:47.346406 23728 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:47.346421 23728 net.cpp:86] Creating Layer pool0
I0428 19:36:47.346448 23728 net.cpp:408] pool0 <- conv0
I0428 19:36:47.346456 23728 net.cpp:382] pool0 -> pool0
I0428 19:36:47.346513 23728 net.cpp:124] Setting up pool0
I0428 19:36:47.346523 23728 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:36:47.346526 23728 net.cpp:139] Memory required for data: 18632960
I0428 19:36:47.346529 23728 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:47.346539 23728 net.cpp:86] Creating Layer ip1
I0428 19:36:47.346542 23728 net.cpp:408] ip1 <- pool0
I0428 19:36:47.346547 23728 net.cpp:382] ip1 -> ip1
I0428 19:36:47.348608 23728 net.cpp:124] Setting up ip1
I0428 19:36:47.348624 23728 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:47.348628 23728 net.cpp:139] Memory required for data: 18635520
I0428 19:36:47.348639 23728 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:47.348646 23728 net.cpp:86] Creating Layer relu1
I0428 19:36:47.348650 23728 net.cpp:408] relu1 <- ip1
I0428 19:36:47.348656 23728 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:47.348875 23728 net.cpp:124] Setting up relu1
I0428 19:36:47.348886 23728 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:47.348891 23728 net.cpp:139] Memory required for data: 18638080
I0428 19:36:47.348894 23728 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:47.348902 23728 net.cpp:86] Creating Layer ip2
I0428 19:36:47.348906 23728 net.cpp:408] ip2 <- ip1
I0428 19:36:47.348912 23728 net.cpp:382] ip2 -> ip2
I0428 19:36:47.349020 23728 net.cpp:124] Setting up ip2
I0428 19:36:47.349027 23728 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:47.349030 23728 net.cpp:139] Memory required for data: 18640640
I0428 19:36:47.349040 23728 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:47.349045 23728 net.cpp:86] Creating Layer relu2
I0428 19:36:47.349048 23728 net.cpp:408] relu2 <- ip2
I0428 19:36:47.349053 23728 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:47.349879 23728 net.cpp:124] Setting up relu2
I0428 19:36:47.349892 23728 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:47.349896 23728 net.cpp:139] Memory required for data: 18643200
I0428 19:36:47.349901 23728 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:47.349910 23728 net.cpp:86] Creating Layer ip3
I0428 19:36:47.349915 23728 net.cpp:408] ip3 <- ip2
I0428 19:36:47.349920 23728 net.cpp:382] ip3 -> ip3
I0428 19:36:47.350034 23728 net.cpp:124] Setting up ip3
I0428 19:36:47.350044 23728 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:47.350047 23728 net.cpp:139] Memory required for data: 18645760
I0428 19:36:47.350054 23728 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:47.350064 23728 net.cpp:86] Creating Layer relu3
I0428 19:36:47.350069 23728 net.cpp:408] relu3 <- ip3
I0428 19:36:47.350075 23728 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:47.350252 23728 net.cpp:124] Setting up relu3
I0428 19:36:47.350262 23728 net.cpp:131] Top shape: 64 10 (640)
I0428 19:36:47.350265 23728 net.cpp:139] Memory required for data: 18648320
I0428 19:36:47.350270 23728 layer_factory.hpp:77] Creating layer loss
I0428 19:36:47.350278 23728 net.cpp:86] Creating Layer loss
I0428 19:36:47.350282 23728 net.cpp:408] loss <- ip3
I0428 19:36:47.350287 23728 net.cpp:408] loss <- label
I0428 19:36:47.350293 23728 net.cpp:382] loss -> loss
I0428 19:36:47.350312 23728 layer_factory.hpp:77] Creating layer loss
I0428 19:36:47.350589 23728 net.cpp:124] Setting up loss
I0428 19:36:47.350600 23728 net.cpp:131] Top shape: (1)
I0428 19:36:47.350603 23728 net.cpp:134]     with loss weight 1
I0428 19:36:47.350620 23728 net.cpp:139] Memory required for data: 18648324
I0428 19:36:47.350623 23728 net.cpp:200] loss needs backward computation.
I0428 19:36:47.350628 23728 net.cpp:200] relu3 needs backward computation.
I0428 19:36:47.350631 23728 net.cpp:200] ip3 needs backward computation.
I0428 19:36:47.350634 23728 net.cpp:200] relu2 needs backward computation.
I0428 19:36:47.350637 23728 net.cpp:200] ip2 needs backward computation.
I0428 19:36:47.350641 23728 net.cpp:200] relu1 needs backward computation.
I0428 19:36:47.350644 23728 net.cpp:200] ip1 needs backward computation.
I0428 19:36:47.350659 23728 net.cpp:200] pool0 needs backward computation.
I0428 19:36:47.350663 23728 net.cpp:200] conv0 needs backward computation.
I0428 19:36:47.350667 23728 net.cpp:202] mnist does not need backward computation.
I0428 19:36:47.350670 23728 net.cpp:244] This network produces output loss
I0428 19:36:47.350682 23728 net.cpp:257] Network initialization done.
I0428 19:36:47.351001 23728 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test248.prototxt
I0428 19:36:47.351029 23728 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:36:47.351120 23728 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:36:47.351196 23728 layer_factory.hpp:77] Creating layer mnist
I0428 19:36:47.351248 23728 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:36:47.351261 23728 net.cpp:86] Creating Layer mnist
I0428 19:36:47.351269 23728 net.cpp:382] mnist -> data
I0428 19:36:47.351277 23728 net.cpp:382] mnist -> label
I0428 19:36:47.351377 23728 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:36:47.352577 23728 net.cpp:124] Setting up mnist
I0428 19:36:47.352591 23728 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:36:47.352597 23728 net.cpp:131] Top shape: 100 (100)
I0428 19:36:47.352602 23728 net.cpp:139] Memory required for data: 314000
I0428 19:36:47.352605 23728 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:36:47.352614 23728 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:36:47.352618 23728 net.cpp:408] label_mnist_1_split <- label
I0428 19:36:47.352624 23728 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:36:47.352632 23728 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:36:47.352675 23728 net.cpp:124] Setting up label_mnist_1_split
I0428 19:36:47.352681 23728 net.cpp:131] Top shape: 100 (100)
I0428 19:36:47.352686 23728 net.cpp:131] Top shape: 100 (100)
I0428 19:36:47.352689 23728 net.cpp:139] Memory required for data: 314800
I0428 19:36:47.352702 23728 layer_factory.hpp:77] Creating layer conv0
I0428 19:36:47.352712 23728 net.cpp:86] Creating Layer conv0
I0428 19:36:47.352716 23728 net.cpp:408] conv0 <- data
I0428 19:36:47.352722 23728 net.cpp:382] conv0 -> conv0
I0428 19:36:47.354583 23728 net.cpp:124] Setting up conv0
I0428 19:36:47.354600 23728 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:36:47.354605 23728 net.cpp:139] Memory required for data: 23354800
I0428 19:36:47.354615 23728 layer_factory.hpp:77] Creating layer pool0
I0428 19:36:47.354624 23728 net.cpp:86] Creating Layer pool0
I0428 19:36:47.354627 23728 net.cpp:408] pool0 <- conv0
I0428 19:36:47.354632 23728 net.cpp:382] pool0 -> pool0
I0428 19:36:47.354674 23728 net.cpp:124] Setting up pool0
I0428 19:36:47.354681 23728 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:36:47.354683 23728 net.cpp:139] Memory required for data: 29114800
I0428 19:36:47.354686 23728 layer_factory.hpp:77] Creating layer ip1
I0428 19:36:47.354694 23728 net.cpp:86] Creating Layer ip1
I0428 19:36:47.354698 23728 net.cpp:408] ip1 <- pool0
I0428 19:36:47.354703 23728 net.cpp:382] ip1 -> ip1
I0428 19:36:47.356691 23728 net.cpp:124] Setting up ip1
I0428 19:36:47.356705 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.356709 23728 net.cpp:139] Memory required for data: 29118800
I0428 19:36:47.356719 23728 layer_factory.hpp:77] Creating layer relu1
I0428 19:36:47.356725 23728 net.cpp:86] Creating Layer relu1
I0428 19:36:47.356729 23728 net.cpp:408] relu1 <- ip1
I0428 19:36:47.356734 23728 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:36:47.356973 23728 net.cpp:124] Setting up relu1
I0428 19:36:47.356984 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.356988 23728 net.cpp:139] Memory required for data: 29122800
I0428 19:36:47.356992 23728 layer_factory.hpp:77] Creating layer ip2
I0428 19:36:47.356999 23728 net.cpp:86] Creating Layer ip2
I0428 19:36:47.357003 23728 net.cpp:408] ip2 <- ip1
I0428 19:36:47.357009 23728 net.cpp:382] ip2 -> ip2
I0428 19:36:47.357151 23728 net.cpp:124] Setting up ip2
I0428 19:36:47.357161 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.357164 23728 net.cpp:139] Memory required for data: 29126800
I0428 19:36:47.357172 23728 layer_factory.hpp:77] Creating layer relu2
I0428 19:36:47.357179 23728 net.cpp:86] Creating Layer relu2
I0428 19:36:47.357182 23728 net.cpp:408] relu2 <- ip2
I0428 19:36:47.357187 23728 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:36:47.358090 23728 net.cpp:124] Setting up relu2
I0428 19:36:47.358109 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.358114 23728 net.cpp:139] Memory required for data: 29130800
I0428 19:36:47.358117 23728 layer_factory.hpp:77] Creating layer ip3
I0428 19:36:47.358126 23728 net.cpp:86] Creating Layer ip3
I0428 19:36:47.358130 23728 net.cpp:408] ip3 <- ip2
I0428 19:36:47.358137 23728 net.cpp:382] ip3 -> ip3
I0428 19:36:47.358265 23728 net.cpp:124] Setting up ip3
I0428 19:36:47.358274 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.358278 23728 net.cpp:139] Memory required for data: 29134800
I0428 19:36:47.358284 23728 layer_factory.hpp:77] Creating layer relu3
I0428 19:36:47.358289 23728 net.cpp:86] Creating Layer relu3
I0428 19:36:47.358294 23728 net.cpp:408] relu3 <- ip3
I0428 19:36:47.358299 23728 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:36:47.358469 23728 net.cpp:124] Setting up relu3
I0428 19:36:47.358477 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.358482 23728 net.cpp:139] Memory required for data: 29138800
I0428 19:36:47.358485 23728 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:36:47.358491 23728 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:36:47.358494 23728 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:36:47.358500 23728 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:36:47.358506 23728 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:36:47.358543 23728 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:36:47.358549 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.358575 23728 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:36:47.358584 23728 net.cpp:139] Memory required for data: 29146800
I0428 19:36:47.358588 23728 layer_factory.hpp:77] Creating layer accuracy
I0428 19:36:47.358594 23728 net.cpp:86] Creating Layer accuracy
I0428 19:36:47.358598 23728 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:36:47.358603 23728 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:36:47.358614 23728 net.cpp:382] accuracy -> accuracy
I0428 19:36:47.358623 23728 net.cpp:124] Setting up accuracy
I0428 19:36:47.358639 23728 net.cpp:131] Top shape: (1)
I0428 19:36:47.358644 23728 net.cpp:139] Memory required for data: 29146804
I0428 19:36:47.358652 23728 layer_factory.hpp:77] Creating layer loss
I0428 19:36:47.358657 23728 net.cpp:86] Creating Layer loss
I0428 19:36:47.358661 23728 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:36:47.358670 23728 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:36:47.358675 23728 net.cpp:382] loss -> loss
I0428 19:36:47.358682 23728 layer_factory.hpp:77] Creating layer loss
I0428 19:36:47.358949 23728 net.cpp:124] Setting up loss
I0428 19:36:47.358959 23728 net.cpp:131] Top shape: (1)
I0428 19:36:47.358964 23728 net.cpp:134]     with loss weight 1
I0428 19:36:47.358973 23728 net.cpp:139] Memory required for data: 29146808
I0428 19:36:47.358975 23728 net.cpp:200] loss needs backward computation.
I0428 19:36:47.358981 23728 net.cpp:202] accuracy does not need backward computation.
I0428 19:36:47.358985 23728 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:36:47.358989 23728 net.cpp:200] relu3 needs backward computation.
I0428 19:36:47.358992 23728 net.cpp:200] ip3 needs backward computation.
I0428 19:36:47.358995 23728 net.cpp:200] relu2 needs backward computation.
I0428 19:36:47.358999 23728 net.cpp:200] ip2 needs backward computation.
I0428 19:36:47.359004 23728 net.cpp:200] relu1 needs backward computation.
I0428 19:36:47.359006 23728 net.cpp:200] ip1 needs backward computation.
I0428 19:36:47.359009 23728 net.cpp:200] pool0 needs backward computation.
I0428 19:36:47.359021 23728 net.cpp:200] conv0 needs backward computation.
I0428 19:36:47.359025 23728 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:36:47.359030 23728 net.cpp:202] mnist does not need backward computation.
I0428 19:36:47.359033 23728 net.cpp:244] This network produces output accuracy
I0428 19:36:47.359042 23728 net.cpp:244] This network produces output loss
I0428 19:36:47.359055 23728 net.cpp:257] Network initialization done.
I0428 19:36:47.359097 23728 solver.cpp:56] Solver scaffolding done.
I0428 19:36:47.359403 23728 caffe.cpp:248] Starting Optimization
I0428 19:36:47.359411 23728 solver.cpp:273] Solving LeNet
I0428 19:36:47.359413 23728 solver.cpp:274] Learning Rate Policy: inv
I0428 19:36:47.360337 23728 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:36:47.523700 23737 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:47.529654 23728 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 19:36:47.529673 23728 solver.cpp:398]     Test net output #1: loss = 2.31385 (* 1 = 2.31385 loss)
I0428 19:36:47.534633 23728 solver.cpp:219] Iteration 0 (0 iter/s, 0.175187s/100 iters), loss = 2.30165
I0428 19:36:47.534657 23728 solver.cpp:238]     Train net output #0: loss = 2.30165 (* 1 = 2.30165 loss)
I0428 19:36:47.534683 23728 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:36:47.760692 23728 solver.cpp:219] Iteration 100 (442.442 iter/s, 0.226018s/100 iters), loss = 1.21488
I0428 19:36:47.760718 23728 solver.cpp:238]     Train net output #0: loss = 1.21488 (* 1 = 1.21488 loss)
I0428 19:36:47.760725 23728 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:36:47.990190 23728 solver.cpp:219] Iteration 200 (435.816 iter/s, 0.229455s/100 iters), loss = 0.744789
I0428 19:36:47.990216 23728 solver.cpp:238]     Train net output #0: loss = 0.744789 (* 1 = 0.744789 loss)
I0428 19:36:47.990222 23728 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:36:48.216229 23728 solver.cpp:219] Iteration 300 (442.482 iter/s, 0.225998s/100 iters), loss = 0.470964
I0428 19:36:48.216266 23728 solver.cpp:238]     Train net output #0: loss = 0.470964 (* 1 = 0.470964 loss)
I0428 19:36:48.216274 23728 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:36:48.443418 23728 solver.cpp:219] Iteration 400 (440.27 iter/s, 0.227133s/100 iters), loss = 0.470905
I0428 19:36:48.443451 23728 solver.cpp:238]     Train net output #0: loss = 0.470905 (* 1 = 0.470905 loss)
I0428 19:36:48.443473 23728 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:36:48.665122 23728 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:36:48.825196 23737 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:48.829530 23728 solver.cpp:398]     Test net output #0: accuracy = 0.8493
I0428 19:36:48.829552 23728 solver.cpp:398]     Test net output #1: loss = 0.475915 (* 1 = 0.475915 loss)
I0428 19:36:48.831795 23728 solver.cpp:219] Iteration 500 (257.52 iter/s, 0.388319s/100 iters), loss = 0.520202
I0428 19:36:48.831820 23728 solver.cpp:238]     Train net output #0: loss = 0.520202 (* 1 = 0.520202 loss)
I0428 19:36:48.831826 23728 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:36:49.063271 23728 solver.cpp:219] Iteration 600 (432.092 iter/s, 0.231432s/100 iters), loss = 0.373931
I0428 19:36:49.063297 23728 solver.cpp:238]     Train net output #0: loss = 0.373931 (* 1 = 0.373931 loss)
I0428 19:36:49.063304 23728 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:36:49.291359 23728 solver.cpp:219] Iteration 700 (438.51 iter/s, 0.228045s/100 iters), loss = 0.710962
I0428 19:36:49.291402 23728 solver.cpp:238]     Train net output #0: loss = 0.710962 (* 1 = 0.710962 loss)
I0428 19:36:49.291409 23728 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:36:49.518853 23728 solver.cpp:219] Iteration 800 (439.685 iter/s, 0.227435s/100 iters), loss = 0.510344
I0428 19:36:49.518894 23728 solver.cpp:238]     Train net output #0: loss = 0.510344 (* 1 = 0.510344 loss)
I0428 19:36:49.518901 23728 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:36:49.744536 23728 solver.cpp:219] Iteration 900 (443.211 iter/s, 0.225626s/100 iters), loss = 0.407497
I0428 19:36:49.744578 23728 solver.cpp:238]     Train net output #0: loss = 0.407497 (* 1 = 0.407497 loss)
I0428 19:36:49.744585 23728 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:36:49.818850 23734 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:49.964934 23728 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:36:49.968502 23728 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:36:49.971185 23728 solver.cpp:311] Iteration 1000, loss = 0.511546
I0428 19:36:49.971200 23728 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:36:50.129500 23737 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:36:50.133884 23728 solver.cpp:398]     Test net output #0: accuracy = 0.8716
I0428 19:36:50.133919 23728 solver.cpp:398]     Test net output #1: loss = 0.368704 (* 1 = 0.368704 loss)
I0428 19:36:50.133924 23728 solver.cpp:316] Optimization Done.
I0428 19:36:50.133927 23728 caffe.cpp:259] Optimization Done.
