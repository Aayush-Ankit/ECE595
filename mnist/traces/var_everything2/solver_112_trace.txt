I0428 19:31:06.615013 22495 caffe.cpp:218] Using GPUs 0
I0428 19:31:06.653048 22495 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:31:07.163712 22495 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test112.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:31:07.163852 22495 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test112.prototxt
I0428 19:31:07.164218 22495 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:31:07.164235 22495 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:31:07.164326 22495 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:07.164400 22495 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:07.164496 22495 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:31:07.164518 22495 net.cpp:86] Creating Layer mnist
I0428 19:31:07.164527 22495 net.cpp:382] mnist -> data
I0428 19:31:07.164548 22495 net.cpp:382] mnist -> label
I0428 19:31:07.165643 22495 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:31:07.168085 22495 net.cpp:124] Setting up mnist
I0428 19:31:07.168102 22495 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:31:07.168108 22495 net.cpp:131] Top shape: 64 (64)
I0428 19:31:07.168112 22495 net.cpp:139] Memory required for data: 200960
I0428 19:31:07.168119 22495 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:07.168136 22495 net.cpp:86] Creating Layer conv0
I0428 19:31:07.168141 22495 net.cpp:408] conv0 <- data
I0428 19:31:07.168154 22495 net.cpp:382] conv0 -> conv0
I0428 19:31:07.457954 22495 net.cpp:124] Setting up conv0
I0428 19:31:07.457981 22495 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:31:07.457985 22495 net.cpp:139] Memory required for data: 938240
I0428 19:31:07.458000 22495 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:07.458012 22495 net.cpp:86] Creating Layer pool0
I0428 19:31:07.458050 22495 net.cpp:408] pool0 <- conv0
I0428 19:31:07.458055 22495 net.cpp:382] pool0 -> pool0
I0428 19:31:07.458101 22495 net.cpp:124] Setting up pool0
I0428 19:31:07.458107 22495 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:31:07.458111 22495 net.cpp:139] Memory required for data: 1122560
I0428 19:31:07.458113 22495 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:07.458122 22495 net.cpp:86] Creating Layer ip1
I0428 19:31:07.458124 22495 net.cpp:408] ip1 <- pool0
I0428 19:31:07.458128 22495 net.cpp:382] ip1 -> ip1
I0428 19:31:07.458444 22495 net.cpp:124] Setting up ip1
I0428 19:31:07.458451 22495 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:07.458469 22495 net.cpp:139] Memory required for data: 1135360
I0428 19:31:07.458477 22495 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:07.458497 22495 net.cpp:86] Creating Layer relu1
I0428 19:31:07.458499 22495 net.cpp:408] relu1 <- ip1
I0428 19:31:07.458503 22495 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:07.458672 22495 net.cpp:124] Setting up relu1
I0428 19:31:07.458695 22495 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:31:07.458698 22495 net.cpp:139] Memory required for data: 1148160
I0428 19:31:07.458701 22495 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:07.458724 22495 net.cpp:86] Creating Layer ip2
I0428 19:31:07.458741 22495 net.cpp:408] ip2 <- ip1
I0428 19:31:07.458747 22495 net.cpp:382] ip2 -> ip2
I0428 19:31:07.459821 22495 net.cpp:124] Setting up ip2
I0428 19:31:07.459851 22495 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:07.459854 22495 net.cpp:139] Memory required for data: 1154560
I0428 19:31:07.459863 22495 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:07.459869 22495 net.cpp:86] Creating Layer relu2
I0428 19:31:07.459872 22495 net.cpp:408] relu2 <- ip2
I0428 19:31:07.459877 22495 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:07.460774 22495 net.cpp:124] Setting up relu2
I0428 19:31:07.460786 22495 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:31:07.460806 22495 net.cpp:139] Memory required for data: 1160960
I0428 19:31:07.460814 22495 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:07.460822 22495 net.cpp:86] Creating Layer ip3
I0428 19:31:07.460826 22495 net.cpp:408] ip3 <- ip2
I0428 19:31:07.460834 22495 net.cpp:382] ip3 -> ip3
I0428 19:31:07.460927 22495 net.cpp:124] Setting up ip3
I0428 19:31:07.460934 22495 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:07.460937 22495 net.cpp:139] Memory required for data: 1163520
I0428 19:31:07.460943 22495 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:07.460949 22495 net.cpp:86] Creating Layer relu3
I0428 19:31:07.460952 22495 net.cpp:408] relu3 <- ip3
I0428 19:31:07.460957 22495 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:07.461129 22495 net.cpp:124] Setting up relu3
I0428 19:31:07.461138 22495 net.cpp:131] Top shape: 64 10 (640)
I0428 19:31:07.461141 22495 net.cpp:139] Memory required for data: 1166080
I0428 19:31:07.461144 22495 layer_factory.hpp:77] Creating layer loss
I0428 19:31:07.461151 22495 net.cpp:86] Creating Layer loss
I0428 19:31:07.461155 22495 net.cpp:408] loss <- ip3
I0428 19:31:07.461159 22495 net.cpp:408] loss <- label
I0428 19:31:07.461165 22495 net.cpp:382] loss -> loss
I0428 19:31:07.461184 22495 layer_factory.hpp:77] Creating layer loss
I0428 19:31:07.461447 22495 net.cpp:124] Setting up loss
I0428 19:31:07.461457 22495 net.cpp:131] Top shape: (1)
I0428 19:31:07.461459 22495 net.cpp:134]     with loss weight 1
I0428 19:31:07.461473 22495 net.cpp:139] Memory required for data: 1166084
I0428 19:31:07.461477 22495 net.cpp:200] loss needs backward computation.
I0428 19:31:07.461482 22495 net.cpp:200] relu3 needs backward computation.
I0428 19:31:07.461484 22495 net.cpp:200] ip3 needs backward computation.
I0428 19:31:07.461488 22495 net.cpp:200] relu2 needs backward computation.
I0428 19:31:07.461490 22495 net.cpp:200] ip2 needs backward computation.
I0428 19:31:07.461493 22495 net.cpp:200] relu1 needs backward computation.
I0428 19:31:07.461496 22495 net.cpp:200] ip1 needs backward computation.
I0428 19:31:07.461510 22495 net.cpp:200] pool0 needs backward computation.
I0428 19:31:07.461513 22495 net.cpp:200] conv0 needs backward computation.
I0428 19:31:07.461518 22495 net.cpp:202] mnist does not need backward computation.
I0428 19:31:07.461520 22495 net.cpp:244] This network produces output loss
I0428 19:31:07.461529 22495 net.cpp:257] Network initialization done.
I0428 19:31:07.461843 22495 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test112.prototxt
I0428 19:31:07.461915 22495 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:31:07.461997 22495 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:31:07.462064 22495 layer_factory.hpp:77] Creating layer mnist
I0428 19:31:07.462107 22495 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:31:07.462121 22495 net.cpp:86] Creating Layer mnist
I0428 19:31:07.462126 22495 net.cpp:382] mnist -> data
I0428 19:31:07.462133 22495 net.cpp:382] mnist -> label
I0428 19:31:07.462224 22495 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:31:07.464351 22495 net.cpp:124] Setting up mnist
I0428 19:31:07.464383 22495 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:31:07.464388 22495 net.cpp:131] Top shape: 100 (100)
I0428 19:31:07.464391 22495 net.cpp:139] Memory required for data: 314000
I0428 19:31:07.464395 22495 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:31:07.464407 22495 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:31:07.464414 22495 net.cpp:408] label_mnist_1_split <- label
I0428 19:31:07.464419 22495 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:31:07.464426 22495 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:31:07.464485 22495 net.cpp:124] Setting up label_mnist_1_split
I0428 19:31:07.464493 22495 net.cpp:131] Top shape: 100 (100)
I0428 19:31:07.464496 22495 net.cpp:131] Top shape: 100 (100)
I0428 19:31:07.464499 22495 net.cpp:139] Memory required for data: 314800
I0428 19:31:07.464514 22495 layer_factory.hpp:77] Creating layer conv0
I0428 19:31:07.464524 22495 net.cpp:86] Creating Layer conv0
I0428 19:31:07.464527 22495 net.cpp:408] conv0 <- data
I0428 19:31:07.464534 22495 net.cpp:382] conv0 -> conv0
I0428 19:31:07.466267 22495 net.cpp:124] Setting up conv0
I0428 19:31:07.466280 22495 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:31:07.466300 22495 net.cpp:139] Memory required for data: 1466800
I0428 19:31:07.466311 22495 layer_factory.hpp:77] Creating layer pool0
I0428 19:31:07.466318 22495 net.cpp:86] Creating Layer pool0
I0428 19:31:07.466321 22495 net.cpp:408] pool0 <- conv0
I0428 19:31:07.466325 22495 net.cpp:382] pool0 -> pool0
I0428 19:31:07.466362 22495 net.cpp:124] Setting up pool0
I0428 19:31:07.466367 22495 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:31:07.466370 22495 net.cpp:139] Memory required for data: 1754800
I0428 19:31:07.466373 22495 layer_factory.hpp:77] Creating layer ip1
I0428 19:31:07.466379 22495 net.cpp:86] Creating Layer ip1
I0428 19:31:07.466382 22495 net.cpp:408] ip1 <- pool0
I0428 19:31:07.466388 22495 net.cpp:382] ip1 -> ip1
I0428 19:31:07.466763 22495 net.cpp:124] Setting up ip1
I0428 19:31:07.466770 22495 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:07.466773 22495 net.cpp:139] Memory required for data: 1774800
I0428 19:31:07.466781 22495 layer_factory.hpp:77] Creating layer relu1
I0428 19:31:07.466801 22495 net.cpp:86] Creating Layer relu1
I0428 19:31:07.466805 22495 net.cpp:408] relu1 <- ip1
I0428 19:31:07.466823 22495 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:31:07.467154 22495 net.cpp:124] Setting up relu1
I0428 19:31:07.467162 22495 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:31:07.467181 22495 net.cpp:139] Memory required for data: 1794800
I0428 19:31:07.467185 22495 layer_factory.hpp:77] Creating layer ip2
I0428 19:31:07.467190 22495 net.cpp:86] Creating Layer ip2
I0428 19:31:07.467193 22495 net.cpp:408] ip2 <- ip1
I0428 19:31:07.467200 22495 net.cpp:382] ip2 -> ip2
I0428 19:31:07.467324 22495 net.cpp:124] Setting up ip2
I0428 19:31:07.467331 22495 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:07.467334 22495 net.cpp:139] Memory required for data: 1804800
I0428 19:31:07.467342 22495 layer_factory.hpp:77] Creating layer relu2
I0428 19:31:07.467351 22495 net.cpp:86] Creating Layer relu2
I0428 19:31:07.467371 22495 net.cpp:408] relu2 <- ip2
I0428 19:31:07.467375 22495 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:31:07.468348 22495 net.cpp:124] Setting up relu2
I0428 19:31:07.468359 22495 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:31:07.468379 22495 net.cpp:139] Memory required for data: 1814800
I0428 19:31:07.468381 22495 layer_factory.hpp:77] Creating layer ip3
I0428 19:31:07.468389 22495 net.cpp:86] Creating Layer ip3
I0428 19:31:07.468392 22495 net.cpp:408] ip3 <- ip2
I0428 19:31:07.468399 22495 net.cpp:382] ip3 -> ip3
I0428 19:31:07.468539 22495 net.cpp:124] Setting up ip3
I0428 19:31:07.468547 22495 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:07.468550 22495 net.cpp:139] Memory required for data: 1818800
I0428 19:31:07.468556 22495 layer_factory.hpp:77] Creating layer relu3
I0428 19:31:07.468561 22495 net.cpp:86] Creating Layer relu3
I0428 19:31:07.468565 22495 net.cpp:408] relu3 <- ip3
I0428 19:31:07.468570 22495 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:31:07.468734 22495 net.cpp:124] Setting up relu3
I0428 19:31:07.468742 22495 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:07.468745 22495 net.cpp:139] Memory required for data: 1822800
I0428 19:31:07.468755 22495 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:31:07.468760 22495 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:31:07.468763 22495 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:31:07.468770 22495 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:31:07.468775 22495 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:31:07.468818 22495 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:31:07.468827 22495 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:07.468849 22495 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:31:07.468873 22495 net.cpp:139] Memory required for data: 1830800
I0428 19:31:07.468876 22495 layer_factory.hpp:77] Creating layer accuracy
I0428 19:31:07.468881 22495 net.cpp:86] Creating Layer accuracy
I0428 19:31:07.468885 22495 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:31:07.468889 22495 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:31:07.468894 22495 net.cpp:382] accuracy -> accuracy
I0428 19:31:07.468901 22495 net.cpp:124] Setting up accuracy
I0428 19:31:07.468906 22495 net.cpp:131] Top shape: (1)
I0428 19:31:07.468909 22495 net.cpp:139] Memory required for data: 1830804
I0428 19:31:07.468912 22495 layer_factory.hpp:77] Creating layer loss
I0428 19:31:07.468917 22495 net.cpp:86] Creating Layer loss
I0428 19:31:07.468921 22495 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:31:07.468925 22495 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:31:07.468930 22495 net.cpp:382] loss -> loss
I0428 19:31:07.468936 22495 layer_factory.hpp:77] Creating layer loss
I0428 19:31:07.469219 22495 net.cpp:124] Setting up loss
I0428 19:31:07.469243 22495 net.cpp:131] Top shape: (1)
I0428 19:31:07.469246 22495 net.cpp:134]     with loss weight 1
I0428 19:31:07.469254 22495 net.cpp:139] Memory required for data: 1830808
I0428 19:31:07.469257 22495 net.cpp:200] loss needs backward computation.
I0428 19:31:07.469270 22495 net.cpp:202] accuracy does not need backward computation.
I0428 19:31:07.469275 22495 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:31:07.469280 22495 net.cpp:200] relu3 needs backward computation.
I0428 19:31:07.469282 22495 net.cpp:200] ip3 needs backward computation.
I0428 19:31:07.469286 22495 net.cpp:200] relu2 needs backward computation.
I0428 19:31:07.469290 22495 net.cpp:200] ip2 needs backward computation.
I0428 19:31:07.469292 22495 net.cpp:200] relu1 needs backward computation.
I0428 19:31:07.469295 22495 net.cpp:200] ip1 needs backward computation.
I0428 19:31:07.469300 22495 net.cpp:200] pool0 needs backward computation.
I0428 19:31:07.469302 22495 net.cpp:200] conv0 needs backward computation.
I0428 19:31:07.469305 22495 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:31:07.469311 22495 net.cpp:202] mnist does not need backward computation.
I0428 19:31:07.469314 22495 net.cpp:244] This network produces output accuracy
I0428 19:31:07.469318 22495 net.cpp:244] This network produces output loss
I0428 19:31:07.469336 22495 net.cpp:257] Network initialization done.
I0428 19:31:07.469375 22495 solver.cpp:56] Solver scaffolding done.
I0428 19:31:07.469732 22495 caffe.cpp:248] Starting Optimization
I0428 19:31:07.469736 22495 solver.cpp:273] Solving LeNet
I0428 19:31:07.469740 22495 solver.cpp:274] Learning Rate Policy: inv
I0428 19:31:07.470587 22495 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:31:07.474526 22495 blocking_queue.cpp:49] Waiting for data
I0428 19:31:07.540870 22502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:07.541311 22495 solver.cpp:398]     Test net output #0: accuracy = 0.0795
I0428 19:31:07.541343 22495 solver.cpp:398]     Test net output #1: loss = 2.32163 (* 1 = 2.32163 loss)
I0428 19:31:07.542961 22495 solver.cpp:219] Iteration 0 (0 iter/s, 0.0731529s/100 iters), loss = 2.32728
I0428 19:31:07.542986 22495 solver.cpp:238]     Train net output #0: loss = 2.32728 (* 1 = 2.32728 loss)
I0428 19:31:07.543002 22495 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:31:07.603061 22495 solver.cpp:219] Iteration 100 (1664.92 iter/s, 0.0600629s/100 iters), loss = 0.632276
I0428 19:31:07.603101 22495 solver.cpp:238]     Train net output #0: loss = 0.632276 (* 1 = 0.632276 loss)
I0428 19:31:07.603107 22495 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:31:07.663379 22495 solver.cpp:219] Iteration 200 (1658.79 iter/s, 0.0602849s/100 iters), loss = 0.309008
I0428 19:31:07.663419 22495 solver.cpp:238]     Train net output #0: loss = 0.309008 (* 1 = 0.309008 loss)
I0428 19:31:07.663425 22495 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:31:07.723150 22495 solver.cpp:219] Iteration 300 (1674.03 iter/s, 0.0597361s/100 iters), loss = 0.341295
I0428 19:31:07.723175 22495 solver.cpp:238]     Train net output #0: loss = 0.341295 (* 1 = 0.341295 loss)
I0428 19:31:07.723181 22495 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:31:07.782557 22495 solver.cpp:219] Iteration 400 (1684.19 iter/s, 0.0593757s/100 iters), loss = 0.211811
I0428 19:31:07.782598 22495 solver.cpp:238]     Train net output #0: loss = 0.211811 (* 1 = 0.211811 loss)
I0428 19:31:07.782618 22495 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:31:07.841984 22495 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:31:07.885362 22502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:07.885813 22495 solver.cpp:398]     Test net output #0: accuracy = 0.9366
I0428 19:31:07.885829 22495 solver.cpp:398]     Test net output #1: loss = 0.207232 (* 1 = 0.207232 loss)
I0428 19:31:07.886479 22495 solver.cpp:219] Iteration 500 (962.567 iter/s, 0.103889s/100 iters), loss = 0.305827
I0428 19:31:07.886518 22495 solver.cpp:238]     Train net output #0: loss = 0.305828 (* 1 = 0.305828 loss)
I0428 19:31:07.886525 22495 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:31:07.946897 22495 solver.cpp:219] Iteration 600 (1656.03 iter/s, 0.0603853s/100 iters), loss = 0.150806
I0428 19:31:07.946935 22495 solver.cpp:238]     Train net output #0: loss = 0.150806 (* 1 = 0.150806 loss)
I0428 19:31:07.946941 22495 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:31:08.007290 22495 solver.cpp:219] Iteration 700 (1656.65 iter/s, 0.0603628s/100 iters), loss = 0.46482
I0428 19:31:08.007329 22495 solver.cpp:238]     Train net output #0: loss = 0.46482 (* 1 = 0.46482 loss)
I0428 19:31:08.007335 22495 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:31:08.067106 22495 solver.cpp:219] Iteration 800 (1673.12 iter/s, 0.0597687s/100 iters), loss = 0.358031
I0428 19:31:08.067143 22495 solver.cpp:238]     Train net output #0: loss = 0.358031 (* 1 = 0.358031 loss)
I0428 19:31:08.067149 22495 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:31:08.126749 22495 solver.cpp:219] Iteration 900 (1677.48 iter/s, 0.0596132s/100 iters), loss = 0.242937
I0428 19:31:08.126787 22495 solver.cpp:238]     Train net output #0: loss = 0.242938 (* 1 = 0.242938 loss)
I0428 19:31:08.126793 22495 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:31:08.147017 22501 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:08.186322 22495 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:31:08.187403 22495 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:31:08.188076 22495 solver.cpp:311] Iteration 1000, loss = 0.2136
I0428 19:31:08.188091 22495 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:31:08.231680 22502 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:31:08.232115 22495 solver.cpp:398]     Test net output #0: accuracy = 0.9556
I0428 19:31:08.232151 22495 solver.cpp:398]     Test net output #1: loss = 0.141701 (* 1 = 0.141701 loss)
I0428 19:31:08.232156 22495 solver.cpp:316] Optimization Done.
I0428 19:31:08.232159 22495 caffe.cpp:259] Optimization Done.
