I0428 19:40:29.673607 24563 caffe.cpp:218] Using GPUs 0
I0428 19:40:29.708082 24563 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:30.153216 24563 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test336.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:30.153403 24563 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test336.prototxt
I0428 19:40:30.153784 24563 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:30.153805 24563 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:30.153908 24563 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:30.153995 24563 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:30.154098 24563 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:30.154124 24563 net.cpp:86] Creating Layer mnist
I0428 19:40:30.154134 24563 net.cpp:382] mnist -> data
I0428 19:40:30.154158 24563 net.cpp:382] mnist -> label
I0428 19:40:30.155351 24563 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:30.157634 24563 net.cpp:124] Setting up mnist
I0428 19:40:30.157665 24563 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:30.157687 24563 net.cpp:131] Top shape: 64 (64)
I0428 19:40:30.157707 24563 net.cpp:139] Memory required for data: 200960
I0428 19:40:30.157716 24563 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:30.157737 24563 net.cpp:86] Creating Layer conv0
I0428 19:40:30.157771 24563 net.cpp:408] conv0 <- data
I0428 19:40:30.157789 24563 net.cpp:382] conv0 -> conv0
I0428 19:40:30.387015 24563 net.cpp:124] Setting up conv0
I0428 19:40:30.387044 24563 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:30.387049 24563 net.cpp:139] Memory required for data: 495872
I0428 19:40:30.387068 24563 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:30.387084 24563 net.cpp:86] Creating Layer pool0
I0428 19:40:30.387091 24563 net.cpp:408] pool0 <- conv0
I0428 19:40:30.387107 24563 net.cpp:382] pool0 -> pool0
I0428 19:40:30.387161 24563 net.cpp:124] Setting up pool0
I0428 19:40:30.387168 24563 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:30.387173 24563 net.cpp:139] Memory required for data: 569600
I0428 19:40:30.387178 24563 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:30.387193 24563 net.cpp:86] Creating Layer conv1
I0428 19:40:30.387199 24563 net.cpp:408] conv1 <- pool0
I0428 19:40:30.387207 24563 net.cpp:382] conv1 -> conv1
I0428 19:40:30.389108 24563 net.cpp:124] Setting up conv1
I0428 19:40:30.389125 24563 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:30.389132 24563 net.cpp:139] Memory required for data: 651520
I0428 19:40:30.389144 24563 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:30.389155 24563 net.cpp:86] Creating Layer pool1
I0428 19:40:30.389161 24563 net.cpp:408] pool1 <- conv1
I0428 19:40:30.389170 24563 net.cpp:382] pool1 -> pool1
I0428 19:40:30.389214 24563 net.cpp:124] Setting up pool1
I0428 19:40:30.389223 24563 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:30.389228 24563 net.cpp:139] Memory required for data: 672000
I0428 19:40:30.389233 24563 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:30.389245 24563 net.cpp:86] Creating Layer ip1
I0428 19:40:30.389250 24563 net.cpp:408] ip1 <- pool1
I0428 19:40:30.389258 24563 net.cpp:382] ip1 -> ip1
I0428 19:40:30.390244 24563 net.cpp:124] Setting up ip1
I0428 19:40:30.390259 24563 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:30.390264 24563 net.cpp:139] Memory required for data: 678400
I0428 19:40:30.390277 24563 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:30.390288 24563 net.cpp:86] Creating Layer relu1
I0428 19:40:30.390298 24563 net.cpp:408] relu1 <- ip1
I0428 19:40:30.390306 24563 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:30.390496 24563 net.cpp:124] Setting up relu1
I0428 19:40:30.390506 24563 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:30.390511 24563 net.cpp:139] Memory required for data: 684800
I0428 19:40:30.390516 24563 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:30.390525 24563 net.cpp:86] Creating Layer ip2
I0428 19:40:30.390532 24563 net.cpp:408] ip2 <- ip1
I0428 19:40:30.390539 24563 net.cpp:382] ip2 -> ip2
I0428 19:40:30.390635 24563 net.cpp:124] Setting up ip2
I0428 19:40:30.390645 24563 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:30.390650 24563 net.cpp:139] Memory required for data: 691200
I0428 19:40:30.390657 24563 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:30.390666 24563 net.cpp:86] Creating Layer relu2
I0428 19:40:30.390672 24563 net.cpp:408] relu2 <- ip2
I0428 19:40:30.390681 24563 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:30.391461 24563 net.cpp:124] Setting up relu2
I0428 19:40:30.391475 24563 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:30.391480 24563 net.cpp:139] Memory required for data: 697600
I0428 19:40:30.391486 24563 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:30.391510 24563 net.cpp:86] Creating Layer ip3
I0428 19:40:30.391515 24563 net.cpp:408] ip3 <- ip2
I0428 19:40:30.391525 24563 net.cpp:382] ip3 -> ip3
I0428 19:40:30.391638 24563 net.cpp:124] Setting up ip3
I0428 19:40:30.391649 24563 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:30.391654 24563 net.cpp:139] Memory required for data: 700160
I0428 19:40:30.391666 24563 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:30.391675 24563 net.cpp:86] Creating Layer relu3
I0428 19:40:30.391681 24563 net.cpp:408] relu3 <- ip3
I0428 19:40:30.391688 24563 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:30.391880 24563 net.cpp:124] Setting up relu3
I0428 19:40:30.391891 24563 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:30.391902 24563 net.cpp:139] Memory required for data: 702720
I0428 19:40:30.391908 24563 layer_factory.hpp:77] Creating layer loss
I0428 19:40:30.391917 24563 net.cpp:86] Creating Layer loss
I0428 19:40:30.391923 24563 net.cpp:408] loss <- ip3
I0428 19:40:30.391930 24563 net.cpp:408] loss <- label
I0428 19:40:30.391938 24563 net.cpp:382] loss -> loss
I0428 19:40:30.391963 24563 layer_factory.hpp:77] Creating layer loss
I0428 19:40:30.392233 24563 net.cpp:124] Setting up loss
I0428 19:40:30.392244 24563 net.cpp:131] Top shape: (1)
I0428 19:40:30.392249 24563 net.cpp:134]     with loss weight 1
I0428 19:40:30.392267 24563 net.cpp:139] Memory required for data: 702724
I0428 19:40:30.392273 24563 net.cpp:200] loss needs backward computation.
I0428 19:40:30.392279 24563 net.cpp:200] relu3 needs backward computation.
I0428 19:40:30.392284 24563 net.cpp:200] ip3 needs backward computation.
I0428 19:40:30.392289 24563 net.cpp:200] relu2 needs backward computation.
I0428 19:40:30.392294 24563 net.cpp:200] ip2 needs backward computation.
I0428 19:40:30.392299 24563 net.cpp:200] relu1 needs backward computation.
I0428 19:40:30.392303 24563 net.cpp:200] ip1 needs backward computation.
I0428 19:40:30.392308 24563 net.cpp:200] pool1 needs backward computation.
I0428 19:40:30.392313 24563 net.cpp:200] conv1 needs backward computation.
I0428 19:40:30.392318 24563 net.cpp:200] pool0 needs backward computation.
I0428 19:40:30.392324 24563 net.cpp:200] conv0 needs backward computation.
I0428 19:40:30.392329 24563 net.cpp:202] mnist does not need backward computation.
I0428 19:40:30.392334 24563 net.cpp:244] This network produces output loss
I0428 19:40:30.392348 24563 net.cpp:257] Network initialization done.
I0428 19:40:30.392693 24563 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test336.prototxt
I0428 19:40:30.392726 24563 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:30.392830 24563 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:30.392971 24563 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:30.393030 24563 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:30.393049 24563 net.cpp:86] Creating Layer mnist
I0428 19:40:30.393057 24563 net.cpp:382] mnist -> data
I0428 19:40:30.393069 24563 net.cpp:382] mnist -> label
I0428 19:40:30.393193 24563 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:30.395375 24563 net.cpp:124] Setting up mnist
I0428 19:40:30.395391 24563 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:30.395400 24563 net.cpp:131] Top shape: 100 (100)
I0428 19:40:30.395406 24563 net.cpp:139] Memory required for data: 314000
I0428 19:40:30.395411 24563 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:30.395426 24563 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:30.395432 24563 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:30.395442 24563 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:30.395452 24563 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:30.395519 24563 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:30.395527 24563 net.cpp:131] Top shape: 100 (100)
I0428 19:40:30.395534 24563 net.cpp:131] Top shape: 100 (100)
I0428 19:40:30.395539 24563 net.cpp:139] Memory required for data: 314800
I0428 19:40:30.395545 24563 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:30.395558 24563 net.cpp:86] Creating Layer conv0
I0428 19:40:30.395565 24563 net.cpp:408] conv0 <- data
I0428 19:40:30.395575 24563 net.cpp:382] conv0 -> conv0
I0428 19:40:30.397238 24563 net.cpp:124] Setting up conv0
I0428 19:40:30.397256 24563 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:30.397264 24563 net.cpp:139] Memory required for data: 775600
I0428 19:40:30.397307 24563 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:30.397331 24563 net.cpp:86] Creating Layer pool0
I0428 19:40:30.397353 24563 net.cpp:408] pool0 <- conv0
I0428 19:40:30.397361 24563 net.cpp:382] pool0 -> pool0
I0428 19:40:30.397399 24563 net.cpp:124] Setting up pool0
I0428 19:40:30.397411 24563 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:30.397416 24563 net.cpp:139] Memory required for data: 890800
I0428 19:40:30.397423 24563 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:30.397434 24563 net.cpp:86] Creating Layer conv1
I0428 19:40:30.397440 24563 net.cpp:408] conv1 <- pool0
I0428 19:40:30.397449 24563 net.cpp:382] conv1 -> conv1
I0428 19:40:30.399132 24563 net.cpp:124] Setting up conv1
I0428 19:40:30.399145 24563 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:30.399152 24563 net.cpp:139] Memory required for data: 1018800
I0428 19:40:30.399183 24563 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:30.399193 24563 net.cpp:86] Creating Layer pool1
I0428 19:40:30.399199 24563 net.cpp:408] pool1 <- conv1
I0428 19:40:30.399209 24563 net.cpp:382] pool1 -> pool1
I0428 19:40:30.399252 24563 net.cpp:124] Setting up pool1
I0428 19:40:30.399261 24563 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:30.399266 24563 net.cpp:139] Memory required for data: 1050800
I0428 19:40:30.399271 24563 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:30.399281 24563 net.cpp:86] Creating Layer ip1
I0428 19:40:30.399286 24563 net.cpp:408] ip1 <- pool1
I0428 19:40:30.399296 24563 net.cpp:382] ip1 -> ip1
I0428 19:40:30.399420 24563 net.cpp:124] Setting up ip1
I0428 19:40:30.399430 24563 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:30.399446 24563 net.cpp:139] Memory required for data: 1060800
I0428 19:40:30.399459 24563 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:30.399471 24563 net.cpp:86] Creating Layer relu1
I0428 19:40:30.399477 24563 net.cpp:408] relu1 <- ip1
I0428 19:40:30.399485 24563 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:30.399658 24563 net.cpp:124] Setting up relu1
I0428 19:40:30.399673 24563 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:30.399678 24563 net.cpp:139] Memory required for data: 1070800
I0428 19:40:30.399683 24563 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:30.399696 24563 net.cpp:86] Creating Layer ip2
I0428 19:40:30.399703 24563 net.cpp:408] ip2 <- ip1
I0428 19:40:30.399713 24563 net.cpp:382] ip2 -> ip2
I0428 19:40:30.399834 24563 net.cpp:124] Setting up ip2
I0428 19:40:30.399843 24563 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:30.399849 24563 net.cpp:139] Memory required for data: 1080800
I0428 19:40:30.399857 24563 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:30.399865 24563 net.cpp:86] Creating Layer relu2
I0428 19:40:30.399870 24563 net.cpp:408] relu2 <- ip2
I0428 19:40:30.399878 24563 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:30.400080 24563 net.cpp:124] Setting up relu2
I0428 19:40:30.400089 24563 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:30.400094 24563 net.cpp:139] Memory required for data: 1090800
I0428 19:40:30.400099 24563 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:30.400110 24563 net.cpp:86] Creating Layer ip3
I0428 19:40:30.400131 24563 net.cpp:408] ip3 <- ip2
I0428 19:40:30.400141 24563 net.cpp:382] ip3 -> ip3
I0428 19:40:30.400264 24563 net.cpp:124] Setting up ip3
I0428 19:40:30.400274 24563 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:30.400279 24563 net.cpp:139] Memory required for data: 1094800
I0428 19:40:30.400291 24563 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:30.400300 24563 net.cpp:86] Creating Layer relu3
I0428 19:40:30.400306 24563 net.cpp:408] relu3 <- ip3
I0428 19:40:30.400313 24563 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:30.401243 24563 net.cpp:124] Setting up relu3
I0428 19:40:30.401257 24563 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:30.401262 24563 net.cpp:139] Memory required for data: 1098800
I0428 19:40:30.401268 24563 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:30.401278 24563 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:30.401283 24563 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:30.401293 24563 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:30.401302 24563 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:30.401345 24563 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:30.401355 24563 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:30.401360 24563 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:30.401365 24563 net.cpp:139] Memory required for data: 1106800
I0428 19:40:30.401371 24563 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:30.401379 24563 net.cpp:86] Creating Layer accuracy
I0428 19:40:30.401386 24563 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:30.401392 24563 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:30.401399 24563 net.cpp:382] accuracy -> accuracy
I0428 19:40:30.401410 24563 net.cpp:124] Setting up accuracy
I0428 19:40:30.401418 24563 net.cpp:131] Top shape: (1)
I0428 19:40:30.401423 24563 net.cpp:139] Memory required for data: 1106804
I0428 19:40:30.401427 24563 layer_factory.hpp:77] Creating layer loss
I0428 19:40:30.401437 24563 net.cpp:86] Creating Layer loss
I0428 19:40:30.401443 24563 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:30.401449 24563 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:30.401456 24563 net.cpp:382] loss -> loss
I0428 19:40:30.401465 24563 layer_factory.hpp:77] Creating layer loss
I0428 19:40:30.401734 24563 net.cpp:124] Setting up loss
I0428 19:40:30.401746 24563 net.cpp:131] Top shape: (1)
I0428 19:40:30.401754 24563 net.cpp:134]     with loss weight 1
I0428 19:40:30.401763 24563 net.cpp:139] Memory required for data: 1106808
I0428 19:40:30.401779 24563 net.cpp:200] loss needs backward computation.
I0428 19:40:30.401787 24563 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:30.401793 24563 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:30.401798 24563 net.cpp:200] relu3 needs backward computation.
I0428 19:40:30.401803 24563 net.cpp:200] ip3 needs backward computation.
I0428 19:40:30.401809 24563 net.cpp:200] relu2 needs backward computation.
I0428 19:40:30.401814 24563 net.cpp:200] ip2 needs backward computation.
I0428 19:40:30.401819 24563 net.cpp:200] relu1 needs backward computation.
I0428 19:40:30.401824 24563 net.cpp:200] ip1 needs backward computation.
I0428 19:40:30.401829 24563 net.cpp:200] pool1 needs backward computation.
I0428 19:40:30.401850 24563 net.cpp:200] conv1 needs backward computation.
I0428 19:40:30.401855 24563 net.cpp:200] pool0 needs backward computation.
I0428 19:40:30.401861 24563 net.cpp:200] conv0 needs backward computation.
I0428 19:40:30.401867 24563 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:30.401873 24563 net.cpp:202] mnist does not need backward computation.
I0428 19:40:30.401877 24563 net.cpp:244] This network produces output accuracy
I0428 19:40:30.401885 24563 net.cpp:244] This network produces output loss
I0428 19:40:30.401916 24563 net.cpp:257] Network initialization done.
I0428 19:40:30.401962 24563 solver.cpp:56] Solver scaffolding done.
I0428 19:40:30.402297 24563 caffe.cpp:248] Starting Optimization
I0428 19:40:30.402304 24563 solver.cpp:273] Solving LeNet
I0428 19:40:30.402308 24563 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:30.403223 24563 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:30.405844 24563 blocking_queue.cpp:49] Waiting for data
I0428 19:40:30.477416 24570 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:30.477852 24563 solver.cpp:398]     Test net output #0: accuracy = 0.0987
I0428 19:40:30.477874 24563 solver.cpp:398]     Test net output #1: loss = 2.30096 (* 1 = 2.30096 loss)
I0428 19:40:30.479881 24563 solver.cpp:219] Iteration 0 (-1.04817e-42 iter/s, 0.0775352s/100 iters), loss = 2.29925
I0428 19:40:30.479907 24563 solver.cpp:238]     Train net output #0: loss = 2.29925 (* 1 = 2.29925 loss)
I0428 19:40:30.479939 24563 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:30.550791 24563 solver.cpp:219] Iteration 100 (1410.93 iter/s, 0.0708751s/100 iters), loss = 1.0657
I0428 19:40:30.550819 24563 solver.cpp:238]     Train net output #0: loss = 1.0657 (* 1 = 1.0657 loss)
I0428 19:40:30.550829 24563 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:30.620208 24563 solver.cpp:219] Iteration 200 (1441.31 iter/s, 0.0693811s/100 iters), loss = 1.06471
I0428 19:40:30.620232 24563 solver.cpp:238]     Train net output #0: loss = 1.06471 (* 1 = 1.06471 loss)
I0428 19:40:30.620257 24563 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:30.691603 24563 solver.cpp:219] Iteration 300 (1401.27 iter/s, 0.0713636s/100 iters), loss = 0.811395
I0428 19:40:30.691628 24563 solver.cpp:238]     Train net output #0: loss = 0.811395 (* 1 = 0.811395 loss)
I0428 19:40:30.691653 24563 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:30.763267 24563 solver.cpp:219] Iteration 400 (1396.03 iter/s, 0.0716319s/100 iters), loss = 0.999412
I0428 19:40:30.763294 24563 solver.cpp:238]     Train net output #0: loss = 0.999412 (* 1 = 0.999412 loss)
I0428 19:40:30.763304 24563 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:30.833614 24563 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:30.886597 24570 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:30.887037 24563 solver.cpp:398]     Test net output #0: accuracy = 0.7136
I0428 19:40:30.887070 24563 solver.cpp:398]     Test net output #1: loss = 0.763872 (* 1 = 0.763872 loss)
I0428 19:40:30.887848 24563 solver.cpp:219] Iteration 500 (802.922 iter/s, 0.124545s/100 iters), loss = 0.837549
I0428 19:40:30.887876 24563 solver.cpp:238]     Train net output #0: loss = 0.837549 (* 1 = 0.837549 loss)
I0428 19:40:30.887904 24563 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:30.959411 24563 solver.cpp:219] Iteration 600 (1398.05 iter/s, 0.0715284s/100 iters), loss = 0.939236
I0428 19:40:30.959436 24563 solver.cpp:238]     Train net output #0: loss = 0.939236 (* 1 = 0.939236 loss)
I0428 19:40:30.959460 24563 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:31.031790 24563 solver.cpp:219] Iteration 700 (1382.25 iter/s, 0.0723458s/100 iters), loss = 0.718086
I0428 19:40:31.031814 24563 solver.cpp:238]     Train net output #0: loss = 0.718086 (* 1 = 0.718086 loss)
I0428 19:40:31.031838 24563 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:31.103241 24563 solver.cpp:219] Iteration 800 (1400.17 iter/s, 0.0714199s/100 iters), loss = 0.809294
I0428 19:40:31.103266 24563 solver.cpp:238]     Train net output #0: loss = 0.809294 (* 1 = 0.809294 loss)
I0428 19:40:31.103291 24563 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:31.171998 24563 solver.cpp:219] Iteration 900 (1455.1 iter/s, 0.0687237s/100 iters), loss = 0.60335
I0428 19:40:31.172022 24563 solver.cpp:238]     Train net output #0: loss = 0.60335 (* 1 = 0.60335 loss)
I0428 19:40:31.172047 24563 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:31.195241 24569 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:31.239774 24563 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:31.240468 24563 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:31.240892 24563 solver.cpp:311] Iteration 1000, loss = 0.70207
I0428 19:40:31.240906 24563 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:31.285150 24570 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:31.285548 24563 solver.cpp:398]     Test net output #0: accuracy = 0.7468
I0428 19:40:31.285568 24563 solver.cpp:398]     Test net output #1: loss = 0.649692 (* 1 = 0.649692 loss)
I0428 19:40:31.285576 24563 solver.cpp:316] Optimization Done.
I0428 19:40:31.285583 24563 caffe.cpp:259] Optimization Done.
