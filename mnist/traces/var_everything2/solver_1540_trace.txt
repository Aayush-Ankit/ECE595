I0428 20:30:31.378937  3742 caffe.cpp:218] Using GPUs 0
I0428 20:30:31.414955  3742 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:30:31.895630  3742 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1540.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:30:31.895786  3742 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1540.prototxt
I0428 20:30:31.896144  3742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:30:31.896165  3742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:30:31.896272  3742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:31.896363  3742 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:31.896469  3742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:30:31.896495  3742 net.cpp:86] Creating Layer mnist
I0428 20:30:31.896507  3742 net.cpp:382] mnist -> data
I0428 20:30:31.896531  3742 net.cpp:382] mnist -> label
I0428 20:30:31.897697  3742 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:30:31.899869  3742 net.cpp:124] Setting up mnist
I0428 20:30:31.899901  3742 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:30:31.899910  3742 net.cpp:131] Top shape: 64 (64)
I0428 20:30:31.899915  3742 net.cpp:139] Memory required for data: 200960
I0428 20:30:31.899924  3742 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:31.899941  3742 net.cpp:86] Creating Layer conv0
I0428 20:30:31.899961  3742 net.cpp:408] conv0 <- data
I0428 20:30:31.899979  3742 net.cpp:382] conv0 -> conv0
I0428 20:30:32.132239  3742 net.cpp:124] Setting up conv0
I0428 20:30:32.132269  3742 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:30:32.132274  3742 net.cpp:139] Memory required for data: 14946560
I0428 20:30:32.132294  3742 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:32.132310  3742 net.cpp:86] Creating Layer pool0
I0428 20:30:32.132316  3742 net.cpp:408] pool0 <- conv0
I0428 20:30:32.132324  3742 net.cpp:382] pool0 -> pool0
I0428 20:30:32.132381  3742 net.cpp:124] Setting up pool0
I0428 20:30:32.132390  3742 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:30:32.132395  3742 net.cpp:139] Memory required for data: 18632960
I0428 20:30:32.132398  3742 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:32.132413  3742 net.cpp:86] Creating Layer conv1
I0428 20:30:32.132419  3742 net.cpp:408] conv1 <- pool0
I0428 20:30:32.132428  3742 net.cpp:382] conv1 -> conv1
I0428 20:30:32.134507  3742 net.cpp:124] Setting up conv1
I0428 20:30:32.134539  3742 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:30:32.134546  3742 net.cpp:139] Memory required for data: 18796800
I0428 20:30:32.134560  3742 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:32.134572  3742 net.cpp:86] Creating Layer pool1
I0428 20:30:32.134598  3742 net.cpp:408] pool1 <- conv1
I0428 20:30:32.134606  3742 net.cpp:382] pool1 -> pool1
I0428 20:30:32.134666  3742 net.cpp:124] Setting up pool1
I0428 20:30:32.134675  3742 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:30:32.134680  3742 net.cpp:139] Memory required for data: 18837760
I0428 20:30:32.134683  3742 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:32.134694  3742 net.cpp:86] Creating Layer ip1
I0428 20:30:32.134699  3742 net.cpp:408] ip1 <- pool1
I0428 20:30:32.134708  3742 net.cpp:382] ip1 -> ip1
I0428 20:30:32.134822  3742 net.cpp:124] Setting up ip1
I0428 20:30:32.134831  3742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:32.134835  3742 net.cpp:139] Memory required for data: 18840320
I0428 20:30:32.134846  3742 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:32.134860  3742 net.cpp:86] Creating Layer relu1
I0428 20:30:32.134866  3742 net.cpp:408] relu1 <- ip1
I0428 20:30:32.134873  3742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:32.135042  3742 net.cpp:124] Setting up relu1
I0428 20:30:32.135051  3742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:32.135056  3742 net.cpp:139] Memory required for data: 18842880
I0428 20:30:32.135061  3742 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:32.135072  3742 net.cpp:86] Creating Layer ip2
I0428 20:30:32.135077  3742 net.cpp:408] ip2 <- ip1
I0428 20:30:32.135085  3742 net.cpp:382] ip2 -> ip2
I0428 20:30:32.135203  3742 net.cpp:124] Setting up ip2
I0428 20:30:32.135212  3742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:30:32.135216  3742 net.cpp:139] Memory required for data: 18855680
I0428 20:30:32.135226  3742 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:32.135236  3742 net.cpp:86] Creating Layer relu2
I0428 20:30:32.135243  3742 net.cpp:408] relu2 <- ip2
I0428 20:30:32.135249  3742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:32.135970  3742 net.cpp:124] Setting up relu2
I0428 20:30:32.135984  3742 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:30:32.135989  3742 net.cpp:139] Memory required for data: 18868480
I0428 20:30:32.135995  3742 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:32.136023  3742 net.cpp:86] Creating Layer ip3
I0428 20:30:32.136029  3742 net.cpp:408] ip3 <- ip2
I0428 20:30:32.136039  3742 net.cpp:382] ip3 -> ip3
I0428 20:30:32.136152  3742 net.cpp:124] Setting up ip3
I0428 20:30:32.136162  3742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:32.136168  3742 net.cpp:139] Memory required for data: 18871040
I0428 20:30:32.136180  3742 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:32.136189  3742 net.cpp:86] Creating Layer relu3
I0428 20:30:32.136194  3742 net.cpp:408] relu3 <- ip3
I0428 20:30:32.136201  3742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:32.136427  3742 net.cpp:124] Setting up relu3
I0428 20:30:32.136437  3742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:30:32.136442  3742 net.cpp:139] Memory required for data: 18873600
I0428 20:30:32.136447  3742 layer_factory.hpp:77] Creating layer loss
I0428 20:30:32.136461  3742 net.cpp:86] Creating Layer loss
I0428 20:30:32.136467  3742 net.cpp:408] loss <- ip3
I0428 20:30:32.136473  3742 net.cpp:408] loss <- label
I0428 20:30:32.136483  3742 net.cpp:382] loss -> loss
I0428 20:30:32.136502  3742 layer_factory.hpp:77] Creating layer loss
I0428 20:30:32.136749  3742 net.cpp:124] Setting up loss
I0428 20:30:32.136759  3742 net.cpp:131] Top shape: (1)
I0428 20:30:32.136778  3742 net.cpp:134]     with loss weight 1
I0428 20:30:32.136796  3742 net.cpp:139] Memory required for data: 18873604
I0428 20:30:32.136802  3742 net.cpp:200] loss needs backward computation.
I0428 20:30:32.136807  3742 net.cpp:200] relu3 needs backward computation.
I0428 20:30:32.136834  3742 net.cpp:200] ip3 needs backward computation.
I0428 20:30:32.136854  3742 net.cpp:200] relu2 needs backward computation.
I0428 20:30:32.136863  3742 net.cpp:200] ip2 needs backward computation.
I0428 20:30:32.136868  3742 net.cpp:200] relu1 needs backward computation.
I0428 20:30:32.136873  3742 net.cpp:200] ip1 needs backward computation.
I0428 20:30:32.136878  3742 net.cpp:200] pool1 needs backward computation.
I0428 20:30:32.136883  3742 net.cpp:200] conv1 needs backward computation.
I0428 20:30:32.136889  3742 net.cpp:200] pool0 needs backward computation.
I0428 20:30:32.136894  3742 net.cpp:200] conv0 needs backward computation.
I0428 20:30:32.136899  3742 net.cpp:202] mnist does not need backward computation.
I0428 20:30:32.136904  3742 net.cpp:244] This network produces output loss
I0428 20:30:32.136921  3742 net.cpp:257] Network initialization done.
I0428 20:30:32.137291  3742 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1540.prototxt
I0428 20:30:32.137326  3742 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:30:32.137436  3742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:30:32.137553  3742 layer_factory.hpp:77] Creating layer mnist
I0428 20:30:32.137609  3742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:30:32.137627  3742 net.cpp:86] Creating Layer mnist
I0428 20:30:32.137636  3742 net.cpp:382] mnist -> data
I0428 20:30:32.137647  3742 net.cpp:382] mnist -> label
I0428 20:30:32.137776  3742 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:30:32.139950  3742 net.cpp:124] Setting up mnist
I0428 20:30:32.139981  3742 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:30:32.139991  3742 net.cpp:131] Top shape: 100 (100)
I0428 20:30:32.139997  3742 net.cpp:139] Memory required for data: 314000
I0428 20:30:32.140003  3742 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:30:32.140013  3742 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:30:32.140018  3742 net.cpp:408] label_mnist_1_split <- label
I0428 20:30:32.140027  3742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:30:32.140038  3742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:30:32.140130  3742 net.cpp:124] Setting up label_mnist_1_split
I0428 20:30:32.140138  3742 net.cpp:131] Top shape: 100 (100)
I0428 20:30:32.140146  3742 net.cpp:131] Top shape: 100 (100)
I0428 20:30:32.140151  3742 net.cpp:139] Memory required for data: 314800
I0428 20:30:32.140156  3742 layer_factory.hpp:77] Creating layer conv0
I0428 20:30:32.140171  3742 net.cpp:86] Creating Layer conv0
I0428 20:30:32.140177  3742 net.cpp:408] conv0 <- data
I0428 20:30:32.140188  3742 net.cpp:382] conv0 -> conv0
I0428 20:30:32.141852  3742 net.cpp:124] Setting up conv0
I0428 20:30:32.141868  3742 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:30:32.141873  3742 net.cpp:139] Memory required for data: 23354800
I0428 20:30:32.141887  3742 layer_factory.hpp:77] Creating layer pool0
I0428 20:30:32.141898  3742 net.cpp:86] Creating Layer pool0
I0428 20:30:32.141906  3742 net.cpp:408] pool0 <- conv0
I0428 20:30:32.141913  3742 net.cpp:382] pool0 -> pool0
I0428 20:30:32.141955  3742 net.cpp:124] Setting up pool0
I0428 20:30:32.141964  3742 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:30:32.141968  3742 net.cpp:139] Memory required for data: 29114800
I0428 20:30:32.141973  3742 layer_factory.hpp:77] Creating layer conv1
I0428 20:30:32.141988  3742 net.cpp:86] Creating Layer conv1
I0428 20:30:32.141993  3742 net.cpp:408] conv1 <- pool0
I0428 20:30:32.142004  3742 net.cpp:382] conv1 -> conv1
I0428 20:30:32.143860  3742 net.cpp:124] Setting up conv1
I0428 20:30:32.143877  3742 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:30:32.143882  3742 net.cpp:139] Memory required for data: 29370800
I0428 20:30:32.143895  3742 layer_factory.hpp:77] Creating layer pool1
I0428 20:30:32.143904  3742 net.cpp:86] Creating Layer pool1
I0428 20:30:32.143910  3742 net.cpp:408] pool1 <- conv1
I0428 20:30:32.143918  3742 net.cpp:382] pool1 -> pool1
I0428 20:30:32.143976  3742 net.cpp:124] Setting up pool1
I0428 20:30:32.143985  3742 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:30:32.143990  3742 net.cpp:139] Memory required for data: 29434800
I0428 20:30:32.143995  3742 layer_factory.hpp:77] Creating layer ip1
I0428 20:30:32.144006  3742 net.cpp:86] Creating Layer ip1
I0428 20:30:32.144011  3742 net.cpp:408] ip1 <- pool1
I0428 20:30:32.144021  3742 net.cpp:382] ip1 -> ip1
I0428 20:30:32.144141  3742 net.cpp:124] Setting up ip1
I0428 20:30:32.144160  3742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:32.144166  3742 net.cpp:139] Memory required for data: 29438800
I0428 20:30:32.144181  3742 layer_factory.hpp:77] Creating layer relu1
I0428 20:30:32.144189  3742 net.cpp:86] Creating Layer relu1
I0428 20:30:32.144196  3742 net.cpp:408] relu1 <- ip1
I0428 20:30:32.144217  3742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:30:32.144390  3742 net.cpp:124] Setting up relu1
I0428 20:30:32.144402  3742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:32.144407  3742 net.cpp:139] Memory required for data: 29442800
I0428 20:30:32.144412  3742 layer_factory.hpp:77] Creating layer ip2
I0428 20:30:32.144421  3742 net.cpp:86] Creating Layer ip2
I0428 20:30:32.144428  3742 net.cpp:408] ip2 <- ip1
I0428 20:30:32.144438  3742 net.cpp:382] ip2 -> ip2
I0428 20:30:32.144543  3742 net.cpp:124] Setting up ip2
I0428 20:30:32.144552  3742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:30:32.144557  3742 net.cpp:139] Memory required for data: 29462800
I0428 20:30:32.144567  3742 layer_factory.hpp:77] Creating layer relu2
I0428 20:30:32.144575  3742 net.cpp:86] Creating Layer relu2
I0428 20:30:32.144585  3742 net.cpp:408] relu2 <- ip2
I0428 20:30:32.144593  3742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:30:32.144794  3742 net.cpp:124] Setting up relu2
I0428 20:30:32.144804  3742 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:30:32.144829  3742 net.cpp:139] Memory required for data: 29482800
I0428 20:30:32.144835  3742 layer_factory.hpp:77] Creating layer ip3
I0428 20:30:32.144846  3742 net.cpp:86] Creating Layer ip3
I0428 20:30:32.144852  3742 net.cpp:408] ip3 <- ip2
I0428 20:30:32.144863  3742 net.cpp:382] ip3 -> ip3
I0428 20:30:32.145035  3742 net.cpp:124] Setting up ip3
I0428 20:30:32.145045  3742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:32.145066  3742 net.cpp:139] Memory required for data: 29486800
I0428 20:30:32.145081  3742 layer_factory.hpp:77] Creating layer relu3
I0428 20:30:32.145090  3742 net.cpp:86] Creating Layer relu3
I0428 20:30:32.145098  3742 net.cpp:408] relu3 <- ip3
I0428 20:30:32.145108  3742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:30:32.145962  3742 net.cpp:124] Setting up relu3
I0428 20:30:32.145975  3742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:32.145980  3742 net.cpp:139] Memory required for data: 29490800
I0428 20:30:32.145985  3742 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:30:32.145993  3742 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:30:32.145998  3742 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:30:32.146008  3742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:30:32.146016  3742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:30:32.146060  3742 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:30:32.146070  3742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:32.146076  3742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:30:32.146080  3742 net.cpp:139] Memory required for data: 29498800
I0428 20:30:32.146086  3742 layer_factory.hpp:77] Creating layer accuracy
I0428 20:30:32.146095  3742 net.cpp:86] Creating Layer accuracy
I0428 20:30:32.146100  3742 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:30:32.146106  3742 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:30:32.146113  3742 net.cpp:382] accuracy -> accuracy
I0428 20:30:32.146123  3742 net.cpp:124] Setting up accuracy
I0428 20:30:32.146131  3742 net.cpp:131] Top shape: (1)
I0428 20:30:32.146136  3742 net.cpp:139] Memory required for data: 29498804
I0428 20:30:32.146155  3742 layer_factory.hpp:77] Creating layer loss
I0428 20:30:32.146179  3742 net.cpp:86] Creating Layer loss
I0428 20:30:32.146185  3742 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:30:32.146191  3742 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:30:32.146198  3742 net.cpp:382] loss -> loss
I0428 20:30:32.146209  3742 layer_factory.hpp:77] Creating layer loss
I0428 20:30:32.146472  3742 net.cpp:124] Setting up loss
I0428 20:30:32.146497  3742 net.cpp:131] Top shape: (1)
I0428 20:30:32.146502  3742 net.cpp:134]     with loss weight 1
I0428 20:30:32.146523  3742 net.cpp:139] Memory required for data: 29498808
I0428 20:30:32.146530  3742 net.cpp:200] loss needs backward computation.
I0428 20:30:32.146536  3742 net.cpp:202] accuracy does not need backward computation.
I0428 20:30:32.146543  3742 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:30:32.146548  3742 net.cpp:200] relu3 needs backward computation.
I0428 20:30:32.146553  3742 net.cpp:200] ip3 needs backward computation.
I0428 20:30:32.146559  3742 net.cpp:200] relu2 needs backward computation.
I0428 20:30:32.146577  3742 net.cpp:200] ip2 needs backward computation.
I0428 20:30:32.146582  3742 net.cpp:200] relu1 needs backward computation.
I0428 20:30:32.146587  3742 net.cpp:200] ip1 needs backward computation.
I0428 20:30:32.146592  3742 net.cpp:200] pool1 needs backward computation.
I0428 20:30:32.146600  3742 net.cpp:200] conv1 needs backward computation.
I0428 20:30:32.146605  3742 net.cpp:200] pool0 needs backward computation.
I0428 20:30:32.146610  3742 net.cpp:200] conv0 needs backward computation.
I0428 20:30:32.146616  3742 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:30:32.146621  3742 net.cpp:202] mnist does not need backward computation.
I0428 20:30:32.146626  3742 net.cpp:244] This network produces output accuracy
I0428 20:30:32.146631  3742 net.cpp:244] This network produces output loss
I0428 20:30:32.146648  3742 net.cpp:257] Network initialization done.
I0428 20:30:32.146695  3742 solver.cpp:56] Solver scaffolding done.
I0428 20:30:32.147049  3742 caffe.cpp:248] Starting Optimization
I0428 20:30:32.147056  3742 solver.cpp:273] Solving LeNet
I0428 20:30:32.147060  3742 solver.cpp:274] Learning Rate Policy: inv
I0428 20:30:32.147949  3742 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:30:32.243551  3749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:32.246111  3742 solver.cpp:398]     Test net output #0: accuracy = 0.123
I0428 20:30:32.246150  3742 solver.cpp:398]     Test net output #1: loss = 2.3003 (* 1 = 2.3003 loss)
I0428 20:30:32.250628  3742 solver.cpp:219] Iteration 0 (0 iter/s, 0.103532s/100 iters), loss = 2.30843
I0428 20:30:32.250658  3742 solver.cpp:238]     Train net output #0: loss = 2.30843 (* 1 = 2.30843 loss)
I0428 20:30:32.250689  3742 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:30:32.466159  3742 solver.cpp:219] Iteration 100 (464.08 iter/s, 0.21548s/100 iters), loss = 0.369741
I0428 20:30:32.466217  3742 solver.cpp:238]     Train net output #0: loss = 0.369741 (* 1 = 0.369741 loss)
I0428 20:30:32.466236  3742 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:30:32.689505  3742 solver.cpp:219] Iteration 200 (447.876 iter/s, 0.223276s/100 iters), loss = 0.34516
I0428 20:30:32.689563  3742 solver.cpp:238]     Train net output #0: loss = 0.34516 (* 1 = 0.34516 loss)
I0428 20:30:32.689584  3742 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:30:32.920547  3742 solver.cpp:219] Iteration 300 (432.954 iter/s, 0.230971s/100 iters), loss = 0.296944
I0428 20:30:32.920600  3742 solver.cpp:238]     Train net output #0: loss = 0.296944 (* 1 = 0.296944 loss)
I0428 20:30:32.920614  3742 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:30:33.150069  3742 solver.cpp:219] Iteration 400 (435.821 iter/s, 0.229452s/100 iters), loss = 0.269906
I0428 20:30:33.150120  3742 solver.cpp:238]     Train net output #0: loss = 0.269906 (* 1 = 0.269906 loss)
I0428 20:30:33.150132  3742 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:30:33.374555  3742 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:30:33.479010  3749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:33.482481  3742 solver.cpp:398]     Test net output #0: accuracy = 0.9486
I0428 20:30:33.482508  3742 solver.cpp:398]     Test net output #1: loss = 0.176815 (* 1 = 0.176815 loss)
I0428 20:30:33.484447  3742 solver.cpp:219] Iteration 500 (299.124 iter/s, 0.33431s/100 iters), loss = 0.211554
I0428 20:30:33.484474  3742 solver.cpp:238]     Train net output #0: loss = 0.211554 (* 1 = 0.211554 loss)
I0428 20:30:33.484500  3742 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:30:33.694902  3742 solver.cpp:219] Iteration 600 (475.268 iter/s, 0.210408s/100 iters), loss = 0.124267
I0428 20:30:33.694947  3742 solver.cpp:238]     Train net output #0: loss = 0.124267 (* 1 = 0.124267 loss)
I0428 20:30:33.694957  3742 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:30:33.915568  3742 solver.cpp:219] Iteration 700 (453.304 iter/s, 0.220602s/100 iters), loss = 0.286176
I0428 20:30:33.915616  3742 solver.cpp:238]     Train net output #0: loss = 0.286176 (* 1 = 0.286176 loss)
I0428 20:30:33.915627  3742 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:30:34.139493  3742 solver.cpp:219] Iteration 800 (446.709 iter/s, 0.22386s/100 iters), loss = 0.300005
I0428 20:30:34.139540  3742 solver.cpp:238]     Train net output #0: loss = 0.300005 (* 1 = 0.300005 loss)
I0428 20:30:34.139551  3742 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:30:34.365039  3742 solver.cpp:219] Iteration 900 (443.497 iter/s, 0.225481s/100 iters), loss = 0.10126
I0428 20:30:34.365088  3742 solver.cpp:238]     Train net output #0: loss = 0.10126 (* 1 = 0.10126 loss)
I0428 20:30:34.365100  3742 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:30:34.440294  3748 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:34.590227  3742 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:30:34.592510  3742 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:30:34.593921  3742 solver.cpp:311] Iteration 1000, loss = 0.147283
I0428 20:30:34.593950  3742 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:30:34.698339  3749 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:30:34.701128  3742 solver.cpp:398]     Test net output #0: accuracy = 0.9673
I0428 20:30:34.701153  3742 solver.cpp:398]     Test net output #1: loss = 0.0987379 (* 1 = 0.0987379 loss)
I0428 20:30:34.701159  3742 solver.cpp:316] Optimization Done.
I0428 20:30:34.701164  3742 caffe.cpp:259] Optimization Done.
