I0428 20:07:12.332507 31049 caffe.cpp:218] Using GPUs 0
I0428 20:07:12.368026 31049 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:12.879912 31049 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1049.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:12.880053 31049 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1049.prototxt
I0428 20:07:12.880476 31049 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:12.880497 31049 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:12.880604 31049 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:12.880686 31049 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:12.880785 31049 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:12.880817 31049 net.cpp:86] Creating Layer mnist
I0428 20:07:12.880828 31049 net.cpp:382] mnist -> data
I0428 20:07:12.880851 31049 net.cpp:382] mnist -> label
I0428 20:07:12.881989 31049 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:12.884496 31049 net.cpp:124] Setting up mnist
I0428 20:07:12.884521 31049 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:12.884532 31049 net.cpp:131] Top shape: 64 (64)
I0428 20:07:12.884538 31049 net.cpp:139] Memory required for data: 200960
I0428 20:07:12.884549 31049 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:12.884572 31049 net.cpp:86] Creating Layer conv0
I0428 20:07:12.884601 31049 net.cpp:408] conv0 <- data
I0428 20:07:12.884623 31049 net.cpp:382] conv0 -> conv0
I0428 20:07:13.159744 31049 net.cpp:124] Setting up conv0
I0428 20:07:13.159771 31049 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:13.159775 31049 net.cpp:139] Memory required for data: 3887360
I0428 20:07:13.159790 31049 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:13.159801 31049 net.cpp:86] Creating Layer pool0
I0428 20:07:13.159806 31049 net.cpp:408] pool0 <- conv0
I0428 20:07:13.159811 31049 net.cpp:382] pool0 -> pool0
I0428 20:07:13.159870 31049 net.cpp:124] Setting up pool0
I0428 20:07:13.159876 31049 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:13.159879 31049 net.cpp:139] Memory required for data: 4808960
I0428 20:07:13.159883 31049 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:13.159893 31049 net.cpp:86] Creating Layer conv1
I0428 20:07:13.159895 31049 net.cpp:408] conv1 <- pool0
I0428 20:07:13.159900 31049 net.cpp:382] conv1 -> conv1
I0428 20:07:13.162664 31049 net.cpp:124] Setting up conv1
I0428 20:07:13.162678 31049 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 20:07:13.162698 31049 net.cpp:139] Memory required for data: 4890880
I0428 20:07:13.162708 31049 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:13.162715 31049 net.cpp:86] Creating Layer pool1
I0428 20:07:13.162719 31049 net.cpp:408] pool1 <- conv1
I0428 20:07:13.162724 31049 net.cpp:382] pool1 -> pool1
I0428 20:07:13.162791 31049 net.cpp:124] Setting up pool1
I0428 20:07:13.162796 31049 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 20:07:13.162798 31049 net.cpp:139] Memory required for data: 4911360
I0428 20:07:13.162801 31049 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:13.162808 31049 net.cpp:86] Creating Layer ip1
I0428 20:07:13.162811 31049 net.cpp:408] ip1 <- pool1
I0428 20:07:13.162817 31049 net.cpp:382] ip1 -> ip1
I0428 20:07:13.162928 31049 net.cpp:124] Setting up ip1
I0428 20:07:13.162936 31049 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:13.162940 31049 net.cpp:139] Memory required for data: 4924160
I0428 20:07:13.162946 31049 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:13.162952 31049 net.cpp:86] Creating Layer relu1
I0428 20:07:13.162955 31049 net.cpp:408] relu1 <- ip1
I0428 20:07:13.162959 31049 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:13.163116 31049 net.cpp:124] Setting up relu1
I0428 20:07:13.163125 31049 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:07:13.163128 31049 net.cpp:139] Memory required for data: 4936960
I0428 20:07:13.163131 31049 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:13.163137 31049 net.cpp:86] Creating Layer ip2
I0428 20:07:13.163141 31049 net.cpp:408] ip2 <- ip1
I0428 20:07:13.163146 31049 net.cpp:382] ip2 -> ip2
I0428 20:07:13.163242 31049 net.cpp:124] Setting up ip2
I0428 20:07:13.163249 31049 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:13.163254 31049 net.cpp:139] Memory required for data: 4943360
I0428 20:07:13.163259 31049 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:13.163265 31049 net.cpp:86] Creating Layer relu2
I0428 20:07:13.163269 31049 net.cpp:408] relu2 <- ip2
I0428 20:07:13.163272 31049 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:13.164113 31049 net.cpp:124] Setting up relu2
I0428 20:07:13.164125 31049 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:13.164144 31049 net.cpp:139] Memory required for data: 4949760
I0428 20:07:13.164149 31049 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:13.164155 31049 net.cpp:86] Creating Layer ip3
I0428 20:07:13.164160 31049 net.cpp:408] ip3 <- ip2
I0428 20:07:13.164165 31049 net.cpp:382] ip3 -> ip3
I0428 20:07:13.164260 31049 net.cpp:124] Setting up ip3
I0428 20:07:13.164268 31049 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:13.164271 31049 net.cpp:139] Memory required for data: 4952320
I0428 20:07:13.164279 31049 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:13.164284 31049 net.cpp:86] Creating Layer relu3
I0428 20:07:13.164288 31049 net.cpp:408] relu3 <- ip3
I0428 20:07:13.164291 31049 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:13.164470 31049 net.cpp:124] Setting up relu3
I0428 20:07:13.164479 31049 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:13.164484 31049 net.cpp:139] Memory required for data: 4954880
I0428 20:07:13.164486 31049 layer_factory.hpp:77] Creating layer loss
I0428 20:07:13.164492 31049 net.cpp:86] Creating Layer loss
I0428 20:07:13.164495 31049 net.cpp:408] loss <- ip3
I0428 20:07:13.164499 31049 net.cpp:408] loss <- label
I0428 20:07:13.164505 31049 net.cpp:382] loss -> loss
I0428 20:07:13.164522 31049 layer_factory.hpp:77] Creating layer loss
I0428 20:07:13.164760 31049 net.cpp:124] Setting up loss
I0428 20:07:13.164769 31049 net.cpp:131] Top shape: (1)
I0428 20:07:13.164772 31049 net.cpp:134]     with loss weight 1
I0428 20:07:13.164786 31049 net.cpp:139] Memory required for data: 4954884
I0428 20:07:13.164790 31049 net.cpp:200] loss needs backward computation.
I0428 20:07:13.164794 31049 net.cpp:200] relu3 needs backward computation.
I0428 20:07:13.164798 31049 net.cpp:200] ip3 needs backward computation.
I0428 20:07:13.164800 31049 net.cpp:200] relu2 needs backward computation.
I0428 20:07:13.164803 31049 net.cpp:200] ip2 needs backward computation.
I0428 20:07:13.164806 31049 net.cpp:200] relu1 needs backward computation.
I0428 20:07:13.164815 31049 net.cpp:200] ip1 needs backward computation.
I0428 20:07:13.164836 31049 net.cpp:200] pool1 needs backward computation.
I0428 20:07:13.164841 31049 net.cpp:200] conv1 needs backward computation.
I0428 20:07:13.164852 31049 net.cpp:200] pool0 needs backward computation.
I0428 20:07:13.164860 31049 net.cpp:200] conv0 needs backward computation.
I0428 20:07:13.164866 31049 net.cpp:202] mnist does not need backward computation.
I0428 20:07:13.164872 31049 net.cpp:244] This network produces output loss
I0428 20:07:13.164887 31049 net.cpp:257] Network initialization done.
I0428 20:07:13.165370 31049 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1049.prototxt
I0428 20:07:13.165415 31049 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:13.165532 31049 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:13.165612 31049 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:13.165658 31049 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:13.165671 31049 net.cpp:86] Creating Layer mnist
I0428 20:07:13.165676 31049 net.cpp:382] mnist -> data
I0428 20:07:13.165684 31049 net.cpp:382] mnist -> label
I0428 20:07:13.165768 31049 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:13.167738 31049 net.cpp:124] Setting up mnist
I0428 20:07:13.167771 31049 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:13.167778 31049 net.cpp:131] Top shape: 100 (100)
I0428 20:07:13.167781 31049 net.cpp:139] Memory required for data: 314000
I0428 20:07:13.167784 31049 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:13.167791 31049 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:13.167795 31049 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:13.167800 31049 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:13.167806 31049 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:13.167915 31049 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:13.167923 31049 net.cpp:131] Top shape: 100 (100)
I0428 20:07:13.167928 31049 net.cpp:131] Top shape: 100 (100)
I0428 20:07:13.167932 31049 net.cpp:139] Memory required for data: 314800
I0428 20:07:13.167934 31049 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:13.167943 31049 net.cpp:86] Creating Layer conv0
I0428 20:07:13.167946 31049 net.cpp:408] conv0 <- data
I0428 20:07:13.167951 31049 net.cpp:382] conv0 -> conv0
I0428 20:07:13.169592 31049 net.cpp:124] Setting up conv0
I0428 20:07:13.169606 31049 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:13.169610 31049 net.cpp:139] Memory required for data: 6074800
I0428 20:07:13.169618 31049 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:13.169641 31049 net.cpp:86] Creating Layer pool0
I0428 20:07:13.169644 31049 net.cpp:408] pool0 <- conv0
I0428 20:07:13.169649 31049 net.cpp:382] pool0 -> pool0
I0428 20:07:13.169683 31049 net.cpp:124] Setting up pool0
I0428 20:07:13.169689 31049 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:13.169692 31049 net.cpp:139] Memory required for data: 7514800
I0428 20:07:13.169695 31049 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:13.169703 31049 net.cpp:86] Creating Layer conv1
I0428 20:07:13.169706 31049 net.cpp:408] conv1 <- pool0
I0428 20:07:13.169711 31049 net.cpp:382] conv1 -> conv1
I0428 20:07:13.171865 31049 net.cpp:124] Setting up conv1
I0428 20:07:13.171880 31049 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 20:07:13.171885 31049 net.cpp:139] Memory required for data: 7642800
I0428 20:07:13.171893 31049 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:13.171914 31049 net.cpp:86] Creating Layer pool1
I0428 20:07:13.171919 31049 net.cpp:408] pool1 <- conv1
I0428 20:07:13.171924 31049 net.cpp:382] pool1 -> pool1
I0428 20:07:13.171963 31049 net.cpp:124] Setting up pool1
I0428 20:07:13.171977 31049 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 20:07:13.171980 31049 net.cpp:139] Memory required for data: 7674800
I0428 20:07:13.171983 31049 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:13.171990 31049 net.cpp:86] Creating Layer ip1
I0428 20:07:13.171993 31049 net.cpp:408] ip1 <- pool1
I0428 20:07:13.171998 31049 net.cpp:382] ip1 -> ip1
I0428 20:07:13.172144 31049 net.cpp:124] Setting up ip1
I0428 20:07:13.172152 31049 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:13.172165 31049 net.cpp:139] Memory required for data: 7694800
I0428 20:07:13.172173 31049 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:13.172178 31049 net.cpp:86] Creating Layer relu1
I0428 20:07:13.172183 31049 net.cpp:408] relu1 <- ip1
I0428 20:07:13.172188 31049 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:13.172454 31049 net.cpp:124] Setting up relu1
I0428 20:07:13.172464 31049 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:07:13.172468 31049 net.cpp:139] Memory required for data: 7714800
I0428 20:07:13.172472 31049 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:13.172479 31049 net.cpp:86] Creating Layer ip2
I0428 20:07:13.172482 31049 net.cpp:408] ip2 <- ip1
I0428 20:07:13.172488 31049 net.cpp:382] ip2 -> ip2
I0428 20:07:13.172587 31049 net.cpp:124] Setting up ip2
I0428 20:07:13.172595 31049 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:13.172598 31049 net.cpp:139] Memory required for data: 7724800
I0428 20:07:13.172605 31049 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:13.172608 31049 net.cpp:86] Creating Layer relu2
I0428 20:07:13.172612 31049 net.cpp:408] relu2 <- ip2
I0428 20:07:13.172616 31049 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:13.172760 31049 net.cpp:124] Setting up relu2
I0428 20:07:13.172770 31049 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:13.172780 31049 net.cpp:139] Memory required for data: 7734800
I0428 20:07:13.172782 31049 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:13.172788 31049 net.cpp:86] Creating Layer ip3
I0428 20:07:13.172797 31049 net.cpp:408] ip3 <- ip2
I0428 20:07:13.172802 31049 net.cpp:382] ip3 -> ip3
I0428 20:07:13.172979 31049 net.cpp:124] Setting up ip3
I0428 20:07:13.172991 31049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:13.173001 31049 net.cpp:139] Memory required for data: 7738800
I0428 20:07:13.173010 31049 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:13.173022 31049 net.cpp:86] Creating Layer relu3
I0428 20:07:13.173025 31049 net.cpp:408] relu3 <- ip3
I0428 20:07:13.173034 31049 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:13.173877 31049 net.cpp:124] Setting up relu3
I0428 20:07:13.173889 31049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:13.173893 31049 net.cpp:139] Memory required for data: 7742800
I0428 20:07:13.173897 31049 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:13.173902 31049 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:13.173905 31049 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:13.173910 31049 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:13.173918 31049 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:13.173955 31049 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:13.173961 31049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:13.173964 31049 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:13.173967 31049 net.cpp:139] Memory required for data: 7750800
I0428 20:07:13.173970 31049 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:13.173975 31049 net.cpp:86] Creating Layer accuracy
I0428 20:07:13.173979 31049 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:13.173982 31049 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:13.173987 31049 net.cpp:382] accuracy -> accuracy
I0428 20:07:13.173993 31049 net.cpp:124] Setting up accuracy
I0428 20:07:13.173997 31049 net.cpp:131] Top shape: (1)
I0428 20:07:13.174000 31049 net.cpp:139] Memory required for data: 7750804
I0428 20:07:13.174003 31049 layer_factory.hpp:77] Creating layer loss
I0428 20:07:13.174007 31049 net.cpp:86] Creating Layer loss
I0428 20:07:13.174011 31049 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:13.174021 31049 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:13.174026 31049 net.cpp:382] loss -> loss
I0428 20:07:13.174031 31049 layer_factory.hpp:77] Creating layer loss
I0428 20:07:13.174242 31049 net.cpp:124] Setting up loss
I0428 20:07:13.174252 31049 net.cpp:131] Top shape: (1)
I0428 20:07:13.174255 31049 net.cpp:134]     with loss weight 1
I0428 20:07:13.174262 31049 net.cpp:139] Memory required for data: 7750808
I0428 20:07:13.174290 31049 net.cpp:200] loss needs backward computation.
I0428 20:07:13.174294 31049 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:13.174299 31049 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:13.174301 31049 net.cpp:200] relu3 needs backward computation.
I0428 20:07:13.174307 31049 net.cpp:200] ip3 needs backward computation.
I0428 20:07:13.174312 31049 net.cpp:200] relu2 needs backward computation.
I0428 20:07:13.174317 31049 net.cpp:200] ip2 needs backward computation.
I0428 20:07:13.174338 31049 net.cpp:200] relu1 needs backward computation.
I0428 20:07:13.174356 31049 net.cpp:200] ip1 needs backward computation.
I0428 20:07:13.174361 31049 net.cpp:200] pool1 needs backward computation.
I0428 20:07:13.174367 31049 net.cpp:200] conv1 needs backward computation.
I0428 20:07:13.174373 31049 net.cpp:200] pool0 needs backward computation.
I0428 20:07:13.174379 31049 net.cpp:200] conv0 needs backward computation.
I0428 20:07:13.174386 31049 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:13.174392 31049 net.cpp:202] mnist does not need backward computation.
I0428 20:07:13.174402 31049 net.cpp:244] This network produces output accuracy
I0428 20:07:13.174407 31049 net.cpp:244] This network produces output loss
I0428 20:07:13.174417 31049 net.cpp:257] Network initialization done.
I0428 20:07:13.174460 31049 solver.cpp:56] Solver scaffolding done.
I0428 20:07:13.174808 31049 caffe.cpp:248] Starting Optimization
I0428 20:07:13.174815 31049 solver.cpp:273] Solving LeNet
I0428 20:07:13.174819 31049 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:13.175609 31049 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:13.181432 31049 blocking_queue.cpp:49] Waiting for data
I0428 20:07:13.253759 31056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:13.254361 31049 solver.cpp:398]     Test net output #0: accuracy = 0.1082
I0428 20:07:13.254380 31049 solver.cpp:398]     Test net output #1: loss = 2.31051 (* 1 = 2.31051 loss)
I0428 20:07:13.257921 31049 solver.cpp:219] Iteration 0 (0 iter/s, 0.0830781s/100 iters), loss = 2.31805
I0428 20:07:13.257944 31049 solver.cpp:238]     Train net output #0: loss = 2.31805 (* 1 = 2.31805 loss)
I0428 20:07:13.257995 31049 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:13.347527 31049 solver.cpp:219] Iteration 100 (1116.43 iter/s, 0.0895713s/100 iters), loss = 0.888244
I0428 20:07:13.347551 31049 solver.cpp:238]     Train net output #0: loss = 0.888244 (* 1 = 0.888244 loss)
I0428 20:07:13.347558 31049 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:13.435142 31049 solver.cpp:219] Iteration 200 (1141.8 iter/s, 0.0875806s/100 iters), loss = 0.596217
I0428 20:07:13.435165 31049 solver.cpp:238]     Train net output #0: loss = 0.596217 (* 1 = 0.596217 loss)
I0428 20:07:13.435171 31049 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:13.522572 31049 solver.cpp:219] Iteration 300 (1144.2 iter/s, 0.0873975s/100 iters), loss = 0.270232
I0428 20:07:13.522596 31049 solver.cpp:238]     Train net output #0: loss = 0.270232 (* 1 = 0.270232 loss)
I0428 20:07:13.522603 31049 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:13.609639 31049 solver.cpp:219] Iteration 400 (1149.01 iter/s, 0.0870318s/100 iters), loss = 0.358854
I0428 20:07:13.609663 31049 solver.cpp:238]     Train net output #0: loss = 0.358854 (* 1 = 0.358854 loss)
I0428 20:07:13.609684 31049 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:13.696216 31049 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:13.750222 31056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:13.750811 31049 solver.cpp:398]     Test net output #0: accuracy = 0.8661
I0428 20:07:13.750844 31049 solver.cpp:398]     Test net output #1: loss = 0.374421 (* 1 = 0.374421 loss)
I0428 20:07:13.751739 31049 solver.cpp:219] Iteration 500 (703.91 iter/s, 0.142064s/100 iters), loss = 0.46428
I0428 20:07:13.751788 31049 solver.cpp:238]     Train net output #0: loss = 0.46428 (* 1 = 0.46428 loss)
I0428 20:07:13.751812 31049 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:13.849146 31049 solver.cpp:219] Iteration 600 (1027.26 iter/s, 0.0973466s/100 iters), loss = 0.281997
I0428 20:07:13.849187 31049 solver.cpp:238]     Train net output #0: loss = 0.281997 (* 1 = 0.281997 loss)
I0428 20:07:13.849195 31049 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:13.937907 31049 solver.cpp:219] Iteration 700 (1127.24 iter/s, 0.0887122s/100 iters), loss = 0.615086
I0428 20:07:13.937948 31049 solver.cpp:238]     Train net output #0: loss = 0.615087 (* 1 = 0.615087 loss)
I0428 20:07:13.937955 31049 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:14.025061 31049 solver.cpp:219] Iteration 800 (1147.86 iter/s, 0.0871188s/100 iters), loss = 0.437515
I0428 20:07:14.025102 31049 solver.cpp:238]     Train net output #0: loss = 0.437515 (* 1 = 0.437515 loss)
I0428 20:07:14.025113 31049 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:14.112344 31049 solver.cpp:219] Iteration 900 (1146.16 iter/s, 0.0872479s/100 iters), loss = 0.352891
I0428 20:07:14.112385 31049 solver.cpp:238]     Train net output #0: loss = 0.352891 (* 1 = 0.352891 loss)
I0428 20:07:14.112392 31049 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:14.141757 31055 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:14.199654 31049 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:14.200505 31049 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:14.201134 31049 solver.cpp:311] Iteration 1000, loss = 0.481746
I0428 20:07:14.201150 31049 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:14.277254 31056 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:14.277863 31049 solver.cpp:398]     Test net output #0: accuracy = 0.8813
I0428 20:07:14.277884 31049 solver.cpp:398]     Test net output #1: loss = 0.321651 (* 1 = 0.321651 loss)
I0428 20:07:14.277890 31049 solver.cpp:316] Optimization Done.
I0428 20:07:14.277894 31049 caffe.cpp:259] Optimization Done.
