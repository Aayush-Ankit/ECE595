I0428 19:40:25.603456 24547 caffe.cpp:218] Using GPUs 0
I0428 19:40:25.642480 24547 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:40:26.104012 24547 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test334.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:40:26.104152 24547 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test334.prototxt
I0428 19:40:26.104511 24547 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:40:26.104540 24547 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:40:26.104620 24547 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:26.104679 24547 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:26.104761 24547 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:40:26.104780 24547 net.cpp:86] Creating Layer mnist
I0428 19:40:26.104786 24547 net.cpp:382] mnist -> data
I0428 19:40:26.104805 24547 net.cpp:382] mnist -> label
I0428 19:40:26.105873 24547 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:40:26.108353 24547 net.cpp:124] Setting up mnist
I0428 19:40:26.108384 24547 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:40:26.108403 24547 net.cpp:131] Top shape: 64 (64)
I0428 19:40:26.108407 24547 net.cpp:139] Memory required for data: 200960
I0428 19:40:26.108413 24547 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:26.108427 24547 net.cpp:86] Creating Layer conv0
I0428 19:40:26.108444 24547 net.cpp:408] conv0 <- data
I0428 19:40:26.108455 24547 net.cpp:382] conv0 -> conv0
I0428 19:40:26.342622 24547 net.cpp:124] Setting up conv0
I0428 19:40:26.342648 24547 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:40:26.342653 24547 net.cpp:139] Memory required for data: 495872
I0428 19:40:26.342666 24547 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:26.342694 24547 net.cpp:86] Creating Layer pool0
I0428 19:40:26.342697 24547 net.cpp:408] pool0 <- conv0
I0428 19:40:26.342702 24547 net.cpp:382] pool0 -> pool0
I0428 19:40:26.342763 24547 net.cpp:124] Setting up pool0
I0428 19:40:26.342768 24547 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:40:26.342772 24547 net.cpp:139] Memory required for data: 569600
I0428 19:40:26.342774 24547 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:26.342784 24547 net.cpp:86] Creating Layer conv1
I0428 19:40:26.342788 24547 net.cpp:408] conv1 <- pool0
I0428 19:40:26.342792 24547 net.cpp:382] conv1 -> conv1
I0428 19:40:26.344527 24547 net.cpp:124] Setting up conv1
I0428 19:40:26.344558 24547 net.cpp:131] Top shape: 64 5 8 8 (20480)
I0428 19:40:26.344561 24547 net.cpp:139] Memory required for data: 651520
I0428 19:40:26.344569 24547 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:26.344576 24547 net.cpp:86] Creating Layer pool1
I0428 19:40:26.344580 24547 net.cpp:408] pool1 <- conv1
I0428 19:40:26.344585 24547 net.cpp:382] pool1 -> pool1
I0428 19:40:26.344638 24547 net.cpp:124] Setting up pool1
I0428 19:40:26.344645 24547 net.cpp:131] Top shape: 64 5 4 4 (5120)
I0428 19:40:26.344647 24547 net.cpp:139] Memory required for data: 672000
I0428 19:40:26.344650 24547 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:26.344657 24547 net.cpp:86] Creating Layer ip1
I0428 19:40:26.344660 24547 net.cpp:408] ip1 <- pool1
I0428 19:40:26.344666 24547 net.cpp:382] ip1 -> ip1
I0428 19:40:26.345736 24547 net.cpp:124] Setting up ip1
I0428 19:40:26.345748 24547 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:26.345767 24547 net.cpp:139] Memory required for data: 678400
I0428 19:40:26.345775 24547 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:26.345782 24547 net.cpp:86] Creating Layer relu1
I0428 19:40:26.345785 24547 net.cpp:408] relu1 <- ip1
I0428 19:40:26.345789 24547 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:26.345953 24547 net.cpp:124] Setting up relu1
I0428 19:40:26.345962 24547 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:40:26.345964 24547 net.cpp:139] Memory required for data: 684800
I0428 19:40:26.345983 24547 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:26.345990 24547 net.cpp:86] Creating Layer ip2
I0428 19:40:26.345993 24547 net.cpp:408] ip2 <- ip1
I0428 19:40:26.345999 24547 net.cpp:382] ip2 -> ip2
I0428 19:40:26.346091 24547 net.cpp:124] Setting up ip2
I0428 19:40:26.346097 24547 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:26.346101 24547 net.cpp:139] Memory required for data: 687360
I0428 19:40:26.346105 24547 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:26.346112 24547 net.cpp:86] Creating Layer relu2
I0428 19:40:26.346114 24547 net.cpp:408] relu2 <- ip2
I0428 19:40:26.346118 24547 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:26.346837 24547 net.cpp:124] Setting up relu2
I0428 19:40:26.346849 24547 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:26.346868 24547 net.cpp:139] Memory required for data: 689920
I0428 19:40:26.346873 24547 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:26.346879 24547 net.cpp:86] Creating Layer ip3
I0428 19:40:26.346884 24547 net.cpp:408] ip3 <- ip2
I0428 19:40:26.346889 24547 net.cpp:382] ip3 -> ip3
I0428 19:40:26.346994 24547 net.cpp:124] Setting up ip3
I0428 19:40:26.347002 24547 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:26.347004 24547 net.cpp:139] Memory required for data: 692480
I0428 19:40:26.347012 24547 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:26.347017 24547 net.cpp:86] Creating Layer relu3
I0428 19:40:26.347019 24547 net.cpp:408] relu3 <- ip3
I0428 19:40:26.347023 24547 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:26.347194 24547 net.cpp:124] Setting up relu3
I0428 19:40:26.347203 24547 net.cpp:131] Top shape: 64 10 (640)
I0428 19:40:26.347205 24547 net.cpp:139] Memory required for data: 695040
I0428 19:40:26.347208 24547 layer_factory.hpp:77] Creating layer loss
I0428 19:40:26.347213 24547 net.cpp:86] Creating Layer loss
I0428 19:40:26.347216 24547 net.cpp:408] loss <- ip3
I0428 19:40:26.347220 24547 net.cpp:408] loss <- label
I0428 19:40:26.347225 24547 net.cpp:382] loss -> loss
I0428 19:40:26.347239 24547 layer_factory.hpp:77] Creating layer loss
I0428 19:40:26.347461 24547 net.cpp:124] Setting up loss
I0428 19:40:26.347470 24547 net.cpp:131] Top shape: (1)
I0428 19:40:26.347473 24547 net.cpp:134]     with loss weight 1
I0428 19:40:26.347486 24547 net.cpp:139] Memory required for data: 695044
I0428 19:40:26.347491 24547 net.cpp:200] loss needs backward computation.
I0428 19:40:26.347493 24547 net.cpp:200] relu3 needs backward computation.
I0428 19:40:26.347496 24547 net.cpp:200] ip3 needs backward computation.
I0428 19:40:26.347499 24547 net.cpp:200] relu2 needs backward computation.
I0428 19:40:26.347501 24547 net.cpp:200] ip2 needs backward computation.
I0428 19:40:26.347504 24547 net.cpp:200] relu1 needs backward computation.
I0428 19:40:26.347506 24547 net.cpp:200] ip1 needs backward computation.
I0428 19:40:26.347509 24547 net.cpp:200] pool1 needs backward computation.
I0428 19:40:26.347512 24547 net.cpp:200] conv1 needs backward computation.
I0428 19:40:26.347515 24547 net.cpp:200] pool0 needs backward computation.
I0428 19:40:26.347518 24547 net.cpp:200] conv0 needs backward computation.
I0428 19:40:26.347522 24547 net.cpp:202] mnist does not need backward computation.
I0428 19:40:26.347524 24547 net.cpp:244] This network produces output loss
I0428 19:40:26.347532 24547 net.cpp:257] Network initialization done.
I0428 19:40:26.347831 24547 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test334.prototxt
I0428 19:40:26.347856 24547 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:40:26.347939 24547 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:40:26.348011 24547 layer_factory.hpp:77] Creating layer mnist
I0428 19:40:26.348055 24547 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:40:26.348068 24547 net.cpp:86] Creating Layer mnist
I0428 19:40:26.348073 24547 net.cpp:382] mnist -> data
I0428 19:40:26.348079 24547 net.cpp:382] mnist -> label
I0428 19:40:26.348156 24547 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:40:26.350069 24547 net.cpp:124] Setting up mnist
I0428 19:40:26.350096 24547 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:40:26.350101 24547 net.cpp:131] Top shape: 100 (100)
I0428 19:40:26.350105 24547 net.cpp:139] Memory required for data: 314000
I0428 19:40:26.350107 24547 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:40:26.350113 24547 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:40:26.350116 24547 net.cpp:408] label_mnist_1_split <- label
I0428 19:40:26.350121 24547 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:40:26.350127 24547 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:40:26.350164 24547 net.cpp:124] Setting up label_mnist_1_split
I0428 19:40:26.350169 24547 net.cpp:131] Top shape: 100 (100)
I0428 19:40:26.350173 24547 net.cpp:131] Top shape: 100 (100)
I0428 19:40:26.350175 24547 net.cpp:139] Memory required for data: 314800
I0428 19:40:26.350178 24547 layer_factory.hpp:77] Creating layer conv0
I0428 19:40:26.350185 24547 net.cpp:86] Creating Layer conv0
I0428 19:40:26.350188 24547 net.cpp:408] conv0 <- data
I0428 19:40:26.350193 24547 net.cpp:382] conv0 -> conv0
I0428 19:40:26.351970 24547 net.cpp:124] Setting up conv0
I0428 19:40:26.351984 24547 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:40:26.351989 24547 net.cpp:139] Memory required for data: 775600
I0428 19:40:26.351997 24547 layer_factory.hpp:77] Creating layer pool0
I0428 19:40:26.352018 24547 net.cpp:86] Creating Layer pool0
I0428 19:40:26.352022 24547 net.cpp:408] pool0 <- conv0
I0428 19:40:26.352027 24547 net.cpp:382] pool0 -> pool0
I0428 19:40:26.352064 24547 net.cpp:124] Setting up pool0
I0428 19:40:26.352069 24547 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:40:26.352072 24547 net.cpp:139] Memory required for data: 890800
I0428 19:40:26.352075 24547 layer_factory.hpp:77] Creating layer conv1
I0428 19:40:26.352083 24547 net.cpp:86] Creating Layer conv1
I0428 19:40:26.352087 24547 net.cpp:408] conv1 <- pool0
I0428 19:40:26.352092 24547 net.cpp:382] conv1 -> conv1
I0428 19:40:26.353677 24547 net.cpp:124] Setting up conv1
I0428 19:40:26.353693 24547 net.cpp:131] Top shape: 100 5 8 8 (32000)
I0428 19:40:26.353703 24547 net.cpp:139] Memory required for data: 1018800
I0428 19:40:26.353713 24547 layer_factory.hpp:77] Creating layer pool1
I0428 19:40:26.353720 24547 net.cpp:86] Creating Layer pool1
I0428 19:40:26.353729 24547 net.cpp:408] pool1 <- conv1
I0428 19:40:26.353734 24547 net.cpp:382] pool1 -> pool1
I0428 19:40:26.353772 24547 net.cpp:124] Setting up pool1
I0428 19:40:26.353778 24547 net.cpp:131] Top shape: 100 5 4 4 (8000)
I0428 19:40:26.353782 24547 net.cpp:139] Memory required for data: 1050800
I0428 19:40:26.353785 24547 layer_factory.hpp:77] Creating layer ip1
I0428 19:40:26.353791 24547 net.cpp:86] Creating Layer ip1
I0428 19:40:26.353795 24547 net.cpp:408] ip1 <- pool1
I0428 19:40:26.353811 24547 net.cpp:382] ip1 -> ip1
I0428 19:40:26.353924 24547 net.cpp:124] Setting up ip1
I0428 19:40:26.353931 24547 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:26.353945 24547 net.cpp:139] Memory required for data: 1060800
I0428 19:40:26.353953 24547 layer_factory.hpp:77] Creating layer relu1
I0428 19:40:26.353973 24547 net.cpp:86] Creating Layer relu1
I0428 19:40:26.353977 24547 net.cpp:408] relu1 <- ip1
I0428 19:40:26.353981 24547 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:40:26.354143 24547 net.cpp:124] Setting up relu1
I0428 19:40:26.354152 24547 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:40:26.354156 24547 net.cpp:139] Memory required for data: 1070800
I0428 19:40:26.354158 24547 layer_factory.hpp:77] Creating layer ip2
I0428 19:40:26.354166 24547 net.cpp:86] Creating Layer ip2
I0428 19:40:26.354169 24547 net.cpp:408] ip2 <- ip1
I0428 19:40:26.354174 24547 net.cpp:382] ip2 -> ip2
I0428 19:40:26.354271 24547 net.cpp:124] Setting up ip2
I0428 19:40:26.354279 24547 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:26.354282 24547 net.cpp:139] Memory required for data: 1074800
I0428 19:40:26.354288 24547 layer_factory.hpp:77] Creating layer relu2
I0428 19:40:26.354292 24547 net.cpp:86] Creating Layer relu2
I0428 19:40:26.354295 24547 net.cpp:408] relu2 <- ip2
I0428 19:40:26.354307 24547 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:40:26.354467 24547 net.cpp:124] Setting up relu2
I0428 19:40:26.354476 24547 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:26.354480 24547 net.cpp:139] Memory required for data: 1078800
I0428 19:40:26.354483 24547 layer_factory.hpp:77] Creating layer ip3
I0428 19:40:26.354490 24547 net.cpp:86] Creating Layer ip3
I0428 19:40:26.354492 24547 net.cpp:408] ip3 <- ip2
I0428 19:40:26.354497 24547 net.cpp:382] ip3 -> ip3
I0428 19:40:26.354605 24547 net.cpp:124] Setting up ip3
I0428 19:40:26.354612 24547 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:26.354615 24547 net.cpp:139] Memory required for data: 1082800
I0428 19:40:26.354624 24547 layer_factory.hpp:77] Creating layer relu3
I0428 19:40:26.354629 24547 net.cpp:86] Creating Layer relu3
I0428 19:40:26.354632 24547 net.cpp:408] relu3 <- ip3
I0428 19:40:26.354636 24547 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:40:26.355468 24547 net.cpp:124] Setting up relu3
I0428 19:40:26.355484 24547 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:26.355489 24547 net.cpp:139] Memory required for data: 1086800
I0428 19:40:26.355492 24547 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:40:26.355499 24547 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:40:26.355502 24547 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:40:26.355507 24547 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:40:26.355515 24547 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:40:26.355558 24547 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:40:26.355563 24547 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:26.355567 24547 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:40:26.355571 24547 net.cpp:139] Memory required for data: 1094800
I0428 19:40:26.355573 24547 layer_factory.hpp:77] Creating layer accuracy
I0428 19:40:26.355579 24547 net.cpp:86] Creating Layer accuracy
I0428 19:40:26.355582 24547 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:40:26.355587 24547 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:40:26.355592 24547 net.cpp:382] accuracy -> accuracy
I0428 19:40:26.355607 24547 net.cpp:124] Setting up accuracy
I0428 19:40:26.355610 24547 net.cpp:131] Top shape: (1)
I0428 19:40:26.355618 24547 net.cpp:139] Memory required for data: 1094804
I0428 19:40:26.355621 24547 layer_factory.hpp:77] Creating layer loss
I0428 19:40:26.355628 24547 net.cpp:86] Creating Layer loss
I0428 19:40:26.355631 24547 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:40:26.355640 24547 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:40:26.355644 24547 net.cpp:382] loss -> loss
I0428 19:40:26.355656 24547 layer_factory.hpp:77] Creating layer loss
I0428 19:40:26.355919 24547 net.cpp:124] Setting up loss
I0428 19:40:26.355931 24547 net.cpp:131] Top shape: (1)
I0428 19:40:26.355940 24547 net.cpp:134]     with loss weight 1
I0428 19:40:26.355947 24547 net.cpp:139] Memory required for data: 1094808
I0428 19:40:26.355975 24547 net.cpp:200] loss needs backward computation.
I0428 19:40:26.355980 24547 net.cpp:202] accuracy does not need backward computation.
I0428 19:40:26.355984 24547 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:40:26.355988 24547 net.cpp:200] relu3 needs backward computation.
I0428 19:40:26.355990 24547 net.cpp:200] ip3 needs backward computation.
I0428 19:40:26.355993 24547 net.cpp:200] relu2 needs backward computation.
I0428 19:40:26.355995 24547 net.cpp:200] ip2 needs backward computation.
I0428 19:40:26.355998 24547 net.cpp:200] relu1 needs backward computation.
I0428 19:40:26.356001 24547 net.cpp:200] ip1 needs backward computation.
I0428 19:40:26.356010 24547 net.cpp:200] pool1 needs backward computation.
I0428 19:40:26.356014 24547 net.cpp:200] conv1 needs backward computation.
I0428 19:40:26.356017 24547 net.cpp:200] pool0 needs backward computation.
I0428 19:40:26.356020 24547 net.cpp:200] conv0 needs backward computation.
I0428 19:40:26.356024 24547 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:40:26.356027 24547 net.cpp:202] mnist does not need backward computation.
I0428 19:40:26.356030 24547 net.cpp:244] This network produces output accuracy
I0428 19:40:26.356043 24547 net.cpp:244] This network produces output loss
I0428 19:40:26.356055 24547 net.cpp:257] Network initialization done.
I0428 19:40:26.356098 24547 solver.cpp:56] Solver scaffolding done.
I0428 19:40:26.356452 24547 caffe.cpp:248] Starting Optimization
I0428 19:40:26.356459 24547 solver.cpp:273] Solving LeNet
I0428 19:40:26.356462 24547 solver.cpp:274] Learning Rate Policy: inv
I0428 19:40:26.356695 24547 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:40:26.359938 24547 blocking_queue.cpp:49] Waiting for data
I0428 19:40:26.428056 24554 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:26.428547 24547 solver.cpp:398]     Test net output #0: accuracy = 0.0922
I0428 19:40:26.428567 24547 solver.cpp:398]     Test net output #1: loss = 2.30311 (* 1 = 2.30311 loss)
I0428 19:40:26.430480 24547 solver.cpp:219] Iteration 0 (-5.88711e-31 iter/s, 0.0739912s/100 iters), loss = 2.3074
I0428 19:40:26.430519 24547 solver.cpp:238]     Train net output #0: loss = 2.3074 (* 1 = 2.3074 loss)
I0428 19:40:26.430531 24547 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:40:26.504380 24547 solver.cpp:219] Iteration 100 (1354.16 iter/s, 0.0738468s/100 iters), loss = 1.36757
I0428 19:40:26.504407 24547 solver.cpp:238]     Train net output #0: loss = 1.36757 (* 1 = 1.36757 loss)
I0428 19:40:26.504415 24547 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:40:26.575184 24547 solver.cpp:219] Iteration 200 (1413.08 iter/s, 0.0707676s/100 iters), loss = 1.06753
I0428 19:40:26.575208 24547 solver.cpp:238]     Train net output #0: loss = 1.06753 (* 1 = 1.06753 loss)
I0428 19:40:26.575214 24547 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:40:26.646929 24547 solver.cpp:219] Iteration 300 (1394.51 iter/s, 0.0717097s/100 iters), loss = 0.926403
I0428 19:40:26.646955 24547 solver.cpp:238]     Train net output #0: loss = 0.926403 (* 1 = 0.926403 loss)
I0428 19:40:26.646960 24547 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:40:26.718226 24547 solver.cpp:219] Iteration 400 (1403.23 iter/s, 0.0712642s/100 iters), loss = 0.739884
I0428 19:40:26.718250 24547 solver.cpp:238]     Train net output #0: loss = 0.739884 (* 1 = 0.739884 loss)
I0428 19:40:26.718257 24547 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:40:26.789264 24547 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:40:26.864645 24554 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:26.865128 24547 solver.cpp:398]     Test net output #0: accuracy = 0.8042
I0428 19:40:26.865149 24547 solver.cpp:398]     Test net output #1: loss = 0.617785 (* 1 = 0.617785 loss)
I0428 19:40:26.865942 24547 solver.cpp:219] Iteration 500 (677.148 iter/s, 0.147678s/100 iters), loss = 0.713323
I0428 19:40:26.865967 24547 solver.cpp:238]     Train net output #0: loss = 0.713323 (* 1 = 0.713323 loss)
I0428 19:40:26.865988 24547 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:40:26.939163 24547 solver.cpp:219] Iteration 600 (1366.36 iter/s, 0.0731874s/100 iters), loss = 0.593995
I0428 19:40:26.939187 24547 solver.cpp:238]     Train net output #0: loss = 0.593995 (* 1 = 0.593995 loss)
I0428 19:40:26.939193 24547 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:40:27.010360 24547 solver.cpp:219] Iteration 700 (1405.21 iter/s, 0.0711639s/100 iters), loss = 0.629545
I0428 19:40:27.010385 24547 solver.cpp:238]     Train net output #0: loss = 0.629545 (* 1 = 0.629545 loss)
I0428 19:40:27.010395 24547 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:40:27.081239 24547 solver.cpp:219] Iteration 800 (1411.5 iter/s, 0.0708465s/100 iters), loss = 0.607205
I0428 19:40:27.081264 24547 solver.cpp:238]     Train net output #0: loss = 0.607205 (* 1 = 0.607205 loss)
I0428 19:40:27.081270 24547 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:40:27.151996 24547 solver.cpp:219] Iteration 900 (1413.96 iter/s, 0.0707236s/100 iters), loss = 0.379603
I0428 19:40:27.152021 24547 solver.cpp:238]     Train net output #0: loss = 0.379603 (* 1 = 0.379603 loss)
I0428 19:40:27.152029 24547 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:40:27.175839 24553 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:27.222661 24547 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:40:27.223325 24547 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:40:27.223763 24547 solver.cpp:311] Iteration 1000, loss = 0.528736
I0428 19:40:27.223779 24547 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:40:27.282635 24554 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:40:27.283072 24547 solver.cpp:398]     Test net output #0: accuracy = 0.8504
I0428 19:40:27.283092 24547 solver.cpp:398]     Test net output #1: loss = 0.415902 (* 1 = 0.415902 loss)
I0428 19:40:27.283097 24547 solver.cpp:316] Optimization Done.
I0428 19:40:27.283100 24547 caffe.cpp:259] Optimization Done.
