I0428 20:26:08.081065  2742 caffe.cpp:218] Using GPUs 0
I0428 20:26:08.124213  2742 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:26:08.724130  2742 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1466.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:26:08.724298  2742 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1466.prototxt
I0428 20:26:08.724898  2742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:26:08.724925  2742 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:26:08.725075  2742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:08.725183  2742 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:08.725298  2742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:26:08.725330  2742 net.cpp:86] Creating Layer mnist
I0428 20:26:08.725342  2742 net.cpp:382] mnist -> data
I0428 20:26:08.725370  2742 net.cpp:382] mnist -> label
I0428 20:26:08.726794  2742 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:26:08.730006  2742 net.cpp:124] Setting up mnist
I0428 20:26:08.730029  2742 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:26:08.730041  2742 net.cpp:131] Top shape: 64 (64)
I0428 20:26:08.730046  2742 net.cpp:139] Memory required for data: 200960
I0428 20:26:08.730056  2742 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:08.730075  2742 net.cpp:86] Creating Layer conv0
I0428 20:26:08.730101  2742 net.cpp:408] conv0 <- data
I0428 20:26:08.730119  2742 net.cpp:382] conv0 -> conv0
I0428 20:26:09.052659  2742 net.cpp:124] Setting up conv0
I0428 20:26:09.052706  2742 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:26:09.052712  2742 net.cpp:139] Memory required for data: 14946560
I0428 20:26:09.052732  2742 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:09.052747  2742 net.cpp:86] Creating Layer pool0
I0428 20:26:09.052752  2742 net.cpp:408] pool0 <- conv0
I0428 20:26:09.052774  2742 net.cpp:382] pool0 -> pool0
I0428 20:26:09.052856  2742 net.cpp:124] Setting up pool0
I0428 20:26:09.052882  2742 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:26:09.052903  2742 net.cpp:139] Memory required for data: 18632960
I0428 20:26:09.052907  2742 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:09.052937  2742 net.cpp:86] Creating Layer conv1
I0428 20:26:09.052943  2742 net.cpp:408] conv1 <- pool0
I0428 20:26:09.052952  2742 net.cpp:382] conv1 -> conv1
I0428 20:26:09.056607  2742 net.cpp:124] Setting up conv1
I0428 20:26:09.056638  2742 net.cpp:131] Top shape: 64 2 8 8 (8192)
I0428 20:26:09.056644  2742 net.cpp:139] Memory required for data: 18665728
I0428 20:26:09.056655  2742 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:09.056664  2742 net.cpp:86] Creating Layer pool1
I0428 20:26:09.056669  2742 net.cpp:408] pool1 <- conv1
I0428 20:26:09.056691  2742 net.cpp:382] pool1 -> pool1
I0428 20:26:09.056735  2742 net.cpp:124] Setting up pool1
I0428 20:26:09.056746  2742 net.cpp:131] Top shape: 64 2 4 4 (2048)
I0428 20:26:09.056749  2742 net.cpp:139] Memory required for data: 18673920
I0428 20:26:09.056754  2742 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:09.056763  2742 net.cpp:86] Creating Layer ip1
I0428 20:26:09.056768  2742 net.cpp:408] ip1 <- pool1
I0428 20:26:09.056776  2742 net.cpp:382] ip1 -> ip1
I0428 20:26:09.056936  2742 net.cpp:124] Setting up ip1
I0428 20:26:09.056946  2742 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:09.056951  2742 net.cpp:139] Memory required for data: 18680320
I0428 20:26:09.056960  2742 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:09.056968  2742 net.cpp:86] Creating Layer relu1
I0428 20:26:09.056973  2742 net.cpp:408] relu1 <- ip1
I0428 20:26:09.056979  2742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:09.057194  2742 net.cpp:124] Setting up relu1
I0428 20:26:09.057206  2742 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:26:09.057210  2742 net.cpp:139] Memory required for data: 18686720
I0428 20:26:09.057215  2742 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:09.057224  2742 net.cpp:86] Creating Layer ip2
I0428 20:26:09.057227  2742 net.cpp:408] ip2 <- ip1
I0428 20:26:09.057235  2742 net.cpp:382] ip2 -> ip2
I0428 20:26:09.057366  2742 net.cpp:124] Setting up ip2
I0428 20:26:09.057376  2742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:09.057380  2742 net.cpp:139] Memory required for data: 18689280
I0428 20:26:09.057389  2742 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:09.057396  2742 net.cpp:86] Creating Layer relu2
I0428 20:26:09.057401  2742 net.cpp:408] relu2 <- ip2
I0428 20:26:09.057407  2742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:09.058425  2742 net.cpp:124] Setting up relu2
I0428 20:26:09.058455  2742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:09.058460  2742 net.cpp:139] Memory required for data: 18691840
I0428 20:26:09.058480  2742 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:09.058490  2742 net.cpp:86] Creating Layer ip3
I0428 20:26:09.058495  2742 net.cpp:408] ip3 <- ip2
I0428 20:26:09.058503  2742 net.cpp:382] ip3 -> ip3
I0428 20:26:09.058640  2742 net.cpp:124] Setting up ip3
I0428 20:26:09.058650  2742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:09.058655  2742 net.cpp:139] Memory required for data: 18694400
I0428 20:26:09.058666  2742 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:09.058673  2742 net.cpp:86] Creating Layer relu3
I0428 20:26:09.058678  2742 net.cpp:408] relu3 <- ip3
I0428 20:26:09.058684  2742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:09.058887  2742 net.cpp:124] Setting up relu3
I0428 20:26:09.058897  2742 net.cpp:131] Top shape: 64 10 (640)
I0428 20:26:09.058902  2742 net.cpp:139] Memory required for data: 18696960
I0428 20:26:09.058907  2742 layer_factory.hpp:77] Creating layer loss
I0428 20:26:09.058914  2742 net.cpp:86] Creating Layer loss
I0428 20:26:09.058919  2742 net.cpp:408] loss <- ip3
I0428 20:26:09.058925  2742 net.cpp:408] loss <- label
I0428 20:26:09.058933  2742 net.cpp:382] loss -> loss
I0428 20:26:09.058954  2742 layer_factory.hpp:77] Creating layer loss
I0428 20:26:09.059231  2742 net.cpp:124] Setting up loss
I0428 20:26:09.059257  2742 net.cpp:131] Top shape: (1)
I0428 20:26:09.059262  2742 net.cpp:134]     with loss weight 1
I0428 20:26:09.059307  2742 net.cpp:139] Memory required for data: 18696964
I0428 20:26:09.059312  2742 net.cpp:200] loss needs backward computation.
I0428 20:26:09.059319  2742 net.cpp:200] relu3 needs backward computation.
I0428 20:26:09.059322  2742 net.cpp:200] ip3 needs backward computation.
I0428 20:26:09.059327  2742 net.cpp:200] relu2 needs backward computation.
I0428 20:26:09.059331  2742 net.cpp:200] ip2 needs backward computation.
I0428 20:26:09.059335  2742 net.cpp:200] relu1 needs backward computation.
I0428 20:26:09.059340  2742 net.cpp:200] ip1 needs backward computation.
I0428 20:26:09.059345  2742 net.cpp:200] pool1 needs backward computation.
I0428 20:26:09.059350  2742 net.cpp:200] conv1 needs backward computation.
I0428 20:26:09.059355  2742 net.cpp:200] pool0 needs backward computation.
I0428 20:26:09.059358  2742 net.cpp:200] conv0 needs backward computation.
I0428 20:26:09.059363  2742 net.cpp:202] mnist does not need backward computation.
I0428 20:26:09.059368  2742 net.cpp:244] This network produces output loss
I0428 20:26:09.059381  2742 net.cpp:257] Network initialization done.
I0428 20:26:09.059881  2742 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1466.prototxt
I0428 20:26:09.059932  2742 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:26:09.060083  2742 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:26:09.060200  2742 layer_factory.hpp:77] Creating layer mnist
I0428 20:26:09.060253  2742 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:26:09.060268  2742 net.cpp:86] Creating Layer mnist
I0428 20:26:09.060276  2742 net.cpp:382] mnist -> data
I0428 20:26:09.060286  2742 net.cpp:382] mnist -> label
I0428 20:26:09.060403  2742 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:26:09.063133  2742 net.cpp:124] Setting up mnist
I0428 20:26:09.063205  2742 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:26:09.063212  2742 net.cpp:131] Top shape: 100 (100)
I0428 20:26:09.063217  2742 net.cpp:139] Memory required for data: 314000
I0428 20:26:09.063222  2742 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:26:09.063249  2742 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:26:09.063254  2742 net.cpp:408] label_mnist_1_split <- label
I0428 20:26:09.063262  2742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:26:09.063271  2742 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:26:09.063364  2742 net.cpp:124] Setting up label_mnist_1_split
I0428 20:26:09.063374  2742 net.cpp:131] Top shape: 100 (100)
I0428 20:26:09.063381  2742 net.cpp:131] Top shape: 100 (100)
I0428 20:26:09.063385  2742 net.cpp:139] Memory required for data: 314800
I0428 20:26:09.063390  2742 layer_factory.hpp:77] Creating layer conv0
I0428 20:26:09.063401  2742 net.cpp:86] Creating Layer conv0
I0428 20:26:09.063405  2742 net.cpp:408] conv0 <- data
I0428 20:26:09.063415  2742 net.cpp:382] conv0 -> conv0
I0428 20:26:09.065361  2742 net.cpp:124] Setting up conv0
I0428 20:26:09.065392  2742 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:26:09.065399  2742 net.cpp:139] Memory required for data: 23354800
I0428 20:26:09.065419  2742 layer_factory.hpp:77] Creating layer pool0
I0428 20:26:09.065428  2742 net.cpp:86] Creating Layer pool0
I0428 20:26:09.065433  2742 net.cpp:408] pool0 <- conv0
I0428 20:26:09.065439  2742 net.cpp:382] pool0 -> pool0
I0428 20:26:09.065485  2742 net.cpp:124] Setting up pool0
I0428 20:26:09.065496  2742 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:26:09.065500  2742 net.cpp:139] Memory required for data: 29114800
I0428 20:26:09.065505  2742 layer_factory.hpp:77] Creating layer conv1
I0428 20:26:09.065531  2742 net.cpp:86] Creating Layer conv1
I0428 20:26:09.065536  2742 net.cpp:408] conv1 <- pool0
I0428 20:26:09.065544  2742 net.cpp:382] conv1 -> conv1
I0428 20:26:09.068634  2742 net.cpp:124] Setting up conv1
I0428 20:26:09.068676  2742 net.cpp:131] Top shape: 100 2 8 8 (12800)
I0428 20:26:09.068683  2742 net.cpp:139] Memory required for data: 29166000
I0428 20:26:09.068701  2742 layer_factory.hpp:77] Creating layer pool1
I0428 20:26:09.068727  2742 net.cpp:86] Creating Layer pool1
I0428 20:26:09.068735  2742 net.cpp:408] pool1 <- conv1
I0428 20:26:09.068756  2742 net.cpp:382] pool1 -> pool1
I0428 20:26:09.068841  2742 net.cpp:124] Setting up pool1
I0428 20:26:09.068856  2742 net.cpp:131] Top shape: 100 2 4 4 (3200)
I0428 20:26:09.068862  2742 net.cpp:139] Memory required for data: 29178800
I0428 20:26:09.068868  2742 layer_factory.hpp:77] Creating layer ip1
I0428 20:26:09.068879  2742 net.cpp:86] Creating Layer ip1
I0428 20:26:09.068886  2742 net.cpp:408] ip1 <- pool1
I0428 20:26:09.068899  2742 net.cpp:382] ip1 -> ip1
I0428 20:26:09.069103  2742 net.cpp:124] Setting up ip1
I0428 20:26:09.069118  2742 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:09.069144  2742 net.cpp:139] Memory required for data: 29188800
I0428 20:26:09.069159  2742 layer_factory.hpp:77] Creating layer relu1
I0428 20:26:09.069169  2742 net.cpp:86] Creating Layer relu1
I0428 20:26:09.069175  2742 net.cpp:408] relu1 <- ip1
I0428 20:26:09.069193  2742 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:26:09.069507  2742 net.cpp:124] Setting up relu1
I0428 20:26:09.069522  2742 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:26:09.069537  2742 net.cpp:139] Memory required for data: 29198800
I0428 20:26:09.069543  2742 layer_factory.hpp:77] Creating layer ip2
I0428 20:26:09.069558  2742 net.cpp:86] Creating Layer ip2
I0428 20:26:09.069564  2742 net.cpp:408] ip2 <- ip1
I0428 20:26:09.069573  2742 net.cpp:382] ip2 -> ip2
I0428 20:26:09.069793  2742 net.cpp:124] Setting up ip2
I0428 20:26:09.069806  2742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:09.069813  2742 net.cpp:139] Memory required for data: 29202800
I0428 20:26:09.069823  2742 layer_factory.hpp:77] Creating layer relu2
I0428 20:26:09.069833  2742 net.cpp:86] Creating Layer relu2
I0428 20:26:09.069839  2742 net.cpp:408] relu2 <- ip2
I0428 20:26:09.069849  2742 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:26:09.070164  2742 net.cpp:124] Setting up relu2
I0428 20:26:09.070178  2742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:09.070184  2742 net.cpp:139] Memory required for data: 29206800
I0428 20:26:09.070190  2742 layer_factory.hpp:77] Creating layer ip3
I0428 20:26:09.070202  2742 net.cpp:86] Creating Layer ip3
I0428 20:26:09.070207  2742 net.cpp:408] ip3 <- ip2
I0428 20:26:09.070219  2742 net.cpp:382] ip3 -> ip3
I0428 20:26:09.070403  2742 net.cpp:124] Setting up ip3
I0428 20:26:09.070415  2742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:09.070421  2742 net.cpp:139] Memory required for data: 29210800
I0428 20:26:09.070437  2742 layer_factory.hpp:77] Creating layer relu3
I0428 20:26:09.070446  2742 net.cpp:86] Creating Layer relu3
I0428 20:26:09.070452  2742 net.cpp:408] relu3 <- ip3
I0428 20:26:09.070459  2742 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:26:09.071833  2742 net.cpp:124] Setting up relu3
I0428 20:26:09.071857  2742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:09.071878  2742 net.cpp:139] Memory required for data: 29214800
I0428 20:26:09.071885  2742 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:26:09.071908  2742 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:26:09.071915  2742 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:26:09.071929  2742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:26:09.071944  2742 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:26:09.072028  2742 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:26:09.072041  2742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:09.072048  2742 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:26:09.072053  2742 net.cpp:139] Memory required for data: 29222800
I0428 20:26:09.072059  2742 layer_factory.hpp:77] Creating layer accuracy
I0428 20:26:09.072072  2742 net.cpp:86] Creating Layer accuracy
I0428 20:26:09.072078  2742 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:26:09.072087  2742 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:26:09.072095  2742 net.cpp:382] accuracy -> accuracy
I0428 20:26:09.072108  2742 net.cpp:124] Setting up accuracy
I0428 20:26:09.072116  2742 net.cpp:131] Top shape: (1)
I0428 20:26:09.072123  2742 net.cpp:139] Memory required for data: 29222804
I0428 20:26:09.072127  2742 layer_factory.hpp:77] Creating layer loss
I0428 20:26:09.072136  2742 net.cpp:86] Creating Layer loss
I0428 20:26:09.072142  2742 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:26:09.072150  2742 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:26:09.072160  2742 net.cpp:382] loss -> loss
I0428 20:26:09.072171  2742 layer_factory.hpp:77] Creating layer loss
I0428 20:26:09.072624  2742 net.cpp:124] Setting up loss
I0428 20:26:09.072640  2742 net.cpp:131] Top shape: (1)
I0428 20:26:09.072646  2742 net.cpp:134]     with loss weight 1
I0428 20:26:09.072674  2742 net.cpp:139] Memory required for data: 29222808
I0428 20:26:09.072681  2742 net.cpp:200] loss needs backward computation.
I0428 20:26:09.072690  2742 net.cpp:202] accuracy does not need backward computation.
I0428 20:26:09.072696  2742 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:26:09.072702  2742 net.cpp:200] relu3 needs backward computation.
I0428 20:26:09.072708  2742 net.cpp:200] ip3 needs backward computation.
I0428 20:26:09.072715  2742 net.cpp:200] relu2 needs backward computation.
I0428 20:26:09.072721  2742 net.cpp:200] ip2 needs backward computation.
I0428 20:26:09.072726  2742 net.cpp:200] relu1 needs backward computation.
I0428 20:26:09.072731  2742 net.cpp:200] ip1 needs backward computation.
I0428 20:26:09.072737  2742 net.cpp:200] pool1 needs backward computation.
I0428 20:26:09.072743  2742 net.cpp:200] conv1 needs backward computation.
I0428 20:26:09.072754  2742 net.cpp:200] pool0 needs backward computation.
I0428 20:26:09.072760  2742 net.cpp:200] conv0 needs backward computation.
I0428 20:26:09.072768  2742 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:26:09.072775  2742 net.cpp:202] mnist does not need backward computation.
I0428 20:26:09.072780  2742 net.cpp:244] This network produces output accuracy
I0428 20:26:09.072788  2742 net.cpp:244] This network produces output loss
I0428 20:26:09.072829  2742 net.cpp:257] Network initialization done.
I0428 20:26:09.072914  2742 solver.cpp:56] Solver scaffolding done.
I0428 20:26:09.073559  2742 caffe.cpp:248] Starting Optimization
I0428 20:26:09.073570  2742 solver.cpp:273] Solving LeNet
I0428 20:26:09.073575  2742 solver.cpp:274] Learning Rate Policy: inv
I0428 20:26:09.074908  2742 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:26:09.182790  2751 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:09.186596  2742 solver.cpp:398]     Test net output #0: accuracy = 0.0942
I0428 20:26:09.186647  2742 solver.cpp:398]     Test net output #1: loss = 2.31173 (* 1 = 2.31173 loss)
I0428 20:26:09.192682  2742 solver.cpp:219] Iteration 0 (0 iter/s, 0.119057s/100 iters), loss = 2.31395
I0428 20:26:09.192723  2742 solver.cpp:238]     Train net output #0: loss = 2.31395 (* 1 = 2.31395 loss)
I0428 20:26:09.192739  2742 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:26:09.397874  2742 solver.cpp:219] Iteration 100 (487.499 iter/s, 0.205129s/100 iters), loss = 1.37049
I0428 20:26:09.397924  2742 solver.cpp:238]     Train net output #0: loss = 1.37049 (* 1 = 1.37049 loss)
I0428 20:26:09.397938  2742 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:26:09.622637  2742 solver.cpp:219] Iteration 200 (445.051 iter/s, 0.224693s/100 iters), loss = 0.964186
I0428 20:26:09.622690  2742 solver.cpp:238]     Train net output #0: loss = 0.964186 (* 1 = 0.964186 loss)
I0428 20:26:09.622702  2742 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:26:09.842648  2742 solver.cpp:219] Iteration 300 (454.668 iter/s, 0.219941s/100 iters), loss = 0.404831
I0428 20:26:09.842694  2742 solver.cpp:238]     Train net output #0: loss = 0.404831 (* 1 = 0.404831 loss)
I0428 20:26:09.842705  2742 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:26:10.059000  2742 solver.cpp:219] Iteration 400 (462.339 iter/s, 0.216291s/100 iters), loss = 0.561639
I0428 20:26:10.059042  2742 solver.cpp:238]     Train net output #0: loss = 0.561639 (* 1 = 0.561639 loss)
I0428 20:26:10.059054  2742 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:26:10.267266  2742 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:26:10.366880  2751 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:10.370355  2742 solver.cpp:398]     Test net output #0: accuracy = 0.8398
I0428 20:26:10.370379  2742 solver.cpp:398]     Test net output #1: loss = 0.490705 (* 1 = 0.490705 loss)
I0428 20:26:10.372288  2742 solver.cpp:219] Iteration 500 (319.255 iter/s, 0.313229s/100 iters), loss = 0.625218
I0428 20:26:10.372314  2742 solver.cpp:238]     Train net output #0: loss = 0.625218 (* 1 = 0.625218 loss)
I0428 20:26:10.372341  2742 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:26:10.573024  2742 solver.cpp:219] Iteration 600 (498.269 iter/s, 0.200695s/100 iters), loss = 0.463561
I0428 20:26:10.573052  2742 solver.cpp:238]     Train net output #0: loss = 0.463561 (* 1 = 0.463561 loss)
I0428 20:26:10.573060  2742 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:26:10.777268  2742 solver.cpp:219] Iteration 700 (489.728 iter/s, 0.204195s/100 iters), loss = 0.815358
I0428 20:26:10.777318  2742 solver.cpp:238]     Train net output #0: loss = 0.815358 (* 1 = 0.815358 loss)
I0428 20:26:10.777329  2742 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:26:10.988152  2742 solver.cpp:219] Iteration 800 (474.338 iter/s, 0.21082s/100 iters), loss = 0.498806
I0428 20:26:10.988203  2742 solver.cpp:238]     Train net output #0: loss = 0.498806 (* 1 = 0.498806 loss)
I0428 20:26:10.988215  2742 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:26:11.198328  2742 solver.cpp:219] Iteration 900 (475.945 iter/s, 0.210109s/100 iters), loss = 0.339318
I0428 20:26:11.198376  2742 solver.cpp:238]     Train net output #0: loss = 0.339318 (* 1 = 0.339318 loss)
I0428 20:26:11.198390  2742 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:26:11.269989  2750 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:11.409067  2742 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:26:11.410751  2742 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:26:11.411847  2742 solver.cpp:311] Iteration 1000, loss = 0.399741
I0428 20:26:11.411870  2742 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:26:11.512718  2751 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:26:11.514325  2742 solver.cpp:398]     Test net output #0: accuracy = 0.8678
I0428 20:26:11.514348  2742 solver.cpp:398]     Test net output #1: loss = 0.372965 (* 1 = 0.372965 loss)
I0428 20:26:11.514354  2742 solver.cpp:316] Optimization Done.
I0428 20:26:11.514358  2742 caffe.cpp:259] Optimization Done.
