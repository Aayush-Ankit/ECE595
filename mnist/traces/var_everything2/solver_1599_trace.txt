I0428 20:34:04.918774  4420 caffe.cpp:218] Using GPUs 0
I0428 20:34:04.950649  4420 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:34:05.446586  4420 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1599.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:34:05.446744  4420 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1599.prototxt
I0428 20:34:05.447129  4420 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:34:05.447147  4420 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:34:05.447240  4420 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:34:05.447312  4420 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:05.447427  4420 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:34:05.447453  4420 net.cpp:86] Creating Layer mnist
I0428 20:34:05.447461  4420 net.cpp:382] mnist -> data
I0428 20:34:05.447485  4420 net.cpp:382] mnist -> label
I0428 20:34:05.448773  4420 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:34:05.451647  4420 net.cpp:124] Setting up mnist
I0428 20:34:05.451666  4420 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:34:05.451680  4420 net.cpp:131] Top shape: 64 (64)
I0428 20:34:05.451685  4420 net.cpp:139] Memory required for data: 200960
I0428 20:34:05.451694  4420 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:05.451711  4420 net.cpp:86] Creating Layer conv0
I0428 20:34:05.451717  4420 net.cpp:408] conv0 <- data
I0428 20:34:05.451741  4420 net.cpp:382] conv0 -> conv0
I0428 20:34:05.746284  4420 net.cpp:124] Setting up conv0
I0428 20:34:05.746322  4420 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 20:34:05.746327  4420 net.cpp:139] Memory required for data: 14946560
I0428 20:34:05.746345  4420 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:05.746358  4420 net.cpp:86] Creating Layer pool0
I0428 20:34:05.746363  4420 net.cpp:408] pool0 <- conv0
I0428 20:34:05.746371  4420 net.cpp:382] pool0 -> pool0
I0428 20:34:05.746428  4420 net.cpp:124] Setting up pool0
I0428 20:34:05.746444  4420 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 20:34:05.746464  4420 net.cpp:139] Memory required for data: 18632960
I0428 20:34:05.746469  4420 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:05.746484  4420 net.cpp:86] Creating Layer conv1
I0428 20:34:05.746489  4420 net.cpp:408] conv1 <- pool0
I0428 20:34:05.746495  4420 net.cpp:382] conv1 -> conv1
I0428 20:34:05.750560  4420 net.cpp:124] Setting up conv1
I0428 20:34:05.750578  4420 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:34:05.750582  4420 net.cpp:139] Memory required for data: 19452160
I0428 20:34:05.750593  4420 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:05.750602  4420 net.cpp:86] Creating Layer pool1
I0428 20:34:05.750614  4420 net.cpp:408] pool1 <- conv1
I0428 20:34:05.750620  4420 net.cpp:382] pool1 -> pool1
I0428 20:34:05.750684  4420 net.cpp:124] Setting up pool1
I0428 20:34:05.750689  4420 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:34:05.750694  4420 net.cpp:139] Memory required for data: 19656960
I0428 20:34:05.750697  4420 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:05.750706  4420 net.cpp:86] Creating Layer ip1
I0428 20:34:05.750710  4420 net.cpp:408] ip1 <- pool1
I0428 20:34:05.750716  4420 net.cpp:382] ip1 -> ip1
I0428 20:34:05.751854  4420 net.cpp:124] Setting up ip1
I0428 20:34:05.751868  4420 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:05.751873  4420 net.cpp:139] Memory required for data: 19659520
I0428 20:34:05.751883  4420 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:05.751891  4420 net.cpp:86] Creating Layer relu1
I0428 20:34:05.751895  4420 net.cpp:408] relu1 <- ip1
I0428 20:34:05.751901  4420 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:05.752116  4420 net.cpp:124] Setting up relu1
I0428 20:34:05.752128  4420 net.cpp:131] Top shape: 64 10 (640)
I0428 20:34:05.752132  4420 net.cpp:139] Memory required for data: 19662080
I0428 20:34:05.752135  4420 layer_factory.hpp:77] Creating layer loss
I0428 20:34:05.752142  4420 net.cpp:86] Creating Layer loss
I0428 20:34:05.752146  4420 net.cpp:408] loss <- ip1
I0428 20:34:05.752151  4420 net.cpp:408] loss <- label
I0428 20:34:05.752156  4420 net.cpp:382] loss -> loss
I0428 20:34:05.752176  4420 layer_factory.hpp:77] Creating layer loss
I0428 20:34:05.753160  4420 net.cpp:124] Setting up loss
I0428 20:34:05.753175  4420 net.cpp:131] Top shape: (1)
I0428 20:34:05.753180  4420 net.cpp:134]     with loss weight 1
I0428 20:34:05.753195  4420 net.cpp:139] Memory required for data: 19662084
I0428 20:34:05.753199  4420 net.cpp:200] loss needs backward computation.
I0428 20:34:05.753203  4420 net.cpp:200] relu1 needs backward computation.
I0428 20:34:05.753206  4420 net.cpp:200] ip1 needs backward computation.
I0428 20:34:05.753211  4420 net.cpp:200] pool1 needs backward computation.
I0428 20:34:05.753213  4420 net.cpp:200] conv1 needs backward computation.
I0428 20:34:05.753217  4420 net.cpp:200] pool0 needs backward computation.
I0428 20:34:05.753221  4420 net.cpp:200] conv0 needs backward computation.
I0428 20:34:05.753226  4420 net.cpp:202] mnist does not need backward computation.
I0428 20:34:05.753228  4420 net.cpp:244] This network produces output loss
I0428 20:34:05.753239  4420 net.cpp:257] Network initialization done.
I0428 20:34:05.753551  4420 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1599.prototxt
I0428 20:34:05.753597  4420 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:34:05.753682  4420 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:34:05.753772  4420 layer_factory.hpp:77] Creating layer mnist
I0428 20:34:05.753841  4420 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:34:05.753861  4420 net.cpp:86] Creating Layer mnist
I0428 20:34:05.753870  4420 net.cpp:382] mnist -> data
I0428 20:34:05.753878  4420 net.cpp:382] mnist -> label
I0428 20:34:05.753986  4420 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:34:05.755239  4420 net.cpp:124] Setting up mnist
I0428 20:34:05.755270  4420 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:34:05.755285  4420 net.cpp:131] Top shape: 100 (100)
I0428 20:34:05.755287  4420 net.cpp:139] Memory required for data: 314000
I0428 20:34:05.755291  4420 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:34:05.755300  4420 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:34:05.755303  4420 net.cpp:408] label_mnist_1_split <- label
I0428 20:34:05.755309  4420 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:34:05.755316  4420 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:34:05.755446  4420 net.cpp:124] Setting up label_mnist_1_split
I0428 20:34:05.755455  4420 net.cpp:131] Top shape: 100 (100)
I0428 20:34:05.755460  4420 net.cpp:131] Top shape: 100 (100)
I0428 20:34:05.755465  4420 net.cpp:139] Memory required for data: 314800
I0428 20:34:05.755467  4420 layer_factory.hpp:77] Creating layer conv0
I0428 20:34:05.755478  4420 net.cpp:86] Creating Layer conv0
I0428 20:34:05.755483  4420 net.cpp:408] conv0 <- data
I0428 20:34:05.755498  4420 net.cpp:382] conv0 -> conv0
I0428 20:34:05.756532  4420 net.cpp:124] Setting up conv0
I0428 20:34:05.756546  4420 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 20:34:05.756551  4420 net.cpp:139] Memory required for data: 23354800
I0428 20:34:05.756566  4420 layer_factory.hpp:77] Creating layer pool0
I0428 20:34:05.756573  4420 net.cpp:86] Creating Layer pool0
I0428 20:34:05.756577  4420 net.cpp:408] pool0 <- conv0
I0428 20:34:05.756582  4420 net.cpp:382] pool0 -> pool0
I0428 20:34:05.756628  4420 net.cpp:124] Setting up pool0
I0428 20:34:05.756634  4420 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 20:34:05.756638  4420 net.cpp:139] Memory required for data: 29114800
I0428 20:34:05.756641  4420 layer_factory.hpp:77] Creating layer conv1
I0428 20:34:05.756651  4420 net.cpp:86] Creating Layer conv1
I0428 20:34:05.756655  4420 net.cpp:408] conv1 <- pool0
I0428 20:34:05.756662  4420 net.cpp:382] conv1 -> conv1
I0428 20:34:05.760272  4420 net.cpp:124] Setting up conv1
I0428 20:34:05.760288  4420 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:34:05.760293  4420 net.cpp:139] Memory required for data: 30394800
I0428 20:34:05.760308  4420 layer_factory.hpp:77] Creating layer pool1
I0428 20:34:05.760315  4420 net.cpp:86] Creating Layer pool1
I0428 20:34:05.760332  4420 net.cpp:408] pool1 <- conv1
I0428 20:34:05.760339  4420 net.cpp:382] pool1 -> pool1
I0428 20:34:05.760392  4420 net.cpp:124] Setting up pool1
I0428 20:34:05.760406  4420 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:34:05.760409  4420 net.cpp:139] Memory required for data: 30714800
I0428 20:34:05.760412  4420 layer_factory.hpp:77] Creating layer ip1
I0428 20:34:05.760427  4420 net.cpp:86] Creating Layer ip1
I0428 20:34:05.760432  4420 net.cpp:408] ip1 <- pool1
I0428 20:34:05.760438  4420 net.cpp:382] ip1 -> ip1
I0428 20:34:05.760610  4420 net.cpp:124] Setting up ip1
I0428 20:34:05.760619  4420 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:05.760622  4420 net.cpp:139] Memory required for data: 30718800
I0428 20:34:05.760632  4420 layer_factory.hpp:77] Creating layer relu1
I0428 20:34:05.760637  4420 net.cpp:86] Creating Layer relu1
I0428 20:34:05.760641  4420 net.cpp:408] relu1 <- ip1
I0428 20:34:05.760648  4420 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:34:05.761559  4420 net.cpp:124] Setting up relu1
I0428 20:34:05.761574  4420 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:05.761579  4420 net.cpp:139] Memory required for data: 30722800
I0428 20:34:05.761590  4420 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:34:05.761597  4420 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:34:05.761601  4420 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:34:05.761608  4420 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:34:05.761615  4420 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:34:05.761662  4420 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:34:05.761668  4420 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:05.761673  4420 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:34:05.761677  4420 net.cpp:139] Memory required for data: 30730800
I0428 20:34:05.761679  4420 layer_factory.hpp:77] Creating layer accuracy
I0428 20:34:05.761685  4420 net.cpp:86] Creating Layer accuracy
I0428 20:34:05.761689  4420 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:34:05.761693  4420 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:34:05.761698  4420 net.cpp:382] accuracy -> accuracy
I0428 20:34:05.761706  4420 net.cpp:124] Setting up accuracy
I0428 20:34:05.761710  4420 net.cpp:131] Top shape: (1)
I0428 20:34:05.761714  4420 net.cpp:139] Memory required for data: 30730804
I0428 20:34:05.761718  4420 layer_factory.hpp:77] Creating layer loss
I0428 20:34:05.761723  4420 net.cpp:86] Creating Layer loss
I0428 20:34:05.761728  4420 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:34:05.761731  4420 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:34:05.761736  4420 net.cpp:382] loss -> loss
I0428 20:34:05.761742  4420 layer_factory.hpp:77] Creating layer loss
I0428 20:34:05.762037  4420 net.cpp:124] Setting up loss
I0428 20:34:05.762048  4420 net.cpp:131] Top shape: (1)
I0428 20:34:05.762051  4420 net.cpp:134]     with loss weight 1
I0428 20:34:05.762058  4420 net.cpp:139] Memory required for data: 30730808
I0428 20:34:05.762063  4420 net.cpp:200] loss needs backward computation.
I0428 20:34:05.762066  4420 net.cpp:202] accuracy does not need backward computation.
I0428 20:34:05.762071  4420 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:34:05.762074  4420 net.cpp:200] relu1 needs backward computation.
I0428 20:34:05.762079  4420 net.cpp:200] ip1 needs backward computation.
I0428 20:34:05.762081  4420 net.cpp:200] pool1 needs backward computation.
I0428 20:34:05.762084  4420 net.cpp:200] conv1 needs backward computation.
I0428 20:34:05.762089  4420 net.cpp:200] pool0 needs backward computation.
I0428 20:34:05.762094  4420 net.cpp:200] conv0 needs backward computation.
I0428 20:34:05.762097  4420 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:34:05.762102  4420 net.cpp:202] mnist does not need backward computation.
I0428 20:34:05.762105  4420 net.cpp:244] This network produces output accuracy
I0428 20:34:05.762109  4420 net.cpp:244] This network produces output loss
I0428 20:34:05.762131  4420 net.cpp:257] Network initialization done.
I0428 20:34:05.762171  4420 solver.cpp:56] Solver scaffolding done.
I0428 20:34:05.762423  4420 caffe.cpp:248] Starting Optimization
I0428 20:34:05.762430  4420 solver.cpp:273] Solving LeNet
I0428 20:34:05.762434  4420 solver.cpp:274] Learning Rate Policy: inv
I0428 20:34:05.762601  4420 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:34:05.866381  4428 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:05.869206  4420 solver.cpp:398]     Test net output #0: accuracy = 0.0385
I0428 20:34:05.869238  4420 solver.cpp:398]     Test net output #1: loss = 2.37749 (* 1 = 2.37749 loss)
I0428 20:34:05.874063  4420 solver.cpp:219] Iteration 0 (-4.18821e-31 iter/s, 0.111599s/100 iters), loss = 2.36656
I0428 20:34:05.874104  4420 solver.cpp:238]     Train net output #0: loss = 2.36656 (* 1 = 2.36656 loss)
I0428 20:34:05.874117  4420 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:34:06.094035  4420 solver.cpp:219] Iteration 100 (454.731 iter/s, 0.21991s/100 iters), loss = 1.40047
I0428 20:34:06.094072  4420 solver.cpp:238]     Train net output #0: loss = 1.40047 (* 1 = 1.40047 loss)
I0428 20:34:06.094082  4420 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:34:06.316021  4420 solver.cpp:219] Iteration 200 (450.598 iter/s, 0.221927s/100 iters), loss = 0.967453
I0428 20:34:06.316062  4420 solver.cpp:238]     Train net output #0: loss = 0.967453 (* 1 = 0.967453 loss)
I0428 20:34:06.316083  4420 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:34:06.540462  4420 solver.cpp:219] Iteration 300 (445.664 iter/s, 0.224384s/100 iters), loss = 0.695951
I0428 20:34:06.540494  4420 solver.cpp:238]     Train net output #0: loss = 0.695951 (* 1 = 0.695951 loss)
I0428 20:34:06.540501  4420 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:34:06.765470  4420 solver.cpp:219] Iteration 400 (444.529 iter/s, 0.224957s/100 iters), loss = 0.109536
I0428 20:34:06.765512  4420 solver.cpp:238]     Train net output #0: loss = 0.109536 (* 1 = 0.109536 loss)
I0428 20:34:06.765538  4420 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:34:06.984953  4420 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:34:07.089679  4428 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:07.093170  4420 solver.cpp:398]     Test net output #0: accuracy = 0.9647
I0428 20:34:07.093205  4420 solver.cpp:398]     Test net output #1: loss = 0.120147 (* 1 = 0.120147 loss)
I0428 20:34:07.095295  4420 solver.cpp:219] Iteration 500 (303.247 iter/s, 0.329765s/100 iters), loss = 0.115929
I0428 20:34:07.095333  4420 solver.cpp:238]     Train net output #0: loss = 0.115929 (* 1 = 0.115929 loss)
I0428 20:34:07.095340  4420 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:34:07.320464  4420 solver.cpp:219] Iteration 600 (444.183 iter/s, 0.225133s/100 iters), loss = 0.101971
I0428 20:34:07.320504  4420 solver.cpp:238]     Train net output #0: loss = 0.101971 (* 1 = 0.101971 loss)
I0428 20:34:07.320510  4420 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:34:07.549747  4420 solver.cpp:219] Iteration 700 (436.219 iter/s, 0.229243s/100 iters), loss = 0.0792829
I0428 20:34:07.549788  4420 solver.cpp:238]     Train net output #0: loss = 0.0792829 (* 1 = 0.0792829 loss)
I0428 20:34:07.549795  4420 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:34:07.776645  4420 solver.cpp:219] Iteration 800 (440.812 iter/s, 0.226854s/100 iters), loss = 0.209854
I0428 20:34:07.776684  4420 solver.cpp:238]     Train net output #0: loss = 0.209854 (* 1 = 0.209854 loss)
I0428 20:34:07.776691  4420 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:34:08.007277  4420 solver.cpp:219] Iteration 900 (433.692 iter/s, 0.230578s/100 iters), loss = 0.184302
I0428 20:34:08.007315  4420 solver.cpp:238]     Train net output #0: loss = 0.184302 (* 1 = 0.184302 loss)
I0428 20:34:08.007321  4420 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:34:08.082532  4426 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:08.228462  4420 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:34:08.232566  4420 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:34:08.234393  4420 solver.cpp:311] Iteration 1000, loss = 0.100419
I0428 20:34:08.234411  4420 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:34:08.343544  4428 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:34:08.347581  4420 solver.cpp:398]     Test net output #0: accuracy = 0.9759
I0428 20:34:08.347622  4420 solver.cpp:398]     Test net output #1: loss = 0.0753065 (* 1 = 0.0753065 loss)
I0428 20:34:08.347630  4420 solver.cpp:316] Optimization Done.
I0428 20:34:08.347633  4420 caffe.cpp:259] Optimization Done.
