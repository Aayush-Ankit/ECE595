I0428 20:12:32.573101 32271 caffe.cpp:218] Using GPUs 0
I0428 20:12:32.609982 32271 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:12:33.123467 32271 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1182.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:12:33.123607 32271 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1182.prototxt
I0428 20:12:33.124023 32271 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:12:33.124042 32271 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:12:33.124143 32271 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:33.124223 32271 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:33.124322 32271 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:12:33.124348 32271 net.cpp:86] Creating Layer mnist
I0428 20:12:33.124356 32271 net.cpp:382] mnist -> data
I0428 20:12:33.124380 32271 net.cpp:382] mnist -> label
I0428 20:12:33.125490 32271 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:12:33.127960 32271 net.cpp:124] Setting up mnist
I0428 20:12:33.127979 32271 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:12:33.127986 32271 net.cpp:131] Top shape: 64 (64)
I0428 20:12:33.127990 32271 net.cpp:139] Memory required for data: 200960
I0428 20:12:33.127996 32271 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:33.128012 32271 net.cpp:86] Creating Layer conv0
I0428 20:12:33.128033 32271 net.cpp:408] conv0 <- data
I0428 20:12:33.128046 32271 net.cpp:382] conv0 -> conv0
I0428 20:12:33.416007 32271 net.cpp:124] Setting up conv0
I0428 20:12:33.416034 32271 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:12:33.416038 32271 net.cpp:139] Memory required for data: 3887360
I0428 20:12:33.416054 32271 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:33.416070 32271 net.cpp:86] Creating Layer pool0
I0428 20:12:33.416075 32271 net.cpp:408] pool0 <- conv0
I0428 20:12:33.416080 32271 net.cpp:382] pool0 -> pool0
I0428 20:12:33.416126 32271 net.cpp:124] Setting up pool0
I0428 20:12:33.416132 32271 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:12:33.416136 32271 net.cpp:139] Memory required for data: 4808960
I0428 20:12:33.416138 32271 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:33.416148 32271 net.cpp:86] Creating Layer conv1
I0428 20:12:33.416152 32271 net.cpp:408] conv1 <- pool0
I0428 20:12:33.416157 32271 net.cpp:382] conv1 -> conv1
I0428 20:12:33.418380 32271 net.cpp:124] Setting up conv1
I0428 20:12:33.418395 32271 net.cpp:131] Top shape: 64 100 8 8 (409600)
I0428 20:12:33.418398 32271 net.cpp:139] Memory required for data: 6447360
I0428 20:12:33.418407 32271 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:33.418416 32271 net.cpp:86] Creating Layer pool1
I0428 20:12:33.418418 32271 net.cpp:408] pool1 <- conv1
I0428 20:12:33.418423 32271 net.cpp:382] pool1 -> pool1
I0428 20:12:33.418462 32271 net.cpp:124] Setting up pool1
I0428 20:12:33.418468 32271 net.cpp:131] Top shape: 64 100 4 4 (102400)
I0428 20:12:33.418472 32271 net.cpp:139] Memory required for data: 6856960
I0428 20:12:33.418474 32271 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:33.418481 32271 net.cpp:86] Creating Layer ip1
I0428 20:12:33.418484 32271 net.cpp:408] ip1 <- pool1
I0428 20:12:33.418489 32271 net.cpp:382] ip1 -> ip1
I0428 20:12:33.419538 32271 net.cpp:124] Setting up ip1
I0428 20:12:33.419550 32271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:33.419553 32271 net.cpp:139] Memory required for data: 6859520
I0428 20:12:33.419562 32271 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:33.419569 32271 net.cpp:86] Creating Layer relu1
I0428 20:12:33.419572 32271 net.cpp:408] relu1 <- ip1
I0428 20:12:33.419577 32271 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:33.419771 32271 net.cpp:124] Setting up relu1
I0428 20:12:33.419781 32271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:33.419785 32271 net.cpp:139] Memory required for data: 6862080
I0428 20:12:33.419788 32271 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:33.419795 32271 net.cpp:86] Creating Layer ip2
I0428 20:12:33.419798 32271 net.cpp:408] ip2 <- ip1
I0428 20:12:33.419805 32271 net.cpp:382] ip2 -> ip2
I0428 20:12:33.419903 32271 net.cpp:124] Setting up ip2
I0428 20:12:33.419910 32271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:33.419914 32271 net.cpp:139] Memory required for data: 6864640
I0428 20:12:33.419919 32271 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:33.419925 32271 net.cpp:86] Creating Layer relu2
I0428 20:12:33.419929 32271 net.cpp:408] relu2 <- ip2
I0428 20:12:33.419934 32271 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:33.420732 32271 net.cpp:124] Setting up relu2
I0428 20:12:33.420744 32271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:33.420748 32271 net.cpp:139] Memory required for data: 6867200
I0428 20:12:33.420752 32271 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:33.420759 32271 net.cpp:86] Creating Layer ip3
I0428 20:12:33.420763 32271 net.cpp:408] ip3 <- ip2
I0428 20:12:33.420768 32271 net.cpp:382] ip3 -> ip3
I0428 20:12:33.420881 32271 net.cpp:124] Setting up ip3
I0428 20:12:33.420891 32271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:33.420893 32271 net.cpp:139] Memory required for data: 6869760
I0428 20:12:33.420902 32271 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:33.420907 32271 net.cpp:86] Creating Layer relu3
I0428 20:12:33.420910 32271 net.cpp:408] relu3 <- ip3
I0428 20:12:33.420914 32271 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:33.421111 32271 net.cpp:124] Setting up relu3
I0428 20:12:33.421121 32271 net.cpp:131] Top shape: 64 10 (640)
I0428 20:12:33.421124 32271 net.cpp:139] Memory required for data: 6872320
I0428 20:12:33.421128 32271 layer_factory.hpp:77] Creating layer loss
I0428 20:12:33.421134 32271 net.cpp:86] Creating Layer loss
I0428 20:12:33.421138 32271 net.cpp:408] loss <- ip3
I0428 20:12:33.421141 32271 net.cpp:408] loss <- label
I0428 20:12:33.421157 32271 net.cpp:382] loss -> loss
I0428 20:12:33.421175 32271 layer_factory.hpp:77] Creating layer loss
I0428 20:12:33.421421 32271 net.cpp:124] Setting up loss
I0428 20:12:33.421429 32271 net.cpp:131] Top shape: (1)
I0428 20:12:33.421433 32271 net.cpp:134]     with loss weight 1
I0428 20:12:33.421456 32271 net.cpp:139] Memory required for data: 6872324
I0428 20:12:33.421461 32271 net.cpp:200] loss needs backward computation.
I0428 20:12:33.421464 32271 net.cpp:200] relu3 needs backward computation.
I0428 20:12:33.421468 32271 net.cpp:200] ip3 needs backward computation.
I0428 20:12:33.421470 32271 net.cpp:200] relu2 needs backward computation.
I0428 20:12:33.421473 32271 net.cpp:200] ip2 needs backward computation.
I0428 20:12:33.421476 32271 net.cpp:200] relu1 needs backward computation.
I0428 20:12:33.421478 32271 net.cpp:200] ip1 needs backward computation.
I0428 20:12:33.421481 32271 net.cpp:200] pool1 needs backward computation.
I0428 20:12:33.421484 32271 net.cpp:200] conv1 needs backward computation.
I0428 20:12:33.421488 32271 net.cpp:200] pool0 needs backward computation.
I0428 20:12:33.421490 32271 net.cpp:200] conv0 needs backward computation.
I0428 20:12:33.421495 32271 net.cpp:202] mnist does not need backward computation.
I0428 20:12:33.421499 32271 net.cpp:244] This network produces output loss
I0428 20:12:33.421507 32271 net.cpp:257] Network initialization done.
I0428 20:12:33.421871 32271 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1182.prototxt
I0428 20:12:33.421926 32271 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:12:33.422020 32271 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:12:33.422106 32271 layer_factory.hpp:77] Creating layer mnist
I0428 20:12:33.422152 32271 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:12:33.422168 32271 net.cpp:86] Creating Layer mnist
I0428 20:12:33.422174 32271 net.cpp:382] mnist -> data
I0428 20:12:33.422183 32271 net.cpp:382] mnist -> label
I0428 20:12:33.422268 32271 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:12:33.424192 32271 net.cpp:124] Setting up mnist
I0428 20:12:33.424206 32271 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:12:33.424211 32271 net.cpp:131] Top shape: 100 (100)
I0428 20:12:33.424213 32271 net.cpp:139] Memory required for data: 314000
I0428 20:12:33.424217 32271 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:12:33.424227 32271 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:12:33.424232 32271 net.cpp:408] label_mnist_1_split <- label
I0428 20:12:33.424260 32271 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:12:33.424268 32271 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:12:33.424314 32271 net.cpp:124] Setting up label_mnist_1_split
I0428 20:12:33.424320 32271 net.cpp:131] Top shape: 100 (100)
I0428 20:12:33.424324 32271 net.cpp:131] Top shape: 100 (100)
I0428 20:12:33.424326 32271 net.cpp:139] Memory required for data: 314800
I0428 20:12:33.424329 32271 layer_factory.hpp:77] Creating layer conv0
I0428 20:12:33.424340 32271 net.cpp:86] Creating Layer conv0
I0428 20:12:33.424343 32271 net.cpp:408] conv0 <- data
I0428 20:12:33.424348 32271 net.cpp:382] conv0 -> conv0
I0428 20:12:33.426105 32271 net.cpp:124] Setting up conv0
I0428 20:12:33.426128 32271 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:12:33.426133 32271 net.cpp:139] Memory required for data: 6074800
I0428 20:12:33.426143 32271 layer_factory.hpp:77] Creating layer pool0
I0428 20:12:33.426149 32271 net.cpp:86] Creating Layer pool0
I0428 20:12:33.426153 32271 net.cpp:408] pool0 <- conv0
I0428 20:12:33.426159 32271 net.cpp:382] pool0 -> pool0
I0428 20:12:33.426198 32271 net.cpp:124] Setting up pool0
I0428 20:12:33.426204 32271 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:12:33.426206 32271 net.cpp:139] Memory required for data: 7514800
I0428 20:12:33.426209 32271 layer_factory.hpp:77] Creating layer conv1
I0428 20:12:33.426218 32271 net.cpp:86] Creating Layer conv1
I0428 20:12:33.426223 32271 net.cpp:408] conv1 <- pool0
I0428 20:12:33.426228 32271 net.cpp:382] conv1 -> conv1
I0428 20:12:33.428174 32271 net.cpp:124] Setting up conv1
I0428 20:12:33.428189 32271 net.cpp:131] Top shape: 100 100 8 8 (640000)
I0428 20:12:33.428192 32271 net.cpp:139] Memory required for data: 10074800
I0428 20:12:33.428201 32271 layer_factory.hpp:77] Creating layer pool1
I0428 20:12:33.428223 32271 net.cpp:86] Creating Layer pool1
I0428 20:12:33.428227 32271 net.cpp:408] pool1 <- conv1
I0428 20:12:33.428232 32271 net.cpp:382] pool1 -> pool1
I0428 20:12:33.428270 32271 net.cpp:124] Setting up pool1
I0428 20:12:33.428277 32271 net.cpp:131] Top shape: 100 100 4 4 (160000)
I0428 20:12:33.428280 32271 net.cpp:139] Memory required for data: 10714800
I0428 20:12:33.428283 32271 layer_factory.hpp:77] Creating layer ip1
I0428 20:12:33.428289 32271 net.cpp:86] Creating Layer ip1
I0428 20:12:33.428292 32271 net.cpp:408] ip1 <- pool1
I0428 20:12:33.428298 32271 net.cpp:382] ip1 -> ip1
I0428 20:12:33.428498 32271 net.cpp:124] Setting up ip1
I0428 20:12:33.428506 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.428519 32271 net.cpp:139] Memory required for data: 10718800
I0428 20:12:33.428527 32271 layer_factory.hpp:77] Creating layer relu1
I0428 20:12:33.428534 32271 net.cpp:86] Creating Layer relu1
I0428 20:12:33.428536 32271 net.cpp:408] relu1 <- ip1
I0428 20:12:33.428540 32271 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:12:33.428715 32271 net.cpp:124] Setting up relu1
I0428 20:12:33.428725 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.428727 32271 net.cpp:139] Memory required for data: 10722800
I0428 20:12:33.428730 32271 layer_factory.hpp:77] Creating layer ip2
I0428 20:12:33.428737 32271 net.cpp:86] Creating Layer ip2
I0428 20:12:33.428741 32271 net.cpp:408] ip2 <- ip1
I0428 20:12:33.428747 32271 net.cpp:382] ip2 -> ip2
I0428 20:12:33.428858 32271 net.cpp:124] Setting up ip2
I0428 20:12:33.428866 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.428869 32271 net.cpp:139] Memory required for data: 10726800
I0428 20:12:33.428874 32271 layer_factory.hpp:77] Creating layer relu2
I0428 20:12:33.428879 32271 net.cpp:86] Creating Layer relu2
I0428 20:12:33.428882 32271 net.cpp:408] relu2 <- ip2
I0428 20:12:33.428887 32271 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:12:33.429162 32271 net.cpp:124] Setting up relu2
I0428 20:12:33.429172 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.429195 32271 net.cpp:139] Memory required for data: 10730800
I0428 20:12:33.429198 32271 layer_factory.hpp:77] Creating layer ip3
I0428 20:12:33.429205 32271 net.cpp:86] Creating Layer ip3
I0428 20:12:33.429208 32271 net.cpp:408] ip3 <- ip2
I0428 20:12:33.429214 32271 net.cpp:382] ip3 -> ip3
I0428 20:12:33.429314 32271 net.cpp:124] Setting up ip3
I0428 20:12:33.429322 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.429324 32271 net.cpp:139] Memory required for data: 10734800
I0428 20:12:33.429332 32271 layer_factory.hpp:77] Creating layer relu3
I0428 20:12:33.429344 32271 net.cpp:86] Creating Layer relu3
I0428 20:12:33.429347 32271 net.cpp:408] relu3 <- ip3
I0428 20:12:33.429352 32271 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:12:33.430158 32271 net.cpp:124] Setting up relu3
I0428 20:12:33.430171 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.430177 32271 net.cpp:139] Memory required for data: 10738800
I0428 20:12:33.430181 32271 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:12:33.430186 32271 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:12:33.430191 32271 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:12:33.430196 32271 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:12:33.430202 32271 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:12:33.430289 32271 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:12:33.430295 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.430301 32271 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:12:33.430305 32271 net.cpp:139] Memory required for data: 10746800
I0428 20:12:33.430310 32271 layer_factory.hpp:77] Creating layer accuracy
I0428 20:12:33.430332 32271 net.cpp:86] Creating Layer accuracy
I0428 20:12:33.430344 32271 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:12:33.430351 32271 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:12:33.430361 32271 net.cpp:382] accuracy -> accuracy
I0428 20:12:33.430372 32271 net.cpp:124] Setting up accuracy
I0428 20:12:33.430377 32271 net.cpp:131] Top shape: (1)
I0428 20:12:33.430380 32271 net.cpp:139] Memory required for data: 10746804
I0428 20:12:33.430383 32271 layer_factory.hpp:77] Creating layer loss
I0428 20:12:33.430394 32271 net.cpp:86] Creating Layer loss
I0428 20:12:33.430397 32271 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:12:33.430402 32271 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:12:33.430407 32271 net.cpp:382] loss -> loss
I0428 20:12:33.430413 32271 layer_factory.hpp:77] Creating layer loss
I0428 20:12:33.430696 32271 net.cpp:124] Setting up loss
I0428 20:12:33.430706 32271 net.cpp:131] Top shape: (1)
I0428 20:12:33.430709 32271 net.cpp:134]     with loss weight 1
I0428 20:12:33.430727 32271 net.cpp:139] Memory required for data: 10746808
I0428 20:12:33.430737 32271 net.cpp:200] loss needs backward computation.
I0428 20:12:33.430742 32271 net.cpp:202] accuracy does not need backward computation.
I0428 20:12:33.430755 32271 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:12:33.430758 32271 net.cpp:200] relu3 needs backward computation.
I0428 20:12:33.430761 32271 net.cpp:200] ip3 needs backward computation.
I0428 20:12:33.430764 32271 net.cpp:200] relu2 needs backward computation.
I0428 20:12:33.430773 32271 net.cpp:200] ip2 needs backward computation.
I0428 20:12:33.430775 32271 net.cpp:200] relu1 needs backward computation.
I0428 20:12:33.430778 32271 net.cpp:200] ip1 needs backward computation.
I0428 20:12:33.430788 32271 net.cpp:200] pool1 needs backward computation.
I0428 20:12:33.430790 32271 net.cpp:200] conv1 needs backward computation.
I0428 20:12:33.430794 32271 net.cpp:200] pool0 needs backward computation.
I0428 20:12:33.430796 32271 net.cpp:200] conv0 needs backward computation.
I0428 20:12:33.430799 32271 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:12:33.430809 32271 net.cpp:202] mnist does not need backward computation.
I0428 20:12:33.430811 32271 net.cpp:244] This network produces output accuracy
I0428 20:12:33.430815 32271 net.cpp:244] This network produces output loss
I0428 20:12:33.430837 32271 net.cpp:257] Network initialization done.
I0428 20:12:33.430886 32271 solver.cpp:56] Solver scaffolding done.
I0428 20:12:33.431217 32271 caffe.cpp:248] Starting Optimization
I0428 20:12:33.431224 32271 solver.cpp:273] Solving LeNet
I0428 20:12:33.431226 32271 solver.cpp:274] Learning Rate Policy: inv
I0428 20:12:33.432122 32271 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:12:33.439890 32271 blocking_queue.cpp:49] Waiting for data
I0428 20:12:33.507627 32278 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:33.508494 32271 solver.cpp:398]     Test net output #0: accuracy = 0.0926
I0428 20:12:33.508514 32271 solver.cpp:398]     Test net output #1: loss = 2.3041 (* 1 = 2.3041 loss)
I0428 20:12:33.513360 32271 solver.cpp:219] Iteration 0 (0 iter/s, 0.0821033s/100 iters), loss = 2.3041
I0428 20:12:33.513382 32271 solver.cpp:238]     Train net output #0: loss = 2.3041 (* 1 = 2.3041 loss)
I0428 20:12:33.513409 32271 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:12:33.669792 32271 solver.cpp:219] Iteration 100 (639.409 iter/s, 0.156394s/100 iters), loss = 1.30292
I0428 20:12:33.669817 32271 solver.cpp:238]     Train net output #0: loss = 1.30292 (* 1 = 1.30292 loss)
I0428 20:12:33.669824 32271 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:12:33.824354 32271 solver.cpp:219] Iteration 200 (647.146 iter/s, 0.154525s/100 iters), loss = 1.19721
I0428 20:12:33.824378 32271 solver.cpp:238]     Train net output #0: loss = 1.19721 (* 1 = 1.19721 loss)
I0428 20:12:33.824384 32271 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:12:33.980216 32271 solver.cpp:219] Iteration 300 (641.745 iter/s, 0.155825s/100 iters), loss = 1.11758
I0428 20:12:33.980240 32271 solver.cpp:238]     Train net output #0: loss = 1.11758 (* 1 = 1.11758 loss)
I0428 20:12:33.980247 32271 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:12:34.134380 32271 solver.cpp:219] Iteration 400 (648.818 iter/s, 0.154126s/100 iters), loss = 0.898058
I0428 20:12:34.134404 32271 solver.cpp:238]     Train net output #0: loss = 0.898058 (* 1 = 0.898058 loss)
I0428 20:12:34.134410 32271 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:12:34.286469 32271 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:12:34.353754 32278 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:34.356125 32271 solver.cpp:398]     Test net output #0: accuracy = 0.5929
I0428 20:12:34.356144 32271 solver.cpp:398]     Test net output #1: loss = 1.0034 (* 1 = 1.0034 loss)
I0428 20:12:34.357898 32271 solver.cpp:219] Iteration 500 (447.472 iter/s, 0.223478s/100 iters), loss = 0.978775
I0428 20:12:34.357936 32271 solver.cpp:238]     Train net output #0: loss = 0.978775 (* 1 = 0.978775 loss)
I0428 20:12:34.357960 32271 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:12:34.523988 32271 solver.cpp:219] Iteration 600 (602.274 iter/s, 0.166037s/100 iters), loss = 0.789866
I0428 20:12:34.524016 32271 solver.cpp:238]     Train net output #0: loss = 0.789866 (* 1 = 0.789866 loss)
I0428 20:12:34.524024 32271 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:12:34.687578 32271 solver.cpp:219] Iteration 700 (611.433 iter/s, 0.16355s/100 iters), loss = 1.14133
I0428 20:12:34.687608 32271 solver.cpp:238]     Train net output #0: loss = 1.14133 (* 1 = 1.14133 loss)
I0428 20:12:34.687615 32271 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:12:34.895655 32271 solver.cpp:219] Iteration 800 (480.708 iter/s, 0.208027s/100 iters), loss = 1.07919
I0428 20:12:34.895725 32271 solver.cpp:238]     Train net output #0: loss = 1.07919 (* 1 = 1.07919 loss)
I0428 20:12:34.895743 32271 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:12:35.105573 32271 solver.cpp:219] Iteration 900 (476.549 iter/s, 0.209842s/100 iters), loss = 0.863099
I0428 20:12:35.105621 32271 solver.cpp:238]     Train net output #0: loss = 0.863099 (* 1 = 0.863099 loss)
I0428 20:12:35.105634 32271 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:12:35.176002 32277 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:35.315379 32271 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:12:35.318573 32271 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:12:35.320216 32271 solver.cpp:311] Iteration 1000, loss = 1.09829
I0428 20:12:35.320240 32271 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:12:35.393442 32278 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:12:35.395876 32271 solver.cpp:398]     Test net output #0: accuracy = 0.5961
I0428 20:12:35.395900 32271 solver.cpp:398]     Test net output #1: loss = 0.981682 (* 1 = 0.981682 loss)
I0428 20:12:35.395905 32271 solver.cpp:316] Optimization Done.
I0428 20:12:35.395908 32271 caffe.cpp:259] Optimization Done.
