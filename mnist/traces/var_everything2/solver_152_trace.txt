I0428 19:32:24.794672 22833 caffe.cpp:218] Using GPUs 0
I0428 19:32:24.836091 22833 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:32:25.355994 22833 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test152.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:32:25.356166 22833 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test152.prototxt
I0428 19:32:25.356545 22833 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:32:25.356567 22833 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:32:25.356665 22833 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:25.356772 22833 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:25.356914 22833 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:32:25.356950 22833 net.cpp:86] Creating Layer mnist
I0428 19:32:25.356961 22833 net.cpp:382] mnist -> data
I0428 19:32:25.356993 22833 net.cpp:382] mnist -> label
I0428 19:32:25.358225 22833 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:32:25.360698 22833 net.cpp:124] Setting up mnist
I0428 19:32:25.360721 22833 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:32:25.360731 22833 net.cpp:131] Top shape: 64 (64)
I0428 19:32:25.360738 22833 net.cpp:139] Memory required for data: 200960
I0428 19:32:25.360749 22833 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:25.360772 22833 net.cpp:86] Creating Layer conv0
I0428 19:32:25.360783 22833 net.cpp:408] conv0 <- data
I0428 19:32:25.360800 22833 net.cpp:382] conv0 -> conv0
I0428 19:32:25.650645 22833 net.cpp:124] Setting up conv0
I0428 19:32:25.650678 22833 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:32:25.650686 22833 net.cpp:139] Memory required for data: 1675520
I0428 19:32:25.650710 22833 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:25.650730 22833 net.cpp:86] Creating Layer pool0
I0428 19:32:25.650758 22833 net.cpp:408] pool0 <- conv0
I0428 19:32:25.650771 22833 net.cpp:382] pool0 -> pool0
I0428 19:32:25.650840 22833 net.cpp:124] Setting up pool0
I0428 19:32:25.650852 22833 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:32:25.650858 22833 net.cpp:139] Memory required for data: 2044160
I0428 19:32:25.650866 22833 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:25.650878 22833 net.cpp:86] Creating Layer ip1
I0428 19:32:25.650885 22833 net.cpp:408] ip1 <- pool0
I0428 19:32:25.650895 22833 net.cpp:382] ip1 -> ip1
I0428 19:32:25.652485 22833 net.cpp:124] Setting up ip1
I0428 19:32:25.652503 22833 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:25.652510 22833 net.cpp:139] Memory required for data: 2056960
I0428 19:32:25.652525 22833 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:25.652539 22833 net.cpp:86] Creating Layer relu1
I0428 19:32:25.652545 22833 net.cpp:408] relu1 <- ip1
I0428 19:32:25.652554 22833 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:25.652765 22833 net.cpp:124] Setting up relu1
I0428 19:32:25.652778 22833 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:32:25.652784 22833 net.cpp:139] Memory required for data: 2069760
I0428 19:32:25.652791 22833 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:25.652803 22833 net.cpp:86] Creating Layer ip2
I0428 19:32:25.652815 22833 net.cpp:408] ip2 <- ip1
I0428 19:32:25.652827 22833 net.cpp:382] ip2 -> ip2
I0428 19:32:25.653934 22833 net.cpp:124] Setting up ip2
I0428 19:32:25.653951 22833 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:25.653959 22833 net.cpp:139] Memory required for data: 2076160
I0428 19:32:25.653973 22833 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:25.653985 22833 net.cpp:86] Creating Layer relu2
I0428 19:32:25.653991 22833 net.cpp:408] relu2 <- ip2
I0428 19:32:25.654000 22833 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:25.654871 22833 net.cpp:124] Setting up relu2
I0428 19:32:25.654889 22833 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:32:25.654896 22833 net.cpp:139] Memory required for data: 2082560
I0428 19:32:25.654902 22833 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:25.654914 22833 net.cpp:86] Creating Layer ip3
I0428 19:32:25.654922 22833 net.cpp:408] ip3 <- ip2
I0428 19:32:25.654932 22833 net.cpp:382] ip3 -> ip3
I0428 19:32:25.655061 22833 net.cpp:124] Setting up ip3
I0428 19:32:25.655072 22833 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:25.655078 22833 net.cpp:139] Memory required for data: 2085120
I0428 19:32:25.655089 22833 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:25.655102 22833 net.cpp:86] Creating Layer relu3
I0428 19:32:25.655112 22833 net.cpp:408] relu3 <- ip3
I0428 19:32:25.655122 22833 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:25.655314 22833 net.cpp:124] Setting up relu3
I0428 19:32:25.655328 22833 net.cpp:131] Top shape: 64 10 (640)
I0428 19:32:25.655333 22833 net.cpp:139] Memory required for data: 2087680
I0428 19:32:25.655339 22833 layer_factory.hpp:77] Creating layer loss
I0428 19:32:25.655350 22833 net.cpp:86] Creating Layer loss
I0428 19:32:25.655356 22833 net.cpp:408] loss <- ip3
I0428 19:32:25.655364 22833 net.cpp:408] loss <- label
I0428 19:32:25.655375 22833 net.cpp:382] loss -> loss
I0428 19:32:25.655400 22833 layer_factory.hpp:77] Creating layer loss
I0428 19:32:25.655681 22833 net.cpp:124] Setting up loss
I0428 19:32:25.655694 22833 net.cpp:131] Top shape: (1)
I0428 19:32:25.655701 22833 net.cpp:134]     with loss weight 1
I0428 19:32:25.655725 22833 net.cpp:139] Memory required for data: 2087684
I0428 19:32:25.655731 22833 net.cpp:200] loss needs backward computation.
I0428 19:32:25.655740 22833 net.cpp:200] relu3 needs backward computation.
I0428 19:32:25.655745 22833 net.cpp:200] ip3 needs backward computation.
I0428 19:32:25.655751 22833 net.cpp:200] relu2 needs backward computation.
I0428 19:32:25.655757 22833 net.cpp:200] ip2 needs backward computation.
I0428 19:32:25.655763 22833 net.cpp:200] relu1 needs backward computation.
I0428 19:32:25.655769 22833 net.cpp:200] ip1 needs backward computation.
I0428 19:32:25.655789 22833 net.cpp:200] pool0 needs backward computation.
I0428 19:32:25.655797 22833 net.cpp:200] conv0 needs backward computation.
I0428 19:32:25.655803 22833 net.cpp:202] mnist does not need backward computation.
I0428 19:32:25.655810 22833 net.cpp:244] This network produces output loss
I0428 19:32:25.655827 22833 net.cpp:257] Network initialization done.
I0428 19:32:25.656170 22833 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test152.prototxt
I0428 19:32:25.656209 22833 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:32:25.656316 22833 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:32:25.656430 22833 layer_factory.hpp:77] Creating layer mnist
I0428 19:32:25.656500 22833 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:32:25.656522 22833 net.cpp:86] Creating Layer mnist
I0428 19:32:25.656532 22833 net.cpp:382] mnist -> data
I0428 19:32:25.656545 22833 net.cpp:382] mnist -> label
I0428 19:32:25.656688 22833 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:32:25.658033 22833 net.cpp:124] Setting up mnist
I0428 19:32:25.658051 22833 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:32:25.658061 22833 net.cpp:131] Top shape: 100 (100)
I0428 19:32:25.658067 22833 net.cpp:139] Memory required for data: 314000
I0428 19:32:25.658074 22833 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:32:25.658087 22833 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:32:25.658093 22833 net.cpp:408] label_mnist_1_split <- label
I0428 19:32:25.658103 22833 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:32:25.658115 22833 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:32:25.658248 22833 net.cpp:124] Setting up label_mnist_1_split
I0428 19:32:25.658259 22833 net.cpp:131] Top shape: 100 (100)
I0428 19:32:25.658267 22833 net.cpp:131] Top shape: 100 (100)
I0428 19:32:25.658273 22833 net.cpp:139] Memory required for data: 314800
I0428 19:32:25.658294 22833 layer_factory.hpp:77] Creating layer conv0
I0428 19:32:25.658313 22833 net.cpp:86] Creating Layer conv0
I0428 19:32:25.658319 22833 net.cpp:408] conv0 <- data
I0428 19:32:25.658330 22833 net.cpp:382] conv0 -> conv0
I0428 19:32:25.660004 22833 net.cpp:124] Setting up conv0
I0428 19:32:25.660022 22833 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:32:25.660030 22833 net.cpp:139] Memory required for data: 2618800
I0428 19:32:25.660046 22833 layer_factory.hpp:77] Creating layer pool0
I0428 19:32:25.660058 22833 net.cpp:86] Creating Layer pool0
I0428 19:32:25.660065 22833 net.cpp:408] pool0 <- conv0
I0428 19:32:25.660075 22833 net.cpp:382] pool0 -> pool0
I0428 19:32:25.660126 22833 net.cpp:124] Setting up pool0
I0428 19:32:25.660137 22833 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:32:25.660143 22833 net.cpp:139] Memory required for data: 3194800
I0428 19:32:25.660150 22833 layer_factory.hpp:77] Creating layer ip1
I0428 19:32:25.660166 22833 net.cpp:86] Creating Layer ip1
I0428 19:32:25.660173 22833 net.cpp:408] ip1 <- pool0
I0428 19:32:25.660185 22833 net.cpp:382] ip1 -> ip1
I0428 19:32:25.660797 22833 net.cpp:124] Setting up ip1
I0428 19:32:25.660816 22833 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:25.660823 22833 net.cpp:139] Memory required for data: 3214800
I0428 19:32:25.660838 22833 layer_factory.hpp:77] Creating layer relu1
I0428 19:32:25.660850 22833 net.cpp:86] Creating Layer relu1
I0428 19:32:25.660857 22833 net.cpp:408] relu1 <- ip1
I0428 19:32:25.660866 22833 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:32:25.661080 22833 net.cpp:124] Setting up relu1
I0428 19:32:25.661094 22833 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:32:25.661100 22833 net.cpp:139] Memory required for data: 3234800
I0428 19:32:25.661106 22833 layer_factory.hpp:77] Creating layer ip2
I0428 19:32:25.661118 22833 net.cpp:86] Creating Layer ip2
I0428 19:32:25.661124 22833 net.cpp:408] ip2 <- ip1
I0428 19:32:25.661139 22833 net.cpp:382] ip2 -> ip2
I0428 19:32:25.661289 22833 net.cpp:124] Setting up ip2
I0428 19:32:25.661300 22833 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:25.661306 22833 net.cpp:139] Memory required for data: 3244800
I0428 19:32:25.661329 22833 layer_factory.hpp:77] Creating layer relu2
I0428 19:32:25.661340 22833 net.cpp:86] Creating Layer relu2
I0428 19:32:25.661347 22833 net.cpp:408] relu2 <- ip2
I0428 19:32:25.661360 22833 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:32:25.662308 22833 net.cpp:124] Setting up relu2
I0428 19:32:25.662327 22833 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:32:25.662333 22833 net.cpp:139] Memory required for data: 3254800
I0428 19:32:25.662339 22833 layer_factory.hpp:77] Creating layer ip3
I0428 19:32:25.662353 22833 net.cpp:86] Creating Layer ip3
I0428 19:32:25.662360 22833 net.cpp:408] ip3 <- ip2
I0428 19:32:25.662377 22833 net.cpp:382] ip3 -> ip3
I0428 19:32:25.662516 22833 net.cpp:124] Setting up ip3
I0428 19:32:25.662528 22833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:25.662534 22833 net.cpp:139] Memory required for data: 3258800
I0428 19:32:25.662545 22833 layer_factory.hpp:77] Creating layer relu3
I0428 19:32:25.662557 22833 net.cpp:86] Creating Layer relu3
I0428 19:32:25.662565 22833 net.cpp:408] relu3 <- ip3
I0428 19:32:25.662575 22833 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:32:25.662780 22833 net.cpp:124] Setting up relu3
I0428 19:32:25.662793 22833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:25.662801 22833 net.cpp:139] Memory required for data: 3262800
I0428 19:32:25.662806 22833 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:32:25.662817 22833 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:32:25.662823 22833 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:32:25.662832 22833 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:32:25.662844 22833 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:32:25.662902 22833 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:32:25.662912 22833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:25.662919 22833 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:32:25.662940 22833 net.cpp:139] Memory required for data: 3270800
I0428 19:32:25.662947 22833 layer_factory.hpp:77] Creating layer accuracy
I0428 19:32:25.662957 22833 net.cpp:86] Creating Layer accuracy
I0428 19:32:25.662963 22833 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:32:25.662971 22833 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:32:25.662982 22833 net.cpp:382] accuracy -> accuracy
I0428 19:32:25.662997 22833 net.cpp:124] Setting up accuracy
I0428 19:32:25.663005 22833 net.cpp:131] Top shape: (1)
I0428 19:32:25.663012 22833 net.cpp:139] Memory required for data: 3270804
I0428 19:32:25.663017 22833 layer_factory.hpp:77] Creating layer loss
I0428 19:32:25.663027 22833 net.cpp:86] Creating Layer loss
I0428 19:32:25.663036 22833 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:32:25.663044 22833 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:32:25.663055 22833 net.cpp:382] loss -> loss
I0428 19:32:25.663069 22833 layer_factory.hpp:77] Creating layer loss
I0428 19:32:25.663377 22833 net.cpp:124] Setting up loss
I0428 19:32:25.663393 22833 net.cpp:131] Top shape: (1)
I0428 19:32:25.663398 22833 net.cpp:134]     with loss weight 1
I0428 19:32:25.663409 22833 net.cpp:139] Memory required for data: 3270808
I0428 19:32:25.663416 22833 net.cpp:200] loss needs backward computation.
I0428 19:32:25.663425 22833 net.cpp:202] accuracy does not need backward computation.
I0428 19:32:25.663434 22833 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:32:25.663439 22833 net.cpp:200] relu3 needs backward computation.
I0428 19:32:25.663445 22833 net.cpp:200] ip3 needs backward computation.
I0428 19:32:25.663451 22833 net.cpp:200] relu2 needs backward computation.
I0428 19:32:25.663457 22833 net.cpp:200] ip2 needs backward computation.
I0428 19:32:25.663463 22833 net.cpp:200] relu1 needs backward computation.
I0428 19:32:25.663468 22833 net.cpp:200] ip1 needs backward computation.
I0428 19:32:25.663475 22833 net.cpp:200] pool0 needs backward computation.
I0428 19:32:25.663481 22833 net.cpp:200] conv0 needs backward computation.
I0428 19:32:25.663488 22833 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:32:25.663496 22833 net.cpp:202] mnist does not need backward computation.
I0428 19:32:25.663501 22833 net.cpp:244] This network produces output accuracy
I0428 19:32:25.663507 22833 net.cpp:244] This network produces output loss
I0428 19:32:25.663527 22833 net.cpp:257] Network initialization done.
I0428 19:32:25.663580 22833 solver.cpp:56] Solver scaffolding done.
I0428 19:32:25.663967 22833 caffe.cpp:248] Starting Optimization
I0428 19:32:25.663976 22833 solver.cpp:273] Solving LeNet
I0428 19:32:25.663981 22833 solver.cpp:274] Learning Rate Policy: inv
I0428 19:32:25.664947 22833 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:32:25.670012 22833 blocking_queue.cpp:49] Waiting for data
I0428 19:32:25.731552 22840 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:25.732106 22833 solver.cpp:398]     Test net output #0: accuracy = 0.1262
I0428 19:32:25.732131 22833 solver.cpp:398]     Test net output #1: loss = 2.29122 (* 1 = 2.29122 loss)
I0428 19:32:25.734679 22833 solver.cpp:219] Iteration 0 (-1.36199e-31 iter/s, 0.0706611s/100 iters), loss = 2.30603
I0428 19:32:25.734714 22833 solver.cpp:238]     Train net output #0: loss = 2.30603 (* 1 = 2.30603 loss)
I0428 19:32:25.734733 22833 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:32:25.807798 22833 solver.cpp:219] Iteration 100 (1368.42 iter/s, 0.0730767s/100 iters), loss = 0.605889
I0428 19:32:25.807828 22833 solver.cpp:238]     Train net output #0: loss = 0.605889 (* 1 = 0.605889 loss)
I0428 19:32:25.807838 22833 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:32:25.886683 22833 solver.cpp:219] Iteration 200 (1268.25 iter/s, 0.078849s/100 iters), loss = 0.390995
I0428 19:32:25.886711 22833 solver.cpp:238]     Train net output #0: loss = 0.390995 (* 1 = 0.390995 loss)
I0428 19:32:25.886736 22833 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:32:25.967133 22833 solver.cpp:219] Iteration 300 (1243.54 iter/s, 0.0804157s/100 iters), loss = 0.289603
I0428 19:32:25.967177 22833 solver.cpp:238]     Train net output #0: loss = 0.289603 (* 1 = 0.289603 loss)
I0428 19:32:25.967203 22833 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:32:26.048688 22833 solver.cpp:219] Iteration 400 (1226.93 iter/s, 0.0815043s/100 iters), loss = 0.187456
I0428 19:32:26.048714 22833 solver.cpp:238]     Train net output #0: loss = 0.187456 (* 1 = 0.187456 loss)
I0428 19:32:26.048740 22833 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:32:26.127653 22833 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:32:26.202074 22840 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:26.202648 22833 solver.cpp:398]     Test net output #0: accuracy = 0.9402
I0428 19:32:26.202675 22833 solver.cpp:398]     Test net output #1: loss = 0.19984 (* 1 = 0.19984 loss)
I0428 19:32:26.203403 22833 solver.cpp:219] Iteration 500 (646.516 iter/s, 0.154675s/100 iters), loss = 0.205605
I0428 19:32:26.203433 22833 solver.cpp:238]     Train net output #0: loss = 0.205605 (* 1 = 0.205605 loss)
I0428 19:32:26.203441 22833 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:32:26.282105 22833 solver.cpp:219] Iteration 600 (1271.22 iter/s, 0.0786647s/100 iters), loss = 0.161712
I0428 19:32:26.282136 22833 solver.cpp:238]     Train net output #0: loss = 0.161712 (* 1 = 0.161712 loss)
I0428 19:32:26.282143 22833 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:32:26.358245 22833 solver.cpp:219] Iteration 700 (1314.05 iter/s, 0.0761006s/100 iters), loss = 0.336626
I0428 19:32:26.358276 22833 solver.cpp:238]     Train net output #0: loss = 0.336626 (* 1 = 0.336626 loss)
I0428 19:32:26.358284 22833 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:32:26.433770 22833 solver.cpp:219] Iteration 800 (1324.77 iter/s, 0.0754851s/100 iters), loss = 0.350749
I0428 19:32:26.433799 22833 solver.cpp:238]     Train net output #0: loss = 0.350749 (* 1 = 0.350749 loss)
I0428 19:32:26.433807 22833 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:32:26.509088 22833 solver.cpp:219] Iteration 900 (1328.39 iter/s, 0.0752794s/100 iters), loss = 0.219383
I0428 19:32:26.509119 22833 solver.cpp:238]     Train net output #0: loss = 0.219383 (* 1 = 0.219383 loss)
I0428 19:32:26.509126 22833 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:32:26.534659 22839 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:26.586033 22833 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:32:26.587913 22833 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:32:26.589011 22833 solver.cpp:311] Iteration 1000, loss = 0.209525
I0428 19:32:26.589031 22833 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:32:26.642241 22840 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:32:26.642786 22833 solver.cpp:398]     Test net output #0: accuracy = 0.9657
I0428 19:32:26.642809 22833 solver.cpp:398]     Test net output #1: loss = 0.112817 (* 1 = 0.112817 loss)
I0428 19:32:26.642815 22833 solver.cpp:316] Optimization Done.
I0428 19:32:26.642819 22833 caffe.cpp:259] Optimization Done.
