I0428 19:33:55.520467 23235 caffe.cpp:218] Using GPUs 0
I0428 19:33:55.560758 23235 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:33:56.078913 23235 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test192.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:33:56.079057 23235 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test192.prototxt
I0428 19:33:56.079418 23235 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:33:56.079437 23235 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:33:56.079524 23235 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:56.079598 23235 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:56.079696 23235 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:33:56.079720 23235 net.cpp:86] Creating Layer mnist
I0428 19:33:56.079730 23235 net.cpp:382] mnist -> data
I0428 19:33:56.079751 23235 net.cpp:382] mnist -> label
I0428 19:33:56.080840 23235 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:33:56.083307 23235 net.cpp:124] Setting up mnist
I0428 19:33:56.083324 23235 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:33:56.083330 23235 net.cpp:131] Top shape: 64 (64)
I0428 19:33:56.083334 23235 net.cpp:139] Memory required for data: 200960
I0428 19:33:56.083341 23235 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:56.083389 23235 net.cpp:86] Creating Layer conv0
I0428 19:33:56.083395 23235 net.cpp:408] conv0 <- data
I0428 19:33:56.083408 23235 net.cpp:382] conv0 -> conv0
I0428 19:33:56.376081 23235 net.cpp:124] Setting up conv0
I0428 19:33:56.376114 23235 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 19:33:56.376121 23235 net.cpp:139] Memory required for data: 3887360
I0428 19:33:56.376138 23235 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:56.376153 23235 net.cpp:86] Creating Layer pool0
I0428 19:33:56.376178 23235 net.cpp:408] pool0 <- conv0
I0428 19:33:56.376184 23235 net.cpp:382] pool0 -> pool0
I0428 19:33:56.376241 23235 net.cpp:124] Setting up pool0
I0428 19:33:56.376251 23235 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 19:33:56.376255 23235 net.cpp:139] Memory required for data: 4808960
I0428 19:33:56.376258 23235 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:56.376268 23235 net.cpp:86] Creating Layer ip1
I0428 19:33:56.376271 23235 net.cpp:408] ip1 <- pool0
I0428 19:33:56.376277 23235 net.cpp:382] ip1 -> ip1
I0428 19:33:56.378615 23235 net.cpp:124] Setting up ip1
I0428 19:33:56.378633 23235 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:56.378636 23235 net.cpp:139] Memory required for data: 4821760
I0428 19:33:56.378646 23235 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:56.378655 23235 net.cpp:86] Creating Layer relu1
I0428 19:33:56.378659 23235 net.cpp:408] relu1 <- ip1
I0428 19:33:56.378664 23235 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:56.378868 23235 net.cpp:124] Setting up relu1
I0428 19:33:56.378880 23235 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:56.378885 23235 net.cpp:139] Memory required for data: 4834560
I0428 19:33:56.378888 23235 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:56.378896 23235 net.cpp:86] Creating Layer ip2
I0428 19:33:56.378900 23235 net.cpp:408] ip2 <- ip1
I0428 19:33:56.378906 23235 net.cpp:382] ip2 -> ip2
I0428 19:33:56.380012 23235 net.cpp:124] Setting up ip2
I0428 19:33:56.380028 23235 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:56.380031 23235 net.cpp:139] Memory required for data: 4847360
I0428 19:33:56.380041 23235 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:56.380048 23235 net.cpp:86] Creating Layer relu2
I0428 19:33:56.380053 23235 net.cpp:408] relu2 <- ip2
I0428 19:33:56.380059 23235 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:56.380926 23235 net.cpp:124] Setting up relu2
I0428 19:33:56.380942 23235 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:33:56.380947 23235 net.cpp:139] Memory required for data: 4860160
I0428 19:33:56.380951 23235 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:56.380960 23235 net.cpp:86] Creating Layer ip3
I0428 19:33:56.380964 23235 net.cpp:408] ip3 <- ip2
I0428 19:33:56.380970 23235 net.cpp:382] ip3 -> ip3
I0428 19:33:56.381093 23235 net.cpp:124] Setting up ip3
I0428 19:33:56.381103 23235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:56.381105 23235 net.cpp:139] Memory required for data: 4862720
I0428 19:33:56.381112 23235 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:56.381120 23235 net.cpp:86] Creating Layer relu3
I0428 19:33:56.381124 23235 net.cpp:408] relu3 <- ip3
I0428 19:33:56.381129 23235 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:56.381310 23235 net.cpp:124] Setting up relu3
I0428 19:33:56.381321 23235 net.cpp:131] Top shape: 64 10 (640)
I0428 19:33:56.381325 23235 net.cpp:139] Memory required for data: 4865280
I0428 19:33:56.381330 23235 layer_factory.hpp:77] Creating layer loss
I0428 19:33:56.381335 23235 net.cpp:86] Creating Layer loss
I0428 19:33:56.381340 23235 net.cpp:408] loss <- ip3
I0428 19:33:56.381345 23235 net.cpp:408] loss <- label
I0428 19:33:56.381350 23235 net.cpp:382] loss -> loss
I0428 19:33:56.381372 23235 layer_factory.hpp:77] Creating layer loss
I0428 19:33:56.381640 23235 net.cpp:124] Setting up loss
I0428 19:33:56.381651 23235 net.cpp:131] Top shape: (1)
I0428 19:33:56.381656 23235 net.cpp:134]     with loss weight 1
I0428 19:33:56.381671 23235 net.cpp:139] Memory required for data: 4865284
I0428 19:33:56.381675 23235 net.cpp:200] loss needs backward computation.
I0428 19:33:56.381680 23235 net.cpp:200] relu3 needs backward computation.
I0428 19:33:56.381683 23235 net.cpp:200] ip3 needs backward computation.
I0428 19:33:56.381686 23235 net.cpp:200] relu2 needs backward computation.
I0428 19:33:56.381690 23235 net.cpp:200] ip2 needs backward computation.
I0428 19:33:56.381695 23235 net.cpp:200] relu1 needs backward computation.
I0428 19:33:56.381697 23235 net.cpp:200] ip1 needs backward computation.
I0428 19:33:56.381713 23235 net.cpp:200] pool0 needs backward computation.
I0428 19:33:56.381717 23235 net.cpp:200] conv0 needs backward computation.
I0428 19:33:56.381721 23235 net.cpp:202] mnist does not need backward computation.
I0428 19:33:56.381724 23235 net.cpp:244] This network produces output loss
I0428 19:33:56.381734 23235 net.cpp:257] Network initialization done.
I0428 19:33:56.382064 23235 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test192.prototxt
I0428 19:33:56.382095 23235 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:33:56.382189 23235 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:33:56.382263 23235 layer_factory.hpp:77] Creating layer mnist
I0428 19:33:56.382318 23235 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:33:56.382333 23235 net.cpp:86] Creating Layer mnist
I0428 19:33:56.382339 23235 net.cpp:382] mnist -> data
I0428 19:33:56.382347 23235 net.cpp:382] mnist -> label
I0428 19:33:56.382449 23235 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:33:56.383922 23235 net.cpp:124] Setting up mnist
I0428 19:33:56.383939 23235 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:33:56.383944 23235 net.cpp:131] Top shape: 100 (100)
I0428 19:33:56.383949 23235 net.cpp:139] Memory required for data: 314000
I0428 19:33:56.383952 23235 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:33:56.383965 23235 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:33:56.383970 23235 net.cpp:408] label_mnist_1_split <- label
I0428 19:33:56.383975 23235 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:33:56.383983 23235 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:33:56.384038 23235 net.cpp:124] Setting up label_mnist_1_split
I0428 19:33:56.384045 23235 net.cpp:131] Top shape: 100 (100)
I0428 19:33:56.384049 23235 net.cpp:131] Top shape: 100 (100)
I0428 19:33:56.384052 23235 net.cpp:139] Memory required for data: 314800
I0428 19:33:56.384068 23235 layer_factory.hpp:77] Creating layer conv0
I0428 19:33:56.384078 23235 net.cpp:86] Creating Layer conv0
I0428 19:33:56.384083 23235 net.cpp:408] conv0 <- data
I0428 19:33:56.384088 23235 net.cpp:382] conv0 -> conv0
I0428 19:33:56.386003 23235 net.cpp:124] Setting up conv0
I0428 19:33:56.386020 23235 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 19:33:56.386025 23235 net.cpp:139] Memory required for data: 6074800
I0428 19:33:56.386036 23235 layer_factory.hpp:77] Creating layer pool0
I0428 19:33:56.386044 23235 net.cpp:86] Creating Layer pool0
I0428 19:33:56.386049 23235 net.cpp:408] pool0 <- conv0
I0428 19:33:56.386054 23235 net.cpp:382] pool0 -> pool0
I0428 19:33:56.386097 23235 net.cpp:124] Setting up pool0
I0428 19:33:56.386103 23235 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 19:33:56.386107 23235 net.cpp:139] Memory required for data: 7514800
I0428 19:33:56.386111 23235 layer_factory.hpp:77] Creating layer ip1
I0428 19:33:56.386118 23235 net.cpp:86] Creating Layer ip1
I0428 19:33:56.386122 23235 net.cpp:408] ip1 <- pool0
I0428 19:33:56.386127 23235 net.cpp:382] ip1 -> ip1
I0428 19:33:56.388424 23235 net.cpp:124] Setting up ip1
I0428 19:33:56.388445 23235 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:56.388458 23235 net.cpp:139] Memory required for data: 7534800
I0428 19:33:56.388468 23235 layer_factory.hpp:77] Creating layer relu1
I0428 19:33:56.388475 23235 net.cpp:86] Creating Layer relu1
I0428 19:33:56.388480 23235 net.cpp:408] relu1 <- ip1
I0428 19:33:56.388486 23235 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:33:56.388687 23235 net.cpp:124] Setting up relu1
I0428 19:33:56.388700 23235 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:56.388703 23235 net.cpp:139] Memory required for data: 7554800
I0428 19:33:56.388707 23235 layer_factory.hpp:77] Creating layer ip2
I0428 19:33:56.388715 23235 net.cpp:86] Creating Layer ip2
I0428 19:33:56.388720 23235 net.cpp:408] ip2 <- ip1
I0428 19:33:56.388725 23235 net.cpp:382] ip2 -> ip2
I0428 19:33:56.388875 23235 net.cpp:124] Setting up ip2
I0428 19:33:56.388885 23235 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:56.388888 23235 net.cpp:139] Memory required for data: 7574800
I0428 19:33:56.388897 23235 layer_factory.hpp:77] Creating layer relu2
I0428 19:33:56.388902 23235 net.cpp:86] Creating Layer relu2
I0428 19:33:56.388907 23235 net.cpp:408] relu2 <- ip2
I0428 19:33:56.388912 23235 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:33:56.389843 23235 net.cpp:124] Setting up relu2
I0428 19:33:56.389858 23235 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:33:56.389865 23235 net.cpp:139] Memory required for data: 7594800
I0428 19:33:56.389869 23235 layer_factory.hpp:77] Creating layer ip3
I0428 19:33:56.389878 23235 net.cpp:86] Creating Layer ip3
I0428 19:33:56.389883 23235 net.cpp:408] ip3 <- ip2
I0428 19:33:56.389889 23235 net.cpp:382] ip3 -> ip3
I0428 19:33:56.390041 23235 net.cpp:124] Setting up ip3
I0428 19:33:56.390051 23235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:56.390055 23235 net.cpp:139] Memory required for data: 7598800
I0428 19:33:56.390063 23235 layer_factory.hpp:77] Creating layer relu3
I0428 19:33:56.390069 23235 net.cpp:86] Creating Layer relu3
I0428 19:33:56.390074 23235 net.cpp:408] relu3 <- ip3
I0428 19:33:56.390079 23235 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:33:56.390269 23235 net.cpp:124] Setting up relu3
I0428 19:33:56.390278 23235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:56.390283 23235 net.cpp:139] Memory required for data: 7602800
I0428 19:33:56.390287 23235 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:33:56.390293 23235 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:33:56.390296 23235 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:33:56.390311 23235 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:33:56.390318 23235 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:33:56.390367 23235 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:33:56.390373 23235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:56.390385 23235 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:33:56.390400 23235 net.cpp:139] Memory required for data: 7610800
I0428 19:33:56.390404 23235 layer_factory.hpp:77] Creating layer accuracy
I0428 19:33:56.390411 23235 net.cpp:86] Creating Layer accuracy
I0428 19:33:56.390415 23235 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:33:56.390420 23235 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:33:56.390426 23235 net.cpp:382] accuracy -> accuracy
I0428 19:33:56.390435 23235 net.cpp:124] Setting up accuracy
I0428 19:33:56.390440 23235 net.cpp:131] Top shape: (1)
I0428 19:33:56.390444 23235 net.cpp:139] Memory required for data: 7610804
I0428 19:33:56.390447 23235 layer_factory.hpp:77] Creating layer loss
I0428 19:33:56.390452 23235 net.cpp:86] Creating Layer loss
I0428 19:33:56.390456 23235 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:33:56.390460 23235 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:33:56.390465 23235 net.cpp:382] loss -> loss
I0428 19:33:56.390480 23235 layer_factory.hpp:77] Creating layer loss
I0428 19:33:56.390758 23235 net.cpp:124] Setting up loss
I0428 19:33:56.390769 23235 net.cpp:131] Top shape: (1)
I0428 19:33:56.390774 23235 net.cpp:134]     with loss weight 1
I0428 19:33:56.390782 23235 net.cpp:139] Memory required for data: 7610808
I0428 19:33:56.390787 23235 net.cpp:200] loss needs backward computation.
I0428 19:33:56.390791 23235 net.cpp:202] accuracy does not need backward computation.
I0428 19:33:56.390796 23235 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:33:56.390800 23235 net.cpp:200] relu3 needs backward computation.
I0428 19:33:56.390805 23235 net.cpp:200] ip3 needs backward computation.
I0428 19:33:56.390808 23235 net.cpp:200] relu2 needs backward computation.
I0428 19:33:56.390812 23235 net.cpp:200] ip2 needs backward computation.
I0428 19:33:56.390815 23235 net.cpp:200] relu1 needs backward computation.
I0428 19:33:56.390820 23235 net.cpp:200] ip1 needs backward computation.
I0428 19:33:56.390823 23235 net.cpp:200] pool0 needs backward computation.
I0428 19:33:56.390827 23235 net.cpp:200] conv0 needs backward computation.
I0428 19:33:56.390831 23235 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:33:56.390843 23235 net.cpp:202] mnist does not need backward computation.
I0428 19:33:56.390847 23235 net.cpp:244] This network produces output accuracy
I0428 19:33:56.390851 23235 net.cpp:244] This network produces output loss
I0428 19:33:56.390869 23235 net.cpp:257] Network initialization done.
I0428 19:33:56.390913 23235 solver.cpp:56] Solver scaffolding done.
I0428 19:33:56.391263 23235 caffe.cpp:248] Starting Optimization
I0428 19:33:56.391271 23235 solver.cpp:273] Solving LeNet
I0428 19:33:56.391274 23235 solver.cpp:274] Learning Rate Policy: inv
I0428 19:33:56.392843 23235 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:33:56.400928 23235 blocking_queue.cpp:49] Waiting for data
I0428 19:33:56.469573 23242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:56.470348 23235 solver.cpp:398]     Test net output #0: accuracy = 0.0516
I0428 19:33:56.470366 23235 solver.cpp:398]     Test net output #1: loss = 2.31681 (* 1 = 2.31681 loss)
I0428 19:33:56.473397 23235 solver.cpp:219] Iteration 0 (-9.90718e-43 iter/s, 0.082092s/100 iters), loss = 2.30959
I0428 19:33:56.473423 23235 solver.cpp:238]     Train net output #0: loss = 2.30959 (* 1 = 2.30959 loss)
I0428 19:33:56.473434 23235 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:33:56.571374 23235 solver.cpp:219] Iteration 100 (1021.01 iter/s, 0.0979425s/100 iters), loss = 0.917393
I0428 19:33:56.571400 23235 solver.cpp:238]     Train net output #0: loss = 0.917393 (* 1 = 0.917393 loss)
I0428 19:33:56.571408 23235 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:33:56.667781 23235 solver.cpp:219] Iteration 200 (1037.65 iter/s, 0.0963717s/100 iters), loss = 0.38388
I0428 19:33:56.667805 23235 solver.cpp:238]     Train net output #0: loss = 0.38388 (* 1 = 0.38388 loss)
I0428 19:33:56.667812 23235 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:33:56.764794 23235 solver.cpp:219] Iteration 300 (1031.15 iter/s, 0.0969789s/100 iters), loss = 0.646493
I0428 19:33:56.764824 23235 solver.cpp:238]     Train net output #0: loss = 0.646493 (* 1 = 0.646493 loss)
I0428 19:33:56.764832 23235 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:33:56.861647 23235 solver.cpp:219] Iteration 400 (1032.91 iter/s, 0.0968141s/100 iters), loss = 0.382333
I0428 19:33:56.861671 23235 solver.cpp:238]     Train net output #0: loss = 0.382333 (* 1 = 0.382333 loss)
I0428 19:33:56.861677 23235 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:33:56.956807 23235 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:33:57.020109 23242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:57.022280 23235 solver.cpp:398]     Test net output #0: accuracy = 0.858
I0428 19:33:57.022300 23235 solver.cpp:398]     Test net output #1: loss = 0.398387 (* 1 = 0.398387 loss)
I0428 19:33:57.023234 23235 solver.cpp:219] Iteration 500 (619.01 iter/s, 0.161548s/100 iters), loss = 0.441665
I0428 19:33:57.023257 23235 solver.cpp:238]     Train net output #0: loss = 0.441665 (* 1 = 0.441665 loss)
I0428 19:33:57.023263 23235 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:33:57.120049 23235 solver.cpp:219] Iteration 600 (1033.24 iter/s, 0.0967825s/100 iters), loss = 0.284253
I0428 19:33:57.120074 23235 solver.cpp:238]     Train net output #0: loss = 0.284253 (* 1 = 0.284253 loss)
I0428 19:33:57.120095 23235 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:33:57.222075 23235 solver.cpp:219] Iteration 700 (980.534 iter/s, 0.101985s/100 iters), loss = 0.336054
I0428 19:33:57.222139 23235 solver.cpp:238]     Train net output #0: loss = 0.336054 (* 1 = 0.336054 loss)
I0428 19:33:57.222156 23235 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:33:57.328438 23235 solver.cpp:219] Iteration 800 (940.703 iter/s, 0.106303s/100 iters), loss = 0.706213
I0428 19:33:57.328474 23235 solver.cpp:238]     Train net output #0: loss = 0.706213 (* 1 = 0.706213 loss)
I0428 19:33:57.328495 23235 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:33:57.429882 23235 solver.cpp:219] Iteration 900 (986.208 iter/s, 0.101399s/100 iters), loss = 0.473167
I0428 19:33:57.429911 23235 solver.cpp:238]     Train net output #0: loss = 0.473167 (* 1 = 0.473167 loss)
I0428 19:33:57.429919 23235 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:33:57.468353 23241 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:57.538681 23235 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:33:57.543395 23235 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:33:57.545799 23235 solver.cpp:311] Iteration 1000, loss = 0.273903
I0428 19:33:57.545819 23235 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:33:57.613837 23242 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:33:57.616204 23235 solver.cpp:398]     Test net output #0: accuracy = 0.8709
I0428 19:33:57.616226 23235 solver.cpp:398]     Test net output #1: loss = 0.346093 (* 1 = 0.346093 loss)
I0428 19:33:57.616232 23235 solver.cpp:316] Optimization Done.
I0428 19:33:57.616235 23235 caffe.cpp:259] Optimization Done.
