I0428 19:43:23.108572 25332 caffe.cpp:218] Using GPUs 0
I0428 19:43:23.147815 25332 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:43:23.667031 25332 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test420.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:43:23.667198 25332 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test420.prototxt
I0428 19:43:23.667610 25332 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:43:23.667634 25332 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:43:23.667747 25332 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:23.667852 25332 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:23.667981 25332 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:43:23.668014 25332 net.cpp:86] Creating Layer mnist
I0428 19:43:23.668025 25332 net.cpp:382] mnist -> data
I0428 19:43:23.668056 25332 net.cpp:382] mnist -> label
I0428 19:43:23.669328 25332 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:43:23.671816 25332 net.cpp:124] Setting up mnist
I0428 19:43:23.671838 25332 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:43:23.671847 25332 net.cpp:131] Top shape: 64 (64)
I0428 19:43:23.671854 25332 net.cpp:139] Memory required for data: 200960
I0428 19:43:23.671864 25332 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:23.671886 25332 net.cpp:86] Creating Layer conv0
I0428 19:43:23.671911 25332 net.cpp:408] conv0 <- data
I0428 19:43:23.671929 25332 net.cpp:382] conv0 -> conv0
I0428 19:43:23.954078 25332 net.cpp:124] Setting up conv0
I0428 19:43:23.954108 25332 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:43:23.954115 25332 net.cpp:139] Memory required for data: 495872
I0428 19:43:23.954135 25332 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:23.954152 25332 net.cpp:86] Creating Layer pool0
I0428 19:43:23.954159 25332 net.cpp:408] pool0 <- conv0
I0428 19:43:23.954169 25332 net.cpp:382] pool0 -> pool0
I0428 19:43:23.954233 25332 net.cpp:124] Setting up pool0
I0428 19:43:23.954242 25332 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:43:23.954247 25332 net.cpp:139] Memory required for data: 569600
I0428 19:43:23.954252 25332 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:23.954268 25332 net.cpp:86] Creating Layer conv1
I0428 19:43:23.954274 25332 net.cpp:408] conv1 <- pool0
I0428 19:43:23.954283 25332 net.cpp:382] conv1 -> conv1
I0428 19:43:23.956873 25332 net.cpp:124] Setting up conv1
I0428 19:43:23.956889 25332 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:43:23.956897 25332 net.cpp:139] Memory required for data: 979200
I0428 19:43:23.956924 25332 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:23.956936 25332 net.cpp:86] Creating Layer pool1
I0428 19:43:23.956943 25332 net.cpp:408] pool1 <- conv1
I0428 19:43:23.956950 25332 net.cpp:382] pool1 -> pool1
I0428 19:43:23.956997 25332 net.cpp:124] Setting up pool1
I0428 19:43:23.957020 25332 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:43:23.957026 25332 net.cpp:139] Memory required for data: 1081600
I0428 19:43:23.957031 25332 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:23.957041 25332 net.cpp:86] Creating Layer ip1
I0428 19:43:23.957047 25332 net.cpp:408] ip1 <- pool1
I0428 19:43:23.957056 25332 net.cpp:382] ip1 -> ip1
I0428 19:43:23.957268 25332 net.cpp:124] Setting up ip1
I0428 19:43:23.957278 25332 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:23.957283 25332 net.cpp:139] Memory required for data: 1094400
I0428 19:43:23.957294 25332 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:23.957307 25332 net.cpp:86] Creating Layer relu1
I0428 19:43:23.957316 25332 net.cpp:408] relu1 <- ip1
I0428 19:43:23.957324 25332 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:23.957490 25332 net.cpp:124] Setting up relu1
I0428 19:43:23.957500 25332 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:43:23.957505 25332 net.cpp:139] Memory required for data: 1107200
I0428 19:43:23.957510 25332 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:23.957520 25332 net.cpp:86] Creating Layer ip2
I0428 19:43:23.957525 25332 net.cpp:408] ip2 <- ip1
I0428 19:43:23.957533 25332 net.cpp:382] ip2 -> ip2
I0428 19:43:23.957633 25332 net.cpp:124] Setting up ip2
I0428 19:43:23.957641 25332 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:23.957646 25332 net.cpp:139] Memory required for data: 1109760
I0428 19:43:23.957655 25332 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:23.957664 25332 net.cpp:86] Creating Layer relu2
I0428 19:43:23.957671 25332 net.cpp:408] relu2 <- ip2
I0428 19:43:23.957679 25332 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:23.958389 25332 net.cpp:124] Setting up relu2
I0428 19:43:23.958402 25332 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:23.958408 25332 net.cpp:139] Memory required for data: 1112320
I0428 19:43:23.958413 25332 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:23.958423 25332 net.cpp:86] Creating Layer ip3
I0428 19:43:23.958429 25332 net.cpp:408] ip3 <- ip2
I0428 19:43:23.958438 25332 net.cpp:382] ip3 -> ip3
I0428 19:43:23.958541 25332 net.cpp:124] Setting up ip3
I0428 19:43:23.958551 25332 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:23.958555 25332 net.cpp:139] Memory required for data: 1114880
I0428 19:43:23.958569 25332 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:23.958577 25332 net.cpp:86] Creating Layer relu3
I0428 19:43:23.958582 25332 net.cpp:408] relu3 <- ip3
I0428 19:43:23.958590 25332 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:23.958758 25332 net.cpp:124] Setting up relu3
I0428 19:43:23.958768 25332 net.cpp:131] Top shape: 64 10 (640)
I0428 19:43:23.958773 25332 net.cpp:139] Memory required for data: 1117440
I0428 19:43:23.958778 25332 layer_factory.hpp:77] Creating layer loss
I0428 19:43:23.958786 25332 net.cpp:86] Creating Layer loss
I0428 19:43:23.958791 25332 net.cpp:408] loss <- ip3
I0428 19:43:23.958798 25332 net.cpp:408] loss <- label
I0428 19:43:23.958807 25332 net.cpp:382] loss -> loss
I0428 19:43:23.958830 25332 layer_factory.hpp:77] Creating layer loss
I0428 19:43:23.959055 25332 net.cpp:124] Setting up loss
I0428 19:43:23.959066 25332 net.cpp:131] Top shape: (1)
I0428 19:43:23.959071 25332 net.cpp:134]     with loss weight 1
I0428 19:43:23.959091 25332 net.cpp:139] Memory required for data: 1117444
I0428 19:43:23.959097 25332 net.cpp:200] loss needs backward computation.
I0428 19:43:23.959103 25332 net.cpp:200] relu3 needs backward computation.
I0428 19:43:23.959108 25332 net.cpp:200] ip3 needs backward computation.
I0428 19:43:23.959115 25332 net.cpp:200] relu2 needs backward computation.
I0428 19:43:23.959120 25332 net.cpp:200] ip2 needs backward computation.
I0428 19:43:23.959125 25332 net.cpp:200] relu1 needs backward computation.
I0428 19:43:23.959128 25332 net.cpp:200] ip1 needs backward computation.
I0428 19:43:23.959134 25332 net.cpp:200] pool1 needs backward computation.
I0428 19:43:23.959139 25332 net.cpp:200] conv1 needs backward computation.
I0428 19:43:23.959146 25332 net.cpp:200] pool0 needs backward computation.
I0428 19:43:23.959151 25332 net.cpp:200] conv0 needs backward computation.
I0428 19:43:23.959156 25332 net.cpp:202] mnist does not need backward computation.
I0428 19:43:23.959161 25332 net.cpp:244] This network produces output loss
I0428 19:43:23.959175 25332 net.cpp:257] Network initialization done.
I0428 19:43:23.959530 25332 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test420.prototxt
I0428 19:43:23.959565 25332 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:43:23.959661 25332 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:43:23.959803 25332 layer_factory.hpp:77] Creating layer mnist
I0428 19:43:23.959861 25332 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:43:23.959878 25332 net.cpp:86] Creating Layer mnist
I0428 19:43:23.959885 25332 net.cpp:382] mnist -> data
I0428 19:43:23.959897 25332 net.cpp:382] mnist -> label
I0428 19:43:23.960011 25332 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:43:23.962106 25332 net.cpp:124] Setting up mnist
I0428 19:43:23.962121 25332 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:43:23.962129 25332 net.cpp:131] Top shape: 100 (100)
I0428 19:43:23.962134 25332 net.cpp:139] Memory required for data: 314000
I0428 19:43:23.962139 25332 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:43:23.962153 25332 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:43:23.962158 25332 net.cpp:408] label_mnist_1_split <- label
I0428 19:43:23.962167 25332 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:43:23.962177 25332 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:43:23.962250 25332 net.cpp:124] Setting up label_mnist_1_split
I0428 19:43:23.962258 25332 net.cpp:131] Top shape: 100 (100)
I0428 19:43:23.962265 25332 net.cpp:131] Top shape: 100 (100)
I0428 19:43:23.962270 25332 net.cpp:139] Memory required for data: 314800
I0428 19:43:23.962275 25332 layer_factory.hpp:77] Creating layer conv0
I0428 19:43:23.962288 25332 net.cpp:86] Creating Layer conv0
I0428 19:43:23.962296 25332 net.cpp:408] conv0 <- data
I0428 19:43:23.962303 25332 net.cpp:382] conv0 -> conv0
I0428 19:43:23.963748 25332 net.cpp:124] Setting up conv0
I0428 19:43:23.963766 25332 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:43:23.963773 25332 net.cpp:139] Memory required for data: 775600
I0428 19:43:23.963788 25332 layer_factory.hpp:77] Creating layer pool0
I0428 19:43:23.963798 25332 net.cpp:86] Creating Layer pool0
I0428 19:43:23.963807 25332 net.cpp:408] pool0 <- conv0
I0428 19:43:23.963815 25332 net.cpp:382] pool0 -> pool0
I0428 19:43:23.963857 25332 net.cpp:124] Setting up pool0
I0428 19:43:23.963865 25332 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:43:23.963871 25332 net.cpp:139] Memory required for data: 890800
I0428 19:43:23.963876 25332 layer_factory.hpp:77] Creating layer conv1
I0428 19:43:23.963891 25332 net.cpp:86] Creating Layer conv1
I0428 19:43:23.963897 25332 net.cpp:408] conv1 <- pool0
I0428 19:43:23.963908 25332 net.cpp:382] conv1 -> conv1
I0428 19:43:23.965476 25332 net.cpp:124] Setting up conv1
I0428 19:43:23.965490 25332 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:43:23.965499 25332 net.cpp:139] Memory required for data: 1530800
I0428 19:43:23.965512 25332 layer_factory.hpp:77] Creating layer pool1
I0428 19:43:23.965522 25332 net.cpp:86] Creating Layer pool1
I0428 19:43:23.965530 25332 net.cpp:408] pool1 <- conv1
I0428 19:43:23.965539 25332 net.cpp:382] pool1 -> pool1
I0428 19:43:23.965600 25332 net.cpp:124] Setting up pool1
I0428 19:43:23.965608 25332 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:43:23.965613 25332 net.cpp:139] Memory required for data: 1690800
I0428 19:43:23.965621 25332 layer_factory.hpp:77] Creating layer ip1
I0428 19:43:23.965631 25332 net.cpp:86] Creating Layer ip1
I0428 19:43:23.965636 25332 net.cpp:408] ip1 <- pool1
I0428 19:43:23.965647 25332 net.cpp:382] ip1 -> ip1
I0428 19:43:23.965919 25332 net.cpp:124] Setting up ip1
I0428 19:43:23.965929 25332 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:23.965945 25332 net.cpp:139] Memory required for data: 1710800
I0428 19:43:23.965957 25332 layer_factory.hpp:77] Creating layer relu1
I0428 19:43:23.965966 25332 net.cpp:86] Creating Layer relu1
I0428 19:43:23.965972 25332 net.cpp:408] relu1 <- ip1
I0428 19:43:23.965979 25332 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:43:23.966199 25332 net.cpp:124] Setting up relu1
I0428 19:43:23.966210 25332 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:43:23.966215 25332 net.cpp:139] Memory required for data: 1730800
I0428 19:43:23.966235 25332 layer_factory.hpp:77] Creating layer ip2
I0428 19:43:23.966246 25332 net.cpp:86] Creating Layer ip2
I0428 19:43:23.966253 25332 net.cpp:408] ip2 <- ip1
I0428 19:43:23.966262 25332 net.cpp:382] ip2 -> ip2
I0428 19:43:23.966378 25332 net.cpp:124] Setting up ip2
I0428 19:43:23.966389 25332 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:23.966394 25332 net.cpp:139] Memory required for data: 1734800
I0428 19:43:23.966403 25332 layer_factory.hpp:77] Creating layer relu2
I0428 19:43:23.966410 25332 net.cpp:86] Creating Layer relu2
I0428 19:43:23.966415 25332 net.cpp:408] relu2 <- ip2
I0428 19:43:23.966424 25332 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:43:23.966585 25332 net.cpp:124] Setting up relu2
I0428 19:43:23.966595 25332 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:23.966600 25332 net.cpp:139] Memory required for data: 1738800
I0428 19:43:23.966605 25332 layer_factory.hpp:77] Creating layer ip3
I0428 19:43:23.966616 25332 net.cpp:86] Creating Layer ip3
I0428 19:43:23.966621 25332 net.cpp:408] ip3 <- ip2
I0428 19:43:23.966629 25332 net.cpp:382] ip3 -> ip3
I0428 19:43:23.966734 25332 net.cpp:124] Setting up ip3
I0428 19:43:23.966743 25332 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:23.966747 25332 net.cpp:139] Memory required for data: 1742800
I0428 19:43:23.966759 25332 layer_factory.hpp:77] Creating layer relu3
I0428 19:43:23.966769 25332 net.cpp:86] Creating Layer relu3
I0428 19:43:23.966776 25332 net.cpp:408] relu3 <- ip3
I0428 19:43:23.966784 25332 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:43:23.967568 25332 net.cpp:124] Setting up relu3
I0428 19:43:23.967584 25332 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:23.967589 25332 net.cpp:139] Memory required for data: 1746800
I0428 19:43:23.967594 25332 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:43:23.967602 25332 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:43:23.967607 25332 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:43:23.967614 25332 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:43:23.967623 25332 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:43:23.967667 25332 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:43:23.967676 25332 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:23.967682 25332 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:43:23.967686 25332 net.cpp:139] Memory required for data: 1754800
I0428 19:43:23.967691 25332 layer_factory.hpp:77] Creating layer accuracy
I0428 19:43:23.967700 25332 net.cpp:86] Creating Layer accuracy
I0428 19:43:23.967705 25332 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:43:23.967710 25332 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:43:23.967720 25332 net.cpp:382] accuracy -> accuracy
I0428 19:43:23.967741 25332 net.cpp:124] Setting up accuracy
I0428 19:43:23.967748 25332 net.cpp:131] Top shape: (1)
I0428 19:43:23.967753 25332 net.cpp:139] Memory required for data: 1754804
I0428 19:43:23.967758 25332 layer_factory.hpp:77] Creating layer loss
I0428 19:43:23.967766 25332 net.cpp:86] Creating Layer loss
I0428 19:43:23.967773 25332 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:43:23.967779 25332 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:43:23.967787 25332 net.cpp:382] loss -> loss
I0428 19:43:23.967795 25332 layer_factory.hpp:77] Creating layer loss
I0428 19:43:23.968062 25332 net.cpp:124] Setting up loss
I0428 19:43:23.968072 25332 net.cpp:131] Top shape: (1)
I0428 19:43:23.968077 25332 net.cpp:134]     with loss weight 1
I0428 19:43:23.968086 25332 net.cpp:139] Memory required for data: 1754808
I0428 19:43:23.968102 25332 net.cpp:200] loss needs backward computation.
I0428 19:43:23.968109 25332 net.cpp:202] accuracy does not need backward computation.
I0428 19:43:23.968116 25332 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:43:23.968120 25332 net.cpp:200] relu3 needs backward computation.
I0428 19:43:23.968125 25332 net.cpp:200] ip3 needs backward computation.
I0428 19:43:23.968130 25332 net.cpp:200] relu2 needs backward computation.
I0428 19:43:23.968152 25332 net.cpp:200] ip2 needs backward computation.
I0428 19:43:23.968156 25332 net.cpp:200] relu1 needs backward computation.
I0428 19:43:23.968160 25332 net.cpp:200] ip1 needs backward computation.
I0428 19:43:23.968165 25332 net.cpp:200] pool1 needs backward computation.
I0428 19:43:23.968170 25332 net.cpp:200] conv1 needs backward computation.
I0428 19:43:23.968176 25332 net.cpp:200] pool0 needs backward computation.
I0428 19:43:23.968181 25332 net.cpp:200] conv0 needs backward computation.
I0428 19:43:23.968188 25332 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:43:23.968194 25332 net.cpp:202] mnist does not need backward computation.
I0428 19:43:23.968199 25332 net.cpp:244] This network produces output accuracy
I0428 19:43:23.968204 25332 net.cpp:244] This network produces output loss
I0428 19:43:23.968222 25332 net.cpp:257] Network initialization done.
I0428 19:43:23.968271 25332 solver.cpp:56] Solver scaffolding done.
I0428 19:43:23.968646 25332 caffe.cpp:248] Starting Optimization
I0428 19:43:23.968652 25332 solver.cpp:273] Solving LeNet
I0428 19:43:23.968657 25332 solver.cpp:274] Learning Rate Policy: inv
I0428 19:43:23.969466 25332 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:43:23.973266 25332 blocking_queue.cpp:49] Waiting for data
I0428 19:43:24.045928 25342 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:24.046365 25332 solver.cpp:398]     Test net output #0: accuracy = 0.0965
I0428 19:43:24.046385 25332 solver.cpp:398]     Test net output #1: loss = 2.31724 (* 1 = 2.31724 loss)
I0428 19:43:24.047824 25332 solver.cpp:219] Iteration 0 (0 iter/s, 0.0791368s/100 iters), loss = 2.32669
I0428 19:43:24.047852 25332 solver.cpp:238]     Train net output #0: loss = 2.32669 (* 1 = 2.32669 loss)
I0428 19:43:24.047878 25332 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:43:24.138283 25332 solver.cpp:219] Iteration 100 (1105.95 iter/s, 0.0904202s/100 iters), loss = 1.02127
I0428 19:43:24.138309 25332 solver.cpp:238]     Train net output #0: loss = 1.02127 (* 1 = 1.02127 loss)
I0428 19:43:24.138319 25332 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:43:24.228001 25332 solver.cpp:219] Iteration 200 (1115.01 iter/s, 0.089685s/100 iters), loss = 0.919461
I0428 19:43:24.228027 25332 solver.cpp:238]     Train net output #0: loss = 0.919461 (* 1 = 0.919461 loss)
I0428 19:43:24.228052 25332 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:43:24.317553 25332 solver.cpp:219] Iteration 300 (1117.12 iter/s, 0.089516s/100 iters), loss = 0.946092
I0428 19:43:24.317582 25332 solver.cpp:238]     Train net output #0: loss = 0.946092 (* 1 = 0.946092 loss)
I0428 19:43:24.317591 25332 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:43:24.406116 25332 solver.cpp:219] Iteration 400 (1129.59 iter/s, 0.0885276s/100 iters), loss = 0.615113
I0428 19:43:24.406142 25332 solver.cpp:238]     Train net output #0: loss = 0.615113 (* 1 = 0.615113 loss)
I0428 19:43:24.406167 25332 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:43:24.508723 25332 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:43:24.583787 25342 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:24.584288 25332 solver.cpp:398]     Test net output #0: accuracy = 0.8494
I0428 19:43:24.584314 25332 solver.cpp:398]     Test net output #1: loss = 0.45443 (* 1 = 0.45443 loss)
I0428 19:43:24.585306 25332 solver.cpp:219] Iteration 500 (558.192 iter/s, 0.17915s/100 iters), loss = 0.424233
I0428 19:43:24.585338 25332 solver.cpp:238]     Train net output #0: loss = 0.424233 (* 1 = 0.424233 loss)
I0428 19:43:24.585367 25332 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:43:24.676426 25332 solver.cpp:219] Iteration 600 (1097.98 iter/s, 0.0910766s/100 iters), loss = 0.299341
I0428 19:43:24.676457 25332 solver.cpp:238]     Train net output #0: loss = 0.299341 (* 1 = 0.299341 loss)
I0428 19:43:24.676465 25332 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:43:24.766820 25332 solver.cpp:219] Iteration 700 (1106.79 iter/s, 0.0903516s/100 iters), loss = 0.622776
I0428 19:43:24.766851 25332 solver.cpp:238]     Train net output #0: loss = 0.622776 (* 1 = 0.622776 loss)
I0428 19:43:24.766860 25332 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:43:24.858242 25332 solver.cpp:219] Iteration 800 (1094.35 iter/s, 0.0913787s/100 iters), loss = 0.456523
I0428 19:43:24.858273 25332 solver.cpp:238]     Train net output #0: loss = 0.456523 (* 1 = 0.456523 loss)
I0428 19:43:24.858280 25332 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:43:24.949687 25332 solver.cpp:219] Iteration 900 (1094.05 iter/s, 0.0914033s/100 iters), loss = 0.477392
I0428 19:43:24.949717 25332 solver.cpp:238]     Train net output #0: loss = 0.477392 (* 1 = 0.477392 loss)
I0428 19:43:24.949724 25332 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:43:24.979786 25341 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:25.038930 25332 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:43:25.040068 25332 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:43:25.040709 25332 solver.cpp:311] Iteration 1000, loss = 0.501143
I0428 19:43:25.040725 25332 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:43:25.093364 25342 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:43:25.093839 25332 solver.cpp:398]     Test net output #0: accuracy = 0.8666
I0428 19:43:25.093860 25332 solver.cpp:398]     Test net output #1: loss = 0.354115 (* 1 = 0.354115 loss)
I0428 19:43:25.093866 25332 solver.cpp:316] Optimization Done.
I0428 19:43:25.093869 25332 caffe.cpp:259] Optimization Done.
