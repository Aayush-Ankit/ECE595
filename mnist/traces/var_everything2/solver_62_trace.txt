I0428 19:29:32.801049 22051 caffe.cpp:218] Using GPUs 0
I0428 19:29:32.840697 22051 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:29:33.294153 22051 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test62.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:29:33.294297 22051 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test62.prototxt
I0428 19:29:33.294600 22051 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:29:33.294618 22051 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:29:33.294699 22051 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:33.294785 22051 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:33.294893 22051 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:29:33.294919 22051 net.cpp:86] Creating Layer mnist
I0428 19:29:33.294931 22051 net.cpp:382] mnist -> data
I0428 19:29:33.294957 22051 net.cpp:382] mnist -> label
I0428 19:29:33.296062 22051 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:29:33.298302 22051 net.cpp:124] Setting up mnist
I0428 19:29:33.298318 22051 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:29:33.298326 22051 net.cpp:131] Top shape: 64 (64)
I0428 19:29:33.298331 22051 net.cpp:139] Memory required for data: 200960
I0428 19:29:33.298341 22051 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:33.298369 22051 net.cpp:86] Creating Layer conv0
I0428 19:29:33.298377 22051 net.cpp:408] conv0 <- data
I0428 19:29:33.298393 22051 net.cpp:382] conv0 -> conv0
I0428 19:29:33.531023 22051 net.cpp:124] Setting up conv0
I0428 19:29:33.531050 22051 net.cpp:131] Top shape: 64 2 24 24 (73728)
I0428 19:29:33.531055 22051 net.cpp:139] Memory required for data: 495872
I0428 19:29:33.531091 22051 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:33.531108 22051 net.cpp:86] Creating Layer pool0
I0428 19:29:33.531131 22051 net.cpp:408] pool0 <- conv0
I0428 19:29:33.531141 22051 net.cpp:382] pool0 -> pool0
I0428 19:29:33.531198 22051 net.cpp:124] Setting up pool0
I0428 19:29:33.531206 22051 net.cpp:131] Top shape: 64 2 12 12 (18432)
I0428 19:29:33.531211 22051 net.cpp:139] Memory required for data: 569600
I0428 19:29:33.531216 22051 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:33.531227 22051 net.cpp:86] Creating Layer ip1
I0428 19:29:33.531235 22051 net.cpp:408] ip1 <- pool0
I0428 19:29:33.531244 22051 net.cpp:382] ip1 -> ip1
I0428 19:29:33.532351 22051 net.cpp:124] Setting up ip1
I0428 19:29:33.532366 22051 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:33.532371 22051 net.cpp:139] Memory required for data: 576000
I0428 19:29:33.532384 22051 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:33.532409 22051 net.cpp:86] Creating Layer relu1
I0428 19:29:33.532418 22051 net.cpp:408] relu1 <- ip1
I0428 19:29:33.532426 22051 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:33.532599 22051 net.cpp:124] Setting up relu1
I0428 19:29:33.532624 22051 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:29:33.532629 22051 net.cpp:139] Memory required for data: 582400
I0428 19:29:33.532634 22051 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:33.532644 22051 net.cpp:86] Creating Layer ip2
I0428 19:29:33.532650 22051 net.cpp:408] ip2 <- ip1
I0428 19:29:33.532658 22051 net.cpp:382] ip2 -> ip2
I0428 19:29:33.532752 22051 net.cpp:124] Setting up ip2
I0428 19:29:33.532760 22051 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:33.532765 22051 net.cpp:139] Memory required for data: 584960
I0428 19:29:33.532793 22051 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:33.532801 22051 net.cpp:86] Creating Layer relu2
I0428 19:29:33.532806 22051 net.cpp:408] relu2 <- ip2
I0428 19:29:33.532838 22051 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:33.533736 22051 net.cpp:124] Setting up relu2
I0428 19:29:33.533751 22051 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:33.533757 22051 net.cpp:139] Memory required for data: 587520
I0428 19:29:33.533763 22051 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:33.533774 22051 net.cpp:86] Creating Layer ip3
I0428 19:29:33.533780 22051 net.cpp:408] ip3 <- ip2
I0428 19:29:33.533789 22051 net.cpp:382] ip3 -> ip3
I0428 19:29:33.533888 22051 net.cpp:124] Setting up ip3
I0428 19:29:33.533898 22051 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:33.533903 22051 net.cpp:139] Memory required for data: 590080
I0428 19:29:33.533912 22051 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:33.533922 22051 net.cpp:86] Creating Layer relu3
I0428 19:29:33.533928 22051 net.cpp:408] relu3 <- ip3
I0428 19:29:33.533936 22051 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:33.534121 22051 net.cpp:124] Setting up relu3
I0428 19:29:33.534129 22051 net.cpp:131] Top shape: 64 10 (640)
I0428 19:29:33.534134 22051 net.cpp:139] Memory required for data: 592640
I0428 19:29:33.534139 22051 layer_factory.hpp:77] Creating layer loss
I0428 19:29:33.534147 22051 net.cpp:86] Creating Layer loss
I0428 19:29:33.534152 22051 net.cpp:408] loss <- ip3
I0428 19:29:33.534158 22051 net.cpp:408] loss <- label
I0428 19:29:33.534167 22051 net.cpp:382] loss -> loss
I0428 19:29:33.534188 22051 layer_factory.hpp:77] Creating layer loss
I0428 19:29:33.534466 22051 net.cpp:124] Setting up loss
I0428 19:29:33.534476 22051 net.cpp:131] Top shape: (1)
I0428 19:29:33.534482 22051 net.cpp:134]     with loss weight 1
I0428 19:29:33.534502 22051 net.cpp:139] Memory required for data: 592644
I0428 19:29:33.534508 22051 net.cpp:200] loss needs backward computation.
I0428 19:29:33.534514 22051 net.cpp:200] relu3 needs backward computation.
I0428 19:29:33.534519 22051 net.cpp:200] ip3 needs backward computation.
I0428 19:29:33.534524 22051 net.cpp:200] relu2 needs backward computation.
I0428 19:29:33.534529 22051 net.cpp:200] ip2 needs backward computation.
I0428 19:29:33.534535 22051 net.cpp:200] relu1 needs backward computation.
I0428 19:29:33.534540 22051 net.cpp:200] ip1 needs backward computation.
I0428 19:29:33.534559 22051 net.cpp:200] pool0 needs backward computation.
I0428 19:29:33.534579 22051 net.cpp:200] conv0 needs backward computation.
I0428 19:29:33.534585 22051 net.cpp:202] mnist does not need backward computation.
I0428 19:29:33.534590 22051 net.cpp:244] This network produces output loss
I0428 19:29:33.534603 22051 net.cpp:257] Network initialization done.
I0428 19:29:33.534955 22051 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test62.prototxt
I0428 19:29:33.534988 22051 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:29:33.535076 22051 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 2
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:29:33.535212 22051 layer_factory.hpp:77] Creating layer mnist
I0428 19:29:33.535267 22051 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:29:33.535284 22051 net.cpp:86] Creating Layer mnist
I0428 19:29:33.535291 22051 net.cpp:382] mnist -> data
I0428 19:29:33.535302 22051 net.cpp:382] mnist -> label
I0428 19:29:33.535424 22051 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:29:33.537724 22051 net.cpp:124] Setting up mnist
I0428 19:29:33.537755 22051 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:29:33.537761 22051 net.cpp:131] Top shape: 100 (100)
I0428 19:29:33.537781 22051 net.cpp:139] Memory required for data: 314000
I0428 19:29:33.537788 22051 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:29:33.537797 22051 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:29:33.537803 22051 net.cpp:408] label_mnist_1_split <- label
I0428 19:29:33.537812 22051 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:29:33.537822 22051 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:29:33.537905 22051 net.cpp:124] Setting up label_mnist_1_split
I0428 19:29:33.537914 22051 net.cpp:131] Top shape: 100 (100)
I0428 19:29:33.537920 22051 net.cpp:131] Top shape: 100 (100)
I0428 19:29:33.537925 22051 net.cpp:139] Memory required for data: 314800
I0428 19:29:33.537941 22051 layer_factory.hpp:77] Creating layer conv0
I0428 19:29:33.537956 22051 net.cpp:86] Creating Layer conv0
I0428 19:29:33.537963 22051 net.cpp:408] conv0 <- data
I0428 19:29:33.537972 22051 net.cpp:382] conv0 -> conv0
I0428 19:29:33.539639 22051 net.cpp:124] Setting up conv0
I0428 19:29:33.539654 22051 net.cpp:131] Top shape: 100 2 24 24 (115200)
I0428 19:29:33.539660 22051 net.cpp:139] Memory required for data: 775600
I0428 19:29:33.539675 22051 layer_factory.hpp:77] Creating layer pool0
I0428 19:29:33.539686 22051 net.cpp:86] Creating Layer pool0
I0428 19:29:33.539693 22051 net.cpp:408] pool0 <- conv0
I0428 19:29:33.539701 22051 net.cpp:382] pool0 -> pool0
I0428 19:29:33.539746 22051 net.cpp:124] Setting up pool0
I0428 19:29:33.539754 22051 net.cpp:131] Top shape: 100 2 12 12 (28800)
I0428 19:29:33.539759 22051 net.cpp:139] Memory required for data: 890800
I0428 19:29:33.539765 22051 layer_factory.hpp:77] Creating layer ip1
I0428 19:29:33.539775 22051 net.cpp:86] Creating Layer ip1
I0428 19:29:33.539782 22051 net.cpp:408] ip1 <- pool0
I0428 19:29:33.539790 22051 net.cpp:382] ip1 -> ip1
I0428 19:29:33.539942 22051 net.cpp:124] Setting up ip1
I0428 19:29:33.539961 22051 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:33.539966 22051 net.cpp:139] Memory required for data: 900800
I0428 19:29:33.539978 22051 layer_factory.hpp:77] Creating layer relu1
I0428 19:29:33.539986 22051 net.cpp:86] Creating Layer relu1
I0428 19:29:33.539993 22051 net.cpp:408] relu1 <- ip1
I0428 19:29:33.539999 22051 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:29:33.540241 22051 net.cpp:124] Setting up relu1
I0428 19:29:33.540262 22051 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:29:33.540268 22051 net.cpp:139] Memory required for data: 910800
I0428 19:29:33.540273 22051 layer_factory.hpp:77] Creating layer ip2
I0428 19:29:33.540283 22051 net.cpp:86] Creating Layer ip2
I0428 19:29:33.540289 22051 net.cpp:408] ip2 <- ip1
I0428 19:29:33.540297 22051 net.cpp:382] ip2 -> ip2
I0428 19:29:33.540443 22051 net.cpp:124] Setting up ip2
I0428 19:29:33.540452 22051 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:33.540457 22051 net.cpp:139] Memory required for data: 914800
I0428 19:29:33.540491 22051 layer_factory.hpp:77] Creating layer relu2
I0428 19:29:33.540501 22051 net.cpp:86] Creating Layer relu2
I0428 19:29:33.540508 22051 net.cpp:408] relu2 <- ip2
I0428 19:29:33.540516 22051 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:29:33.541461 22051 net.cpp:124] Setting up relu2
I0428 19:29:33.541491 22051 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:33.541497 22051 net.cpp:139] Memory required for data: 918800
I0428 19:29:33.541504 22051 layer_factory.hpp:77] Creating layer ip3
I0428 19:29:33.541517 22051 net.cpp:86] Creating Layer ip3
I0428 19:29:33.541522 22051 net.cpp:408] ip3 <- ip2
I0428 19:29:33.541533 22051 net.cpp:382] ip3 -> ip3
I0428 19:29:33.541682 22051 net.cpp:124] Setting up ip3
I0428 19:29:33.541692 22051 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:33.541697 22051 net.cpp:139] Memory required for data: 922800
I0428 19:29:33.541720 22051 layer_factory.hpp:77] Creating layer relu3
I0428 19:29:33.541728 22051 net.cpp:86] Creating Layer relu3
I0428 19:29:33.541733 22051 net.cpp:408] relu3 <- ip3
I0428 19:29:33.541740 22051 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:29:33.541918 22051 net.cpp:124] Setting up relu3
I0428 19:29:33.541929 22051 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:33.541947 22051 net.cpp:139] Memory required for data: 926800
I0428 19:29:33.541954 22051 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:29:33.541962 22051 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:29:33.541968 22051 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:29:33.541977 22051 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:29:33.541988 22051 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:29:33.542031 22051 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:29:33.542038 22051 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:33.542045 22051 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:29:33.542062 22051 net.cpp:139] Memory required for data: 934800
I0428 19:29:33.542069 22051 layer_factory.hpp:77] Creating layer accuracy
I0428 19:29:33.542078 22051 net.cpp:86] Creating Layer accuracy
I0428 19:29:33.542083 22051 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:29:33.542091 22051 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:29:33.542099 22051 net.cpp:382] accuracy -> accuracy
I0428 19:29:33.542111 22051 net.cpp:124] Setting up accuracy
I0428 19:29:33.542120 22051 net.cpp:131] Top shape: (1)
I0428 19:29:33.542125 22051 net.cpp:139] Memory required for data: 934804
I0428 19:29:33.542130 22051 layer_factory.hpp:77] Creating layer loss
I0428 19:29:33.542137 22051 net.cpp:86] Creating Layer loss
I0428 19:29:33.542143 22051 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:29:33.542151 22051 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:29:33.542158 22051 net.cpp:382] loss -> loss
I0428 19:29:33.542183 22051 layer_factory.hpp:77] Creating layer loss
I0428 19:29:33.542438 22051 net.cpp:124] Setting up loss
I0428 19:29:33.542448 22051 net.cpp:131] Top shape: (1)
I0428 19:29:33.542454 22051 net.cpp:134]     with loss weight 1
I0428 19:29:33.542462 22051 net.cpp:139] Memory required for data: 934808
I0428 19:29:33.542469 22051 net.cpp:200] loss needs backward computation.
I0428 19:29:33.542474 22051 net.cpp:202] accuracy does not need backward computation.
I0428 19:29:33.542481 22051 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:29:33.542486 22051 net.cpp:200] relu3 needs backward computation.
I0428 19:29:33.542491 22051 net.cpp:200] ip3 needs backward computation.
I0428 19:29:33.542496 22051 net.cpp:200] relu2 needs backward computation.
I0428 19:29:33.542501 22051 net.cpp:200] ip2 needs backward computation.
I0428 19:29:33.542506 22051 net.cpp:200] relu1 needs backward computation.
I0428 19:29:33.542511 22051 net.cpp:200] ip1 needs backward computation.
I0428 19:29:33.542517 22051 net.cpp:200] pool0 needs backward computation.
I0428 19:29:33.542522 22051 net.cpp:200] conv0 needs backward computation.
I0428 19:29:33.542528 22051 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:29:33.542534 22051 net.cpp:202] mnist does not need backward computation.
I0428 19:29:33.542539 22051 net.cpp:244] This network produces output accuracy
I0428 19:29:33.542544 22051 net.cpp:244] This network produces output loss
I0428 19:29:33.542559 22051 net.cpp:257] Network initialization done.
I0428 19:29:33.542601 22051 solver.cpp:56] Solver scaffolding done.
I0428 19:29:33.542902 22051 caffe.cpp:248] Starting Optimization
I0428 19:29:33.542909 22051 solver.cpp:273] Solving LeNet
I0428 19:29:33.542924 22051 solver.cpp:274] Learning Rate Policy: inv
I0428 19:29:33.543067 22051 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:29:33.546624 22051 blocking_queue.cpp:49] Waiting for data
I0428 19:29:33.619215 22058 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:33.620021 22051 solver.cpp:398]     Test net output #0: accuracy = 0.1005
I0428 19:29:33.620062 22051 solver.cpp:398]     Test net output #1: loss = 2.30177 (* 1 = 2.30177 loss)
I0428 19:29:33.622655 22051 solver.cpp:219] Iteration 0 (0 iter/s, 0.0796989s/100 iters), loss = 2.3032
I0428 19:29:33.622700 22051 solver.cpp:238]     Train net output #0: loss = 2.3032 (* 1 = 2.3032 loss)
I0428 19:29:33.622720 22051 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:29:33.698037 22051 solver.cpp:219] Iteration 100 (1327.52 iter/s, 0.0753285s/100 iters), loss = 1.53835
I0428 19:29:33.698074 22051 solver.cpp:238]     Train net output #0: loss = 1.53835 (* 1 = 1.53835 loss)
I0428 19:29:33.698084 22051 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:29:33.760661 22051 solver.cpp:219] Iteration 200 (1597.96 iter/s, 0.0625798s/100 iters), loss = 1.04182
I0428 19:29:33.760690 22051 solver.cpp:238]     Train net output #0: loss = 1.04182 (* 1 = 1.04182 loss)
I0428 19:29:33.760699 22051 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:29:33.819661 22051 solver.cpp:219] Iteration 300 (1695.98 iter/s, 0.0589629s/100 iters), loss = 0.883306
I0428 19:29:33.819710 22051 solver.cpp:238]     Train net output #0: loss = 0.883306 (* 1 = 0.883306 loss)
I0428 19:29:33.819721 22051 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:29:33.878451 22051 solver.cpp:219] Iteration 400 (1702.55 iter/s, 0.0587355s/100 iters), loss = 0.952667
I0428 19:29:33.878479 22051 solver.cpp:238]     Train net output #0: loss = 0.952667 (* 1 = 0.952667 loss)
I0428 19:29:33.878486 22051 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:29:33.936630 22051 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:29:33.988993 22058 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:33.989421 22051 solver.cpp:398]     Test net output #0: accuracy = 0.7042
I0428 19:29:33.989444 22051 solver.cpp:398]     Test net output #1: loss = 0.961357 (* 1 = 0.961357 loss)
I0428 19:29:33.990105 22051 solver.cpp:219] Iteration 500 (895.929 iter/s, 0.111616s/100 iters), loss = 1.04114
I0428 19:29:33.990133 22051 solver.cpp:238]     Train net output #0: loss = 1.04114 (* 1 = 1.04114 loss)
I0428 19:29:33.990146 22051 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:29:34.054476 22051 solver.cpp:219] Iteration 600 (1554.42 iter/s, 0.0643328s/100 iters), loss = 0.871247
I0428 19:29:34.054514 22051 solver.cpp:238]     Train net output #0: loss = 0.871247 (* 1 = 0.871247 loss)
I0428 19:29:34.054523 22051 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:29:34.115598 22051 solver.cpp:219] Iteration 700 (1637.28 iter/s, 0.0610768s/100 iters), loss = 0.780336
I0428 19:29:34.115628 22051 solver.cpp:238]     Train net output #0: loss = 0.780336 (* 1 = 0.780336 loss)
I0428 19:29:34.115634 22051 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:29:34.175920 22051 solver.cpp:219] Iteration 800 (1658.81 iter/s, 0.060284s/100 iters), loss = 0.742003
I0428 19:29:34.175948 22051 solver.cpp:238]     Train net output #0: loss = 0.742003 (* 1 = 0.742003 loss)
I0428 19:29:34.175956 22051 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:29:34.238335 22051 solver.cpp:219] Iteration 900 (1603.13 iter/s, 0.062378s/100 iters), loss = 0.997042
I0428 19:29:34.238370 22051 solver.cpp:238]     Train net output #0: loss = 0.997042 (* 1 = 0.997042 loss)
I0428 19:29:34.238379 22051 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:29:34.259618 22057 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:34.299335 22051 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:29:34.300071 22051 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:29:34.300494 22051 solver.cpp:311] Iteration 1000, loss = 0.712448
I0428 19:29:34.300513 22051 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:29:34.375056 22058 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:29:34.375493 22051 solver.cpp:398]     Test net output #0: accuracy = 0.741
I0428 19:29:34.375515 22051 solver.cpp:398]     Test net output #1: loss = 0.673938 (* 1 = 0.673938 loss)
I0428 19:29:34.375521 22051 solver.cpp:316] Optimization Done.
I0428 19:29:34.375525 22051 caffe.cpp:259] Optimization Done.
