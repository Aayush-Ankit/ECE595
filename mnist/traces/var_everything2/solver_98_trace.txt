I0428 19:30:40.351373 22355 caffe.cpp:218] Using GPUs 0
I0428 19:30:40.391186 22355 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:30:40.838613 22355 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test98.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:30:40.838752 22355 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test98.prototxt
I0428 19:30:40.839030 22355 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:30:40.839046 22355 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:30:40.839117 22355 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:40.839190 22355 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:40.839310 22355 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:30:40.839336 22355 net.cpp:86] Creating Layer mnist
I0428 19:30:40.839345 22355 net.cpp:382] mnist -> data
I0428 19:30:40.839370 22355 net.cpp:382] mnist -> label
I0428 19:30:40.840452 22355 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:30:40.842741 22355 net.cpp:124] Setting up mnist
I0428 19:30:40.842757 22355 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:30:40.842766 22355 net.cpp:131] Top shape: 64 (64)
I0428 19:30:40.842772 22355 net.cpp:139] Memory required for data: 200960
I0428 19:30:40.842780 22355 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:40.842799 22355 net.cpp:86] Creating Layer conv0
I0428 19:30:40.842823 22355 net.cpp:408] conv0 <- data
I0428 19:30:40.842836 22355 net.cpp:382] conv0 -> conv0
I0428 19:30:41.070122 22355 net.cpp:124] Setting up conv0
I0428 19:30:41.070152 22355 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:30:41.070157 22355 net.cpp:139] Memory required for data: 938240
I0428 19:30:41.070176 22355 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:41.070194 22355 net.cpp:86] Creating Layer pool0
I0428 19:30:41.070216 22355 net.cpp:408] pool0 <- conv0
I0428 19:30:41.070226 22355 net.cpp:382] pool0 -> pool0
I0428 19:30:41.070278 22355 net.cpp:124] Setting up pool0
I0428 19:30:41.070287 22355 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:30:41.070292 22355 net.cpp:139] Memory required for data: 1122560
I0428 19:30:41.070297 22355 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:41.070307 22355 net.cpp:86] Creating Layer ip1
I0428 19:30:41.070317 22355 net.cpp:408] ip1 <- pool0
I0428 19:30:41.070324 22355 net.cpp:382] ip1 -> ip1
I0428 19:30:41.071313 22355 net.cpp:124] Setting up ip1
I0428 19:30:41.071328 22355 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:41.071334 22355 net.cpp:139] Memory required for data: 1125120
I0428 19:30:41.071346 22355 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:41.071357 22355 net.cpp:86] Creating Layer relu1
I0428 19:30:41.071368 22355 net.cpp:408] relu1 <- ip1
I0428 19:30:41.071377 22355 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:41.071568 22355 net.cpp:124] Setting up relu1
I0428 19:30:41.071579 22355 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:41.071584 22355 net.cpp:139] Memory required for data: 1127680
I0428 19:30:41.071589 22355 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:41.071599 22355 net.cpp:86] Creating Layer ip2
I0428 19:30:41.071604 22355 net.cpp:408] ip2 <- ip1
I0428 19:30:41.071612 22355 net.cpp:382] ip2 -> ip2
I0428 19:30:41.071707 22355 net.cpp:124] Setting up ip2
I0428 19:30:41.071717 22355 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:41.071720 22355 net.cpp:139] Memory required for data: 1140480
I0428 19:30:41.071732 22355 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:41.071740 22355 net.cpp:86] Creating Layer relu2
I0428 19:30:41.071748 22355 net.cpp:408] relu2 <- ip2
I0428 19:30:41.071754 22355 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:41.072515 22355 net.cpp:124] Setting up relu2
I0428 19:30:41.072527 22355 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:30:41.072533 22355 net.cpp:139] Memory required for data: 1153280
I0428 19:30:41.072538 22355 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:41.072548 22355 net.cpp:86] Creating Layer ip3
I0428 19:30:41.072554 22355 net.cpp:408] ip3 <- ip2
I0428 19:30:41.072562 22355 net.cpp:382] ip3 -> ip3
I0428 19:30:41.072659 22355 net.cpp:124] Setting up ip3
I0428 19:30:41.072669 22355 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:41.072674 22355 net.cpp:139] Memory required for data: 1155840
I0428 19:30:41.072681 22355 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:41.072691 22355 net.cpp:86] Creating Layer relu3
I0428 19:30:41.072697 22355 net.cpp:408] relu3 <- ip3
I0428 19:30:41.072721 22355 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:41.072891 22355 net.cpp:124] Setting up relu3
I0428 19:30:41.072902 22355 net.cpp:131] Top shape: 64 10 (640)
I0428 19:30:41.072907 22355 net.cpp:139] Memory required for data: 1158400
I0428 19:30:41.072912 22355 layer_factory.hpp:77] Creating layer loss
I0428 19:30:41.072921 22355 net.cpp:86] Creating Layer loss
I0428 19:30:41.072926 22355 net.cpp:408] loss <- ip3
I0428 19:30:41.072933 22355 net.cpp:408] loss <- label
I0428 19:30:41.072942 22355 net.cpp:382] loss -> loss
I0428 19:30:41.072966 22355 layer_factory.hpp:77] Creating layer loss
I0428 19:30:41.073252 22355 net.cpp:124] Setting up loss
I0428 19:30:41.073264 22355 net.cpp:131] Top shape: (1)
I0428 19:30:41.073271 22355 net.cpp:134]     with loss weight 1
I0428 19:30:41.073293 22355 net.cpp:139] Memory required for data: 1158404
I0428 19:30:41.073300 22355 net.cpp:200] loss needs backward computation.
I0428 19:30:41.073307 22355 net.cpp:200] relu3 needs backward computation.
I0428 19:30:41.073313 22355 net.cpp:200] ip3 needs backward computation.
I0428 19:30:41.073319 22355 net.cpp:200] relu2 needs backward computation.
I0428 19:30:41.073325 22355 net.cpp:200] ip2 needs backward computation.
I0428 19:30:41.073330 22355 net.cpp:200] relu1 needs backward computation.
I0428 19:30:41.073336 22355 net.cpp:200] ip1 needs backward computation.
I0428 19:30:41.073355 22355 net.cpp:200] pool0 needs backward computation.
I0428 19:30:41.073361 22355 net.cpp:200] conv0 needs backward computation.
I0428 19:30:41.073367 22355 net.cpp:202] mnist does not need backward computation.
I0428 19:30:41.073374 22355 net.cpp:244] This network produces output loss
I0428 19:30:41.073387 22355 net.cpp:257] Network initialization done.
I0428 19:30:41.073700 22355 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test98.prototxt
I0428 19:30:41.073736 22355 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:30:41.073880 22355 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:30:41.073972 22355 layer_factory.hpp:77] Creating layer mnist
I0428 19:30:41.074030 22355 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:30:41.074064 22355 net.cpp:86] Creating Layer mnist
I0428 19:30:41.074070 22355 net.cpp:382] mnist -> data
I0428 19:30:41.074084 22355 net.cpp:382] mnist -> label
I0428 19:30:41.074200 22355 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:30:41.076311 22355 net.cpp:124] Setting up mnist
I0428 19:30:41.076326 22355 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:30:41.076335 22355 net.cpp:131] Top shape: 100 (100)
I0428 19:30:41.076340 22355 net.cpp:139] Memory required for data: 314000
I0428 19:30:41.076346 22355 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:30:41.076361 22355 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:30:41.076367 22355 net.cpp:408] label_mnist_1_split <- label
I0428 19:30:41.076377 22355 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:30:41.076388 22355 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:30:41.076457 22355 net.cpp:124] Setting up label_mnist_1_split
I0428 19:30:41.076465 22355 net.cpp:131] Top shape: 100 (100)
I0428 19:30:41.076472 22355 net.cpp:131] Top shape: 100 (100)
I0428 19:30:41.076478 22355 net.cpp:139] Memory required for data: 314800
I0428 19:30:41.076493 22355 layer_factory.hpp:77] Creating layer conv0
I0428 19:30:41.076509 22355 net.cpp:86] Creating Layer conv0
I0428 19:30:41.076516 22355 net.cpp:408] conv0 <- data
I0428 19:30:41.076531 22355 net.cpp:382] conv0 -> conv0
I0428 19:30:41.078251 22355 net.cpp:124] Setting up conv0
I0428 19:30:41.078268 22355 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:30:41.078274 22355 net.cpp:139] Memory required for data: 1466800
I0428 19:30:41.078290 22355 layer_factory.hpp:77] Creating layer pool0
I0428 19:30:41.078302 22355 net.cpp:86] Creating Layer pool0
I0428 19:30:41.078310 22355 net.cpp:408] pool0 <- conv0
I0428 19:30:41.078320 22355 net.cpp:382] pool0 -> pool0
I0428 19:30:41.078361 22355 net.cpp:124] Setting up pool0
I0428 19:30:41.078372 22355 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:30:41.078377 22355 net.cpp:139] Memory required for data: 1754800
I0428 19:30:41.078382 22355 layer_factory.hpp:77] Creating layer ip1
I0428 19:30:41.078392 22355 net.cpp:86] Creating Layer ip1
I0428 19:30:41.078397 22355 net.cpp:408] ip1 <- pool0
I0428 19:30:41.078408 22355 net.cpp:382] ip1 -> ip1
I0428 19:30:41.078565 22355 net.cpp:124] Setting up ip1
I0428 19:30:41.078574 22355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:41.078579 22355 net.cpp:139] Memory required for data: 1758800
I0428 19:30:41.078590 22355 layer_factory.hpp:77] Creating layer relu1
I0428 19:30:41.078600 22355 net.cpp:86] Creating Layer relu1
I0428 19:30:41.078606 22355 net.cpp:408] relu1 <- ip1
I0428 19:30:41.078613 22355 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:30:41.078871 22355 net.cpp:124] Setting up relu1
I0428 19:30:41.078882 22355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:41.078887 22355 net.cpp:139] Memory required for data: 1762800
I0428 19:30:41.078892 22355 layer_factory.hpp:77] Creating layer ip2
I0428 19:30:41.078903 22355 net.cpp:86] Creating Layer ip2
I0428 19:30:41.078909 22355 net.cpp:408] ip2 <- ip1
I0428 19:30:41.078918 22355 net.cpp:382] ip2 -> ip2
I0428 19:30:41.079071 22355 net.cpp:124] Setting up ip2
I0428 19:30:41.079080 22355 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:41.079085 22355 net.cpp:139] Memory required for data: 1782800
I0428 19:30:41.079099 22355 layer_factory.hpp:77] Creating layer relu2
I0428 19:30:41.079107 22355 net.cpp:86] Creating Layer relu2
I0428 19:30:41.079114 22355 net.cpp:408] relu2 <- ip2
I0428 19:30:41.079125 22355 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:30:41.079943 22355 net.cpp:124] Setting up relu2
I0428 19:30:41.079957 22355 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:30:41.079963 22355 net.cpp:139] Memory required for data: 1802800
I0428 19:30:41.079969 22355 layer_factory.hpp:77] Creating layer ip3
I0428 19:30:41.079984 22355 net.cpp:86] Creating Layer ip3
I0428 19:30:41.079991 22355 net.cpp:408] ip3 <- ip2
I0428 19:30:41.080015 22355 net.cpp:382] ip3 -> ip3
I0428 19:30:41.080176 22355 net.cpp:124] Setting up ip3
I0428 19:30:41.080188 22355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:41.080193 22355 net.cpp:139] Memory required for data: 1806800
I0428 19:30:41.080202 22355 layer_factory.hpp:77] Creating layer relu3
I0428 19:30:41.080211 22355 net.cpp:86] Creating Layer relu3
I0428 19:30:41.080217 22355 net.cpp:408] relu3 <- ip3
I0428 19:30:41.080225 22355 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:30:41.080391 22355 net.cpp:124] Setting up relu3
I0428 19:30:41.080402 22355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:41.080409 22355 net.cpp:139] Memory required for data: 1810800
I0428 19:30:41.080413 22355 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:30:41.080425 22355 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:30:41.080430 22355 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:30:41.080437 22355 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:30:41.080447 22355 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:30:41.080490 22355 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:30:41.080500 22355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:41.080514 22355 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:30:41.080529 22355 net.cpp:139] Memory required for data: 1818800
I0428 19:30:41.080535 22355 layer_factory.hpp:77] Creating layer accuracy
I0428 19:30:41.080548 22355 net.cpp:86] Creating Layer accuracy
I0428 19:30:41.080554 22355 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:30:41.080562 22355 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:30:41.080570 22355 net.cpp:382] accuracy -> accuracy
I0428 19:30:41.080582 22355 net.cpp:124] Setting up accuracy
I0428 19:30:41.080590 22355 net.cpp:131] Top shape: (1)
I0428 19:30:41.080595 22355 net.cpp:139] Memory required for data: 1818804
I0428 19:30:41.080602 22355 layer_factory.hpp:77] Creating layer loss
I0428 19:30:41.080610 22355 net.cpp:86] Creating Layer loss
I0428 19:30:41.080615 22355 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:30:41.080621 22355 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:30:41.080631 22355 net.cpp:382] loss -> loss
I0428 19:30:41.080641 22355 layer_factory.hpp:77] Creating layer loss
I0428 19:30:41.080931 22355 net.cpp:124] Setting up loss
I0428 19:30:41.080945 22355 net.cpp:131] Top shape: (1)
I0428 19:30:41.080950 22355 net.cpp:134]     with loss weight 1
I0428 19:30:41.080958 22355 net.cpp:139] Memory required for data: 1818808
I0428 19:30:41.080965 22355 net.cpp:200] loss needs backward computation.
I0428 19:30:41.080971 22355 net.cpp:202] accuracy does not need backward computation.
I0428 19:30:41.080978 22355 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:30:41.080983 22355 net.cpp:200] relu3 needs backward computation.
I0428 19:30:41.080989 22355 net.cpp:200] ip3 needs backward computation.
I0428 19:30:41.080994 22355 net.cpp:200] relu2 needs backward computation.
I0428 19:30:41.081001 22355 net.cpp:200] ip2 needs backward computation.
I0428 19:30:41.081006 22355 net.cpp:200] relu1 needs backward computation.
I0428 19:30:41.081012 22355 net.cpp:200] ip1 needs backward computation.
I0428 19:30:41.081017 22355 net.cpp:200] pool0 needs backward computation.
I0428 19:30:41.081023 22355 net.cpp:200] conv0 needs backward computation.
I0428 19:30:41.081029 22355 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:30:41.081037 22355 net.cpp:202] mnist does not need backward computation.
I0428 19:30:41.081042 22355 net.cpp:244] This network produces output accuracy
I0428 19:30:41.081048 22355 net.cpp:244] This network produces output loss
I0428 19:30:41.081065 22355 net.cpp:257] Network initialization done.
I0428 19:30:41.081110 22355 solver.cpp:56] Solver scaffolding done.
I0428 19:30:41.081401 22355 caffe.cpp:248] Starting Optimization
I0428 19:30:41.081408 22355 solver.cpp:273] Solving LeNet
I0428 19:30:41.081413 22355 solver.cpp:274] Learning Rate Policy: inv
I0428 19:30:41.082208 22355 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:30:41.085383 22355 blocking_queue.cpp:49] Waiting for data
I0428 19:30:41.158179 22362 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:41.158619 22355 solver.cpp:398]     Test net output #0: accuracy = 0.1358
I0428 19:30:41.158644 22355 solver.cpp:398]     Test net output #1: loss = 2.30888 (* 1 = 2.30888 loss)
I0428 19:30:41.160998 22355 solver.cpp:219] Iteration 0 (0 iter/s, 0.0795537s/100 iters), loss = 2.32426
I0428 19:30:41.161032 22355 solver.cpp:238]     Train net output #0: loss = 2.32426 (* 1 = 2.32426 loss)
I0428 19:30:41.161056 22355 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:30:41.219216 22355 solver.cpp:219] Iteration 100 (1718.87 iter/s, 0.0581776s/100 iters), loss = 1.28842
I0428 19:30:41.219249 22355 solver.cpp:238]     Train net output #0: loss = 1.28842 (* 1 = 1.28842 loss)
I0428 19:30:41.219259 22355 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:30:41.276072 22355 solver.cpp:219] Iteration 200 (1759.98 iter/s, 0.0568187s/100 iters), loss = 0.781976
I0428 19:30:41.276108 22355 solver.cpp:238]     Train net output #0: loss = 0.781976 (* 1 = 0.781976 loss)
I0428 19:30:41.276119 22355 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:30:41.332489 22355 solver.cpp:219] Iteration 300 (1773.74 iter/s, 0.0563781s/100 iters), loss = 1.06638
I0428 19:30:41.332515 22355 solver.cpp:238]     Train net output #0: loss = 1.06638 (* 1 = 1.06638 loss)
I0428 19:30:41.332540 22355 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:30:41.390111 22355 solver.cpp:219] Iteration 400 (1736.39 iter/s, 0.0575908s/100 iters), loss = 0.747764
I0428 19:30:41.390137 22355 solver.cpp:238]     Train net output #0: loss = 0.747764 (* 1 = 0.747764 loss)
I0428 19:30:41.390162 22355 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:30:41.446403 22355 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:30:41.521595 22362 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:41.522020 22355 solver.cpp:398]     Test net output #0: accuracy = 0.6336
I0428 19:30:41.522042 22355 solver.cpp:398]     Test net output #1: loss = 0.952831 (* 1 = 0.952831 loss)
I0428 19:30:41.522718 22355 solver.cpp:219] Iteration 500 (754.312 iter/s, 0.132571s/100 iters), loss = 1.03681
I0428 19:30:41.522742 22355 solver.cpp:238]     Train net output #0: loss = 1.03681 (* 1 = 1.03681 loss)
I0428 19:30:41.522758 22355 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:30:41.580797 22355 solver.cpp:219] Iteration 600 (1722.7 iter/s, 0.0580484s/100 iters), loss = 0.987368
I0428 19:30:41.580845 22355 solver.cpp:238]     Train net output #0: loss = 0.987368 (* 1 = 0.987368 loss)
I0428 19:30:41.580857 22355 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:30:41.642642 22355 solver.cpp:219] Iteration 700 (1618.25 iter/s, 0.061795s/100 iters), loss = 1.00429
I0428 19:30:41.642673 22355 solver.cpp:238]     Train net output #0: loss = 1.00429 (* 1 = 1.00429 loss)
I0428 19:30:41.642693 22355 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:30:41.703372 22355 solver.cpp:219] Iteration 800 (1647.71 iter/s, 0.0606904s/100 iters), loss = 1.10121
I0428 19:30:41.703399 22355 solver.cpp:238]     Train net output #0: loss = 1.10121 (* 1 = 1.10121 loss)
I0428 19:30:41.703423 22355 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:30:41.776929 22355 solver.cpp:219] Iteration 900 (1360.21 iter/s, 0.0735181s/100 iters), loss = 0.910477
I0428 19:30:41.776973 22355 solver.cpp:238]     Train net output #0: loss = 0.910477 (* 1 = 0.910477 loss)
I0428 19:30:41.776993 22355 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:30:41.801029 22361 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:41.853267 22355 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:30:41.854208 22355 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:30:41.854926 22355 solver.cpp:311] Iteration 1000, loss = 0.965212
I0428 19:30:41.854959 22355 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:30:41.909085 22362 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:30:41.909588 22355 solver.cpp:398]     Test net output #0: accuracy = 0.6731
I0428 19:30:41.909618 22355 solver.cpp:398]     Test net output #1: loss = 0.825655 (* 1 = 0.825655 loss)
I0428 19:30:41.909627 22355 solver.cpp:316] Optimization Done.
I0428 19:30:41.909634 22355 caffe.cpp:259] Optimization Done.
