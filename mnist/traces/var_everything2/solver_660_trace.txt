I0428 19:52:22.714908 27500 caffe.cpp:218] Using GPUs 0
I0428 19:52:22.752185 27500 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:52:23.264686 27500 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test660.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:52:23.264858 27500 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test660.prototxt
I0428 19:52:23.265516 27500 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:52:23.265547 27500 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:52:23.265707 27500 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:23.265823 27500 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:23.265957 27500 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:52:23.265992 27500 net.cpp:86] Creating Layer mnist
I0428 19:52:23.266007 27500 net.cpp:382] mnist -> data
I0428 19:52:23.266038 27500 net.cpp:382] mnist -> label
I0428 19:52:23.267614 27500 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:52:23.270483 27500 net.cpp:124] Setting up mnist
I0428 19:52:23.270503 27500 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:52:23.270509 27500 net.cpp:131] Top shape: 64 (64)
I0428 19:52:23.270512 27500 net.cpp:139] Memory required for data: 200960
I0428 19:52:23.270519 27500 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:23.270548 27500 net.cpp:86] Creating Layer conv0
I0428 19:52:23.270576 27500 net.cpp:408] conv0 <- data
I0428 19:52:23.270598 27500 net.cpp:382] conv0 -> conv0
I0428 19:52:23.530097 27500 net.cpp:124] Setting up conv0
I0428 19:52:23.530138 27500 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:52:23.530143 27500 net.cpp:139] Memory required for data: 938240
I0428 19:52:23.530156 27500 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:23.530169 27500 net.cpp:86] Creating Layer pool0
I0428 19:52:23.530174 27500 net.cpp:408] pool0 <- conv0
I0428 19:52:23.530179 27500 net.cpp:382] pool0 -> pool0
I0428 19:52:23.530249 27500 net.cpp:124] Setting up pool0
I0428 19:52:23.530264 27500 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:52:23.530269 27500 net.cpp:139] Memory required for data: 1122560
I0428 19:52:23.530274 27500 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:23.530289 27500 net.cpp:86] Creating Layer conv1
I0428 19:52:23.530294 27500 net.cpp:408] conv1 <- pool0
I0428 19:52:23.530303 27500 net.cpp:382] conv1 -> conv1
I0428 19:52:23.533340 27500 net.cpp:124] Setting up conv1
I0428 19:52:23.533354 27500 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:52:23.533357 27500 net.cpp:139] Memory required for data: 1532160
I0428 19:52:23.533366 27500 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:23.533375 27500 net.cpp:86] Creating Layer pool1
I0428 19:52:23.533380 27500 net.cpp:408] pool1 <- conv1
I0428 19:52:23.533387 27500 net.cpp:382] pool1 -> pool1
I0428 19:52:23.533437 27500 net.cpp:124] Setting up pool1
I0428 19:52:23.533447 27500 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:52:23.533452 27500 net.cpp:139] Memory required for data: 1634560
I0428 19:52:23.533457 27500 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:23.533466 27500 net.cpp:86] Creating Layer ip1
I0428 19:52:23.533471 27500 net.cpp:408] ip1 <- pool1
I0428 19:52:23.533478 27500 net.cpp:382] ip1 -> ip1
I0428 19:52:23.533788 27500 net.cpp:124] Setting up ip1
I0428 19:52:23.533798 27500 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:23.533803 27500 net.cpp:139] Memory required for data: 1647360
I0428 19:52:23.533814 27500 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:23.533823 27500 net.cpp:86] Creating Layer relu1
I0428 19:52:23.533828 27500 net.cpp:408] relu1 <- ip1
I0428 19:52:23.533833 27500 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:23.534059 27500 net.cpp:124] Setting up relu1
I0428 19:52:23.534090 27500 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:23.534096 27500 net.cpp:139] Memory required for data: 1660160
I0428 19:52:23.534101 27500 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:23.534111 27500 net.cpp:86] Creating Layer ip2
I0428 19:52:23.534116 27500 net.cpp:408] ip2 <- ip1
I0428 19:52:23.534124 27500 net.cpp:382] ip2 -> ip2
I0428 19:52:23.534281 27500 net.cpp:124] Setting up ip2
I0428 19:52:23.534293 27500 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:23.534297 27500 net.cpp:139] Memory required for data: 1672960
I0428 19:52:23.534307 27500 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:23.534335 27500 net.cpp:86] Creating Layer relu2
I0428 19:52:23.534342 27500 net.cpp:408] relu2 <- ip2
I0428 19:52:23.534358 27500 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:23.535461 27500 net.cpp:124] Setting up relu2
I0428 19:52:23.535477 27500 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:52:23.535482 27500 net.cpp:139] Memory required for data: 1685760
I0428 19:52:23.535488 27500 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:23.535497 27500 net.cpp:86] Creating Layer ip3
I0428 19:52:23.535502 27500 net.cpp:408] ip3 <- ip2
I0428 19:52:23.535512 27500 net.cpp:382] ip3 -> ip3
I0428 19:52:23.535676 27500 net.cpp:124] Setting up ip3
I0428 19:52:23.535687 27500 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:23.535692 27500 net.cpp:139] Memory required for data: 1688320
I0428 19:52:23.535706 27500 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:23.535728 27500 net.cpp:86] Creating Layer relu3
I0428 19:52:23.535737 27500 net.cpp:408] relu3 <- ip3
I0428 19:52:23.535758 27500 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:23.536020 27500 net.cpp:124] Setting up relu3
I0428 19:52:23.536032 27500 net.cpp:131] Top shape: 64 10 (640)
I0428 19:52:23.536037 27500 net.cpp:139] Memory required for data: 1690880
I0428 19:52:23.536057 27500 layer_factory.hpp:77] Creating layer loss
I0428 19:52:23.536072 27500 net.cpp:86] Creating Layer loss
I0428 19:52:23.536077 27500 net.cpp:408] loss <- ip3
I0428 19:52:23.536082 27500 net.cpp:408] loss <- label
I0428 19:52:23.536090 27500 net.cpp:382] loss -> loss
I0428 19:52:23.536108 27500 layer_factory.hpp:77] Creating layer loss
I0428 19:52:23.536455 27500 net.cpp:124] Setting up loss
I0428 19:52:23.536484 27500 net.cpp:131] Top shape: (1)
I0428 19:52:23.536489 27500 net.cpp:134]     with loss weight 1
I0428 19:52:23.536506 27500 net.cpp:139] Memory required for data: 1690884
I0428 19:52:23.536512 27500 net.cpp:200] loss needs backward computation.
I0428 19:52:23.536517 27500 net.cpp:200] relu3 needs backward computation.
I0428 19:52:23.536522 27500 net.cpp:200] ip3 needs backward computation.
I0428 19:52:23.536527 27500 net.cpp:200] relu2 needs backward computation.
I0428 19:52:23.536531 27500 net.cpp:200] ip2 needs backward computation.
I0428 19:52:23.536536 27500 net.cpp:200] relu1 needs backward computation.
I0428 19:52:23.536540 27500 net.cpp:200] ip1 needs backward computation.
I0428 19:52:23.536545 27500 net.cpp:200] pool1 needs backward computation.
I0428 19:52:23.536550 27500 net.cpp:200] conv1 needs backward computation.
I0428 19:52:23.536556 27500 net.cpp:200] pool0 needs backward computation.
I0428 19:52:23.536561 27500 net.cpp:200] conv0 needs backward computation.
I0428 19:52:23.536566 27500 net.cpp:202] mnist does not need backward computation.
I0428 19:52:23.536569 27500 net.cpp:244] This network produces output loss
I0428 19:52:23.536586 27500 net.cpp:257] Network initialization done.
I0428 19:52:23.537133 27500 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test660.prototxt
I0428 19:52:23.537202 27500 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:52:23.537345 27500 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:52:23.537466 27500 layer_factory.hpp:77] Creating layer mnist
I0428 19:52:23.537528 27500 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:52:23.537546 27500 net.cpp:86] Creating Layer mnist
I0428 19:52:23.537554 27500 net.cpp:382] mnist -> data
I0428 19:52:23.537566 27500 net.cpp:382] mnist -> label
I0428 19:52:23.537699 27500 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:52:23.540241 27500 net.cpp:124] Setting up mnist
I0428 19:52:23.540269 27500 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:52:23.540290 27500 net.cpp:131] Top shape: 100 (100)
I0428 19:52:23.540292 27500 net.cpp:139] Memory required for data: 314000
I0428 19:52:23.540297 27500 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:52:23.540328 27500 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:52:23.540335 27500 net.cpp:408] label_mnist_1_split <- label
I0428 19:52:23.540345 27500 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:52:23.540369 27500 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:52:23.540501 27500 net.cpp:124] Setting up label_mnist_1_split
I0428 19:52:23.540514 27500 net.cpp:131] Top shape: 100 (100)
I0428 19:52:23.540520 27500 net.cpp:131] Top shape: 100 (100)
I0428 19:52:23.540524 27500 net.cpp:139] Memory required for data: 314800
I0428 19:52:23.540530 27500 layer_factory.hpp:77] Creating layer conv0
I0428 19:52:23.540560 27500 net.cpp:86] Creating Layer conv0
I0428 19:52:23.540565 27500 net.cpp:408] conv0 <- data
I0428 19:52:23.540576 27500 net.cpp:382] conv0 -> conv0
I0428 19:52:23.542364 27500 net.cpp:124] Setting up conv0
I0428 19:52:23.542394 27500 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:52:23.542398 27500 net.cpp:139] Memory required for data: 1466800
I0428 19:52:23.542408 27500 layer_factory.hpp:77] Creating layer pool0
I0428 19:52:23.542430 27500 net.cpp:86] Creating Layer pool0
I0428 19:52:23.542434 27500 net.cpp:408] pool0 <- conv0
I0428 19:52:23.542441 27500 net.cpp:382] pool0 -> pool0
I0428 19:52:23.542544 27500 net.cpp:124] Setting up pool0
I0428 19:52:23.542557 27500 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:52:23.542562 27500 net.cpp:139] Memory required for data: 1754800
I0428 19:52:23.542567 27500 layer_factory.hpp:77] Creating layer conv1
I0428 19:52:23.542584 27500 net.cpp:86] Creating Layer conv1
I0428 19:52:23.542590 27500 net.cpp:408] conv1 <- pool0
I0428 19:52:23.542599 27500 net.cpp:382] conv1 -> conv1
I0428 19:52:23.545316 27500 net.cpp:124] Setting up conv1
I0428 19:52:23.545348 27500 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:52:23.545352 27500 net.cpp:139] Memory required for data: 2394800
I0428 19:52:23.545361 27500 layer_factory.hpp:77] Creating layer pool1
I0428 19:52:23.545370 27500 net.cpp:86] Creating Layer pool1
I0428 19:52:23.545374 27500 net.cpp:408] pool1 <- conv1
I0428 19:52:23.545379 27500 net.cpp:382] pool1 -> pool1
I0428 19:52:23.545435 27500 net.cpp:124] Setting up pool1
I0428 19:52:23.545457 27500 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:52:23.545464 27500 net.cpp:139] Memory required for data: 2554800
I0428 19:52:23.545469 27500 layer_factory.hpp:77] Creating layer ip1
I0428 19:52:23.545477 27500 net.cpp:86] Creating Layer ip1
I0428 19:52:23.545485 27500 net.cpp:408] ip1 <- pool1
I0428 19:52:23.545492 27500 net.cpp:382] ip1 -> ip1
I0428 19:52:23.545868 27500 net.cpp:124] Setting up ip1
I0428 19:52:23.545879 27500 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:23.545913 27500 net.cpp:139] Memory required for data: 2574800
I0428 19:52:23.545925 27500 layer_factory.hpp:77] Creating layer relu1
I0428 19:52:23.545933 27500 net.cpp:86] Creating Layer relu1
I0428 19:52:23.545938 27500 net.cpp:408] relu1 <- ip1
I0428 19:52:23.545948 27500 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:52:23.546193 27500 net.cpp:124] Setting up relu1
I0428 19:52:23.546211 27500 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:23.546217 27500 net.cpp:139] Memory required for data: 2594800
I0428 19:52:23.546223 27500 layer_factory.hpp:77] Creating layer ip2
I0428 19:52:23.546236 27500 net.cpp:86] Creating Layer ip2
I0428 19:52:23.546241 27500 net.cpp:408] ip2 <- ip1
I0428 19:52:23.546250 27500 net.cpp:382] ip2 -> ip2
I0428 19:52:23.546437 27500 net.cpp:124] Setting up ip2
I0428 19:52:23.546449 27500 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:23.546454 27500 net.cpp:139] Memory required for data: 2614800
I0428 19:52:23.546465 27500 layer_factory.hpp:77] Creating layer relu2
I0428 19:52:23.546486 27500 net.cpp:86] Creating Layer relu2
I0428 19:52:23.546492 27500 net.cpp:408] relu2 <- ip2
I0428 19:52:23.546499 27500 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:52:23.546854 27500 net.cpp:124] Setting up relu2
I0428 19:52:23.546885 27500 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:52:23.546890 27500 net.cpp:139] Memory required for data: 2634800
I0428 19:52:23.546895 27500 layer_factory.hpp:77] Creating layer ip3
I0428 19:52:23.546902 27500 net.cpp:86] Creating Layer ip3
I0428 19:52:23.546907 27500 net.cpp:408] ip3 <- ip2
I0428 19:52:23.546916 27500 net.cpp:382] ip3 -> ip3
I0428 19:52:23.547068 27500 net.cpp:124] Setting up ip3
I0428 19:52:23.547080 27500 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:23.547086 27500 net.cpp:139] Memory required for data: 2638800
I0428 19:52:23.547097 27500 layer_factory.hpp:77] Creating layer relu3
I0428 19:52:23.547106 27500 net.cpp:86] Creating Layer relu3
I0428 19:52:23.547111 27500 net.cpp:408] relu3 <- ip3
I0428 19:52:23.547118 27500 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:52:23.548246 27500 net.cpp:124] Setting up relu3
I0428 19:52:23.548277 27500 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:23.548282 27500 net.cpp:139] Memory required for data: 2642800
I0428 19:52:23.548287 27500 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:52:23.548295 27500 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:52:23.548301 27500 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:52:23.548308 27500 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:52:23.548319 27500 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:52:23.548369 27500 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:52:23.548379 27500 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:23.548387 27500 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:52:23.548390 27500 net.cpp:139] Memory required for data: 2650800
I0428 19:52:23.548395 27500 layer_factory.hpp:77] Creating layer accuracy
I0428 19:52:23.548404 27500 net.cpp:86] Creating Layer accuracy
I0428 19:52:23.548409 27500 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:52:23.548416 27500 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:52:23.548424 27500 net.cpp:382] accuracy -> accuracy
I0428 19:52:23.548434 27500 net.cpp:124] Setting up accuracy
I0428 19:52:23.548441 27500 net.cpp:131] Top shape: (1)
I0428 19:52:23.548445 27500 net.cpp:139] Memory required for data: 2650804
I0428 19:52:23.548450 27500 layer_factory.hpp:77] Creating layer loss
I0428 19:52:23.548460 27500 net.cpp:86] Creating Layer loss
I0428 19:52:23.548465 27500 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:52:23.548471 27500 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:52:23.548478 27500 net.cpp:382] loss -> loss
I0428 19:52:23.548487 27500 layer_factory.hpp:77] Creating layer loss
I0428 19:52:23.548931 27500 net.cpp:124] Setting up loss
I0428 19:52:23.548960 27500 net.cpp:131] Top shape: (1)
I0428 19:52:23.548966 27500 net.cpp:134]     with loss weight 1
I0428 19:52:23.548975 27500 net.cpp:139] Memory required for data: 2650808
I0428 19:52:23.548992 27500 net.cpp:200] loss needs backward computation.
I0428 19:52:23.548998 27500 net.cpp:202] accuracy does not need backward computation.
I0428 19:52:23.549005 27500 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:52:23.549010 27500 net.cpp:200] relu3 needs backward computation.
I0428 19:52:23.549015 27500 net.cpp:200] ip3 needs backward computation.
I0428 19:52:23.549021 27500 net.cpp:200] relu2 needs backward computation.
I0428 19:52:23.549024 27500 net.cpp:200] ip2 needs backward computation.
I0428 19:52:23.549031 27500 net.cpp:200] relu1 needs backward computation.
I0428 19:52:23.549036 27500 net.cpp:200] ip1 needs backward computation.
I0428 19:52:23.549041 27500 net.cpp:200] pool1 needs backward computation.
I0428 19:52:23.549046 27500 net.cpp:200] conv1 needs backward computation.
I0428 19:52:23.549051 27500 net.cpp:200] pool0 needs backward computation.
I0428 19:52:23.549057 27500 net.cpp:200] conv0 needs backward computation.
I0428 19:52:23.549064 27500 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:52:23.549070 27500 net.cpp:202] mnist does not need backward computation.
I0428 19:52:23.549074 27500 net.cpp:244] This network produces output accuracy
I0428 19:52:23.549080 27500 net.cpp:244] This network produces output loss
I0428 19:52:23.549096 27500 net.cpp:257] Network initialization done.
I0428 19:52:23.549170 27500 solver.cpp:56] Solver scaffolding done.
I0428 19:52:23.549662 27500 caffe.cpp:248] Starting Optimization
I0428 19:52:23.549686 27500 solver.cpp:273] Solving LeNet
I0428 19:52:23.549705 27500 solver.cpp:274] Learning Rate Policy: inv
I0428 19:52:23.550806 27500 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:52:23.554785 27500 blocking_queue.cpp:49] Waiting for data
I0428 19:52:23.626277 27507 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:23.626951 27500 solver.cpp:398]     Test net output #0: accuracy = 0.0928
I0428 19:52:23.626992 27500 solver.cpp:398]     Test net output #1: loss = 2.31017 (* 1 = 2.31017 loss)
I0428 19:52:23.629675 27500 solver.cpp:219] Iteration 0 (2.84769 iter/s, 0.0799416s/100 iters), loss = 2.2948
I0428 19:52:23.629729 27500 solver.cpp:238]     Train net output #0: loss = 2.2948 (* 1 = 2.2948 loss)
I0428 19:52:23.629740 27500 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:52:23.719615 27500 solver.cpp:219] Iteration 100 (1112.5 iter/s, 0.0898876s/100 iters), loss = 0.73775
I0428 19:52:23.719656 27500 solver.cpp:238]     Train net output #0: loss = 0.73775 (* 1 = 0.73775 loss)
I0428 19:52:23.719662 27500 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:52:23.809974 27500 solver.cpp:219] Iteration 200 (1107.11 iter/s, 0.090325s/100 iters), loss = 0.53041
I0428 19:52:23.810012 27500 solver.cpp:238]     Train net output #0: loss = 0.53041 (* 1 = 0.53041 loss)
I0428 19:52:23.810017 27500 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:52:23.899132 27500 solver.cpp:219] Iteration 300 (1122.03 iter/s, 0.0891239s/100 iters), loss = 0.618249
I0428 19:52:23.899158 27500 solver.cpp:238]     Train net output #0: loss = 0.618249 (* 1 = 0.618249 loss)
I0428 19:52:23.899163 27500 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:52:23.987397 27500 solver.cpp:219] Iteration 400 (1133.39 iter/s, 0.0882309s/100 iters), loss = 0.23419
I0428 19:52:23.987437 27500 solver.cpp:238]     Train net output #0: loss = 0.23419 (* 1 = 0.23419 loss)
I0428 19:52:23.987442 27500 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:52:24.074633 27500 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:52:24.128136 27507 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:24.128783 27500 solver.cpp:398]     Test net output #0: accuracy = 0.9474
I0428 19:52:24.128808 27500 solver.cpp:398]     Test net output #1: loss = 0.161772 (* 1 = 0.161772 loss)
I0428 19:52:24.129977 27500 solver.cpp:219] Iteration 500 (701.543 iter/s, 0.142543s/100 iters), loss = 0.0949331
I0428 19:52:24.130017 27500 solver.cpp:238]     Train net output #0: loss = 0.0949331 (* 1 = 0.0949331 loss)
I0428 19:52:24.130039 27500 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:52:24.226656 27500 solver.cpp:219] Iteration 600 (1034.71 iter/s, 0.0966451s/100 iters), loss = 0.136374
I0428 19:52:24.226682 27500 solver.cpp:238]     Train net output #0: loss = 0.136374 (* 1 = 0.136374 loss)
I0428 19:52:24.226688 27500 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:52:24.313905 27500 solver.cpp:219] Iteration 700 (1146.6 iter/s, 0.0872141s/100 iters), loss = 0.121997
I0428 19:52:24.313946 27500 solver.cpp:238]     Train net output #0: loss = 0.121997 (* 1 = 0.121997 loss)
I0428 19:52:24.313953 27500 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:52:24.405834 27500 solver.cpp:219] Iteration 800 (1088.59 iter/s, 0.091862s/100 iters), loss = 0.196412
I0428 19:52:24.405879 27500 solver.cpp:238]     Train net output #0: loss = 0.196412 (* 1 = 0.196412 loss)
I0428 19:52:24.405889 27500 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:52:24.497205 27500 solver.cpp:219] Iteration 900 (1095.1 iter/s, 0.0913162s/100 iters), loss = 0.189892
I0428 19:52:24.497244 27500 solver.cpp:238]     Train net output #0: loss = 0.189892 (* 1 = 0.189892 loss)
I0428 19:52:24.497252 27500 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:52:24.527035 27506 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:24.585345 27500 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:52:24.586591 27500 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:52:24.587267 27500 solver.cpp:311] Iteration 1000, loss = 0.0867553
I0428 19:52:24.587285 27500 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:52:24.640610 27507 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:52:24.641145 27500 solver.cpp:398]     Test net output #0: accuracy = 0.9741
I0428 19:52:24.641168 27500 solver.cpp:398]     Test net output #1: loss = 0.0782903 (* 1 = 0.0782903 loss)
I0428 19:52:24.641175 27500 solver.cpp:316] Optimization Done.
I0428 19:52:24.641178 27500 caffe.cpp:259] Optimization Done.
