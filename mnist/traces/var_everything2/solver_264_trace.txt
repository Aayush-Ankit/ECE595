I0428 19:37:49.233759 23925 caffe.cpp:218] Using GPUs 0
I0428 19:37:49.275190 23925 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:37:49.784667 23925 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test264.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:37:49.784826 23925 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test264.prototxt
I0428 19:37:49.785174 23925 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:37:49.785197 23925 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:37:49.785290 23925 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:49.785388 23925 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:49.785511 23925 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:37:49.785540 23925 net.cpp:86] Creating Layer mnist
I0428 19:37:49.785553 23925 net.cpp:382] mnist -> data
I0428 19:37:49.785581 23925 net.cpp:382] mnist -> label
I0428 19:37:49.786723 23925 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:37:49.789014 23925 net.cpp:124] Setting up mnist
I0428 19:37:49.789047 23925 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:37:49.789059 23925 net.cpp:131] Top shape: 64 (64)
I0428 19:37:49.789065 23925 net.cpp:139] Memory required for data: 200960
I0428 19:37:49.789074 23925 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:49.789098 23925 net.cpp:86] Creating Layer conv0
I0428 19:37:49.789105 23925 net.cpp:408] conv0 <- data
I0428 19:37:49.789121 23925 net.cpp:382] conv0 -> conv0
I0428 19:37:50.026047 23925 net.cpp:124] Setting up conv0
I0428 19:37:50.026077 23925 net.cpp:131] Top shape: 64 100 24 24 (3686400)
I0428 19:37:50.026083 23925 net.cpp:139] Memory required for data: 14946560
I0428 19:37:50.026118 23925 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:50.026135 23925 net.cpp:86] Creating Layer pool0
I0428 19:37:50.026161 23925 net.cpp:408] pool0 <- conv0
I0428 19:37:50.026171 23925 net.cpp:382] pool0 -> pool0
I0428 19:37:50.026229 23925 net.cpp:124] Setting up pool0
I0428 19:37:50.026238 23925 net.cpp:131] Top shape: 64 100 12 12 (921600)
I0428 19:37:50.026243 23925 net.cpp:139] Memory required for data: 18632960
I0428 19:37:50.026248 23925 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:50.026263 23925 net.cpp:86] Creating Layer ip1
I0428 19:37:50.026270 23925 net.cpp:408] ip1 <- pool0
I0428 19:37:50.026278 23925 net.cpp:382] ip1 -> ip1
I0428 19:37:50.031544 23925 net.cpp:124] Setting up ip1
I0428 19:37:50.031559 23925 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:50.031564 23925 net.cpp:139] Memory required for data: 18645760
I0428 19:37:50.031594 23925 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:50.031605 23925 net.cpp:86] Creating Layer relu1
I0428 19:37:50.031610 23925 net.cpp:408] relu1 <- ip1
I0428 19:37:50.031617 23925 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:50.031816 23925 net.cpp:124] Setting up relu1
I0428 19:37:50.031827 23925 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:37:50.031832 23925 net.cpp:139] Memory required for data: 18658560
I0428 19:37:50.031837 23925 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:50.031847 23925 net.cpp:86] Creating Layer ip2
I0428 19:37:50.031853 23925 net.cpp:408] ip2 <- ip1
I0428 19:37:50.031862 23925 net.cpp:382] ip2 -> ip2
I0428 19:37:50.031962 23925 net.cpp:124] Setting up ip2
I0428 19:37:50.031971 23925 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:50.031976 23925 net.cpp:139] Memory required for data: 18661120
I0428 19:37:50.031988 23925 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:50.031997 23925 net.cpp:86] Creating Layer relu2
I0428 19:37:50.032006 23925 net.cpp:408] relu2 <- ip2
I0428 19:37:50.032014 23925 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:50.032758 23925 net.cpp:124] Setting up relu2
I0428 19:37:50.032773 23925 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:50.032778 23925 net.cpp:139] Memory required for data: 18663680
I0428 19:37:50.032783 23925 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:50.032793 23925 net.cpp:86] Creating Layer ip3
I0428 19:37:50.032799 23925 net.cpp:408] ip3 <- ip2
I0428 19:37:50.032842 23925 net.cpp:382] ip3 -> ip3
I0428 19:37:50.032979 23925 net.cpp:124] Setting up ip3
I0428 19:37:50.032989 23925 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:50.032994 23925 net.cpp:139] Memory required for data: 18666240
I0428 19:37:50.033004 23925 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:50.033015 23925 net.cpp:86] Creating Layer relu3
I0428 19:37:50.033023 23925 net.cpp:408] relu3 <- ip3
I0428 19:37:50.033031 23925 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:50.033227 23925 net.cpp:124] Setting up relu3
I0428 19:37:50.033236 23925 net.cpp:131] Top shape: 64 10 (640)
I0428 19:37:50.033241 23925 net.cpp:139] Memory required for data: 18668800
I0428 19:37:50.033246 23925 layer_factory.hpp:77] Creating layer loss
I0428 19:37:50.033254 23925 net.cpp:86] Creating Layer loss
I0428 19:37:50.033259 23925 net.cpp:408] loss <- ip3
I0428 19:37:50.033265 23925 net.cpp:408] loss <- label
I0428 19:37:50.033273 23925 net.cpp:382] loss -> loss
I0428 19:37:50.033295 23925 layer_factory.hpp:77] Creating layer loss
I0428 19:37:50.033504 23925 net.cpp:124] Setting up loss
I0428 19:37:50.033512 23925 net.cpp:131] Top shape: (1)
I0428 19:37:50.033517 23925 net.cpp:134]     with loss weight 1
I0428 19:37:50.033535 23925 net.cpp:139] Memory required for data: 18668804
I0428 19:37:50.033541 23925 net.cpp:200] loss needs backward computation.
I0428 19:37:50.033547 23925 net.cpp:200] relu3 needs backward computation.
I0428 19:37:50.033551 23925 net.cpp:200] ip3 needs backward computation.
I0428 19:37:50.033556 23925 net.cpp:200] relu2 needs backward computation.
I0428 19:37:50.033561 23925 net.cpp:200] ip2 needs backward computation.
I0428 19:37:50.033566 23925 net.cpp:200] relu1 needs backward computation.
I0428 19:37:50.033571 23925 net.cpp:200] ip1 needs backward computation.
I0428 19:37:50.033586 23925 net.cpp:200] pool0 needs backward computation.
I0428 19:37:50.033592 23925 net.cpp:200] conv0 needs backward computation.
I0428 19:37:50.033597 23925 net.cpp:202] mnist does not need backward computation.
I0428 19:37:50.033602 23925 net.cpp:244] This network produces output loss
I0428 19:37:50.033614 23925 net.cpp:257] Network initialization done.
I0428 19:37:50.033905 23925 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test264.prototxt
I0428 19:37:50.033936 23925 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:37:50.034031 23925 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 100
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:37:50.034118 23925 layer_factory.hpp:77] Creating layer mnist
I0428 19:37:50.034174 23925 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:37:50.034191 23925 net.cpp:86] Creating Layer mnist
I0428 19:37:50.034198 23925 net.cpp:382] mnist -> data
I0428 19:37:50.034209 23925 net.cpp:382] mnist -> label
I0428 19:37:50.034314 23925 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:37:50.036273 23925 net.cpp:124] Setting up mnist
I0428 19:37:50.036286 23925 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:37:50.036293 23925 net.cpp:131] Top shape: 100 (100)
I0428 19:37:50.036298 23925 net.cpp:139] Memory required for data: 314000
I0428 19:37:50.036304 23925 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:37:50.036317 23925 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:37:50.036324 23925 net.cpp:408] label_mnist_1_split <- label
I0428 19:37:50.036332 23925 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:37:50.036342 23925 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:37:50.036419 23925 net.cpp:124] Setting up label_mnist_1_split
I0428 19:37:50.036428 23925 net.cpp:131] Top shape: 100 (100)
I0428 19:37:50.036434 23925 net.cpp:131] Top shape: 100 (100)
I0428 19:37:50.036455 23925 net.cpp:139] Memory required for data: 314800
I0428 19:37:50.036471 23925 layer_factory.hpp:77] Creating layer conv0
I0428 19:37:50.036485 23925 net.cpp:86] Creating Layer conv0
I0428 19:37:50.036491 23925 net.cpp:408] conv0 <- data
I0428 19:37:50.036500 23925 net.cpp:382] conv0 -> conv0
I0428 19:37:50.038122 23925 net.cpp:124] Setting up conv0
I0428 19:37:50.038139 23925 net.cpp:131] Top shape: 100 100 24 24 (5760000)
I0428 19:37:50.038146 23925 net.cpp:139] Memory required for data: 23354800
I0428 19:37:50.038161 23925 layer_factory.hpp:77] Creating layer pool0
I0428 19:37:50.038172 23925 net.cpp:86] Creating Layer pool0
I0428 19:37:50.038182 23925 net.cpp:408] pool0 <- conv0
I0428 19:37:50.038192 23925 net.cpp:382] pool0 -> pool0
I0428 19:37:50.038236 23925 net.cpp:124] Setting up pool0
I0428 19:37:50.038245 23925 net.cpp:131] Top shape: 100 100 12 12 (1440000)
I0428 19:37:50.038251 23925 net.cpp:139] Memory required for data: 29114800
I0428 19:37:50.038257 23925 layer_factory.hpp:77] Creating layer ip1
I0428 19:37:50.038267 23925 net.cpp:86] Creating Layer ip1
I0428 19:37:50.038274 23925 net.cpp:408] ip1 <- pool0
I0428 19:37:50.038282 23925 net.cpp:382] ip1 -> ip1
I0428 19:37:50.043303 23925 net.cpp:124] Setting up ip1
I0428 19:37:50.043316 23925 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:50.043321 23925 net.cpp:139] Memory required for data: 29134800
I0428 19:37:50.043334 23925 layer_factory.hpp:77] Creating layer relu1
I0428 19:37:50.043342 23925 net.cpp:86] Creating Layer relu1
I0428 19:37:50.043347 23925 net.cpp:408] relu1 <- ip1
I0428 19:37:50.043354 23925 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:37:50.043524 23925 net.cpp:124] Setting up relu1
I0428 19:37:50.043534 23925 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:37:50.043539 23925 net.cpp:139] Memory required for data: 29154800
I0428 19:37:50.043543 23925 layer_factory.hpp:77] Creating layer ip2
I0428 19:37:50.043552 23925 net.cpp:86] Creating Layer ip2
I0428 19:37:50.043557 23925 net.cpp:408] ip2 <- ip1
I0428 19:37:50.043565 23925 net.cpp:382] ip2 -> ip2
I0428 19:37:50.043666 23925 net.cpp:124] Setting up ip2
I0428 19:37:50.043674 23925 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:50.043679 23925 net.cpp:139] Memory required for data: 29158800
I0428 19:37:50.043690 23925 layer_factory.hpp:77] Creating layer relu2
I0428 19:37:50.043699 23925 net.cpp:86] Creating Layer relu2
I0428 19:37:50.043705 23925 net.cpp:408] relu2 <- ip2
I0428 19:37:50.043711 23925 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:37:50.044505 23925 net.cpp:124] Setting up relu2
I0428 19:37:50.044522 23925 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:50.044528 23925 net.cpp:139] Memory required for data: 29162800
I0428 19:37:50.044533 23925 layer_factory.hpp:77] Creating layer ip3
I0428 19:37:50.044544 23925 net.cpp:86] Creating Layer ip3
I0428 19:37:50.044551 23925 net.cpp:408] ip3 <- ip2
I0428 19:37:50.044559 23925 net.cpp:382] ip3 -> ip3
I0428 19:37:50.044683 23925 net.cpp:124] Setting up ip3
I0428 19:37:50.044694 23925 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:50.044710 23925 net.cpp:139] Memory required for data: 29166800
I0428 19:37:50.044720 23925 layer_factory.hpp:77] Creating layer relu3
I0428 19:37:50.044728 23925 net.cpp:86] Creating Layer relu3
I0428 19:37:50.044734 23925 net.cpp:408] relu3 <- ip3
I0428 19:37:50.044741 23925 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:37:50.044924 23925 net.cpp:124] Setting up relu3
I0428 19:37:50.044934 23925 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:50.044939 23925 net.cpp:139] Memory required for data: 29170800
I0428 19:37:50.044945 23925 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:37:50.044952 23925 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:37:50.044957 23925 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:37:50.044965 23925 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:37:50.044975 23925 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:37:50.045017 23925 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:37:50.045024 23925 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:50.045043 23925 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:37:50.045050 23925 net.cpp:139] Memory required for data: 29178800
I0428 19:37:50.045055 23925 layer_factory.hpp:77] Creating layer accuracy
I0428 19:37:50.045063 23925 net.cpp:86] Creating Layer accuracy
I0428 19:37:50.045069 23925 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:37:50.045076 23925 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:37:50.045084 23925 net.cpp:382] accuracy -> accuracy
I0428 19:37:50.045095 23925 net.cpp:124] Setting up accuracy
I0428 19:37:50.045117 23925 net.cpp:131] Top shape: (1)
I0428 19:37:50.045122 23925 net.cpp:139] Memory required for data: 29178804
I0428 19:37:50.045127 23925 layer_factory.hpp:77] Creating layer loss
I0428 19:37:50.045135 23925 net.cpp:86] Creating Layer loss
I0428 19:37:50.045140 23925 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:37:50.045146 23925 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:37:50.045153 23925 net.cpp:382] loss -> loss
I0428 19:37:50.045162 23925 layer_factory.hpp:77] Creating layer loss
I0428 19:37:50.045428 23925 net.cpp:124] Setting up loss
I0428 19:37:50.045438 23925 net.cpp:131] Top shape: (1)
I0428 19:37:50.045444 23925 net.cpp:134]     with loss weight 1
I0428 19:37:50.045466 23925 net.cpp:139] Memory required for data: 29178808
I0428 19:37:50.045472 23925 net.cpp:200] loss needs backward computation.
I0428 19:37:50.045478 23925 net.cpp:202] accuracy does not need backward computation.
I0428 19:37:50.045485 23925 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:37:50.045490 23925 net.cpp:200] relu3 needs backward computation.
I0428 19:37:50.045495 23925 net.cpp:200] ip3 needs backward computation.
I0428 19:37:50.045500 23925 net.cpp:200] relu2 needs backward computation.
I0428 19:37:50.045505 23925 net.cpp:200] ip2 needs backward computation.
I0428 19:37:50.045511 23925 net.cpp:200] relu1 needs backward computation.
I0428 19:37:50.045516 23925 net.cpp:200] ip1 needs backward computation.
I0428 19:37:50.045521 23925 net.cpp:200] pool0 needs backward computation.
I0428 19:37:50.045526 23925 net.cpp:200] conv0 needs backward computation.
I0428 19:37:50.045547 23925 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:37:50.045552 23925 net.cpp:202] mnist does not need backward computation.
I0428 19:37:50.045557 23925 net.cpp:244] This network produces output accuracy
I0428 19:37:50.045563 23925 net.cpp:244] This network produces output loss
I0428 19:37:50.045578 23925 net.cpp:257] Network initialization done.
I0428 19:37:50.045620 23925 solver.cpp:56] Solver scaffolding done.
I0428 19:37:50.045919 23925 caffe.cpp:248] Starting Optimization
I0428 19:37:50.045927 23925 solver.cpp:273] Solving LeNet
I0428 19:37:50.045931 23925 solver.cpp:274] Learning Rate Policy: inv
I0428 19:37:50.047894 23925 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:37:50.209308 23934 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:50.213848 23925 solver.cpp:398]     Test net output #0: accuracy = 0.0728
I0428 19:37:50.213871 23925 solver.cpp:398]     Test net output #1: loss = 2.30773 (* 1 = 2.30773 loss)
I0428 19:37:50.218964 23925 solver.cpp:219] Iteration 0 (-6.53427e-31 iter/s, 0.173001s/100 iters), loss = 2.30936
I0428 19:37:50.218991 23925 solver.cpp:238]     Train net output #0: loss = 2.30936 (* 1 = 2.30936 loss)
I0428 19:37:50.219023 23925 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:37:50.461290 23925 solver.cpp:219] Iteration 100 (412.74 iter/s, 0.242284s/100 iters), loss = 0.502655
I0428 19:37:50.461319 23925 solver.cpp:238]     Train net output #0: loss = 0.502655 (* 1 = 0.502655 loss)
I0428 19:37:50.461329 23925 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:37:50.698839 23925 solver.cpp:219] Iteration 200 (421.043 iter/s, 0.237506s/100 iters), loss = 0.285779
I0428 19:37:50.698870 23925 solver.cpp:238]     Train net output #0: loss = 0.285779 (* 1 = 0.285779 loss)
I0428 19:37:50.698881 23925 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:37:50.936940 23925 solver.cpp:219] Iteration 300 (420.085 iter/s, 0.238047s/100 iters), loss = 0.240706
I0428 19:37:50.937021 23925 solver.cpp:238]     Train net output #0: loss = 0.240706 (* 1 = 0.240706 loss)
I0428 19:37:50.937037 23925 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:37:51.181138 23925 solver.cpp:219] Iteration 400 (409.659 iter/s, 0.244105s/100 iters), loss = 0.176598
I0428 19:37:51.181170 23925 solver.cpp:238]     Train net output #0: loss = 0.176598 (* 1 = 0.176598 loss)
I0428 19:37:51.181179 23925 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:37:51.422725 23925 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:37:51.590329 23934 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:51.595098 23925 solver.cpp:398]     Test net output #0: accuracy = 0.9449
I0428 19:37:51.595129 23925 solver.cpp:398]     Test net output #1: loss = 0.185531 (* 1 = 0.185531 loss)
I0428 19:37:51.597417 23925 solver.cpp:219] Iteration 500 (240.257 iter/s, 0.41622s/100 iters), loss = 0.237388
I0428 19:37:51.597445 23925 solver.cpp:238]     Train net output #0: loss = 0.237388 (* 1 = 0.237388 loss)
I0428 19:37:51.597452 23925 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:37:51.842108 23925 solver.cpp:219] Iteration 600 (408.756 iter/s, 0.244645s/100 iters), loss = 0.183273
I0428 19:37:51.842144 23925 solver.cpp:238]     Train net output #0: loss = 0.183273 (* 1 = 0.183273 loss)
I0428 19:37:51.842152 23925 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:37:52.086376 23925 solver.cpp:219] Iteration 700 (409.479 iter/s, 0.244213s/100 iters), loss = 0.248633
I0428 19:37:52.086421 23925 solver.cpp:238]     Train net output #0: loss = 0.248633 (* 1 = 0.248633 loss)
I0428 19:37:52.086431 23925 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:37:52.339663 23925 solver.cpp:219] Iteration 800 (394.907 iter/s, 0.253224s/100 iters), loss = 0.191604
I0428 19:37:52.339707 23925 solver.cpp:238]     Train net output #0: loss = 0.191604 (* 1 = 0.191604 loss)
I0428 19:37:52.339718 23925 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:37:52.587929 23925 solver.cpp:219] Iteration 900 (402.901 iter/s, 0.2482s/100 iters), loss = 0.258356
I0428 19:37:52.587988 23925 solver.cpp:238]     Train net output #0: loss = 0.258356 (* 1 = 0.258356 loss)
I0428 19:37:52.588003 23925 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:37:52.674697 23933 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:52.844045 23925 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:37:52.861094 23925 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:37:52.869626 23925 solver.cpp:311] Iteration 1000, loss = 0.140568
I0428 19:37:52.869653 23925 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:37:53.037792 23934 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:37:53.042464 23925 solver.cpp:398]     Test net output #0: accuracy = 0.9631
I0428 19:37:53.042493 23925 solver.cpp:398]     Test net output #1: loss = 0.123259 (* 1 = 0.123259 loss)
I0428 19:37:53.042500 23925 solver.cpp:316] Optimization Done.
I0428 19:37:53.042503 23925 caffe.cpp:259] Optimization Done.
