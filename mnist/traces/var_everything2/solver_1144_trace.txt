I0428 20:10:49.243351 31950 caffe.cpp:218] Using GPUs 0
I0428 20:10:49.278724 31950 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:49.790810 31950 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1144.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:49.790953 31950 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1144.prototxt
I0428 20:10:49.791371 31950 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:49.791393 31950 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:49.791494 31950 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:49.791575 31950 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:49.791676 31950 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:49.791702 31950 net.cpp:86] Creating Layer mnist
I0428 20:10:49.791710 31950 net.cpp:382] mnist -> data
I0428 20:10:49.791733 31950 net.cpp:382] mnist -> label
I0428 20:10:49.792842 31950 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:49.795500 31950 net.cpp:124] Setting up mnist
I0428 20:10:49.795519 31950 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:49.795541 31950 net.cpp:131] Top shape: 64 (64)
I0428 20:10:49.795544 31950 net.cpp:139] Memory required for data: 200960
I0428 20:10:49.795552 31950 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:49.795568 31950 net.cpp:86] Creating Layer conv0
I0428 20:10:49.795588 31950 net.cpp:408] conv0 <- data
I0428 20:10:49.795603 31950 net.cpp:382] conv0 -> conv0
I0428 20:10:50.088376 31950 net.cpp:124] Setting up conv0
I0428 20:10:50.088409 31950 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:50.088414 31950 net.cpp:139] Memory required for data: 3887360
I0428 20:10:50.088433 31950 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:50.088448 31950 net.cpp:86] Creating Layer pool0
I0428 20:10:50.088454 31950 net.cpp:408] pool0 <- conv0
I0428 20:10:50.088461 31950 net.cpp:382] pool0 -> pool0
I0428 20:10:50.088516 31950 net.cpp:124] Setting up pool0
I0428 20:10:50.088523 31950 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:50.088526 31950 net.cpp:139] Memory required for data: 4808960
I0428 20:10:50.088531 31950 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:50.088544 31950 net.cpp:86] Creating Layer conv1
I0428 20:10:50.088548 31950 net.cpp:408] conv1 <- pool0
I0428 20:10:50.088554 31950 net.cpp:382] conv1 -> conv1
I0428 20:10:50.090874 31950 net.cpp:124] Setting up conv1
I0428 20:10:50.090891 31950 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:10:50.090896 31950 net.cpp:139] Memory required for data: 5628160
I0428 20:10:50.090905 31950 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:50.090915 31950 net.cpp:86] Creating Layer pool1
I0428 20:10:50.090920 31950 net.cpp:408] pool1 <- conv1
I0428 20:10:50.090926 31950 net.cpp:382] pool1 -> pool1
I0428 20:10:50.090970 31950 net.cpp:124] Setting up pool1
I0428 20:10:50.090977 31950 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:10:50.090981 31950 net.cpp:139] Memory required for data: 5832960
I0428 20:10:50.090983 31950 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:50.090992 31950 net.cpp:86] Creating Layer ip1
I0428 20:10:50.090996 31950 net.cpp:408] ip1 <- pool1
I0428 20:10:50.091002 31950 net.cpp:382] ip1 -> ip1
I0428 20:10:50.092109 31950 net.cpp:124] Setting up ip1
I0428 20:10:50.092123 31950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:50.092128 31950 net.cpp:139] Memory required for data: 5835520
I0428 20:10:50.092139 31950 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:50.092147 31950 net.cpp:86] Creating Layer relu1
I0428 20:10:50.092151 31950 net.cpp:408] relu1 <- ip1
I0428 20:10:50.092156 31950 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:50.092360 31950 net.cpp:124] Setting up relu1
I0428 20:10:50.092368 31950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:50.092372 31950 net.cpp:139] Memory required for data: 5838080
I0428 20:10:50.092376 31950 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:50.092383 31950 net.cpp:86] Creating Layer ip2
I0428 20:10:50.092387 31950 net.cpp:408] ip2 <- ip1
I0428 20:10:50.092394 31950 net.cpp:382] ip2 -> ip2
I0428 20:10:50.092510 31950 net.cpp:124] Setting up ip2
I0428 20:10:50.092519 31950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:50.092522 31950 net.cpp:139] Memory required for data: 5840640
I0428 20:10:50.092528 31950 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:50.092537 31950 net.cpp:86] Creating Layer relu2
I0428 20:10:50.092540 31950 net.cpp:408] relu2 <- ip2
I0428 20:10:50.092545 31950 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:50.093379 31950 net.cpp:124] Setting up relu2
I0428 20:10:50.093394 31950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:50.093397 31950 net.cpp:139] Memory required for data: 5843200
I0428 20:10:50.093401 31950 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:50.093410 31950 net.cpp:86] Creating Layer ip3
I0428 20:10:50.093412 31950 net.cpp:408] ip3 <- ip2
I0428 20:10:50.093418 31950 net.cpp:382] ip3 -> ip3
I0428 20:10:50.093525 31950 net.cpp:124] Setting up ip3
I0428 20:10:50.093534 31950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:50.093538 31950 net.cpp:139] Memory required for data: 5845760
I0428 20:10:50.093546 31950 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:50.093552 31950 net.cpp:86] Creating Layer relu3
I0428 20:10:50.093555 31950 net.cpp:408] relu3 <- ip3
I0428 20:10:50.093559 31950 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:50.093737 31950 net.cpp:124] Setting up relu3
I0428 20:10:50.093747 31950 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:50.093750 31950 net.cpp:139] Memory required for data: 5848320
I0428 20:10:50.093753 31950 layer_factory.hpp:77] Creating layer loss
I0428 20:10:50.093760 31950 net.cpp:86] Creating Layer loss
I0428 20:10:50.093763 31950 net.cpp:408] loss <- ip3
I0428 20:10:50.093768 31950 net.cpp:408] loss <- label
I0428 20:10:50.093775 31950 net.cpp:382] loss -> loss
I0428 20:10:50.093794 31950 layer_factory.hpp:77] Creating layer loss
I0428 20:10:50.094034 31950 net.cpp:124] Setting up loss
I0428 20:10:50.094043 31950 net.cpp:131] Top shape: (1)
I0428 20:10:50.094048 31950 net.cpp:134]     with loss weight 1
I0428 20:10:50.094063 31950 net.cpp:139] Memory required for data: 5848324
I0428 20:10:50.094066 31950 net.cpp:200] loss needs backward computation.
I0428 20:10:50.094070 31950 net.cpp:200] relu3 needs backward computation.
I0428 20:10:50.094074 31950 net.cpp:200] ip3 needs backward computation.
I0428 20:10:50.094079 31950 net.cpp:200] relu2 needs backward computation.
I0428 20:10:50.094081 31950 net.cpp:200] ip2 needs backward computation.
I0428 20:10:50.094084 31950 net.cpp:200] relu1 needs backward computation.
I0428 20:10:50.094087 31950 net.cpp:200] ip1 needs backward computation.
I0428 20:10:50.094091 31950 net.cpp:200] pool1 needs backward computation.
I0428 20:10:50.094094 31950 net.cpp:200] conv1 needs backward computation.
I0428 20:10:50.094099 31950 net.cpp:200] pool0 needs backward computation.
I0428 20:10:50.094102 31950 net.cpp:200] conv0 needs backward computation.
I0428 20:10:50.094105 31950 net.cpp:202] mnist does not need backward computation.
I0428 20:10:50.094110 31950 net.cpp:244] This network produces output loss
I0428 20:10:50.094118 31950 net.cpp:257] Network initialization done.
I0428 20:10:50.094467 31950 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1144.prototxt
I0428 20:10:50.094497 31950 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:50.094594 31950 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:50.094681 31950 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:50.094732 31950 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:50.094746 31950 net.cpp:86] Creating Layer mnist
I0428 20:10:50.094751 31950 net.cpp:382] mnist -> data
I0428 20:10:50.094759 31950 net.cpp:382] mnist -> label
I0428 20:10:50.094851 31950 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:50.096911 31950 net.cpp:124] Setting up mnist
I0428 20:10:50.096926 31950 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:50.096932 31950 net.cpp:131] Top shape: 100 (100)
I0428 20:10:50.096935 31950 net.cpp:139] Memory required for data: 314000
I0428 20:10:50.096940 31950 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:50.096951 31950 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:50.096956 31950 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:50.096961 31950 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:50.096969 31950 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:50.097017 31950 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:50.097023 31950 net.cpp:131] Top shape: 100 (100)
I0428 20:10:50.097026 31950 net.cpp:131] Top shape: 100 (100)
I0428 20:10:50.097029 31950 net.cpp:139] Memory required for data: 314800
I0428 20:10:50.097033 31950 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:50.097043 31950 net.cpp:86] Creating Layer conv0
I0428 20:10:50.097045 31950 net.cpp:408] conv0 <- data
I0428 20:10:50.097050 31950 net.cpp:382] conv0 -> conv0
I0428 20:10:50.098819 31950 net.cpp:124] Setting up conv0
I0428 20:10:50.098835 31950 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:50.098839 31950 net.cpp:139] Memory required for data: 6074800
I0428 20:10:50.098850 31950 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:50.098856 31950 net.cpp:86] Creating Layer pool0
I0428 20:10:50.098860 31950 net.cpp:408] pool0 <- conv0
I0428 20:10:50.098866 31950 net.cpp:382] pool0 -> pool0
I0428 20:10:50.098906 31950 net.cpp:124] Setting up pool0
I0428 20:10:50.098912 31950 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:50.098914 31950 net.cpp:139] Memory required for data: 7514800
I0428 20:10:50.098917 31950 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:50.098927 31950 net.cpp:86] Creating Layer conv1
I0428 20:10:50.098930 31950 net.cpp:408] conv1 <- pool0
I0428 20:10:50.098935 31950 net.cpp:382] conv1 -> conv1
I0428 20:10:50.100697 31950 net.cpp:124] Setting up conv1
I0428 20:10:50.100711 31950 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:10:50.100716 31950 net.cpp:139] Memory required for data: 8794800
I0428 20:10:50.100726 31950 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:50.100733 31950 net.cpp:86] Creating Layer pool1
I0428 20:10:50.100738 31950 net.cpp:408] pool1 <- conv1
I0428 20:10:50.100742 31950 net.cpp:382] pool1 -> pool1
I0428 20:10:50.100790 31950 net.cpp:124] Setting up pool1
I0428 20:10:50.100795 31950 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:10:50.100798 31950 net.cpp:139] Memory required for data: 9114800
I0428 20:10:50.100802 31950 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:50.100816 31950 net.cpp:86] Creating Layer ip1
I0428 20:10:50.100821 31950 net.cpp:408] ip1 <- pool1
I0428 20:10:50.100826 31950 net.cpp:382] ip1 -> ip1
I0428 20:10:50.100976 31950 net.cpp:124] Setting up ip1
I0428 20:10:50.100986 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.101001 31950 net.cpp:139] Memory required for data: 9118800
I0428 20:10:50.101009 31950 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:50.101014 31950 net.cpp:86] Creating Layer relu1
I0428 20:10:50.101018 31950 net.cpp:408] relu1 <- ip1
I0428 20:10:50.101024 31950 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:50.101192 31950 net.cpp:124] Setting up relu1
I0428 20:10:50.101202 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.101205 31950 net.cpp:139] Memory required for data: 9122800
I0428 20:10:50.101208 31950 layer_factory.hpp:77] Creating layer ip2
I0428 20:10:50.101217 31950 net.cpp:86] Creating Layer ip2
I0428 20:10:50.101220 31950 net.cpp:408] ip2 <- ip1
I0428 20:10:50.101225 31950 net.cpp:382] ip2 -> ip2
I0428 20:10:50.101349 31950 net.cpp:124] Setting up ip2
I0428 20:10:50.101357 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.101361 31950 net.cpp:139] Memory required for data: 9126800
I0428 20:10:50.101366 31950 layer_factory.hpp:77] Creating layer relu2
I0428 20:10:50.101372 31950 net.cpp:86] Creating Layer relu2
I0428 20:10:50.101375 31950 net.cpp:408] relu2 <- ip2
I0428 20:10:50.101379 31950 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:10:50.101589 31950 net.cpp:124] Setting up relu2
I0428 20:10:50.101599 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.101603 31950 net.cpp:139] Memory required for data: 9130800
I0428 20:10:50.101606 31950 layer_factory.hpp:77] Creating layer ip3
I0428 20:10:50.101613 31950 net.cpp:86] Creating Layer ip3
I0428 20:10:50.101616 31950 net.cpp:408] ip3 <- ip2
I0428 20:10:50.101622 31950 net.cpp:382] ip3 -> ip3
I0428 20:10:50.101722 31950 net.cpp:124] Setting up ip3
I0428 20:10:50.101730 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.101734 31950 net.cpp:139] Memory required for data: 9134800
I0428 20:10:50.101742 31950 layer_factory.hpp:77] Creating layer relu3
I0428 20:10:50.101747 31950 net.cpp:86] Creating Layer relu3
I0428 20:10:50.101752 31950 net.cpp:408] relu3 <- ip3
I0428 20:10:50.101757 31950 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:10:50.102607 31950 net.cpp:124] Setting up relu3
I0428 20:10:50.102619 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.102623 31950 net.cpp:139] Memory required for data: 9138800
I0428 20:10:50.102627 31950 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:10:50.102633 31950 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:10:50.102638 31950 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:10:50.102643 31950 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:10:50.102649 31950 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:10:50.102690 31950 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:10:50.102695 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.102699 31950 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:50.102702 31950 net.cpp:139] Memory required for data: 9146800
I0428 20:10:50.102705 31950 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:50.102711 31950 net.cpp:86] Creating Layer accuracy
I0428 20:10:50.102715 31950 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:10:50.102720 31950 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:50.102725 31950 net.cpp:382] accuracy -> accuracy
I0428 20:10:50.102731 31950 net.cpp:124] Setting up accuracy
I0428 20:10:50.102736 31950 net.cpp:131] Top shape: (1)
I0428 20:10:50.102740 31950 net.cpp:139] Memory required for data: 9146804
I0428 20:10:50.102743 31950 layer_factory.hpp:77] Creating layer loss
I0428 20:10:50.102747 31950 net.cpp:86] Creating Layer loss
I0428 20:10:50.102751 31950 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:10:50.102756 31950 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:50.102759 31950 net.cpp:382] loss -> loss
I0428 20:10:50.102766 31950 layer_factory.hpp:77] Creating layer loss
I0428 20:10:50.103010 31950 net.cpp:124] Setting up loss
I0428 20:10:50.103020 31950 net.cpp:131] Top shape: (1)
I0428 20:10:50.103024 31950 net.cpp:134]     with loss weight 1
I0428 20:10:50.103040 31950 net.cpp:139] Memory required for data: 9146808
I0428 20:10:50.103045 31950 net.cpp:200] loss needs backward computation.
I0428 20:10:50.103050 31950 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:50.103055 31950 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:10:50.103057 31950 net.cpp:200] relu3 needs backward computation.
I0428 20:10:50.103061 31950 net.cpp:200] ip3 needs backward computation.
I0428 20:10:50.103065 31950 net.cpp:200] relu2 needs backward computation.
I0428 20:10:50.103068 31950 net.cpp:200] ip2 needs backward computation.
I0428 20:10:50.103071 31950 net.cpp:200] relu1 needs backward computation.
I0428 20:10:50.103075 31950 net.cpp:200] ip1 needs backward computation.
I0428 20:10:50.103078 31950 net.cpp:200] pool1 needs backward computation.
I0428 20:10:50.103082 31950 net.cpp:200] conv1 needs backward computation.
I0428 20:10:50.103086 31950 net.cpp:200] pool0 needs backward computation.
I0428 20:10:50.103091 31950 net.cpp:200] conv0 needs backward computation.
I0428 20:10:50.103094 31950 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:50.103099 31950 net.cpp:202] mnist does not need backward computation.
I0428 20:10:50.103102 31950 net.cpp:244] This network produces output accuracy
I0428 20:10:50.103112 31950 net.cpp:244] This network produces output loss
I0428 20:10:50.103124 31950 net.cpp:257] Network initialization done.
I0428 20:10:50.103170 31950 solver.cpp:56] Solver scaffolding done.
I0428 20:10:50.103533 31950 caffe.cpp:248] Starting Optimization
I0428 20:10:50.103538 31950 solver.cpp:273] Solving LeNet
I0428 20:10:50.103541 31950 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:50.104454 31950 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:50.110874 31950 blocking_queue.cpp:49] Waiting for data
I0428 20:10:50.180161 31957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:50.180800 31950 solver.cpp:398]     Test net output #0: accuracy = 0.1227
I0428 20:10:50.180855 31950 solver.cpp:398]     Test net output #1: loss = 2.34697 (* 1 = 2.34697 loss)
I0428 20:10:50.184506 31950 solver.cpp:219] Iteration 0 (-1.00473e-42 iter/s, 0.080937s/100 iters), loss = 2.38754
I0428 20:10:50.184530 31950 solver.cpp:238]     Train net output #0: loss = 2.38754 (* 1 = 2.38754 loss)
I0428 20:10:50.184541 31950 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:50.304697 31950 solver.cpp:219] Iteration 100 (832.257 iter/s, 0.120155s/100 iters), loss = 0.436914
I0428 20:10:50.304736 31950 solver.cpp:238]     Train net output #0: loss = 0.436914 (* 1 = 0.436914 loss)
I0428 20:10:50.304743 31950 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:50.423187 31950 solver.cpp:219] Iteration 200 (844.193 iter/s, 0.118456s/100 iters), loss = 0.207296
I0428 20:10:50.423210 31950 solver.cpp:238]     Train net output #0: loss = 0.207295 (* 1 = 0.207295 loss)
I0428 20:10:50.423218 31950 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:50.541749 31950 solver.cpp:219] Iteration 300 (843.69 iter/s, 0.118527s/100 iters), loss = 0.293419
I0428 20:10:50.541774 31950 solver.cpp:238]     Train net output #0: loss = 0.293419 (* 1 = 0.293419 loss)
I0428 20:10:50.541779 31950 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:50.660607 31950 solver.cpp:219] Iteration 400 (841.581 iter/s, 0.118824s/100 iters), loss = 0.205691
I0428 20:10:50.660645 31950 solver.cpp:238]     Train net output #0: loss = 0.205691 (* 1 = 0.205691 loss)
I0428 20:10:50.660666 31950 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:50.778983 31950 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:50.836491 31957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:50.837129 31950 solver.cpp:398]     Test net output #0: accuracy = 0.945
I0428 20:10:50.837177 31950 solver.cpp:398]     Test net output #1: loss = 0.175137 (* 1 = 0.175137 loss)
I0428 20:10:50.838528 31950 solver.cpp:219] Iteration 500 (562.206 iter/s, 0.177871s/100 iters), loss = 0.0612587
I0428 20:10:50.838579 31950 solver.cpp:238]     Train net output #0: loss = 0.0612587 (* 1 = 0.0612587 loss)
I0428 20:10:50.838587 31950 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:50.964303 31950 solver.cpp:219] Iteration 600 (795.467 iter/s, 0.125712s/100 iters), loss = 0.0798635
I0428 20:10:50.964326 31950 solver.cpp:238]     Train net output #0: loss = 0.0798634 (* 1 = 0.0798634 loss)
I0428 20:10:50.964332 31950 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:51.085242 31950 solver.cpp:219] Iteration 700 (827.105 iter/s, 0.120904s/100 iters), loss = 0.213132
I0428 20:10:51.085281 31950 solver.cpp:238]     Train net output #0: loss = 0.213132 (* 1 = 0.213132 loss)
I0428 20:10:51.085289 31950 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:51.203639 31950 solver.cpp:219] Iteration 800 (844.864 iter/s, 0.118362s/100 iters), loss = 0.269322
I0428 20:10:51.203680 31950 solver.cpp:238]     Train net output #0: loss = 0.269322 (* 1 = 0.269322 loss)
I0428 20:10:51.203686 31950 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:51.323282 31950 solver.cpp:219] Iteration 900 (836.177 iter/s, 0.119592s/100 iters), loss = 0.246198
I0428 20:10:51.323307 31950 solver.cpp:238]     Train net output #0: loss = 0.246197 (* 1 = 0.246197 loss)
I0428 20:10:51.323312 31950 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:51.362443 31956 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:51.440321 31950 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:51.441771 31950 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:51.442678 31950 solver.cpp:311] Iteration 1000, loss = 0.0331922
I0428 20:10:51.442694 31950 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:51.518362 31957 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:51.518983 31950 solver.cpp:398]     Test net output #0: accuracy = 0.9708
I0428 20:10:51.519021 31950 solver.cpp:398]     Test net output #1: loss = 0.0964092 (* 1 = 0.0964092 loss)
I0428 20:10:51.519026 31950 solver.cpp:316] Optimization Done.
I0428 20:10:51.519029 31950 caffe.cpp:259] Optimization Done.
