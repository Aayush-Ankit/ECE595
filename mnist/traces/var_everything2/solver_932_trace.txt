I0428 20:02:34.425323 29973 caffe.cpp:218] Using GPUs 0
I0428 20:02:34.463059 29973 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:34.975646 29973 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test932.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:34.975790 29973 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test932.prototxt
I0428 20:02:34.976189 29973 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:34.976208 29973 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:34.976305 29973 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:34.976379 29973 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:34.976481 29973 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:34.976503 29973 net.cpp:86] Creating Layer mnist
I0428 20:02:34.976511 29973 net.cpp:382] mnist -> data
I0428 20:02:34.976533 29973 net.cpp:382] mnist -> label
I0428 20:02:34.977627 29973 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:34.980060 29973 net.cpp:124] Setting up mnist
I0428 20:02:34.980078 29973 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:34.980085 29973 net.cpp:131] Top shape: 64 (64)
I0428 20:02:34.980088 29973 net.cpp:139] Memory required for data: 200960
I0428 20:02:34.980095 29973 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:34.980111 29973 net.cpp:86] Creating Layer conv0
I0428 20:02:34.980132 29973 net.cpp:408] conv0 <- data
I0428 20:02:34.980144 29973 net.cpp:382] conv0 -> conv0
I0428 20:02:35.244887 29973 net.cpp:124] Setting up conv0
I0428 20:02:35.244930 29973 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:35.244933 29973 net.cpp:139] Memory required for data: 1675520
I0428 20:02:35.244948 29973 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:35.244961 29973 net.cpp:86] Creating Layer pool0
I0428 20:02:35.244966 29973 net.cpp:408] pool0 <- conv0
I0428 20:02:35.244971 29973 net.cpp:382] pool0 -> pool0
I0428 20:02:35.245018 29973 net.cpp:124] Setting up pool0
I0428 20:02:35.245023 29973 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:35.245025 29973 net.cpp:139] Memory required for data: 2044160
I0428 20:02:35.245029 29973 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:35.245040 29973 net.cpp:86] Creating Layer conv1
I0428 20:02:35.245043 29973 net.cpp:408] conv1 <- pool0
I0428 20:02:35.245048 29973 net.cpp:382] conv1 -> conv1
I0428 20:02:35.247990 29973 net.cpp:124] Setting up conv1
I0428 20:02:35.248020 29973 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:02:35.248024 29973 net.cpp:139] Memory required for data: 2863360
I0428 20:02:35.248033 29973 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:35.248040 29973 net.cpp:86] Creating Layer pool1
I0428 20:02:35.248044 29973 net.cpp:408] pool1 <- conv1
I0428 20:02:35.248049 29973 net.cpp:382] pool1 -> pool1
I0428 20:02:35.248085 29973 net.cpp:124] Setting up pool1
I0428 20:02:35.248090 29973 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:02:35.248092 29973 net.cpp:139] Memory required for data: 3068160
I0428 20:02:35.248095 29973 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:35.248102 29973 net.cpp:86] Creating Layer ip1
I0428 20:02:35.248105 29973 net.cpp:408] ip1 <- pool1
I0428 20:02:35.248109 29973 net.cpp:382] ip1 -> ip1
I0428 20:02:35.248415 29973 net.cpp:124] Setting up ip1
I0428 20:02:35.248423 29973 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:35.248426 29973 net.cpp:139] Memory required for data: 3080960
I0428 20:02:35.248432 29973 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:35.248438 29973 net.cpp:86] Creating Layer relu1
I0428 20:02:35.248441 29973 net.cpp:408] relu1 <- ip1
I0428 20:02:35.248445 29973 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:35.248600 29973 net.cpp:124] Setting up relu1
I0428 20:02:35.248610 29973 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:35.248612 29973 net.cpp:139] Memory required for data: 3093760
I0428 20:02:35.248615 29973 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:35.248621 29973 net.cpp:86] Creating Layer ip2
I0428 20:02:35.248625 29973 net.cpp:408] ip2 <- ip1
I0428 20:02:35.248630 29973 net.cpp:382] ip2 -> ip2
I0428 20:02:35.249686 29973 net.cpp:124] Setting up ip2
I0428 20:02:35.249714 29973 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:35.249718 29973 net.cpp:139] Memory required for data: 3100160
I0428 20:02:35.249724 29973 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:35.249730 29973 net.cpp:86] Creating Layer relu2
I0428 20:02:35.249734 29973 net.cpp:408] relu2 <- ip2
I0428 20:02:35.249738 29973 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:35.250542 29973 net.cpp:124] Setting up relu2
I0428 20:02:35.250553 29973 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:02:35.250572 29973 net.cpp:139] Memory required for data: 3106560
I0428 20:02:35.250576 29973 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:35.250594 29973 net.cpp:86] Creating Layer ip3
I0428 20:02:35.250598 29973 net.cpp:408] ip3 <- ip2
I0428 20:02:35.250603 29973 net.cpp:382] ip3 -> ip3
I0428 20:02:35.250696 29973 net.cpp:124] Setting up ip3
I0428 20:02:35.250704 29973 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:35.250706 29973 net.cpp:139] Memory required for data: 3109120
I0428 20:02:35.250715 29973 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:35.250720 29973 net.cpp:86] Creating Layer relu3
I0428 20:02:35.250722 29973 net.cpp:408] relu3 <- ip3
I0428 20:02:35.250726 29973 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:35.250911 29973 net.cpp:124] Setting up relu3
I0428 20:02:35.250921 29973 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:35.250923 29973 net.cpp:139] Memory required for data: 3111680
I0428 20:02:35.250926 29973 layer_factory.hpp:77] Creating layer loss
I0428 20:02:35.250932 29973 net.cpp:86] Creating Layer loss
I0428 20:02:35.250936 29973 net.cpp:408] loss <- ip3
I0428 20:02:35.250939 29973 net.cpp:408] loss <- label
I0428 20:02:35.250946 29973 net.cpp:382] loss -> loss
I0428 20:02:35.250964 29973 layer_factory.hpp:77] Creating layer loss
I0428 20:02:35.251224 29973 net.cpp:124] Setting up loss
I0428 20:02:35.251232 29973 net.cpp:131] Top shape: (1)
I0428 20:02:35.251235 29973 net.cpp:134]     with loss weight 1
I0428 20:02:35.251250 29973 net.cpp:139] Memory required for data: 3111684
I0428 20:02:35.251253 29973 net.cpp:200] loss needs backward computation.
I0428 20:02:35.251257 29973 net.cpp:200] relu3 needs backward computation.
I0428 20:02:35.251260 29973 net.cpp:200] ip3 needs backward computation.
I0428 20:02:35.251263 29973 net.cpp:200] relu2 needs backward computation.
I0428 20:02:35.251266 29973 net.cpp:200] ip2 needs backward computation.
I0428 20:02:35.251268 29973 net.cpp:200] relu1 needs backward computation.
I0428 20:02:35.251271 29973 net.cpp:200] ip1 needs backward computation.
I0428 20:02:35.251274 29973 net.cpp:200] pool1 needs backward computation.
I0428 20:02:35.251277 29973 net.cpp:200] conv1 needs backward computation.
I0428 20:02:35.251281 29973 net.cpp:200] pool0 needs backward computation.
I0428 20:02:35.251284 29973 net.cpp:200] conv0 needs backward computation.
I0428 20:02:35.251287 29973 net.cpp:202] mnist does not need backward computation.
I0428 20:02:35.251291 29973 net.cpp:244] This network produces output loss
I0428 20:02:35.251299 29973 net.cpp:257] Network initialization done.
I0428 20:02:35.251667 29973 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test932.prototxt
I0428 20:02:35.251708 29973 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:35.251794 29973 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:35.251868 29973 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:35.251922 29973 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:35.251935 29973 net.cpp:86] Creating Layer mnist
I0428 20:02:35.251938 29973 net.cpp:382] mnist -> data
I0428 20:02:35.251946 29973 net.cpp:382] mnist -> label
I0428 20:02:35.252058 29973 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:35.254109 29973 net.cpp:124] Setting up mnist
I0428 20:02:35.254154 29973 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:35.254159 29973 net.cpp:131] Top shape: 100 (100)
I0428 20:02:35.254178 29973 net.cpp:139] Memory required for data: 314000
I0428 20:02:35.254181 29973 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:35.254189 29973 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:35.254192 29973 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:35.254197 29973 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:35.254204 29973 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:35.254250 29973 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:35.254256 29973 net.cpp:131] Top shape: 100 (100)
I0428 20:02:35.254259 29973 net.cpp:131] Top shape: 100 (100)
I0428 20:02:35.254262 29973 net.cpp:139] Memory required for data: 314800
I0428 20:02:35.254266 29973 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:35.254273 29973 net.cpp:86] Creating Layer conv0
I0428 20:02:35.254276 29973 net.cpp:408] conv0 <- data
I0428 20:02:35.254281 29973 net.cpp:382] conv0 -> conv0
I0428 20:02:35.255864 29973 net.cpp:124] Setting up conv0
I0428 20:02:35.255893 29973 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:35.255897 29973 net.cpp:139] Memory required for data: 2618800
I0428 20:02:35.255905 29973 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:35.255911 29973 net.cpp:86] Creating Layer pool0
I0428 20:02:35.255915 29973 net.cpp:408] pool0 <- conv0
I0428 20:02:35.255919 29973 net.cpp:382] pool0 -> pool0
I0428 20:02:35.255954 29973 net.cpp:124] Setting up pool0
I0428 20:02:35.255959 29973 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:35.255961 29973 net.cpp:139] Memory required for data: 3194800
I0428 20:02:35.255964 29973 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:35.255972 29973 net.cpp:86] Creating Layer conv1
I0428 20:02:35.255975 29973 net.cpp:408] conv1 <- pool0
I0428 20:02:35.255980 29973 net.cpp:382] conv1 -> conv1
I0428 20:02:35.257632 29973 net.cpp:124] Setting up conv1
I0428 20:02:35.257663 29973 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:02:35.257666 29973 net.cpp:139] Memory required for data: 4474800
I0428 20:02:35.257676 29973 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:35.257683 29973 net.cpp:86] Creating Layer pool1
I0428 20:02:35.257688 29973 net.cpp:408] pool1 <- conv1
I0428 20:02:35.257694 29973 net.cpp:382] pool1 -> pool1
I0428 20:02:35.257736 29973 net.cpp:124] Setting up pool1
I0428 20:02:35.257750 29973 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:02:35.257753 29973 net.cpp:139] Memory required for data: 4794800
I0428 20:02:35.257756 29973 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:35.257762 29973 net.cpp:86] Creating Layer ip1
I0428 20:02:35.257766 29973 net.cpp:408] ip1 <- pool1
I0428 20:02:35.257771 29973 net.cpp:382] ip1 -> ip1
I0428 20:02:35.258139 29973 net.cpp:124] Setting up ip1
I0428 20:02:35.258148 29973 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:35.258177 29973 net.cpp:139] Memory required for data: 4814800
I0428 20:02:35.258186 29973 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:35.258191 29973 net.cpp:86] Creating Layer relu1
I0428 20:02:35.258196 29973 net.cpp:408] relu1 <- ip1
I0428 20:02:35.258200 29973 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:35.258443 29973 net.cpp:124] Setting up relu1
I0428 20:02:35.258452 29973 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:35.258455 29973 net.cpp:139] Memory required for data: 4834800
I0428 20:02:35.258460 29973 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:35.258466 29973 net.cpp:86] Creating Layer ip2
I0428 20:02:35.258469 29973 net.cpp:408] ip2 <- ip1
I0428 20:02:35.258474 29973 net.cpp:382] ip2 -> ip2
I0428 20:02:35.258641 29973 net.cpp:124] Setting up ip2
I0428 20:02:35.258648 29973 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:35.258651 29973 net.cpp:139] Memory required for data: 4844800
I0428 20:02:35.258657 29973 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:35.258663 29973 net.cpp:86] Creating Layer relu2
I0428 20:02:35.258666 29973 net.cpp:408] relu2 <- ip2
I0428 20:02:35.258671 29973 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:35.258854 29973 net.cpp:124] Setting up relu2
I0428 20:02:35.258863 29973 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:02:35.258867 29973 net.cpp:139] Memory required for data: 4854800
I0428 20:02:35.258869 29973 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:35.258878 29973 net.cpp:86] Creating Layer ip3
I0428 20:02:35.258882 29973 net.cpp:408] ip3 <- ip2
I0428 20:02:35.258888 29973 net.cpp:382] ip3 -> ip3
I0428 20:02:35.258991 29973 net.cpp:124] Setting up ip3
I0428 20:02:35.258999 29973 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:35.259002 29973 net.cpp:139] Memory required for data: 4858800
I0428 20:02:35.259011 29973 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:35.259016 29973 net.cpp:86] Creating Layer relu3
I0428 20:02:35.259019 29973 net.cpp:408] relu3 <- ip3
I0428 20:02:35.259032 29973 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:35.259925 29973 net.cpp:124] Setting up relu3
I0428 20:02:35.259938 29973 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:35.259958 29973 net.cpp:139] Memory required for data: 4862800
I0428 20:02:35.259960 29973 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:02:35.259965 29973 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:02:35.259968 29973 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:02:35.259975 29973 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:02:35.259981 29973 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:02:35.260041 29973 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:02:35.260049 29973 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:35.260053 29973 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:35.260056 29973 net.cpp:139] Memory required for data: 4870800
I0428 20:02:35.260059 29973 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:35.260064 29973 net.cpp:86] Creating Layer accuracy
I0428 20:02:35.260067 29973 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:02:35.260071 29973 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:35.260076 29973 net.cpp:382] accuracy -> accuracy
I0428 20:02:35.260082 29973 net.cpp:124] Setting up accuracy
I0428 20:02:35.260085 29973 net.cpp:131] Top shape: (1)
I0428 20:02:35.260088 29973 net.cpp:139] Memory required for data: 4870804
I0428 20:02:35.260092 29973 layer_factory.hpp:77] Creating layer loss
I0428 20:02:35.260097 29973 net.cpp:86] Creating Layer loss
I0428 20:02:35.260099 29973 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:02:35.260103 29973 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:35.260107 29973 net.cpp:382] loss -> loss
I0428 20:02:35.260113 29973 layer_factory.hpp:77] Creating layer loss
I0428 20:02:35.260390 29973 net.cpp:124] Setting up loss
I0428 20:02:35.260399 29973 net.cpp:131] Top shape: (1)
I0428 20:02:35.260402 29973 net.cpp:134]     with loss weight 1
I0428 20:02:35.260418 29973 net.cpp:139] Memory required for data: 4870808
I0428 20:02:35.260423 29973 net.cpp:200] loss needs backward computation.
I0428 20:02:35.260427 29973 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:35.260432 29973 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:02:35.260434 29973 net.cpp:200] relu3 needs backward computation.
I0428 20:02:35.260437 29973 net.cpp:200] ip3 needs backward computation.
I0428 20:02:35.260440 29973 net.cpp:200] relu2 needs backward computation.
I0428 20:02:35.260443 29973 net.cpp:200] ip2 needs backward computation.
I0428 20:02:35.260447 29973 net.cpp:200] relu1 needs backward computation.
I0428 20:02:35.260449 29973 net.cpp:200] ip1 needs backward computation.
I0428 20:02:35.260452 29973 net.cpp:200] pool1 needs backward computation.
I0428 20:02:35.260457 29973 net.cpp:200] conv1 needs backward computation.
I0428 20:02:35.260460 29973 net.cpp:200] pool0 needs backward computation.
I0428 20:02:35.260463 29973 net.cpp:200] conv0 needs backward computation.
I0428 20:02:35.260468 29973 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:35.260471 29973 net.cpp:202] mnist does not need backward computation.
I0428 20:02:35.260474 29973 net.cpp:244] This network produces output accuracy
I0428 20:02:35.260478 29973 net.cpp:244] This network produces output loss
I0428 20:02:35.260489 29973 net.cpp:257] Network initialization done.
I0428 20:02:35.260535 29973 solver.cpp:56] Solver scaffolding done.
I0428 20:02:35.260917 29973 caffe.cpp:248] Starting Optimization
I0428 20:02:35.260924 29973 solver.cpp:273] Solving LeNet
I0428 20:02:35.260927 29973 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:35.261251 29973 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:35.266139 29973 blocking_queue.cpp:49] Waiting for data
I0428 20:02:35.337549 29980 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:35.338234 29973 solver.cpp:398]     Test net output #0: accuracy = 0.088
I0428 20:02:35.338273 29973 solver.cpp:398]     Test net output #1: loss = 2.30833 (* 1 = 2.30833 loss)
I0428 20:02:35.343276 29973 solver.cpp:219] Iteration 0 (-1.93065e-35 iter/s, 0.0823132s/100 iters), loss = 2.29103
I0428 20:02:35.343323 29973 solver.cpp:238]     Train net output #0: loss = 2.29103 (* 1 = 2.29103 loss)
I0428 20:02:35.343344 29973 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:35.466382 29973 solver.cpp:219] Iteration 100 (812.705 iter/s, 0.123046s/100 iters), loss = 0.802604
I0428 20:02:35.466418 29973 solver.cpp:238]     Train net output #0: loss = 0.802604 (* 1 = 0.802604 loss)
I0428 20:02:35.466428 29973 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:35.579324 29973 solver.cpp:219] Iteration 200 (885.811 iter/s, 0.112891s/100 iters), loss = 0.960483
I0428 20:02:35.579356 29973 solver.cpp:238]     Train net output #0: loss = 0.960483 (* 1 = 0.960483 loss)
I0428 20:02:35.579365 29973 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:35.692376 29973 solver.cpp:219] Iteration 300 (884.888 iter/s, 0.113009s/100 iters), loss = 0.305091
I0428 20:02:35.692409 29973 solver.cpp:238]     Train net output #0: loss = 0.305091 (* 1 = 0.305091 loss)
I0428 20:02:35.692417 29973 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:35.805704 29973 solver.cpp:219] Iteration 400 (882.735 iter/s, 0.113284s/100 iters), loss = 0.275372
I0428 20:02:35.805735 29973 solver.cpp:238]     Train net output #0: loss = 0.275372 (* 1 = 0.275372 loss)
I0428 20:02:35.805743 29973 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:35.920125 29973 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:35.973989 29980 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:35.974524 29973 solver.cpp:398]     Test net output #0: accuracy = 0.8536
I0428 20:02:35.974550 29973 solver.cpp:398]     Test net output #1: loss = 0.377883 (* 1 = 0.377883 loss)
I0428 20:02:35.975667 29973 solver.cpp:219] Iteration 500 (588.521 iter/s, 0.169917s/100 iters), loss = 0.446278
I0428 20:02:35.975730 29973 solver.cpp:238]     Train net output #0: loss = 0.446278 (* 1 = 0.446278 loss)
I0428 20:02:35.975739 29973 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:36.090375 29973 solver.cpp:219] Iteration 600 (872.307 iter/s, 0.114639s/100 iters), loss = 0.489594
I0428 20:02:36.090409 29973 solver.cpp:238]     Train net output #0: loss = 0.489594 (* 1 = 0.489594 loss)
I0428 20:02:36.090416 29973 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:36.203007 29973 solver.cpp:219] Iteration 700 (888.196 iter/s, 0.112588s/100 iters), loss = 0.310749
I0428 20:02:36.203039 29973 solver.cpp:238]     Train net output #0: loss = 0.310749 (* 1 = 0.310749 loss)
I0428 20:02:36.203047 29973 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:36.315244 29973 solver.cpp:219] Iteration 800 (891.317 iter/s, 0.112194s/100 iters), loss = 0.408354
I0428 20:02:36.315277 29973 solver.cpp:238]     Train net output #0: loss = 0.408354 (* 1 = 0.408354 loss)
I0428 20:02:36.315285 29973 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:36.430397 29973 solver.cpp:219] Iteration 900 (868.752 iter/s, 0.115108s/100 iters), loss = 0.423819
I0428 20:02:36.430433 29973 solver.cpp:238]     Train net output #0: loss = 0.423819 (* 1 = 0.423819 loss)
I0428 20:02:36.430440 29973 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:36.470317 29979 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:36.543640 29973 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:36.545501 29973 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:36.546448 29973 solver.cpp:311] Iteration 1000, loss = 0.380545
I0428 20:02:36.546466 29973 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:36.621536 29980 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:36.622071 29973 solver.cpp:398]     Test net output #0: accuracy = 0.8688
I0428 20:02:36.622090 29973 solver.cpp:398]     Test net output #1: loss = 0.32546 (* 1 = 0.32546 loss)
I0428 20:02:36.622095 29973 solver.cpp:316] Optimization Done.
I0428 20:02:36.622098 29973 caffe.cpp:259] Optimization Done.
