I0428 20:07:53.060753 31257 caffe.cpp:218] Using GPUs 0
I0428 20:07:53.097730 31257 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:07:53.550523 31257 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1068.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:07:53.550652 31257 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1068.prototxt
I0428 20:07:53.550971 31257 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:07:53.550987 31257 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:07:53.551082 31257 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:53.551149 31257 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:53.551230 31257 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:07:53.551249 31257 net.cpp:86] Creating Layer mnist
I0428 20:07:53.551255 31257 net.cpp:382] mnist -> data
I0428 20:07:53.551275 31257 net.cpp:382] mnist -> label
I0428 20:07:53.552208 31257 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:07:53.554652 31257 net.cpp:124] Setting up mnist
I0428 20:07:53.554700 31257 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:07:53.554707 31257 net.cpp:131] Top shape: 64 (64)
I0428 20:07:53.554708 31257 net.cpp:139] Memory required for data: 200960
I0428 20:07:53.554715 31257 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:53.554744 31257 net.cpp:86] Creating Layer conv0
I0428 20:07:53.554762 31257 net.cpp:408] conv0 <- data
I0428 20:07:53.554783 31257 net.cpp:382] conv0 -> conv0
I0428 20:07:53.785120 31257 net.cpp:124] Setting up conv0
I0428 20:07:53.785174 31257 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:07:53.785178 31257 net.cpp:139] Memory required for data: 3887360
I0428 20:07:53.785207 31257 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:53.785233 31257 net.cpp:86] Creating Layer pool0
I0428 20:07:53.785253 31257 net.cpp:408] pool0 <- conv0
I0428 20:07:53.785259 31257 net.cpp:382] pool0 -> pool0
I0428 20:07:53.785326 31257 net.cpp:124] Setting up pool0
I0428 20:07:53.785334 31257 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:07:53.785337 31257 net.cpp:139] Memory required for data: 4808960
I0428 20:07:53.785341 31257 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:53.785351 31257 net.cpp:86] Creating Layer conv1
I0428 20:07:53.785353 31257 net.cpp:408] conv1 <- pool0
I0428 20:07:53.785358 31257 net.cpp:382] conv1 -> conv1
I0428 20:07:53.788022 31257 net.cpp:124] Setting up conv1
I0428 20:07:53.788051 31257 net.cpp:131] Top shape: 64 10 8 8 (40960)
I0428 20:07:53.788055 31257 net.cpp:139] Memory required for data: 4972800
I0428 20:07:53.788079 31257 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:53.788086 31257 net.cpp:86] Creating Layer pool1
I0428 20:07:53.788090 31257 net.cpp:408] pool1 <- conv1
I0428 20:07:53.788095 31257 net.cpp:382] pool1 -> pool1
I0428 20:07:53.788146 31257 net.cpp:124] Setting up pool1
I0428 20:07:53.788151 31257 net.cpp:131] Top shape: 64 10 4 4 (10240)
I0428 20:07:53.788154 31257 net.cpp:139] Memory required for data: 5013760
I0428 20:07:53.788157 31257 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:53.788164 31257 net.cpp:86] Creating Layer ip1
I0428 20:07:53.788167 31257 net.cpp:408] ip1 <- pool1
I0428 20:07:53.788172 31257 net.cpp:382] ip1 -> ip1
I0428 20:07:53.789196 31257 net.cpp:124] Setting up ip1
I0428 20:07:53.789209 31257 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:53.789228 31257 net.cpp:139] Memory required for data: 5016320
I0428 20:07:53.789237 31257 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:53.789258 31257 net.cpp:86] Creating Layer relu1
I0428 20:07:53.789261 31257 net.cpp:408] relu1 <- ip1
I0428 20:07:53.789266 31257 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:53.789458 31257 net.cpp:124] Setting up relu1
I0428 20:07:53.789480 31257 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:53.789484 31257 net.cpp:139] Memory required for data: 5018880
I0428 20:07:53.789487 31257 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:53.789494 31257 net.cpp:86] Creating Layer ip2
I0428 20:07:53.789496 31257 net.cpp:408] ip2 <- ip1
I0428 20:07:53.789501 31257 net.cpp:382] ip2 -> ip2
I0428 20:07:53.789610 31257 net.cpp:124] Setting up ip2
I0428 20:07:53.789618 31257 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:53.789620 31257 net.cpp:139] Memory required for data: 5025280
I0428 20:07:53.789625 31257 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:53.789631 31257 net.cpp:86] Creating Layer relu2
I0428 20:07:53.789634 31257 net.cpp:408] relu2 <- ip2
I0428 20:07:53.789638 31257 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:53.790387 31257 net.cpp:124] Setting up relu2
I0428 20:07:53.790400 31257 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:07:53.790418 31257 net.cpp:139] Memory required for data: 5031680
I0428 20:07:53.790422 31257 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:53.790446 31257 net.cpp:86] Creating Layer ip3
I0428 20:07:53.790462 31257 net.cpp:408] ip3 <- ip2
I0428 20:07:53.790468 31257 net.cpp:382] ip3 -> ip3
I0428 20:07:53.790596 31257 net.cpp:124] Setting up ip3
I0428 20:07:53.790604 31257 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:53.790607 31257 net.cpp:139] Memory required for data: 5034240
I0428 20:07:53.790616 31257 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:53.790621 31257 net.cpp:86] Creating Layer relu3
I0428 20:07:53.790623 31257 net.cpp:408] relu3 <- ip3
I0428 20:07:53.790628 31257 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:53.790809 31257 net.cpp:124] Setting up relu3
I0428 20:07:53.790817 31257 net.cpp:131] Top shape: 64 10 (640)
I0428 20:07:53.790822 31257 net.cpp:139] Memory required for data: 5036800
I0428 20:07:53.790824 31257 layer_factory.hpp:77] Creating layer loss
I0428 20:07:53.790829 31257 net.cpp:86] Creating Layer loss
I0428 20:07:53.790832 31257 net.cpp:408] loss <- ip3
I0428 20:07:53.790837 31257 net.cpp:408] loss <- label
I0428 20:07:53.790856 31257 net.cpp:382] loss -> loss
I0428 20:07:53.790874 31257 layer_factory.hpp:77] Creating layer loss
I0428 20:07:53.791105 31257 net.cpp:124] Setting up loss
I0428 20:07:53.791115 31257 net.cpp:131] Top shape: (1)
I0428 20:07:53.791117 31257 net.cpp:134]     with loss weight 1
I0428 20:07:53.791137 31257 net.cpp:139] Memory required for data: 5036804
I0428 20:07:53.791141 31257 net.cpp:200] loss needs backward computation.
I0428 20:07:53.791144 31257 net.cpp:200] relu3 needs backward computation.
I0428 20:07:53.791147 31257 net.cpp:200] ip3 needs backward computation.
I0428 20:07:53.791151 31257 net.cpp:200] relu2 needs backward computation.
I0428 20:07:53.791153 31257 net.cpp:200] ip2 needs backward computation.
I0428 20:07:53.791157 31257 net.cpp:200] relu1 needs backward computation.
I0428 20:07:53.791158 31257 net.cpp:200] ip1 needs backward computation.
I0428 20:07:53.791162 31257 net.cpp:200] pool1 needs backward computation.
I0428 20:07:53.791164 31257 net.cpp:200] conv1 needs backward computation.
I0428 20:07:53.791167 31257 net.cpp:200] pool0 needs backward computation.
I0428 20:07:53.791170 31257 net.cpp:200] conv0 needs backward computation.
I0428 20:07:53.791174 31257 net.cpp:202] mnist does not need backward computation.
I0428 20:07:53.791177 31257 net.cpp:244] This network produces output loss
I0428 20:07:53.791185 31257 net.cpp:257] Network initialization done.
I0428 20:07:53.791550 31257 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1068.prototxt
I0428 20:07:53.791594 31257 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:07:53.791700 31257 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:07:53.791780 31257 layer_factory.hpp:77] Creating layer mnist
I0428 20:07:53.791826 31257 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:07:53.791839 31257 net.cpp:86] Creating Layer mnist
I0428 20:07:53.791843 31257 net.cpp:382] mnist -> data
I0428 20:07:53.791851 31257 net.cpp:382] mnist -> label
I0428 20:07:53.791947 31257 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:07:53.794062 31257 net.cpp:124] Setting up mnist
I0428 20:07:53.794106 31257 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:07:53.794111 31257 net.cpp:131] Top shape: 100 (100)
I0428 20:07:53.794131 31257 net.cpp:139] Memory required for data: 314000
I0428 20:07:53.794136 31257 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:07:53.794157 31257 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:07:53.794174 31257 net.cpp:408] label_mnist_1_split <- label
I0428 20:07:53.794179 31257 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:07:53.794201 31257 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:07:53.794294 31257 net.cpp:124] Setting up label_mnist_1_split
I0428 20:07:53.794302 31257 net.cpp:131] Top shape: 100 (100)
I0428 20:07:53.794306 31257 net.cpp:131] Top shape: 100 (100)
I0428 20:07:53.794309 31257 net.cpp:139] Memory required for data: 314800
I0428 20:07:53.794312 31257 layer_factory.hpp:77] Creating layer conv0
I0428 20:07:53.794320 31257 net.cpp:86] Creating Layer conv0
I0428 20:07:53.794324 31257 net.cpp:408] conv0 <- data
I0428 20:07:53.794329 31257 net.cpp:382] conv0 -> conv0
I0428 20:07:53.796118 31257 net.cpp:124] Setting up conv0
I0428 20:07:53.796131 31257 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:07:53.796151 31257 net.cpp:139] Memory required for data: 6074800
I0428 20:07:53.796160 31257 layer_factory.hpp:77] Creating layer pool0
I0428 20:07:53.796169 31257 net.cpp:86] Creating Layer pool0
I0428 20:07:53.796172 31257 net.cpp:408] pool0 <- conv0
I0428 20:07:53.796177 31257 net.cpp:382] pool0 -> pool0
I0428 20:07:53.796232 31257 net.cpp:124] Setting up pool0
I0428 20:07:53.796244 31257 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:07:53.796247 31257 net.cpp:139] Memory required for data: 7514800
I0428 20:07:53.796249 31257 layer_factory.hpp:77] Creating layer conv1
I0428 20:07:53.796273 31257 net.cpp:86] Creating Layer conv1
I0428 20:07:53.796277 31257 net.cpp:408] conv1 <- pool0
I0428 20:07:53.796283 31257 net.cpp:382] conv1 -> conv1
I0428 20:07:53.798552 31257 net.cpp:124] Setting up conv1
I0428 20:07:53.798580 31257 net.cpp:131] Top shape: 100 10 8 8 (64000)
I0428 20:07:53.798583 31257 net.cpp:139] Memory required for data: 7770800
I0428 20:07:53.798593 31257 layer_factory.hpp:77] Creating layer pool1
I0428 20:07:53.798600 31257 net.cpp:86] Creating Layer pool1
I0428 20:07:53.798604 31257 net.cpp:408] pool1 <- conv1
I0428 20:07:53.798609 31257 net.cpp:382] pool1 -> pool1
I0428 20:07:53.798667 31257 net.cpp:124] Setting up pool1
I0428 20:07:53.798672 31257 net.cpp:131] Top shape: 100 10 4 4 (16000)
I0428 20:07:53.798676 31257 net.cpp:139] Memory required for data: 7834800
I0428 20:07:53.798678 31257 layer_factory.hpp:77] Creating layer ip1
I0428 20:07:53.798686 31257 net.cpp:86] Creating Layer ip1
I0428 20:07:53.798688 31257 net.cpp:408] ip1 <- pool1
I0428 20:07:53.798693 31257 net.cpp:382] ip1 -> ip1
I0428 20:07:53.798841 31257 net.cpp:124] Setting up ip1
I0428 20:07:53.798861 31257 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:53.798873 31257 net.cpp:139] Memory required for data: 7838800
I0428 20:07:53.798897 31257 layer_factory.hpp:77] Creating layer relu1
I0428 20:07:53.798905 31257 net.cpp:86] Creating Layer relu1
I0428 20:07:53.798908 31257 net.cpp:408] relu1 <- ip1
I0428 20:07:53.798913 31257 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:07:53.799083 31257 net.cpp:124] Setting up relu1
I0428 20:07:53.799093 31257 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:53.799096 31257 net.cpp:139] Memory required for data: 7842800
I0428 20:07:53.799100 31257 layer_factory.hpp:77] Creating layer ip2
I0428 20:07:53.799108 31257 net.cpp:86] Creating Layer ip2
I0428 20:07:53.799118 31257 net.cpp:408] ip2 <- ip1
I0428 20:07:53.799124 31257 net.cpp:382] ip2 -> ip2
I0428 20:07:53.799226 31257 net.cpp:124] Setting up ip2
I0428 20:07:53.799248 31257 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:53.799252 31257 net.cpp:139] Memory required for data: 7852800
I0428 20:07:53.799258 31257 layer_factory.hpp:77] Creating layer relu2
I0428 20:07:53.799264 31257 net.cpp:86] Creating Layer relu2
I0428 20:07:53.799268 31257 net.cpp:408] relu2 <- ip2
I0428 20:07:53.799271 31257 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:07:53.799438 31257 net.cpp:124] Setting up relu2
I0428 20:07:53.799446 31257 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:07:53.799449 31257 net.cpp:139] Memory required for data: 7862800
I0428 20:07:53.799453 31257 layer_factory.hpp:77] Creating layer ip3
I0428 20:07:53.799459 31257 net.cpp:86] Creating Layer ip3
I0428 20:07:53.799463 31257 net.cpp:408] ip3 <- ip2
I0428 20:07:53.799468 31257 net.cpp:382] ip3 -> ip3
I0428 20:07:53.799578 31257 net.cpp:124] Setting up ip3
I0428 20:07:53.799584 31257 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:53.799587 31257 net.cpp:139] Memory required for data: 7866800
I0428 20:07:53.799594 31257 layer_factory.hpp:77] Creating layer relu3
I0428 20:07:53.799607 31257 net.cpp:86] Creating Layer relu3
I0428 20:07:53.799609 31257 net.cpp:408] relu3 <- ip3
I0428 20:07:53.799624 31257 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:07:53.800492 31257 net.cpp:124] Setting up relu3
I0428 20:07:53.800520 31257 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:53.800528 31257 net.cpp:139] Memory required for data: 7870800
I0428 20:07:53.800534 31257 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:07:53.800539 31257 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:07:53.800542 31257 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:07:53.800550 31257 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:07:53.800560 31257 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:07:53.800603 31257 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:07:53.800613 31257 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:53.800617 31257 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:07:53.800621 31257 net.cpp:139] Memory required for data: 7878800
I0428 20:07:53.800624 31257 layer_factory.hpp:77] Creating layer accuracy
I0428 20:07:53.800629 31257 net.cpp:86] Creating Layer accuracy
I0428 20:07:53.800633 31257 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:07:53.800638 31257 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:07:53.800649 31257 net.cpp:382] accuracy -> accuracy
I0428 20:07:53.800658 31257 net.cpp:124] Setting up accuracy
I0428 20:07:53.800662 31257 net.cpp:131] Top shape: (1)
I0428 20:07:53.800665 31257 net.cpp:139] Memory required for data: 7878804
I0428 20:07:53.800668 31257 layer_factory.hpp:77] Creating layer loss
I0428 20:07:53.800674 31257 net.cpp:86] Creating Layer loss
I0428 20:07:53.800678 31257 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:07:53.800683 31257 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:07:53.800688 31257 net.cpp:382] loss -> loss
I0428 20:07:53.800695 31257 layer_factory.hpp:77] Creating layer loss
I0428 20:07:53.801002 31257 net.cpp:124] Setting up loss
I0428 20:07:53.801012 31257 net.cpp:131] Top shape: (1)
I0428 20:07:53.801015 31257 net.cpp:134]     with loss weight 1
I0428 20:07:53.801030 31257 net.cpp:139] Memory required for data: 7878808
I0428 20:07:53.801034 31257 net.cpp:200] loss needs backward computation.
I0428 20:07:53.801038 31257 net.cpp:202] accuracy does not need backward computation.
I0428 20:07:53.801043 31257 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:07:53.801045 31257 net.cpp:200] relu3 needs backward computation.
I0428 20:07:53.801048 31257 net.cpp:200] ip3 needs backward computation.
I0428 20:07:53.801050 31257 net.cpp:200] relu2 needs backward computation.
I0428 20:07:53.801054 31257 net.cpp:200] ip2 needs backward computation.
I0428 20:07:53.801056 31257 net.cpp:200] relu1 needs backward computation.
I0428 20:07:53.801059 31257 net.cpp:200] ip1 needs backward computation.
I0428 20:07:53.801061 31257 net.cpp:200] pool1 needs backward computation.
I0428 20:07:53.801064 31257 net.cpp:200] conv1 needs backward computation.
I0428 20:07:53.801067 31257 net.cpp:200] pool0 needs backward computation.
I0428 20:07:53.801070 31257 net.cpp:200] conv0 needs backward computation.
I0428 20:07:53.801074 31257 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:07:53.801079 31257 net.cpp:202] mnist does not need backward computation.
I0428 20:07:53.801080 31257 net.cpp:244] This network produces output accuracy
I0428 20:07:53.801085 31257 net.cpp:244] This network produces output loss
I0428 20:07:53.801111 31257 net.cpp:257] Network initialization done.
I0428 20:07:53.801151 31257 solver.cpp:56] Solver scaffolding done.
I0428 20:07:53.801532 31257 caffe.cpp:248] Starting Optimization
I0428 20:07:53.801538 31257 solver.cpp:273] Solving LeNet
I0428 20:07:53.801542 31257 solver.cpp:274] Learning Rate Policy: inv
I0428 20:07:53.802423 31257 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:07:53.807126 31257 blocking_queue.cpp:49] Waiting for data
I0428 20:07:53.878983 31264 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:53.879601 31257 solver.cpp:398]     Test net output #0: accuracy = 0.0456
I0428 20:07:53.879638 31257 solver.cpp:398]     Test net output #1: loss = 2.30727 (* 1 = 2.30727 loss)
I0428 20:07:53.883275 31257 solver.cpp:219] Iteration 0 (0 iter/s, 0.0816978s/100 iters), loss = 2.30828
I0428 20:07:53.883312 31257 solver.cpp:238]     Train net output #0: loss = 2.30828 (* 1 = 2.30828 loss)
I0428 20:07:53.883322 31257 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:07:53.976507 31257 solver.cpp:219] Iteration 100 (1073 iter/s, 0.0931963s/100 iters), loss = 0.391787
I0428 20:07:53.976538 31257 solver.cpp:238]     Train net output #0: loss = 0.391787 (* 1 = 0.391787 loss)
I0428 20:07:53.976546 31257 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:07:54.067458 31257 solver.cpp:219] Iteration 200 (1099.97 iter/s, 0.0909117s/100 iters), loss = 0.373271
I0428 20:07:54.067484 31257 solver.cpp:238]     Train net output #0: loss = 0.373271 (* 1 = 0.373271 loss)
I0428 20:07:54.067490 31257 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:07:54.163655 31257 solver.cpp:219] Iteration 300 (1039.93 iter/s, 0.0961608s/100 iters), loss = 0.25071
I0428 20:07:54.163681 31257 solver.cpp:238]     Train net output #0: loss = 0.25071 (* 1 = 0.25071 loss)
I0428 20:07:54.163705 31257 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:07:54.254328 31257 solver.cpp:219] Iteration 400 (1103.29 iter/s, 0.0906383s/100 iters), loss = 0.174717
I0428 20:07:54.254353 31257 solver.cpp:238]     Train net output #0: loss = 0.174717 (* 1 = 0.174717 loss)
I0428 20:07:54.254374 31257 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:07:54.344579 31257 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:07:54.420938 31264 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:54.421532 31257 solver.cpp:398]     Test net output #0: accuracy = 0.953
I0428 20:07:54.421555 31257 solver.cpp:398]     Test net output #1: loss = 0.148045 (* 1 = 0.148045 loss)
I0428 20:07:54.422534 31257 solver.cpp:219] Iteration 500 (594.646 iter/s, 0.168167s/100 iters), loss = 0.0869631
I0428 20:07:54.422582 31257 solver.cpp:238]     Train net output #0: loss = 0.0869631 (* 1 = 0.0869631 loss)
I0428 20:07:54.422603 31257 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:07:54.523608 31257 solver.cpp:219] Iteration 600 (989.937 iter/s, 0.101017s/100 iters), loss = 0.111977
I0428 20:07:54.523635 31257 solver.cpp:238]     Train net output #0: loss = 0.111977 (* 1 = 0.111977 loss)
I0428 20:07:54.523656 31257 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:07:54.620420 31257 solver.cpp:219] Iteration 700 (1033.31 iter/s, 0.0967761s/100 iters), loss = 0.234862
I0428 20:07:54.620445 31257 solver.cpp:238]     Train net output #0: loss = 0.234862 (* 1 = 0.234862 loss)
I0428 20:07:54.620465 31257 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:07:54.713649 31257 solver.cpp:219] Iteration 800 (1073.04 iter/s, 0.0931932s/100 iters), loss = 0.362994
I0428 20:07:54.713671 31257 solver.cpp:238]     Train net output #0: loss = 0.362994 (* 1 = 0.362994 loss)
I0428 20:07:54.713692 31257 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:07:54.807181 31257 solver.cpp:219] Iteration 900 (1069.53 iter/s, 0.0934994s/100 iters), loss = 0.153252
I0428 20:07:54.807209 31257 solver.cpp:238]     Train net output #0: loss = 0.153252 (* 1 = 0.153252 loss)
I0428 20:07:54.807214 31257 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:07:54.838866 31263 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:54.901728 31257 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:07:54.902611 31257 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:07:54.903245 31257 solver.cpp:311] Iteration 1000, loss = 0.135005
I0428 20:07:54.903260 31257 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:07:54.978619 31264 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:07:54.979214 31257 solver.cpp:398]     Test net output #0: accuracy = 0.9669
I0428 20:07:54.979236 31257 solver.cpp:398]     Test net output #1: loss = 0.0993018 (* 1 = 0.0993018 loss)
I0428 20:07:54.979241 31257 solver.cpp:316] Optimization Done.
I0428 20:07:54.979244 31257 caffe.cpp:259] Optimization Done.
