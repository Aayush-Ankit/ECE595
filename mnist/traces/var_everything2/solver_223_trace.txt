I0428 19:35:21.142087 23491 caffe.cpp:218] Using GPUs 0
I0428 19:35:21.177642 23491 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:35:21.684708 23491 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test223.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:35:21.684871 23491 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test223.prototxt
I0428 19:35:21.685233 23491 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:35:21.685250 23491 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:35:21.685335 23491 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:21.685402 23491 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:21.685504 23491 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:35:21.685528 23491 net.cpp:86] Creating Layer mnist
I0428 19:35:21.685536 23491 net.cpp:382] mnist -> data
I0428 19:35:21.685559 23491 net.cpp:382] mnist -> label
I0428 19:35:21.686645 23491 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:35:21.689091 23491 net.cpp:124] Setting up mnist
I0428 19:35:21.689110 23491 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:35:21.689116 23491 net.cpp:131] Top shape: 64 (64)
I0428 19:35:21.689121 23491 net.cpp:139] Memory required for data: 200960
I0428 19:35:21.689126 23491 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:21.689142 23491 net.cpp:86] Creating Layer conv0
I0428 19:35:21.689147 23491 net.cpp:408] conv0 <- data
I0428 19:35:21.689158 23491 net.cpp:382] conv0 -> conv0
I0428 19:35:21.979918 23491 net.cpp:124] Setting up conv0
I0428 19:35:21.979948 23491 net.cpp:131] Top shape: 64 50 24 24 (1843200)
I0428 19:35:21.979954 23491 net.cpp:139] Memory required for data: 7573760
I0428 19:35:21.979970 23491 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:21.979985 23491 net.cpp:86] Creating Layer pool0
I0428 19:35:21.980010 23491 net.cpp:408] pool0 <- conv0
I0428 19:35:21.980016 23491 net.cpp:382] pool0 -> pool0
I0428 19:35:21.980072 23491 net.cpp:124] Setting up pool0
I0428 19:35:21.980083 23491 net.cpp:131] Top shape: 64 50 12 12 (460800)
I0428 19:35:21.980087 23491 net.cpp:139] Memory required for data: 9416960
I0428 19:35:21.980092 23491 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:21.980100 23491 net.cpp:86] Creating Layer ip1
I0428 19:35:21.980103 23491 net.cpp:408] ip1 <- pool0
I0428 19:35:21.980109 23491 net.cpp:382] ip1 -> ip1
I0428 19:35:21.982343 23491 net.cpp:124] Setting up ip1
I0428 19:35:21.982359 23491 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:21.982364 23491 net.cpp:139] Memory required for data: 9423360
I0428 19:35:21.982374 23491 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:21.982383 23491 net.cpp:86] Creating Layer relu1
I0428 19:35:21.982386 23491 net.cpp:408] relu1 <- ip1
I0428 19:35:21.982391 23491 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:21.982585 23491 net.cpp:124] Setting up relu1
I0428 19:35:21.982595 23491 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:35:21.982599 23491 net.cpp:139] Memory required for data: 9429760
I0428 19:35:21.982604 23491 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:21.982610 23491 net.cpp:86] Creating Layer ip2
I0428 19:35:21.982614 23491 net.cpp:408] ip2 <- ip1
I0428 19:35:21.982620 23491 net.cpp:382] ip2 -> ip2
I0428 19:35:21.982740 23491 net.cpp:124] Setting up ip2
I0428 19:35:21.982748 23491 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:21.982753 23491 net.cpp:139] Memory required for data: 9442560
I0428 19:35:21.982760 23491 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:21.982766 23491 net.cpp:86] Creating Layer relu2
I0428 19:35:21.982770 23491 net.cpp:408] relu2 <- ip2
I0428 19:35:21.982774 23491 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:21.983592 23491 net.cpp:124] Setting up relu2
I0428 19:35:21.983606 23491 net.cpp:131] Top shape: 64 50 (3200)
I0428 19:35:21.983611 23491 net.cpp:139] Memory required for data: 9455360
I0428 19:35:21.983615 23491 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:21.983623 23491 net.cpp:86] Creating Layer ip3
I0428 19:35:21.983628 23491 net.cpp:408] ip3 <- ip2
I0428 19:35:21.983633 23491 net.cpp:382] ip3 -> ip3
I0428 19:35:21.983744 23491 net.cpp:124] Setting up ip3
I0428 19:35:21.983752 23491 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:21.983755 23491 net.cpp:139] Memory required for data: 9457920
I0428 19:35:21.983762 23491 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:21.983769 23491 net.cpp:86] Creating Layer relu3
I0428 19:35:21.983772 23491 net.cpp:408] relu3 <- ip3
I0428 19:35:21.983777 23491 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:21.983947 23491 net.cpp:124] Setting up relu3
I0428 19:35:21.983956 23491 net.cpp:131] Top shape: 64 10 (640)
I0428 19:35:21.983959 23491 net.cpp:139] Memory required for data: 9460480
I0428 19:35:21.983963 23491 layer_factory.hpp:77] Creating layer loss
I0428 19:35:21.983969 23491 net.cpp:86] Creating Layer loss
I0428 19:35:21.983973 23491 net.cpp:408] loss <- ip3
I0428 19:35:21.983978 23491 net.cpp:408] loss <- label
I0428 19:35:21.983983 23491 net.cpp:382] loss -> loss
I0428 19:35:21.984004 23491 layer_factory.hpp:77] Creating layer loss
I0428 19:35:21.984261 23491 net.cpp:124] Setting up loss
I0428 19:35:21.984272 23491 net.cpp:131] Top shape: (1)
I0428 19:35:21.984274 23491 net.cpp:134]     with loss weight 1
I0428 19:35:21.984289 23491 net.cpp:139] Memory required for data: 9460484
I0428 19:35:21.984293 23491 net.cpp:200] loss needs backward computation.
I0428 19:35:21.984297 23491 net.cpp:200] relu3 needs backward computation.
I0428 19:35:21.984302 23491 net.cpp:200] ip3 needs backward computation.
I0428 19:35:21.984305 23491 net.cpp:200] relu2 needs backward computation.
I0428 19:35:21.984308 23491 net.cpp:200] ip2 needs backward computation.
I0428 19:35:21.984311 23491 net.cpp:200] relu1 needs backward computation.
I0428 19:35:21.984314 23491 net.cpp:200] ip1 needs backward computation.
I0428 19:35:21.984329 23491 net.cpp:200] pool0 needs backward computation.
I0428 19:35:21.984333 23491 net.cpp:200] conv0 needs backward computation.
I0428 19:35:21.984338 23491 net.cpp:202] mnist does not need backward computation.
I0428 19:35:21.984340 23491 net.cpp:244] This network produces output loss
I0428 19:35:21.984349 23491 net.cpp:257] Network initialization done.
I0428 19:35:21.984670 23491 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test223.prototxt
I0428 19:35:21.984700 23491 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:35:21.984792 23491 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool0"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:35:21.984871 23491 layer_factory.hpp:77] Creating layer mnist
I0428 19:35:21.984921 23491 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:35:21.984936 23491 net.cpp:86] Creating Layer mnist
I0428 19:35:21.984941 23491 net.cpp:382] mnist -> data
I0428 19:35:21.984949 23491 net.cpp:382] mnist -> label
I0428 19:35:21.985043 23491 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:35:21.986203 23491 net.cpp:124] Setting up mnist
I0428 19:35:21.986217 23491 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:35:21.986223 23491 net.cpp:131] Top shape: 100 (100)
I0428 19:35:21.986227 23491 net.cpp:139] Memory required for data: 314000
I0428 19:35:21.986230 23491 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:35:21.986238 23491 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:35:21.986241 23491 net.cpp:408] label_mnist_1_split <- label
I0428 19:35:21.986248 23491 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:35:21.986254 23491 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:35:21.986295 23491 net.cpp:124] Setting up label_mnist_1_split
I0428 19:35:21.986300 23491 net.cpp:131] Top shape: 100 (100)
I0428 19:35:21.986304 23491 net.cpp:131] Top shape: 100 (100)
I0428 19:35:21.986307 23491 net.cpp:139] Memory required for data: 314800
I0428 19:35:21.986322 23491 layer_factory.hpp:77] Creating layer conv0
I0428 19:35:21.986331 23491 net.cpp:86] Creating Layer conv0
I0428 19:35:21.986335 23491 net.cpp:408] conv0 <- data
I0428 19:35:21.986340 23491 net.cpp:382] conv0 -> conv0
I0428 19:35:21.988162 23491 net.cpp:124] Setting up conv0
I0428 19:35:21.988178 23491 net.cpp:131] Top shape: 100 50 24 24 (2880000)
I0428 19:35:21.988183 23491 net.cpp:139] Memory required for data: 11834800
I0428 19:35:21.988193 23491 layer_factory.hpp:77] Creating layer pool0
I0428 19:35:21.988200 23491 net.cpp:86] Creating Layer pool0
I0428 19:35:21.988204 23491 net.cpp:408] pool0 <- conv0
I0428 19:35:21.988209 23491 net.cpp:382] pool0 -> pool0
I0428 19:35:21.988250 23491 net.cpp:124] Setting up pool0
I0428 19:35:21.988255 23491 net.cpp:131] Top shape: 100 50 12 12 (720000)
I0428 19:35:21.988258 23491 net.cpp:139] Memory required for data: 14714800
I0428 19:35:21.988261 23491 layer_factory.hpp:77] Creating layer ip1
I0428 19:35:21.988268 23491 net.cpp:86] Creating Layer ip1
I0428 19:35:21.988271 23491 net.cpp:408] ip1 <- pool0
I0428 19:35:21.988276 23491 net.cpp:382] ip1 -> ip1
I0428 19:35:21.990412 23491 net.cpp:124] Setting up ip1
I0428 19:35:21.990427 23491 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:21.990432 23491 net.cpp:139] Memory required for data: 14724800
I0428 19:35:21.990440 23491 layer_factory.hpp:77] Creating layer relu1
I0428 19:35:21.990447 23491 net.cpp:86] Creating Layer relu1
I0428 19:35:21.990450 23491 net.cpp:408] relu1 <- ip1
I0428 19:35:21.990456 23491 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:35:21.990634 23491 net.cpp:124] Setting up relu1
I0428 19:35:21.990644 23491 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:35:21.990648 23491 net.cpp:139] Memory required for data: 14734800
I0428 19:35:21.990651 23491 layer_factory.hpp:77] Creating layer ip2
I0428 19:35:21.990658 23491 net.cpp:86] Creating Layer ip2
I0428 19:35:21.990671 23491 net.cpp:408] ip2 <- ip1
I0428 19:35:21.990677 23491 net.cpp:382] ip2 -> ip2
I0428 19:35:21.990792 23491 net.cpp:124] Setting up ip2
I0428 19:35:21.990802 23491 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:21.990804 23491 net.cpp:139] Memory required for data: 14754800
I0428 19:35:21.990813 23491 layer_factory.hpp:77] Creating layer relu2
I0428 19:35:21.990818 23491 net.cpp:86] Creating Layer relu2
I0428 19:35:21.990821 23491 net.cpp:408] relu2 <- ip2
I0428 19:35:21.990825 23491 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:35:21.991699 23491 net.cpp:124] Setting up relu2
I0428 19:35:21.991713 23491 net.cpp:131] Top shape: 100 50 (5000)
I0428 19:35:21.991716 23491 net.cpp:139] Memory required for data: 14774800
I0428 19:35:21.991720 23491 layer_factory.hpp:77] Creating layer ip3
I0428 19:35:21.991729 23491 net.cpp:86] Creating Layer ip3
I0428 19:35:21.991732 23491 net.cpp:408] ip3 <- ip2
I0428 19:35:21.991739 23491 net.cpp:382] ip3 -> ip3
I0428 19:35:21.991919 23491 net.cpp:124] Setting up ip3
I0428 19:35:21.991927 23491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:21.991937 23491 net.cpp:139] Memory required for data: 14778800
I0428 19:35:21.991945 23491 layer_factory.hpp:77] Creating layer relu3
I0428 19:35:21.991951 23491 net.cpp:86] Creating Layer relu3
I0428 19:35:21.991955 23491 net.cpp:408] relu3 <- ip3
I0428 19:35:21.991960 23491 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:35:21.992136 23491 net.cpp:124] Setting up relu3
I0428 19:35:21.992146 23491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:21.992148 23491 net.cpp:139] Memory required for data: 14782800
I0428 19:35:21.992152 23491 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:35:21.992158 23491 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:35:21.992162 23491 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:35:21.992173 23491 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:35:21.992179 23491 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:35:21.992220 23491 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:35:21.992225 23491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:21.992241 23491 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:35:21.992244 23491 net.cpp:139] Memory required for data: 14790800
I0428 19:35:21.992247 23491 layer_factory.hpp:77] Creating layer accuracy
I0428 19:35:21.992257 23491 net.cpp:86] Creating Layer accuracy
I0428 19:35:21.992261 23491 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:35:21.992267 23491 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:35:21.992272 23491 net.cpp:382] accuracy -> accuracy
I0428 19:35:21.992280 23491 net.cpp:124] Setting up accuracy
I0428 19:35:21.992285 23491 net.cpp:131] Top shape: (1)
I0428 19:35:21.992295 23491 net.cpp:139] Memory required for data: 14790804
I0428 19:35:21.992297 23491 layer_factory.hpp:77] Creating layer loss
I0428 19:35:21.992302 23491 net.cpp:86] Creating Layer loss
I0428 19:35:21.992305 23491 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:35:21.992310 23491 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:35:21.992316 23491 net.cpp:382] loss -> loss
I0428 19:35:21.992321 23491 layer_factory.hpp:77] Creating layer loss
I0428 19:35:21.992583 23491 net.cpp:124] Setting up loss
I0428 19:35:21.992594 23491 net.cpp:131] Top shape: (1)
I0428 19:35:21.992604 23491 net.cpp:134]     with loss weight 1
I0428 19:35:21.992610 23491 net.cpp:139] Memory required for data: 14790808
I0428 19:35:21.992615 23491 net.cpp:200] loss needs backward computation.
I0428 19:35:21.992619 23491 net.cpp:202] accuracy does not need backward computation.
I0428 19:35:21.992624 23491 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:35:21.992626 23491 net.cpp:200] relu3 needs backward computation.
I0428 19:35:21.992630 23491 net.cpp:200] ip3 needs backward computation.
I0428 19:35:21.992632 23491 net.cpp:200] relu2 needs backward computation.
I0428 19:35:21.992635 23491 net.cpp:200] ip2 needs backward computation.
I0428 19:35:21.992638 23491 net.cpp:200] relu1 needs backward computation.
I0428 19:35:21.992641 23491 net.cpp:200] ip1 needs backward computation.
I0428 19:35:21.992645 23491 net.cpp:200] pool0 needs backward computation.
I0428 19:35:21.992647 23491 net.cpp:200] conv0 needs backward computation.
I0428 19:35:21.992651 23491 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:35:21.992655 23491 net.cpp:202] mnist does not need backward computation.
I0428 19:35:21.992657 23491 net.cpp:244] This network produces output accuracy
I0428 19:35:21.992662 23491 net.cpp:244] This network produces output loss
I0428 19:35:21.992681 23491 net.cpp:257] Network initialization done.
I0428 19:35:21.992722 23491 solver.cpp:56] Solver scaffolding done.
I0428 19:35:21.993017 23491 caffe.cpp:248] Starting Optimization
I0428 19:35:21.993026 23491 solver.cpp:273] Solving LeNet
I0428 19:35:21.993031 23491 solver.cpp:274] Learning Rate Policy: inv
I0428 19:35:21.994529 23491 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:35:22.092548 23499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:22.095052 23491 solver.cpp:398]     Test net output #0: accuracy = 0.1004
I0428 19:35:22.095070 23491 solver.cpp:398]     Test net output #1: loss = 2.31713 (* 1 = 2.31713 loss)
I0428 19:35:22.099516 23491 solver.cpp:219] Iteration 0 (-7.63708e-43 iter/s, 0.106456s/100 iters), loss = 2.3145
I0428 19:35:22.099539 23491 solver.cpp:238]     Train net output #0: loss = 2.3145 (* 1 = 2.3145 loss)
I0428 19:35:22.099550 23491 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:35:22.240479 23491 solver.cpp:219] Iteration 100 (709.603 iter/s, 0.140924s/100 iters), loss = 1.46632
I0428 19:35:22.240502 23491 solver.cpp:238]     Train net output #0: loss = 1.46632 (* 1 = 1.46632 loss)
I0428 19:35:22.240509 23491 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:35:22.380471 23491 solver.cpp:219] Iteration 200 (714.509 iter/s, 0.139956s/100 iters), loss = 1.5718
I0428 19:35:22.380496 23491 solver.cpp:238]     Train net output #0: loss = 1.5718 (* 1 = 1.5718 loss)
I0428 19:35:22.380501 23491 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:35:22.521713 23491 solver.cpp:219] Iteration 300 (708.188 iter/s, 0.141206s/100 iters), loss = 1.48867
I0428 19:35:22.521752 23491 solver.cpp:238]     Train net output #0: loss = 1.48867 (* 1 = 1.48867 loss)
I0428 19:35:22.521759 23491 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:35:22.663583 23491 solver.cpp:219] Iteration 400 (705.13 iter/s, 0.141818s/100 iters), loss = 1.67805
I0428 19:35:22.663609 23491 solver.cpp:238]     Train net output #0: loss = 1.67805 (* 1 = 1.67805 loss)
I0428 19:35:22.663614 23491 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:35:22.813974 23491 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:35:22.924916 23499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:22.927889 23491 solver.cpp:398]     Test net output #0: accuracy = 0.4762
I0428 19:35:22.927919 23491 solver.cpp:398]     Test net output #1: loss = 1.44773 (* 1 = 1.44773 loss)
I0428 19:35:22.929350 23491 solver.cpp:219] Iteration 500 (376.335 iter/s, 0.265721s/100 iters), loss = 1.65915
I0428 19:35:22.929378 23491 solver.cpp:238]     Train net output #0: loss = 1.65915 (* 1 = 1.65915 loss)
I0428 19:35:22.929390 23491 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:35:23.081045 23491 solver.cpp:219] Iteration 600 (659.412 iter/s, 0.15165s/100 iters), loss = 1.19353
I0428 19:35:23.081079 23491 solver.cpp:238]     Train net output #0: loss = 1.19353 (* 1 = 1.19353 loss)
I0428 19:35:23.081089 23491 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:35:23.228428 23491 solver.cpp:219] Iteration 700 (678.724 iter/s, 0.147335s/100 iters), loss = 1.02253
I0428 19:35:23.228461 23491 solver.cpp:238]     Train net output #0: loss = 1.02253 (* 1 = 1.02253 loss)
I0428 19:35:23.228468 23491 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:35:23.372658 23491 solver.cpp:219] Iteration 800 (693.562 iter/s, 0.144183s/100 iters), loss = 1.43987
I0428 19:35:23.372689 23491 solver.cpp:238]     Train net output #0: loss = 1.43987 (* 1 = 1.43987 loss)
I0428 19:35:23.372697 23491 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:35:23.519784 23491 solver.cpp:219] Iteration 900 (679.892 iter/s, 0.147082s/100 iters), loss = 1.43675
I0428 19:35:23.519816 23491 solver.cpp:238]     Train net output #0: loss = 1.43675 (* 1 = 1.43675 loss)
I0428 19:35:23.519824 23491 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:35:23.567973 23497 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:23.662372 23491 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:35:23.666827 23491 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:35:23.669039 23491 solver.cpp:311] Iteration 1000, loss = 1.10702
I0428 19:35:23.669057 23491 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:35:23.764709 23499 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:35:23.767298 23491 solver.cpp:398]     Test net output #0: accuracy = 0.582
I0428 19:35:23.767316 23491 solver.cpp:398]     Test net output #1: loss = 1.24025 (* 1 = 1.24025 loss)
I0428 19:35:23.767320 23491 solver.cpp:316] Optimization Done.
I0428 19:35:23.767324 23491 caffe.cpp:259] Optimization Done.
