I0428 19:59:53.806370 29351 caffe.cpp:218] Using GPUs 0
I0428 19:59:53.835649 29351 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:59:54.280557 29351 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test861.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:59:54.280673 29351 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test861.prototxt
I0428 19:59:54.281025 29351 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:59:54.281040 29351 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:59:54.281114 29351 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:59:54.281205 29351 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:54.281286 29351 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:59:54.281318 29351 net.cpp:86] Creating Layer mnist
I0428 19:59:54.281325 29351 net.cpp:382] mnist -> data
I0428 19:59:54.281342 29351 net.cpp:382] mnist -> label
I0428 19:59:54.282213 29351 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:59:54.284335 29351 net.cpp:124] Setting up mnist
I0428 19:59:54.284350 29351 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:59:54.284355 29351 net.cpp:131] Top shape: 64 (64)
I0428 19:59:54.284358 29351 net.cpp:139] Memory required for data: 200960
I0428 19:59:54.284364 29351 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:54.284379 29351 net.cpp:86] Creating Layer conv0
I0428 19:59:54.284384 29351 net.cpp:408] conv0 <- data
I0428 19:59:54.284394 29351 net.cpp:382] conv0 -> conv0
I0428 19:59:54.517855 29351 net.cpp:124] Setting up conv0
I0428 19:59:54.517882 29351 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 19:59:54.517886 29351 net.cpp:139] Memory required for data: 1675520
I0428 19:59:54.517935 29351 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:54.517947 29351 net.cpp:86] Creating Layer pool0
I0428 19:59:54.517954 29351 net.cpp:408] pool0 <- conv0
I0428 19:59:54.517959 29351 net.cpp:382] pool0 -> pool0
I0428 19:59:54.518007 29351 net.cpp:124] Setting up pool0
I0428 19:59:54.518013 29351 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 19:59:54.518016 29351 net.cpp:139] Memory required for data: 2044160
I0428 19:59:54.518019 29351 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:54.518030 29351 net.cpp:86] Creating Layer conv1
I0428 19:59:54.518033 29351 net.cpp:408] conv1 <- pool0
I0428 19:59:54.518038 29351 net.cpp:382] conv1 -> conv1
I0428 19:59:54.520843 29351 net.cpp:124] Setting up conv1
I0428 19:59:54.520872 29351 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 19:59:54.520876 29351 net.cpp:139] Memory required for data: 2453760
I0428 19:59:54.520885 29351 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:54.520892 29351 net.cpp:86] Creating Layer pool1
I0428 19:59:54.520895 29351 net.cpp:408] pool1 <- conv1
I0428 19:59:54.520900 29351 net.cpp:382] pool1 -> pool1
I0428 19:59:54.520937 29351 net.cpp:124] Setting up pool1
I0428 19:59:54.520944 29351 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 19:59:54.520947 29351 net.cpp:139] Memory required for data: 2556160
I0428 19:59:54.520951 29351 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:54.520957 29351 net.cpp:86] Creating Layer ip1
I0428 19:59:54.520961 29351 net.cpp:408] ip1 <- pool1
I0428 19:59:54.520965 29351 net.cpp:382] ip1 -> ip1
I0428 19:59:54.521945 29351 net.cpp:124] Setting up ip1
I0428 19:59:54.521957 29351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:54.521977 29351 net.cpp:139] Memory required for data: 2558720
I0428 19:59:54.521986 29351 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:54.521992 29351 net.cpp:86] Creating Layer relu1
I0428 19:59:54.521996 29351 net.cpp:408] relu1 <- ip1
I0428 19:59:54.522001 29351 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:54.522192 29351 net.cpp:124] Setting up relu1
I0428 19:59:54.522199 29351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:54.522203 29351 net.cpp:139] Memory required for data: 2561280
I0428 19:59:54.522207 29351 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:54.522213 29351 net.cpp:86] Creating Layer ip2
I0428 19:59:54.522217 29351 net.cpp:408] ip2 <- ip1
I0428 19:59:54.522222 29351 net.cpp:382] ip2 -> ip2
I0428 19:59:54.522332 29351 net.cpp:124] Setting up ip2
I0428 19:59:54.522339 29351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:54.522342 29351 net.cpp:139] Memory required for data: 2563840
I0428 19:59:54.522347 29351 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:54.522353 29351 net.cpp:86] Creating Layer relu2
I0428 19:59:54.522356 29351 net.cpp:408] relu2 <- ip2
I0428 19:59:54.522361 29351 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:54.523082 29351 net.cpp:124] Setting up relu2
I0428 19:59:54.523094 29351 net.cpp:131] Top shape: 64 10 (640)
I0428 19:59:54.523114 29351 net.cpp:139] Memory required for data: 2566400
I0428 19:59:54.523118 29351 layer_factory.hpp:77] Creating layer loss
I0428 19:59:54.523125 29351 net.cpp:86] Creating Layer loss
I0428 19:59:54.523128 29351 net.cpp:408] loss <- ip2
I0428 19:59:54.523133 29351 net.cpp:408] loss <- label
I0428 19:59:54.523138 29351 net.cpp:382] loss -> loss
I0428 19:59:54.523155 29351 layer_factory.hpp:77] Creating layer loss
I0428 19:59:54.523411 29351 net.cpp:124] Setting up loss
I0428 19:59:54.523421 29351 net.cpp:131] Top shape: (1)
I0428 19:59:54.523424 29351 net.cpp:134]     with loss weight 1
I0428 19:59:54.523438 29351 net.cpp:139] Memory required for data: 2566404
I0428 19:59:54.523442 29351 net.cpp:200] loss needs backward computation.
I0428 19:59:54.523447 29351 net.cpp:200] relu2 needs backward computation.
I0428 19:59:54.523450 29351 net.cpp:200] ip2 needs backward computation.
I0428 19:59:54.523453 29351 net.cpp:200] relu1 needs backward computation.
I0428 19:59:54.523455 29351 net.cpp:200] ip1 needs backward computation.
I0428 19:59:54.523473 29351 net.cpp:200] pool1 needs backward computation.
I0428 19:59:54.523476 29351 net.cpp:200] conv1 needs backward computation.
I0428 19:59:54.523479 29351 net.cpp:200] pool0 needs backward computation.
I0428 19:59:54.523483 29351 net.cpp:200] conv0 needs backward computation.
I0428 19:59:54.523486 29351 net.cpp:202] mnist does not need backward computation.
I0428 19:59:54.523489 29351 net.cpp:244] This network produces output loss
I0428 19:59:54.523499 29351 net.cpp:257] Network initialization done.
I0428 19:59:54.523826 29351 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test861.prototxt
I0428 19:59:54.523866 29351 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:59:54.523947 29351 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip2"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip2"
  bottom: "label"
  top: "loss"
}
I0428 19:59:54.524031 29351 layer_factory.hpp:77] Creating layer mnist
I0428 19:59:54.524101 29351 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:59:54.524112 29351 net.cpp:86] Creating Layer mnist
I0428 19:59:54.524117 29351 net.cpp:382] mnist -> data
I0428 19:59:54.524125 29351 net.cpp:382] mnist -> label
I0428 19:59:54.524214 29351 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:59:54.526546 29351 net.cpp:124] Setting up mnist
I0428 19:59:54.526590 29351 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:59:54.526595 29351 net.cpp:131] Top shape: 100 (100)
I0428 19:59:54.526599 29351 net.cpp:139] Memory required for data: 314000
I0428 19:59:54.526602 29351 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:59:54.526609 29351 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:59:54.526612 29351 net.cpp:408] label_mnist_1_split <- label
I0428 19:59:54.526618 29351 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:59:54.526624 29351 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:59:54.526746 29351 net.cpp:124] Setting up label_mnist_1_split
I0428 19:59:54.526765 29351 net.cpp:131] Top shape: 100 (100)
I0428 19:59:54.526769 29351 net.cpp:131] Top shape: 100 (100)
I0428 19:59:54.526772 29351 net.cpp:139] Memory required for data: 314800
I0428 19:59:54.526775 29351 layer_factory.hpp:77] Creating layer conv0
I0428 19:59:54.526784 29351 net.cpp:86] Creating Layer conv0
I0428 19:59:54.526787 29351 net.cpp:408] conv0 <- data
I0428 19:59:54.526793 29351 net.cpp:382] conv0 -> conv0
I0428 19:59:54.528363 29351 net.cpp:124] Setting up conv0
I0428 19:59:54.528379 29351 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 19:59:54.528383 29351 net.cpp:139] Memory required for data: 2618800
I0428 19:59:54.528393 29351 layer_factory.hpp:77] Creating layer pool0
I0428 19:59:54.528414 29351 net.cpp:86] Creating Layer pool0
I0428 19:59:54.528429 29351 net.cpp:408] pool0 <- conv0
I0428 19:59:54.528435 29351 net.cpp:382] pool0 -> pool0
I0428 19:59:54.528471 29351 net.cpp:124] Setting up pool0
I0428 19:59:54.528478 29351 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 19:59:54.528481 29351 net.cpp:139] Memory required for data: 3194800
I0428 19:59:54.528484 29351 layer_factory.hpp:77] Creating layer conv1
I0428 19:59:54.528494 29351 net.cpp:86] Creating Layer conv1
I0428 19:59:54.528498 29351 net.cpp:408] conv1 <- pool0
I0428 19:59:54.528503 29351 net.cpp:382] conv1 -> conv1
I0428 19:59:54.530711 29351 net.cpp:124] Setting up conv1
I0428 19:59:54.530725 29351 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 19:59:54.530728 29351 net.cpp:139] Memory required for data: 3834800
I0428 19:59:54.530752 29351 layer_factory.hpp:77] Creating layer pool1
I0428 19:59:54.530761 29351 net.cpp:86] Creating Layer pool1
I0428 19:59:54.530763 29351 net.cpp:408] pool1 <- conv1
I0428 19:59:54.530768 29351 net.cpp:382] pool1 -> pool1
I0428 19:59:54.530807 29351 net.cpp:124] Setting up pool1
I0428 19:59:54.530813 29351 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 19:59:54.530817 29351 net.cpp:139] Memory required for data: 3994800
I0428 19:59:54.530820 29351 layer_factory.hpp:77] Creating layer ip1
I0428 19:59:54.530825 29351 net.cpp:86] Creating Layer ip1
I0428 19:59:54.530828 29351 net.cpp:408] ip1 <- pool1
I0428 19:59:54.530834 29351 net.cpp:382] ip1 -> ip1
I0428 19:59:54.530961 29351 net.cpp:124] Setting up ip1
I0428 19:59:54.530968 29351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:54.530972 29351 net.cpp:139] Memory required for data: 3998800
I0428 19:59:54.530978 29351 layer_factory.hpp:77] Creating layer relu1
I0428 19:59:54.530983 29351 net.cpp:86] Creating Layer relu1
I0428 19:59:54.530987 29351 net.cpp:408] relu1 <- ip1
I0428 19:59:54.530992 29351 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:59:54.531159 29351 net.cpp:124] Setting up relu1
I0428 19:59:54.531167 29351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:54.531170 29351 net.cpp:139] Memory required for data: 4002800
I0428 19:59:54.531172 29351 layer_factory.hpp:77] Creating layer ip2
I0428 19:59:54.531180 29351 net.cpp:86] Creating Layer ip2
I0428 19:59:54.531183 29351 net.cpp:408] ip2 <- ip1
I0428 19:59:54.531189 29351 net.cpp:382] ip2 -> ip2
I0428 19:59:54.531277 29351 net.cpp:124] Setting up ip2
I0428 19:59:54.531283 29351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:54.531286 29351 net.cpp:139] Memory required for data: 4006800
I0428 19:59:54.531302 29351 layer_factory.hpp:77] Creating layer relu2
I0428 19:59:54.531307 29351 net.cpp:86] Creating Layer relu2
I0428 19:59:54.531325 29351 net.cpp:408] relu2 <- ip2
I0428 19:59:54.531329 29351 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:59:54.531550 29351 net.cpp:124] Setting up relu2
I0428 19:59:54.531559 29351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:54.531563 29351 net.cpp:139] Memory required for data: 4010800
I0428 19:59:54.531565 29351 layer_factory.hpp:77] Creating layer ip2_relu2_0_split
I0428 19:59:54.531571 29351 net.cpp:86] Creating Layer ip2_relu2_0_split
I0428 19:59:54.531580 29351 net.cpp:408] ip2_relu2_0_split <- ip2
I0428 19:59:54.531584 29351 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_0
I0428 19:59:54.531601 29351 net.cpp:382] ip2_relu2_0_split -> ip2_relu2_0_split_1
I0428 19:59:54.531668 29351 net.cpp:124] Setting up ip2_relu2_0_split
I0428 19:59:54.531690 29351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:54.531694 29351 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:59:54.531697 29351 net.cpp:139] Memory required for data: 4018800
I0428 19:59:54.531700 29351 layer_factory.hpp:77] Creating layer accuracy
I0428 19:59:54.531704 29351 net.cpp:86] Creating Layer accuracy
I0428 19:59:54.531713 29351 net.cpp:408] accuracy <- ip2_relu2_0_split_0
I0428 19:59:54.531716 29351 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:59:54.531729 29351 net.cpp:382] accuracy -> accuracy
I0428 19:59:54.531736 29351 net.cpp:124] Setting up accuracy
I0428 19:59:54.531740 29351 net.cpp:131] Top shape: (1)
I0428 19:59:54.531743 29351 net.cpp:139] Memory required for data: 4018804
I0428 19:59:54.531745 29351 layer_factory.hpp:77] Creating layer loss
I0428 19:59:54.531749 29351 net.cpp:86] Creating Layer loss
I0428 19:59:54.531752 29351 net.cpp:408] loss <- ip2_relu2_0_split_1
I0428 19:59:54.531755 29351 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:59:54.531760 29351 net.cpp:382] loss -> loss
I0428 19:59:54.531766 29351 layer_factory.hpp:77] Creating layer loss
I0428 19:59:54.532038 29351 net.cpp:124] Setting up loss
I0428 19:59:54.532052 29351 net.cpp:131] Top shape: (1)
I0428 19:59:54.532055 29351 net.cpp:134]     with loss weight 1
I0428 19:59:54.532061 29351 net.cpp:139] Memory required for data: 4018808
I0428 19:59:54.532064 29351 net.cpp:200] loss needs backward computation.
I0428 19:59:54.532068 29351 net.cpp:202] accuracy does not need backward computation.
I0428 19:59:54.532071 29351 net.cpp:200] ip2_relu2_0_split needs backward computation.
I0428 19:59:54.532074 29351 net.cpp:200] relu2 needs backward computation.
I0428 19:59:54.532078 29351 net.cpp:200] ip2 needs backward computation.
I0428 19:59:54.532080 29351 net.cpp:200] relu1 needs backward computation.
I0428 19:59:54.532083 29351 net.cpp:200] ip1 needs backward computation.
I0428 19:59:54.532093 29351 net.cpp:200] pool1 needs backward computation.
I0428 19:59:54.532094 29351 net.cpp:200] conv1 needs backward computation.
I0428 19:59:54.532102 29351 net.cpp:200] pool0 needs backward computation.
I0428 19:59:54.532105 29351 net.cpp:200] conv0 needs backward computation.
I0428 19:59:54.532109 29351 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:59:54.532112 29351 net.cpp:202] mnist does not need backward computation.
I0428 19:59:54.532114 29351 net.cpp:244] This network produces output accuracy
I0428 19:59:54.532119 29351 net.cpp:244] This network produces output loss
I0428 19:59:54.532145 29351 net.cpp:257] Network initialization done.
I0428 19:59:54.532194 29351 solver.cpp:56] Solver scaffolding done.
I0428 19:59:54.532479 29351 caffe.cpp:248] Starting Optimization
I0428 19:59:54.532485 29351 solver.cpp:273] Solving LeNet
I0428 19:59:54.532487 29351 solver.cpp:274] Learning Rate Policy: inv
I0428 19:59:54.532610 29351 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:59:54.538130 29351 blocking_queue.cpp:49] Waiting for data
I0428 19:59:54.588196 29358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:54.588728 29351 solver.cpp:398]     Test net output #0: accuracy = 0.1409
I0428 19:59:54.588750 29351 solver.cpp:398]     Test net output #1: loss = 2.28165 (* 1 = 2.28165 loss)
I0428 19:59:54.591274 29351 solver.cpp:219] Iteration 0 (-1.96325e-30 iter/s, 0.0587592s/100 iters), loss = 2.28728
I0428 19:59:54.591297 29351 solver.cpp:238]     Train net output #0: loss = 2.28728 (* 1 = 2.28728 loss)
I0428 19:59:54.591308 29351 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:59:54.685636 29351 solver.cpp:219] Iteration 100 (1060.17 iter/s, 0.0943247s/100 iters), loss = 1.29819
I0428 19:59:54.685662 29351 solver.cpp:238]     Train net output #0: loss = 1.29819 (* 1 = 1.29819 loss)
I0428 19:59:54.685672 29351 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:59:54.769850 29351 solver.cpp:219] Iteration 200 (1187.93 iter/s, 0.0841797s/100 iters), loss = 0.959018
I0428 19:59:54.769906 29351 solver.cpp:238]     Train net output #0: loss = 0.959018 (* 1 = 0.959018 loss)
I0428 19:59:54.769912 29351 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:59:54.853781 29351 solver.cpp:219] Iteration 300 (1192.35 iter/s, 0.0838676s/100 iters), loss = 0.972787
I0428 19:59:54.853807 29351 solver.cpp:238]     Train net output #0: loss = 0.972787 (* 1 = 0.972787 loss)
I0428 19:59:54.853813 29351 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:59:54.937024 29351 solver.cpp:219] Iteration 400 (1201.82 iter/s, 0.0832074s/100 iters), loss = 0.607901
I0428 19:59:54.937054 29351 solver.cpp:238]     Train net output #0: loss = 0.607901 (* 1 = 0.607901 loss)
I0428 19:59:54.937075 29351 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:59:55.019599 29351 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:59:55.095150 29358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:55.095727 29351 solver.cpp:398]     Test net output #0: accuracy = 0.6719
I0428 19:59:55.095755 29351 solver.cpp:398]     Test net output #1: loss = 0.872684 (* 1 = 0.872684 loss)
I0428 19:59:55.096734 29351 solver.cpp:219] Iteration 500 (626.308 iter/s, 0.159666s/100 iters), loss = 0.798418
I0428 19:59:55.096776 29351 solver.cpp:238]     Train net output #0: loss = 0.798418 (* 1 = 0.798418 loss)
I0428 19:59:55.096786 29351 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:59:55.185469 29351 solver.cpp:219] Iteration 600 (1127.54 iter/s, 0.0886883s/100 iters), loss = 0.651923
I0428 19:59:55.185495 29351 solver.cpp:238]     Train net output #0: loss = 0.651923 (* 1 = 0.651923 loss)
I0428 19:59:55.185501 29351 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:59:55.269562 29351 solver.cpp:219] Iteration 700 (1189.67 iter/s, 0.0840571s/100 iters), loss = 1.30225
I0428 19:59:55.269585 29351 solver.cpp:238]     Train net output #0: loss = 1.30225 (* 1 = 1.30225 loss)
I0428 19:59:55.269592 29351 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:59:55.353639 29351 solver.cpp:219] Iteration 800 (1189.84 iter/s, 0.0840448s/100 iters), loss = 0.78919
I0428 19:59:55.353662 29351 solver.cpp:238]     Train net output #0: loss = 0.78919 (* 1 = 0.78919 loss)
I0428 19:59:55.353668 29351 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:59:55.436944 29351 solver.cpp:219] Iteration 900 (1200.9 iter/s, 0.0832708s/100 iters), loss = 0.837567
I0428 19:59:55.436969 29351 solver.cpp:238]     Train net output #0: loss = 0.837567 (* 1 = 0.837567 loss)
I0428 19:59:55.436976 29351 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:59:55.465178 29357 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:55.519544 29351 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:59:55.520417 29351 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:59:55.520911 29351 solver.cpp:311] Iteration 1000, loss = 0.949963
I0428 19:59:55.520936 29351 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:59:55.596122 29358 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:59:55.596644 29351 solver.cpp:398]     Test net output #0: accuracy = 0.694
I0428 19:59:55.596662 29351 solver.cpp:398]     Test net output #1: loss = 0.757344 (* 1 = 0.757344 loss)
I0428 19:59:55.596668 29351 solver.cpp:316] Optimization Done.
I0428 19:59:55.596670 29351 caffe.cpp:259] Optimization Done.
