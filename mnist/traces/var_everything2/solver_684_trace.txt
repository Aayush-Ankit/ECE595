I0428 19:53:18.483598 27740 caffe.cpp:218] Using GPUs 0
I0428 19:53:18.512513 27740 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 19:53:18.956713 27740 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test684.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 19:53:18.956897 27740 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test684.prototxt
I0428 19:53:18.957301 27740 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 19:53:18.957331 27740 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 19:53:18.957413 27740 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:18.957478 27740 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:18.957556 27740 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 19:53:18.957577 27740 net.cpp:86] Creating Layer mnist
I0428 19:53:18.957583 27740 net.cpp:382] mnist -> data
I0428 19:53:18.957602 27740 net.cpp:382] mnist -> label
I0428 19:53:18.958600 27740 data_layer.cpp:45] output data size: 64,1,28,28
I0428 19:53:18.960850 27740 net.cpp:124] Setting up mnist
I0428 19:53:18.960896 27740 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 19:53:18.960902 27740 net.cpp:131] Top shape: 64 (64)
I0428 19:53:18.960906 27740 net.cpp:139] Memory required for data: 200960
I0428 19:53:18.960911 27740 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:18.960925 27740 net.cpp:86] Creating Layer conv0
I0428 19:53:18.960943 27740 net.cpp:408] conv0 <- data
I0428 19:53:18.960955 27740 net.cpp:382] conv0 -> conv0
I0428 19:53:19.193300 27740 net.cpp:124] Setting up conv0
I0428 19:53:19.193325 27740 net.cpp:131] Top shape: 64 5 24 24 (184320)
I0428 19:53:19.193328 27740 net.cpp:139] Memory required for data: 938240
I0428 19:53:19.193342 27740 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:19.193354 27740 net.cpp:86] Creating Layer pool0
I0428 19:53:19.193358 27740 net.cpp:408] pool0 <- conv0
I0428 19:53:19.193364 27740 net.cpp:382] pool0 -> pool0
I0428 19:53:19.193425 27740 net.cpp:124] Setting up pool0
I0428 19:53:19.193430 27740 net.cpp:131] Top shape: 64 5 12 12 (46080)
I0428 19:53:19.193434 27740 net.cpp:139] Memory required for data: 1122560
I0428 19:53:19.193436 27740 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:19.193447 27740 net.cpp:86] Creating Layer conv1
I0428 19:53:19.193450 27740 net.cpp:408] conv1 <- pool0
I0428 19:53:19.193455 27740 net.cpp:382] conv1 -> conv1
I0428 19:53:19.196180 27740 net.cpp:124] Setting up conv1
I0428 19:53:19.196210 27740 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 19:53:19.196214 27740 net.cpp:139] Memory required for data: 1941760
I0428 19:53:19.196223 27740 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:19.196229 27740 net.cpp:86] Creating Layer pool1
I0428 19:53:19.196233 27740 net.cpp:408] pool1 <- conv1
I0428 19:53:19.196238 27740 net.cpp:382] pool1 -> pool1
I0428 19:53:19.196290 27740 net.cpp:124] Setting up pool1
I0428 19:53:19.196296 27740 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 19:53:19.196302 27740 net.cpp:139] Memory required for data: 2146560
I0428 19:53:19.196306 27740 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:19.196313 27740 net.cpp:86] Creating Layer ip1
I0428 19:53:19.196317 27740 net.cpp:408] ip1 <- pool1
I0428 19:53:19.196321 27740 net.cpp:382] ip1 -> ip1
I0428 19:53:19.196538 27740 net.cpp:124] Setting up ip1
I0428 19:53:19.196547 27740 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:19.196549 27740 net.cpp:139] Memory required for data: 2152960
I0428 19:53:19.196557 27740 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:19.196563 27740 net.cpp:86] Creating Layer relu1
I0428 19:53:19.196565 27740 net.cpp:408] relu1 <- ip1
I0428 19:53:19.196569 27740 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:19.196722 27740 net.cpp:124] Setting up relu1
I0428 19:53:19.196730 27740 net.cpp:131] Top shape: 64 25 (1600)
I0428 19:53:19.196733 27740 net.cpp:139] Memory required for data: 2159360
I0428 19:53:19.196737 27740 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:19.196743 27740 net.cpp:86] Creating Layer ip2
I0428 19:53:19.196745 27740 net.cpp:408] ip2 <- ip1
I0428 19:53:19.196750 27740 net.cpp:382] ip2 -> ip2
I0428 19:53:19.196878 27740 net.cpp:124] Setting up ip2
I0428 19:53:19.196887 27740 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:19.196890 27740 net.cpp:139] Memory required for data: 2161920
I0428 19:53:19.196895 27740 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:19.196918 27740 net.cpp:86] Creating Layer relu2
I0428 19:53:19.196921 27740 net.cpp:408] relu2 <- ip2
I0428 19:53:19.196925 27740 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:19.197782 27740 net.cpp:124] Setting up relu2
I0428 19:53:19.197794 27740 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:19.197813 27740 net.cpp:139] Memory required for data: 2164480
I0428 19:53:19.197818 27740 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:19.197824 27740 net.cpp:86] Creating Layer ip3
I0428 19:53:19.197829 27740 net.cpp:408] ip3 <- ip2
I0428 19:53:19.197834 27740 net.cpp:382] ip3 -> ip3
I0428 19:53:19.197933 27740 net.cpp:124] Setting up ip3
I0428 19:53:19.197940 27740 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:19.197943 27740 net.cpp:139] Memory required for data: 2167040
I0428 19:53:19.197953 27740 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:19.197962 27740 net.cpp:86] Creating Layer relu3
I0428 19:53:19.197966 27740 net.cpp:408] relu3 <- ip3
I0428 19:53:19.197970 27740 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:19.198129 27740 net.cpp:124] Setting up relu3
I0428 19:53:19.198137 27740 net.cpp:131] Top shape: 64 10 (640)
I0428 19:53:19.198140 27740 net.cpp:139] Memory required for data: 2169600
I0428 19:53:19.198144 27740 layer_factory.hpp:77] Creating layer loss
I0428 19:53:19.198149 27740 net.cpp:86] Creating Layer loss
I0428 19:53:19.198153 27740 net.cpp:408] loss <- ip3
I0428 19:53:19.198156 27740 net.cpp:408] loss <- label
I0428 19:53:19.198163 27740 net.cpp:382] loss -> loss
I0428 19:53:19.198179 27740 layer_factory.hpp:77] Creating layer loss
I0428 19:53:19.198400 27740 net.cpp:124] Setting up loss
I0428 19:53:19.198408 27740 net.cpp:131] Top shape: (1)
I0428 19:53:19.198411 27740 net.cpp:134]     with loss weight 1
I0428 19:53:19.198426 27740 net.cpp:139] Memory required for data: 2169604
I0428 19:53:19.198431 27740 net.cpp:200] loss needs backward computation.
I0428 19:53:19.198434 27740 net.cpp:200] relu3 needs backward computation.
I0428 19:53:19.198437 27740 net.cpp:200] ip3 needs backward computation.
I0428 19:53:19.198441 27740 net.cpp:200] relu2 needs backward computation.
I0428 19:53:19.198446 27740 net.cpp:200] ip2 needs backward computation.
I0428 19:53:19.198451 27740 net.cpp:200] relu1 needs backward computation.
I0428 19:53:19.198453 27740 net.cpp:200] ip1 needs backward computation.
I0428 19:53:19.198457 27740 net.cpp:200] pool1 needs backward computation.
I0428 19:53:19.198459 27740 net.cpp:200] conv1 needs backward computation.
I0428 19:53:19.198463 27740 net.cpp:200] pool0 needs backward computation.
I0428 19:53:19.198467 27740 net.cpp:200] conv0 needs backward computation.
I0428 19:53:19.198469 27740 net.cpp:202] mnist does not need backward computation.
I0428 19:53:19.198472 27740 net.cpp:244] This network produces output loss
I0428 19:53:19.198482 27740 net.cpp:257] Network initialization done.
I0428 19:53:19.198925 27740 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test684.prototxt
I0428 19:53:19.198963 27740 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 19:53:19.199059 27740 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 5
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 19:53:19.199139 27740 layer_factory.hpp:77] Creating layer mnist
I0428 19:53:19.199187 27740 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 19:53:19.199200 27740 net.cpp:86] Creating Layer mnist
I0428 19:53:19.199205 27740 net.cpp:382] mnist -> data
I0428 19:53:19.199213 27740 net.cpp:382] mnist -> label
I0428 19:53:19.199321 27740 data_layer.cpp:45] output data size: 100,1,28,28
I0428 19:53:19.201330 27740 net.cpp:124] Setting up mnist
I0428 19:53:19.201344 27740 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 19:53:19.201349 27740 net.cpp:131] Top shape: 100 (100)
I0428 19:53:19.201354 27740 net.cpp:139] Memory required for data: 314000
I0428 19:53:19.201357 27740 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 19:53:19.201392 27740 net.cpp:86] Creating Layer label_mnist_1_split
I0428 19:53:19.201396 27740 net.cpp:408] label_mnist_1_split <- label
I0428 19:53:19.201401 27740 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 19:53:19.201407 27740 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 19:53:19.201508 27740 net.cpp:124] Setting up label_mnist_1_split
I0428 19:53:19.201515 27740 net.cpp:131] Top shape: 100 (100)
I0428 19:53:19.201519 27740 net.cpp:131] Top shape: 100 (100)
I0428 19:53:19.201522 27740 net.cpp:139] Memory required for data: 314800
I0428 19:53:19.201525 27740 layer_factory.hpp:77] Creating layer conv0
I0428 19:53:19.201534 27740 net.cpp:86] Creating Layer conv0
I0428 19:53:19.201537 27740 net.cpp:408] conv0 <- data
I0428 19:53:19.201542 27740 net.cpp:382] conv0 -> conv0
I0428 19:53:19.203202 27740 net.cpp:124] Setting up conv0
I0428 19:53:19.203215 27740 net.cpp:131] Top shape: 100 5 24 24 (288000)
I0428 19:53:19.203219 27740 net.cpp:139] Memory required for data: 1466800
I0428 19:53:19.203227 27740 layer_factory.hpp:77] Creating layer pool0
I0428 19:53:19.203233 27740 net.cpp:86] Creating Layer pool0
I0428 19:53:19.203253 27740 net.cpp:408] pool0 <- conv0
I0428 19:53:19.203258 27740 net.cpp:382] pool0 -> pool0
I0428 19:53:19.203290 27740 net.cpp:124] Setting up pool0
I0428 19:53:19.203295 27740 net.cpp:131] Top shape: 100 5 12 12 (72000)
I0428 19:53:19.203299 27740 net.cpp:139] Memory required for data: 1754800
I0428 19:53:19.203301 27740 layer_factory.hpp:77] Creating layer conv1
I0428 19:53:19.203310 27740 net.cpp:86] Creating Layer conv1
I0428 19:53:19.203312 27740 net.cpp:408] conv1 <- pool0
I0428 19:53:19.203316 27740 net.cpp:382] conv1 -> conv1
I0428 19:53:19.204808 27740 net.cpp:124] Setting up conv1
I0428 19:53:19.204843 27740 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 19:53:19.204848 27740 net.cpp:139] Memory required for data: 3034800
I0428 19:53:19.204856 27740 layer_factory.hpp:77] Creating layer pool1
I0428 19:53:19.204879 27740 net.cpp:86] Creating Layer pool1
I0428 19:53:19.204883 27740 net.cpp:408] pool1 <- conv1
I0428 19:53:19.204888 27740 net.cpp:382] pool1 -> pool1
I0428 19:53:19.204942 27740 net.cpp:124] Setting up pool1
I0428 19:53:19.204948 27740 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 19:53:19.204952 27740 net.cpp:139] Memory required for data: 3354800
I0428 19:53:19.204955 27740 layer_factory.hpp:77] Creating layer ip1
I0428 19:53:19.204962 27740 net.cpp:86] Creating Layer ip1
I0428 19:53:19.204965 27740 net.cpp:408] ip1 <- pool1
I0428 19:53:19.204978 27740 net.cpp:382] ip1 -> ip1
I0428 19:53:19.205292 27740 net.cpp:124] Setting up ip1
I0428 19:53:19.205303 27740 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:19.205317 27740 net.cpp:139] Memory required for data: 3364800
I0428 19:53:19.205325 27740 layer_factory.hpp:77] Creating layer relu1
I0428 19:53:19.205330 27740 net.cpp:86] Creating Layer relu1
I0428 19:53:19.205340 27740 net.cpp:408] relu1 <- ip1
I0428 19:53:19.205345 27740 net.cpp:369] relu1 -> ip1 (in-place)
I0428 19:53:19.205509 27740 net.cpp:124] Setting up relu1
I0428 19:53:19.205518 27740 net.cpp:131] Top shape: 100 25 (2500)
I0428 19:53:19.205521 27740 net.cpp:139] Memory required for data: 3374800
I0428 19:53:19.205525 27740 layer_factory.hpp:77] Creating layer ip2
I0428 19:53:19.205531 27740 net.cpp:86] Creating Layer ip2
I0428 19:53:19.205535 27740 net.cpp:408] ip2 <- ip1
I0428 19:53:19.205539 27740 net.cpp:382] ip2 -> ip2
I0428 19:53:19.205629 27740 net.cpp:124] Setting up ip2
I0428 19:53:19.205637 27740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:19.205641 27740 net.cpp:139] Memory required for data: 3378800
I0428 19:53:19.205658 27740 layer_factory.hpp:77] Creating layer relu2
I0428 19:53:19.205662 27740 net.cpp:86] Creating Layer relu2
I0428 19:53:19.205667 27740 net.cpp:408] relu2 <- ip2
I0428 19:53:19.205677 27740 net.cpp:369] relu2 -> ip2 (in-place)
I0428 19:53:19.205828 27740 net.cpp:124] Setting up relu2
I0428 19:53:19.205837 27740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:19.205840 27740 net.cpp:139] Memory required for data: 3382800
I0428 19:53:19.205843 27740 layer_factory.hpp:77] Creating layer ip3
I0428 19:53:19.205849 27740 net.cpp:86] Creating Layer ip3
I0428 19:53:19.205852 27740 net.cpp:408] ip3 <- ip2
I0428 19:53:19.205857 27740 net.cpp:382] ip3 -> ip3
I0428 19:53:19.205966 27740 net.cpp:124] Setting up ip3
I0428 19:53:19.205974 27740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:19.205977 27740 net.cpp:139] Memory required for data: 3386800
I0428 19:53:19.205986 27740 layer_factory.hpp:77] Creating layer relu3
I0428 19:53:19.206007 27740 net.cpp:86] Creating Layer relu3
I0428 19:53:19.206012 27740 net.cpp:408] relu3 <- ip3
I0428 19:53:19.206017 27740 net.cpp:369] relu3 -> ip3 (in-place)
I0428 19:53:19.206897 27740 net.cpp:124] Setting up relu3
I0428 19:53:19.206909 27740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:19.206914 27740 net.cpp:139] Memory required for data: 3390800
I0428 19:53:19.206918 27740 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 19:53:19.206923 27740 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 19:53:19.206933 27740 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 19:53:19.206938 27740 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 19:53:19.206945 27740 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 19:53:19.206990 27740 net.cpp:124] Setting up ip3_relu3_0_split
I0428 19:53:19.206995 27740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:19.207000 27740 net.cpp:131] Top shape: 100 10 (1000)
I0428 19:53:19.207002 27740 net.cpp:139] Memory required for data: 3398800
I0428 19:53:19.207005 27740 layer_factory.hpp:77] Creating layer accuracy
I0428 19:53:19.207010 27740 net.cpp:86] Creating Layer accuracy
I0428 19:53:19.207015 27740 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 19:53:19.207018 27740 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 19:53:19.207022 27740 net.cpp:382] accuracy -> accuracy
I0428 19:53:19.207036 27740 net.cpp:124] Setting up accuracy
I0428 19:53:19.207041 27740 net.cpp:131] Top shape: (1)
I0428 19:53:19.207043 27740 net.cpp:139] Memory required for data: 3398804
I0428 19:53:19.207046 27740 layer_factory.hpp:77] Creating layer loss
I0428 19:53:19.207051 27740 net.cpp:86] Creating Layer loss
I0428 19:53:19.207053 27740 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 19:53:19.207058 27740 net.cpp:408] loss <- label_mnist_1_split_1
I0428 19:53:19.207062 27740 net.cpp:382] loss -> loss
I0428 19:53:19.207068 27740 layer_factory.hpp:77] Creating layer loss
I0428 19:53:19.207341 27740 net.cpp:124] Setting up loss
I0428 19:53:19.207351 27740 net.cpp:131] Top shape: (1)
I0428 19:53:19.207355 27740 net.cpp:134]     with loss weight 1
I0428 19:53:19.207361 27740 net.cpp:139] Memory required for data: 3398808
I0428 19:53:19.207381 27740 net.cpp:200] loss needs backward computation.
I0428 19:53:19.207386 27740 net.cpp:202] accuracy does not need backward computation.
I0428 19:53:19.207389 27740 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 19:53:19.207392 27740 net.cpp:200] relu3 needs backward computation.
I0428 19:53:19.207394 27740 net.cpp:200] ip3 needs backward computation.
I0428 19:53:19.207397 27740 net.cpp:200] relu2 needs backward computation.
I0428 19:53:19.207422 27740 net.cpp:200] ip2 needs backward computation.
I0428 19:53:19.207429 27740 net.cpp:200] relu1 needs backward computation.
I0428 19:53:19.207432 27740 net.cpp:200] ip1 needs backward computation.
I0428 19:53:19.207435 27740 net.cpp:200] pool1 needs backward computation.
I0428 19:53:19.207438 27740 net.cpp:200] conv1 needs backward computation.
I0428 19:53:19.207442 27740 net.cpp:200] pool0 needs backward computation.
I0428 19:53:19.207444 27740 net.cpp:200] conv0 needs backward computation.
I0428 19:53:19.207448 27740 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 19:53:19.207451 27740 net.cpp:202] mnist does not need backward computation.
I0428 19:53:19.207453 27740 net.cpp:244] This network produces output accuracy
I0428 19:53:19.207458 27740 net.cpp:244] This network produces output loss
I0428 19:53:19.207466 27740 net.cpp:257] Network initialization done.
I0428 19:53:19.207505 27740 solver.cpp:56] Solver scaffolding done.
I0428 19:53:19.207875 27740 caffe.cpp:248] Starting Optimization
I0428 19:53:19.207883 27740 solver.cpp:273] Solving LeNet
I0428 19:53:19.207887 27740 solver.cpp:274] Learning Rate Policy: inv
I0428 19:53:19.208070 27740 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 19:53:19.213258 27740 blocking_queue.cpp:49] Waiting for data
I0428 19:53:19.284886 27747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:19.285380 27740 solver.cpp:398]     Test net output #0: accuracy = 0.1007
I0428 19:53:19.285398 27740 solver.cpp:398]     Test net output #1: loss = 2.31145 (* 1 = 2.31145 loss)
I0428 19:53:19.288461 27740 solver.cpp:219] Iteration 0 (2.82621 iter/s, 0.080549s/100 iters), loss = 2.30471
I0428 19:53:19.288482 27740 solver.cpp:238]     Train net output #0: loss = 2.30471 (* 1 = 2.30471 loss)
I0428 19:53:19.288494 27740 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 19:53:19.400482 27740 solver.cpp:219] Iteration 100 (892.963 iter/s, 0.111987s/100 iters), loss = 0.617832
I0428 19:53:19.400512 27740 solver.cpp:238]     Train net output #0: loss = 0.617832 (* 1 = 0.617832 loss)
I0428 19:53:19.400521 27740 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 19:53:19.510905 27740 solver.cpp:219] Iteration 200 (905.936 iter/s, 0.110383s/100 iters), loss = 0.30527
I0428 19:53:19.510943 27740 solver.cpp:238]     Train net output #0: loss = 0.30527 (* 1 = 0.30527 loss)
I0428 19:53:19.510965 27740 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 19:53:19.618950 27740 solver.cpp:219] Iteration 300 (925.96 iter/s, 0.107996s/100 iters), loss = 0.273899
I0428 19:53:19.618985 27740 solver.cpp:238]     Train net output #0: loss = 0.273899 (* 1 = 0.273899 loss)
I0428 19:53:19.618993 27740 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 19:53:19.723444 27740 solver.cpp:219] Iteration 400 (957.3 iter/s, 0.10446s/100 iters), loss = 0.192142
I0428 19:53:19.723484 27740 solver.cpp:238]     Train net output #0: loss = 0.192142 (* 1 = 0.192142 loss)
I0428 19:53:19.723506 27740 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 19:53:19.830389 27740 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 19:53:19.906186 27747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:19.906666 27740 solver.cpp:398]     Test net output #0: accuracy = 0.958
I0428 19:53:19.906685 27740 solver.cpp:398]     Test net output #1: loss = 0.1291 (* 1 = 0.1291 loss)
I0428 19:53:19.907781 27740 solver.cpp:219] Iteration 500 (542.643 iter/s, 0.184283s/100 iters), loss = 0.129818
I0428 19:53:19.907837 27740 solver.cpp:238]     Train net output #0: loss = 0.129818 (* 1 = 0.129818 loss)
I0428 19:53:19.907873 27740 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 19:53:20.019863 27740 solver.cpp:219] Iteration 600 (892.723 iter/s, 0.112017s/100 iters), loss = 0.122799
I0428 19:53:20.019886 27740 solver.cpp:238]     Train net output #0: loss = 0.122799 (* 1 = 0.122799 loss)
I0428 19:53:20.019908 27740 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 19:53:20.131702 27740 solver.cpp:219] Iteration 700 (894.412 iter/s, 0.111805s/100 iters), loss = 0.228555
I0428 19:53:20.131727 27740 solver.cpp:238]     Train net output #0: loss = 0.228555 (* 1 = 0.228555 loss)
I0428 19:53:20.131753 27740 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 19:53:20.239240 27740 solver.cpp:219] Iteration 800 (930.219 iter/s, 0.107502s/100 iters), loss = 0.239139
I0428 19:53:20.239266 27740 solver.cpp:238]     Train net output #0: loss = 0.239139 (* 1 = 0.239139 loss)
I0428 19:53:20.239292 27740 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 19:53:20.343492 27740 solver.cpp:219] Iteration 900 (959.559 iter/s, 0.104215s/100 iters), loss = 0.181735
I0428 19:53:20.343515 27740 solver.cpp:238]     Train net output #0: loss = 0.181735 (* 1 = 0.181735 loss)
I0428 19:53:20.343538 27740 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 19:53:20.379546 27746 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:20.451091 27740 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 19:53:20.452539 27740 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 19:53:20.453269 27740 solver.cpp:311] Iteration 1000, loss = 0.113378
I0428 19:53:20.453284 27740 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 19:53:20.529419 27747 data_layer.cpp:73] Restarting data prefetching from start.
I0428 19:53:20.529925 27740 solver.cpp:398]     Test net output #0: accuracy = 0.9691
I0428 19:53:20.529943 27740 solver.cpp:398]     Test net output #1: loss = 0.100022 (* 1 = 0.100022 loss)
I0428 19:53:20.529948 27740 solver.cpp:316] Optimization Done.
I0428 19:53:20.529952 27740 caffe.cpp:259] Optimization Done.
