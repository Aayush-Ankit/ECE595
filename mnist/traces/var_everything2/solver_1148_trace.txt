I0428 20:10:59.320467 31982 caffe.cpp:218] Using GPUs 0
I0428 20:10:59.360626 31982 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:59.892766 31982 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1148.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:59.892913 31982 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1148.prototxt
I0428 20:10:59.893329 31982 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:59.893349 31982 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:59.893451 31982 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:10:59.893533 31982 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:59.893633 31982 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:59.893656 31982 net.cpp:86] Creating Layer mnist
I0428 20:10:59.893666 31982 net.cpp:382] mnist -> data
I0428 20:10:59.893689 31982 net.cpp:382] mnist -> label
I0428 20:10:59.894779 31982 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:59.897223 31982 net.cpp:124] Setting up mnist
I0428 20:10:59.897244 31982 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:59.897251 31982 net.cpp:131] Top shape: 64 (64)
I0428 20:10:59.897254 31982 net.cpp:139] Memory required for data: 200960
I0428 20:10:59.897261 31982 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:59.897310 31982 net.cpp:86] Creating Layer conv0
I0428 20:10:59.897338 31982 net.cpp:408] conv0 <- data
I0428 20:10:59.897351 31982 net.cpp:382] conv0 -> conv0
I0428 20:11:00.164171 31982 net.cpp:124] Setting up conv0
I0428 20:11:00.164216 31982 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:11:00.164219 31982 net.cpp:139] Memory required for data: 3887360
I0428 20:11:00.164235 31982 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:00.164248 31982 net.cpp:86] Creating Layer pool0
I0428 20:11:00.164252 31982 net.cpp:408] pool0 <- conv0
I0428 20:11:00.164273 31982 net.cpp:382] pool0 -> pool0
I0428 20:11:00.164320 31982 net.cpp:124] Setting up pool0
I0428 20:11:00.164333 31982 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:11:00.164336 31982 net.cpp:139] Memory required for data: 4808960
I0428 20:11:00.164340 31982 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:00.164350 31982 net.cpp:86] Creating Layer conv1
I0428 20:11:00.164353 31982 net.cpp:408] conv1 <- pool0
I0428 20:11:00.164358 31982 net.cpp:382] conv1 -> conv1
I0428 20:11:00.166551 31982 net.cpp:124] Setting up conv1
I0428 20:11:00.166582 31982 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:11:00.166587 31982 net.cpp:139] Memory required for data: 5628160
I0428 20:11:00.166596 31982 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:00.166604 31982 net.cpp:86] Creating Layer pool1
I0428 20:11:00.166609 31982 net.cpp:408] pool1 <- conv1
I0428 20:11:00.166613 31982 net.cpp:382] pool1 -> pool1
I0428 20:11:00.166682 31982 net.cpp:124] Setting up pool1
I0428 20:11:00.166699 31982 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:11:00.166702 31982 net.cpp:139] Memory required for data: 5832960
I0428 20:11:00.166705 31982 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:00.166713 31982 net.cpp:86] Creating Layer ip1
I0428 20:11:00.166718 31982 net.cpp:408] ip1 <- pool1
I0428 20:11:00.166721 31982 net.cpp:382] ip1 -> ip1
I0428 20:11:00.167752 31982 net.cpp:124] Setting up ip1
I0428 20:11:00.167764 31982 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:00.167784 31982 net.cpp:139] Memory required for data: 5835520
I0428 20:11:00.167793 31982 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:00.167801 31982 net.cpp:86] Creating Layer relu1
I0428 20:11:00.167805 31982 net.cpp:408] relu1 <- ip1
I0428 20:11:00.167810 31982 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:00.168007 31982 net.cpp:124] Setting up relu1
I0428 20:11:00.168017 31982 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:00.168021 31982 net.cpp:139] Memory required for data: 5838080
I0428 20:11:00.168025 31982 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:00.168031 31982 net.cpp:86] Creating Layer ip2
I0428 20:11:00.168035 31982 net.cpp:408] ip2 <- ip1
I0428 20:11:00.168040 31982 net.cpp:382] ip2 -> ip2
I0428 20:11:00.168141 31982 net.cpp:124] Setting up ip2
I0428 20:11:00.168149 31982 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:00.168153 31982 net.cpp:139] Memory required for data: 5844480
I0428 20:11:00.168159 31982 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:00.168164 31982 net.cpp:86] Creating Layer relu2
I0428 20:11:00.168169 31982 net.cpp:408] relu2 <- ip2
I0428 20:11:00.168172 31982 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:00.168987 31982 net.cpp:124] Setting up relu2
I0428 20:11:00.169016 31982 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:11:00.169019 31982 net.cpp:139] Memory required for data: 5850880
I0428 20:11:00.169023 31982 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:00.169030 31982 net.cpp:86] Creating Layer ip3
I0428 20:11:00.169034 31982 net.cpp:408] ip3 <- ip2
I0428 20:11:00.169040 31982 net.cpp:382] ip3 -> ip3
I0428 20:11:00.169142 31982 net.cpp:124] Setting up ip3
I0428 20:11:00.169152 31982 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:00.169154 31982 net.cpp:139] Memory required for data: 5853440
I0428 20:11:00.169163 31982 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:00.169168 31982 net.cpp:86] Creating Layer relu3
I0428 20:11:00.169172 31982 net.cpp:408] relu3 <- ip3
I0428 20:11:00.169175 31982 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:00.169358 31982 net.cpp:124] Setting up relu3
I0428 20:11:00.169368 31982 net.cpp:131] Top shape: 64 10 (640)
I0428 20:11:00.169370 31982 net.cpp:139] Memory required for data: 5856000
I0428 20:11:00.169373 31982 layer_factory.hpp:77] Creating layer loss
I0428 20:11:00.169379 31982 net.cpp:86] Creating Layer loss
I0428 20:11:00.169383 31982 net.cpp:408] loss <- ip3
I0428 20:11:00.169386 31982 net.cpp:408] loss <- label
I0428 20:11:00.169392 31982 net.cpp:382] loss -> loss
I0428 20:11:00.169409 31982 layer_factory.hpp:77] Creating layer loss
I0428 20:11:00.169674 31982 net.cpp:124] Setting up loss
I0428 20:11:00.169685 31982 net.cpp:131] Top shape: (1)
I0428 20:11:00.169688 31982 net.cpp:134]     with loss weight 1
I0428 20:11:00.169703 31982 net.cpp:139] Memory required for data: 5856004
I0428 20:11:00.169708 31982 net.cpp:200] loss needs backward computation.
I0428 20:11:00.169711 31982 net.cpp:200] relu3 needs backward computation.
I0428 20:11:00.169714 31982 net.cpp:200] ip3 needs backward computation.
I0428 20:11:00.169718 31982 net.cpp:200] relu2 needs backward computation.
I0428 20:11:00.169721 31982 net.cpp:200] ip2 needs backward computation.
I0428 20:11:00.169724 31982 net.cpp:200] relu1 needs backward computation.
I0428 20:11:00.169728 31982 net.cpp:200] ip1 needs backward computation.
I0428 20:11:00.169730 31982 net.cpp:200] pool1 needs backward computation.
I0428 20:11:00.169734 31982 net.cpp:200] conv1 needs backward computation.
I0428 20:11:00.169737 31982 net.cpp:200] pool0 needs backward computation.
I0428 20:11:00.169740 31982 net.cpp:200] conv0 needs backward computation.
I0428 20:11:00.169744 31982 net.cpp:202] mnist does not need backward computation.
I0428 20:11:00.169747 31982 net.cpp:244] This network produces output loss
I0428 20:11:00.169757 31982 net.cpp:257] Network initialization done.
I0428 20:11:00.170147 31982 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1148.prototxt
I0428 20:11:00.170189 31982 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:11:00.170281 31982 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:11:00.170361 31982 layer_factory.hpp:77] Creating layer mnist
I0428 20:11:00.170405 31982 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:11:00.170418 31982 net.cpp:86] Creating Layer mnist
I0428 20:11:00.170423 31982 net.cpp:382] mnist -> data
I0428 20:11:00.170431 31982 net.cpp:382] mnist -> label
I0428 20:11:00.170516 31982 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:11:00.172785 31982 net.cpp:124] Setting up mnist
I0428 20:11:00.172801 31982 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:11:00.172806 31982 net.cpp:131] Top shape: 100 (100)
I0428 20:11:00.172814 31982 net.cpp:139] Memory required for data: 314000
I0428 20:11:00.172818 31982 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:11:00.172842 31982 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:11:00.172845 31982 net.cpp:408] label_mnist_1_split <- label
I0428 20:11:00.172850 31982 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:11:00.172857 31982 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:11:00.172912 31982 net.cpp:124] Setting up label_mnist_1_split
I0428 20:11:00.172919 31982 net.cpp:131] Top shape: 100 (100)
I0428 20:11:00.172924 31982 net.cpp:131] Top shape: 100 (100)
I0428 20:11:00.172926 31982 net.cpp:139] Memory required for data: 314800
I0428 20:11:00.172930 31982 layer_factory.hpp:77] Creating layer conv0
I0428 20:11:00.172938 31982 net.cpp:86] Creating Layer conv0
I0428 20:11:00.172942 31982 net.cpp:408] conv0 <- data
I0428 20:11:00.172947 31982 net.cpp:382] conv0 -> conv0
I0428 20:11:00.174590 31982 net.cpp:124] Setting up conv0
I0428 20:11:00.174604 31982 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:11:00.174608 31982 net.cpp:139] Memory required for data: 6074800
I0428 20:11:00.174618 31982 layer_factory.hpp:77] Creating layer pool0
I0428 20:11:00.174624 31982 net.cpp:86] Creating Layer pool0
I0428 20:11:00.174628 31982 net.cpp:408] pool0 <- conv0
I0428 20:11:00.174633 31982 net.cpp:382] pool0 -> pool0
I0428 20:11:00.174670 31982 net.cpp:124] Setting up pool0
I0428 20:11:00.174675 31982 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:11:00.174679 31982 net.cpp:139] Memory required for data: 7514800
I0428 20:11:00.174681 31982 layer_factory.hpp:77] Creating layer conv1
I0428 20:11:00.174690 31982 net.cpp:86] Creating Layer conv1
I0428 20:11:00.174693 31982 net.cpp:408] conv1 <- pool0
I0428 20:11:00.174698 31982 net.cpp:382] conv1 -> conv1
I0428 20:11:00.176558 31982 net.cpp:124] Setting up conv1
I0428 20:11:00.176571 31982 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:11:00.176574 31982 net.cpp:139] Memory required for data: 8794800
I0428 20:11:00.176584 31982 layer_factory.hpp:77] Creating layer pool1
I0428 20:11:00.176612 31982 net.cpp:86] Creating Layer pool1
I0428 20:11:00.176616 31982 net.cpp:408] pool1 <- conv1
I0428 20:11:00.176621 31982 net.cpp:382] pool1 -> pool1
I0428 20:11:00.176686 31982 net.cpp:124] Setting up pool1
I0428 20:11:00.176692 31982 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:11:00.176700 31982 net.cpp:139] Memory required for data: 9114800
I0428 20:11:00.176704 31982 layer_factory.hpp:77] Creating layer ip1
I0428 20:11:00.176710 31982 net.cpp:86] Creating Layer ip1
I0428 20:11:00.176713 31982 net.cpp:408] ip1 <- pool1
I0428 20:11:00.176718 31982 net.cpp:382] ip1 -> ip1
I0428 20:11:00.176872 31982 net.cpp:124] Setting up ip1
I0428 20:11:00.176880 31982 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:00.176903 31982 net.cpp:139] Memory required for data: 9118800
I0428 20:11:00.176911 31982 layer_factory.hpp:77] Creating layer relu1
I0428 20:11:00.176918 31982 net.cpp:86] Creating Layer relu1
I0428 20:11:00.176920 31982 net.cpp:408] relu1 <- ip1
I0428 20:11:00.176928 31982 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:11:00.177103 31982 net.cpp:124] Setting up relu1
I0428 20:11:00.177112 31982 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:00.177124 31982 net.cpp:139] Memory required for data: 9122800
I0428 20:11:00.177127 31982 layer_factory.hpp:77] Creating layer ip2
I0428 20:11:00.177136 31982 net.cpp:86] Creating Layer ip2
I0428 20:11:00.177145 31982 net.cpp:408] ip2 <- ip1
I0428 20:11:00.177151 31982 net.cpp:382] ip2 -> ip2
I0428 20:11:00.177285 31982 net.cpp:124] Setting up ip2
I0428 20:11:00.177294 31982 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:00.177296 31982 net.cpp:139] Memory required for data: 9132800
I0428 20:11:00.177301 31982 layer_factory.hpp:77] Creating layer relu2
I0428 20:11:00.177312 31982 net.cpp:86] Creating Layer relu2
I0428 20:11:00.177315 31982 net.cpp:408] relu2 <- ip2
I0428 20:11:00.177320 31982 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:11:00.177471 31982 net.cpp:124] Setting up relu2
I0428 20:11:00.177480 31982 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:11:00.177484 31982 net.cpp:139] Memory required for data: 9142800
I0428 20:11:00.177486 31982 layer_factory.hpp:77] Creating layer ip3
I0428 20:11:00.177491 31982 net.cpp:86] Creating Layer ip3
I0428 20:11:00.177495 31982 net.cpp:408] ip3 <- ip2
I0428 20:11:00.177525 31982 net.cpp:382] ip3 -> ip3
I0428 20:11:00.177657 31982 net.cpp:124] Setting up ip3
I0428 20:11:00.177675 31982 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:00.177680 31982 net.cpp:139] Memory required for data: 9146800
I0428 20:11:00.177687 31982 layer_factory.hpp:77] Creating layer relu3
I0428 20:11:00.177693 31982 net.cpp:86] Creating Layer relu3
I0428 20:11:00.177697 31982 net.cpp:408] relu3 <- ip3
I0428 20:11:00.177701 31982 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:11:00.178542 31982 net.cpp:124] Setting up relu3
I0428 20:11:00.178555 31982 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:00.178557 31982 net.cpp:139] Memory required for data: 9150800
I0428 20:11:00.178561 31982 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:11:00.178566 31982 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:11:00.178570 31982 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:11:00.178575 31982 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:11:00.178581 31982 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:11:00.178623 31982 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:11:00.178628 31982 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:00.178632 31982 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:11:00.178634 31982 net.cpp:139] Memory required for data: 9158800
I0428 20:11:00.178637 31982 layer_factory.hpp:77] Creating layer accuracy
I0428 20:11:00.178647 31982 net.cpp:86] Creating Layer accuracy
I0428 20:11:00.178656 31982 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:11:00.178660 31982 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:11:00.178666 31982 net.cpp:382] accuracy -> accuracy
I0428 20:11:00.178678 31982 net.cpp:124] Setting up accuracy
I0428 20:11:00.178683 31982 net.cpp:131] Top shape: (1)
I0428 20:11:00.178685 31982 net.cpp:139] Memory required for data: 9158804
I0428 20:11:00.178694 31982 layer_factory.hpp:77] Creating layer loss
I0428 20:11:00.178697 31982 net.cpp:86] Creating Layer loss
I0428 20:11:00.178700 31982 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:11:00.178704 31982 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:11:00.178709 31982 net.cpp:382] loss -> loss
I0428 20:11:00.178714 31982 layer_factory.hpp:77] Creating layer loss
I0428 20:11:00.178994 31982 net.cpp:124] Setting up loss
I0428 20:11:00.179004 31982 net.cpp:131] Top shape: (1)
I0428 20:11:00.179008 31982 net.cpp:134]     with loss weight 1
I0428 20:11:00.179023 31982 net.cpp:139] Memory required for data: 9158808
I0428 20:11:00.179028 31982 net.cpp:200] loss needs backward computation.
I0428 20:11:00.179046 31982 net.cpp:202] accuracy does not need backward computation.
I0428 20:11:00.179050 31982 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:11:00.179054 31982 net.cpp:200] relu3 needs backward computation.
I0428 20:11:00.179056 31982 net.cpp:200] ip3 needs backward computation.
I0428 20:11:00.179060 31982 net.cpp:200] relu2 needs backward computation.
I0428 20:11:00.179064 31982 net.cpp:200] ip2 needs backward computation.
I0428 20:11:00.179066 31982 net.cpp:200] relu1 needs backward computation.
I0428 20:11:00.179069 31982 net.cpp:200] ip1 needs backward computation.
I0428 20:11:00.179072 31982 net.cpp:200] pool1 needs backward computation.
I0428 20:11:00.179075 31982 net.cpp:200] conv1 needs backward computation.
I0428 20:11:00.179086 31982 net.cpp:200] pool0 needs backward computation.
I0428 20:11:00.179090 31982 net.cpp:200] conv0 needs backward computation.
I0428 20:11:00.179093 31982 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:11:00.179097 31982 net.cpp:202] mnist does not need backward computation.
I0428 20:11:00.179100 31982 net.cpp:244] This network produces output accuracy
I0428 20:11:00.179105 31982 net.cpp:244] This network produces output loss
I0428 20:11:00.179117 31982 net.cpp:257] Network initialization done.
I0428 20:11:00.179165 31982 solver.cpp:56] Solver scaffolding done.
I0428 20:11:00.179523 31982 caffe.cpp:248] Starting Optimization
I0428 20:11:00.179533 31982 solver.cpp:273] Solving LeNet
I0428 20:11:00.179535 31982 solver.cpp:274] Learning Rate Policy: inv
I0428 20:11:00.180415 31982 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:11:00.186748 31982 blocking_queue.cpp:49] Waiting for data
I0428 20:11:00.256780 31989 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:00.257467 31982 solver.cpp:398]     Test net output #0: accuracy = 0.098
I0428 20:11:00.257485 31982 solver.cpp:398]     Test net output #1: loss = 2.32929 (* 1 = 2.32929 loss)
I0428 20:11:00.261279 31982 solver.cpp:219] Iteration 0 (-2.93421e-31 iter/s, 0.0817183s/100 iters), loss = 2.29299
I0428 20:11:00.261303 31982 solver.cpp:238]     Train net output #0: loss = 2.29299 (* 1 = 2.29299 loss)
I0428 20:11:00.261332 31982 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:11:00.382052 31982 solver.cpp:219] Iteration 100 (828.284 iter/s, 0.120731s/100 iters), loss = 0.432523
I0428 20:11:00.382079 31982 solver.cpp:238]     Train net output #0: loss = 0.432523 (* 1 = 0.432523 loss)
I0428 20:11:00.382102 31982 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:11:00.504986 31982 solver.cpp:219] Iteration 200 (813.721 iter/s, 0.122892s/100 iters), loss = 0.281568
I0428 20:11:00.505018 31982 solver.cpp:238]     Train net output #0: loss = 0.281568 (* 1 = 0.281568 loss)
I0428 20:11:00.505026 31982 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:11:00.624640 31982 solver.cpp:219] Iteration 300 (836.033 iter/s, 0.119612s/100 iters), loss = 0.188598
I0428 20:11:00.624665 31982 solver.cpp:238]     Train net output #0: loss = 0.188598 (* 1 = 0.188598 loss)
I0428 20:11:00.624671 31982 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:11:00.750973 31982 solver.cpp:219] Iteration 400 (791.789 iter/s, 0.126296s/100 iters), loss = 0.221775
I0428 20:11:00.750998 31982 solver.cpp:238]     Train net output #0: loss = 0.221776 (* 1 = 0.221776 loss)
I0428 20:11:00.751019 31982 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:11:00.869436 31982 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:11:00.945484 31989 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:00.946112 31982 solver.cpp:398]     Test net output #0: accuracy = 0.9502
I0428 20:11:00.946132 31982 solver.cpp:398]     Test net output #1: loss = 0.167902 (* 1 = 0.167902 loss)
I0428 20:11:00.947376 31982 solver.cpp:219] Iteration 500 (509.297 iter/s, 0.196349s/100 iters), loss = 0.158678
I0428 20:11:00.947434 31982 solver.cpp:238]     Train net output #0: loss = 0.158678 (* 1 = 0.158678 loss)
I0428 20:11:00.947441 31982 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:11:01.080879 31982 solver.cpp:219] Iteration 600 (749.448 iter/s, 0.133431s/100 iters), loss = 0.0935422
I0428 20:11:01.080914 31982 solver.cpp:238]     Train net output #0: loss = 0.0935422 (* 1 = 0.0935422 loss)
I0428 20:11:01.080924 31982 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:11:01.207168 31982 solver.cpp:219] Iteration 700 (792.118 iter/s, 0.126244s/100 iters), loss = 0.242564
I0428 20:11:01.207195 31982 solver.cpp:238]     Train net output #0: loss = 0.242564 (* 1 = 0.242564 loss)
I0428 20:11:01.207202 31982 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:11:01.326566 31982 solver.cpp:219] Iteration 800 (837.798 iter/s, 0.119361s/100 iters), loss = 0.301727
I0428 20:11:01.326606 31982 solver.cpp:238]     Train net output #0: loss = 0.301727 (* 1 = 0.301727 loss)
I0428 20:11:01.326611 31982 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:11:01.449898 31982 solver.cpp:219] Iteration 900 (811.058 iter/s, 0.123296s/100 iters), loss = 0.172363
I0428 20:11:01.449924 31982 solver.cpp:238]     Train net output #0: loss = 0.172363 (* 1 = 0.172363 loss)
I0428 20:11:01.449931 31982 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:11:01.489807 31988 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:01.567549 31982 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:11:01.569079 31982 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:11:01.569962 31982 solver.cpp:311] Iteration 1000, loss = 0.0684688
I0428 20:11:01.569977 31982 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:11:01.646608 31989 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:11:01.647274 31982 solver.cpp:398]     Test net output #0: accuracy = 0.9723
I0428 20:11:01.647294 31982 solver.cpp:398]     Test net output #1: loss = 0.0946027 (* 1 = 0.0946027 loss)
I0428 20:11:01.647299 31982 solver.cpp:316] Optimization Done.
I0428 20:11:01.647308 31982 caffe.cpp:259] Optimization Done.
