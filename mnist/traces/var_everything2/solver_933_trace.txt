I0428 20:02:36.883411 29981 caffe.cpp:218] Using GPUs 0
I0428 20:02:36.915652 29981 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:02:37.369457 29981 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test933.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:02:37.369590 29981 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test933.prototxt
I0428 20:02:37.369910 29981 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:02:37.369927 29981 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:02:37.370007 29981 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:37.370069 29981 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:37.370151 29981 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:02:37.370170 29981 net.cpp:86] Creating Layer mnist
I0428 20:02:37.370177 29981 net.cpp:382] mnist -> data
I0428 20:02:37.370195 29981 net.cpp:382] mnist -> label
I0428 20:02:37.371172 29981 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:02:37.373425 29981 net.cpp:124] Setting up mnist
I0428 20:02:37.373438 29981 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:02:37.373443 29981 net.cpp:131] Top shape: 64 (64)
I0428 20:02:37.373445 29981 net.cpp:139] Memory required for data: 200960
I0428 20:02:37.373451 29981 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:37.373474 29981 net.cpp:86] Creating Layer conv0
I0428 20:02:37.373491 29981 net.cpp:408] conv0 <- data
I0428 20:02:37.373502 29981 net.cpp:382] conv0 -> conv0
I0428 20:02:37.600116 29981 net.cpp:124] Setting up conv0
I0428 20:02:37.600157 29981 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:02:37.600162 29981 net.cpp:139] Memory required for data: 1675520
I0428 20:02:37.600177 29981 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:37.600188 29981 net.cpp:86] Creating Layer pool0
I0428 20:02:37.600193 29981 net.cpp:408] pool0 <- conv0
I0428 20:02:37.600198 29981 net.cpp:382] pool0 -> pool0
I0428 20:02:37.600240 29981 net.cpp:124] Setting up pool0
I0428 20:02:37.600245 29981 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:02:37.600248 29981 net.cpp:139] Memory required for data: 2044160
I0428 20:02:37.600251 29981 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:37.600261 29981 net.cpp:86] Creating Layer conv1
I0428 20:02:37.600265 29981 net.cpp:408] conv1 <- pool0
I0428 20:02:37.600270 29981 net.cpp:382] conv1 -> conv1
I0428 20:02:37.603060 29981 net.cpp:124] Setting up conv1
I0428 20:02:37.603088 29981 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:02:37.603093 29981 net.cpp:139] Memory required for data: 2863360
I0428 20:02:37.603101 29981 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:37.603108 29981 net.cpp:86] Creating Layer pool1
I0428 20:02:37.603111 29981 net.cpp:408] pool1 <- conv1
I0428 20:02:37.603116 29981 net.cpp:382] pool1 -> pool1
I0428 20:02:37.603168 29981 net.cpp:124] Setting up pool1
I0428 20:02:37.603173 29981 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:02:37.603176 29981 net.cpp:139] Memory required for data: 3068160
I0428 20:02:37.603178 29981 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:37.603185 29981 net.cpp:86] Creating Layer ip1
I0428 20:02:37.603188 29981 net.cpp:408] ip1 <- pool1
I0428 20:02:37.603193 29981 net.cpp:382] ip1 -> ip1
I0428 20:02:37.603538 29981 net.cpp:124] Setting up ip1
I0428 20:02:37.603544 29981 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:37.603564 29981 net.cpp:139] Memory required for data: 3080960
I0428 20:02:37.603570 29981 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:37.603575 29981 net.cpp:86] Creating Layer relu1
I0428 20:02:37.603579 29981 net.cpp:408] relu1 <- ip1
I0428 20:02:37.603582 29981 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:37.603752 29981 net.cpp:124] Setting up relu1
I0428 20:02:37.603761 29981 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:37.603765 29981 net.cpp:139] Memory required for data: 3093760
I0428 20:02:37.603767 29981 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:37.603773 29981 net.cpp:86] Creating Layer ip2
I0428 20:02:37.603776 29981 net.cpp:408] ip2 <- ip1
I0428 20:02:37.603780 29981 net.cpp:382] ip2 -> ip2
I0428 20:02:37.604713 29981 net.cpp:124] Setting up ip2
I0428 20:02:37.604724 29981 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:37.604743 29981 net.cpp:139] Memory required for data: 3106560
I0428 20:02:37.604749 29981 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:37.604771 29981 net.cpp:86] Creating Layer relu2
I0428 20:02:37.604775 29981 net.cpp:408] relu2 <- ip2
I0428 20:02:37.604779 29981 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:37.605612 29981 net.cpp:124] Setting up relu2
I0428 20:02:37.605624 29981 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:02:37.605628 29981 net.cpp:139] Memory required for data: 3119360
I0428 20:02:37.605631 29981 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:37.605638 29981 net.cpp:86] Creating Layer ip3
I0428 20:02:37.605641 29981 net.cpp:408] ip3 <- ip2
I0428 20:02:37.605646 29981 net.cpp:382] ip3 -> ip3
I0428 20:02:37.605749 29981 net.cpp:124] Setting up ip3
I0428 20:02:37.605756 29981 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:37.605759 29981 net.cpp:139] Memory required for data: 3121920
I0428 20:02:37.605767 29981 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:37.605772 29981 net.cpp:86] Creating Layer relu3
I0428 20:02:37.605775 29981 net.cpp:408] relu3 <- ip3
I0428 20:02:37.605779 29981 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:37.605949 29981 net.cpp:124] Setting up relu3
I0428 20:02:37.605958 29981 net.cpp:131] Top shape: 64 10 (640)
I0428 20:02:37.605962 29981 net.cpp:139] Memory required for data: 3124480
I0428 20:02:37.605964 29981 layer_factory.hpp:77] Creating layer loss
I0428 20:02:37.605969 29981 net.cpp:86] Creating Layer loss
I0428 20:02:37.605973 29981 net.cpp:408] loss <- ip3
I0428 20:02:37.605976 29981 net.cpp:408] loss <- label
I0428 20:02:37.605981 29981 net.cpp:382] loss -> loss
I0428 20:02:37.605998 29981 layer_factory.hpp:77] Creating layer loss
I0428 20:02:37.606235 29981 net.cpp:124] Setting up loss
I0428 20:02:37.606259 29981 net.cpp:131] Top shape: (1)
I0428 20:02:37.606262 29981 net.cpp:134]     with loss weight 1
I0428 20:02:37.606276 29981 net.cpp:139] Memory required for data: 3124484
I0428 20:02:37.606278 29981 net.cpp:200] loss needs backward computation.
I0428 20:02:37.606282 29981 net.cpp:200] relu3 needs backward computation.
I0428 20:02:37.606284 29981 net.cpp:200] ip3 needs backward computation.
I0428 20:02:37.606287 29981 net.cpp:200] relu2 needs backward computation.
I0428 20:02:37.606290 29981 net.cpp:200] ip2 needs backward computation.
I0428 20:02:37.606292 29981 net.cpp:200] relu1 needs backward computation.
I0428 20:02:37.606295 29981 net.cpp:200] ip1 needs backward computation.
I0428 20:02:37.606298 29981 net.cpp:200] pool1 needs backward computation.
I0428 20:02:37.606300 29981 net.cpp:200] conv1 needs backward computation.
I0428 20:02:37.606303 29981 net.cpp:200] pool0 needs backward computation.
I0428 20:02:37.606307 29981 net.cpp:200] conv0 needs backward computation.
I0428 20:02:37.606309 29981 net.cpp:202] mnist does not need backward computation.
I0428 20:02:37.606312 29981 net.cpp:244] This network produces output loss
I0428 20:02:37.606322 29981 net.cpp:257] Network initialization done.
I0428 20:02:37.606627 29981 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test933.prototxt
I0428 20:02:37.606653 29981 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:02:37.606739 29981 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:02:37.606814 29981 layer_factory.hpp:77] Creating layer mnist
I0428 20:02:37.606873 29981 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:02:37.606884 29981 net.cpp:86] Creating Layer mnist
I0428 20:02:37.606889 29981 net.cpp:382] mnist -> data
I0428 20:02:37.606895 29981 net.cpp:382] mnist -> label
I0428 20:02:37.606973 29981 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:02:37.608893 29981 net.cpp:124] Setting up mnist
I0428 20:02:37.608922 29981 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:02:37.608927 29981 net.cpp:131] Top shape: 100 (100)
I0428 20:02:37.608930 29981 net.cpp:139] Memory required for data: 314000
I0428 20:02:37.608934 29981 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:02:37.608940 29981 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:02:37.608944 29981 net.cpp:408] label_mnist_1_split <- label
I0428 20:02:37.608948 29981 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:02:37.608955 29981 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:02:37.608997 29981 net.cpp:124] Setting up label_mnist_1_split
I0428 20:02:37.609002 29981 net.cpp:131] Top shape: 100 (100)
I0428 20:02:37.609006 29981 net.cpp:131] Top shape: 100 (100)
I0428 20:02:37.609010 29981 net.cpp:139] Memory required for data: 314800
I0428 20:02:37.609012 29981 layer_factory.hpp:77] Creating layer conv0
I0428 20:02:37.609020 29981 net.cpp:86] Creating Layer conv0
I0428 20:02:37.609024 29981 net.cpp:408] conv0 <- data
I0428 20:02:37.609030 29981 net.cpp:382] conv0 -> conv0
I0428 20:02:37.610564 29981 net.cpp:124] Setting up conv0
I0428 20:02:37.610592 29981 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:02:37.610596 29981 net.cpp:139] Memory required for data: 2618800
I0428 20:02:37.610605 29981 layer_factory.hpp:77] Creating layer pool0
I0428 20:02:37.610612 29981 net.cpp:86] Creating Layer pool0
I0428 20:02:37.610615 29981 net.cpp:408] pool0 <- conv0
I0428 20:02:37.610620 29981 net.cpp:382] pool0 -> pool0
I0428 20:02:37.610682 29981 net.cpp:124] Setting up pool0
I0428 20:02:37.610687 29981 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:02:37.610690 29981 net.cpp:139] Memory required for data: 3194800
I0428 20:02:37.610693 29981 layer_factory.hpp:77] Creating layer conv1
I0428 20:02:37.610702 29981 net.cpp:86] Creating Layer conv1
I0428 20:02:37.610705 29981 net.cpp:408] conv1 <- pool0
I0428 20:02:37.610709 29981 net.cpp:382] conv1 -> conv1
I0428 20:02:37.612334 29981 net.cpp:124] Setting up conv1
I0428 20:02:37.612347 29981 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:02:37.612370 29981 net.cpp:139] Memory required for data: 4474800
I0428 20:02:37.612377 29981 layer_factory.hpp:77] Creating layer pool1
I0428 20:02:37.612385 29981 net.cpp:86] Creating Layer pool1
I0428 20:02:37.612388 29981 net.cpp:408] pool1 <- conv1
I0428 20:02:37.612392 29981 net.cpp:382] pool1 -> pool1
I0428 20:02:37.612427 29981 net.cpp:124] Setting up pool1
I0428 20:02:37.612433 29981 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:02:37.612437 29981 net.cpp:139] Memory required for data: 4794800
I0428 20:02:37.612439 29981 layer_factory.hpp:77] Creating layer ip1
I0428 20:02:37.612445 29981 net.cpp:86] Creating Layer ip1
I0428 20:02:37.612448 29981 net.cpp:408] ip1 <- pool1
I0428 20:02:37.612453 29981 net.cpp:382] ip1 -> ip1
I0428 20:02:37.612814 29981 net.cpp:124] Setting up ip1
I0428 20:02:37.612841 29981 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:37.612881 29981 net.cpp:139] Memory required for data: 4814800
I0428 20:02:37.612906 29981 layer_factory.hpp:77] Creating layer relu1
I0428 20:02:37.612929 29981 net.cpp:86] Creating Layer relu1
I0428 20:02:37.612932 29981 net.cpp:408] relu1 <- ip1
I0428 20:02:37.612937 29981 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:02:37.613107 29981 net.cpp:124] Setting up relu1
I0428 20:02:37.613116 29981 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:37.613119 29981 net.cpp:139] Memory required for data: 4834800
I0428 20:02:37.613123 29981 layer_factory.hpp:77] Creating layer ip2
I0428 20:02:37.613144 29981 net.cpp:86] Creating Layer ip2
I0428 20:02:37.613149 29981 net.cpp:408] ip2 <- ip1
I0428 20:02:37.613154 29981 net.cpp:382] ip2 -> ip2
I0428 20:02:37.613320 29981 net.cpp:124] Setting up ip2
I0428 20:02:37.613327 29981 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:37.613330 29981 net.cpp:139] Memory required for data: 4854800
I0428 20:02:37.613337 29981 layer_factory.hpp:77] Creating layer relu2
I0428 20:02:37.613340 29981 net.cpp:86] Creating Layer relu2
I0428 20:02:37.613344 29981 net.cpp:408] relu2 <- ip2
I0428 20:02:37.613348 29981 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:02:37.613540 29981 net.cpp:124] Setting up relu2
I0428 20:02:37.613548 29981 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:02:37.613551 29981 net.cpp:139] Memory required for data: 4874800
I0428 20:02:37.613554 29981 layer_factory.hpp:77] Creating layer ip3
I0428 20:02:37.613560 29981 net.cpp:86] Creating Layer ip3
I0428 20:02:37.613564 29981 net.cpp:408] ip3 <- ip2
I0428 20:02:37.613584 29981 net.cpp:382] ip3 -> ip3
I0428 20:02:37.613692 29981 net.cpp:124] Setting up ip3
I0428 20:02:37.613699 29981 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:37.613703 29981 net.cpp:139] Memory required for data: 4878800
I0428 20:02:37.613724 29981 layer_factory.hpp:77] Creating layer relu3
I0428 20:02:37.613730 29981 net.cpp:86] Creating Layer relu3
I0428 20:02:37.613734 29981 net.cpp:408] relu3 <- ip3
I0428 20:02:37.613737 29981 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:02:37.614545 29981 net.cpp:124] Setting up relu3
I0428 20:02:37.614557 29981 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:37.614575 29981 net.cpp:139] Memory required for data: 4882800
I0428 20:02:37.614578 29981 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:02:37.614584 29981 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:02:37.614588 29981 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:02:37.614593 29981 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:02:37.614599 29981 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:02:37.614660 29981 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:02:37.614673 29981 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:37.614682 29981 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:02:37.614686 29981 net.cpp:139] Memory required for data: 4890800
I0428 20:02:37.614689 29981 layer_factory.hpp:77] Creating layer accuracy
I0428 20:02:37.614694 29981 net.cpp:86] Creating Layer accuracy
I0428 20:02:37.614697 29981 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:02:37.614702 29981 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:02:37.614706 29981 net.cpp:382] accuracy -> accuracy
I0428 20:02:37.614712 29981 net.cpp:124] Setting up accuracy
I0428 20:02:37.614722 29981 net.cpp:131] Top shape: (1)
I0428 20:02:37.614728 29981 net.cpp:139] Memory required for data: 4890804
I0428 20:02:37.614732 29981 layer_factory.hpp:77] Creating layer loss
I0428 20:02:37.614735 29981 net.cpp:86] Creating Layer loss
I0428 20:02:37.614738 29981 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:02:37.614742 29981 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:02:37.614747 29981 net.cpp:382] loss -> loss
I0428 20:02:37.614753 29981 layer_factory.hpp:77] Creating layer loss
I0428 20:02:37.614984 29981 net.cpp:124] Setting up loss
I0428 20:02:37.614992 29981 net.cpp:131] Top shape: (1)
I0428 20:02:37.614996 29981 net.cpp:134]     with loss weight 1
I0428 20:02:37.615011 29981 net.cpp:139] Memory required for data: 4890808
I0428 20:02:37.615015 29981 net.cpp:200] loss needs backward computation.
I0428 20:02:37.615018 29981 net.cpp:202] accuracy does not need backward computation.
I0428 20:02:37.615021 29981 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:02:37.615025 29981 net.cpp:200] relu3 needs backward computation.
I0428 20:02:37.615027 29981 net.cpp:200] ip3 needs backward computation.
I0428 20:02:37.615031 29981 net.cpp:200] relu2 needs backward computation.
I0428 20:02:37.615033 29981 net.cpp:200] ip2 needs backward computation.
I0428 20:02:37.615036 29981 net.cpp:200] relu1 needs backward computation.
I0428 20:02:37.615039 29981 net.cpp:200] ip1 needs backward computation.
I0428 20:02:37.615042 29981 net.cpp:200] pool1 needs backward computation.
I0428 20:02:37.615051 29981 net.cpp:200] conv1 needs backward computation.
I0428 20:02:37.615053 29981 net.cpp:200] pool0 needs backward computation.
I0428 20:02:37.615056 29981 net.cpp:200] conv0 needs backward computation.
I0428 20:02:37.615061 29981 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:02:37.615063 29981 net.cpp:202] mnist does not need backward computation.
I0428 20:02:37.615067 29981 net.cpp:244] This network produces output accuracy
I0428 20:02:37.615069 29981 net.cpp:244] This network produces output loss
I0428 20:02:37.615079 29981 net.cpp:257] Network initialization done.
I0428 20:02:37.615119 29981 solver.cpp:56] Solver scaffolding done.
I0428 20:02:37.615444 29981 caffe.cpp:248] Starting Optimization
I0428 20:02:37.615449 29981 solver.cpp:273] Solving LeNet
I0428 20:02:37.615453 29981 solver.cpp:274] Learning Rate Policy: inv
I0428 20:02:37.616399 29981 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:02:37.620651 29981 blocking_queue.cpp:49] Waiting for data
I0428 20:02:37.691032 29988 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:37.691576 29981 solver.cpp:398]     Test net output #0: accuracy = 0.0911
I0428 20:02:37.691611 29981 solver.cpp:398]     Test net output #1: loss = 2.3116 (* 1 = 2.3116 loss)
I0428 20:02:37.694834 29981 solver.cpp:219] Iteration 0 (-1.60519e-30 iter/s, 0.0793416s/100 iters), loss = 2.31578
I0428 20:02:37.694874 29981 solver.cpp:238]     Train net output #0: loss = 2.31578 (* 1 = 2.31578 loss)
I0428 20:02:37.694885 29981 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:02:37.804002 29981 solver.cpp:219] Iteration 100 (916.305 iter/s, 0.109134s/100 iters), loss = 0.593286
I0428 20:02:37.804041 29981 solver.cpp:238]     Train net output #0: loss = 0.593286 (* 1 = 0.593286 loss)
I0428 20:02:37.804049 29981 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:02:37.916568 29981 solver.cpp:219] Iteration 200 (888.641 iter/s, 0.112531s/100 iters), loss = 0.229074
I0428 20:02:37.916610 29981 solver.cpp:238]     Train net output #0: loss = 0.229074 (* 1 = 0.229074 loss)
I0428 20:02:37.916616 29981 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:02:38.031360 29981 solver.cpp:219] Iteration 300 (871.541 iter/s, 0.114739s/100 iters), loss = 0.46066
I0428 20:02:38.031402 29981 solver.cpp:238]     Train net output #0: loss = 0.46066 (* 1 = 0.46066 loss)
I0428 20:02:38.031409 29981 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:02:38.146258 29981 solver.cpp:219] Iteration 400 (870.616 iter/s, 0.114861s/100 iters), loss = 0.185328
I0428 20:02:38.146299 29981 solver.cpp:238]     Train net output #0: loss = 0.185328 (* 1 = 0.185328 loss)
I0428 20:02:38.146306 29981 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:02:38.258399 29981 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:02:38.306015 29988 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:38.306560 29981 solver.cpp:398]     Test net output #0: accuracy = 0.8662
I0428 20:02:38.306593 29981 solver.cpp:398]     Test net output #1: loss = 0.349072 (* 1 = 0.349072 loss)
I0428 20:02:38.307742 29981 solver.cpp:219] Iteration 500 (619.465 iter/s, 0.16143s/100 iters), loss = 0.289621
I0428 20:02:38.307797 29981 solver.cpp:238]     Train net output #0: loss = 0.289621 (* 1 = 0.289621 loss)
I0428 20:02:38.307804 29981 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:02:38.422967 29981 solver.cpp:219] Iteration 600 (868.231 iter/s, 0.115177s/100 iters), loss = 0.358359
I0428 20:02:38.423025 29981 solver.cpp:238]     Train net output #0: loss = 0.35836 (* 1 = 0.35836 loss)
I0428 20:02:38.423032 29981 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:02:38.530716 29981 solver.cpp:219] Iteration 700 (928.538 iter/s, 0.107696s/100 iters), loss = 0.464627
I0428 20:02:38.530756 29981 solver.cpp:238]     Train net output #0: loss = 0.464627 (* 1 = 0.464627 loss)
I0428 20:02:38.530777 29981 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:02:38.638419 29981 solver.cpp:219] Iteration 800 (928.786 iter/s, 0.107667s/100 iters), loss = 0.42028
I0428 20:02:38.638443 29981 solver.cpp:238]     Train net output #0: loss = 0.42028 (* 1 = 0.42028 loss)
I0428 20:02:38.638449 29981 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:02:38.746193 29981 solver.cpp:219] Iteration 900 (928.168 iter/s, 0.107739s/100 iters), loss = 0.387823
I0428 20:02:38.746232 29981 solver.cpp:238]     Train net output #0: loss = 0.387823 (* 1 = 0.387823 loss)
I0428 20:02:38.746239 29981 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:02:38.782748 29987 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:38.853876 29981 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:02:38.855509 29981 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:02:38.856685 29981 solver.cpp:311] Iteration 1000, loss = 0.387631
I0428 20:02:38.856716 29981 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:02:38.958930 29988 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:02:38.959617 29981 solver.cpp:398]     Test net output #0: accuracy = 0.8823
I0428 20:02:38.959645 29981 solver.cpp:398]     Test net output #1: loss = 0.292261 (* 1 = 0.292261 loss)
I0428 20:02:38.959656 29981 solver.cpp:316] Optimization Done.
I0428 20:02:38.959661 29981 caffe.cpp:259] Optimization Done.
