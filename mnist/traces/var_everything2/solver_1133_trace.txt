I0428 20:10:22.611845 31825 caffe.cpp:218] Using GPUs 0
I0428 20:10:22.643981 31825 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:10:23.126921 31825 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test1133.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:10:23.127053 31825 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1133.prototxt
I0428 20:10:23.127321 31825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:10:23.127333 31825 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:10:23.127396 31825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:10:23.127454 31825 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:23.127533 31825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:10:23.127553 31825 net.cpp:86] Creating Layer mnist
I0428 20:10:23.127559 31825 net.cpp:382] mnist -> data
I0428 20:10:23.127578 31825 net.cpp:382] mnist -> label
I0428 20:10:23.128620 31825 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:10:23.130990 31825 net.cpp:124] Setting up mnist
I0428 20:10:23.131031 31825 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:10:23.131037 31825 net.cpp:131] Top shape: 64 (64)
I0428 20:10:23.131041 31825 net.cpp:139] Memory required for data: 200960
I0428 20:10:23.131047 31825 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:23.131062 31825 net.cpp:86] Creating Layer conv0
I0428 20:10:23.131068 31825 net.cpp:408] conv0 <- data
I0428 20:10:23.131078 31825 net.cpp:382] conv0 -> conv0
I0428 20:10:23.350270 31825 net.cpp:124] Setting up conv0
I0428 20:10:23.350294 31825 net.cpp:131] Top shape: 64 25 24 24 (921600)
I0428 20:10:23.350298 31825 net.cpp:139] Memory required for data: 3887360
I0428 20:10:23.350312 31825 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:23.350327 31825 net.cpp:86] Creating Layer pool0
I0428 20:10:23.350330 31825 net.cpp:408] pool0 <- conv0
I0428 20:10:23.350335 31825 net.cpp:382] pool0 -> pool0
I0428 20:10:23.350406 31825 net.cpp:124] Setting up pool0
I0428 20:10:23.350414 31825 net.cpp:131] Top shape: 64 25 12 12 (230400)
I0428 20:10:23.350430 31825 net.cpp:139] Memory required for data: 4808960
I0428 20:10:23.350433 31825 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:23.350445 31825 net.cpp:86] Creating Layer conv1
I0428 20:10:23.350448 31825 net.cpp:408] conv1 <- pool0
I0428 20:10:23.350455 31825 net.cpp:382] conv1 -> conv1
I0428 20:10:23.352501 31825 net.cpp:124] Setting up conv1
I0428 20:10:23.352532 31825 net.cpp:131] Top shape: 64 50 8 8 (204800)
I0428 20:10:23.352536 31825 net.cpp:139] Memory required for data: 5628160
I0428 20:10:23.352560 31825 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:23.352582 31825 net.cpp:86] Creating Layer pool1
I0428 20:10:23.352586 31825 net.cpp:408] pool1 <- conv1
I0428 20:10:23.352607 31825 net.cpp:382] pool1 -> pool1
I0428 20:10:23.352645 31825 net.cpp:124] Setting up pool1
I0428 20:10:23.352653 31825 net.cpp:131] Top shape: 64 50 4 4 (51200)
I0428 20:10:23.352655 31825 net.cpp:139] Memory required for data: 5832960
I0428 20:10:23.352658 31825 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:23.352666 31825 net.cpp:86] Creating Layer ip1
I0428 20:10:23.352669 31825 net.cpp:408] ip1 <- pool1
I0428 20:10:23.352674 31825 net.cpp:382] ip1 -> ip1
I0428 20:10:23.353665 31825 net.cpp:124] Setting up ip1
I0428 20:10:23.353678 31825 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:23.353698 31825 net.cpp:139] Memory required for data: 5835520
I0428 20:10:23.353709 31825 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:23.353716 31825 net.cpp:86] Creating Layer relu1
I0428 20:10:23.353719 31825 net.cpp:408] relu1 <- ip1
I0428 20:10:23.353724 31825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:23.353901 31825 net.cpp:124] Setting up relu1
I0428 20:10:23.353909 31825 net.cpp:131] Top shape: 64 10 (640)
I0428 20:10:23.353914 31825 net.cpp:139] Memory required for data: 5838080
I0428 20:10:23.353916 31825 layer_factory.hpp:77] Creating layer loss
I0428 20:10:23.353922 31825 net.cpp:86] Creating Layer loss
I0428 20:10:23.353925 31825 net.cpp:408] loss <- ip1
I0428 20:10:23.353929 31825 net.cpp:408] loss <- label
I0428 20:10:23.353935 31825 net.cpp:382] loss -> loss
I0428 20:10:23.353951 31825 layer_factory.hpp:77] Creating layer loss
I0428 20:10:23.354859 31825 net.cpp:124] Setting up loss
I0428 20:10:23.354873 31825 net.cpp:131] Top shape: (1)
I0428 20:10:23.354893 31825 net.cpp:134]     with loss weight 1
I0428 20:10:23.354907 31825 net.cpp:139] Memory required for data: 5838084
I0428 20:10:23.354912 31825 net.cpp:200] loss needs backward computation.
I0428 20:10:23.354915 31825 net.cpp:200] relu1 needs backward computation.
I0428 20:10:23.354918 31825 net.cpp:200] ip1 needs backward computation.
I0428 20:10:23.354935 31825 net.cpp:200] pool1 needs backward computation.
I0428 20:10:23.354939 31825 net.cpp:200] conv1 needs backward computation.
I0428 20:10:23.354943 31825 net.cpp:200] pool0 needs backward computation.
I0428 20:10:23.354959 31825 net.cpp:200] conv0 needs backward computation.
I0428 20:10:23.354964 31825 net.cpp:202] mnist does not need backward computation.
I0428 20:10:23.354966 31825 net.cpp:244] This network produces output loss
I0428 20:10:23.354974 31825 net.cpp:257] Network initialization done.
I0428 20:10:23.355226 31825 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test1133.prototxt
I0428 20:10:23.355248 31825 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:10:23.355334 31825 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 50
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip1"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip1"
  bottom: "label"
  top: "loss"
}
I0428 20:10:23.355406 31825 layer_factory.hpp:77] Creating layer mnist
I0428 20:10:23.355479 31825 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:10:23.355489 31825 net.cpp:86] Creating Layer mnist
I0428 20:10:23.355494 31825 net.cpp:382] mnist -> data
I0428 20:10:23.355501 31825 net.cpp:382] mnist -> label
I0428 20:10:23.355589 31825 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:10:23.357589 31825 net.cpp:124] Setting up mnist
I0428 20:10:23.357620 31825 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:10:23.357626 31825 net.cpp:131] Top shape: 100 (100)
I0428 20:10:23.357630 31825 net.cpp:139] Memory required for data: 314000
I0428 20:10:23.357632 31825 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:10:23.357640 31825 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:10:23.357642 31825 net.cpp:408] label_mnist_1_split <- label
I0428 20:10:23.357662 31825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:10:23.357683 31825 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:10:23.357774 31825 net.cpp:124] Setting up label_mnist_1_split
I0428 20:10:23.357781 31825 net.cpp:131] Top shape: 100 (100)
I0428 20:10:23.357785 31825 net.cpp:131] Top shape: 100 (100)
I0428 20:10:23.357789 31825 net.cpp:139] Memory required for data: 314800
I0428 20:10:23.357792 31825 layer_factory.hpp:77] Creating layer conv0
I0428 20:10:23.357801 31825 net.cpp:86] Creating Layer conv0
I0428 20:10:23.357805 31825 net.cpp:408] conv0 <- data
I0428 20:10:23.357812 31825 net.cpp:382] conv0 -> conv0
I0428 20:10:23.358629 31825 net.cpp:124] Setting up conv0
I0428 20:10:23.358659 31825 net.cpp:131] Top shape: 100 25 24 24 (1440000)
I0428 20:10:23.358661 31825 net.cpp:139] Memory required for data: 6074800
I0428 20:10:23.358669 31825 layer_factory.hpp:77] Creating layer pool0
I0428 20:10:23.358675 31825 net.cpp:86] Creating Layer pool0
I0428 20:10:23.358678 31825 net.cpp:408] pool0 <- conv0
I0428 20:10:23.358683 31825 net.cpp:382] pool0 -> pool0
I0428 20:10:23.358718 31825 net.cpp:124] Setting up pool0
I0428 20:10:23.358724 31825 net.cpp:131] Top shape: 100 25 12 12 (360000)
I0428 20:10:23.358727 31825 net.cpp:139] Memory required for data: 7514800
I0428 20:10:23.358729 31825 layer_factory.hpp:77] Creating layer conv1
I0428 20:10:23.358738 31825 net.cpp:86] Creating Layer conv1
I0428 20:10:23.358741 31825 net.cpp:408] conv1 <- pool0
I0428 20:10:23.358747 31825 net.cpp:382] conv1 -> conv1
I0428 20:10:23.360610 31825 net.cpp:124] Setting up conv1
I0428 20:10:23.360640 31825 net.cpp:131] Top shape: 100 50 8 8 (320000)
I0428 20:10:23.360643 31825 net.cpp:139] Memory required for data: 8794800
I0428 20:10:23.360668 31825 layer_factory.hpp:77] Creating layer pool1
I0428 20:10:23.360692 31825 net.cpp:86] Creating Layer pool1
I0428 20:10:23.360726 31825 net.cpp:408] pool1 <- conv1
I0428 20:10:23.360734 31825 net.cpp:382] pool1 -> pool1
I0428 20:10:23.360782 31825 net.cpp:124] Setting up pool1
I0428 20:10:23.360791 31825 net.cpp:131] Top shape: 100 50 4 4 (80000)
I0428 20:10:23.360795 31825 net.cpp:139] Memory required for data: 9114800
I0428 20:10:23.360798 31825 layer_factory.hpp:77] Creating layer ip1
I0428 20:10:23.360805 31825 net.cpp:86] Creating Layer ip1
I0428 20:10:23.360808 31825 net.cpp:408] ip1 <- pool1
I0428 20:10:23.360824 31825 net.cpp:382] ip1 -> ip1
I0428 20:10:23.361023 31825 net.cpp:124] Setting up ip1
I0428 20:10:23.361044 31825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:23.361048 31825 net.cpp:139] Memory required for data: 9118800
I0428 20:10:23.361057 31825 layer_factory.hpp:77] Creating layer relu1
I0428 20:10:23.361063 31825 net.cpp:86] Creating Layer relu1
I0428 20:10:23.361068 31825 net.cpp:408] relu1 <- ip1
I0428 20:10:23.361075 31825 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:10:23.362048 31825 net.cpp:124] Setting up relu1
I0428 20:10:23.362061 31825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:23.362081 31825 net.cpp:139] Memory required for data: 9122800
I0428 20:10:23.362083 31825 layer_factory.hpp:77] Creating layer ip1_relu1_0_split
I0428 20:10:23.362090 31825 net.cpp:86] Creating Layer ip1_relu1_0_split
I0428 20:10:23.362094 31825 net.cpp:408] ip1_relu1_0_split <- ip1
I0428 20:10:23.362114 31825 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_0
I0428 20:10:23.362121 31825 net.cpp:382] ip1_relu1_0_split -> ip1_relu1_0_split_1
I0428 20:10:23.362175 31825 net.cpp:124] Setting up ip1_relu1_0_split
I0428 20:10:23.362182 31825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:23.362186 31825 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:10:23.362190 31825 net.cpp:139] Memory required for data: 9130800
I0428 20:10:23.362192 31825 layer_factory.hpp:77] Creating layer accuracy
I0428 20:10:23.362198 31825 net.cpp:86] Creating Layer accuracy
I0428 20:10:23.362201 31825 net.cpp:408] accuracy <- ip1_relu1_0_split_0
I0428 20:10:23.362205 31825 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:10:23.362210 31825 net.cpp:382] accuracy -> accuracy
I0428 20:10:23.362217 31825 net.cpp:124] Setting up accuracy
I0428 20:10:23.362221 31825 net.cpp:131] Top shape: (1)
I0428 20:10:23.362224 31825 net.cpp:139] Memory required for data: 9130804
I0428 20:10:23.362233 31825 layer_factory.hpp:77] Creating layer loss
I0428 20:10:23.362239 31825 net.cpp:86] Creating Layer loss
I0428 20:10:23.362243 31825 net.cpp:408] loss <- ip1_relu1_0_split_1
I0428 20:10:23.362247 31825 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:10:23.362251 31825 net.cpp:382] loss -> loss
I0428 20:10:23.362262 31825 layer_factory.hpp:77] Creating layer loss
I0428 20:10:23.362499 31825 net.cpp:124] Setting up loss
I0428 20:10:23.362509 31825 net.cpp:131] Top shape: (1)
I0428 20:10:23.362511 31825 net.cpp:134]     with loss weight 1
I0428 20:10:23.362517 31825 net.cpp:139] Memory required for data: 9130808
I0428 20:10:23.362521 31825 net.cpp:200] loss needs backward computation.
I0428 20:10:23.362525 31825 net.cpp:202] accuracy does not need backward computation.
I0428 20:10:23.362529 31825 net.cpp:200] ip1_relu1_0_split needs backward computation.
I0428 20:10:23.362531 31825 net.cpp:200] relu1 needs backward computation.
I0428 20:10:23.362534 31825 net.cpp:200] ip1 needs backward computation.
I0428 20:10:23.362538 31825 net.cpp:200] pool1 needs backward computation.
I0428 20:10:23.362540 31825 net.cpp:200] conv1 needs backward computation.
I0428 20:10:23.362545 31825 net.cpp:200] pool0 needs backward computation.
I0428 20:10:23.362547 31825 net.cpp:200] conv0 needs backward computation.
I0428 20:10:23.362550 31825 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:10:23.362555 31825 net.cpp:202] mnist does not need backward computation.
I0428 20:10:23.362558 31825 net.cpp:244] This network produces output accuracy
I0428 20:10:23.362561 31825 net.cpp:244] This network produces output loss
I0428 20:10:23.362612 31825 net.cpp:257] Network initialization done.
I0428 20:10:23.362658 31825 solver.cpp:56] Solver scaffolding done.
I0428 20:10:23.362871 31825 caffe.cpp:248] Starting Optimization
I0428 20:10:23.362877 31825 solver.cpp:273] Solving LeNet
I0428 20:10:23.362881 31825 solver.cpp:274] Learning Rate Policy: inv
I0428 20:10:23.363667 31825 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:10:23.369421 31825 blocking_queue.cpp:49] Waiting for data
I0428 20:10:23.431258 31832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:23.431879 31825 solver.cpp:398]     Test net output #0: accuracy = 0.1515
I0428 20:10:23.431915 31825 solver.cpp:398]     Test net output #1: loss = 2.35985 (* 1 = 2.35985 loss)
I0428 20:10:23.435490 31825 solver.cpp:219] Iteration 0 (0 iter/s, 0.0725811s/100 iters), loss = 2.3798
I0428 20:10:23.435528 31825 solver.cpp:238]     Train net output #0: loss = 2.3798 (* 1 = 2.3798 loss)
I0428 20:10:23.435539 31825 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:10:23.543505 31825 solver.cpp:219] Iteration 100 (926.099 iter/s, 0.10798s/100 iters), loss = 1.13539
I0428 20:10:23.543545 31825 solver.cpp:238]     Train net output #0: loss = 1.13539 (* 1 = 1.13539 loss)
I0428 20:10:23.543551 31825 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:10:23.651289 31825 solver.cpp:219] Iteration 200 (928.08 iter/s, 0.107749s/100 iters), loss = 1.07395
I0428 20:10:23.651330 31825 solver.cpp:238]     Train net output #0: loss = 1.07395 (* 1 = 1.07395 loss)
I0428 20:10:23.651336 31825 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:10:23.758301 31825 solver.cpp:219] Iteration 300 (934.778 iter/s, 0.106977s/100 iters), loss = 0.621137
I0428 20:10:23.758339 31825 solver.cpp:238]     Train net output #0: loss = 0.621137 (* 1 = 0.621137 loss)
I0428 20:10:23.758344 31825 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:10:23.865067 31825 solver.cpp:219] Iteration 400 (936.921 iter/s, 0.106733s/100 iters), loss = 0.770207
I0428 20:10:23.865104 31825 solver.cpp:238]     Train net output #0: loss = 0.770207 (* 1 = 0.770207 loss)
I0428 20:10:23.865110 31825 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:10:23.969250 31825 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:10:24.017701 31832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:24.018941 31825 solver.cpp:398]     Test net output #0: accuracy = 0.7791
I0428 20:10:24.018981 31825 solver.cpp:398]     Test net output #1: loss = 0.572181 (* 1 = 0.572181 loss)
I0428 20:10:24.020004 31825 solver.cpp:219] Iteration 500 (645.572 iter/s, 0.154902s/100 iters), loss = 0.766301
I0428 20:10:24.020041 31825 solver.cpp:238]     Train net output #0: loss = 0.766301 (* 1 = 0.766301 loss)
I0428 20:10:24.020048 31825 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:10:24.126639 31825 solver.cpp:219] Iteration 600 (938.063 iter/s, 0.106603s/100 iters), loss = 0.46887
I0428 20:10:24.126709 31825 solver.cpp:238]     Train net output #0: loss = 0.46887 (* 1 = 0.46887 loss)
I0428 20:10:24.126732 31825 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:10:24.233394 31825 solver.cpp:219] Iteration 700 (937.434 iter/s, 0.106674s/100 iters), loss = 0.524976
I0428 20:10:24.233435 31825 solver.cpp:238]     Train net output #0: loss = 0.524976 (* 1 = 0.524976 loss)
I0428 20:10:24.233441 31825 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:10:24.341933 31825 solver.cpp:219] Iteration 800 (921.624 iter/s, 0.108504s/100 iters), loss = 0.653731
I0428 20:10:24.341974 31825 solver.cpp:238]     Train net output #0: loss = 0.653731 (* 1 = 0.653731 loss)
I0428 20:10:24.341981 31825 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:10:24.455173 31825 solver.cpp:219] Iteration 900 (883.415 iter/s, 0.113197s/100 iters), loss = 0.259766
I0428 20:10:24.455229 31825 solver.cpp:238]     Train net output #0: loss = 0.259766 (* 1 = 0.259766 loss)
I0428 20:10:24.455241 31825 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:10:24.494997 31831 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:24.573256 31825 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:10:24.575038 31825 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:10:24.576153 31825 solver.cpp:311] Iteration 1000, loss = 0.154811
I0428 20:10:24.576177 31825 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:10:24.632133 31832 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:10:24.633998 31825 solver.cpp:398]     Test net output #0: accuracy = 0.9717
I0428 20:10:24.634024 31825 solver.cpp:398]     Test net output #1: loss = 0.0918867 (* 1 = 0.0918867 loss)
I0428 20:10:24.634044 31825 solver.cpp:316] Optimization Done.
I0428 20:10:24.634048 31825 caffe.cpp:259] Optimization Done.
