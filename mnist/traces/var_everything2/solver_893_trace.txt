I0428 20:01:03.863411 29643 caffe.cpp:218] Using GPUs 0
I0428 20:01:03.892694 29643 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:01:04.341699 29643 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test893.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:01:04.341869 29643 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test893.prototxt
I0428 20:01:04.342236 29643 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:01:04.342280 29643 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:01:04.342360 29643 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:04.342425 29643 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:04.342504 29643 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:01:04.342525 29643 net.cpp:86] Creating Layer mnist
I0428 20:01:04.342547 29643 net.cpp:382] mnist -> data
I0428 20:01:04.342566 29643 net.cpp:382] mnist -> label
I0428 20:01:04.343536 29643 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:01:04.345968 29643 net.cpp:124] Setting up mnist
I0428 20:01:04.346015 29643 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:01:04.346020 29643 net.cpp:131] Top shape: 64 (64)
I0428 20:01:04.346024 29643 net.cpp:139] Memory required for data: 200960
I0428 20:01:04.346029 29643 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:04.346045 29643 net.cpp:86] Creating Layer conv0
I0428 20:01:04.346065 29643 net.cpp:408] conv0 <- data
I0428 20:01:04.346077 29643 net.cpp:382] conv0 -> conv0
I0428 20:01:04.578495 29643 net.cpp:124] Setting up conv0
I0428 20:01:04.578519 29643 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:01:04.578523 29643 net.cpp:139] Memory required for data: 1675520
I0428 20:01:04.578536 29643 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:04.578550 29643 net.cpp:86] Creating Layer pool0
I0428 20:01:04.578554 29643 net.cpp:408] pool0 <- conv0
I0428 20:01:04.578559 29643 net.cpp:382] pool0 -> pool0
I0428 20:01:04.578619 29643 net.cpp:124] Setting up pool0
I0428 20:01:04.578625 29643 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:01:04.578629 29643 net.cpp:139] Memory required for data: 2044160
I0428 20:01:04.578631 29643 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:04.578642 29643 net.cpp:86] Creating Layer conv1
I0428 20:01:04.578645 29643 net.cpp:408] conv1 <- pool0
I0428 20:01:04.578650 29643 net.cpp:382] conv1 -> conv1
I0428 20:01:04.581380 29643 net.cpp:124] Setting up conv1
I0428 20:01:04.581410 29643 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:01:04.581413 29643 net.cpp:139] Memory required for data: 2453760
I0428 20:01:04.581439 29643 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:04.581447 29643 net.cpp:86] Creating Layer pool1
I0428 20:01:04.581450 29643 net.cpp:408] pool1 <- conv1
I0428 20:01:04.581466 29643 net.cpp:382] pool1 -> pool1
I0428 20:01:04.581540 29643 net.cpp:124] Setting up pool1
I0428 20:01:04.581548 29643 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:01:04.581552 29643 net.cpp:139] Memory required for data: 2556160
I0428 20:01:04.581555 29643 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:04.581563 29643 net.cpp:86] Creating Layer ip1
I0428 20:01:04.581568 29643 net.cpp:408] ip1 <- pool1
I0428 20:01:04.581574 29643 net.cpp:382] ip1 -> ip1
I0428 20:01:04.581815 29643 net.cpp:124] Setting up ip1
I0428 20:01:04.581823 29643 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:04.581826 29643 net.cpp:139] Memory required for data: 2568960
I0428 20:01:04.581835 29643 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:04.581842 29643 net.cpp:86] Creating Layer relu1
I0428 20:01:04.581845 29643 net.cpp:408] relu1 <- ip1
I0428 20:01:04.581851 29643 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:04.582052 29643 net.cpp:124] Setting up relu1
I0428 20:01:04.582060 29643 net.cpp:131] Top shape: 64 50 (3200)
I0428 20:01:04.582063 29643 net.cpp:139] Memory required for data: 2581760
I0428 20:01:04.582067 29643 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:04.582072 29643 net.cpp:86] Creating Layer ip2
I0428 20:01:04.582075 29643 net.cpp:408] ip2 <- ip1
I0428 20:01:04.582080 29643 net.cpp:382] ip2 -> ip2
I0428 20:01:04.583192 29643 net.cpp:124] Setting up ip2
I0428 20:01:04.583205 29643 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:01:04.583225 29643 net.cpp:139] Memory required for data: 2588160
I0428 20:01:04.583231 29643 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:04.583240 29643 net.cpp:86] Creating Layer relu2
I0428 20:01:04.583242 29643 net.cpp:408] relu2 <- ip2
I0428 20:01:04.583250 29643 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:04.584100 29643 net.cpp:124] Setting up relu2
I0428 20:01:04.584111 29643 net.cpp:131] Top shape: 64 25 (1600)
I0428 20:01:04.584131 29643 net.cpp:139] Memory required for data: 2594560
I0428 20:01:04.584134 29643 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:04.584142 29643 net.cpp:86] Creating Layer ip3
I0428 20:01:04.584146 29643 net.cpp:408] ip3 <- ip2
I0428 20:01:04.584151 29643 net.cpp:382] ip3 -> ip3
I0428 20:01:04.584249 29643 net.cpp:124] Setting up ip3
I0428 20:01:04.584256 29643 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:04.584259 29643 net.cpp:139] Memory required for data: 2597120
I0428 20:01:04.584267 29643 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:04.584272 29643 net.cpp:86] Creating Layer relu3
I0428 20:01:04.584275 29643 net.cpp:408] relu3 <- ip3
I0428 20:01:04.584280 29643 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:04.584458 29643 net.cpp:124] Setting up relu3
I0428 20:01:04.584467 29643 net.cpp:131] Top shape: 64 10 (640)
I0428 20:01:04.584470 29643 net.cpp:139] Memory required for data: 2599680
I0428 20:01:04.584475 29643 layer_factory.hpp:77] Creating layer loss
I0428 20:01:04.584496 29643 net.cpp:86] Creating Layer loss
I0428 20:01:04.584498 29643 net.cpp:408] loss <- ip3
I0428 20:01:04.584503 29643 net.cpp:408] loss <- label
I0428 20:01:04.584508 29643 net.cpp:382] loss -> loss
I0428 20:01:04.584528 29643 layer_factory.hpp:77] Creating layer loss
I0428 20:01:04.584766 29643 net.cpp:124] Setting up loss
I0428 20:01:04.584777 29643 net.cpp:131] Top shape: (1)
I0428 20:01:04.584780 29643 net.cpp:134]     with loss weight 1
I0428 20:01:04.584797 29643 net.cpp:139] Memory required for data: 2599684
I0428 20:01:04.584800 29643 net.cpp:200] loss needs backward computation.
I0428 20:01:04.584805 29643 net.cpp:200] relu3 needs backward computation.
I0428 20:01:04.584808 29643 net.cpp:200] ip3 needs backward computation.
I0428 20:01:04.584817 29643 net.cpp:200] relu2 needs backward computation.
I0428 20:01:04.584836 29643 net.cpp:200] ip2 needs backward computation.
I0428 20:01:04.584839 29643 net.cpp:200] relu1 needs backward computation.
I0428 20:01:04.584842 29643 net.cpp:200] ip1 needs backward computation.
I0428 20:01:04.584861 29643 net.cpp:200] pool1 needs backward computation.
I0428 20:01:04.584863 29643 net.cpp:200] conv1 needs backward computation.
I0428 20:01:04.584867 29643 net.cpp:200] pool0 needs backward computation.
I0428 20:01:04.584870 29643 net.cpp:200] conv0 needs backward computation.
I0428 20:01:04.584873 29643 net.cpp:202] mnist does not need backward computation.
I0428 20:01:04.584892 29643 net.cpp:244] This network produces output loss
I0428 20:01:04.584903 29643 net.cpp:257] Network initialization done.
I0428 20:01:04.585280 29643 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test893.prototxt
I0428 20:01:04.585321 29643 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:01:04.585407 29643 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 50
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 25
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:01:04.585499 29643 layer_factory.hpp:77] Creating layer mnist
I0428 20:01:04.585544 29643 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:01:04.585557 29643 net.cpp:86] Creating Layer mnist
I0428 20:01:04.585561 29643 net.cpp:382] mnist -> data
I0428 20:01:04.585569 29643 net.cpp:382] mnist -> label
I0428 20:01:04.585650 29643 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:01:04.587729 29643 net.cpp:124] Setting up mnist
I0428 20:01:04.587772 29643 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:01:04.587777 29643 net.cpp:131] Top shape: 100 (100)
I0428 20:01:04.587780 29643 net.cpp:139] Memory required for data: 314000
I0428 20:01:04.587785 29643 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:01:04.587791 29643 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:01:04.587795 29643 net.cpp:408] label_mnist_1_split <- label
I0428 20:01:04.587800 29643 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:01:04.587807 29643 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:01:04.587853 29643 net.cpp:124] Setting up label_mnist_1_split
I0428 20:01:04.587859 29643 net.cpp:131] Top shape: 100 (100)
I0428 20:01:04.587862 29643 net.cpp:131] Top shape: 100 (100)
I0428 20:01:04.587865 29643 net.cpp:139] Memory required for data: 314800
I0428 20:01:04.587868 29643 layer_factory.hpp:77] Creating layer conv0
I0428 20:01:04.587888 29643 net.cpp:86] Creating Layer conv0
I0428 20:01:04.587891 29643 net.cpp:408] conv0 <- data
I0428 20:01:04.587896 29643 net.cpp:382] conv0 -> conv0
I0428 20:01:04.589771 29643 net.cpp:124] Setting up conv0
I0428 20:01:04.589800 29643 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:01:04.589804 29643 net.cpp:139] Memory required for data: 2618800
I0428 20:01:04.589813 29643 layer_factory.hpp:77] Creating layer pool0
I0428 20:01:04.589821 29643 net.cpp:86] Creating Layer pool0
I0428 20:01:04.589824 29643 net.cpp:408] pool0 <- conv0
I0428 20:01:04.589829 29643 net.cpp:382] pool0 -> pool0
I0428 20:01:04.589864 29643 net.cpp:124] Setting up pool0
I0428 20:01:04.589869 29643 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:01:04.589872 29643 net.cpp:139] Memory required for data: 3194800
I0428 20:01:04.589875 29643 layer_factory.hpp:77] Creating layer conv1
I0428 20:01:04.589884 29643 net.cpp:86] Creating Layer conv1
I0428 20:01:04.589886 29643 net.cpp:408] conv1 <- pool0
I0428 20:01:04.589891 29643 net.cpp:382] conv1 -> conv1
I0428 20:01:04.592073 29643 net.cpp:124] Setting up conv1
I0428 20:01:04.592103 29643 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:01:04.592108 29643 net.cpp:139] Memory required for data: 3834800
I0428 20:01:04.592118 29643 layer_factory.hpp:77] Creating layer pool1
I0428 20:01:04.592124 29643 net.cpp:86] Creating Layer pool1
I0428 20:01:04.592128 29643 net.cpp:408] pool1 <- conv1
I0428 20:01:04.592133 29643 net.cpp:382] pool1 -> pool1
I0428 20:01:04.592172 29643 net.cpp:124] Setting up pool1
I0428 20:01:04.592178 29643 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:01:04.592181 29643 net.cpp:139] Memory required for data: 3994800
I0428 20:01:04.592185 29643 layer_factory.hpp:77] Creating layer ip1
I0428 20:01:04.592191 29643 net.cpp:86] Creating Layer ip1
I0428 20:01:04.592195 29643 net.cpp:408] ip1 <- pool1
I0428 20:01:04.592200 29643 net.cpp:382] ip1 -> ip1
I0428 20:01:04.592479 29643 net.cpp:124] Setting up ip1
I0428 20:01:04.592489 29643 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:04.592501 29643 net.cpp:139] Memory required for data: 4014800
I0428 20:01:04.592509 29643 layer_factory.hpp:77] Creating layer relu1
I0428 20:01:04.592514 29643 net.cpp:86] Creating Layer relu1
I0428 20:01:04.592519 29643 net.cpp:408] relu1 <- ip1
I0428 20:01:04.592522 29643 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:01:04.592680 29643 net.cpp:124] Setting up relu1
I0428 20:01:04.592689 29643 net.cpp:131] Top shape: 100 50 (5000)
I0428 20:01:04.592692 29643 net.cpp:139] Memory required for data: 4034800
I0428 20:01:04.592695 29643 layer_factory.hpp:77] Creating layer ip2
I0428 20:01:04.592702 29643 net.cpp:86] Creating Layer ip2
I0428 20:01:04.592705 29643 net.cpp:408] ip2 <- ip1
I0428 20:01:04.592710 29643 net.cpp:382] ip2 -> ip2
I0428 20:01:04.592816 29643 net.cpp:124] Setting up ip2
I0428 20:01:04.592854 29643 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:01:04.592857 29643 net.cpp:139] Memory required for data: 4044800
I0428 20:01:04.592864 29643 layer_factory.hpp:77] Creating layer relu2
I0428 20:01:04.592869 29643 net.cpp:86] Creating Layer relu2
I0428 20:01:04.592871 29643 net.cpp:408] relu2 <- ip2
I0428 20:01:04.592876 29643 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:01:04.593039 29643 net.cpp:124] Setting up relu2
I0428 20:01:04.593049 29643 net.cpp:131] Top shape: 100 25 (2500)
I0428 20:01:04.593052 29643 net.cpp:139] Memory required for data: 4054800
I0428 20:01:04.593055 29643 layer_factory.hpp:77] Creating layer ip3
I0428 20:01:04.593061 29643 net.cpp:86] Creating Layer ip3
I0428 20:01:04.593065 29643 net.cpp:408] ip3 <- ip2
I0428 20:01:04.593070 29643 net.cpp:382] ip3 -> ip3
I0428 20:01:04.593199 29643 net.cpp:124] Setting up ip3
I0428 20:01:04.593207 29643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:04.593211 29643 net.cpp:139] Memory required for data: 4058800
I0428 20:01:04.593219 29643 layer_factory.hpp:77] Creating layer relu3
I0428 20:01:04.593225 29643 net.cpp:86] Creating Layer relu3
I0428 20:01:04.593227 29643 net.cpp:408] relu3 <- ip3
I0428 20:01:04.593238 29643 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:01:04.594058 29643 net.cpp:124] Setting up relu3
I0428 20:01:04.594069 29643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:04.594089 29643 net.cpp:139] Memory required for data: 4062800
I0428 20:01:04.594092 29643 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:01:04.594097 29643 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:01:04.594101 29643 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:01:04.594107 29643 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:01:04.594130 29643 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:01:04.594175 29643 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:01:04.594182 29643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:04.594185 29643 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:01:04.594187 29643 net.cpp:139] Memory required for data: 4070800
I0428 20:01:04.594192 29643 layer_factory.hpp:77] Creating layer accuracy
I0428 20:01:04.594200 29643 net.cpp:86] Creating Layer accuracy
I0428 20:01:04.594204 29643 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:01:04.594208 29643 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:01:04.594213 29643 net.cpp:382] accuracy -> accuracy
I0428 20:01:04.594220 29643 net.cpp:124] Setting up accuracy
I0428 20:01:04.594225 29643 net.cpp:131] Top shape: (1)
I0428 20:01:04.594228 29643 net.cpp:139] Memory required for data: 4070804
I0428 20:01:04.594236 29643 layer_factory.hpp:77] Creating layer loss
I0428 20:01:04.594241 29643 net.cpp:86] Creating Layer loss
I0428 20:01:04.594245 29643 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:01:04.594249 29643 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:01:04.594254 29643 net.cpp:382] loss -> loss
I0428 20:01:04.594259 29643 layer_factory.hpp:77] Creating layer loss
I0428 20:01:04.594502 29643 net.cpp:124] Setting up loss
I0428 20:01:04.594511 29643 net.cpp:131] Top shape: (1)
I0428 20:01:04.594516 29643 net.cpp:134]     with loss weight 1
I0428 20:01:04.594532 29643 net.cpp:139] Memory required for data: 4070808
I0428 20:01:04.594535 29643 net.cpp:200] loss needs backward computation.
I0428 20:01:04.594553 29643 net.cpp:202] accuracy does not need backward computation.
I0428 20:01:04.594558 29643 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:01:04.594560 29643 net.cpp:200] relu3 needs backward computation.
I0428 20:01:04.594563 29643 net.cpp:200] ip3 needs backward computation.
I0428 20:01:04.594566 29643 net.cpp:200] relu2 needs backward computation.
I0428 20:01:04.594568 29643 net.cpp:200] ip2 needs backward computation.
I0428 20:01:04.594571 29643 net.cpp:200] relu1 needs backward computation.
I0428 20:01:04.594574 29643 net.cpp:200] ip1 needs backward computation.
I0428 20:01:04.594578 29643 net.cpp:200] pool1 needs backward computation.
I0428 20:01:04.594580 29643 net.cpp:200] conv1 needs backward computation.
I0428 20:01:04.594583 29643 net.cpp:200] pool0 needs backward computation.
I0428 20:01:04.594586 29643 net.cpp:200] conv0 needs backward computation.
I0428 20:01:04.594605 29643 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:01:04.594609 29643 net.cpp:202] mnist does not need backward computation.
I0428 20:01:04.594611 29643 net.cpp:244] This network produces output accuracy
I0428 20:01:04.594615 29643 net.cpp:244] This network produces output loss
I0428 20:01:04.594625 29643 net.cpp:257] Network initialization done.
I0428 20:01:04.594673 29643 solver.cpp:56] Solver scaffolding done.
I0428 20:01:04.595048 29643 caffe.cpp:248] Starting Optimization
I0428 20:01:04.595053 29643 solver.cpp:273] Solving LeNet
I0428 20:01:04.595057 29643 solver.cpp:274] Learning Rate Policy: inv
I0428 20:01:04.595347 29643 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:01:04.600118 29643 blocking_queue.cpp:49] Waiting for data
I0428 20:01:04.667587 29650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:04.668212 29643 solver.cpp:398]     Test net output #0: accuracy = 0.1003
I0428 20:01:04.668239 29643 solver.cpp:398]     Test net output #1: loss = 2.30176 (* 1 = 2.30176 loss)
I0428 20:01:04.671353 29643 solver.cpp:219] Iteration 0 (-1.247e-30 iter/s, 0.0762511s/100 iters), loss = 2.30051
I0428 20:01:04.671388 29643 solver.cpp:238]     Train net output #0: loss = 2.30051 (* 1 = 2.30051 loss)
I0428 20:01:04.671403 29643 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:01:04.767735 29643 solver.cpp:219] Iteration 100 (1038.03 iter/s, 0.096336s/100 iters), loss = 1.00086
I0428 20:01:04.767765 29643 solver.cpp:238]     Train net output #0: loss = 1.00086 (* 1 = 1.00086 loss)
I0428 20:01:04.767771 29643 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:01:04.856253 29643 solver.cpp:219] Iteration 200 (1130.37 iter/s, 0.0884664s/100 iters), loss = 0.658404
I0428 20:01:04.856292 29643 solver.cpp:238]     Train net output #0: loss = 0.658404 (* 1 = 0.658404 loss)
I0428 20:01:04.856298 29643 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:01:04.944844 29643 solver.cpp:219] Iteration 300 (1129.22 iter/s, 0.0885565s/100 iters), loss = 0.623851
I0428 20:01:04.944882 29643 solver.cpp:238]     Train net output #0: loss = 0.623851 (* 1 = 0.623851 loss)
I0428 20:01:04.944905 29643 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:01:05.033000 29643 solver.cpp:219] Iteration 400 (1134.97 iter/s, 0.088108s/100 iters), loss = 0.350829
I0428 20:01:05.033040 29643 solver.cpp:238]     Train net output #0: loss = 0.350829 (* 1 = 0.350829 loss)
I0428 20:01:05.033046 29643 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:01:05.120116 29643 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:01:05.174161 29650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:05.174746 29643 solver.cpp:398]     Test net output #0: accuracy = 0.8624
I0428 20:01:05.174782 29643 solver.cpp:398]     Test net output #1: loss = 0.365302 (* 1 = 0.365302 loss)
I0428 20:01:05.175739 29643 solver.cpp:219] Iteration 500 (700.759 iter/s, 0.142702s/100 iters), loss = 0.317118
I0428 20:01:05.175791 29643 solver.cpp:238]     Train net output #0: loss = 0.317118 (* 1 = 0.317118 loss)
I0428 20:01:05.175812 29643 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:01:05.271332 29643 solver.cpp:219] Iteration 600 (1046.59 iter/s, 0.0955486s/100 iters), loss = 0.244997
I0428 20:01:05.271375 29643 solver.cpp:238]     Train net output #0: loss = 0.244997 (* 1 = 0.244997 loss)
I0428 20:01:05.271396 29643 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:01:05.360296 29643 solver.cpp:219] Iteration 700 (1124.72 iter/s, 0.088911s/100 iters), loss = 0.272523
I0428 20:01:05.360337 29643 solver.cpp:238]     Train net output #0: loss = 0.272523 (* 1 = 0.272523 loss)
I0428 20:01:05.360342 29643 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:01:05.447968 29643 solver.cpp:219] Iteration 800 (1141.06 iter/s, 0.087638s/100 iters), loss = 0.568822
I0428 20:01:05.448009 29643 solver.cpp:238]     Train net output #0: loss = 0.568821 (* 1 = 0.568821 loss)
I0428 20:01:05.448014 29643 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:01:05.535840 29643 solver.cpp:219] Iteration 900 (1138.45 iter/s, 0.0878385s/100 iters), loss = 0.475139
I0428 20:01:05.535879 29643 solver.cpp:238]     Train net output #0: loss = 0.475139 (* 1 = 0.475139 loss)
I0428 20:01:05.535886 29643 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:01:05.565124 29649 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:05.622922 29643 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:01:05.624008 29643 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:01:05.624686 29643 solver.cpp:311] Iteration 1000, loss = 0.322467
I0428 20:01:05.624701 29643 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:01:05.690076 29650 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:01:05.690623 29643 solver.cpp:398]     Test net output #0: accuracy = 0.8782
I0428 20:01:05.690651 29643 solver.cpp:398]     Test net output #1: loss = 0.311579 (* 1 = 0.311579 loss)
I0428 20:01:05.690656 29643 solver.cpp:316] Optimization Done.
I0428 20:01:05.690662 29643 caffe.cpp:259] Optimization Done.
