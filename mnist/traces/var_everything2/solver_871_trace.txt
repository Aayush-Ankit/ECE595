I0428 20:00:15.157119 29433 caffe.cpp:218] Using GPUs 0
I0428 20:00:15.186825 29433 caffe.cpp:223] GPU 0: TITAN X (Pascal)
I0428 20:00:15.636787 29433 solver.cpp:44] Initializing solver from parameters: 
test_iter: 100
test_interval: 500
base_lr: 0.01
display: 100
max_iter: 1000
lr_policy: "inv"
gamma: 0.0001
power: 0.75
momentum: 0.9
weight_decay: 0.0005
snapshot: 5000
snapshot_prefix: "examples/mnist/lenet"
solver_mode: GPU
device_id: 0
net: "ECE595/mnist/train_test/var_everything2/lenet_train_test871.prototxt"
train_state {
  level: 0
  stage: ""
}
I0428 20:00:15.636943 29433 solver.cpp:87] Creating training net from net file: ECE595/mnist/train_test/var_everything2/lenet_train_test871.prototxt
I0428 20:00:15.637342 29433 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer mnist
I0428 20:00:15.637375 29433 net.cpp:296] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0428 20:00:15.637460 29433 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_train_lmdb"
    batch_size: 64
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:15.637540 29433 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:15.637624 29433 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_train_lmdb
I0428 20:00:15.637645 29433 net.cpp:86] Creating Layer mnist
I0428 20:00:15.637651 29433 net.cpp:382] mnist -> data
I0428 20:00:15.637670 29433 net.cpp:382] mnist -> label
I0428 20:00:15.638674 29433 data_layer.cpp:45] output data size: 64,1,28,28
I0428 20:00:15.641002 29433 net.cpp:124] Setting up mnist
I0428 20:00:15.641049 29433 net.cpp:131] Top shape: 64 1 28 28 (50176)
I0428 20:00:15.641057 29433 net.cpp:131] Top shape: 64 (64)
I0428 20:00:15.641059 29433 net.cpp:139] Memory required for data: 200960
I0428 20:00:15.641065 29433 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:15.641080 29433 net.cpp:86] Creating Layer conv0
I0428 20:00:15.641098 29433 net.cpp:408] conv0 <- data
I0428 20:00:15.641109 29433 net.cpp:382] conv0 -> conv0
I0428 20:00:15.876444 29433 net.cpp:124] Setting up conv0
I0428 20:00:15.876487 29433 net.cpp:131] Top shape: 64 10 24 24 (368640)
I0428 20:00:15.876492 29433 net.cpp:139] Memory required for data: 1675520
I0428 20:00:15.876505 29433 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:15.876519 29433 net.cpp:86] Creating Layer pool0
I0428 20:00:15.876538 29433 net.cpp:408] pool0 <- conv0
I0428 20:00:15.876544 29433 net.cpp:382] pool0 -> pool0
I0428 20:00:15.876590 29433 net.cpp:124] Setting up pool0
I0428 20:00:15.876598 29433 net.cpp:131] Top shape: 64 10 12 12 (92160)
I0428 20:00:15.876601 29433 net.cpp:139] Memory required for data: 2044160
I0428 20:00:15.876605 29433 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:15.876615 29433 net.cpp:86] Creating Layer conv1
I0428 20:00:15.876618 29433 net.cpp:408] conv1 <- pool0
I0428 20:00:15.876623 29433 net.cpp:382] conv1 -> conv1
I0428 20:00:15.879509 29433 net.cpp:124] Setting up conv1
I0428 20:00:15.879541 29433 net.cpp:131] Top shape: 64 25 8 8 (102400)
I0428 20:00:15.879545 29433 net.cpp:139] Memory required for data: 2453760
I0428 20:00:15.879554 29433 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:15.879562 29433 net.cpp:86] Creating Layer pool1
I0428 20:00:15.879565 29433 net.cpp:408] pool1 <- conv1
I0428 20:00:15.879586 29433 net.cpp:382] pool1 -> pool1
I0428 20:00:15.879642 29433 net.cpp:124] Setting up pool1
I0428 20:00:15.879648 29433 net.cpp:131] Top shape: 64 25 4 4 (25600)
I0428 20:00:15.879652 29433 net.cpp:139] Memory required for data: 2556160
I0428 20:00:15.879653 29433 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:15.879660 29433 net.cpp:86] Creating Layer ip1
I0428 20:00:15.879663 29433 net.cpp:408] ip1 <- pool1
I0428 20:00:15.879668 29433 net.cpp:382] ip1 -> ip1
I0428 20:00:15.880617 29433 net.cpp:124] Setting up ip1
I0428 20:00:15.880630 29433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:15.880650 29433 net.cpp:139] Memory required for data: 2558720
I0428 20:00:15.880658 29433 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:15.880664 29433 net.cpp:86] Creating Layer relu1
I0428 20:00:15.880668 29433 net.cpp:408] relu1 <- ip1
I0428 20:00:15.880673 29433 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:15.880869 29433 net.cpp:124] Setting up relu1
I0428 20:00:15.880879 29433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:15.880883 29433 net.cpp:139] Memory required for data: 2561280
I0428 20:00:15.880887 29433 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:15.880894 29433 net.cpp:86] Creating Layer ip2
I0428 20:00:15.880897 29433 net.cpp:408] ip2 <- ip1
I0428 20:00:15.880903 29433 net.cpp:382] ip2 -> ip2
I0428 20:00:15.881002 29433 net.cpp:124] Setting up ip2
I0428 20:00:15.881009 29433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:15.881012 29433 net.cpp:139] Memory required for data: 2563840
I0428 20:00:15.881018 29433 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:15.881026 29433 net.cpp:86] Creating Layer relu2
I0428 20:00:15.881028 29433 net.cpp:408] relu2 <- ip2
I0428 20:00:15.881033 29433 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:15.881805 29433 net.cpp:124] Setting up relu2
I0428 20:00:15.881819 29433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:15.881821 29433 net.cpp:139] Memory required for data: 2566400
I0428 20:00:15.881841 29433 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:15.881849 29433 net.cpp:86] Creating Layer ip3
I0428 20:00:15.881852 29433 net.cpp:408] ip3 <- ip2
I0428 20:00:15.881858 29433 net.cpp:382] ip3 -> ip3
I0428 20:00:15.881999 29433 net.cpp:124] Setting up ip3
I0428 20:00:15.882012 29433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:15.882016 29433 net.cpp:139] Memory required for data: 2568960
I0428 20:00:15.882026 29433 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:15.882035 29433 net.cpp:86] Creating Layer relu3
I0428 20:00:15.882041 29433 net.cpp:408] relu3 <- ip3
I0428 20:00:15.882046 29433 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:15.882268 29433 net.cpp:124] Setting up relu3
I0428 20:00:15.882278 29433 net.cpp:131] Top shape: 64 10 (640)
I0428 20:00:15.882282 29433 net.cpp:139] Memory required for data: 2571520
I0428 20:00:15.882285 29433 layer_factory.hpp:77] Creating layer loss
I0428 20:00:15.882292 29433 net.cpp:86] Creating Layer loss
I0428 20:00:15.882297 29433 net.cpp:408] loss <- ip3
I0428 20:00:15.882300 29433 net.cpp:408] loss <- label
I0428 20:00:15.882306 29433 net.cpp:382] loss -> loss
I0428 20:00:15.882341 29433 layer_factory.hpp:77] Creating layer loss
I0428 20:00:15.882601 29433 net.cpp:124] Setting up loss
I0428 20:00:15.882609 29433 net.cpp:131] Top shape: (1)
I0428 20:00:15.882612 29433 net.cpp:134]     with loss weight 1
I0428 20:00:15.882627 29433 net.cpp:139] Memory required for data: 2571524
I0428 20:00:15.882630 29433 net.cpp:200] loss needs backward computation.
I0428 20:00:15.882634 29433 net.cpp:200] relu3 needs backward computation.
I0428 20:00:15.882637 29433 net.cpp:200] ip3 needs backward computation.
I0428 20:00:15.882640 29433 net.cpp:200] relu2 needs backward computation.
I0428 20:00:15.882642 29433 net.cpp:200] ip2 needs backward computation.
I0428 20:00:15.882647 29433 net.cpp:200] relu1 needs backward computation.
I0428 20:00:15.882648 29433 net.cpp:200] ip1 needs backward computation.
I0428 20:00:15.882652 29433 net.cpp:200] pool1 needs backward computation.
I0428 20:00:15.882654 29433 net.cpp:200] conv1 needs backward computation.
I0428 20:00:15.882658 29433 net.cpp:200] pool0 needs backward computation.
I0428 20:00:15.882660 29433 net.cpp:200] conv0 needs backward computation.
I0428 20:00:15.882664 29433 net.cpp:202] mnist does not need backward computation.
I0428 20:00:15.882666 29433 net.cpp:244] This network produces output loss
I0428 20:00:15.882675 29433 net.cpp:257] Network initialization done.
I0428 20:00:15.883013 29433 solver.cpp:173] Creating test net (#0) specified by net file: ECE595/mnist/train_test/var_everything2/lenet_train_test871.prototxt
I0428 20:00:15.883041 29433 net.cpp:296] The NetState phase (1) differed from the phase (0) specified by a rule in layer mnist
I0428 20:00:15.883147 29433 net.cpp:53] Initializing net from parameters: 
name: "LeNet"
state {
  phase: TEST
}
layer {
  name: "mnist"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TEST
  }
  transform_param {
    scale: 0.00390625
  }
  data_param {
    source: "examples/mnist/mnist_test_lmdb"
    batch_size: 100
    backend: LMDB
  }
}
layer {
  name: "conv0"
  type: "Convolution"
  bottom: "data"
  top: "conv0"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 10
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool0"
  type: "Pooling"
  bottom: "conv0"
  top: "pool0"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "pool0"
  top: "conv1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  convolution_param {
    num_output: 25
    kernel_size: 5
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 2
    stride: 2
  }
}
layer {
  name: "ip1"
  type: "InnerProduct"
  bottom: "pool1"
  top: "ip1"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "ip1"
  top: "ip1"
}
layer {
  name: "ip2"
  type: "InnerProduct"
  bottom: "ip1"
  top: "ip2"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "ip2"
  top: "ip2"
}
layer {
  name: "ip3"
  type: "InnerProduct"
  bottom: "ip2"
  top: "ip3"
  param {
    lr_mult: 1
  }
  param {
    lr_mult: 2
  }
  inner_product_param {
    num_output: 10
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "ip3"
  top: "ip3"
}
layer {
  name: "accuracy"
  type: "Accuracy"
  bottom: "ip3"
  bottom: "label"
  top: "accuracy"
  include {
    phase: TEST
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "ip3"
  bottom: "label"
  top: "loss"
}
I0428 20:00:15.883225 29433 layer_factory.hpp:77] Creating layer mnist
I0428 20:00:15.883270 29433 db_lmdb.cpp:35] Opened lmdb examples/mnist/mnist_test_lmdb
I0428 20:00:15.883281 29433 net.cpp:86] Creating Layer mnist
I0428 20:00:15.883286 29433 net.cpp:382] mnist -> data
I0428 20:00:15.883294 29433 net.cpp:382] mnist -> label
I0428 20:00:15.883375 29433 data_layer.cpp:45] output data size: 100,1,28,28
I0428 20:00:15.885565 29433 net.cpp:124] Setting up mnist
I0428 20:00:15.885594 29433 net.cpp:131] Top shape: 100 1 28 28 (78400)
I0428 20:00:15.885615 29433 net.cpp:131] Top shape: 100 (100)
I0428 20:00:15.885618 29433 net.cpp:139] Memory required for data: 314000
I0428 20:00:15.885622 29433 layer_factory.hpp:77] Creating layer label_mnist_1_split
I0428 20:00:15.885629 29433 net.cpp:86] Creating Layer label_mnist_1_split
I0428 20:00:15.885633 29433 net.cpp:408] label_mnist_1_split <- label
I0428 20:00:15.885638 29433 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_0
I0428 20:00:15.885645 29433 net.cpp:382] label_mnist_1_split -> label_mnist_1_split_1
I0428 20:00:15.885731 29433 net.cpp:124] Setting up label_mnist_1_split
I0428 20:00:15.885740 29433 net.cpp:131] Top shape: 100 (100)
I0428 20:00:15.885743 29433 net.cpp:131] Top shape: 100 (100)
I0428 20:00:15.885746 29433 net.cpp:139] Memory required for data: 314800
I0428 20:00:15.885749 29433 layer_factory.hpp:77] Creating layer conv0
I0428 20:00:15.885757 29433 net.cpp:86] Creating Layer conv0
I0428 20:00:15.885761 29433 net.cpp:408] conv0 <- data
I0428 20:00:15.885766 29433 net.cpp:382] conv0 -> conv0
I0428 20:00:15.887468 29433 net.cpp:124] Setting up conv0
I0428 20:00:15.887497 29433 net.cpp:131] Top shape: 100 10 24 24 (576000)
I0428 20:00:15.887501 29433 net.cpp:139] Memory required for data: 2618800
I0428 20:00:15.887511 29433 layer_factory.hpp:77] Creating layer pool0
I0428 20:00:15.887517 29433 net.cpp:86] Creating Layer pool0
I0428 20:00:15.887521 29433 net.cpp:408] pool0 <- conv0
I0428 20:00:15.887526 29433 net.cpp:382] pool0 -> pool0
I0428 20:00:15.887560 29433 net.cpp:124] Setting up pool0
I0428 20:00:15.887565 29433 net.cpp:131] Top shape: 100 10 12 12 (144000)
I0428 20:00:15.887568 29433 net.cpp:139] Memory required for data: 3194800
I0428 20:00:15.887572 29433 layer_factory.hpp:77] Creating layer conv1
I0428 20:00:15.887579 29433 net.cpp:86] Creating Layer conv1
I0428 20:00:15.887583 29433 net.cpp:408] conv1 <- pool0
I0428 20:00:15.887588 29433 net.cpp:382] conv1 -> conv1
I0428 20:00:15.889813 29433 net.cpp:124] Setting up conv1
I0428 20:00:15.889827 29433 net.cpp:131] Top shape: 100 25 8 8 (160000)
I0428 20:00:15.889847 29433 net.cpp:139] Memory required for data: 3834800
I0428 20:00:15.889856 29433 layer_factory.hpp:77] Creating layer pool1
I0428 20:00:15.889863 29433 net.cpp:86] Creating Layer pool1
I0428 20:00:15.889866 29433 net.cpp:408] pool1 <- conv1
I0428 20:00:15.889871 29433 net.cpp:382] pool1 -> pool1
I0428 20:00:15.889953 29433 net.cpp:124] Setting up pool1
I0428 20:00:15.889961 29433 net.cpp:131] Top shape: 100 25 4 4 (40000)
I0428 20:00:15.889963 29433 net.cpp:139] Memory required for data: 3994800
I0428 20:00:15.889966 29433 layer_factory.hpp:77] Creating layer ip1
I0428 20:00:15.889972 29433 net.cpp:86] Creating Layer ip1
I0428 20:00:15.889976 29433 net.cpp:408] ip1 <- pool1
I0428 20:00:15.889981 29433 net.cpp:382] ip1 -> ip1
I0428 20:00:15.890153 29433 net.cpp:124] Setting up ip1
I0428 20:00:15.890161 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.890175 29433 net.cpp:139] Memory required for data: 3998800
I0428 20:00:15.890183 29433 layer_factory.hpp:77] Creating layer relu1
I0428 20:00:15.890188 29433 net.cpp:86] Creating Layer relu1
I0428 20:00:15.890192 29433 net.cpp:408] relu1 <- ip1
I0428 20:00:15.890197 29433 net.cpp:369] relu1 -> ip1 (in-place)
I0428 20:00:15.890370 29433 net.cpp:124] Setting up relu1
I0428 20:00:15.890379 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.890383 29433 net.cpp:139] Memory required for data: 4002800
I0428 20:00:15.890386 29433 layer_factory.hpp:77] Creating layer ip2
I0428 20:00:15.890393 29433 net.cpp:86] Creating Layer ip2
I0428 20:00:15.890396 29433 net.cpp:408] ip2 <- ip1
I0428 20:00:15.890401 29433 net.cpp:382] ip2 -> ip2
I0428 20:00:15.890502 29433 net.cpp:124] Setting up ip2
I0428 20:00:15.890509 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.890512 29433 net.cpp:139] Memory required for data: 4006800
I0428 20:00:15.890524 29433 layer_factory.hpp:77] Creating layer relu2
I0428 20:00:15.890529 29433 net.cpp:86] Creating Layer relu2
I0428 20:00:15.890533 29433 net.cpp:408] relu2 <- ip2
I0428 20:00:15.890537 29433 net.cpp:369] relu2 -> ip2 (in-place)
I0428 20:00:15.890691 29433 net.cpp:124] Setting up relu2
I0428 20:00:15.890699 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.890702 29433 net.cpp:139] Memory required for data: 4010800
I0428 20:00:15.890705 29433 layer_factory.hpp:77] Creating layer ip3
I0428 20:00:15.890710 29433 net.cpp:86] Creating Layer ip3
I0428 20:00:15.890714 29433 net.cpp:408] ip3 <- ip2
I0428 20:00:15.890718 29433 net.cpp:382] ip3 -> ip3
I0428 20:00:15.890805 29433 net.cpp:124] Setting up ip3
I0428 20:00:15.890811 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.890815 29433 net.cpp:139] Memory required for data: 4014800
I0428 20:00:15.890822 29433 layer_factory.hpp:77] Creating layer relu3
I0428 20:00:15.890826 29433 net.cpp:86] Creating Layer relu3
I0428 20:00:15.890830 29433 net.cpp:408] relu3 <- ip3
I0428 20:00:15.890833 29433 net.cpp:369] relu3 -> ip3 (in-place)
I0428 20:00:15.891655 29433 net.cpp:124] Setting up relu3
I0428 20:00:15.891682 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.891686 29433 net.cpp:139] Memory required for data: 4018800
I0428 20:00:15.891705 29433 layer_factory.hpp:77] Creating layer ip3_relu3_0_split
I0428 20:00:15.891710 29433 net.cpp:86] Creating Layer ip3_relu3_0_split
I0428 20:00:15.891715 29433 net.cpp:408] ip3_relu3_0_split <- ip3
I0428 20:00:15.891721 29433 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_0
I0428 20:00:15.891727 29433 net.cpp:382] ip3_relu3_0_split -> ip3_relu3_0_split_1
I0428 20:00:15.891806 29433 net.cpp:124] Setting up ip3_relu3_0_split
I0428 20:00:15.891813 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.891818 29433 net.cpp:131] Top shape: 100 10 (1000)
I0428 20:00:15.891821 29433 net.cpp:139] Memory required for data: 4026800
I0428 20:00:15.891824 29433 layer_factory.hpp:77] Creating layer accuracy
I0428 20:00:15.891829 29433 net.cpp:86] Creating Layer accuracy
I0428 20:00:15.891834 29433 net.cpp:408] accuracy <- ip3_relu3_0_split_0
I0428 20:00:15.891842 29433 net.cpp:408] accuracy <- label_mnist_1_split_0
I0428 20:00:15.891847 29433 net.cpp:382] accuracy -> accuracy
I0428 20:00:15.891855 29433 net.cpp:124] Setting up accuracy
I0428 20:00:15.891860 29433 net.cpp:131] Top shape: (1)
I0428 20:00:15.891862 29433 net.cpp:139] Memory required for data: 4026804
I0428 20:00:15.891865 29433 layer_factory.hpp:77] Creating layer loss
I0428 20:00:15.891870 29433 net.cpp:86] Creating Layer loss
I0428 20:00:15.891875 29433 net.cpp:408] loss <- ip3_relu3_0_split_1
I0428 20:00:15.891882 29433 net.cpp:408] loss <- label_mnist_1_split_1
I0428 20:00:15.891887 29433 net.cpp:382] loss -> loss
I0428 20:00:15.891893 29433 layer_factory.hpp:77] Creating layer loss
I0428 20:00:15.892153 29433 net.cpp:124] Setting up loss
I0428 20:00:15.892163 29433 net.cpp:131] Top shape: (1)
I0428 20:00:15.892172 29433 net.cpp:134]     with loss weight 1
I0428 20:00:15.892190 29433 net.cpp:139] Memory required for data: 4026808
I0428 20:00:15.892194 29433 net.cpp:200] loss needs backward computation.
I0428 20:00:15.892197 29433 net.cpp:202] accuracy does not need backward computation.
I0428 20:00:15.892201 29433 net.cpp:200] ip3_relu3_0_split needs backward computation.
I0428 20:00:15.892204 29433 net.cpp:200] relu3 needs backward computation.
I0428 20:00:15.892207 29433 net.cpp:200] ip3 needs backward computation.
I0428 20:00:15.892210 29433 net.cpp:200] relu2 needs backward computation.
I0428 20:00:15.892213 29433 net.cpp:200] ip2 needs backward computation.
I0428 20:00:15.892216 29433 net.cpp:200] relu1 needs backward computation.
I0428 20:00:15.892220 29433 net.cpp:200] ip1 needs backward computation.
I0428 20:00:15.892222 29433 net.cpp:200] pool1 needs backward computation.
I0428 20:00:15.892225 29433 net.cpp:200] conv1 needs backward computation.
I0428 20:00:15.892233 29433 net.cpp:200] pool0 needs backward computation.
I0428 20:00:15.892236 29433 net.cpp:200] conv0 needs backward computation.
I0428 20:00:15.892241 29433 net.cpp:202] label_mnist_1_split does not need backward computation.
I0428 20:00:15.892244 29433 net.cpp:202] mnist does not need backward computation.
I0428 20:00:15.892246 29433 net.cpp:244] This network produces output accuracy
I0428 20:00:15.892251 29433 net.cpp:244] This network produces output loss
I0428 20:00:15.892261 29433 net.cpp:257] Network initialization done.
I0428 20:00:15.892303 29433 solver.cpp:56] Solver scaffolding done.
I0428 20:00:15.892721 29433 caffe.cpp:248] Starting Optimization
I0428 20:00:15.892727 29433 solver.cpp:273] Solving LeNet
I0428 20:00:15.892729 29433 solver.cpp:274] Learning Rate Policy: inv
I0428 20:00:15.893005 29433 solver.cpp:331] Iteration 0, Testing net (#0)
I0428 20:00:15.897922 29433 blocking_queue.cpp:49] Waiting for data
I0428 20:00:15.964998 29440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:15.965560 29433 solver.cpp:398]     Test net output #0: accuracy = 0.1485
I0428 20:00:15.965596 29433 solver.cpp:398]     Test net output #1: loss = 2.28506 (* 1 = 2.28506 loss)
I0428 20:00:15.968137 29433 solver.cpp:219] Iteration 0 (-1.079e-42 iter/s, 0.0753676s/100 iters), loss = 2.3021
I0428 20:00:15.968161 29433 solver.cpp:238]     Train net output #0: loss = 2.3021 (* 1 = 2.3021 loss)
I0428 20:00:15.968173 29433 sgd_solver.cpp:105] Iteration 0, lr = 0.01
I0428 20:00:16.056355 29433 solver.cpp:219] Iteration 100 (1133.98 iter/s, 0.0881848s/100 iters), loss = 0.52656
I0428 20:00:16.056396 29433 solver.cpp:238]     Train net output #0: loss = 0.52656 (* 1 = 0.52656 loss)
I0428 20:00:16.056401 29433 sgd_solver.cpp:105] Iteration 100, lr = 0.00992565
I0428 20:00:16.145031 29433 solver.cpp:219] Iteration 200 (1128.14 iter/s, 0.0886417s/100 iters), loss = 0.491065
I0428 20:00:16.145072 29433 solver.cpp:238]     Train net output #0: loss = 0.491065 (* 1 = 0.491065 loss)
I0428 20:00:16.145078 29433 sgd_solver.cpp:105] Iteration 200, lr = 0.00985258
I0428 20:00:16.232784 29433 solver.cpp:219] Iteration 300 (1140.03 iter/s, 0.0877169s/100 iters), loss = 0.248467
I0428 20:00:16.232828 29433 solver.cpp:238]     Train net output #0: loss = 0.248467 (* 1 = 0.248467 loss)
I0428 20:00:16.232836 29433 sgd_solver.cpp:105] Iteration 300, lr = 0.00978075
I0428 20:00:16.320467 29433 solver.cpp:219] Iteration 400 (1140.88 iter/s, 0.0876513s/100 iters), loss = 0.231807
I0428 20:00:16.320507 29433 solver.cpp:238]     Train net output #0: loss = 0.231807 (* 1 = 0.231807 loss)
I0428 20:00:16.320513 29433 sgd_solver.cpp:105] Iteration 400, lr = 0.00971013
I0428 20:00:16.406908 29433 solver.cpp:331] Iteration 500, Testing net (#0)
I0428 20:00:16.454844 29440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:16.455566 29433 solver.cpp:398]     Test net output #0: accuracy = 0.9318
I0428 20:00:16.455600 29433 solver.cpp:398]     Test net output #1: loss = 0.21193 (* 1 = 0.21193 loss)
I0428 20:00:16.456598 29433 solver.cpp:219] Iteration 500 (734.777 iter/s, 0.136096s/100 iters), loss = 0.248286
I0428 20:00:16.456651 29433 solver.cpp:238]     Train net output #0: loss = 0.248286 (* 1 = 0.248286 loss)
I0428 20:00:16.456658 29433 sgd_solver.cpp:105] Iteration 500, lr = 0.00964069
I0428 20:00:16.545457 29433 solver.cpp:219] Iteration 600 (1125.97 iter/s, 0.0888125s/100 iters), loss = 0.087029
I0428 20:00:16.545498 29433 solver.cpp:238]     Train net output #0: loss = 0.087029 (* 1 = 0.087029 loss)
I0428 20:00:16.545506 29433 sgd_solver.cpp:105] Iteration 600, lr = 0.0095724
I0428 20:00:16.633857 29433 solver.cpp:219] Iteration 700 (1131.67 iter/s, 0.088365s/100 iters), loss = 0.185616
I0428 20:00:16.633898 29433 solver.cpp:238]     Train net output #0: loss = 0.185616 (* 1 = 0.185616 loss)
I0428 20:00:16.633904 29433 sgd_solver.cpp:105] Iteration 700, lr = 0.00950522
I0428 20:00:16.721191 29433 solver.cpp:219] Iteration 800 (1145.47 iter/s, 0.0873001s/100 iters), loss = 0.232287
I0428 20:00:16.721231 29433 solver.cpp:238]     Train net output #0: loss = 0.232287 (* 1 = 0.232287 loss)
I0428 20:00:16.721237 29433 sgd_solver.cpp:105] Iteration 800, lr = 0.00943913
I0428 20:00:16.808784 29433 solver.cpp:219] Iteration 900 (1142.08 iter/s, 0.0875592s/100 iters), loss = 0.277114
I0428 20:00:16.808830 29433 solver.cpp:238]     Train net output #0: loss = 0.277113 (* 1 = 0.277113 loss)
I0428 20:00:16.808853 29433 sgd_solver.cpp:105] Iteration 900, lr = 0.00937411
I0428 20:00:16.837743 29439 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:16.894759 29433 solver.cpp:448] Snapshotting to binary proto file examples/mnist/lenet_iter_1000.caffemodel
I0428 20:00:16.895670 29433 sgd_solver.cpp:273] Snapshotting solver state to binary proto file examples/mnist/lenet_iter_1000.solverstate
I0428 20:00:16.896181 29433 solver.cpp:311] Iteration 1000, loss = 0.0966945
I0428 20:00:16.896198 29433 solver.cpp:331] Iteration 1000, Testing net (#0)
I0428 20:00:16.943294 29440 data_layer.cpp:73] Restarting data prefetching from start.
I0428 20:00:16.944063 29433 solver.cpp:398]     Test net output #0: accuracy = 0.9694
I0428 20:00:16.944098 29433 solver.cpp:398]     Test net output #1: loss = 0.0987718 (* 1 = 0.0987718 loss)
I0428 20:00:16.944104 29433 solver.cpp:316] Optimization Done.
I0428 20:00:16.944123 29433 caffe.cpp:259] Optimization Done.
